; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9262 () Bool)

(assert start!9262)

(declare-fun b!66357 () Bool)

(declare-fun b_free!2069 () Bool)

(declare-fun b_next!2069 () Bool)

(assert (=> b!66357 (= b_free!2069 (not b_next!2069))))

(declare-fun tp!8360 () Bool)

(declare-fun b_and!4103 () Bool)

(assert (=> b!66357 (= tp!8360 b_and!4103)))

(declare-fun b!66361 () Bool)

(declare-fun b_free!2071 () Bool)

(declare-fun b_next!2071 () Bool)

(assert (=> b!66361 (= b_free!2071 (not b_next!2071))))

(declare-fun tp!8359 () Bool)

(declare-fun b_and!4105 () Bool)

(assert (=> b!66361 (= tp!8359 b_and!4105)))

(declare-fun b!66349 () Bool)

(declare-fun res!35948 () Bool)

(declare-fun e!43537 () Bool)

(assert (=> b!66349 (=> (not res!35948) (not e!43537))))

(declare-datatypes ((V!2915 0))(
  ( (V!2916 (val!1270 Int)) )
))
(declare-datatypes ((array!3841 0))(
  ( (array!3842 (arr!1835 (Array (_ BitVec 32) (_ BitVec 64))) (size!2070 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!882 0))(
  ( (ValueCellFull!882 (v!2477 V!2915)) (EmptyCell!882) )
))
(declare-datatypes ((array!3843 0))(
  ( (array!3844 (arr!1836 (Array (_ BitVec 32) ValueCell!882)) (size!2071 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!672 0))(
  ( (LongMapFixedSize!673 (defaultEntry!2147 Int) (mask!6082 (_ BitVec 32)) (extraKeys!2018 (_ BitVec 32)) (zeroValue!2055 V!2915) (minValue!2055 V!2915) (_size!385 (_ BitVec 32)) (_keys!3787 array!3841) (_values!2130 array!3843) (_vacant!385 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!672)

(declare-datatypes ((Cell!478 0))(
  ( (Cell!479 (v!2478 LongMapFixedSize!672)) )
))
(declare-datatypes ((LongMap!478 0))(
  ( (LongMap!479 (underlying!250 Cell!478)) )
))
(declare-fun thiss!992 () LongMap!478)

(assert (=> b!66349 (= res!35948 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6082 newMap!16)) (_size!385 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!66350 () Bool)

(declare-fun e!43535 () Bool)

(declare-fun e!43546 () Bool)

(assert (=> b!66350 (= e!43535 e!43546)))

(declare-fun b!66351 () Bool)

(declare-datatypes ((Unit!1838 0))(
  ( (Unit!1839) )
))
(declare-fun e!43542 () Unit!1838)

(declare-fun Unit!1840 () Unit!1838)

(assert (=> b!66351 (= e!43542 Unit!1840)))

(declare-fun lt!28621 () Unit!1838)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!44 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) (_ BitVec 32) Int) Unit!1838)

(assert (=> b!66351 (= lt!28621 (lemmaListMapContainsThenArrayContainsFrom!44 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3841 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!66351 (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!28623 () Unit!1838)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3841 (_ BitVec 32) (_ BitVec 32)) Unit!1838)

(assert (=> b!66351 (= lt!28623 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1465 0))(
  ( (Nil!1462) (Cons!1461 (h!2045 (_ BitVec 64)) (t!4947 List!1465)) )
))
(declare-fun arrayNoDuplicates!0 (array!3841 (_ BitVec 32) List!1465) Bool)

(assert (=> b!66351 (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) from!355 Nil!1462)))

(declare-fun lt!28626 () Unit!1838)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3841 (_ BitVec 32) (_ BitVec 64) List!1465) Unit!1838)

(assert (=> b!66351 (= lt!28626 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462)))))

(assert (=> b!66351 false))

(declare-fun b!66352 () Bool)

(declare-fun e!43534 () Bool)

(declare-fun tp_is_empty!2451 () Bool)

(assert (=> b!66352 (= e!43534 tp_is_empty!2451)))

(declare-fun b!66353 () Bool)

(declare-fun Unit!1841 () Unit!1838)

(assert (=> b!66353 (= e!43542 Unit!1841)))

(declare-fun b!66355 () Bool)

(declare-fun e!43547 () Bool)

(assert (=> b!66355 (= e!43547 tp_is_empty!2451)))

(declare-fun mapNonEmpty!3075 () Bool)

(declare-fun mapRes!3075 () Bool)

(declare-fun tp!8362 () Bool)

(declare-fun e!43550 () Bool)

(assert (=> mapNonEmpty!3075 (= mapRes!3075 (and tp!8362 e!43550))))

(declare-fun mapKey!3075 () (_ BitVec 32))

(declare-fun mapValue!3076 () ValueCell!882)

(declare-fun mapRest!3076 () (Array (_ BitVec 32) ValueCell!882))

(assert (=> mapNonEmpty!3075 (= (arr!1836 (_values!2130 newMap!16)) (store mapRest!3076 mapKey!3075 mapValue!3076))))

(declare-fun b!66356 () Bool)

(assert (=> b!66356 (= e!43550 tp_is_empty!2451)))

(declare-fun e!43548 () Bool)

(declare-fun e!43549 () Bool)

(declare-fun array_inv!1129 (array!3841) Bool)

(declare-fun array_inv!1130 (array!3843) Bool)

(assert (=> b!66357 (= e!43548 (and tp!8360 tp_is_empty!2451 (array_inv!1129 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (array_inv!1130 (_values!2130 (v!2478 (underlying!250 thiss!992)))) e!43549))))

(declare-fun b!66358 () Bool)

(declare-fun mapRes!3076 () Bool)

(assert (=> b!66358 (= e!43549 (and e!43547 mapRes!3076))))

(declare-fun condMapEmpty!3075 () Bool)

(declare-fun mapDefault!3076 () ValueCell!882)

(assert (=> b!66358 (= condMapEmpty!3075 (= (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3076)))))

(declare-fun b!66359 () Bool)

(declare-fun e!43551 () Bool)

(assert (=> b!66359 (= e!43537 e!43551)))

(declare-fun res!35950 () Bool)

(assert (=> b!66359 (=> (not res!35950) (not e!43551))))

(declare-datatypes ((tuple2!2092 0))(
  ( (tuple2!2093 (_1!1057 (_ BitVec 64)) (_2!1057 V!2915)) )
))
(declare-datatypes ((List!1466 0))(
  ( (Nil!1463) (Cons!1462 (h!2046 tuple2!2092) (t!4948 List!1466)) )
))
(declare-datatypes ((ListLongMap!1403 0))(
  ( (ListLongMap!1404 (toList!717 List!1466)) )
))
(declare-fun lt!28618 () ListLongMap!1403)

(declare-fun lt!28622 () ListLongMap!1403)

(assert (=> b!66359 (= res!35950 (= lt!28618 lt!28622))))

(declare-fun map!1136 (LongMapFixedSize!672) ListLongMap!1403)

(assert (=> b!66359 (= lt!28622 (map!1136 newMap!16))))

(declare-fun getCurrentListMap!415 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) Int) ListLongMap!1403)

(assert (=> b!66359 (= lt!28618 (getCurrentListMap!415 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!66360 () Bool)

(declare-fun res!35946 () Bool)

(assert (=> b!66360 (=> (not res!35946) (not e!43537))))

(assert (=> b!66360 (= res!35946 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!43545 () Bool)

(declare-fun e!43539 () Bool)

(assert (=> b!66361 (= e!43539 (and tp!8359 tp_is_empty!2451 (array_inv!1129 (_keys!3787 newMap!16)) (array_inv!1130 (_values!2130 newMap!16)) e!43545))))

(declare-fun b!66362 () Bool)

(declare-fun e!43540 () Bool)

(declare-fun e!43538 () Bool)

(assert (=> b!66362 (= e!43540 (not e!43538))))

(declare-fun res!35945 () Bool)

(assert (=> b!66362 (=> res!35945 e!43538)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!66362 (= res!35945 (not (validMask!0 (mask!6082 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun lt!28620 () ListLongMap!1403)

(declare-fun lt!28617 () tuple2!2092)

(declare-fun lt!28624 () tuple2!2092)

(declare-fun +!89 (ListLongMap!1403 tuple2!2092) ListLongMap!1403)

(assert (=> b!66362 (= (+!89 (+!89 lt!28620 lt!28617) lt!28624) (+!89 (+!89 lt!28620 lt!28624) lt!28617))))

(assert (=> b!66362 (= lt!28624 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun lt!28616 () V!2915)

(assert (=> b!66362 (= lt!28617 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))

(declare-fun lt!28619 () Unit!1838)

(declare-fun addCommutativeForDiffKeys!8 (ListLongMap!1403 (_ BitVec 64) V!2915 (_ BitVec 64) V!2915) Unit!1838)

(assert (=> b!66362 (= lt!28619 (addCommutativeForDiffKeys!8 lt!28620 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!54 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) Int) ListLongMap!1403)

(assert (=> b!66362 (= lt!28620 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!66363 () Bool)

(assert (=> b!66363 (= e!43545 (and e!43534 mapRes!3075))))

(declare-fun condMapEmpty!3076 () Bool)

(declare-fun mapDefault!3075 () ValueCell!882)

(assert (=> b!66363 (= condMapEmpty!3076 (= (arr!1836 (_values!2130 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3075)))))

(declare-fun b!66364 () Bool)

(declare-fun e!43536 () Bool)

(assert (=> b!66364 (= e!43536 e!43540)))

(declare-fun res!35944 () Bool)

(assert (=> b!66364 (=> (not res!35944) (not e!43540))))

(declare-datatypes ((tuple2!2094 0))(
  ( (tuple2!2095 (_1!1058 Bool) (_2!1058 LongMapFixedSize!672)) )
))
(declare-fun lt!28625 () tuple2!2094)

(assert (=> b!66364 (= res!35944 (and (_1!1058 lt!28625) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!28615 () Unit!1838)

(assert (=> b!66364 (= lt!28615 e!43542)))

(declare-fun c!9131 () Bool)

(declare-fun contains!710 (ListLongMap!1403 (_ BitVec 64)) Bool)

(assert (=> b!66364 (= c!9131 (contains!710 lt!28622 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun update!89 (LongMapFixedSize!672 (_ BitVec 64) V!2915) tuple2!2094)

(assert (=> b!66364 (= lt!28625 (update!89 newMap!16 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))

(declare-fun b!66365 () Bool)

(declare-fun e!43543 () Bool)

(assert (=> b!66365 (= e!43543 tp_is_empty!2451)))

(declare-fun res!35951 () Bool)

(assert (=> start!9262 (=> (not res!35951) (not e!43537))))

(declare-fun valid!278 (LongMap!478) Bool)

(assert (=> start!9262 (= res!35951 (valid!278 thiss!992))))

(assert (=> start!9262 e!43537))

(assert (=> start!9262 e!43535))

(assert (=> start!9262 true))

(assert (=> start!9262 e!43539))

(declare-fun b!66354 () Bool)

(assert (=> b!66354 (= e!43551 e!43536)))

(declare-fun res!35949 () Bool)

(assert (=> b!66354 (=> (not res!35949) (not e!43536))))

(assert (=> b!66354 (= res!35949 (and (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1116 (ValueCell!882 V!2915) V!2915)

(declare-fun dynLambda!319 (Int (_ BitVec 64)) V!2915)

(assert (=> b!66354 (= lt!28616 (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun mapNonEmpty!3076 () Bool)

(declare-fun tp!8361 () Bool)

(assert (=> mapNonEmpty!3076 (= mapRes!3076 (and tp!8361 e!43543))))

(declare-fun mapKey!3076 () (_ BitVec 32))

(declare-fun mapRest!3075 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapValue!3075 () ValueCell!882)

(assert (=> mapNonEmpty!3076 (= (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (store mapRest!3075 mapKey!3076 mapValue!3075))))

(declare-fun b!66366 () Bool)

(declare-fun res!35947 () Bool)

(assert (=> b!66366 (=> (not res!35947) (not e!43537))))

(declare-fun valid!279 (LongMapFixedSize!672) Bool)

(assert (=> b!66366 (= res!35947 (valid!279 newMap!16))))

(declare-fun b!66367 () Bool)

(assert (=> b!66367 (= e!43538 (= (size!2071 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6082 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66368 () Bool)

(assert (=> b!66368 (= e!43546 e!43548)))

(declare-fun mapIsEmpty!3075 () Bool)

(assert (=> mapIsEmpty!3075 mapRes!3076))

(declare-fun mapIsEmpty!3076 () Bool)

(assert (=> mapIsEmpty!3076 mapRes!3075))

(assert (= (and start!9262 res!35951) b!66360))

(assert (= (and b!66360 res!35946) b!66366))

(assert (= (and b!66366 res!35947) b!66349))

(assert (= (and b!66349 res!35948) b!66359))

(assert (= (and b!66359 res!35950) b!66354))

(assert (= (and b!66354 res!35949) b!66364))

(assert (= (and b!66364 c!9131) b!66351))

(assert (= (and b!66364 (not c!9131)) b!66353))

(assert (= (and b!66364 res!35944) b!66362))

(assert (= (and b!66362 (not res!35945)) b!66367))

(assert (= (and b!66358 condMapEmpty!3075) mapIsEmpty!3075))

(assert (= (and b!66358 (not condMapEmpty!3075)) mapNonEmpty!3076))

(get-info :version)

(assert (= (and mapNonEmpty!3076 ((_ is ValueCellFull!882) mapValue!3075)) b!66365))

(assert (= (and b!66358 ((_ is ValueCellFull!882) mapDefault!3076)) b!66355))

(assert (= b!66357 b!66358))

(assert (= b!66368 b!66357))

(assert (= b!66350 b!66368))

(assert (= start!9262 b!66350))

(assert (= (and b!66363 condMapEmpty!3076) mapIsEmpty!3076))

(assert (= (and b!66363 (not condMapEmpty!3076)) mapNonEmpty!3075))

(assert (= (and mapNonEmpty!3075 ((_ is ValueCellFull!882) mapValue!3076)) b!66356))

(assert (= (and b!66363 ((_ is ValueCellFull!882) mapDefault!3075)) b!66352))

(assert (= b!66361 b!66363))

(assert (= start!9262 b!66361))

(declare-fun b_lambda!2975 () Bool)

(assert (=> (not b_lambda!2975) (not b!66354)))

(declare-fun t!4944 () Bool)

(declare-fun tb!1457 () Bool)

(assert (=> (and b!66357 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))) t!4944) tb!1457))

(declare-fun result!2577 () Bool)

(assert (=> tb!1457 (= result!2577 tp_is_empty!2451)))

(assert (=> b!66354 t!4944))

(declare-fun b_and!4107 () Bool)

(assert (= b_and!4103 (and (=> t!4944 result!2577) b_and!4107)))

(declare-fun t!4946 () Bool)

(declare-fun tb!1459 () Bool)

(assert (=> (and b!66361 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))) t!4946) tb!1459))

(declare-fun result!2581 () Bool)

(assert (= result!2581 result!2577))

(assert (=> b!66354 t!4946))

(declare-fun b_and!4109 () Bool)

(assert (= b_and!4105 (and (=> t!4946 result!2581) b_and!4109)))

(declare-fun m!61065 () Bool)

(assert (=> b!66362 m!61065))

(declare-fun m!61067 () Bool)

(assert (=> b!66362 m!61067))

(declare-fun m!61069 () Bool)

(assert (=> b!66362 m!61069))

(declare-fun m!61071 () Bool)

(assert (=> b!66362 m!61071))

(declare-fun m!61073 () Bool)

(assert (=> b!66362 m!61073))

(declare-fun m!61075 () Bool)

(assert (=> b!66362 m!61075))

(declare-fun m!61077 () Bool)

(assert (=> b!66362 m!61077))

(assert (=> b!66362 m!61065))

(assert (=> b!66362 m!61075))

(assert (=> b!66362 m!61071))

(declare-fun m!61079 () Bool)

(assert (=> b!66362 m!61079))

(assert (=> b!66364 m!61065))

(assert (=> b!66364 m!61065))

(declare-fun m!61081 () Bool)

(assert (=> b!66364 m!61081))

(assert (=> b!66364 m!61065))

(declare-fun m!61083 () Bool)

(assert (=> b!66364 m!61083))

(declare-fun m!61085 () Bool)

(assert (=> mapNonEmpty!3076 m!61085))

(assert (=> b!66354 m!61065))

(declare-fun m!61087 () Bool)

(assert (=> b!66354 m!61087))

(declare-fun m!61089 () Bool)

(assert (=> b!66354 m!61089))

(assert (=> b!66354 m!61087))

(assert (=> b!66354 m!61089))

(declare-fun m!61091 () Bool)

(assert (=> b!66354 m!61091))

(declare-fun m!61093 () Bool)

(assert (=> mapNonEmpty!3075 m!61093))

(declare-fun m!61095 () Bool)

(assert (=> b!66361 m!61095))

(declare-fun m!61097 () Bool)

(assert (=> b!66361 m!61097))

(declare-fun m!61099 () Bool)

(assert (=> b!66359 m!61099))

(declare-fun m!61101 () Bool)

(assert (=> b!66359 m!61101))

(declare-fun m!61103 () Bool)

(assert (=> b!66357 m!61103))

(declare-fun m!61105 () Bool)

(assert (=> b!66357 m!61105))

(declare-fun m!61107 () Bool)

(assert (=> b!66351 m!61107))

(declare-fun m!61109 () Bool)

(assert (=> b!66351 m!61109))

(assert (=> b!66351 m!61065))

(declare-fun m!61111 () Bool)

(assert (=> b!66351 m!61111))

(assert (=> b!66351 m!61065))

(assert (=> b!66351 m!61065))

(declare-fun m!61113 () Bool)

(assert (=> b!66351 m!61113))

(assert (=> b!66351 m!61065))

(declare-fun m!61115 () Bool)

(assert (=> b!66351 m!61115))

(declare-fun m!61117 () Bool)

(assert (=> b!66366 m!61117))

(declare-fun m!61119 () Bool)

(assert (=> start!9262 m!61119))

(check-sat (not b!66361) (not b!66357) b_and!4109 (not b!66366) (not b_next!2069) (not mapNonEmpty!3076) (not b!66362) (not b_next!2071) (not b!66359) (not b!66351) (not start!9262) (not b!66354) (not b!66364) (not b_lambda!2975) tp_is_empty!2451 (not mapNonEmpty!3075) b_and!4107)
(check-sat b_and!4107 b_and!4109 (not b_next!2069) (not b_next!2071))
(get-model)

(declare-fun b_lambda!2979 () Bool)

(assert (= b_lambda!2975 (or (and b!66357 b_free!2069) (and b!66361 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))) b_lambda!2979)))

(check-sat (not b!66361) (not b!66357) b_and!4109 tp_is_empty!2451 (not b!66366) (not b_next!2069) (not mapNonEmpty!3076) (not b!66362) (not b_next!2071) (not b!66359) (not start!9262) (not b!66354) (not b!66364) (not b_lambda!2979) (not b!66351) (not mapNonEmpty!3075) b_and!4107)
(check-sat b_and!4107 b_and!4109 (not b_next!2069) (not b_next!2071))
(get-model)

(declare-fun d!13759 () Bool)

(declare-fun c!9137 () Bool)

(assert (=> d!13759 (= c!9137 ((_ is ValueCellFull!882) (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!43608 () V!2915)

(assert (=> d!13759 (= (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!43608)))

(declare-fun b!66437 () Bool)

(declare-fun get!1118 (ValueCell!882 V!2915) V!2915)

(assert (=> b!66437 (= e!43608 (get!1118 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66438 () Bool)

(declare-fun get!1119 (ValueCell!882 V!2915) V!2915)

(assert (=> b!66438 (= e!43608 (get!1119 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13759 c!9137) b!66437))

(assert (= (and d!13759 (not c!9137)) b!66438))

(assert (=> b!66437 m!61087))

(assert (=> b!66437 m!61089))

(declare-fun m!61177 () Bool)

(assert (=> b!66437 m!61177))

(assert (=> b!66438 m!61087))

(assert (=> b!66438 m!61089))

(declare-fun m!61179 () Bool)

(assert (=> b!66438 m!61179))

(assert (=> b!66354 d!13759))

(declare-fun d!13761 () Bool)

(assert (=> d!13761 (= (valid!278 thiss!992) (valid!279 (v!2478 (underlying!250 thiss!992))))))

(declare-fun bs!2862 () Bool)

(assert (= bs!2862 d!13761))

(declare-fun m!61181 () Bool)

(assert (=> bs!2862 m!61181))

(assert (=> start!9262 d!13761))

(declare-fun d!13763 () Bool)

(declare-fun res!35982 () Bool)

(declare-fun e!43611 () Bool)

(assert (=> d!13763 (=> (not res!35982) (not e!43611))))

(declare-fun simpleValid!48 (LongMapFixedSize!672) Bool)

(assert (=> d!13763 (= res!35982 (simpleValid!48 newMap!16))))

(assert (=> d!13763 (= (valid!279 newMap!16) e!43611)))

(declare-fun b!66445 () Bool)

(declare-fun res!35983 () Bool)

(assert (=> b!66445 (=> (not res!35983) (not e!43611))))

(declare-fun arrayCountValidKeys!0 (array!3841 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!66445 (= res!35983 (= (arrayCountValidKeys!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (_size!385 newMap!16)))))

(declare-fun b!66446 () Bool)

(declare-fun res!35984 () Bool)

(assert (=> b!66446 (=> (not res!35984) (not e!43611))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3841 (_ BitVec 32)) Bool)

(assert (=> b!66446 (= res!35984 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!66447 () Bool)

(assert (=> b!66447 (= e!43611 (arrayNoDuplicates!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 Nil!1462))))

(assert (= (and d!13763 res!35982) b!66445))

(assert (= (and b!66445 res!35983) b!66446))

(assert (= (and b!66446 res!35984) b!66447))

(declare-fun m!61183 () Bool)

(assert (=> d!13763 m!61183))

(declare-fun m!61185 () Bool)

(assert (=> b!66445 m!61185))

(declare-fun m!61187 () Bool)

(assert (=> b!66446 m!61187))

(declare-fun m!61189 () Bool)

(assert (=> b!66447 m!61189))

(assert (=> b!66366 d!13763))

(declare-fun d!13765 () Bool)

(declare-fun e!43614 () Bool)

(assert (=> d!13765 e!43614))

(declare-fun res!35990 () Bool)

(assert (=> d!13765 (=> (not res!35990) (not e!43614))))

(declare-fun lt!28671 () ListLongMap!1403)

(assert (=> d!13765 (= res!35990 (contains!710 lt!28671 (_1!1057 lt!28617)))))

(declare-fun lt!28672 () List!1466)

(assert (=> d!13765 (= lt!28671 (ListLongMap!1404 lt!28672))))

(declare-fun lt!28673 () Unit!1838)

(declare-fun lt!28674 () Unit!1838)

(assert (=> d!13765 (= lt!28673 lt!28674)))

(declare-datatypes ((Option!136 0))(
  ( (Some!135 (v!2482 V!2915)) (None!134) )
))
(declare-fun getValueByKey!130 (List!1466 (_ BitVec 64)) Option!136)

(assert (=> d!13765 (= (getValueByKey!130 lt!28672 (_1!1057 lt!28617)) (Some!135 (_2!1057 lt!28617)))))

(declare-fun lemmaContainsTupThenGetReturnValue!47 (List!1466 (_ BitVec 64) V!2915) Unit!1838)

(assert (=> d!13765 (= lt!28674 (lemmaContainsTupThenGetReturnValue!47 lt!28672 (_1!1057 lt!28617) (_2!1057 lt!28617)))))

(declare-fun insertStrictlySorted!50 (List!1466 (_ BitVec 64) V!2915) List!1466)

(assert (=> d!13765 (= lt!28672 (insertStrictlySorted!50 (toList!717 (+!89 lt!28620 lt!28624)) (_1!1057 lt!28617) (_2!1057 lt!28617)))))

(assert (=> d!13765 (= (+!89 (+!89 lt!28620 lt!28624) lt!28617) lt!28671)))

(declare-fun b!66452 () Bool)

(declare-fun res!35989 () Bool)

(assert (=> b!66452 (=> (not res!35989) (not e!43614))))

(assert (=> b!66452 (= res!35989 (= (getValueByKey!130 (toList!717 lt!28671) (_1!1057 lt!28617)) (Some!135 (_2!1057 lt!28617))))))

(declare-fun b!66453 () Bool)

(declare-fun contains!712 (List!1466 tuple2!2092) Bool)

(assert (=> b!66453 (= e!43614 (contains!712 (toList!717 lt!28671) lt!28617))))

(assert (= (and d!13765 res!35990) b!66452))

(assert (= (and b!66452 res!35989) b!66453))

(declare-fun m!61191 () Bool)

(assert (=> d!13765 m!61191))

(declare-fun m!61193 () Bool)

(assert (=> d!13765 m!61193))

(declare-fun m!61195 () Bool)

(assert (=> d!13765 m!61195))

(declare-fun m!61197 () Bool)

(assert (=> d!13765 m!61197))

(declare-fun m!61199 () Bool)

(assert (=> b!66452 m!61199))

(declare-fun m!61201 () Bool)

(assert (=> b!66453 m!61201))

(assert (=> b!66362 d!13765))

(declare-fun d!13767 () Bool)

(declare-fun e!43615 () Bool)

(assert (=> d!13767 e!43615))

(declare-fun res!35992 () Bool)

(assert (=> d!13767 (=> (not res!35992) (not e!43615))))

(declare-fun lt!28675 () ListLongMap!1403)

(assert (=> d!13767 (= res!35992 (contains!710 lt!28675 (_1!1057 lt!28624)))))

(declare-fun lt!28676 () List!1466)

(assert (=> d!13767 (= lt!28675 (ListLongMap!1404 lt!28676))))

(declare-fun lt!28677 () Unit!1838)

(declare-fun lt!28678 () Unit!1838)

(assert (=> d!13767 (= lt!28677 lt!28678)))

(assert (=> d!13767 (= (getValueByKey!130 lt!28676 (_1!1057 lt!28624)) (Some!135 (_2!1057 lt!28624)))))

(assert (=> d!13767 (= lt!28678 (lemmaContainsTupThenGetReturnValue!47 lt!28676 (_1!1057 lt!28624) (_2!1057 lt!28624)))))

(assert (=> d!13767 (= lt!28676 (insertStrictlySorted!50 (toList!717 lt!28620) (_1!1057 lt!28624) (_2!1057 lt!28624)))))

(assert (=> d!13767 (= (+!89 lt!28620 lt!28624) lt!28675)))

(declare-fun b!66454 () Bool)

(declare-fun res!35991 () Bool)

(assert (=> b!66454 (=> (not res!35991) (not e!43615))))

(assert (=> b!66454 (= res!35991 (= (getValueByKey!130 (toList!717 lt!28675) (_1!1057 lt!28624)) (Some!135 (_2!1057 lt!28624))))))

(declare-fun b!66455 () Bool)

(assert (=> b!66455 (= e!43615 (contains!712 (toList!717 lt!28675) lt!28624))))

(assert (= (and d!13767 res!35992) b!66454))

(assert (= (and b!66454 res!35991) b!66455))

(declare-fun m!61203 () Bool)

(assert (=> d!13767 m!61203))

(declare-fun m!61205 () Bool)

(assert (=> d!13767 m!61205))

(declare-fun m!61207 () Bool)

(assert (=> d!13767 m!61207))

(declare-fun m!61209 () Bool)

(assert (=> d!13767 m!61209))

(declare-fun m!61211 () Bool)

(assert (=> b!66454 m!61211))

(declare-fun m!61213 () Bool)

(assert (=> b!66455 m!61213))

(assert (=> b!66362 d!13767))

(declare-fun bm!5475 () Bool)

(declare-fun call!5478 () ListLongMap!1403)

(assert (=> bm!5475 (= call!5478 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!66480 () Bool)

(declare-fun e!43632 () ListLongMap!1403)

(assert (=> b!66480 (= e!43632 (ListLongMap!1404 Nil!1463))))

(declare-fun b!66481 () Bool)

(declare-fun lt!28693 () Unit!1838)

(declare-fun lt!28699 () Unit!1838)

(assert (=> b!66481 (= lt!28693 lt!28699)))

(declare-fun lt!28694 () V!2915)

(declare-fun lt!28695 () (_ BitVec 64))

(declare-fun lt!28696 () (_ BitVec 64))

(declare-fun lt!28697 () ListLongMap!1403)

(assert (=> b!66481 (not (contains!710 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)) lt!28696))))

(declare-fun addStillNotContains!21 (ListLongMap!1403 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1838)

(assert (=> b!66481 (= lt!28699 (addStillNotContains!21 lt!28697 lt!28695 lt!28694 lt!28696))))

(assert (=> b!66481 (= lt!28696 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!66481 (= lt!28694 (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!66481 (= lt!28695 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!66481 (= lt!28697 call!5478)))

(declare-fun e!43635 () ListLongMap!1403)

(assert (=> b!66481 (= e!43635 (+!89 call!5478 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!66482 () Bool)

(assert (=> b!66482 (= e!43632 e!43635)))

(declare-fun c!9149 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!66482 (= c!9149 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66483 () Bool)

(declare-fun e!43634 () Bool)

(declare-fun lt!28698 () ListLongMap!1403)

(declare-fun isEmpty!307 (ListLongMap!1403) Bool)

(assert (=> b!66483 (= e!43634 (isEmpty!307 lt!28698))))

(declare-fun b!66484 () Bool)

(declare-fun e!43636 () Bool)

(assert (=> b!66484 (= e!43636 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66484 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!66485 () Bool)

(declare-fun res!36001 () Bool)

(declare-fun e!43631 () Bool)

(assert (=> b!66485 (=> (not res!36001) (not e!43631))))

(assert (=> b!66485 (= res!36001 (not (contains!710 lt!28698 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66486 () Bool)

(declare-fun e!43633 () Bool)

(assert (=> b!66486 (= e!43631 e!43633)))

(declare-fun c!9148 () Bool)

(assert (=> b!66486 (= c!9148 e!43636)))

(declare-fun res!36002 () Bool)

(assert (=> b!66486 (=> (not res!36002) (not e!43636))))

(assert (=> b!66486 (= res!36002 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun d!13769 () Bool)

(assert (=> d!13769 e!43631))

(declare-fun res!36004 () Bool)

(assert (=> d!13769 (=> (not res!36004) (not e!43631))))

(assert (=> d!13769 (= res!36004 (not (contains!710 lt!28698 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13769 (= lt!28698 e!43632)))

(declare-fun c!9147 () Bool)

(assert (=> d!13769 (= c!9147 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!13769 (validMask!0 (mask!6082 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!13769 (= (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))) lt!28698)))

(declare-fun b!66487 () Bool)

(assert (=> b!66487 (= e!43634 (= lt!28698 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66488 () Bool)

(declare-fun e!43630 () Bool)

(assert (=> b!66488 (= e!43633 e!43630)))

(assert (=> b!66488 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun res!36003 () Bool)

(assert (=> b!66488 (= res!36003 (contains!710 lt!28698 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66488 (=> (not res!36003) (not e!43630))))

(declare-fun b!66489 () Bool)

(assert (=> b!66489 (= e!43635 call!5478)))

(declare-fun b!66490 () Bool)

(assert (=> b!66490 (= e!43633 e!43634)))

(declare-fun c!9146 () Bool)

(assert (=> b!66490 (= c!9146 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66491 () Bool)

(assert (=> b!66491 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!66491 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2071 (_values!2130 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun apply!72 (ListLongMap!1403 (_ BitVec 64)) V!2915)

(assert (=> b!66491 (= e!43630 (= (apply!72 lt!28698 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!13769 c!9147) b!66480))

(assert (= (and d!13769 (not c!9147)) b!66482))

(assert (= (and b!66482 c!9149) b!66481))

(assert (= (and b!66482 (not c!9149)) b!66489))

(assert (= (or b!66481 b!66489) bm!5475))

(assert (= (and d!13769 res!36004) b!66485))

(assert (= (and b!66485 res!36001) b!66486))

(assert (= (and b!66486 res!36002) b!66484))

(assert (= (and b!66486 c!9148) b!66488))

(assert (= (and b!66486 (not c!9148)) b!66490))

(assert (= (and b!66488 res!36003) b!66491))

(assert (= (and b!66490 c!9146) b!66487))

(assert (= (and b!66490 (not c!9146)) b!66483))

(declare-fun b_lambda!2981 () Bool)

(assert (=> (not b_lambda!2981) (not b!66481)))

(assert (=> b!66481 t!4944))

(declare-fun b_and!4119 () Bool)

(assert (= b_and!4107 (and (=> t!4944 result!2577) b_and!4119)))

(assert (=> b!66481 t!4946))

(declare-fun b_and!4121 () Bool)

(assert (= b_and!4109 (and (=> t!4946 result!2581) b_and!4121)))

(declare-fun b_lambda!2983 () Bool)

(assert (=> (not b_lambda!2983) (not b!66491)))

(assert (=> b!66491 t!4944))

(declare-fun b_and!4123 () Bool)

(assert (= b_and!4119 (and (=> t!4944 result!2577) b_and!4123)))

(assert (=> b!66491 t!4946))

(declare-fun b_and!4125 () Bool)

(assert (= b_and!4121 (and (=> t!4946 result!2581) b_and!4125)))

(declare-fun m!61215 () Bool)

(assert (=> b!66485 m!61215))

(declare-fun m!61217 () Bool)

(assert (=> b!66483 m!61217))

(declare-fun m!61219 () Bool)

(assert (=> b!66487 m!61219))

(declare-fun m!61221 () Bool)

(assert (=> b!66481 m!61221))

(declare-fun m!61223 () Bool)

(assert (=> b!66481 m!61223))

(assert (=> b!66481 m!61221))

(declare-fun m!61225 () Bool)

(assert (=> b!66481 m!61225))

(declare-fun m!61227 () Bool)

(assert (=> b!66481 m!61227))

(declare-fun m!61229 () Bool)

(assert (=> b!66481 m!61229))

(assert (=> b!66481 m!61089))

(assert (=> b!66481 m!61227))

(assert (=> b!66481 m!61089))

(declare-fun m!61231 () Bool)

(assert (=> b!66481 m!61231))

(declare-fun m!61233 () Bool)

(assert (=> b!66481 m!61233))

(assert (=> b!66491 m!61229))

(declare-fun m!61235 () Bool)

(assert (=> b!66491 m!61235))

(assert (=> b!66491 m!61227))

(assert (=> b!66491 m!61227))

(assert (=> b!66491 m!61089))

(assert (=> b!66491 m!61231))

(assert (=> b!66491 m!61229))

(assert (=> b!66491 m!61089))

(assert (=> b!66488 m!61229))

(assert (=> b!66488 m!61229))

(declare-fun m!61237 () Bool)

(assert (=> b!66488 m!61237))

(declare-fun m!61239 () Bool)

(assert (=> d!13769 m!61239))

(assert (=> d!13769 m!61069))

(assert (=> b!66484 m!61229))

(assert (=> b!66484 m!61229))

(declare-fun m!61241 () Bool)

(assert (=> b!66484 m!61241))

(assert (=> bm!5475 m!61219))

(assert (=> b!66482 m!61229))

(assert (=> b!66482 m!61229))

(assert (=> b!66482 m!61241))

(assert (=> b!66362 d!13769))

(declare-fun d!13771 () Bool)

(assert (=> d!13771 (= (+!89 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (+!89 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(declare-fun lt!28702 () Unit!1838)

(declare-fun choose!365 (ListLongMap!1403 (_ BitVec 64) V!2915 (_ BitVec 64) V!2915) Unit!1838)

(assert (=> d!13771 (= lt!28702 (choose!365 lt!28620 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))

(assert (=> d!13771 (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13771 (= (addCommutativeForDiffKeys!8 lt!28620 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) lt!28702)))

(declare-fun bs!2863 () Bool)

(assert (= bs!2863 d!13771))

(declare-fun m!61243 () Bool)

(assert (=> bs!2863 m!61243))

(declare-fun m!61245 () Bool)

(assert (=> bs!2863 m!61245))

(assert (=> bs!2863 m!61065))

(declare-fun m!61247 () Bool)

(assert (=> bs!2863 m!61247))

(declare-fun m!61249 () Bool)

(assert (=> bs!2863 m!61249))

(declare-fun m!61251 () Bool)

(assert (=> bs!2863 m!61251))

(assert (=> bs!2863 m!61243))

(assert (=> bs!2863 m!61249))

(assert (=> b!66362 d!13771))

(declare-fun d!13773 () Bool)

(declare-fun e!43637 () Bool)

(assert (=> d!13773 e!43637))

(declare-fun res!36006 () Bool)

(assert (=> d!13773 (=> (not res!36006) (not e!43637))))

(declare-fun lt!28703 () ListLongMap!1403)

(assert (=> d!13773 (= res!36006 (contains!710 lt!28703 (_1!1057 lt!28617)))))

(declare-fun lt!28704 () List!1466)

(assert (=> d!13773 (= lt!28703 (ListLongMap!1404 lt!28704))))

(declare-fun lt!28705 () Unit!1838)

(declare-fun lt!28706 () Unit!1838)

(assert (=> d!13773 (= lt!28705 lt!28706)))

(assert (=> d!13773 (= (getValueByKey!130 lt!28704 (_1!1057 lt!28617)) (Some!135 (_2!1057 lt!28617)))))

(assert (=> d!13773 (= lt!28706 (lemmaContainsTupThenGetReturnValue!47 lt!28704 (_1!1057 lt!28617) (_2!1057 lt!28617)))))

(assert (=> d!13773 (= lt!28704 (insertStrictlySorted!50 (toList!717 lt!28620) (_1!1057 lt!28617) (_2!1057 lt!28617)))))

(assert (=> d!13773 (= (+!89 lt!28620 lt!28617) lt!28703)))

(declare-fun b!66492 () Bool)

(declare-fun res!36005 () Bool)

(assert (=> b!66492 (=> (not res!36005) (not e!43637))))

(assert (=> b!66492 (= res!36005 (= (getValueByKey!130 (toList!717 lt!28703) (_1!1057 lt!28617)) (Some!135 (_2!1057 lt!28617))))))

(declare-fun b!66493 () Bool)

(assert (=> b!66493 (= e!43637 (contains!712 (toList!717 lt!28703) lt!28617))))

(assert (= (and d!13773 res!36006) b!66492))

(assert (= (and b!66492 res!36005) b!66493))

(declare-fun m!61253 () Bool)

(assert (=> d!13773 m!61253))

(declare-fun m!61255 () Bool)

(assert (=> d!13773 m!61255))

(declare-fun m!61257 () Bool)

(assert (=> d!13773 m!61257))

(declare-fun m!61259 () Bool)

(assert (=> d!13773 m!61259))

(declare-fun m!61261 () Bool)

(assert (=> b!66492 m!61261))

(declare-fun m!61263 () Bool)

(assert (=> b!66493 m!61263))

(assert (=> b!66362 d!13773))

(declare-fun d!13775 () Bool)

(declare-fun e!43638 () Bool)

(assert (=> d!13775 e!43638))

(declare-fun res!36008 () Bool)

(assert (=> d!13775 (=> (not res!36008) (not e!43638))))

(declare-fun lt!28707 () ListLongMap!1403)

(assert (=> d!13775 (= res!36008 (contains!710 lt!28707 (_1!1057 lt!28624)))))

(declare-fun lt!28708 () List!1466)

(assert (=> d!13775 (= lt!28707 (ListLongMap!1404 lt!28708))))

(declare-fun lt!28709 () Unit!1838)

(declare-fun lt!28710 () Unit!1838)

(assert (=> d!13775 (= lt!28709 lt!28710)))

(assert (=> d!13775 (= (getValueByKey!130 lt!28708 (_1!1057 lt!28624)) (Some!135 (_2!1057 lt!28624)))))

(assert (=> d!13775 (= lt!28710 (lemmaContainsTupThenGetReturnValue!47 lt!28708 (_1!1057 lt!28624) (_2!1057 lt!28624)))))

(assert (=> d!13775 (= lt!28708 (insertStrictlySorted!50 (toList!717 (+!89 lt!28620 lt!28617)) (_1!1057 lt!28624) (_2!1057 lt!28624)))))

(assert (=> d!13775 (= (+!89 (+!89 lt!28620 lt!28617) lt!28624) lt!28707)))

(declare-fun b!66494 () Bool)

(declare-fun res!36007 () Bool)

(assert (=> b!66494 (=> (not res!36007) (not e!43638))))

(assert (=> b!66494 (= res!36007 (= (getValueByKey!130 (toList!717 lt!28707) (_1!1057 lt!28624)) (Some!135 (_2!1057 lt!28624))))))

(declare-fun b!66495 () Bool)

(assert (=> b!66495 (= e!43638 (contains!712 (toList!717 lt!28707) lt!28624))))

(assert (= (and d!13775 res!36008) b!66494))

(assert (= (and b!66494 res!36007) b!66495))

(declare-fun m!61265 () Bool)

(assert (=> d!13775 m!61265))

(declare-fun m!61267 () Bool)

(assert (=> d!13775 m!61267))

(declare-fun m!61269 () Bool)

(assert (=> d!13775 m!61269))

(declare-fun m!61271 () Bool)

(assert (=> d!13775 m!61271))

(declare-fun m!61273 () Bool)

(assert (=> b!66494 m!61273))

(declare-fun m!61275 () Bool)

(assert (=> b!66495 m!61275))

(assert (=> b!66362 d!13775))

(declare-fun d!13777 () Bool)

(assert (=> d!13777 (= (validMask!0 (mask!6082 (v!2478 (underlying!250 thiss!992)))) (and (or (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000001111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000011111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000001111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000011111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000001111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000011111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000001111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000011111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000001111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000011111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000001111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000011111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000111111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000001111111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000011111111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000111111111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000001111111111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000011111111111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000111111111111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00001111111111111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00011111111111111111111111111111) (= (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!66362 d!13777))

(declare-fun d!13779 () Bool)

(assert (=> d!13779 (= (array_inv!1129 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvsge (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!66357 d!13779))

(declare-fun d!13781 () Bool)

(assert (=> d!13781 (= (array_inv!1130 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvsge (size!2071 (_values!2130 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!66357 d!13781))

(declare-fun d!13783 () Bool)

(assert (=> d!13783 (not (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28713 () Unit!1838)

(declare-fun choose!68 (array!3841 (_ BitVec 32) (_ BitVec 64) List!1465) Unit!1838)

(assert (=> d!13783 (= lt!28713 (choose!68 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462)))))

(assert (=> d!13783 (bvslt (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!13783 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462)) lt!28713)))

(declare-fun bs!2864 () Bool)

(assert (= bs!2864 d!13783))

(assert (=> bs!2864 m!61065))

(assert (=> bs!2864 m!61113))

(assert (=> bs!2864 m!61065))

(declare-fun m!61277 () Bool)

(assert (=> bs!2864 m!61277))

(assert (=> b!66351 d!13783))

(declare-fun d!13785 () Bool)

(assert (=> d!13785 (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) from!355 Nil!1462)))

(declare-fun lt!28716 () Unit!1838)

(declare-fun choose!39 (array!3841 (_ BitVec 32) (_ BitVec 32)) Unit!1838)

(assert (=> d!13785 (= lt!28716 (choose!39 (_keys!3787 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!13785 (bvslt (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!13785 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 from!355) lt!28716)))

(declare-fun bs!2865 () Bool)

(assert (= bs!2865 d!13785))

(assert (=> bs!2865 m!61109))

(declare-fun m!61279 () Bool)

(assert (=> bs!2865 m!61279))

(assert (=> b!66351 d!13785))

(declare-fun d!13787 () Bool)

(declare-fun res!36013 () Bool)

(declare-fun e!43643 () Bool)

(assert (=> d!13787 (=> res!36013 e!43643)))

(assert (=> d!13787 (= res!36013 (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13787 (= (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!43643)))

(declare-fun b!66500 () Bool)

(declare-fun e!43644 () Bool)

(assert (=> b!66500 (= e!43643 e!43644)))

(declare-fun res!36014 () Bool)

(assert (=> b!66500 (=> (not res!36014) (not e!43644))))

(assert (=> b!66500 (= res!36014 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66501 () Bool)

(assert (=> b!66501 (= e!43644 (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!13787 (not res!36013)) b!66500))

(assert (= (and b!66500 res!36014) b!66501))

(assert (=> d!13787 m!61229))

(assert (=> b!66501 m!61065))

(declare-fun m!61281 () Bool)

(assert (=> b!66501 m!61281))

(assert (=> b!66351 d!13787))

(declare-fun d!13789 () Bool)

(declare-fun e!43647 () Bool)

(assert (=> d!13789 e!43647))

(declare-fun c!9152 () Bool)

(assert (=> d!13789 (= c!9152 (and (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!28719 () Unit!1838)

(declare-fun choose!366 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) (_ BitVec 32) Int) Unit!1838)

(assert (=> d!13789 (= lt!28719 (choose!366 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(assert (=> d!13789 (validMask!0 (mask!6082 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!13789 (= (lemmaListMapContainsThenArrayContainsFrom!44 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))) lt!28719)))

(declare-fun b!66506 () Bool)

(assert (=> b!66506 (= e!43647 (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!66507 () Bool)

(assert (=> b!66507 (= e!43647 (ite (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!13789 c!9152) b!66506))

(assert (= (and d!13789 (not c!9152)) b!66507))

(assert (=> d!13789 m!61065))

(declare-fun m!61283 () Bool)

(assert (=> d!13789 m!61283))

(assert (=> d!13789 m!61069))

(assert (=> b!66506 m!61065))

(assert (=> b!66506 m!61113))

(assert (=> b!66351 d!13789))

(declare-fun d!13791 () Bool)

(declare-fun res!36021 () Bool)

(declare-fun e!43658 () Bool)

(assert (=> d!13791 (=> res!36021 e!43658)))

(assert (=> d!13791 (= res!36021 (bvsge from!355 (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!13791 (= (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) from!355 Nil!1462) e!43658)))

(declare-fun call!5481 () Bool)

(declare-fun c!9155 () Bool)

(declare-fun bm!5478 () Bool)

(assert (=> bm!5478 (= call!5481 (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)))))

(declare-fun b!66518 () Bool)

(declare-fun e!43659 () Bool)

(declare-fun contains!713 (List!1465 (_ BitVec 64)) Bool)

(assert (=> b!66518 (= e!43659 (contains!713 Nil!1462 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66519 () Bool)

(declare-fun e!43657 () Bool)

(declare-fun e!43656 () Bool)

(assert (=> b!66519 (= e!43657 e!43656)))

(assert (=> b!66519 (= c!9155 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66520 () Bool)

(assert (=> b!66520 (= e!43658 e!43657)))

(declare-fun res!36023 () Bool)

(assert (=> b!66520 (=> (not res!36023) (not e!43657))))

(assert (=> b!66520 (= res!36023 (not e!43659))))

(declare-fun res!36022 () Bool)

(assert (=> b!66520 (=> (not res!36022) (not e!43659))))

(assert (=> b!66520 (= res!36022 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66521 () Bool)

(assert (=> b!66521 (= e!43656 call!5481)))

(declare-fun b!66522 () Bool)

(assert (=> b!66522 (= e!43656 call!5481)))

(assert (= (and d!13791 (not res!36021)) b!66520))

(assert (= (and b!66520 res!36022) b!66518))

(assert (= (and b!66520 res!36023) b!66519))

(assert (= (and b!66519 c!9155) b!66522))

(assert (= (and b!66519 (not c!9155)) b!66521))

(assert (= (or b!66522 b!66521) bm!5478))

(assert (=> bm!5478 m!61065))

(declare-fun m!61285 () Bool)

(assert (=> bm!5478 m!61285))

(assert (=> b!66518 m!61065))

(assert (=> b!66518 m!61065))

(declare-fun m!61287 () Bool)

(assert (=> b!66518 m!61287))

(assert (=> b!66519 m!61065))

(assert (=> b!66519 m!61065))

(declare-fun m!61289 () Bool)

(assert (=> b!66519 m!61289))

(assert (=> b!66520 m!61065))

(assert (=> b!66520 m!61065))

(assert (=> b!66520 m!61289))

(assert (=> b!66351 d!13791))

(declare-fun d!13793 () Bool)

(assert (=> d!13793 (= (array_inv!1129 (_keys!3787 newMap!16)) (bvsge (size!2070 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66361 d!13793))

(declare-fun d!13795 () Bool)

(assert (=> d!13795 (= (array_inv!1130 (_values!2130 newMap!16)) (bvsge (size!2071 (_values!2130 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66361 d!13795))

(declare-fun d!13797 () Bool)

(declare-fun e!43665 () Bool)

(assert (=> d!13797 e!43665))

(declare-fun res!36026 () Bool)

(assert (=> d!13797 (=> res!36026 e!43665)))

(declare-fun lt!28730 () Bool)

(assert (=> d!13797 (= res!36026 (not lt!28730))))

(declare-fun lt!28728 () Bool)

(assert (=> d!13797 (= lt!28730 lt!28728)))

(declare-fun lt!28731 () Unit!1838)

(declare-fun e!43664 () Unit!1838)

(assert (=> d!13797 (= lt!28731 e!43664)))

(declare-fun c!9158 () Bool)

(assert (=> d!13797 (= c!9158 lt!28728)))

(declare-fun containsKey!134 (List!1466 (_ BitVec 64)) Bool)

(assert (=> d!13797 (= lt!28728 (containsKey!134 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13797 (= (contains!710 lt!28622 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!28730)))

(declare-fun b!66529 () Bool)

(declare-fun lt!28729 () Unit!1838)

(assert (=> b!66529 (= e!43664 lt!28729)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!82 (List!1466 (_ BitVec 64)) Unit!1838)

(assert (=> b!66529 (= lt!28729 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun isDefined!83 (Option!136) Bool)

(assert (=> b!66529 (isDefined!83 (getValueByKey!130 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66530 () Bool)

(declare-fun Unit!1844 () Unit!1838)

(assert (=> b!66530 (= e!43664 Unit!1844)))

(declare-fun b!66531 () Bool)

(assert (=> b!66531 (= e!43665 (isDefined!83 (getValueByKey!130 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (= (and d!13797 c!9158) b!66529))

(assert (= (and d!13797 (not c!9158)) b!66530))

(assert (= (and d!13797 (not res!36026)) b!66531))

(assert (=> d!13797 m!61065))

(declare-fun m!61291 () Bool)

(assert (=> d!13797 m!61291))

(assert (=> b!66529 m!61065))

(declare-fun m!61293 () Bool)

(assert (=> b!66529 m!61293))

(assert (=> b!66529 m!61065))

(declare-fun m!61295 () Bool)

(assert (=> b!66529 m!61295))

(assert (=> b!66529 m!61295))

(declare-fun m!61297 () Bool)

(assert (=> b!66529 m!61297))

(assert (=> b!66531 m!61065))

(assert (=> b!66531 m!61295))

(assert (=> b!66531 m!61295))

(assert (=> b!66531 m!61297))

(assert (=> b!66364 d!13797))

(declare-fun b!66616 () Bool)

(declare-fun res!36056 () Bool)

(declare-fun e!43712 () Bool)

(assert (=> b!66616 (=> (not res!36056) (not e!43712))))

(declare-datatypes ((SeekEntryResult!233 0))(
  ( (MissingZero!233 (index!3060 (_ BitVec 32))) (Found!233 (index!3061 (_ BitVec 32))) (Intermediate!233 (undefined!1045 Bool) (index!3062 (_ BitVec 32)) (x!10703 (_ BitVec 32))) (Undefined!233) (MissingVacant!233 (index!3063 (_ BitVec 32))) )
))
(declare-fun lt!28787 () SeekEntryResult!233)

(assert (=> b!66616 (= res!36056 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3060 lt!28787)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66617 () Bool)

(declare-fun c!9187 () Bool)

(declare-fun lt!28803 () SeekEntryResult!233)

(assert (=> b!66617 (= c!9187 ((_ is MissingVacant!233) lt!28803))))

(declare-fun e!43713 () tuple2!2094)

(declare-fun e!43719 () tuple2!2094)

(assert (=> b!66617 (= e!43713 e!43719)))

(declare-fun bm!5527 () Bool)

(declare-fun call!5549 () SeekEntryResult!233)

(declare-fun call!5547 () SeekEntryResult!233)

(assert (=> bm!5527 (= call!5549 call!5547)))

(declare-fun bm!5528 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3841 (_ BitVec 32)) SeekEntryResult!233)

(assert (=> bm!5528 (= call!5547 (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!66618 () Bool)

(declare-fun lt!28788 () tuple2!2094)

(declare-fun call!5531 () tuple2!2094)

(assert (=> b!66618 (= lt!28788 call!5531)))

(declare-fun e!43721 () tuple2!2094)

(assert (=> b!66618 (= e!43721 (tuple2!2095 (_1!1058 lt!28788) (_2!1058 lt!28788)))))

(declare-fun bm!5529 () Bool)

(declare-fun call!5546 () Bool)

(declare-fun call!5550 () Bool)

(assert (=> bm!5529 (= call!5546 call!5550)))

(declare-fun b!66619 () Bool)

(declare-fun lt!28809 () Unit!1838)

(declare-fun lt!28807 () Unit!1838)

(assert (=> b!66619 (= lt!28809 lt!28807)))

(declare-fun call!5545 () ListLongMap!1403)

(declare-fun call!5533 () ListLongMap!1403)

(assert (=> b!66619 (= call!5545 call!5533)))

(declare-fun lt!28792 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!21 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 V!2915 Int) Unit!1838)

(assert (=> b!66619 (= lt!28807 (lemmaChangeZeroKeyThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28792 (zeroValue!2055 newMap!16) lt!28616 (minValue!2055 newMap!16) (defaultEntry!2147 newMap!16)))))

(assert (=> b!66619 (= lt!28792 (bvor (extraKeys!2018 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!43718 () tuple2!2094)

(assert (=> b!66619 (= e!43718 (tuple2!2095 true (LongMapFixedSize!673 (defaultEntry!2147 newMap!16) (mask!6082 newMap!16) (bvor (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) lt!28616 (minValue!2055 newMap!16) (_size!385 newMap!16) (_keys!3787 newMap!16) (_values!2130 newMap!16) (_vacant!385 newMap!16))))))

(declare-fun b!66620 () Bool)

(declare-fun e!43723 () Bool)

(declare-fun e!43726 () Bool)

(assert (=> b!66620 (= e!43723 e!43726)))

(declare-fun c!9193 () Bool)

(declare-fun lt!28812 () tuple2!2094)

(assert (=> b!66620 (= c!9193 (_1!1058 lt!28812))))

(declare-fun c!9190 () Bool)

(declare-fun c!9195 () Bool)

(declare-fun c!9196 () Bool)

(declare-fun call!5535 () ListLongMap!1403)

(declare-fun bm!5530 () Bool)

(assert (=> bm!5530 (= call!5535 (getCurrentListMap!415 (_keys!3787 newMap!16) (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5531 () Bool)

(declare-fun call!5540 () Bool)

(assert (=> bm!5531 (= call!5550 call!5540)))

(declare-fun bm!5532 () Bool)

(declare-fun call!5539 () ListLongMap!1403)

(assert (=> bm!5532 (= call!5539 (map!1136 newMap!16))))

(declare-fun b!66621 () Bool)

(declare-fun c!9198 () Bool)

(declare-fun lt!28801 () SeekEntryResult!233)

(assert (=> b!66621 (= c!9198 ((_ is MissingVacant!233) lt!28801))))

(declare-fun e!43716 () Bool)

(declare-fun e!43717 () Bool)

(assert (=> b!66621 (= e!43716 e!43717)))

(declare-fun bm!5533 () Bool)

(declare-fun call!5543 () Unit!1838)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) Int) Unit!1838)

(assert (=> bm!5533 (= call!5543 (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5534 () Bool)

(declare-fun updateHelperNewKey!21 (LongMapFixedSize!672 (_ BitVec 64) V!2915 (_ BitVec 32)) tuple2!2094)

(assert (=> bm!5534 (= call!5531 (updateHelperNewKey!21 newMap!16 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))))))

(declare-fun b!66622 () Bool)

(declare-fun e!43714 () Bool)

(assert (=> b!66622 (= e!43717 e!43714)))

(declare-fun res!36057 () Bool)

(assert (=> b!66622 (= res!36057 call!5546)))

(assert (=> b!66622 (=> (not res!36057) (not e!43714))))

(declare-fun b!66623 () Bool)

(declare-fun e!43725 () tuple2!2094)

(assert (=> b!66623 (= e!43725 e!43718)))

(assert (=> b!66623 (= c!9196 (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5535 () Bool)

(declare-fun call!5551 () ListLongMap!1403)

(declare-fun call!5538 () ListLongMap!1403)

(assert (=> bm!5535 (= call!5551 call!5538)))

(declare-fun b!66624 () Bool)

(declare-fun lt!28796 () Unit!1838)

(declare-fun lt!28804 () Unit!1838)

(assert (=> b!66624 (= lt!28796 lt!28804)))

(assert (=> b!66624 (= call!5545 call!5551)))

(declare-fun lt!28786 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 V!2915 Int) Unit!1838)

(assert (=> b!66624 (= lt!28804 (lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28786 (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) lt!28616 (defaultEntry!2147 newMap!16)))))

(assert (=> b!66624 (= lt!28786 (bvor (extraKeys!2018 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!66624 (= e!43718 (tuple2!2095 true (LongMapFixedSize!673 (defaultEntry!2147 newMap!16) (mask!6082 newMap!16) (bvor (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) (zeroValue!2055 newMap!16) lt!28616 (_size!385 newMap!16) (_keys!3787 newMap!16) (_values!2130 newMap!16) (_vacant!385 newMap!16))))))

(declare-fun b!66625 () Bool)

(declare-fun e!43729 () Bool)

(assert (=> b!66625 (= e!43726 e!43729)))

(declare-fun call!5541 () ListLongMap!1403)

(declare-fun res!36068 () Bool)

(assert (=> b!66625 (= res!36068 (contains!710 call!5541 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!66625 (=> (not res!36068) (not e!43729))))

(declare-fun b!66626 () Bool)

(declare-fun e!43715 () ListLongMap!1403)

(assert (=> b!66626 (= e!43715 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28811 () SeekEntryResult!233)

(declare-fun bm!5536 () Bool)

(declare-fun c!9192 () Bool)

(declare-fun c!9191 () Bool)

(declare-fun c!9188 () Bool)

(declare-fun c!9200 () Bool)

(declare-fun lt!28795 () SeekEntryResult!233)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!5536 (= call!5540 (inRange!0 (ite c!9190 (ite c!9200 (index!3061 lt!28795) (ite c!9191 (index!3060 lt!28787) (index!3063 lt!28787))) (ite c!9188 (index!3061 lt!28811) (ite c!9192 (index!3060 lt!28801) (index!3063 lt!28801)))) (mask!6082 newMap!16)))))

(declare-fun bm!5537 () Bool)

(declare-fun call!5537 () SeekEntryResult!233)

(assert (=> bm!5537 (= call!5537 call!5547)))

(declare-fun b!66627 () Bool)

(declare-fun lt!28791 () tuple2!2094)

(assert (=> b!66627 (= e!43719 (tuple2!2095 (_1!1058 lt!28791) (_2!1058 lt!28791)))))

(assert (=> b!66627 (= lt!28791 call!5531)))

(declare-fun b!66628 () Bool)

(declare-fun e!43727 () Bool)

(declare-fun call!5534 () Bool)

(assert (=> b!66628 (= e!43727 (not call!5534))))

(declare-fun b!66629 () Bool)

(declare-fun e!43731 () Unit!1838)

(declare-fun Unit!1845 () Unit!1838)

(assert (=> b!66629 (= e!43731 Unit!1845)))

(declare-fun lt!28799 () Unit!1838)

(declare-fun call!5553 () Unit!1838)

(assert (=> b!66629 (= lt!28799 call!5553)))

(assert (=> b!66629 (= lt!28801 call!5549)))

(assert (=> b!66629 (= c!9192 ((_ is MissingZero!233) lt!28801))))

(assert (=> b!66629 e!43716))

(declare-fun lt!28789 () Unit!1838)

(assert (=> b!66629 (= lt!28789 lt!28799)))

(assert (=> b!66629 false))

(declare-fun call!5544 () Bool)

(declare-fun bm!5538 () Bool)

(assert (=> bm!5538 (= call!5544 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!66630 () Bool)

(declare-fun res!36059 () Bool)

(assert (=> b!66630 (= res!36059 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3063 lt!28787)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!43728 () Bool)

(assert (=> b!66630 (=> (not res!36059) (not e!43728))))

(declare-fun b!66631 () Bool)

(declare-fun e!43722 () Unit!1838)

(declare-fun Unit!1846 () Unit!1838)

(assert (=> b!66631 (= e!43722 Unit!1846)))

(declare-fun lt!28810 () Unit!1838)

(assert (=> b!66631 (= lt!28810 call!5543)))

(assert (=> b!66631 (= lt!28795 call!5537)))

(declare-fun res!36061 () Bool)

(assert (=> b!66631 (= res!36061 ((_ is Found!233) lt!28795))))

(declare-fun e!43730 () Bool)

(assert (=> b!66631 (=> (not res!36061) (not e!43730))))

(assert (=> b!66631 e!43730))

(declare-fun lt!28798 () Unit!1838)

(assert (=> b!66631 (= lt!28798 lt!28810)))

(assert (=> b!66631 false))

(declare-fun b!66632 () Bool)

(declare-fun e!43720 () Bool)

(assert (=> b!66632 (= e!43720 ((_ is Undefined!233) lt!28787))))

(declare-fun b!66633 () Bool)

(declare-fun res!36065 () Bool)

(declare-fun call!5532 () Bool)

(assert (=> b!66633 (= res!36065 call!5532)))

(assert (=> b!66633 (=> (not res!36065) (not e!43730))))

(declare-fun bm!5539 () Bool)

(declare-fun call!5530 () Bool)

(assert (=> bm!5539 (= call!5530 call!5532)))

(declare-fun bm!5540 () Bool)

(assert (=> bm!5540 (= call!5534 call!5544)))

(declare-fun bm!5541 () Bool)

(declare-fun c!9194 () Bool)

(assert (=> bm!5541 (= c!9194 c!9190)))

(declare-fun e!43724 () ListLongMap!1403)

(declare-fun call!5536 () Bool)

(assert (=> bm!5541 (= call!5536 (contains!710 e!43724 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun bm!5542 () Bool)

(declare-fun call!5552 () Bool)

(assert (=> bm!5542 (= call!5552 call!5544)))

(declare-fun bm!5543 () Bool)

(declare-fun call!5542 () ListLongMap!1403)

(assert (=> bm!5543 (= call!5542 call!5535)))

(declare-fun b!66634 () Bool)

(declare-fun res!36060 () Bool)

(assert (=> b!66634 (=> (not res!36060) (not e!43712))))

(assert (=> b!66634 (= res!36060 call!5530)))

(declare-fun e!43711 () Bool)

(assert (=> b!66634 (= e!43711 e!43712)))

(declare-fun b!66635 () Bool)

(declare-fun res!36063 () Bool)

(assert (=> b!66635 (= res!36063 call!5550)))

(declare-fun e!43710 () Bool)

(assert (=> b!66635 (=> (not res!36063) (not e!43710))))

(declare-fun b!66636 () Bool)

(declare-fun lt!28794 () Unit!1838)

(assert (=> b!66636 (= e!43731 lt!28794)))

(assert (=> b!66636 (= lt!28794 call!5543)))

(assert (=> b!66636 (= lt!28811 call!5549)))

(declare-fun res!36064 () Bool)

(assert (=> b!66636 (= res!36064 ((_ is Found!233) lt!28811))))

(assert (=> b!66636 (=> (not res!36064) (not e!43710))))

(assert (=> b!66636 e!43710))

(declare-fun call!5548 () ListLongMap!1403)

(declare-fun bm!5544 () Bool)

(assert (=> bm!5544 (= call!5548 (+!89 e!43715 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun c!9197 () Bool)

(assert (=> bm!5544 (= c!9197 c!9195)))

(declare-fun b!66637 () Bool)

(assert (=> b!66637 (= e!43715 (ite c!9196 call!5551 call!5533))))

(declare-fun bm!5545 () Bool)

(assert (=> bm!5545 (= call!5545 call!5548)))

(declare-fun b!66638 () Bool)

(assert (=> b!66638 (= e!43730 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28795)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66639 () Bool)

(assert (=> b!66639 (= e!43712 (not call!5552))))

(declare-fun b!66640 () Bool)

(assert (=> b!66640 (= e!43714 (not call!5534))))

(declare-fun b!66641 () Bool)

(assert (=> b!66641 (= e!43719 e!43721)))

(declare-fun c!9199 () Bool)

(assert (=> b!66641 (= c!9199 ((_ is MissingZero!233) lt!28803))))

(declare-fun d!13799 () Bool)

(assert (=> d!13799 e!43723))

(declare-fun res!36062 () Bool)

(assert (=> d!13799 (=> (not res!36062) (not e!43723))))

(assert (=> d!13799 (= res!36062 (valid!279 (_2!1058 lt!28812)))))

(assert (=> d!13799 (= lt!28812 e!43725)))

(assert (=> d!13799 (= c!9195 (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvneg (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!13799 (valid!279 newMap!16)))

(assert (=> d!13799 (= (update!89 newMap!16 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616) lt!28812)))

(declare-fun b!66642 () Bool)

(declare-fun res!36058 () Bool)

(assert (=> b!66642 (=> (not res!36058) (not e!43727))))

(assert (=> b!66642 (= res!36058 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3060 lt!28801)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66643 () Bool)

(assert (=> b!66643 (= e!43724 call!5542)))

(declare-fun b!66644 () Bool)

(assert (=> b!66644 (= e!43728 (not call!5552))))

(declare-fun b!66645 () Bool)

(declare-fun lt!28806 () Unit!1838)

(assert (=> b!66645 (= lt!28806 e!43722)))

(assert (=> b!66645 (= c!9200 call!5536)))

(assert (=> b!66645 (= e!43713 (tuple2!2095 false newMap!16))))

(declare-fun b!66646 () Bool)

(declare-fun lt!28805 () Unit!1838)

(declare-fun lt!28790 () Unit!1838)

(assert (=> b!66646 (= lt!28805 lt!28790)))

(assert (=> b!66646 (contains!710 call!5538 (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803)))))

(declare-fun lt!28797 () array!3843)

(declare-fun lemmaValidKeyInArrayIsInListMap!82 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) Int) Unit!1838)

(assert (=> b!66646 (= lt!28790 (lemmaValidKeyInArrayIsInListMap!82 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3061 lt!28803) (defaultEntry!2147 newMap!16)))))

(assert (=> b!66646 (= lt!28797 (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))))

(declare-fun lt!28802 () Unit!1838)

(declare-fun lt!28808 () Unit!1838)

(assert (=> b!66646 (= lt!28802 lt!28808)))

(assert (=> b!66646 (= call!5548 call!5542)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) (_ BitVec 64) V!2915 Int) Unit!1838)

(assert (=> b!66646 (= lt!28808 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3061 lt!28803) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28800 () Unit!1838)

(assert (=> b!66646 (= lt!28800 e!43731)))

(assert (=> b!66646 (= c!9188 call!5536)))

(assert (=> b!66646 (= e!43721 (tuple2!2095 true (LongMapFixedSize!673 (defaultEntry!2147 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (_size!385 newMap!16) (_keys!3787 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (_vacant!385 newMap!16))))))

(declare-fun b!66647 () Bool)

(declare-fun res!36055 () Bool)

(assert (=> b!66647 (=> (not res!36055) (not e!43727))))

(assert (=> b!66647 (= res!36055 call!5546)))

(assert (=> b!66647 (= e!43716 e!43727)))

(declare-fun b!66648 () Bool)

(assert (=> b!66648 (= e!43717 ((_ is Undefined!233) lt!28801))))

(declare-fun bm!5546 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) Int) Unit!1838)

(assert (=> bm!5546 (= call!5553 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5547 () Bool)

(assert (=> bm!5547 (= call!5532 call!5540)))

(declare-fun b!66649 () Bool)

(declare-fun c!9189 () Bool)

(assert (=> b!66649 (= c!9189 ((_ is MissingVacant!233) lt!28787))))

(assert (=> b!66649 (= e!43711 e!43720)))

(declare-fun b!66650 () Bool)

(declare-fun lt!28793 () Unit!1838)

(assert (=> b!66650 (= e!43722 lt!28793)))

(assert (=> b!66650 (= lt!28793 call!5553)))

(assert (=> b!66650 (= lt!28787 call!5537)))

(assert (=> b!66650 (= c!9191 ((_ is MissingZero!233) lt!28787))))

(assert (=> b!66650 e!43711))

(declare-fun b!66651 () Bool)

(declare-fun res!36067 () Bool)

(assert (=> b!66651 (= res!36067 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3063 lt!28801)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66651 (=> (not res!36067) (not e!43714))))

(declare-fun b!66652 () Bool)

(assert (=> b!66652 (= e!43725 e!43713)))

(assert (=> b!66652 (= lt!28803 (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (=> b!66652 (= c!9190 ((_ is Undefined!233) lt!28803))))

(declare-fun b!66653 () Bool)

(assert (=> b!66653 (= e!43710 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28811)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun bm!5548 () Bool)

(assert (=> bm!5548 (= call!5538 (getCurrentListMap!415 (_keys!3787 newMap!16) (ite c!9195 (_values!2130 newMap!16) lt!28797) (mask!6082 newMap!16) (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5549 () Bool)

(assert (=> bm!5549 (= call!5533 call!5535)))

(declare-fun b!66654 () Bool)

(assert (=> b!66654 (= e!43724 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5550 () Bool)

(assert (=> bm!5550 (= call!5541 (map!1136 (_2!1058 lt!28812)))))

(declare-fun b!66655 () Bool)

(assert (=> b!66655 (= e!43726 (= call!5541 call!5539))))

(declare-fun b!66656 () Bool)

(assert (=> b!66656 (= e!43729 (= call!5541 (+!89 call!5539 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!66657 () Bool)

(assert (=> b!66657 (= e!43720 e!43728)))

(declare-fun res!36066 () Bool)

(assert (=> b!66657 (= res!36066 call!5530)))

(assert (=> b!66657 (=> (not res!36066) (not e!43728))))

(assert (= (and d!13799 c!9195) b!66623))

(assert (= (and d!13799 (not c!9195)) b!66652))

(assert (= (and b!66623 c!9196) b!66619))

(assert (= (and b!66623 (not c!9196)) b!66624))

(assert (= (or b!66619 b!66624) bm!5549))

(assert (= (or b!66619 b!66624) bm!5535))

(assert (= (or b!66619 b!66624) bm!5545))

(assert (= (and b!66652 c!9190) b!66645))

(assert (= (and b!66652 (not c!9190)) b!66617))

(assert (= (and b!66645 c!9200) b!66631))

(assert (= (and b!66645 (not c!9200)) b!66650))

(assert (= (and b!66631 res!36061) b!66633))

(assert (= (and b!66633 res!36065) b!66638))

(assert (= (and b!66650 c!9191) b!66634))

(assert (= (and b!66650 (not c!9191)) b!66649))

(assert (= (and b!66634 res!36060) b!66616))

(assert (= (and b!66616 res!36056) b!66639))

(assert (= (and b!66649 c!9189) b!66657))

(assert (= (and b!66649 (not c!9189)) b!66632))

(assert (= (and b!66657 res!36066) b!66630))

(assert (= (and b!66630 res!36059) b!66644))

(assert (= (or b!66634 b!66657) bm!5539))

(assert (= (or b!66639 b!66644) bm!5542))

(assert (= (or b!66633 bm!5539) bm!5547))

(assert (= (or b!66631 b!66650) bm!5537))

(assert (= (and b!66617 c!9187) b!66627))

(assert (= (and b!66617 (not c!9187)) b!66641))

(assert (= (and b!66641 c!9199) b!66618))

(assert (= (and b!66641 (not c!9199)) b!66646))

(assert (= (and b!66646 c!9188) b!66636))

(assert (= (and b!66646 (not c!9188)) b!66629))

(assert (= (and b!66636 res!36064) b!66635))

(assert (= (and b!66635 res!36063) b!66653))

(assert (= (and b!66629 c!9192) b!66647))

(assert (= (and b!66629 (not c!9192)) b!66621))

(assert (= (and b!66647 res!36055) b!66642))

(assert (= (and b!66642 res!36058) b!66628))

(assert (= (and b!66621 c!9198) b!66622))

(assert (= (and b!66621 (not c!9198)) b!66648))

(assert (= (and b!66622 res!36057) b!66651))

(assert (= (and b!66651 res!36067) b!66640))

(assert (= (or b!66647 b!66622) bm!5529))

(assert (= (or b!66628 b!66640) bm!5540))

(assert (= (or b!66635 bm!5529) bm!5531))

(assert (= (or b!66636 b!66629) bm!5527))

(assert (= (or b!66627 b!66618) bm!5534))

(assert (= (or b!66650 b!66629) bm!5546))

(assert (= (or b!66631 b!66636) bm!5533))

(assert (= (or bm!5537 bm!5527) bm!5528))

(assert (= (or b!66645 b!66646) bm!5543))

(assert (= (or bm!5547 bm!5531) bm!5536))

(assert (= (or bm!5542 bm!5540) bm!5538))

(assert (= (or b!66645 b!66646) bm!5541))

(assert (= (and bm!5541 c!9194) b!66643))

(assert (= (and bm!5541 (not c!9194)) b!66654))

(assert (= (or bm!5549 bm!5543) bm!5530))

(assert (= (or bm!5535 b!66646) bm!5548))

(assert (= (or bm!5545 b!66646) bm!5544))

(assert (= (and bm!5544 c!9197) b!66637))

(assert (= (and bm!5544 (not c!9197)) b!66626))

(assert (= (and d!13799 res!36062) b!66620))

(assert (= (and b!66620 c!9193) b!66625))

(assert (= (and b!66620 (not c!9193)) b!66655))

(assert (= (and b!66625 res!36068) b!66656))

(assert (= (or b!66625 b!66656 b!66655) bm!5550))

(assert (= (or b!66656 b!66655) bm!5532))

(declare-fun m!61299 () Bool)

(assert (=> b!66654 m!61299))

(declare-fun m!61301 () Bool)

(assert (=> bm!5536 m!61301))

(assert (=> bm!5534 m!61065))

(declare-fun m!61303 () Bool)

(assert (=> bm!5534 m!61303))

(assert (=> bm!5528 m!61065))

(declare-fun m!61305 () Bool)

(assert (=> bm!5528 m!61305))

(declare-fun m!61307 () Bool)

(assert (=> d!13799 m!61307))

(assert (=> d!13799 m!61117))

(assert (=> b!66652 m!61065))

(assert (=> b!66652 m!61305))

(assert (=> bm!5538 m!61065))

(declare-fun m!61309 () Bool)

(assert (=> bm!5538 m!61309))

(declare-fun m!61311 () Bool)

(assert (=> b!66616 m!61311))

(assert (=> bm!5533 m!61065))

(declare-fun m!61313 () Bool)

(assert (=> bm!5533 m!61313))

(declare-fun m!61315 () Bool)

(assert (=> bm!5548 m!61315))

(declare-fun m!61317 () Bool)

(assert (=> b!66619 m!61317))

(declare-fun m!61319 () Bool)

(assert (=> b!66653 m!61319))

(declare-fun m!61321 () Bool)

(assert (=> b!66656 m!61321))

(declare-fun m!61323 () Bool)

(assert (=> b!66651 m!61323))

(declare-fun m!61325 () Bool)

(assert (=> b!66630 m!61325))

(declare-fun m!61327 () Bool)

(assert (=> b!66624 m!61327))

(assert (=> bm!5541 m!61065))

(declare-fun m!61329 () Bool)

(assert (=> bm!5541 m!61329))

(declare-fun m!61331 () Bool)

(assert (=> bm!5530 m!61331))

(declare-fun m!61333 () Bool)

(assert (=> bm!5530 m!61333))

(assert (=> b!66646 m!61331))

(declare-fun m!61335 () Bool)

(assert (=> b!66646 m!61335))

(assert (=> b!66646 m!61335))

(declare-fun m!61337 () Bool)

(assert (=> b!66646 m!61337))

(assert (=> b!66646 m!61065))

(declare-fun m!61339 () Bool)

(assert (=> b!66646 m!61339))

(declare-fun m!61341 () Bool)

(assert (=> b!66646 m!61341))

(assert (=> bm!5546 m!61065))

(declare-fun m!61343 () Bool)

(assert (=> bm!5546 m!61343))

(declare-fun m!61345 () Bool)

(assert (=> bm!5544 m!61345))

(declare-fun m!61347 () Bool)

(assert (=> b!66642 m!61347))

(assert (=> bm!5532 m!61099))

(assert (=> b!66625 m!61065))

(declare-fun m!61349 () Bool)

(assert (=> b!66625 m!61349))

(declare-fun m!61351 () Bool)

(assert (=> bm!5550 m!61351))

(assert (=> b!66626 m!61299))

(declare-fun m!61353 () Bool)

(assert (=> b!66638 m!61353))

(assert (=> b!66364 d!13799))

(declare-fun d!13801 () Bool)

(assert (=> d!13801 (= (map!1136 newMap!16) (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bs!2866 () Bool)

(assert (= bs!2866 d!13801))

(assert (=> bs!2866 m!61299))

(assert (=> b!66359 d!13801))

(declare-fun b!66700 () Bool)

(declare-fun e!43767 () ListLongMap!1403)

(declare-fun call!5573 () ListLongMap!1403)

(assert (=> b!66700 (= e!43767 call!5573)))

(declare-fun b!66701 () Bool)

(declare-fun e!43762 () ListLongMap!1403)

(assert (=> b!66701 (= e!43762 call!5573)))

(declare-fun b!66702 () Bool)

(declare-fun e!43765 () Bool)

(declare-fun lt!28877 () ListLongMap!1403)

(assert (=> b!66702 (= e!43765 (= (apply!72 lt!28877 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun bm!5565 () Bool)

(declare-fun call!5574 () ListLongMap!1403)

(assert (=> bm!5565 (= call!5574 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun bm!5566 () Bool)

(declare-fun call!5568 () Bool)

(assert (=> bm!5566 (= call!5568 (contains!710 lt!28877 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5567 () Bool)

(declare-fun call!5571 () ListLongMap!1403)

(declare-fun call!5569 () ListLongMap!1403)

(assert (=> bm!5567 (= call!5571 call!5569)))

(declare-fun b!66703 () Bool)

(declare-fun e!43768 () ListLongMap!1403)

(declare-fun call!5572 () ListLongMap!1403)

(assert (=> b!66703 (= e!43768 (+!89 call!5572 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66704 () Bool)

(declare-fun e!43760 () Unit!1838)

(declare-fun lt!28878 () Unit!1838)

(assert (=> b!66704 (= e!43760 lt!28878)))

(declare-fun lt!28874 () ListLongMap!1403)

(assert (=> b!66704 (= lt!28874 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun lt!28876 () (_ BitVec 64))

(assert (=> b!66704 (= lt!28876 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28866 () (_ BitVec 64))

(assert (=> b!66704 (= lt!28866 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28865 () Unit!1838)

(declare-fun addStillContains!48 (ListLongMap!1403 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1838)

(assert (=> b!66704 (= lt!28865 (addStillContains!48 lt!28874 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28866))))

(assert (=> b!66704 (contains!710 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28866)))

(declare-fun lt!28858 () Unit!1838)

(assert (=> b!66704 (= lt!28858 lt!28865)))

(declare-fun lt!28871 () ListLongMap!1403)

(assert (=> b!66704 (= lt!28871 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun lt!28868 () (_ BitVec 64))

(assert (=> b!66704 (= lt!28868 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28860 () (_ BitVec 64))

(assert (=> b!66704 (= lt!28860 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28861 () Unit!1838)

(declare-fun addApplyDifferent!48 (ListLongMap!1403 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1838)

(assert (=> b!66704 (= lt!28861 (addApplyDifferent!48 lt!28871 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28860))))

(assert (=> b!66704 (= (apply!72 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28860) (apply!72 lt!28871 lt!28860))))

(declare-fun lt!28875 () Unit!1838)

(assert (=> b!66704 (= lt!28875 lt!28861)))

(declare-fun lt!28863 () ListLongMap!1403)

(assert (=> b!66704 (= lt!28863 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun lt!28862 () (_ BitVec 64))

(assert (=> b!66704 (= lt!28862 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28873 () (_ BitVec 64))

(assert (=> b!66704 (= lt!28873 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28872 () Unit!1838)

(assert (=> b!66704 (= lt!28872 (addApplyDifferent!48 lt!28863 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28873))))

(assert (=> b!66704 (= (apply!72 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28873) (apply!72 lt!28863 lt!28873))))

(declare-fun lt!28864 () Unit!1838)

(assert (=> b!66704 (= lt!28864 lt!28872)))

(declare-fun lt!28867 () ListLongMap!1403)

(assert (=> b!66704 (= lt!28867 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun lt!28857 () (_ BitVec 64))

(assert (=> b!66704 (= lt!28857 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28870 () (_ BitVec 64))

(assert (=> b!66704 (= lt!28870 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!66704 (= lt!28878 (addApplyDifferent!48 lt!28867 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28870))))

(assert (=> b!66704 (= (apply!72 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28870) (apply!72 lt!28867 lt!28870))))

(declare-fun b!66705 () Bool)

(declare-fun e!43766 () Bool)

(assert (=> b!66705 (= e!43766 (= (apply!72 lt!28877 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66705 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2071 (_values!2130 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!66705 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66706 () Bool)

(assert (=> b!66706 (= e!43768 e!43767)))

(declare-fun c!9215 () Bool)

(assert (=> b!66706 (= c!9215 (and (not (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!13803 () Bool)

(declare-fun e!43764 () Bool)

(assert (=> d!13803 e!43764))

(declare-fun res!36092 () Bool)

(assert (=> d!13803 (=> (not res!36092) (not e!43764))))

(assert (=> d!13803 (= res!36092 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun lt!28859 () ListLongMap!1403)

(assert (=> d!13803 (= lt!28877 lt!28859)))

(declare-fun lt!28869 () Unit!1838)

(assert (=> d!13803 (= lt!28869 e!43760)))

(declare-fun c!9217 () Bool)

(declare-fun e!43769 () Bool)

(assert (=> d!13803 (= c!9217 e!43769)))

(declare-fun res!36094 () Bool)

(assert (=> d!13803 (=> (not res!36094) (not e!43769))))

(assert (=> d!13803 (= res!36094 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!13803 (= lt!28859 e!43768)))

(declare-fun c!9216 () Bool)

(assert (=> d!13803 (= c!9216 (and (not (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13803 (validMask!0 (mask!6082 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!13803 (= (getCurrentListMap!415 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))) lt!28877)))

(declare-fun b!66707 () Bool)

(declare-fun e!43763 () Bool)

(declare-fun call!5570 () Bool)

(assert (=> b!66707 (= e!43763 (not call!5570))))

(declare-fun b!66708 () Bool)

(declare-fun res!36091 () Bool)

(assert (=> b!66708 (=> (not res!36091) (not e!43764))))

(assert (=> b!66708 (= res!36091 e!43763)))

(declare-fun c!9214 () Bool)

(assert (=> b!66708 (= c!9214 (not (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5568 () Bool)

(assert (=> bm!5568 (= call!5573 call!5572)))

(declare-fun b!66709 () Bool)

(declare-fun e!43758 () Bool)

(assert (=> b!66709 (= e!43764 e!43758)))

(declare-fun c!9213 () Bool)

(assert (=> b!66709 (= c!9213 (not (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66710 () Bool)

(assert (=> b!66710 (= e!43758 e!43765)))

(declare-fun res!36088 () Bool)

(assert (=> b!66710 (= res!36088 call!5568)))

(assert (=> b!66710 (=> (not res!36088) (not e!43765))))

(declare-fun bm!5569 () Bool)

(assert (=> bm!5569 (= call!5572 (+!89 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571)) (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!66711 () Bool)

(declare-fun c!9218 () Bool)

(assert (=> b!66711 (= c!9218 (and (not (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!66711 (= e!43767 e!43762)))

(declare-fun bm!5570 () Bool)

(assert (=> bm!5570 (= call!5569 call!5574)))

(declare-fun b!66712 () Bool)

(assert (=> b!66712 (= e!43769 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66713 () Bool)

(declare-fun res!36090 () Bool)

(assert (=> b!66713 (=> (not res!36090) (not e!43764))))

(declare-fun e!43770 () Bool)

(assert (=> b!66713 (= res!36090 e!43770)))

(declare-fun res!36087 () Bool)

(assert (=> b!66713 (=> res!36087 e!43770)))

(declare-fun e!43761 () Bool)

(assert (=> b!66713 (= res!36087 (not e!43761))))

(declare-fun res!36089 () Bool)

(assert (=> b!66713 (=> (not res!36089) (not e!43761))))

(assert (=> b!66713 (= res!36089 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66714 () Bool)

(declare-fun e!43759 () Bool)

(assert (=> b!66714 (= e!43763 e!43759)))

(declare-fun res!36095 () Bool)

(assert (=> b!66714 (= res!36095 call!5570)))

(assert (=> b!66714 (=> (not res!36095) (not e!43759))))

(declare-fun b!66715 () Bool)

(assert (=> b!66715 (= e!43758 (not call!5568))))

(declare-fun b!66716 () Bool)

(assert (=> b!66716 (= e!43762 call!5571)))

(declare-fun b!66717 () Bool)

(declare-fun Unit!1847 () Unit!1838)

(assert (=> b!66717 (= e!43760 Unit!1847)))

(declare-fun b!66718 () Bool)

(assert (=> b!66718 (= e!43770 e!43766)))

(declare-fun res!36093 () Bool)

(assert (=> b!66718 (=> (not res!36093) (not e!43766))))

(assert (=> b!66718 (= res!36093 (contains!710 lt!28877 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66718 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun bm!5571 () Bool)

(assert (=> bm!5571 (= call!5570 (contains!710 lt!28877 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66719 () Bool)

(assert (=> b!66719 (= e!43761 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66720 () Bool)

(assert (=> b!66720 (= e!43759 (= (apply!72 lt!28877 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))

(assert (= (and d!13803 c!9216) b!66703))

(assert (= (and d!13803 (not c!9216)) b!66706))

(assert (= (and b!66706 c!9215) b!66700))

(assert (= (and b!66706 (not c!9215)) b!66711))

(assert (= (and b!66711 c!9218) b!66701))

(assert (= (and b!66711 (not c!9218)) b!66716))

(assert (= (or b!66701 b!66716) bm!5567))

(assert (= (or b!66700 bm!5567) bm!5570))

(assert (= (or b!66700 b!66701) bm!5568))

(assert (= (or b!66703 bm!5570) bm!5565))

(assert (= (or b!66703 bm!5568) bm!5569))

(assert (= (and d!13803 res!36094) b!66712))

(assert (= (and d!13803 c!9217) b!66704))

(assert (= (and d!13803 (not c!9217)) b!66717))

(assert (= (and d!13803 res!36092) b!66713))

(assert (= (and b!66713 res!36089) b!66719))

(assert (= (and b!66713 (not res!36087)) b!66718))

(assert (= (and b!66718 res!36093) b!66705))

(assert (= (and b!66713 res!36090) b!66708))

(assert (= (and b!66708 c!9214) b!66714))

(assert (= (and b!66708 (not c!9214)) b!66707))

(assert (= (and b!66714 res!36095) b!66720))

(assert (= (or b!66714 b!66707) bm!5571))

(assert (= (and b!66708 res!36091) b!66709))

(assert (= (and b!66709 c!9213) b!66710))

(assert (= (and b!66709 (not c!9213)) b!66715))

(assert (= (and b!66710 res!36088) b!66702))

(assert (= (or b!66710 b!66715) bm!5566))

(declare-fun b_lambda!2985 () Bool)

(assert (=> (not b_lambda!2985) (not b!66705)))

(assert (=> b!66705 t!4944))

(declare-fun b_and!4127 () Bool)

(assert (= b_and!4123 (and (=> t!4944 result!2577) b_and!4127)))

(assert (=> b!66705 t!4946))

(declare-fun b_and!4129 () Bool)

(assert (= b_and!4125 (and (=> t!4946 result!2581) b_and!4129)))

(declare-fun m!61355 () Bool)

(assert (=> b!66704 m!61355))

(declare-fun m!61357 () Bool)

(assert (=> b!66704 m!61357))

(declare-fun m!61359 () Bool)

(assert (=> b!66704 m!61359))

(declare-fun m!61361 () Bool)

(assert (=> b!66704 m!61361))

(declare-fun m!61363 () Bool)

(assert (=> b!66704 m!61363))

(declare-fun m!61365 () Bool)

(assert (=> b!66704 m!61365))

(declare-fun m!61367 () Bool)

(assert (=> b!66704 m!61367))

(declare-fun m!61369 () Bool)

(assert (=> b!66704 m!61369))

(declare-fun m!61371 () Bool)

(assert (=> b!66704 m!61371))

(declare-fun m!61373 () Bool)

(assert (=> b!66704 m!61373))

(assert (=> b!66704 m!61079))

(assert (=> b!66704 m!61363))

(assert (=> b!66704 m!61371))

(declare-fun m!61375 () Bool)

(assert (=> b!66704 m!61375))

(assert (=> b!66704 m!61229))

(declare-fun m!61377 () Bool)

(assert (=> b!66704 m!61377))

(assert (=> b!66704 m!61377))

(declare-fun m!61379 () Bool)

(assert (=> b!66704 m!61379))

(assert (=> b!66704 m!61361))

(declare-fun m!61381 () Bool)

(assert (=> b!66704 m!61381))

(declare-fun m!61383 () Bool)

(assert (=> b!66704 m!61383))

(declare-fun m!61385 () Bool)

(assert (=> b!66702 m!61385))

(declare-fun m!61387 () Bool)

(assert (=> b!66720 m!61387))

(assert (=> b!66719 m!61229))

(assert (=> b!66719 m!61229))

(assert (=> b!66719 m!61241))

(declare-fun m!61389 () Bool)

(assert (=> b!66703 m!61389))

(assert (=> bm!5565 m!61079))

(declare-fun m!61391 () Bool)

(assert (=> bm!5566 m!61391))

(assert (=> b!66712 m!61229))

(assert (=> b!66712 m!61229))

(assert (=> b!66712 m!61241))

(assert (=> d!13803 m!61069))

(declare-fun m!61393 () Bool)

(assert (=> bm!5569 m!61393))

(declare-fun m!61395 () Bool)

(assert (=> bm!5571 m!61395))

(assert (=> b!66705 m!61229))

(assert (=> b!66705 m!61089))

(assert (=> b!66705 m!61229))

(declare-fun m!61397 () Bool)

(assert (=> b!66705 m!61397))

(assert (=> b!66705 m!61227))

(assert (=> b!66705 m!61227))

(assert (=> b!66705 m!61089))

(assert (=> b!66705 m!61231))

(assert (=> b!66718 m!61229))

(assert (=> b!66718 m!61229))

(declare-fun m!61399 () Bool)

(assert (=> b!66718 m!61399))

(assert (=> b!66359 d!13803))

(declare-fun b!66727 () Bool)

(declare-fun e!43775 () Bool)

(assert (=> b!66727 (= e!43775 tp_is_empty!2451)))

(declare-fun mapNonEmpty!3085 () Bool)

(declare-fun mapRes!3085 () Bool)

(declare-fun tp!8377 () Bool)

(assert (=> mapNonEmpty!3085 (= mapRes!3085 (and tp!8377 e!43775))))

(declare-fun mapRest!3085 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapValue!3085 () ValueCell!882)

(declare-fun mapKey!3085 () (_ BitVec 32))

(assert (=> mapNonEmpty!3085 (= mapRest!3076 (store mapRest!3085 mapKey!3085 mapValue!3085))))

(declare-fun b!66728 () Bool)

(declare-fun e!43776 () Bool)

(assert (=> b!66728 (= e!43776 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3085 () Bool)

(assert (=> mapIsEmpty!3085 mapRes!3085))

(declare-fun condMapEmpty!3085 () Bool)

(declare-fun mapDefault!3085 () ValueCell!882)

(assert (=> mapNonEmpty!3075 (= condMapEmpty!3085 (= mapRest!3076 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3085)))))

(assert (=> mapNonEmpty!3075 (= tp!8362 (and e!43776 mapRes!3085))))

(assert (= (and mapNonEmpty!3075 condMapEmpty!3085) mapIsEmpty!3085))

(assert (= (and mapNonEmpty!3075 (not condMapEmpty!3085)) mapNonEmpty!3085))

(assert (= (and mapNonEmpty!3085 ((_ is ValueCellFull!882) mapValue!3085)) b!66727))

(assert (= (and mapNonEmpty!3075 ((_ is ValueCellFull!882) mapDefault!3085)) b!66728))

(declare-fun m!61401 () Bool)

(assert (=> mapNonEmpty!3085 m!61401))

(declare-fun b!66729 () Bool)

(declare-fun e!43777 () Bool)

(assert (=> b!66729 (= e!43777 tp_is_empty!2451)))

(declare-fun mapNonEmpty!3086 () Bool)

(declare-fun mapRes!3086 () Bool)

(declare-fun tp!8378 () Bool)

(assert (=> mapNonEmpty!3086 (= mapRes!3086 (and tp!8378 e!43777))))

(declare-fun mapRest!3086 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapKey!3086 () (_ BitVec 32))

(declare-fun mapValue!3086 () ValueCell!882)

(assert (=> mapNonEmpty!3086 (= mapRest!3075 (store mapRest!3086 mapKey!3086 mapValue!3086))))

(declare-fun b!66730 () Bool)

(declare-fun e!43778 () Bool)

(assert (=> b!66730 (= e!43778 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3086 () Bool)

(assert (=> mapIsEmpty!3086 mapRes!3086))

(declare-fun condMapEmpty!3086 () Bool)

(declare-fun mapDefault!3086 () ValueCell!882)

(assert (=> mapNonEmpty!3076 (= condMapEmpty!3086 (= mapRest!3075 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3086)))))

(assert (=> mapNonEmpty!3076 (= tp!8361 (and e!43778 mapRes!3086))))

(assert (= (and mapNonEmpty!3076 condMapEmpty!3086) mapIsEmpty!3086))

(assert (= (and mapNonEmpty!3076 (not condMapEmpty!3086)) mapNonEmpty!3086))

(assert (= (and mapNonEmpty!3086 ((_ is ValueCellFull!882) mapValue!3086)) b!66729))

(assert (= (and mapNonEmpty!3076 ((_ is ValueCellFull!882) mapDefault!3086)) b!66730))

(declare-fun m!61403 () Bool)

(assert (=> mapNonEmpty!3086 m!61403))

(declare-fun b_lambda!2987 () Bool)

(assert (= b_lambda!2985 (or (and b!66357 b_free!2069) (and b!66361 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))) b_lambda!2987)))

(declare-fun b_lambda!2989 () Bool)

(assert (= b_lambda!2983 (or (and b!66357 b_free!2069) (and b!66361 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))) b_lambda!2989)))

(declare-fun b_lambda!2991 () Bool)

(assert (= b_lambda!2981 (or (and b!66357 b_free!2069) (and b!66361 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))) b_lambda!2991)))

(check-sat (not b!66712) (not bm!5550) (not bm!5565) (not bm!5533) (not b!66531) (not bm!5478) (not d!13803) (not b!66438) b_and!4129 (not bm!5538) (not d!13763) (not bm!5546) (not bm!5541) (not b!66652) (not d!13801) (not d!13785) (not b!66624) (not bm!5532) (not b!66702) (not d!13767) (not b!66487) (not d!13797) (not b!66485) (not d!13761) (not b!66495) (not b!66703) (not bm!5530) (not d!13769) (not bm!5569) tp_is_empty!2451 b_and!4127 (not b!66454) (not mapNonEmpty!3085) (not d!13789) (not bm!5571) (not d!13765) (not b!66488) (not b!66501) (not d!13773) (not d!13771) (not b!66626) (not b_lambda!2987) (not b_lambda!2991) (not bm!5475) (not b_next!2069) (not b!66646) (not bm!5544) (not b!66447) (not b!66720) (not b!66656) (not bm!5566) (not b!66445) (not b!66493) (not d!13775) (not b!66491) (not mapNonEmpty!3086) (not b!66437) (not b_next!2071) (not b!66483) (not b!66529) (not b!66492) (not b!66453) (not b!66506) (not d!13799) (not bm!5548) (not b!66455) (not b!66452) (not b!66705) (not b_lambda!2989) (not b!66719) (not b!66704) (not b!66518) (not b!66482) (not bm!5528) (not b!66481) (not b!66484) (not d!13783) (not b_lambda!2979) (not b!66519) (not b!66520) (not b!66625) (not b!66654) (not b!66718) (not b!66446) (not bm!5534) (not b!66619) (not bm!5536) (not b!66494))
(check-sat b_and!4127 b_and!4129 (not b_next!2069) (not b_next!2071))
(get-model)

(declare-fun d!13805 () Bool)

(declare-fun e!43780 () Bool)

(assert (=> d!13805 e!43780))

(declare-fun res!36096 () Bool)

(assert (=> d!13805 (=> res!36096 e!43780)))

(declare-fun lt!28881 () Bool)

(assert (=> d!13805 (= res!36096 (not lt!28881))))

(declare-fun lt!28879 () Bool)

(assert (=> d!13805 (= lt!28881 lt!28879)))

(declare-fun lt!28882 () Unit!1838)

(declare-fun e!43779 () Unit!1838)

(assert (=> d!13805 (= lt!28882 e!43779)))

(declare-fun c!9219 () Bool)

(assert (=> d!13805 (= c!9219 lt!28879)))

(assert (=> d!13805 (= lt!28879 (containsKey!134 (toList!717 lt!28703) (_1!1057 lt!28617)))))

(assert (=> d!13805 (= (contains!710 lt!28703 (_1!1057 lt!28617)) lt!28881)))

(declare-fun b!66731 () Bool)

(declare-fun lt!28880 () Unit!1838)

(assert (=> b!66731 (= e!43779 lt!28880)))

(assert (=> b!66731 (= lt!28880 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28703) (_1!1057 lt!28617)))))

(assert (=> b!66731 (isDefined!83 (getValueByKey!130 (toList!717 lt!28703) (_1!1057 lt!28617)))))

(declare-fun b!66732 () Bool)

(declare-fun Unit!1848 () Unit!1838)

(assert (=> b!66732 (= e!43779 Unit!1848)))

(declare-fun b!66733 () Bool)

(assert (=> b!66733 (= e!43780 (isDefined!83 (getValueByKey!130 (toList!717 lt!28703) (_1!1057 lt!28617))))))

(assert (= (and d!13805 c!9219) b!66731))

(assert (= (and d!13805 (not c!9219)) b!66732))

(assert (= (and d!13805 (not res!36096)) b!66733))

(declare-fun m!61405 () Bool)

(assert (=> d!13805 m!61405))

(declare-fun m!61407 () Bool)

(assert (=> b!66731 m!61407))

(assert (=> b!66731 m!61261))

(assert (=> b!66731 m!61261))

(declare-fun m!61409 () Bool)

(assert (=> b!66731 m!61409))

(assert (=> b!66733 m!61261))

(assert (=> b!66733 m!61261))

(assert (=> b!66733 m!61409))

(assert (=> d!13773 d!13805))

(declare-fun d!13807 () Bool)

(declare-fun c!9224 () Bool)

(assert (=> d!13807 (= c!9224 (and ((_ is Cons!1462) lt!28704) (= (_1!1057 (h!2046 lt!28704)) (_1!1057 lt!28617))))))

(declare-fun e!43785 () Option!136)

(assert (=> d!13807 (= (getValueByKey!130 lt!28704 (_1!1057 lt!28617)) e!43785)))

(declare-fun b!66743 () Bool)

(declare-fun e!43786 () Option!136)

(assert (=> b!66743 (= e!43785 e!43786)))

(declare-fun c!9225 () Bool)

(assert (=> b!66743 (= c!9225 (and ((_ is Cons!1462) lt!28704) (not (= (_1!1057 (h!2046 lt!28704)) (_1!1057 lt!28617)))))))

(declare-fun b!66742 () Bool)

(assert (=> b!66742 (= e!43785 (Some!135 (_2!1057 (h!2046 lt!28704))))))

(declare-fun b!66744 () Bool)

(assert (=> b!66744 (= e!43786 (getValueByKey!130 (t!4948 lt!28704) (_1!1057 lt!28617)))))

(declare-fun b!66745 () Bool)

(assert (=> b!66745 (= e!43786 None!134)))

(assert (= (and d!13807 c!9224) b!66742))

(assert (= (and d!13807 (not c!9224)) b!66743))

(assert (= (and b!66743 c!9225) b!66744))

(assert (= (and b!66743 (not c!9225)) b!66745))

(declare-fun m!61411 () Bool)

(assert (=> b!66744 m!61411))

(assert (=> d!13773 d!13807))

(declare-fun d!13809 () Bool)

(assert (=> d!13809 (= (getValueByKey!130 lt!28704 (_1!1057 lt!28617)) (Some!135 (_2!1057 lt!28617)))))

(declare-fun lt!28885 () Unit!1838)

(declare-fun choose!367 (List!1466 (_ BitVec 64) V!2915) Unit!1838)

(assert (=> d!13809 (= lt!28885 (choose!367 lt!28704 (_1!1057 lt!28617) (_2!1057 lt!28617)))))

(declare-fun e!43789 () Bool)

(assert (=> d!13809 e!43789))

(declare-fun res!36101 () Bool)

(assert (=> d!13809 (=> (not res!36101) (not e!43789))))

(declare-fun isStrictlySorted!289 (List!1466) Bool)

(assert (=> d!13809 (= res!36101 (isStrictlySorted!289 lt!28704))))

(assert (=> d!13809 (= (lemmaContainsTupThenGetReturnValue!47 lt!28704 (_1!1057 lt!28617) (_2!1057 lt!28617)) lt!28885)))

(declare-fun b!66750 () Bool)

(declare-fun res!36102 () Bool)

(assert (=> b!66750 (=> (not res!36102) (not e!43789))))

(assert (=> b!66750 (= res!36102 (containsKey!134 lt!28704 (_1!1057 lt!28617)))))

(declare-fun b!66751 () Bool)

(assert (=> b!66751 (= e!43789 (contains!712 lt!28704 (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(assert (= (and d!13809 res!36101) b!66750))

(assert (= (and b!66750 res!36102) b!66751))

(assert (=> d!13809 m!61255))

(declare-fun m!61413 () Bool)

(assert (=> d!13809 m!61413))

(declare-fun m!61415 () Bool)

(assert (=> d!13809 m!61415))

(declare-fun m!61417 () Bool)

(assert (=> b!66750 m!61417))

(declare-fun m!61419 () Bool)

(assert (=> b!66751 m!61419))

(assert (=> d!13773 d!13809))

(declare-fun b!66772 () Bool)

(declare-fun e!43802 () List!1466)

(declare-fun call!5581 () List!1466)

(assert (=> b!66772 (= e!43802 call!5581)))

(declare-fun bm!5578 () Bool)

(declare-fun call!5582 () List!1466)

(declare-fun call!5583 () List!1466)

(assert (=> bm!5578 (= call!5582 call!5583)))

(declare-fun b!66773 () Bool)

(declare-fun e!43804 () Bool)

(declare-fun lt!28888 () List!1466)

(assert (=> b!66773 (= e!43804 (contains!712 lt!28888 (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun b!66774 () Bool)

(assert (=> b!66774 (= e!43802 call!5581)))

(declare-fun b!66775 () Bool)

(declare-fun e!43800 () List!1466)

(assert (=> b!66775 (= e!43800 (insertStrictlySorted!50 (t!4948 (toList!717 lt!28620)) (_1!1057 lt!28617) (_2!1057 lt!28617)))))

(declare-fun b!66776 () Bool)

(declare-fun e!43803 () List!1466)

(assert (=> b!66776 (= e!43803 call!5583)))

(declare-fun b!66777 () Bool)

(declare-fun c!9236 () Bool)

(declare-fun c!9234 () Bool)

(assert (=> b!66777 (= e!43800 (ite c!9234 (t!4948 (toList!717 lt!28620)) (ite c!9236 (Cons!1462 (h!2046 (toList!717 lt!28620)) (t!4948 (toList!717 lt!28620))) Nil!1463)))))

(declare-fun d!13811 () Bool)

(assert (=> d!13811 e!43804))

(declare-fun res!36108 () Bool)

(assert (=> d!13811 (=> (not res!36108) (not e!43804))))

(assert (=> d!13811 (= res!36108 (isStrictlySorted!289 lt!28888))))

(assert (=> d!13811 (= lt!28888 e!43803)))

(declare-fun c!9237 () Bool)

(assert (=> d!13811 (= c!9237 (and ((_ is Cons!1462) (toList!717 lt!28620)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 lt!28617))))))

(assert (=> d!13811 (isStrictlySorted!289 (toList!717 lt!28620))))

(assert (=> d!13811 (= (insertStrictlySorted!50 (toList!717 lt!28620) (_1!1057 lt!28617) (_2!1057 lt!28617)) lt!28888)))

(declare-fun bm!5579 () Bool)

(assert (=> bm!5579 (= call!5581 call!5582)))

(declare-fun b!66778 () Bool)

(declare-fun res!36107 () Bool)

(assert (=> b!66778 (=> (not res!36107) (not e!43804))))

(assert (=> b!66778 (= res!36107 (containsKey!134 lt!28888 (_1!1057 lt!28617)))))

(declare-fun b!66779 () Bool)

(declare-fun e!43801 () List!1466)

(assert (=> b!66779 (= e!43801 call!5582)))

(declare-fun b!66780 () Bool)

(assert (=> b!66780 (= c!9236 (and ((_ is Cons!1462) (toList!717 lt!28620)) (bvsgt (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 lt!28617))))))

(assert (=> b!66780 (= e!43801 e!43802)))

(declare-fun b!66781 () Bool)

(assert (=> b!66781 (= e!43803 e!43801)))

(assert (=> b!66781 (= c!9234 (and ((_ is Cons!1462) (toList!717 lt!28620)) (= (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 lt!28617))))))

(declare-fun bm!5580 () Bool)

(declare-fun $colon$colon!63 (List!1466 tuple2!2092) List!1466)

(assert (=> bm!5580 (= call!5583 ($colon$colon!63 e!43800 (ite c!9237 (h!2046 (toList!717 lt!28620)) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617)))))))

(declare-fun c!9235 () Bool)

(assert (=> bm!5580 (= c!9235 c!9237)))

(assert (= (and d!13811 c!9237) b!66776))

(assert (= (and d!13811 (not c!9237)) b!66781))

(assert (= (and b!66781 c!9234) b!66779))

(assert (= (and b!66781 (not c!9234)) b!66780))

(assert (= (and b!66780 c!9236) b!66774))

(assert (= (and b!66780 (not c!9236)) b!66772))

(assert (= (or b!66774 b!66772) bm!5579))

(assert (= (or b!66779 bm!5579) bm!5578))

(assert (= (or b!66776 bm!5578) bm!5580))

(assert (= (and bm!5580 c!9235) b!66775))

(assert (= (and bm!5580 (not c!9235)) b!66777))

(assert (= (and d!13811 res!36108) b!66778))

(assert (= (and b!66778 res!36107) b!66773))

(declare-fun m!61421 () Bool)

(assert (=> b!66773 m!61421))

(declare-fun m!61423 () Bool)

(assert (=> d!13811 m!61423))

(declare-fun m!61425 () Bool)

(assert (=> d!13811 m!61425))

(declare-fun m!61427 () Bool)

(assert (=> bm!5580 m!61427))

(declare-fun m!61429 () Bool)

(assert (=> b!66778 m!61429))

(declare-fun m!61431 () Bool)

(assert (=> b!66775 m!61431))

(assert (=> d!13773 d!13811))

(declare-fun d!13813 () Bool)

(declare-fun e!43806 () Bool)

(assert (=> d!13813 e!43806))

(declare-fun res!36109 () Bool)

(assert (=> d!13813 (=> res!36109 e!43806)))

(declare-fun lt!28891 () Bool)

(assert (=> d!13813 (= res!36109 (not lt!28891))))

(declare-fun lt!28889 () Bool)

(assert (=> d!13813 (= lt!28891 lt!28889)))

(declare-fun lt!28892 () Unit!1838)

(declare-fun e!43805 () Unit!1838)

(assert (=> d!13813 (= lt!28892 e!43805)))

(declare-fun c!9238 () Bool)

(assert (=> d!13813 (= c!9238 lt!28889)))

(assert (=> d!13813 (= lt!28889 (containsKey!134 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13813 (= (contains!710 lt!28877 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28891)))

(declare-fun b!66782 () Bool)

(declare-fun lt!28890 () Unit!1838)

(assert (=> b!66782 (= e!43805 lt!28890)))

(assert (=> b!66782 (= lt!28890 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66782 (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66783 () Bool)

(declare-fun Unit!1849 () Unit!1838)

(assert (=> b!66783 (= e!43805 Unit!1849)))

(declare-fun b!66784 () Bool)

(assert (=> b!66784 (= e!43806 (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13813 c!9238) b!66782))

(assert (= (and d!13813 (not c!9238)) b!66783))

(assert (= (and d!13813 (not res!36109)) b!66784))

(declare-fun m!61433 () Bool)

(assert (=> d!13813 m!61433))

(declare-fun m!61435 () Bool)

(assert (=> b!66782 m!61435))

(declare-fun m!61437 () Bool)

(assert (=> b!66782 m!61437))

(assert (=> b!66782 m!61437))

(declare-fun m!61439 () Bool)

(assert (=> b!66782 m!61439))

(assert (=> b!66784 m!61437))

(assert (=> b!66784 m!61437))

(assert (=> b!66784 m!61439))

(assert (=> bm!5571 d!13813))

(declare-fun b!66785 () Bool)

(declare-fun e!43816 () ListLongMap!1403)

(declare-fun call!5589 () ListLongMap!1403)

(assert (=> b!66785 (= e!43816 call!5589)))

(declare-fun b!66786 () Bool)

(declare-fun e!43811 () ListLongMap!1403)

(assert (=> b!66786 (= e!43811 call!5589)))

(declare-fun b!66787 () Bool)

(declare-fun e!43814 () Bool)

(declare-fun lt!28913 () ListLongMap!1403)

(assert (=> b!66787 (= e!43814 (= (apply!72 lt!28913 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun call!5590 () ListLongMap!1403)

(declare-fun bm!5581 () Bool)

(assert (=> bm!5581 (= call!5590 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5582 () Bool)

(declare-fun call!5584 () Bool)

(assert (=> bm!5582 (= call!5584 (contains!710 lt!28913 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5583 () Bool)

(declare-fun call!5587 () ListLongMap!1403)

(declare-fun call!5585 () ListLongMap!1403)

(assert (=> bm!5583 (= call!5587 call!5585)))

(declare-fun b!66788 () Bool)

(declare-fun e!43817 () ListLongMap!1403)

(declare-fun call!5588 () ListLongMap!1403)

(assert (=> b!66788 (= e!43817 (+!89 call!5588 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!66789 () Bool)

(declare-fun e!43809 () Unit!1838)

(declare-fun lt!28914 () Unit!1838)

(assert (=> b!66789 (= e!43809 lt!28914)))

(declare-fun lt!28910 () ListLongMap!1403)

(assert (=> b!66789 (= lt!28910 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28912 () (_ BitVec 64))

(assert (=> b!66789 (= lt!28912 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28902 () (_ BitVec 64))

(assert (=> b!66789 (= lt!28902 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28901 () Unit!1838)

(assert (=> b!66789 (= lt!28901 (addStillContains!48 lt!28910 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) lt!28902))))

(assert (=> b!66789 (contains!710 (+!89 lt!28910 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) lt!28902)))

(declare-fun lt!28894 () Unit!1838)

(assert (=> b!66789 (= lt!28894 lt!28901)))

(declare-fun lt!28907 () ListLongMap!1403)

(assert (=> b!66789 (= lt!28907 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28904 () (_ BitVec 64))

(assert (=> b!66789 (= lt!28904 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28896 () (_ BitVec 64))

(assert (=> b!66789 (= lt!28896 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28897 () Unit!1838)

(assert (=> b!66789 (= lt!28897 (addApplyDifferent!48 lt!28907 lt!28904 (minValue!2055 newMap!16) lt!28896))))

(assert (=> b!66789 (= (apply!72 (+!89 lt!28907 (tuple2!2093 lt!28904 (minValue!2055 newMap!16))) lt!28896) (apply!72 lt!28907 lt!28896))))

(declare-fun lt!28911 () Unit!1838)

(assert (=> b!66789 (= lt!28911 lt!28897)))

(declare-fun lt!28899 () ListLongMap!1403)

(assert (=> b!66789 (= lt!28899 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28898 () (_ BitVec 64))

(assert (=> b!66789 (= lt!28898 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28909 () (_ BitVec 64))

(assert (=> b!66789 (= lt!28909 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28908 () Unit!1838)

(assert (=> b!66789 (= lt!28908 (addApplyDifferent!48 lt!28899 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) lt!28909))))

(assert (=> b!66789 (= (apply!72 (+!89 lt!28899 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) lt!28909) (apply!72 lt!28899 lt!28909))))

(declare-fun lt!28900 () Unit!1838)

(assert (=> b!66789 (= lt!28900 lt!28908)))

(declare-fun lt!28903 () ListLongMap!1403)

(assert (=> b!66789 (= lt!28903 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28893 () (_ BitVec 64))

(assert (=> b!66789 (= lt!28893 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28906 () (_ BitVec 64))

(assert (=> b!66789 (= lt!28906 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66789 (= lt!28914 (addApplyDifferent!48 lt!28903 lt!28893 (minValue!2055 newMap!16) lt!28906))))

(assert (=> b!66789 (= (apply!72 (+!89 lt!28903 (tuple2!2093 lt!28893 (minValue!2055 newMap!16))) lt!28906) (apply!72 lt!28903 lt!28906))))

(declare-fun e!43815 () Bool)

(declare-fun b!66790 () Bool)

(assert (=> b!66790 (= e!43815 (= (apply!72 lt!28913 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66790 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))))))))

(assert (=> b!66790 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!66791 () Bool)

(assert (=> b!66791 (= e!43817 e!43816)))

(declare-fun c!9241 () Bool)

(assert (=> b!66791 (= c!9241 (and (not (= (bvand (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!13815 () Bool)

(declare-fun e!43813 () Bool)

(assert (=> d!13815 e!43813))

(declare-fun res!36115 () Bool)

(assert (=> d!13815 (=> (not res!36115) (not e!43813))))

(assert (=> d!13815 (= res!36115 (or (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))))

(declare-fun lt!28895 () ListLongMap!1403)

(assert (=> d!13815 (= lt!28913 lt!28895)))

(declare-fun lt!28905 () Unit!1838)

(assert (=> d!13815 (= lt!28905 e!43809)))

(declare-fun c!9243 () Bool)

(declare-fun e!43818 () Bool)

(assert (=> d!13815 (= c!9243 e!43818)))

(declare-fun res!36117 () Bool)

(assert (=> d!13815 (=> (not res!36117) (not e!43818))))

(assert (=> d!13815 (= res!36117 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!13815 (= lt!28895 e!43817)))

(declare-fun c!9242 () Bool)

(assert (=> d!13815 (= c!9242 (and (not (= (bvand (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13815 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13815 (= (getCurrentListMap!415 (_keys!3787 newMap!16) (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!28913)))

(declare-fun b!66792 () Bool)

(declare-fun e!43812 () Bool)

(declare-fun call!5586 () Bool)

(assert (=> b!66792 (= e!43812 (not call!5586))))

(declare-fun b!66793 () Bool)

(declare-fun res!36114 () Bool)

(assert (=> b!66793 (=> (not res!36114) (not e!43813))))

(assert (=> b!66793 (= res!36114 e!43812)))

(declare-fun c!9240 () Bool)

(assert (=> b!66793 (= c!9240 (not (= (bvand (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5584 () Bool)

(assert (=> bm!5584 (= call!5589 call!5588)))

(declare-fun b!66794 () Bool)

(declare-fun e!43807 () Bool)

(assert (=> b!66794 (= e!43813 e!43807)))

(declare-fun c!9239 () Bool)

(assert (=> b!66794 (= c!9239 (not (= (bvand (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66795 () Bool)

(assert (=> b!66795 (= e!43807 e!43814)))

(declare-fun res!36111 () Bool)

(assert (=> b!66795 (= res!36111 call!5584)))

(assert (=> b!66795 (=> (not res!36111) (not e!43814))))

(declare-fun bm!5585 () Bool)

(assert (=> bm!5585 (= call!5588 (+!89 (ite c!9242 call!5590 (ite c!9241 call!5585 call!5587)) (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!66796 () Bool)

(declare-fun c!9244 () Bool)

(assert (=> b!66796 (= c!9244 (and (not (= (bvand (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!66796 (= e!43816 e!43811)))

(declare-fun bm!5586 () Bool)

(assert (=> bm!5586 (= call!5585 call!5590)))

(declare-fun b!66797 () Bool)

(assert (=> b!66797 (= e!43818 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66798 () Bool)

(declare-fun res!36113 () Bool)

(assert (=> b!66798 (=> (not res!36113) (not e!43813))))

(declare-fun e!43819 () Bool)

(assert (=> b!66798 (= res!36113 e!43819)))

(declare-fun res!36110 () Bool)

(assert (=> b!66798 (=> res!36110 e!43819)))

(declare-fun e!43810 () Bool)

(assert (=> b!66798 (= res!36110 (not e!43810))))

(declare-fun res!36112 () Bool)

(assert (=> b!66798 (=> (not res!36112) (not e!43810))))

(assert (=> b!66798 (= res!36112 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!66799 () Bool)

(declare-fun e!43808 () Bool)

(assert (=> b!66799 (= e!43812 e!43808)))

(declare-fun res!36118 () Bool)

(assert (=> b!66799 (= res!36118 call!5586)))

(assert (=> b!66799 (=> (not res!36118) (not e!43808))))

(declare-fun b!66800 () Bool)

(assert (=> b!66800 (= e!43807 (not call!5584))))

(declare-fun b!66801 () Bool)

(assert (=> b!66801 (= e!43811 call!5587)))

(declare-fun b!66802 () Bool)

(declare-fun Unit!1850 () Unit!1838)

(assert (=> b!66802 (= e!43809 Unit!1850)))

(declare-fun b!66803 () Bool)

(assert (=> b!66803 (= e!43819 e!43815)))

(declare-fun res!36116 () Bool)

(assert (=> b!66803 (=> (not res!36116) (not e!43815))))

(assert (=> b!66803 (= res!36116 (contains!710 lt!28913 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66803 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun bm!5587 () Bool)

(assert (=> bm!5587 (= call!5586 (contains!710 lt!28913 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66804 () Bool)

(assert (=> b!66804 (= e!43810 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66805 () Bool)

(assert (=> b!66805 (= e!43808 (= (apply!72 lt!28913 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))))

(assert (= (and d!13815 c!9242) b!66788))

(assert (= (and d!13815 (not c!9242)) b!66791))

(assert (= (and b!66791 c!9241) b!66785))

(assert (= (and b!66791 (not c!9241)) b!66796))

(assert (= (and b!66796 c!9244) b!66786))

(assert (= (and b!66796 (not c!9244)) b!66801))

(assert (= (or b!66786 b!66801) bm!5583))

(assert (= (or b!66785 bm!5583) bm!5586))

(assert (= (or b!66785 b!66786) bm!5584))

(assert (= (or b!66788 bm!5586) bm!5581))

(assert (= (or b!66788 bm!5584) bm!5585))

(assert (= (and d!13815 res!36117) b!66797))

(assert (= (and d!13815 c!9243) b!66789))

(assert (= (and d!13815 (not c!9243)) b!66802))

(assert (= (and d!13815 res!36115) b!66798))

(assert (= (and b!66798 res!36112) b!66804))

(assert (= (and b!66798 (not res!36110)) b!66803))

(assert (= (and b!66803 res!36116) b!66790))

(assert (= (and b!66798 res!36113) b!66793))

(assert (= (and b!66793 c!9240) b!66799))

(assert (= (and b!66793 (not c!9240)) b!66792))

(assert (= (and b!66799 res!36118) b!66805))

(assert (= (or b!66799 b!66792) bm!5587))

(assert (= (and b!66793 res!36114) b!66794))

(assert (= (and b!66794 c!9239) b!66795))

(assert (= (and b!66794 (not c!9239)) b!66800))

(assert (= (and b!66795 res!36111) b!66787))

(assert (= (or b!66795 b!66800) bm!5582))

(declare-fun b_lambda!2993 () Bool)

(assert (=> (not b_lambda!2993) (not b!66790)))

(declare-fun t!4955 () Bool)

(declare-fun tb!1465 () Bool)

(assert (=> (and b!66357 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16)) t!4955) tb!1465))

(declare-fun result!2591 () Bool)

(assert (=> tb!1465 (= result!2591 tp_is_empty!2451)))

(assert (=> b!66790 t!4955))

(declare-fun b_and!4131 () Bool)

(assert (= b_and!4127 (and (=> t!4955 result!2591) b_and!4131)))

(declare-fun t!4957 () Bool)

(declare-fun tb!1467 () Bool)

(assert (=> (and b!66361 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 newMap!16)) t!4957) tb!1467))

(declare-fun result!2593 () Bool)

(assert (= result!2593 result!2591))

(assert (=> b!66790 t!4957))

(declare-fun b_and!4133 () Bool)

(assert (= b_and!4129 (and (=> t!4957 result!2593) b_and!4133)))

(declare-fun m!61441 () Bool)

(assert (=> b!66789 m!61441))

(declare-fun m!61443 () Bool)

(assert (=> b!66789 m!61443))

(declare-fun m!61445 () Bool)

(assert (=> b!66789 m!61445))

(declare-fun m!61447 () Bool)

(assert (=> b!66789 m!61447))

(declare-fun m!61449 () Bool)

(assert (=> b!66789 m!61449))

(declare-fun m!61451 () Bool)

(assert (=> b!66789 m!61451))

(declare-fun m!61453 () Bool)

(assert (=> b!66789 m!61453))

(declare-fun m!61455 () Bool)

(assert (=> b!66789 m!61455))

(declare-fun m!61457 () Bool)

(assert (=> b!66789 m!61457))

(declare-fun m!61459 () Bool)

(assert (=> b!66789 m!61459))

(declare-fun m!61461 () Bool)

(assert (=> b!66789 m!61461))

(assert (=> b!66789 m!61449))

(assert (=> b!66789 m!61457))

(declare-fun m!61463 () Bool)

(assert (=> b!66789 m!61463))

(declare-fun m!61465 () Bool)

(assert (=> b!66789 m!61465))

(declare-fun m!61467 () Bool)

(assert (=> b!66789 m!61467))

(assert (=> b!66789 m!61467))

(declare-fun m!61469 () Bool)

(assert (=> b!66789 m!61469))

(assert (=> b!66789 m!61447))

(declare-fun m!61471 () Bool)

(assert (=> b!66789 m!61471))

(declare-fun m!61473 () Bool)

(assert (=> b!66789 m!61473))

(declare-fun m!61475 () Bool)

(assert (=> b!66787 m!61475))

(declare-fun m!61477 () Bool)

(assert (=> b!66805 m!61477))

(assert (=> b!66804 m!61465))

(assert (=> b!66804 m!61465))

(declare-fun m!61479 () Bool)

(assert (=> b!66804 m!61479))

(declare-fun m!61481 () Bool)

(assert (=> b!66788 m!61481))

(assert (=> bm!5581 m!61461))

(declare-fun m!61483 () Bool)

(assert (=> bm!5582 m!61483))

(assert (=> b!66797 m!61465))

(assert (=> b!66797 m!61465))

(assert (=> b!66797 m!61479))

(declare-fun m!61485 () Bool)

(assert (=> d!13815 m!61485))

(declare-fun m!61487 () Bool)

(assert (=> bm!5585 m!61487))

(declare-fun m!61489 () Bool)

(assert (=> bm!5587 m!61489))

(assert (=> b!66790 m!61465))

(declare-fun m!61491 () Bool)

(assert (=> b!66790 m!61491))

(assert (=> b!66790 m!61465))

(declare-fun m!61493 () Bool)

(assert (=> b!66790 m!61493))

(declare-fun m!61495 () Bool)

(assert (=> b!66790 m!61495))

(assert (=> b!66790 m!61495))

(assert (=> b!66790 m!61491))

(declare-fun m!61497 () Bool)

(assert (=> b!66790 m!61497))

(assert (=> b!66803 m!61465))

(assert (=> b!66803 m!61465))

(declare-fun m!61499 () Bool)

(assert (=> b!66803 m!61499))

(assert (=> bm!5530 d!13815))

(declare-fun d!13817 () Bool)

(declare-fun lt!28917 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!71 (List!1465) (InoxSet (_ BitVec 64)))

(assert (=> d!13817 (= lt!28917 (select (content!71 Nil!1462) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!43825 () Bool)

(assert (=> d!13817 (= lt!28917 e!43825)))

(declare-fun res!36124 () Bool)

(assert (=> d!13817 (=> (not res!36124) (not e!43825))))

(assert (=> d!13817 (= res!36124 ((_ is Cons!1461) Nil!1462))))

(assert (=> d!13817 (= (contains!713 Nil!1462 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!28917)))

(declare-fun b!66810 () Bool)

(declare-fun e!43824 () Bool)

(assert (=> b!66810 (= e!43825 e!43824)))

(declare-fun res!36123 () Bool)

(assert (=> b!66810 (=> res!36123 e!43824)))

(assert (=> b!66810 (= res!36123 (= (h!2045 Nil!1462) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66811 () Bool)

(assert (=> b!66811 (= e!43824 (contains!713 (t!4947 Nil!1462) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!13817 res!36124) b!66810))

(assert (= (and b!66810 (not res!36123)) b!66811))

(declare-fun m!61501 () Bool)

(assert (=> d!13817 m!61501))

(assert (=> d!13817 m!61065))

(declare-fun m!61503 () Bool)

(assert (=> d!13817 m!61503))

(assert (=> b!66811 m!61065))

(declare-fun m!61505 () Bool)

(assert (=> b!66811 m!61505))

(assert (=> b!66518 d!13817))

(declare-fun d!13819 () Bool)

(declare-fun get!1120 (Option!136) V!2915)

(assert (=> d!13819 (= (apply!72 lt!28698 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1120 (getValueByKey!130 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2867 () Bool)

(assert (= bs!2867 d!13819))

(assert (=> bs!2867 m!61229))

(declare-fun m!61507 () Bool)

(assert (=> bs!2867 m!61507))

(assert (=> bs!2867 m!61507))

(declare-fun m!61509 () Bool)

(assert (=> bs!2867 m!61509))

(assert (=> b!66491 d!13819))

(declare-fun d!13821 () Bool)

(declare-fun c!9245 () Bool)

(assert (=> d!13821 (= c!9245 ((_ is ValueCellFull!882) (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!43826 () V!2915)

(assert (=> d!13821 (= (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!43826)))

(declare-fun b!66812 () Bool)

(assert (=> b!66812 (= e!43826 (get!1118 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66813 () Bool)

(assert (=> b!66813 (= e!43826 (get!1119 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13821 c!9245) b!66812))

(assert (= (and d!13821 (not c!9245)) b!66813))

(assert (=> b!66812 m!61227))

(assert (=> b!66812 m!61089))

(declare-fun m!61511 () Bool)

(assert (=> b!66812 m!61511))

(assert (=> b!66813 m!61227))

(assert (=> b!66813 m!61089))

(declare-fun m!61513 () Bool)

(assert (=> b!66813 m!61513))

(assert (=> b!66491 d!13821))

(declare-fun d!13823 () Bool)

(declare-fun e!43828 () Bool)

(assert (=> d!13823 e!43828))

(declare-fun res!36125 () Bool)

(assert (=> d!13823 (=> res!36125 e!43828)))

(declare-fun lt!28920 () Bool)

(assert (=> d!13823 (= res!36125 (not lt!28920))))

(declare-fun lt!28918 () Bool)

(assert (=> d!13823 (= lt!28920 lt!28918)))

(declare-fun lt!28921 () Unit!1838)

(declare-fun e!43827 () Unit!1838)

(assert (=> d!13823 (= lt!28921 e!43827)))

(declare-fun c!9246 () Bool)

(assert (=> d!13823 (= c!9246 lt!28918)))

(assert (=> d!13823 (= lt!28918 (containsKey!134 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13823 (= (contains!710 lt!28877 #b1000000000000000000000000000000000000000000000000000000000000000) lt!28920)))

(declare-fun b!66814 () Bool)

(declare-fun lt!28919 () Unit!1838)

(assert (=> b!66814 (= e!43827 lt!28919)))

(assert (=> b!66814 (= lt!28919 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66814 (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66815 () Bool)

(declare-fun Unit!1851 () Unit!1838)

(assert (=> b!66815 (= e!43827 Unit!1851)))

(declare-fun b!66816 () Bool)

(assert (=> b!66816 (= e!43828 (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13823 c!9246) b!66814))

(assert (= (and d!13823 (not c!9246)) b!66815))

(assert (= (and d!13823 (not res!36125)) b!66816))

(declare-fun m!61515 () Bool)

(assert (=> d!13823 m!61515))

(declare-fun m!61517 () Bool)

(assert (=> b!66814 m!61517))

(declare-fun m!61519 () Bool)

(assert (=> b!66814 m!61519))

(assert (=> b!66814 m!61519))

(declare-fun m!61521 () Bool)

(assert (=> b!66814 m!61521))

(assert (=> b!66816 m!61519))

(assert (=> b!66816 m!61519))

(assert (=> b!66816 m!61521))

(assert (=> bm!5566 d!13823))

(declare-fun d!13825 () Bool)

(assert (=> d!13825 (= (apply!72 lt!28877 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1120 (getValueByKey!130 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2868 () Bool)

(assert (= bs!2868 d!13825))

(assert (=> bs!2868 m!61437))

(assert (=> bs!2868 m!61437))

(declare-fun m!61523 () Bool)

(assert (=> bs!2868 m!61523))

(assert (=> b!66720 d!13825))

(assert (=> bm!5532 d!13801))

(declare-fun d!13827 () Bool)

(assert (=> d!13827 (= (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (and (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66520 d!13827))

(declare-fun d!13829 () Bool)

(declare-fun e!43829 () Bool)

(assert (=> d!13829 e!43829))

(declare-fun res!36127 () Bool)

(assert (=> d!13829 (=> (not res!36127) (not e!43829))))

(declare-fun lt!28922 () ListLongMap!1403)

(assert (=> d!13829 (= res!36127 (contains!710 lt!28922 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!28923 () List!1466)

(assert (=> d!13829 (= lt!28922 (ListLongMap!1404 lt!28923))))

(declare-fun lt!28924 () Unit!1838)

(declare-fun lt!28925 () Unit!1838)

(assert (=> d!13829 (= lt!28924 lt!28925)))

(assert (=> d!13829 (= (getValueByKey!130 lt!28923 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13829 (= lt!28925 (lemmaContainsTupThenGetReturnValue!47 lt!28923 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13829 (= lt!28923 (insertStrictlySorted!50 (toList!717 call!5572) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13829 (= (+!89 call!5572 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28922)))

(declare-fun b!66817 () Bool)

(declare-fun res!36126 () Bool)

(assert (=> b!66817 (=> (not res!36126) (not e!43829))))

(assert (=> b!66817 (= res!36126 (= (getValueByKey!130 (toList!717 lt!28922) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66818 () Bool)

(assert (=> b!66818 (= e!43829 (contains!712 (toList!717 lt!28922) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13829 res!36127) b!66817))

(assert (= (and b!66817 res!36126) b!66818))

(declare-fun m!61525 () Bool)

(assert (=> d!13829 m!61525))

(declare-fun m!61527 () Bool)

(assert (=> d!13829 m!61527))

(declare-fun m!61529 () Bool)

(assert (=> d!13829 m!61529))

(declare-fun m!61531 () Bool)

(assert (=> d!13829 m!61531))

(declare-fun m!61533 () Bool)

(assert (=> b!66817 m!61533))

(declare-fun m!61535 () Bool)

(assert (=> b!66818 m!61535))

(assert (=> b!66703 d!13829))

(declare-fun b!66835 () Bool)

(declare-fun lt!28930 () SeekEntryResult!233)

(assert (=> b!66835 (and (bvsge (index!3060 lt!28930) #b00000000000000000000000000000000) (bvslt (index!3060 lt!28930) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun res!36138 () Bool)

(assert (=> b!66835 (= res!36138 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3060 lt!28930)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!43839 () Bool)

(assert (=> b!66835 (=> (not res!36138) (not e!43839))))

(declare-fun b!66836 () Bool)

(declare-fun e!43838 () Bool)

(assert (=> b!66836 (= e!43838 e!43839)))

(declare-fun res!36139 () Bool)

(declare-fun call!5596 () Bool)

(assert (=> b!66836 (= res!36139 call!5596)))

(assert (=> b!66836 (=> (not res!36139) (not e!43839))))

(declare-fun b!66837 () Bool)

(declare-fun res!36137 () Bool)

(declare-fun e!43841 () Bool)

(assert (=> b!66837 (=> (not res!36137) (not e!43841))))

(assert (=> b!66837 (= res!36137 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3063 lt!28930)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66837 (and (bvsge (index!3063 lt!28930) #b00000000000000000000000000000000) (bvslt (index!3063 lt!28930) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!66838 () Bool)

(declare-fun call!5595 () Bool)

(assert (=> b!66838 (= e!43839 (not call!5595))))

(declare-fun bm!5592 () Bool)

(assert (=> bm!5592 (= call!5595 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!5593 () Bool)

(declare-fun c!9252 () Bool)

(assert (=> bm!5593 (= call!5596 (inRange!0 (ite c!9252 (index!3060 lt!28930) (index!3063 lt!28930)) (mask!6082 newMap!16)))))

(declare-fun d!13831 () Bool)

(assert (=> d!13831 e!43838))

(assert (=> d!13831 (= c!9252 ((_ is MissingZero!233) lt!28930))))

(assert (=> d!13831 (= lt!28930 (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun lt!28931 () Unit!1838)

(declare-fun choose!368 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) Int) Unit!1838)

(assert (=> d!13831 (= lt!28931 (choose!368 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(assert (=> d!13831 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13831 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)) lt!28931)))

(declare-fun b!66839 () Bool)

(assert (=> b!66839 (= e!43841 (not call!5595))))

(declare-fun b!66840 () Bool)

(declare-fun res!36136 () Bool)

(assert (=> b!66840 (=> (not res!36136) (not e!43841))))

(assert (=> b!66840 (= res!36136 call!5596)))

(declare-fun e!43840 () Bool)

(assert (=> b!66840 (= e!43840 e!43841)))

(declare-fun b!66841 () Bool)

(assert (=> b!66841 (= e!43838 e!43840)))

(declare-fun c!9251 () Bool)

(assert (=> b!66841 (= c!9251 ((_ is MissingVacant!233) lt!28930))))

(declare-fun b!66842 () Bool)

(assert (=> b!66842 (= e!43840 ((_ is Undefined!233) lt!28930))))

(assert (= (and d!13831 c!9252) b!66836))

(assert (= (and d!13831 (not c!9252)) b!66841))

(assert (= (and b!66836 res!36139) b!66835))

(assert (= (and b!66835 res!36138) b!66838))

(assert (= (and b!66841 c!9251) b!66840))

(assert (= (and b!66841 (not c!9251)) b!66842))

(assert (= (and b!66840 res!36136) b!66837))

(assert (= (and b!66837 res!36137) b!66839))

(assert (= (or b!66836 b!66840) bm!5593))

(assert (= (or b!66838 b!66839) bm!5592))

(declare-fun m!61537 () Bool)

(assert (=> b!66837 m!61537))

(assert (=> d!13831 m!61065))

(assert (=> d!13831 m!61305))

(assert (=> d!13831 m!61065))

(declare-fun m!61539 () Bool)

(assert (=> d!13831 m!61539))

(assert (=> d!13831 m!61485))

(assert (=> bm!5592 m!61065))

(assert (=> bm!5592 m!61309))

(declare-fun m!61541 () Bool)

(assert (=> bm!5593 m!61541))

(declare-fun m!61543 () Bool)

(assert (=> b!66835 m!61543))

(assert (=> bm!5546 d!13831))

(declare-fun d!13833 () Bool)

(declare-fun e!43843 () Bool)

(assert (=> d!13833 e!43843))

(declare-fun res!36140 () Bool)

(assert (=> d!13833 (=> res!36140 e!43843)))

(declare-fun lt!28934 () Bool)

(assert (=> d!13833 (= res!36140 (not lt!28934))))

(declare-fun lt!28932 () Bool)

(assert (=> d!13833 (= lt!28934 lt!28932)))

(declare-fun lt!28935 () Unit!1838)

(declare-fun e!43842 () Unit!1838)

(assert (=> d!13833 (= lt!28935 e!43842)))

(declare-fun c!9253 () Bool)

(assert (=> d!13833 (= c!9253 lt!28932)))

(assert (=> d!13833 (= lt!28932 (containsKey!134 (toList!717 lt!28707) (_1!1057 lt!28624)))))

(assert (=> d!13833 (= (contains!710 lt!28707 (_1!1057 lt!28624)) lt!28934)))

(declare-fun b!66843 () Bool)

(declare-fun lt!28933 () Unit!1838)

(assert (=> b!66843 (= e!43842 lt!28933)))

(assert (=> b!66843 (= lt!28933 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28707) (_1!1057 lt!28624)))))

(assert (=> b!66843 (isDefined!83 (getValueByKey!130 (toList!717 lt!28707) (_1!1057 lt!28624)))))

(declare-fun b!66844 () Bool)

(declare-fun Unit!1852 () Unit!1838)

(assert (=> b!66844 (= e!43842 Unit!1852)))

(declare-fun b!66845 () Bool)

(assert (=> b!66845 (= e!43843 (isDefined!83 (getValueByKey!130 (toList!717 lt!28707) (_1!1057 lt!28624))))))

(assert (= (and d!13833 c!9253) b!66843))

(assert (= (and d!13833 (not c!9253)) b!66844))

(assert (= (and d!13833 (not res!36140)) b!66845))

(declare-fun m!61545 () Bool)

(assert (=> d!13833 m!61545))

(declare-fun m!61547 () Bool)

(assert (=> b!66843 m!61547))

(assert (=> b!66843 m!61273))

(assert (=> b!66843 m!61273))

(declare-fun m!61549 () Bool)

(assert (=> b!66843 m!61549))

(assert (=> b!66845 m!61273))

(assert (=> b!66845 m!61273))

(assert (=> b!66845 m!61549))

(assert (=> d!13775 d!13833))

(declare-fun d!13835 () Bool)

(declare-fun c!9254 () Bool)

(assert (=> d!13835 (= c!9254 (and ((_ is Cons!1462) lt!28708) (= (_1!1057 (h!2046 lt!28708)) (_1!1057 lt!28624))))))

(declare-fun e!43844 () Option!136)

(assert (=> d!13835 (= (getValueByKey!130 lt!28708 (_1!1057 lt!28624)) e!43844)))

(declare-fun b!66847 () Bool)

(declare-fun e!43845 () Option!136)

(assert (=> b!66847 (= e!43844 e!43845)))

(declare-fun c!9255 () Bool)

(assert (=> b!66847 (= c!9255 (and ((_ is Cons!1462) lt!28708) (not (= (_1!1057 (h!2046 lt!28708)) (_1!1057 lt!28624)))))))

(declare-fun b!66846 () Bool)

(assert (=> b!66846 (= e!43844 (Some!135 (_2!1057 (h!2046 lt!28708))))))

(declare-fun b!66848 () Bool)

(assert (=> b!66848 (= e!43845 (getValueByKey!130 (t!4948 lt!28708) (_1!1057 lt!28624)))))

(declare-fun b!66849 () Bool)

(assert (=> b!66849 (= e!43845 None!134)))

(assert (= (and d!13835 c!9254) b!66846))

(assert (= (and d!13835 (not c!9254)) b!66847))

(assert (= (and b!66847 c!9255) b!66848))

(assert (= (and b!66847 (not c!9255)) b!66849))

(declare-fun m!61551 () Bool)

(assert (=> b!66848 m!61551))

(assert (=> d!13775 d!13835))

(declare-fun d!13837 () Bool)

(assert (=> d!13837 (= (getValueByKey!130 lt!28708 (_1!1057 lt!28624)) (Some!135 (_2!1057 lt!28624)))))

(declare-fun lt!28936 () Unit!1838)

(assert (=> d!13837 (= lt!28936 (choose!367 lt!28708 (_1!1057 lt!28624) (_2!1057 lt!28624)))))

(declare-fun e!43846 () Bool)

(assert (=> d!13837 e!43846))

(declare-fun res!36141 () Bool)

(assert (=> d!13837 (=> (not res!36141) (not e!43846))))

(assert (=> d!13837 (= res!36141 (isStrictlySorted!289 lt!28708))))

(assert (=> d!13837 (= (lemmaContainsTupThenGetReturnValue!47 lt!28708 (_1!1057 lt!28624) (_2!1057 lt!28624)) lt!28936)))

(declare-fun b!66850 () Bool)

(declare-fun res!36142 () Bool)

(assert (=> b!66850 (=> (not res!36142) (not e!43846))))

(assert (=> b!66850 (= res!36142 (containsKey!134 lt!28708 (_1!1057 lt!28624)))))

(declare-fun b!66851 () Bool)

(assert (=> b!66851 (= e!43846 (contains!712 lt!28708 (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(assert (= (and d!13837 res!36141) b!66850))

(assert (= (and b!66850 res!36142) b!66851))

(assert (=> d!13837 m!61267))

(declare-fun m!61553 () Bool)

(assert (=> d!13837 m!61553))

(declare-fun m!61555 () Bool)

(assert (=> d!13837 m!61555))

(declare-fun m!61557 () Bool)

(assert (=> b!66850 m!61557))

(declare-fun m!61559 () Bool)

(assert (=> b!66851 m!61559))

(assert (=> d!13775 d!13837))

(declare-fun b!66852 () Bool)

(declare-fun e!43849 () List!1466)

(declare-fun call!5597 () List!1466)

(assert (=> b!66852 (= e!43849 call!5597)))

(declare-fun bm!5594 () Bool)

(declare-fun call!5598 () List!1466)

(declare-fun call!5599 () List!1466)

(assert (=> bm!5594 (= call!5598 call!5599)))

(declare-fun b!66853 () Bool)

(declare-fun e!43851 () Bool)

(declare-fun lt!28937 () List!1466)

(assert (=> b!66853 (= e!43851 (contains!712 lt!28937 (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun b!66854 () Bool)

(assert (=> b!66854 (= e!43849 call!5597)))

(declare-fun b!66855 () Bool)

(declare-fun e!43847 () List!1466)

(assert (=> b!66855 (= e!43847 (insertStrictlySorted!50 (t!4948 (toList!717 (+!89 lt!28620 lt!28617))) (_1!1057 lt!28624) (_2!1057 lt!28624)))))

(declare-fun b!66856 () Bool)

(declare-fun e!43850 () List!1466)

(assert (=> b!66856 (= e!43850 call!5599)))

(declare-fun c!9256 () Bool)

(declare-fun c!9258 () Bool)

(declare-fun b!66857 () Bool)

(assert (=> b!66857 (= e!43847 (ite c!9256 (t!4948 (toList!717 (+!89 lt!28620 lt!28617))) (ite c!9258 (Cons!1462 (h!2046 (toList!717 (+!89 lt!28620 lt!28617))) (t!4948 (toList!717 (+!89 lt!28620 lt!28617)))) Nil!1463)))))

(declare-fun d!13839 () Bool)

(assert (=> d!13839 e!43851))

(declare-fun res!36144 () Bool)

(assert (=> d!13839 (=> (not res!36144) (not e!43851))))

(assert (=> d!13839 (= res!36144 (isStrictlySorted!289 lt!28937))))

(assert (=> d!13839 (= lt!28937 e!43850)))

(declare-fun c!9259 () Bool)

(assert (=> d!13839 (= c!9259 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 lt!28617))) (bvslt (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 lt!28617)))) (_1!1057 lt!28624))))))

(assert (=> d!13839 (isStrictlySorted!289 (toList!717 (+!89 lt!28620 lt!28617)))))

(assert (=> d!13839 (= (insertStrictlySorted!50 (toList!717 (+!89 lt!28620 lt!28617)) (_1!1057 lt!28624) (_2!1057 lt!28624)) lt!28937)))

(declare-fun bm!5595 () Bool)

(assert (=> bm!5595 (= call!5597 call!5598)))

(declare-fun b!66858 () Bool)

(declare-fun res!36143 () Bool)

(assert (=> b!66858 (=> (not res!36143) (not e!43851))))

(assert (=> b!66858 (= res!36143 (containsKey!134 lt!28937 (_1!1057 lt!28624)))))

(declare-fun b!66859 () Bool)

(declare-fun e!43848 () List!1466)

(assert (=> b!66859 (= e!43848 call!5598)))

(declare-fun b!66860 () Bool)

(assert (=> b!66860 (= c!9258 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 lt!28617))) (bvsgt (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 lt!28617)))) (_1!1057 lt!28624))))))

(assert (=> b!66860 (= e!43848 e!43849)))

(declare-fun b!66861 () Bool)

(assert (=> b!66861 (= e!43850 e!43848)))

(assert (=> b!66861 (= c!9256 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 lt!28617))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 lt!28617)))) (_1!1057 lt!28624))))))

(declare-fun bm!5596 () Bool)

(assert (=> bm!5596 (= call!5599 ($colon$colon!63 e!43847 (ite c!9259 (h!2046 (toList!717 (+!89 lt!28620 lt!28617))) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624)))))))

(declare-fun c!9257 () Bool)

(assert (=> bm!5596 (= c!9257 c!9259)))

(assert (= (and d!13839 c!9259) b!66856))

(assert (= (and d!13839 (not c!9259)) b!66861))

(assert (= (and b!66861 c!9256) b!66859))

(assert (= (and b!66861 (not c!9256)) b!66860))

(assert (= (and b!66860 c!9258) b!66854))

(assert (= (and b!66860 (not c!9258)) b!66852))

(assert (= (or b!66854 b!66852) bm!5595))

(assert (= (or b!66859 bm!5595) bm!5594))

(assert (= (or b!66856 bm!5594) bm!5596))

(assert (= (and bm!5596 c!9257) b!66855))

(assert (= (and bm!5596 (not c!9257)) b!66857))

(assert (= (and d!13839 res!36144) b!66858))

(assert (= (and b!66858 res!36143) b!66853))

(declare-fun m!61561 () Bool)

(assert (=> b!66853 m!61561))

(declare-fun m!61563 () Bool)

(assert (=> d!13839 m!61563))

(declare-fun m!61565 () Bool)

(assert (=> d!13839 m!61565))

(declare-fun m!61567 () Bool)

(assert (=> bm!5596 m!61567))

(declare-fun m!61569 () Bool)

(assert (=> b!66858 m!61569))

(declare-fun m!61571 () Bool)

(assert (=> b!66855 m!61571))

(assert (=> d!13775 d!13839))

(declare-fun d!13841 () Bool)

(declare-fun e!43853 () Bool)

(assert (=> d!13841 e!43853))

(declare-fun res!36145 () Bool)

(assert (=> d!13841 (=> res!36145 e!43853)))

(declare-fun lt!28940 () Bool)

(assert (=> d!13841 (= res!36145 (not lt!28940))))

(declare-fun lt!28938 () Bool)

(assert (=> d!13841 (= lt!28940 lt!28938)))

(declare-fun lt!28941 () Unit!1838)

(declare-fun e!43852 () Unit!1838)

(assert (=> d!13841 (= lt!28941 e!43852)))

(declare-fun c!9260 () Bool)

(assert (=> d!13841 (= c!9260 lt!28938)))

(assert (=> d!13841 (= lt!28938 (containsKey!134 (toList!717 lt!28671) (_1!1057 lt!28617)))))

(assert (=> d!13841 (= (contains!710 lt!28671 (_1!1057 lt!28617)) lt!28940)))

(declare-fun b!66862 () Bool)

(declare-fun lt!28939 () Unit!1838)

(assert (=> b!66862 (= e!43852 lt!28939)))

(assert (=> b!66862 (= lt!28939 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28671) (_1!1057 lt!28617)))))

(assert (=> b!66862 (isDefined!83 (getValueByKey!130 (toList!717 lt!28671) (_1!1057 lt!28617)))))

(declare-fun b!66863 () Bool)

(declare-fun Unit!1853 () Unit!1838)

(assert (=> b!66863 (= e!43852 Unit!1853)))

(declare-fun b!66864 () Bool)

(assert (=> b!66864 (= e!43853 (isDefined!83 (getValueByKey!130 (toList!717 lt!28671) (_1!1057 lt!28617))))))

(assert (= (and d!13841 c!9260) b!66862))

(assert (= (and d!13841 (not c!9260)) b!66863))

(assert (= (and d!13841 (not res!36145)) b!66864))

(declare-fun m!61573 () Bool)

(assert (=> d!13841 m!61573))

(declare-fun m!61575 () Bool)

(assert (=> b!66862 m!61575))

(assert (=> b!66862 m!61199))

(assert (=> b!66862 m!61199))

(declare-fun m!61577 () Bool)

(assert (=> b!66862 m!61577))

(assert (=> b!66864 m!61199))

(assert (=> b!66864 m!61199))

(assert (=> b!66864 m!61577))

(assert (=> d!13765 d!13841))

(declare-fun d!13843 () Bool)

(declare-fun c!9261 () Bool)

(assert (=> d!13843 (= c!9261 (and ((_ is Cons!1462) lt!28672) (= (_1!1057 (h!2046 lt!28672)) (_1!1057 lt!28617))))))

(declare-fun e!43854 () Option!136)

(assert (=> d!13843 (= (getValueByKey!130 lt!28672 (_1!1057 lt!28617)) e!43854)))

(declare-fun b!66866 () Bool)

(declare-fun e!43855 () Option!136)

(assert (=> b!66866 (= e!43854 e!43855)))

(declare-fun c!9262 () Bool)

(assert (=> b!66866 (= c!9262 (and ((_ is Cons!1462) lt!28672) (not (= (_1!1057 (h!2046 lt!28672)) (_1!1057 lt!28617)))))))

(declare-fun b!66865 () Bool)

(assert (=> b!66865 (= e!43854 (Some!135 (_2!1057 (h!2046 lt!28672))))))

(declare-fun b!66867 () Bool)

(assert (=> b!66867 (= e!43855 (getValueByKey!130 (t!4948 lt!28672) (_1!1057 lt!28617)))))

(declare-fun b!66868 () Bool)

(assert (=> b!66868 (= e!43855 None!134)))

(assert (= (and d!13843 c!9261) b!66865))

(assert (= (and d!13843 (not c!9261)) b!66866))

(assert (= (and b!66866 c!9262) b!66867))

(assert (= (and b!66866 (not c!9262)) b!66868))

(declare-fun m!61579 () Bool)

(assert (=> b!66867 m!61579))

(assert (=> d!13765 d!13843))

(declare-fun d!13845 () Bool)

(assert (=> d!13845 (= (getValueByKey!130 lt!28672 (_1!1057 lt!28617)) (Some!135 (_2!1057 lt!28617)))))

(declare-fun lt!28942 () Unit!1838)

(assert (=> d!13845 (= lt!28942 (choose!367 lt!28672 (_1!1057 lt!28617) (_2!1057 lt!28617)))))

(declare-fun e!43856 () Bool)

(assert (=> d!13845 e!43856))

(declare-fun res!36146 () Bool)

(assert (=> d!13845 (=> (not res!36146) (not e!43856))))

(assert (=> d!13845 (= res!36146 (isStrictlySorted!289 lt!28672))))

(assert (=> d!13845 (= (lemmaContainsTupThenGetReturnValue!47 lt!28672 (_1!1057 lt!28617) (_2!1057 lt!28617)) lt!28942)))

(declare-fun b!66869 () Bool)

(declare-fun res!36147 () Bool)

(assert (=> b!66869 (=> (not res!36147) (not e!43856))))

(assert (=> b!66869 (= res!36147 (containsKey!134 lt!28672 (_1!1057 lt!28617)))))

(declare-fun b!66870 () Bool)

(assert (=> b!66870 (= e!43856 (contains!712 lt!28672 (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(assert (= (and d!13845 res!36146) b!66869))

(assert (= (and b!66869 res!36147) b!66870))

(assert (=> d!13845 m!61193))

(declare-fun m!61581 () Bool)

(assert (=> d!13845 m!61581))

(declare-fun m!61583 () Bool)

(assert (=> d!13845 m!61583))

(declare-fun m!61585 () Bool)

(assert (=> b!66869 m!61585))

(declare-fun m!61587 () Bool)

(assert (=> b!66870 m!61587))

(assert (=> d!13765 d!13845))

(declare-fun b!66871 () Bool)

(declare-fun e!43859 () List!1466)

(declare-fun call!5600 () List!1466)

(assert (=> b!66871 (= e!43859 call!5600)))

(declare-fun bm!5597 () Bool)

(declare-fun call!5601 () List!1466)

(declare-fun call!5602 () List!1466)

(assert (=> bm!5597 (= call!5601 call!5602)))

(declare-fun b!66872 () Bool)

(declare-fun e!43861 () Bool)

(declare-fun lt!28943 () List!1466)

(assert (=> b!66872 (= e!43861 (contains!712 lt!28943 (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun b!66873 () Bool)

(assert (=> b!66873 (= e!43859 call!5600)))

(declare-fun b!66874 () Bool)

(declare-fun e!43857 () List!1466)

(assert (=> b!66874 (= e!43857 (insertStrictlySorted!50 (t!4948 (toList!717 (+!89 lt!28620 lt!28624))) (_1!1057 lt!28617) (_2!1057 lt!28617)))))

(declare-fun b!66875 () Bool)

(declare-fun e!43860 () List!1466)

(assert (=> b!66875 (= e!43860 call!5602)))

(declare-fun b!66876 () Bool)

(declare-fun c!9265 () Bool)

(declare-fun c!9263 () Bool)

(assert (=> b!66876 (= e!43857 (ite c!9263 (t!4948 (toList!717 (+!89 lt!28620 lt!28624))) (ite c!9265 (Cons!1462 (h!2046 (toList!717 (+!89 lt!28620 lt!28624))) (t!4948 (toList!717 (+!89 lt!28620 lt!28624)))) Nil!1463)))))

(declare-fun d!13847 () Bool)

(assert (=> d!13847 e!43861))

(declare-fun res!36149 () Bool)

(assert (=> d!13847 (=> (not res!36149) (not e!43861))))

(assert (=> d!13847 (= res!36149 (isStrictlySorted!289 lt!28943))))

(assert (=> d!13847 (= lt!28943 e!43860)))

(declare-fun c!9266 () Bool)

(assert (=> d!13847 (= c!9266 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 lt!28624))) (bvslt (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 lt!28624)))) (_1!1057 lt!28617))))))

(assert (=> d!13847 (isStrictlySorted!289 (toList!717 (+!89 lt!28620 lt!28624)))))

(assert (=> d!13847 (= (insertStrictlySorted!50 (toList!717 (+!89 lt!28620 lt!28624)) (_1!1057 lt!28617) (_2!1057 lt!28617)) lt!28943)))

(declare-fun bm!5598 () Bool)

(assert (=> bm!5598 (= call!5600 call!5601)))

(declare-fun b!66877 () Bool)

(declare-fun res!36148 () Bool)

(assert (=> b!66877 (=> (not res!36148) (not e!43861))))

(assert (=> b!66877 (= res!36148 (containsKey!134 lt!28943 (_1!1057 lt!28617)))))

(declare-fun b!66878 () Bool)

(declare-fun e!43858 () List!1466)

(assert (=> b!66878 (= e!43858 call!5601)))

(declare-fun b!66879 () Bool)

(assert (=> b!66879 (= c!9265 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 lt!28624))) (bvsgt (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 lt!28624)))) (_1!1057 lt!28617))))))

(assert (=> b!66879 (= e!43858 e!43859)))

(declare-fun b!66880 () Bool)

(assert (=> b!66880 (= e!43860 e!43858)))

(assert (=> b!66880 (= c!9263 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 lt!28624))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 lt!28624)))) (_1!1057 lt!28617))))))

(declare-fun bm!5599 () Bool)

(assert (=> bm!5599 (= call!5602 ($colon$colon!63 e!43857 (ite c!9266 (h!2046 (toList!717 (+!89 lt!28620 lt!28624))) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617)))))))

(declare-fun c!9264 () Bool)

(assert (=> bm!5599 (= c!9264 c!9266)))

(assert (= (and d!13847 c!9266) b!66875))

(assert (= (and d!13847 (not c!9266)) b!66880))

(assert (= (and b!66880 c!9263) b!66878))

(assert (= (and b!66880 (not c!9263)) b!66879))

(assert (= (and b!66879 c!9265) b!66873))

(assert (= (and b!66879 (not c!9265)) b!66871))

(assert (= (or b!66873 b!66871) bm!5598))

(assert (= (or b!66878 bm!5598) bm!5597))

(assert (= (or b!66875 bm!5597) bm!5599))

(assert (= (and bm!5599 c!9264) b!66874))

(assert (= (and bm!5599 (not c!9264)) b!66876))

(assert (= (and d!13847 res!36149) b!66877))

(assert (= (and b!66877 res!36148) b!66872))

(declare-fun m!61589 () Bool)

(assert (=> b!66872 m!61589))

(declare-fun m!61591 () Bool)

(assert (=> d!13847 m!61591))

(declare-fun m!61593 () Bool)

(assert (=> d!13847 m!61593))

(declare-fun m!61595 () Bool)

(assert (=> bm!5599 m!61595))

(declare-fun m!61597 () Bool)

(assert (=> b!66877 m!61597))

(declare-fun m!61599 () Bool)

(assert (=> b!66874 m!61599))

(assert (=> d!13765 d!13847))

(declare-fun d!13849 () Bool)

(declare-fun e!43864 () Bool)

(assert (=> d!13849 e!43864))

(declare-fun res!36154 () Bool)

(assert (=> d!13849 (=> (not res!36154) (not e!43864))))

(declare-fun lt!28949 () SeekEntryResult!233)

(assert (=> d!13849 (= res!36154 ((_ is Found!233) lt!28949))))

(assert (=> d!13849 (= lt!28949 (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun lt!28948 () Unit!1838)

(declare-fun choose!369 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) Int) Unit!1838)

(assert (=> d!13849 (= lt!28948 (choose!369 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(assert (=> d!13849 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13849 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)) lt!28948)))

(declare-fun b!66885 () Bool)

(declare-fun res!36155 () Bool)

(assert (=> b!66885 (=> (not res!36155) (not e!43864))))

(assert (=> b!66885 (= res!36155 (inRange!0 (index!3061 lt!28949) (mask!6082 newMap!16)))))

(declare-fun b!66886 () Bool)

(assert (=> b!66886 (= e!43864 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28949)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!66886 (and (bvsge (index!3061 lt!28949) #b00000000000000000000000000000000) (bvslt (index!3061 lt!28949) (size!2070 (_keys!3787 newMap!16))))))

(assert (= (and d!13849 res!36154) b!66885))

(assert (= (and b!66885 res!36155) b!66886))

(assert (=> d!13849 m!61065))

(assert (=> d!13849 m!61305))

(assert (=> d!13849 m!61065))

(declare-fun m!61601 () Bool)

(assert (=> d!13849 m!61601))

(assert (=> d!13849 m!61485))

(declare-fun m!61603 () Bool)

(assert (=> b!66885 m!61603))

(declare-fun m!61605 () Bool)

(assert (=> b!66886 m!61605))

(assert (=> bm!5533 d!13849))

(declare-fun d!13851 () Bool)

(assert (=> d!13851 (= (apply!72 lt!28877 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1120 (getValueByKey!130 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2869 () Bool)

(assert (= bs!2869 d!13851))

(assert (=> bs!2869 m!61229))

(declare-fun m!61607 () Bool)

(assert (=> bs!2869 m!61607))

(assert (=> bs!2869 m!61607))

(declare-fun m!61609 () Bool)

(assert (=> bs!2869 m!61609))

(assert (=> b!66705 d!13851))

(assert (=> b!66705 d!13821))

(declare-fun d!13853 () Bool)

(declare-fun res!36156 () Bool)

(declare-fun e!43865 () Bool)

(assert (=> d!13853 (=> res!36156 e!43865)))

(assert (=> d!13853 (= res!36156 (= (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13853 (= (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000) e!43865)))

(declare-fun b!66887 () Bool)

(declare-fun e!43866 () Bool)

(assert (=> b!66887 (= e!43865 e!43866)))

(declare-fun res!36157 () Bool)

(assert (=> b!66887 (=> (not res!36157) (not e!43866))))

(assert (=> b!66887 (= res!36157 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!66888 () Bool)

(assert (=> b!66888 (= e!43866 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!13853 (not res!36156)) b!66887))

(assert (= (and b!66887 res!36157) b!66888))

(assert (=> d!13853 m!61465))

(assert (=> b!66888 m!61065))

(declare-fun m!61611 () Bool)

(assert (=> b!66888 m!61611))

(assert (=> bm!5538 d!13853))

(declare-fun d!13855 () Bool)

(declare-fun res!36158 () Bool)

(declare-fun e!43869 () Bool)

(assert (=> d!13855 (=> res!36158 e!43869)))

(assert (=> d!13855 (= res!36158 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!13855 (= (arrayNoDuplicates!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 Nil!1462) e!43869)))

(declare-fun bm!5600 () Bool)

(declare-fun call!5603 () Bool)

(declare-fun c!9267 () Bool)

(assert (=> bm!5600 (= call!5603 (arrayNoDuplicates!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9267 (Cons!1461 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) Nil!1462) Nil!1462)))))

(declare-fun b!66889 () Bool)

(declare-fun e!43870 () Bool)

(assert (=> b!66889 (= e!43870 (contains!713 Nil!1462 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66890 () Bool)

(declare-fun e!43868 () Bool)

(declare-fun e!43867 () Bool)

(assert (=> b!66890 (= e!43868 e!43867)))

(assert (=> b!66890 (= c!9267 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66891 () Bool)

(assert (=> b!66891 (= e!43869 e!43868)))

(declare-fun res!36160 () Bool)

(assert (=> b!66891 (=> (not res!36160) (not e!43868))))

(assert (=> b!66891 (= res!36160 (not e!43870))))

(declare-fun res!36159 () Bool)

(assert (=> b!66891 (=> (not res!36159) (not e!43870))))

(assert (=> b!66891 (= res!36159 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66892 () Bool)

(assert (=> b!66892 (= e!43867 call!5603)))

(declare-fun b!66893 () Bool)

(assert (=> b!66893 (= e!43867 call!5603)))

(assert (= (and d!13855 (not res!36158)) b!66891))

(assert (= (and b!66891 res!36159) b!66889))

(assert (= (and b!66891 res!36160) b!66890))

(assert (= (and b!66890 c!9267) b!66893))

(assert (= (and b!66890 (not c!9267)) b!66892))

(assert (= (or b!66893 b!66892) bm!5600))

(assert (=> bm!5600 m!61465))

(declare-fun m!61613 () Bool)

(assert (=> bm!5600 m!61613))

(assert (=> b!66889 m!61465))

(assert (=> b!66889 m!61465))

(declare-fun m!61615 () Bool)

(assert (=> b!66889 m!61615))

(assert (=> b!66890 m!61465))

(assert (=> b!66890 m!61465))

(assert (=> b!66890 m!61479))

(assert (=> b!66891 m!61465))

(assert (=> b!66891 m!61465))

(assert (=> b!66891 m!61479))

(assert (=> b!66447 d!13855))

(declare-fun bm!5601 () Bool)

(declare-fun call!5604 () ListLongMap!1403)

(assert (=> bm!5601 (= call!5604 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!66894 () Bool)

(declare-fun e!43873 () ListLongMap!1403)

(assert (=> b!66894 (= e!43873 (ListLongMap!1404 Nil!1463))))

(declare-fun b!66895 () Bool)

(declare-fun lt!28950 () Unit!1838)

(declare-fun lt!28956 () Unit!1838)

(assert (=> b!66895 (= lt!28950 lt!28956)))

(declare-fun lt!28954 () ListLongMap!1403)

(declare-fun lt!28952 () (_ BitVec 64))

(declare-fun lt!28953 () (_ BitVec 64))

(declare-fun lt!28951 () V!2915)

(assert (=> b!66895 (not (contains!710 (+!89 lt!28954 (tuple2!2093 lt!28952 lt!28951)) lt!28953))))

(assert (=> b!66895 (= lt!28956 (addStillNotContains!21 lt!28954 lt!28952 lt!28951 lt!28953))))

(assert (=> b!66895 (= lt!28953 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!66895 (= lt!28951 (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!66895 (= lt!28952 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!66895 (= lt!28954 call!5604)))

(declare-fun e!43876 () ListLongMap!1403)

(assert (=> b!66895 (= e!43876 (+!89 call!5604 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!66896 () Bool)

(assert (=> b!66896 (= e!43873 e!43876)))

(declare-fun c!9271 () Bool)

(assert (=> b!66896 (= c!9271 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!66897 () Bool)

(declare-fun e!43875 () Bool)

(declare-fun lt!28955 () ListLongMap!1403)

(assert (=> b!66897 (= e!43875 (isEmpty!307 lt!28955))))

(declare-fun b!66898 () Bool)

(declare-fun e!43877 () Bool)

(assert (=> b!66898 (= e!43877 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!66898 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!66899 () Bool)

(declare-fun res!36161 () Bool)

(declare-fun e!43872 () Bool)

(assert (=> b!66899 (=> (not res!36161) (not e!43872))))

(assert (=> b!66899 (= res!36161 (not (contains!710 lt!28955 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66900 () Bool)

(declare-fun e!43874 () Bool)

(assert (=> b!66900 (= e!43872 e!43874)))

(declare-fun c!9270 () Bool)

(assert (=> b!66900 (= c!9270 e!43877)))

(declare-fun res!36162 () Bool)

(assert (=> b!66900 (=> (not res!36162) (not e!43877))))

(assert (=> b!66900 (= res!36162 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun d!13857 () Bool)

(assert (=> d!13857 e!43872))

(declare-fun res!36164 () Bool)

(assert (=> d!13857 (=> (not res!36164) (not e!43872))))

(assert (=> d!13857 (= res!36164 (not (contains!710 lt!28955 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13857 (= lt!28955 e!43873)))

(declare-fun c!9269 () Bool)

(assert (=> d!13857 (= c!9269 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!13857 (validMask!0 (mask!6082 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!13857 (= (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))) lt!28955)))

(declare-fun b!66901 () Bool)

(assert (=> b!66901 (= e!43875 (= lt!28955 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66902 () Bool)

(declare-fun e!43871 () Bool)

(assert (=> b!66902 (= e!43874 e!43871)))

(assert (=> b!66902 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun res!36163 () Bool)

(assert (=> b!66902 (= res!36163 (contains!710 lt!28955 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!66902 (=> (not res!36163) (not e!43871))))

(declare-fun b!66903 () Bool)

(assert (=> b!66903 (= e!43876 call!5604)))

(declare-fun b!66904 () Bool)

(assert (=> b!66904 (= e!43874 e!43875)))

(declare-fun c!9268 () Bool)

(assert (=> b!66904 (= c!9268 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66905 () Bool)

(assert (=> b!66905 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!66905 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2071 (_values!2130 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!66905 (= e!43871 (= (apply!72 lt!28955 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!13857 c!9269) b!66894))

(assert (= (and d!13857 (not c!9269)) b!66896))

(assert (= (and b!66896 c!9271) b!66895))

(assert (= (and b!66896 (not c!9271)) b!66903))

(assert (= (or b!66895 b!66903) bm!5601))

(assert (= (and d!13857 res!36164) b!66899))

(assert (= (and b!66899 res!36161) b!66900))

(assert (= (and b!66900 res!36162) b!66898))

(assert (= (and b!66900 c!9270) b!66902))

(assert (= (and b!66900 (not c!9270)) b!66904))

(assert (= (and b!66902 res!36163) b!66905))

(assert (= (and b!66904 c!9268) b!66901))

(assert (= (and b!66904 (not c!9268)) b!66897))

(declare-fun b_lambda!2995 () Bool)

(assert (=> (not b_lambda!2995) (not b!66895)))

(assert (=> b!66895 t!4944))

(declare-fun b_and!4135 () Bool)

(assert (= b_and!4131 (and (=> t!4944 result!2577) b_and!4135)))

(assert (=> b!66895 t!4946))

(declare-fun b_and!4137 () Bool)

(assert (= b_and!4133 (and (=> t!4946 result!2581) b_and!4137)))

(declare-fun b_lambda!2997 () Bool)

(assert (=> (not b_lambda!2997) (not b!66905)))

(assert (=> b!66905 t!4944))

(declare-fun b_and!4139 () Bool)

(assert (= b_and!4135 (and (=> t!4944 result!2577) b_and!4139)))

(assert (=> b!66905 t!4946))

(declare-fun b_and!4141 () Bool)

(assert (= b_and!4137 (and (=> t!4946 result!2581) b_and!4141)))

(declare-fun m!61617 () Bool)

(assert (=> b!66899 m!61617))

(declare-fun m!61619 () Bool)

(assert (=> b!66897 m!61619))

(declare-fun m!61621 () Bool)

(assert (=> b!66901 m!61621))

(declare-fun m!61623 () Bool)

(assert (=> b!66895 m!61623))

(declare-fun m!61625 () Bool)

(assert (=> b!66895 m!61625))

(assert (=> b!66895 m!61623))

(declare-fun m!61627 () Bool)

(assert (=> b!66895 m!61627))

(declare-fun m!61629 () Bool)

(assert (=> b!66895 m!61629))

(declare-fun m!61631 () Bool)

(assert (=> b!66895 m!61631))

(assert (=> b!66895 m!61089))

(assert (=> b!66895 m!61629))

(assert (=> b!66895 m!61089))

(declare-fun m!61633 () Bool)

(assert (=> b!66895 m!61633))

(declare-fun m!61635 () Bool)

(assert (=> b!66895 m!61635))

(assert (=> b!66905 m!61631))

(declare-fun m!61637 () Bool)

(assert (=> b!66905 m!61637))

(assert (=> b!66905 m!61629))

(assert (=> b!66905 m!61629))

(assert (=> b!66905 m!61089))

(assert (=> b!66905 m!61633))

(assert (=> b!66905 m!61631))

(assert (=> b!66905 m!61089))

(assert (=> b!66902 m!61631))

(assert (=> b!66902 m!61631))

(declare-fun m!61639 () Bool)

(assert (=> b!66902 m!61639))

(declare-fun m!61641 () Bool)

(assert (=> d!13857 m!61641))

(assert (=> d!13857 m!61069))

(assert (=> b!66898 m!61631))

(assert (=> b!66898 m!61631))

(declare-fun m!61643 () Bool)

(assert (=> b!66898 m!61643))

(assert (=> bm!5601 m!61621))

(assert (=> b!66896 m!61631))

(assert (=> b!66896 m!61631))

(assert (=> b!66896 m!61643))

(assert (=> b!66487 d!13857))

(declare-fun d!13859 () Bool)

(assert (=> d!13859 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28792 lt!28616 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28959 () Unit!1838)

(declare-fun choose!370 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 V!2915 Int) Unit!1838)

(assert (=> d!13859 (= lt!28959 (choose!370 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28792 (zeroValue!2055 newMap!16) lt!28616 (minValue!2055 newMap!16) (defaultEntry!2147 newMap!16)))))

(assert (=> d!13859 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13859 (= (lemmaChangeZeroKeyThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28792 (zeroValue!2055 newMap!16) lt!28616 (minValue!2055 newMap!16) (defaultEntry!2147 newMap!16)) lt!28959)))

(declare-fun bs!2870 () Bool)

(assert (= bs!2870 d!13859))

(assert (=> bs!2870 m!61299))

(declare-fun m!61645 () Bool)

(assert (=> bs!2870 m!61645))

(declare-fun m!61647 () Bool)

(assert (=> bs!2870 m!61647))

(assert (=> bs!2870 m!61299))

(assert (=> bs!2870 m!61485))

(declare-fun m!61649 () Bool)

(assert (=> bs!2870 m!61649))

(assert (=> b!66619 d!13859))

(assert (=> d!13783 d!13787))

(declare-fun d!13861 () Bool)

(assert (=> d!13861 (not (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!13861 true))

(declare-fun _$68!46 () Unit!1838)

(assert (=> d!13861 (= (choose!68 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462)) _$68!46)))

(declare-fun bs!2871 () Bool)

(assert (= bs!2871 d!13861))

(assert (=> bs!2871 m!61065))

(assert (=> bs!2871 m!61113))

(assert (=> d!13783 d!13861))

(declare-fun d!13863 () Bool)

(assert (=> d!13863 (= (apply!72 lt!28877 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1120 (getValueByKey!130 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2872 () Bool)

(assert (= bs!2872 d!13863))

(assert (=> bs!2872 m!61519))

(assert (=> bs!2872 m!61519))

(declare-fun m!61651 () Bool)

(assert (=> bs!2872 m!61651))

(assert (=> b!66702 d!13863))

(declare-fun d!13865 () Bool)

(assert (=> d!13865 (= (get!1119 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66438 d!13865))

(declare-fun d!13867 () Bool)

(declare-fun e!43878 () Bool)

(assert (=> d!13867 e!43878))

(declare-fun res!36166 () Bool)

(assert (=> d!13867 (=> (not res!36166) (not e!43878))))

(declare-fun lt!28960 () ListLongMap!1403)

(assert (=> d!13867 (= res!36166 (contains!710 lt!28960 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!28961 () List!1466)

(assert (=> d!13867 (= lt!28960 (ListLongMap!1404 lt!28961))))

(declare-fun lt!28962 () Unit!1838)

(declare-fun lt!28963 () Unit!1838)

(assert (=> d!13867 (= lt!28962 lt!28963)))

(assert (=> d!13867 (= (getValueByKey!130 lt!28961 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13867 (= lt!28963 (lemmaContainsTupThenGetReturnValue!47 lt!28961 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13867 (= lt!28961 (insertStrictlySorted!50 (toList!717 lt!28620) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13867 (= (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28960)))

(declare-fun b!66906 () Bool)

(declare-fun res!36165 () Bool)

(assert (=> b!66906 (=> (not res!36165) (not e!43878))))

(assert (=> b!66906 (= res!36165 (= (getValueByKey!130 (toList!717 lt!28960) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66907 () Bool)

(assert (=> b!66907 (= e!43878 (contains!712 (toList!717 lt!28960) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13867 res!36166) b!66906))

(assert (= (and b!66906 res!36165) b!66907))

(declare-fun m!61653 () Bool)

(assert (=> d!13867 m!61653))

(declare-fun m!61655 () Bool)

(assert (=> d!13867 m!61655))

(declare-fun m!61657 () Bool)

(assert (=> d!13867 m!61657))

(declare-fun m!61659 () Bool)

(assert (=> d!13867 m!61659))

(declare-fun m!61661 () Bool)

(assert (=> b!66906 m!61661))

(declare-fun m!61663 () Bool)

(assert (=> b!66907 m!61663))

(assert (=> d!13771 d!13867))

(declare-fun d!13869 () Bool)

(declare-fun e!43879 () Bool)

(assert (=> d!13869 e!43879))

(declare-fun res!36168 () Bool)

(assert (=> d!13869 (=> (not res!36168) (not e!43879))))

(declare-fun lt!28964 () ListLongMap!1403)

(assert (=> d!13869 (= res!36168 (contains!710 lt!28964 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun lt!28965 () List!1466)

(assert (=> d!13869 (= lt!28964 (ListLongMap!1404 lt!28965))))

(declare-fun lt!28966 () Unit!1838)

(declare-fun lt!28967 () Unit!1838)

(assert (=> d!13869 (= lt!28966 lt!28967)))

(assert (=> d!13869 (= (getValueByKey!130 lt!28965 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!13869 (= lt!28967 (lemmaContainsTupThenGetReturnValue!47 lt!28965 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!13869 (= lt!28965 (insertStrictlySorted!50 (toList!717 lt!28620) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!13869 (= (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) lt!28964)))

(declare-fun b!66908 () Bool)

(declare-fun res!36167 () Bool)

(assert (=> b!66908 (=> (not res!36167) (not e!43879))))

(assert (=> b!66908 (= res!36167 (= (getValueByKey!130 (toList!717 lt!28964) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!66909 () Bool)

(assert (=> b!66909 (= e!43879 (contains!712 (toList!717 lt!28964) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(assert (= (and d!13869 res!36168) b!66908))

(assert (= (and b!66908 res!36167) b!66909))

(declare-fun m!61665 () Bool)

(assert (=> d!13869 m!61665))

(declare-fun m!61667 () Bool)

(assert (=> d!13869 m!61667))

(declare-fun m!61669 () Bool)

(assert (=> d!13869 m!61669))

(declare-fun m!61671 () Bool)

(assert (=> d!13869 m!61671))

(declare-fun m!61673 () Bool)

(assert (=> b!66908 m!61673))

(declare-fun m!61675 () Bool)

(assert (=> b!66909 m!61675))

(assert (=> d!13771 d!13869))

(declare-fun d!13871 () Bool)

(declare-fun e!43880 () Bool)

(assert (=> d!13871 e!43880))

(declare-fun res!36170 () Bool)

(assert (=> d!13871 (=> (not res!36170) (not e!43880))))

(declare-fun lt!28968 () ListLongMap!1403)

(assert (=> d!13871 (= res!36170 (contains!710 lt!28968 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!28969 () List!1466)

(assert (=> d!13871 (= lt!28968 (ListLongMap!1404 lt!28969))))

(declare-fun lt!28970 () Unit!1838)

(declare-fun lt!28971 () Unit!1838)

(assert (=> d!13871 (= lt!28970 lt!28971)))

(assert (=> d!13871 (= (getValueByKey!130 lt!28969 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13871 (= lt!28971 (lemmaContainsTupThenGetReturnValue!47 lt!28969 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13871 (= lt!28969 (insertStrictlySorted!50 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13871 (= (+!89 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28968)))

(declare-fun b!66910 () Bool)

(declare-fun res!36169 () Bool)

(assert (=> b!66910 (=> (not res!36169) (not e!43880))))

(assert (=> b!66910 (= res!36169 (= (getValueByKey!130 (toList!717 lt!28968) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66911 () Bool)

(assert (=> b!66911 (= e!43880 (contains!712 (toList!717 lt!28968) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13871 res!36170) b!66910))

(assert (= (and b!66910 res!36169) b!66911))

(declare-fun m!61677 () Bool)

(assert (=> d!13871 m!61677))

(declare-fun m!61679 () Bool)

(assert (=> d!13871 m!61679))

(declare-fun m!61681 () Bool)

(assert (=> d!13871 m!61681))

(declare-fun m!61683 () Bool)

(assert (=> d!13871 m!61683))

(declare-fun m!61685 () Bool)

(assert (=> b!66910 m!61685))

(declare-fun m!61687 () Bool)

(assert (=> b!66911 m!61687))

(assert (=> d!13771 d!13871))

(declare-fun d!13873 () Bool)

(assert (=> d!13873 (= (+!89 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (+!89 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(assert (=> d!13873 true))

(declare-fun _$28!112 () Unit!1838)

(assert (=> d!13873 (= (choose!365 lt!28620 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) _$28!112)))

(declare-fun bs!2873 () Bool)

(assert (= bs!2873 d!13873))

(assert (=> bs!2873 m!61249))

(assert (=> bs!2873 m!61249))

(assert (=> bs!2873 m!61251))

(assert (=> bs!2873 m!61243))

(assert (=> bs!2873 m!61243))

(assert (=> bs!2873 m!61245))

(assert (=> d!13771 d!13873))

(declare-fun d!13875 () Bool)

(declare-fun e!43881 () Bool)

(assert (=> d!13875 e!43881))

(declare-fun res!36172 () Bool)

(assert (=> d!13875 (=> (not res!36172) (not e!43881))))

(declare-fun lt!28972 () ListLongMap!1403)

(assert (=> d!13875 (= res!36172 (contains!710 lt!28972 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun lt!28973 () List!1466)

(assert (=> d!13875 (= lt!28972 (ListLongMap!1404 lt!28973))))

(declare-fun lt!28974 () Unit!1838)

(declare-fun lt!28975 () Unit!1838)

(assert (=> d!13875 (= lt!28974 lt!28975)))

(assert (=> d!13875 (= (getValueByKey!130 lt!28973 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!13875 (= lt!28975 (lemmaContainsTupThenGetReturnValue!47 lt!28973 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!13875 (= lt!28973 (insertStrictlySorted!50 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!13875 (= (+!89 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) lt!28972)))

(declare-fun b!66912 () Bool)

(declare-fun res!36171 () Bool)

(assert (=> b!66912 (=> (not res!36171) (not e!43881))))

(assert (=> b!66912 (= res!36171 (= (getValueByKey!130 (toList!717 lt!28972) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!66913 () Bool)

(assert (=> b!66913 (= e!43881 (contains!712 (toList!717 lt!28972) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(assert (= (and d!13875 res!36172) b!66912))

(assert (= (and b!66912 res!36171) b!66913))

(declare-fun m!61689 () Bool)

(assert (=> d!13875 m!61689))

(declare-fun m!61691 () Bool)

(assert (=> d!13875 m!61691))

(declare-fun m!61693 () Bool)

(assert (=> d!13875 m!61693))

(declare-fun m!61695 () Bool)

(assert (=> d!13875 m!61695))

(declare-fun m!61697 () Bool)

(assert (=> b!66912 m!61697))

(declare-fun m!61699 () Bool)

(assert (=> b!66913 m!61699))

(assert (=> d!13771 d!13875))

(declare-fun d!13877 () Bool)

(declare-fun res!36173 () Bool)

(declare-fun e!43882 () Bool)

(assert (=> d!13877 (=> (not res!36173) (not e!43882))))

(assert (=> d!13877 (= res!36173 (simpleValid!48 (_2!1058 lt!28812)))))

(assert (=> d!13877 (= (valid!279 (_2!1058 lt!28812)) e!43882)))

(declare-fun b!66914 () Bool)

(declare-fun res!36174 () Bool)

(assert (=> b!66914 (=> (not res!36174) (not e!43882))))

(assert (=> b!66914 (= res!36174 (= (arrayCountValidKeys!0 (_keys!3787 (_2!1058 lt!28812)) #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))) (_size!385 (_2!1058 lt!28812))))))

(declare-fun b!66915 () Bool)

(declare-fun res!36175 () Bool)

(assert (=> b!66915 (=> (not res!36175) (not e!43882))))

(assert (=> b!66915 (= res!36175 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812))))))

(declare-fun b!66916 () Bool)

(assert (=> b!66916 (= e!43882 (arrayNoDuplicates!0 (_keys!3787 (_2!1058 lt!28812)) #b00000000000000000000000000000000 Nil!1462))))

(assert (= (and d!13877 res!36173) b!66914))

(assert (= (and b!66914 res!36174) b!66915))

(assert (= (and b!66915 res!36175) b!66916))

(declare-fun m!61701 () Bool)

(assert (=> d!13877 m!61701))

(declare-fun m!61703 () Bool)

(assert (=> b!66914 m!61703))

(declare-fun m!61705 () Bool)

(assert (=> b!66915 m!61705))

(declare-fun m!61707 () Bool)

(assert (=> b!66916 m!61707))

(assert (=> d!13799 d!13877))

(assert (=> d!13799 d!13763))

(declare-fun d!13879 () Bool)

(assert (=> d!13879 (= (map!1136 (_2!1058 lt!28812)) (getCurrentListMap!415 (_keys!3787 (_2!1058 lt!28812)) (_values!2130 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812)) (extraKeys!2018 (_2!1058 lt!28812)) (zeroValue!2055 (_2!1058 lt!28812)) (minValue!2055 (_2!1058 lt!28812)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1058 lt!28812))))))

(declare-fun bs!2874 () Bool)

(assert (= bs!2874 d!13879))

(declare-fun m!61709 () Bool)

(assert (=> bs!2874 m!61709))

(assert (=> bm!5550 d!13879))

(declare-fun d!13881 () Bool)

(declare-fun c!9272 () Bool)

(assert (=> d!13881 (= c!9272 (and ((_ is Cons!1462) (toList!717 lt!28707)) (= (_1!1057 (h!2046 (toList!717 lt!28707))) (_1!1057 lt!28624))))))

(declare-fun e!43883 () Option!136)

(assert (=> d!13881 (= (getValueByKey!130 (toList!717 lt!28707) (_1!1057 lt!28624)) e!43883)))

(declare-fun b!66918 () Bool)

(declare-fun e!43884 () Option!136)

(assert (=> b!66918 (= e!43883 e!43884)))

(declare-fun c!9273 () Bool)

(assert (=> b!66918 (= c!9273 (and ((_ is Cons!1462) (toList!717 lt!28707)) (not (= (_1!1057 (h!2046 (toList!717 lt!28707))) (_1!1057 lt!28624)))))))

(declare-fun b!66917 () Bool)

(assert (=> b!66917 (= e!43883 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28707)))))))

(declare-fun b!66919 () Bool)

(assert (=> b!66919 (= e!43884 (getValueByKey!130 (t!4948 (toList!717 lt!28707)) (_1!1057 lt!28624)))))

(declare-fun b!66920 () Bool)

(assert (=> b!66920 (= e!43884 None!134)))

(assert (= (and d!13881 c!9272) b!66917))

(assert (= (and d!13881 (not c!9272)) b!66918))

(assert (= (and b!66918 c!9273) b!66919))

(assert (= (and b!66918 (not c!9273)) b!66920))

(declare-fun m!61711 () Bool)

(assert (=> b!66919 m!61711))

(assert (=> b!66494 d!13881))

(assert (=> b!66506 d!13787))

(declare-fun d!13883 () Bool)

(assert (=> d!13883 (= (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66482 d!13883))

(declare-fun d!13885 () Bool)

(assert (=> d!13885 (= (inRange!0 (ite c!9190 (ite c!9200 (index!3061 lt!28795) (ite c!9191 (index!3060 lt!28787) (index!3063 lt!28787))) (ite c!9188 (index!3061 lt!28811) (ite c!9192 (index!3060 lt!28801) (index!3063 lt!28801)))) (mask!6082 newMap!16)) (and (bvsge (ite c!9190 (ite c!9200 (index!3061 lt!28795) (ite c!9191 (index!3060 lt!28787) (index!3063 lt!28787))) (ite c!9188 (index!3061 lt!28811) (ite c!9192 (index!3060 lt!28801) (index!3063 lt!28801)))) #b00000000000000000000000000000000) (bvslt (ite c!9190 (ite c!9200 (index!3061 lt!28795) (ite c!9191 (index!3060 lt!28787) (index!3063 lt!28787))) (ite c!9188 (index!3061 lt!28811) (ite c!9192 (index!3060 lt!28801) (index!3063 lt!28801)))) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5536 d!13885))

(assert (=> d!13785 d!13791))

(declare-fun d!13887 () Bool)

(assert (=> d!13887 (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) from!355 Nil!1462)))

(assert (=> d!13887 true))

(declare-fun _$71!87 () Unit!1838)

(assert (=> d!13887 (= (choose!39 (_keys!3787 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!87)))

(declare-fun bs!2875 () Bool)

(assert (= bs!2875 d!13887))

(assert (=> bs!2875 m!61109))

(assert (=> d!13785 d!13887))

(assert (=> b!66484 d!13883))

(assert (=> b!66712 d!13883))

(assert (=> d!13803 d!13777))

(declare-fun b!66929 () Bool)

(declare-fun res!36187 () Bool)

(declare-fun e!43887 () Bool)

(assert (=> b!66929 (=> (not res!36187) (not e!43887))))

(assert (=> b!66929 (= res!36187 (and (= (size!2071 (_values!2130 newMap!16)) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001)) (= (size!2070 (_keys!3787 newMap!16)) (size!2071 (_values!2130 newMap!16))) (bvsge (_size!385 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!385 newMap!16) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!66932 () Bool)

(assert (=> b!66932 (= e!43887 (and (bvsge (extraKeys!2018 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2018 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!385 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!13889 () Bool)

(declare-fun res!36184 () Bool)

(assert (=> d!13889 (=> (not res!36184) (not e!43887))))

(assert (=> d!13889 (= res!36184 (validMask!0 (mask!6082 newMap!16)))))

(assert (=> d!13889 (= (simpleValid!48 newMap!16) e!43887)))

(declare-fun b!66930 () Bool)

(declare-fun res!36185 () Bool)

(assert (=> b!66930 (=> (not res!36185) (not e!43887))))

(declare-fun size!2074 (LongMapFixedSize!672) (_ BitVec 32))

(assert (=> b!66930 (= res!36185 (bvsge (size!2074 newMap!16) (_size!385 newMap!16)))))

(declare-fun b!66931 () Bool)

(declare-fun res!36186 () Bool)

(assert (=> b!66931 (=> (not res!36186) (not e!43887))))

(assert (=> b!66931 (= res!36186 (= (size!2074 newMap!16) (bvadd (_size!385 newMap!16) (bvsdiv (bvadd (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!13889 res!36184) b!66929))

(assert (= (and b!66929 res!36187) b!66930))

(assert (= (and b!66930 res!36185) b!66931))

(assert (= (and b!66931 res!36186) b!66932))

(assert (=> d!13889 m!61485))

(declare-fun m!61713 () Bool)

(assert (=> b!66930 m!61713))

(assert (=> b!66931 m!61713))

(assert (=> d!13763 d!13889))

(declare-fun d!13891 () Bool)

(declare-fun e!43888 () Bool)

(assert (=> d!13891 e!43888))

(declare-fun res!36189 () Bool)

(assert (=> d!13891 (=> (not res!36189) (not e!43888))))

(declare-fun lt!28976 () ListLongMap!1403)

(assert (=> d!13891 (= res!36189 (contains!710 lt!28976 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun lt!28977 () List!1466)

(assert (=> d!13891 (= lt!28976 (ListLongMap!1404 lt!28977))))

(declare-fun lt!28978 () Unit!1838)

(declare-fun lt!28979 () Unit!1838)

(assert (=> d!13891 (= lt!28978 lt!28979)))

(assert (=> d!13891 (= (getValueByKey!130 lt!28977 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!13891 (= lt!28979 (lemmaContainsTupThenGetReturnValue!47 lt!28977 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!13891 (= lt!28977 (insertStrictlySorted!50 (toList!717 call!5539) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!13891 (= (+!89 call!5539 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) lt!28976)))

(declare-fun b!66933 () Bool)

(declare-fun res!36188 () Bool)

(assert (=> b!66933 (=> (not res!36188) (not e!43888))))

(assert (=> b!66933 (= res!36188 (= (getValueByKey!130 (toList!717 lt!28976) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!66934 () Bool)

(assert (=> b!66934 (= e!43888 (contains!712 (toList!717 lt!28976) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(assert (= (and d!13891 res!36189) b!66933))

(assert (= (and b!66933 res!36188) b!66934))

(declare-fun m!61715 () Bool)

(assert (=> d!13891 m!61715))

(declare-fun m!61717 () Bool)

(assert (=> d!13891 m!61717))

(declare-fun m!61719 () Bool)

(assert (=> d!13891 m!61719))

(declare-fun m!61721 () Bool)

(assert (=> d!13891 m!61721))

(declare-fun m!61723 () Bool)

(assert (=> b!66933 m!61723))

(declare-fun m!61725 () Bool)

(assert (=> b!66934 m!61725))

(assert (=> b!66656 d!13891))

(declare-fun b!66943 () Bool)

(declare-fun e!43895 () Bool)

(declare-fun e!43897 () Bool)

(assert (=> b!66943 (= e!43895 e!43897)))

(declare-fun lt!28987 () (_ BitVec 64))

(assert (=> b!66943 (= lt!28987 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28988 () Unit!1838)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3841 (_ BitVec 64) (_ BitVec 32)) Unit!1838)

(assert (=> b!66943 (= lt!28988 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3787 newMap!16) lt!28987 #b00000000000000000000000000000000))))

(assert (=> b!66943 (arrayContainsKey!0 (_keys!3787 newMap!16) lt!28987 #b00000000000000000000000000000000)))

(declare-fun lt!28986 () Unit!1838)

(assert (=> b!66943 (= lt!28986 lt!28988)))

(declare-fun res!36194 () Bool)

(assert (=> b!66943 (= res!36194 (= (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (_keys!3787 newMap!16) (mask!6082 newMap!16)) (Found!233 #b00000000000000000000000000000000)))))

(assert (=> b!66943 (=> (not res!36194) (not e!43897))))

(declare-fun bm!5604 () Bool)

(declare-fun call!5607 () Bool)

(assert (=> bm!5604 (= call!5607 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun d!13893 () Bool)

(declare-fun res!36195 () Bool)

(declare-fun e!43896 () Bool)

(assert (=> d!13893 (=> res!36195 e!43896)))

(assert (=> d!13893 (= res!36195 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!13893 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 newMap!16) (mask!6082 newMap!16)) e!43896)))

(declare-fun b!66944 () Bool)

(assert (=> b!66944 (= e!43897 call!5607)))

(declare-fun b!66945 () Bool)

(assert (=> b!66945 (= e!43895 call!5607)))

(declare-fun b!66946 () Bool)

(assert (=> b!66946 (= e!43896 e!43895)))

(declare-fun c!9276 () Bool)

(assert (=> b!66946 (= c!9276 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!13893 (not res!36195)) b!66946))

(assert (= (and b!66946 c!9276) b!66943))

(assert (= (and b!66946 (not c!9276)) b!66945))

(assert (= (and b!66943 res!36194) b!66944))

(assert (= (or b!66944 b!66945) bm!5604))

(assert (=> b!66943 m!61465))

(declare-fun m!61727 () Bool)

(assert (=> b!66943 m!61727))

(declare-fun m!61729 () Bool)

(assert (=> b!66943 m!61729))

(assert (=> b!66943 m!61465))

(declare-fun m!61731 () Bool)

(assert (=> b!66943 m!61731))

(declare-fun m!61733 () Bool)

(assert (=> bm!5604 m!61733))

(assert (=> b!66946 m!61465))

(assert (=> b!66946 m!61465))

(assert (=> b!66946 m!61479))

(assert (=> b!66446 d!13893))

(declare-fun d!13895 () Bool)

(declare-fun lt!28991 () Bool)

(declare-fun content!72 (List!1466) (InoxSet tuple2!2092))

(assert (=> d!13895 (= lt!28991 (select (content!72 (toList!717 lt!28671)) lt!28617))))

(declare-fun e!43902 () Bool)

(assert (=> d!13895 (= lt!28991 e!43902)))

(declare-fun res!36200 () Bool)

(assert (=> d!13895 (=> (not res!36200) (not e!43902))))

(assert (=> d!13895 (= res!36200 ((_ is Cons!1462) (toList!717 lt!28671)))))

(assert (=> d!13895 (= (contains!712 (toList!717 lt!28671) lt!28617) lt!28991)))

(declare-fun b!66951 () Bool)

(declare-fun e!43903 () Bool)

(assert (=> b!66951 (= e!43902 e!43903)))

(declare-fun res!36201 () Bool)

(assert (=> b!66951 (=> res!36201 e!43903)))

(assert (=> b!66951 (= res!36201 (= (h!2046 (toList!717 lt!28671)) lt!28617))))

(declare-fun b!66952 () Bool)

(assert (=> b!66952 (= e!43903 (contains!712 (t!4948 (toList!717 lt!28671)) lt!28617))))

(assert (= (and d!13895 res!36200) b!66951))

(assert (= (and b!66951 (not res!36201)) b!66952))

(declare-fun m!61735 () Bool)

(assert (=> d!13895 m!61735))

(declare-fun m!61737 () Bool)

(assert (=> d!13895 m!61737))

(declare-fun m!61739 () Bool)

(assert (=> b!66952 m!61739))

(assert (=> b!66453 d!13895))

(declare-fun d!13897 () Bool)

(declare-fun res!36202 () Bool)

(declare-fun e!43904 () Bool)

(assert (=> d!13897 (=> (not res!36202) (not e!43904))))

(assert (=> d!13897 (= res!36202 (simpleValid!48 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!13897 (= (valid!279 (v!2478 (underlying!250 thiss!992))) e!43904)))

(declare-fun b!66953 () Bool)

(declare-fun res!36203 () Bool)

(assert (=> b!66953 (=> (not res!36203) (not e!43904))))

(assert (=> b!66953 (= res!36203 (= (arrayCountValidKeys!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))) (_size!385 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!66954 () Bool)

(declare-fun res!36204 () Bool)

(assert (=> b!66954 (=> (not res!36204) (not e!43904))))

(assert (=> b!66954 (= res!36204 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!66955 () Bool)

(assert (=> b!66955 (= e!43904 (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 Nil!1462))))

(assert (= (and d!13897 res!36202) b!66953))

(assert (= (and b!66953 res!36203) b!66954))

(assert (= (and b!66954 res!36204) b!66955))

(declare-fun m!61741 () Bool)

(assert (=> d!13897 m!61741))

(declare-fun m!61743 () Bool)

(assert (=> b!66953 m!61743))

(declare-fun m!61745 () Bool)

(assert (=> b!66954 m!61745))

(declare-fun m!61747 () Bool)

(assert (=> b!66955 m!61747))

(assert (=> d!13761 d!13897))

(declare-fun d!13899 () Bool)

(declare-fun res!36205 () Bool)

(declare-fun e!43905 () Bool)

(assert (=> d!13899 (=> res!36205 e!43905)))

(assert (=> d!13899 (= res!36205 (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13899 (= (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!43905)))

(declare-fun b!66956 () Bool)

(declare-fun e!43906 () Bool)

(assert (=> b!66956 (= e!43905 e!43906)))

(declare-fun res!36206 () Bool)

(assert (=> b!66956 (=> (not res!36206) (not e!43906))))

(assert (=> b!66956 (= res!36206 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66957 () Bool)

(assert (=> b!66957 (= e!43906 (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!13899 (not res!36205)) b!66956))

(assert (= (and b!66956 res!36206) b!66957))

(assert (=> d!13899 m!61631))

(assert (=> b!66957 m!61065))

(declare-fun m!61749 () Bool)

(assert (=> b!66957 m!61749))

(assert (=> b!66501 d!13899))

(declare-fun d!13901 () Bool)

(declare-fun c!9277 () Bool)

(assert (=> d!13901 (= c!9277 (and ((_ is Cons!1462) (toList!717 lt!28703)) (= (_1!1057 (h!2046 (toList!717 lt!28703))) (_1!1057 lt!28617))))))

(declare-fun e!43907 () Option!136)

(assert (=> d!13901 (= (getValueByKey!130 (toList!717 lt!28703) (_1!1057 lt!28617)) e!43907)))

(declare-fun b!66959 () Bool)

(declare-fun e!43908 () Option!136)

(assert (=> b!66959 (= e!43907 e!43908)))

(declare-fun c!9278 () Bool)

(assert (=> b!66959 (= c!9278 (and ((_ is Cons!1462) (toList!717 lt!28703)) (not (= (_1!1057 (h!2046 (toList!717 lt!28703))) (_1!1057 lt!28617)))))))

(declare-fun b!66958 () Bool)

(assert (=> b!66958 (= e!43907 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28703)))))))

(declare-fun b!66960 () Bool)

(assert (=> b!66960 (= e!43908 (getValueByKey!130 (t!4948 (toList!717 lt!28703)) (_1!1057 lt!28617)))))

(declare-fun b!66961 () Bool)

(assert (=> b!66961 (= e!43908 None!134)))

(assert (= (and d!13901 c!9277) b!66958))

(assert (= (and d!13901 (not c!9277)) b!66959))

(assert (= (and b!66959 c!9278) b!66960))

(assert (= (and b!66959 (not c!9278)) b!66961))

(declare-fun m!61751 () Bool)

(assert (=> b!66960 m!61751))

(assert (=> b!66492 d!13901))

(declare-fun b!66962 () Bool)

(declare-fun e!43918 () ListLongMap!1403)

(declare-fun call!5613 () ListLongMap!1403)

(assert (=> b!66962 (= e!43918 call!5613)))

(declare-fun b!66963 () Bool)

(declare-fun e!43913 () ListLongMap!1403)

(assert (=> b!66963 (= e!43913 call!5613)))

(declare-fun b!66964 () Bool)

(declare-fun e!43916 () Bool)

(declare-fun lt!29012 () ListLongMap!1403)

(assert (=> b!66964 (= e!43916 (= (apply!72 lt!29012 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5605 () Bool)

(declare-fun call!5614 () ListLongMap!1403)

(assert (=> bm!5605 (= call!5614 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5606 () Bool)

(declare-fun call!5608 () Bool)

(assert (=> bm!5606 (= call!5608 (contains!710 lt!29012 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5607 () Bool)

(declare-fun call!5611 () ListLongMap!1403)

(declare-fun call!5609 () ListLongMap!1403)

(assert (=> bm!5607 (= call!5611 call!5609)))

(declare-fun b!66965 () Bool)

(declare-fun e!43919 () ListLongMap!1403)

(declare-fun call!5612 () ListLongMap!1403)

(assert (=> b!66965 (= e!43919 (+!89 call!5612 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!66966 () Bool)

(declare-fun e!43911 () Unit!1838)

(declare-fun lt!29013 () Unit!1838)

(assert (=> b!66966 (= e!43911 lt!29013)))

(declare-fun lt!29009 () ListLongMap!1403)

(assert (=> b!66966 (= lt!29009 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29011 () (_ BitVec 64))

(assert (=> b!66966 (= lt!29011 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29001 () (_ BitVec 64))

(assert (=> b!66966 (= lt!29001 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29000 () Unit!1838)

(assert (=> b!66966 (= lt!29000 (addStillContains!48 lt!29009 lt!29011 (zeroValue!2055 newMap!16) lt!29001))))

(assert (=> b!66966 (contains!710 (+!89 lt!29009 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16))) lt!29001)))

(declare-fun lt!28993 () Unit!1838)

(assert (=> b!66966 (= lt!28993 lt!29000)))

(declare-fun lt!29006 () ListLongMap!1403)

(assert (=> b!66966 (= lt!29006 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29003 () (_ BitVec 64))

(assert (=> b!66966 (= lt!29003 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28995 () (_ BitVec 64))

(assert (=> b!66966 (= lt!28995 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28996 () Unit!1838)

(assert (=> b!66966 (= lt!28996 (addApplyDifferent!48 lt!29006 lt!29003 (minValue!2055 newMap!16) lt!28995))))

(assert (=> b!66966 (= (apply!72 (+!89 lt!29006 (tuple2!2093 lt!29003 (minValue!2055 newMap!16))) lt!28995) (apply!72 lt!29006 lt!28995))))

(declare-fun lt!29010 () Unit!1838)

(assert (=> b!66966 (= lt!29010 lt!28996)))

(declare-fun lt!28998 () ListLongMap!1403)

(assert (=> b!66966 (= lt!28998 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28997 () (_ BitVec 64))

(assert (=> b!66966 (= lt!28997 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29008 () (_ BitVec 64))

(assert (=> b!66966 (= lt!29008 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29007 () Unit!1838)

(assert (=> b!66966 (= lt!29007 (addApplyDifferent!48 lt!28998 lt!28997 (zeroValue!2055 newMap!16) lt!29008))))

(assert (=> b!66966 (= (apply!72 (+!89 lt!28998 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16))) lt!29008) (apply!72 lt!28998 lt!29008))))

(declare-fun lt!28999 () Unit!1838)

(assert (=> b!66966 (= lt!28999 lt!29007)))

(declare-fun lt!29002 () ListLongMap!1403)

(assert (=> b!66966 (= lt!29002 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!28992 () (_ BitVec 64))

(assert (=> b!66966 (= lt!28992 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29005 () (_ BitVec 64))

(assert (=> b!66966 (= lt!29005 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66966 (= lt!29013 (addApplyDifferent!48 lt!29002 lt!28992 (minValue!2055 newMap!16) lt!29005))))

(assert (=> b!66966 (= (apply!72 (+!89 lt!29002 (tuple2!2093 lt!28992 (minValue!2055 newMap!16))) lt!29005) (apply!72 lt!29002 lt!29005))))

(declare-fun b!66967 () Bool)

(declare-fun e!43917 () Bool)

(assert (=> b!66967 (= e!43917 (= (apply!72 lt!29012 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66967 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (_values!2130 newMap!16))))))

(assert (=> b!66967 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!66968 () Bool)

(assert (=> b!66968 (= e!43919 e!43918)))

(declare-fun c!9281 () Bool)

(assert (=> b!66968 (= c!9281 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!13903 () Bool)

(declare-fun e!43915 () Bool)

(assert (=> d!13903 e!43915))

(declare-fun res!36212 () Bool)

(assert (=> d!13903 (=> (not res!36212) (not e!43915))))

(assert (=> d!13903 (= res!36212 (or (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))))

(declare-fun lt!28994 () ListLongMap!1403)

(assert (=> d!13903 (= lt!29012 lt!28994)))

(declare-fun lt!29004 () Unit!1838)

(assert (=> d!13903 (= lt!29004 e!43911)))

(declare-fun c!9283 () Bool)

(declare-fun e!43920 () Bool)

(assert (=> d!13903 (= c!9283 e!43920)))

(declare-fun res!36214 () Bool)

(assert (=> d!13903 (=> (not res!36214) (not e!43920))))

(assert (=> d!13903 (= res!36214 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!13903 (= lt!28994 e!43919)))

(declare-fun c!9282 () Bool)

(assert (=> d!13903 (= c!9282 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13903 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13903 (= (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29012)))

(declare-fun b!66969 () Bool)

(declare-fun e!43914 () Bool)

(declare-fun call!5610 () Bool)

(assert (=> b!66969 (= e!43914 (not call!5610))))

(declare-fun b!66970 () Bool)

(declare-fun res!36211 () Bool)

(assert (=> b!66970 (=> (not res!36211) (not e!43915))))

(assert (=> b!66970 (= res!36211 e!43914)))

(declare-fun c!9280 () Bool)

(assert (=> b!66970 (= c!9280 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5608 () Bool)

(assert (=> bm!5608 (= call!5613 call!5612)))

(declare-fun b!66971 () Bool)

(declare-fun e!43909 () Bool)

(assert (=> b!66971 (= e!43915 e!43909)))

(declare-fun c!9279 () Bool)

(assert (=> b!66971 (= c!9279 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66972 () Bool)

(assert (=> b!66972 (= e!43909 e!43916)))

(declare-fun res!36208 () Bool)

(assert (=> b!66972 (= res!36208 call!5608)))

(assert (=> b!66972 (=> (not res!36208) (not e!43916))))

(declare-fun bm!5609 () Bool)

(assert (=> bm!5609 (= call!5612 (+!89 (ite c!9282 call!5614 (ite c!9281 call!5609 call!5611)) (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!66973 () Bool)

(declare-fun c!9284 () Bool)

(assert (=> b!66973 (= c!9284 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!66973 (= e!43918 e!43913)))

(declare-fun bm!5610 () Bool)

(assert (=> bm!5610 (= call!5609 call!5614)))

(declare-fun b!66974 () Bool)

(assert (=> b!66974 (= e!43920 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66975 () Bool)

(declare-fun res!36210 () Bool)

(assert (=> b!66975 (=> (not res!36210) (not e!43915))))

(declare-fun e!43921 () Bool)

(assert (=> b!66975 (= res!36210 e!43921)))

(declare-fun res!36207 () Bool)

(assert (=> b!66975 (=> res!36207 e!43921)))

(declare-fun e!43912 () Bool)

(assert (=> b!66975 (= res!36207 (not e!43912))))

(declare-fun res!36209 () Bool)

(assert (=> b!66975 (=> (not res!36209) (not e!43912))))

(assert (=> b!66975 (= res!36209 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!66976 () Bool)

(declare-fun e!43910 () Bool)

(assert (=> b!66976 (= e!43914 e!43910)))

(declare-fun res!36215 () Bool)

(assert (=> b!66976 (= res!36215 call!5610)))

(assert (=> b!66976 (=> (not res!36215) (not e!43910))))

(declare-fun b!66977 () Bool)

(assert (=> b!66977 (= e!43909 (not call!5608))))

(declare-fun b!66978 () Bool)

(assert (=> b!66978 (= e!43913 call!5611)))

(declare-fun b!66979 () Bool)

(declare-fun Unit!1854 () Unit!1838)

(assert (=> b!66979 (= e!43911 Unit!1854)))

(declare-fun b!66980 () Bool)

(assert (=> b!66980 (= e!43921 e!43917)))

(declare-fun res!36213 () Bool)

(assert (=> b!66980 (=> (not res!36213) (not e!43917))))

(assert (=> b!66980 (= res!36213 (contains!710 lt!29012 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66980 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun bm!5611 () Bool)

(assert (=> bm!5611 (= call!5610 (contains!710 lt!29012 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66981 () Bool)

(assert (=> b!66981 (= e!43912 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66982 () Bool)

(assert (=> b!66982 (= e!43910 (= (apply!72 lt!29012 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(assert (= (and d!13903 c!9282) b!66965))

(assert (= (and d!13903 (not c!9282)) b!66968))

(assert (= (and b!66968 c!9281) b!66962))

(assert (= (and b!66968 (not c!9281)) b!66973))

(assert (= (and b!66973 c!9284) b!66963))

(assert (= (and b!66973 (not c!9284)) b!66978))

(assert (= (or b!66963 b!66978) bm!5607))

(assert (= (or b!66962 bm!5607) bm!5610))

(assert (= (or b!66962 b!66963) bm!5608))

(assert (= (or b!66965 bm!5610) bm!5605))

(assert (= (or b!66965 bm!5608) bm!5609))

(assert (= (and d!13903 res!36214) b!66974))

(assert (= (and d!13903 c!9283) b!66966))

(assert (= (and d!13903 (not c!9283)) b!66979))

(assert (= (and d!13903 res!36212) b!66975))

(assert (= (and b!66975 res!36209) b!66981))

(assert (= (and b!66975 (not res!36207)) b!66980))

(assert (= (and b!66980 res!36213) b!66967))

(assert (= (and b!66975 res!36210) b!66970))

(assert (= (and b!66970 c!9280) b!66976))

(assert (= (and b!66970 (not c!9280)) b!66969))

(assert (= (and b!66976 res!36215) b!66982))

(assert (= (or b!66976 b!66969) bm!5611))

(assert (= (and b!66970 res!36211) b!66971))

(assert (= (and b!66971 c!9279) b!66972))

(assert (= (and b!66971 (not c!9279)) b!66977))

(assert (= (and b!66972 res!36208) b!66964))

(assert (= (or b!66972 b!66977) bm!5606))

(declare-fun b_lambda!2999 () Bool)

(assert (=> (not b_lambda!2999) (not b!66967)))

(assert (=> b!66967 t!4955))

(declare-fun b_and!4143 () Bool)

(assert (= b_and!4139 (and (=> t!4955 result!2591) b_and!4143)))

(assert (=> b!66967 t!4957))

(declare-fun b_and!4145 () Bool)

(assert (= b_and!4141 (and (=> t!4957 result!2593) b_and!4145)))

(declare-fun m!61753 () Bool)

(assert (=> b!66966 m!61753))

(declare-fun m!61755 () Bool)

(assert (=> b!66966 m!61755))

(declare-fun m!61757 () Bool)

(assert (=> b!66966 m!61757))

(declare-fun m!61759 () Bool)

(assert (=> b!66966 m!61759))

(declare-fun m!61761 () Bool)

(assert (=> b!66966 m!61761))

(declare-fun m!61763 () Bool)

(assert (=> b!66966 m!61763))

(declare-fun m!61765 () Bool)

(assert (=> b!66966 m!61765))

(declare-fun m!61767 () Bool)

(assert (=> b!66966 m!61767))

(declare-fun m!61769 () Bool)

(assert (=> b!66966 m!61769))

(declare-fun m!61771 () Bool)

(assert (=> b!66966 m!61771))

(declare-fun m!61773 () Bool)

(assert (=> b!66966 m!61773))

(assert (=> b!66966 m!61761))

(assert (=> b!66966 m!61769))

(declare-fun m!61775 () Bool)

(assert (=> b!66966 m!61775))

(assert (=> b!66966 m!61465))

(declare-fun m!61777 () Bool)

(assert (=> b!66966 m!61777))

(assert (=> b!66966 m!61777))

(declare-fun m!61779 () Bool)

(assert (=> b!66966 m!61779))

(assert (=> b!66966 m!61759))

(declare-fun m!61781 () Bool)

(assert (=> b!66966 m!61781))

(declare-fun m!61783 () Bool)

(assert (=> b!66966 m!61783))

(declare-fun m!61785 () Bool)

(assert (=> b!66964 m!61785))

(declare-fun m!61787 () Bool)

(assert (=> b!66982 m!61787))

(assert (=> b!66981 m!61465))

(assert (=> b!66981 m!61465))

(assert (=> b!66981 m!61479))

(declare-fun m!61789 () Bool)

(assert (=> b!66965 m!61789))

(assert (=> bm!5605 m!61773))

(declare-fun m!61791 () Bool)

(assert (=> bm!5606 m!61791))

(assert (=> b!66974 m!61465))

(assert (=> b!66974 m!61465))

(assert (=> b!66974 m!61479))

(assert (=> d!13903 m!61485))

(declare-fun m!61793 () Bool)

(assert (=> bm!5609 m!61793))

(declare-fun m!61795 () Bool)

(assert (=> bm!5611 m!61795))

(assert (=> b!66967 m!61465))

(assert (=> b!66967 m!61491))

(assert (=> b!66967 m!61465))

(declare-fun m!61797 () Bool)

(assert (=> b!66967 m!61797))

(declare-fun m!61799 () Bool)

(assert (=> b!66967 m!61799))

(assert (=> b!66967 m!61799))

(assert (=> b!66967 m!61491))

(declare-fun m!61801 () Bool)

(assert (=> b!66967 m!61801))

(assert (=> b!66980 m!61465))

(assert (=> b!66980 m!61465))

(declare-fun m!61803 () Bool)

(assert (=> b!66980 m!61803))

(assert (=> d!13801 d!13903))

(declare-fun d!13905 () Bool)

(declare-fun e!43923 () Bool)

(assert (=> d!13905 e!43923))

(declare-fun res!36216 () Bool)

(assert (=> d!13905 (=> res!36216 e!43923)))

(declare-fun lt!29016 () Bool)

(assert (=> d!13905 (= res!36216 (not lt!29016))))

(declare-fun lt!29014 () Bool)

(assert (=> d!13905 (= lt!29016 lt!29014)))

(declare-fun lt!29017 () Unit!1838)

(declare-fun e!43922 () Unit!1838)

(assert (=> d!13905 (= lt!29017 e!43922)))

(declare-fun c!9285 () Bool)

(assert (=> d!13905 (= c!9285 lt!29014)))

(assert (=> d!13905 (= lt!29014 (containsKey!134 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13905 (= (contains!710 call!5541 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29016)))

(declare-fun b!66983 () Bool)

(declare-fun lt!29015 () Unit!1838)

(assert (=> b!66983 (= e!43922 lt!29015)))

(assert (=> b!66983 (= lt!29015 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!66983 (isDefined!83 (getValueByKey!130 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66984 () Bool)

(declare-fun Unit!1855 () Unit!1838)

(assert (=> b!66984 (= e!43922 Unit!1855)))

(declare-fun b!66985 () Bool)

(assert (=> b!66985 (= e!43923 (isDefined!83 (getValueByKey!130 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (= (and d!13905 c!9285) b!66983))

(assert (= (and d!13905 (not c!9285)) b!66984))

(assert (= (and d!13905 (not res!36216)) b!66985))

(assert (=> d!13905 m!61065))

(declare-fun m!61805 () Bool)

(assert (=> d!13905 m!61805))

(assert (=> b!66983 m!61065))

(declare-fun m!61807 () Bool)

(assert (=> b!66983 m!61807))

(assert (=> b!66983 m!61065))

(declare-fun m!61809 () Bool)

(assert (=> b!66983 m!61809))

(assert (=> b!66983 m!61809))

(declare-fun m!61811 () Bool)

(assert (=> b!66983 m!61811))

(assert (=> b!66985 m!61065))

(assert (=> b!66985 m!61809))

(assert (=> b!66985 m!61809))

(assert (=> b!66985 m!61811))

(assert (=> b!66625 d!13905))

(declare-fun d!13907 () Bool)

(declare-fun e!43926 () Bool)

(assert (=> d!13907 e!43926))

(declare-fun c!9288 () Bool)

(assert (=> d!13907 (= c!9288 (and (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!13907 true))

(declare-fun _$29!81 () Unit!1838)

(assert (=> d!13907 (= (choose!366 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))) _$29!81)))

(declare-fun b!66990 () Bool)

(assert (=> b!66990 (= e!43926 (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!66991 () Bool)

(assert (=> b!66991 (= e!43926 (ite (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!13907 c!9288) b!66990))

(assert (= (and d!13907 (not c!9288)) b!66991))

(assert (=> b!66990 m!61065))

(assert (=> b!66990 m!61113))

(assert (=> d!13789 d!13907))

(assert (=> d!13789 d!13777))

(assert (=> b!66519 d!13827))

(assert (=> b!66719 d!13883))

(declare-fun d!13909 () Bool)

(assert (=> d!13909 (= (apply!72 lt!28871 lt!28860) (get!1120 (getValueByKey!130 (toList!717 lt!28871) lt!28860)))))

(declare-fun bs!2876 () Bool)

(assert (= bs!2876 d!13909))

(declare-fun m!61813 () Bool)

(assert (=> bs!2876 m!61813))

(assert (=> bs!2876 m!61813))

(declare-fun m!61815 () Bool)

(assert (=> bs!2876 m!61815))

(assert (=> b!66704 d!13909))

(declare-fun d!13911 () Bool)

(assert (=> d!13911 (= (apply!72 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28873) (apply!72 lt!28863 lt!28873))))

(declare-fun lt!29020 () Unit!1838)

(declare-fun choose!371 (ListLongMap!1403 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1838)

(assert (=> d!13911 (= lt!29020 (choose!371 lt!28863 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28873))))

(declare-fun e!43929 () Bool)

(assert (=> d!13911 e!43929))

(declare-fun res!36219 () Bool)

(assert (=> d!13911 (=> (not res!36219) (not e!43929))))

(assert (=> d!13911 (= res!36219 (contains!710 lt!28863 lt!28873))))

(assert (=> d!13911 (= (addApplyDifferent!48 lt!28863 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28873) lt!29020)))

(declare-fun b!66995 () Bool)

(assert (=> b!66995 (= e!43929 (not (= lt!28873 lt!28862)))))

(assert (= (and d!13911 res!36219) b!66995))

(declare-fun m!61817 () Bool)

(assert (=> d!13911 m!61817))

(assert (=> d!13911 m!61371))

(assert (=> d!13911 m!61373))

(assert (=> d!13911 m!61371))

(assert (=> d!13911 m!61375))

(declare-fun m!61819 () Bool)

(assert (=> d!13911 m!61819))

(assert (=> b!66704 d!13911))

(declare-fun d!13913 () Bool)

(assert (=> d!13913 (= (apply!72 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28870) (apply!72 lt!28867 lt!28870))))

(declare-fun lt!29021 () Unit!1838)

(assert (=> d!13913 (= lt!29021 (choose!371 lt!28867 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28870))))

(declare-fun e!43930 () Bool)

(assert (=> d!13913 e!43930))

(declare-fun res!36220 () Bool)

(assert (=> d!13913 (=> (not res!36220) (not e!43930))))

(assert (=> d!13913 (= res!36220 (contains!710 lt!28867 lt!28870))))

(assert (=> d!13913 (= (addApplyDifferent!48 lt!28867 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28870) lt!29021)))

(declare-fun b!66996 () Bool)

(assert (=> b!66996 (= e!43930 (not (= lt!28870 lt!28857)))))

(assert (= (and d!13913 res!36220) b!66996))

(declare-fun m!61821 () Bool)

(assert (=> d!13913 m!61821))

(assert (=> d!13913 m!61361))

(assert (=> d!13913 m!61381))

(assert (=> d!13913 m!61361))

(assert (=> d!13913 m!61355))

(declare-fun m!61823 () Bool)

(assert (=> d!13913 m!61823))

(assert (=> b!66704 d!13913))

(declare-fun d!13915 () Bool)

(declare-fun e!43931 () Bool)

(assert (=> d!13915 e!43931))

(declare-fun res!36222 () Bool)

(assert (=> d!13915 (=> (not res!36222) (not e!43931))))

(declare-fun lt!29022 () ListLongMap!1403)

(assert (=> d!13915 (= res!36222 (contains!710 lt!29022 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29023 () List!1466)

(assert (=> d!13915 (= lt!29022 (ListLongMap!1404 lt!29023))))

(declare-fun lt!29024 () Unit!1838)

(declare-fun lt!29025 () Unit!1838)

(assert (=> d!13915 (= lt!29024 lt!29025)))

(assert (=> d!13915 (= (getValueByKey!130 lt!29023 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13915 (= lt!29025 (lemmaContainsTupThenGetReturnValue!47 lt!29023 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13915 (= lt!29023 (insertStrictlySorted!50 (toList!717 lt!28874) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13915 (= (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29022)))

(declare-fun b!66997 () Bool)

(declare-fun res!36221 () Bool)

(assert (=> b!66997 (=> (not res!36221) (not e!43931))))

(assert (=> b!66997 (= res!36221 (= (getValueByKey!130 (toList!717 lt!29022) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66998 () Bool)

(assert (=> b!66998 (= e!43931 (contains!712 (toList!717 lt!29022) (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13915 res!36222) b!66997))

(assert (= (and b!66997 res!36221) b!66998))

(declare-fun m!61825 () Bool)

(assert (=> d!13915 m!61825))

(declare-fun m!61827 () Bool)

(assert (=> d!13915 m!61827))

(declare-fun m!61829 () Bool)

(assert (=> d!13915 m!61829))

(declare-fun m!61831 () Bool)

(assert (=> d!13915 m!61831))

(declare-fun m!61833 () Bool)

(assert (=> b!66997 m!61833))

(declare-fun m!61835 () Bool)

(assert (=> b!66998 m!61835))

(assert (=> b!66704 d!13915))

(declare-fun d!13917 () Bool)

(declare-fun e!43932 () Bool)

(assert (=> d!13917 e!43932))

(declare-fun res!36224 () Bool)

(assert (=> d!13917 (=> (not res!36224) (not e!43932))))

(declare-fun lt!29026 () ListLongMap!1403)

(assert (=> d!13917 (= res!36224 (contains!710 lt!29026 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29027 () List!1466)

(assert (=> d!13917 (= lt!29026 (ListLongMap!1404 lt!29027))))

(declare-fun lt!29028 () Unit!1838)

(declare-fun lt!29029 () Unit!1838)

(assert (=> d!13917 (= lt!29028 lt!29029)))

(assert (=> d!13917 (= (getValueByKey!130 lt!29027 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13917 (= lt!29029 (lemmaContainsTupThenGetReturnValue!47 lt!29027 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13917 (= lt!29027 (insertStrictlySorted!50 (toList!717 lt!28867) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13917 (= (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29026)))

(declare-fun b!66999 () Bool)

(declare-fun res!36223 () Bool)

(assert (=> b!66999 (=> (not res!36223) (not e!43932))))

(assert (=> b!66999 (= res!36223 (= (getValueByKey!130 (toList!717 lt!29026) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67000 () Bool)

(assert (=> b!67000 (= e!43932 (contains!712 (toList!717 lt!29026) (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13917 res!36224) b!66999))

(assert (= (and b!66999 res!36223) b!67000))

(declare-fun m!61837 () Bool)

(assert (=> d!13917 m!61837))

(declare-fun m!61839 () Bool)

(assert (=> d!13917 m!61839))

(declare-fun m!61841 () Bool)

(assert (=> d!13917 m!61841))

(declare-fun m!61843 () Bool)

(assert (=> d!13917 m!61843))

(declare-fun m!61845 () Bool)

(assert (=> b!66999 m!61845))

(declare-fun m!61847 () Bool)

(assert (=> b!67000 m!61847))

(assert (=> b!66704 d!13917))

(declare-fun d!13919 () Bool)

(declare-fun e!43933 () Bool)

(assert (=> d!13919 e!43933))

(declare-fun res!36226 () Bool)

(assert (=> d!13919 (=> (not res!36226) (not e!43933))))

(declare-fun lt!29030 () ListLongMap!1403)

(assert (=> d!13919 (= res!36226 (contains!710 lt!29030 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29031 () List!1466)

(assert (=> d!13919 (= lt!29030 (ListLongMap!1404 lt!29031))))

(declare-fun lt!29032 () Unit!1838)

(declare-fun lt!29033 () Unit!1838)

(assert (=> d!13919 (= lt!29032 lt!29033)))

(assert (=> d!13919 (= (getValueByKey!130 lt!29031 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13919 (= lt!29033 (lemmaContainsTupThenGetReturnValue!47 lt!29031 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13919 (= lt!29031 (insertStrictlySorted!50 (toList!717 lt!28871) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13919 (= (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29030)))

(declare-fun b!67001 () Bool)

(declare-fun res!36225 () Bool)

(assert (=> b!67001 (=> (not res!36225) (not e!43933))))

(assert (=> b!67001 (= res!36225 (= (getValueByKey!130 (toList!717 lt!29030) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67002 () Bool)

(assert (=> b!67002 (= e!43933 (contains!712 (toList!717 lt!29030) (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13919 res!36226) b!67001))

(assert (= (and b!67001 res!36225) b!67002))

(declare-fun m!61849 () Bool)

(assert (=> d!13919 m!61849))

(declare-fun m!61851 () Bool)

(assert (=> d!13919 m!61851))

(declare-fun m!61853 () Bool)

(assert (=> d!13919 m!61853))

(declare-fun m!61855 () Bool)

(assert (=> d!13919 m!61855))

(declare-fun m!61857 () Bool)

(assert (=> b!67001 m!61857))

(declare-fun m!61859 () Bool)

(assert (=> b!67002 m!61859))

(assert (=> b!66704 d!13919))

(declare-fun d!13921 () Bool)

(assert (=> d!13921 (= (apply!72 lt!28863 lt!28873) (get!1120 (getValueByKey!130 (toList!717 lt!28863) lt!28873)))))

(declare-fun bs!2877 () Bool)

(assert (= bs!2877 d!13921))

(declare-fun m!61861 () Bool)

(assert (=> bs!2877 m!61861))

(assert (=> bs!2877 m!61861))

(declare-fun m!61863 () Bool)

(assert (=> bs!2877 m!61863))

(assert (=> b!66704 d!13921))

(declare-fun d!13923 () Bool)

(declare-fun e!43934 () Bool)

(assert (=> d!13923 e!43934))

(declare-fun res!36228 () Bool)

(assert (=> d!13923 (=> (not res!36228) (not e!43934))))

(declare-fun lt!29034 () ListLongMap!1403)

(assert (=> d!13923 (= res!36228 (contains!710 lt!29034 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29035 () List!1466)

(assert (=> d!13923 (= lt!29034 (ListLongMap!1404 lt!29035))))

(declare-fun lt!29036 () Unit!1838)

(declare-fun lt!29037 () Unit!1838)

(assert (=> d!13923 (= lt!29036 lt!29037)))

(assert (=> d!13923 (= (getValueByKey!130 lt!29035 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13923 (= lt!29037 (lemmaContainsTupThenGetReturnValue!47 lt!29035 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13923 (= lt!29035 (insertStrictlySorted!50 (toList!717 lt!28863) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13923 (= (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29034)))

(declare-fun b!67003 () Bool)

(declare-fun res!36227 () Bool)

(assert (=> b!67003 (=> (not res!36227) (not e!43934))))

(assert (=> b!67003 (= res!36227 (= (getValueByKey!130 (toList!717 lt!29034) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67004 () Bool)

(assert (=> b!67004 (= e!43934 (contains!712 (toList!717 lt!29034) (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13923 res!36228) b!67003))

(assert (= (and b!67003 res!36227) b!67004))

(declare-fun m!61865 () Bool)

(assert (=> d!13923 m!61865))

(declare-fun m!61867 () Bool)

(assert (=> d!13923 m!61867))

(declare-fun m!61869 () Bool)

(assert (=> d!13923 m!61869))

(declare-fun m!61871 () Bool)

(assert (=> d!13923 m!61871))

(declare-fun m!61873 () Bool)

(assert (=> b!67003 m!61873))

(declare-fun m!61875 () Bool)

(assert (=> b!67004 m!61875))

(assert (=> b!66704 d!13923))

(declare-fun d!13925 () Bool)

(assert (=> d!13925 (= (apply!72 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28873) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28873)))))

(declare-fun bs!2878 () Bool)

(assert (= bs!2878 d!13925))

(declare-fun m!61877 () Bool)

(assert (=> bs!2878 m!61877))

(assert (=> bs!2878 m!61877))

(declare-fun m!61879 () Bool)

(assert (=> bs!2878 m!61879))

(assert (=> b!66704 d!13925))

(declare-fun d!13927 () Bool)

(declare-fun e!43936 () Bool)

(assert (=> d!13927 e!43936))

(declare-fun res!36229 () Bool)

(assert (=> d!13927 (=> res!36229 e!43936)))

(declare-fun lt!29040 () Bool)

(assert (=> d!13927 (= res!36229 (not lt!29040))))

(declare-fun lt!29038 () Bool)

(assert (=> d!13927 (= lt!29040 lt!29038)))

(declare-fun lt!29041 () Unit!1838)

(declare-fun e!43935 () Unit!1838)

(assert (=> d!13927 (= lt!29041 e!43935)))

(declare-fun c!9289 () Bool)

(assert (=> d!13927 (= c!9289 lt!29038)))

(assert (=> d!13927 (= lt!29038 (containsKey!134 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866))))

(assert (=> d!13927 (= (contains!710 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28866) lt!29040)))

(declare-fun b!67005 () Bool)

(declare-fun lt!29039 () Unit!1838)

(assert (=> b!67005 (= e!43935 lt!29039)))

(assert (=> b!67005 (= lt!29039 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866))))

(assert (=> b!67005 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866))))

(declare-fun b!67006 () Bool)

(declare-fun Unit!1856 () Unit!1838)

(assert (=> b!67006 (= e!43935 Unit!1856)))

(declare-fun b!67007 () Bool)

(assert (=> b!67007 (= e!43936 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866)))))

(assert (= (and d!13927 c!9289) b!67005))

(assert (= (and d!13927 (not c!9289)) b!67006))

(assert (= (and d!13927 (not res!36229)) b!67007))

(declare-fun m!61881 () Bool)

(assert (=> d!13927 m!61881))

(declare-fun m!61883 () Bool)

(assert (=> b!67005 m!61883))

(declare-fun m!61885 () Bool)

(assert (=> b!67005 m!61885))

(assert (=> b!67005 m!61885))

(declare-fun m!61887 () Bool)

(assert (=> b!67005 m!61887))

(assert (=> b!67007 m!61885))

(assert (=> b!67007 m!61885))

(assert (=> b!67007 m!61887))

(assert (=> b!66704 d!13927))

(assert (=> b!66704 d!13769))

(declare-fun d!13929 () Bool)

(assert (=> d!13929 (= (apply!72 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28870) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28870)))))

(declare-fun bs!2879 () Bool)

(assert (= bs!2879 d!13929))

(declare-fun m!61889 () Bool)

(assert (=> bs!2879 m!61889))

(assert (=> bs!2879 m!61889))

(declare-fun m!61891 () Bool)

(assert (=> bs!2879 m!61891))

(assert (=> b!66704 d!13929))

(declare-fun d!13931 () Bool)

(assert (=> d!13931 (= (apply!72 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28860) (apply!72 lt!28871 lt!28860))))

(declare-fun lt!29042 () Unit!1838)

(assert (=> d!13931 (= lt!29042 (choose!371 lt!28871 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28860))))

(declare-fun e!43937 () Bool)

(assert (=> d!13931 e!43937))

(declare-fun res!36230 () Bool)

(assert (=> d!13931 (=> (not res!36230) (not e!43937))))

(assert (=> d!13931 (= res!36230 (contains!710 lt!28871 lt!28860))))

(assert (=> d!13931 (= (addApplyDifferent!48 lt!28871 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28860) lt!29042)))

(declare-fun b!67008 () Bool)

(assert (=> b!67008 (= e!43937 (not (= lt!28860 lt!28868)))))

(assert (= (and d!13931 res!36230) b!67008))

(declare-fun m!61893 () Bool)

(assert (=> d!13931 m!61893))

(assert (=> d!13931 m!61377))

(assert (=> d!13931 m!61379))

(assert (=> d!13931 m!61377))

(assert (=> d!13931 m!61369))

(declare-fun m!61895 () Bool)

(assert (=> d!13931 m!61895))

(assert (=> b!66704 d!13931))

(declare-fun d!13933 () Bool)

(assert (=> d!13933 (contains!710 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28866)))

(declare-fun lt!29045 () Unit!1838)

(declare-fun choose!372 (ListLongMap!1403 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1838)

(assert (=> d!13933 (= lt!29045 (choose!372 lt!28874 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28866))))

(assert (=> d!13933 (contains!710 lt!28874 lt!28866)))

(assert (=> d!13933 (= (addStillContains!48 lt!28874 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28866) lt!29045)))

(declare-fun bs!2880 () Bool)

(assert (= bs!2880 d!13933))

(assert (=> bs!2880 m!61363))

(assert (=> bs!2880 m!61363))

(assert (=> bs!2880 m!61365))

(declare-fun m!61897 () Bool)

(assert (=> bs!2880 m!61897))

(declare-fun m!61899 () Bool)

(assert (=> bs!2880 m!61899))

(assert (=> b!66704 d!13933))

(declare-fun d!13935 () Bool)

(assert (=> d!13935 (= (apply!72 lt!28867 lt!28870) (get!1120 (getValueByKey!130 (toList!717 lt!28867) lt!28870)))))

(declare-fun bs!2881 () Bool)

(assert (= bs!2881 d!13935))

(declare-fun m!61901 () Bool)

(assert (=> bs!2881 m!61901))

(assert (=> bs!2881 m!61901))

(declare-fun m!61903 () Bool)

(assert (=> bs!2881 m!61903))

(assert (=> b!66704 d!13935))

(declare-fun d!13937 () Bool)

(assert (=> d!13937 (= (apply!72 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28860) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28860)))))

(declare-fun bs!2882 () Bool)

(assert (= bs!2882 d!13937))

(declare-fun m!61905 () Bool)

(assert (=> bs!2882 m!61905))

(assert (=> bs!2882 m!61905))

(declare-fun m!61907 () Bool)

(assert (=> bs!2882 m!61907))

(assert (=> b!66704 d!13937))

(declare-fun d!13939 () Bool)

(declare-fun e!43939 () Bool)

(assert (=> d!13939 e!43939))

(declare-fun res!36231 () Bool)

(assert (=> d!13939 (=> res!36231 e!43939)))

(declare-fun lt!29048 () Bool)

(assert (=> d!13939 (= res!36231 (not lt!29048))))

(declare-fun lt!29046 () Bool)

(assert (=> d!13939 (= lt!29048 lt!29046)))

(declare-fun lt!29049 () Unit!1838)

(declare-fun e!43938 () Unit!1838)

(assert (=> d!13939 (= lt!29049 e!43938)))

(declare-fun c!9290 () Bool)

(assert (=> d!13939 (= c!9290 lt!29046)))

(assert (=> d!13939 (= lt!29046 (containsKey!134 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13939 (= (contains!710 e!43724 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29048)))

(declare-fun b!67010 () Bool)

(declare-fun lt!29047 () Unit!1838)

(assert (=> b!67010 (= e!43938 lt!29047)))

(assert (=> b!67010 (= lt!29047 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!67010 (isDefined!83 (getValueByKey!130 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67011 () Bool)

(declare-fun Unit!1857 () Unit!1838)

(assert (=> b!67011 (= e!43938 Unit!1857)))

(declare-fun b!67012 () Bool)

(assert (=> b!67012 (= e!43939 (isDefined!83 (getValueByKey!130 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (= (and d!13939 c!9290) b!67010))

(assert (= (and d!13939 (not c!9290)) b!67011))

(assert (= (and d!13939 (not res!36231)) b!67012))

(assert (=> d!13939 m!61065))

(declare-fun m!61909 () Bool)

(assert (=> d!13939 m!61909))

(assert (=> b!67010 m!61065))

(declare-fun m!61911 () Bool)

(assert (=> b!67010 m!61911))

(assert (=> b!67010 m!61065))

(declare-fun m!61913 () Bool)

(assert (=> b!67010 m!61913))

(assert (=> b!67010 m!61913))

(declare-fun m!61915 () Bool)

(assert (=> b!67010 m!61915))

(assert (=> b!67012 m!61065))

(assert (=> b!67012 m!61913))

(assert (=> b!67012 m!61913))

(assert (=> b!67012 m!61915))

(assert (=> bm!5541 d!13939))

(declare-fun b!67047 () Bool)

(declare-fun res!36257 () Bool)

(declare-fun e!43960 () Bool)

(assert (=> b!67047 (=> (not res!36257) (not e!43960))))

(declare-fun lt!29110 () SeekEntryResult!233)

(assert (=> b!67047 (= res!36257 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3060 lt!29110)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67048 () Bool)

(declare-fun e!43958 () Unit!1838)

(declare-fun lt!29132 () Unit!1838)

(assert (=> b!67048 (= e!43958 lt!29132)))

(assert (=> b!67048 (= lt!29132 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(declare-fun call!5626 () SeekEntryResult!233)

(assert (=> b!67048 (= lt!29110 call!5626)))

(declare-fun c!9302 () Bool)

(assert (=> b!67048 (= c!9302 ((_ is MissingZero!233) lt!29110))))

(declare-fun e!43959 () Bool)

(assert (=> b!67048 e!43959))

(declare-fun b!67049 () Bool)

(declare-fun c!9301 () Bool)

(assert (=> b!67049 (= c!9301 ((_ is MissingVacant!233) lt!29110))))

(declare-fun e!43963 () Bool)

(assert (=> b!67049 (= e!43959 e!43963)))

(declare-fun b!67050 () Bool)

(declare-fun e!43957 () Unit!1838)

(declare-fun Unit!1858 () Unit!1838)

(assert (=> b!67050 (= e!43957 Unit!1858)))

(declare-fun b!67051 () Bool)

(declare-fun Unit!1859 () Unit!1838)

(assert (=> b!67051 (= e!43957 Unit!1859)))

(declare-fun lt!29130 () Unit!1838)

(declare-fun lemmaArrayContainsKeyThenInListMap!10 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) (_ BitVec 32) Int) Unit!1838)

(assert (=> b!67051 (= lt!29130 (lemmaArrayContainsKeyThenInListMap!10 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(assert (=> b!67051 (contains!710 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))

(declare-fun lt!29131 () Unit!1838)

(assert (=> b!67051 (= lt!29131 lt!29130)))

(assert (=> b!67051 false))

(declare-fun b!67052 () Bool)

(assert (=> b!67052 (= e!43963 ((_ is Undefined!233) lt!29110))))

(declare-fun d!13941 () Bool)

(declare-fun e!43962 () Bool)

(assert (=> d!13941 e!43962))

(declare-fun res!36258 () Bool)

(assert (=> d!13941 (=> (not res!36258) (not e!43962))))

(declare-fun lt!29122 () tuple2!2094)

(assert (=> d!13941 (= res!36258 (_1!1058 lt!29122))))

(assert (=> d!13941 (= lt!29122 (tuple2!2095 true (LongMapFixedSize!673 (defaultEntry!2147 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (bvadd (_size!385 newMap!16) #b00000000000000000000000000000001) (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (_vacant!385 newMap!16))))))

(declare-fun lt!29118 () Unit!1838)

(declare-fun lt!29138 () Unit!1838)

(assert (=> d!13941 (= lt!29118 lt!29138)))

(declare-fun lt!29121 () array!3841)

(declare-fun lt!29129 () array!3843)

(assert (=> d!13941 (contains!710 (getCurrentListMap!415 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))))))

(assert (=> d!13941 (= lt!29138 (lemmaValidKeyInArrayIsInListMap!82 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (defaultEntry!2147 newMap!16)))))

(assert (=> d!13941 (= lt!29129 (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))))

(assert (=> d!13941 (= lt!29121 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun lt!29123 () Unit!1838)

(declare-fun lt!29114 () Unit!1838)

(assert (=> d!13941 (= lt!29123 lt!29114)))

(declare-fun lt!29128 () array!3841)

(assert (=> d!13941 (= (arrayCountValidKeys!0 lt!29128 (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (bvadd (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3841 (_ BitVec 32)) Unit!1838)

(assert (=> d!13941 (= lt!29114 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!29128 (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))))))

(assert (=> d!13941 (= lt!29128 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun lt!29133 () Unit!1838)

(declare-fun lt!29126 () Unit!1838)

(assert (=> d!13941 (= lt!29133 lt!29126)))

(declare-fun lt!29117 () array!3841)

(assert (=> d!13941 (arrayContainsKey!0 lt!29117 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!13941 (= lt!29126 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!29117 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))))))

(assert (=> d!13941 (= lt!29117 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun lt!29120 () Unit!1838)

(declare-fun lt!29125 () Unit!1838)

(assert (=> d!13941 (= lt!29120 lt!29125)))

(assert (=> d!13941 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (getCurrentListMap!415 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!10 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) (_ BitVec 64) V!2915 Int) Unit!1838)

(assert (=> d!13941 (= lt!29125 (lemmaAddValidKeyToArrayThenAddPairToListMap!10 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29124 () Unit!1838)

(declare-fun lt!29111 () Unit!1838)

(assert (=> d!13941 (= lt!29124 lt!29111)))

(assert (=> d!13941 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (mask!6082 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3841 (_ BitVec 32) (_ BitVec 32)) Unit!1838)

(assert (=> d!13941 (= lt!29111 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (mask!6082 newMap!16)))))

(declare-fun lt!29116 () Unit!1838)

(declare-fun lt!29113 () Unit!1838)

(assert (=> d!13941 (= lt!29116 lt!29113)))

(assert (=> d!13941 (= (arrayCountValidKeys!0 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3841 (_ BitVec 32) (_ BitVec 64)) Unit!1838)

(assert (=> d!13941 (= lt!29113 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3787 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun lt!29137 () Unit!1838)

(declare-fun lt!29134 () Unit!1838)

(assert (=> d!13941 (= lt!29137 lt!29134)))

(declare-fun lt!29115 () List!1465)

(declare-fun lt!29127 () (_ BitVec 32))

(assert (=> d!13941 (arrayNoDuplicates!0 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) lt!29127 lt!29115)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3841 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1465) Unit!1838)

(assert (=> d!13941 (= lt!29134 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) lt!29127 lt!29115))))

(assert (=> d!13941 (= lt!29115 Nil!1462)))

(assert (=> d!13941 (= lt!29127 #b00000000000000000000000000000000)))

(declare-fun lt!29135 () Unit!1838)

(assert (=> d!13941 (= lt!29135 e!43957)))

(declare-fun c!9299 () Bool)

(assert (=> d!13941 (= c!9299 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!29136 () Unit!1838)

(assert (=> d!13941 (= lt!29136 e!43958)))

(declare-fun c!9300 () Bool)

(assert (=> d!13941 (= c!9300 (contains!710 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13941 (valid!279 newMap!16)))

(assert (=> d!13941 (= (updateHelperNewKey!21 newMap!16 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))) lt!29122)))

(declare-fun b!67053 () Bool)

(declare-fun res!36250 () Bool)

(declare-fun call!5625 () Bool)

(assert (=> b!67053 (= res!36250 call!5625)))

(declare-fun e!43956 () Bool)

(assert (=> b!67053 (=> (not res!36250) (not e!43956))))

(declare-fun b!67054 () Bool)

(declare-fun e!43961 () Bool)

(assert (=> b!67054 (= e!43963 e!43961)))

(declare-fun res!36253 () Bool)

(declare-fun call!5624 () Bool)

(assert (=> b!67054 (= res!36253 call!5624)))

(assert (=> b!67054 (=> (not res!36253) (not e!43961))))

(declare-fun b!67055 () Bool)

(declare-fun res!36254 () Bool)

(assert (=> b!67055 (=> (not res!36254) (not e!43962))))

(assert (=> b!67055 (= res!36254 (valid!279 (_2!1058 lt!29122)))))

(declare-fun bm!5620 () Bool)

(declare-fun lt!29139 () SeekEntryResult!233)

(assert (=> bm!5620 (= call!5625 (inRange!0 (ite c!9300 (index!3061 lt!29139) (ite c!9302 (index!3060 lt!29110) (index!3063 lt!29110))) (mask!6082 newMap!16)))))

(declare-fun b!67056 () Bool)

(assert (=> b!67056 (= e!43962 (= (map!1136 (_2!1058 lt!29122)) (+!89 (map!1136 newMap!16) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun bm!5621 () Bool)

(assert (=> bm!5621 (= call!5626 (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!67057 () Bool)

(assert (=> b!67057 (= e!43956 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!29139)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67058 () Bool)

(declare-fun res!36256 () Bool)

(assert (=> b!67058 (= res!36256 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3063 lt!29110)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67058 (=> (not res!36256) (not e!43961))))

(declare-fun bm!5622 () Bool)

(assert (=> bm!5622 (= call!5624 call!5625)))

(declare-fun b!67059 () Bool)

(declare-fun res!36251 () Bool)

(assert (=> b!67059 (=> (not res!36251) (not e!43960))))

(assert (=> b!67059 (= res!36251 call!5624)))

(assert (=> b!67059 (= e!43959 e!43960)))

(declare-fun b!67060 () Bool)

(declare-fun call!5623 () Bool)

(assert (=> b!67060 (= e!43961 (not call!5623))))

(declare-fun b!67061 () Bool)

(declare-fun Unit!1860 () Unit!1838)

(assert (=> b!67061 (= e!43958 Unit!1860)))

(declare-fun lt!29112 () Unit!1838)

(assert (=> b!67061 (= lt!29112 (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)))))

(assert (=> b!67061 (= lt!29139 call!5626)))

(declare-fun res!36255 () Bool)

(assert (=> b!67061 (= res!36255 ((_ is Found!233) lt!29139))))

(assert (=> b!67061 (=> (not res!36255) (not e!43956))))

(assert (=> b!67061 e!43956))

(declare-fun lt!29119 () Unit!1838)

(assert (=> b!67061 (= lt!29119 lt!29112)))

(assert (=> b!67061 false))

(declare-fun bm!5623 () Bool)

(assert (=> bm!5623 (= call!5623 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!67062 () Bool)

(assert (=> b!67062 (= e!43960 (not call!5623))))

(declare-fun b!67063 () Bool)

(declare-fun res!36252 () Bool)

(assert (=> b!67063 (=> (not res!36252) (not e!43962))))

(assert (=> b!67063 (= res!36252 (contains!710 (map!1136 (_2!1058 lt!29122)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!13941 c!9300) b!67061))

(assert (= (and d!13941 (not c!9300)) b!67048))

(assert (= (and b!67061 res!36255) b!67053))

(assert (= (and b!67053 res!36250) b!67057))

(assert (= (and b!67048 c!9302) b!67059))

(assert (= (and b!67048 (not c!9302)) b!67049))

(assert (= (and b!67059 res!36251) b!67047))

(assert (= (and b!67047 res!36257) b!67062))

(assert (= (and b!67049 c!9301) b!67054))

(assert (= (and b!67049 (not c!9301)) b!67052))

(assert (= (and b!67054 res!36253) b!67058))

(assert (= (and b!67058 res!36256) b!67060))

(assert (= (or b!67059 b!67054) bm!5622))

(assert (= (or b!67062 b!67060) bm!5623))

(assert (= (or b!67053 bm!5622) bm!5620))

(assert (= (or b!67061 b!67048) bm!5621))

(assert (= (and d!13941 c!9299) b!67051))

(assert (= (and d!13941 (not c!9299)) b!67050))

(assert (= (and d!13941 res!36258) b!67055))

(assert (= (and b!67055 res!36254) b!67063))

(assert (= (and b!67063 res!36252) b!67056))

(assert (=> bm!5623 m!61065))

(assert (=> bm!5623 m!61309))

(declare-fun m!61917 () Bool)

(assert (=> b!67056 m!61917))

(assert (=> b!67056 m!61099))

(assert (=> b!67056 m!61099))

(declare-fun m!61919 () Bool)

(assert (=> b!67056 m!61919))

(assert (=> b!67051 m!61065))

(declare-fun m!61921 () Bool)

(assert (=> b!67051 m!61921))

(assert (=> b!67051 m!61299))

(assert (=> b!67051 m!61299))

(assert (=> b!67051 m!61065))

(declare-fun m!61923 () Bool)

(assert (=> b!67051 m!61923))

(declare-fun m!61925 () Bool)

(assert (=> b!67055 m!61925))

(declare-fun m!61927 () Bool)

(assert (=> b!67058 m!61927))

(declare-fun m!61929 () Bool)

(assert (=> bm!5620 m!61929))

(declare-fun m!61931 () Bool)

(assert (=> b!67057 m!61931))

(declare-fun m!61933 () Bool)

(assert (=> d!13941 m!61933))

(declare-fun m!61935 () Bool)

(assert (=> d!13941 m!61935))

(declare-fun m!61937 () Bool)

(assert (=> d!13941 m!61937))

(declare-fun m!61939 () Bool)

(assert (=> d!13941 m!61939))

(declare-fun m!61941 () Bool)

(assert (=> d!13941 m!61941))

(assert (=> d!13941 m!61299))

(declare-fun m!61943 () Bool)

(assert (=> d!13941 m!61943))

(assert (=> d!13941 m!61185))

(declare-fun m!61945 () Bool)

(assert (=> d!13941 m!61945))

(declare-fun m!61947 () Bool)

(assert (=> d!13941 m!61947))

(declare-fun m!61949 () Bool)

(assert (=> d!13941 m!61949))

(assert (=> d!13941 m!61939))

(declare-fun m!61951 () Bool)

(assert (=> d!13941 m!61951))

(assert (=> d!13941 m!61065))

(declare-fun m!61953 () Bool)

(assert (=> d!13941 m!61953))

(assert (=> d!13941 m!61065))

(declare-fun m!61955 () Bool)

(assert (=> d!13941 m!61955))

(assert (=> d!13941 m!61299))

(assert (=> d!13941 m!61065))

(declare-fun m!61957 () Bool)

(assert (=> d!13941 m!61957))

(declare-fun m!61959 () Bool)

(assert (=> d!13941 m!61959))

(assert (=> d!13941 m!61065))

(declare-fun m!61961 () Bool)

(assert (=> d!13941 m!61961))

(declare-fun m!61963 () Bool)

(assert (=> d!13941 m!61963))

(declare-fun m!61965 () Bool)

(assert (=> d!13941 m!61965))

(assert (=> d!13941 m!61117))

(assert (=> d!13941 m!61065))

(assert (=> d!13941 m!61309))

(assert (=> d!13941 m!61949))

(assert (=> d!13941 m!61065))

(declare-fun m!61967 () Bool)

(assert (=> d!13941 m!61967))

(assert (=> d!13941 m!61065))

(declare-fun m!61969 () Bool)

(assert (=> d!13941 m!61969))

(assert (=> d!13941 m!61299))

(assert (=> d!13941 m!61065))

(assert (=> d!13941 m!61923))

(declare-fun m!61971 () Bool)

(assert (=> b!67047 m!61971))

(assert (=> b!67061 m!61065))

(assert (=> b!67061 m!61313))

(assert (=> b!67063 m!61917))

(assert (=> b!67063 m!61917))

(assert (=> b!67063 m!61065))

(declare-fun m!61973 () Bool)

(assert (=> b!67063 m!61973))

(assert (=> bm!5621 m!61065))

(assert (=> bm!5621 m!61305))

(assert (=> b!67048 m!61065))

(assert (=> b!67048 m!61343))

(assert (=> bm!5534 d!13941))

(declare-fun d!13943 () Bool)

(declare-fun lt!29140 () Bool)

(assert (=> d!13943 (= lt!29140 (select (content!72 (toList!717 lt!28675)) lt!28624))))

(declare-fun e!43964 () Bool)

(assert (=> d!13943 (= lt!29140 e!43964)))

(declare-fun res!36259 () Bool)

(assert (=> d!13943 (=> (not res!36259) (not e!43964))))

(assert (=> d!13943 (= res!36259 ((_ is Cons!1462) (toList!717 lt!28675)))))

(assert (=> d!13943 (= (contains!712 (toList!717 lt!28675) lt!28624) lt!29140)))

(declare-fun b!67064 () Bool)

(declare-fun e!43965 () Bool)

(assert (=> b!67064 (= e!43964 e!43965)))

(declare-fun res!36260 () Bool)

(assert (=> b!67064 (=> res!36260 e!43965)))

(assert (=> b!67064 (= res!36260 (= (h!2046 (toList!717 lt!28675)) lt!28624))))

(declare-fun b!67065 () Bool)

(assert (=> b!67065 (= e!43965 (contains!712 (t!4948 (toList!717 lt!28675)) lt!28624))))

(assert (= (and d!13943 res!36259) b!67064))

(assert (= (and b!67064 (not res!36260)) b!67065))

(declare-fun m!61975 () Bool)

(assert (=> d!13943 m!61975))

(declare-fun m!61977 () Bool)

(assert (=> d!13943 m!61977))

(declare-fun m!61979 () Bool)

(assert (=> b!67065 m!61979))

(assert (=> b!66455 d!13943))

(declare-fun d!13945 () Bool)

(declare-fun res!36265 () Bool)

(declare-fun e!43970 () Bool)

(assert (=> d!13945 (=> res!36265 e!43970)))

(assert (=> d!13945 (= res!36265 (and ((_ is Cons!1462) (toList!717 lt!28622)) (= (_1!1057 (h!2046 (toList!717 lt!28622))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!13945 (= (containsKey!134 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) e!43970)))

(declare-fun b!67070 () Bool)

(declare-fun e!43971 () Bool)

(assert (=> b!67070 (= e!43970 e!43971)))

(declare-fun res!36266 () Bool)

(assert (=> b!67070 (=> (not res!36266) (not e!43971))))

(assert (=> b!67070 (= res!36266 (and (or (not ((_ is Cons!1462) (toList!717 lt!28622))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28622))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))) ((_ is Cons!1462) (toList!717 lt!28622)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28622))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun b!67071 () Bool)

(assert (=> b!67071 (= e!43971 (containsKey!134 (t!4948 (toList!717 lt!28622)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!13945 (not res!36265)) b!67070))

(assert (= (and b!67070 res!36266) b!67071))

(assert (=> b!67071 m!61065))

(declare-fun m!61981 () Bool)

(assert (=> b!67071 m!61981))

(assert (=> d!13797 d!13945))

(declare-fun b!67084 () Bool)

(declare-fun e!43980 () SeekEntryResult!233)

(assert (=> b!67084 (= e!43980 Undefined!233)))

(declare-fun d!13947 () Bool)

(declare-fun lt!29149 () SeekEntryResult!233)

(assert (=> d!13947 (and (or ((_ is Undefined!233) lt!29149) (not ((_ is Found!233) lt!29149)) (and (bvsge (index!3061 lt!29149) #b00000000000000000000000000000000) (bvslt (index!3061 lt!29149) (size!2070 (_keys!3787 newMap!16))))) (or ((_ is Undefined!233) lt!29149) ((_ is Found!233) lt!29149) (not ((_ is MissingZero!233) lt!29149)) (and (bvsge (index!3060 lt!29149) #b00000000000000000000000000000000) (bvslt (index!3060 lt!29149) (size!2070 (_keys!3787 newMap!16))))) (or ((_ is Undefined!233) lt!29149) ((_ is Found!233) lt!29149) ((_ is MissingZero!233) lt!29149) (not ((_ is MissingVacant!233) lt!29149)) (and (bvsge (index!3063 lt!29149) #b00000000000000000000000000000000) (bvslt (index!3063 lt!29149) (size!2070 (_keys!3787 newMap!16))))) (or ((_ is Undefined!233) lt!29149) (ite ((_ is Found!233) lt!29149) (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!29149)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite ((_ is MissingZero!233) lt!29149) (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3060 lt!29149)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!233) lt!29149) (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3063 lt!29149)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13947 (= lt!29149 e!43980)))

(declare-fun c!9309 () Bool)

(declare-fun lt!29148 () SeekEntryResult!233)

(assert (=> d!13947 (= c!9309 (and ((_ is Intermediate!233) lt!29148) (undefined!1045 lt!29148)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3841 (_ BitVec 32)) SeekEntryResult!233)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!13947 (= lt!29148 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6082 newMap!16)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (=> d!13947 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13947 (= (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)) lt!29149)))

(declare-fun b!67085 () Bool)

(declare-fun c!9310 () Bool)

(declare-fun lt!29147 () (_ BitVec 64))

(assert (=> b!67085 (= c!9310 (= lt!29147 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!43978 () SeekEntryResult!233)

(declare-fun e!43979 () SeekEntryResult!233)

(assert (=> b!67085 (= e!43978 e!43979)))

(declare-fun b!67086 () Bool)

(assert (=> b!67086 (= e!43978 (Found!233 (index!3062 lt!29148)))))

(declare-fun b!67087 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3841 (_ BitVec 32)) SeekEntryResult!233)

(assert (=> b!67087 (= e!43979 (seekKeyOrZeroReturnVacant!0 (x!10703 lt!29148) (index!3062 lt!29148) (index!3062 lt!29148) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!67088 () Bool)

(assert (=> b!67088 (= e!43980 e!43978)))

(assert (=> b!67088 (= lt!29147 (select (arr!1835 (_keys!3787 newMap!16)) (index!3062 lt!29148)))))

(declare-fun c!9311 () Bool)

(assert (=> b!67088 (= c!9311 (= lt!29147 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67089 () Bool)

(assert (=> b!67089 (= e!43979 (MissingZero!233 (index!3062 lt!29148)))))

(assert (= (and d!13947 c!9309) b!67084))

(assert (= (and d!13947 (not c!9309)) b!67088))

(assert (= (and b!67088 c!9311) b!67086))

(assert (= (and b!67088 (not c!9311)) b!67085))

(assert (= (and b!67085 c!9310) b!67089))

(assert (= (and b!67085 (not c!9310)) b!67087))

(declare-fun m!61983 () Bool)

(assert (=> d!13947 m!61983))

(declare-fun m!61985 () Bool)

(assert (=> d!13947 m!61985))

(assert (=> d!13947 m!61065))

(declare-fun m!61987 () Bool)

(assert (=> d!13947 m!61987))

(assert (=> d!13947 m!61485))

(assert (=> d!13947 m!61987))

(assert (=> d!13947 m!61065))

(declare-fun m!61989 () Bool)

(assert (=> d!13947 m!61989))

(declare-fun m!61991 () Bool)

(assert (=> d!13947 m!61991))

(assert (=> b!67087 m!61065))

(declare-fun m!61993 () Bool)

(assert (=> b!67087 m!61993))

(declare-fun m!61995 () Bool)

(assert (=> b!67088 m!61995))

(assert (=> bm!5528 d!13947))

(declare-fun d!13949 () Bool)

(declare-fun e!43982 () Bool)

(assert (=> d!13949 e!43982))

(declare-fun res!36267 () Bool)

(assert (=> d!13949 (=> res!36267 e!43982)))

(declare-fun lt!29152 () Bool)

(assert (=> d!13949 (= res!36267 (not lt!29152))))

(declare-fun lt!29150 () Bool)

(assert (=> d!13949 (= lt!29152 lt!29150)))

(declare-fun lt!29153 () Unit!1838)

(declare-fun e!43981 () Unit!1838)

(assert (=> d!13949 (= lt!29153 e!43981)))

(declare-fun c!9312 () Bool)

(assert (=> d!13949 (= c!9312 lt!29150)))

(assert (=> d!13949 (= lt!29150 (containsKey!134 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!13949 (= (contains!710 lt!28698 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29152)))

(declare-fun b!67090 () Bool)

(declare-fun lt!29151 () Unit!1838)

(assert (=> b!67090 (= e!43981 lt!29151)))

(assert (=> b!67090 (= lt!29151 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!67090 (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67091 () Bool)

(declare-fun Unit!1861 () Unit!1838)

(assert (=> b!67091 (= e!43981 Unit!1861)))

(declare-fun b!67092 () Bool)

(assert (=> b!67092 (= e!43982 (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!13949 c!9312) b!67090))

(assert (= (and d!13949 (not c!9312)) b!67091))

(assert (= (and d!13949 (not res!36267)) b!67092))

(assert (=> d!13949 m!61229))

(declare-fun m!61997 () Bool)

(assert (=> d!13949 m!61997))

(assert (=> b!67090 m!61229))

(declare-fun m!61999 () Bool)

(assert (=> b!67090 m!61999))

(assert (=> b!67090 m!61229))

(assert (=> b!67090 m!61507))

(assert (=> b!67090 m!61507))

(declare-fun m!62001 () Bool)

(assert (=> b!67090 m!62001))

(assert (=> b!67092 m!61229))

(assert (=> b!67092 m!61507))

(assert (=> b!67092 m!61507))

(assert (=> b!67092 m!62001))

(assert (=> b!66488 d!13949))

(declare-fun d!13951 () Bool)

(declare-fun e!43984 () Bool)

(assert (=> d!13951 e!43984))

(declare-fun res!36268 () Bool)

(assert (=> d!13951 (=> res!36268 e!43984)))

(declare-fun lt!29156 () Bool)

(assert (=> d!13951 (= res!36268 (not lt!29156))))

(declare-fun lt!29154 () Bool)

(assert (=> d!13951 (= lt!29156 lt!29154)))

(declare-fun lt!29157 () Unit!1838)

(declare-fun e!43983 () Unit!1838)

(assert (=> d!13951 (= lt!29157 e!43983)))

(declare-fun c!9313 () Bool)

(assert (=> d!13951 (= c!9313 lt!29154)))

(assert (=> d!13951 (= lt!29154 (containsKey!134 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(assert (=> d!13951 (= (contains!710 call!5538 (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))) lt!29156)))

(declare-fun b!67093 () Bool)

(declare-fun lt!29155 () Unit!1838)

(assert (=> b!67093 (= e!43983 lt!29155)))

(assert (=> b!67093 (= lt!29155 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(assert (=> b!67093 (isDefined!83 (getValueByKey!130 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(declare-fun b!67094 () Bool)

(declare-fun Unit!1862 () Unit!1838)

(assert (=> b!67094 (= e!43983 Unit!1862)))

(declare-fun b!67095 () Bool)

(assert (=> b!67095 (= e!43984 (isDefined!83 (getValueByKey!130 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803)))))))

(assert (= (and d!13951 c!9313) b!67093))

(assert (= (and d!13951 (not c!9313)) b!67094))

(assert (= (and d!13951 (not res!36268)) b!67095))

(assert (=> d!13951 m!61335))

(declare-fun m!62003 () Bool)

(assert (=> d!13951 m!62003))

(assert (=> b!67093 m!61335))

(declare-fun m!62005 () Bool)

(assert (=> b!67093 m!62005))

(assert (=> b!67093 m!61335))

(declare-fun m!62007 () Bool)

(assert (=> b!67093 m!62007))

(assert (=> b!67093 m!62007))

(declare-fun m!62009 () Bool)

(assert (=> b!67093 m!62009))

(assert (=> b!67095 m!61335))

(assert (=> b!67095 m!62007))

(assert (=> b!67095 m!62007))

(assert (=> b!67095 m!62009))

(assert (=> b!66646 d!13951))

(declare-fun d!13953 () Bool)

(declare-fun e!43987 () Bool)

(assert (=> d!13953 e!43987))

(declare-fun res!36271 () Bool)

(assert (=> d!13953 (=> (not res!36271) (not e!43987))))

(assert (=> d!13953 (= res!36271 (and (bvsge (index!3061 lt!28803) #b00000000000000000000000000000000) (bvslt (index!3061 lt!28803) (size!2070 (_keys!3787 newMap!16)))))))

(declare-fun lt!29160 () Unit!1838)

(declare-fun choose!373 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) Int) Unit!1838)

(assert (=> d!13953 (= lt!29160 (choose!373 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3061 lt!28803) (defaultEntry!2147 newMap!16)))))

(assert (=> d!13953 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13953 (= (lemmaValidKeyInArrayIsInListMap!82 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3061 lt!28803) (defaultEntry!2147 newMap!16)) lt!29160)))

(declare-fun b!67098 () Bool)

(assert (=> b!67098 (= e!43987 (contains!710 (getCurrentListMap!415 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(assert (= (and d!13953 res!36271) b!67098))

(declare-fun m!62011 () Bool)

(assert (=> d!13953 m!62011))

(assert (=> d!13953 m!61485))

(declare-fun m!62013 () Bool)

(assert (=> b!67098 m!62013))

(assert (=> b!67098 m!61335))

(assert (=> b!67098 m!62013))

(assert (=> b!67098 m!61335))

(declare-fun m!62015 () Bool)

(assert (=> b!67098 m!62015))

(assert (=> b!66646 d!13953))

(declare-fun d!13955 () Bool)

(declare-fun e!43990 () Bool)

(assert (=> d!13955 e!43990))

(declare-fun res!36274 () Bool)

(assert (=> d!13955 (=> (not res!36274) (not e!43990))))

(assert (=> d!13955 (= res!36274 (and (bvsge (index!3061 lt!28803) #b00000000000000000000000000000000) (bvslt (index!3061 lt!28803) (size!2071 (_values!2130 newMap!16)))))))

(declare-fun lt!29163 () Unit!1838)

(declare-fun choose!374 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) (_ BitVec 64) V!2915 Int) Unit!1838)

(assert (=> d!13955 (= lt!29163 (choose!374 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3061 lt!28803) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 (defaultEntry!2147 newMap!16)))))

(assert (=> d!13955 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13955 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3061 lt!28803) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 (defaultEntry!2147 newMap!16)) lt!29163)))

(declare-fun b!67101 () Bool)

(assert (=> b!67101 (= e!43990 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (getCurrentListMap!415 (_keys!3787 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))))))

(assert (= (and d!13955 res!36274) b!67101))

(assert (=> d!13955 m!61065))

(declare-fun m!62017 () Bool)

(assert (=> d!13955 m!62017))

(assert (=> d!13955 m!61485))

(assert (=> b!67101 m!61299))

(assert (=> b!67101 m!61299))

(assert (=> b!67101 m!61943))

(assert (=> b!67101 m!61331))

(declare-fun m!62019 () Bool)

(assert (=> b!67101 m!62019))

(assert (=> b!66646 d!13955))

(assert (=> bm!5565 d!13769))

(declare-fun d!13957 () Bool)

(declare-fun res!36275 () Bool)

(declare-fun e!43993 () Bool)

(assert (=> d!13957 (=> res!36275 e!43993)))

(assert (=> d!13957 (= res!36275 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!13957 (= (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)) e!43993)))

(declare-fun bm!5624 () Bool)

(declare-fun call!5627 () Bool)

(declare-fun c!9314 () Bool)

(assert (=> bm!5624 (= call!5627 (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9314 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462))))))

(declare-fun e!43994 () Bool)

(declare-fun b!67102 () Bool)

(assert (=> b!67102 (= e!43994 (contains!713 (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!67103 () Bool)

(declare-fun e!43992 () Bool)

(declare-fun e!43991 () Bool)

(assert (=> b!67103 (= e!43992 e!43991)))

(assert (=> b!67103 (= c!9314 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!67104 () Bool)

(assert (=> b!67104 (= e!43993 e!43992)))

(declare-fun res!36277 () Bool)

(assert (=> b!67104 (=> (not res!36277) (not e!43992))))

(assert (=> b!67104 (= res!36277 (not e!43994))))

(declare-fun res!36276 () Bool)

(assert (=> b!67104 (=> (not res!36276) (not e!43994))))

(assert (=> b!67104 (= res!36276 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!67105 () Bool)

(assert (=> b!67105 (= e!43991 call!5627)))

(declare-fun b!67106 () Bool)

(assert (=> b!67106 (= e!43991 call!5627)))

(assert (= (and d!13957 (not res!36275)) b!67104))

(assert (= (and b!67104 res!36276) b!67102))

(assert (= (and b!67104 res!36277) b!67103))

(assert (= (and b!67103 c!9314) b!67106))

(assert (= (and b!67103 (not c!9314)) b!67105))

(assert (= (or b!67106 b!67105) bm!5624))

(declare-fun m!62021 () Bool)

(assert (=> bm!5624 m!62021))

(declare-fun m!62023 () Bool)

(assert (=> bm!5624 m!62023))

(assert (=> b!67102 m!62021))

(assert (=> b!67102 m!62021))

(declare-fun m!62025 () Bool)

(assert (=> b!67102 m!62025))

(assert (=> b!67103 m!62021))

(assert (=> b!67103 m!62021))

(declare-fun m!62027 () Bool)

(assert (=> b!67103 m!62027))

(assert (=> b!67104 m!62021))

(assert (=> b!67104 m!62021))

(assert (=> b!67104 m!62027))

(assert (=> bm!5478 d!13957))

(declare-fun d!13959 () Bool)

(assert (=> d!13959 (= (get!1118 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2477 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!66437 d!13959))

(declare-fun d!13961 () Bool)

(declare-fun e!43996 () Bool)

(assert (=> d!13961 e!43996))

(declare-fun res!36278 () Bool)

(assert (=> d!13961 (=> res!36278 e!43996)))

(declare-fun lt!29166 () Bool)

(assert (=> d!13961 (= res!36278 (not lt!29166))))

(declare-fun lt!29164 () Bool)

(assert (=> d!13961 (= lt!29166 lt!29164)))

(declare-fun lt!29167 () Unit!1838)

(declare-fun e!43995 () Unit!1838)

(assert (=> d!13961 (= lt!29167 e!43995)))

(declare-fun c!9315 () Bool)

(assert (=> d!13961 (= c!9315 lt!29164)))

(assert (=> d!13961 (= lt!29164 (containsKey!134 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!13961 (= (contains!710 lt!28877 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29166)))

(declare-fun b!67107 () Bool)

(declare-fun lt!29165 () Unit!1838)

(assert (=> b!67107 (= e!43995 lt!29165)))

(assert (=> b!67107 (= lt!29165 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!67107 (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67108 () Bool)

(declare-fun Unit!1863 () Unit!1838)

(assert (=> b!67108 (= e!43995 Unit!1863)))

(declare-fun b!67109 () Bool)

(assert (=> b!67109 (= e!43996 (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!13961 c!9315) b!67107))

(assert (= (and d!13961 (not c!9315)) b!67108))

(assert (= (and d!13961 (not res!36278)) b!67109))

(assert (=> d!13961 m!61229))

(declare-fun m!62029 () Bool)

(assert (=> d!13961 m!62029))

(assert (=> b!67107 m!61229))

(declare-fun m!62031 () Bool)

(assert (=> b!67107 m!62031))

(assert (=> b!67107 m!61229))

(assert (=> b!67107 m!61607))

(assert (=> b!67107 m!61607))

(declare-fun m!62033 () Bool)

(assert (=> b!67107 m!62033))

(assert (=> b!67109 m!61229))

(assert (=> b!67109 m!61607))

(assert (=> b!67109 m!61607))

(assert (=> b!67109 m!62033))

(assert (=> b!66718 d!13961))

(declare-fun d!13963 () Bool)

(declare-fun lt!29168 () Bool)

(assert (=> d!13963 (= lt!29168 (select (content!72 (toList!717 lt!28707)) lt!28624))))

(declare-fun e!43997 () Bool)

(assert (=> d!13963 (= lt!29168 e!43997)))

(declare-fun res!36279 () Bool)

(assert (=> d!13963 (=> (not res!36279) (not e!43997))))

(assert (=> d!13963 (= res!36279 ((_ is Cons!1462) (toList!717 lt!28707)))))

(assert (=> d!13963 (= (contains!712 (toList!717 lt!28707) lt!28624) lt!29168)))

(declare-fun b!67110 () Bool)

(declare-fun e!43998 () Bool)

(assert (=> b!67110 (= e!43997 e!43998)))

(declare-fun res!36280 () Bool)

(assert (=> b!67110 (=> res!36280 e!43998)))

(assert (=> b!67110 (= res!36280 (= (h!2046 (toList!717 lt!28707)) lt!28624))))

(declare-fun b!67111 () Bool)

(assert (=> b!67111 (= e!43998 (contains!712 (t!4948 (toList!717 lt!28707)) lt!28624))))

(assert (= (and d!13963 res!36279) b!67110))

(assert (= (and b!67110 (not res!36280)) b!67111))

(declare-fun m!62035 () Bool)

(assert (=> d!13963 m!62035))

(declare-fun m!62037 () Bool)

(assert (=> d!13963 m!62037))

(declare-fun m!62039 () Bool)

(assert (=> b!67111 m!62039))

(assert (=> b!66495 d!13963))

(declare-fun d!13965 () Bool)

(declare-fun e!43999 () Bool)

(assert (=> d!13965 e!43999))

(declare-fun res!36282 () Bool)

(assert (=> d!13965 (=> (not res!36282) (not e!43999))))

(declare-fun lt!29169 () ListLongMap!1403)

(assert (=> d!13965 (= res!36282 (contains!710 lt!29169 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun lt!29170 () List!1466)

(assert (=> d!13965 (= lt!29169 (ListLongMap!1404 lt!29170))))

(declare-fun lt!29171 () Unit!1838)

(declare-fun lt!29172 () Unit!1838)

(assert (=> d!13965 (= lt!29171 lt!29172)))

(assert (=> d!13965 (= (getValueByKey!130 lt!29170 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) (Some!135 (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!13965 (= lt!29172 (lemmaContainsTupThenGetReturnValue!47 lt!29170 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!13965 (= lt!29170 (insertStrictlySorted!50 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571))) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!13965 (= (+!89 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571)) (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29169)))

(declare-fun b!67112 () Bool)

(declare-fun res!36281 () Bool)

(assert (=> b!67112 (=> (not res!36281) (not e!43999))))

(assert (=> b!67112 (= res!36281 (= (getValueByKey!130 (toList!717 lt!29169) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) (Some!135 (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67113 () Bool)

(assert (=> b!67113 (= e!43999 (contains!712 (toList!717 lt!29169) (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (= (and d!13965 res!36282) b!67112))

(assert (= (and b!67112 res!36281) b!67113))

(declare-fun m!62041 () Bool)

(assert (=> d!13965 m!62041))

(declare-fun m!62043 () Bool)

(assert (=> d!13965 m!62043))

(declare-fun m!62045 () Bool)

(assert (=> d!13965 m!62045))

(declare-fun m!62047 () Bool)

(assert (=> d!13965 m!62047))

(declare-fun m!62049 () Bool)

(assert (=> b!67112 m!62049))

(declare-fun m!62051 () Bool)

(assert (=> b!67113 m!62051))

(assert (=> bm!5569 d!13965))

(assert (=> b!66481 d!13821))

(declare-fun d!13967 () Bool)

(declare-fun e!44001 () Bool)

(assert (=> d!13967 e!44001))

(declare-fun res!36283 () Bool)

(assert (=> d!13967 (=> res!36283 e!44001)))

(declare-fun lt!29175 () Bool)

(assert (=> d!13967 (= res!36283 (not lt!29175))))

(declare-fun lt!29173 () Bool)

(assert (=> d!13967 (= lt!29175 lt!29173)))

(declare-fun lt!29176 () Unit!1838)

(declare-fun e!44000 () Unit!1838)

(assert (=> d!13967 (= lt!29176 e!44000)))

(declare-fun c!9316 () Bool)

(assert (=> d!13967 (= c!9316 lt!29173)))

(assert (=> d!13967 (= lt!29173 (containsKey!134 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696))))

(assert (=> d!13967 (= (contains!710 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)) lt!28696) lt!29175)))

(declare-fun b!67114 () Bool)

(declare-fun lt!29174 () Unit!1838)

(assert (=> b!67114 (= e!44000 lt!29174)))

(assert (=> b!67114 (= lt!29174 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696))))

(assert (=> b!67114 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696))))

(declare-fun b!67115 () Bool)

(declare-fun Unit!1864 () Unit!1838)

(assert (=> b!67115 (= e!44000 Unit!1864)))

(declare-fun b!67116 () Bool)

(assert (=> b!67116 (= e!44001 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696)))))

(assert (= (and d!13967 c!9316) b!67114))

(assert (= (and d!13967 (not c!9316)) b!67115))

(assert (= (and d!13967 (not res!36283)) b!67116))

(declare-fun m!62053 () Bool)

(assert (=> d!13967 m!62053))

(declare-fun m!62055 () Bool)

(assert (=> b!67114 m!62055))

(declare-fun m!62057 () Bool)

(assert (=> b!67114 m!62057))

(assert (=> b!67114 m!62057))

(declare-fun m!62059 () Bool)

(assert (=> b!67114 m!62059))

(assert (=> b!67116 m!62057))

(assert (=> b!67116 m!62057))

(assert (=> b!67116 m!62059))

(assert (=> b!66481 d!13967))

(declare-fun d!13969 () Bool)

(assert (=> d!13969 (not (contains!710 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)) lt!28696))))

(declare-fun lt!29179 () Unit!1838)

(declare-fun choose!375 (ListLongMap!1403 (_ BitVec 64) V!2915 (_ BitVec 64)) Unit!1838)

(assert (=> d!13969 (= lt!29179 (choose!375 lt!28697 lt!28695 lt!28694 lt!28696))))

(declare-fun e!44004 () Bool)

(assert (=> d!13969 e!44004))

(declare-fun res!36286 () Bool)

(assert (=> d!13969 (=> (not res!36286) (not e!44004))))

(assert (=> d!13969 (= res!36286 (not (contains!710 lt!28697 lt!28696)))))

(assert (=> d!13969 (= (addStillNotContains!21 lt!28697 lt!28695 lt!28694 lt!28696) lt!29179)))

(declare-fun b!67120 () Bool)

(assert (=> b!67120 (= e!44004 (not (= lt!28695 lt!28696)))))

(assert (= (and d!13969 res!36286) b!67120))

(assert (=> d!13969 m!61221))

(assert (=> d!13969 m!61221))

(assert (=> d!13969 m!61223))

(declare-fun m!62061 () Bool)

(assert (=> d!13969 m!62061))

(declare-fun m!62063 () Bool)

(assert (=> d!13969 m!62063))

(assert (=> b!66481 d!13969))

(declare-fun d!13971 () Bool)

(declare-fun e!44005 () Bool)

(assert (=> d!13971 e!44005))

(declare-fun res!36288 () Bool)

(assert (=> d!13971 (=> (not res!36288) (not e!44005))))

(declare-fun lt!29180 () ListLongMap!1403)

(assert (=> d!13971 (= res!36288 (contains!710 lt!29180 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!29181 () List!1466)

(assert (=> d!13971 (= lt!29180 (ListLongMap!1404 lt!29181))))

(declare-fun lt!29182 () Unit!1838)

(declare-fun lt!29183 () Unit!1838)

(assert (=> d!13971 (= lt!29182 lt!29183)))

(assert (=> d!13971 (= (getValueByKey!130 lt!29181 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13971 (= lt!29183 (lemmaContainsTupThenGetReturnValue!47 lt!29181 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13971 (= lt!29181 (insertStrictlySorted!50 (toList!717 call!5478) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13971 (= (+!89 call!5478 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!29180)))

(declare-fun b!67121 () Bool)

(declare-fun res!36287 () Bool)

(assert (=> b!67121 (=> (not res!36287) (not e!44005))))

(assert (=> b!67121 (= res!36287 (= (getValueByKey!130 (toList!717 lt!29180) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!67122 () Bool)

(assert (=> b!67122 (= e!44005 (contains!712 (toList!717 lt!29180) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!13971 res!36288) b!67121))

(assert (= (and b!67121 res!36287) b!67122))

(declare-fun m!62065 () Bool)

(assert (=> d!13971 m!62065))

(declare-fun m!62067 () Bool)

(assert (=> d!13971 m!62067))

(declare-fun m!62069 () Bool)

(assert (=> d!13971 m!62069))

(declare-fun m!62071 () Bool)

(assert (=> d!13971 m!62071))

(declare-fun m!62073 () Bool)

(assert (=> b!67121 m!62073))

(declare-fun m!62075 () Bool)

(assert (=> b!67122 m!62075))

(assert (=> b!66481 d!13971))

(declare-fun d!13973 () Bool)

(declare-fun e!44006 () Bool)

(assert (=> d!13973 e!44006))

(declare-fun res!36290 () Bool)

(assert (=> d!13973 (=> (not res!36290) (not e!44006))))

(declare-fun lt!29184 () ListLongMap!1403)

(assert (=> d!13973 (= res!36290 (contains!710 lt!29184 (_1!1057 (tuple2!2093 lt!28695 lt!28694))))))

(declare-fun lt!29185 () List!1466)

(assert (=> d!13973 (= lt!29184 (ListLongMap!1404 lt!29185))))

(declare-fun lt!29186 () Unit!1838)

(declare-fun lt!29187 () Unit!1838)

(assert (=> d!13973 (= lt!29186 lt!29187)))

(assert (=> d!13973 (= (getValueByKey!130 lt!29185 (_1!1057 (tuple2!2093 lt!28695 lt!28694))) (Some!135 (_2!1057 (tuple2!2093 lt!28695 lt!28694))))))

(assert (=> d!13973 (= lt!29187 (lemmaContainsTupThenGetReturnValue!47 lt!29185 (_1!1057 (tuple2!2093 lt!28695 lt!28694)) (_2!1057 (tuple2!2093 lt!28695 lt!28694))))))

(assert (=> d!13973 (= lt!29185 (insertStrictlySorted!50 (toList!717 lt!28697) (_1!1057 (tuple2!2093 lt!28695 lt!28694)) (_2!1057 (tuple2!2093 lt!28695 lt!28694))))))

(assert (=> d!13973 (= (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)) lt!29184)))

(declare-fun b!67123 () Bool)

(declare-fun res!36289 () Bool)

(assert (=> b!67123 (=> (not res!36289) (not e!44006))))

(assert (=> b!67123 (= res!36289 (= (getValueByKey!130 (toList!717 lt!29184) (_1!1057 (tuple2!2093 lt!28695 lt!28694))) (Some!135 (_2!1057 (tuple2!2093 lt!28695 lt!28694)))))))

(declare-fun b!67124 () Bool)

(assert (=> b!67124 (= e!44006 (contains!712 (toList!717 lt!29184) (tuple2!2093 lt!28695 lt!28694)))))

(assert (= (and d!13973 res!36290) b!67123))

(assert (= (and b!67123 res!36289) b!67124))

(declare-fun m!62077 () Bool)

(assert (=> d!13973 m!62077))

(declare-fun m!62079 () Bool)

(assert (=> d!13973 m!62079))

(declare-fun m!62081 () Bool)

(assert (=> d!13973 m!62081))

(declare-fun m!62083 () Bool)

(assert (=> d!13973 m!62083))

(declare-fun m!62085 () Bool)

(assert (=> b!67123 m!62085))

(declare-fun m!62087 () Bool)

(assert (=> b!67124 m!62087))

(assert (=> b!66481 d!13973))

(assert (=> b!66626 d!13903))

(declare-fun b!67133 () Bool)

(declare-fun e!44012 () (_ BitVec 32))

(declare-fun call!5630 () (_ BitVec 32))

(assert (=> b!67133 (= e!44012 call!5630)))

(declare-fun d!13975 () Bool)

(declare-fun lt!29190 () (_ BitVec 32))

(assert (=> d!13975 (and (bvsge lt!29190 #b00000000000000000000000000000000) (bvsle lt!29190 (bvsub (size!2070 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!44011 () (_ BitVec 32))

(assert (=> d!13975 (= lt!29190 e!44011)))

(declare-fun c!9321 () Bool)

(assert (=> d!13975 (= c!9321 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!13975 (and (bvsle #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2070 (_keys!3787 newMap!16)) (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!13975 (= (arrayCountValidKeys!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) lt!29190)))

(declare-fun b!67134 () Bool)

(assert (=> b!67134 (= e!44012 (bvadd #b00000000000000000000000000000001 call!5630))))

(declare-fun b!67135 () Bool)

(assert (=> b!67135 (= e!44011 #b00000000000000000000000000000000)))

(declare-fun b!67136 () Bool)

(assert (=> b!67136 (= e!44011 e!44012)))

(declare-fun c!9322 () Bool)

(assert (=> b!67136 (= c!9322 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5627 () Bool)

(assert (=> bm!5627 (= call!5630 (arrayCountValidKeys!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))))))

(assert (= (and d!13975 c!9321) b!67135))

(assert (= (and d!13975 (not c!9321)) b!67136))

(assert (= (and b!67136 c!9322) b!67134))

(assert (= (and b!67136 (not c!9322)) b!67133))

(assert (= (or b!67134 b!67133) bm!5627))

(assert (=> b!67136 m!61465))

(assert (=> b!67136 m!61465))

(assert (=> b!67136 m!61479))

(declare-fun m!62089 () Bool)

(assert (=> bm!5627 m!62089))

(assert (=> b!66445 d!13975))

(declare-fun d!13977 () Bool)

(declare-fun c!9323 () Bool)

(assert (=> d!13977 (= c!9323 (and ((_ is Cons!1462) (toList!717 lt!28671)) (= (_1!1057 (h!2046 (toList!717 lt!28671))) (_1!1057 lt!28617))))))

(declare-fun e!44013 () Option!136)

(assert (=> d!13977 (= (getValueByKey!130 (toList!717 lt!28671) (_1!1057 lt!28617)) e!44013)))

(declare-fun b!67138 () Bool)

(declare-fun e!44014 () Option!136)

(assert (=> b!67138 (= e!44013 e!44014)))

(declare-fun c!9324 () Bool)

(assert (=> b!67138 (= c!9324 (and ((_ is Cons!1462) (toList!717 lt!28671)) (not (= (_1!1057 (h!2046 (toList!717 lt!28671))) (_1!1057 lt!28617)))))))

(declare-fun b!67137 () Bool)

(assert (=> b!67137 (= e!44013 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28671)))))))

(declare-fun b!67139 () Bool)

(assert (=> b!67139 (= e!44014 (getValueByKey!130 (t!4948 (toList!717 lt!28671)) (_1!1057 lt!28617)))))

(declare-fun b!67140 () Bool)

(assert (=> b!67140 (= e!44014 None!134)))

(assert (= (and d!13977 c!9323) b!67137))

(assert (= (and d!13977 (not c!9323)) b!67138))

(assert (= (and b!67138 c!9324) b!67139))

(assert (= (and b!67138 (not c!9324)) b!67140))

(declare-fun m!62091 () Bool)

(assert (=> b!67139 m!62091))

(assert (=> b!66452 d!13977))

(declare-fun d!13979 () Bool)

(declare-fun isEmpty!308 (List!1466) Bool)

(assert (=> d!13979 (= (isEmpty!307 lt!28698) (isEmpty!308 (toList!717 lt!28698)))))

(declare-fun bs!2883 () Bool)

(assert (= bs!2883 d!13979))

(declare-fun m!62093 () Bool)

(assert (=> bs!2883 m!62093))

(assert (=> b!66483 d!13979))

(declare-fun d!13981 () Bool)

(declare-fun e!44016 () Bool)

(assert (=> d!13981 e!44016))

(declare-fun res!36291 () Bool)

(assert (=> d!13981 (=> res!36291 e!44016)))

(declare-fun lt!29193 () Bool)

(assert (=> d!13981 (= res!36291 (not lt!29193))))

(declare-fun lt!29191 () Bool)

(assert (=> d!13981 (= lt!29193 lt!29191)))

(declare-fun lt!29194 () Unit!1838)

(declare-fun e!44015 () Unit!1838)

(assert (=> d!13981 (= lt!29194 e!44015)))

(declare-fun c!9325 () Bool)

(assert (=> d!13981 (= c!9325 lt!29191)))

(assert (=> d!13981 (= lt!29191 (containsKey!134 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13981 (= (contains!710 lt!28698 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29193)))

(declare-fun b!67141 () Bool)

(declare-fun lt!29192 () Unit!1838)

(assert (=> b!67141 (= e!44015 lt!29192)))

(assert (=> b!67141 (= lt!29192 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67141 (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67142 () Bool)

(declare-fun Unit!1865 () Unit!1838)

(assert (=> b!67142 (= e!44015 Unit!1865)))

(declare-fun b!67143 () Bool)

(assert (=> b!67143 (= e!44016 (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13981 c!9325) b!67141))

(assert (= (and d!13981 (not c!9325)) b!67142))

(assert (= (and d!13981 (not res!36291)) b!67143))

(declare-fun m!62095 () Bool)

(assert (=> d!13981 m!62095))

(declare-fun m!62097 () Bool)

(assert (=> b!67141 m!62097))

(declare-fun m!62099 () Bool)

(assert (=> b!67141 m!62099))

(assert (=> b!67141 m!62099))

(declare-fun m!62101 () Bool)

(assert (=> b!67141 m!62101))

(assert (=> b!67143 m!62099))

(assert (=> b!67143 m!62099))

(assert (=> b!67143 m!62101))

(assert (=> b!66485 d!13981))

(declare-fun d!13983 () Bool)

(declare-fun c!9326 () Bool)

(assert (=> d!13983 (= c!9326 (and ((_ is Cons!1462) (toList!717 lt!28675)) (= (_1!1057 (h!2046 (toList!717 lt!28675))) (_1!1057 lt!28624))))))

(declare-fun e!44017 () Option!136)

(assert (=> d!13983 (= (getValueByKey!130 (toList!717 lt!28675) (_1!1057 lt!28624)) e!44017)))

(declare-fun b!67145 () Bool)

(declare-fun e!44018 () Option!136)

(assert (=> b!67145 (= e!44017 e!44018)))

(declare-fun c!9327 () Bool)

(assert (=> b!67145 (= c!9327 (and ((_ is Cons!1462) (toList!717 lt!28675)) (not (= (_1!1057 (h!2046 (toList!717 lt!28675))) (_1!1057 lt!28624)))))))

(declare-fun b!67144 () Bool)

(assert (=> b!67144 (= e!44017 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28675)))))))

(declare-fun b!67146 () Bool)

(assert (=> b!67146 (= e!44018 (getValueByKey!130 (t!4948 (toList!717 lt!28675)) (_1!1057 lt!28624)))))

(declare-fun b!67147 () Bool)

(assert (=> b!67147 (= e!44018 None!134)))

(assert (= (and d!13983 c!9326) b!67144))

(assert (= (and d!13983 (not c!9326)) b!67145))

(assert (= (and b!67145 c!9327) b!67146))

(assert (= (and b!67145 (not c!9327)) b!67147))

(declare-fun m!62103 () Bool)

(assert (=> b!67146 m!62103))

(assert (=> b!66454 d!13983))

(assert (=> b!66652 d!13947))

(declare-fun d!13985 () Bool)

(declare-fun e!44020 () Bool)

(assert (=> d!13985 e!44020))

(declare-fun res!36292 () Bool)

(assert (=> d!13985 (=> res!36292 e!44020)))

(declare-fun lt!29197 () Bool)

(assert (=> d!13985 (= res!36292 (not lt!29197))))

(declare-fun lt!29195 () Bool)

(assert (=> d!13985 (= lt!29197 lt!29195)))

(declare-fun lt!29198 () Unit!1838)

(declare-fun e!44019 () Unit!1838)

(assert (=> d!13985 (= lt!29198 e!44019)))

(declare-fun c!9328 () Bool)

(assert (=> d!13985 (= c!9328 lt!29195)))

(assert (=> d!13985 (= lt!29195 (containsKey!134 (toList!717 lt!28675) (_1!1057 lt!28624)))))

(assert (=> d!13985 (= (contains!710 lt!28675 (_1!1057 lt!28624)) lt!29197)))

(declare-fun b!67148 () Bool)

(declare-fun lt!29196 () Unit!1838)

(assert (=> b!67148 (= e!44019 lt!29196)))

(assert (=> b!67148 (= lt!29196 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28675) (_1!1057 lt!28624)))))

(assert (=> b!67148 (isDefined!83 (getValueByKey!130 (toList!717 lt!28675) (_1!1057 lt!28624)))))

(declare-fun b!67149 () Bool)

(declare-fun Unit!1866 () Unit!1838)

(assert (=> b!67149 (= e!44019 Unit!1866)))

(declare-fun b!67150 () Bool)

(assert (=> b!67150 (= e!44020 (isDefined!83 (getValueByKey!130 (toList!717 lt!28675) (_1!1057 lt!28624))))))

(assert (= (and d!13985 c!9328) b!67148))

(assert (= (and d!13985 (not c!9328)) b!67149))

(assert (= (and d!13985 (not res!36292)) b!67150))

(declare-fun m!62105 () Bool)

(assert (=> d!13985 m!62105))

(declare-fun m!62107 () Bool)

(assert (=> b!67148 m!62107))

(assert (=> b!67148 m!61211))

(assert (=> b!67148 m!61211))

(declare-fun m!62109 () Bool)

(assert (=> b!67148 m!62109))

(assert (=> b!67150 m!61211))

(assert (=> b!67150 m!61211))

(assert (=> b!67150 m!62109))

(assert (=> d!13767 d!13985))

(declare-fun d!13987 () Bool)

(declare-fun c!9329 () Bool)

(assert (=> d!13987 (= c!9329 (and ((_ is Cons!1462) lt!28676) (= (_1!1057 (h!2046 lt!28676)) (_1!1057 lt!28624))))))

(declare-fun e!44021 () Option!136)

(assert (=> d!13987 (= (getValueByKey!130 lt!28676 (_1!1057 lt!28624)) e!44021)))

(declare-fun b!67152 () Bool)

(declare-fun e!44022 () Option!136)

(assert (=> b!67152 (= e!44021 e!44022)))

(declare-fun c!9330 () Bool)

(assert (=> b!67152 (= c!9330 (and ((_ is Cons!1462) lt!28676) (not (= (_1!1057 (h!2046 lt!28676)) (_1!1057 lt!28624)))))))

(declare-fun b!67151 () Bool)

(assert (=> b!67151 (= e!44021 (Some!135 (_2!1057 (h!2046 lt!28676))))))

(declare-fun b!67153 () Bool)

(assert (=> b!67153 (= e!44022 (getValueByKey!130 (t!4948 lt!28676) (_1!1057 lt!28624)))))

(declare-fun b!67154 () Bool)

(assert (=> b!67154 (= e!44022 None!134)))

(assert (= (and d!13987 c!9329) b!67151))

(assert (= (and d!13987 (not c!9329)) b!67152))

(assert (= (and b!67152 c!9330) b!67153))

(assert (= (and b!67152 (not c!9330)) b!67154))

(declare-fun m!62111 () Bool)

(assert (=> b!67153 m!62111))

(assert (=> d!13767 d!13987))

(declare-fun d!13989 () Bool)

(assert (=> d!13989 (= (getValueByKey!130 lt!28676 (_1!1057 lt!28624)) (Some!135 (_2!1057 lt!28624)))))

(declare-fun lt!29199 () Unit!1838)

(assert (=> d!13989 (= lt!29199 (choose!367 lt!28676 (_1!1057 lt!28624) (_2!1057 lt!28624)))))

(declare-fun e!44023 () Bool)

(assert (=> d!13989 e!44023))

(declare-fun res!36293 () Bool)

(assert (=> d!13989 (=> (not res!36293) (not e!44023))))

(assert (=> d!13989 (= res!36293 (isStrictlySorted!289 lt!28676))))

(assert (=> d!13989 (= (lemmaContainsTupThenGetReturnValue!47 lt!28676 (_1!1057 lt!28624) (_2!1057 lt!28624)) lt!29199)))

(declare-fun b!67155 () Bool)

(declare-fun res!36294 () Bool)

(assert (=> b!67155 (=> (not res!36294) (not e!44023))))

(assert (=> b!67155 (= res!36294 (containsKey!134 lt!28676 (_1!1057 lt!28624)))))

(declare-fun b!67156 () Bool)

(assert (=> b!67156 (= e!44023 (contains!712 lt!28676 (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(assert (= (and d!13989 res!36293) b!67155))

(assert (= (and b!67155 res!36294) b!67156))

(assert (=> d!13989 m!61205))

(declare-fun m!62113 () Bool)

(assert (=> d!13989 m!62113))

(declare-fun m!62115 () Bool)

(assert (=> d!13989 m!62115))

(declare-fun m!62117 () Bool)

(assert (=> b!67155 m!62117))

(declare-fun m!62119 () Bool)

(assert (=> b!67156 m!62119))

(assert (=> d!13767 d!13989))

(declare-fun b!67157 () Bool)

(declare-fun e!44026 () List!1466)

(declare-fun call!5631 () List!1466)

(assert (=> b!67157 (= e!44026 call!5631)))

(declare-fun bm!5628 () Bool)

(declare-fun call!5632 () List!1466)

(declare-fun call!5633 () List!1466)

(assert (=> bm!5628 (= call!5632 call!5633)))

(declare-fun b!67158 () Bool)

(declare-fun e!44028 () Bool)

(declare-fun lt!29200 () List!1466)

(assert (=> b!67158 (= e!44028 (contains!712 lt!29200 (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun b!67159 () Bool)

(assert (=> b!67159 (= e!44026 call!5631)))

(declare-fun b!67160 () Bool)

(declare-fun e!44024 () List!1466)

(assert (=> b!67160 (= e!44024 (insertStrictlySorted!50 (t!4948 (toList!717 lt!28620)) (_1!1057 lt!28624) (_2!1057 lt!28624)))))

(declare-fun b!67161 () Bool)

(declare-fun e!44027 () List!1466)

(assert (=> b!67161 (= e!44027 call!5633)))

(declare-fun c!9331 () Bool)

(declare-fun c!9333 () Bool)

(declare-fun b!67162 () Bool)

(assert (=> b!67162 (= e!44024 (ite c!9331 (t!4948 (toList!717 lt!28620)) (ite c!9333 (Cons!1462 (h!2046 (toList!717 lt!28620)) (t!4948 (toList!717 lt!28620))) Nil!1463)))))

(declare-fun d!13991 () Bool)

(assert (=> d!13991 e!44028))

(declare-fun res!36296 () Bool)

(assert (=> d!13991 (=> (not res!36296) (not e!44028))))

(assert (=> d!13991 (= res!36296 (isStrictlySorted!289 lt!29200))))

(assert (=> d!13991 (= lt!29200 e!44027)))

(declare-fun c!9334 () Bool)

(assert (=> d!13991 (= c!9334 (and ((_ is Cons!1462) (toList!717 lt!28620)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 lt!28624))))))

(assert (=> d!13991 (isStrictlySorted!289 (toList!717 lt!28620))))

(assert (=> d!13991 (= (insertStrictlySorted!50 (toList!717 lt!28620) (_1!1057 lt!28624) (_2!1057 lt!28624)) lt!29200)))

(declare-fun bm!5629 () Bool)

(assert (=> bm!5629 (= call!5631 call!5632)))

(declare-fun b!67163 () Bool)

(declare-fun res!36295 () Bool)

(assert (=> b!67163 (=> (not res!36295) (not e!44028))))

(assert (=> b!67163 (= res!36295 (containsKey!134 lt!29200 (_1!1057 lt!28624)))))

(declare-fun b!67164 () Bool)

(declare-fun e!44025 () List!1466)

(assert (=> b!67164 (= e!44025 call!5632)))

(declare-fun b!67165 () Bool)

(assert (=> b!67165 (= c!9333 (and ((_ is Cons!1462) (toList!717 lt!28620)) (bvsgt (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 lt!28624))))))

(assert (=> b!67165 (= e!44025 e!44026)))

(declare-fun b!67166 () Bool)

(assert (=> b!67166 (= e!44027 e!44025)))

(assert (=> b!67166 (= c!9331 (and ((_ is Cons!1462) (toList!717 lt!28620)) (= (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 lt!28624))))))

(declare-fun bm!5630 () Bool)

(assert (=> bm!5630 (= call!5633 ($colon$colon!63 e!44024 (ite c!9334 (h!2046 (toList!717 lt!28620)) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624)))))))

(declare-fun c!9332 () Bool)

(assert (=> bm!5630 (= c!9332 c!9334)))

(assert (= (and d!13991 c!9334) b!67161))

(assert (= (and d!13991 (not c!9334)) b!67166))

(assert (= (and b!67166 c!9331) b!67164))

(assert (= (and b!67166 (not c!9331)) b!67165))

(assert (= (and b!67165 c!9333) b!67159))

(assert (= (and b!67165 (not c!9333)) b!67157))

(assert (= (or b!67159 b!67157) bm!5629))

(assert (= (or b!67164 bm!5629) bm!5628))

(assert (= (or b!67161 bm!5628) bm!5630))

(assert (= (and bm!5630 c!9332) b!67160))

(assert (= (and bm!5630 (not c!9332)) b!67162))

(assert (= (and d!13991 res!36296) b!67163))

(assert (= (and b!67163 res!36295) b!67158))

(declare-fun m!62121 () Bool)

(assert (=> b!67158 m!62121))

(declare-fun m!62123 () Bool)

(assert (=> d!13991 m!62123))

(assert (=> d!13991 m!61425))

(declare-fun m!62125 () Bool)

(assert (=> bm!5630 m!62125))

(declare-fun m!62127 () Bool)

(assert (=> b!67163 m!62127))

(declare-fun m!62129 () Bool)

(assert (=> b!67160 m!62129))

(assert (=> d!13767 d!13991))

(declare-fun d!13993 () Bool)

(declare-fun e!44030 () Bool)

(assert (=> d!13993 e!44030))

(declare-fun res!36297 () Bool)

(assert (=> d!13993 (=> res!36297 e!44030)))

(declare-fun lt!29203 () Bool)

(assert (=> d!13993 (= res!36297 (not lt!29203))))

(declare-fun lt!29201 () Bool)

(assert (=> d!13993 (= lt!29203 lt!29201)))

(declare-fun lt!29204 () Unit!1838)

(declare-fun e!44029 () Unit!1838)

(assert (=> d!13993 (= lt!29204 e!44029)))

(declare-fun c!9335 () Bool)

(assert (=> d!13993 (= c!9335 lt!29201)))

(assert (=> d!13993 (= lt!29201 (containsKey!134 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13993 (= (contains!710 lt!28698 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29203)))

(declare-fun b!67167 () Bool)

(declare-fun lt!29202 () Unit!1838)

(assert (=> b!67167 (= e!44029 lt!29202)))

(assert (=> b!67167 (= lt!29202 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67167 (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67168 () Bool)

(declare-fun Unit!1867 () Unit!1838)

(assert (=> b!67168 (= e!44029 Unit!1867)))

(declare-fun b!67169 () Bool)

(assert (=> b!67169 (= e!44030 (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13993 c!9335) b!67167))

(assert (= (and d!13993 (not c!9335)) b!67168))

(assert (= (and d!13993 (not res!36297)) b!67169))

(declare-fun m!62131 () Bool)

(assert (=> d!13993 m!62131))

(declare-fun m!62133 () Bool)

(assert (=> b!67167 m!62133))

(declare-fun m!62135 () Bool)

(assert (=> b!67167 m!62135))

(assert (=> b!67167 m!62135))

(declare-fun m!62137 () Bool)

(assert (=> b!67167 m!62137))

(assert (=> b!67169 m!62135))

(assert (=> b!67169 m!62135))

(assert (=> b!67169 m!62137))

(assert (=> d!13769 d!13993))

(assert (=> d!13769 d!13777))

(declare-fun d!13995 () Bool)

(declare-fun e!44031 () Bool)

(assert (=> d!13995 e!44031))

(declare-fun res!36299 () Bool)

(assert (=> d!13995 (=> (not res!36299) (not e!44031))))

(declare-fun lt!29205 () ListLongMap!1403)

(assert (=> d!13995 (= res!36299 (contains!710 lt!29205 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun lt!29206 () List!1466)

(assert (=> d!13995 (= lt!29205 (ListLongMap!1404 lt!29206))))

(declare-fun lt!29207 () Unit!1838)

(declare-fun lt!29208 () Unit!1838)

(assert (=> d!13995 (= lt!29207 lt!29208)))

(assert (=> d!13995 (= (getValueByKey!130 lt!29206 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) (Some!135 (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> d!13995 (= lt!29208 (lemmaContainsTupThenGetReturnValue!47 lt!29206 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> d!13995 (= lt!29206 (insertStrictlySorted!50 (toList!717 e!43715) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> d!13995 (= (+!89 e!43715 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29205)))

(declare-fun b!67170 () Bool)

(declare-fun res!36298 () Bool)

(assert (=> b!67170 (=> (not res!36298) (not e!44031))))

(assert (=> b!67170 (= res!36298 (= (getValueByKey!130 (toList!717 lt!29205) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) (Some!135 (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun b!67171 () Bool)

(assert (=> b!67171 (= e!44031 (contains!712 (toList!717 lt!29205) (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (= (and d!13995 res!36299) b!67170))

(assert (= (and b!67170 res!36298) b!67171))

(declare-fun m!62139 () Bool)

(assert (=> d!13995 m!62139))

(declare-fun m!62141 () Bool)

(assert (=> d!13995 m!62141))

(declare-fun m!62143 () Bool)

(assert (=> d!13995 m!62143))

(declare-fun m!62145 () Bool)

(assert (=> d!13995 m!62145))

(declare-fun m!62147 () Bool)

(assert (=> b!67170 m!62147))

(declare-fun m!62149 () Bool)

(assert (=> b!67171 m!62149))

(assert (=> bm!5544 d!13995))

(declare-fun d!13997 () Bool)

(assert (=> d!13997 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28786 (zeroValue!2055 newMap!16) lt!28616 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29211 () Unit!1838)

(declare-fun choose!376 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 V!2915 Int) Unit!1838)

(assert (=> d!13997 (= lt!29211 (choose!376 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28786 (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) lt!28616 (defaultEntry!2147 newMap!16)))))

(assert (=> d!13997 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!13997 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28786 (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) lt!28616 (defaultEntry!2147 newMap!16)) lt!29211)))

(declare-fun bs!2884 () Bool)

(assert (= bs!2884 d!13997))

(assert (=> bs!2884 m!61299))

(declare-fun m!62151 () Bool)

(assert (=> bs!2884 m!62151))

(assert (=> bs!2884 m!61485))

(assert (=> bs!2884 m!61299))

(declare-fun m!62153 () Bool)

(assert (=> bs!2884 m!62153))

(declare-fun m!62155 () Bool)

(assert (=> bs!2884 m!62155))

(assert (=> b!66624 d!13997))

(declare-fun d!13999 () Bool)

(assert (=> d!13999 (isDefined!83 (getValueByKey!130 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun lt!29214 () Unit!1838)

(declare-fun choose!377 (List!1466 (_ BitVec 64)) Unit!1838)

(assert (=> d!13999 (= lt!29214 (choose!377 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!44034 () Bool)

(assert (=> d!13999 e!44034))

(declare-fun res!36302 () Bool)

(assert (=> d!13999 (=> (not res!36302) (not e!44034))))

(assert (=> d!13999 (= res!36302 (isStrictlySorted!289 (toList!717 lt!28622)))))

(assert (=> d!13999 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29214)))

(declare-fun b!67174 () Bool)

(assert (=> b!67174 (= e!44034 (containsKey!134 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!13999 res!36302) b!67174))

(assert (=> d!13999 m!61065))

(assert (=> d!13999 m!61295))

(assert (=> d!13999 m!61295))

(assert (=> d!13999 m!61297))

(assert (=> d!13999 m!61065))

(declare-fun m!62157 () Bool)

(assert (=> d!13999 m!62157))

(declare-fun m!62159 () Bool)

(assert (=> d!13999 m!62159))

(assert (=> b!67174 m!61065))

(assert (=> b!67174 m!61291))

(assert (=> b!66529 d!13999))

(declare-fun d!14001 () Bool)

(declare-fun isEmpty!309 (Option!136) Bool)

(assert (=> d!14001 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(declare-fun bs!2885 () Bool)

(assert (= bs!2885 d!14001))

(assert (=> bs!2885 m!61295))

(declare-fun m!62161 () Bool)

(assert (=> bs!2885 m!62161))

(assert (=> b!66529 d!14001))

(declare-fun d!14003 () Bool)

(declare-fun c!9336 () Bool)

(assert (=> d!14003 (= c!9336 (and ((_ is Cons!1462) (toList!717 lt!28622)) (= (_1!1057 (h!2046 (toList!717 lt!28622))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun e!44035 () Option!136)

(assert (=> d!14003 (= (getValueByKey!130 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44035)))

(declare-fun b!67176 () Bool)

(declare-fun e!44036 () Option!136)

(assert (=> b!67176 (= e!44035 e!44036)))

(declare-fun c!9337 () Bool)

(assert (=> b!67176 (= c!9337 (and ((_ is Cons!1462) (toList!717 lt!28622)) (not (= (_1!1057 (h!2046 (toList!717 lt!28622))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(declare-fun b!67175 () Bool)

(assert (=> b!67175 (= e!44035 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28622)))))))

(declare-fun b!67177 () Bool)

(assert (=> b!67177 (= e!44036 (getValueByKey!130 (t!4948 (toList!717 lt!28622)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67178 () Bool)

(assert (=> b!67178 (= e!44036 None!134)))

(assert (= (and d!14003 c!9336) b!67175))

(assert (= (and d!14003 (not c!9336)) b!67176))

(assert (= (and b!67176 c!9337) b!67177))

(assert (= (and b!67176 (not c!9337)) b!67178))

(assert (=> b!67177 m!61065))

(declare-fun m!62163 () Bool)

(assert (=> b!67177 m!62163))

(assert (=> b!66529 d!14003))

(declare-fun b!67179 () Bool)

(declare-fun e!44046 () ListLongMap!1403)

(declare-fun call!5639 () ListLongMap!1403)

(assert (=> b!67179 (= e!44046 call!5639)))

(declare-fun b!67180 () Bool)

(declare-fun e!44041 () ListLongMap!1403)

(assert (=> b!67180 (= e!44041 call!5639)))

(declare-fun e!44044 () Bool)

(declare-fun b!67181 () Bool)

(declare-fun lt!29235 () ListLongMap!1403)

(assert (=> b!67181 (= e!44044 (= (apply!72 lt!29235 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))

(declare-fun call!5640 () ListLongMap!1403)

(declare-fun bm!5631 () Bool)

(assert (=> bm!5631 (= call!5640 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite c!9195 (_values!2130 newMap!16) lt!28797) (mask!6082 newMap!16) (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5632 () Bool)

(declare-fun call!5634 () Bool)

(assert (=> bm!5632 (= call!5634 (contains!710 lt!29235 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5633 () Bool)

(declare-fun call!5637 () ListLongMap!1403)

(declare-fun call!5635 () ListLongMap!1403)

(assert (=> bm!5633 (= call!5637 call!5635)))

(declare-fun b!67182 () Bool)

(declare-fun e!44047 () ListLongMap!1403)

(declare-fun call!5638 () ListLongMap!1403)

(assert (=> b!67182 (= e!44047 (+!89 call!5638 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))

(declare-fun b!67183 () Bool)

(declare-fun e!44039 () Unit!1838)

(declare-fun lt!29236 () Unit!1838)

(assert (=> b!67183 (= e!44039 lt!29236)))

(declare-fun lt!29232 () ListLongMap!1403)

(assert (=> b!67183 (= lt!29232 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite c!9195 (_values!2130 newMap!16) lt!28797) (mask!6082 newMap!16) (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29234 () (_ BitVec 64))

(assert (=> b!67183 (= lt!29234 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29224 () (_ BitVec 64))

(assert (=> b!67183 (= lt!29224 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29223 () Unit!1838)

(assert (=> b!67183 (= lt!29223 (addStillContains!48 lt!29232 lt!29234 (zeroValue!2055 newMap!16) lt!29224))))

(assert (=> b!67183 (contains!710 (+!89 lt!29232 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16))) lt!29224)))

(declare-fun lt!29216 () Unit!1838)

(assert (=> b!67183 (= lt!29216 lt!29223)))

(declare-fun lt!29229 () ListLongMap!1403)

(assert (=> b!67183 (= lt!29229 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite c!9195 (_values!2130 newMap!16) lt!28797) (mask!6082 newMap!16) (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29226 () (_ BitVec 64))

(assert (=> b!67183 (= lt!29226 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29218 () (_ BitVec 64))

(assert (=> b!67183 (= lt!29218 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29219 () Unit!1838)

(assert (=> b!67183 (= lt!29219 (addApplyDifferent!48 lt!29229 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) lt!29218))))

(assert (=> b!67183 (= (apply!72 (+!89 lt!29229 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) lt!29218) (apply!72 lt!29229 lt!29218))))

(declare-fun lt!29233 () Unit!1838)

(assert (=> b!67183 (= lt!29233 lt!29219)))

(declare-fun lt!29221 () ListLongMap!1403)

(assert (=> b!67183 (= lt!29221 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite c!9195 (_values!2130 newMap!16) lt!28797) (mask!6082 newMap!16) (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29220 () (_ BitVec 64))

(assert (=> b!67183 (= lt!29220 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29231 () (_ BitVec 64))

(assert (=> b!67183 (= lt!29231 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29230 () Unit!1838)

(assert (=> b!67183 (= lt!29230 (addApplyDifferent!48 lt!29221 lt!29220 (zeroValue!2055 newMap!16) lt!29231))))

(assert (=> b!67183 (= (apply!72 (+!89 lt!29221 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16))) lt!29231) (apply!72 lt!29221 lt!29231))))

(declare-fun lt!29222 () Unit!1838)

(assert (=> b!67183 (= lt!29222 lt!29230)))

(declare-fun lt!29225 () ListLongMap!1403)

(assert (=> b!67183 (= lt!29225 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite c!9195 (_values!2130 newMap!16) lt!28797) (mask!6082 newMap!16) (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29215 () (_ BitVec 64))

(assert (=> b!67183 (= lt!29215 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29228 () (_ BitVec 64))

(assert (=> b!67183 (= lt!29228 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67183 (= lt!29236 (addApplyDifferent!48 lt!29225 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) lt!29228))))

(assert (=> b!67183 (= (apply!72 (+!89 lt!29225 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) lt!29228) (apply!72 lt!29225 lt!29228))))

(declare-fun b!67184 () Bool)

(declare-fun e!44045 () Bool)

(assert (=> b!67184 (= e!44045 (= (apply!72 lt!29235 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (ite c!9195 (_values!2130 newMap!16) lt!28797)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67184 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (ite c!9195 (_values!2130 newMap!16) lt!28797))))))

(assert (=> b!67184 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67185 () Bool)

(assert (=> b!67185 (= e!44047 e!44046)))

(declare-fun c!9340 () Bool)

(assert (=> b!67185 (= c!9340 (and (not (= (bvand (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14005 () Bool)

(declare-fun e!44043 () Bool)

(assert (=> d!14005 e!44043))

(declare-fun res!36308 () Bool)

(assert (=> d!14005 (=> (not res!36308) (not e!44043))))

(assert (=> d!14005 (= res!36308 (or (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))))

(declare-fun lt!29217 () ListLongMap!1403)

(assert (=> d!14005 (= lt!29235 lt!29217)))

(declare-fun lt!29227 () Unit!1838)

(assert (=> d!14005 (= lt!29227 e!44039)))

(declare-fun c!9342 () Bool)

(declare-fun e!44048 () Bool)

(assert (=> d!14005 (= c!9342 e!44048)))

(declare-fun res!36310 () Bool)

(assert (=> d!14005 (=> (not res!36310) (not e!44048))))

(assert (=> d!14005 (= res!36310 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14005 (= lt!29217 e!44047)))

(declare-fun c!9341 () Bool)

(assert (=> d!14005 (= c!9341 (and (not (= (bvand (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14005 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14005 (= (getCurrentListMap!415 (_keys!3787 newMap!16) (ite c!9195 (_values!2130 newMap!16) lt!28797) (mask!6082 newMap!16) (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29235)))

(declare-fun b!67186 () Bool)

(declare-fun e!44042 () Bool)

(declare-fun call!5636 () Bool)

(assert (=> b!67186 (= e!44042 (not call!5636))))

(declare-fun b!67187 () Bool)

(declare-fun res!36307 () Bool)

(assert (=> b!67187 (=> (not res!36307) (not e!44043))))

(assert (=> b!67187 (= res!36307 e!44042)))

(declare-fun c!9339 () Bool)

(assert (=> b!67187 (= c!9339 (not (= (bvand (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5634 () Bool)

(assert (=> bm!5634 (= call!5639 call!5638)))

(declare-fun b!67188 () Bool)

(declare-fun e!44037 () Bool)

(assert (=> b!67188 (= e!44043 e!44037)))

(declare-fun c!9338 () Bool)

(assert (=> b!67188 (= c!9338 (not (= (bvand (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67189 () Bool)

(assert (=> b!67189 (= e!44037 e!44044)))

(declare-fun res!36304 () Bool)

(assert (=> b!67189 (= res!36304 call!5634)))

(assert (=> b!67189 (=> (not res!36304) (not e!44044))))

(declare-fun bm!5635 () Bool)

(assert (=> bm!5635 (= call!5638 (+!89 (ite c!9341 call!5640 (ite c!9340 call!5635 call!5637)) (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(declare-fun b!67190 () Bool)

(declare-fun c!9343 () Bool)

(assert (=> b!67190 (= c!9343 (and (not (= (bvand (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!67190 (= e!44046 e!44041)))

(declare-fun bm!5636 () Bool)

(assert (=> bm!5636 (= call!5635 call!5640)))

(declare-fun b!67191 () Bool)

(assert (=> b!67191 (= e!44048 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67192 () Bool)

(declare-fun res!36306 () Bool)

(assert (=> b!67192 (=> (not res!36306) (not e!44043))))

(declare-fun e!44049 () Bool)

(assert (=> b!67192 (= res!36306 e!44049)))

(declare-fun res!36303 () Bool)

(assert (=> b!67192 (=> res!36303 e!44049)))

(declare-fun e!44040 () Bool)

(assert (=> b!67192 (= res!36303 (not e!44040))))

(declare-fun res!36305 () Bool)

(assert (=> b!67192 (=> (not res!36305) (not e!44040))))

(assert (=> b!67192 (= res!36305 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67193 () Bool)

(declare-fun e!44038 () Bool)

(assert (=> b!67193 (= e!44042 e!44038)))

(declare-fun res!36311 () Bool)

(assert (=> b!67193 (= res!36311 call!5636)))

(assert (=> b!67193 (=> (not res!36311) (not e!44038))))

(declare-fun b!67194 () Bool)

(assert (=> b!67194 (= e!44037 (not call!5634))))

(declare-fun b!67195 () Bool)

(assert (=> b!67195 (= e!44041 call!5637)))

(declare-fun b!67196 () Bool)

(declare-fun Unit!1868 () Unit!1838)

(assert (=> b!67196 (= e!44039 Unit!1868)))

(declare-fun b!67197 () Bool)

(assert (=> b!67197 (= e!44049 e!44045)))

(declare-fun res!36309 () Bool)

(assert (=> b!67197 (=> (not res!36309) (not e!44045))))

(assert (=> b!67197 (= res!36309 (contains!710 lt!29235 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67197 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun bm!5637 () Bool)

(assert (=> bm!5637 (= call!5636 (contains!710 lt!29235 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67198 () Bool)

(assert (=> b!67198 (= e!44040 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67199 () Bool)

(assert (=> b!67199 (= e!44038 (= (apply!72 lt!29235 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(assert (= (and d!14005 c!9341) b!67182))

(assert (= (and d!14005 (not c!9341)) b!67185))

(assert (= (and b!67185 c!9340) b!67179))

(assert (= (and b!67185 (not c!9340)) b!67190))

(assert (= (and b!67190 c!9343) b!67180))

(assert (= (and b!67190 (not c!9343)) b!67195))

(assert (= (or b!67180 b!67195) bm!5633))

(assert (= (or b!67179 bm!5633) bm!5636))

(assert (= (or b!67179 b!67180) bm!5634))

(assert (= (or b!67182 bm!5636) bm!5631))

(assert (= (or b!67182 bm!5634) bm!5635))

(assert (= (and d!14005 res!36310) b!67191))

(assert (= (and d!14005 c!9342) b!67183))

(assert (= (and d!14005 (not c!9342)) b!67196))

(assert (= (and d!14005 res!36308) b!67192))

(assert (= (and b!67192 res!36305) b!67198))

(assert (= (and b!67192 (not res!36303)) b!67197))

(assert (= (and b!67197 res!36309) b!67184))

(assert (= (and b!67192 res!36306) b!67187))

(assert (= (and b!67187 c!9339) b!67193))

(assert (= (and b!67187 (not c!9339)) b!67186))

(assert (= (and b!67193 res!36311) b!67199))

(assert (= (or b!67193 b!67186) bm!5637))

(assert (= (and b!67187 res!36307) b!67188))

(assert (= (and b!67188 c!9338) b!67189))

(assert (= (and b!67188 (not c!9338)) b!67194))

(assert (= (and b!67189 res!36304) b!67181))

(assert (= (or b!67189 b!67194) bm!5632))

(declare-fun b_lambda!3001 () Bool)

(assert (=> (not b_lambda!3001) (not b!67184)))

(assert (=> b!67184 t!4955))

(declare-fun b_and!4147 () Bool)

(assert (= b_and!4143 (and (=> t!4955 result!2591) b_and!4147)))

(assert (=> b!67184 t!4957))

(declare-fun b_and!4149 () Bool)

(assert (= b_and!4145 (and (=> t!4957 result!2593) b_and!4149)))

(declare-fun m!62165 () Bool)

(assert (=> b!67183 m!62165))

(declare-fun m!62167 () Bool)

(assert (=> b!67183 m!62167))

(declare-fun m!62169 () Bool)

(assert (=> b!67183 m!62169))

(declare-fun m!62171 () Bool)

(assert (=> b!67183 m!62171))

(declare-fun m!62173 () Bool)

(assert (=> b!67183 m!62173))

(declare-fun m!62175 () Bool)

(assert (=> b!67183 m!62175))

(declare-fun m!62177 () Bool)

(assert (=> b!67183 m!62177))

(declare-fun m!62179 () Bool)

(assert (=> b!67183 m!62179))

(declare-fun m!62181 () Bool)

(assert (=> b!67183 m!62181))

(declare-fun m!62183 () Bool)

(assert (=> b!67183 m!62183))

(declare-fun m!62185 () Bool)

(assert (=> b!67183 m!62185))

(assert (=> b!67183 m!62173))

(assert (=> b!67183 m!62181))

(declare-fun m!62187 () Bool)

(assert (=> b!67183 m!62187))

(assert (=> b!67183 m!61465))

(declare-fun m!62189 () Bool)

(assert (=> b!67183 m!62189))

(assert (=> b!67183 m!62189))

(declare-fun m!62191 () Bool)

(assert (=> b!67183 m!62191))

(assert (=> b!67183 m!62171))

(declare-fun m!62193 () Bool)

(assert (=> b!67183 m!62193))

(declare-fun m!62195 () Bool)

(assert (=> b!67183 m!62195))

(declare-fun m!62197 () Bool)

(assert (=> b!67181 m!62197))

(declare-fun m!62199 () Bool)

(assert (=> b!67199 m!62199))

(assert (=> b!67198 m!61465))

(assert (=> b!67198 m!61465))

(assert (=> b!67198 m!61479))

(declare-fun m!62201 () Bool)

(assert (=> b!67182 m!62201))

(assert (=> bm!5631 m!62185))

(declare-fun m!62203 () Bool)

(assert (=> bm!5632 m!62203))

(assert (=> b!67191 m!61465))

(assert (=> b!67191 m!61465))

(assert (=> b!67191 m!61479))

(assert (=> d!14005 m!61485))

(declare-fun m!62205 () Bool)

(assert (=> bm!5635 m!62205))

(declare-fun m!62207 () Bool)

(assert (=> bm!5637 m!62207))

(assert (=> b!67184 m!61465))

(assert (=> b!67184 m!61491))

(assert (=> b!67184 m!61465))

(declare-fun m!62209 () Bool)

(assert (=> b!67184 m!62209))

(declare-fun m!62211 () Bool)

(assert (=> b!67184 m!62211))

(assert (=> b!67184 m!62211))

(assert (=> b!67184 m!61491))

(declare-fun m!62213 () Bool)

(assert (=> b!67184 m!62213))

(assert (=> b!67197 m!61465))

(assert (=> b!67197 m!61465))

(declare-fun m!62215 () Bool)

(assert (=> b!67197 m!62215))

(assert (=> bm!5548 d!14005))

(assert (=> b!66531 d!14001))

(assert (=> b!66531 d!14003))

(declare-fun d!14007 () Bool)

(declare-fun lt!29237 () Bool)

(assert (=> d!14007 (= lt!29237 (select (content!72 (toList!717 lt!28703)) lt!28617))))

(declare-fun e!44050 () Bool)

(assert (=> d!14007 (= lt!29237 e!44050)))

(declare-fun res!36312 () Bool)

(assert (=> d!14007 (=> (not res!36312) (not e!44050))))

(assert (=> d!14007 (= res!36312 ((_ is Cons!1462) (toList!717 lt!28703)))))

(assert (=> d!14007 (= (contains!712 (toList!717 lt!28703) lt!28617) lt!29237)))

(declare-fun b!67200 () Bool)

(declare-fun e!44051 () Bool)

(assert (=> b!67200 (= e!44050 e!44051)))

(declare-fun res!36313 () Bool)

(assert (=> b!67200 (=> res!36313 e!44051)))

(assert (=> b!67200 (= res!36313 (= (h!2046 (toList!717 lt!28703)) lt!28617))))

(declare-fun b!67201 () Bool)

(assert (=> b!67201 (= e!44051 (contains!712 (t!4948 (toList!717 lt!28703)) lt!28617))))

(assert (= (and d!14007 res!36312) b!67200))

(assert (= (and b!67200 (not res!36313)) b!67201))

(declare-fun m!62217 () Bool)

(assert (=> d!14007 m!62217))

(declare-fun m!62219 () Bool)

(assert (=> d!14007 m!62219))

(declare-fun m!62221 () Bool)

(assert (=> b!67201 m!62221))

(assert (=> b!66493 d!14007))

(assert (=> b!66654 d!13903))

(assert (=> bm!5475 d!13857))

(declare-fun b!67202 () Bool)

(declare-fun e!44052 () Bool)

(assert (=> b!67202 (= e!44052 tp_is_empty!2451)))

(declare-fun mapNonEmpty!3087 () Bool)

(declare-fun mapRes!3087 () Bool)

(declare-fun tp!8379 () Bool)

(assert (=> mapNonEmpty!3087 (= mapRes!3087 (and tp!8379 e!44052))))

(declare-fun mapKey!3087 () (_ BitVec 32))

(declare-fun mapRest!3087 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapValue!3087 () ValueCell!882)

(assert (=> mapNonEmpty!3087 (= mapRest!3085 (store mapRest!3087 mapKey!3087 mapValue!3087))))

(declare-fun b!67203 () Bool)

(declare-fun e!44053 () Bool)

(assert (=> b!67203 (= e!44053 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3087 () Bool)

(assert (=> mapIsEmpty!3087 mapRes!3087))

(declare-fun condMapEmpty!3087 () Bool)

(declare-fun mapDefault!3087 () ValueCell!882)

(assert (=> mapNonEmpty!3085 (= condMapEmpty!3087 (= mapRest!3085 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3087)))))

(assert (=> mapNonEmpty!3085 (= tp!8377 (and e!44053 mapRes!3087))))

(assert (= (and mapNonEmpty!3085 condMapEmpty!3087) mapIsEmpty!3087))

(assert (= (and mapNonEmpty!3085 (not condMapEmpty!3087)) mapNonEmpty!3087))

(assert (= (and mapNonEmpty!3087 ((_ is ValueCellFull!882) mapValue!3087)) b!67202))

(assert (= (and mapNonEmpty!3085 ((_ is ValueCellFull!882) mapDefault!3087)) b!67203))

(declare-fun m!62223 () Bool)

(assert (=> mapNonEmpty!3087 m!62223))

(declare-fun b!67204 () Bool)

(declare-fun e!44054 () Bool)

(assert (=> b!67204 (= e!44054 tp_is_empty!2451)))

(declare-fun mapNonEmpty!3088 () Bool)

(declare-fun mapRes!3088 () Bool)

(declare-fun tp!8380 () Bool)

(assert (=> mapNonEmpty!3088 (= mapRes!3088 (and tp!8380 e!44054))))

(declare-fun mapRest!3088 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapValue!3088 () ValueCell!882)

(declare-fun mapKey!3088 () (_ BitVec 32))

(assert (=> mapNonEmpty!3088 (= mapRest!3086 (store mapRest!3088 mapKey!3088 mapValue!3088))))

(declare-fun b!67205 () Bool)

(declare-fun e!44055 () Bool)

(assert (=> b!67205 (= e!44055 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3088 () Bool)

(assert (=> mapIsEmpty!3088 mapRes!3088))

(declare-fun condMapEmpty!3088 () Bool)

(declare-fun mapDefault!3088 () ValueCell!882)

(assert (=> mapNonEmpty!3086 (= condMapEmpty!3088 (= mapRest!3086 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3088)))))

(assert (=> mapNonEmpty!3086 (= tp!8378 (and e!44055 mapRes!3088))))

(assert (= (and mapNonEmpty!3086 condMapEmpty!3088) mapIsEmpty!3088))

(assert (= (and mapNonEmpty!3086 (not condMapEmpty!3088)) mapNonEmpty!3088))

(assert (= (and mapNonEmpty!3088 ((_ is ValueCellFull!882) mapValue!3088)) b!67204))

(assert (= (and mapNonEmpty!3086 ((_ is ValueCellFull!882) mapDefault!3088)) b!67205))

(declare-fun m!62225 () Bool)

(assert (=> mapNonEmpty!3088 m!62225))

(declare-fun b_lambda!3003 () Bool)

(assert (= b_lambda!2995 (or (and b!66357 b_free!2069) (and b!66361 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))) b_lambda!3003)))

(declare-fun b_lambda!3005 () Bool)

(assert (= b_lambda!2999 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3005)))

(declare-fun b_lambda!3007 () Bool)

(assert (= b_lambda!2997 (or (and b!66357 b_free!2069) (and b!66361 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))) b_lambda!3007)))

(declare-fun b_lambda!3009 () Bool)

(assert (= b_lambda!2993 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3009)))

(declare-fun b_lambda!3011 () Bool)

(assert (= b_lambda!3001 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3011)))

(check-sat (not d!13805) (not b!66905) (not b!67114) (not d!13973) (not b!66911) (not b!67113) (not b!66898) (not b!66914) (not b!66885) (not d!13877) (not b!67198) (not d!13967) (not b!66872) (not d!13937) (not d!13925) (not b!66864) (not bm!5620) (not b!66750) (not mapNonEmpty!3087) (not d!13851) (not bm!5627) (not b!67055) (not b!66778) (not d!13971) (not d!13981) (not d!13819) (not b!66817) (not d!13963) (not b!66983) (not b!67051) (not b!66990) (not b!67095) (not d!13869) (not bm!5632) (not b!66890) (not b!66862) (not d!13815) (not d!13829) (not b!67170) (not b!66960) (not d!13825) (not d!13923) (not b!67182) (not bm!5635) (not b!67167) (not b!66908) (not bm!5624) (not d!13857) (not b!66733) (not b!67153) (not d!13989) (not b_lambda!3003) (not b!67090) (not b!66954) (not d!13935) (not b!67071) (not b!66851) (not bm!5596) (not b!66867) (not d!13861) (not b!66980) (not bm!5593) (not d!13991) (not b!67177) (not b!66895) (not b!66957) (not b!66915) (not d!13845) (not b!67002) (not bm!5581) (not b!66934) (not d!13849) (not d!13903) (not d!13995) (not b!67001) (not b!66906) (not d!13955) (not b!67163) (not b!66985) (not b_lambda!3011) (not b!66974) (not b!66811) (not d!13919) (not d!13871) (not d!13813) (not d!13969) (not b!66907) (not b!67112) (not b!66843) (not bm!5630) (not b!67181) (not b!66855) (not b!67124) (not d!13913) (not b_lambda!3009) (not bm!5600) (not bm!5592) (not b!67156) (not b!67143) (not b!66967) (not b!67087) (not mapNonEmpty!3088) (not bm!5587) (not bm!5631) (not d!13929) (not b!67003) (not bm!5623) (not b!66966) (not d!13859) (not d!13917) (not d!13905) (not b!66955) (not bm!5611) (not b!67139) (not d!13965) (not bm!5606) (not d!13953) (not b!67000) (not b!66790) (not b!67098) (not b!66916) tp_is_empty!2451 (not d!13933) (not d!13921) (not b!66943) (not b_lambda!3005) (not bm!5580) (not b!67169) (not b!66953) (not b!67111) (not d!13867) (not b!66919) (not b!67150) (not b!67063) (not b!66853) (not b!66964) (not b!66784) (not d!13961) (not d!13817) (not b_lambda!2987) (not b!67065) (not b_lambda!2991) (not b!66982) (not b!66813) (not b!66952) (not b!67007) (not b!67005) (not b!66891) (not b!66775) (not b!67171) (not b!66933) (not b_next!2069) (not d!13887) (not d!13947) (not d!13811) (not b!66902) b_and!4147 (not b!67122) (not b!66869) (not b!67104) (not b!66773) (not d!13931) (not b!66899) (not b!67191) (not b!67061) (not b!66787) (not bm!5605) (not d!13979) b_and!4149 (not b!67116) (not d!13875) (not b!67010) (not b!66797) (not b!67092) (not b!67109) (not d!14007) (not bm!5637) (not d!13895) (not b_lambda!3007) (not d!13891) (not b!67199) (not b!66981) (not d!13997) (not b!66998) (not b_next!2071) (not d!14001) (not b!66789) (not b!66812) (not b!66814) (not b!66946) (not d!13951) (not b!66744) (not b!66818) (not bm!5609) (not b!66850) (not b!66845) (not bm!5601) (not bm!5582) (not d!13831) (not b!67136) (not b!67121) (not d!14005) (not b!66965) (not bm!5604) (not d!13897) (not b!67155) (not b!66888) (not b!67107) (not d!13833) (not d!13841) (not b!67004) (not d!13993) (not d!13879) (not b!66997) (not b!66782) (not d!13909) (not b!67103) (not d!13941) (not d!13939) (not b!66803) (not b!67201) (not b!67102) (not b!67184) (not b!67197) (not b!66909) (not b!66848) (not b!67056) (not d!13999) (not d!13889) (not b!67048) (not d!13915) (not d!13911) (not b!66901) (not b!66896) (not d!13985) (not b!67183) (not b!67101) (not b!67148) (not b_lambda!2989) (not b!66877) (not b!66910) (not b!66889) (not b!66912) (not b!67012) (not b!66913) (not b!66751) (not b!66930) (not d!13927) (not d!13837) (not b!66931) (not b!67146) (not b_lambda!2979) (not bm!5599) (not d!13863) (not b!66858) (not b!67160) (not bm!5621) (not d!13823) (not b!67141) (not bm!5585) (not b!66804) (not b!67158) (not b!66816) (not b!66999) (not d!13847) (not b!66870) (not b!67093) (not b!67174) (not b!66805) (not b!66874) (not d!13839) (not b!67123) (not d!13943) (not d!13809) (not d!13949) (not b!66897) (not b!66731) (not b!66788) (not d!13873))
(check-sat b_and!4147 b_and!4149 (not b_next!2069) (not b_next!2071))
(get-model)

(assert (=> d!13933 d!13927))

(assert (=> d!13933 d!13915))

(declare-fun d!14009 () Bool)

(assert (=> d!14009 (contains!710 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28866)))

(assert (=> d!14009 true))

(declare-fun _$35!309 () Unit!1838)

(assert (=> d!14009 (= (choose!372 lt!28874 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28866) _$35!309)))

(declare-fun bs!2886 () Bool)

(assert (= bs!2886 d!14009))

(assert (=> bs!2886 m!61363))

(assert (=> bs!2886 m!61363))

(assert (=> bs!2886 m!61365))

(assert (=> d!13933 d!14009))

(declare-fun d!14011 () Bool)

(declare-fun e!44057 () Bool)

(assert (=> d!14011 e!44057))

(declare-fun res!36314 () Bool)

(assert (=> d!14011 (=> res!36314 e!44057)))

(declare-fun lt!29240 () Bool)

(assert (=> d!14011 (= res!36314 (not lt!29240))))

(declare-fun lt!29238 () Bool)

(assert (=> d!14011 (= lt!29240 lt!29238)))

(declare-fun lt!29241 () Unit!1838)

(declare-fun e!44056 () Unit!1838)

(assert (=> d!14011 (= lt!29241 e!44056)))

(declare-fun c!9344 () Bool)

(assert (=> d!14011 (= c!9344 lt!29238)))

(assert (=> d!14011 (= lt!29238 (containsKey!134 (toList!717 lt!28874) lt!28866))))

(assert (=> d!14011 (= (contains!710 lt!28874 lt!28866) lt!29240)))

(declare-fun b!67207 () Bool)

(declare-fun lt!29239 () Unit!1838)

(assert (=> b!67207 (= e!44056 lt!29239)))

(assert (=> b!67207 (= lt!29239 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28874) lt!28866))))

(assert (=> b!67207 (isDefined!83 (getValueByKey!130 (toList!717 lt!28874) lt!28866))))

(declare-fun b!67208 () Bool)

(declare-fun Unit!1869 () Unit!1838)

(assert (=> b!67208 (= e!44056 Unit!1869)))

(declare-fun b!67209 () Bool)

(assert (=> b!67209 (= e!44057 (isDefined!83 (getValueByKey!130 (toList!717 lt!28874) lt!28866)))))

(assert (= (and d!14011 c!9344) b!67207))

(assert (= (and d!14011 (not c!9344)) b!67208))

(assert (= (and d!14011 (not res!36314)) b!67209))

(declare-fun m!62227 () Bool)

(assert (=> d!14011 m!62227))

(declare-fun m!62229 () Bool)

(assert (=> b!67207 m!62229))

(declare-fun m!62231 () Bool)

(assert (=> b!67207 m!62231))

(assert (=> b!67207 m!62231))

(declare-fun m!62233 () Bool)

(assert (=> b!67207 m!62233))

(assert (=> b!67209 m!62231))

(assert (=> b!67209 m!62231))

(assert (=> b!67209 m!62233))

(assert (=> d!13933 d!14011))

(declare-fun d!14013 () Bool)

(assert (=> d!14013 (= (isEmpty!308 (toList!717 lt!28698)) ((_ is Nil!1463) (toList!717 lt!28698)))))

(assert (=> d!13979 d!14013))

(declare-fun d!14015 () Bool)

(assert (=> d!14015 (= (apply!72 lt!29012 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1120 (getValueByKey!130 (toList!717 lt!29012) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2887 () Bool)

(assert (= bs!2887 d!14015))

(declare-fun m!62235 () Bool)

(assert (=> bs!2887 m!62235))

(assert (=> bs!2887 m!62235))

(declare-fun m!62237 () Bool)

(assert (=> bs!2887 m!62237))

(assert (=> b!66964 d!14015))

(declare-fun d!14017 () Bool)

(declare-fun e!44059 () Bool)

(assert (=> d!14017 e!44059))

(declare-fun res!36315 () Bool)

(assert (=> d!14017 (=> res!36315 e!44059)))

(declare-fun lt!29244 () Bool)

(assert (=> d!14017 (= res!36315 (not lt!29244))))

(declare-fun lt!29242 () Bool)

(assert (=> d!14017 (= lt!29244 lt!29242)))

(declare-fun lt!29245 () Unit!1838)

(declare-fun e!44058 () Unit!1838)

(assert (=> d!14017 (= lt!29245 e!44058)))

(declare-fun c!9345 () Bool)

(assert (=> d!14017 (= c!9345 lt!29242)))

(assert (=> d!14017 (= lt!29242 (containsKey!134 (toList!717 lt!29235) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14017 (= (contains!710 lt!29235 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) lt!29244)))

(declare-fun b!67210 () Bool)

(declare-fun lt!29243 () Unit!1838)

(assert (=> b!67210 (= e!44058 lt!29243)))

(assert (=> b!67210 (= lt!29243 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29235) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67210 (isDefined!83 (getValueByKey!130 (toList!717 lt!29235) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67211 () Bool)

(declare-fun Unit!1870 () Unit!1838)

(assert (=> b!67211 (= e!44058 Unit!1870)))

(declare-fun b!67212 () Bool)

(assert (=> b!67212 (= e!44059 (isDefined!83 (getValueByKey!130 (toList!717 lt!29235) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14017 c!9345) b!67210))

(assert (= (and d!14017 (not c!9345)) b!67211))

(assert (= (and d!14017 (not res!36315)) b!67212))

(assert (=> d!14017 m!61465))

(declare-fun m!62239 () Bool)

(assert (=> d!14017 m!62239))

(assert (=> b!67210 m!61465))

(declare-fun m!62241 () Bool)

(assert (=> b!67210 m!62241))

(assert (=> b!67210 m!61465))

(declare-fun m!62243 () Bool)

(assert (=> b!67210 m!62243))

(assert (=> b!67210 m!62243))

(declare-fun m!62245 () Bool)

(assert (=> b!67210 m!62245))

(assert (=> b!67212 m!61465))

(assert (=> b!67212 m!62243))

(assert (=> b!67212 m!62243))

(assert (=> b!67212 m!62245))

(assert (=> b!67197 d!14017))

(declare-fun d!14019 () Bool)

(assert (=> d!14019 (= (apply!72 lt!28913 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1120 (getValueByKey!130 (toList!717 lt!28913) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2888 () Bool)

(assert (= bs!2888 d!14019))

(declare-fun m!62247 () Bool)

(assert (=> bs!2888 m!62247))

(assert (=> bs!2888 m!62247))

(declare-fun m!62249 () Bool)

(assert (=> bs!2888 m!62249))

(assert (=> b!66805 d!14019))

(declare-fun d!14021 () Bool)

(declare-fun e!44073 () Bool)

(assert (=> d!14021 e!44073))

(declare-fun c!9353 () Bool)

(declare-fun lt!29251 () SeekEntryResult!233)

(assert (=> d!14021 (= c!9353 (and ((_ is Intermediate!233) lt!29251) (undefined!1045 lt!29251)))))

(declare-fun e!44070 () SeekEntryResult!233)

(assert (=> d!14021 (= lt!29251 e!44070)))

(declare-fun c!9352 () Bool)

(assert (=> d!14021 (= c!9352 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!29250 () (_ BitVec 64))

(assert (=> d!14021 (= lt!29250 (select (arr!1835 (_keys!3787 newMap!16)) (toIndex!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6082 newMap!16))))))

(assert (=> d!14021 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14021 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6082 newMap!16)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)) lt!29251)))

(declare-fun b!67231 () Bool)

(assert (=> b!67231 (= e!44073 (bvsge (x!10703 lt!29251) #b01111111111111111111111111111110))))

(declare-fun b!67232 () Bool)

(assert (=> b!67232 (and (bvsge (index!3062 lt!29251) #b00000000000000000000000000000000) (bvslt (index!3062 lt!29251) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun e!44074 () Bool)

(assert (=> b!67232 (= e!44074 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3062 lt!29251)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67233 () Bool)

(declare-fun e!44072 () SeekEntryResult!233)

(assert (=> b!67233 (= e!44072 (Intermediate!233 false (toIndex!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6082 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!67234 () Bool)

(assert (=> b!67234 (and (bvsge (index!3062 lt!29251) #b00000000000000000000000000000000) (bvslt (index!3062 lt!29251) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun res!36323 () Bool)

(assert (=> b!67234 (= res!36323 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3062 lt!29251)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!67234 (=> res!36323 e!44074)))

(declare-fun e!44071 () Bool)

(assert (=> b!67234 (= e!44071 e!44074)))

(declare-fun b!67235 () Bool)

(assert (=> b!67235 (= e!44070 e!44072)))

(declare-fun c!9354 () Bool)

(assert (=> b!67235 (= c!9354 (or (= lt!29250 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (= (bvadd lt!29250 lt!29250) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67236 () Bool)

(assert (=> b!67236 (= e!44073 e!44071)))

(declare-fun res!36324 () Bool)

(assert (=> b!67236 (= res!36324 (and ((_ is Intermediate!233) lt!29251) (not (undefined!1045 lt!29251)) (bvslt (x!10703 lt!29251) #b01111111111111111111111111111110) (bvsge (x!10703 lt!29251) #b00000000000000000000000000000000) (bvsge (x!10703 lt!29251) #b00000000000000000000000000000000)))))

(assert (=> b!67236 (=> (not res!36324) (not e!44071))))

(declare-fun b!67237 () Bool)

(assert (=> b!67237 (= e!44070 (Intermediate!233 true (toIndex!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6082 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!67238 () Bool)

(assert (=> b!67238 (and (bvsge (index!3062 lt!29251) #b00000000000000000000000000000000) (bvslt (index!3062 lt!29251) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun res!36322 () Bool)

(assert (=> b!67238 (= res!36322 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3062 lt!29251)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67238 (=> res!36322 e!44074)))

(declare-fun b!67239 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!67239 (= e!44072 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6082 newMap!16)) #b00000000000000000000000000000000 (mask!6082 newMap!16)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (= (and d!14021 c!9352) b!67237))

(assert (= (and d!14021 (not c!9352)) b!67235))

(assert (= (and b!67235 c!9354) b!67233))

(assert (= (and b!67235 (not c!9354)) b!67239))

(assert (= (and d!14021 c!9353) b!67231))

(assert (= (and d!14021 (not c!9353)) b!67236))

(assert (= (and b!67236 res!36324) b!67234))

(assert (= (and b!67234 (not res!36323)) b!67238))

(assert (= (and b!67238 (not res!36322)) b!67232))

(declare-fun m!62251 () Bool)

(assert (=> b!67234 m!62251))

(assert (=> d!14021 m!61987))

(declare-fun m!62253 () Bool)

(assert (=> d!14021 m!62253))

(assert (=> d!14021 m!61485))

(assert (=> b!67232 m!62251))

(assert (=> b!67238 m!62251))

(assert (=> b!67239 m!61987))

(declare-fun m!62255 () Bool)

(assert (=> b!67239 m!62255))

(assert (=> b!67239 m!62255))

(assert (=> b!67239 m!61065))

(declare-fun m!62257 () Bool)

(assert (=> b!67239 m!62257))

(assert (=> d!13947 d!14021))

(declare-fun d!14023 () Bool)

(declare-fun lt!29257 () (_ BitVec 32))

(declare-fun lt!29256 () (_ BitVec 32))

(assert (=> d!14023 (= lt!29257 (bvmul (bvxor lt!29256 (bvlshr lt!29256 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!14023 (= lt!29256 ((_ extract 31 0) (bvand (bvxor (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvlshr (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!14023 (and (bvsge (mask!6082 newMap!16) #b00000000000000000000000000000000) (let ((res!36325 (let ((h!2048 ((_ extract 31 0) (bvand (bvxor (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvlshr (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!10805 (bvmul (bvxor h!2048 (bvlshr h!2048 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!10805 (bvlshr x!10805 #b00000000000000000000000000001101)) (mask!6082 newMap!16)))))) (and (bvslt res!36325 (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001)) (bvsge res!36325 #b00000000000000000000000000000000))))))

(assert (=> d!14023 (= (toIndex!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6082 newMap!16)) (bvand (bvxor lt!29257 (bvlshr lt!29257 #b00000000000000000000000000001101)) (mask!6082 newMap!16)))))

(assert (=> d!13947 d!14023))

(declare-fun d!14025 () Bool)

(assert (=> d!14025 (= (validMask!0 (mask!6082 newMap!16)) (and (or (= (mask!6082 newMap!16) #b00000000000000000000000000000111) (= (mask!6082 newMap!16) #b00000000000000000000000000001111) (= (mask!6082 newMap!16) #b00000000000000000000000000011111) (= (mask!6082 newMap!16) #b00000000000000000000000000111111) (= (mask!6082 newMap!16) #b00000000000000000000000001111111) (= (mask!6082 newMap!16) #b00000000000000000000000011111111) (= (mask!6082 newMap!16) #b00000000000000000000000111111111) (= (mask!6082 newMap!16) #b00000000000000000000001111111111) (= (mask!6082 newMap!16) #b00000000000000000000011111111111) (= (mask!6082 newMap!16) #b00000000000000000000111111111111) (= (mask!6082 newMap!16) #b00000000000000000001111111111111) (= (mask!6082 newMap!16) #b00000000000000000011111111111111) (= (mask!6082 newMap!16) #b00000000000000000111111111111111) (= (mask!6082 newMap!16) #b00000000000000001111111111111111) (= (mask!6082 newMap!16) #b00000000000000011111111111111111) (= (mask!6082 newMap!16) #b00000000000000111111111111111111) (= (mask!6082 newMap!16) #b00000000000001111111111111111111) (= (mask!6082 newMap!16) #b00000000000011111111111111111111) (= (mask!6082 newMap!16) #b00000000000111111111111111111111) (= (mask!6082 newMap!16) #b00000000001111111111111111111111) (= (mask!6082 newMap!16) #b00000000011111111111111111111111) (= (mask!6082 newMap!16) #b00000000111111111111111111111111) (= (mask!6082 newMap!16) #b00000001111111111111111111111111) (= (mask!6082 newMap!16) #b00000011111111111111111111111111) (= (mask!6082 newMap!16) #b00000111111111111111111111111111) (= (mask!6082 newMap!16) #b00001111111111111111111111111111) (= (mask!6082 newMap!16) #b00011111111111111111111111111111) (= (mask!6082 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6082 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!13947 d!14025))

(declare-fun d!14027 () Bool)

(declare-fun e!44076 () Bool)

(assert (=> d!14027 e!44076))

(declare-fun res!36326 () Bool)

(assert (=> d!14027 (=> res!36326 e!44076)))

(declare-fun lt!29260 () Bool)

(assert (=> d!14027 (= res!36326 (not lt!29260))))

(declare-fun lt!29258 () Bool)

(assert (=> d!14027 (= lt!29260 lt!29258)))

(declare-fun lt!29261 () Unit!1838)

(declare-fun e!44075 () Unit!1838)

(assert (=> d!14027 (= lt!29261 e!44075)))

(declare-fun c!9355 () Bool)

(assert (=> d!14027 (= c!9355 lt!29258)))

(assert (=> d!14027 (= lt!29258 (containsKey!134 (toList!717 lt!29169) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14027 (= (contains!710 lt!29169 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) lt!29260)))

(declare-fun b!67240 () Bool)

(declare-fun lt!29259 () Unit!1838)

(assert (=> b!67240 (= e!44075 lt!29259)))

(assert (=> b!67240 (= lt!29259 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29169) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67240 (isDefined!83 (getValueByKey!130 (toList!717 lt!29169) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67241 () Bool)

(declare-fun Unit!1871 () Unit!1838)

(assert (=> b!67241 (= e!44075 Unit!1871)))

(declare-fun b!67242 () Bool)

(assert (=> b!67242 (= e!44076 (isDefined!83 (getValueByKey!130 (toList!717 lt!29169) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14027 c!9355) b!67240))

(assert (= (and d!14027 (not c!9355)) b!67241))

(assert (= (and d!14027 (not res!36326)) b!67242))

(declare-fun m!62259 () Bool)

(assert (=> d!14027 m!62259))

(declare-fun m!62261 () Bool)

(assert (=> b!67240 m!62261))

(assert (=> b!67240 m!62049))

(assert (=> b!67240 m!62049))

(declare-fun m!62263 () Bool)

(assert (=> b!67240 m!62263))

(assert (=> b!67242 m!62049))

(assert (=> b!67242 m!62049))

(assert (=> b!67242 m!62263))

(assert (=> d!13965 d!14027))

(declare-fun c!9356 () Bool)

(declare-fun d!14029 () Bool)

(assert (=> d!14029 (= c!9356 (and ((_ is Cons!1462) lt!29170) (= (_1!1057 (h!2046 lt!29170)) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun e!44077 () Option!136)

(assert (=> d!14029 (= (getValueByKey!130 lt!29170 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) e!44077)))

(declare-fun b!67244 () Bool)

(declare-fun e!44078 () Option!136)

(assert (=> b!67244 (= e!44077 e!44078)))

(declare-fun c!9357 () Bool)

(assert (=> b!67244 (= c!9357 (and ((_ is Cons!1462) lt!29170) (not (= (_1!1057 (h!2046 lt!29170)) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun b!67243 () Bool)

(assert (=> b!67243 (= e!44077 (Some!135 (_2!1057 (h!2046 lt!29170))))))

(declare-fun b!67245 () Bool)

(assert (=> b!67245 (= e!44078 (getValueByKey!130 (t!4948 lt!29170) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67246 () Bool)

(assert (=> b!67246 (= e!44078 None!134)))

(assert (= (and d!14029 c!9356) b!67243))

(assert (= (and d!14029 (not c!9356)) b!67244))

(assert (= (and b!67244 c!9357) b!67245))

(assert (= (and b!67244 (not c!9357)) b!67246))

(declare-fun m!62265 () Bool)

(assert (=> b!67245 m!62265))

(assert (=> d!13965 d!14029))

(declare-fun d!14031 () Bool)

(assert (=> d!14031 (= (getValueByKey!130 lt!29170 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) (Some!135 (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun lt!29262 () Unit!1838)

(assert (=> d!14031 (= lt!29262 (choose!367 lt!29170 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44079 () Bool)

(assert (=> d!14031 e!44079))

(declare-fun res!36327 () Bool)

(assert (=> d!14031 (=> (not res!36327) (not e!44079))))

(assert (=> d!14031 (= res!36327 (isStrictlySorted!289 lt!29170))))

(assert (=> d!14031 (= (lemmaContainsTupThenGetReturnValue!47 lt!29170 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) lt!29262)))

(declare-fun b!67247 () Bool)

(declare-fun res!36328 () Bool)

(assert (=> b!67247 (=> (not res!36328) (not e!44079))))

(assert (=> b!67247 (= res!36328 (containsKey!134 lt!29170 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67248 () Bool)

(assert (=> b!67248 (= e!44079 (contains!712 lt!29170 (tuple2!2093 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14031 res!36327) b!67247))

(assert (= (and b!67247 res!36328) b!67248))

(assert (=> d!14031 m!62043))

(declare-fun m!62267 () Bool)

(assert (=> d!14031 m!62267))

(declare-fun m!62269 () Bool)

(assert (=> d!14031 m!62269))

(declare-fun m!62271 () Bool)

(assert (=> b!67247 m!62271))

(declare-fun m!62273 () Bool)

(assert (=> b!67248 m!62273))

(assert (=> d!13965 d!14031))

(declare-fun b!67249 () Bool)

(declare-fun e!44082 () List!1466)

(declare-fun call!5641 () List!1466)

(assert (=> b!67249 (= e!44082 call!5641)))

(declare-fun bm!5638 () Bool)

(declare-fun call!5642 () List!1466)

(declare-fun call!5643 () List!1466)

(assert (=> bm!5638 (= call!5642 call!5643)))

(declare-fun e!44084 () Bool)

(declare-fun lt!29263 () List!1466)

(declare-fun b!67250 () Bool)

(assert (=> b!67250 (= e!44084 (contains!712 lt!29263 (tuple2!2093 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67251 () Bool)

(assert (=> b!67251 (= e!44082 call!5641)))

(declare-fun e!44080 () List!1466)

(declare-fun b!67252 () Bool)

(assert (=> b!67252 (= e!44080 (insertStrictlySorted!50 (t!4948 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571)))) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67253 () Bool)

(declare-fun e!44083 () List!1466)

(assert (=> b!67253 (= e!44083 call!5643)))

(declare-fun c!9360 () Bool)

(declare-fun b!67254 () Bool)

(declare-fun c!9358 () Bool)

(assert (=> b!67254 (= e!44080 (ite c!9358 (t!4948 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571)))) (ite c!9360 (Cons!1462 (h!2046 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571)))) (t!4948 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571))))) Nil!1463)))))

(declare-fun d!14033 () Bool)

(assert (=> d!14033 e!44084))

(declare-fun res!36330 () Bool)

(assert (=> d!14033 (=> (not res!36330) (not e!44084))))

(assert (=> d!14033 (= res!36330 (isStrictlySorted!289 lt!29263))))

(assert (=> d!14033 (= lt!29263 e!44083)))

(declare-fun c!9361 () Bool)

(assert (=> d!14033 (= c!9361 (and ((_ is Cons!1462) (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571)))) (bvslt (_1!1057 (h!2046 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571))))) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (=> d!14033 (isStrictlySorted!289 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571))))))

(assert (=> d!14033 (= (insertStrictlySorted!50 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571))) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) lt!29263)))

(declare-fun bm!5639 () Bool)

(assert (=> bm!5639 (= call!5641 call!5642)))

(declare-fun b!67255 () Bool)

(declare-fun res!36329 () Bool)

(assert (=> b!67255 (=> (not res!36329) (not e!44084))))

(assert (=> b!67255 (= res!36329 (containsKey!134 lt!29263 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67256 () Bool)

(declare-fun e!44081 () List!1466)

(assert (=> b!67256 (= e!44081 call!5642)))

(declare-fun b!67257 () Bool)

(assert (=> b!67257 (= c!9360 (and ((_ is Cons!1462) (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571)))) (bvsgt (_1!1057 (h!2046 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571))))) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (=> b!67257 (= e!44081 e!44082)))

(declare-fun b!67258 () Bool)

(assert (=> b!67258 (= e!44083 e!44081)))

(assert (=> b!67258 (= c!9358 (and ((_ is Cons!1462) (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571)))) (= (_1!1057 (h!2046 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571))))) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun bm!5640 () Bool)

(assert (=> bm!5640 (= call!5643 ($colon$colon!63 e!44080 (ite c!9361 (h!2046 (toList!717 (ite c!9216 call!5574 (ite c!9215 call!5569 call!5571)))) (tuple2!2093 (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_2!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun c!9359 () Bool)

(assert (=> bm!5640 (= c!9359 c!9361)))

(assert (= (and d!14033 c!9361) b!67253))

(assert (= (and d!14033 (not c!9361)) b!67258))

(assert (= (and b!67258 c!9358) b!67256))

(assert (= (and b!67258 (not c!9358)) b!67257))

(assert (= (and b!67257 c!9360) b!67251))

(assert (= (and b!67257 (not c!9360)) b!67249))

(assert (= (or b!67251 b!67249) bm!5639))

(assert (= (or b!67256 bm!5639) bm!5638))

(assert (= (or b!67253 bm!5638) bm!5640))

(assert (= (and bm!5640 c!9359) b!67252))

(assert (= (and bm!5640 (not c!9359)) b!67254))

(assert (= (and d!14033 res!36330) b!67255))

(assert (= (and b!67255 res!36329) b!67250))

(declare-fun m!62275 () Bool)

(assert (=> b!67250 m!62275))

(declare-fun m!62277 () Bool)

(assert (=> d!14033 m!62277))

(declare-fun m!62279 () Bool)

(assert (=> d!14033 m!62279))

(declare-fun m!62281 () Bool)

(assert (=> bm!5640 m!62281))

(declare-fun m!62283 () Bool)

(assert (=> b!67255 m!62283))

(declare-fun m!62285 () Bool)

(assert (=> b!67252 m!62285))

(assert (=> d!13965 d!14033))

(declare-fun d!14035 () Bool)

(declare-fun e!44086 () Bool)

(assert (=> d!14035 e!44086))

(declare-fun res!36331 () Bool)

(assert (=> d!14035 (=> res!36331 e!44086)))

(declare-fun lt!29266 () Bool)

(assert (=> d!14035 (= res!36331 (not lt!29266))))

(declare-fun lt!29264 () Bool)

(assert (=> d!14035 (= lt!29266 lt!29264)))

(declare-fun lt!29267 () Unit!1838)

(declare-fun e!44085 () Unit!1838)

(assert (=> d!14035 (= lt!29267 e!44085)))

(declare-fun c!9362 () Bool)

(assert (=> d!14035 (= c!9362 lt!29264)))

(assert (=> d!14035 (= lt!29264 (containsKey!134 (toList!717 lt!28968) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14035 (= (contains!710 lt!28968 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29266)))

(declare-fun b!67259 () Bool)

(declare-fun lt!29265 () Unit!1838)

(assert (=> b!67259 (= e!44085 lt!29265)))

(assert (=> b!67259 (= lt!29265 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28968) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67259 (isDefined!83 (getValueByKey!130 (toList!717 lt!28968) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67260 () Bool)

(declare-fun Unit!1872 () Unit!1838)

(assert (=> b!67260 (= e!44085 Unit!1872)))

(declare-fun b!67261 () Bool)

(assert (=> b!67261 (= e!44086 (isDefined!83 (getValueByKey!130 (toList!717 lt!28968) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14035 c!9362) b!67259))

(assert (= (and d!14035 (not c!9362)) b!67260))

(assert (= (and d!14035 (not res!36331)) b!67261))

(declare-fun m!62287 () Bool)

(assert (=> d!14035 m!62287))

(declare-fun m!62289 () Bool)

(assert (=> b!67259 m!62289))

(assert (=> b!67259 m!61685))

(assert (=> b!67259 m!61685))

(declare-fun m!62291 () Bool)

(assert (=> b!67259 m!62291))

(assert (=> b!67261 m!61685))

(assert (=> b!67261 m!61685))

(assert (=> b!67261 m!62291))

(assert (=> d!13871 d!14035))

(declare-fun d!14037 () Bool)

(declare-fun c!9363 () Bool)

(assert (=> d!14037 (= c!9363 (and ((_ is Cons!1462) lt!28969) (= (_1!1057 (h!2046 lt!28969)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44087 () Option!136)

(assert (=> d!14037 (= (getValueByKey!130 lt!28969 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44087)))

(declare-fun b!67263 () Bool)

(declare-fun e!44088 () Option!136)

(assert (=> b!67263 (= e!44087 e!44088)))

(declare-fun c!9364 () Bool)

(assert (=> b!67263 (= c!9364 (and ((_ is Cons!1462) lt!28969) (not (= (_1!1057 (h!2046 lt!28969)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67262 () Bool)

(assert (=> b!67262 (= e!44087 (Some!135 (_2!1057 (h!2046 lt!28969))))))

(declare-fun b!67264 () Bool)

(assert (=> b!67264 (= e!44088 (getValueByKey!130 (t!4948 lt!28969) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67265 () Bool)

(assert (=> b!67265 (= e!44088 None!134)))

(assert (= (and d!14037 c!9363) b!67262))

(assert (= (and d!14037 (not c!9363)) b!67263))

(assert (= (and b!67263 c!9364) b!67264))

(assert (= (and b!67263 (not c!9364)) b!67265))

(declare-fun m!62293 () Bool)

(assert (=> b!67264 m!62293))

(assert (=> d!13871 d!14037))

(declare-fun d!14039 () Bool)

(assert (=> d!14039 (= (getValueByKey!130 lt!28969 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29268 () Unit!1838)

(assert (=> d!14039 (= lt!29268 (choose!367 lt!28969 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44089 () Bool)

(assert (=> d!14039 e!44089))

(declare-fun res!36332 () Bool)

(assert (=> d!14039 (=> (not res!36332) (not e!44089))))

(assert (=> d!14039 (= res!36332 (isStrictlySorted!289 lt!28969))))

(assert (=> d!14039 (= (lemmaContainsTupThenGetReturnValue!47 lt!28969 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29268)))

(declare-fun b!67266 () Bool)

(declare-fun res!36333 () Bool)

(assert (=> b!67266 (=> (not res!36333) (not e!44089))))

(assert (=> b!67266 (= res!36333 (containsKey!134 lt!28969 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67267 () Bool)

(assert (=> b!67267 (= e!44089 (contains!712 lt!28969 (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14039 res!36332) b!67266))

(assert (= (and b!67266 res!36333) b!67267))

(assert (=> d!14039 m!61679))

(declare-fun m!62295 () Bool)

(assert (=> d!14039 m!62295))

(declare-fun m!62297 () Bool)

(assert (=> d!14039 m!62297))

(declare-fun m!62299 () Bool)

(assert (=> b!67266 m!62299))

(declare-fun m!62301 () Bool)

(assert (=> b!67267 m!62301))

(assert (=> d!13871 d!14039))

(declare-fun b!67268 () Bool)

(declare-fun e!44092 () List!1466)

(declare-fun call!5644 () List!1466)

(assert (=> b!67268 (= e!44092 call!5644)))

(declare-fun bm!5641 () Bool)

(declare-fun call!5645 () List!1466)

(declare-fun call!5646 () List!1466)

(assert (=> bm!5641 (= call!5645 call!5646)))

(declare-fun b!67269 () Bool)

(declare-fun e!44094 () Bool)

(declare-fun lt!29269 () List!1466)

(assert (=> b!67269 (= e!44094 (contains!712 lt!29269 (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67270 () Bool)

(assert (=> b!67270 (= e!44092 call!5644)))

(declare-fun b!67271 () Bool)

(declare-fun e!44090 () List!1466)

(assert (=> b!67271 (= e!44090 (insertStrictlySorted!50 (t!4948 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67272 () Bool)

(declare-fun e!44093 () List!1466)

(assert (=> b!67272 (= e!44093 call!5646)))

(declare-fun b!67273 () Bool)

(declare-fun c!9367 () Bool)

(declare-fun c!9365 () Bool)

(assert (=> b!67273 (= e!44090 (ite c!9365 (t!4948 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) (ite c!9367 (Cons!1462 (h!2046 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) (t!4948 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))) Nil!1463)))))

(declare-fun d!14041 () Bool)

(assert (=> d!14041 e!44094))

(declare-fun res!36335 () Bool)

(assert (=> d!14041 (=> (not res!36335) (not e!44094))))

(assert (=> d!14041 (= res!36335 (isStrictlySorted!289 lt!29269))))

(assert (=> d!14041 (= lt!29269 e!44093)))

(declare-fun c!9368 () Bool)

(assert (=> d!14041 (= c!9368 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) (bvslt (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14041 (isStrictlySorted!289 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!14041 (= (insertStrictlySorted!50 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29269)))

(declare-fun bm!5642 () Bool)

(assert (=> bm!5642 (= call!5644 call!5645)))

(declare-fun b!67274 () Bool)

(declare-fun res!36334 () Bool)

(assert (=> b!67274 (=> (not res!36334) (not e!44094))))

(assert (=> b!67274 (= res!36334 (containsKey!134 lt!29269 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67275 () Bool)

(declare-fun e!44091 () List!1466)

(assert (=> b!67275 (= e!44091 call!5645)))

(declare-fun b!67276 () Bool)

(assert (=> b!67276 (= c!9367 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) (bvsgt (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67276 (= e!44091 e!44092)))

(declare-fun b!67277 () Bool)

(assert (=> b!67277 (= e!44093 e!44091)))

(assert (=> b!67277 (= c!9365 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun bm!5643 () Bool)

(assert (=> bm!5643 (= call!5646 ($colon$colon!63 e!44090 (ite c!9368 (h!2046 (toList!717 (+!89 lt!28620 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9366 () Bool)

(assert (=> bm!5643 (= c!9366 c!9368)))

(assert (= (and d!14041 c!9368) b!67272))

(assert (= (and d!14041 (not c!9368)) b!67277))

(assert (= (and b!67277 c!9365) b!67275))

(assert (= (and b!67277 (not c!9365)) b!67276))

(assert (= (and b!67276 c!9367) b!67270))

(assert (= (and b!67276 (not c!9367)) b!67268))

(assert (= (or b!67270 b!67268) bm!5642))

(assert (= (or b!67275 bm!5642) bm!5641))

(assert (= (or b!67272 bm!5641) bm!5643))

(assert (= (and bm!5643 c!9366) b!67271))

(assert (= (and bm!5643 (not c!9366)) b!67273))

(assert (= (and d!14041 res!36335) b!67274))

(assert (= (and b!67274 res!36334) b!67269))

(declare-fun m!62303 () Bool)

(assert (=> b!67269 m!62303))

(declare-fun m!62305 () Bool)

(assert (=> d!14041 m!62305))

(declare-fun m!62307 () Bool)

(assert (=> d!14041 m!62307))

(declare-fun m!62309 () Bool)

(assert (=> bm!5643 m!62309))

(declare-fun m!62311 () Bool)

(assert (=> b!67274 m!62311))

(declare-fun m!62313 () Bool)

(assert (=> b!67271 m!62313))

(assert (=> d!13871 d!14041))

(declare-fun d!14043 () Bool)

(assert (=> d!14043 (contains!710 (getCurrentListMap!415 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803)))))

(assert (=> d!14043 true))

(declare-fun _$16!87 () Unit!1838)

(assert (=> d!14043 (= (choose!373 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3061 lt!28803) (defaultEntry!2147 newMap!16)) _$16!87)))

(declare-fun bs!2889 () Bool)

(assert (= bs!2889 d!14043))

(assert (=> bs!2889 m!62013))

(assert (=> bs!2889 m!61335))

(assert (=> bs!2889 m!62013))

(assert (=> bs!2889 m!61335))

(assert (=> bs!2889 m!62015))

(assert (=> d!13953 d!14043))

(assert (=> d!13953 d!14025))

(declare-fun d!14045 () Bool)

(assert (=> d!14045 (= (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28870)) (v!2482 (getValueByKey!130 (toList!717 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28870)))))

(assert (=> d!13929 d!14045))

(declare-fun c!9369 () Bool)

(declare-fun d!14047 () Bool)

(assert (=> d!14047 (= c!9369 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28870)))))

(declare-fun e!44095 () Option!136)

(assert (=> d!14047 (= (getValueByKey!130 (toList!717 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28870) e!44095)))

(declare-fun b!67279 () Bool)

(declare-fun e!44096 () Option!136)

(assert (=> b!67279 (= e!44095 e!44096)))

(declare-fun c!9370 () Bool)

(assert (=> b!67279 (= c!9370 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) (not (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28870))))))

(declare-fun b!67278 () Bool)

(assert (=> b!67278 (= e!44095 (Some!135 (_2!1057 (h!2046 (toList!717 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun b!67280 () Bool)

(assert (=> b!67280 (= e!44096 (getValueByKey!130 (t!4948 (toList!717 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) lt!28870))))

(declare-fun b!67281 () Bool)

(assert (=> b!67281 (= e!44096 None!134)))

(assert (= (and d!14047 c!9369) b!67278))

(assert (= (and d!14047 (not c!9369)) b!67279))

(assert (= (and b!67279 c!9370) b!67280))

(assert (= (and b!67279 (not c!9370)) b!67281))

(declare-fun m!62315 () Bool)

(assert (=> b!67280 m!62315))

(assert (=> d!13929 d!14047))

(declare-fun d!14049 () Bool)

(assert (=> d!14049 (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29270 () Unit!1838)

(assert (=> d!14049 (= lt!29270 (choose!377 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44097 () Bool)

(assert (=> d!14049 e!44097))

(declare-fun res!36336 () Bool)

(assert (=> d!14049 (=> (not res!36336) (not e!44097))))

(assert (=> d!14049 (= res!36336 (isStrictlySorted!289 (toList!717 lt!28698)))))

(assert (=> d!14049 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000) lt!29270)))

(declare-fun b!67282 () Bool)

(assert (=> b!67282 (= e!44097 (containsKey!134 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14049 res!36336) b!67282))

(assert (=> d!14049 m!62099))

(assert (=> d!14049 m!62099))

(assert (=> d!14049 m!62101))

(declare-fun m!62317 () Bool)

(assert (=> d!14049 m!62317))

(declare-fun m!62319 () Bool)

(assert (=> d!14049 m!62319))

(assert (=> b!67282 m!62095))

(assert (=> b!67141 d!14049))

(declare-fun d!14051 () Bool)

(assert (=> d!14051 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2890 () Bool)

(assert (= bs!2890 d!14051))

(assert (=> bs!2890 m!62099))

(declare-fun m!62321 () Bool)

(assert (=> bs!2890 m!62321))

(assert (=> b!67141 d!14051))

(declare-fun d!14053 () Bool)

(declare-fun c!9371 () Bool)

(assert (=> d!14053 (= c!9371 (and ((_ is Cons!1462) (toList!717 lt!28698)) (= (_1!1057 (h!2046 (toList!717 lt!28698))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!44098 () Option!136)

(assert (=> d!14053 (= (getValueByKey!130 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000) e!44098)))

(declare-fun b!67284 () Bool)

(declare-fun e!44099 () Option!136)

(assert (=> b!67284 (= e!44098 e!44099)))

(declare-fun c!9372 () Bool)

(assert (=> b!67284 (= c!9372 (and ((_ is Cons!1462) (toList!717 lt!28698)) (not (= (_1!1057 (h!2046 (toList!717 lt!28698))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!67283 () Bool)

(assert (=> b!67283 (= e!44098 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28698)))))))

(declare-fun b!67285 () Bool)

(assert (=> b!67285 (= e!44099 (getValueByKey!130 (t!4948 (toList!717 lt!28698)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67286 () Bool)

(assert (=> b!67286 (= e!44099 None!134)))

(assert (= (and d!14053 c!9371) b!67283))

(assert (= (and d!14053 (not c!9371)) b!67284))

(assert (= (and b!67284 c!9372) b!67285))

(assert (= (and b!67284 (not c!9372)) b!67286))

(declare-fun m!62323 () Bool)

(assert (=> b!67285 m!62323))

(assert (=> b!67141 d!14053))

(declare-fun d!14055 () Bool)

(assert (=> d!14055 (= (apply!72 lt!29012 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1120 (getValueByKey!130 (toList!717 lt!29012) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2891 () Bool)

(assert (= bs!2891 d!14055))

(declare-fun m!62325 () Bool)

(assert (=> bs!2891 m!62325))

(assert (=> bs!2891 m!62325))

(declare-fun m!62327 () Bool)

(assert (=> bs!2891 m!62327))

(assert (=> b!66982 d!14055))

(declare-fun lt!29271 () Bool)

(declare-fun d!14057 () Bool)

(assert (=> d!14057 (= lt!29271 (select (content!72 (toList!717 lt!29034)) (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44100 () Bool)

(assert (=> d!14057 (= lt!29271 e!44100)))

(declare-fun res!36337 () Bool)

(assert (=> d!14057 (=> (not res!36337) (not e!44100))))

(assert (=> d!14057 (= res!36337 ((_ is Cons!1462) (toList!717 lt!29034)))))

(assert (=> d!14057 (= (contains!712 (toList!717 lt!29034) (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29271)))

(declare-fun b!67287 () Bool)

(declare-fun e!44101 () Bool)

(assert (=> b!67287 (= e!44100 e!44101)))

(declare-fun res!36338 () Bool)

(assert (=> b!67287 (=> res!36338 e!44101)))

(assert (=> b!67287 (= res!36338 (= (h!2046 (toList!717 lt!29034)) (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67288 () Bool)

(assert (=> b!67288 (= e!44101 (contains!712 (t!4948 (toList!717 lt!29034)) (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14057 res!36337) b!67287))

(assert (= (and b!67287 (not res!36338)) b!67288))

(declare-fun m!62329 () Bool)

(assert (=> d!14057 m!62329))

(declare-fun m!62331 () Bool)

(assert (=> d!14057 m!62331))

(declare-fun m!62333 () Bool)

(assert (=> b!67288 m!62333))

(assert (=> b!67004 d!14057))

(declare-fun d!14059 () Bool)

(assert (=> d!14059 (isDefined!83 (getValueByKey!130 (toList!717 lt!28671) (_1!1057 lt!28617)))))

(declare-fun lt!29272 () Unit!1838)

(assert (=> d!14059 (= lt!29272 (choose!377 (toList!717 lt!28671) (_1!1057 lt!28617)))))

(declare-fun e!44102 () Bool)

(assert (=> d!14059 e!44102))

(declare-fun res!36339 () Bool)

(assert (=> d!14059 (=> (not res!36339) (not e!44102))))

(assert (=> d!14059 (= res!36339 (isStrictlySorted!289 (toList!717 lt!28671)))))

(assert (=> d!14059 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28671) (_1!1057 lt!28617)) lt!29272)))

(declare-fun b!67289 () Bool)

(assert (=> b!67289 (= e!44102 (containsKey!134 (toList!717 lt!28671) (_1!1057 lt!28617)))))

(assert (= (and d!14059 res!36339) b!67289))

(assert (=> d!14059 m!61199))

(assert (=> d!14059 m!61199))

(assert (=> d!14059 m!61577))

(declare-fun m!62335 () Bool)

(assert (=> d!14059 m!62335))

(declare-fun m!62337 () Bool)

(assert (=> d!14059 m!62337))

(assert (=> b!67289 m!61573))

(assert (=> b!66862 d!14059))

(declare-fun d!14061 () Bool)

(assert (=> d!14061 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28671) (_1!1057 lt!28617))) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28671) (_1!1057 lt!28617)))))))

(declare-fun bs!2892 () Bool)

(assert (= bs!2892 d!14061))

(assert (=> bs!2892 m!61199))

(declare-fun m!62339 () Bool)

(assert (=> bs!2892 m!62339))

(assert (=> b!66862 d!14061))

(assert (=> b!66862 d!13977))

(declare-fun d!14063 () Bool)

(assert (=> d!14063 (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29273 () Unit!1838)

(assert (=> d!14063 (= lt!29273 (choose!377 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44103 () Bool)

(assert (=> d!14063 e!44103))

(declare-fun res!36340 () Bool)

(assert (=> d!14063 (=> (not res!36340) (not e!44103))))

(assert (=> d!14063 (= res!36340 (isStrictlySorted!289 (toList!717 lt!28877)))))

(assert (=> d!14063 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000) lt!29273)))

(declare-fun b!67290 () Bool)

(assert (=> b!67290 (= e!44103 (containsKey!134 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14063 res!36340) b!67290))

(assert (=> d!14063 m!61519))

(assert (=> d!14063 m!61519))

(assert (=> d!14063 m!61521))

(declare-fun m!62341 () Bool)

(assert (=> d!14063 m!62341))

(declare-fun m!62343 () Bool)

(assert (=> d!14063 m!62343))

(assert (=> b!67290 m!61515))

(assert (=> b!66814 d!14063))

(declare-fun d!14065 () Bool)

(assert (=> d!14065 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2893 () Bool)

(assert (= bs!2893 d!14065))

(assert (=> bs!2893 m!61519))

(declare-fun m!62345 () Bool)

(assert (=> bs!2893 m!62345))

(assert (=> b!66814 d!14065))

(declare-fun d!14067 () Bool)

(declare-fun c!9373 () Bool)

(assert (=> d!14067 (= c!9373 (and ((_ is Cons!1462) (toList!717 lt!28877)) (= (_1!1057 (h!2046 (toList!717 lt!28877))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!44104 () Option!136)

(assert (=> d!14067 (= (getValueByKey!130 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000) e!44104)))

(declare-fun b!67292 () Bool)

(declare-fun e!44105 () Option!136)

(assert (=> b!67292 (= e!44104 e!44105)))

(declare-fun c!9374 () Bool)

(assert (=> b!67292 (= c!9374 (and ((_ is Cons!1462) (toList!717 lt!28877)) (not (= (_1!1057 (h!2046 (toList!717 lt!28877))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!67291 () Bool)

(assert (=> b!67291 (= e!44104 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28877)))))))

(declare-fun b!67293 () Bool)

(assert (=> b!67293 (= e!44105 (getValueByKey!130 (t!4948 (toList!717 lt!28877)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67294 () Bool)

(assert (=> b!67294 (= e!44105 None!134)))

(assert (= (and d!14067 c!9373) b!67291))

(assert (= (and d!14067 (not c!9373)) b!67292))

(assert (= (and b!67292 c!9374) b!67293))

(assert (= (and b!67292 (not c!9374)) b!67294))

(declare-fun m!62347 () Bool)

(assert (=> b!67293 m!62347))

(assert (=> b!66814 d!14067))

(declare-fun d!14069 () Bool)

(assert (=> d!14069 (= (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67136 d!14069))

(declare-fun d!14071 () Bool)

(declare-fun e!44106 () Bool)

(assert (=> d!14071 e!44106))

(declare-fun res!36342 () Bool)

(assert (=> d!14071 (=> (not res!36342) (not e!44106))))

(declare-fun lt!29274 () ListLongMap!1403)

(assert (=> d!14071 (= res!36342 (contains!710 lt!29274 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616))))))

(declare-fun lt!29275 () List!1466)

(assert (=> d!14071 (= lt!29274 (ListLongMap!1404 lt!29275))))

(declare-fun lt!29276 () Unit!1838)

(declare-fun lt!29277 () Unit!1838)

(assert (=> d!14071 (= lt!29276 lt!29277)))

(assert (=> d!14071 (= (getValueByKey!130 lt!29275 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616))) (Some!135 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616))))))

(assert (=> d!14071 (= lt!29277 (lemmaContainsTupThenGetReturnValue!47 lt!29275 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616))))))

(assert (=> d!14071 (= lt!29275 (insertStrictlySorted!50 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616))))))

(assert (=> d!14071 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616)) lt!29274)))

(declare-fun b!67295 () Bool)

(declare-fun res!36341 () Bool)

(assert (=> b!67295 (=> (not res!36341) (not e!44106))))

(assert (=> b!67295 (= res!36341 (= (getValueByKey!130 (toList!717 lt!29274) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616))) (Some!135 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616)))))))

(declare-fun b!67296 () Bool)

(assert (=> b!67296 (= e!44106 (contains!712 (toList!717 lt!29274) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616)))))

(assert (= (and d!14071 res!36342) b!67295))

(assert (= (and b!67295 res!36341) b!67296))

(declare-fun m!62349 () Bool)

(assert (=> d!14071 m!62349))

(declare-fun m!62351 () Bool)

(assert (=> d!14071 m!62351))

(declare-fun m!62353 () Bool)

(assert (=> d!14071 m!62353))

(declare-fun m!62355 () Bool)

(assert (=> d!14071 m!62355))

(declare-fun m!62357 () Bool)

(assert (=> b!67295 m!62357))

(declare-fun m!62359 () Bool)

(assert (=> b!67296 m!62359))

(assert (=> d!13859 d!14071))

(declare-fun b!67297 () Bool)

(declare-fun e!44116 () ListLongMap!1403)

(declare-fun call!5652 () ListLongMap!1403)

(assert (=> b!67297 (= e!44116 call!5652)))

(declare-fun b!67298 () Bool)

(declare-fun e!44111 () ListLongMap!1403)

(assert (=> b!67298 (= e!44111 call!5652)))

(declare-fun b!67299 () Bool)

(declare-fun e!44114 () Bool)

(declare-fun lt!29298 () ListLongMap!1403)

(assert (=> b!67299 (= e!44114 (= (apply!72 lt!29298 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5644 () Bool)

(declare-fun call!5653 () ListLongMap!1403)

(assert (=> bm!5644 (= call!5653 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28792 lt!28616 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5645 () Bool)

(declare-fun call!5647 () Bool)

(assert (=> bm!5645 (= call!5647 (contains!710 lt!29298 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5646 () Bool)

(declare-fun call!5650 () ListLongMap!1403)

(declare-fun call!5648 () ListLongMap!1403)

(assert (=> bm!5646 (= call!5650 call!5648)))

(declare-fun b!67300 () Bool)

(declare-fun e!44117 () ListLongMap!1403)

(declare-fun call!5651 () ListLongMap!1403)

(assert (=> b!67300 (= e!44117 (+!89 call!5651 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!67301 () Bool)

(declare-fun e!44109 () Unit!1838)

(declare-fun lt!29299 () Unit!1838)

(assert (=> b!67301 (= e!44109 lt!29299)))

(declare-fun lt!29295 () ListLongMap!1403)

(assert (=> b!67301 (= lt!29295 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28792 lt!28616 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29297 () (_ BitVec 64))

(assert (=> b!67301 (= lt!29297 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29287 () (_ BitVec 64))

(assert (=> b!67301 (= lt!29287 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29286 () Unit!1838)

(assert (=> b!67301 (= lt!29286 (addStillContains!48 lt!29295 lt!29297 lt!28616 lt!29287))))

(assert (=> b!67301 (contains!710 (+!89 lt!29295 (tuple2!2093 lt!29297 lt!28616)) lt!29287)))

(declare-fun lt!29279 () Unit!1838)

(assert (=> b!67301 (= lt!29279 lt!29286)))

(declare-fun lt!29292 () ListLongMap!1403)

(assert (=> b!67301 (= lt!29292 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28792 lt!28616 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29289 () (_ BitVec 64))

(assert (=> b!67301 (= lt!29289 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29281 () (_ BitVec 64))

(assert (=> b!67301 (= lt!29281 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29282 () Unit!1838)

(assert (=> b!67301 (= lt!29282 (addApplyDifferent!48 lt!29292 lt!29289 (minValue!2055 newMap!16) lt!29281))))

(assert (=> b!67301 (= (apply!72 (+!89 lt!29292 (tuple2!2093 lt!29289 (minValue!2055 newMap!16))) lt!29281) (apply!72 lt!29292 lt!29281))))

(declare-fun lt!29296 () Unit!1838)

(assert (=> b!67301 (= lt!29296 lt!29282)))

(declare-fun lt!29284 () ListLongMap!1403)

(assert (=> b!67301 (= lt!29284 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28792 lt!28616 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29283 () (_ BitVec 64))

(assert (=> b!67301 (= lt!29283 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29294 () (_ BitVec 64))

(assert (=> b!67301 (= lt!29294 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29293 () Unit!1838)

(assert (=> b!67301 (= lt!29293 (addApplyDifferent!48 lt!29284 lt!29283 lt!28616 lt!29294))))

(assert (=> b!67301 (= (apply!72 (+!89 lt!29284 (tuple2!2093 lt!29283 lt!28616)) lt!29294) (apply!72 lt!29284 lt!29294))))

(declare-fun lt!29285 () Unit!1838)

(assert (=> b!67301 (= lt!29285 lt!29293)))

(declare-fun lt!29288 () ListLongMap!1403)

(assert (=> b!67301 (= lt!29288 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28792 lt!28616 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29278 () (_ BitVec 64))

(assert (=> b!67301 (= lt!29278 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29291 () (_ BitVec 64))

(assert (=> b!67301 (= lt!29291 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67301 (= lt!29299 (addApplyDifferent!48 lt!29288 lt!29278 (minValue!2055 newMap!16) lt!29291))))

(assert (=> b!67301 (= (apply!72 (+!89 lt!29288 (tuple2!2093 lt!29278 (minValue!2055 newMap!16))) lt!29291) (apply!72 lt!29288 lt!29291))))

(declare-fun b!67302 () Bool)

(declare-fun e!44115 () Bool)

(assert (=> b!67302 (= e!44115 (= (apply!72 lt!29298 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67302 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (_values!2130 newMap!16))))))

(assert (=> b!67302 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67303 () Bool)

(assert (=> b!67303 (= e!44117 e!44116)))

(declare-fun c!9377 () Bool)

(assert (=> b!67303 (= c!9377 (and (not (= (bvand lt!28792 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!28792 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14073 () Bool)

(declare-fun e!44113 () Bool)

(assert (=> d!14073 e!44113))

(declare-fun res!36348 () Bool)

(assert (=> d!14073 (=> (not res!36348) (not e!44113))))

(assert (=> d!14073 (= res!36348 (or (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))))

(declare-fun lt!29280 () ListLongMap!1403)

(assert (=> d!14073 (= lt!29298 lt!29280)))

(declare-fun lt!29290 () Unit!1838)

(assert (=> d!14073 (= lt!29290 e!44109)))

(declare-fun c!9379 () Bool)

(declare-fun e!44118 () Bool)

(assert (=> d!14073 (= c!9379 e!44118)))

(declare-fun res!36350 () Bool)

(assert (=> d!14073 (=> (not res!36350) (not e!44118))))

(assert (=> d!14073 (= res!36350 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14073 (= lt!29280 e!44117)))

(declare-fun c!9378 () Bool)

(assert (=> d!14073 (= c!9378 (and (not (= (bvand lt!28792 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!28792 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14073 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14073 (= (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28792 lt!28616 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29298)))

(declare-fun b!67304 () Bool)

(declare-fun e!44112 () Bool)

(declare-fun call!5649 () Bool)

(assert (=> b!67304 (= e!44112 (not call!5649))))

(declare-fun b!67305 () Bool)

(declare-fun res!36347 () Bool)

(assert (=> b!67305 (=> (not res!36347) (not e!44113))))

(assert (=> b!67305 (= res!36347 e!44112)))

(declare-fun c!9376 () Bool)

(assert (=> b!67305 (= c!9376 (not (= (bvand lt!28792 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5647 () Bool)

(assert (=> bm!5647 (= call!5652 call!5651)))

(declare-fun b!67306 () Bool)

(declare-fun e!44107 () Bool)

(assert (=> b!67306 (= e!44113 e!44107)))

(declare-fun c!9375 () Bool)

(assert (=> b!67306 (= c!9375 (not (= (bvand lt!28792 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67307 () Bool)

(assert (=> b!67307 (= e!44107 e!44114)))

(declare-fun res!36344 () Bool)

(assert (=> b!67307 (= res!36344 call!5647)))

(assert (=> b!67307 (=> (not res!36344) (not e!44114))))

(declare-fun bm!5648 () Bool)

(assert (=> bm!5648 (= call!5651 (+!89 (ite c!9378 call!5653 (ite c!9377 call!5648 call!5650)) (ite (or c!9378 c!9377) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!67308 () Bool)

(declare-fun c!9380 () Bool)

(assert (=> b!67308 (= c!9380 (and (not (= (bvand lt!28792 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!28792 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!67308 (= e!44116 e!44111)))

(declare-fun bm!5649 () Bool)

(assert (=> bm!5649 (= call!5648 call!5653)))

(declare-fun b!67309 () Bool)

(assert (=> b!67309 (= e!44118 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67310 () Bool)

(declare-fun res!36346 () Bool)

(assert (=> b!67310 (=> (not res!36346) (not e!44113))))

(declare-fun e!44119 () Bool)

(assert (=> b!67310 (= res!36346 e!44119)))

(declare-fun res!36343 () Bool)

(assert (=> b!67310 (=> res!36343 e!44119)))

(declare-fun e!44110 () Bool)

(assert (=> b!67310 (= res!36343 (not e!44110))))

(declare-fun res!36345 () Bool)

(assert (=> b!67310 (=> (not res!36345) (not e!44110))))

(assert (=> b!67310 (= res!36345 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67311 () Bool)

(declare-fun e!44108 () Bool)

(assert (=> b!67311 (= e!44112 e!44108)))

(declare-fun res!36351 () Bool)

(assert (=> b!67311 (= res!36351 call!5649)))

(assert (=> b!67311 (=> (not res!36351) (not e!44108))))

(declare-fun b!67312 () Bool)

(assert (=> b!67312 (= e!44107 (not call!5647))))

(declare-fun b!67313 () Bool)

(assert (=> b!67313 (= e!44111 call!5650)))

(declare-fun b!67314 () Bool)

(declare-fun Unit!1873 () Unit!1838)

(assert (=> b!67314 (= e!44109 Unit!1873)))

(declare-fun b!67315 () Bool)

(assert (=> b!67315 (= e!44119 e!44115)))

(declare-fun res!36349 () Bool)

(assert (=> b!67315 (=> (not res!36349) (not e!44115))))

(assert (=> b!67315 (= res!36349 (contains!710 lt!29298 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67315 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun bm!5650 () Bool)

(assert (=> bm!5650 (= call!5649 (contains!710 lt!29298 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67316 () Bool)

(assert (=> b!67316 (= e!44110 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67317 () Bool)

(assert (=> b!67317 (= e!44108 (= (apply!72 lt!29298 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28616))))

(assert (= (and d!14073 c!9378) b!67300))

(assert (= (and d!14073 (not c!9378)) b!67303))

(assert (= (and b!67303 c!9377) b!67297))

(assert (= (and b!67303 (not c!9377)) b!67308))

(assert (= (and b!67308 c!9380) b!67298))

(assert (= (and b!67308 (not c!9380)) b!67313))

(assert (= (or b!67298 b!67313) bm!5646))

(assert (= (or b!67297 bm!5646) bm!5649))

(assert (= (or b!67297 b!67298) bm!5647))

(assert (= (or b!67300 bm!5649) bm!5644))

(assert (= (or b!67300 bm!5647) bm!5648))

(assert (= (and d!14073 res!36350) b!67309))

(assert (= (and d!14073 c!9379) b!67301))

(assert (= (and d!14073 (not c!9379)) b!67314))

(assert (= (and d!14073 res!36348) b!67310))

(assert (= (and b!67310 res!36345) b!67316))

(assert (= (and b!67310 (not res!36343)) b!67315))

(assert (= (and b!67315 res!36349) b!67302))

(assert (= (and b!67310 res!36346) b!67305))

(assert (= (and b!67305 c!9376) b!67311))

(assert (= (and b!67305 (not c!9376)) b!67304))

(assert (= (and b!67311 res!36351) b!67317))

(assert (= (or b!67311 b!67304) bm!5650))

(assert (= (and b!67305 res!36347) b!67306))

(assert (= (and b!67306 c!9375) b!67307))

(assert (= (and b!67306 (not c!9375)) b!67312))

(assert (= (and b!67307 res!36344) b!67299))

(assert (= (or b!67307 b!67312) bm!5645))

(declare-fun b_lambda!3013 () Bool)

(assert (=> (not b_lambda!3013) (not b!67302)))

(assert (=> b!67302 t!4955))

(declare-fun b_and!4151 () Bool)

(assert (= b_and!4147 (and (=> t!4955 result!2591) b_and!4151)))

(assert (=> b!67302 t!4957))

(declare-fun b_and!4153 () Bool)

(assert (= b_and!4149 (and (=> t!4957 result!2593) b_and!4153)))

(declare-fun m!62361 () Bool)

(assert (=> b!67301 m!62361))

(declare-fun m!62363 () Bool)

(assert (=> b!67301 m!62363))

(declare-fun m!62365 () Bool)

(assert (=> b!67301 m!62365))

(declare-fun m!62367 () Bool)

(assert (=> b!67301 m!62367))

(declare-fun m!62369 () Bool)

(assert (=> b!67301 m!62369))

(declare-fun m!62371 () Bool)

(assert (=> b!67301 m!62371))

(declare-fun m!62373 () Bool)

(assert (=> b!67301 m!62373))

(declare-fun m!62375 () Bool)

(assert (=> b!67301 m!62375))

(declare-fun m!62377 () Bool)

(assert (=> b!67301 m!62377))

(declare-fun m!62379 () Bool)

(assert (=> b!67301 m!62379))

(declare-fun m!62381 () Bool)

(assert (=> b!67301 m!62381))

(assert (=> b!67301 m!62369))

(assert (=> b!67301 m!62377))

(declare-fun m!62383 () Bool)

(assert (=> b!67301 m!62383))

(assert (=> b!67301 m!61465))

(declare-fun m!62385 () Bool)

(assert (=> b!67301 m!62385))

(assert (=> b!67301 m!62385))

(declare-fun m!62387 () Bool)

(assert (=> b!67301 m!62387))

(assert (=> b!67301 m!62367))

(declare-fun m!62389 () Bool)

(assert (=> b!67301 m!62389))

(declare-fun m!62391 () Bool)

(assert (=> b!67301 m!62391))

(declare-fun m!62393 () Bool)

(assert (=> b!67299 m!62393))

(declare-fun m!62395 () Bool)

(assert (=> b!67317 m!62395))

(assert (=> b!67316 m!61465))

(assert (=> b!67316 m!61465))

(assert (=> b!67316 m!61479))

(declare-fun m!62397 () Bool)

(assert (=> b!67300 m!62397))

(assert (=> bm!5644 m!62381))

(declare-fun m!62399 () Bool)

(assert (=> bm!5645 m!62399))

(assert (=> b!67309 m!61465))

(assert (=> b!67309 m!61465))

(assert (=> b!67309 m!61479))

(assert (=> d!14073 m!61485))

(declare-fun m!62401 () Bool)

(assert (=> bm!5648 m!62401))

(declare-fun m!62403 () Bool)

(assert (=> bm!5650 m!62403))

(assert (=> b!67302 m!61465))

(assert (=> b!67302 m!61491))

(assert (=> b!67302 m!61465))

(declare-fun m!62405 () Bool)

(assert (=> b!67302 m!62405))

(assert (=> b!67302 m!61799))

(assert (=> b!67302 m!61799))

(assert (=> b!67302 m!61491))

(assert (=> b!67302 m!61801))

(assert (=> b!67315 m!61465))

(assert (=> b!67315 m!61465))

(declare-fun m!62407 () Bool)

(assert (=> b!67315 m!62407))

(assert (=> d!13859 d!14073))

(assert (=> d!13859 d!13903))

(declare-fun d!14075 () Bool)

(assert (=> d!14075 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28792 lt!28616 (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(assert (=> d!14075 true))

(declare-fun _$7!53 () Unit!1838)

(assert (=> d!14075 (= (choose!370 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28792 (zeroValue!2055 newMap!16) lt!28616 (minValue!2055 newMap!16) (defaultEntry!2147 newMap!16)) _$7!53)))

(declare-fun bs!2894 () Bool)

(assert (= bs!2894 d!14075))

(assert (=> bs!2894 m!61299))

(assert (=> bs!2894 m!61299))

(assert (=> bs!2894 m!61645))

(assert (=> bs!2894 m!61649))

(assert (=> d!13859 d!14075))

(assert (=> d!13859 d!14025))

(assert (=> d!13887 d!13791))

(declare-fun d!14077 () Bool)

(assert (=> d!14077 (= (apply!72 lt!29229 lt!29218) (get!1120 (getValueByKey!130 (toList!717 lt!29229) lt!29218)))))

(declare-fun bs!2895 () Bool)

(assert (= bs!2895 d!14077))

(declare-fun m!62409 () Bool)

(assert (=> bs!2895 m!62409))

(assert (=> bs!2895 m!62409))

(declare-fun m!62411 () Bool)

(assert (=> bs!2895 m!62411))

(assert (=> b!67183 d!14077))

(declare-fun d!14079 () Bool)

(declare-fun e!44120 () Bool)

(assert (=> d!14079 e!44120))

(declare-fun res!36353 () Bool)

(assert (=> d!14079 (=> (not res!36353) (not e!44120))))

(declare-fun lt!29300 () ListLongMap!1403)

(assert (=> d!14079 (= res!36353 (contains!710 lt!29300 (_1!1057 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(declare-fun lt!29301 () List!1466)

(assert (=> d!14079 (= lt!29300 (ListLongMap!1404 lt!29301))))

(declare-fun lt!29302 () Unit!1838)

(declare-fun lt!29303 () Unit!1838)

(assert (=> d!14079 (= lt!29302 lt!29303)))

(assert (=> d!14079 (= (getValueByKey!130 lt!29301 (_1!1057 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) (Some!135 (_2!1057 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(assert (=> d!14079 (= lt!29303 (lemmaContainsTupThenGetReturnValue!47 lt!29301 (_1!1057 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) (_2!1057 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(assert (=> d!14079 (= lt!29301 (insertStrictlySorted!50 (toList!717 lt!29225) (_1!1057 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) (_2!1057 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(assert (=> d!14079 (= (+!89 lt!29225 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) lt!29300)))

(declare-fun b!67318 () Bool)

(declare-fun res!36352 () Bool)

(assert (=> b!67318 (=> (not res!36352) (not e!44120))))

(assert (=> b!67318 (= res!36352 (= (getValueByKey!130 (toList!717 lt!29300) (_1!1057 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) (Some!135 (_2!1057 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))))

(declare-fun b!67319 () Bool)

(assert (=> b!67319 (= e!44120 (contains!712 (toList!717 lt!29300) (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))

(assert (= (and d!14079 res!36353) b!67318))

(assert (= (and b!67318 res!36352) b!67319))

(declare-fun m!62413 () Bool)

(assert (=> d!14079 m!62413))

(declare-fun m!62415 () Bool)

(assert (=> d!14079 m!62415))

(declare-fun m!62417 () Bool)

(assert (=> d!14079 m!62417))

(declare-fun m!62419 () Bool)

(assert (=> d!14079 m!62419))

(declare-fun m!62421 () Bool)

(assert (=> b!67318 m!62421))

(declare-fun m!62423 () Bool)

(assert (=> b!67319 m!62423))

(assert (=> b!67183 d!14079))

(declare-fun d!14081 () Bool)

(declare-fun e!44122 () Bool)

(assert (=> d!14081 e!44122))

(declare-fun res!36354 () Bool)

(assert (=> d!14081 (=> res!36354 e!44122)))

(declare-fun lt!29306 () Bool)

(assert (=> d!14081 (= res!36354 (not lt!29306))))

(declare-fun lt!29304 () Bool)

(assert (=> d!14081 (= lt!29306 lt!29304)))

(declare-fun lt!29307 () Unit!1838)

(declare-fun e!44121 () Unit!1838)

(assert (=> d!14081 (= lt!29307 e!44121)))

(declare-fun c!9381 () Bool)

(assert (=> d!14081 (= c!9381 lt!29304)))

(assert (=> d!14081 (= lt!29304 (containsKey!134 (toList!717 (+!89 lt!29232 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16)))) lt!29224))))

(assert (=> d!14081 (= (contains!710 (+!89 lt!29232 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16))) lt!29224) lt!29306)))

(declare-fun b!67320 () Bool)

(declare-fun lt!29305 () Unit!1838)

(assert (=> b!67320 (= e!44121 lt!29305)))

(assert (=> b!67320 (= lt!29305 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (+!89 lt!29232 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16)))) lt!29224))))

(assert (=> b!67320 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!29232 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16)))) lt!29224))))

(declare-fun b!67321 () Bool)

(declare-fun Unit!1874 () Unit!1838)

(assert (=> b!67321 (= e!44121 Unit!1874)))

(declare-fun b!67322 () Bool)

(assert (=> b!67322 (= e!44122 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!29232 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16)))) lt!29224)))))

(assert (= (and d!14081 c!9381) b!67320))

(assert (= (and d!14081 (not c!9381)) b!67321))

(assert (= (and d!14081 (not res!36354)) b!67322))

(declare-fun m!62425 () Bool)

(assert (=> d!14081 m!62425))

(declare-fun m!62427 () Bool)

(assert (=> b!67320 m!62427))

(declare-fun m!62429 () Bool)

(assert (=> b!67320 m!62429))

(assert (=> b!67320 m!62429))

(declare-fun m!62431 () Bool)

(assert (=> b!67320 m!62431))

(assert (=> b!67322 m!62429))

(assert (=> b!67322 m!62429))

(assert (=> b!67322 m!62431))

(assert (=> b!67183 d!14081))

(declare-fun d!14083 () Bool)

(assert (=> d!14083 (= (apply!72 (+!89 lt!29221 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16))) lt!29231) (apply!72 lt!29221 lt!29231))))

(declare-fun lt!29308 () Unit!1838)

(assert (=> d!14083 (= lt!29308 (choose!371 lt!29221 lt!29220 (zeroValue!2055 newMap!16) lt!29231))))

(declare-fun e!44123 () Bool)

(assert (=> d!14083 e!44123))

(declare-fun res!36355 () Bool)

(assert (=> d!14083 (=> (not res!36355) (not e!44123))))

(assert (=> d!14083 (= res!36355 (contains!710 lt!29221 lt!29231))))

(assert (=> d!14083 (= (addApplyDifferent!48 lt!29221 lt!29220 (zeroValue!2055 newMap!16) lt!29231) lt!29308)))

(declare-fun b!67323 () Bool)

(assert (=> b!67323 (= e!44123 (not (= lt!29231 lt!29220)))))

(assert (= (and d!14083 res!36355) b!67323))

(declare-fun m!62433 () Bool)

(assert (=> d!14083 m!62433))

(assert (=> d!14083 m!62181))

(assert (=> d!14083 m!62183))

(assert (=> d!14083 m!62181))

(assert (=> d!14083 m!62187))

(declare-fun m!62435 () Bool)

(assert (=> d!14083 m!62435))

(assert (=> b!67183 d!14083))

(declare-fun d!14085 () Bool)

(declare-fun e!44124 () Bool)

(assert (=> d!14085 e!44124))

(declare-fun res!36357 () Bool)

(assert (=> d!14085 (=> (not res!36357) (not e!44124))))

(declare-fun lt!29309 () ListLongMap!1403)

(assert (=> d!14085 (= res!36357 (contains!710 lt!29309 (_1!1057 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16)))))))

(declare-fun lt!29310 () List!1466)

(assert (=> d!14085 (= lt!29309 (ListLongMap!1404 lt!29310))))

(declare-fun lt!29311 () Unit!1838)

(declare-fun lt!29312 () Unit!1838)

(assert (=> d!14085 (= lt!29311 lt!29312)))

(assert (=> d!14085 (= (getValueByKey!130 lt!29310 (_1!1057 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14085 (= lt!29312 (lemmaContainsTupThenGetReturnValue!47 lt!29310 (_1!1057 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14085 (= lt!29310 (insertStrictlySorted!50 (toList!717 lt!29221) (_1!1057 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14085 (= (+!89 lt!29221 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16))) lt!29309)))

(declare-fun b!67324 () Bool)

(declare-fun res!36356 () Bool)

(assert (=> b!67324 (=> (not res!36356) (not e!44124))))

(assert (=> b!67324 (= res!36356 (= (getValueByKey!130 (toList!717 lt!29309) (_1!1057 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16))))))))

(declare-fun b!67325 () Bool)

(assert (=> b!67325 (= e!44124 (contains!712 (toList!717 lt!29309) (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16))))))

(assert (= (and d!14085 res!36357) b!67324))

(assert (= (and b!67324 res!36356) b!67325))

(declare-fun m!62437 () Bool)

(assert (=> d!14085 m!62437))

(declare-fun m!62439 () Bool)

(assert (=> d!14085 m!62439))

(declare-fun m!62441 () Bool)

(assert (=> d!14085 m!62441))

(declare-fun m!62443 () Bool)

(assert (=> d!14085 m!62443))

(declare-fun m!62445 () Bool)

(assert (=> b!67324 m!62445))

(declare-fun m!62447 () Bool)

(assert (=> b!67325 m!62447))

(assert (=> b!67183 d!14085))

(declare-fun d!14087 () Bool)

(assert (=> d!14087 (= (apply!72 (+!89 lt!29229 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) lt!29218) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!29229 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) lt!29218)))))

(declare-fun bs!2896 () Bool)

(assert (= bs!2896 d!14087))

(declare-fun m!62449 () Bool)

(assert (=> bs!2896 m!62449))

(assert (=> bs!2896 m!62449))

(declare-fun m!62451 () Bool)

(assert (=> bs!2896 m!62451))

(assert (=> b!67183 d!14087))

(declare-fun d!14089 () Bool)

(declare-fun e!44125 () Bool)

(assert (=> d!14089 e!44125))

(declare-fun res!36359 () Bool)

(assert (=> d!14089 (=> (not res!36359) (not e!44125))))

(declare-fun lt!29313 () ListLongMap!1403)

(assert (=> d!14089 (= res!36359 (contains!710 lt!29313 (_1!1057 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(declare-fun lt!29314 () List!1466)

(assert (=> d!14089 (= lt!29313 (ListLongMap!1404 lt!29314))))

(declare-fun lt!29315 () Unit!1838)

(declare-fun lt!29316 () Unit!1838)

(assert (=> d!14089 (= lt!29315 lt!29316)))

(assert (=> d!14089 (= (getValueByKey!130 lt!29314 (_1!1057 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) (Some!135 (_2!1057 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(assert (=> d!14089 (= lt!29316 (lemmaContainsTupThenGetReturnValue!47 lt!29314 (_1!1057 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) (_2!1057 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(assert (=> d!14089 (= lt!29314 (insertStrictlySorted!50 (toList!717 lt!29229) (_1!1057 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) (_2!1057 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(assert (=> d!14089 (= (+!89 lt!29229 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) lt!29313)))

(declare-fun b!67326 () Bool)

(declare-fun res!36358 () Bool)

(assert (=> b!67326 (=> (not res!36358) (not e!44125))))

(assert (=> b!67326 (= res!36358 (= (getValueByKey!130 (toList!717 lt!29313) (_1!1057 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) (Some!135 (_2!1057 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))))

(declare-fun b!67327 () Bool)

(assert (=> b!67327 (= e!44125 (contains!712 (toList!717 lt!29313) (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))

(assert (= (and d!14089 res!36359) b!67326))

(assert (= (and b!67326 res!36358) b!67327))

(declare-fun m!62453 () Bool)

(assert (=> d!14089 m!62453))

(declare-fun m!62455 () Bool)

(assert (=> d!14089 m!62455))

(declare-fun m!62457 () Bool)

(assert (=> d!14089 m!62457))

(declare-fun m!62459 () Bool)

(assert (=> d!14089 m!62459))

(declare-fun m!62461 () Bool)

(assert (=> b!67326 m!62461))

(declare-fun m!62463 () Bool)

(assert (=> b!67327 m!62463))

(assert (=> b!67183 d!14089))

(declare-fun d!14091 () Bool)

(declare-fun e!44126 () Bool)

(assert (=> d!14091 e!44126))

(declare-fun res!36361 () Bool)

(assert (=> d!14091 (=> (not res!36361) (not e!44126))))

(declare-fun lt!29317 () ListLongMap!1403)

(assert (=> d!14091 (= res!36361 (contains!710 lt!29317 (_1!1057 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16)))))))

(declare-fun lt!29318 () List!1466)

(assert (=> d!14091 (= lt!29317 (ListLongMap!1404 lt!29318))))

(declare-fun lt!29319 () Unit!1838)

(declare-fun lt!29320 () Unit!1838)

(assert (=> d!14091 (= lt!29319 lt!29320)))

(assert (=> d!14091 (= (getValueByKey!130 lt!29318 (_1!1057 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14091 (= lt!29320 (lemmaContainsTupThenGetReturnValue!47 lt!29318 (_1!1057 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14091 (= lt!29318 (insertStrictlySorted!50 (toList!717 lt!29232) (_1!1057 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14091 (= (+!89 lt!29232 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16))) lt!29317)))

(declare-fun b!67328 () Bool)

(declare-fun res!36360 () Bool)

(assert (=> b!67328 (=> (not res!36360) (not e!44126))))

(assert (=> b!67328 (= res!36360 (= (getValueByKey!130 (toList!717 lt!29317) (_1!1057 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16))))))))

(declare-fun b!67329 () Bool)

(assert (=> b!67329 (= e!44126 (contains!712 (toList!717 lt!29317) (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16))))))

(assert (= (and d!14091 res!36361) b!67328))

(assert (= (and b!67328 res!36360) b!67329))

(declare-fun m!62465 () Bool)

(assert (=> d!14091 m!62465))

(declare-fun m!62467 () Bool)

(assert (=> d!14091 m!62467))

(declare-fun m!62469 () Bool)

(assert (=> d!14091 m!62469))

(declare-fun m!62471 () Bool)

(assert (=> d!14091 m!62471))

(declare-fun m!62473 () Bool)

(assert (=> b!67328 m!62473))

(declare-fun m!62475 () Bool)

(assert (=> b!67329 m!62475))

(assert (=> b!67183 d!14091))

(declare-fun d!14093 () Bool)

(assert (=> d!14093 (= (apply!72 lt!29225 lt!29228) (get!1120 (getValueByKey!130 (toList!717 lt!29225) lt!29228)))))

(declare-fun bs!2897 () Bool)

(assert (= bs!2897 d!14093))

(declare-fun m!62477 () Bool)

(assert (=> bs!2897 m!62477))

(assert (=> bs!2897 m!62477))

(declare-fun m!62479 () Bool)

(assert (=> bs!2897 m!62479))

(assert (=> b!67183 d!14093))

(declare-fun d!14095 () Bool)

(assert (=> d!14095 (= (apply!72 (+!89 lt!29225 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) lt!29228) (apply!72 lt!29225 lt!29228))))

(declare-fun lt!29321 () Unit!1838)

(assert (=> d!14095 (= lt!29321 (choose!371 lt!29225 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) lt!29228))))

(declare-fun e!44127 () Bool)

(assert (=> d!14095 e!44127))

(declare-fun res!36362 () Bool)

(assert (=> d!14095 (=> (not res!36362) (not e!44127))))

(assert (=> d!14095 (= res!36362 (contains!710 lt!29225 lt!29228))))

(assert (=> d!14095 (= (addApplyDifferent!48 lt!29225 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) lt!29228) lt!29321)))

(declare-fun b!67330 () Bool)

(assert (=> b!67330 (= e!44127 (not (= lt!29228 lt!29215)))))

(assert (= (and d!14095 res!36362) b!67330))

(declare-fun m!62481 () Bool)

(assert (=> d!14095 m!62481))

(assert (=> d!14095 m!62171))

(assert (=> d!14095 m!62193))

(assert (=> d!14095 m!62171))

(assert (=> d!14095 m!62165))

(declare-fun m!62483 () Bool)

(assert (=> d!14095 m!62483))

(assert (=> b!67183 d!14095))

(declare-fun d!14097 () Bool)

(assert (=> d!14097 (= (apply!72 lt!29221 lt!29231) (get!1120 (getValueByKey!130 (toList!717 lt!29221) lt!29231)))))

(declare-fun bs!2898 () Bool)

(assert (= bs!2898 d!14097))

(declare-fun m!62485 () Bool)

(assert (=> bs!2898 m!62485))

(assert (=> bs!2898 m!62485))

(declare-fun m!62487 () Bool)

(assert (=> bs!2898 m!62487))

(assert (=> b!67183 d!14097))

(declare-fun d!14099 () Bool)

(assert (=> d!14099 (contains!710 (+!89 lt!29232 (tuple2!2093 lt!29234 (zeroValue!2055 newMap!16))) lt!29224)))

(declare-fun lt!29322 () Unit!1838)

(assert (=> d!14099 (= lt!29322 (choose!372 lt!29232 lt!29234 (zeroValue!2055 newMap!16) lt!29224))))

(assert (=> d!14099 (contains!710 lt!29232 lt!29224)))

(assert (=> d!14099 (= (addStillContains!48 lt!29232 lt!29234 (zeroValue!2055 newMap!16) lt!29224) lt!29322)))

(declare-fun bs!2899 () Bool)

(assert (= bs!2899 d!14099))

(assert (=> bs!2899 m!62173))

(assert (=> bs!2899 m!62173))

(assert (=> bs!2899 m!62175))

(declare-fun m!62489 () Bool)

(assert (=> bs!2899 m!62489))

(declare-fun m!62491 () Bool)

(assert (=> bs!2899 m!62491))

(assert (=> b!67183 d!14099))

(declare-fun d!14101 () Bool)

(assert (=> d!14101 (= (apply!72 (+!89 lt!29229 (tuple2!2093 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) lt!29218) (apply!72 lt!29229 lt!29218))))

(declare-fun lt!29323 () Unit!1838)

(assert (=> d!14101 (= lt!29323 (choose!371 lt!29229 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) lt!29218))))

(declare-fun e!44128 () Bool)

(assert (=> d!14101 e!44128))

(declare-fun res!36363 () Bool)

(assert (=> d!14101 (=> (not res!36363) (not e!44128))))

(assert (=> d!14101 (= res!36363 (contains!710 lt!29229 lt!29218))))

(assert (=> d!14101 (= (addApplyDifferent!48 lt!29229 lt!29226 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) lt!29218) lt!29323)))

(declare-fun b!67331 () Bool)

(assert (=> b!67331 (= e!44128 (not (= lt!29218 lt!29226)))))

(assert (= (and d!14101 res!36363) b!67331))

(declare-fun m!62493 () Bool)

(assert (=> d!14101 m!62493))

(assert (=> d!14101 m!62189))

(assert (=> d!14101 m!62191))

(assert (=> d!14101 m!62189))

(assert (=> d!14101 m!62179))

(declare-fun m!62495 () Bool)

(assert (=> d!14101 m!62495))

(assert (=> b!67183 d!14101))

(declare-fun d!14103 () Bool)

(assert (=> d!14103 (= (apply!72 (+!89 lt!29225 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) lt!29228) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!29225 (tuple2!2093 lt!29215 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) lt!29228)))))

(declare-fun bs!2900 () Bool)

(assert (= bs!2900 d!14103))

(declare-fun m!62497 () Bool)

(assert (=> bs!2900 m!62497))

(assert (=> bs!2900 m!62497))

(declare-fun m!62499 () Bool)

(assert (=> bs!2900 m!62499))

(assert (=> b!67183 d!14103))

(declare-fun bm!5651 () Bool)

(declare-fun call!5654 () ListLongMap!1403)

(assert (=> bm!5651 (= call!5654 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite c!9195 (_values!2130 newMap!16) lt!28797) (mask!6082 newMap!16) (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16)))))

(declare-fun b!67332 () Bool)

(declare-fun e!44131 () ListLongMap!1403)

(assert (=> b!67332 (= e!44131 (ListLongMap!1404 Nil!1463))))

(declare-fun b!67333 () Bool)

(declare-fun lt!29324 () Unit!1838)

(declare-fun lt!29330 () Unit!1838)

(assert (=> b!67333 (= lt!29324 lt!29330)))

(declare-fun lt!29328 () ListLongMap!1403)

(declare-fun lt!29327 () (_ BitVec 64))

(declare-fun lt!29325 () V!2915)

(declare-fun lt!29326 () (_ BitVec 64))

(assert (=> b!67333 (not (contains!710 (+!89 lt!29328 (tuple2!2093 lt!29326 lt!29325)) lt!29327))))

(assert (=> b!67333 (= lt!29330 (addStillNotContains!21 lt!29328 lt!29326 lt!29325 lt!29327))))

(assert (=> b!67333 (= lt!29327 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67333 (= lt!29325 (get!1116 (select (arr!1836 (ite c!9195 (_values!2130 newMap!16) lt!28797)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67333 (= lt!29326 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67333 (= lt!29328 call!5654)))

(declare-fun e!44134 () ListLongMap!1403)

(assert (=> b!67333 (= e!44134 (+!89 call!5654 (tuple2!2093 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (get!1116 (select (arr!1836 (ite c!9195 (_values!2130 newMap!16) lt!28797)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67334 () Bool)

(assert (=> b!67334 (= e!44131 e!44134)))

(declare-fun c!9385 () Bool)

(assert (=> b!67334 (= c!9385 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67335 () Bool)

(declare-fun e!44133 () Bool)

(declare-fun lt!29329 () ListLongMap!1403)

(assert (=> b!67335 (= e!44133 (isEmpty!307 lt!29329))))

(declare-fun b!67336 () Bool)

(declare-fun e!44135 () Bool)

(assert (=> b!67336 (= e!44135 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67336 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67337 () Bool)

(declare-fun res!36364 () Bool)

(declare-fun e!44130 () Bool)

(assert (=> b!67337 (=> (not res!36364) (not e!44130))))

(assert (=> b!67337 (= res!36364 (not (contains!710 lt!29329 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67338 () Bool)

(declare-fun e!44132 () Bool)

(assert (=> b!67338 (= e!44130 e!44132)))

(declare-fun c!9384 () Bool)

(assert (=> b!67338 (= c!9384 e!44135)))

(declare-fun res!36365 () Bool)

(assert (=> b!67338 (=> (not res!36365) (not e!44135))))

(assert (=> b!67338 (= res!36365 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun d!14105 () Bool)

(assert (=> d!14105 e!44130))

(declare-fun res!36367 () Bool)

(assert (=> d!14105 (=> (not res!36367) (not e!44130))))

(assert (=> d!14105 (= res!36367 (not (contains!710 lt!29329 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14105 (= lt!29329 e!44131)))

(declare-fun c!9383 () Bool)

(assert (=> d!14105 (= c!9383 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14105 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14105 (= (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite c!9195 (_values!2130 newMap!16) lt!28797) (mask!6082 newMap!16) (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29329)))

(declare-fun b!67339 () Bool)

(assert (=> b!67339 (= e!44133 (= lt!29329 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite c!9195 (_values!2130 newMap!16) lt!28797) (mask!6082 newMap!16) (ite c!9195 (ite c!9196 (extraKeys!2018 newMap!16) lt!28786) (extraKeys!2018 newMap!16)) (zeroValue!2055 newMap!16) (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16))))))

(declare-fun b!67340 () Bool)

(declare-fun e!44129 () Bool)

(assert (=> b!67340 (= e!44132 e!44129)))

(assert (=> b!67340 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun res!36366 () Bool)

(assert (=> b!67340 (= res!36366 (contains!710 lt!29329 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67340 (=> (not res!36366) (not e!44129))))

(declare-fun b!67341 () Bool)

(assert (=> b!67341 (= e!44134 call!5654)))

(declare-fun b!67342 () Bool)

(assert (=> b!67342 (= e!44132 e!44133)))

(declare-fun c!9382 () Bool)

(assert (=> b!67342 (= c!9382 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67343 () Bool)

(assert (=> b!67343 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> b!67343 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (ite c!9195 (_values!2130 newMap!16) lt!28797))))))

(assert (=> b!67343 (= e!44129 (= (apply!72 lt!29329 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (ite c!9195 (_values!2130 newMap!16) lt!28797)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14105 c!9383) b!67332))

(assert (= (and d!14105 (not c!9383)) b!67334))

(assert (= (and b!67334 c!9385) b!67333))

(assert (= (and b!67334 (not c!9385)) b!67341))

(assert (= (or b!67333 b!67341) bm!5651))

(assert (= (and d!14105 res!36367) b!67337))

(assert (= (and b!67337 res!36364) b!67338))

(assert (= (and b!67338 res!36365) b!67336))

(assert (= (and b!67338 c!9384) b!67340))

(assert (= (and b!67338 (not c!9384)) b!67342))

(assert (= (and b!67340 res!36366) b!67343))

(assert (= (and b!67342 c!9382) b!67339))

(assert (= (and b!67342 (not c!9382)) b!67335))

(declare-fun b_lambda!3015 () Bool)

(assert (=> (not b_lambda!3015) (not b!67333)))

(assert (=> b!67333 t!4955))

(declare-fun b_and!4155 () Bool)

(assert (= b_and!4151 (and (=> t!4955 result!2591) b_and!4155)))

(assert (=> b!67333 t!4957))

(declare-fun b_and!4157 () Bool)

(assert (= b_and!4153 (and (=> t!4957 result!2593) b_and!4157)))

(declare-fun b_lambda!3017 () Bool)

(assert (=> (not b_lambda!3017) (not b!67343)))

(assert (=> b!67343 t!4955))

(declare-fun b_and!4159 () Bool)

(assert (= b_and!4155 (and (=> t!4955 result!2591) b_and!4159)))

(assert (=> b!67343 t!4957))

(declare-fun b_and!4161 () Bool)

(assert (= b_and!4157 (and (=> t!4957 result!2593) b_and!4161)))

(declare-fun m!62501 () Bool)

(assert (=> b!67337 m!62501))

(declare-fun m!62503 () Bool)

(assert (=> b!67335 m!62503))

(declare-fun m!62505 () Bool)

(assert (=> b!67339 m!62505))

(declare-fun m!62507 () Bool)

(assert (=> b!67333 m!62507))

(declare-fun m!62509 () Bool)

(assert (=> b!67333 m!62509))

(assert (=> b!67333 m!62507))

(declare-fun m!62511 () Bool)

(assert (=> b!67333 m!62511))

(assert (=> b!67333 m!62211))

(assert (=> b!67333 m!61465))

(assert (=> b!67333 m!61491))

(assert (=> b!67333 m!62211))

(assert (=> b!67333 m!61491))

(assert (=> b!67333 m!62213))

(declare-fun m!62513 () Bool)

(assert (=> b!67333 m!62513))

(assert (=> b!67343 m!61465))

(declare-fun m!62515 () Bool)

(assert (=> b!67343 m!62515))

(assert (=> b!67343 m!62211))

(assert (=> b!67343 m!62211))

(assert (=> b!67343 m!61491))

(assert (=> b!67343 m!62213))

(assert (=> b!67343 m!61465))

(assert (=> b!67343 m!61491))

(assert (=> b!67340 m!61465))

(assert (=> b!67340 m!61465))

(declare-fun m!62517 () Bool)

(assert (=> b!67340 m!62517))

(declare-fun m!62519 () Bool)

(assert (=> d!14105 m!62519))

(assert (=> d!14105 m!61485))

(assert (=> b!67336 m!61465))

(assert (=> b!67336 m!61465))

(assert (=> b!67336 m!61479))

(assert (=> bm!5651 m!62505))

(assert (=> b!67334 m!61465))

(assert (=> b!67334 m!61465))

(assert (=> b!67334 m!61479))

(assert (=> b!67183 d!14105))

(declare-fun d!14107 () Bool)

(assert (=> d!14107 (= (apply!72 (+!89 lt!29221 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16))) lt!29231) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!29221 (tuple2!2093 lt!29220 (zeroValue!2055 newMap!16)))) lt!29231)))))

(declare-fun bs!2901 () Bool)

(assert (= bs!2901 d!14107))

(declare-fun m!62521 () Bool)

(assert (=> bs!2901 m!62521))

(assert (=> bs!2901 m!62521))

(declare-fun m!62523 () Bool)

(assert (=> bs!2901 m!62523))

(assert (=> b!67183 d!14107))

(declare-fun d!14109 () Bool)

(assert (=> d!14109 (= (apply!72 lt!28955 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1120 (getValueByKey!130 (toList!717 lt!28955) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!2902 () Bool)

(assert (= bs!2902 d!14109))

(assert (=> bs!2902 m!61631))

(declare-fun m!62525 () Bool)

(assert (=> bs!2902 m!62525))

(assert (=> bs!2902 m!62525))

(declare-fun m!62527 () Bool)

(assert (=> bs!2902 m!62527))

(assert (=> b!66905 d!14109))

(declare-fun d!14111 () Bool)

(declare-fun c!9386 () Bool)

(assert (=> d!14111 (= c!9386 ((_ is ValueCellFull!882) (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!44136 () V!2915)

(assert (=> d!14111 (= (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44136)))

(declare-fun b!67344 () Bool)

(assert (=> b!67344 (= e!44136 (get!1118 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67345 () Bool)

(assert (=> b!67345 (= e!44136 (get!1119 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14111 c!9386) b!67344))

(assert (= (and d!14111 (not c!9386)) b!67345))

(assert (=> b!67344 m!61629))

(assert (=> b!67344 m!61089))

(declare-fun m!62529 () Bool)

(assert (=> b!67344 m!62529))

(assert (=> b!67345 m!61629))

(assert (=> b!67345 m!61089))

(declare-fun m!62531 () Bool)

(assert (=> b!67345 m!62531))

(assert (=> b!66905 d!14111))

(declare-fun d!14113 () Bool)

(declare-fun c!9387 () Bool)

(assert (=> d!14113 (= c!9387 (and ((_ is Cons!1462) (t!4948 lt!28676)) (= (_1!1057 (h!2046 (t!4948 lt!28676))) (_1!1057 lt!28624))))))

(declare-fun e!44137 () Option!136)

(assert (=> d!14113 (= (getValueByKey!130 (t!4948 lt!28676) (_1!1057 lt!28624)) e!44137)))

(declare-fun b!67347 () Bool)

(declare-fun e!44138 () Option!136)

(assert (=> b!67347 (= e!44137 e!44138)))

(declare-fun c!9388 () Bool)

(assert (=> b!67347 (= c!9388 (and ((_ is Cons!1462) (t!4948 lt!28676)) (not (= (_1!1057 (h!2046 (t!4948 lt!28676))) (_1!1057 lt!28624)))))))

(declare-fun b!67346 () Bool)

(assert (=> b!67346 (= e!44137 (Some!135 (_2!1057 (h!2046 (t!4948 lt!28676)))))))

(declare-fun b!67348 () Bool)

(assert (=> b!67348 (= e!44138 (getValueByKey!130 (t!4948 (t!4948 lt!28676)) (_1!1057 lt!28624)))))

(declare-fun b!67349 () Bool)

(assert (=> b!67349 (= e!44138 None!134)))

(assert (= (and d!14113 c!9387) b!67346))

(assert (= (and d!14113 (not c!9387)) b!67347))

(assert (= (and b!67347 c!9388) b!67348))

(assert (= (and b!67347 (not c!9388)) b!67349))

(declare-fun m!62533 () Bool)

(assert (=> b!67348 m!62533))

(assert (=> b!67153 d!14113))

(declare-fun b!67350 () Bool)

(declare-fun res!36371 () Bool)

(declare-fun e!44139 () Bool)

(assert (=> b!67350 (=> (not res!36371) (not e!44139))))

(assert (=> b!67350 (= res!36371 (and (= (size!2071 (_values!2130 (_2!1058 lt!28812))) (bvadd (mask!6082 (_2!1058 lt!28812)) #b00000000000000000000000000000001)) (= (size!2070 (_keys!3787 (_2!1058 lt!28812))) (size!2071 (_values!2130 (_2!1058 lt!28812)))) (bvsge (_size!385 (_2!1058 lt!28812)) #b00000000000000000000000000000000) (bvsle (_size!385 (_2!1058 lt!28812)) (bvadd (mask!6082 (_2!1058 lt!28812)) #b00000000000000000000000000000001))))))

(declare-fun b!67353 () Bool)

(assert (=> b!67353 (= e!44139 (and (bvsge (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000000) (bvsle (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000011) (bvsge (_vacant!385 (_2!1058 lt!28812)) #b00000000000000000000000000000000)))))

(declare-fun d!14115 () Bool)

(declare-fun res!36368 () Bool)

(assert (=> d!14115 (=> (not res!36368) (not e!44139))))

(assert (=> d!14115 (= res!36368 (validMask!0 (mask!6082 (_2!1058 lt!28812))))))

(assert (=> d!14115 (= (simpleValid!48 (_2!1058 lt!28812)) e!44139)))

(declare-fun b!67351 () Bool)

(declare-fun res!36369 () Bool)

(assert (=> b!67351 (=> (not res!36369) (not e!44139))))

(assert (=> b!67351 (= res!36369 (bvsge (size!2074 (_2!1058 lt!28812)) (_size!385 (_2!1058 lt!28812))))))

(declare-fun b!67352 () Bool)

(declare-fun res!36370 () Bool)

(assert (=> b!67352 (=> (not res!36370) (not e!44139))))

(assert (=> b!67352 (= res!36370 (= (size!2074 (_2!1058 lt!28812)) (bvadd (_size!385 (_2!1058 lt!28812)) (bvsdiv (bvadd (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!14115 res!36368) b!67350))

(assert (= (and b!67350 res!36371) b!67351))

(assert (= (and b!67351 res!36369) b!67352))

(assert (= (and b!67352 res!36370) b!67353))

(declare-fun m!62535 () Bool)

(assert (=> d!14115 m!62535))

(declare-fun m!62537 () Bool)

(assert (=> b!67351 m!62537))

(assert (=> b!67352 m!62537))

(assert (=> d!13877 d!14115))

(declare-fun d!14117 () Bool)

(assert (=> d!14117 (= (apply!72 lt!28913 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1120 (getValueByKey!130 (toList!717 lt!28913) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2903 () Bool)

(assert (= bs!2903 d!14117))

(declare-fun m!62539 () Bool)

(assert (=> bs!2903 m!62539))

(assert (=> bs!2903 m!62539))

(declare-fun m!62541 () Bool)

(assert (=> bs!2903 m!62541))

(assert (=> b!66787 d!14117))

(declare-fun d!14119 () Bool)

(assert (=> d!14119 (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!29331 () Unit!1838)

(assert (=> d!14119 (= lt!29331 (choose!377 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!44140 () Bool)

(assert (=> d!14119 e!44140))

(declare-fun res!36372 () Bool)

(assert (=> d!14119 (=> (not res!36372) (not e!44140))))

(assert (=> d!14119 (= res!36372 (isStrictlySorted!289 (toList!717 lt!28877)))))

(assert (=> d!14119 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29331)))

(declare-fun b!67354 () Bool)

(assert (=> b!67354 (= e!44140 (containsKey!134 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14119 res!36372) b!67354))

(assert (=> d!14119 m!61229))

(assert (=> d!14119 m!61607))

(assert (=> d!14119 m!61607))

(assert (=> d!14119 m!62033))

(assert (=> d!14119 m!61229))

(declare-fun m!62543 () Bool)

(assert (=> d!14119 m!62543))

(assert (=> d!14119 m!62343))

(assert (=> b!67354 m!61229))

(assert (=> b!67354 m!62029))

(assert (=> b!67107 d!14119))

(declare-fun d!14121 () Bool)

(assert (=> d!14121 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2904 () Bool)

(assert (= bs!2904 d!14121))

(assert (=> bs!2904 m!61607))

(declare-fun m!62545 () Bool)

(assert (=> bs!2904 m!62545))

(assert (=> b!67107 d!14121))

(declare-fun d!14123 () Bool)

(declare-fun c!9389 () Bool)

(assert (=> d!14123 (= c!9389 (and ((_ is Cons!1462) (toList!717 lt!28877)) (= (_1!1057 (h!2046 (toList!717 lt!28877))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!44141 () Option!136)

(assert (=> d!14123 (= (getValueByKey!130 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44141)))

(declare-fun b!67356 () Bool)

(declare-fun e!44142 () Option!136)

(assert (=> b!67356 (= e!44141 e!44142)))

(declare-fun c!9390 () Bool)

(assert (=> b!67356 (= c!9390 (and ((_ is Cons!1462) (toList!717 lt!28877)) (not (= (_1!1057 (h!2046 (toList!717 lt!28877))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!67355 () Bool)

(assert (=> b!67355 (= e!44141 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28877)))))))

(declare-fun b!67357 () Bool)

(assert (=> b!67357 (= e!44142 (getValueByKey!130 (t!4948 (toList!717 lt!28877)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67358 () Bool)

(assert (=> b!67358 (= e!44142 None!134)))

(assert (= (and d!14123 c!9389) b!67355))

(assert (= (and d!14123 (not c!9389)) b!67356))

(assert (= (and b!67356 c!9390) b!67357))

(assert (= (and b!67356 (not c!9390)) b!67358))

(assert (=> b!67357 m!61229))

(declare-fun m!62547 () Bool)

(assert (=> b!67357 m!62547))

(assert (=> b!67107 d!14123))

(declare-fun b!67359 () Bool)

(declare-fun e!44145 () List!1466)

(declare-fun call!5655 () List!1466)

(assert (=> b!67359 (= e!44145 call!5655)))

(declare-fun bm!5652 () Bool)

(declare-fun call!5656 () List!1466)

(declare-fun call!5657 () List!1466)

(assert (=> bm!5652 (= call!5656 call!5657)))

(declare-fun b!67360 () Bool)

(declare-fun e!44147 () Bool)

(declare-fun lt!29332 () List!1466)

(assert (=> b!67360 (= e!44147 (contains!712 lt!29332 (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun b!67361 () Bool)

(assert (=> b!67361 (= e!44145 call!5655)))

(declare-fun b!67362 () Bool)

(declare-fun e!44143 () List!1466)

(assert (=> b!67362 (= e!44143 (insertStrictlySorted!50 (t!4948 (t!4948 (toList!717 (+!89 lt!28620 lt!28624)))) (_1!1057 lt!28617) (_2!1057 lt!28617)))))

(declare-fun b!67363 () Bool)

(declare-fun e!44146 () List!1466)

(assert (=> b!67363 (= e!44146 call!5657)))

(declare-fun c!9393 () Bool)

(declare-fun c!9391 () Bool)

(declare-fun b!67364 () Bool)

(assert (=> b!67364 (= e!44143 (ite c!9391 (t!4948 (t!4948 (toList!717 (+!89 lt!28620 lt!28624)))) (ite c!9393 (Cons!1462 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28624)))) (t!4948 (t!4948 (toList!717 (+!89 lt!28620 lt!28624))))) Nil!1463)))))

(declare-fun d!14125 () Bool)

(assert (=> d!14125 e!44147))

(declare-fun res!36374 () Bool)

(assert (=> d!14125 (=> (not res!36374) (not e!44147))))

(assert (=> d!14125 (= res!36374 (isStrictlySorted!289 lt!29332))))

(assert (=> d!14125 (= lt!29332 e!44146)))

(declare-fun c!9394 () Bool)

(assert (=> d!14125 (= c!9394 (and ((_ is Cons!1462) (t!4948 (toList!717 (+!89 lt!28620 lt!28624)))) (bvslt (_1!1057 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28624))))) (_1!1057 lt!28617))))))

(assert (=> d!14125 (isStrictlySorted!289 (t!4948 (toList!717 (+!89 lt!28620 lt!28624))))))

(assert (=> d!14125 (= (insertStrictlySorted!50 (t!4948 (toList!717 (+!89 lt!28620 lt!28624))) (_1!1057 lt!28617) (_2!1057 lt!28617)) lt!29332)))

(declare-fun bm!5653 () Bool)

(assert (=> bm!5653 (= call!5655 call!5656)))

(declare-fun b!67365 () Bool)

(declare-fun res!36373 () Bool)

(assert (=> b!67365 (=> (not res!36373) (not e!44147))))

(assert (=> b!67365 (= res!36373 (containsKey!134 lt!29332 (_1!1057 lt!28617)))))

(declare-fun b!67366 () Bool)

(declare-fun e!44144 () List!1466)

(assert (=> b!67366 (= e!44144 call!5656)))

(declare-fun b!67367 () Bool)

(assert (=> b!67367 (= c!9393 (and ((_ is Cons!1462) (t!4948 (toList!717 (+!89 lt!28620 lt!28624)))) (bvsgt (_1!1057 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28624))))) (_1!1057 lt!28617))))))

(assert (=> b!67367 (= e!44144 e!44145)))

(declare-fun b!67368 () Bool)

(assert (=> b!67368 (= e!44146 e!44144)))

(assert (=> b!67368 (= c!9391 (and ((_ is Cons!1462) (t!4948 (toList!717 (+!89 lt!28620 lt!28624)))) (= (_1!1057 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28624))))) (_1!1057 lt!28617))))))

(declare-fun bm!5654 () Bool)

(assert (=> bm!5654 (= call!5657 ($colon$colon!63 e!44143 (ite c!9394 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28624)))) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617)))))))

(declare-fun c!9392 () Bool)

(assert (=> bm!5654 (= c!9392 c!9394)))

(assert (= (and d!14125 c!9394) b!67363))

(assert (= (and d!14125 (not c!9394)) b!67368))

(assert (= (and b!67368 c!9391) b!67366))

(assert (= (and b!67368 (not c!9391)) b!67367))

(assert (= (and b!67367 c!9393) b!67361))

(assert (= (and b!67367 (not c!9393)) b!67359))

(assert (= (or b!67361 b!67359) bm!5653))

(assert (= (or b!67366 bm!5653) bm!5652))

(assert (= (or b!67363 bm!5652) bm!5654))

(assert (= (and bm!5654 c!9392) b!67362))

(assert (= (and bm!5654 (not c!9392)) b!67364))

(assert (= (and d!14125 res!36374) b!67365))

(assert (= (and b!67365 res!36373) b!67360))

(declare-fun m!62549 () Bool)

(assert (=> b!67360 m!62549))

(declare-fun m!62551 () Bool)

(assert (=> d!14125 m!62551))

(declare-fun m!62553 () Bool)

(assert (=> d!14125 m!62553))

(declare-fun m!62555 () Bool)

(assert (=> bm!5654 m!62555))

(declare-fun m!62557 () Bool)

(assert (=> b!67365 m!62557))

(declare-fun m!62559 () Bool)

(assert (=> b!67362 m!62559))

(assert (=> b!66874 d!14125))

(declare-fun d!14127 () Bool)

(declare-fun lt!29333 () Bool)

(assert (=> d!14127 (= lt!29333 (select (content!72 (t!4948 (toList!717 lt!28675))) lt!28624))))

(declare-fun e!44148 () Bool)

(assert (=> d!14127 (= lt!29333 e!44148)))

(declare-fun res!36375 () Bool)

(assert (=> d!14127 (=> (not res!36375) (not e!44148))))

(assert (=> d!14127 (= res!36375 ((_ is Cons!1462) (t!4948 (toList!717 lt!28675))))))

(assert (=> d!14127 (= (contains!712 (t!4948 (toList!717 lt!28675)) lt!28624) lt!29333)))

(declare-fun b!67369 () Bool)

(declare-fun e!44149 () Bool)

(assert (=> b!67369 (= e!44148 e!44149)))

(declare-fun res!36376 () Bool)

(assert (=> b!67369 (=> res!36376 e!44149)))

(assert (=> b!67369 (= res!36376 (= (h!2046 (t!4948 (toList!717 lt!28675))) lt!28624))))

(declare-fun b!67370 () Bool)

(assert (=> b!67370 (= e!44149 (contains!712 (t!4948 (t!4948 (toList!717 lt!28675))) lt!28624))))

(assert (= (and d!14127 res!36375) b!67369))

(assert (= (and b!67369 (not res!36376)) b!67370))

(declare-fun m!62561 () Bool)

(assert (=> d!14127 m!62561))

(declare-fun m!62563 () Bool)

(assert (=> d!14127 m!62563))

(declare-fun m!62565 () Bool)

(assert (=> b!67370 m!62565))

(assert (=> b!67065 d!14127))

(declare-fun d!14129 () Bool)

(declare-fun c!9395 () Bool)

(assert (=> d!14129 (= c!9395 (and ((_ is Cons!1462) (toList!717 lt!28968)) (= (_1!1057 (h!2046 (toList!717 lt!28968))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44150 () Option!136)

(assert (=> d!14129 (= (getValueByKey!130 (toList!717 lt!28968) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44150)))

(declare-fun b!67372 () Bool)

(declare-fun e!44151 () Option!136)

(assert (=> b!67372 (= e!44150 e!44151)))

(declare-fun c!9396 () Bool)

(assert (=> b!67372 (= c!9396 (and ((_ is Cons!1462) (toList!717 lt!28968)) (not (= (_1!1057 (h!2046 (toList!717 lt!28968))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67371 () Bool)

(assert (=> b!67371 (= e!44150 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28968)))))))

(declare-fun b!67373 () Bool)

(assert (=> b!67373 (= e!44151 (getValueByKey!130 (t!4948 (toList!717 lt!28968)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67374 () Bool)

(assert (=> b!67374 (= e!44151 None!134)))

(assert (= (and d!14129 c!9395) b!67371))

(assert (= (and d!14129 (not c!9395)) b!67372))

(assert (= (and b!67372 c!9396) b!67373))

(assert (= (and b!67372 (not c!9396)) b!67374))

(declare-fun m!62567 () Bool)

(assert (=> b!67373 m!62567))

(assert (=> b!66910 d!14129))

(declare-fun d!14131 () Bool)

(declare-fun res!36377 () Bool)

(declare-fun e!44152 () Bool)

(assert (=> d!14131 (=> res!36377 e!44152)))

(assert (=> d!14131 (= res!36377 (and ((_ is Cons!1462) (toList!717 lt!28877)) (= (_1!1057 (h!2046 (toList!717 lt!28877))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14131 (= (containsKey!134 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44152)))

(declare-fun b!67375 () Bool)

(declare-fun e!44153 () Bool)

(assert (=> b!67375 (= e!44152 e!44153)))

(declare-fun res!36378 () Bool)

(assert (=> b!67375 (=> (not res!36378) (not e!44153))))

(assert (=> b!67375 (= res!36378 (and (or (not ((_ is Cons!1462) (toList!717 lt!28877))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28877))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1462) (toList!717 lt!28877)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28877))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!67376 () Bool)

(assert (=> b!67376 (= e!44153 (containsKey!134 (t!4948 (toList!717 lt!28877)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14131 (not res!36377)) b!67375))

(assert (= (and b!67375 res!36378) b!67376))

(assert (=> b!67376 m!61229))

(declare-fun m!62569 () Bool)

(assert (=> b!67376 m!62569))

(assert (=> d!13961 d!14131))

(declare-fun d!14133 () Bool)

(declare-fun res!36379 () Bool)

(declare-fun e!44154 () Bool)

(assert (=> d!14133 (=> res!36379 e!44154)))

(assert (=> d!14133 (= res!36379 (and ((_ is Cons!1462) (toList!717 lt!28698)) (= (_1!1057 (h!2046 (toList!717 lt!28698))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14133 (= (containsKey!134 (toList!717 lt!28698) #b1000000000000000000000000000000000000000000000000000000000000000) e!44154)))

(declare-fun b!67377 () Bool)

(declare-fun e!44155 () Bool)

(assert (=> b!67377 (= e!44154 e!44155)))

(declare-fun res!36380 () Bool)

(assert (=> b!67377 (=> (not res!36380) (not e!44155))))

(assert (=> b!67377 (= res!36380 (and (or (not ((_ is Cons!1462) (toList!717 lt!28698))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28698))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1462) (toList!717 lt!28698)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28698))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67378 () Bool)

(assert (=> b!67378 (= e!44155 (containsKey!134 (t!4948 (toList!717 lt!28698)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14133 (not res!36379)) b!67377))

(assert (= (and b!67377 res!36380) b!67378))

(declare-fun m!62571 () Bool)

(assert (=> b!67378 m!62571))

(assert (=> d!13981 d!14133))

(declare-fun d!14135 () Bool)

(assert (=> d!14135 (isDefined!83 (getValueByKey!130 (toList!717 lt!28675) (_1!1057 lt!28624)))))

(declare-fun lt!29334 () Unit!1838)

(assert (=> d!14135 (= lt!29334 (choose!377 (toList!717 lt!28675) (_1!1057 lt!28624)))))

(declare-fun e!44156 () Bool)

(assert (=> d!14135 e!44156))

(declare-fun res!36381 () Bool)

(assert (=> d!14135 (=> (not res!36381) (not e!44156))))

(assert (=> d!14135 (= res!36381 (isStrictlySorted!289 (toList!717 lt!28675)))))

(assert (=> d!14135 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28675) (_1!1057 lt!28624)) lt!29334)))

(declare-fun b!67379 () Bool)

(assert (=> b!67379 (= e!44156 (containsKey!134 (toList!717 lt!28675) (_1!1057 lt!28624)))))

(assert (= (and d!14135 res!36381) b!67379))

(assert (=> d!14135 m!61211))

(assert (=> d!14135 m!61211))

(assert (=> d!14135 m!62109))

(declare-fun m!62573 () Bool)

(assert (=> d!14135 m!62573))

(declare-fun m!62575 () Bool)

(assert (=> d!14135 m!62575))

(assert (=> b!67379 m!62105))

(assert (=> b!67148 d!14135))

(declare-fun d!14137 () Bool)

(assert (=> d!14137 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28675) (_1!1057 lt!28624))) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28675) (_1!1057 lt!28624)))))))

(declare-fun bs!2905 () Bool)

(assert (= bs!2905 d!14137))

(assert (=> bs!2905 m!61211))

(declare-fun m!62577 () Bool)

(assert (=> bs!2905 m!62577))

(assert (=> b!67148 d!14137))

(assert (=> b!67148 d!13983))

(assert (=> b!66797 d!14069))

(declare-fun lt!29335 () Bool)

(declare-fun d!14139 () Bool)

(assert (=> d!14139 (= lt!29335 (select (content!72 (toList!717 lt!29022)) (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44157 () Bool)

(assert (=> d!14139 (= lt!29335 e!44157)))

(declare-fun res!36382 () Bool)

(assert (=> d!14139 (=> (not res!36382) (not e!44157))))

(assert (=> d!14139 (= res!36382 ((_ is Cons!1462) (toList!717 lt!29022)))))

(assert (=> d!14139 (= (contains!712 (toList!717 lt!29022) (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29335)))

(declare-fun b!67380 () Bool)

(declare-fun e!44158 () Bool)

(assert (=> b!67380 (= e!44157 e!44158)))

(declare-fun res!36383 () Bool)

(assert (=> b!67380 (=> res!36383 e!44158)))

(assert (=> b!67380 (= res!36383 (= (h!2046 (toList!717 lt!29022)) (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67381 () Bool)

(assert (=> b!67381 (= e!44158 (contains!712 (t!4948 (toList!717 lt!29022)) (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14139 res!36382) b!67380))

(assert (= (and b!67380 (not res!36383)) b!67381))

(declare-fun m!62579 () Bool)

(assert (=> d!14139 m!62579))

(declare-fun m!62581 () Bool)

(assert (=> d!14139 m!62581))

(declare-fun m!62583 () Bool)

(assert (=> b!67381 m!62583))

(assert (=> b!66998 d!14139))

(declare-fun b!67382 () Bool)

(declare-fun e!44159 () Bool)

(declare-fun e!44161 () Bool)

(assert (=> b!67382 (= e!44159 e!44161)))

(declare-fun lt!29337 () (_ BitVec 64))

(assert (=> b!67382 (= lt!29337 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!29338 () Unit!1838)

(assert (=> b!67382 (= lt!29338 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) lt!29337 #b00000000000000000000000000000000))))

(assert (=> b!67382 (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) lt!29337 #b00000000000000000000000000000000)))

(declare-fun lt!29336 () Unit!1838)

(assert (=> b!67382 (= lt!29336 lt!29338)))

(declare-fun res!36384 () Bool)

(assert (=> b!67382 (= res!36384 (= (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000) (_keys!3787 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992)))) (Found!233 #b00000000000000000000000000000000)))))

(assert (=> b!67382 (=> (not res!36384) (not e!44161))))

(declare-fun bm!5655 () Bool)

(declare-fun call!5658 () Bool)

(assert (=> bm!5655 (= call!5658 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3787 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun d!14141 () Bool)

(declare-fun res!36385 () Bool)

(declare-fun e!44160 () Bool)

(assert (=> d!14141 (=> res!36385 e!44160)))

(assert (=> d!14141 (= res!36385 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14141 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992)))) e!44160)))

(declare-fun b!67383 () Bool)

(assert (=> b!67383 (= e!44161 call!5658)))

(declare-fun b!67384 () Bool)

(assert (=> b!67384 (= e!44159 call!5658)))

(declare-fun b!67385 () Bool)

(assert (=> b!67385 (= e!44160 e!44159)))

(declare-fun c!9397 () Bool)

(assert (=> b!67385 (= c!9397 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!14141 (not res!36385)) b!67385))

(assert (= (and b!67385 c!9397) b!67382))

(assert (= (and b!67385 (not c!9397)) b!67384))

(assert (= (and b!67382 res!36384) b!67383))

(assert (= (or b!67383 b!67384) bm!5655))

(declare-fun m!62585 () Bool)

(assert (=> b!67382 m!62585))

(declare-fun m!62587 () Bool)

(assert (=> b!67382 m!62587))

(declare-fun m!62589 () Bool)

(assert (=> b!67382 m!62589))

(assert (=> b!67382 m!62585))

(declare-fun m!62591 () Bool)

(assert (=> b!67382 m!62591))

(declare-fun m!62593 () Bool)

(assert (=> bm!5655 m!62593))

(assert (=> b!67385 m!62585))

(assert (=> b!67385 m!62585))

(declare-fun m!62595 () Bool)

(assert (=> b!67385 m!62595))

(assert (=> b!66954 d!14141))

(declare-fun d!14143 () Bool)

(assert (=> d!14143 (= (get!1120 (getValueByKey!130 (toList!717 lt!28871) lt!28860)) (v!2482 (getValueByKey!130 (toList!717 lt!28871) lt!28860)))))

(assert (=> d!13909 d!14143))

(declare-fun d!14145 () Bool)

(declare-fun c!9398 () Bool)

(assert (=> d!14145 (= c!9398 (and ((_ is Cons!1462) (toList!717 lt!28871)) (= (_1!1057 (h!2046 (toList!717 lt!28871))) lt!28860)))))

(declare-fun e!44162 () Option!136)

(assert (=> d!14145 (= (getValueByKey!130 (toList!717 lt!28871) lt!28860) e!44162)))

(declare-fun b!67387 () Bool)

(declare-fun e!44163 () Option!136)

(assert (=> b!67387 (= e!44162 e!44163)))

(declare-fun c!9399 () Bool)

(assert (=> b!67387 (= c!9399 (and ((_ is Cons!1462) (toList!717 lt!28871)) (not (= (_1!1057 (h!2046 (toList!717 lt!28871))) lt!28860))))))

(declare-fun b!67386 () Bool)

(assert (=> b!67386 (= e!44162 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28871)))))))

(declare-fun b!67388 () Bool)

(assert (=> b!67388 (= e!44163 (getValueByKey!130 (t!4948 (toList!717 lt!28871)) lt!28860))))

(declare-fun b!67389 () Bool)

(assert (=> b!67389 (= e!44163 None!134)))

(assert (= (and d!14145 c!9398) b!67386))

(assert (= (and d!14145 (not c!9398)) b!67387))

(assert (= (and b!67387 c!9399) b!67388))

(assert (= (and b!67387 (not c!9399)) b!67389))

(declare-fun m!62597 () Bool)

(assert (=> b!67388 m!62597))

(assert (=> d!13909 d!14145))

(declare-fun d!14147 () Bool)

(declare-fun res!36386 () Bool)

(declare-fun e!44164 () Bool)

(assert (=> d!14147 (=> res!36386 e!44164)))

(assert (=> d!14147 (= res!36386 (and ((_ is Cons!1462) (toList!717 lt!28877)) (= (_1!1057 (h!2046 (toList!717 lt!28877))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14147 (= (containsKey!134 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000) e!44164)))

(declare-fun b!67390 () Bool)

(declare-fun e!44165 () Bool)

(assert (=> b!67390 (= e!44164 e!44165)))

(declare-fun res!36387 () Bool)

(assert (=> b!67390 (=> (not res!36387) (not e!44165))))

(assert (=> b!67390 (= res!36387 (and (or (not ((_ is Cons!1462) (toList!717 lt!28877))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28877))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1462) (toList!717 lt!28877)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28877))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67391 () Bool)

(assert (=> b!67391 (= e!44165 (containsKey!134 (t!4948 (toList!717 lt!28877)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14147 (not res!36386)) b!67390))

(assert (= (and b!67390 res!36387) b!67391))

(declare-fun m!62599 () Bool)

(assert (=> b!67391 m!62599))

(assert (=> d!13823 d!14147))

(declare-fun d!14149 () Bool)

(declare-fun e!44167 () Bool)

(assert (=> d!14149 e!44167))

(declare-fun res!36388 () Bool)

(assert (=> d!14149 (=> res!36388 e!44167)))

(declare-fun lt!29341 () Bool)

(assert (=> d!14149 (= res!36388 (not lt!29341))))

(declare-fun lt!29339 () Bool)

(assert (=> d!14149 (= lt!29341 lt!29339)))

(declare-fun lt!29342 () Unit!1838)

(declare-fun e!44166 () Unit!1838)

(assert (=> d!14149 (= lt!29342 e!44166)))

(declare-fun c!9400 () Bool)

(assert (=> d!14149 (= c!9400 lt!29339)))

(assert (=> d!14149 (= lt!29339 (containsKey!134 (toList!717 (map!1136 (_2!1058 lt!29122))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14149 (= (contains!710 (map!1136 (_2!1058 lt!29122)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29341)))

(declare-fun b!67392 () Bool)

(declare-fun lt!29340 () Unit!1838)

(assert (=> b!67392 (= e!44166 lt!29340)))

(assert (=> b!67392 (= lt!29340 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (map!1136 (_2!1058 lt!29122))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!67392 (isDefined!83 (getValueByKey!130 (toList!717 (map!1136 (_2!1058 lt!29122))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67393 () Bool)

(declare-fun Unit!1875 () Unit!1838)

(assert (=> b!67393 (= e!44166 Unit!1875)))

(declare-fun b!67394 () Bool)

(assert (=> b!67394 (= e!44167 (isDefined!83 (getValueByKey!130 (toList!717 (map!1136 (_2!1058 lt!29122))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (= (and d!14149 c!9400) b!67392))

(assert (= (and d!14149 (not c!9400)) b!67393))

(assert (= (and d!14149 (not res!36388)) b!67394))

(assert (=> d!14149 m!61065))

(declare-fun m!62601 () Bool)

(assert (=> d!14149 m!62601))

(assert (=> b!67392 m!61065))

(declare-fun m!62603 () Bool)

(assert (=> b!67392 m!62603))

(assert (=> b!67392 m!61065))

(declare-fun m!62605 () Bool)

(assert (=> b!67392 m!62605))

(assert (=> b!67392 m!62605))

(declare-fun m!62607 () Bool)

(assert (=> b!67392 m!62607))

(assert (=> b!67394 m!61065))

(assert (=> b!67394 m!62605))

(assert (=> b!67394 m!62605))

(assert (=> b!67394 m!62607))

(assert (=> b!67063 d!14149))

(declare-fun d!14151 () Bool)

(assert (=> d!14151 (= (map!1136 (_2!1058 lt!29122)) (getCurrentListMap!415 (_keys!3787 (_2!1058 lt!29122)) (_values!2130 (_2!1058 lt!29122)) (mask!6082 (_2!1058 lt!29122)) (extraKeys!2018 (_2!1058 lt!29122)) (zeroValue!2055 (_2!1058 lt!29122)) (minValue!2055 (_2!1058 lt!29122)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1058 lt!29122))))))

(declare-fun bs!2906 () Bool)

(assert (= bs!2906 d!14151))

(declare-fun m!62609 () Bool)

(assert (=> bs!2906 m!62609))

(assert (=> b!67063 d!14151))

(declare-fun d!14153 () Bool)

(declare-fun res!36389 () Bool)

(declare-fun e!44168 () Bool)

(assert (=> d!14153 (=> res!36389 e!44168)))

(assert (=> d!14153 (= res!36389 (and ((_ is Cons!1462) (toList!717 lt!28671)) (= (_1!1057 (h!2046 (toList!717 lt!28671))) (_1!1057 lt!28617))))))

(assert (=> d!14153 (= (containsKey!134 (toList!717 lt!28671) (_1!1057 lt!28617)) e!44168)))

(declare-fun b!67395 () Bool)

(declare-fun e!44169 () Bool)

(assert (=> b!67395 (= e!44168 e!44169)))

(declare-fun res!36390 () Bool)

(assert (=> b!67395 (=> (not res!36390) (not e!44169))))

(assert (=> b!67395 (= res!36390 (and (or (not ((_ is Cons!1462) (toList!717 lt!28671))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28671))) (_1!1057 lt!28617))) ((_ is Cons!1462) (toList!717 lt!28671)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28671))) (_1!1057 lt!28617))))))

(declare-fun b!67396 () Bool)

(assert (=> b!67396 (= e!44169 (containsKey!134 (t!4948 (toList!717 lt!28671)) (_1!1057 lt!28617)))))

(assert (= (and d!14153 (not res!36389)) b!67395))

(assert (= (and b!67395 res!36390) b!67396))

(declare-fun m!62611 () Bool)

(assert (=> b!67396 m!62611))

(assert (=> d!13841 d!14153))

(declare-fun d!14155 () Bool)

(assert (=> d!14155 (= (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66896 d!14155))

(declare-fun d!14157 () Bool)

(declare-fun res!36395 () Bool)

(declare-fun e!44174 () Bool)

(assert (=> d!14157 (=> res!36395 e!44174)))

(assert (=> d!14157 (= res!36395 (or ((_ is Nil!1463) lt!28937) ((_ is Nil!1463) (t!4948 lt!28937))))))

(assert (=> d!14157 (= (isStrictlySorted!289 lt!28937) e!44174)))

(declare-fun b!67401 () Bool)

(declare-fun e!44175 () Bool)

(assert (=> b!67401 (= e!44174 e!44175)))

(declare-fun res!36396 () Bool)

(assert (=> b!67401 (=> (not res!36396) (not e!44175))))

(assert (=> b!67401 (= res!36396 (bvslt (_1!1057 (h!2046 lt!28937)) (_1!1057 (h!2046 (t!4948 lt!28937)))))))

(declare-fun b!67402 () Bool)

(assert (=> b!67402 (= e!44175 (isStrictlySorted!289 (t!4948 lt!28937)))))

(assert (= (and d!14157 (not res!36395)) b!67401))

(assert (= (and b!67401 res!36396) b!67402))

(declare-fun m!62613 () Bool)

(assert (=> b!67402 m!62613))

(assert (=> d!13839 d!14157))

(declare-fun d!14159 () Bool)

(declare-fun res!36397 () Bool)

(declare-fun e!44176 () Bool)

(assert (=> d!14159 (=> res!36397 e!44176)))

(assert (=> d!14159 (= res!36397 (or ((_ is Nil!1463) (toList!717 (+!89 lt!28620 lt!28617))) ((_ is Nil!1463) (t!4948 (toList!717 (+!89 lt!28620 lt!28617))))))))

(assert (=> d!14159 (= (isStrictlySorted!289 (toList!717 (+!89 lt!28620 lt!28617))) e!44176)))

(declare-fun b!67403 () Bool)

(declare-fun e!44177 () Bool)

(assert (=> b!67403 (= e!44176 e!44177)))

(declare-fun res!36398 () Bool)

(assert (=> b!67403 (=> (not res!36398) (not e!44177))))

(assert (=> b!67403 (= res!36398 (bvslt (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 lt!28617)))) (_1!1057 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28617)))))))))

(declare-fun b!67404 () Bool)

(assert (=> b!67404 (= e!44177 (isStrictlySorted!289 (t!4948 (toList!717 (+!89 lt!28620 lt!28617)))))))

(assert (= (and d!14159 (not res!36397)) b!67403))

(assert (= (and b!67403 res!36398) b!67404))

(declare-fun m!62615 () Bool)

(assert (=> b!67404 m!62615))

(assert (=> d!13839 d!14159))

(declare-fun d!14161 () Bool)

(declare-fun e!44178 () Bool)

(assert (=> d!14161 e!44178))

(declare-fun res!36400 () Bool)

(assert (=> d!14161 (=> (not res!36400) (not e!44178))))

(declare-fun lt!29343 () ListLongMap!1403)

(assert (=> d!14161 (= res!36400 (contains!710 lt!29343 (_1!1057 (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))))

(declare-fun lt!29344 () List!1466)

(assert (=> d!14161 (= lt!29343 (ListLongMap!1404 lt!29344))))

(declare-fun lt!29345 () Unit!1838)

(declare-fun lt!29346 () Unit!1838)

(assert (=> d!14161 (= lt!29345 lt!29346)))

(assert (=> d!14161 (= (getValueByKey!130 lt!29344 (_1!1057 (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))) (Some!135 (_2!1057 (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))))

(assert (=> d!14161 (= lt!29346 (lemmaContainsTupThenGetReturnValue!47 lt!29344 (_1!1057 (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) (_2!1057 (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))))

(assert (=> d!14161 (= lt!29344 (insertStrictlySorted!50 (toList!717 (ite c!9341 call!5640 (ite c!9340 call!5635 call!5637))) (_1!1057 (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) (_2!1057 (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))))

(assert (=> d!14161 (= (+!89 (ite c!9341 call!5640 (ite c!9340 call!5635 call!5637)) (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) lt!29343)))

(declare-fun b!67405 () Bool)

(declare-fun res!36399 () Bool)

(assert (=> b!67405 (=> (not res!36399) (not e!44178))))

(assert (=> b!67405 (= res!36399 (= (getValueByKey!130 (toList!717 lt!29343) (_1!1057 (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))) (Some!135 (_2!1057 (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))))

(declare-fun b!67406 () Bool)

(assert (=> b!67406 (= e!44178 (contains!712 (toList!717 lt!29343) (ite (or c!9341 c!9340) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(assert (= (and d!14161 res!36400) b!67405))

(assert (= (and b!67405 res!36399) b!67406))

(declare-fun m!62617 () Bool)

(assert (=> d!14161 m!62617))

(declare-fun m!62619 () Bool)

(assert (=> d!14161 m!62619))

(declare-fun m!62621 () Bool)

(assert (=> d!14161 m!62621))

(declare-fun m!62623 () Bool)

(assert (=> d!14161 m!62623))

(declare-fun m!62625 () Bool)

(assert (=> b!67405 m!62625))

(declare-fun m!62627 () Bool)

(assert (=> b!67406 m!62627))

(assert (=> bm!5635 d!14161))

(declare-fun d!14163 () Bool)

(declare-fun c!9401 () Bool)

(assert (=> d!14163 (= c!9401 (and ((_ is Cons!1462) (toList!717 lt!29169)) (= (_1!1057 (h!2046 (toList!717 lt!29169))) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun e!44179 () Option!136)

(assert (=> d!14163 (= (getValueByKey!130 (toList!717 lt!29169) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) e!44179)))

(declare-fun b!67408 () Bool)

(declare-fun e!44180 () Option!136)

(assert (=> b!67408 (= e!44179 e!44180)))

(declare-fun c!9402 () Bool)

(assert (=> b!67408 (= c!9402 (and ((_ is Cons!1462) (toList!717 lt!29169)) (not (= (_1!1057 (h!2046 (toList!717 lt!29169))) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun b!67407 () Bool)

(assert (=> b!67407 (= e!44179 (Some!135 (_2!1057 (h!2046 (toList!717 lt!29169)))))))

(declare-fun b!67409 () Bool)

(assert (=> b!67409 (= e!44180 (getValueByKey!130 (t!4948 (toList!717 lt!29169)) (_1!1057 (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67410 () Bool)

(assert (=> b!67410 (= e!44180 None!134)))

(assert (= (and d!14163 c!9401) b!67407))

(assert (= (and d!14163 (not c!9401)) b!67408))

(assert (= (and b!67408 c!9402) b!67409))

(assert (= (and b!67408 (not c!9402)) b!67410))

(declare-fun m!62629 () Bool)

(assert (=> b!67409 m!62629))

(assert (=> b!67112 d!14163))

(declare-fun d!14165 () Bool)

(declare-fun res!36401 () Bool)

(declare-fun e!44181 () Bool)

(assert (=> d!14165 (=> res!36401 e!44181)))

(assert (=> d!14165 (= res!36401 (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14165 (= (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!44181)))

(declare-fun b!67411 () Bool)

(declare-fun e!44182 () Bool)

(assert (=> b!67411 (= e!44181 e!44182)))

(declare-fun res!36402 () Bool)

(assert (=> b!67411 (=> (not res!36402) (not e!44182))))

(assert (=> b!67411 (= res!36402 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67412 () Bool)

(assert (=> b!67412 (= e!44182 (arrayContainsKey!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14165 (not res!36401)) b!67411))

(assert (= (and b!67411 res!36402) b!67412))

(declare-fun m!62631 () Bool)

(assert (=> d!14165 m!62631))

(assert (=> b!67412 m!61065))

(declare-fun m!62633 () Bool)

(assert (=> b!67412 m!62633))

(assert (=> b!66957 d!14165))

(assert (=> b!66804 d!14069))

(declare-fun d!14167 () Bool)

(declare-fun res!36403 () Bool)

(declare-fun e!44183 () Bool)

(assert (=> d!14167 (=> res!36403 e!44183)))

(assert (=> d!14167 (= res!36403 (and ((_ is Cons!1462) (toList!717 lt!28675)) (= (_1!1057 (h!2046 (toList!717 lt!28675))) (_1!1057 lt!28624))))))

(assert (=> d!14167 (= (containsKey!134 (toList!717 lt!28675) (_1!1057 lt!28624)) e!44183)))

(declare-fun b!67413 () Bool)

(declare-fun e!44184 () Bool)

(assert (=> b!67413 (= e!44183 e!44184)))

(declare-fun res!36404 () Bool)

(assert (=> b!67413 (=> (not res!36404) (not e!44184))))

(assert (=> b!67413 (= res!36404 (and (or (not ((_ is Cons!1462) (toList!717 lt!28675))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28675))) (_1!1057 lt!28624))) ((_ is Cons!1462) (toList!717 lt!28675)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28675))) (_1!1057 lt!28624))))))

(declare-fun b!67414 () Bool)

(assert (=> b!67414 (= e!44184 (containsKey!134 (t!4948 (toList!717 lt!28675)) (_1!1057 lt!28624)))))

(assert (= (and d!14167 (not res!36403)) b!67413))

(assert (= (and b!67413 res!36404) b!67414))

(declare-fun m!62635 () Bool)

(assert (=> b!67414 m!62635))

(assert (=> d!13985 d!14167))

(assert (=> d!13815 d!14025))

(assert (=> b!66981 d!14069))

(declare-fun d!14169 () Bool)

(declare-fun c!9403 () Bool)

(assert (=> d!14169 (= c!9403 (and ((_ is Cons!1462) (toList!717 lt!29034)) (= (_1!1057 (h!2046 (toList!717 lt!29034))) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44185 () Option!136)

(assert (=> d!14169 (= (getValueByKey!130 (toList!717 lt!29034) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44185)))

(declare-fun b!67416 () Bool)

(declare-fun e!44186 () Option!136)

(assert (=> b!67416 (= e!44185 e!44186)))

(declare-fun c!9404 () Bool)

(assert (=> b!67416 (= c!9404 (and ((_ is Cons!1462) (toList!717 lt!29034)) (not (= (_1!1057 (h!2046 (toList!717 lt!29034))) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67415 () Bool)

(assert (=> b!67415 (= e!44185 (Some!135 (_2!1057 (h!2046 (toList!717 lt!29034)))))))

(declare-fun b!67417 () Bool)

(assert (=> b!67417 (= e!44186 (getValueByKey!130 (t!4948 (toList!717 lt!29034)) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67418 () Bool)

(assert (=> b!67418 (= e!44186 None!134)))

(assert (= (and d!14169 c!9403) b!67415))

(assert (= (and d!14169 (not c!9403)) b!67416))

(assert (= (and b!67416 c!9404) b!67417))

(assert (= (and b!67416 (not c!9404)) b!67418))

(declare-fun m!62637 () Bool)

(assert (=> b!67417 m!62637))

(assert (=> b!67003 d!14169))

(declare-fun lt!29347 () Bool)

(declare-fun d!14171 () Bool)

(assert (=> d!14171 (= lt!29347 (select (content!72 (toList!717 lt!29184)) (tuple2!2093 lt!28695 lt!28694)))))

(declare-fun e!44187 () Bool)

(assert (=> d!14171 (= lt!29347 e!44187)))

(declare-fun res!36405 () Bool)

(assert (=> d!14171 (=> (not res!36405) (not e!44187))))

(assert (=> d!14171 (= res!36405 ((_ is Cons!1462) (toList!717 lt!29184)))))

(assert (=> d!14171 (= (contains!712 (toList!717 lt!29184) (tuple2!2093 lt!28695 lt!28694)) lt!29347)))

(declare-fun b!67419 () Bool)

(declare-fun e!44188 () Bool)

(assert (=> b!67419 (= e!44187 e!44188)))

(declare-fun res!36406 () Bool)

(assert (=> b!67419 (=> res!36406 e!44188)))

(assert (=> b!67419 (= res!36406 (= (h!2046 (toList!717 lt!29184)) (tuple2!2093 lt!28695 lt!28694)))))

(declare-fun b!67420 () Bool)

(assert (=> b!67420 (= e!44188 (contains!712 (t!4948 (toList!717 lt!29184)) (tuple2!2093 lt!28695 lt!28694)))))

(assert (= (and d!14171 res!36405) b!67419))

(assert (= (and b!67419 (not res!36406)) b!67420))

(declare-fun m!62639 () Bool)

(assert (=> d!14171 m!62639))

(declare-fun m!62641 () Bool)

(assert (=> d!14171 m!62641))

(declare-fun m!62643 () Bool)

(assert (=> b!67420 m!62643))

(assert (=> b!67124 d!14171))

(declare-fun d!14173 () Bool)

(declare-fun res!36407 () Bool)

(declare-fun e!44191 () Bool)

(assert (=> d!14173 (=> res!36407 e!44191)))

(assert (=> d!14173 (= res!36407 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))))))

(assert (=> d!14173 (= (arrayNoDuplicates!0 (_keys!3787 (_2!1058 lt!28812)) #b00000000000000000000000000000000 Nil!1462) e!44191)))

(declare-fun bm!5656 () Bool)

(declare-fun call!5659 () Bool)

(declare-fun c!9405 () Bool)

(assert (=> bm!5656 (= call!5659 (arrayNoDuplicates!0 (_keys!3787 (_2!1058 lt!28812)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9405 (Cons!1461 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000) Nil!1462) Nil!1462)))))

(declare-fun b!67421 () Bool)

(declare-fun e!44192 () Bool)

(assert (=> b!67421 (= e!44192 (contains!713 Nil!1462 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000)))))

(declare-fun b!67422 () Bool)

(declare-fun e!44190 () Bool)

(declare-fun e!44189 () Bool)

(assert (=> b!67422 (= e!44190 e!44189)))

(assert (=> b!67422 (= c!9405 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000)))))

(declare-fun b!67423 () Bool)

(assert (=> b!67423 (= e!44191 e!44190)))

(declare-fun res!36409 () Bool)

(assert (=> b!67423 (=> (not res!36409) (not e!44190))))

(assert (=> b!67423 (= res!36409 (not e!44192))))

(declare-fun res!36408 () Bool)

(assert (=> b!67423 (=> (not res!36408) (not e!44192))))

(assert (=> b!67423 (= res!36408 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000)))))

(declare-fun b!67424 () Bool)

(assert (=> b!67424 (= e!44189 call!5659)))

(declare-fun b!67425 () Bool)

(assert (=> b!67425 (= e!44189 call!5659)))

(assert (= (and d!14173 (not res!36407)) b!67423))

(assert (= (and b!67423 res!36408) b!67421))

(assert (= (and b!67423 res!36409) b!67422))

(assert (= (and b!67422 c!9405) b!67425))

(assert (= (and b!67422 (not c!9405)) b!67424))

(assert (= (or b!67425 b!67424) bm!5656))

(declare-fun m!62645 () Bool)

(assert (=> bm!5656 m!62645))

(declare-fun m!62647 () Bool)

(assert (=> bm!5656 m!62647))

(assert (=> b!67421 m!62645))

(assert (=> b!67421 m!62645))

(declare-fun m!62649 () Bool)

(assert (=> b!67421 m!62649))

(assert (=> b!67422 m!62645))

(assert (=> b!67422 m!62645))

(declare-fun m!62651 () Bool)

(assert (=> b!67422 m!62651))

(assert (=> b!67423 m!62645))

(assert (=> b!67423 m!62645))

(assert (=> b!67423 m!62651))

(assert (=> b!66916 d!14173))

(assert (=> d!13903 d!14025))

(declare-fun d!14175 () Bool)

(assert (=> d!14175 (= (get!1120 (getValueByKey!130 (toList!717 lt!28867) lt!28870)) (v!2482 (getValueByKey!130 (toList!717 lt!28867) lt!28870)))))

(assert (=> d!13935 d!14175))

(declare-fun d!14177 () Bool)

(declare-fun c!9406 () Bool)

(assert (=> d!14177 (= c!9406 (and ((_ is Cons!1462) (toList!717 lt!28867)) (= (_1!1057 (h!2046 (toList!717 lt!28867))) lt!28870)))))

(declare-fun e!44193 () Option!136)

(assert (=> d!14177 (= (getValueByKey!130 (toList!717 lt!28867) lt!28870) e!44193)))

(declare-fun b!67427 () Bool)

(declare-fun e!44194 () Option!136)

(assert (=> b!67427 (= e!44193 e!44194)))

(declare-fun c!9407 () Bool)

(assert (=> b!67427 (= c!9407 (and ((_ is Cons!1462) (toList!717 lt!28867)) (not (= (_1!1057 (h!2046 (toList!717 lt!28867))) lt!28870))))))

(declare-fun b!67426 () Bool)

(assert (=> b!67426 (= e!44193 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28867)))))))

(declare-fun b!67428 () Bool)

(assert (=> b!67428 (= e!44194 (getValueByKey!130 (t!4948 (toList!717 lt!28867)) lt!28870))))

(declare-fun b!67429 () Bool)

(assert (=> b!67429 (= e!44194 None!134)))

(assert (= (and d!14177 c!9406) b!67426))

(assert (= (and d!14177 (not c!9406)) b!67427))

(assert (= (and b!67427 c!9407) b!67428))

(assert (= (and b!67427 (not c!9407)) b!67429))

(declare-fun m!62653 () Bool)

(assert (=> b!67428 m!62653))

(assert (=> d!13935 d!14177))

(assert (=> b!66974 d!14069))

(declare-fun d!14179 () Bool)

(declare-fun e!44196 () Bool)

(assert (=> d!14179 e!44196))

(declare-fun res!36410 () Bool)

(assert (=> d!14179 (=> res!36410 e!44196)))

(declare-fun lt!29350 () Bool)

(assert (=> d!14179 (= res!36410 (not lt!29350))))

(declare-fun lt!29348 () Bool)

(assert (=> d!14179 (= lt!29350 lt!29348)))

(declare-fun lt!29351 () Unit!1838)

(declare-fun e!44195 () Unit!1838)

(assert (=> d!14179 (= lt!29351 e!44195)))

(declare-fun c!9408 () Bool)

(assert (=> d!14179 (= c!9408 lt!29348)))

(assert (=> d!14179 (= lt!29348 (containsKey!134 (toList!717 lt!29034) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14179 (= (contains!710 lt!29034 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29350)))

(declare-fun b!67430 () Bool)

(declare-fun lt!29349 () Unit!1838)

(assert (=> b!67430 (= e!44195 lt!29349)))

(assert (=> b!67430 (= lt!29349 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29034) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67430 (isDefined!83 (getValueByKey!130 (toList!717 lt!29034) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67431 () Bool)

(declare-fun Unit!1876 () Unit!1838)

(assert (=> b!67431 (= e!44195 Unit!1876)))

(declare-fun b!67432 () Bool)

(assert (=> b!67432 (= e!44196 (isDefined!83 (getValueByKey!130 (toList!717 lt!29034) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14179 c!9408) b!67430))

(assert (= (and d!14179 (not c!9408)) b!67431))

(assert (= (and d!14179 (not res!36410)) b!67432))

(declare-fun m!62655 () Bool)

(assert (=> d!14179 m!62655))

(declare-fun m!62657 () Bool)

(assert (=> b!67430 m!62657))

(assert (=> b!67430 m!61873))

(assert (=> b!67430 m!61873))

(declare-fun m!62659 () Bool)

(assert (=> b!67430 m!62659))

(assert (=> b!67432 m!61873))

(assert (=> b!67432 m!61873))

(assert (=> b!67432 m!62659))

(assert (=> d!13923 d!14179))

(declare-fun c!9409 () Bool)

(declare-fun d!14181 () Bool)

(assert (=> d!14181 (= c!9409 (and ((_ is Cons!1462) lt!29035) (= (_1!1057 (h!2046 lt!29035)) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44197 () Option!136)

(assert (=> d!14181 (= (getValueByKey!130 lt!29035 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44197)))

(declare-fun b!67434 () Bool)

(declare-fun e!44198 () Option!136)

(assert (=> b!67434 (= e!44197 e!44198)))

(declare-fun c!9410 () Bool)

(assert (=> b!67434 (= c!9410 (and ((_ is Cons!1462) lt!29035) (not (= (_1!1057 (h!2046 lt!29035)) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67433 () Bool)

(assert (=> b!67433 (= e!44197 (Some!135 (_2!1057 (h!2046 lt!29035))))))

(declare-fun b!67435 () Bool)

(assert (=> b!67435 (= e!44198 (getValueByKey!130 (t!4948 lt!29035) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67436 () Bool)

(assert (=> b!67436 (= e!44198 None!134)))

(assert (= (and d!14181 c!9409) b!67433))

(assert (= (and d!14181 (not c!9409)) b!67434))

(assert (= (and b!67434 c!9410) b!67435))

(assert (= (and b!67434 (not c!9410)) b!67436))

(declare-fun m!62661 () Bool)

(assert (=> b!67435 m!62661))

(assert (=> d!13923 d!14181))

(declare-fun d!14183 () Bool)

(assert (=> d!14183 (= (getValueByKey!130 lt!29035 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29352 () Unit!1838)

(assert (=> d!14183 (= lt!29352 (choose!367 lt!29035 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44199 () Bool)

(assert (=> d!14183 e!44199))

(declare-fun res!36411 () Bool)

(assert (=> d!14183 (=> (not res!36411) (not e!44199))))

(assert (=> d!14183 (= res!36411 (isStrictlySorted!289 lt!29035))))

(assert (=> d!14183 (= (lemmaContainsTupThenGetReturnValue!47 lt!29035 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29352)))

(declare-fun b!67437 () Bool)

(declare-fun res!36412 () Bool)

(assert (=> b!67437 (=> (not res!36412) (not e!44199))))

(assert (=> b!67437 (= res!36412 (containsKey!134 lt!29035 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67438 () Bool)

(assert (=> b!67438 (= e!44199 (contains!712 lt!29035 (tuple2!2093 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14183 res!36411) b!67437))

(assert (= (and b!67437 res!36412) b!67438))

(assert (=> d!14183 m!61867))

(declare-fun m!62663 () Bool)

(assert (=> d!14183 m!62663))

(declare-fun m!62665 () Bool)

(assert (=> d!14183 m!62665))

(declare-fun m!62667 () Bool)

(assert (=> b!67437 m!62667))

(declare-fun m!62669 () Bool)

(assert (=> b!67438 m!62669))

(assert (=> d!13923 d!14183))

(declare-fun b!67439 () Bool)

(declare-fun e!44202 () List!1466)

(declare-fun call!5660 () List!1466)

(assert (=> b!67439 (= e!44202 call!5660)))

(declare-fun bm!5657 () Bool)

(declare-fun call!5661 () List!1466)

(declare-fun call!5662 () List!1466)

(assert (=> bm!5657 (= call!5661 call!5662)))

(declare-fun e!44204 () Bool)

(declare-fun b!67440 () Bool)

(declare-fun lt!29353 () List!1466)

(assert (=> b!67440 (= e!44204 (contains!712 lt!29353 (tuple2!2093 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67441 () Bool)

(assert (=> b!67441 (= e!44202 call!5660)))

(declare-fun e!44200 () List!1466)

(declare-fun b!67442 () Bool)

(assert (=> b!67442 (= e!44200 (insertStrictlySorted!50 (t!4948 (toList!717 lt!28863)) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67443 () Bool)

(declare-fun e!44203 () List!1466)

(assert (=> b!67443 (= e!44203 call!5662)))

(declare-fun c!9413 () Bool)

(declare-fun b!67444 () Bool)

(declare-fun c!9411 () Bool)

(assert (=> b!67444 (= e!44200 (ite c!9411 (t!4948 (toList!717 lt!28863)) (ite c!9413 (Cons!1462 (h!2046 (toList!717 lt!28863)) (t!4948 (toList!717 lt!28863))) Nil!1463)))))

(declare-fun d!14185 () Bool)

(assert (=> d!14185 e!44204))

(declare-fun res!36414 () Bool)

(assert (=> d!14185 (=> (not res!36414) (not e!44204))))

(assert (=> d!14185 (= res!36414 (isStrictlySorted!289 lt!29353))))

(assert (=> d!14185 (= lt!29353 e!44203)))

(declare-fun c!9414 () Bool)

(assert (=> d!14185 (= c!9414 (and ((_ is Cons!1462) (toList!717 lt!28863)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28863))) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14185 (isStrictlySorted!289 (toList!717 lt!28863))))

(assert (=> d!14185 (= (insertStrictlySorted!50 (toList!717 lt!28863) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29353)))

(declare-fun bm!5658 () Bool)

(assert (=> bm!5658 (= call!5660 call!5661)))

(declare-fun b!67445 () Bool)

(declare-fun res!36413 () Bool)

(assert (=> b!67445 (=> (not res!36413) (not e!44204))))

(assert (=> b!67445 (= res!36413 (containsKey!134 lt!29353 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67446 () Bool)

(declare-fun e!44201 () List!1466)

(assert (=> b!67446 (= e!44201 call!5661)))

(declare-fun b!67447 () Bool)

(assert (=> b!67447 (= c!9413 (and ((_ is Cons!1462) (toList!717 lt!28863)) (bvsgt (_1!1057 (h!2046 (toList!717 lt!28863))) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67447 (= e!44201 e!44202)))

(declare-fun b!67448 () Bool)

(assert (=> b!67448 (= e!44203 e!44201)))

(assert (=> b!67448 (= c!9411 (and ((_ is Cons!1462) (toList!717 lt!28863)) (= (_1!1057 (h!2046 (toList!717 lt!28863))) (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun bm!5659 () Bool)

(assert (=> bm!5659 (= call!5662 ($colon$colon!63 e!44200 (ite c!9414 (h!2046 (toList!717 lt!28863)) (tuple2!2093 (_1!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9412 () Bool)

(assert (=> bm!5659 (= c!9412 c!9414)))

(assert (= (and d!14185 c!9414) b!67443))

(assert (= (and d!14185 (not c!9414)) b!67448))

(assert (= (and b!67448 c!9411) b!67446))

(assert (= (and b!67448 (not c!9411)) b!67447))

(assert (= (and b!67447 c!9413) b!67441))

(assert (= (and b!67447 (not c!9413)) b!67439))

(assert (= (or b!67441 b!67439) bm!5658))

(assert (= (or b!67446 bm!5658) bm!5657))

(assert (= (or b!67443 bm!5657) bm!5659))

(assert (= (and bm!5659 c!9412) b!67442))

(assert (= (and bm!5659 (not c!9412)) b!67444))

(assert (= (and d!14185 res!36414) b!67445))

(assert (= (and b!67445 res!36413) b!67440))

(declare-fun m!62671 () Bool)

(assert (=> b!67440 m!62671))

(declare-fun m!62673 () Bool)

(assert (=> d!14185 m!62673))

(declare-fun m!62675 () Bool)

(assert (=> d!14185 m!62675))

(declare-fun m!62677 () Bool)

(assert (=> bm!5659 m!62677))

(declare-fun m!62679 () Bool)

(assert (=> b!67445 m!62679))

(declare-fun m!62681 () Bool)

(assert (=> b!67442 m!62681))

(assert (=> d!13923 d!14185))

(declare-fun d!14187 () Bool)

(assert (=> d!14187 (= (isEmpty!309 (getValueByKey!130 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))) (not ((_ is Some!135) (getValueByKey!130 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(assert (=> d!14001 d!14187))

(declare-fun d!14189 () Bool)

(declare-fun lt!29354 () Bool)

(assert (=> d!14189 (= lt!29354 (select (content!72 lt!28704) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun e!44205 () Bool)

(assert (=> d!14189 (= lt!29354 e!44205)))

(declare-fun res!36415 () Bool)

(assert (=> d!14189 (=> (not res!36415) (not e!44205))))

(assert (=> d!14189 (= res!36415 ((_ is Cons!1462) lt!28704))))

(assert (=> d!14189 (= (contains!712 lt!28704 (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))) lt!29354)))

(declare-fun b!67449 () Bool)

(declare-fun e!44206 () Bool)

(assert (=> b!67449 (= e!44205 e!44206)))

(declare-fun res!36416 () Bool)

(assert (=> b!67449 (=> res!36416 e!44206)))

(assert (=> b!67449 (= res!36416 (= (h!2046 lt!28704) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun b!67450 () Bool)

(assert (=> b!67450 (= e!44206 (contains!712 (t!4948 lt!28704) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(assert (= (and d!14189 res!36415) b!67449))

(assert (= (and b!67449 (not res!36416)) b!67450))

(declare-fun m!62683 () Bool)

(assert (=> d!14189 m!62683))

(declare-fun m!62685 () Bool)

(assert (=> d!14189 m!62685))

(declare-fun m!62687 () Bool)

(assert (=> b!67450 m!62687))

(assert (=> b!66751 d!14189))

(declare-fun d!14191 () Bool)

(assert (=> d!14191 (= ($colon$colon!63 e!43857 (ite c!9266 (h!2046 (toList!717 (+!89 lt!28620 lt!28624))) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617)))) (Cons!1462 (ite c!9266 (h!2046 (toList!717 (+!89 lt!28620 lt!28624))) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))) e!43857))))

(assert (=> bm!5599 d!14191))

(declare-fun d!14193 () Bool)

(declare-fun e!44207 () Bool)

(assert (=> d!14193 e!44207))

(declare-fun res!36418 () Bool)

(assert (=> d!14193 (=> (not res!36418) (not e!44207))))

(declare-fun lt!29355 () ListLongMap!1403)

(assert (=> d!14193 (= res!36418 (contains!710 lt!29355 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(declare-fun lt!29356 () List!1466)

(assert (=> d!14193 (= lt!29355 (ListLongMap!1404 lt!29356))))

(declare-fun lt!29357 () Unit!1838)

(declare-fun lt!29358 () Unit!1838)

(assert (=> d!14193 (= lt!29357 lt!29358)))

(assert (=> d!14193 (= (getValueByKey!130 lt!29356 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(assert (=> d!14193 (= lt!29358 (lemmaContainsTupThenGetReturnValue!47 lt!29356 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(assert (=> d!14193 (= lt!29356 (insertStrictlySorted!50 (toList!717 call!5638) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))))))

(assert (=> d!14193 (= (+!89 call!5638 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))) lt!29355)))

(declare-fun b!67451 () Bool)

(declare-fun res!36417 () Bool)

(assert (=> b!67451 (=> (not res!36417) (not e!44207))))

(assert (=> b!67451 (= res!36417 (= (getValueByKey!130 (toList!717 lt!29355) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16))))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))))

(declare-fun b!67452 () Bool)

(assert (=> b!67452 (= e!44207 (contains!712 (toList!717 lt!29355) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9195 (ite c!9196 (minValue!2055 newMap!16) lt!28616) (minValue!2055 newMap!16)))))))

(assert (= (and d!14193 res!36418) b!67451))

(assert (= (and b!67451 res!36417) b!67452))

(declare-fun m!62689 () Bool)

(assert (=> d!14193 m!62689))

(declare-fun m!62691 () Bool)

(assert (=> d!14193 m!62691))

(declare-fun m!62693 () Bool)

(assert (=> d!14193 m!62693))

(declare-fun m!62695 () Bool)

(assert (=> d!14193 m!62695))

(declare-fun m!62697 () Bool)

(assert (=> b!67451 m!62697))

(declare-fun m!62699 () Bool)

(assert (=> b!67452 m!62699))

(assert (=> b!67182 d!14193))

(declare-fun d!14195 () Bool)

(assert (=> d!14195 (= (isDefined!83 (getValueByKey!130 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))) (not (isEmpty!309 (getValueByKey!130 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(declare-fun bs!2907 () Bool)

(assert (= bs!2907 d!14195))

(assert (=> bs!2907 m!61913))

(declare-fun m!62701 () Bool)

(assert (=> bs!2907 m!62701))

(assert (=> b!67012 d!14195))

(declare-fun d!14197 () Bool)

(declare-fun c!9415 () Bool)

(assert (=> d!14197 (= c!9415 (and ((_ is Cons!1462) (toList!717 e!43724)) (= (_1!1057 (h!2046 (toList!717 e!43724))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun e!44208 () Option!136)

(assert (=> d!14197 (= (getValueByKey!130 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44208)))

(declare-fun b!67454 () Bool)

(declare-fun e!44209 () Option!136)

(assert (=> b!67454 (= e!44208 e!44209)))

(declare-fun c!9416 () Bool)

(assert (=> b!67454 (= c!9416 (and ((_ is Cons!1462) (toList!717 e!43724)) (not (= (_1!1057 (h!2046 (toList!717 e!43724))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(declare-fun b!67453 () Bool)

(assert (=> b!67453 (= e!44208 (Some!135 (_2!1057 (h!2046 (toList!717 e!43724)))))))

(declare-fun b!67455 () Bool)

(assert (=> b!67455 (= e!44209 (getValueByKey!130 (t!4948 (toList!717 e!43724)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67456 () Bool)

(assert (=> b!67456 (= e!44209 None!134)))

(assert (= (and d!14197 c!9415) b!67453))

(assert (= (and d!14197 (not c!9415)) b!67454))

(assert (= (and b!67454 c!9416) b!67455))

(assert (= (and b!67454 (not c!9416)) b!67456))

(assert (=> b!67455 m!61065))

(declare-fun m!62703 () Bool)

(assert (=> b!67455 m!62703))

(assert (=> b!67012 d!14197))

(assert (=> bm!5621 d!13947))

(declare-fun b!67457 () Bool)

(declare-fun e!44212 () List!1466)

(declare-fun call!5663 () List!1466)

(assert (=> b!67457 (= e!44212 call!5663)))

(declare-fun bm!5660 () Bool)

(declare-fun call!5664 () List!1466)

(declare-fun call!5665 () List!1466)

(assert (=> bm!5660 (= call!5664 call!5665)))

(declare-fun b!67458 () Bool)

(declare-fun e!44214 () Bool)

(declare-fun lt!29359 () List!1466)

(assert (=> b!67458 (= e!44214 (contains!712 lt!29359 (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun b!67459 () Bool)

(assert (=> b!67459 (= e!44212 call!5663)))

(declare-fun b!67460 () Bool)

(declare-fun e!44210 () List!1466)

(assert (=> b!67460 (= e!44210 (insertStrictlySorted!50 (t!4948 (t!4948 (toList!717 lt!28620))) (_1!1057 lt!28624) (_2!1057 lt!28624)))))

(declare-fun b!67461 () Bool)

(declare-fun e!44213 () List!1466)

(assert (=> b!67461 (= e!44213 call!5665)))

(declare-fun b!67462 () Bool)

(declare-fun c!9419 () Bool)

(declare-fun c!9417 () Bool)

(assert (=> b!67462 (= e!44210 (ite c!9417 (t!4948 (t!4948 (toList!717 lt!28620))) (ite c!9419 (Cons!1462 (h!2046 (t!4948 (toList!717 lt!28620))) (t!4948 (t!4948 (toList!717 lt!28620)))) Nil!1463)))))

(declare-fun d!14199 () Bool)

(assert (=> d!14199 e!44214))

(declare-fun res!36420 () Bool)

(assert (=> d!14199 (=> (not res!36420) (not e!44214))))

(assert (=> d!14199 (= res!36420 (isStrictlySorted!289 lt!29359))))

(assert (=> d!14199 (= lt!29359 e!44213)))

(declare-fun c!9420 () Bool)

(assert (=> d!14199 (= c!9420 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28620))) (bvslt (_1!1057 (h!2046 (t!4948 (toList!717 lt!28620)))) (_1!1057 lt!28624))))))

(assert (=> d!14199 (isStrictlySorted!289 (t!4948 (toList!717 lt!28620)))))

(assert (=> d!14199 (= (insertStrictlySorted!50 (t!4948 (toList!717 lt!28620)) (_1!1057 lt!28624) (_2!1057 lt!28624)) lt!29359)))

(declare-fun bm!5661 () Bool)

(assert (=> bm!5661 (= call!5663 call!5664)))

(declare-fun b!67463 () Bool)

(declare-fun res!36419 () Bool)

(assert (=> b!67463 (=> (not res!36419) (not e!44214))))

(assert (=> b!67463 (= res!36419 (containsKey!134 lt!29359 (_1!1057 lt!28624)))))

(declare-fun b!67464 () Bool)

(declare-fun e!44211 () List!1466)

(assert (=> b!67464 (= e!44211 call!5664)))

(declare-fun b!67465 () Bool)

(assert (=> b!67465 (= c!9419 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28620))) (bvsgt (_1!1057 (h!2046 (t!4948 (toList!717 lt!28620)))) (_1!1057 lt!28624))))))

(assert (=> b!67465 (= e!44211 e!44212)))

(declare-fun b!67466 () Bool)

(assert (=> b!67466 (= e!44213 e!44211)))

(assert (=> b!67466 (= c!9417 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28620))) (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28620)))) (_1!1057 lt!28624))))))

(declare-fun bm!5662 () Bool)

(assert (=> bm!5662 (= call!5665 ($colon$colon!63 e!44210 (ite c!9420 (h!2046 (t!4948 (toList!717 lt!28620))) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624)))))))

(declare-fun c!9418 () Bool)

(assert (=> bm!5662 (= c!9418 c!9420)))

(assert (= (and d!14199 c!9420) b!67461))

(assert (= (and d!14199 (not c!9420)) b!67466))

(assert (= (and b!67466 c!9417) b!67464))

(assert (= (and b!67466 (not c!9417)) b!67465))

(assert (= (and b!67465 c!9419) b!67459))

(assert (= (and b!67465 (not c!9419)) b!67457))

(assert (= (or b!67459 b!67457) bm!5661))

(assert (= (or b!67464 bm!5661) bm!5660))

(assert (= (or b!67461 bm!5660) bm!5662))

(assert (= (and bm!5662 c!9418) b!67460))

(assert (= (and bm!5662 (not c!9418)) b!67462))

(assert (= (and d!14199 res!36420) b!67463))

(assert (= (and b!67463 res!36419) b!67458))

(declare-fun m!62705 () Bool)

(assert (=> b!67458 m!62705))

(declare-fun m!62707 () Bool)

(assert (=> d!14199 m!62707))

(declare-fun m!62709 () Bool)

(assert (=> d!14199 m!62709))

(declare-fun m!62711 () Bool)

(assert (=> bm!5662 m!62711))

(declare-fun m!62713 () Bool)

(assert (=> b!67463 m!62713))

(declare-fun m!62715 () Bool)

(assert (=> b!67460 m!62715))

(assert (=> b!67160 d!14199))

(assert (=> d!13931 d!13909))

(declare-fun d!14201 () Bool)

(assert (=> d!14201 (= (apply!72 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28860) (apply!72 lt!28871 lt!28860))))

(assert (=> d!14201 true))

(declare-fun _$34!783 () Unit!1838)

(assert (=> d!14201 (= (choose!371 lt!28871 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28860) _$34!783)))

(declare-fun bs!2908 () Bool)

(assert (= bs!2908 d!14201))

(assert (=> bs!2908 m!61377))

(assert (=> bs!2908 m!61377))

(assert (=> bs!2908 m!61379))

(assert (=> bs!2908 m!61369))

(assert (=> d!13931 d!14201))

(assert (=> d!13931 d!13919))

(declare-fun d!14203 () Bool)

(declare-fun e!44216 () Bool)

(assert (=> d!14203 e!44216))

(declare-fun res!36421 () Bool)

(assert (=> d!14203 (=> res!36421 e!44216)))

(declare-fun lt!29362 () Bool)

(assert (=> d!14203 (= res!36421 (not lt!29362))))

(declare-fun lt!29360 () Bool)

(assert (=> d!14203 (= lt!29362 lt!29360)))

(declare-fun lt!29363 () Unit!1838)

(declare-fun e!44215 () Unit!1838)

(assert (=> d!14203 (= lt!29363 e!44215)))

(declare-fun c!9421 () Bool)

(assert (=> d!14203 (= c!9421 lt!29360)))

(assert (=> d!14203 (= lt!29360 (containsKey!134 (toList!717 lt!28871) lt!28860))))

(assert (=> d!14203 (= (contains!710 lt!28871 lt!28860) lt!29362)))

(declare-fun b!67468 () Bool)

(declare-fun lt!29361 () Unit!1838)

(assert (=> b!67468 (= e!44215 lt!29361)))

(assert (=> b!67468 (= lt!29361 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28871) lt!28860))))

(assert (=> b!67468 (isDefined!83 (getValueByKey!130 (toList!717 lt!28871) lt!28860))))

(declare-fun b!67469 () Bool)

(declare-fun Unit!1877 () Unit!1838)

(assert (=> b!67469 (= e!44215 Unit!1877)))

(declare-fun b!67470 () Bool)

(assert (=> b!67470 (= e!44216 (isDefined!83 (getValueByKey!130 (toList!717 lt!28871) lt!28860)))))

(assert (= (and d!14203 c!9421) b!67468))

(assert (= (and d!14203 (not c!9421)) b!67469))

(assert (= (and d!14203 (not res!36421)) b!67470))

(declare-fun m!62717 () Bool)

(assert (=> d!14203 m!62717))

(declare-fun m!62719 () Bool)

(assert (=> b!67468 m!62719))

(assert (=> b!67468 m!61813))

(assert (=> b!67468 m!61813))

(declare-fun m!62721 () Bool)

(assert (=> b!67468 m!62721))

(assert (=> b!67470 m!61813))

(assert (=> b!67470 m!61813))

(assert (=> b!67470 m!62721))

(assert (=> d!13931 d!14203))

(assert (=> d!13931 d!13937))

(declare-fun d!14205 () Bool)

(declare-fun res!36422 () Bool)

(declare-fun e!44217 () Bool)

(assert (=> d!14205 (=> res!36422 e!44217)))

(assert (=> d!14205 (= res!36422 (and ((_ is Cons!1462) lt!28937) (= (_1!1057 (h!2046 lt!28937)) (_1!1057 lt!28624))))))

(assert (=> d!14205 (= (containsKey!134 lt!28937 (_1!1057 lt!28624)) e!44217)))

(declare-fun b!67471 () Bool)

(declare-fun e!44218 () Bool)

(assert (=> b!67471 (= e!44217 e!44218)))

(declare-fun res!36423 () Bool)

(assert (=> b!67471 (=> (not res!36423) (not e!44218))))

(assert (=> b!67471 (= res!36423 (and (or (not ((_ is Cons!1462) lt!28937)) (bvsle (_1!1057 (h!2046 lt!28937)) (_1!1057 lt!28624))) ((_ is Cons!1462) lt!28937) (bvslt (_1!1057 (h!2046 lt!28937)) (_1!1057 lt!28624))))))

(declare-fun b!67472 () Bool)

(assert (=> b!67472 (= e!44218 (containsKey!134 (t!4948 lt!28937) (_1!1057 lt!28624)))))

(assert (= (and d!14205 (not res!36422)) b!67471))

(assert (= (and b!67471 res!36423) b!67472))

(declare-fun m!62723 () Bool)

(assert (=> b!67472 m!62723))

(assert (=> b!66858 d!14205))

(declare-fun d!14207 () Bool)

(assert (=> d!14207 (= ($colon$colon!63 e!44024 (ite c!9334 (h!2046 (toList!717 lt!28620)) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624)))) (Cons!1462 (ite c!9334 (h!2046 (toList!717 lt!28620)) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))) e!44024))))

(assert (=> bm!5630 d!14207))

(declare-fun lt!29364 () Bool)

(declare-fun d!14209 () Bool)

(assert (=> d!14209 (= lt!29364 (select (content!72 (toList!717 lt!29205)) (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun e!44219 () Bool)

(assert (=> d!14209 (= lt!29364 e!44219)))

(declare-fun res!36424 () Bool)

(assert (=> d!14209 (=> (not res!36424) (not e!44219))))

(assert (=> d!14209 (= res!36424 ((_ is Cons!1462) (toList!717 lt!29205)))))

(assert (=> d!14209 (= (contains!712 (toList!717 lt!29205) (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29364)))

(declare-fun b!67473 () Bool)

(declare-fun e!44220 () Bool)

(assert (=> b!67473 (= e!44219 e!44220)))

(declare-fun res!36425 () Bool)

(assert (=> b!67473 (=> res!36425 e!44220)))

(assert (=> b!67473 (= res!36425 (= (h!2046 (toList!717 lt!29205)) (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!67474 () Bool)

(assert (=> b!67474 (= e!44220 (contains!712 (t!4948 (toList!717 lt!29205)) (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (= (and d!14209 res!36424) b!67473))

(assert (= (and b!67473 (not res!36425)) b!67474))

(declare-fun m!62725 () Bool)

(assert (=> d!14209 m!62725))

(declare-fun m!62727 () Bool)

(assert (=> d!14209 m!62727))

(declare-fun m!62729 () Bool)

(assert (=> b!67474 m!62729))

(assert (=> b!67171 d!14209))

(declare-fun d!14211 () Bool)

(declare-fun e!44222 () Bool)

(assert (=> d!14211 e!44222))

(declare-fun res!36426 () Bool)

(assert (=> d!14211 (=> res!36426 e!44222)))

(declare-fun lt!29367 () Bool)

(assert (=> d!14211 (= res!36426 (not lt!29367))))

(declare-fun lt!29365 () Bool)

(assert (=> d!14211 (= lt!29367 lt!29365)))

(declare-fun lt!29368 () Unit!1838)

(declare-fun e!44221 () Unit!1838)

(assert (=> d!14211 (= lt!29368 e!44221)))

(declare-fun c!9422 () Bool)

(assert (=> d!14211 (= c!9422 lt!29365)))

(assert (=> d!14211 (= lt!29365 (containsKey!134 (toList!717 lt!29184) (_1!1057 (tuple2!2093 lt!28695 lt!28694))))))

(assert (=> d!14211 (= (contains!710 lt!29184 (_1!1057 (tuple2!2093 lt!28695 lt!28694))) lt!29367)))

(declare-fun b!67475 () Bool)

(declare-fun lt!29366 () Unit!1838)

(assert (=> b!67475 (= e!44221 lt!29366)))

(assert (=> b!67475 (= lt!29366 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29184) (_1!1057 (tuple2!2093 lt!28695 lt!28694))))))

(assert (=> b!67475 (isDefined!83 (getValueByKey!130 (toList!717 lt!29184) (_1!1057 (tuple2!2093 lt!28695 lt!28694))))))

(declare-fun b!67476 () Bool)

(declare-fun Unit!1878 () Unit!1838)

(assert (=> b!67476 (= e!44221 Unit!1878)))

(declare-fun b!67477 () Bool)

(assert (=> b!67477 (= e!44222 (isDefined!83 (getValueByKey!130 (toList!717 lt!29184) (_1!1057 (tuple2!2093 lt!28695 lt!28694)))))))

(assert (= (and d!14211 c!9422) b!67475))

(assert (= (and d!14211 (not c!9422)) b!67476))

(assert (= (and d!14211 (not res!36426)) b!67477))

(declare-fun m!62731 () Bool)

(assert (=> d!14211 m!62731))

(declare-fun m!62733 () Bool)

(assert (=> b!67475 m!62733))

(assert (=> b!67475 m!62085))

(assert (=> b!67475 m!62085))

(declare-fun m!62735 () Bool)

(assert (=> b!67475 m!62735))

(assert (=> b!67477 m!62085))

(assert (=> b!67477 m!62085))

(assert (=> b!67477 m!62735))

(assert (=> d!13973 d!14211))

(declare-fun d!14213 () Bool)

(declare-fun c!9423 () Bool)

(assert (=> d!14213 (= c!9423 (and ((_ is Cons!1462) lt!29185) (= (_1!1057 (h!2046 lt!29185)) (_1!1057 (tuple2!2093 lt!28695 lt!28694)))))))

(declare-fun e!44223 () Option!136)

(assert (=> d!14213 (= (getValueByKey!130 lt!29185 (_1!1057 (tuple2!2093 lt!28695 lt!28694))) e!44223)))

(declare-fun b!67479 () Bool)

(declare-fun e!44224 () Option!136)

(assert (=> b!67479 (= e!44223 e!44224)))

(declare-fun c!9424 () Bool)

(assert (=> b!67479 (= c!9424 (and ((_ is Cons!1462) lt!29185) (not (= (_1!1057 (h!2046 lt!29185)) (_1!1057 (tuple2!2093 lt!28695 lt!28694))))))))

(declare-fun b!67478 () Bool)

(assert (=> b!67478 (= e!44223 (Some!135 (_2!1057 (h!2046 lt!29185))))))

(declare-fun b!67480 () Bool)

(assert (=> b!67480 (= e!44224 (getValueByKey!130 (t!4948 lt!29185) (_1!1057 (tuple2!2093 lt!28695 lt!28694))))))

(declare-fun b!67481 () Bool)

(assert (=> b!67481 (= e!44224 None!134)))

(assert (= (and d!14213 c!9423) b!67478))

(assert (= (and d!14213 (not c!9423)) b!67479))

(assert (= (and b!67479 c!9424) b!67480))

(assert (= (and b!67479 (not c!9424)) b!67481))

(declare-fun m!62737 () Bool)

(assert (=> b!67480 m!62737))

(assert (=> d!13973 d!14213))

(declare-fun d!14215 () Bool)

(assert (=> d!14215 (= (getValueByKey!130 lt!29185 (_1!1057 (tuple2!2093 lt!28695 lt!28694))) (Some!135 (_2!1057 (tuple2!2093 lt!28695 lt!28694))))))

(declare-fun lt!29369 () Unit!1838)

(assert (=> d!14215 (= lt!29369 (choose!367 lt!29185 (_1!1057 (tuple2!2093 lt!28695 lt!28694)) (_2!1057 (tuple2!2093 lt!28695 lt!28694))))))

(declare-fun e!44225 () Bool)

(assert (=> d!14215 e!44225))

(declare-fun res!36427 () Bool)

(assert (=> d!14215 (=> (not res!36427) (not e!44225))))

(assert (=> d!14215 (= res!36427 (isStrictlySorted!289 lt!29185))))

(assert (=> d!14215 (= (lemmaContainsTupThenGetReturnValue!47 lt!29185 (_1!1057 (tuple2!2093 lt!28695 lt!28694)) (_2!1057 (tuple2!2093 lt!28695 lt!28694))) lt!29369)))

(declare-fun b!67482 () Bool)

(declare-fun res!36428 () Bool)

(assert (=> b!67482 (=> (not res!36428) (not e!44225))))

(assert (=> b!67482 (= res!36428 (containsKey!134 lt!29185 (_1!1057 (tuple2!2093 lt!28695 lt!28694))))))

(declare-fun b!67483 () Bool)

(assert (=> b!67483 (= e!44225 (contains!712 lt!29185 (tuple2!2093 (_1!1057 (tuple2!2093 lt!28695 lt!28694)) (_2!1057 (tuple2!2093 lt!28695 lt!28694)))))))

(assert (= (and d!14215 res!36427) b!67482))

(assert (= (and b!67482 res!36428) b!67483))

(assert (=> d!14215 m!62079))

(declare-fun m!62739 () Bool)

(assert (=> d!14215 m!62739))

(declare-fun m!62741 () Bool)

(assert (=> d!14215 m!62741))

(declare-fun m!62743 () Bool)

(assert (=> b!67482 m!62743))

(declare-fun m!62745 () Bool)

(assert (=> b!67483 m!62745))

(assert (=> d!13973 d!14215))

(declare-fun b!67484 () Bool)

(declare-fun e!44228 () List!1466)

(declare-fun call!5666 () List!1466)

(assert (=> b!67484 (= e!44228 call!5666)))

(declare-fun bm!5663 () Bool)

(declare-fun call!5667 () List!1466)

(declare-fun call!5668 () List!1466)

(assert (=> bm!5663 (= call!5667 call!5668)))

(declare-fun b!67485 () Bool)

(declare-fun e!44230 () Bool)

(declare-fun lt!29370 () List!1466)

(assert (=> b!67485 (= e!44230 (contains!712 lt!29370 (tuple2!2093 (_1!1057 (tuple2!2093 lt!28695 lt!28694)) (_2!1057 (tuple2!2093 lt!28695 lt!28694)))))))

(declare-fun b!67486 () Bool)

(assert (=> b!67486 (= e!44228 call!5666)))

(declare-fun e!44226 () List!1466)

(declare-fun b!67487 () Bool)

(assert (=> b!67487 (= e!44226 (insertStrictlySorted!50 (t!4948 (toList!717 lt!28697)) (_1!1057 (tuple2!2093 lt!28695 lt!28694)) (_2!1057 (tuple2!2093 lt!28695 lt!28694))))))

(declare-fun b!67488 () Bool)

(declare-fun e!44229 () List!1466)

(assert (=> b!67488 (= e!44229 call!5668)))

(declare-fun b!67489 () Bool)

(declare-fun c!9425 () Bool)

(declare-fun c!9427 () Bool)

(assert (=> b!67489 (= e!44226 (ite c!9425 (t!4948 (toList!717 lt!28697)) (ite c!9427 (Cons!1462 (h!2046 (toList!717 lt!28697)) (t!4948 (toList!717 lt!28697))) Nil!1463)))))

(declare-fun d!14217 () Bool)

(assert (=> d!14217 e!44230))

(declare-fun res!36430 () Bool)

(assert (=> d!14217 (=> (not res!36430) (not e!44230))))

(assert (=> d!14217 (= res!36430 (isStrictlySorted!289 lt!29370))))

(assert (=> d!14217 (= lt!29370 e!44229)))

(declare-fun c!9428 () Bool)

(assert (=> d!14217 (= c!9428 (and ((_ is Cons!1462) (toList!717 lt!28697)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28697))) (_1!1057 (tuple2!2093 lt!28695 lt!28694)))))))

(assert (=> d!14217 (isStrictlySorted!289 (toList!717 lt!28697))))

(assert (=> d!14217 (= (insertStrictlySorted!50 (toList!717 lt!28697) (_1!1057 (tuple2!2093 lt!28695 lt!28694)) (_2!1057 (tuple2!2093 lt!28695 lt!28694))) lt!29370)))

(declare-fun bm!5664 () Bool)

(assert (=> bm!5664 (= call!5666 call!5667)))

(declare-fun b!67490 () Bool)

(declare-fun res!36429 () Bool)

(assert (=> b!67490 (=> (not res!36429) (not e!44230))))

(assert (=> b!67490 (= res!36429 (containsKey!134 lt!29370 (_1!1057 (tuple2!2093 lt!28695 lt!28694))))))

(declare-fun b!67491 () Bool)

(declare-fun e!44227 () List!1466)

(assert (=> b!67491 (= e!44227 call!5667)))

(declare-fun b!67492 () Bool)

(assert (=> b!67492 (= c!9427 (and ((_ is Cons!1462) (toList!717 lt!28697)) (bvsgt (_1!1057 (h!2046 (toList!717 lt!28697))) (_1!1057 (tuple2!2093 lt!28695 lt!28694)))))))

(assert (=> b!67492 (= e!44227 e!44228)))

(declare-fun b!67493 () Bool)

(assert (=> b!67493 (= e!44229 e!44227)))

(assert (=> b!67493 (= c!9425 (and ((_ is Cons!1462) (toList!717 lt!28697)) (= (_1!1057 (h!2046 (toList!717 lt!28697))) (_1!1057 (tuple2!2093 lt!28695 lt!28694)))))))

(declare-fun bm!5665 () Bool)

(assert (=> bm!5665 (= call!5668 ($colon$colon!63 e!44226 (ite c!9428 (h!2046 (toList!717 lt!28697)) (tuple2!2093 (_1!1057 (tuple2!2093 lt!28695 lt!28694)) (_2!1057 (tuple2!2093 lt!28695 lt!28694))))))))

(declare-fun c!9426 () Bool)

(assert (=> bm!5665 (= c!9426 c!9428)))

(assert (= (and d!14217 c!9428) b!67488))

(assert (= (and d!14217 (not c!9428)) b!67493))

(assert (= (and b!67493 c!9425) b!67491))

(assert (= (and b!67493 (not c!9425)) b!67492))

(assert (= (and b!67492 c!9427) b!67486))

(assert (= (and b!67492 (not c!9427)) b!67484))

(assert (= (or b!67486 b!67484) bm!5664))

(assert (= (or b!67491 bm!5664) bm!5663))

(assert (= (or b!67488 bm!5663) bm!5665))

(assert (= (and bm!5665 c!9426) b!67487))

(assert (= (and bm!5665 (not c!9426)) b!67489))

(assert (= (and d!14217 res!36430) b!67490))

(assert (= (and b!67490 res!36429) b!67485))

(declare-fun m!62747 () Bool)

(assert (=> b!67485 m!62747))

(declare-fun m!62749 () Bool)

(assert (=> d!14217 m!62749))

(declare-fun m!62751 () Bool)

(assert (=> d!14217 m!62751))

(declare-fun m!62753 () Bool)

(assert (=> bm!5665 m!62753))

(declare-fun m!62755 () Bool)

(assert (=> b!67490 m!62755))

(declare-fun m!62757 () Bool)

(assert (=> b!67487 m!62757))

(assert (=> d!13973 d!14217))

(declare-fun c!9429 () Bool)

(declare-fun d!14219 () Bool)

(assert (=> d!14219 (= c!9429 (and ((_ is Cons!1462) (toList!717 lt!29022)) (= (_1!1057 (h!2046 (toList!717 lt!29022))) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44231 () Option!136)

(assert (=> d!14219 (= (getValueByKey!130 (toList!717 lt!29022) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44231)))

(declare-fun b!67495 () Bool)

(declare-fun e!44232 () Option!136)

(assert (=> b!67495 (= e!44231 e!44232)))

(declare-fun c!9430 () Bool)

(assert (=> b!67495 (= c!9430 (and ((_ is Cons!1462) (toList!717 lt!29022)) (not (= (_1!1057 (h!2046 (toList!717 lt!29022))) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67494 () Bool)

(assert (=> b!67494 (= e!44231 (Some!135 (_2!1057 (h!2046 (toList!717 lt!29022)))))))

(declare-fun b!67496 () Bool)

(assert (=> b!67496 (= e!44232 (getValueByKey!130 (t!4948 (toList!717 lt!29022)) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67497 () Bool)

(assert (=> b!67497 (= e!44232 None!134)))

(assert (= (and d!14219 c!9429) b!67494))

(assert (= (and d!14219 (not c!9429)) b!67495))

(assert (= (and b!67495 c!9430) b!67496))

(assert (= (and b!67495 (not c!9430)) b!67497))

(declare-fun m!62759 () Bool)

(assert (=> b!67496 m!62759))

(assert (=> b!66997 d!14219))

(declare-fun b!67498 () Bool)

(declare-fun e!44234 () (_ BitVec 32))

(declare-fun call!5669 () (_ BitVec 32))

(assert (=> b!67498 (= e!44234 call!5669)))

(declare-fun d!14221 () Bool)

(declare-fun lt!29371 () (_ BitVec 32))

(assert (=> d!14221 (and (bvsge lt!29371 #b00000000000000000000000000000000) (bvsle lt!29371 (bvsub (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!44233 () (_ BitVec 32))

(assert (=> d!14221 (= lt!29371 e!44233)))

(declare-fun c!9431 () Bool)

(assert (=> d!14221 (= c!9431 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14221 (and (bvsle #b00000000000000000000000000000000 (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14221 (= (arrayCountValidKeys!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))) lt!29371)))

(declare-fun b!67499 () Bool)

(assert (=> b!67499 (= e!44234 (bvadd #b00000000000000000000000000000001 call!5669))))

(declare-fun b!67500 () Bool)

(assert (=> b!67500 (= e!44233 #b00000000000000000000000000000000)))

(declare-fun b!67501 () Bool)

(assert (=> b!67501 (= e!44233 e!44234)))

(declare-fun c!9432 () Bool)

(assert (=> b!67501 (= c!9432 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!5666 () Bool)

(assert (=> bm!5666 (= call!5669 (arrayCountValidKeys!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14221 c!9431) b!67500))

(assert (= (and d!14221 (not c!9431)) b!67501))

(assert (= (and b!67501 c!9432) b!67499))

(assert (= (and b!67501 (not c!9432)) b!67498))

(assert (= (or b!67499 b!67498) bm!5666))

(assert (=> b!67501 m!62585))

(assert (=> b!67501 m!62585))

(assert (=> b!67501 m!62595))

(declare-fun m!62761 () Bool)

(assert (=> bm!5666 m!62761))

(assert (=> b!66953 d!14221))

(declare-fun d!14223 () Bool)

(assert (=> d!14223 (= (apply!72 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28873) (apply!72 lt!28863 lt!28873))))

(assert (=> d!14223 true))

(declare-fun _$34!784 () Unit!1838)

(assert (=> d!14223 (= (choose!371 lt!28863 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28873) _$34!784)))

(declare-fun bs!2909 () Bool)

(assert (= bs!2909 d!14223))

(assert (=> bs!2909 m!61371))

(assert (=> bs!2909 m!61371))

(assert (=> bs!2909 m!61373))

(assert (=> bs!2909 m!61375))

(assert (=> d!13911 d!14223))

(declare-fun d!14225 () Bool)

(declare-fun e!44236 () Bool)

(assert (=> d!14225 e!44236))

(declare-fun res!36431 () Bool)

(assert (=> d!14225 (=> res!36431 e!44236)))

(declare-fun lt!29374 () Bool)

(assert (=> d!14225 (= res!36431 (not lt!29374))))

(declare-fun lt!29372 () Bool)

(assert (=> d!14225 (= lt!29374 lt!29372)))

(declare-fun lt!29375 () Unit!1838)

(declare-fun e!44235 () Unit!1838)

(assert (=> d!14225 (= lt!29375 e!44235)))

(declare-fun c!9433 () Bool)

(assert (=> d!14225 (= c!9433 lt!29372)))

(assert (=> d!14225 (= lt!29372 (containsKey!134 (toList!717 lt!28863) lt!28873))))

(assert (=> d!14225 (= (contains!710 lt!28863 lt!28873) lt!29374)))

(declare-fun b!67502 () Bool)

(declare-fun lt!29373 () Unit!1838)

(assert (=> b!67502 (= e!44235 lt!29373)))

(assert (=> b!67502 (= lt!29373 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28863) lt!28873))))

(assert (=> b!67502 (isDefined!83 (getValueByKey!130 (toList!717 lt!28863) lt!28873))))

(declare-fun b!67503 () Bool)

(declare-fun Unit!1879 () Unit!1838)

(assert (=> b!67503 (= e!44235 Unit!1879)))

(declare-fun b!67504 () Bool)

(assert (=> b!67504 (= e!44236 (isDefined!83 (getValueByKey!130 (toList!717 lt!28863) lt!28873)))))

(assert (= (and d!14225 c!9433) b!67502))

(assert (= (and d!14225 (not c!9433)) b!67503))

(assert (= (and d!14225 (not res!36431)) b!67504))

(declare-fun m!62763 () Bool)

(assert (=> d!14225 m!62763))

(declare-fun m!62765 () Bool)

(assert (=> b!67502 m!62765))

(assert (=> b!67502 m!61861))

(assert (=> b!67502 m!61861))

(declare-fun m!62767 () Bool)

(assert (=> b!67502 m!62767))

(assert (=> b!67504 m!61861))

(assert (=> b!67504 m!61861))

(assert (=> b!67504 m!62767))

(assert (=> d!13911 d!14225))

(assert (=> d!13911 d!13921))

(assert (=> d!13911 d!13923))

(assert (=> d!13911 d!13925))

(declare-fun d!14227 () Bool)

(assert (=> d!14227 (= (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67104 d!14227))

(declare-fun d!14229 () Bool)

(assert (=> d!14229 (= (size!2074 newMap!16) (bvadd (_size!385 newMap!16) (bvsdiv (bvadd (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!66931 d!14229))

(declare-fun d!14231 () Bool)

(assert (=> d!14231 (= (isDefined!83 (getValueByKey!130 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803)))) (not (isEmpty!309 (getValueByKey!130 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))))

(declare-fun bs!2910 () Bool)

(assert (= bs!2910 d!14231))

(assert (=> bs!2910 m!62007))

(declare-fun m!62769 () Bool)

(assert (=> bs!2910 m!62769))

(assert (=> b!67095 d!14231))

(declare-fun d!14233 () Bool)

(declare-fun c!9434 () Bool)

(assert (=> d!14233 (= c!9434 (and ((_ is Cons!1462) (toList!717 call!5538)) (= (_1!1057 (h!2046 (toList!717 call!5538))) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803)))))))

(declare-fun e!44237 () Option!136)

(assert (=> d!14233 (= (getValueByKey!130 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))) e!44237)))

(declare-fun b!67506 () Bool)

(declare-fun e!44238 () Option!136)

(assert (=> b!67506 (= e!44237 e!44238)))

(declare-fun c!9435 () Bool)

(assert (=> b!67506 (= c!9435 (and ((_ is Cons!1462) (toList!717 call!5538)) (not (= (_1!1057 (h!2046 (toList!717 call!5538))) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))))

(declare-fun b!67505 () Bool)

(assert (=> b!67505 (= e!44237 (Some!135 (_2!1057 (h!2046 (toList!717 call!5538)))))))

(declare-fun b!67507 () Bool)

(assert (=> b!67507 (= e!44238 (getValueByKey!130 (t!4948 (toList!717 call!5538)) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(declare-fun b!67508 () Bool)

(assert (=> b!67508 (= e!44238 None!134)))

(assert (= (and d!14233 c!9434) b!67505))

(assert (= (and d!14233 (not c!9434)) b!67506))

(assert (= (and b!67506 c!9435) b!67507))

(assert (= (and b!67506 (not c!9435)) b!67508))

(assert (=> b!67507 m!61335))

(declare-fun m!62771 () Bool)

(assert (=> b!67507 m!62771))

(assert (=> b!67095 d!14233))

(declare-fun d!14235 () Bool)

(assert (=> d!14235 (= (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866)) (not (isEmpty!309 (getValueByKey!130 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866))))))

(declare-fun bs!2911 () Bool)

(assert (= bs!2911 d!14235))

(assert (=> bs!2911 m!61885))

(declare-fun m!62773 () Bool)

(assert (=> bs!2911 m!62773))

(assert (=> b!67007 d!14235))

(declare-fun d!14237 () Bool)

(declare-fun c!9436 () Bool)

(assert (=> d!14237 (= c!9436 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28866)))))

(declare-fun e!44239 () Option!136)

(assert (=> d!14237 (= (getValueByKey!130 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866) e!44239)))

(declare-fun b!67510 () Bool)

(declare-fun e!44240 () Option!136)

(assert (=> b!67510 (= e!44239 e!44240)))

(declare-fun c!9437 () Bool)

(assert (=> b!67510 (= c!9437 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (not (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28866))))))

(declare-fun b!67509 () Bool)

(assert (=> b!67509 (= e!44239 (Some!135 (_2!1057 (h!2046 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun b!67511 () Bool)

(assert (=> b!67511 (= e!44240 (getValueByKey!130 (t!4948 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) lt!28866))))

(declare-fun b!67512 () Bool)

(assert (=> b!67512 (= e!44240 None!134)))

(assert (= (and d!14237 c!9436) b!67509))

(assert (= (and d!14237 (not c!9436)) b!67510))

(assert (= (and b!67510 c!9437) b!67511))

(assert (= (and b!67510 (not c!9437)) b!67512))

(declare-fun m!62775 () Bool)

(assert (=> b!67511 m!62775))

(assert (=> b!67007 d!14237))

(declare-fun d!14239 () Bool)

(declare-fun e!44242 () Bool)

(assert (=> d!14239 e!44242))

(declare-fun res!36432 () Bool)

(assert (=> d!14239 (=> res!36432 e!44242)))

(declare-fun lt!29378 () Bool)

(assert (=> d!14239 (= res!36432 (not lt!29378))))

(declare-fun lt!29376 () Bool)

(assert (=> d!14239 (= lt!29378 lt!29376)))

(declare-fun lt!29379 () Unit!1838)

(declare-fun e!44241 () Unit!1838)

(assert (=> d!14239 (= lt!29379 e!44241)))

(declare-fun c!9438 () Bool)

(assert (=> d!14239 (= c!9438 lt!29376)))

(assert (=> d!14239 (= lt!29376 (containsKey!134 (toList!717 lt!29022) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14239 (= (contains!710 lt!29022 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29378)))

(declare-fun b!67513 () Bool)

(declare-fun lt!29377 () Unit!1838)

(assert (=> b!67513 (= e!44241 lt!29377)))

(assert (=> b!67513 (= lt!29377 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29022) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67513 (isDefined!83 (getValueByKey!130 (toList!717 lt!29022) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67514 () Bool)

(declare-fun Unit!1880 () Unit!1838)

(assert (=> b!67514 (= e!44241 Unit!1880)))

(declare-fun b!67515 () Bool)

(assert (=> b!67515 (= e!44242 (isDefined!83 (getValueByKey!130 (toList!717 lt!29022) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14239 c!9438) b!67513))

(assert (= (and d!14239 (not c!9438)) b!67514))

(assert (= (and d!14239 (not res!36432)) b!67515))

(declare-fun m!62777 () Bool)

(assert (=> d!14239 m!62777))

(declare-fun m!62779 () Bool)

(assert (=> b!67513 m!62779))

(assert (=> b!67513 m!61833))

(assert (=> b!67513 m!61833))

(declare-fun m!62781 () Bool)

(assert (=> b!67513 m!62781))

(assert (=> b!67515 m!61833))

(assert (=> b!67515 m!61833))

(assert (=> b!67515 m!62781))

(assert (=> d!13915 d!14239))

(declare-fun c!9439 () Bool)

(declare-fun d!14241 () Bool)

(assert (=> d!14241 (= c!9439 (and ((_ is Cons!1462) lt!29023) (= (_1!1057 (h!2046 lt!29023)) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44243 () Option!136)

(assert (=> d!14241 (= (getValueByKey!130 lt!29023 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44243)))

(declare-fun b!67517 () Bool)

(declare-fun e!44244 () Option!136)

(assert (=> b!67517 (= e!44243 e!44244)))

(declare-fun c!9440 () Bool)

(assert (=> b!67517 (= c!9440 (and ((_ is Cons!1462) lt!29023) (not (= (_1!1057 (h!2046 lt!29023)) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67516 () Bool)

(assert (=> b!67516 (= e!44243 (Some!135 (_2!1057 (h!2046 lt!29023))))))

(declare-fun b!67518 () Bool)

(assert (=> b!67518 (= e!44244 (getValueByKey!130 (t!4948 lt!29023) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67519 () Bool)

(assert (=> b!67519 (= e!44244 None!134)))

(assert (= (and d!14241 c!9439) b!67516))

(assert (= (and d!14241 (not c!9439)) b!67517))

(assert (= (and b!67517 c!9440) b!67518))

(assert (= (and b!67517 (not c!9440)) b!67519))

(declare-fun m!62783 () Bool)

(assert (=> b!67518 m!62783))

(assert (=> d!13915 d!14241))

(declare-fun d!14243 () Bool)

(assert (=> d!14243 (= (getValueByKey!130 lt!29023 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29380 () Unit!1838)

(assert (=> d!14243 (= lt!29380 (choose!367 lt!29023 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44245 () Bool)

(assert (=> d!14243 e!44245))

(declare-fun res!36433 () Bool)

(assert (=> d!14243 (=> (not res!36433) (not e!44245))))

(assert (=> d!14243 (= res!36433 (isStrictlySorted!289 lt!29023))))

(assert (=> d!14243 (= (lemmaContainsTupThenGetReturnValue!47 lt!29023 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29380)))

(declare-fun b!67520 () Bool)

(declare-fun res!36434 () Bool)

(assert (=> b!67520 (=> (not res!36434) (not e!44245))))

(assert (=> b!67520 (= res!36434 (containsKey!134 lt!29023 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67521 () Bool)

(assert (=> b!67521 (= e!44245 (contains!712 lt!29023 (tuple2!2093 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14243 res!36433) b!67520))

(assert (= (and b!67520 res!36434) b!67521))

(assert (=> d!14243 m!61827))

(declare-fun m!62785 () Bool)

(assert (=> d!14243 m!62785))

(declare-fun m!62787 () Bool)

(assert (=> d!14243 m!62787))

(declare-fun m!62789 () Bool)

(assert (=> b!67520 m!62789))

(declare-fun m!62791 () Bool)

(assert (=> b!67521 m!62791))

(assert (=> d!13915 d!14243))

(declare-fun b!67522 () Bool)

(declare-fun e!44248 () List!1466)

(declare-fun call!5670 () List!1466)

(assert (=> b!67522 (= e!44248 call!5670)))

(declare-fun bm!5667 () Bool)

(declare-fun call!5671 () List!1466)

(declare-fun call!5672 () List!1466)

(assert (=> bm!5667 (= call!5671 call!5672)))

(declare-fun b!67523 () Bool)

(declare-fun e!44250 () Bool)

(declare-fun lt!29381 () List!1466)

(assert (=> b!67523 (= e!44250 (contains!712 lt!29381 (tuple2!2093 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67524 () Bool)

(assert (=> b!67524 (= e!44248 call!5670)))

(declare-fun e!44246 () List!1466)

(declare-fun b!67525 () Bool)

(assert (=> b!67525 (= e!44246 (insertStrictlySorted!50 (t!4948 (toList!717 lt!28874)) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67526 () Bool)

(declare-fun e!44249 () List!1466)

(assert (=> b!67526 (= e!44249 call!5672)))

(declare-fun c!9443 () Bool)

(declare-fun c!9441 () Bool)

(declare-fun b!67527 () Bool)

(assert (=> b!67527 (= e!44246 (ite c!9441 (t!4948 (toList!717 lt!28874)) (ite c!9443 (Cons!1462 (h!2046 (toList!717 lt!28874)) (t!4948 (toList!717 lt!28874))) Nil!1463)))))

(declare-fun d!14245 () Bool)

(assert (=> d!14245 e!44250))

(declare-fun res!36436 () Bool)

(assert (=> d!14245 (=> (not res!36436) (not e!44250))))

(assert (=> d!14245 (= res!36436 (isStrictlySorted!289 lt!29381))))

(assert (=> d!14245 (= lt!29381 e!44249)))

(declare-fun c!9444 () Bool)

(assert (=> d!14245 (= c!9444 (and ((_ is Cons!1462) (toList!717 lt!28874)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28874))) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14245 (isStrictlySorted!289 (toList!717 lt!28874))))

(assert (=> d!14245 (= (insertStrictlySorted!50 (toList!717 lt!28874) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29381)))

(declare-fun bm!5668 () Bool)

(assert (=> bm!5668 (= call!5670 call!5671)))

(declare-fun b!67528 () Bool)

(declare-fun res!36435 () Bool)

(assert (=> b!67528 (=> (not res!36435) (not e!44250))))

(assert (=> b!67528 (= res!36435 (containsKey!134 lt!29381 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67529 () Bool)

(declare-fun e!44247 () List!1466)

(assert (=> b!67529 (= e!44247 call!5671)))

(declare-fun b!67530 () Bool)

(assert (=> b!67530 (= c!9443 (and ((_ is Cons!1462) (toList!717 lt!28874)) (bvsgt (_1!1057 (h!2046 (toList!717 lt!28874))) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67530 (= e!44247 e!44248)))

(declare-fun b!67531 () Bool)

(assert (=> b!67531 (= e!44249 e!44247)))

(assert (=> b!67531 (= c!9441 (and ((_ is Cons!1462) (toList!717 lt!28874)) (= (_1!1057 (h!2046 (toList!717 lt!28874))) (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun bm!5669 () Bool)

(assert (=> bm!5669 (= call!5672 ($colon$colon!63 e!44246 (ite c!9444 (h!2046 (toList!717 lt!28874)) (tuple2!2093 (_1!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9442 () Bool)

(assert (=> bm!5669 (= c!9442 c!9444)))

(assert (= (and d!14245 c!9444) b!67526))

(assert (= (and d!14245 (not c!9444)) b!67531))

(assert (= (and b!67531 c!9441) b!67529))

(assert (= (and b!67531 (not c!9441)) b!67530))

(assert (= (and b!67530 c!9443) b!67524))

(assert (= (and b!67530 (not c!9443)) b!67522))

(assert (= (or b!67524 b!67522) bm!5668))

(assert (= (or b!67529 bm!5668) bm!5667))

(assert (= (or b!67526 bm!5667) bm!5669))

(assert (= (and bm!5669 c!9442) b!67525))

(assert (= (and bm!5669 (not c!9442)) b!67527))

(assert (= (and d!14245 res!36436) b!67528))

(assert (= (and b!67528 res!36435) b!67523))

(declare-fun m!62793 () Bool)

(assert (=> b!67523 m!62793))

(declare-fun m!62795 () Bool)

(assert (=> d!14245 m!62795))

(declare-fun m!62797 () Bool)

(assert (=> d!14245 m!62797))

(declare-fun m!62799 () Bool)

(assert (=> bm!5669 m!62799))

(declare-fun m!62801 () Bool)

(assert (=> b!67528 m!62801))

(declare-fun m!62803 () Bool)

(assert (=> b!67525 m!62803))

(assert (=> d!13915 d!14245))

(declare-fun d!14247 () Bool)

(assert (=> d!14247 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696))))

(declare-fun lt!29382 () Unit!1838)

(assert (=> d!14247 (= lt!29382 (choose!377 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696))))

(declare-fun e!44251 () Bool)

(assert (=> d!14247 e!44251))

(declare-fun res!36437 () Bool)

(assert (=> d!14247 (=> (not res!36437) (not e!44251))))

(assert (=> d!14247 (= res!36437 (isStrictlySorted!289 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)))))))

(assert (=> d!14247 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696) lt!29382)))

(declare-fun b!67532 () Bool)

(assert (=> b!67532 (= e!44251 (containsKey!134 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696))))

(assert (= (and d!14247 res!36437) b!67532))

(assert (=> d!14247 m!62057))

(assert (=> d!14247 m!62057))

(assert (=> d!14247 m!62059))

(declare-fun m!62805 () Bool)

(assert (=> d!14247 m!62805))

(declare-fun m!62807 () Bool)

(assert (=> d!14247 m!62807))

(assert (=> b!67532 m!62053))

(assert (=> b!67114 d!14247))

(declare-fun d!14249 () Bool)

(assert (=> d!14249 (= (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696)) (not (isEmpty!309 (getValueByKey!130 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696))))))

(declare-fun bs!2912 () Bool)

(assert (= bs!2912 d!14249))

(assert (=> bs!2912 m!62057))

(declare-fun m!62809 () Bool)

(assert (=> bs!2912 m!62809))

(assert (=> b!67114 d!14249))

(declare-fun d!14251 () Bool)

(declare-fun c!9445 () Bool)

(assert (=> d!14251 (= c!9445 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))))) lt!28696)))))

(declare-fun e!44252 () Option!136)

(assert (=> d!14251 (= (getValueByKey!130 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696) e!44252)))

(declare-fun b!67534 () Bool)

(declare-fun e!44253 () Option!136)

(assert (=> b!67534 (= e!44252 e!44253)))

(declare-fun c!9446 () Bool)

(assert (=> b!67534 (= c!9446 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)))) (not (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))))) lt!28696))))))

(declare-fun b!67533 () Bool)

(assert (=> b!67533 (= e!44252 (Some!135 (_2!1057 (h!2046 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)))))))))

(declare-fun b!67535 () Bool)

(assert (=> b!67535 (= e!44253 (getValueByKey!130 (t!4948 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)))) lt!28696))))

(declare-fun b!67536 () Bool)

(assert (=> b!67536 (= e!44253 None!134)))

(assert (= (and d!14251 c!9445) b!67533))

(assert (= (and d!14251 (not c!9445)) b!67534))

(assert (= (and b!67534 c!9446) b!67535))

(assert (= (and b!67534 (not c!9446)) b!67536))

(declare-fun m!62811 () Bool)

(assert (=> b!67535 m!62811))

(assert (=> b!67114 d!14251))

(assert (=> b!66895 d!14111))

(declare-fun d!14253 () Bool)

(declare-fun e!44255 () Bool)

(assert (=> d!14253 e!44255))

(declare-fun res!36438 () Bool)

(assert (=> d!14253 (=> res!36438 e!44255)))

(declare-fun lt!29385 () Bool)

(assert (=> d!14253 (= res!36438 (not lt!29385))))

(declare-fun lt!29383 () Bool)

(assert (=> d!14253 (= lt!29385 lt!29383)))

(declare-fun lt!29386 () Unit!1838)

(declare-fun e!44254 () Unit!1838)

(assert (=> d!14253 (= lt!29386 e!44254)))

(declare-fun c!9447 () Bool)

(assert (=> d!14253 (= c!9447 lt!29383)))

(assert (=> d!14253 (= lt!29383 (containsKey!134 (toList!717 (+!89 lt!28954 (tuple2!2093 lt!28952 lt!28951))) lt!28953))))

(assert (=> d!14253 (= (contains!710 (+!89 lt!28954 (tuple2!2093 lt!28952 lt!28951)) lt!28953) lt!29385)))

(declare-fun b!67537 () Bool)

(declare-fun lt!29384 () Unit!1838)

(assert (=> b!67537 (= e!44254 lt!29384)))

(assert (=> b!67537 (= lt!29384 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (+!89 lt!28954 (tuple2!2093 lt!28952 lt!28951))) lt!28953))))

(assert (=> b!67537 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28954 (tuple2!2093 lt!28952 lt!28951))) lt!28953))))

(declare-fun b!67538 () Bool)

(declare-fun Unit!1881 () Unit!1838)

(assert (=> b!67538 (= e!44254 Unit!1881)))

(declare-fun b!67539 () Bool)

(assert (=> b!67539 (= e!44255 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28954 (tuple2!2093 lt!28952 lt!28951))) lt!28953)))))

(assert (= (and d!14253 c!9447) b!67537))

(assert (= (and d!14253 (not c!9447)) b!67538))

(assert (= (and d!14253 (not res!36438)) b!67539))

(declare-fun m!62813 () Bool)

(assert (=> d!14253 m!62813))

(declare-fun m!62815 () Bool)

(assert (=> b!67537 m!62815))

(declare-fun m!62817 () Bool)

(assert (=> b!67537 m!62817))

(assert (=> b!67537 m!62817))

(declare-fun m!62819 () Bool)

(assert (=> b!67537 m!62819))

(assert (=> b!67539 m!62817))

(assert (=> b!67539 m!62817))

(assert (=> b!67539 m!62819))

(assert (=> b!66895 d!14253))

(declare-fun d!14255 () Bool)

(declare-fun e!44256 () Bool)

(assert (=> d!14255 e!44256))

(declare-fun res!36440 () Bool)

(assert (=> d!14255 (=> (not res!36440) (not e!44256))))

(declare-fun lt!29387 () ListLongMap!1403)

(assert (=> d!14255 (= res!36440 (contains!710 lt!29387 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!29388 () List!1466)

(assert (=> d!14255 (= lt!29387 (ListLongMap!1404 lt!29388))))

(declare-fun lt!29389 () Unit!1838)

(declare-fun lt!29390 () Unit!1838)

(assert (=> d!14255 (= lt!29389 lt!29390)))

(assert (=> d!14255 (= (getValueByKey!130 lt!29388 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14255 (= lt!29390 (lemmaContainsTupThenGetReturnValue!47 lt!29388 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14255 (= lt!29388 (insertStrictlySorted!50 (toList!717 call!5604) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14255 (= (+!89 call!5604 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!29387)))

(declare-fun b!67540 () Bool)

(declare-fun res!36439 () Bool)

(assert (=> b!67540 (=> (not res!36439) (not e!44256))))

(assert (=> b!67540 (= res!36439 (= (getValueByKey!130 (toList!717 lt!29387) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!67541 () Bool)

(assert (=> b!67541 (= e!44256 (contains!712 (toList!717 lt!29387) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14255 res!36440) b!67540))

(assert (= (and b!67540 res!36439) b!67541))

(declare-fun m!62821 () Bool)

(assert (=> d!14255 m!62821))

(declare-fun m!62823 () Bool)

(assert (=> d!14255 m!62823))

(declare-fun m!62825 () Bool)

(assert (=> d!14255 m!62825))

(declare-fun m!62827 () Bool)

(assert (=> d!14255 m!62827))

(declare-fun m!62829 () Bool)

(assert (=> b!67540 m!62829))

(declare-fun m!62831 () Bool)

(assert (=> b!67541 m!62831))

(assert (=> b!66895 d!14255))

(declare-fun d!14257 () Bool)

(declare-fun e!44257 () Bool)

(assert (=> d!14257 e!44257))

(declare-fun res!36442 () Bool)

(assert (=> d!14257 (=> (not res!36442) (not e!44257))))

(declare-fun lt!29391 () ListLongMap!1403)

(assert (=> d!14257 (= res!36442 (contains!710 lt!29391 (_1!1057 (tuple2!2093 lt!28952 lt!28951))))))

(declare-fun lt!29392 () List!1466)

(assert (=> d!14257 (= lt!29391 (ListLongMap!1404 lt!29392))))

(declare-fun lt!29393 () Unit!1838)

(declare-fun lt!29394 () Unit!1838)

(assert (=> d!14257 (= lt!29393 lt!29394)))

(assert (=> d!14257 (= (getValueByKey!130 lt!29392 (_1!1057 (tuple2!2093 lt!28952 lt!28951))) (Some!135 (_2!1057 (tuple2!2093 lt!28952 lt!28951))))))

(assert (=> d!14257 (= lt!29394 (lemmaContainsTupThenGetReturnValue!47 lt!29392 (_1!1057 (tuple2!2093 lt!28952 lt!28951)) (_2!1057 (tuple2!2093 lt!28952 lt!28951))))))

(assert (=> d!14257 (= lt!29392 (insertStrictlySorted!50 (toList!717 lt!28954) (_1!1057 (tuple2!2093 lt!28952 lt!28951)) (_2!1057 (tuple2!2093 lt!28952 lt!28951))))))

(assert (=> d!14257 (= (+!89 lt!28954 (tuple2!2093 lt!28952 lt!28951)) lt!29391)))

(declare-fun b!67542 () Bool)

(declare-fun res!36441 () Bool)

(assert (=> b!67542 (=> (not res!36441) (not e!44257))))

(assert (=> b!67542 (= res!36441 (= (getValueByKey!130 (toList!717 lt!29391) (_1!1057 (tuple2!2093 lt!28952 lt!28951))) (Some!135 (_2!1057 (tuple2!2093 lt!28952 lt!28951)))))))

(declare-fun b!67543 () Bool)

(assert (=> b!67543 (= e!44257 (contains!712 (toList!717 lt!29391) (tuple2!2093 lt!28952 lt!28951)))))

(assert (= (and d!14257 res!36442) b!67542))

(assert (= (and b!67542 res!36441) b!67543))

(declare-fun m!62833 () Bool)

(assert (=> d!14257 m!62833))

(declare-fun m!62835 () Bool)

(assert (=> d!14257 m!62835))

(declare-fun m!62837 () Bool)

(assert (=> d!14257 m!62837))

(declare-fun m!62839 () Bool)

(assert (=> d!14257 m!62839))

(declare-fun m!62841 () Bool)

(assert (=> b!67542 m!62841))

(declare-fun m!62843 () Bool)

(assert (=> b!67543 m!62843))

(assert (=> b!66895 d!14257))

(declare-fun d!14259 () Bool)

(assert (=> d!14259 (not (contains!710 (+!89 lt!28954 (tuple2!2093 lt!28952 lt!28951)) lt!28953))))

(declare-fun lt!29395 () Unit!1838)

(assert (=> d!14259 (= lt!29395 (choose!375 lt!28954 lt!28952 lt!28951 lt!28953))))

(declare-fun e!44258 () Bool)

(assert (=> d!14259 e!44258))

(declare-fun res!36443 () Bool)

(assert (=> d!14259 (=> (not res!36443) (not e!44258))))

(assert (=> d!14259 (= res!36443 (not (contains!710 lt!28954 lt!28953)))))

(assert (=> d!14259 (= (addStillNotContains!21 lt!28954 lt!28952 lt!28951 lt!28953) lt!29395)))

(declare-fun b!67544 () Bool)

(assert (=> b!67544 (= e!44258 (not (= lt!28952 lt!28953)))))

(assert (= (and d!14259 res!36443) b!67544))

(assert (=> d!14259 m!61623))

(assert (=> d!14259 m!61623))

(assert (=> d!14259 m!61625))

(declare-fun m!62845 () Bool)

(assert (=> d!14259 m!62845))

(declare-fun m!62847 () Bool)

(assert (=> d!14259 m!62847))

(assert (=> b!66895 d!14259))

(declare-fun d!14261 () Bool)

(declare-fun e!44260 () Bool)

(assert (=> d!14261 e!44260))

(declare-fun res!36444 () Bool)

(assert (=> d!14261 (=> res!36444 e!44260)))

(declare-fun lt!29398 () Bool)

(assert (=> d!14261 (= res!36444 (not lt!29398))))

(declare-fun lt!29396 () Bool)

(assert (=> d!14261 (= lt!29398 lt!29396)))

(declare-fun lt!29399 () Unit!1838)

(declare-fun e!44259 () Unit!1838)

(assert (=> d!14261 (= lt!29399 e!44259)))

(declare-fun c!9448 () Bool)

(assert (=> d!14261 (= c!9448 lt!29396)))

(assert (=> d!14261 (= lt!29396 (containsKey!134 (toList!717 lt!29205) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> d!14261 (= (contains!710 lt!29205 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) lt!29398)))

(declare-fun b!67545 () Bool)

(declare-fun lt!29397 () Unit!1838)

(assert (=> b!67545 (= e!44259 lt!29397)))

(assert (=> b!67545 (= lt!29397 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29205) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> b!67545 (isDefined!83 (getValueByKey!130 (toList!717 lt!29205) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!67546 () Bool)

(declare-fun Unit!1882 () Unit!1838)

(assert (=> b!67546 (= e!44259 Unit!1882)))

(declare-fun b!67547 () Bool)

(assert (=> b!67547 (= e!44260 (isDefined!83 (getValueByKey!130 (toList!717 lt!29205) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(assert (= (and d!14261 c!9448) b!67545))

(assert (= (and d!14261 (not c!9448)) b!67546))

(assert (= (and d!14261 (not res!36444)) b!67547))

(declare-fun m!62849 () Bool)

(assert (=> d!14261 m!62849))

(declare-fun m!62851 () Bool)

(assert (=> b!67545 m!62851))

(assert (=> b!67545 m!62147))

(assert (=> b!67545 m!62147))

(declare-fun m!62853 () Bool)

(assert (=> b!67545 m!62853))

(assert (=> b!67547 m!62147))

(assert (=> b!67547 m!62147))

(assert (=> b!67547 m!62853))

(assert (=> d!13995 d!14261))

(declare-fun d!14263 () Bool)

(declare-fun c!9449 () Bool)

(assert (=> d!14263 (= c!9449 (and ((_ is Cons!1462) lt!29206) (= (_1!1057 (h!2046 lt!29206)) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun e!44261 () Option!136)

(assert (=> d!14263 (= (getValueByKey!130 lt!29206 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) e!44261)))

(declare-fun b!67549 () Bool)

(declare-fun e!44262 () Option!136)

(assert (=> b!67549 (= e!44261 e!44262)))

(declare-fun c!9450 () Bool)

(assert (=> b!67549 (= c!9450 (and ((_ is Cons!1462) lt!29206) (not (= (_1!1057 (h!2046 lt!29206)) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))))

(declare-fun b!67548 () Bool)

(assert (=> b!67548 (= e!44261 (Some!135 (_2!1057 (h!2046 lt!29206))))))

(declare-fun b!67550 () Bool)

(assert (=> b!67550 (= e!44262 (getValueByKey!130 (t!4948 lt!29206) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!67551 () Bool)

(assert (=> b!67551 (= e!44262 None!134)))

(assert (= (and d!14263 c!9449) b!67548))

(assert (= (and d!14263 (not c!9449)) b!67549))

(assert (= (and b!67549 c!9450) b!67550))

(assert (= (and b!67549 (not c!9450)) b!67551))

(declare-fun m!62855 () Bool)

(assert (=> b!67550 m!62855))

(assert (=> d!13995 d!14263))

(declare-fun d!14265 () Bool)

(assert (=> d!14265 (= (getValueByKey!130 lt!29206 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) (Some!135 (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun lt!29400 () Unit!1838)

(assert (=> d!14265 (= lt!29400 (choose!367 lt!29206 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun e!44263 () Bool)

(assert (=> d!14265 e!44263))

(declare-fun res!36445 () Bool)

(assert (=> d!14265 (=> (not res!36445) (not e!44263))))

(assert (=> d!14265 (= res!36445 (isStrictlySorted!289 lt!29206))))

(assert (=> d!14265 (= (lemmaContainsTupThenGetReturnValue!47 lt!29206 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) lt!29400)))

(declare-fun b!67552 () Bool)

(declare-fun res!36446 () Bool)

(assert (=> b!67552 (=> (not res!36446) (not e!44263))))

(assert (=> b!67552 (= res!36446 (containsKey!134 lt!29206 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!67553 () Bool)

(assert (=> b!67553 (= e!44263 (contains!712 lt!29206 (tuple2!2093 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(assert (= (and d!14265 res!36445) b!67552))

(assert (= (and b!67552 res!36446) b!67553))

(assert (=> d!14265 m!62141))

(declare-fun m!62857 () Bool)

(assert (=> d!14265 m!62857))

(declare-fun m!62859 () Bool)

(assert (=> d!14265 m!62859))

(declare-fun m!62861 () Bool)

(assert (=> b!67552 m!62861))

(declare-fun m!62863 () Bool)

(assert (=> b!67553 m!62863))

(assert (=> d!13995 d!14265))

(declare-fun b!67554 () Bool)

(declare-fun e!44266 () List!1466)

(declare-fun call!5673 () List!1466)

(assert (=> b!67554 (= e!44266 call!5673)))

(declare-fun bm!5670 () Bool)

(declare-fun call!5674 () List!1466)

(declare-fun call!5675 () List!1466)

(assert (=> bm!5670 (= call!5674 call!5675)))

(declare-fun lt!29401 () List!1466)

(declare-fun e!44268 () Bool)

(declare-fun b!67555 () Bool)

(assert (=> b!67555 (= e!44268 (contains!712 lt!29401 (tuple2!2093 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun b!67556 () Bool)

(assert (=> b!67556 (= e!44266 call!5673)))

(declare-fun b!67557 () Bool)

(declare-fun e!44264 () List!1466)

(assert (=> b!67557 (= e!44264 (insertStrictlySorted!50 (t!4948 (toList!717 e!43715)) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!67558 () Bool)

(declare-fun e!44267 () List!1466)

(assert (=> b!67558 (= e!44267 call!5675)))

(declare-fun c!9453 () Bool)

(declare-fun c!9451 () Bool)

(declare-fun b!67559 () Bool)

(assert (=> b!67559 (= e!44264 (ite c!9451 (t!4948 (toList!717 e!43715)) (ite c!9453 (Cons!1462 (h!2046 (toList!717 e!43715)) (t!4948 (toList!717 e!43715))) Nil!1463)))))

(declare-fun d!14267 () Bool)

(assert (=> d!14267 e!44268))

(declare-fun res!36448 () Bool)

(assert (=> d!14267 (=> (not res!36448) (not e!44268))))

(assert (=> d!14267 (= res!36448 (isStrictlySorted!289 lt!29401))))

(assert (=> d!14267 (= lt!29401 e!44267)))

(declare-fun c!9454 () Bool)

(assert (=> d!14267 (= c!9454 (and ((_ is Cons!1462) (toList!717 e!43715)) (bvslt (_1!1057 (h!2046 (toList!717 e!43715))) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(assert (=> d!14267 (isStrictlySorted!289 (toList!717 e!43715))))

(assert (=> d!14267 (= (insertStrictlySorted!50 (toList!717 e!43715) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) lt!29401)))

(declare-fun bm!5671 () Bool)

(assert (=> bm!5671 (= call!5673 call!5674)))

(declare-fun b!67560 () Bool)

(declare-fun res!36447 () Bool)

(assert (=> b!67560 (=> (not res!36447) (not e!44268))))

(assert (=> b!67560 (= res!36447 (containsKey!134 lt!29401 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!67561 () Bool)

(declare-fun e!44265 () List!1466)

(assert (=> b!67561 (= e!44265 call!5674)))

(declare-fun b!67562 () Bool)

(assert (=> b!67562 (= c!9453 (and ((_ is Cons!1462) (toList!717 e!43715)) (bvsgt (_1!1057 (h!2046 (toList!717 e!43715))) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(assert (=> b!67562 (= e!44265 e!44266)))

(declare-fun b!67563 () Bool)

(assert (=> b!67563 (= e!44267 e!44265)))

(assert (=> b!67563 (= c!9451 (and ((_ is Cons!1462) (toList!717 e!43715)) (= (_1!1057 (h!2046 (toList!717 e!43715))) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun bm!5672 () Bool)

(assert (=> bm!5672 (= call!5675 ($colon$colon!63 e!44264 (ite c!9454 (h!2046 (toList!717 e!43715)) (tuple2!2093 (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (_2!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))))

(declare-fun c!9452 () Bool)

(assert (=> bm!5672 (= c!9452 c!9454)))

(assert (= (and d!14267 c!9454) b!67558))

(assert (= (and d!14267 (not c!9454)) b!67563))

(assert (= (and b!67563 c!9451) b!67561))

(assert (= (and b!67563 (not c!9451)) b!67562))

(assert (= (and b!67562 c!9453) b!67556))

(assert (= (and b!67562 (not c!9453)) b!67554))

(assert (= (or b!67556 b!67554) bm!5671))

(assert (= (or b!67561 bm!5671) bm!5670))

(assert (= (or b!67558 bm!5670) bm!5672))

(assert (= (and bm!5672 c!9452) b!67557))

(assert (= (and bm!5672 (not c!9452)) b!67559))

(assert (= (and d!14267 res!36448) b!67560))

(assert (= (and b!67560 res!36447) b!67555))

(declare-fun m!62865 () Bool)

(assert (=> b!67555 m!62865))

(declare-fun m!62867 () Bool)

(assert (=> d!14267 m!62867))

(declare-fun m!62869 () Bool)

(assert (=> d!14267 m!62869))

(declare-fun m!62871 () Bool)

(assert (=> bm!5672 m!62871))

(declare-fun m!62873 () Bool)

(assert (=> b!67560 m!62873))

(declare-fun m!62875 () Bool)

(assert (=> b!67557 m!62875))

(assert (=> d!13995 d!14267))

(declare-fun d!14269 () Bool)

(assert (=> d!14269 (= (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28860)) (v!2482 (getValueByKey!130 (toList!717 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28860)))))

(assert (=> d!13937 d!14269))

(declare-fun d!14271 () Bool)

(declare-fun c!9455 () Bool)

(assert (=> d!14271 (= c!9455 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28860)))))

(declare-fun e!44269 () Option!136)

(assert (=> d!14271 (= (getValueByKey!130 (toList!717 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28860) e!44269)))

(declare-fun b!67565 () Bool)

(declare-fun e!44270 () Option!136)

(assert (=> b!67565 (= e!44269 e!44270)))

(declare-fun c!9456 () Bool)

(assert (=> b!67565 (= c!9456 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) (not (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28860))))))

(declare-fun b!67564 () Bool)

(assert (=> b!67564 (= e!44269 (Some!135 (_2!1057 (h!2046 (toList!717 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun b!67566 () Bool)

(assert (=> b!67566 (= e!44270 (getValueByKey!130 (t!4948 (toList!717 (+!89 lt!28871 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))) lt!28860))))

(declare-fun b!67567 () Bool)

(assert (=> b!67567 (= e!44270 None!134)))

(assert (= (and d!14271 c!9455) b!67564))

(assert (= (and d!14271 (not c!9455)) b!67565))

(assert (= (and b!67565 c!9456) b!67566))

(assert (= (and b!67565 (not c!9456)) b!67567))

(declare-fun m!62877 () Bool)

(assert (=> b!67566 m!62877))

(assert (=> d!13937 d!14271))

(declare-fun b!67568 () Bool)

(declare-fun e!44273 () List!1466)

(declare-fun call!5676 () List!1466)

(assert (=> b!67568 (= e!44273 call!5676)))

(declare-fun bm!5673 () Bool)

(declare-fun call!5677 () List!1466)

(declare-fun call!5678 () List!1466)

(assert (=> bm!5673 (= call!5677 call!5678)))

(declare-fun b!67569 () Bool)

(declare-fun e!44275 () Bool)

(declare-fun lt!29402 () List!1466)

(assert (=> b!67569 (= e!44275 (contains!712 lt!29402 (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun b!67570 () Bool)

(assert (=> b!67570 (= e!44273 call!5676)))

(declare-fun b!67571 () Bool)

(declare-fun e!44271 () List!1466)

(assert (=> b!67571 (= e!44271 (insertStrictlySorted!50 (t!4948 (t!4948 (toList!717 lt!28620))) (_1!1057 lt!28617) (_2!1057 lt!28617)))))

(declare-fun b!67572 () Bool)

(declare-fun e!44274 () List!1466)

(assert (=> b!67572 (= e!44274 call!5678)))

(declare-fun c!9459 () Bool)

(declare-fun b!67573 () Bool)

(declare-fun c!9457 () Bool)

(assert (=> b!67573 (= e!44271 (ite c!9457 (t!4948 (t!4948 (toList!717 lt!28620))) (ite c!9459 (Cons!1462 (h!2046 (t!4948 (toList!717 lt!28620))) (t!4948 (t!4948 (toList!717 lt!28620)))) Nil!1463)))))

(declare-fun d!14273 () Bool)

(assert (=> d!14273 e!44275))

(declare-fun res!36450 () Bool)

(assert (=> d!14273 (=> (not res!36450) (not e!44275))))

(assert (=> d!14273 (= res!36450 (isStrictlySorted!289 lt!29402))))

(assert (=> d!14273 (= lt!29402 e!44274)))

(declare-fun c!9460 () Bool)

(assert (=> d!14273 (= c!9460 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28620))) (bvslt (_1!1057 (h!2046 (t!4948 (toList!717 lt!28620)))) (_1!1057 lt!28617))))))

(assert (=> d!14273 (isStrictlySorted!289 (t!4948 (toList!717 lt!28620)))))

(assert (=> d!14273 (= (insertStrictlySorted!50 (t!4948 (toList!717 lt!28620)) (_1!1057 lt!28617) (_2!1057 lt!28617)) lt!29402)))

(declare-fun bm!5674 () Bool)

(assert (=> bm!5674 (= call!5676 call!5677)))

(declare-fun b!67574 () Bool)

(declare-fun res!36449 () Bool)

(assert (=> b!67574 (=> (not res!36449) (not e!44275))))

(assert (=> b!67574 (= res!36449 (containsKey!134 lt!29402 (_1!1057 lt!28617)))))

(declare-fun b!67575 () Bool)

(declare-fun e!44272 () List!1466)

(assert (=> b!67575 (= e!44272 call!5677)))

(declare-fun b!67576 () Bool)

(assert (=> b!67576 (= c!9459 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28620))) (bvsgt (_1!1057 (h!2046 (t!4948 (toList!717 lt!28620)))) (_1!1057 lt!28617))))))

(assert (=> b!67576 (= e!44272 e!44273)))

(declare-fun b!67577 () Bool)

(assert (=> b!67577 (= e!44274 e!44272)))

(assert (=> b!67577 (= c!9457 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28620))) (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28620)))) (_1!1057 lt!28617))))))

(declare-fun bm!5675 () Bool)

(assert (=> bm!5675 (= call!5678 ($colon$colon!63 e!44271 (ite c!9460 (h!2046 (t!4948 (toList!717 lt!28620))) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617)))))))

(declare-fun c!9458 () Bool)

(assert (=> bm!5675 (= c!9458 c!9460)))

(assert (= (and d!14273 c!9460) b!67572))

(assert (= (and d!14273 (not c!9460)) b!67577))

(assert (= (and b!67577 c!9457) b!67575))

(assert (= (and b!67577 (not c!9457)) b!67576))

(assert (= (and b!67576 c!9459) b!67570))

(assert (= (and b!67576 (not c!9459)) b!67568))

(assert (= (or b!67570 b!67568) bm!5674))

(assert (= (or b!67575 bm!5674) bm!5673))

(assert (= (or b!67572 bm!5673) bm!5675))

(assert (= (and bm!5675 c!9458) b!67571))

(assert (= (and bm!5675 (not c!9458)) b!67573))

(assert (= (and d!14273 res!36450) b!67574))

(assert (= (and b!67574 res!36449) b!67569))

(declare-fun m!62879 () Bool)

(assert (=> b!67569 m!62879))

(declare-fun m!62881 () Bool)

(assert (=> d!14273 m!62881))

(assert (=> d!14273 m!62709))

(declare-fun m!62883 () Bool)

(assert (=> bm!5675 m!62883))

(declare-fun m!62885 () Bool)

(assert (=> b!67574 m!62885))

(declare-fun m!62887 () Bool)

(assert (=> b!67571 m!62887))

(assert (=> b!66775 d!14273))

(declare-fun d!14275 () Bool)

(declare-fun e!44277 () Bool)

(assert (=> d!14275 e!44277))

(declare-fun res!36451 () Bool)

(assert (=> d!14275 (=> res!36451 e!44277)))

(declare-fun lt!29405 () Bool)

(assert (=> d!14275 (= res!36451 (not lt!29405))))

(declare-fun lt!29403 () Bool)

(assert (=> d!14275 (= lt!29405 lt!29403)))

(declare-fun lt!29406 () Unit!1838)

(declare-fun e!44276 () Unit!1838)

(assert (=> d!14275 (= lt!29406 e!44276)))

(declare-fun c!9461 () Bool)

(assert (=> d!14275 (= c!9461 lt!29403)))

(assert (=> d!14275 (= lt!29403 (containsKey!134 (toList!717 lt!29012) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14275 (= (contains!710 lt!29012 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29405)))

(declare-fun b!67578 () Bool)

(declare-fun lt!29404 () Unit!1838)

(assert (=> b!67578 (= e!44276 lt!29404)))

(assert (=> b!67578 (= lt!29404 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29012) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67578 (isDefined!83 (getValueByKey!130 (toList!717 lt!29012) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67579 () Bool)

(declare-fun Unit!1883 () Unit!1838)

(assert (=> b!67579 (= e!44276 Unit!1883)))

(declare-fun b!67580 () Bool)

(assert (=> b!67580 (= e!44277 (isDefined!83 (getValueByKey!130 (toList!717 lt!29012) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14275 c!9461) b!67578))

(assert (= (and d!14275 (not c!9461)) b!67579))

(assert (= (and d!14275 (not res!36451)) b!67580))

(declare-fun m!62889 () Bool)

(assert (=> d!14275 m!62889))

(declare-fun m!62891 () Bool)

(assert (=> b!67578 m!62891))

(assert (=> b!67578 m!62325))

(assert (=> b!67578 m!62325))

(declare-fun m!62893 () Bool)

(assert (=> b!67578 m!62893))

(assert (=> b!67580 m!62325))

(assert (=> b!67580 m!62325))

(assert (=> b!67580 m!62893))

(assert (=> bm!5611 d!14275))

(declare-fun b!67581 () Bool)

(declare-fun e!44278 () Bool)

(declare-fun e!44280 () Bool)

(assert (=> b!67581 (= e!44278 e!44280)))

(declare-fun lt!29408 () (_ BitVec 64))

(assert (=> b!67581 (= lt!29408 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000))))

(declare-fun lt!29409 () Unit!1838)

(assert (=> b!67581 (= lt!29409 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3787 (_2!1058 lt!28812)) lt!29408 #b00000000000000000000000000000000))))

(assert (=> b!67581 (arrayContainsKey!0 (_keys!3787 (_2!1058 lt!28812)) lt!29408 #b00000000000000000000000000000000)))

(declare-fun lt!29407 () Unit!1838)

(assert (=> b!67581 (= lt!29407 lt!29409)))

(declare-fun res!36452 () Bool)

(assert (=> b!67581 (= res!36452 (= (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000) (_keys!3787 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812))) (Found!233 #b00000000000000000000000000000000)))))

(assert (=> b!67581 (=> (not res!36452) (not e!44280))))

(declare-fun bm!5676 () Bool)

(declare-fun call!5679 () Bool)

(assert (=> bm!5676 (= call!5679 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3787 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812))))))

(declare-fun d!14277 () Bool)

(declare-fun res!36453 () Bool)

(declare-fun e!44279 () Bool)

(assert (=> d!14277 (=> res!36453 e!44279)))

(assert (=> d!14277 (= res!36453 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))))))

(assert (=> d!14277 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812))) e!44279)))

(declare-fun b!67582 () Bool)

(assert (=> b!67582 (= e!44280 call!5679)))

(declare-fun b!67583 () Bool)

(assert (=> b!67583 (= e!44278 call!5679)))

(declare-fun b!67584 () Bool)

(assert (=> b!67584 (= e!44279 e!44278)))

(declare-fun c!9462 () Bool)

(assert (=> b!67584 (= c!9462 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000)))))

(assert (= (and d!14277 (not res!36453)) b!67584))

(assert (= (and b!67584 c!9462) b!67581))

(assert (= (and b!67584 (not c!9462)) b!67583))

(assert (= (and b!67581 res!36452) b!67582))

(assert (= (or b!67582 b!67583) bm!5676))

(assert (=> b!67581 m!62645))

(declare-fun m!62895 () Bool)

(assert (=> b!67581 m!62895))

(declare-fun m!62897 () Bool)

(assert (=> b!67581 m!62897))

(assert (=> b!67581 m!62645))

(declare-fun m!62899 () Bool)

(assert (=> b!67581 m!62899))

(declare-fun m!62901 () Bool)

(assert (=> bm!5676 m!62901))

(assert (=> b!67584 m!62645))

(assert (=> b!67584 m!62645))

(assert (=> b!67584 m!62651))

(assert (=> b!66915 d!14277))

(declare-fun d!14279 () Bool)

(declare-fun e!44282 () Bool)

(assert (=> d!14279 e!44282))

(declare-fun res!36454 () Bool)

(assert (=> d!14279 (=> res!36454 e!44282)))

(declare-fun lt!29412 () Bool)

(assert (=> d!14279 (= res!36454 (not lt!29412))))

(declare-fun lt!29410 () Bool)

(assert (=> d!14279 (= lt!29412 lt!29410)))

(declare-fun lt!29413 () Unit!1838)

(declare-fun e!44281 () Unit!1838)

(assert (=> d!14279 (= lt!29413 e!44281)))

(declare-fun c!9463 () Bool)

(assert (=> d!14279 (= c!9463 lt!29410)))

(assert (=> d!14279 (= lt!29410 (containsKey!134 (toList!717 lt!28955) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14279 (= (contains!710 lt!28955 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29412)))

(declare-fun b!67585 () Bool)

(declare-fun lt!29411 () Unit!1838)

(assert (=> b!67585 (= e!44281 lt!29411)))

(assert (=> b!67585 (= lt!29411 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28955) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67585 (isDefined!83 (getValueByKey!130 (toList!717 lt!28955) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67586 () Bool)

(declare-fun Unit!1884 () Unit!1838)

(assert (=> b!67586 (= e!44281 Unit!1884)))

(declare-fun b!67587 () Bool)

(assert (=> b!67587 (= e!44282 (isDefined!83 (getValueByKey!130 (toList!717 lt!28955) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14279 c!9463) b!67585))

(assert (= (and d!14279 (not c!9463)) b!67586))

(assert (= (and d!14279 (not res!36454)) b!67587))

(declare-fun m!62903 () Bool)

(assert (=> d!14279 m!62903))

(declare-fun m!62905 () Bool)

(assert (=> b!67585 m!62905))

(declare-fun m!62907 () Bool)

(assert (=> b!67585 m!62907))

(assert (=> b!67585 m!62907))

(declare-fun m!62909 () Bool)

(assert (=> b!67585 m!62909))

(assert (=> b!67587 m!62907))

(assert (=> b!67587 m!62907))

(assert (=> b!67587 m!62909))

(assert (=> d!13857 d!14279))

(assert (=> d!13857 d!13777))

(assert (=> d!13873 d!13871))

(assert (=> d!13873 d!13869))

(assert (=> d!13873 d!13875))

(assert (=> d!13873 d!13867))

(declare-fun d!14281 () Bool)

(assert (=> d!14281 (= (apply!72 lt!28913 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1120 (getValueByKey!130 (toList!717 lt!28913) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2913 () Bool)

(assert (= bs!2913 d!14281))

(assert (=> bs!2913 m!61465))

(declare-fun m!62911 () Bool)

(assert (=> bs!2913 m!62911))

(assert (=> bs!2913 m!62911))

(declare-fun m!62913 () Bool)

(assert (=> bs!2913 m!62913))

(assert (=> b!66790 d!14281))

(declare-fun d!14283 () Bool)

(declare-fun c!9464 () Bool)

(assert (=> d!14283 (= c!9464 ((_ is ValueCellFull!882) (select (arr!1836 (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!44283 () V!2915)

(assert (=> d!14283 (= (get!1116 (select (arr!1836 (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44283)))

(declare-fun b!67588 () Bool)

(assert (=> b!67588 (= e!44283 (get!1118 (select (arr!1836 (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67589 () Bool)

(assert (=> b!67589 (= e!44283 (get!1119 (select (arr!1836 (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14283 c!9464) b!67588))

(assert (= (and d!14283 (not c!9464)) b!67589))

(assert (=> b!67588 m!61495))

(assert (=> b!67588 m!61491))

(declare-fun m!62915 () Bool)

(assert (=> b!67588 m!62915))

(assert (=> b!67589 m!61495))

(assert (=> b!67589 m!61491))

(declare-fun m!62917 () Bool)

(assert (=> b!67589 m!62917))

(assert (=> b!66790 d!14283))

(declare-fun d!14285 () Bool)

(declare-fun lt!29414 () Bool)

(assert (=> d!14285 (= lt!29414 (select (content!72 (toList!717 lt!28922)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44284 () Bool)

(assert (=> d!14285 (= lt!29414 e!44284)))

(declare-fun res!36455 () Bool)

(assert (=> d!14285 (=> (not res!36455) (not e!44284))))

(assert (=> d!14285 (= res!36455 ((_ is Cons!1462) (toList!717 lt!28922)))))

(assert (=> d!14285 (= (contains!712 (toList!717 lt!28922) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29414)))

(declare-fun b!67590 () Bool)

(declare-fun e!44285 () Bool)

(assert (=> b!67590 (= e!44284 e!44285)))

(declare-fun res!36456 () Bool)

(assert (=> b!67590 (=> res!36456 e!44285)))

(assert (=> b!67590 (= res!36456 (= (h!2046 (toList!717 lt!28922)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67591 () Bool)

(assert (=> b!67591 (= e!44285 (contains!712 (t!4948 (toList!717 lt!28922)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14285 res!36455) b!67590))

(assert (= (and b!67590 (not res!36456)) b!67591))

(declare-fun m!62919 () Bool)

(assert (=> d!14285 m!62919))

(declare-fun m!62921 () Bool)

(assert (=> d!14285 m!62921))

(declare-fun m!62923 () Bool)

(assert (=> b!67591 m!62923))

(assert (=> b!66818 d!14285))

(declare-fun d!14287 () Bool)

(declare-fun c!9465 () Bool)

(assert (=> d!14287 (= c!9465 (and ((_ is Cons!1462) (toList!717 lt!29184)) (= (_1!1057 (h!2046 (toList!717 lt!29184))) (_1!1057 (tuple2!2093 lt!28695 lt!28694)))))))

(declare-fun e!44286 () Option!136)

(assert (=> d!14287 (= (getValueByKey!130 (toList!717 lt!29184) (_1!1057 (tuple2!2093 lt!28695 lt!28694))) e!44286)))

(declare-fun b!67593 () Bool)

(declare-fun e!44287 () Option!136)

(assert (=> b!67593 (= e!44286 e!44287)))

(declare-fun c!9466 () Bool)

(assert (=> b!67593 (= c!9466 (and ((_ is Cons!1462) (toList!717 lt!29184)) (not (= (_1!1057 (h!2046 (toList!717 lt!29184))) (_1!1057 (tuple2!2093 lt!28695 lt!28694))))))))

(declare-fun b!67592 () Bool)

(assert (=> b!67592 (= e!44286 (Some!135 (_2!1057 (h!2046 (toList!717 lt!29184)))))))

(declare-fun b!67594 () Bool)

(assert (=> b!67594 (= e!44287 (getValueByKey!130 (t!4948 (toList!717 lt!29184)) (_1!1057 (tuple2!2093 lt!28695 lt!28694))))))

(declare-fun b!67595 () Bool)

(assert (=> b!67595 (= e!44287 None!134)))

(assert (= (and d!14287 c!9465) b!67592))

(assert (= (and d!14287 (not c!9465)) b!67593))

(assert (= (and b!67593 c!9466) b!67594))

(assert (= (and b!67593 (not c!9466)) b!67595))

(declare-fun m!62925 () Bool)

(assert (=> b!67594 m!62925))

(assert (=> b!67123 d!14287))

(declare-fun d!14289 () Bool)

(declare-fun res!36457 () Bool)

(declare-fun e!44288 () Bool)

(assert (=> d!14289 (=> res!36457 e!44288)))

(assert (=> d!14289 (= res!36457 (and ((_ is Cons!1462) lt!28704) (= (_1!1057 (h!2046 lt!28704)) (_1!1057 lt!28617))))))

(assert (=> d!14289 (= (containsKey!134 lt!28704 (_1!1057 lt!28617)) e!44288)))

(declare-fun b!67596 () Bool)

(declare-fun e!44289 () Bool)

(assert (=> b!67596 (= e!44288 e!44289)))

(declare-fun res!36458 () Bool)

(assert (=> b!67596 (=> (not res!36458) (not e!44289))))

(assert (=> b!67596 (= res!36458 (and (or (not ((_ is Cons!1462) lt!28704)) (bvsle (_1!1057 (h!2046 lt!28704)) (_1!1057 lt!28617))) ((_ is Cons!1462) lt!28704) (bvslt (_1!1057 (h!2046 lt!28704)) (_1!1057 lt!28617))))))

(declare-fun b!67597 () Bool)

(assert (=> b!67597 (= e!44289 (containsKey!134 (t!4948 lt!28704) (_1!1057 lt!28617)))))

(assert (= (and d!14289 (not res!36457)) b!67596))

(assert (= (and b!67596 res!36458) b!67597))

(declare-fun m!62927 () Bool)

(assert (=> b!67597 m!62927))

(assert (=> b!66750 d!14289))

(assert (=> b!66891 d!14069))

(declare-fun d!14291 () Bool)

(declare-fun res!36459 () Bool)

(declare-fun e!44290 () Bool)

(assert (=> d!14291 (=> res!36459 e!44290)))

(assert (=> d!14291 (= res!36459 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))))) lt!28696)))))

(assert (=> d!14291 (= (containsKey!134 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))) lt!28696) e!44290)))

(declare-fun b!67598 () Bool)

(declare-fun e!44291 () Bool)

(assert (=> b!67598 (= e!44290 e!44291)))

(declare-fun res!36460 () Bool)

(assert (=> b!67598 (=> (not res!36460) (not e!44291))))

(assert (=> b!67598 (= res!36460 (and (or (not ((_ is Cons!1462) (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))))) (bvsle (_1!1057 (h!2046 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))))) lt!28696)) ((_ is Cons!1462) (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)))) (bvslt (_1!1057 (h!2046 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694))))) lt!28696)))))

(declare-fun b!67599 () Bool)

(assert (=> b!67599 (= e!44291 (containsKey!134 (t!4948 (toList!717 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)))) lt!28696))))

(assert (= (and d!14291 (not res!36459)) b!67598))

(assert (= (and b!67598 res!36460) b!67599))

(declare-fun m!62929 () Bool)

(assert (=> b!67599 m!62929))

(assert (=> d!13967 d!14291))

(assert (=> d!13861 d!13787))

(assert (=> b!67056 d!14151))

(declare-fun d!14293 () Bool)

(declare-fun e!44292 () Bool)

(assert (=> d!14293 e!44292))

(declare-fun res!36462 () Bool)

(assert (=> d!14293 (=> (not res!36462) (not e!44292))))

(declare-fun lt!29415 () ListLongMap!1403)

(assert (=> d!14293 (= res!36462 (contains!710 lt!29415 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun lt!29416 () List!1466)

(assert (=> d!14293 (= lt!29415 (ListLongMap!1404 lt!29416))))

(declare-fun lt!29417 () Unit!1838)

(declare-fun lt!29418 () Unit!1838)

(assert (=> d!14293 (= lt!29417 lt!29418)))

(assert (=> d!14293 (= (getValueByKey!130 lt!29416 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!14293 (= lt!29418 (lemmaContainsTupThenGetReturnValue!47 lt!29416 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!14293 (= lt!29416 (insertStrictlySorted!50 (toList!717 (map!1136 newMap!16)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!14293 (= (+!89 (map!1136 newMap!16) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) lt!29415)))

(declare-fun b!67600 () Bool)

(declare-fun res!36461 () Bool)

(assert (=> b!67600 (=> (not res!36461) (not e!44292))))

(assert (=> b!67600 (= res!36461 (= (getValueByKey!130 (toList!717 lt!29415) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!67601 () Bool)

(assert (=> b!67601 (= e!44292 (contains!712 (toList!717 lt!29415) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(assert (= (and d!14293 res!36462) b!67600))

(assert (= (and b!67600 res!36461) b!67601))

(declare-fun m!62931 () Bool)

(assert (=> d!14293 m!62931))

(declare-fun m!62933 () Bool)

(assert (=> d!14293 m!62933))

(declare-fun m!62935 () Bool)

(assert (=> d!14293 m!62935))

(declare-fun m!62937 () Bool)

(assert (=> d!14293 m!62937))

(declare-fun m!62939 () Bool)

(assert (=> b!67600 m!62939))

(declare-fun m!62941 () Bool)

(assert (=> b!67601 m!62941))

(assert (=> b!67056 d!14293))

(assert (=> b!67056 d!13801))

(declare-fun d!14295 () Bool)

(declare-fun lt!29419 () Bool)

(assert (=> d!14295 (= lt!29419 (select (content!72 lt!28708) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun e!44293 () Bool)

(assert (=> d!14295 (= lt!29419 e!44293)))

(declare-fun res!36463 () Bool)

(assert (=> d!14295 (=> (not res!36463) (not e!44293))))

(assert (=> d!14295 (= res!36463 ((_ is Cons!1462) lt!28708))))

(assert (=> d!14295 (= (contains!712 lt!28708 (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))) lt!29419)))

(declare-fun b!67602 () Bool)

(declare-fun e!44294 () Bool)

(assert (=> b!67602 (= e!44293 e!44294)))

(declare-fun res!36464 () Bool)

(assert (=> b!67602 (=> res!36464 e!44294)))

(assert (=> b!67602 (= res!36464 (= (h!2046 lt!28708) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun b!67603 () Bool)

(assert (=> b!67603 (= e!44294 (contains!712 (t!4948 lt!28708) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(assert (= (and d!14295 res!36463) b!67602))

(assert (= (and b!67602 (not res!36464)) b!67603))

(declare-fun m!62943 () Bool)

(assert (=> d!14295 m!62943))

(declare-fun m!62945 () Bool)

(assert (=> d!14295 m!62945))

(declare-fun m!62947 () Bool)

(assert (=> b!67603 m!62947))

(assert (=> b!66851 d!14295))

(declare-fun d!14297 () Bool)

(declare-fun res!36465 () Bool)

(declare-fun e!44295 () Bool)

(assert (=> d!14297 (=> res!36465 e!44295)))

(assert (=> d!14297 (= res!36465 (= (select (arr!1835 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14297 (= (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!44295)))

(declare-fun b!67604 () Bool)

(declare-fun e!44296 () Bool)

(assert (=> b!67604 (= e!44295 e!44296)))

(declare-fun res!36466 () Bool)

(assert (=> b!67604 (=> (not res!36466) (not e!44296))))

(assert (=> b!67604 (= res!36466 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67605 () Bool)

(assert (=> b!67605 (= e!44296 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14297 (not res!36465)) b!67604))

(assert (= (and b!67604 res!36466) b!67605))

(declare-fun m!62949 () Bool)

(assert (=> d!14297 m!62949))

(assert (=> b!67605 m!61065))

(declare-fun m!62951 () Bool)

(assert (=> b!67605 m!62951))

(assert (=> b!66888 d!14297))

(declare-fun d!14299 () Bool)

(declare-fun e!44298 () Bool)

(assert (=> d!14299 e!44298))

(declare-fun res!36467 () Bool)

(assert (=> d!14299 (=> res!36467 e!44298)))

(declare-fun lt!29422 () Bool)

(assert (=> d!14299 (= res!36467 (not lt!29422))))

(declare-fun lt!29420 () Bool)

(assert (=> d!14299 (= lt!29422 lt!29420)))

(declare-fun lt!29423 () Unit!1838)

(declare-fun e!44297 () Unit!1838)

(assert (=> d!14299 (= lt!29423 e!44297)))

(declare-fun c!9467 () Bool)

(assert (=> d!14299 (= c!9467 lt!29420)))

(assert (=> d!14299 (= lt!29420 (containsKey!134 (toList!717 lt!28913) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14299 (= (contains!710 lt!28913 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29422)))

(declare-fun b!67606 () Bool)

(declare-fun lt!29421 () Unit!1838)

(assert (=> b!67606 (= e!44297 lt!29421)))

(assert (=> b!67606 (= lt!29421 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28913) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67606 (isDefined!83 (getValueByKey!130 (toList!717 lt!28913) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67607 () Bool)

(declare-fun Unit!1885 () Unit!1838)

(assert (=> b!67607 (= e!44297 Unit!1885)))

(declare-fun b!67608 () Bool)

(assert (=> b!67608 (= e!44298 (isDefined!83 (getValueByKey!130 (toList!717 lt!28913) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14299 c!9467) b!67606))

(assert (= (and d!14299 (not c!9467)) b!67607))

(assert (= (and d!14299 (not res!36467)) b!67608))

(declare-fun m!62953 () Bool)

(assert (=> d!14299 m!62953))

(declare-fun m!62955 () Bool)

(assert (=> b!67606 m!62955))

(assert (=> b!67606 m!62247))

(assert (=> b!67606 m!62247))

(declare-fun m!62957 () Bool)

(assert (=> b!67606 m!62957))

(assert (=> b!67608 m!62247))

(assert (=> b!67608 m!62247))

(assert (=> b!67608 m!62957))

(assert (=> bm!5587 d!14299))

(declare-fun d!14301 () Bool)

(assert (=> d!14301 (= (inRange!0 (ite c!9252 (index!3060 lt!28930) (index!3063 lt!28930)) (mask!6082 newMap!16)) (and (bvsge (ite c!9252 (index!3060 lt!28930) (index!3063 lt!28930)) #b00000000000000000000000000000000) (bvslt (ite c!9252 (index!3060 lt!28930) (index!3063 lt!28930)) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5593 d!14301))

(assert (=> b!67103 d!14227))

(declare-fun d!14303 () Bool)

(assert (=> d!14303 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2914 () Bool)

(assert (= bs!2914 d!14303))

(assert (=> bs!2914 m!61437))

(declare-fun m!62959 () Bool)

(assert (=> bs!2914 m!62959))

(assert (=> b!66784 d!14303))

(declare-fun d!14305 () Bool)

(declare-fun c!9468 () Bool)

(assert (=> d!14305 (= c!9468 (and ((_ is Cons!1462) (toList!717 lt!28877)) (= (_1!1057 (h!2046 (toList!717 lt!28877))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!44299 () Option!136)

(assert (=> d!14305 (= (getValueByKey!130 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000) e!44299)))

(declare-fun b!67610 () Bool)

(declare-fun e!44300 () Option!136)

(assert (=> b!67610 (= e!44299 e!44300)))

(declare-fun c!9469 () Bool)

(assert (=> b!67610 (= c!9469 (and ((_ is Cons!1462) (toList!717 lt!28877)) (not (= (_1!1057 (h!2046 (toList!717 lt!28877))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!67609 () Bool)

(assert (=> b!67609 (= e!44299 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28877)))))))

(declare-fun b!67611 () Bool)

(assert (=> b!67611 (= e!44300 (getValueByKey!130 (t!4948 (toList!717 lt!28877)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67612 () Bool)

(assert (=> b!67612 (= e!44300 None!134)))

(assert (= (and d!14305 c!9468) b!67609))

(assert (= (and d!14305 (not c!9468)) b!67610))

(assert (= (and b!67610 c!9469) b!67611))

(assert (= (and b!67610 (not c!9469)) b!67612))

(declare-fun m!62961 () Bool)

(assert (=> b!67611 m!62961))

(assert (=> b!66784 d!14305))

(declare-fun c!9470 () Bool)

(declare-fun d!14307 () Bool)

(assert (=> d!14307 (= c!9470 (and ((_ is Cons!1462) (toList!717 lt!29205)) (= (_1!1057 (h!2046 (toList!717 lt!29205))) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun e!44301 () Option!136)

(assert (=> d!14307 (= (getValueByKey!130 (toList!717 lt!29205) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))) e!44301)))

(declare-fun b!67614 () Bool)

(declare-fun e!44302 () Option!136)

(assert (=> b!67614 (= e!44301 e!44302)))

(declare-fun c!9471 () Bool)

(assert (=> b!67614 (= c!9471 (and ((_ is Cons!1462) (toList!717 lt!29205)) (not (= (_1!1057 (h!2046 (toList!717 lt!29205))) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))))

(declare-fun b!67613 () Bool)

(assert (=> b!67613 (= e!44301 (Some!135 (_2!1057 (h!2046 (toList!717 lt!29205)))))))

(declare-fun b!67615 () Bool)

(assert (=> b!67615 (= e!44302 (getValueByKey!130 (t!4948 (toList!717 lt!29205)) (_1!1057 (ite c!9195 (ite c!9196 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28616) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!67616 () Bool)

(assert (=> b!67616 (= e!44302 None!134)))

(assert (= (and d!14307 c!9470) b!67613))

(assert (= (and d!14307 (not c!9470)) b!67614))

(assert (= (and b!67614 c!9471) b!67615))

(assert (= (and b!67614 (not c!9471)) b!67616))

(declare-fun m!62963 () Bool)

(assert (=> b!67615 m!62963))

(assert (=> b!67170 d!14307))

(declare-fun d!14309 () Bool)

(declare-fun e!44304 () Bool)

(assert (=> d!14309 e!44304))

(declare-fun res!36468 () Bool)

(assert (=> d!14309 (=> res!36468 e!44304)))

(declare-fun lt!29426 () Bool)

(assert (=> d!14309 (= res!36468 (not lt!29426))))

(declare-fun lt!29424 () Bool)

(assert (=> d!14309 (= lt!29426 lt!29424)))

(declare-fun lt!29427 () Unit!1838)

(declare-fun e!44303 () Unit!1838)

(assert (=> d!14309 (= lt!29427 e!44303)))

(declare-fun c!9472 () Bool)

(assert (=> d!14309 (= c!9472 lt!29424)))

(assert (=> d!14309 (= lt!29424 (containsKey!134 (toList!717 lt!28955) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!14309 (= (contains!710 lt!28955 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!29426)))

(declare-fun b!67617 () Bool)

(declare-fun lt!29425 () Unit!1838)

(assert (=> b!67617 (= e!44303 lt!29425)))

(assert (=> b!67617 (= lt!29425 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28955) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!67617 (isDefined!83 (getValueByKey!130 (toList!717 lt!28955) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!67618 () Bool)

(declare-fun Unit!1886 () Unit!1838)

(assert (=> b!67618 (= e!44303 Unit!1886)))

(declare-fun b!67619 () Bool)

(assert (=> b!67619 (= e!44304 (isDefined!83 (getValueByKey!130 (toList!717 lt!28955) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!14309 c!9472) b!67617))

(assert (= (and d!14309 (not c!9472)) b!67618))

(assert (= (and d!14309 (not res!36468)) b!67619))

(assert (=> d!14309 m!61631))

(declare-fun m!62965 () Bool)

(assert (=> d!14309 m!62965))

(assert (=> b!67617 m!61631))

(declare-fun m!62967 () Bool)

(assert (=> b!67617 m!62967))

(assert (=> b!67617 m!61631))

(assert (=> b!67617 m!62525))

(assert (=> b!67617 m!62525))

(declare-fun m!62969 () Bool)

(assert (=> b!67617 m!62969))

(assert (=> b!67619 m!61631))

(assert (=> b!67619 m!62525))

(assert (=> b!67619 m!62525))

(assert (=> b!67619 m!62969))

(assert (=> b!66902 d!14309))

(assert (=> b!66930 d!14229))

(assert (=> b!66890 d!14069))

(declare-fun d!14311 () Bool)

(assert (=> d!14311 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28707) (_1!1057 lt!28624))) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28707) (_1!1057 lt!28624)))))))

(declare-fun bs!2915 () Bool)

(assert (= bs!2915 d!14311))

(assert (=> bs!2915 m!61273))

(declare-fun m!62971 () Bool)

(assert (=> bs!2915 m!62971))

(assert (=> b!66845 d!14311))

(assert (=> b!66845 d!13881))

(declare-fun b!67620 () Bool)

(declare-fun e!44305 () Bool)

(declare-fun e!44307 () Bool)

(assert (=> b!67620 (= e!44305 e!44307)))

(declare-fun lt!29429 () (_ BitVec 64))

(assert (=> b!67620 (= lt!29429 (select (arr!1835 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!29430 () Unit!1838)

(assert (=> b!67620 (= lt!29430 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3787 newMap!16) lt!29429 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!67620 (arrayContainsKey!0 (_keys!3787 newMap!16) lt!29429 #b00000000000000000000000000000000)))

(declare-fun lt!29428 () Unit!1838)

(assert (=> b!67620 (= lt!29428 lt!29430)))

(declare-fun res!36469 () Bool)

(assert (=> b!67620 (= res!36469 (= (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3787 newMap!16) (mask!6082 newMap!16)) (Found!233 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!67620 (=> (not res!36469) (not e!44307))))

(declare-fun bm!5677 () Bool)

(declare-fun call!5680 () Bool)

(assert (=> bm!5677 (= call!5680 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun d!14313 () Bool)

(declare-fun res!36470 () Bool)

(declare-fun e!44306 () Bool)

(assert (=> d!14313 (=> res!36470 e!44306)))

(assert (=> d!14313 (= res!36470 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14313 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3787 newMap!16) (mask!6082 newMap!16)) e!44306)))

(declare-fun b!67621 () Bool)

(assert (=> b!67621 (= e!44307 call!5680)))

(declare-fun b!67622 () Bool)

(assert (=> b!67622 (= e!44305 call!5680)))

(declare-fun b!67623 () Bool)

(assert (=> b!67623 (= e!44306 e!44305)))

(declare-fun c!9473 () Bool)

(assert (=> b!67623 (= c!9473 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!14313 (not res!36470)) b!67623))

(assert (= (and b!67623 c!9473) b!67620))

(assert (= (and b!67623 (not c!9473)) b!67622))

(assert (= (and b!67620 res!36469) b!67621))

(assert (= (or b!67621 b!67622) bm!5677))

(assert (=> b!67620 m!62949))

(declare-fun m!62973 () Bool)

(assert (=> b!67620 m!62973))

(declare-fun m!62975 () Bool)

(assert (=> b!67620 m!62975))

(assert (=> b!67620 m!62949))

(declare-fun m!62977 () Bool)

(assert (=> b!67620 m!62977))

(declare-fun m!62979 () Bool)

(assert (=> bm!5677 m!62979))

(assert (=> b!67623 m!62949))

(assert (=> b!67623 m!62949))

(declare-fun m!62981 () Bool)

(assert (=> b!67623 m!62981))

(assert (=> bm!5604 d!14313))

(assert (=> bm!5623 d!13853))

(declare-fun d!14315 () Bool)

(assert (=> d!14315 (= (apply!72 lt!29012 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1120 (getValueByKey!130 (toList!717 lt!29012) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2916 () Bool)

(assert (= bs!2916 d!14315))

(assert (=> bs!2916 m!61465))

(declare-fun m!62983 () Bool)

(assert (=> bs!2916 m!62983))

(assert (=> bs!2916 m!62983))

(declare-fun m!62985 () Bool)

(assert (=> bs!2916 m!62985))

(assert (=> b!66967 d!14315))

(declare-fun d!14317 () Bool)

(declare-fun c!9474 () Bool)

(assert (=> d!14317 (= c!9474 ((_ is ValueCellFull!882) (select (arr!1836 (_values!2130 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!44308 () V!2915)

(assert (=> d!14317 (= (get!1116 (select (arr!1836 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44308)))

(declare-fun b!67624 () Bool)

(assert (=> b!67624 (= e!44308 (get!1118 (select (arr!1836 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67625 () Bool)

(assert (=> b!67625 (= e!44308 (get!1119 (select (arr!1836 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14317 c!9474) b!67624))

(assert (= (and d!14317 (not c!9474)) b!67625))

(assert (=> b!67624 m!61799))

(assert (=> b!67624 m!61491))

(declare-fun m!62987 () Bool)

(assert (=> b!67624 m!62987))

(assert (=> b!67625 m!61799))

(assert (=> b!67625 m!61491))

(declare-fun m!62989 () Bool)

(assert (=> b!67625 m!62989))

(assert (=> b!66967 d!14317))

(declare-fun d!14319 () Bool)

(declare-fun lt!29431 () Bool)

(assert (=> d!14319 (= lt!29431 (select (content!72 lt!28943) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun e!44309 () Bool)

(assert (=> d!14319 (= lt!29431 e!44309)))

(declare-fun res!36471 () Bool)

(assert (=> d!14319 (=> (not res!36471) (not e!44309))))

(assert (=> d!14319 (= res!36471 ((_ is Cons!1462) lt!28943))))

(assert (=> d!14319 (= (contains!712 lt!28943 (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))) lt!29431)))

(declare-fun b!67626 () Bool)

(declare-fun e!44310 () Bool)

(assert (=> b!67626 (= e!44309 e!44310)))

(declare-fun res!36472 () Bool)

(assert (=> b!67626 (=> res!36472 e!44310)))

(assert (=> b!67626 (= res!36472 (= (h!2046 lt!28943) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun b!67627 () Bool)

(assert (=> b!67627 (= e!44310 (contains!712 (t!4948 lt!28943) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(assert (= (and d!14319 res!36471) b!67626))

(assert (= (and b!67626 (not res!36472)) b!67627))

(declare-fun m!62991 () Bool)

(assert (=> d!14319 m!62991))

(declare-fun m!62993 () Bool)

(assert (=> d!14319 m!62993))

(declare-fun m!62995 () Bool)

(assert (=> b!67627 m!62995))

(assert (=> b!66872 d!14319))

(declare-fun d!14321 () Bool)

(assert (=> d!14321 (= ($colon$colon!63 e!43800 (ite c!9237 (h!2046 (toList!717 lt!28620)) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617)))) (Cons!1462 (ite c!9237 (h!2046 (toList!717 lt!28620)) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))) e!43800))))

(assert (=> bm!5580 d!14321))

(assert (=> b!67048 d!13831))

(declare-fun d!14323 () Bool)

(declare-fun lt!29432 () Bool)

(assert (=> d!14323 (= lt!29432 (select (content!72 lt!29200) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun e!44311 () Bool)

(assert (=> d!14323 (= lt!29432 e!44311)))

(declare-fun res!36473 () Bool)

(assert (=> d!14323 (=> (not res!36473) (not e!44311))))

(assert (=> d!14323 (= res!36473 ((_ is Cons!1462) lt!29200))))

(assert (=> d!14323 (= (contains!712 lt!29200 (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))) lt!29432)))

(declare-fun b!67628 () Bool)

(declare-fun e!44312 () Bool)

(assert (=> b!67628 (= e!44311 e!44312)))

(declare-fun res!36474 () Bool)

(assert (=> b!67628 (=> res!36474 e!44312)))

(assert (=> b!67628 (= res!36474 (= (h!2046 lt!29200) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun b!67629 () Bool)

(assert (=> b!67629 (= e!44312 (contains!712 (t!4948 lt!29200) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(assert (= (and d!14323 res!36473) b!67628))

(assert (= (and b!67628 (not res!36474)) b!67629))

(declare-fun m!62997 () Bool)

(assert (=> d!14323 m!62997))

(declare-fun m!62999 () Bool)

(assert (=> d!14323 m!62999))

(declare-fun m!63001 () Bool)

(assert (=> b!67629 m!63001))

(assert (=> b!67158 d!14323))

(declare-fun d!14325 () Bool)

(declare-fun e!44314 () Bool)

(assert (=> d!14325 e!44314))

(declare-fun res!36475 () Bool)

(assert (=> d!14325 (=> res!36475 e!44314)))

(declare-fun lt!29435 () Bool)

(assert (=> d!14325 (= res!36475 (not lt!29435))))

(declare-fun lt!29433 () Bool)

(assert (=> d!14325 (= lt!29435 lt!29433)))

(declare-fun lt!29436 () Unit!1838)

(declare-fun e!44313 () Unit!1838)

(assert (=> d!14325 (= lt!29436 e!44313)))

(declare-fun c!9475 () Bool)

(assert (=> d!14325 (= c!9475 lt!29433)))

(assert (=> d!14325 (= lt!29433 (containsKey!134 (toList!717 lt!29012) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14325 (= (contains!710 lt!29012 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) lt!29435)))

(declare-fun b!67630 () Bool)

(declare-fun lt!29434 () Unit!1838)

(assert (=> b!67630 (= e!44313 lt!29434)))

(assert (=> b!67630 (= lt!29434 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29012) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67630 (isDefined!83 (getValueByKey!130 (toList!717 lt!29012) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67631 () Bool)

(declare-fun Unit!1887 () Unit!1838)

(assert (=> b!67631 (= e!44313 Unit!1887)))

(declare-fun b!67632 () Bool)

(assert (=> b!67632 (= e!44314 (isDefined!83 (getValueByKey!130 (toList!717 lt!29012) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14325 c!9475) b!67630))

(assert (= (and d!14325 (not c!9475)) b!67631))

(assert (= (and d!14325 (not res!36475)) b!67632))

(assert (=> d!14325 m!61465))

(declare-fun m!63003 () Bool)

(assert (=> d!14325 m!63003))

(assert (=> b!67630 m!61465))

(declare-fun m!63005 () Bool)

(assert (=> b!67630 m!63005))

(assert (=> b!67630 m!61465))

(assert (=> b!67630 m!62983))

(assert (=> b!67630 m!62983))

(declare-fun m!63007 () Bool)

(assert (=> b!67630 m!63007))

(assert (=> b!67632 m!61465))

(assert (=> b!67632 m!62983))

(assert (=> b!67632 m!62983))

(assert (=> b!67632 m!63007))

(assert (=> b!66980 d!14325))

(declare-fun d!14327 () Bool)

(assert (=> d!14327 (= (apply!72 (+!89 lt!28903 (tuple2!2093 lt!28893 (minValue!2055 newMap!16))) lt!28906) (apply!72 lt!28903 lt!28906))))

(declare-fun lt!29437 () Unit!1838)

(assert (=> d!14327 (= lt!29437 (choose!371 lt!28903 lt!28893 (minValue!2055 newMap!16) lt!28906))))

(declare-fun e!44315 () Bool)

(assert (=> d!14327 e!44315))

(declare-fun res!36476 () Bool)

(assert (=> d!14327 (=> (not res!36476) (not e!44315))))

(assert (=> d!14327 (= res!36476 (contains!710 lt!28903 lt!28906))))

(assert (=> d!14327 (= (addApplyDifferent!48 lt!28903 lt!28893 (minValue!2055 newMap!16) lt!28906) lt!29437)))

(declare-fun b!67633 () Bool)

(assert (=> b!67633 (= e!44315 (not (= lt!28906 lt!28893)))))

(assert (= (and d!14327 res!36476) b!67633))

(declare-fun m!63009 () Bool)

(assert (=> d!14327 m!63009))

(assert (=> d!14327 m!61447))

(assert (=> d!14327 m!61471))

(assert (=> d!14327 m!61447))

(assert (=> d!14327 m!61441))

(declare-fun m!63011 () Bool)

(assert (=> d!14327 m!63011))

(assert (=> b!66789 d!14327))

(declare-fun d!14329 () Bool)

(assert (=> d!14329 (= (apply!72 lt!28899 lt!28909) (get!1120 (getValueByKey!130 (toList!717 lt!28899) lt!28909)))))

(declare-fun bs!2917 () Bool)

(assert (= bs!2917 d!14329))

(declare-fun m!63013 () Bool)

(assert (=> bs!2917 m!63013))

(assert (=> bs!2917 m!63013))

(declare-fun m!63015 () Bool)

(assert (=> bs!2917 m!63015))

(assert (=> b!66789 d!14329))

(declare-fun d!14331 () Bool)

(assert (=> d!14331 (= (apply!72 (+!89 lt!28907 (tuple2!2093 lt!28904 (minValue!2055 newMap!16))) lt!28896) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!28907 (tuple2!2093 lt!28904 (minValue!2055 newMap!16)))) lt!28896)))))

(declare-fun bs!2918 () Bool)

(assert (= bs!2918 d!14331))

(declare-fun m!63017 () Bool)

(assert (=> bs!2918 m!63017))

(assert (=> bs!2918 m!63017))

(declare-fun m!63019 () Bool)

(assert (=> bs!2918 m!63019))

(assert (=> b!66789 d!14331))

(declare-fun d!14333 () Bool)

(declare-fun e!44316 () Bool)

(assert (=> d!14333 e!44316))

(declare-fun res!36478 () Bool)

(assert (=> d!14333 (=> (not res!36478) (not e!44316))))

(declare-fun lt!29438 () ListLongMap!1403)

(assert (=> d!14333 (= res!36478 (contains!710 lt!29438 (_1!1057 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))))))

(declare-fun lt!29439 () List!1466)

(assert (=> d!14333 (= lt!29438 (ListLongMap!1404 lt!29439))))

(declare-fun lt!29440 () Unit!1838)

(declare-fun lt!29441 () Unit!1838)

(assert (=> d!14333 (= lt!29440 lt!29441)))

(assert (=> d!14333 (= (getValueByKey!130 lt!29439 (_1!1057 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))) (Some!135 (_2!1057 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14333 (= lt!29441 (lemmaContainsTupThenGetReturnValue!47 lt!29439 (_1!1057 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) (_2!1057 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14333 (= lt!29439 (insertStrictlySorted!50 (toList!717 lt!28910) (_1!1057 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) (_2!1057 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14333 (= (+!89 lt!28910 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) lt!29438)))

(declare-fun b!67634 () Bool)

(declare-fun res!36477 () Bool)

(assert (=> b!67634 (=> (not res!36477) (not e!44316))))

(assert (=> b!67634 (= res!36477 (= (getValueByKey!130 (toList!717 lt!29438) (_1!1057 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))) (Some!135 (_2!1057 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))))))))

(declare-fun b!67635 () Bool)

(assert (=> b!67635 (= e!44316 (contains!712 (toList!717 lt!29438) (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))))))

(assert (= (and d!14333 res!36478) b!67634))

(assert (= (and b!67634 res!36477) b!67635))

(declare-fun m!63021 () Bool)

(assert (=> d!14333 m!63021))

(declare-fun m!63023 () Bool)

(assert (=> d!14333 m!63023))

(declare-fun m!63025 () Bool)

(assert (=> d!14333 m!63025))

(declare-fun m!63027 () Bool)

(assert (=> d!14333 m!63027))

(declare-fun m!63029 () Bool)

(assert (=> b!67634 m!63029))

(declare-fun m!63031 () Bool)

(assert (=> b!67635 m!63031))

(assert (=> b!66789 d!14333))

(declare-fun d!14335 () Bool)

(declare-fun e!44317 () Bool)

(assert (=> d!14335 e!44317))

(declare-fun res!36480 () Bool)

(assert (=> d!14335 (=> (not res!36480) (not e!44317))))

(declare-fun lt!29442 () ListLongMap!1403)

(assert (=> d!14335 (= res!36480 (contains!710 lt!29442 (_1!1057 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))))))

(declare-fun lt!29443 () List!1466)

(assert (=> d!14335 (= lt!29442 (ListLongMap!1404 lt!29443))))

(declare-fun lt!29444 () Unit!1838)

(declare-fun lt!29445 () Unit!1838)

(assert (=> d!14335 (= lt!29444 lt!29445)))

(assert (=> d!14335 (= (getValueByKey!130 lt!29443 (_1!1057 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))) (Some!135 (_2!1057 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14335 (= lt!29445 (lemmaContainsTupThenGetReturnValue!47 lt!29443 (_1!1057 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) (_2!1057 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14335 (= lt!29443 (insertStrictlySorted!50 (toList!717 lt!28899) (_1!1057 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) (_2!1057 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))))))

(assert (=> d!14335 (= (+!89 lt!28899 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) lt!29442)))

(declare-fun b!67636 () Bool)

(declare-fun res!36479 () Bool)

(assert (=> b!67636 (=> (not res!36479) (not e!44317))))

(assert (=> b!67636 (= res!36479 (= (getValueByKey!130 (toList!717 lt!29442) (_1!1057 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))) (Some!135 (_2!1057 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))))))))

(declare-fun b!67637 () Bool)

(assert (=> b!67637 (= e!44317 (contains!712 (toList!717 lt!29442) (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))))))

(assert (= (and d!14335 res!36480) b!67636))

(assert (= (and b!67636 res!36479) b!67637))

(declare-fun m!63033 () Bool)

(assert (=> d!14335 m!63033))

(declare-fun m!63035 () Bool)

(assert (=> d!14335 m!63035))

(declare-fun m!63037 () Bool)

(assert (=> d!14335 m!63037))

(declare-fun m!63039 () Bool)

(assert (=> d!14335 m!63039))

(declare-fun m!63041 () Bool)

(assert (=> b!67636 m!63041))

(declare-fun m!63043 () Bool)

(assert (=> b!67637 m!63043))

(assert (=> b!66789 d!14335))

(declare-fun call!5681 () ListLongMap!1403)

(declare-fun bm!5678 () Bool)

(assert (=> bm!5678 (= call!5681 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16)))))

(declare-fun b!67638 () Bool)

(declare-fun e!44320 () ListLongMap!1403)

(assert (=> b!67638 (= e!44320 (ListLongMap!1404 Nil!1463))))

(declare-fun b!67639 () Bool)

(declare-fun lt!29446 () Unit!1838)

(declare-fun lt!29452 () Unit!1838)

(assert (=> b!67639 (= lt!29446 lt!29452)))

(declare-fun lt!29449 () (_ BitVec 64))

(declare-fun lt!29447 () V!2915)

(declare-fun lt!29450 () ListLongMap!1403)

(declare-fun lt!29448 () (_ BitVec 64))

(assert (=> b!67639 (not (contains!710 (+!89 lt!29450 (tuple2!2093 lt!29448 lt!29447)) lt!29449))))

(assert (=> b!67639 (= lt!29452 (addStillNotContains!21 lt!29450 lt!29448 lt!29447 lt!29449))))

(assert (=> b!67639 (= lt!29449 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67639 (= lt!29447 (get!1116 (select (arr!1836 (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67639 (= lt!29448 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67639 (= lt!29450 call!5681)))

(declare-fun e!44323 () ListLongMap!1403)

(assert (=> b!67639 (= e!44323 (+!89 call!5681 (tuple2!2093 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (get!1116 (select (arr!1836 (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67640 () Bool)

(assert (=> b!67640 (= e!44320 e!44323)))

(declare-fun c!9479 () Bool)

(assert (=> b!67640 (= c!9479 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67641 () Bool)

(declare-fun e!44322 () Bool)

(declare-fun lt!29451 () ListLongMap!1403)

(assert (=> b!67641 (= e!44322 (isEmpty!307 lt!29451))))

(declare-fun b!67642 () Bool)

(declare-fun e!44324 () Bool)

(assert (=> b!67642 (= e!44324 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67642 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67643 () Bool)

(declare-fun res!36481 () Bool)

(declare-fun e!44319 () Bool)

(assert (=> b!67643 (=> (not res!36481) (not e!44319))))

(assert (=> b!67643 (= res!36481 (not (contains!710 lt!29451 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67644 () Bool)

(declare-fun e!44321 () Bool)

(assert (=> b!67644 (= e!44319 e!44321)))

(declare-fun c!9478 () Bool)

(assert (=> b!67644 (= c!9478 e!44324)))

(declare-fun res!36482 () Bool)

(assert (=> b!67644 (=> (not res!36482) (not e!44324))))

(assert (=> b!67644 (= res!36482 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun d!14337 () Bool)

(assert (=> d!14337 e!44319))

(declare-fun res!36484 () Bool)

(assert (=> d!14337 (=> (not res!36484) (not e!44319))))

(assert (=> d!14337 (= res!36484 (not (contains!710 lt!29451 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14337 (= lt!29451 e!44320)))

(declare-fun c!9477 () Bool)

(assert (=> d!14337 (= c!9477 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14337 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14337 (= (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29451)))

(declare-fun b!67645 () Bool)

(assert (=> b!67645 (= e!44322 (= lt!29451 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) (mask!6082 newMap!16) (ite (and c!9195 c!9196) lt!28792 (extraKeys!2018 newMap!16)) (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) (minValue!2055 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16))))))

(declare-fun b!67646 () Bool)

(declare-fun e!44318 () Bool)

(assert (=> b!67646 (= e!44321 e!44318)))

(assert (=> b!67646 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun res!36483 () Bool)

(assert (=> b!67646 (= res!36483 (contains!710 lt!29451 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67646 (=> (not res!36483) (not e!44318))))

(declare-fun b!67647 () Bool)

(assert (=> b!67647 (= e!44323 call!5681)))

(declare-fun b!67648 () Bool)

(assert (=> b!67648 (= e!44321 e!44322)))

(declare-fun c!9476 () Bool)

(assert (=> b!67648 (= c!9476 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67649 () Bool)

(assert (=> b!67649 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> b!67649 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))))))))

(assert (=> b!67649 (= e!44318 (= (apply!72 lt!29451 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (ite (or c!9195 c!9190) (_values!2130 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14337 c!9477) b!67638))

(assert (= (and d!14337 (not c!9477)) b!67640))

(assert (= (and b!67640 c!9479) b!67639))

(assert (= (and b!67640 (not c!9479)) b!67647))

(assert (= (or b!67639 b!67647) bm!5678))

(assert (= (and d!14337 res!36484) b!67643))

(assert (= (and b!67643 res!36481) b!67644))

(assert (= (and b!67644 res!36482) b!67642))

(assert (= (and b!67644 c!9478) b!67646))

(assert (= (and b!67644 (not c!9478)) b!67648))

(assert (= (and b!67646 res!36483) b!67649))

(assert (= (and b!67648 c!9476) b!67645))

(assert (= (and b!67648 (not c!9476)) b!67641))

(declare-fun b_lambda!3019 () Bool)

(assert (=> (not b_lambda!3019) (not b!67639)))

(assert (=> b!67639 t!4955))

(declare-fun b_and!4163 () Bool)

(assert (= b_and!4159 (and (=> t!4955 result!2591) b_and!4163)))

(assert (=> b!67639 t!4957))

(declare-fun b_and!4165 () Bool)

(assert (= b_and!4161 (and (=> t!4957 result!2593) b_and!4165)))

(declare-fun b_lambda!3021 () Bool)

(assert (=> (not b_lambda!3021) (not b!67649)))

(assert (=> b!67649 t!4955))

(declare-fun b_and!4167 () Bool)

(assert (= b_and!4163 (and (=> t!4955 result!2591) b_and!4167)))

(assert (=> b!67649 t!4957))

(declare-fun b_and!4169 () Bool)

(assert (= b_and!4165 (and (=> t!4957 result!2593) b_and!4169)))

(declare-fun m!63045 () Bool)

(assert (=> b!67643 m!63045))

(declare-fun m!63047 () Bool)

(assert (=> b!67641 m!63047))

(declare-fun m!63049 () Bool)

(assert (=> b!67645 m!63049))

(declare-fun m!63051 () Bool)

(assert (=> b!67639 m!63051))

(declare-fun m!63053 () Bool)

(assert (=> b!67639 m!63053))

(assert (=> b!67639 m!63051))

(declare-fun m!63055 () Bool)

(assert (=> b!67639 m!63055))

(assert (=> b!67639 m!61495))

(assert (=> b!67639 m!61465))

(assert (=> b!67639 m!61491))

(assert (=> b!67639 m!61495))

(assert (=> b!67639 m!61491))

(assert (=> b!67639 m!61497))

(declare-fun m!63057 () Bool)

(assert (=> b!67639 m!63057))

(assert (=> b!67649 m!61465))

(declare-fun m!63059 () Bool)

(assert (=> b!67649 m!63059))

(assert (=> b!67649 m!61495))

(assert (=> b!67649 m!61495))

(assert (=> b!67649 m!61491))

(assert (=> b!67649 m!61497))

(assert (=> b!67649 m!61465))

(assert (=> b!67649 m!61491))

(assert (=> b!67646 m!61465))

(assert (=> b!67646 m!61465))

(declare-fun m!63061 () Bool)

(assert (=> b!67646 m!63061))

(declare-fun m!63063 () Bool)

(assert (=> d!14337 m!63063))

(assert (=> d!14337 m!61485))

(assert (=> b!67642 m!61465))

(assert (=> b!67642 m!61465))

(assert (=> b!67642 m!61479))

(assert (=> bm!5678 m!63049))

(assert (=> b!67640 m!61465))

(assert (=> b!67640 m!61465))

(assert (=> b!67640 m!61479))

(assert (=> b!66789 d!14337))

(declare-fun d!14339 () Bool)

(assert (=> d!14339 (= (apply!72 (+!89 lt!28899 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) lt!28909) (apply!72 lt!28899 lt!28909))))

(declare-fun lt!29453 () Unit!1838)

(assert (=> d!14339 (= lt!29453 (choose!371 lt!28899 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) lt!28909))))

(declare-fun e!44325 () Bool)

(assert (=> d!14339 e!44325))

(declare-fun res!36485 () Bool)

(assert (=> d!14339 (=> (not res!36485) (not e!44325))))

(assert (=> d!14339 (= res!36485 (contains!710 lt!28899 lt!28909))))

(assert (=> d!14339 (= (addApplyDifferent!48 lt!28899 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) lt!28909) lt!29453)))

(declare-fun b!67650 () Bool)

(assert (=> b!67650 (= e!44325 (not (= lt!28909 lt!28898)))))

(assert (= (and d!14339 res!36485) b!67650))

(declare-fun m!63065 () Bool)

(assert (=> d!14339 m!63065))

(assert (=> d!14339 m!61457))

(assert (=> d!14339 m!61459))

(assert (=> d!14339 m!61457))

(assert (=> d!14339 m!61463))

(declare-fun m!63067 () Bool)

(assert (=> d!14339 m!63067))

(assert (=> b!66789 d!14339))

(declare-fun d!14341 () Bool)

(declare-fun e!44327 () Bool)

(assert (=> d!14341 e!44327))

(declare-fun res!36486 () Bool)

(assert (=> d!14341 (=> res!36486 e!44327)))

(declare-fun lt!29456 () Bool)

(assert (=> d!14341 (= res!36486 (not lt!29456))))

(declare-fun lt!29454 () Bool)

(assert (=> d!14341 (= lt!29456 lt!29454)))

(declare-fun lt!29457 () Unit!1838)

(declare-fun e!44326 () Unit!1838)

(assert (=> d!14341 (= lt!29457 e!44326)))

(declare-fun c!9480 () Bool)

(assert (=> d!14341 (= c!9480 lt!29454)))

(assert (=> d!14341 (= lt!29454 (containsKey!134 (toList!717 (+!89 lt!28910 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))) lt!28902))))

(assert (=> d!14341 (= (contains!710 (+!89 lt!28910 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) lt!28902) lt!29456)))

(declare-fun b!67651 () Bool)

(declare-fun lt!29455 () Unit!1838)

(assert (=> b!67651 (= e!44326 lt!29455)))

(assert (=> b!67651 (= lt!29455 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (+!89 lt!28910 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))) lt!28902))))

(assert (=> b!67651 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28910 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))) lt!28902))))

(declare-fun b!67652 () Bool)

(declare-fun Unit!1888 () Unit!1838)

(assert (=> b!67652 (= e!44326 Unit!1888)))

(declare-fun b!67653 () Bool)

(assert (=> b!67653 (= e!44327 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28910 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))) lt!28902)))))

(assert (= (and d!14341 c!9480) b!67651))

(assert (= (and d!14341 (not c!9480)) b!67652))

(assert (= (and d!14341 (not res!36486)) b!67653))

(declare-fun m!63069 () Bool)

(assert (=> d!14341 m!63069))

(declare-fun m!63071 () Bool)

(assert (=> b!67651 m!63071))

(declare-fun m!63073 () Bool)

(assert (=> b!67651 m!63073))

(assert (=> b!67651 m!63073))

(declare-fun m!63075 () Bool)

(assert (=> b!67651 m!63075))

(assert (=> b!67653 m!63073))

(assert (=> b!67653 m!63073))

(assert (=> b!67653 m!63075))

(assert (=> b!66789 d!14341))

(declare-fun d!14343 () Bool)

(assert (=> d!14343 (contains!710 (+!89 lt!28910 (tuple2!2093 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) lt!28902)))

(declare-fun lt!29458 () Unit!1838)

(assert (=> d!14343 (= lt!29458 (choose!372 lt!28910 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) lt!28902))))

(assert (=> d!14343 (contains!710 lt!28910 lt!28902)))

(assert (=> d!14343 (= (addStillContains!48 lt!28910 lt!28912 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)) lt!28902) lt!29458)))

(declare-fun bs!2919 () Bool)

(assert (= bs!2919 d!14343))

(assert (=> bs!2919 m!61449))

(assert (=> bs!2919 m!61449))

(assert (=> bs!2919 m!61451))

(declare-fun m!63077 () Bool)

(assert (=> bs!2919 m!63077))

(declare-fun m!63079 () Bool)

(assert (=> bs!2919 m!63079))

(assert (=> b!66789 d!14343))

(declare-fun d!14345 () Bool)

(assert (=> d!14345 (= (apply!72 lt!28903 lt!28906) (get!1120 (getValueByKey!130 (toList!717 lt!28903) lt!28906)))))

(declare-fun bs!2920 () Bool)

(assert (= bs!2920 d!14345))

(declare-fun m!63081 () Bool)

(assert (=> bs!2920 m!63081))

(assert (=> bs!2920 m!63081))

(declare-fun m!63083 () Bool)

(assert (=> bs!2920 m!63083))

(assert (=> b!66789 d!14345))

(declare-fun d!14347 () Bool)

(declare-fun e!44328 () Bool)

(assert (=> d!14347 e!44328))

(declare-fun res!36488 () Bool)

(assert (=> d!14347 (=> (not res!36488) (not e!44328))))

(declare-fun lt!29459 () ListLongMap!1403)

(assert (=> d!14347 (= res!36488 (contains!710 lt!29459 (_1!1057 (tuple2!2093 lt!28904 (minValue!2055 newMap!16)))))))

(declare-fun lt!29460 () List!1466)

(assert (=> d!14347 (= lt!29459 (ListLongMap!1404 lt!29460))))

(declare-fun lt!29461 () Unit!1838)

(declare-fun lt!29462 () Unit!1838)

(assert (=> d!14347 (= lt!29461 lt!29462)))

(assert (=> d!14347 (= (getValueByKey!130 lt!29460 (_1!1057 (tuple2!2093 lt!28904 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!28904 (minValue!2055 newMap!16)))))))

(assert (=> d!14347 (= lt!29462 (lemmaContainsTupThenGetReturnValue!47 lt!29460 (_1!1057 (tuple2!2093 lt!28904 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!28904 (minValue!2055 newMap!16)))))))

(assert (=> d!14347 (= lt!29460 (insertStrictlySorted!50 (toList!717 lt!28907) (_1!1057 (tuple2!2093 lt!28904 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!28904 (minValue!2055 newMap!16)))))))

(assert (=> d!14347 (= (+!89 lt!28907 (tuple2!2093 lt!28904 (minValue!2055 newMap!16))) lt!29459)))

(declare-fun b!67654 () Bool)

(declare-fun res!36487 () Bool)

(assert (=> b!67654 (=> (not res!36487) (not e!44328))))

(assert (=> b!67654 (= res!36487 (= (getValueByKey!130 (toList!717 lt!29459) (_1!1057 (tuple2!2093 lt!28904 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!28904 (minValue!2055 newMap!16))))))))

(declare-fun b!67655 () Bool)

(assert (=> b!67655 (= e!44328 (contains!712 (toList!717 lt!29459) (tuple2!2093 lt!28904 (minValue!2055 newMap!16))))))

(assert (= (and d!14347 res!36488) b!67654))

(assert (= (and b!67654 res!36487) b!67655))

(declare-fun m!63085 () Bool)

(assert (=> d!14347 m!63085))

(declare-fun m!63087 () Bool)

(assert (=> d!14347 m!63087))

(declare-fun m!63089 () Bool)

(assert (=> d!14347 m!63089))

(declare-fun m!63091 () Bool)

(assert (=> d!14347 m!63091))

(declare-fun m!63093 () Bool)

(assert (=> b!67654 m!63093))

(declare-fun m!63095 () Bool)

(assert (=> b!67655 m!63095))

(assert (=> b!66789 d!14347))

(declare-fun d!14349 () Bool)

(assert (=> d!14349 (= (apply!72 (+!89 lt!28903 (tuple2!2093 lt!28893 (minValue!2055 newMap!16))) lt!28906) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!28903 (tuple2!2093 lt!28893 (minValue!2055 newMap!16)))) lt!28906)))))

(declare-fun bs!2921 () Bool)

(assert (= bs!2921 d!14349))

(declare-fun m!63097 () Bool)

(assert (=> bs!2921 m!63097))

(assert (=> bs!2921 m!63097))

(declare-fun m!63099 () Bool)

(assert (=> bs!2921 m!63099))

(assert (=> b!66789 d!14349))

(declare-fun d!14351 () Bool)

(assert (=> d!14351 (= (apply!72 (+!89 lt!28899 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16)))) lt!28909) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!28899 (tuple2!2093 lt!28898 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))))) lt!28909)))))

(declare-fun bs!2922 () Bool)

(assert (= bs!2922 d!14351))

(declare-fun m!63101 () Bool)

(assert (=> bs!2922 m!63101))

(assert (=> bs!2922 m!63101))

(declare-fun m!63103 () Bool)

(assert (=> bs!2922 m!63103))

(assert (=> b!66789 d!14351))

(declare-fun d!14353 () Bool)

(assert (=> d!14353 (= (apply!72 (+!89 lt!28907 (tuple2!2093 lt!28904 (minValue!2055 newMap!16))) lt!28896) (apply!72 lt!28907 lt!28896))))

(declare-fun lt!29463 () Unit!1838)

(assert (=> d!14353 (= lt!29463 (choose!371 lt!28907 lt!28904 (minValue!2055 newMap!16) lt!28896))))

(declare-fun e!44329 () Bool)

(assert (=> d!14353 e!44329))

(declare-fun res!36489 () Bool)

(assert (=> d!14353 (=> (not res!36489) (not e!44329))))

(assert (=> d!14353 (= res!36489 (contains!710 lt!28907 lt!28896))))

(assert (=> d!14353 (= (addApplyDifferent!48 lt!28907 lt!28904 (minValue!2055 newMap!16) lt!28896) lt!29463)))

(declare-fun b!67656 () Bool)

(assert (=> b!67656 (= e!44329 (not (= lt!28896 lt!28904)))))

(assert (= (and d!14353 res!36489) b!67656))

(declare-fun m!63105 () Bool)

(assert (=> d!14353 m!63105))

(assert (=> d!14353 m!61467))

(assert (=> d!14353 m!61469))

(assert (=> d!14353 m!61467))

(assert (=> d!14353 m!61455))

(declare-fun m!63107 () Bool)

(assert (=> d!14353 m!63107))

(assert (=> b!66789 d!14353))

(declare-fun d!14355 () Bool)

(assert (=> d!14355 (= (apply!72 lt!28907 lt!28896) (get!1120 (getValueByKey!130 (toList!717 lt!28907) lt!28896)))))

(declare-fun bs!2923 () Bool)

(assert (= bs!2923 d!14355))

(declare-fun m!63109 () Bool)

(assert (=> bs!2923 m!63109))

(assert (=> bs!2923 m!63109))

(declare-fun m!63111 () Bool)

(assert (=> bs!2923 m!63111))

(assert (=> b!66789 d!14355))

(declare-fun d!14357 () Bool)

(declare-fun e!44330 () Bool)

(assert (=> d!14357 e!44330))

(declare-fun res!36491 () Bool)

(assert (=> d!14357 (=> (not res!36491) (not e!44330))))

(declare-fun lt!29464 () ListLongMap!1403)

(assert (=> d!14357 (= res!36491 (contains!710 lt!29464 (_1!1057 (tuple2!2093 lt!28893 (minValue!2055 newMap!16)))))))

(declare-fun lt!29465 () List!1466)

(assert (=> d!14357 (= lt!29464 (ListLongMap!1404 lt!29465))))

(declare-fun lt!29466 () Unit!1838)

(declare-fun lt!29467 () Unit!1838)

(assert (=> d!14357 (= lt!29466 lt!29467)))

(assert (=> d!14357 (= (getValueByKey!130 lt!29465 (_1!1057 (tuple2!2093 lt!28893 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!28893 (minValue!2055 newMap!16)))))))

(assert (=> d!14357 (= lt!29467 (lemmaContainsTupThenGetReturnValue!47 lt!29465 (_1!1057 (tuple2!2093 lt!28893 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!28893 (minValue!2055 newMap!16)))))))

(assert (=> d!14357 (= lt!29465 (insertStrictlySorted!50 (toList!717 lt!28903) (_1!1057 (tuple2!2093 lt!28893 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!28893 (minValue!2055 newMap!16)))))))

(assert (=> d!14357 (= (+!89 lt!28903 (tuple2!2093 lt!28893 (minValue!2055 newMap!16))) lt!29464)))

(declare-fun b!67657 () Bool)

(declare-fun res!36490 () Bool)

(assert (=> b!67657 (=> (not res!36490) (not e!44330))))

(assert (=> b!67657 (= res!36490 (= (getValueByKey!130 (toList!717 lt!29464) (_1!1057 (tuple2!2093 lt!28893 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!28893 (minValue!2055 newMap!16))))))))

(declare-fun b!67658 () Bool)

(assert (=> b!67658 (= e!44330 (contains!712 (toList!717 lt!29464) (tuple2!2093 lt!28893 (minValue!2055 newMap!16))))))

(assert (= (and d!14357 res!36491) b!67657))

(assert (= (and b!67657 res!36490) b!67658))

(declare-fun m!63113 () Bool)

(assert (=> d!14357 m!63113))

(declare-fun m!63115 () Bool)

(assert (=> d!14357 m!63115))

(declare-fun m!63117 () Bool)

(assert (=> d!14357 m!63117))

(declare-fun m!63119 () Bool)

(assert (=> d!14357 m!63119))

(declare-fun m!63121 () Bool)

(assert (=> b!67657 m!63121))

(declare-fun m!63123 () Bool)

(assert (=> b!67658 m!63123))

(assert (=> b!66789 d!14357))

(declare-fun c!9481 () Bool)

(declare-fun d!14359 () Bool)

(assert (=> d!14359 (= c!9481 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28622))) (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28622)))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun e!44331 () Option!136)

(assert (=> d!14359 (= (getValueByKey!130 (t!4948 (toList!717 lt!28622)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44331)))

(declare-fun b!67660 () Bool)

(declare-fun e!44332 () Option!136)

(assert (=> b!67660 (= e!44331 e!44332)))

(declare-fun c!9482 () Bool)

(assert (=> b!67660 (= c!9482 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28622))) (not (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28622)))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(declare-fun b!67659 () Bool)

(assert (=> b!67659 (= e!44331 (Some!135 (_2!1057 (h!2046 (t!4948 (toList!717 lt!28622))))))))

(declare-fun b!67661 () Bool)

(assert (=> b!67661 (= e!44332 (getValueByKey!130 (t!4948 (t!4948 (toList!717 lt!28622))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67662 () Bool)

(assert (=> b!67662 (= e!44332 None!134)))

(assert (= (and d!14359 c!9481) b!67659))

(assert (= (and d!14359 (not c!9481)) b!67660))

(assert (= (and b!67660 c!9482) b!67661))

(assert (= (and b!67660 (not c!9482)) b!67662))

(assert (=> b!67661 m!61065))

(declare-fun m!63125 () Bool)

(assert (=> b!67661 m!63125))

(assert (=> b!67177 d!14359))

(declare-fun b!67663 () Bool)

(declare-fun e!44334 () (_ BitVec 32))

(declare-fun call!5682 () (_ BitVec 32))

(assert (=> b!67663 (= e!44334 call!5682)))

(declare-fun d!14361 () Bool)

(declare-fun lt!29468 () (_ BitVec 32))

(assert (=> d!14361 (and (bvsge lt!29468 #b00000000000000000000000000000000) (bvsle lt!29468 (bvsub (size!2070 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000)))))

(declare-fun e!44333 () (_ BitVec 32))

(assert (=> d!14361 (= lt!29468 e!44333)))

(declare-fun c!9483 () Bool)

(assert (=> d!14361 (= c!9483 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))))))

(assert (=> d!14361 (and (bvsle #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2070 (_keys!3787 (_2!1058 lt!28812))) (size!2070 (_keys!3787 (_2!1058 lt!28812)))))))

(assert (=> d!14361 (= (arrayCountValidKeys!0 (_keys!3787 (_2!1058 lt!28812)) #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))) lt!29468)))

(declare-fun b!67664 () Bool)

(assert (=> b!67664 (= e!44334 (bvadd #b00000000000000000000000000000001 call!5682))))

(declare-fun b!67665 () Bool)

(assert (=> b!67665 (= e!44333 #b00000000000000000000000000000000)))

(declare-fun b!67666 () Bool)

(assert (=> b!67666 (= e!44333 e!44334)))

(declare-fun c!9484 () Bool)

(assert (=> b!67666 (= c!9484 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000)))))

(declare-fun bm!5679 () Bool)

(assert (=> bm!5679 (= call!5682 (arrayCountValidKeys!0 (_keys!3787 (_2!1058 lt!28812)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (_2!1058 lt!28812)))))))

(assert (= (and d!14361 c!9483) b!67665))

(assert (= (and d!14361 (not c!9483)) b!67666))

(assert (= (and b!67666 c!9484) b!67664))

(assert (= (and b!67666 (not c!9484)) b!67663))

(assert (= (or b!67664 b!67663) bm!5679))

(assert (=> b!67666 m!62645))

(assert (=> b!67666 m!62645))

(assert (=> b!67666 m!62651))

(declare-fun m!63127 () Bool)

(assert (=> bm!5679 m!63127))

(assert (=> b!66914 d!14361))

(declare-fun d!14363 () Bool)

(assert (=> d!14363 (arrayContainsKey!0 (_keys!3787 newMap!16) lt!28987 #b00000000000000000000000000000000)))

(declare-fun lt!29471 () Unit!1838)

(declare-fun choose!13 (array!3841 (_ BitVec 64) (_ BitVec 32)) Unit!1838)

(assert (=> d!14363 (= lt!29471 (choose!13 (_keys!3787 newMap!16) lt!28987 #b00000000000000000000000000000000))))

(assert (=> d!14363 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!14363 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3787 newMap!16) lt!28987 #b00000000000000000000000000000000) lt!29471)))

(declare-fun bs!2924 () Bool)

(assert (= bs!2924 d!14363))

(assert (=> bs!2924 m!61729))

(declare-fun m!63129 () Bool)

(assert (=> bs!2924 m!63129))

(assert (=> b!66943 d!14363))

(declare-fun d!14365 () Bool)

(declare-fun res!36492 () Bool)

(declare-fun e!44335 () Bool)

(assert (=> d!14365 (=> res!36492 e!44335)))

(assert (=> d!14365 (= res!36492 (= (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) lt!28987))))

(assert (=> d!14365 (= (arrayContainsKey!0 (_keys!3787 newMap!16) lt!28987 #b00000000000000000000000000000000) e!44335)))

(declare-fun b!67667 () Bool)

(declare-fun e!44336 () Bool)

(assert (=> b!67667 (= e!44335 e!44336)))

(declare-fun res!36493 () Bool)

(assert (=> b!67667 (=> (not res!36493) (not e!44336))))

(assert (=> b!67667 (= res!36493 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67668 () Bool)

(assert (=> b!67668 (= e!44336 (arrayContainsKey!0 (_keys!3787 newMap!16) lt!28987 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!14365 (not res!36492)) b!67667))

(assert (= (and b!67667 res!36493) b!67668))

(assert (=> d!14365 m!61465))

(declare-fun m!63131 () Bool)

(assert (=> b!67668 m!63131))

(assert (=> b!66943 d!14365))

(declare-fun b!67669 () Bool)

(declare-fun e!44339 () SeekEntryResult!233)

(assert (=> b!67669 (= e!44339 Undefined!233)))

(declare-fun d!14367 () Bool)

(declare-fun lt!29474 () SeekEntryResult!233)

(assert (=> d!14367 (and (or ((_ is Undefined!233) lt!29474) (not ((_ is Found!233) lt!29474)) (and (bvsge (index!3061 lt!29474) #b00000000000000000000000000000000) (bvslt (index!3061 lt!29474) (size!2070 (_keys!3787 newMap!16))))) (or ((_ is Undefined!233) lt!29474) ((_ is Found!233) lt!29474) (not ((_ is MissingZero!233) lt!29474)) (and (bvsge (index!3060 lt!29474) #b00000000000000000000000000000000) (bvslt (index!3060 lt!29474) (size!2070 (_keys!3787 newMap!16))))) (or ((_ is Undefined!233) lt!29474) ((_ is Found!233) lt!29474) ((_ is MissingZero!233) lt!29474) (not ((_ is MissingVacant!233) lt!29474)) (and (bvsge (index!3063 lt!29474) #b00000000000000000000000000000000) (bvslt (index!3063 lt!29474) (size!2070 (_keys!3787 newMap!16))))) (or ((_ is Undefined!233) lt!29474) (ite ((_ is Found!233) lt!29474) (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!29474)) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!233) lt!29474) (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3060 lt!29474)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!233) lt!29474) (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3063 lt!29474)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14367 (= lt!29474 e!44339)))

(declare-fun c!9485 () Bool)

(declare-fun lt!29473 () SeekEntryResult!233)

(assert (=> d!14367 (= c!9485 (and ((_ is Intermediate!233) lt!29473) (undefined!1045 lt!29473)))))

(assert (=> d!14367 (= lt!29473 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (mask!6082 newMap!16)) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (=> d!14367 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14367 (= (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (_keys!3787 newMap!16) (mask!6082 newMap!16)) lt!29474)))

(declare-fun b!67670 () Bool)

(declare-fun c!9486 () Bool)

(declare-fun lt!29472 () (_ BitVec 64))

(assert (=> b!67670 (= c!9486 (= lt!29472 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44337 () SeekEntryResult!233)

(declare-fun e!44338 () SeekEntryResult!233)

(assert (=> b!67670 (= e!44337 e!44338)))

(declare-fun b!67671 () Bool)

(assert (=> b!67671 (= e!44337 (Found!233 (index!3062 lt!29473)))))

(declare-fun b!67672 () Bool)

(assert (=> b!67672 (= e!44338 (seekKeyOrZeroReturnVacant!0 (x!10703 lt!29473) (index!3062 lt!29473) (index!3062 lt!29473) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!67673 () Bool)

(assert (=> b!67673 (= e!44339 e!44337)))

(assert (=> b!67673 (= lt!29472 (select (arr!1835 (_keys!3787 newMap!16)) (index!3062 lt!29473)))))

(declare-fun c!9487 () Bool)

(assert (=> b!67673 (= c!9487 (= lt!29472 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67674 () Bool)

(assert (=> b!67674 (= e!44338 (MissingZero!233 (index!3062 lt!29473)))))

(assert (= (and d!14367 c!9485) b!67669))

(assert (= (and d!14367 (not c!9485)) b!67673))

(assert (= (and b!67673 c!9487) b!67671))

(assert (= (and b!67673 (not c!9487)) b!67670))

(assert (= (and b!67670 c!9486) b!67674))

(assert (= (and b!67670 (not c!9486)) b!67672))

(declare-fun m!63133 () Bool)

(assert (=> d!14367 m!63133))

(declare-fun m!63135 () Bool)

(assert (=> d!14367 m!63135))

(assert (=> d!14367 m!61465))

(declare-fun m!63137 () Bool)

(assert (=> d!14367 m!63137))

(assert (=> d!14367 m!61485))

(assert (=> d!14367 m!63137))

(assert (=> d!14367 m!61465))

(declare-fun m!63139 () Bool)

(assert (=> d!14367 m!63139))

(declare-fun m!63141 () Bool)

(assert (=> d!14367 m!63141))

(assert (=> b!67672 m!61465))

(declare-fun m!63143 () Bool)

(assert (=> b!67672 m!63143))

(declare-fun m!63145 () Bool)

(assert (=> b!67673 m!63145))

(assert (=> b!66943 d!14367))

(assert (=> b!66990 d!13787))

(declare-fun d!14369 () Bool)

(declare-fun c!9488 () Bool)

(assert (=> d!14369 (= c!9488 (and ((_ is Cons!1462) (toList!717 lt!28922)) (= (_1!1057 (h!2046 (toList!717 lt!28922))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44340 () Option!136)

(assert (=> d!14369 (= (getValueByKey!130 (toList!717 lt!28922) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44340)))

(declare-fun b!67676 () Bool)

(declare-fun e!44341 () Option!136)

(assert (=> b!67676 (= e!44340 e!44341)))

(declare-fun c!9489 () Bool)

(assert (=> b!67676 (= c!9489 (and ((_ is Cons!1462) (toList!717 lt!28922)) (not (= (_1!1057 (h!2046 (toList!717 lt!28922))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67675 () Bool)

(assert (=> b!67675 (= e!44340 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28922)))))))

(declare-fun b!67677 () Bool)

(assert (=> b!67677 (= e!44341 (getValueByKey!130 (t!4948 (toList!717 lt!28922)) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67678 () Bool)

(assert (=> b!67678 (= e!44341 None!134)))

(assert (= (and d!14369 c!9488) b!67675))

(assert (= (and d!14369 (not c!9488)) b!67676))

(assert (= (and b!67676 c!9489) b!67677))

(assert (= (and b!67676 (not c!9489)) b!67678))

(declare-fun m!63147 () Bool)

(assert (=> b!67677 m!63147))

(assert (=> b!66817 d!14369))

(assert (=> b!67061 d!13849))

(declare-fun d!14371 () Bool)

(declare-fun e!44343 () Bool)

(assert (=> d!14371 e!44343))

(declare-fun res!36494 () Bool)

(assert (=> d!14371 (=> res!36494 e!44343)))

(declare-fun lt!29477 () Bool)

(assert (=> d!14371 (= res!36494 (not lt!29477))))

(declare-fun lt!29475 () Bool)

(assert (=> d!14371 (= lt!29477 lt!29475)))

(declare-fun lt!29478 () Unit!1838)

(declare-fun e!44342 () Unit!1838)

(assert (=> d!14371 (= lt!29478 e!44342)))

(declare-fun c!9490 () Bool)

(assert (=> d!14371 (= c!9490 lt!29475)))

(assert (=> d!14371 (= lt!29475 (containsKey!134 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(assert (=> d!14371 (= (contains!710 (getCurrentListMap!415 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))) lt!29477)))

(declare-fun b!67679 () Bool)

(declare-fun lt!29476 () Unit!1838)

(assert (=> b!67679 (= e!44342 lt!29476)))

(assert (=> b!67679 (= lt!29476 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(assert (=> b!67679 (isDefined!83 (getValueByKey!130 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(declare-fun b!67680 () Bool)

(declare-fun Unit!1889 () Unit!1838)

(assert (=> b!67680 (= e!44342 Unit!1889)))

(declare-fun b!67681 () Bool)

(assert (=> b!67681 (= e!44343 (isDefined!83 (getValueByKey!130 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803)))))))

(assert (= (and d!14371 c!9490) b!67679))

(assert (= (and d!14371 (not c!9490)) b!67680))

(assert (= (and d!14371 (not res!36494)) b!67681))

(assert (=> d!14371 m!61335))

(declare-fun m!63149 () Bool)

(assert (=> d!14371 m!63149))

(assert (=> b!67679 m!61335))

(declare-fun m!63151 () Bool)

(assert (=> b!67679 m!63151))

(assert (=> b!67679 m!61335))

(declare-fun m!63153 () Bool)

(assert (=> b!67679 m!63153))

(assert (=> b!67679 m!63153))

(declare-fun m!63155 () Bool)

(assert (=> b!67679 m!63155))

(assert (=> b!67681 m!61335))

(assert (=> b!67681 m!63153))

(assert (=> b!67681 m!63153))

(assert (=> b!67681 m!63155))

(assert (=> b!67098 d!14371))

(declare-fun b!67682 () Bool)

(declare-fun e!44353 () ListLongMap!1403)

(declare-fun call!5688 () ListLongMap!1403)

(assert (=> b!67682 (= e!44353 call!5688)))

(declare-fun b!67683 () Bool)

(declare-fun e!44348 () ListLongMap!1403)

(assert (=> b!67683 (= e!44348 call!5688)))

(declare-fun b!67684 () Bool)

(declare-fun e!44351 () Bool)

(declare-fun lt!29499 () ListLongMap!1403)

(assert (=> b!67684 (= e!44351 (= (apply!72 lt!29499 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5680 () Bool)

(declare-fun call!5689 () ListLongMap!1403)

(assert (=> bm!5680 (= call!5689 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5681 () Bool)

(declare-fun call!5683 () Bool)

(assert (=> bm!5681 (= call!5683 (contains!710 lt!29499 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5682 () Bool)

(declare-fun call!5686 () ListLongMap!1403)

(declare-fun call!5684 () ListLongMap!1403)

(assert (=> bm!5682 (= call!5686 call!5684)))

(declare-fun b!67685 () Bool)

(declare-fun e!44354 () ListLongMap!1403)

(declare-fun call!5687 () ListLongMap!1403)

(assert (=> b!67685 (= e!44354 (+!89 call!5687 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!67686 () Bool)

(declare-fun e!44346 () Unit!1838)

(declare-fun lt!29500 () Unit!1838)

(assert (=> b!67686 (= e!44346 lt!29500)))

(declare-fun lt!29496 () ListLongMap!1403)

(assert (=> b!67686 (= lt!29496 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29498 () (_ BitVec 64))

(assert (=> b!67686 (= lt!29498 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29488 () (_ BitVec 64))

(assert (=> b!67686 (= lt!29488 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29487 () Unit!1838)

(assert (=> b!67686 (= lt!29487 (addStillContains!48 lt!29496 lt!29498 (zeroValue!2055 newMap!16) lt!29488))))

(assert (=> b!67686 (contains!710 (+!89 lt!29496 (tuple2!2093 lt!29498 (zeroValue!2055 newMap!16))) lt!29488)))

(declare-fun lt!29480 () Unit!1838)

(assert (=> b!67686 (= lt!29480 lt!29487)))

(declare-fun lt!29493 () ListLongMap!1403)

(assert (=> b!67686 (= lt!29493 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29490 () (_ BitVec 64))

(assert (=> b!67686 (= lt!29490 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29482 () (_ BitVec 64))

(assert (=> b!67686 (= lt!29482 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29483 () Unit!1838)

(assert (=> b!67686 (= lt!29483 (addApplyDifferent!48 lt!29493 lt!29490 (minValue!2055 newMap!16) lt!29482))))

(assert (=> b!67686 (= (apply!72 (+!89 lt!29493 (tuple2!2093 lt!29490 (minValue!2055 newMap!16))) lt!29482) (apply!72 lt!29493 lt!29482))))

(declare-fun lt!29497 () Unit!1838)

(assert (=> b!67686 (= lt!29497 lt!29483)))

(declare-fun lt!29485 () ListLongMap!1403)

(assert (=> b!67686 (= lt!29485 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29484 () (_ BitVec 64))

(assert (=> b!67686 (= lt!29484 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29495 () (_ BitVec 64))

(assert (=> b!67686 (= lt!29495 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29494 () Unit!1838)

(assert (=> b!67686 (= lt!29494 (addApplyDifferent!48 lt!29485 lt!29484 (zeroValue!2055 newMap!16) lt!29495))))

(assert (=> b!67686 (= (apply!72 (+!89 lt!29485 (tuple2!2093 lt!29484 (zeroValue!2055 newMap!16))) lt!29495) (apply!72 lt!29485 lt!29495))))

(declare-fun lt!29486 () Unit!1838)

(assert (=> b!67686 (= lt!29486 lt!29494)))

(declare-fun lt!29489 () ListLongMap!1403)

(assert (=> b!67686 (= lt!29489 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29479 () (_ BitVec 64))

(assert (=> b!67686 (= lt!29479 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29492 () (_ BitVec 64))

(assert (=> b!67686 (= lt!29492 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67686 (= lt!29500 (addApplyDifferent!48 lt!29489 lt!29479 (minValue!2055 newMap!16) lt!29492))))

(assert (=> b!67686 (= (apply!72 (+!89 lt!29489 (tuple2!2093 lt!29479 (minValue!2055 newMap!16))) lt!29492) (apply!72 lt!29489 lt!29492))))

(declare-fun b!67687 () Bool)

(declare-fun e!44352 () Bool)

(assert (=> b!67687 (= e!44352 (= (apply!72 lt!29499 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 lt!28797) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67687 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 lt!28797)))))

(assert (=> b!67687 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67688 () Bool)

(assert (=> b!67688 (= e!44354 e!44353)))

(declare-fun c!9493 () Bool)

(assert (=> b!67688 (= c!9493 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14373 () Bool)

(declare-fun e!44350 () Bool)

(assert (=> d!14373 e!44350))

(declare-fun res!36500 () Bool)

(assert (=> d!14373 (=> (not res!36500) (not e!44350))))

(assert (=> d!14373 (= res!36500 (or (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))))

(declare-fun lt!29481 () ListLongMap!1403)

(assert (=> d!14373 (= lt!29499 lt!29481)))

(declare-fun lt!29491 () Unit!1838)

(assert (=> d!14373 (= lt!29491 e!44346)))

(declare-fun c!9495 () Bool)

(declare-fun e!44355 () Bool)

(assert (=> d!14373 (= c!9495 e!44355)))

(declare-fun res!36502 () Bool)

(assert (=> d!14373 (=> (not res!36502) (not e!44355))))

(assert (=> d!14373 (= res!36502 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14373 (= lt!29481 e!44354)))

(declare-fun c!9494 () Bool)

(assert (=> d!14373 (= c!9494 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14373 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14373 (= (getCurrentListMap!415 (_keys!3787 newMap!16) lt!28797 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29499)))

(declare-fun b!67689 () Bool)

(declare-fun e!44349 () Bool)

(declare-fun call!5685 () Bool)

(assert (=> b!67689 (= e!44349 (not call!5685))))

(declare-fun b!67690 () Bool)

(declare-fun res!36499 () Bool)

(assert (=> b!67690 (=> (not res!36499) (not e!44350))))

(assert (=> b!67690 (= res!36499 e!44349)))

(declare-fun c!9492 () Bool)

(assert (=> b!67690 (= c!9492 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5683 () Bool)

(assert (=> bm!5683 (= call!5688 call!5687)))

(declare-fun b!67691 () Bool)

(declare-fun e!44344 () Bool)

(assert (=> b!67691 (= e!44350 e!44344)))

(declare-fun c!9491 () Bool)

(assert (=> b!67691 (= c!9491 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67692 () Bool)

(assert (=> b!67692 (= e!44344 e!44351)))

(declare-fun res!36496 () Bool)

(assert (=> b!67692 (= res!36496 call!5683)))

(assert (=> b!67692 (=> (not res!36496) (not e!44351))))

(declare-fun bm!5684 () Bool)

(assert (=> bm!5684 (= call!5687 (+!89 (ite c!9494 call!5689 (ite c!9493 call!5684 call!5686)) (ite (or c!9494 c!9493) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!67693 () Bool)

(declare-fun c!9496 () Bool)

(assert (=> b!67693 (= c!9496 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!67693 (= e!44353 e!44348)))

(declare-fun bm!5685 () Bool)

(assert (=> bm!5685 (= call!5684 call!5689)))

(declare-fun b!67694 () Bool)

(assert (=> b!67694 (= e!44355 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67695 () Bool)

(declare-fun res!36498 () Bool)

(assert (=> b!67695 (=> (not res!36498) (not e!44350))))

(declare-fun e!44356 () Bool)

(assert (=> b!67695 (= res!36498 e!44356)))

(declare-fun res!36495 () Bool)

(assert (=> b!67695 (=> res!36495 e!44356)))

(declare-fun e!44347 () Bool)

(assert (=> b!67695 (= res!36495 (not e!44347))))

(declare-fun res!36497 () Bool)

(assert (=> b!67695 (=> (not res!36497) (not e!44347))))

(assert (=> b!67695 (= res!36497 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67696 () Bool)

(declare-fun e!44345 () Bool)

(assert (=> b!67696 (= e!44349 e!44345)))

(declare-fun res!36503 () Bool)

(assert (=> b!67696 (= res!36503 call!5685)))

(assert (=> b!67696 (=> (not res!36503) (not e!44345))))

(declare-fun b!67697 () Bool)

(assert (=> b!67697 (= e!44344 (not call!5683))))

(declare-fun b!67698 () Bool)

(assert (=> b!67698 (= e!44348 call!5686)))

(declare-fun b!67699 () Bool)

(declare-fun Unit!1890 () Unit!1838)

(assert (=> b!67699 (= e!44346 Unit!1890)))

(declare-fun b!67700 () Bool)

(assert (=> b!67700 (= e!44356 e!44352)))

(declare-fun res!36501 () Bool)

(assert (=> b!67700 (=> (not res!36501) (not e!44352))))

(assert (=> b!67700 (= res!36501 (contains!710 lt!29499 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67700 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun bm!5686 () Bool)

(assert (=> bm!5686 (= call!5685 (contains!710 lt!29499 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67701 () Bool)

(assert (=> b!67701 (= e!44347 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67702 () Bool)

(assert (=> b!67702 (= e!44345 (= (apply!72 lt!29499 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(assert (= (and d!14373 c!9494) b!67685))

(assert (= (and d!14373 (not c!9494)) b!67688))

(assert (= (and b!67688 c!9493) b!67682))

(assert (= (and b!67688 (not c!9493)) b!67693))

(assert (= (and b!67693 c!9496) b!67683))

(assert (= (and b!67693 (not c!9496)) b!67698))

(assert (= (or b!67683 b!67698) bm!5682))

(assert (= (or b!67682 bm!5682) bm!5685))

(assert (= (or b!67682 b!67683) bm!5683))

(assert (= (or b!67685 bm!5685) bm!5680))

(assert (= (or b!67685 bm!5683) bm!5684))

(assert (= (and d!14373 res!36502) b!67694))

(assert (= (and d!14373 c!9495) b!67686))

(assert (= (and d!14373 (not c!9495)) b!67699))

(assert (= (and d!14373 res!36500) b!67695))

(assert (= (and b!67695 res!36497) b!67701))

(assert (= (and b!67695 (not res!36495)) b!67700))

(assert (= (and b!67700 res!36501) b!67687))

(assert (= (and b!67695 res!36498) b!67690))

(assert (= (and b!67690 c!9492) b!67696))

(assert (= (and b!67690 (not c!9492)) b!67689))

(assert (= (and b!67696 res!36503) b!67702))

(assert (= (or b!67696 b!67689) bm!5686))

(assert (= (and b!67690 res!36499) b!67691))

(assert (= (and b!67691 c!9491) b!67692))

(assert (= (and b!67691 (not c!9491)) b!67697))

(assert (= (and b!67692 res!36496) b!67684))

(assert (= (or b!67692 b!67697) bm!5681))

(declare-fun b_lambda!3023 () Bool)

(assert (=> (not b_lambda!3023) (not b!67687)))

(assert (=> b!67687 t!4955))

(declare-fun b_and!4171 () Bool)

(assert (= b_and!4167 (and (=> t!4955 result!2591) b_and!4171)))

(assert (=> b!67687 t!4957))

(declare-fun b_and!4173 () Bool)

(assert (= b_and!4169 (and (=> t!4957 result!2593) b_and!4173)))

(declare-fun m!63157 () Bool)

(assert (=> b!67686 m!63157))

(declare-fun m!63159 () Bool)

(assert (=> b!67686 m!63159))

(declare-fun m!63161 () Bool)

(assert (=> b!67686 m!63161))

(declare-fun m!63163 () Bool)

(assert (=> b!67686 m!63163))

(declare-fun m!63165 () Bool)

(assert (=> b!67686 m!63165))

(declare-fun m!63167 () Bool)

(assert (=> b!67686 m!63167))

(declare-fun m!63169 () Bool)

(assert (=> b!67686 m!63169))

(declare-fun m!63171 () Bool)

(assert (=> b!67686 m!63171))

(declare-fun m!63173 () Bool)

(assert (=> b!67686 m!63173))

(declare-fun m!63175 () Bool)

(assert (=> b!67686 m!63175))

(declare-fun m!63177 () Bool)

(assert (=> b!67686 m!63177))

(assert (=> b!67686 m!63165))

(assert (=> b!67686 m!63173))

(declare-fun m!63179 () Bool)

(assert (=> b!67686 m!63179))

(assert (=> b!67686 m!61465))

(declare-fun m!63181 () Bool)

(assert (=> b!67686 m!63181))

(assert (=> b!67686 m!63181))

(declare-fun m!63183 () Bool)

(assert (=> b!67686 m!63183))

(assert (=> b!67686 m!63163))

(declare-fun m!63185 () Bool)

(assert (=> b!67686 m!63185))

(declare-fun m!63187 () Bool)

(assert (=> b!67686 m!63187))

(declare-fun m!63189 () Bool)

(assert (=> b!67684 m!63189))

(declare-fun m!63191 () Bool)

(assert (=> b!67702 m!63191))

(assert (=> b!67701 m!61465))

(assert (=> b!67701 m!61465))

(assert (=> b!67701 m!61479))

(declare-fun m!63193 () Bool)

(assert (=> b!67685 m!63193))

(assert (=> bm!5680 m!63177))

(declare-fun m!63195 () Bool)

(assert (=> bm!5681 m!63195))

(assert (=> b!67694 m!61465))

(assert (=> b!67694 m!61465))

(assert (=> b!67694 m!61479))

(assert (=> d!14373 m!61485))

(declare-fun m!63197 () Bool)

(assert (=> bm!5684 m!63197))

(declare-fun m!63199 () Bool)

(assert (=> bm!5686 m!63199))

(assert (=> b!67687 m!61465))

(assert (=> b!67687 m!61491))

(assert (=> b!67687 m!61465))

(declare-fun m!63201 () Bool)

(assert (=> b!67687 m!63201))

(declare-fun m!63203 () Bool)

(assert (=> b!67687 m!63203))

(assert (=> b!67687 m!63203))

(assert (=> b!67687 m!61491))

(declare-fun m!63205 () Bool)

(assert (=> b!67687 m!63205))

(assert (=> b!67700 m!61465))

(assert (=> b!67700 m!61465))

(declare-fun m!63207 () Bool)

(assert (=> b!67700 m!63207))

(assert (=> b!67098 d!14373))

(declare-fun lt!29501 () Bool)

(declare-fun d!14375 () Bool)

(assert (=> d!14375 (= lt!29501 (select (content!72 (toList!717 lt!29026)) (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44357 () Bool)

(assert (=> d!14375 (= lt!29501 e!44357)))

(declare-fun res!36504 () Bool)

(assert (=> d!14375 (=> (not res!36504) (not e!44357))))

(assert (=> d!14375 (= res!36504 ((_ is Cons!1462) (toList!717 lt!29026)))))

(assert (=> d!14375 (= (contains!712 (toList!717 lt!29026) (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29501)))

(declare-fun b!67703 () Bool)

(declare-fun e!44358 () Bool)

(assert (=> b!67703 (= e!44357 e!44358)))

(declare-fun res!36505 () Bool)

(assert (=> b!67703 (=> res!36505 e!44358)))

(assert (=> b!67703 (= res!36505 (= (h!2046 (toList!717 lt!29026)) (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67704 () Bool)

(assert (=> b!67704 (= e!44358 (contains!712 (t!4948 (toList!717 lt!29026)) (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14375 res!36504) b!67703))

(assert (= (and b!67703 (not res!36505)) b!67704))

(declare-fun m!63209 () Bool)

(assert (=> d!14375 m!63209))

(declare-fun m!63211 () Bool)

(assert (=> d!14375 m!63211))

(declare-fun m!63213 () Bool)

(assert (=> b!67704 m!63213))

(assert (=> b!67000 d!14375))

(assert (=> d!13913 d!13929))

(assert (=> d!13913 d!13917))

(declare-fun d!14377 () Bool)

(assert (=> d!14377 (= (apply!72 (+!89 lt!28867 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!28870) (apply!72 lt!28867 lt!28870))))

(assert (=> d!14377 true))

(declare-fun _$34!785 () Unit!1838)

(assert (=> d!14377 (= (choose!371 lt!28867 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))) lt!28870) _$34!785)))

(declare-fun bs!2925 () Bool)

(assert (= bs!2925 d!14377))

(assert (=> bs!2925 m!61361))

(assert (=> bs!2925 m!61361))

(assert (=> bs!2925 m!61381))

(assert (=> bs!2925 m!61355))

(assert (=> d!13913 d!14377))

(assert (=> d!13913 d!13935))

(declare-fun d!14379 () Bool)

(declare-fun e!44360 () Bool)

(assert (=> d!14379 e!44360))

(declare-fun res!36506 () Bool)

(assert (=> d!14379 (=> res!36506 e!44360)))

(declare-fun lt!29504 () Bool)

(assert (=> d!14379 (= res!36506 (not lt!29504))))

(declare-fun lt!29502 () Bool)

(assert (=> d!14379 (= lt!29504 lt!29502)))

(declare-fun lt!29505 () Unit!1838)

(declare-fun e!44359 () Unit!1838)

(assert (=> d!14379 (= lt!29505 e!44359)))

(declare-fun c!9497 () Bool)

(assert (=> d!14379 (= c!9497 lt!29502)))

(assert (=> d!14379 (= lt!29502 (containsKey!134 (toList!717 lt!28867) lt!28870))))

(assert (=> d!14379 (= (contains!710 lt!28867 lt!28870) lt!29504)))

(declare-fun b!67705 () Bool)

(declare-fun lt!29503 () Unit!1838)

(assert (=> b!67705 (= e!44359 lt!29503)))

(assert (=> b!67705 (= lt!29503 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28867) lt!28870))))

(assert (=> b!67705 (isDefined!83 (getValueByKey!130 (toList!717 lt!28867) lt!28870))))

(declare-fun b!67706 () Bool)

(declare-fun Unit!1891 () Unit!1838)

(assert (=> b!67706 (= e!44359 Unit!1891)))

(declare-fun b!67707 () Bool)

(assert (=> b!67707 (= e!44360 (isDefined!83 (getValueByKey!130 (toList!717 lt!28867) lt!28870)))))

(assert (= (and d!14379 c!9497) b!67705))

(assert (= (and d!14379 (not c!9497)) b!67706))

(assert (= (and d!14379 (not res!36506)) b!67707))

(declare-fun m!63215 () Bool)

(assert (=> d!14379 m!63215))

(declare-fun m!63217 () Bool)

(assert (=> b!67705 m!63217))

(assert (=> b!67705 m!61901))

(assert (=> b!67705 m!61901))

(declare-fun m!63219 () Bool)

(assert (=> b!67705 m!63219))

(assert (=> b!67707 m!61901))

(assert (=> b!67707 m!61901))

(assert (=> b!67707 m!63219))

(assert (=> d!13913 d!14379))

(assert (=> d!13845 d!13843))

(declare-fun d!14381 () Bool)

(assert (=> d!14381 (= (getValueByKey!130 lt!28672 (_1!1057 lt!28617)) (Some!135 (_2!1057 lt!28617)))))

(assert (=> d!14381 true))

(declare-fun _$22!367 () Unit!1838)

(assert (=> d!14381 (= (choose!367 lt!28672 (_1!1057 lt!28617) (_2!1057 lt!28617)) _$22!367)))

(declare-fun bs!2926 () Bool)

(assert (= bs!2926 d!14381))

(assert (=> bs!2926 m!61193))

(assert (=> d!13845 d!14381))

(declare-fun d!14383 () Bool)

(declare-fun res!36507 () Bool)

(declare-fun e!44361 () Bool)

(assert (=> d!14383 (=> res!36507 e!44361)))

(assert (=> d!14383 (= res!36507 (or ((_ is Nil!1463) lt!28672) ((_ is Nil!1463) (t!4948 lt!28672))))))

(assert (=> d!14383 (= (isStrictlySorted!289 lt!28672) e!44361)))

(declare-fun b!67708 () Bool)

(declare-fun e!44362 () Bool)

(assert (=> b!67708 (= e!44361 e!44362)))

(declare-fun res!36508 () Bool)

(assert (=> b!67708 (=> (not res!36508) (not e!44362))))

(assert (=> b!67708 (= res!36508 (bvslt (_1!1057 (h!2046 lt!28672)) (_1!1057 (h!2046 (t!4948 lt!28672)))))))

(declare-fun b!67709 () Bool)

(assert (=> b!67709 (= e!44362 (isStrictlySorted!289 (t!4948 lt!28672)))))

(assert (= (and d!14383 (not res!36507)) b!67708))

(assert (= (and b!67708 res!36508) b!67709))

(declare-fun m!63221 () Bool)

(assert (=> b!67709 m!63221))

(assert (=> d!13845 d!14383))

(declare-fun d!14385 () Bool)

(declare-fun e!44364 () Bool)

(assert (=> d!14385 e!44364))

(declare-fun res!36509 () Bool)

(assert (=> d!14385 (=> res!36509 e!44364)))

(declare-fun lt!29508 () Bool)

(assert (=> d!14385 (= res!36509 (not lt!29508))))

(declare-fun lt!29506 () Bool)

(assert (=> d!14385 (= lt!29508 lt!29506)))

(declare-fun lt!29509 () Unit!1838)

(declare-fun e!44363 () Unit!1838)

(assert (=> d!14385 (= lt!29509 e!44363)))

(declare-fun c!9498 () Bool)

(assert (=> d!14385 (= c!9498 lt!29506)))

(assert (=> d!14385 (= lt!29506 (containsKey!134 (toList!717 lt!28922) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14385 (= (contains!710 lt!28922 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29508)))

(declare-fun b!67710 () Bool)

(declare-fun lt!29507 () Unit!1838)

(assert (=> b!67710 (= e!44363 lt!29507)))

(assert (=> b!67710 (= lt!29507 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28922) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67710 (isDefined!83 (getValueByKey!130 (toList!717 lt!28922) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67711 () Bool)

(declare-fun Unit!1892 () Unit!1838)

(assert (=> b!67711 (= e!44363 Unit!1892)))

(declare-fun b!67712 () Bool)

(assert (=> b!67712 (= e!44364 (isDefined!83 (getValueByKey!130 (toList!717 lt!28922) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14385 c!9498) b!67710))

(assert (= (and d!14385 (not c!9498)) b!67711))

(assert (= (and d!14385 (not res!36509)) b!67712))

(declare-fun m!63223 () Bool)

(assert (=> d!14385 m!63223))

(declare-fun m!63225 () Bool)

(assert (=> b!67710 m!63225))

(assert (=> b!67710 m!61533))

(assert (=> b!67710 m!61533))

(declare-fun m!63227 () Bool)

(assert (=> b!67710 m!63227))

(assert (=> b!67712 m!61533))

(assert (=> b!67712 m!61533))

(assert (=> b!67712 m!63227))

(assert (=> d!13829 d!14385))

(declare-fun d!14387 () Bool)

(declare-fun c!9499 () Bool)

(assert (=> d!14387 (= c!9499 (and ((_ is Cons!1462) lt!28923) (= (_1!1057 (h!2046 lt!28923)) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44365 () Option!136)

(assert (=> d!14387 (= (getValueByKey!130 lt!28923 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44365)))

(declare-fun b!67714 () Bool)

(declare-fun e!44366 () Option!136)

(assert (=> b!67714 (= e!44365 e!44366)))

(declare-fun c!9500 () Bool)

(assert (=> b!67714 (= c!9500 (and ((_ is Cons!1462) lt!28923) (not (= (_1!1057 (h!2046 lt!28923)) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67713 () Bool)

(assert (=> b!67713 (= e!44365 (Some!135 (_2!1057 (h!2046 lt!28923))))))

(declare-fun b!67715 () Bool)

(assert (=> b!67715 (= e!44366 (getValueByKey!130 (t!4948 lt!28923) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67716 () Bool)

(assert (=> b!67716 (= e!44366 None!134)))

(assert (= (and d!14387 c!9499) b!67713))

(assert (= (and d!14387 (not c!9499)) b!67714))

(assert (= (and b!67714 c!9500) b!67715))

(assert (= (and b!67714 (not c!9500)) b!67716))

(declare-fun m!63229 () Bool)

(assert (=> b!67715 m!63229))

(assert (=> d!13829 d!14387))

(declare-fun d!14389 () Bool)

(assert (=> d!14389 (= (getValueByKey!130 lt!28923 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29510 () Unit!1838)

(assert (=> d!14389 (= lt!29510 (choose!367 lt!28923 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44367 () Bool)

(assert (=> d!14389 e!44367))

(declare-fun res!36510 () Bool)

(assert (=> d!14389 (=> (not res!36510) (not e!44367))))

(assert (=> d!14389 (= res!36510 (isStrictlySorted!289 lt!28923))))

(assert (=> d!14389 (= (lemmaContainsTupThenGetReturnValue!47 lt!28923 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29510)))

(declare-fun b!67717 () Bool)

(declare-fun res!36511 () Bool)

(assert (=> b!67717 (=> (not res!36511) (not e!44367))))

(assert (=> b!67717 (= res!36511 (containsKey!134 lt!28923 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67718 () Bool)

(assert (=> b!67718 (= e!44367 (contains!712 lt!28923 (tuple2!2093 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14389 res!36510) b!67717))

(assert (= (and b!67717 res!36511) b!67718))

(assert (=> d!14389 m!61527))

(declare-fun m!63231 () Bool)

(assert (=> d!14389 m!63231))

(declare-fun m!63233 () Bool)

(assert (=> d!14389 m!63233))

(declare-fun m!63235 () Bool)

(assert (=> b!67717 m!63235))

(declare-fun m!63237 () Bool)

(assert (=> b!67718 m!63237))

(assert (=> d!13829 d!14389))

(declare-fun b!67719 () Bool)

(declare-fun e!44370 () List!1466)

(declare-fun call!5690 () List!1466)

(assert (=> b!67719 (= e!44370 call!5690)))

(declare-fun bm!5687 () Bool)

(declare-fun call!5691 () List!1466)

(declare-fun call!5692 () List!1466)

(assert (=> bm!5687 (= call!5691 call!5692)))

(declare-fun b!67720 () Bool)

(declare-fun e!44372 () Bool)

(declare-fun lt!29511 () List!1466)

(assert (=> b!67720 (= e!44372 (contains!712 lt!29511 (tuple2!2093 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67721 () Bool)

(assert (=> b!67721 (= e!44370 call!5690)))

(declare-fun b!67722 () Bool)

(declare-fun e!44368 () List!1466)

(assert (=> b!67722 (= e!44368 (insertStrictlySorted!50 (t!4948 (toList!717 call!5572)) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67723 () Bool)

(declare-fun e!44371 () List!1466)

(assert (=> b!67723 (= e!44371 call!5692)))

(declare-fun c!9501 () Bool)

(declare-fun b!67724 () Bool)

(declare-fun c!9503 () Bool)

(assert (=> b!67724 (= e!44368 (ite c!9501 (t!4948 (toList!717 call!5572)) (ite c!9503 (Cons!1462 (h!2046 (toList!717 call!5572)) (t!4948 (toList!717 call!5572))) Nil!1463)))))

(declare-fun d!14391 () Bool)

(assert (=> d!14391 e!44372))

(declare-fun res!36513 () Bool)

(assert (=> d!14391 (=> (not res!36513) (not e!44372))))

(assert (=> d!14391 (= res!36513 (isStrictlySorted!289 lt!29511))))

(assert (=> d!14391 (= lt!29511 e!44371)))

(declare-fun c!9504 () Bool)

(assert (=> d!14391 (= c!9504 (and ((_ is Cons!1462) (toList!717 call!5572)) (bvslt (_1!1057 (h!2046 (toList!717 call!5572))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14391 (isStrictlySorted!289 (toList!717 call!5572))))

(assert (=> d!14391 (= (insertStrictlySorted!50 (toList!717 call!5572) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29511)))

(declare-fun bm!5688 () Bool)

(assert (=> bm!5688 (= call!5690 call!5691)))

(declare-fun b!67725 () Bool)

(declare-fun res!36512 () Bool)

(assert (=> b!67725 (=> (not res!36512) (not e!44372))))

(assert (=> b!67725 (= res!36512 (containsKey!134 lt!29511 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67726 () Bool)

(declare-fun e!44369 () List!1466)

(assert (=> b!67726 (= e!44369 call!5691)))

(declare-fun b!67727 () Bool)

(assert (=> b!67727 (= c!9503 (and ((_ is Cons!1462) (toList!717 call!5572)) (bvsgt (_1!1057 (h!2046 (toList!717 call!5572))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67727 (= e!44369 e!44370)))

(declare-fun b!67728 () Bool)

(assert (=> b!67728 (= e!44371 e!44369)))

(assert (=> b!67728 (= c!9501 (and ((_ is Cons!1462) (toList!717 call!5572)) (= (_1!1057 (h!2046 (toList!717 call!5572))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun bm!5689 () Bool)

(assert (=> bm!5689 (= call!5692 ($colon$colon!63 e!44368 (ite c!9504 (h!2046 (toList!717 call!5572)) (tuple2!2093 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9502 () Bool)

(assert (=> bm!5689 (= c!9502 c!9504)))

(assert (= (and d!14391 c!9504) b!67723))

(assert (= (and d!14391 (not c!9504)) b!67728))

(assert (= (and b!67728 c!9501) b!67726))

(assert (= (and b!67728 (not c!9501)) b!67727))

(assert (= (and b!67727 c!9503) b!67721))

(assert (= (and b!67727 (not c!9503)) b!67719))

(assert (= (or b!67721 b!67719) bm!5688))

(assert (= (or b!67726 bm!5688) bm!5687))

(assert (= (or b!67723 bm!5687) bm!5689))

(assert (= (and bm!5689 c!9502) b!67722))

(assert (= (and bm!5689 (not c!9502)) b!67724))

(assert (= (and d!14391 res!36513) b!67725))

(assert (= (and b!67725 res!36512) b!67720))

(declare-fun m!63239 () Bool)

(assert (=> b!67720 m!63239))

(declare-fun m!63241 () Bool)

(assert (=> d!14391 m!63241))

(declare-fun m!63243 () Bool)

(assert (=> d!14391 m!63243))

(declare-fun m!63245 () Bool)

(assert (=> bm!5689 m!63245))

(declare-fun m!63247 () Bool)

(assert (=> b!67725 m!63247))

(declare-fun m!63249 () Bool)

(assert (=> b!67722 m!63249))

(assert (=> d!13829 d!14391))

(declare-fun d!14393 () Bool)

(assert (=> d!14393 (isDefined!83 (getValueByKey!130 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun lt!29512 () Unit!1838)

(assert (=> d!14393 (= lt!29512 (choose!377 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!44373 () Bool)

(assert (=> d!14393 e!44373))

(declare-fun res!36514 () Bool)

(assert (=> d!14393 (=> (not res!36514) (not e!44373))))

(assert (=> d!14393 (= res!36514 (isStrictlySorted!289 (toList!717 e!43724)))))

(assert (=> d!14393 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29512)))

(declare-fun b!67729 () Bool)

(assert (=> b!67729 (= e!44373 (containsKey!134 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14393 res!36514) b!67729))

(assert (=> d!14393 m!61065))

(assert (=> d!14393 m!61913))

(assert (=> d!14393 m!61913))

(assert (=> d!14393 m!61915))

(assert (=> d!14393 m!61065))

(declare-fun m!63251 () Bool)

(assert (=> d!14393 m!63251))

(declare-fun m!63253 () Bool)

(assert (=> d!14393 m!63253))

(assert (=> b!67729 m!61065))

(assert (=> b!67729 m!61909))

(assert (=> b!67010 d!14393))

(assert (=> b!67010 d!14195))

(assert (=> b!67010 d!14197))

(declare-fun d!14395 () Bool)

(assert (=> d!14395 (= (inRange!0 (ite c!9300 (index!3061 lt!29139) (ite c!9302 (index!3060 lt!29110) (index!3063 lt!29110))) (mask!6082 newMap!16)) (and (bvsge (ite c!9300 (index!3061 lt!29139) (ite c!9302 (index!3060 lt!29110) (index!3063 lt!29110))) #b00000000000000000000000000000000) (bvslt (ite c!9300 (index!3061 lt!29139) (ite c!9302 (index!3060 lt!29110) (index!3063 lt!29110))) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5620 d!14395))

(declare-fun d!14397 () Bool)

(declare-fun res!36515 () Bool)

(declare-fun e!44374 () Bool)

(assert (=> d!14397 (=> res!36515 e!44374)))

(assert (=> d!14397 (= res!36515 (and ((_ is Cons!1462) lt!28708) (= (_1!1057 (h!2046 lt!28708)) (_1!1057 lt!28624))))))

(assert (=> d!14397 (= (containsKey!134 lt!28708 (_1!1057 lt!28624)) e!44374)))

(declare-fun b!67730 () Bool)

(declare-fun e!44375 () Bool)

(assert (=> b!67730 (= e!44374 e!44375)))

(declare-fun res!36516 () Bool)

(assert (=> b!67730 (=> (not res!36516) (not e!44375))))

(assert (=> b!67730 (= res!36516 (and (or (not ((_ is Cons!1462) lt!28708)) (bvsle (_1!1057 (h!2046 lt!28708)) (_1!1057 lt!28624))) ((_ is Cons!1462) lt!28708) (bvslt (_1!1057 (h!2046 lt!28708)) (_1!1057 lt!28624))))))

(declare-fun b!67731 () Bool)

(assert (=> b!67731 (= e!44375 (containsKey!134 (t!4948 lt!28708) (_1!1057 lt!28624)))))

(assert (= (and d!14397 (not res!36515)) b!67730))

(assert (= (and b!67730 res!36516) b!67731))

(declare-fun m!63255 () Bool)

(assert (=> b!67731 m!63255))

(assert (=> b!66850 d!14397))

(declare-fun d!14399 () Bool)

(assert (=> d!14399 (= (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28873)) (v!2482 (getValueByKey!130 (toList!717 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28873)))))

(assert (=> d!13925 d!14399))

(declare-fun c!9505 () Bool)

(declare-fun d!14401 () Bool)

(assert (=> d!14401 (= c!9505 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28873)))))

(declare-fun e!44376 () Option!136)

(assert (=> d!14401 (= (getValueByKey!130 (toList!717 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28873) e!44376)))

(declare-fun b!67733 () Bool)

(declare-fun e!44377 () Option!136)

(assert (=> b!67733 (= e!44376 e!44377)))

(declare-fun c!9506 () Bool)

(assert (=> b!67733 (= c!9506 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (not (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28873))))))

(declare-fun b!67732 () Bool)

(assert (=> b!67732 (= e!44376 (Some!135 (_2!1057 (h!2046 (toList!717 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun b!67734 () Bool)

(assert (=> b!67734 (= e!44377 (getValueByKey!130 (t!4948 (toList!717 (+!89 lt!28863 (tuple2!2093 lt!28862 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) lt!28873))))

(declare-fun b!67735 () Bool)

(assert (=> b!67735 (= e!44377 None!134)))

(assert (= (and d!14401 c!9505) b!67732))

(assert (= (and d!14401 (not c!9505)) b!67733))

(assert (= (and b!67733 c!9506) b!67734))

(assert (= (and b!67733 (not c!9506)) b!67735))

(declare-fun m!63257 () Bool)

(assert (=> b!67734 m!63257))

(assert (=> d!13925 d!14401))

(declare-fun d!14403 () Bool)

(declare-fun e!44379 () Bool)

(assert (=> d!14403 e!44379))

(declare-fun res!36517 () Bool)

(assert (=> d!14403 (=> res!36517 e!44379)))

(declare-fun lt!29515 () Bool)

(assert (=> d!14403 (= res!36517 (not lt!29515))))

(declare-fun lt!29513 () Bool)

(assert (=> d!14403 (= lt!29515 lt!29513)))

(declare-fun lt!29516 () Unit!1838)

(declare-fun e!44378 () Unit!1838)

(assert (=> d!14403 (= lt!29516 e!44378)))

(declare-fun c!9507 () Bool)

(assert (=> d!14403 (= c!9507 lt!29513)))

(assert (=> d!14403 (= lt!29513 (containsKey!134 (toList!717 lt!28913) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14403 (= (contains!710 lt!28913 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) lt!29515)))

(declare-fun b!67736 () Bool)

(declare-fun lt!29514 () Unit!1838)

(assert (=> b!67736 (= e!44378 lt!29514)))

(assert (=> b!67736 (= lt!29514 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28913) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67736 (isDefined!83 (getValueByKey!130 (toList!717 lt!28913) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67737 () Bool)

(declare-fun Unit!1893 () Unit!1838)

(assert (=> b!67737 (= e!44378 Unit!1893)))

(declare-fun b!67738 () Bool)

(assert (=> b!67738 (= e!44379 (isDefined!83 (getValueByKey!130 (toList!717 lt!28913) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14403 c!9507) b!67736))

(assert (= (and d!14403 (not c!9507)) b!67737))

(assert (= (and d!14403 (not res!36517)) b!67738))

(assert (=> d!14403 m!61465))

(declare-fun m!63259 () Bool)

(assert (=> d!14403 m!63259))

(assert (=> b!67736 m!61465))

(declare-fun m!63261 () Bool)

(assert (=> b!67736 m!63261))

(assert (=> b!67736 m!61465))

(assert (=> b!67736 m!62911))

(assert (=> b!67736 m!62911))

(declare-fun m!63263 () Bool)

(assert (=> b!67736 m!63263))

(assert (=> b!67738 m!61465))

(assert (=> b!67738 m!62911))

(assert (=> b!67738 m!62911))

(assert (=> b!67738 m!63263))

(assert (=> b!66803 d!14403))

(declare-fun d!14405 () Bool)

(declare-fun e!44381 () Bool)

(assert (=> d!14405 e!44381))

(declare-fun res!36518 () Bool)

(assert (=> d!14405 (=> res!36518 e!44381)))

(declare-fun lt!29519 () Bool)

(assert (=> d!14405 (= res!36518 (not lt!29519))))

(declare-fun lt!29517 () Bool)

(assert (=> d!14405 (= lt!29519 lt!29517)))

(declare-fun lt!29520 () Unit!1838)

(declare-fun e!44380 () Unit!1838)

(assert (=> d!14405 (= lt!29520 e!44380)))

(declare-fun c!9508 () Bool)

(assert (=> d!14405 (= c!9508 lt!29517)))

(assert (=> d!14405 (= lt!29517 (containsKey!134 (toList!717 lt!29235) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14405 (= (contains!710 lt!29235 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29519)))

(declare-fun b!67739 () Bool)

(declare-fun lt!29518 () Unit!1838)

(assert (=> b!67739 (= e!44380 lt!29518)))

(assert (=> b!67739 (= lt!29518 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29235) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67739 (isDefined!83 (getValueByKey!130 (toList!717 lt!29235) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67740 () Bool)

(declare-fun Unit!1894 () Unit!1838)

(assert (=> b!67740 (= e!44380 Unit!1894)))

(declare-fun b!67741 () Bool)

(assert (=> b!67741 (= e!44381 (isDefined!83 (getValueByKey!130 (toList!717 lt!29235) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14405 c!9508) b!67739))

(assert (= (and d!14405 (not c!9508)) b!67740))

(assert (= (and d!14405 (not res!36518)) b!67741))

(declare-fun m!63265 () Bool)

(assert (=> d!14405 m!63265))

(declare-fun m!63267 () Bool)

(assert (=> b!67739 m!63267))

(declare-fun m!63269 () Bool)

(assert (=> b!67739 m!63269))

(assert (=> b!67739 m!63269))

(declare-fun m!63271 () Bool)

(assert (=> b!67739 m!63271))

(assert (=> b!67741 m!63269))

(assert (=> b!67741 m!63269))

(assert (=> b!67741 m!63271))

(assert (=> bm!5632 d!14405))

(declare-fun d!14407 () Bool)

(declare-fun e!44382 () Bool)

(assert (=> d!14407 e!44382))

(declare-fun res!36520 () Bool)

(assert (=> d!14407 (=> (not res!36520) (not e!44382))))

(declare-fun lt!29521 () ListLongMap!1403)

(assert (=> d!14407 (= res!36520 (contains!710 lt!29521 (_1!1057 (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(declare-fun lt!29522 () List!1466)

(assert (=> d!14407 (= lt!29521 (ListLongMap!1404 lt!29522))))

(declare-fun lt!29523 () Unit!1838)

(declare-fun lt!29524 () Unit!1838)

(assert (=> d!14407 (= lt!29523 lt!29524)))

(assert (=> d!14407 (= (getValueByKey!130 lt!29522 (_1!1057 (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))) (Some!135 (_2!1057 (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14407 (= lt!29524 (lemmaContainsTupThenGetReturnValue!47 lt!29522 (_1!1057 (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (_2!1057 (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14407 (= lt!29522 (insertStrictlySorted!50 (toList!717 (ite c!9242 call!5590 (ite c!9241 call!5585 call!5587))) (_1!1057 (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (_2!1057 (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14407 (= (+!89 (ite c!9242 call!5590 (ite c!9241 call!5585 call!5587)) (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) lt!29521)))

(declare-fun b!67742 () Bool)

(declare-fun res!36519 () Bool)

(assert (=> b!67742 (=> (not res!36519) (not e!44382))))

(assert (=> b!67742 (= res!36519 (= (getValueByKey!130 (toList!717 lt!29521) (_1!1057 (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))) (Some!135 (_2!1057 (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))))

(declare-fun b!67743 () Bool)

(assert (=> b!67743 (= e!44382 (contains!712 (toList!717 lt!29521) (ite (or c!9242 c!9241) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9195 c!9196) lt!28616 (zeroValue!2055 newMap!16))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (= (and d!14407 res!36520) b!67742))

(assert (= (and b!67742 res!36519) b!67743))

(declare-fun m!63273 () Bool)

(assert (=> d!14407 m!63273))

(declare-fun m!63275 () Bool)

(assert (=> d!14407 m!63275))

(declare-fun m!63277 () Bool)

(assert (=> d!14407 m!63277))

(declare-fun m!63279 () Bool)

(assert (=> d!14407 m!63279))

(declare-fun m!63281 () Bool)

(assert (=> b!67742 m!63281))

(declare-fun m!63283 () Bool)

(assert (=> b!67743 m!63283))

(assert (=> bm!5585 d!14407))

(assert (=> bm!5592 d!13853))

(declare-fun d!14409 () Bool)

(declare-fun c!9509 () Bool)

(assert (=> d!14409 (= c!9509 (and ((_ is Cons!1462) (t!4948 lt!28704)) (= (_1!1057 (h!2046 (t!4948 lt!28704))) (_1!1057 lt!28617))))))

(declare-fun e!44383 () Option!136)

(assert (=> d!14409 (= (getValueByKey!130 (t!4948 lt!28704) (_1!1057 lt!28617)) e!44383)))

(declare-fun b!67745 () Bool)

(declare-fun e!44384 () Option!136)

(assert (=> b!67745 (= e!44383 e!44384)))

(declare-fun c!9510 () Bool)

(assert (=> b!67745 (= c!9510 (and ((_ is Cons!1462) (t!4948 lt!28704)) (not (= (_1!1057 (h!2046 (t!4948 lt!28704))) (_1!1057 lt!28617)))))))

(declare-fun b!67744 () Bool)

(assert (=> b!67744 (= e!44383 (Some!135 (_2!1057 (h!2046 (t!4948 lt!28704)))))))

(declare-fun b!67746 () Bool)

(assert (=> b!67746 (= e!44384 (getValueByKey!130 (t!4948 (t!4948 lt!28704)) (_1!1057 lt!28617)))))

(declare-fun b!67747 () Bool)

(assert (=> b!67747 (= e!44384 None!134)))

(assert (= (and d!14409 c!9509) b!67744))

(assert (= (and d!14409 (not c!9509)) b!67745))

(assert (= (and b!67745 c!9510) b!67746))

(assert (= (and b!67745 (not c!9510)) b!67747))

(declare-fun m!63285 () Bool)

(assert (=> b!67746 m!63285))

(assert (=> b!66744 d!14409))

(assert (=> d!13849 d!13947))

(declare-fun d!14411 () Bool)

(declare-fun e!44387 () Bool)

(assert (=> d!14411 e!44387))

(declare-fun res!36525 () Bool)

(assert (=> d!14411 (=> (not res!36525) (not e!44387))))

(declare-fun lt!29527 () SeekEntryResult!233)

(assert (=> d!14411 (= res!36525 ((_ is Found!233) lt!29527))))

(assert (=> d!14411 (= lt!29527 (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (=> d!14411 true))

(declare-fun _$33!51 () Unit!1838)

(assert (=> d!14411 (= (choose!369 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)) _$33!51)))

(declare-fun b!67752 () Bool)

(declare-fun res!36526 () Bool)

(assert (=> b!67752 (=> (not res!36526) (not e!44387))))

(assert (=> b!67752 (= res!36526 (inRange!0 (index!3061 lt!29527) (mask!6082 newMap!16)))))

(declare-fun b!67753 () Bool)

(assert (=> b!67753 (= e!44387 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!29527)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14411 res!36525) b!67752))

(assert (= (and b!67752 res!36526) b!67753))

(assert (=> d!14411 m!61065))

(assert (=> d!14411 m!61305))

(declare-fun m!63287 () Bool)

(assert (=> b!67752 m!63287))

(declare-fun m!63289 () Bool)

(assert (=> b!67753 m!63289))

(assert (=> d!13849 d!14411))

(assert (=> d!13849 d!14025))

(declare-fun d!14413 () Bool)

(declare-fun res!36527 () Bool)

(declare-fun e!44388 () Bool)

(assert (=> d!14413 (=> res!36527 e!44388)))

(assert (=> d!14413 (= res!36527 (or ((_ is Nil!1463) lt!28943) ((_ is Nil!1463) (t!4948 lt!28943))))))

(assert (=> d!14413 (= (isStrictlySorted!289 lt!28943) e!44388)))

(declare-fun b!67754 () Bool)

(declare-fun e!44389 () Bool)

(assert (=> b!67754 (= e!44388 e!44389)))

(declare-fun res!36528 () Bool)

(assert (=> b!67754 (=> (not res!36528) (not e!44389))))

(assert (=> b!67754 (= res!36528 (bvslt (_1!1057 (h!2046 lt!28943)) (_1!1057 (h!2046 (t!4948 lt!28943)))))))

(declare-fun b!67755 () Bool)

(assert (=> b!67755 (= e!44389 (isStrictlySorted!289 (t!4948 lt!28943)))))

(assert (= (and d!14413 (not res!36527)) b!67754))

(assert (= (and b!67754 res!36528) b!67755))

(declare-fun m!63291 () Bool)

(assert (=> b!67755 m!63291))

(assert (=> d!13847 d!14413))

(declare-fun d!14415 () Bool)

(declare-fun res!36529 () Bool)

(declare-fun e!44390 () Bool)

(assert (=> d!14415 (=> res!36529 e!44390)))

(assert (=> d!14415 (= res!36529 (or ((_ is Nil!1463) (toList!717 (+!89 lt!28620 lt!28624))) ((_ is Nil!1463) (t!4948 (toList!717 (+!89 lt!28620 lt!28624))))))))

(assert (=> d!14415 (= (isStrictlySorted!289 (toList!717 (+!89 lt!28620 lt!28624))) e!44390)))

(declare-fun b!67756 () Bool)

(declare-fun e!44391 () Bool)

(assert (=> b!67756 (= e!44390 e!44391)))

(declare-fun res!36530 () Bool)

(assert (=> b!67756 (=> (not res!36530) (not e!44391))))

(assert (=> b!67756 (= res!36530 (bvslt (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 lt!28624)))) (_1!1057 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28624)))))))))

(declare-fun b!67757 () Bool)

(assert (=> b!67757 (= e!44391 (isStrictlySorted!289 (t!4948 (toList!717 (+!89 lt!28620 lt!28624)))))))

(assert (= (and d!14415 (not res!36529)) b!67756))

(assert (= (and b!67756 res!36530) b!67757))

(assert (=> b!67757 m!62553))

(assert (=> d!13847 d!14415))

(declare-fun lt!29528 () Bool)

(declare-fun d!14417 () Bool)

(assert (=> d!14417 (= lt!29528 (select (content!71 (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!44393 () Bool)

(assert (=> d!14417 (= lt!29528 e!44393)))

(declare-fun res!36532 () Bool)

(assert (=> d!14417 (=> (not res!36532) (not e!44393))))

(assert (=> d!14417 (= res!36532 ((_ is Cons!1461) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)))))

(assert (=> d!14417 (= (contains!713 (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!29528)))

(declare-fun b!67758 () Bool)

(declare-fun e!44392 () Bool)

(assert (=> b!67758 (= e!44393 e!44392)))

(declare-fun res!36531 () Bool)

(assert (=> b!67758 (=> res!36531 e!44392)))

(assert (=> b!67758 (= res!36531 (= (h!2045 (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!67759 () Bool)

(assert (=> b!67759 (= e!44392 (contains!713 (t!4947 (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!14417 res!36532) b!67758))

(assert (= (and b!67758 (not res!36531)) b!67759))

(declare-fun m!63293 () Bool)

(assert (=> d!14417 m!63293))

(assert (=> d!14417 m!62021))

(declare-fun m!63295 () Bool)

(assert (=> d!14417 m!63295))

(assert (=> b!67759 m!62021))

(declare-fun m!63297 () Bool)

(assert (=> b!67759 m!63297))

(assert (=> b!67102 d!14417))

(declare-fun d!14419 () Bool)

(assert (=> d!14419 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (getCurrentListMap!415 (_keys!3787 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(assert (=> d!14419 true))

(declare-fun _$5!71 () Unit!1838)

(assert (=> d!14419 (= (choose!374 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (index!3061 lt!28803) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 (defaultEntry!2147 newMap!16)) _$5!71)))

(declare-fun bs!2927 () Bool)

(assert (= bs!2927 d!14419))

(assert (=> bs!2927 m!61299))

(assert (=> bs!2927 m!61299))

(assert (=> bs!2927 m!61943))

(assert (=> bs!2927 m!61331))

(assert (=> bs!2927 m!62019))

(assert (=> d!13955 d!14419))

(assert (=> d!13955 d!14025))

(assert (=> d!13989 d!13987))

(declare-fun d!14421 () Bool)

(assert (=> d!14421 (= (getValueByKey!130 lt!28676 (_1!1057 lt!28624)) (Some!135 (_2!1057 lt!28624)))))

(assert (=> d!14421 true))

(declare-fun _$22!368 () Unit!1838)

(assert (=> d!14421 (= (choose!367 lt!28676 (_1!1057 lt!28624) (_2!1057 lt!28624)) _$22!368)))

(declare-fun bs!2928 () Bool)

(assert (= bs!2928 d!14421))

(assert (=> bs!2928 m!61205))

(assert (=> d!13989 d!14421))

(declare-fun d!14423 () Bool)

(declare-fun res!36533 () Bool)

(declare-fun e!44394 () Bool)

(assert (=> d!14423 (=> res!36533 e!44394)))

(assert (=> d!14423 (= res!36533 (or ((_ is Nil!1463) lt!28676) ((_ is Nil!1463) (t!4948 lt!28676))))))

(assert (=> d!14423 (= (isStrictlySorted!289 lt!28676) e!44394)))

(declare-fun b!67760 () Bool)

(declare-fun e!44395 () Bool)

(assert (=> b!67760 (= e!44394 e!44395)))

(declare-fun res!36534 () Bool)

(assert (=> b!67760 (=> (not res!36534) (not e!44395))))

(assert (=> b!67760 (= res!36534 (bvslt (_1!1057 (h!2046 lt!28676)) (_1!1057 (h!2046 (t!4948 lt!28676)))))))

(declare-fun b!67761 () Bool)

(assert (=> b!67761 (= e!44395 (isStrictlySorted!289 (t!4948 lt!28676)))))

(assert (= (and d!14423 (not res!36533)) b!67760))

(assert (= (and b!67760 res!36534) b!67761))

(declare-fun m!63299 () Bool)

(assert (=> b!67761 m!63299))

(assert (=> d!13989 d!14423))

(declare-fun d!14425 () Bool)

(assert (=> d!14425 (isDefined!83 (getValueByKey!130 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(declare-fun lt!29529 () Unit!1838)

(assert (=> d!14425 (= lt!29529 (choose!377 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(declare-fun e!44396 () Bool)

(assert (=> d!14425 e!44396))

(declare-fun res!36535 () Bool)

(assert (=> d!14425 (=> (not res!36535) (not e!44396))))

(assert (=> d!14425 (= res!36535 (isStrictlySorted!289 (toList!717 call!5538)))))

(assert (=> d!14425 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))) lt!29529)))

(declare-fun b!67762 () Bool)

(assert (=> b!67762 (= e!44396 (containsKey!134 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(assert (= (and d!14425 res!36535) b!67762))

(assert (=> d!14425 m!61335))

(assert (=> d!14425 m!62007))

(assert (=> d!14425 m!62007))

(assert (=> d!14425 m!62009))

(assert (=> d!14425 m!61335))

(declare-fun m!63301 () Bool)

(assert (=> d!14425 m!63301))

(declare-fun m!63303 () Bool)

(assert (=> d!14425 m!63303))

(assert (=> b!67762 m!61335))

(assert (=> b!67762 m!62003))

(assert (=> b!67093 d!14425))

(assert (=> b!67093 d!14231))

(assert (=> b!67093 d!14233))

(declare-fun d!14427 () Bool)

(assert (=> d!14427 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866))))

(declare-fun lt!29530 () Unit!1838)

(assert (=> d!14427 (= lt!29530 (choose!377 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866))))

(declare-fun e!44397 () Bool)

(assert (=> d!14427 e!44397))

(declare-fun res!36536 () Bool)

(assert (=> d!14427 (=> (not res!36536) (not e!44397))))

(assert (=> d!14427 (= res!36536 (isStrictlySorted!289 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14427 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866) lt!29530)))

(declare-fun b!67763 () Bool)

(assert (=> b!67763 (= e!44397 (containsKey!134 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866))))

(assert (= (and d!14427 res!36536) b!67763))

(assert (=> d!14427 m!61885))

(assert (=> d!14427 m!61885))

(assert (=> d!14427 m!61887))

(declare-fun m!63305 () Bool)

(assert (=> d!14427 m!63305))

(declare-fun m!63307 () Bool)

(assert (=> d!14427 m!63307))

(assert (=> b!67763 m!61881))

(assert (=> b!67005 d!14427))

(assert (=> b!67005 d!14235))

(assert (=> b!67005 d!14237))

(declare-fun d!14429 () Bool)

(declare-fun e!44398 () Bool)

(assert (=> d!14429 e!44398))

(declare-fun res!36538 () Bool)

(assert (=> d!14429 (=> (not res!36538) (not e!44398))))

(declare-fun lt!29531 () ListLongMap!1403)

(assert (=> d!14429 (= res!36538 (contains!710 lt!29531 (_1!1057 (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(declare-fun lt!29532 () List!1466)

(assert (=> d!14429 (= lt!29531 (ListLongMap!1404 lt!29532))))

(declare-fun lt!29533 () Unit!1838)

(declare-fun lt!29534 () Unit!1838)

(assert (=> d!14429 (= lt!29533 lt!29534)))

(assert (=> d!14429 (= (getValueByKey!130 lt!29532 (_1!1057 (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))) (Some!135 (_2!1057 (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14429 (= lt!29534 (lemmaContainsTupThenGetReturnValue!47 lt!29532 (_1!1057 (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (_2!1057 (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14429 (= lt!29532 (insertStrictlySorted!50 (toList!717 (ite c!9282 call!5614 (ite c!9281 call!5609 call!5611))) (_1!1057 (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (_2!1057 (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(assert (=> d!14429 (= (+!89 (ite c!9282 call!5614 (ite c!9281 call!5609 call!5611)) (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) lt!29531)))

(declare-fun b!67764 () Bool)

(declare-fun res!36537 () Bool)

(assert (=> b!67764 (=> (not res!36537) (not e!44398))))

(assert (=> b!67764 (= res!36537 (= (getValueByKey!130 (toList!717 lt!29531) (_1!1057 (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))) (Some!135 (_2!1057 (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))))

(declare-fun b!67765 () Bool)

(assert (=> b!67765 (= e!44398 (contains!712 (toList!717 lt!29531) (ite (or c!9282 c!9281) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (= (and d!14429 res!36538) b!67764))

(assert (= (and b!67764 res!36537) b!67765))

(declare-fun m!63309 () Bool)

(assert (=> d!14429 m!63309))

(declare-fun m!63311 () Bool)

(assert (=> d!14429 m!63311))

(declare-fun m!63313 () Bool)

(assert (=> d!14429 m!63313))

(declare-fun m!63315 () Bool)

(assert (=> d!14429 m!63315))

(declare-fun m!63317 () Bool)

(assert (=> b!67764 m!63317))

(declare-fun m!63319 () Bool)

(assert (=> b!67765 m!63319))

(assert (=> bm!5609 d!14429))

(declare-fun bm!5690 () Bool)

(declare-fun call!5693 () ListLongMap!1403)

(assert (=> bm!5690 (= call!5693 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!67766 () Bool)

(declare-fun e!44401 () ListLongMap!1403)

(assert (=> b!67766 (= e!44401 (ListLongMap!1404 Nil!1463))))

(declare-fun b!67767 () Bool)

(declare-fun lt!29535 () Unit!1838)

(declare-fun lt!29541 () Unit!1838)

(assert (=> b!67767 (= lt!29535 lt!29541)))

(declare-fun lt!29538 () (_ BitVec 64))

(declare-fun lt!29536 () V!2915)

(declare-fun lt!29539 () ListLongMap!1403)

(declare-fun lt!29537 () (_ BitVec 64))

(assert (=> b!67767 (not (contains!710 (+!89 lt!29539 (tuple2!2093 lt!29537 lt!29536)) lt!29538))))

(assert (=> b!67767 (= lt!29541 (addStillNotContains!21 lt!29539 lt!29537 lt!29536 lt!29538))))

(assert (=> b!67767 (= lt!29538 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67767 (= lt!29536 (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67767 (= lt!29537 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!67767 (= lt!29539 call!5693)))

(declare-fun e!44404 () ListLongMap!1403)

(assert (=> b!67767 (= e!44404 (+!89 call!5693 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67768 () Bool)

(assert (=> b!67768 (= e!44401 e!44404)))

(declare-fun c!9514 () Bool)

(assert (=> b!67768 (= c!9514 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67769 () Bool)

(declare-fun e!44403 () Bool)

(declare-fun lt!29540 () ListLongMap!1403)

(assert (=> b!67769 (= e!44403 (isEmpty!307 lt!29540))))

(declare-fun b!67770 () Bool)

(declare-fun e!44405 () Bool)

(assert (=> b!67770 (= e!44405 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!67770 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!67771 () Bool)

(declare-fun res!36539 () Bool)

(declare-fun e!44400 () Bool)

(assert (=> b!67771 (=> (not res!36539) (not e!44400))))

(assert (=> b!67771 (= res!36539 (not (contains!710 lt!29540 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67772 () Bool)

(declare-fun e!44402 () Bool)

(assert (=> b!67772 (= e!44400 e!44402)))

(declare-fun c!9513 () Bool)

(assert (=> b!67772 (= c!9513 e!44405)))

(declare-fun res!36540 () Bool)

(assert (=> b!67772 (=> (not res!36540) (not e!44405))))

(assert (=> b!67772 (= res!36540 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun d!14431 () Bool)

(assert (=> d!14431 e!44400))

(declare-fun res!36542 () Bool)

(assert (=> d!14431 (=> (not res!36542) (not e!44400))))

(assert (=> d!14431 (= res!36542 (not (contains!710 lt!29540 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14431 (= lt!29540 e!44401)))

(declare-fun c!9512 () Bool)

(assert (=> d!14431 (= c!9512 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14431 (validMask!0 (mask!6082 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!14431 (= (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992)))) lt!29540)))

(declare-fun b!67773 () Bool)

(assert (=> b!67773 (= e!44403 (= lt!29540 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (_values!2130 (v!2478 (underlying!250 thiss!992))) (mask!6082 (v!2478 (underlying!250 thiss!992))) (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) (zeroValue!2055 (v!2478 (underlying!250 thiss!992))) (minValue!2055 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67774 () Bool)

(declare-fun e!44399 () Bool)

(assert (=> b!67774 (= e!44402 e!44399)))

(assert (=> b!67774 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun res!36541 () Bool)

(assert (=> b!67774 (= res!36541 (contains!710 lt!29540 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!67774 (=> (not res!36541) (not e!44399))))

(declare-fun b!67775 () Bool)

(assert (=> b!67775 (= e!44404 call!5693)))

(declare-fun b!67776 () Bool)

(assert (=> b!67776 (= e!44402 e!44403)))

(declare-fun c!9511 () Bool)

(assert (=> b!67776 (= c!9511 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67777 () Bool)

(assert (=> b!67777 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!67777 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2071 (_values!2130 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!67777 (= e!44399 (= (apply!72 lt!29540 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14431 c!9512) b!67766))

(assert (= (and d!14431 (not c!9512)) b!67768))

(assert (= (and b!67768 c!9514) b!67767))

(assert (= (and b!67768 (not c!9514)) b!67775))

(assert (= (or b!67767 b!67775) bm!5690))

(assert (= (and d!14431 res!36542) b!67771))

(assert (= (and b!67771 res!36539) b!67772))

(assert (= (and b!67772 res!36540) b!67770))

(assert (= (and b!67772 c!9513) b!67774))

(assert (= (and b!67772 (not c!9513)) b!67776))

(assert (= (and b!67774 res!36541) b!67777))

(assert (= (and b!67776 c!9511) b!67773))

(assert (= (and b!67776 (not c!9511)) b!67769))

(declare-fun b_lambda!3025 () Bool)

(assert (=> (not b_lambda!3025) (not b!67767)))

(assert (=> b!67767 t!4944))

(declare-fun b_and!4175 () Bool)

(assert (= b_and!4171 (and (=> t!4944 result!2577) b_and!4175)))

(assert (=> b!67767 t!4946))

(declare-fun b_and!4177 () Bool)

(assert (= b_and!4173 (and (=> t!4946 result!2581) b_and!4177)))

(declare-fun b_lambda!3027 () Bool)

(assert (=> (not b_lambda!3027) (not b!67777)))

(assert (=> b!67777 t!4944))

(declare-fun b_and!4179 () Bool)

(assert (= b_and!4175 (and (=> t!4944 result!2577) b_and!4179)))

(assert (=> b!67777 t!4946))

(declare-fun b_and!4181 () Bool)

(assert (= b_and!4177 (and (=> t!4946 result!2581) b_and!4181)))

(declare-fun m!63321 () Bool)

(assert (=> b!67771 m!63321))

(declare-fun m!63323 () Bool)

(assert (=> b!67769 m!63323))

(declare-fun m!63325 () Bool)

(assert (=> b!67773 m!63325))

(declare-fun m!63327 () Bool)

(assert (=> b!67767 m!63327))

(declare-fun m!63329 () Bool)

(assert (=> b!67767 m!63329))

(assert (=> b!67767 m!63327))

(declare-fun m!63331 () Bool)

(assert (=> b!67767 m!63331))

(declare-fun m!63333 () Bool)

(assert (=> b!67767 m!63333))

(assert (=> b!67767 m!62631))

(assert (=> b!67767 m!61089))

(assert (=> b!67767 m!63333))

(assert (=> b!67767 m!61089))

(declare-fun m!63335 () Bool)

(assert (=> b!67767 m!63335))

(declare-fun m!63337 () Bool)

(assert (=> b!67767 m!63337))

(assert (=> b!67777 m!62631))

(declare-fun m!63339 () Bool)

(assert (=> b!67777 m!63339))

(assert (=> b!67777 m!63333))

(assert (=> b!67777 m!63333))

(assert (=> b!67777 m!61089))

(assert (=> b!67777 m!63335))

(assert (=> b!67777 m!62631))

(assert (=> b!67777 m!61089))

(assert (=> b!67774 m!62631))

(assert (=> b!67774 m!62631))

(declare-fun m!63341 () Bool)

(assert (=> b!67774 m!63341))

(declare-fun m!63343 () Bool)

(assert (=> d!14431 m!63343))

(assert (=> d!14431 m!61069))

(assert (=> b!67770 m!62631))

(assert (=> b!67770 m!62631))

(declare-fun m!63345 () Bool)

(assert (=> b!67770 m!63345))

(assert (=> bm!5690 m!63325))

(assert (=> b!67768 m!62631))

(assert (=> b!67768 m!62631))

(assert (=> b!67768 m!63345))

(assert (=> b!66901 d!14431))

(declare-fun d!14433 () Bool)

(declare-fun lt!29542 () Bool)

(assert (=> d!14433 (= lt!29542 (select (content!71 Nil!1462) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!44407 () Bool)

(assert (=> d!14433 (= lt!29542 e!44407)))

(declare-fun res!36544 () Bool)

(assert (=> d!14433 (=> (not res!36544) (not e!44407))))

(assert (=> d!14433 (= res!36544 ((_ is Cons!1461) Nil!1462))))

(assert (=> d!14433 (= (contains!713 Nil!1462 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) lt!29542)))

(declare-fun b!67778 () Bool)

(declare-fun e!44406 () Bool)

(assert (=> b!67778 (= e!44407 e!44406)))

(declare-fun res!36543 () Bool)

(assert (=> b!67778 (=> res!36543 e!44406)))

(assert (=> b!67778 (= res!36543 (= (h!2045 Nil!1462) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67779 () Bool)

(assert (=> b!67779 (= e!44406 (contains!713 (t!4947 Nil!1462) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!14433 res!36544) b!67778))

(assert (= (and b!67778 (not res!36543)) b!67779))

(assert (=> d!14433 m!61501))

(assert (=> d!14433 m!61465))

(declare-fun m!63347 () Bool)

(assert (=> d!14433 m!63347))

(assert (=> b!67779 m!61465))

(declare-fun m!63349 () Bool)

(assert (=> b!67779 m!63349))

(assert (=> b!66889 d!14433))

(declare-fun c!9515 () Bool)

(declare-fun d!14435 () Bool)

(assert (=> d!14435 (= c!9515 (and ((_ is Cons!1462) (toList!717 lt!29026)) (= (_1!1057 (h!2046 (toList!717 lt!29026))) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44408 () Option!136)

(assert (=> d!14435 (= (getValueByKey!130 (toList!717 lt!29026) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44408)))

(declare-fun b!67781 () Bool)

(declare-fun e!44409 () Option!136)

(assert (=> b!67781 (= e!44408 e!44409)))

(declare-fun c!9516 () Bool)

(assert (=> b!67781 (= c!9516 (and ((_ is Cons!1462) (toList!717 lt!29026)) (not (= (_1!1057 (h!2046 (toList!717 lt!29026))) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67780 () Bool)

(assert (=> b!67780 (= e!44408 (Some!135 (_2!1057 (h!2046 (toList!717 lt!29026)))))))

(declare-fun b!67782 () Bool)

(assert (=> b!67782 (= e!44409 (getValueByKey!130 (t!4948 (toList!717 lt!29026)) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67783 () Bool)

(assert (=> b!67783 (= e!44409 None!134)))

(assert (= (and d!14435 c!9515) b!67780))

(assert (= (and d!14435 (not c!9515)) b!67781))

(assert (= (and b!67781 c!9516) b!67782))

(assert (= (and b!67781 (not c!9516)) b!67783))

(declare-fun m!63351 () Bool)

(assert (=> b!67782 m!63351))

(assert (=> b!66999 d!14435))

(declare-fun d!14437 () Bool)

(assert (=> d!14437 (= (apply!72 (+!89 lt!28998 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16))) lt!29008) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!28998 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16)))) lt!29008)))))

(declare-fun bs!2929 () Bool)

(assert (= bs!2929 d!14437))

(declare-fun m!63353 () Bool)

(assert (=> bs!2929 m!63353))

(assert (=> bs!2929 m!63353))

(declare-fun m!63355 () Bool)

(assert (=> bs!2929 m!63355))

(assert (=> b!66966 d!14437))

(declare-fun d!14439 () Bool)

(assert (=> d!14439 (= (apply!72 lt!28998 lt!29008) (get!1120 (getValueByKey!130 (toList!717 lt!28998) lt!29008)))))

(declare-fun bs!2930 () Bool)

(assert (= bs!2930 d!14439))

(declare-fun m!63357 () Bool)

(assert (=> bs!2930 m!63357))

(assert (=> bs!2930 m!63357))

(declare-fun m!63359 () Bool)

(assert (=> bs!2930 m!63359))

(assert (=> b!66966 d!14439))

(declare-fun d!14441 () Bool)

(declare-fun e!44411 () Bool)

(assert (=> d!14441 e!44411))

(declare-fun res!36545 () Bool)

(assert (=> d!14441 (=> res!36545 e!44411)))

(declare-fun lt!29545 () Bool)

(assert (=> d!14441 (= res!36545 (not lt!29545))))

(declare-fun lt!29543 () Bool)

(assert (=> d!14441 (= lt!29545 lt!29543)))

(declare-fun lt!29546 () Unit!1838)

(declare-fun e!44410 () Unit!1838)

(assert (=> d!14441 (= lt!29546 e!44410)))

(declare-fun c!9517 () Bool)

(assert (=> d!14441 (= c!9517 lt!29543)))

(assert (=> d!14441 (= lt!29543 (containsKey!134 (toList!717 (+!89 lt!29009 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16)))) lt!29001))))

(assert (=> d!14441 (= (contains!710 (+!89 lt!29009 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16))) lt!29001) lt!29545)))

(declare-fun b!67784 () Bool)

(declare-fun lt!29544 () Unit!1838)

(assert (=> b!67784 (= e!44410 lt!29544)))

(assert (=> b!67784 (= lt!29544 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (+!89 lt!29009 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16)))) lt!29001))))

(assert (=> b!67784 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!29009 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16)))) lt!29001))))

(declare-fun b!67785 () Bool)

(declare-fun Unit!1895 () Unit!1838)

(assert (=> b!67785 (= e!44410 Unit!1895)))

(declare-fun b!67786 () Bool)

(assert (=> b!67786 (= e!44411 (isDefined!83 (getValueByKey!130 (toList!717 (+!89 lt!29009 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16)))) lt!29001)))))

(assert (= (and d!14441 c!9517) b!67784))

(assert (= (and d!14441 (not c!9517)) b!67785))

(assert (= (and d!14441 (not res!36545)) b!67786))

(declare-fun m!63361 () Bool)

(assert (=> d!14441 m!63361))

(declare-fun m!63363 () Bool)

(assert (=> b!67784 m!63363))

(declare-fun m!63365 () Bool)

(assert (=> b!67784 m!63365))

(assert (=> b!67784 m!63365))

(declare-fun m!63367 () Bool)

(assert (=> b!67784 m!63367))

(assert (=> b!67786 m!63365))

(assert (=> b!67786 m!63365))

(assert (=> b!67786 m!63367))

(assert (=> b!66966 d!14441))

(declare-fun d!14443 () Bool)

(assert (=> d!14443 (= (apply!72 (+!89 lt!29006 (tuple2!2093 lt!29003 (minValue!2055 newMap!16))) lt!28995) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!29006 (tuple2!2093 lt!29003 (minValue!2055 newMap!16)))) lt!28995)))))

(declare-fun bs!2931 () Bool)

(assert (= bs!2931 d!14443))

(declare-fun m!63369 () Bool)

(assert (=> bs!2931 m!63369))

(assert (=> bs!2931 m!63369))

(declare-fun m!63371 () Bool)

(assert (=> bs!2931 m!63371))

(assert (=> b!66966 d!14443))

(declare-fun d!14445 () Bool)

(assert (=> d!14445 (= (apply!72 (+!89 lt!28998 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16))) lt!29008) (apply!72 lt!28998 lt!29008))))

(declare-fun lt!29547 () Unit!1838)

(assert (=> d!14445 (= lt!29547 (choose!371 lt!28998 lt!28997 (zeroValue!2055 newMap!16) lt!29008))))

(declare-fun e!44412 () Bool)

(assert (=> d!14445 e!44412))

(declare-fun res!36546 () Bool)

(assert (=> d!14445 (=> (not res!36546) (not e!44412))))

(assert (=> d!14445 (= res!36546 (contains!710 lt!28998 lt!29008))))

(assert (=> d!14445 (= (addApplyDifferent!48 lt!28998 lt!28997 (zeroValue!2055 newMap!16) lt!29008) lt!29547)))

(declare-fun b!67787 () Bool)

(assert (=> b!67787 (= e!44412 (not (= lt!29008 lt!28997)))))

(assert (= (and d!14445 res!36546) b!67787))

(declare-fun m!63373 () Bool)

(assert (=> d!14445 m!63373))

(assert (=> d!14445 m!61769))

(assert (=> d!14445 m!61771))

(assert (=> d!14445 m!61769))

(assert (=> d!14445 m!61775))

(declare-fun m!63375 () Bool)

(assert (=> d!14445 m!63375))

(assert (=> b!66966 d!14445))

(declare-fun d!14447 () Bool)

(declare-fun e!44413 () Bool)

(assert (=> d!14447 e!44413))

(declare-fun res!36548 () Bool)

(assert (=> d!14447 (=> (not res!36548) (not e!44413))))

(declare-fun lt!29548 () ListLongMap!1403)

(assert (=> d!14447 (= res!36548 (contains!710 lt!29548 (_1!1057 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16)))))))

(declare-fun lt!29549 () List!1466)

(assert (=> d!14447 (= lt!29548 (ListLongMap!1404 lt!29549))))

(declare-fun lt!29550 () Unit!1838)

(declare-fun lt!29551 () Unit!1838)

(assert (=> d!14447 (= lt!29550 lt!29551)))

(assert (=> d!14447 (= (getValueByKey!130 lt!29549 (_1!1057 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14447 (= lt!29551 (lemmaContainsTupThenGetReturnValue!47 lt!29549 (_1!1057 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14447 (= lt!29549 (insertStrictlySorted!50 (toList!717 lt!28998) (_1!1057 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14447 (= (+!89 lt!28998 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16))) lt!29548)))

(declare-fun b!67788 () Bool)

(declare-fun res!36547 () Bool)

(assert (=> b!67788 (=> (not res!36547) (not e!44413))))

(assert (=> b!67788 (= res!36547 (= (getValueByKey!130 (toList!717 lt!29548) (_1!1057 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16))))))))

(declare-fun b!67789 () Bool)

(assert (=> b!67789 (= e!44413 (contains!712 (toList!717 lt!29548) (tuple2!2093 lt!28997 (zeroValue!2055 newMap!16))))))

(assert (= (and d!14447 res!36548) b!67788))

(assert (= (and b!67788 res!36547) b!67789))

(declare-fun m!63377 () Bool)

(assert (=> d!14447 m!63377))

(declare-fun m!63379 () Bool)

(assert (=> d!14447 m!63379))

(declare-fun m!63381 () Bool)

(assert (=> d!14447 m!63381))

(declare-fun m!63383 () Bool)

(assert (=> d!14447 m!63383))

(declare-fun m!63385 () Bool)

(assert (=> b!67788 m!63385))

(declare-fun m!63387 () Bool)

(assert (=> b!67789 m!63387))

(assert (=> b!66966 d!14447))

(declare-fun d!14449 () Bool)

(declare-fun e!44414 () Bool)

(assert (=> d!14449 e!44414))

(declare-fun res!36550 () Bool)

(assert (=> d!14449 (=> (not res!36550) (not e!44414))))

(declare-fun lt!29552 () ListLongMap!1403)

(assert (=> d!14449 (= res!36550 (contains!710 lt!29552 (_1!1057 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16)))))))

(declare-fun lt!29553 () List!1466)

(assert (=> d!14449 (= lt!29552 (ListLongMap!1404 lt!29553))))

(declare-fun lt!29554 () Unit!1838)

(declare-fun lt!29555 () Unit!1838)

(assert (=> d!14449 (= lt!29554 lt!29555)))

(assert (=> d!14449 (= (getValueByKey!130 lt!29553 (_1!1057 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14449 (= lt!29555 (lemmaContainsTupThenGetReturnValue!47 lt!29553 (_1!1057 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14449 (= lt!29553 (insertStrictlySorted!50 (toList!717 lt!29009) (_1!1057 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16)))))))

(assert (=> d!14449 (= (+!89 lt!29009 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16))) lt!29552)))

(declare-fun b!67790 () Bool)

(declare-fun res!36549 () Bool)

(assert (=> b!67790 (=> (not res!36549) (not e!44414))))

(assert (=> b!67790 (= res!36549 (= (getValueByKey!130 (toList!717 lt!29552) (_1!1057 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16))))))))

(declare-fun b!67791 () Bool)

(assert (=> b!67791 (= e!44414 (contains!712 (toList!717 lt!29552) (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16))))))

(assert (= (and d!14449 res!36550) b!67790))

(assert (= (and b!67790 res!36549) b!67791))

(declare-fun m!63389 () Bool)

(assert (=> d!14449 m!63389))

(declare-fun m!63391 () Bool)

(assert (=> d!14449 m!63391))

(declare-fun m!63393 () Bool)

(assert (=> d!14449 m!63393))

(declare-fun m!63395 () Bool)

(assert (=> d!14449 m!63395))

(declare-fun m!63397 () Bool)

(assert (=> b!67790 m!63397))

(declare-fun m!63399 () Bool)

(assert (=> b!67791 m!63399))

(assert (=> b!66966 d!14449))

(declare-fun d!14451 () Bool)

(assert (=> d!14451 (= (apply!72 lt!29006 lt!28995) (get!1120 (getValueByKey!130 (toList!717 lt!29006) lt!28995)))))

(declare-fun bs!2932 () Bool)

(assert (= bs!2932 d!14451))

(declare-fun m!63401 () Bool)

(assert (=> bs!2932 m!63401))

(assert (=> bs!2932 m!63401))

(declare-fun m!63403 () Bool)

(assert (=> bs!2932 m!63403))

(assert (=> b!66966 d!14451))

(declare-fun d!14453 () Bool)

(assert (=> d!14453 (= (apply!72 (+!89 lt!29006 (tuple2!2093 lt!29003 (minValue!2055 newMap!16))) lt!28995) (apply!72 lt!29006 lt!28995))))

(declare-fun lt!29556 () Unit!1838)

(assert (=> d!14453 (= lt!29556 (choose!371 lt!29006 lt!29003 (minValue!2055 newMap!16) lt!28995))))

(declare-fun e!44415 () Bool)

(assert (=> d!14453 e!44415))

(declare-fun res!36551 () Bool)

(assert (=> d!14453 (=> (not res!36551) (not e!44415))))

(assert (=> d!14453 (= res!36551 (contains!710 lt!29006 lt!28995))))

(assert (=> d!14453 (= (addApplyDifferent!48 lt!29006 lt!29003 (minValue!2055 newMap!16) lt!28995) lt!29556)))

(declare-fun b!67792 () Bool)

(assert (=> b!67792 (= e!44415 (not (= lt!28995 lt!29003)))))

(assert (= (and d!14453 res!36551) b!67792))

(declare-fun m!63405 () Bool)

(assert (=> d!14453 m!63405))

(assert (=> d!14453 m!61777))

(assert (=> d!14453 m!61779))

(assert (=> d!14453 m!61777))

(assert (=> d!14453 m!61767))

(declare-fun m!63407 () Bool)

(assert (=> d!14453 m!63407))

(assert (=> b!66966 d!14453))

(declare-fun d!14455 () Bool)

(assert (=> d!14455 (contains!710 (+!89 lt!29009 (tuple2!2093 lt!29011 (zeroValue!2055 newMap!16))) lt!29001)))

(declare-fun lt!29557 () Unit!1838)

(assert (=> d!14455 (= lt!29557 (choose!372 lt!29009 lt!29011 (zeroValue!2055 newMap!16) lt!29001))))

(assert (=> d!14455 (contains!710 lt!29009 lt!29001)))

(assert (=> d!14455 (= (addStillContains!48 lt!29009 lt!29011 (zeroValue!2055 newMap!16) lt!29001) lt!29557)))

(declare-fun bs!2933 () Bool)

(assert (= bs!2933 d!14455))

(assert (=> bs!2933 m!61761))

(assert (=> bs!2933 m!61761))

(assert (=> bs!2933 m!61763))

(declare-fun m!63409 () Bool)

(assert (=> bs!2933 m!63409))

(declare-fun m!63411 () Bool)

(assert (=> bs!2933 m!63411))

(assert (=> b!66966 d!14455))

(declare-fun d!14457 () Bool)

(assert (=> d!14457 (= (apply!72 lt!29002 lt!29005) (get!1120 (getValueByKey!130 (toList!717 lt!29002) lt!29005)))))

(declare-fun bs!2934 () Bool)

(assert (= bs!2934 d!14457))

(declare-fun m!63413 () Bool)

(assert (=> bs!2934 m!63413))

(assert (=> bs!2934 m!63413))

(declare-fun m!63415 () Bool)

(assert (=> bs!2934 m!63415))

(assert (=> b!66966 d!14457))

(declare-fun d!14459 () Bool)

(declare-fun e!44416 () Bool)

(assert (=> d!14459 e!44416))

(declare-fun res!36553 () Bool)

(assert (=> d!14459 (=> (not res!36553) (not e!44416))))

(declare-fun lt!29558 () ListLongMap!1403)

(assert (=> d!14459 (= res!36553 (contains!710 lt!29558 (_1!1057 (tuple2!2093 lt!29003 (minValue!2055 newMap!16)))))))

(declare-fun lt!29559 () List!1466)

(assert (=> d!14459 (= lt!29558 (ListLongMap!1404 lt!29559))))

(declare-fun lt!29560 () Unit!1838)

(declare-fun lt!29561 () Unit!1838)

(assert (=> d!14459 (= lt!29560 lt!29561)))

(assert (=> d!14459 (= (getValueByKey!130 lt!29559 (_1!1057 (tuple2!2093 lt!29003 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!29003 (minValue!2055 newMap!16)))))))

(assert (=> d!14459 (= lt!29561 (lemmaContainsTupThenGetReturnValue!47 lt!29559 (_1!1057 (tuple2!2093 lt!29003 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!29003 (minValue!2055 newMap!16)))))))

(assert (=> d!14459 (= lt!29559 (insertStrictlySorted!50 (toList!717 lt!29006) (_1!1057 (tuple2!2093 lt!29003 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!29003 (minValue!2055 newMap!16)))))))

(assert (=> d!14459 (= (+!89 lt!29006 (tuple2!2093 lt!29003 (minValue!2055 newMap!16))) lt!29558)))

(declare-fun b!67793 () Bool)

(declare-fun res!36552 () Bool)

(assert (=> b!67793 (=> (not res!36552) (not e!44416))))

(assert (=> b!67793 (= res!36552 (= (getValueByKey!130 (toList!717 lt!29558) (_1!1057 (tuple2!2093 lt!29003 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!29003 (minValue!2055 newMap!16))))))))

(declare-fun b!67794 () Bool)

(assert (=> b!67794 (= e!44416 (contains!712 (toList!717 lt!29558) (tuple2!2093 lt!29003 (minValue!2055 newMap!16))))))

(assert (= (and d!14459 res!36553) b!67793))

(assert (= (and b!67793 res!36552) b!67794))

(declare-fun m!63417 () Bool)

(assert (=> d!14459 m!63417))

(declare-fun m!63419 () Bool)

(assert (=> d!14459 m!63419))

(declare-fun m!63421 () Bool)

(assert (=> d!14459 m!63421))

(declare-fun m!63423 () Bool)

(assert (=> d!14459 m!63423))

(declare-fun m!63425 () Bool)

(assert (=> b!67793 m!63425))

(declare-fun m!63427 () Bool)

(assert (=> b!67794 m!63427))

(assert (=> b!66966 d!14459))

(declare-fun d!14461 () Bool)

(assert (=> d!14461 (= (apply!72 (+!89 lt!29002 (tuple2!2093 lt!28992 (minValue!2055 newMap!16))) lt!29005) (get!1120 (getValueByKey!130 (toList!717 (+!89 lt!29002 (tuple2!2093 lt!28992 (minValue!2055 newMap!16)))) lt!29005)))))

(declare-fun bs!2935 () Bool)

(assert (= bs!2935 d!14461))

(declare-fun m!63429 () Bool)

(assert (=> bs!2935 m!63429))

(assert (=> bs!2935 m!63429))

(declare-fun m!63431 () Bool)

(assert (=> bs!2935 m!63431))

(assert (=> b!66966 d!14461))

(declare-fun d!14463 () Bool)

(assert (=> d!14463 (= (apply!72 (+!89 lt!29002 (tuple2!2093 lt!28992 (minValue!2055 newMap!16))) lt!29005) (apply!72 lt!29002 lt!29005))))

(declare-fun lt!29562 () Unit!1838)

(assert (=> d!14463 (= lt!29562 (choose!371 lt!29002 lt!28992 (minValue!2055 newMap!16) lt!29005))))

(declare-fun e!44417 () Bool)

(assert (=> d!14463 e!44417))

(declare-fun res!36554 () Bool)

(assert (=> d!14463 (=> (not res!36554) (not e!44417))))

(assert (=> d!14463 (= res!36554 (contains!710 lt!29002 lt!29005))))

(assert (=> d!14463 (= (addApplyDifferent!48 lt!29002 lt!28992 (minValue!2055 newMap!16) lt!29005) lt!29562)))

(declare-fun b!67795 () Bool)

(assert (=> b!67795 (= e!44417 (not (= lt!29005 lt!28992)))))

(assert (= (and d!14463 res!36554) b!67795))

(declare-fun m!63433 () Bool)

(assert (=> d!14463 m!63433))

(assert (=> d!14463 m!61759))

(assert (=> d!14463 m!61781))

(assert (=> d!14463 m!61759))

(assert (=> d!14463 m!61753))

(declare-fun m!63435 () Bool)

(assert (=> d!14463 m!63435))

(assert (=> b!66966 d!14463))

(declare-fun d!14465 () Bool)

(declare-fun e!44418 () Bool)

(assert (=> d!14465 e!44418))

(declare-fun res!36556 () Bool)

(assert (=> d!14465 (=> (not res!36556) (not e!44418))))

(declare-fun lt!29563 () ListLongMap!1403)

(assert (=> d!14465 (= res!36556 (contains!710 lt!29563 (_1!1057 (tuple2!2093 lt!28992 (minValue!2055 newMap!16)))))))

(declare-fun lt!29564 () List!1466)

(assert (=> d!14465 (= lt!29563 (ListLongMap!1404 lt!29564))))

(declare-fun lt!29565 () Unit!1838)

(declare-fun lt!29566 () Unit!1838)

(assert (=> d!14465 (= lt!29565 lt!29566)))

(assert (=> d!14465 (= (getValueByKey!130 lt!29564 (_1!1057 (tuple2!2093 lt!28992 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!28992 (minValue!2055 newMap!16)))))))

(assert (=> d!14465 (= lt!29566 (lemmaContainsTupThenGetReturnValue!47 lt!29564 (_1!1057 (tuple2!2093 lt!28992 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!28992 (minValue!2055 newMap!16)))))))

(assert (=> d!14465 (= lt!29564 (insertStrictlySorted!50 (toList!717 lt!29002) (_1!1057 (tuple2!2093 lt!28992 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 lt!28992 (minValue!2055 newMap!16)))))))

(assert (=> d!14465 (= (+!89 lt!29002 (tuple2!2093 lt!28992 (minValue!2055 newMap!16))) lt!29563)))

(declare-fun b!67796 () Bool)

(declare-fun res!36555 () Bool)

(assert (=> b!67796 (=> (not res!36555) (not e!44418))))

(assert (=> b!67796 (= res!36555 (= (getValueByKey!130 (toList!717 lt!29563) (_1!1057 (tuple2!2093 lt!28992 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 lt!28992 (minValue!2055 newMap!16))))))))

(declare-fun b!67797 () Bool)

(assert (=> b!67797 (= e!44418 (contains!712 (toList!717 lt!29563) (tuple2!2093 lt!28992 (minValue!2055 newMap!16))))))

(assert (= (and d!14465 res!36556) b!67796))

(assert (= (and b!67796 res!36555) b!67797))

(declare-fun m!63437 () Bool)

(assert (=> d!14465 m!63437))

(declare-fun m!63439 () Bool)

(assert (=> d!14465 m!63439))

(declare-fun m!63441 () Bool)

(assert (=> d!14465 m!63441))

(declare-fun m!63443 () Bool)

(assert (=> d!14465 m!63443))

(declare-fun m!63445 () Bool)

(assert (=> b!67796 m!63445))

(declare-fun m!63447 () Bool)

(assert (=> b!67797 m!63447))

(assert (=> b!66966 d!14465))

(declare-fun bm!5691 () Bool)

(declare-fun call!5694 () ListLongMap!1403)

(assert (=> bm!5691 (= call!5694 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16)))))

(declare-fun b!67798 () Bool)

(declare-fun e!44421 () ListLongMap!1403)

(assert (=> b!67798 (= e!44421 (ListLongMap!1404 Nil!1463))))

(declare-fun b!67799 () Bool)

(declare-fun lt!29567 () Unit!1838)

(declare-fun lt!29573 () Unit!1838)

(assert (=> b!67799 (= lt!29567 lt!29573)))

(declare-fun lt!29571 () ListLongMap!1403)

(declare-fun lt!29569 () (_ BitVec 64))

(declare-fun lt!29570 () (_ BitVec 64))

(declare-fun lt!29568 () V!2915)

(assert (=> b!67799 (not (contains!710 (+!89 lt!29571 (tuple2!2093 lt!29569 lt!29568)) lt!29570))))

(assert (=> b!67799 (= lt!29573 (addStillNotContains!21 lt!29571 lt!29569 lt!29568 lt!29570))))

(assert (=> b!67799 (= lt!29570 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67799 (= lt!29568 (get!1116 (select (arr!1836 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67799 (= lt!29569 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67799 (= lt!29571 call!5694)))

(declare-fun e!44424 () ListLongMap!1403)

(assert (=> b!67799 (= e!44424 (+!89 call!5694 (tuple2!2093 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) (get!1116 (select (arr!1836 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67800 () Bool)

(assert (=> b!67800 (= e!44421 e!44424)))

(declare-fun c!9521 () Bool)

(assert (=> b!67800 (= c!9521 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67801 () Bool)

(declare-fun e!44423 () Bool)

(declare-fun lt!29572 () ListLongMap!1403)

(assert (=> b!67801 (= e!44423 (isEmpty!307 lt!29572))))

(declare-fun b!67802 () Bool)

(declare-fun e!44425 () Bool)

(assert (=> b!67802 (= e!44425 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67802 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67803 () Bool)

(declare-fun res!36557 () Bool)

(declare-fun e!44420 () Bool)

(assert (=> b!67803 (=> (not res!36557) (not e!44420))))

(assert (=> b!67803 (= res!36557 (not (contains!710 lt!29572 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67804 () Bool)

(declare-fun e!44422 () Bool)

(assert (=> b!67804 (= e!44420 e!44422)))

(declare-fun c!9520 () Bool)

(assert (=> b!67804 (= c!9520 e!44425)))

(declare-fun res!36558 () Bool)

(assert (=> b!67804 (=> (not res!36558) (not e!44425))))

(assert (=> b!67804 (= res!36558 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun d!14467 () Bool)

(assert (=> d!14467 e!44420))

(declare-fun res!36560 () Bool)

(assert (=> d!14467 (=> (not res!36560) (not e!44420))))

(assert (=> d!14467 (= res!36560 (not (contains!710 lt!29572 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14467 (= lt!29572 e!44421)))

(declare-fun c!9519 () Bool)

(assert (=> d!14467 (= c!9519 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14467 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14467 (= (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29572)))

(declare-fun b!67805 () Bool)

(assert (=> b!67805 (= e!44423 (= lt!29572 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2147 newMap!16))))))

(declare-fun b!67806 () Bool)

(declare-fun e!44419 () Bool)

(assert (=> b!67806 (= e!44422 e!44419)))

(assert (=> b!67806 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun res!36559 () Bool)

(assert (=> b!67806 (= res!36559 (contains!710 lt!29572 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67806 (=> (not res!36559) (not e!44419))))

(declare-fun b!67807 () Bool)

(assert (=> b!67807 (= e!44424 call!5694)))

(declare-fun b!67808 () Bool)

(assert (=> b!67808 (= e!44422 e!44423)))

(declare-fun c!9518 () Bool)

(assert (=> b!67808 (= c!9518 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67809 () Bool)

(assert (=> b!67809 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> b!67809 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (_values!2130 newMap!16))))))

(assert (=> b!67809 (= e!44419 (= (apply!72 lt!29572 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14467 c!9519) b!67798))

(assert (= (and d!14467 (not c!9519)) b!67800))

(assert (= (and b!67800 c!9521) b!67799))

(assert (= (and b!67800 (not c!9521)) b!67807))

(assert (= (or b!67799 b!67807) bm!5691))

(assert (= (and d!14467 res!36560) b!67803))

(assert (= (and b!67803 res!36557) b!67804))

(assert (= (and b!67804 res!36558) b!67802))

(assert (= (and b!67804 c!9520) b!67806))

(assert (= (and b!67804 (not c!9520)) b!67808))

(assert (= (and b!67806 res!36559) b!67809))

(assert (= (and b!67808 c!9518) b!67805))

(assert (= (and b!67808 (not c!9518)) b!67801))

(declare-fun b_lambda!3029 () Bool)

(assert (=> (not b_lambda!3029) (not b!67799)))

(assert (=> b!67799 t!4955))

(declare-fun b_and!4183 () Bool)

(assert (= b_and!4179 (and (=> t!4955 result!2591) b_and!4183)))

(assert (=> b!67799 t!4957))

(declare-fun b_and!4185 () Bool)

(assert (= b_and!4181 (and (=> t!4957 result!2593) b_and!4185)))

(declare-fun b_lambda!3031 () Bool)

(assert (=> (not b_lambda!3031) (not b!67809)))

(assert (=> b!67809 t!4955))

(declare-fun b_and!4187 () Bool)

(assert (= b_and!4183 (and (=> t!4955 result!2591) b_and!4187)))

(assert (=> b!67809 t!4957))

(declare-fun b_and!4189 () Bool)

(assert (= b_and!4185 (and (=> t!4957 result!2593) b_and!4189)))

(declare-fun m!63449 () Bool)

(assert (=> b!67803 m!63449))

(declare-fun m!63451 () Bool)

(assert (=> b!67801 m!63451))

(declare-fun m!63453 () Bool)

(assert (=> b!67805 m!63453))

(declare-fun m!63455 () Bool)

(assert (=> b!67799 m!63455))

(declare-fun m!63457 () Bool)

(assert (=> b!67799 m!63457))

(assert (=> b!67799 m!63455))

(declare-fun m!63459 () Bool)

(assert (=> b!67799 m!63459))

(assert (=> b!67799 m!61799))

(assert (=> b!67799 m!61465))

(assert (=> b!67799 m!61491))

(assert (=> b!67799 m!61799))

(assert (=> b!67799 m!61491))

(assert (=> b!67799 m!61801))

(declare-fun m!63461 () Bool)

(assert (=> b!67799 m!63461))

(assert (=> b!67809 m!61465))

(declare-fun m!63463 () Bool)

(assert (=> b!67809 m!63463))

(assert (=> b!67809 m!61799))

(assert (=> b!67809 m!61799))

(assert (=> b!67809 m!61491))

(assert (=> b!67809 m!61801))

(assert (=> b!67809 m!61465))

(assert (=> b!67809 m!61491))

(assert (=> b!67806 m!61465))

(assert (=> b!67806 m!61465))

(declare-fun m!63465 () Bool)

(assert (=> b!67806 m!63465))

(declare-fun m!63467 () Bool)

(assert (=> d!14467 m!63467))

(assert (=> d!14467 m!61485))

(assert (=> b!67802 m!61465))

(assert (=> b!67802 m!61465))

(assert (=> b!67802 m!61479))

(assert (=> bm!5691 m!63453))

(assert (=> b!67800 m!61465))

(assert (=> b!67800 m!61465))

(assert (=> b!67800 m!61479))

(assert (=> b!66966 d!14467))

(assert (=> bm!5601 d!14431))

(declare-fun d!14469 () Bool)

(declare-fun e!44427 () Bool)

(assert (=> d!14469 e!44427))

(declare-fun res!36561 () Bool)

(assert (=> d!14469 (=> res!36561 e!44427)))

(declare-fun lt!29576 () Bool)

(assert (=> d!14469 (= res!36561 (not lt!29576))))

(declare-fun lt!29574 () Bool)

(assert (=> d!14469 (= lt!29576 lt!29574)))

(declare-fun lt!29577 () Unit!1838)

(declare-fun e!44426 () Unit!1838)

(assert (=> d!14469 (= lt!29577 e!44426)))

(declare-fun c!9522 () Bool)

(assert (=> d!14469 (= c!9522 lt!29574)))

(assert (=> d!14469 (= lt!29574 (containsKey!134 (toList!717 lt!29026) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14469 (= (contains!710 lt!29026 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29576)))

(declare-fun b!67810 () Bool)

(declare-fun lt!29575 () Unit!1838)

(assert (=> b!67810 (= e!44426 lt!29575)))

(assert (=> b!67810 (= lt!29575 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29026) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67810 (isDefined!83 (getValueByKey!130 (toList!717 lt!29026) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67811 () Bool)

(declare-fun Unit!1896 () Unit!1838)

(assert (=> b!67811 (= e!44426 Unit!1896)))

(declare-fun b!67812 () Bool)

(assert (=> b!67812 (= e!44427 (isDefined!83 (getValueByKey!130 (toList!717 lt!29026) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14469 c!9522) b!67810))

(assert (= (and d!14469 (not c!9522)) b!67811))

(assert (= (and d!14469 (not res!36561)) b!67812))

(declare-fun m!63469 () Bool)

(assert (=> d!14469 m!63469))

(declare-fun m!63471 () Bool)

(assert (=> b!67810 m!63471))

(assert (=> b!67810 m!61845))

(assert (=> b!67810 m!61845))

(declare-fun m!63473 () Bool)

(assert (=> b!67810 m!63473))

(assert (=> b!67812 m!61845))

(assert (=> b!67812 m!61845))

(assert (=> b!67812 m!63473))

(assert (=> d!13917 d!14469))

(declare-fun c!9523 () Bool)

(declare-fun d!14471 () Bool)

(assert (=> d!14471 (= c!9523 (and ((_ is Cons!1462) lt!29027) (= (_1!1057 (h!2046 lt!29027)) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44428 () Option!136)

(assert (=> d!14471 (= (getValueByKey!130 lt!29027 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44428)))

(declare-fun b!67814 () Bool)

(declare-fun e!44429 () Option!136)

(assert (=> b!67814 (= e!44428 e!44429)))

(declare-fun c!9524 () Bool)

(assert (=> b!67814 (= c!9524 (and ((_ is Cons!1462) lt!29027) (not (= (_1!1057 (h!2046 lt!29027)) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67813 () Bool)

(assert (=> b!67813 (= e!44428 (Some!135 (_2!1057 (h!2046 lt!29027))))))

(declare-fun b!67815 () Bool)

(assert (=> b!67815 (= e!44429 (getValueByKey!130 (t!4948 lt!29027) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67816 () Bool)

(assert (=> b!67816 (= e!44429 None!134)))

(assert (= (and d!14471 c!9523) b!67813))

(assert (= (and d!14471 (not c!9523)) b!67814))

(assert (= (and b!67814 c!9524) b!67815))

(assert (= (and b!67814 (not c!9524)) b!67816))

(declare-fun m!63475 () Bool)

(assert (=> b!67815 m!63475))

(assert (=> d!13917 d!14471))

(declare-fun d!14473 () Bool)

(assert (=> d!14473 (= (getValueByKey!130 lt!29027 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29578 () Unit!1838)

(assert (=> d!14473 (= lt!29578 (choose!367 lt!29027 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44430 () Bool)

(assert (=> d!14473 e!44430))

(declare-fun res!36562 () Bool)

(assert (=> d!14473 (=> (not res!36562) (not e!44430))))

(assert (=> d!14473 (= res!36562 (isStrictlySorted!289 lt!29027))))

(assert (=> d!14473 (= (lemmaContainsTupThenGetReturnValue!47 lt!29027 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29578)))

(declare-fun b!67817 () Bool)

(declare-fun res!36563 () Bool)

(assert (=> b!67817 (=> (not res!36563) (not e!44430))))

(assert (=> b!67817 (= res!36563 (containsKey!134 lt!29027 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67818 () Bool)

(assert (=> b!67818 (= e!44430 (contains!712 lt!29027 (tuple2!2093 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14473 res!36562) b!67817))

(assert (= (and b!67817 res!36563) b!67818))

(assert (=> d!14473 m!61839))

(declare-fun m!63477 () Bool)

(assert (=> d!14473 m!63477))

(declare-fun m!63479 () Bool)

(assert (=> d!14473 m!63479))

(declare-fun m!63481 () Bool)

(assert (=> b!67817 m!63481))

(declare-fun m!63483 () Bool)

(assert (=> b!67818 m!63483))

(assert (=> d!13917 d!14473))

(declare-fun b!67819 () Bool)

(declare-fun e!44433 () List!1466)

(declare-fun call!5695 () List!1466)

(assert (=> b!67819 (= e!44433 call!5695)))

(declare-fun bm!5692 () Bool)

(declare-fun call!5696 () List!1466)

(declare-fun call!5697 () List!1466)

(assert (=> bm!5692 (= call!5696 call!5697)))

(declare-fun e!44435 () Bool)

(declare-fun lt!29579 () List!1466)

(declare-fun b!67820 () Bool)

(assert (=> b!67820 (= e!44435 (contains!712 lt!29579 (tuple2!2093 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67821 () Bool)

(assert (=> b!67821 (= e!44433 call!5695)))

(declare-fun e!44431 () List!1466)

(declare-fun b!67822 () Bool)

(assert (=> b!67822 (= e!44431 (insertStrictlySorted!50 (t!4948 (toList!717 lt!28867)) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67823 () Bool)

(declare-fun e!44434 () List!1466)

(assert (=> b!67823 (= e!44434 call!5697)))

(declare-fun c!9527 () Bool)

(declare-fun c!9525 () Bool)

(declare-fun b!67824 () Bool)

(assert (=> b!67824 (= e!44431 (ite c!9525 (t!4948 (toList!717 lt!28867)) (ite c!9527 (Cons!1462 (h!2046 (toList!717 lt!28867)) (t!4948 (toList!717 lt!28867))) Nil!1463)))))

(declare-fun d!14475 () Bool)

(assert (=> d!14475 e!44435))

(declare-fun res!36565 () Bool)

(assert (=> d!14475 (=> (not res!36565) (not e!44435))))

(assert (=> d!14475 (= res!36565 (isStrictlySorted!289 lt!29579))))

(assert (=> d!14475 (= lt!29579 e!44434)))

(declare-fun c!9528 () Bool)

(assert (=> d!14475 (= c!9528 (and ((_ is Cons!1462) (toList!717 lt!28867)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28867))) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14475 (isStrictlySorted!289 (toList!717 lt!28867))))

(assert (=> d!14475 (= (insertStrictlySorted!50 (toList!717 lt!28867) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29579)))

(declare-fun bm!5693 () Bool)

(assert (=> bm!5693 (= call!5695 call!5696)))

(declare-fun b!67825 () Bool)

(declare-fun res!36564 () Bool)

(assert (=> b!67825 (=> (not res!36564) (not e!44435))))

(assert (=> b!67825 (= res!36564 (containsKey!134 lt!29579 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67826 () Bool)

(declare-fun e!44432 () List!1466)

(assert (=> b!67826 (= e!44432 call!5696)))

(declare-fun b!67827 () Bool)

(assert (=> b!67827 (= c!9527 (and ((_ is Cons!1462) (toList!717 lt!28867)) (bvsgt (_1!1057 (h!2046 (toList!717 lt!28867))) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67827 (= e!44432 e!44433)))

(declare-fun b!67828 () Bool)

(assert (=> b!67828 (= e!44434 e!44432)))

(assert (=> b!67828 (= c!9525 (and ((_ is Cons!1462) (toList!717 lt!28867)) (= (_1!1057 (h!2046 (toList!717 lt!28867))) (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun bm!5694 () Bool)

(assert (=> bm!5694 (= call!5697 ($colon$colon!63 e!44431 (ite c!9528 (h!2046 (toList!717 lt!28867)) (tuple2!2093 (_1!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28857 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9526 () Bool)

(assert (=> bm!5694 (= c!9526 c!9528)))

(assert (= (and d!14475 c!9528) b!67823))

(assert (= (and d!14475 (not c!9528)) b!67828))

(assert (= (and b!67828 c!9525) b!67826))

(assert (= (and b!67828 (not c!9525)) b!67827))

(assert (= (and b!67827 c!9527) b!67821))

(assert (= (and b!67827 (not c!9527)) b!67819))

(assert (= (or b!67821 b!67819) bm!5693))

(assert (= (or b!67826 bm!5693) bm!5692))

(assert (= (or b!67823 bm!5692) bm!5694))

(assert (= (and bm!5694 c!9526) b!67822))

(assert (= (and bm!5694 (not c!9526)) b!67824))

(assert (= (and d!14475 res!36565) b!67825))

(assert (= (and b!67825 res!36564) b!67820))

(declare-fun m!63485 () Bool)

(assert (=> b!67820 m!63485))

(declare-fun m!63487 () Bool)

(assert (=> d!14475 m!63487))

(declare-fun m!63489 () Bool)

(assert (=> d!14475 m!63489))

(declare-fun m!63491 () Bool)

(assert (=> bm!5694 m!63491))

(declare-fun m!63493 () Bool)

(assert (=> b!67825 m!63493))

(declare-fun m!63495 () Bool)

(assert (=> b!67822 m!63495))

(assert (=> d!13917 d!14475))

(declare-fun d!14477 () Bool)

(declare-fun lt!29580 () Bool)

(assert (=> d!14477 (= lt!29580 (select (content!72 (toList!717 lt!28960)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44436 () Bool)

(assert (=> d!14477 (= lt!29580 e!44436)))

(declare-fun res!36566 () Bool)

(assert (=> d!14477 (=> (not res!36566) (not e!44436))))

(assert (=> d!14477 (= res!36566 ((_ is Cons!1462) (toList!717 lt!28960)))))

(assert (=> d!14477 (= (contains!712 (toList!717 lt!28960) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29580)))

(declare-fun b!67829 () Bool)

(declare-fun e!44437 () Bool)

(assert (=> b!67829 (= e!44436 e!44437)))

(declare-fun res!36567 () Bool)

(assert (=> b!67829 (=> res!36567 e!44437)))

(assert (=> b!67829 (= res!36567 (= (h!2046 (toList!717 lt!28960)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67830 () Bool)

(assert (=> b!67830 (= e!44437 (contains!712 (t!4948 (toList!717 lt!28960)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14477 res!36566) b!67829))

(assert (= (and b!67829 (not res!36567)) b!67830))

(declare-fun m!63497 () Bool)

(assert (=> d!14477 m!63497))

(declare-fun m!63499 () Bool)

(assert (=> d!14477 m!63499))

(declare-fun m!63501 () Bool)

(assert (=> b!67830 m!63501))

(assert (=> b!66907 d!14477))

(declare-fun d!14479 () Bool)

(declare-fun res!36568 () Bool)

(declare-fun e!44438 () Bool)

(assert (=> d!14479 (=> res!36568 e!44438)))

(assert (=> d!14479 (= res!36568 (and ((_ is Cons!1462) (toList!717 e!43724)) (= (_1!1057 (h!2046 (toList!717 e!43724))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!14479 (= (containsKey!134 (toList!717 e!43724) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44438)))

(declare-fun b!67831 () Bool)

(declare-fun e!44439 () Bool)

(assert (=> b!67831 (= e!44438 e!44439)))

(declare-fun res!36569 () Bool)

(assert (=> b!67831 (=> (not res!36569) (not e!44439))))

(assert (=> b!67831 (= res!36569 (and (or (not ((_ is Cons!1462) (toList!717 e!43724))) (bvsle (_1!1057 (h!2046 (toList!717 e!43724))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))) ((_ is Cons!1462) (toList!717 e!43724)) (bvslt (_1!1057 (h!2046 (toList!717 e!43724))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun b!67832 () Bool)

(assert (=> b!67832 (= e!44439 (containsKey!134 (t!4948 (toList!717 e!43724)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14479 (not res!36568)) b!67831))

(assert (= (and b!67831 res!36569) b!67832))

(assert (=> b!67832 m!61065))

(declare-fun m!63503 () Bool)

(assert (=> b!67832 m!63503))

(assert (=> d!13939 d!14479))

(declare-fun d!14481 () Bool)

(assert (=> d!14481 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2936 () Bool)

(assert (= bs!2936 d!14481))

(assert (=> bs!2936 m!62135))

(declare-fun m!63505 () Bool)

(assert (=> bs!2936 m!63505))

(assert (=> b!67169 d!14481))

(declare-fun d!14483 () Bool)

(declare-fun c!9529 () Bool)

(assert (=> d!14483 (= c!9529 (and ((_ is Cons!1462) (toList!717 lt!28698)) (= (_1!1057 (h!2046 (toList!717 lt!28698))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!44440 () Option!136)

(assert (=> d!14483 (= (getValueByKey!130 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000) e!44440)))

(declare-fun b!67834 () Bool)

(declare-fun e!44441 () Option!136)

(assert (=> b!67834 (= e!44440 e!44441)))

(declare-fun c!9530 () Bool)

(assert (=> b!67834 (= c!9530 (and ((_ is Cons!1462) (toList!717 lt!28698)) (not (= (_1!1057 (h!2046 (toList!717 lt!28698))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!67833 () Bool)

(assert (=> b!67833 (= e!44440 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28698)))))))

(declare-fun b!67835 () Bool)

(assert (=> b!67835 (= e!44441 (getValueByKey!130 (t!4948 (toList!717 lt!28698)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67836 () Bool)

(assert (=> b!67836 (= e!44441 None!134)))

(assert (= (and d!14483 c!9529) b!67833))

(assert (= (and d!14483 (not c!9529)) b!67834))

(assert (= (and b!67834 c!9530) b!67835))

(assert (= (and b!67834 (not c!9530)) b!67836))

(declare-fun m!63507 () Bool)

(assert (=> b!67835 m!63507))

(assert (=> b!67169 d!14483))

(declare-fun d!14485 () Bool)

(assert (not d!14485))

(assert (=> b!66811 d!14485))

(assert (=> bm!5631 d!14105))

(declare-fun d!14487 () Bool)

(declare-fun c!9533 () Bool)

(assert (=> d!14487 (= c!9533 ((_ is Nil!1463) (toList!717 lt!28703)))))

(declare-fun e!44444 () (InoxSet tuple2!2092))

(assert (=> d!14487 (= (content!72 (toList!717 lt!28703)) e!44444)))

(declare-fun b!67841 () Bool)

(assert (=> b!67841 (= e!44444 ((as const (Array tuple2!2092 Bool)) false))))

(declare-fun b!67842 () Bool)

(assert (=> b!67842 (= e!44444 ((_ map or) (store ((as const (Array tuple2!2092 Bool)) false) (h!2046 (toList!717 lt!28703)) true) (content!72 (t!4948 (toList!717 lt!28703)))))))

(assert (= (and d!14487 c!9533) b!67841))

(assert (= (and d!14487 (not c!9533)) b!67842))

(declare-fun m!63509 () Bool)

(assert (=> b!67842 m!63509))

(declare-fun m!63511 () Bool)

(assert (=> b!67842 m!63511))

(assert (=> d!14007 d!14487))

(declare-fun d!14489 () Bool)

(declare-fun e!44445 () Bool)

(assert (=> d!14489 e!44445))

(declare-fun res!36571 () Bool)

(assert (=> d!14489 (=> (not res!36571) (not e!44445))))

(declare-fun lt!29581 () ListLongMap!1403)

(assert (=> d!14489 (= res!36571 (contains!710 lt!29581 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun lt!29582 () List!1466)

(assert (=> d!14489 (= lt!29581 (ListLongMap!1404 lt!29582))))

(declare-fun lt!29583 () Unit!1838)

(declare-fun lt!29584 () Unit!1838)

(assert (=> d!14489 (= lt!29583 lt!29584)))

(assert (=> d!14489 (= (getValueByKey!130 lt!29582 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14489 (= lt!29584 (lemmaContainsTupThenGetReturnValue!47 lt!29582 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14489 (= lt!29582 (insertStrictlySorted!50 (toList!717 call!5588) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14489 (= (+!89 call!5588 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) lt!29581)))

(declare-fun b!67843 () Bool)

(declare-fun res!36570 () Bool)

(assert (=> b!67843 (=> (not res!36570) (not e!44445))))

(assert (=> b!67843 (= res!36570 (= (getValueByKey!130 (toList!717 lt!29581) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(declare-fun b!67844 () Bool)

(assert (=> b!67844 (= e!44445 (contains!712 (toList!717 lt!29581) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(assert (= (and d!14489 res!36571) b!67843))

(assert (= (and b!67843 res!36570) b!67844))

(declare-fun m!63513 () Bool)

(assert (=> d!14489 m!63513))

(declare-fun m!63515 () Bool)

(assert (=> d!14489 m!63515))

(declare-fun m!63517 () Bool)

(assert (=> d!14489 m!63517))

(declare-fun m!63519 () Bool)

(assert (=> d!14489 m!63519))

(declare-fun m!63521 () Bool)

(assert (=> b!67843 m!63521))

(declare-fun m!63523 () Bool)

(assert (=> b!67844 m!63523))

(assert (=> b!66788 d!14489))

(declare-fun d!14491 () Bool)

(declare-fun res!36572 () Bool)

(declare-fun e!44446 () Bool)

(assert (=> d!14491 (=> res!36572 e!44446)))

(assert (=> d!14491 (= res!36572 (and ((_ is Cons!1462) (toList!717 call!5538)) (= (_1!1057 (h!2046 (toList!717 call!5538))) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803)))))))

(assert (=> d!14491 (= (containsKey!134 (toList!717 call!5538) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))) e!44446)))

(declare-fun b!67845 () Bool)

(declare-fun e!44447 () Bool)

(assert (=> b!67845 (= e!44446 e!44447)))

(declare-fun res!36573 () Bool)

(assert (=> b!67845 (=> (not res!36573) (not e!44447))))

(assert (=> b!67845 (= res!36573 (and (or (not ((_ is Cons!1462) (toList!717 call!5538))) (bvsle (_1!1057 (h!2046 (toList!717 call!5538))) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803)))) ((_ is Cons!1462) (toList!717 call!5538)) (bvslt (_1!1057 (h!2046 (toList!717 call!5538))) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803)))))))

(declare-fun b!67846 () Bool)

(assert (=> b!67846 (= e!44447 (containsKey!134 (t!4948 (toList!717 call!5538)) (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!28803))))))

(assert (= (and d!14491 (not res!36572)) b!67845))

(assert (= (and b!67845 res!36573) b!67846))

(assert (=> b!67846 m!61335))

(declare-fun m!63525 () Bool)

(assert (=> b!67846 m!63525))

(assert (=> d!13951 d!14491))

(declare-fun d!14493 () Bool)

(declare-fun res!36574 () Bool)

(declare-fun e!44448 () Bool)

(assert (=> d!14493 (=> res!36574 e!44448)))

(assert (=> d!14493 (= res!36574 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28866)))))

(assert (=> d!14493 (= (containsKey!134 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!28866) e!44448)))

(declare-fun b!67847 () Bool)

(declare-fun e!44449 () Bool)

(assert (=> b!67847 (= e!44448 e!44449)))

(declare-fun res!36575 () Bool)

(assert (=> b!67847 (=> (not res!36575) (not e!44449))))

(assert (=> b!67847 (= res!36575 (and (or (not ((_ is Cons!1462) (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) (bvsle (_1!1057 (h!2046 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28866)) ((_ is Cons!1462) (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (bvslt (_1!1057 (h!2046 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) lt!28866)))))

(declare-fun b!67848 () Bool)

(assert (=> b!67848 (= e!44449 (containsKey!134 (t!4948 (toList!717 (+!89 lt!28874 (tuple2!2093 lt!28876 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) lt!28866))))

(assert (= (and d!14493 (not res!36574)) b!67847))

(assert (= (and b!67847 res!36575) b!67848))

(declare-fun m!63527 () Bool)

(assert (=> b!67848 m!63527))

(assert (=> d!13927 d!14493))

(declare-fun d!14495 () Bool)

(declare-fun e!44450 () Bool)

(assert (=> d!14495 e!44450))

(declare-fun res!36577 () Bool)

(assert (=> d!14495 (=> (not res!36577) (not e!44450))))

(declare-fun lt!29585 () ListLongMap!1403)

(assert (=> d!14495 (= res!36577 (contains!710 lt!29585 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun lt!29586 () List!1466)

(assert (=> d!14495 (= lt!29585 (ListLongMap!1404 lt!29586))))

(declare-fun lt!29587 () Unit!1838)

(declare-fun lt!29588 () Unit!1838)

(assert (=> d!14495 (= lt!29587 lt!29588)))

(assert (=> d!14495 (= (getValueByKey!130 lt!29586 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14495 (= lt!29588 (lemmaContainsTupThenGetReturnValue!47 lt!29586 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14495 (= lt!29586 (insertStrictlySorted!50 (toList!717 call!5612) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(assert (=> d!14495 (= (+!89 call!5612 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))) lt!29585)))

(declare-fun b!67849 () Bool)

(declare-fun res!36576 () Bool)

(assert (=> b!67849 (=> (not res!36576) (not e!44450))))

(assert (=> b!67849 (= res!36576 (= (getValueByKey!130 (toList!717 lt!29585) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))))

(declare-fun b!67850 () Bool)

(assert (=> b!67850 (= e!44450 (contains!712 (toList!717 lt!29585) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(assert (= (and d!14495 res!36577) b!67849))

(assert (= (and b!67849 res!36576) b!67850))

(declare-fun m!63529 () Bool)

(assert (=> d!14495 m!63529))

(declare-fun m!63531 () Bool)

(assert (=> d!14495 m!63531))

(declare-fun m!63533 () Bool)

(assert (=> d!14495 m!63533))

(declare-fun m!63535 () Bool)

(assert (=> d!14495 m!63535))

(declare-fun m!63537 () Bool)

(assert (=> b!67849 m!63537))

(declare-fun m!63539 () Bool)

(assert (=> b!67850 m!63539))

(assert (=> b!66965 d!14495))

(declare-fun d!14497 () Bool)

(declare-fun e!44451 () Bool)

(assert (=> d!14497 e!44451))

(declare-fun res!36579 () Bool)

(assert (=> d!14497 (=> (not res!36579) (not e!44451))))

(declare-fun lt!29589 () ListLongMap!1403)

(assert (=> d!14497 (= res!36579 (contains!710 lt!29589 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun lt!29590 () List!1466)

(assert (=> d!14497 (= lt!29589 (ListLongMap!1404 lt!29590))))

(declare-fun lt!29591 () Unit!1838)

(declare-fun lt!29592 () Unit!1838)

(assert (=> d!14497 (= lt!29591 lt!29592)))

(assert (=> d!14497 (= (getValueByKey!130 lt!29590 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!14497 (= lt!29592 (lemmaContainsTupThenGetReturnValue!47 lt!29590 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!14497 (= lt!29590 (insertStrictlySorted!50 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!14497 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) lt!29589)))

(declare-fun b!67851 () Bool)

(declare-fun res!36578 () Bool)

(assert (=> b!67851 (=> (not res!36578) (not e!44451))))

(assert (=> b!67851 (= res!36578 (= (getValueByKey!130 (toList!717 lt!29589) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!67852 () Bool)

(assert (=> b!67852 (= e!44451 (contains!712 (toList!717 lt!29589) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(assert (= (and d!14497 res!36579) b!67851))

(assert (= (and b!67851 res!36578) b!67852))

(declare-fun m!63541 () Bool)

(assert (=> d!14497 m!63541))

(declare-fun m!63543 () Bool)

(assert (=> d!14497 m!63543))

(declare-fun m!63545 () Bool)

(assert (=> d!14497 m!63545))

(declare-fun m!63547 () Bool)

(assert (=> d!14497 m!63547))

(declare-fun m!63549 () Bool)

(assert (=> b!67851 m!63549))

(declare-fun m!63551 () Bool)

(assert (=> b!67852 m!63551))

(assert (=> b!67101 d!14497))

(assert (=> b!67101 d!13903))

(declare-fun b!67853 () Bool)

(declare-fun e!44461 () ListLongMap!1403)

(declare-fun call!5703 () ListLongMap!1403)

(assert (=> b!67853 (= e!44461 call!5703)))

(declare-fun b!67854 () Bool)

(declare-fun e!44456 () ListLongMap!1403)

(assert (=> b!67854 (= e!44456 call!5703)))

(declare-fun b!67855 () Bool)

(declare-fun e!44459 () Bool)

(declare-fun lt!29613 () ListLongMap!1403)

(assert (=> b!67855 (= e!44459 (= (apply!72 lt!29613 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5695 () Bool)

(declare-fun call!5704 () ListLongMap!1403)

(assert (=> bm!5695 (= call!5704 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5696 () Bool)

(declare-fun call!5698 () Bool)

(assert (=> bm!5696 (= call!5698 (contains!710 lt!29613 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5697 () Bool)

(declare-fun call!5701 () ListLongMap!1403)

(declare-fun call!5699 () ListLongMap!1403)

(assert (=> bm!5697 (= call!5701 call!5699)))

(declare-fun b!67856 () Bool)

(declare-fun e!44462 () ListLongMap!1403)

(declare-fun call!5702 () ListLongMap!1403)

(assert (=> b!67856 (= e!44462 (+!89 call!5702 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!67857 () Bool)

(declare-fun e!44454 () Unit!1838)

(declare-fun lt!29614 () Unit!1838)

(assert (=> b!67857 (= e!44454 lt!29614)))

(declare-fun lt!29610 () ListLongMap!1403)

(assert (=> b!67857 (= lt!29610 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29612 () (_ BitVec 64))

(assert (=> b!67857 (= lt!29612 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29602 () (_ BitVec 64))

(assert (=> b!67857 (= lt!29602 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29601 () Unit!1838)

(assert (=> b!67857 (= lt!29601 (addStillContains!48 lt!29610 lt!29612 (zeroValue!2055 newMap!16) lt!29602))))

(assert (=> b!67857 (contains!710 (+!89 lt!29610 (tuple2!2093 lt!29612 (zeroValue!2055 newMap!16))) lt!29602)))

(declare-fun lt!29594 () Unit!1838)

(assert (=> b!67857 (= lt!29594 lt!29601)))

(declare-fun lt!29607 () ListLongMap!1403)

(assert (=> b!67857 (= lt!29607 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29604 () (_ BitVec 64))

(assert (=> b!67857 (= lt!29604 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29596 () (_ BitVec 64))

(assert (=> b!67857 (= lt!29596 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29597 () Unit!1838)

(assert (=> b!67857 (= lt!29597 (addApplyDifferent!48 lt!29607 lt!29604 (minValue!2055 newMap!16) lt!29596))))

(assert (=> b!67857 (= (apply!72 (+!89 lt!29607 (tuple2!2093 lt!29604 (minValue!2055 newMap!16))) lt!29596) (apply!72 lt!29607 lt!29596))))

(declare-fun lt!29611 () Unit!1838)

(assert (=> b!67857 (= lt!29611 lt!29597)))

(declare-fun lt!29599 () ListLongMap!1403)

(assert (=> b!67857 (= lt!29599 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29598 () (_ BitVec 64))

(assert (=> b!67857 (= lt!29598 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29609 () (_ BitVec 64))

(assert (=> b!67857 (= lt!29609 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29608 () Unit!1838)

(assert (=> b!67857 (= lt!29608 (addApplyDifferent!48 lt!29599 lt!29598 (zeroValue!2055 newMap!16) lt!29609))))

(assert (=> b!67857 (= (apply!72 (+!89 lt!29599 (tuple2!2093 lt!29598 (zeroValue!2055 newMap!16))) lt!29609) (apply!72 lt!29599 lt!29609))))

(declare-fun lt!29600 () Unit!1838)

(assert (=> b!67857 (= lt!29600 lt!29608)))

(declare-fun lt!29603 () ListLongMap!1403)

(assert (=> b!67857 (= lt!29603 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29593 () (_ BitVec 64))

(assert (=> b!67857 (= lt!29593 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29606 () (_ BitVec 64))

(assert (=> b!67857 (= lt!29606 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67857 (= lt!29614 (addApplyDifferent!48 lt!29603 lt!29593 (minValue!2055 newMap!16) lt!29606))))

(assert (=> b!67857 (= (apply!72 (+!89 lt!29603 (tuple2!2093 lt!29593 (minValue!2055 newMap!16))) lt!29606) (apply!72 lt!29603 lt!29606))))

(declare-fun e!44460 () Bool)

(declare-fun b!67858 () Bool)

(assert (=> b!67858 (= e!44460 (= (apply!72 lt!29613 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67858 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))))))

(assert (=> b!67858 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67859 () Bool)

(assert (=> b!67859 (= e!44462 e!44461)))

(declare-fun c!9536 () Bool)

(assert (=> b!67859 (= c!9536 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14499 () Bool)

(declare-fun e!44458 () Bool)

(assert (=> d!14499 e!44458))

(declare-fun res!36585 () Bool)

(assert (=> d!14499 (=> (not res!36585) (not e!44458))))

(assert (=> d!14499 (= res!36585 (or (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))))

(declare-fun lt!29595 () ListLongMap!1403)

(assert (=> d!14499 (= lt!29613 lt!29595)))

(declare-fun lt!29605 () Unit!1838)

(assert (=> d!14499 (= lt!29605 e!44454)))

(declare-fun c!9538 () Bool)

(declare-fun e!44463 () Bool)

(assert (=> d!14499 (= c!9538 e!44463)))

(declare-fun res!36587 () Bool)

(assert (=> d!14499 (=> (not res!36587) (not e!44463))))

(assert (=> d!14499 (= res!36587 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14499 (= lt!29595 e!44462)))

(declare-fun c!9537 () Bool)

(assert (=> d!14499 (= c!9537 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14499 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14499 (= (getCurrentListMap!415 (_keys!3787 newMap!16) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (index!3061 lt!28803) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29613)))

(declare-fun b!67860 () Bool)

(declare-fun e!44457 () Bool)

(declare-fun call!5700 () Bool)

(assert (=> b!67860 (= e!44457 (not call!5700))))

(declare-fun b!67861 () Bool)

(declare-fun res!36584 () Bool)

(assert (=> b!67861 (=> (not res!36584) (not e!44458))))

(assert (=> b!67861 (= res!36584 e!44457)))

(declare-fun c!9535 () Bool)

(assert (=> b!67861 (= c!9535 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5698 () Bool)

(assert (=> bm!5698 (= call!5703 call!5702)))

(declare-fun b!67862 () Bool)

(declare-fun e!44452 () Bool)

(assert (=> b!67862 (= e!44458 e!44452)))

(declare-fun c!9534 () Bool)

(assert (=> b!67862 (= c!9534 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67863 () Bool)

(assert (=> b!67863 (= e!44452 e!44459)))

(declare-fun res!36581 () Bool)

(assert (=> b!67863 (= res!36581 call!5698)))

(assert (=> b!67863 (=> (not res!36581) (not e!44459))))

(declare-fun bm!5699 () Bool)

(assert (=> bm!5699 (= call!5702 (+!89 (ite c!9537 call!5704 (ite c!9536 call!5699 call!5701)) (ite (or c!9537 c!9536) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!67864 () Bool)

(declare-fun c!9539 () Bool)

(assert (=> b!67864 (= c!9539 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!67864 (= e!44461 e!44456)))

(declare-fun bm!5700 () Bool)

(assert (=> bm!5700 (= call!5699 call!5704)))

(declare-fun b!67865 () Bool)

(assert (=> b!67865 (= e!44463 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67866 () Bool)

(declare-fun res!36583 () Bool)

(assert (=> b!67866 (=> (not res!36583) (not e!44458))))

(declare-fun e!44464 () Bool)

(assert (=> b!67866 (= res!36583 e!44464)))

(declare-fun res!36580 () Bool)

(assert (=> b!67866 (=> res!36580 e!44464)))

(declare-fun e!44455 () Bool)

(assert (=> b!67866 (= res!36580 (not e!44455))))

(declare-fun res!36582 () Bool)

(assert (=> b!67866 (=> (not res!36582) (not e!44455))))

(assert (=> b!67866 (= res!36582 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67867 () Bool)

(declare-fun e!44453 () Bool)

(assert (=> b!67867 (= e!44457 e!44453)))

(declare-fun res!36588 () Bool)

(assert (=> b!67867 (= res!36588 call!5700)))

(assert (=> b!67867 (=> (not res!36588) (not e!44453))))

(declare-fun b!67868 () Bool)

(assert (=> b!67868 (= e!44452 (not call!5698))))

(declare-fun b!67869 () Bool)

(assert (=> b!67869 (= e!44456 call!5701)))

(declare-fun b!67870 () Bool)

(declare-fun Unit!1897 () Unit!1838)

(assert (=> b!67870 (= e!44454 Unit!1897)))

(declare-fun b!67871 () Bool)

(assert (=> b!67871 (= e!44464 e!44460)))

(declare-fun res!36586 () Bool)

(assert (=> b!67871 (=> (not res!36586) (not e!44460))))

(assert (=> b!67871 (= res!36586 (contains!710 lt!29613 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67871 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun bm!5701 () Bool)

(assert (=> bm!5701 (= call!5700 (contains!710 lt!29613 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67872 () Bool)

(assert (=> b!67872 (= e!44455 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67873 () Bool)

(assert (=> b!67873 (= e!44453 (= (apply!72 lt!29613 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(assert (= (and d!14499 c!9537) b!67856))

(assert (= (and d!14499 (not c!9537)) b!67859))

(assert (= (and b!67859 c!9536) b!67853))

(assert (= (and b!67859 (not c!9536)) b!67864))

(assert (= (and b!67864 c!9539) b!67854))

(assert (= (and b!67864 (not c!9539)) b!67869))

(assert (= (or b!67854 b!67869) bm!5697))

(assert (= (or b!67853 bm!5697) bm!5700))

(assert (= (or b!67853 b!67854) bm!5698))

(assert (= (or b!67856 bm!5700) bm!5695))

(assert (= (or b!67856 bm!5698) bm!5699))

(assert (= (and d!14499 res!36587) b!67865))

(assert (= (and d!14499 c!9538) b!67857))

(assert (= (and d!14499 (not c!9538)) b!67870))

(assert (= (and d!14499 res!36585) b!67866))

(assert (= (and b!67866 res!36582) b!67872))

(assert (= (and b!67866 (not res!36580)) b!67871))

(assert (= (and b!67871 res!36586) b!67858))

(assert (= (and b!67866 res!36583) b!67861))

(assert (= (and b!67861 c!9535) b!67867))

(assert (= (and b!67861 (not c!9535)) b!67860))

(assert (= (and b!67867 res!36588) b!67873))

(assert (= (or b!67867 b!67860) bm!5701))

(assert (= (and b!67861 res!36584) b!67862))

(assert (= (and b!67862 c!9534) b!67863))

(assert (= (and b!67862 (not c!9534)) b!67868))

(assert (= (and b!67863 res!36581) b!67855))

(assert (= (or b!67863 b!67868) bm!5696))

(declare-fun b_lambda!3033 () Bool)

(assert (=> (not b_lambda!3033) (not b!67858)))

(assert (=> b!67858 t!4955))

(declare-fun b_and!4191 () Bool)

(assert (= b_and!4187 (and (=> t!4955 result!2591) b_and!4191)))

(assert (=> b!67858 t!4957))

(declare-fun b_and!4193 () Bool)

(assert (= b_and!4189 (and (=> t!4957 result!2593) b_and!4193)))

(declare-fun m!63553 () Bool)

(assert (=> b!67857 m!63553))

(declare-fun m!63555 () Bool)

(assert (=> b!67857 m!63555))

(declare-fun m!63557 () Bool)

(assert (=> b!67857 m!63557))

(declare-fun m!63559 () Bool)

(assert (=> b!67857 m!63559))

(declare-fun m!63561 () Bool)

(assert (=> b!67857 m!63561))

(declare-fun m!63563 () Bool)

(assert (=> b!67857 m!63563))

(declare-fun m!63565 () Bool)

(assert (=> b!67857 m!63565))

(declare-fun m!63567 () Bool)

(assert (=> b!67857 m!63567))

(declare-fun m!63569 () Bool)

(assert (=> b!67857 m!63569))

(declare-fun m!63571 () Bool)

(assert (=> b!67857 m!63571))

(declare-fun m!63573 () Bool)

(assert (=> b!67857 m!63573))

(assert (=> b!67857 m!63561))

(assert (=> b!67857 m!63569))

(declare-fun m!63575 () Bool)

(assert (=> b!67857 m!63575))

(assert (=> b!67857 m!61465))

(declare-fun m!63577 () Bool)

(assert (=> b!67857 m!63577))

(assert (=> b!67857 m!63577))

(declare-fun m!63579 () Bool)

(assert (=> b!67857 m!63579))

(assert (=> b!67857 m!63559))

(declare-fun m!63581 () Bool)

(assert (=> b!67857 m!63581))

(declare-fun m!63583 () Bool)

(assert (=> b!67857 m!63583))

(declare-fun m!63585 () Bool)

(assert (=> b!67855 m!63585))

(declare-fun m!63587 () Bool)

(assert (=> b!67873 m!63587))

(assert (=> b!67872 m!61465))

(assert (=> b!67872 m!61465))

(assert (=> b!67872 m!61479))

(declare-fun m!63589 () Bool)

(assert (=> b!67856 m!63589))

(assert (=> bm!5695 m!63573))

(declare-fun m!63591 () Bool)

(assert (=> bm!5696 m!63591))

(assert (=> b!67865 m!61465))

(assert (=> b!67865 m!61465))

(assert (=> b!67865 m!61479))

(assert (=> d!14499 m!61485))

(declare-fun m!63593 () Bool)

(assert (=> bm!5699 m!63593))

(declare-fun m!63595 () Bool)

(assert (=> bm!5701 m!63595))

(assert (=> b!67858 m!61465))

(assert (=> b!67858 m!61491))

(assert (=> b!67858 m!61465))

(declare-fun m!63597 () Bool)

(assert (=> b!67858 m!63597))

(declare-fun m!63599 () Bool)

(assert (=> b!67858 m!63599))

(assert (=> b!67858 m!63599))

(assert (=> b!67858 m!61491))

(declare-fun m!63601 () Bool)

(assert (=> b!67858 m!63601))

(assert (=> b!67871 m!61465))

(assert (=> b!67871 m!61465))

(declare-fun m!63603 () Bool)

(assert (=> b!67871 m!63603))

(assert (=> b!67101 d!14499))

(declare-fun d!14501 () Bool)

(declare-fun res!36589 () Bool)

(declare-fun e!44465 () Bool)

(assert (=> d!14501 (=> (not res!36589) (not e!44465))))

(assert (=> d!14501 (= res!36589 (simpleValid!48 (_2!1058 lt!29122)))))

(assert (=> d!14501 (= (valid!279 (_2!1058 lt!29122)) e!44465)))

(declare-fun b!67874 () Bool)

(declare-fun res!36590 () Bool)

(assert (=> b!67874 (=> (not res!36590) (not e!44465))))

(assert (=> b!67874 (= res!36590 (= (arrayCountValidKeys!0 (_keys!3787 (_2!1058 lt!29122)) #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!29122)))) (_size!385 (_2!1058 lt!29122))))))

(declare-fun b!67875 () Bool)

(declare-fun res!36591 () Bool)

(assert (=> b!67875 (=> (not res!36591) (not e!44465))))

(assert (=> b!67875 (= res!36591 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3787 (_2!1058 lt!29122)) (mask!6082 (_2!1058 lt!29122))))))

(declare-fun b!67876 () Bool)

(assert (=> b!67876 (= e!44465 (arrayNoDuplicates!0 (_keys!3787 (_2!1058 lt!29122)) #b00000000000000000000000000000000 Nil!1462))))

(assert (= (and d!14501 res!36589) b!67874))

(assert (= (and b!67874 res!36590) b!67875))

(assert (= (and b!67875 res!36591) b!67876))

(declare-fun m!63605 () Bool)

(assert (=> d!14501 m!63605))

(declare-fun m!63607 () Bool)

(assert (=> b!67874 m!63607))

(declare-fun m!63609 () Bool)

(assert (=> b!67875 m!63609))

(declare-fun m!63611 () Bool)

(assert (=> b!67876 m!63611))

(assert (=> b!67055 d!14501))

(declare-fun d!14503 () Bool)

(assert (=> d!14503 (= (content!71 Nil!1462) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!13817 d!14503))

(declare-fun d!14505 () Bool)

(assert (=> d!14505 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2937 () Bool)

(assert (= bs!2937 d!14505))

(assert (=> bs!2937 m!61507))

(declare-fun m!63613 () Bool)

(assert (=> bs!2937 m!63613))

(assert (=> b!67092 d!14505))

(declare-fun c!9540 () Bool)

(declare-fun d!14507 () Bool)

(assert (=> d!14507 (= c!9540 (and ((_ is Cons!1462) (toList!717 lt!28698)) (= (_1!1057 (h!2046 (toList!717 lt!28698))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!44466 () Option!136)

(assert (=> d!14507 (= (getValueByKey!130 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44466)))

(declare-fun b!67878 () Bool)

(declare-fun e!44467 () Option!136)

(assert (=> b!67878 (= e!44466 e!44467)))

(declare-fun c!9541 () Bool)

(assert (=> b!67878 (= c!9541 (and ((_ is Cons!1462) (toList!717 lt!28698)) (not (= (_1!1057 (h!2046 (toList!717 lt!28698))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!67877 () Bool)

(assert (=> b!67877 (= e!44466 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28698)))))))

(declare-fun b!67879 () Bool)

(assert (=> b!67879 (= e!44467 (getValueByKey!130 (t!4948 (toList!717 lt!28698)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67880 () Bool)

(assert (=> b!67880 (= e!44467 None!134)))

(assert (= (and d!14507 c!9540) b!67877))

(assert (= (and d!14507 (not c!9540)) b!67878))

(assert (= (and b!67878 c!9541) b!67879))

(assert (= (and b!67878 (not c!9541)) b!67880))

(assert (=> b!67879 m!61229))

(declare-fun m!63615 () Bool)

(assert (=> b!67879 m!63615))

(assert (=> b!67092 d!14507))

(declare-fun d!14509 () Bool)

(declare-fun res!36592 () Bool)

(declare-fun e!44468 () Bool)

(assert (=> d!14509 (=> res!36592 e!44468)))

(assert (=> d!14509 (= res!36592 (or ((_ is Nil!1463) lt!29200) ((_ is Nil!1463) (t!4948 lt!29200))))))

(assert (=> d!14509 (= (isStrictlySorted!289 lt!29200) e!44468)))

(declare-fun b!67881 () Bool)

(declare-fun e!44469 () Bool)

(assert (=> b!67881 (= e!44468 e!44469)))

(declare-fun res!36593 () Bool)

(assert (=> b!67881 (=> (not res!36593) (not e!44469))))

(assert (=> b!67881 (= res!36593 (bvslt (_1!1057 (h!2046 lt!29200)) (_1!1057 (h!2046 (t!4948 lt!29200)))))))

(declare-fun b!67882 () Bool)

(assert (=> b!67882 (= e!44469 (isStrictlySorted!289 (t!4948 lt!29200)))))

(assert (= (and d!14509 (not res!36592)) b!67881))

(assert (= (and b!67881 res!36593) b!67882))

(declare-fun m!63617 () Bool)

(assert (=> b!67882 m!63617))

(assert (=> d!13991 d!14509))

(declare-fun d!14511 () Bool)

(declare-fun res!36594 () Bool)

(declare-fun e!44470 () Bool)

(assert (=> d!14511 (=> res!36594 e!44470)))

(assert (=> d!14511 (= res!36594 (or ((_ is Nil!1463) (toList!717 lt!28620)) ((_ is Nil!1463) (t!4948 (toList!717 lt!28620)))))))

(assert (=> d!14511 (= (isStrictlySorted!289 (toList!717 lt!28620)) e!44470)))

(declare-fun b!67883 () Bool)

(declare-fun e!44471 () Bool)

(assert (=> b!67883 (= e!44470 e!44471)))

(declare-fun res!36595 () Bool)

(assert (=> b!67883 (=> (not res!36595) (not e!44471))))

(assert (=> b!67883 (= res!36595 (bvslt (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 (h!2046 (t!4948 (toList!717 lt!28620))))))))

(declare-fun b!67884 () Bool)

(assert (=> b!67884 (= e!44471 (isStrictlySorted!289 (t!4948 (toList!717 lt!28620))))))

(assert (= (and d!14511 (not res!36594)) b!67883))

(assert (= (and b!67883 res!36595) b!67884))

(assert (=> b!67884 m!62709))

(assert (=> d!13991 d!14511))

(declare-fun d!14513 () Bool)

(declare-fun res!36596 () Bool)

(declare-fun e!44472 () Bool)

(assert (=> d!14513 (=> res!36596 e!44472)))

(assert (=> d!14513 (= res!36596 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28622))) (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28622)))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!14513 (= (containsKey!134 (t!4948 (toList!717 lt!28622)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44472)))

(declare-fun b!67885 () Bool)

(declare-fun e!44473 () Bool)

(assert (=> b!67885 (= e!44472 e!44473)))

(declare-fun res!36597 () Bool)

(assert (=> b!67885 (=> (not res!36597) (not e!44473))))

(assert (=> b!67885 (= res!36597 (and (or (not ((_ is Cons!1462) (t!4948 (toList!717 lt!28622)))) (bvsle (_1!1057 (h!2046 (t!4948 (toList!717 lt!28622)))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))) ((_ is Cons!1462) (t!4948 (toList!717 lt!28622))) (bvslt (_1!1057 (h!2046 (t!4948 (toList!717 lt!28622)))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun b!67886 () Bool)

(assert (=> b!67886 (= e!44473 (containsKey!134 (t!4948 (t!4948 (toList!717 lt!28622))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14513 (not res!36596)) b!67885))

(assert (= (and b!67885 res!36597) b!67886))

(assert (=> b!67886 m!61065))

(declare-fun m!63619 () Bool)

(assert (=> b!67886 m!63619))

(assert (=> b!67071 d!14513))

(declare-fun d!14515 () Bool)

(declare-fun e!44474 () Bool)

(assert (=> d!14515 e!44474))

(declare-fun res!36599 () Bool)

(assert (=> d!14515 (=> (not res!36599) (not e!44474))))

(declare-fun lt!29615 () ListLongMap!1403)

(assert (=> d!14515 (= res!36599 (contains!710 lt!29615 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616))))))

(declare-fun lt!29616 () List!1466)

(assert (=> d!14515 (= lt!29615 (ListLongMap!1404 lt!29616))))

(declare-fun lt!29617 () Unit!1838)

(declare-fun lt!29618 () Unit!1838)

(assert (=> d!14515 (= lt!29617 lt!29618)))

(assert (=> d!14515 (= (getValueByKey!130 lt!29616 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616))))))

(assert (=> d!14515 (= lt!29618 (lemmaContainsTupThenGetReturnValue!47 lt!29616 (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616))))))

(assert (=> d!14515 (= lt!29616 (insertStrictlySorted!50 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616))))))

(assert (=> d!14515 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) lt!29615)))

(declare-fun b!67887 () Bool)

(declare-fun res!36598 () Bool)

(assert (=> b!67887 (=> (not res!36598) (not e!44474))))

(assert (=> b!67887 (= res!36598 (= (getValueByKey!130 (toList!717 lt!29615) (_1!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616))) (Some!135 (_2!1057 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)))))))

(declare-fun b!67888 () Bool)

(assert (=> b!67888 (= e!44474 (contains!712 (toList!717 lt!29615) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)))))

(assert (= (and d!14515 res!36599) b!67887))

(assert (= (and b!67887 res!36598) b!67888))

(declare-fun m!63621 () Bool)

(assert (=> d!14515 m!63621))

(declare-fun m!63623 () Bool)

(assert (=> d!14515 m!63623))

(declare-fun m!63625 () Bool)

(assert (=> d!14515 m!63625))

(declare-fun m!63627 () Bool)

(assert (=> d!14515 m!63627))

(declare-fun m!63629 () Bool)

(assert (=> b!67887 m!63629))

(declare-fun m!63631 () Bool)

(assert (=> b!67888 m!63631))

(assert (=> d!13997 d!14515))

(assert (=> d!13997 d!13903))

(declare-fun d!14517 () Bool)

(assert (=> d!14517 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)) (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28786 (zeroValue!2055 newMap!16) lt!28616 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(assert (=> d!14517 true))

(declare-fun _$8!55 () Unit!1838)

(assert (=> d!14517 (= (choose!376 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) lt!28786 (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) lt!28616 (defaultEntry!2147 newMap!16)) _$8!55)))

(declare-fun bs!2938 () Bool)

(assert (= bs!2938 d!14517))

(assert (=> bs!2938 m!61299))

(assert (=> bs!2938 m!61299))

(assert (=> bs!2938 m!62151))

(assert (=> bs!2938 m!62153))

(assert (=> d!13997 d!14517))

(declare-fun b!67889 () Bool)

(declare-fun e!44484 () ListLongMap!1403)

(declare-fun call!5710 () ListLongMap!1403)

(assert (=> b!67889 (= e!44484 call!5710)))

(declare-fun b!67890 () Bool)

(declare-fun e!44479 () ListLongMap!1403)

(assert (=> b!67890 (= e!44479 call!5710)))

(declare-fun b!67891 () Bool)

(declare-fun e!44482 () Bool)

(declare-fun lt!29639 () ListLongMap!1403)

(assert (=> b!67891 (= e!44482 (= (apply!72 lt!29639 #b1000000000000000000000000000000000000000000000000000000000000000) lt!28616))))

(declare-fun bm!5702 () Bool)

(declare-fun call!5711 () ListLongMap!1403)

(assert (=> bm!5702 (= call!5711 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28786 (zeroValue!2055 newMap!16) lt!28616 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5703 () Bool)

(declare-fun call!5705 () Bool)

(assert (=> bm!5703 (= call!5705 (contains!710 lt!29639 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5704 () Bool)

(declare-fun call!5708 () ListLongMap!1403)

(declare-fun call!5706 () ListLongMap!1403)

(assert (=> bm!5704 (= call!5708 call!5706)))

(declare-fun b!67892 () Bool)

(declare-fun e!44485 () ListLongMap!1403)

(declare-fun call!5709 () ListLongMap!1403)

(assert (=> b!67892 (= e!44485 (+!89 call!5709 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616)))))

(declare-fun b!67893 () Bool)

(declare-fun e!44477 () Unit!1838)

(declare-fun lt!29640 () Unit!1838)

(assert (=> b!67893 (= e!44477 lt!29640)))

(declare-fun lt!29636 () ListLongMap!1403)

(assert (=> b!67893 (= lt!29636 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28786 (zeroValue!2055 newMap!16) lt!28616 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29638 () (_ BitVec 64))

(assert (=> b!67893 (= lt!29638 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29628 () (_ BitVec 64))

(assert (=> b!67893 (= lt!29628 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29627 () Unit!1838)

(assert (=> b!67893 (= lt!29627 (addStillContains!48 lt!29636 lt!29638 (zeroValue!2055 newMap!16) lt!29628))))

(assert (=> b!67893 (contains!710 (+!89 lt!29636 (tuple2!2093 lt!29638 (zeroValue!2055 newMap!16))) lt!29628)))

(declare-fun lt!29620 () Unit!1838)

(assert (=> b!67893 (= lt!29620 lt!29627)))

(declare-fun lt!29633 () ListLongMap!1403)

(assert (=> b!67893 (= lt!29633 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28786 (zeroValue!2055 newMap!16) lt!28616 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29630 () (_ BitVec 64))

(assert (=> b!67893 (= lt!29630 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29622 () (_ BitVec 64))

(assert (=> b!67893 (= lt!29622 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29623 () Unit!1838)

(assert (=> b!67893 (= lt!29623 (addApplyDifferent!48 lt!29633 lt!29630 lt!28616 lt!29622))))

(assert (=> b!67893 (= (apply!72 (+!89 lt!29633 (tuple2!2093 lt!29630 lt!28616)) lt!29622) (apply!72 lt!29633 lt!29622))))

(declare-fun lt!29637 () Unit!1838)

(assert (=> b!67893 (= lt!29637 lt!29623)))

(declare-fun lt!29625 () ListLongMap!1403)

(assert (=> b!67893 (= lt!29625 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28786 (zeroValue!2055 newMap!16) lt!28616 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29624 () (_ BitVec 64))

(assert (=> b!67893 (= lt!29624 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29635 () (_ BitVec 64))

(assert (=> b!67893 (= lt!29635 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29634 () Unit!1838)

(assert (=> b!67893 (= lt!29634 (addApplyDifferent!48 lt!29625 lt!29624 (zeroValue!2055 newMap!16) lt!29635))))

(assert (=> b!67893 (= (apply!72 (+!89 lt!29625 (tuple2!2093 lt!29624 (zeroValue!2055 newMap!16))) lt!29635) (apply!72 lt!29625 lt!29635))))

(declare-fun lt!29626 () Unit!1838)

(assert (=> b!67893 (= lt!29626 lt!29634)))

(declare-fun lt!29629 () ListLongMap!1403)

(assert (=> b!67893 (= lt!29629 (getCurrentListMapNoExtraKeys!54 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28786 (zeroValue!2055 newMap!16) lt!28616 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29619 () (_ BitVec 64))

(assert (=> b!67893 (= lt!29619 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29632 () (_ BitVec 64))

(assert (=> b!67893 (= lt!29632 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67893 (= lt!29640 (addApplyDifferent!48 lt!29629 lt!29619 lt!28616 lt!29632))))

(assert (=> b!67893 (= (apply!72 (+!89 lt!29629 (tuple2!2093 lt!29619 lt!28616)) lt!29632) (apply!72 lt!29629 lt!29632))))

(declare-fun b!67894 () Bool)

(declare-fun e!44483 () Bool)

(assert (=> b!67894 (= e!44483 (= (apply!72 lt!29639 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (_values!2130 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67894 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (_values!2130 newMap!16))))))

(assert (=> b!67894 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67895 () Bool)

(assert (=> b!67895 (= e!44485 e!44484)))

(declare-fun c!9544 () Bool)

(assert (=> b!67895 (= c!9544 (and (not (= (bvand lt!28786 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!28786 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14519 () Bool)

(declare-fun e!44481 () Bool)

(assert (=> d!14519 e!44481))

(declare-fun res!36605 () Bool)

(assert (=> d!14519 (=> (not res!36605) (not e!44481))))

(assert (=> d!14519 (= res!36605 (or (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))))

(declare-fun lt!29621 () ListLongMap!1403)

(assert (=> d!14519 (= lt!29639 lt!29621)))

(declare-fun lt!29631 () Unit!1838)

(assert (=> d!14519 (= lt!29631 e!44477)))

(declare-fun c!9546 () Bool)

(declare-fun e!44486 () Bool)

(assert (=> d!14519 (= c!9546 e!44486)))

(declare-fun res!36607 () Bool)

(assert (=> d!14519 (=> (not res!36607) (not e!44486))))

(assert (=> d!14519 (= res!36607 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14519 (= lt!29621 e!44485)))

(declare-fun c!9545 () Bool)

(assert (=> d!14519 (= c!9545 (and (not (= (bvand lt!28786 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!28786 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14519 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14519 (= (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) lt!28786 (zeroValue!2055 newMap!16) lt!28616 #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29639)))

(declare-fun b!67896 () Bool)

(declare-fun e!44480 () Bool)

(declare-fun call!5707 () Bool)

(assert (=> b!67896 (= e!44480 (not call!5707))))

(declare-fun b!67897 () Bool)

(declare-fun res!36604 () Bool)

(assert (=> b!67897 (=> (not res!36604) (not e!44481))))

(assert (=> b!67897 (= res!36604 e!44480)))

(declare-fun c!9543 () Bool)

(assert (=> b!67897 (= c!9543 (not (= (bvand lt!28786 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5705 () Bool)

(assert (=> bm!5705 (= call!5710 call!5709)))

(declare-fun b!67898 () Bool)

(declare-fun e!44475 () Bool)

(assert (=> b!67898 (= e!44481 e!44475)))

(declare-fun c!9542 () Bool)

(assert (=> b!67898 (= c!9542 (not (= (bvand lt!28786 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67899 () Bool)

(assert (=> b!67899 (= e!44475 e!44482)))

(declare-fun res!36601 () Bool)

(assert (=> b!67899 (= res!36601 call!5705)))

(assert (=> b!67899 (=> (not res!36601) (not e!44482))))

(declare-fun bm!5706 () Bool)

(assert (=> bm!5706 (= call!5709 (+!89 (ite c!9545 call!5711 (ite c!9544 call!5706 call!5708)) (ite (or c!9545 c!9544) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28616))))))

(declare-fun b!67900 () Bool)

(declare-fun c!9547 () Bool)

(assert (=> b!67900 (= c!9547 (and (not (= (bvand lt!28786 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!28786 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!67900 (= e!44484 e!44479)))

(declare-fun bm!5707 () Bool)

(assert (=> bm!5707 (= call!5706 call!5711)))

(declare-fun b!67901 () Bool)

(assert (=> b!67901 (= e!44486 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67902 () Bool)

(declare-fun res!36603 () Bool)

(assert (=> b!67902 (=> (not res!36603) (not e!44481))))

(declare-fun e!44487 () Bool)

(assert (=> b!67902 (= res!36603 e!44487)))

(declare-fun res!36600 () Bool)

(assert (=> b!67902 (=> res!36600 e!44487)))

(declare-fun e!44478 () Bool)

(assert (=> b!67902 (= res!36600 (not e!44478))))

(declare-fun res!36602 () Bool)

(assert (=> b!67902 (=> (not res!36602) (not e!44478))))

(assert (=> b!67902 (= res!36602 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun b!67903 () Bool)

(declare-fun e!44476 () Bool)

(assert (=> b!67903 (= e!44480 e!44476)))

(declare-fun res!36608 () Bool)

(assert (=> b!67903 (= res!36608 call!5707)))

(assert (=> b!67903 (=> (not res!36608) (not e!44476))))

(declare-fun b!67904 () Bool)

(assert (=> b!67904 (= e!44475 (not call!5705))))

(declare-fun b!67905 () Bool)

(assert (=> b!67905 (= e!44479 call!5708)))

(declare-fun b!67906 () Bool)

(declare-fun Unit!1898 () Unit!1838)

(assert (=> b!67906 (= e!44477 Unit!1898)))

(declare-fun b!67907 () Bool)

(assert (=> b!67907 (= e!44487 e!44483)))

(declare-fun res!36606 () Bool)

(assert (=> b!67907 (=> (not res!36606) (not e!44483))))

(assert (=> b!67907 (= res!36606 (contains!710 lt!29639 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67907 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(declare-fun bm!5708 () Bool)

(assert (=> bm!5708 (= call!5707 (contains!710 lt!29639 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67908 () Bool)

(assert (=> b!67908 (= e!44478 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67909 () Bool)

(assert (=> b!67909 (= e!44476 (= (apply!72 lt!29639 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(assert (= (and d!14519 c!9545) b!67892))

(assert (= (and d!14519 (not c!9545)) b!67895))

(assert (= (and b!67895 c!9544) b!67889))

(assert (= (and b!67895 (not c!9544)) b!67900))

(assert (= (and b!67900 c!9547) b!67890))

(assert (= (and b!67900 (not c!9547)) b!67905))

(assert (= (or b!67890 b!67905) bm!5704))

(assert (= (or b!67889 bm!5704) bm!5707))

(assert (= (or b!67889 b!67890) bm!5705))

(assert (= (or b!67892 bm!5707) bm!5702))

(assert (= (or b!67892 bm!5705) bm!5706))

(assert (= (and d!14519 res!36607) b!67901))

(assert (= (and d!14519 c!9546) b!67893))

(assert (= (and d!14519 (not c!9546)) b!67906))

(assert (= (and d!14519 res!36605) b!67902))

(assert (= (and b!67902 res!36602) b!67908))

(assert (= (and b!67902 (not res!36600)) b!67907))

(assert (= (and b!67907 res!36606) b!67894))

(assert (= (and b!67902 res!36603) b!67897))

(assert (= (and b!67897 c!9543) b!67903))

(assert (= (and b!67897 (not c!9543)) b!67896))

(assert (= (and b!67903 res!36608) b!67909))

(assert (= (or b!67903 b!67896) bm!5708))

(assert (= (and b!67897 res!36604) b!67898))

(assert (= (and b!67898 c!9542) b!67899))

(assert (= (and b!67898 (not c!9542)) b!67904))

(assert (= (and b!67899 res!36601) b!67891))

(assert (= (or b!67899 b!67904) bm!5703))

(declare-fun b_lambda!3035 () Bool)

(assert (=> (not b_lambda!3035) (not b!67894)))

(assert (=> b!67894 t!4955))

(declare-fun b_and!4195 () Bool)

(assert (= b_and!4191 (and (=> t!4955 result!2591) b_and!4195)))

(assert (=> b!67894 t!4957))

(declare-fun b_and!4197 () Bool)

(assert (= b_and!4193 (and (=> t!4957 result!2593) b_and!4197)))

(declare-fun m!63633 () Bool)

(assert (=> b!67893 m!63633))

(declare-fun m!63635 () Bool)

(assert (=> b!67893 m!63635))

(declare-fun m!63637 () Bool)

(assert (=> b!67893 m!63637))

(declare-fun m!63639 () Bool)

(assert (=> b!67893 m!63639))

(declare-fun m!63641 () Bool)

(assert (=> b!67893 m!63641))

(declare-fun m!63643 () Bool)

(assert (=> b!67893 m!63643))

(declare-fun m!63645 () Bool)

(assert (=> b!67893 m!63645))

(declare-fun m!63647 () Bool)

(assert (=> b!67893 m!63647))

(declare-fun m!63649 () Bool)

(assert (=> b!67893 m!63649))

(declare-fun m!63651 () Bool)

(assert (=> b!67893 m!63651))

(declare-fun m!63653 () Bool)

(assert (=> b!67893 m!63653))

(assert (=> b!67893 m!63641))

(assert (=> b!67893 m!63649))

(declare-fun m!63655 () Bool)

(assert (=> b!67893 m!63655))

(assert (=> b!67893 m!61465))

(declare-fun m!63657 () Bool)

(assert (=> b!67893 m!63657))

(assert (=> b!67893 m!63657))

(declare-fun m!63659 () Bool)

(assert (=> b!67893 m!63659))

(assert (=> b!67893 m!63639))

(declare-fun m!63661 () Bool)

(assert (=> b!67893 m!63661))

(declare-fun m!63663 () Bool)

(assert (=> b!67893 m!63663))

(declare-fun m!63665 () Bool)

(assert (=> b!67891 m!63665))

(declare-fun m!63667 () Bool)

(assert (=> b!67909 m!63667))

(assert (=> b!67908 m!61465))

(assert (=> b!67908 m!61465))

(assert (=> b!67908 m!61479))

(declare-fun m!63669 () Bool)

(assert (=> b!67892 m!63669))

(assert (=> bm!5702 m!63653))

(declare-fun m!63671 () Bool)

(assert (=> bm!5703 m!63671))

(assert (=> b!67901 m!61465))

(assert (=> b!67901 m!61465))

(assert (=> b!67901 m!61479))

(assert (=> d!14519 m!61485))

(declare-fun m!63673 () Bool)

(assert (=> bm!5706 m!63673))

(declare-fun m!63675 () Bool)

(assert (=> bm!5708 m!63675))

(assert (=> b!67894 m!61465))

(assert (=> b!67894 m!61491))

(assert (=> b!67894 m!61465))

(declare-fun m!63677 () Bool)

(assert (=> b!67894 m!63677))

(assert (=> b!67894 m!61799))

(assert (=> b!67894 m!61799))

(assert (=> b!67894 m!61491))

(assert (=> b!67894 m!61801))

(assert (=> b!67907 m!61465))

(assert (=> b!67907 m!61465))

(declare-fun m!63679 () Bool)

(assert (=> b!67907 m!63679))

(assert (=> d!13997 d!14519))

(assert (=> d!13997 d!14025))

(declare-fun d!14521 () Bool)

(declare-fun lt!29641 () Bool)

(assert (=> d!14521 (= lt!29641 (select (content!72 lt!28888) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun e!44488 () Bool)

(assert (=> d!14521 (= lt!29641 e!44488)))

(declare-fun res!36609 () Bool)

(assert (=> d!14521 (=> (not res!36609) (not e!44488))))

(assert (=> d!14521 (= res!36609 ((_ is Cons!1462) lt!28888))))

(assert (=> d!14521 (= (contains!712 lt!28888 (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))) lt!29641)))

(declare-fun b!67910 () Bool)

(declare-fun e!44489 () Bool)

(assert (=> b!67910 (= e!44488 e!44489)))

(declare-fun res!36610 () Bool)

(assert (=> b!67910 (=> res!36610 e!44489)))

(assert (=> b!67910 (= res!36610 (= (h!2046 lt!28888) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun b!67911 () Bool)

(assert (=> b!67911 (= e!44489 (contains!712 (t!4948 lt!28888) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(assert (= (and d!14521 res!36609) b!67910))

(assert (= (and b!67910 (not res!36610)) b!67911))

(declare-fun m!63681 () Bool)

(assert (=> d!14521 m!63681))

(declare-fun m!63683 () Bool)

(assert (=> d!14521 m!63683))

(declare-fun m!63685 () Bool)

(assert (=> b!67911 m!63685))

(assert (=> b!66773 d!14521))

(declare-fun d!14523 () Bool)

(declare-fun e!44491 () Bool)

(assert (=> d!14523 e!44491))

(declare-fun res!36611 () Bool)

(assert (=> d!14523 (=> res!36611 e!44491)))

(declare-fun lt!29644 () Bool)

(assert (=> d!14523 (= res!36611 (not lt!29644))))

(declare-fun lt!29642 () Bool)

(assert (=> d!14523 (= lt!29644 lt!29642)))

(declare-fun lt!29645 () Unit!1838)

(declare-fun e!44490 () Unit!1838)

(assert (=> d!14523 (= lt!29645 e!44490)))

(declare-fun c!9548 () Bool)

(assert (=> d!14523 (= c!9548 lt!29642)))

(assert (=> d!14523 (= lt!29642 (containsKey!134 (toList!717 lt!28960) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14523 (= (contains!710 lt!28960 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29644)))

(declare-fun b!67912 () Bool)

(declare-fun lt!29643 () Unit!1838)

(assert (=> b!67912 (= e!44490 lt!29643)))

(assert (=> b!67912 (= lt!29643 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28960) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67912 (isDefined!83 (getValueByKey!130 (toList!717 lt!28960) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67913 () Bool)

(declare-fun Unit!1899 () Unit!1838)

(assert (=> b!67913 (= e!44490 Unit!1899)))

(declare-fun b!67914 () Bool)

(assert (=> b!67914 (= e!44491 (isDefined!83 (getValueByKey!130 (toList!717 lt!28960) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14523 c!9548) b!67912))

(assert (= (and d!14523 (not c!9548)) b!67913))

(assert (= (and d!14523 (not res!36611)) b!67914))

(declare-fun m!63687 () Bool)

(assert (=> d!14523 m!63687))

(declare-fun m!63689 () Bool)

(assert (=> b!67912 m!63689))

(assert (=> b!67912 m!61661))

(assert (=> b!67912 m!61661))

(declare-fun m!63691 () Bool)

(assert (=> b!67912 m!63691))

(assert (=> b!67914 m!61661))

(assert (=> b!67914 m!61661))

(assert (=> b!67914 m!63691))

(assert (=> d!13867 d!14523))

(declare-fun d!14525 () Bool)

(declare-fun c!9549 () Bool)

(assert (=> d!14525 (= c!9549 (and ((_ is Cons!1462) lt!28961) (= (_1!1057 (h!2046 lt!28961)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44492 () Option!136)

(assert (=> d!14525 (= (getValueByKey!130 lt!28961 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44492)))

(declare-fun b!67916 () Bool)

(declare-fun e!44493 () Option!136)

(assert (=> b!67916 (= e!44492 e!44493)))

(declare-fun c!9550 () Bool)

(assert (=> b!67916 (= c!9550 (and ((_ is Cons!1462) lt!28961) (not (= (_1!1057 (h!2046 lt!28961)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67915 () Bool)

(assert (=> b!67915 (= e!44492 (Some!135 (_2!1057 (h!2046 lt!28961))))))

(declare-fun b!67917 () Bool)

(assert (=> b!67917 (= e!44493 (getValueByKey!130 (t!4948 lt!28961) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67918 () Bool)

(assert (=> b!67918 (= e!44493 None!134)))

(assert (= (and d!14525 c!9549) b!67915))

(assert (= (and d!14525 (not c!9549)) b!67916))

(assert (= (and b!67916 c!9550) b!67917))

(assert (= (and b!67916 (not c!9550)) b!67918))

(declare-fun m!63693 () Bool)

(assert (=> b!67917 m!63693))

(assert (=> d!13867 d!14525))

(declare-fun d!14527 () Bool)

(assert (=> d!14527 (= (getValueByKey!130 lt!28961 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29646 () Unit!1838)

(assert (=> d!14527 (= lt!29646 (choose!367 lt!28961 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44494 () Bool)

(assert (=> d!14527 e!44494))

(declare-fun res!36612 () Bool)

(assert (=> d!14527 (=> (not res!36612) (not e!44494))))

(assert (=> d!14527 (= res!36612 (isStrictlySorted!289 lt!28961))))

(assert (=> d!14527 (= (lemmaContainsTupThenGetReturnValue!47 lt!28961 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29646)))

(declare-fun b!67919 () Bool)

(declare-fun res!36613 () Bool)

(assert (=> b!67919 (=> (not res!36613) (not e!44494))))

(assert (=> b!67919 (= res!36613 (containsKey!134 lt!28961 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67920 () Bool)

(assert (=> b!67920 (= e!44494 (contains!712 lt!28961 (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14527 res!36612) b!67919))

(assert (= (and b!67919 res!36613) b!67920))

(assert (=> d!14527 m!61655))

(declare-fun m!63695 () Bool)

(assert (=> d!14527 m!63695))

(declare-fun m!63697 () Bool)

(assert (=> d!14527 m!63697))

(declare-fun m!63699 () Bool)

(assert (=> b!67919 m!63699))

(declare-fun m!63701 () Bool)

(assert (=> b!67920 m!63701))

(assert (=> d!13867 d!14527))

(declare-fun b!67921 () Bool)

(declare-fun e!44497 () List!1466)

(declare-fun call!5712 () List!1466)

(assert (=> b!67921 (= e!44497 call!5712)))

(declare-fun bm!5709 () Bool)

(declare-fun call!5713 () List!1466)

(declare-fun call!5714 () List!1466)

(assert (=> bm!5709 (= call!5713 call!5714)))

(declare-fun b!67922 () Bool)

(declare-fun e!44499 () Bool)

(declare-fun lt!29647 () List!1466)

(assert (=> b!67922 (= e!44499 (contains!712 lt!29647 (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67923 () Bool)

(assert (=> b!67923 (= e!44497 call!5712)))

(declare-fun b!67924 () Bool)

(declare-fun e!44495 () List!1466)

(assert (=> b!67924 (= e!44495 (insertStrictlySorted!50 (t!4948 (toList!717 lt!28620)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67925 () Bool)

(declare-fun e!44498 () List!1466)

(assert (=> b!67925 (= e!44498 call!5714)))

(declare-fun c!9553 () Bool)

(declare-fun b!67926 () Bool)

(declare-fun c!9551 () Bool)

(assert (=> b!67926 (= e!44495 (ite c!9551 (t!4948 (toList!717 lt!28620)) (ite c!9553 (Cons!1462 (h!2046 (toList!717 lt!28620)) (t!4948 (toList!717 lt!28620))) Nil!1463)))))

(declare-fun d!14529 () Bool)

(assert (=> d!14529 e!44499))

(declare-fun res!36615 () Bool)

(assert (=> d!14529 (=> (not res!36615) (not e!44499))))

(assert (=> d!14529 (= res!36615 (isStrictlySorted!289 lt!29647))))

(assert (=> d!14529 (= lt!29647 e!44498)))

(declare-fun c!9554 () Bool)

(assert (=> d!14529 (= c!9554 (and ((_ is Cons!1462) (toList!717 lt!28620)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14529 (isStrictlySorted!289 (toList!717 lt!28620))))

(assert (=> d!14529 (= (insertStrictlySorted!50 (toList!717 lt!28620) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29647)))

(declare-fun bm!5710 () Bool)

(assert (=> bm!5710 (= call!5712 call!5713)))

(declare-fun b!67927 () Bool)

(declare-fun res!36614 () Bool)

(assert (=> b!67927 (=> (not res!36614) (not e!44499))))

(assert (=> b!67927 (= res!36614 (containsKey!134 lt!29647 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67928 () Bool)

(declare-fun e!44496 () List!1466)

(assert (=> b!67928 (= e!44496 call!5713)))

(declare-fun b!67929 () Bool)

(assert (=> b!67929 (= c!9553 (and ((_ is Cons!1462) (toList!717 lt!28620)) (bvsgt (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67929 (= e!44496 e!44497)))

(declare-fun b!67930 () Bool)

(assert (=> b!67930 (= e!44498 e!44496)))

(assert (=> b!67930 (= c!9551 (and ((_ is Cons!1462) (toList!717 lt!28620)) (= (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun bm!5711 () Bool)

(assert (=> bm!5711 (= call!5714 ($colon$colon!63 e!44495 (ite c!9554 (h!2046 (toList!717 lt!28620)) (tuple2!2093 (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9552 () Bool)

(assert (=> bm!5711 (= c!9552 c!9554)))

(assert (= (and d!14529 c!9554) b!67925))

(assert (= (and d!14529 (not c!9554)) b!67930))

(assert (= (and b!67930 c!9551) b!67928))

(assert (= (and b!67930 (not c!9551)) b!67929))

(assert (= (and b!67929 c!9553) b!67923))

(assert (= (and b!67929 (not c!9553)) b!67921))

(assert (= (or b!67923 b!67921) bm!5710))

(assert (= (or b!67928 bm!5710) bm!5709))

(assert (= (or b!67925 bm!5709) bm!5711))

(assert (= (and bm!5711 c!9552) b!67924))

(assert (= (and bm!5711 (not c!9552)) b!67926))

(assert (= (and d!14529 res!36615) b!67927))

(assert (= (and b!67927 res!36614) b!67922))

(declare-fun m!63703 () Bool)

(assert (=> b!67922 m!63703))

(declare-fun m!63705 () Bool)

(assert (=> d!14529 m!63705))

(assert (=> d!14529 m!61425))

(declare-fun m!63707 () Bool)

(assert (=> bm!5711 m!63707))

(declare-fun m!63709 () Bool)

(assert (=> b!67927 m!63709))

(declare-fun m!63711 () Bool)

(assert (=> b!67924 m!63711))

(assert (=> d!13867 d!14529))

(declare-fun d!14531 () Bool)

(declare-fun res!36616 () Bool)

(declare-fun e!44502 () Bool)

(assert (=> d!14531 (=> res!36616 e!44502)))

(assert (=> d!14531 (= res!36616 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14531 (= (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9314 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462))) e!44502)))

(declare-fun call!5715 () Bool)

(declare-fun c!9555 () Bool)

(declare-fun bm!5712 () Bool)

(assert (=> bm!5712 (= call!5715 (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9555 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!9314 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462))) (ite c!9314 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)))))))

(declare-fun e!44503 () Bool)

(declare-fun b!67931 () Bool)

(assert (=> b!67931 (= e!44503 (contains!713 (ite c!9314 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)) (ite c!9155 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1462) Nil!1462)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67932 () Bool)

(declare-fun e!44501 () Bool)

(declare-fun e!44500 () Bool)

(assert (=> b!67932 (= e!44501 e!44500)))

(assert (=> b!67932 (= c!9555 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67933 () Bool)

(assert (=> b!67933 (= e!44502 e!44501)))

(declare-fun res!36618 () Bool)

(assert (=> b!67933 (=> (not res!36618) (not e!44501))))

(assert (=> b!67933 (= res!36618 (not e!44503))))

(declare-fun res!36617 () Bool)

(assert (=> b!67933 (=> (not res!36617) (not e!44503))))

(assert (=> b!67933 (= res!36617 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67934 () Bool)

(assert (=> b!67934 (= e!44500 call!5715)))

(declare-fun b!67935 () Bool)

(assert (=> b!67935 (= e!44500 call!5715)))

(assert (= (and d!14531 (not res!36616)) b!67933))

(assert (= (and b!67933 res!36617) b!67931))

(assert (= (and b!67933 res!36618) b!67932))

(assert (= (and b!67932 c!9555) b!67935))

(assert (= (and b!67932 (not c!9555)) b!67934))

(assert (= (or b!67935 b!67934) bm!5712))

(declare-fun m!63713 () Bool)

(assert (=> bm!5712 m!63713))

(declare-fun m!63715 () Bool)

(assert (=> bm!5712 m!63715))

(assert (=> b!67931 m!63713))

(assert (=> b!67931 m!63713))

(declare-fun m!63717 () Bool)

(assert (=> b!67931 m!63717))

(assert (=> b!67932 m!63713))

(assert (=> b!67932 m!63713))

(declare-fun m!63719 () Bool)

(assert (=> b!67932 m!63719))

(assert (=> b!67933 m!63713))

(assert (=> b!67933 m!63713))

(assert (=> b!67933 m!63719))

(assert (=> bm!5624 d!14531))

(declare-fun d!14533 () Bool)

(assert (=> d!14533 (isDefined!83 (getValueByKey!130 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29648 () Unit!1838)

(assert (=> d!14533 (= lt!29648 (choose!377 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44504 () Bool)

(assert (=> d!14533 e!44504))

(declare-fun res!36619 () Bool)

(assert (=> d!14533 (=> (not res!36619) (not e!44504))))

(assert (=> d!14533 (= res!36619 (isStrictlySorted!289 (toList!717 lt!28877)))))

(assert (=> d!14533 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000) lt!29648)))

(declare-fun b!67936 () Bool)

(assert (=> b!67936 (= e!44504 (containsKey!134 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14533 res!36619) b!67936))

(assert (=> d!14533 m!61437))

(assert (=> d!14533 m!61437))

(assert (=> d!14533 m!61439))

(declare-fun m!63721 () Bool)

(assert (=> d!14533 m!63721))

(assert (=> d!14533 m!62343))

(assert (=> b!67936 m!61433))

(assert (=> b!66782 d!14533))

(assert (=> b!66782 d!14303))

(assert (=> b!66782 d!14305))

(declare-fun d!14535 () Bool)

(assert (=> d!14535 (= (isDefined!83 (getValueByKey!130 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))) (not (isEmpty!309 (getValueByKey!130 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(declare-fun bs!2939 () Bool)

(assert (= bs!2939 d!14535))

(assert (=> bs!2939 m!61809))

(declare-fun m!63723 () Bool)

(assert (=> bs!2939 m!63723))

(assert (=> b!66985 d!14535))

(declare-fun d!14537 () Bool)

(declare-fun c!9556 () Bool)

(assert (=> d!14537 (= c!9556 (and ((_ is Cons!1462) (toList!717 call!5541)) (= (_1!1057 (h!2046 (toList!717 call!5541))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun e!44505 () Option!136)

(assert (=> d!14537 (= (getValueByKey!130 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44505)))

(declare-fun b!67938 () Bool)

(declare-fun e!44506 () Option!136)

(assert (=> b!67938 (= e!44505 e!44506)))

(declare-fun c!9557 () Bool)

(assert (=> b!67938 (= c!9557 (and ((_ is Cons!1462) (toList!717 call!5541)) (not (= (_1!1057 (h!2046 (toList!717 call!5541))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(declare-fun b!67937 () Bool)

(assert (=> b!67937 (= e!44505 (Some!135 (_2!1057 (h!2046 (toList!717 call!5541)))))))

(declare-fun b!67939 () Bool)

(assert (=> b!67939 (= e!44506 (getValueByKey!130 (t!4948 (toList!717 call!5541)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67940 () Bool)

(assert (=> b!67940 (= e!44506 None!134)))

(assert (= (and d!14537 c!9556) b!67937))

(assert (= (and d!14537 (not c!9556)) b!67938))

(assert (= (and b!67938 c!9557) b!67939))

(assert (= (and b!67938 (not c!9557)) b!67940))

(assert (=> b!67939 m!61065))

(declare-fun m!63725 () Bool)

(assert (=> b!67939 m!63725))

(assert (=> b!66985 d!14537))

(declare-fun d!14539 () Bool)

(declare-fun res!36620 () Bool)

(declare-fun e!44509 () Bool)

(assert (=> d!14539 (=> res!36620 e!44509)))

(assert (=> d!14539 (= res!36620 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14539 (= (arrayNoDuplicates!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9267 (Cons!1461 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) Nil!1462) Nil!1462)) e!44509)))

(declare-fun c!9558 () Bool)

(declare-fun call!5716 () Bool)

(declare-fun bm!5713 () Bool)

(assert (=> bm!5713 (= call!5716 (arrayNoDuplicates!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9558 (Cons!1461 (select (arr!1835 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!9267 (Cons!1461 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) Nil!1462) Nil!1462)) (ite c!9267 (Cons!1461 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) Nil!1462) Nil!1462))))))

(declare-fun b!67941 () Bool)

(declare-fun e!44510 () Bool)

(assert (=> b!67941 (= e!44510 (contains!713 (ite c!9267 (Cons!1461 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000) Nil!1462) Nil!1462) (select (arr!1835 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!67942 () Bool)

(declare-fun e!44508 () Bool)

(declare-fun e!44507 () Bool)

(assert (=> b!67942 (= e!44508 e!44507)))

(assert (=> b!67942 (= c!9558 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!67943 () Bool)

(assert (=> b!67943 (= e!44509 e!44508)))

(declare-fun res!36622 () Bool)

(assert (=> b!67943 (=> (not res!36622) (not e!44508))))

(assert (=> b!67943 (= res!36622 (not e!44510))))

(declare-fun res!36621 () Bool)

(assert (=> b!67943 (=> (not res!36621) (not e!44510))))

(assert (=> b!67943 (= res!36621 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!67944 () Bool)

(assert (=> b!67944 (= e!44507 call!5716)))

(declare-fun b!67945 () Bool)

(assert (=> b!67945 (= e!44507 call!5716)))

(assert (= (and d!14539 (not res!36620)) b!67943))

(assert (= (and b!67943 res!36621) b!67941))

(assert (= (and b!67943 res!36622) b!67942))

(assert (= (and b!67942 c!9558) b!67945))

(assert (= (and b!67942 (not c!9558)) b!67944))

(assert (= (or b!67945 b!67944) bm!5713))

(assert (=> bm!5713 m!62949))

(declare-fun m!63727 () Bool)

(assert (=> bm!5713 m!63727))

(assert (=> b!67941 m!62949))

(assert (=> b!67941 m!62949))

(declare-fun m!63729 () Bool)

(assert (=> b!67941 m!63729))

(assert (=> b!67942 m!62949))

(assert (=> b!67942 m!62949))

(assert (=> b!67942 m!62981))

(assert (=> b!67943 m!62949))

(assert (=> b!67943 m!62949))

(assert (=> b!67943 m!62981))

(assert (=> bm!5600 d!14539))

(declare-fun d!14541 () Bool)

(assert (=> d!14541 (isDefined!83 (getValueByKey!130 (toList!717 lt!28707) (_1!1057 lt!28624)))))

(declare-fun lt!29649 () Unit!1838)

(assert (=> d!14541 (= lt!29649 (choose!377 (toList!717 lt!28707) (_1!1057 lt!28624)))))

(declare-fun e!44511 () Bool)

(assert (=> d!14541 e!44511))

(declare-fun res!36623 () Bool)

(assert (=> d!14541 (=> (not res!36623) (not e!44511))))

(assert (=> d!14541 (= res!36623 (isStrictlySorted!289 (toList!717 lt!28707)))))

(assert (=> d!14541 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28707) (_1!1057 lt!28624)) lt!29649)))

(declare-fun b!67946 () Bool)

(assert (=> b!67946 (= e!44511 (containsKey!134 (toList!717 lt!28707) (_1!1057 lt!28624)))))

(assert (= (and d!14541 res!36623) b!67946))

(assert (=> d!14541 m!61273))

(assert (=> d!14541 m!61273))

(assert (=> d!14541 m!61549))

(declare-fun m!63731 () Bool)

(assert (=> d!14541 m!63731))

(declare-fun m!63733 () Bool)

(assert (=> d!14541 m!63733))

(assert (=> b!67946 m!61545))

(assert (=> b!66843 d!14541))

(assert (=> b!66843 d!14311))

(assert (=> b!66843 d!13881))

(declare-fun d!14543 () Bool)

(declare-fun res!36624 () Bool)

(declare-fun e!44512 () Bool)

(assert (=> d!14543 (=> res!36624 e!44512)))

(assert (=> d!14543 (= res!36624 (and ((_ is Cons!1462) lt!28943) (= (_1!1057 (h!2046 lt!28943)) (_1!1057 lt!28617))))))

(assert (=> d!14543 (= (containsKey!134 lt!28943 (_1!1057 lt!28617)) e!44512)))

(declare-fun b!67947 () Bool)

(declare-fun e!44513 () Bool)

(assert (=> b!67947 (= e!44512 e!44513)))

(declare-fun res!36625 () Bool)

(assert (=> b!67947 (=> (not res!36625) (not e!44513))))

(assert (=> b!67947 (= res!36625 (and (or (not ((_ is Cons!1462) lt!28943)) (bvsle (_1!1057 (h!2046 lt!28943)) (_1!1057 lt!28617))) ((_ is Cons!1462) lt!28943) (bvslt (_1!1057 (h!2046 lt!28943)) (_1!1057 lt!28617))))))

(declare-fun b!67948 () Bool)

(assert (=> b!67948 (= e!44513 (containsKey!134 (t!4948 lt!28943) (_1!1057 lt!28617)))))

(assert (= (and d!14543 (not res!36624)) b!67947))

(assert (= (and b!67947 res!36625) b!67948))

(declare-fun m!63735 () Bool)

(assert (=> b!67948 m!63735))

(assert (=> b!66877 d!14543))

(declare-fun d!14545 () Bool)

(declare-fun c!9559 () Bool)

(assert (=> d!14545 (= c!9559 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28707))) (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28707)))) (_1!1057 lt!28624))))))

(declare-fun e!44514 () Option!136)

(assert (=> d!14545 (= (getValueByKey!130 (t!4948 (toList!717 lt!28707)) (_1!1057 lt!28624)) e!44514)))

(declare-fun b!67950 () Bool)

(declare-fun e!44515 () Option!136)

(assert (=> b!67950 (= e!44514 e!44515)))

(declare-fun c!9560 () Bool)

(assert (=> b!67950 (= c!9560 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28707))) (not (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28707)))) (_1!1057 lt!28624)))))))

(declare-fun b!67949 () Bool)

(assert (=> b!67949 (= e!44514 (Some!135 (_2!1057 (h!2046 (t!4948 (toList!717 lt!28707))))))))

(declare-fun b!67951 () Bool)

(assert (=> b!67951 (= e!44515 (getValueByKey!130 (t!4948 (t!4948 (toList!717 lt!28707))) (_1!1057 lt!28624)))))

(declare-fun b!67952 () Bool)

(assert (=> b!67952 (= e!44515 None!134)))

(assert (= (and d!14545 c!9559) b!67949))

(assert (= (and d!14545 (not c!9559)) b!67950))

(assert (= (and b!67950 c!9560) b!67951))

(assert (= (and b!67950 (not c!9560)) b!67952))

(declare-fun m!63737 () Bool)

(assert (=> b!67951 m!63737))

(assert (=> b!66919 d!14545))

(declare-fun d!14547 () Bool)

(declare-fun c!9561 () Bool)

(assert (=> d!14547 (= c!9561 (and ((_ is Cons!1462) (toList!717 lt!28960)) (= (_1!1057 (h!2046 (toList!717 lt!28960))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44516 () Option!136)

(assert (=> d!14547 (= (getValueByKey!130 (toList!717 lt!28960) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44516)))

(declare-fun b!67954 () Bool)

(declare-fun e!44517 () Option!136)

(assert (=> b!67954 (= e!44516 e!44517)))

(declare-fun c!9562 () Bool)

(assert (=> b!67954 (= c!9562 (and ((_ is Cons!1462) (toList!717 lt!28960)) (not (= (_1!1057 (h!2046 (toList!717 lt!28960))) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67953 () Bool)

(assert (=> b!67953 (= e!44516 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28960)))))))

(declare-fun b!67955 () Bool)

(assert (=> b!67955 (= e!44517 (getValueByKey!130 (t!4948 (toList!717 lt!28960)) (_1!1057 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67956 () Bool)

(assert (=> b!67956 (= e!44517 None!134)))

(assert (= (and d!14547 c!9561) b!67953))

(assert (= (and d!14547 (not c!9561)) b!67954))

(assert (= (and b!67954 c!9562) b!67955))

(assert (= (and b!67954 (not c!9562)) b!67956))

(declare-fun m!63739 () Bool)

(assert (=> b!67955 m!63739))

(assert (=> b!66906 d!14547))

(declare-fun d!14549 () Bool)

(assert (=> d!14549 (= (get!1120 (getValueByKey!130 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2482 (getValueByKey!130 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13825 d!14549))

(assert (=> d!13825 d!14305))

(declare-fun d!14551 () Bool)

(declare-fun lt!29650 () Bool)

(assert (=> d!14551 (= lt!29650 (select (content!72 (toList!717 lt!28976)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(declare-fun e!44518 () Bool)

(assert (=> d!14551 (= lt!29650 e!44518)))

(declare-fun res!36626 () Bool)

(assert (=> d!14551 (=> (not res!36626) (not e!44518))))

(assert (=> d!14551 (= res!36626 ((_ is Cons!1462) (toList!717 lt!28976)))))

(assert (=> d!14551 (= (contains!712 (toList!717 lt!28976) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) lt!29650)))

(declare-fun b!67957 () Bool)

(declare-fun e!44519 () Bool)

(assert (=> b!67957 (= e!44518 e!44519)))

(declare-fun res!36627 () Bool)

(assert (=> b!67957 (=> res!36627 e!44519)))

(assert (=> b!67957 (= res!36627 (= (h!2046 (toList!717 lt!28976)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(declare-fun b!67958 () Bool)

(assert (=> b!67958 (= e!44519 (contains!712 (t!4948 (toList!717 lt!28976)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(assert (= (and d!14551 res!36626) b!67957))

(assert (= (and b!67957 (not res!36627)) b!67958))

(declare-fun m!63741 () Bool)

(assert (=> d!14551 m!63741))

(declare-fun m!63743 () Bool)

(assert (=> d!14551 m!63743))

(declare-fun m!63745 () Bool)

(assert (=> b!67958 m!63745))

(assert (=> b!66934 d!14551))

(declare-fun d!14553 () Bool)

(assert (=> d!14553 (= (get!1120 (getValueByKey!130 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2482 (getValueByKey!130 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!13819 d!14553))

(assert (=> d!13819 d!14507))

(declare-fun d!14555 () Bool)

(declare-fun c!9563 () Bool)

(assert (=> d!14555 (= c!9563 (and ((_ is Cons!1462) (t!4948 lt!28708)) (= (_1!1057 (h!2046 (t!4948 lt!28708))) (_1!1057 lt!28624))))))

(declare-fun e!44520 () Option!136)

(assert (=> d!14555 (= (getValueByKey!130 (t!4948 lt!28708) (_1!1057 lt!28624)) e!44520)))

(declare-fun b!67960 () Bool)

(declare-fun e!44521 () Option!136)

(assert (=> b!67960 (= e!44520 e!44521)))

(declare-fun c!9564 () Bool)

(assert (=> b!67960 (= c!9564 (and ((_ is Cons!1462) (t!4948 lt!28708)) (not (= (_1!1057 (h!2046 (t!4948 lt!28708))) (_1!1057 lt!28624)))))))

(declare-fun b!67959 () Bool)

(assert (=> b!67959 (= e!44520 (Some!135 (_2!1057 (h!2046 (t!4948 lt!28708)))))))

(declare-fun b!67961 () Bool)

(assert (=> b!67961 (= e!44521 (getValueByKey!130 (t!4948 (t!4948 lt!28708)) (_1!1057 lt!28624)))))

(declare-fun b!67962 () Bool)

(assert (=> b!67962 (= e!44521 None!134)))

(assert (= (and d!14555 c!9563) b!67959))

(assert (= (and d!14555 (not c!9563)) b!67960))

(assert (= (and b!67960 c!9564) b!67961))

(assert (= (and b!67960 (not c!9564)) b!67962))

(declare-fun m!63747 () Bool)

(assert (=> b!67961 m!63747))

(assert (=> b!66848 d!14555))

(declare-fun d!14557 () Bool)

(assert (=> d!14557 (= (apply!72 lt!29235 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1120 (getValueByKey!130 (toList!717 lt!29235) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2940 () Bool)

(assert (= bs!2940 d!14557))

(assert (=> bs!2940 m!63269))

(assert (=> bs!2940 m!63269))

(declare-fun m!63749 () Bool)

(assert (=> bs!2940 m!63749))

(assert (=> b!67181 d!14557))

(declare-fun d!14559 () Bool)

(declare-fun lt!29651 () Bool)

(assert (=> d!14559 (= lt!29651 (select (content!72 lt!28672) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun e!44522 () Bool)

(assert (=> d!14559 (= lt!29651 e!44522)))

(declare-fun res!36628 () Bool)

(assert (=> d!14559 (=> (not res!36628) (not e!44522))))

(assert (=> d!14559 (= res!36628 ((_ is Cons!1462) lt!28672))))

(assert (=> d!14559 (= (contains!712 lt!28672 (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))) lt!29651)))

(declare-fun b!67963 () Bool)

(declare-fun e!44523 () Bool)

(assert (=> b!67963 (= e!44522 e!44523)))

(declare-fun res!36629 () Bool)

(assert (=> b!67963 (=> res!36629 e!44523)))

(assert (=> b!67963 (= res!36629 (= (h!2046 lt!28672) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(declare-fun b!67964 () Bool)

(assert (=> b!67964 (= e!44523 (contains!712 (t!4948 lt!28672) (tuple2!2093 (_1!1057 lt!28617) (_2!1057 lt!28617))))))

(assert (= (and d!14559 res!36628) b!67963))

(assert (= (and b!67963 (not res!36629)) b!67964))

(declare-fun m!63751 () Bool)

(assert (=> d!14559 m!63751))

(declare-fun m!63753 () Bool)

(assert (=> d!14559 m!63753))

(declare-fun m!63755 () Bool)

(assert (=> b!67964 m!63755))

(assert (=> b!66870 d!14559))

(declare-fun d!14561 () Bool)

(declare-fun res!36630 () Bool)

(declare-fun e!44524 () Bool)

(assert (=> d!14561 (=> res!36630 e!44524)))

(assert (=> d!14561 (= res!36630 (and ((_ is Cons!1462) (toList!717 lt!28877)) (= (_1!1057 (h!2046 (toList!717 lt!28877))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14561 (= (containsKey!134 (toList!717 lt!28877) #b0000000000000000000000000000000000000000000000000000000000000000) e!44524)))

(declare-fun b!67965 () Bool)

(declare-fun e!44525 () Bool)

(assert (=> b!67965 (= e!44524 e!44525)))

(declare-fun res!36631 () Bool)

(assert (=> b!67965 (=> (not res!36631) (not e!44525))))

(assert (=> b!67965 (= res!36631 (and (or (not ((_ is Cons!1462) (toList!717 lt!28877))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28877))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1462) (toList!717 lt!28877)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28877))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67966 () Bool)

(assert (=> b!67966 (= e!44525 (containsKey!134 (t!4948 (toList!717 lt!28877)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14561 (not res!36630)) b!67965))

(assert (= (and b!67965 res!36631) b!67966))

(declare-fun m!63757 () Bool)

(assert (=> b!67966 m!63757))

(assert (=> d!13813 d!14561))

(declare-fun d!14563 () Bool)

(declare-fun res!36632 () Bool)

(declare-fun e!44526 () Bool)

(assert (=> d!14563 (=> res!36632 e!44526)))

(assert (=> d!14563 (= res!36632 (and ((_ is Cons!1462) (toList!717 lt!28707)) (= (_1!1057 (h!2046 (toList!717 lt!28707))) (_1!1057 lt!28624))))))

(assert (=> d!14563 (= (containsKey!134 (toList!717 lt!28707) (_1!1057 lt!28624)) e!44526)))

(declare-fun b!67967 () Bool)

(declare-fun e!44527 () Bool)

(assert (=> b!67967 (= e!44526 e!44527)))

(declare-fun res!36633 () Bool)

(assert (=> b!67967 (=> (not res!36633) (not e!44527))))

(assert (=> b!67967 (= res!36633 (and (or (not ((_ is Cons!1462) (toList!717 lt!28707))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28707))) (_1!1057 lt!28624))) ((_ is Cons!1462) (toList!717 lt!28707)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28707))) (_1!1057 lt!28624))))))

(declare-fun b!67968 () Bool)

(assert (=> b!67968 (= e!44527 (containsKey!134 (t!4948 (toList!717 lt!28707)) (_1!1057 lt!28624)))))

(assert (= (and d!14563 (not res!36632)) b!67967))

(assert (= (and b!67967 res!36633) b!67968))

(declare-fun m!63759 () Bool)

(assert (=> b!67968 m!63759))

(assert (=> d!13833 d!14563))

(declare-fun d!14565 () Bool)

(declare-fun lt!29652 () Bool)

(assert (=> d!14565 (= lt!29652 (select (content!72 (toList!717 lt!28972)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(declare-fun e!44528 () Bool)

(assert (=> d!14565 (= lt!29652 e!44528)))

(declare-fun res!36634 () Bool)

(assert (=> d!14565 (=> (not res!36634) (not e!44528))))

(assert (=> d!14565 (= res!36634 ((_ is Cons!1462) (toList!717 lt!28972)))))

(assert (=> d!14565 (= (contains!712 (toList!717 lt!28972) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) lt!29652)))

(declare-fun b!67969 () Bool)

(declare-fun e!44529 () Bool)

(assert (=> b!67969 (= e!44528 e!44529)))

(declare-fun res!36635 () Bool)

(assert (=> b!67969 (=> res!36635 e!44529)))

(assert (=> b!67969 (= res!36635 (= (h!2046 (toList!717 lt!28972)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(declare-fun b!67970 () Bool)

(assert (=> b!67970 (= e!44529 (contains!712 (t!4948 (toList!717 lt!28972)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(assert (= (and d!14565 res!36634) b!67969))

(assert (= (and b!67969 (not res!36635)) b!67970))

(declare-fun m!63761 () Bool)

(assert (=> d!14565 m!63761))

(declare-fun m!63763 () Bool)

(assert (=> d!14565 m!63763))

(declare-fun m!63765 () Bool)

(assert (=> b!67970 m!63765))

(assert (=> b!66913 d!14565))

(declare-fun d!14567 () Bool)

(declare-fun c!9565 () Bool)

(assert (=> d!14567 (= c!9565 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28671))) (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28671)))) (_1!1057 lt!28617))))))

(declare-fun e!44530 () Option!136)

(assert (=> d!14567 (= (getValueByKey!130 (t!4948 (toList!717 lt!28671)) (_1!1057 lt!28617)) e!44530)))

(declare-fun b!67972 () Bool)

(declare-fun e!44531 () Option!136)

(assert (=> b!67972 (= e!44530 e!44531)))

(declare-fun c!9566 () Bool)

(assert (=> b!67972 (= c!9566 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28671))) (not (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28671)))) (_1!1057 lt!28617)))))))

(declare-fun b!67971 () Bool)

(assert (=> b!67971 (= e!44530 (Some!135 (_2!1057 (h!2046 (t!4948 (toList!717 lt!28671))))))))

(declare-fun b!67973 () Bool)

(assert (=> b!67973 (= e!44531 (getValueByKey!130 (t!4948 (t!4948 (toList!717 lt!28671))) (_1!1057 lt!28617)))))

(declare-fun b!67974 () Bool)

(assert (=> b!67974 (= e!44531 None!134)))

(assert (= (and d!14567 c!9565) b!67971))

(assert (= (and d!14567 (not c!9565)) b!67972))

(assert (= (and b!67972 c!9566) b!67973))

(assert (= (and b!67972 (not c!9566)) b!67974))

(declare-fun m!63767 () Bool)

(assert (=> b!67973 m!63767))

(assert (=> b!67139 d!14567))

(declare-fun d!14569 () Bool)

(declare-fun res!36636 () Bool)

(declare-fun e!44532 () Bool)

(assert (=> d!14569 (=> res!36636 e!44532)))

(assert (=> d!14569 (= res!36636 (and ((_ is Cons!1462) lt!29200) (= (_1!1057 (h!2046 lt!29200)) (_1!1057 lt!28624))))))

(assert (=> d!14569 (= (containsKey!134 lt!29200 (_1!1057 lt!28624)) e!44532)))

(declare-fun b!67975 () Bool)

(declare-fun e!44533 () Bool)

(assert (=> b!67975 (= e!44532 e!44533)))

(declare-fun res!36637 () Bool)

(assert (=> b!67975 (=> (not res!36637) (not e!44533))))

(assert (=> b!67975 (= res!36637 (and (or (not ((_ is Cons!1462) lt!29200)) (bvsle (_1!1057 (h!2046 lt!29200)) (_1!1057 lt!28624))) ((_ is Cons!1462) lt!29200) (bvslt (_1!1057 (h!2046 lt!29200)) (_1!1057 lt!28624))))))

(declare-fun b!67976 () Bool)

(assert (=> b!67976 (= e!44533 (containsKey!134 (t!4948 lt!29200) (_1!1057 lt!28624)))))

(assert (= (and d!14569 (not res!36636)) b!67975))

(assert (= (and b!67975 res!36637) b!67976))

(declare-fun m!63769 () Bool)

(assert (=> b!67976 m!63769))

(assert (=> b!67163 d!14569))

(declare-fun d!14571 () Bool)

(declare-fun lt!29653 () Bool)

(assert (=> d!14571 (= lt!29653 (select (content!72 (t!4948 (toList!717 lt!28703))) lt!28617))))

(declare-fun e!44534 () Bool)

(assert (=> d!14571 (= lt!29653 e!44534)))

(declare-fun res!36638 () Bool)

(assert (=> d!14571 (=> (not res!36638) (not e!44534))))

(assert (=> d!14571 (= res!36638 ((_ is Cons!1462) (t!4948 (toList!717 lt!28703))))))

(assert (=> d!14571 (= (contains!712 (t!4948 (toList!717 lt!28703)) lt!28617) lt!29653)))

(declare-fun b!67977 () Bool)

(declare-fun e!44535 () Bool)

(assert (=> b!67977 (= e!44534 e!44535)))

(declare-fun res!36639 () Bool)

(assert (=> b!67977 (=> res!36639 e!44535)))

(assert (=> b!67977 (= res!36639 (= (h!2046 (t!4948 (toList!717 lt!28703))) lt!28617))))

(declare-fun b!67978 () Bool)

(assert (=> b!67978 (= e!44535 (contains!712 (t!4948 (t!4948 (toList!717 lt!28703))) lt!28617))))

(assert (= (and d!14571 res!36638) b!67977))

(assert (= (and b!67977 (not res!36639)) b!67978))

(assert (=> d!14571 m!63511))

(declare-fun m!63771 () Bool)

(assert (=> d!14571 m!63771))

(declare-fun m!63773 () Bool)

(assert (=> b!67978 m!63773))

(assert (=> b!67201 d!14571))

(declare-fun d!14573 () Bool)

(assert (=> d!14573 (= (isDefined!83 (getValueByKey!130 (toList!717 lt!28703) (_1!1057 lt!28617))) (not (isEmpty!309 (getValueByKey!130 (toList!717 lt!28703) (_1!1057 lt!28617)))))))

(declare-fun bs!2941 () Bool)

(assert (= bs!2941 d!14573))

(assert (=> bs!2941 m!61261))

(declare-fun m!63775 () Bool)

(assert (=> bs!2941 m!63775))

(assert (=> b!66733 d!14573))

(assert (=> b!66733 d!13901))

(declare-fun d!14575 () Bool)

(declare-fun lt!29654 () Bool)

(assert (=> d!14575 (= lt!29654 (select (content!72 (toList!717 lt!29030)) (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44536 () Bool)

(assert (=> d!14575 (= lt!29654 e!44536)))

(declare-fun res!36640 () Bool)

(assert (=> d!14575 (=> (not res!36640) (not e!44536))))

(assert (=> d!14575 (= res!36640 ((_ is Cons!1462) (toList!717 lt!29030)))))

(assert (=> d!14575 (= (contains!712 (toList!717 lt!29030) (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29654)))

(declare-fun b!67979 () Bool)

(declare-fun e!44537 () Bool)

(assert (=> b!67979 (= e!44536 e!44537)))

(declare-fun res!36641 () Bool)

(assert (=> b!67979 (=> res!36641 e!44537)))

(assert (=> b!67979 (= res!36641 (= (h!2046 (toList!717 lt!29030)) (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67980 () Bool)

(assert (=> b!67980 (= e!44537 (contains!712 (t!4948 (toList!717 lt!29030)) (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14575 res!36640) b!67979))

(assert (= (and b!67979 (not res!36641)) b!67980))

(declare-fun m!63777 () Bool)

(assert (=> d!14575 m!63777))

(declare-fun m!63779 () Bool)

(assert (=> d!14575 m!63779))

(declare-fun m!63781 () Bool)

(assert (=> b!67980 m!63781))

(assert (=> b!67002 d!14575))

(assert (=> d!13831 d!13947))

(declare-fun b!67997 () Bool)

(declare-fun e!44548 () Bool)

(declare-fun call!5721 () Bool)

(assert (=> b!67997 (= e!44548 (not call!5721))))

(declare-fun b!67998 () Bool)

(declare-fun e!44549 () Bool)

(declare-fun e!44546 () Bool)

(assert (=> b!67998 (= e!44549 e!44546)))

(declare-fun c!9571 () Bool)

(declare-fun lt!29657 () SeekEntryResult!233)

(assert (=> b!67998 (= c!9571 ((_ is MissingVacant!233) lt!29657))))

(declare-fun b!67999 () Bool)

(assert (=> b!67999 (= e!44546 ((_ is Undefined!233) lt!29657))))

(declare-fun b!68000 () Bool)

(declare-fun res!36650 () Bool)

(assert (=> b!68000 (= res!36650 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3060 lt!29657)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44547 () Bool)

(assert (=> b!68000 (=> (not res!36650) (not e!44547))))

(declare-fun b!68001 () Bool)

(assert (=> b!68001 (= e!44549 e!44547)))

(declare-fun res!36653 () Bool)

(declare-fun call!5722 () Bool)

(assert (=> b!68001 (= res!36653 call!5722)))

(assert (=> b!68001 (=> (not res!36653) (not e!44547))))

(declare-fun b!68002 () Bool)

(declare-fun res!36652 () Bool)

(assert (=> b!68002 (=> (not res!36652) (not e!44548))))

(assert (=> b!68002 (= res!36652 (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3063 lt!29657)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68003 () Bool)

(assert (=> b!68003 (= e!44547 (not call!5721))))

(declare-fun bm!5718 () Bool)

(declare-fun c!9572 () Bool)

(assert (=> bm!5718 (= call!5722 (inRange!0 (ite c!9572 (index!3060 lt!29657) (index!3063 lt!29657)) (mask!6082 newMap!16)))))

(declare-fun bm!5719 () Bool)

(assert (=> bm!5719 (= call!5721 (arrayContainsKey!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!68004 () Bool)

(declare-fun res!36651 () Bool)

(assert (=> b!68004 (=> (not res!36651) (not e!44548))))

(assert (=> b!68004 (= res!36651 call!5722)))

(assert (=> b!68004 (= e!44546 e!44548)))

(declare-fun d!14577 () Bool)

(assert (=> d!14577 e!44549))

(assert (=> d!14577 (= c!9572 ((_ is MissingZero!233) lt!29657))))

(assert (=> d!14577 (= lt!29657 (seekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(assert (=> d!14577 true))

(declare-fun _$34!788 () Unit!1838)

(assert (=> d!14577 (= (choose!368 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2147 newMap!16)) _$34!788)))

(assert (= (and d!14577 c!9572) b!68001))

(assert (= (and d!14577 (not c!9572)) b!67998))

(assert (= (and b!68001 res!36653) b!68000))

(assert (= (and b!68000 res!36650) b!68003))

(assert (= (and b!67998 c!9571) b!68004))

(assert (= (and b!67998 (not c!9571)) b!67999))

(assert (= (and b!68004 res!36651) b!68002))

(assert (= (and b!68002 res!36652) b!67997))

(assert (= (or b!68001 b!68004) bm!5718))

(assert (= (or b!68003 b!67997) bm!5719))

(declare-fun m!63783 () Bool)

(assert (=> b!68000 m!63783))

(declare-fun m!63785 () Bool)

(assert (=> bm!5718 m!63785))

(assert (=> d!14577 m!61065))

(assert (=> d!14577 m!61305))

(assert (=> bm!5719 m!61065))

(assert (=> bm!5719 m!61309))

(declare-fun m!63787 () Bool)

(assert (=> b!68002 m!63787))

(assert (=> d!13831 d!14577))

(assert (=> d!13831 d!14025))

(declare-fun d!14579 () Bool)

(assert (=> d!14579 (= (apply!72 lt!29235 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1120 (getValueByKey!130 (toList!717 lt!29235) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2942 () Bool)

(assert (= bs!2942 d!14579))

(declare-fun m!63789 () Bool)

(assert (=> bs!2942 m!63789))

(assert (=> bs!2942 m!63789))

(declare-fun m!63791 () Bool)

(assert (=> bs!2942 m!63791))

(assert (=> b!67199 d!14579))

(declare-fun d!14581 () Bool)

(declare-fun e!44551 () Bool)

(assert (=> d!14581 e!44551))

(declare-fun res!36654 () Bool)

(assert (=> d!14581 (=> res!36654 e!44551)))

(declare-fun lt!29660 () Bool)

(assert (=> d!14581 (= res!36654 (not lt!29660))))

(declare-fun lt!29658 () Bool)

(assert (=> d!14581 (= lt!29660 lt!29658)))

(declare-fun lt!29661 () Unit!1838)

(declare-fun e!44550 () Unit!1838)

(assert (=> d!14581 (= lt!29661 e!44550)))

(declare-fun c!9573 () Bool)

(assert (=> d!14581 (= c!9573 lt!29658)))

(assert (=> d!14581 (= lt!29658 (containsKey!134 (toList!717 lt!28976) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!14581 (= (contains!710 lt!28976 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29660)))

(declare-fun b!68005 () Bool)

(declare-fun lt!29659 () Unit!1838)

(assert (=> b!68005 (= e!44550 lt!29659)))

(assert (=> b!68005 (= lt!29659 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28976) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> b!68005 (isDefined!83 (getValueByKey!130 (toList!717 lt!28976) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68006 () Bool)

(declare-fun Unit!1900 () Unit!1838)

(assert (=> b!68006 (= e!44550 Unit!1900)))

(declare-fun b!68007 () Bool)

(assert (=> b!68007 (= e!44551 (isDefined!83 (getValueByKey!130 (toList!717 lt!28976) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (= (and d!14581 c!9573) b!68005))

(assert (= (and d!14581 (not c!9573)) b!68006))

(assert (= (and d!14581 (not res!36654)) b!68007))

(declare-fun m!63793 () Bool)

(assert (=> d!14581 m!63793))

(declare-fun m!63795 () Bool)

(assert (=> b!68005 m!63795))

(assert (=> b!68005 m!61723))

(assert (=> b!68005 m!61723))

(declare-fun m!63797 () Bool)

(assert (=> b!68005 m!63797))

(assert (=> b!68007 m!61723))

(assert (=> b!68007 m!61723))

(assert (=> b!68007 m!63797))

(assert (=> d!13891 d!14581))

(declare-fun d!14583 () Bool)

(declare-fun c!9574 () Bool)

(assert (=> d!14583 (= c!9574 (and ((_ is Cons!1462) lt!28977) (= (_1!1057 (h!2046 lt!28977)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun e!44552 () Option!136)

(assert (=> d!14583 (= (getValueByKey!130 lt!28977 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) e!44552)))

(declare-fun b!68009 () Bool)

(declare-fun e!44553 () Option!136)

(assert (=> b!68009 (= e!44552 e!44553)))

(declare-fun c!9575 () Bool)

(assert (=> b!68009 (= c!9575 (and ((_ is Cons!1462) lt!28977) (not (= (_1!1057 (h!2046 lt!28977)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun b!68008 () Bool)

(assert (=> b!68008 (= e!44552 (Some!135 (_2!1057 (h!2046 lt!28977))))))

(declare-fun b!68010 () Bool)

(assert (=> b!68010 (= e!44553 (getValueByKey!130 (t!4948 lt!28977) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68011 () Bool)

(assert (=> b!68011 (= e!44553 None!134)))

(assert (= (and d!14583 c!9574) b!68008))

(assert (= (and d!14583 (not c!9574)) b!68009))

(assert (= (and b!68009 c!9575) b!68010))

(assert (= (and b!68009 (not c!9575)) b!68011))

(declare-fun m!63799 () Bool)

(assert (=> b!68010 m!63799))

(assert (=> d!13891 d!14583))

(declare-fun d!14585 () Bool)

(assert (=> d!14585 (= (getValueByKey!130 lt!28977 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun lt!29662 () Unit!1838)

(assert (=> d!14585 (= lt!29662 (choose!367 lt!28977 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun e!44554 () Bool)

(assert (=> d!14585 e!44554))

(declare-fun res!36655 () Bool)

(assert (=> d!14585 (=> (not res!36655) (not e!44554))))

(assert (=> d!14585 (= res!36655 (isStrictlySorted!289 lt!28977))))

(assert (=> d!14585 (= (lemmaContainsTupThenGetReturnValue!47 lt!28977 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29662)))

(declare-fun b!68012 () Bool)

(declare-fun res!36656 () Bool)

(assert (=> b!68012 (=> (not res!36656) (not e!44554))))

(assert (=> b!68012 (= res!36656 (containsKey!134 lt!28977 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68013 () Bool)

(assert (=> b!68013 (= e!44554 (contains!712 lt!28977 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (= (and d!14585 res!36655) b!68012))

(assert (= (and b!68012 res!36656) b!68013))

(assert (=> d!14585 m!61717))

(declare-fun m!63801 () Bool)

(assert (=> d!14585 m!63801))

(declare-fun m!63803 () Bool)

(assert (=> d!14585 m!63803))

(declare-fun m!63805 () Bool)

(assert (=> b!68012 m!63805))

(declare-fun m!63807 () Bool)

(assert (=> b!68013 m!63807))

(assert (=> d!13891 d!14585))

(declare-fun b!68014 () Bool)

(declare-fun e!44557 () List!1466)

(declare-fun call!5723 () List!1466)

(assert (=> b!68014 (= e!44557 call!5723)))

(declare-fun bm!5720 () Bool)

(declare-fun call!5724 () List!1466)

(declare-fun call!5725 () List!1466)

(assert (=> bm!5720 (= call!5724 call!5725)))

(declare-fun e!44559 () Bool)

(declare-fun lt!29663 () List!1466)

(declare-fun b!68015 () Bool)

(assert (=> b!68015 (= e!44559 (contains!712 lt!29663 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!68016 () Bool)

(assert (=> b!68016 (= e!44557 call!5723)))

(declare-fun b!68017 () Bool)

(declare-fun e!44555 () List!1466)

(assert (=> b!68017 (= e!44555 (insertStrictlySorted!50 (t!4948 (toList!717 call!5539)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68018 () Bool)

(declare-fun e!44558 () List!1466)

(assert (=> b!68018 (= e!44558 call!5725)))

(declare-fun b!68019 () Bool)

(declare-fun c!9576 () Bool)

(declare-fun c!9578 () Bool)

(assert (=> b!68019 (= e!44555 (ite c!9576 (t!4948 (toList!717 call!5539)) (ite c!9578 (Cons!1462 (h!2046 (toList!717 call!5539)) (t!4948 (toList!717 call!5539))) Nil!1463)))))

(declare-fun d!14587 () Bool)

(assert (=> d!14587 e!44559))

(declare-fun res!36658 () Bool)

(assert (=> d!14587 (=> (not res!36658) (not e!44559))))

(assert (=> d!14587 (= res!36658 (isStrictlySorted!289 lt!29663))))

(assert (=> d!14587 (= lt!29663 e!44558)))

(declare-fun c!9579 () Bool)

(assert (=> d!14587 (= c!9579 (and ((_ is Cons!1462) (toList!717 call!5539)) (bvslt (_1!1057 (h!2046 (toList!717 call!5539))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> d!14587 (isStrictlySorted!289 (toList!717 call!5539))))

(assert (=> d!14587 (= (insertStrictlySorted!50 (toList!717 call!5539) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29663)))

(declare-fun bm!5721 () Bool)

(assert (=> bm!5721 (= call!5723 call!5724)))

(declare-fun b!68020 () Bool)

(declare-fun res!36657 () Bool)

(assert (=> b!68020 (=> (not res!36657) (not e!44559))))

(assert (=> b!68020 (= res!36657 (containsKey!134 lt!29663 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68021 () Bool)

(declare-fun e!44556 () List!1466)

(assert (=> b!68021 (= e!44556 call!5724)))

(declare-fun b!68022 () Bool)

(assert (=> b!68022 (= c!9578 (and ((_ is Cons!1462) (toList!717 call!5539)) (bvsgt (_1!1057 (h!2046 (toList!717 call!5539))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> b!68022 (= e!44556 e!44557)))

(declare-fun b!68023 () Bool)

(assert (=> b!68023 (= e!44558 e!44556)))

(assert (=> b!68023 (= c!9576 (and ((_ is Cons!1462) (toList!717 call!5539)) (= (_1!1057 (h!2046 (toList!717 call!5539))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun bm!5722 () Bool)

(assert (=> bm!5722 (= call!5725 ($colon$colon!63 e!44555 (ite c!9579 (h!2046 (toList!717 call!5539)) (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun c!9577 () Bool)

(assert (=> bm!5722 (= c!9577 c!9579)))

(assert (= (and d!14587 c!9579) b!68018))

(assert (= (and d!14587 (not c!9579)) b!68023))

(assert (= (and b!68023 c!9576) b!68021))

(assert (= (and b!68023 (not c!9576)) b!68022))

(assert (= (and b!68022 c!9578) b!68016))

(assert (= (and b!68022 (not c!9578)) b!68014))

(assert (= (or b!68016 b!68014) bm!5721))

(assert (= (or b!68021 bm!5721) bm!5720))

(assert (= (or b!68018 bm!5720) bm!5722))

(assert (= (and bm!5722 c!9577) b!68017))

(assert (= (and bm!5722 (not c!9577)) b!68019))

(assert (= (and d!14587 res!36658) b!68020))

(assert (= (and b!68020 res!36657) b!68015))

(declare-fun m!63809 () Bool)

(assert (=> b!68015 m!63809))

(declare-fun m!63811 () Bool)

(assert (=> d!14587 m!63811))

(declare-fun m!63813 () Bool)

(assert (=> d!14587 m!63813))

(declare-fun m!63815 () Bool)

(assert (=> bm!5722 m!63815))

(declare-fun m!63817 () Bool)

(assert (=> b!68020 m!63817))

(declare-fun m!63819 () Bool)

(assert (=> b!68017 m!63819))

(assert (=> d!13891 d!14587))

(declare-fun d!14589 () Bool)

(declare-fun e!44561 () Bool)

(assert (=> d!14589 e!44561))

(declare-fun res!36659 () Bool)

(assert (=> d!14589 (=> res!36659 e!44561)))

(declare-fun lt!29666 () Bool)

(assert (=> d!14589 (= res!36659 (not lt!29666))))

(declare-fun lt!29664 () Bool)

(assert (=> d!14589 (= lt!29666 lt!29664)))

(declare-fun lt!29667 () Unit!1838)

(declare-fun e!44560 () Unit!1838)

(assert (=> d!14589 (= lt!29667 e!44560)))

(declare-fun c!9580 () Bool)

(assert (=> d!14589 (= c!9580 lt!29664)))

(assert (=> d!14589 (= lt!29664 (containsKey!134 (toList!717 lt!28955) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14589 (= (contains!710 lt!28955 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29666)))

(declare-fun b!68024 () Bool)

(declare-fun lt!29665 () Unit!1838)

(assert (=> b!68024 (= e!44560 lt!29665)))

(assert (=> b!68024 (= lt!29665 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28955) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68024 (isDefined!83 (getValueByKey!130 (toList!717 lt!28955) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68025 () Bool)

(declare-fun Unit!1901 () Unit!1838)

(assert (=> b!68025 (= e!44560 Unit!1901)))

(declare-fun b!68026 () Bool)

(assert (=> b!68026 (= e!44561 (isDefined!83 (getValueByKey!130 (toList!717 lt!28955) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14589 c!9580) b!68024))

(assert (= (and d!14589 (not c!9580)) b!68025))

(assert (= (and d!14589 (not res!36659)) b!68026))

(declare-fun m!63821 () Bool)

(assert (=> d!14589 m!63821))

(declare-fun m!63823 () Bool)

(assert (=> b!68024 m!63823))

(declare-fun m!63825 () Bool)

(assert (=> b!68024 m!63825))

(assert (=> b!68024 m!63825))

(declare-fun m!63827 () Bool)

(assert (=> b!68024 m!63827))

(assert (=> b!68026 m!63825))

(assert (=> b!68026 m!63825))

(assert (=> b!68026 m!63827))

(assert (=> b!66899 d!14589))

(declare-fun d!14591 () Bool)

(assert (=> d!14591 (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29668 () Unit!1838)

(assert (=> d!14591 (= lt!29668 (choose!377 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44562 () Bool)

(assert (=> d!14591 e!44562))

(declare-fun res!36660 () Bool)

(assert (=> d!14591 (=> (not res!36660) (not e!44562))))

(assert (=> d!14591 (= res!36660 (isStrictlySorted!289 (toList!717 lt!28698)))))

(assert (=> d!14591 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000) lt!29668)))

(declare-fun b!68027 () Bool)

(assert (=> b!68027 (= e!44562 (containsKey!134 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14591 res!36660) b!68027))

(assert (=> d!14591 m!62135))

(assert (=> d!14591 m!62135))

(assert (=> d!14591 m!62137))

(declare-fun m!63829 () Bool)

(assert (=> d!14591 m!63829))

(assert (=> d!14591 m!62319))

(assert (=> b!68027 m!62131))

(assert (=> b!67167 d!14591))

(assert (=> b!67167 d!14481))

(assert (=> b!67167 d!14483))

(declare-fun d!14593 () Bool)

(assert (=> d!14593 (= ($colon$colon!63 e!43847 (ite c!9259 (h!2046 (toList!717 (+!89 lt!28620 lt!28617))) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624)))) (Cons!1462 (ite c!9259 (h!2046 (toList!717 (+!89 lt!28620 lt!28617))) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))) e!43847))))

(assert (=> bm!5596 d!14593))

(declare-fun d!14595 () Bool)

(declare-fun c!9581 () Bool)

(assert (=> d!14595 (= c!9581 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28675))) (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28675)))) (_1!1057 lt!28624))))))

(declare-fun e!44563 () Option!136)

(assert (=> d!14595 (= (getValueByKey!130 (t!4948 (toList!717 lt!28675)) (_1!1057 lt!28624)) e!44563)))

(declare-fun b!68029 () Bool)

(declare-fun e!44564 () Option!136)

(assert (=> b!68029 (= e!44563 e!44564)))

(declare-fun c!9582 () Bool)

(assert (=> b!68029 (= c!9582 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28675))) (not (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28675)))) (_1!1057 lt!28624)))))))

(declare-fun b!68028 () Bool)

(assert (=> b!68028 (= e!44563 (Some!135 (_2!1057 (h!2046 (t!4948 (toList!717 lt!28675))))))))

(declare-fun b!68030 () Bool)

(assert (=> b!68030 (= e!44564 (getValueByKey!130 (t!4948 (t!4948 (toList!717 lt!28675))) (_1!1057 lt!28624)))))

(declare-fun b!68031 () Bool)

(assert (=> b!68031 (= e!44564 None!134)))

(assert (= (and d!14595 c!9581) b!68028))

(assert (= (and d!14595 (not c!9581)) b!68029))

(assert (= (and b!68029 c!9582) b!68030))

(assert (= (and b!68029 (not c!9582)) b!68031))

(declare-fun m!63831 () Bool)

(assert (=> b!68030 m!63831))

(assert (=> b!67146 d!14595))

(assert (=> b!67191 d!14069))

(declare-fun d!14597 () Bool)

(declare-fun lt!29669 () Bool)

(assert (=> d!14597 (= lt!29669 (select (content!72 lt!28676) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun e!44565 () Bool)

(assert (=> d!14597 (= lt!29669 e!44565)))

(declare-fun res!36661 () Bool)

(assert (=> d!14597 (=> (not res!36661) (not e!44565))))

(assert (=> d!14597 (= res!36661 ((_ is Cons!1462) lt!28676))))

(assert (=> d!14597 (= (contains!712 lt!28676 (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))) lt!29669)))

(declare-fun b!68032 () Bool)

(declare-fun e!44566 () Bool)

(assert (=> b!68032 (= e!44565 e!44566)))

(declare-fun res!36662 () Bool)

(assert (=> b!68032 (=> res!36662 e!44566)))

(assert (=> b!68032 (= res!36662 (= (h!2046 lt!28676) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun b!68033 () Bool)

(assert (=> b!68033 (= e!44566 (contains!712 (t!4948 lt!28676) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(assert (= (and d!14597 res!36661) b!68032))

(assert (= (and b!68032 (not res!36662)) b!68033))

(declare-fun m!63833 () Bool)

(assert (=> d!14597 m!63833))

(declare-fun m!63835 () Bool)

(assert (=> d!14597 m!63835))

(declare-fun m!63837 () Bool)

(assert (=> b!68033 m!63837))

(assert (=> b!67156 d!14597))

(declare-fun c!9583 () Bool)

(declare-fun d!14599 () Bool)

(assert (=> d!14599 (= c!9583 (and ((_ is Cons!1462) (toList!717 lt!28976)) (= (_1!1057 (h!2046 (toList!717 lt!28976))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun e!44567 () Option!136)

(assert (=> d!14599 (= (getValueByKey!130 (toList!717 lt!28976) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) e!44567)))

(declare-fun b!68035 () Bool)

(declare-fun e!44568 () Option!136)

(assert (=> b!68035 (= e!44567 e!44568)))

(declare-fun c!9584 () Bool)

(assert (=> b!68035 (= c!9584 (and ((_ is Cons!1462) (toList!717 lt!28976)) (not (= (_1!1057 (h!2046 (toList!717 lt!28976))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun b!68034 () Bool)

(assert (=> b!68034 (= e!44567 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28976)))))))

(declare-fun b!68036 () Bool)

(assert (=> b!68036 (= e!44568 (getValueByKey!130 (t!4948 (toList!717 lt!28976)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68037 () Bool)

(assert (=> b!68037 (= e!44568 None!134)))

(assert (= (and d!14599 c!9583) b!68034))

(assert (= (and d!14599 (not c!9583)) b!68035))

(assert (= (and b!68035 c!9584) b!68036))

(assert (= (and b!68035 (not c!9584)) b!68037))

(declare-fun m!63839 () Bool)

(assert (=> b!68036 m!63839))

(assert (=> b!66933 d!14599))

(declare-fun b!68038 () Bool)

(declare-fun e!44571 () List!1466)

(declare-fun call!5726 () List!1466)

(assert (=> b!68038 (= e!44571 call!5726)))

(declare-fun bm!5723 () Bool)

(declare-fun call!5727 () List!1466)

(declare-fun call!5728 () List!1466)

(assert (=> bm!5723 (= call!5727 call!5728)))

(declare-fun b!68039 () Bool)

(declare-fun e!44573 () Bool)

(declare-fun lt!29670 () List!1466)

(assert (=> b!68039 (= e!44573 (contains!712 lt!29670 (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun b!68040 () Bool)

(assert (=> b!68040 (= e!44571 call!5726)))

(declare-fun e!44569 () List!1466)

(declare-fun b!68041 () Bool)

(assert (=> b!68041 (= e!44569 (insertStrictlySorted!50 (t!4948 (t!4948 (toList!717 (+!89 lt!28620 lt!28617)))) (_1!1057 lt!28624) (_2!1057 lt!28624)))))

(declare-fun b!68042 () Bool)

(declare-fun e!44572 () List!1466)

(assert (=> b!68042 (= e!44572 call!5728)))

(declare-fun b!68043 () Bool)

(declare-fun c!9585 () Bool)

(declare-fun c!9587 () Bool)

(assert (=> b!68043 (= e!44569 (ite c!9585 (t!4948 (t!4948 (toList!717 (+!89 lt!28620 lt!28617)))) (ite c!9587 (Cons!1462 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28617)))) (t!4948 (t!4948 (toList!717 (+!89 lt!28620 lt!28617))))) Nil!1463)))))

(declare-fun d!14601 () Bool)

(assert (=> d!14601 e!44573))

(declare-fun res!36664 () Bool)

(assert (=> d!14601 (=> (not res!36664) (not e!44573))))

(assert (=> d!14601 (= res!36664 (isStrictlySorted!289 lt!29670))))

(assert (=> d!14601 (= lt!29670 e!44572)))

(declare-fun c!9588 () Bool)

(assert (=> d!14601 (= c!9588 (and ((_ is Cons!1462) (t!4948 (toList!717 (+!89 lt!28620 lt!28617)))) (bvslt (_1!1057 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28617))))) (_1!1057 lt!28624))))))

(assert (=> d!14601 (isStrictlySorted!289 (t!4948 (toList!717 (+!89 lt!28620 lt!28617))))))

(assert (=> d!14601 (= (insertStrictlySorted!50 (t!4948 (toList!717 (+!89 lt!28620 lt!28617))) (_1!1057 lt!28624) (_2!1057 lt!28624)) lt!29670)))

(declare-fun bm!5724 () Bool)

(assert (=> bm!5724 (= call!5726 call!5727)))

(declare-fun b!68044 () Bool)

(declare-fun res!36663 () Bool)

(assert (=> b!68044 (=> (not res!36663) (not e!44573))))

(assert (=> b!68044 (= res!36663 (containsKey!134 lt!29670 (_1!1057 lt!28624)))))

(declare-fun b!68045 () Bool)

(declare-fun e!44570 () List!1466)

(assert (=> b!68045 (= e!44570 call!5727)))

(declare-fun b!68046 () Bool)

(assert (=> b!68046 (= c!9587 (and ((_ is Cons!1462) (t!4948 (toList!717 (+!89 lt!28620 lt!28617)))) (bvsgt (_1!1057 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28617))))) (_1!1057 lt!28624))))))

(assert (=> b!68046 (= e!44570 e!44571)))

(declare-fun b!68047 () Bool)

(assert (=> b!68047 (= e!44572 e!44570)))

(assert (=> b!68047 (= c!9585 (and ((_ is Cons!1462) (t!4948 (toList!717 (+!89 lt!28620 lt!28617)))) (= (_1!1057 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28617))))) (_1!1057 lt!28624))))))

(declare-fun bm!5725 () Bool)

(assert (=> bm!5725 (= call!5728 ($colon$colon!63 e!44569 (ite c!9588 (h!2046 (t!4948 (toList!717 (+!89 lt!28620 lt!28617)))) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624)))))))

(declare-fun c!9586 () Bool)

(assert (=> bm!5725 (= c!9586 c!9588)))

(assert (= (and d!14601 c!9588) b!68042))

(assert (= (and d!14601 (not c!9588)) b!68047))

(assert (= (and b!68047 c!9585) b!68045))

(assert (= (and b!68047 (not c!9585)) b!68046))

(assert (= (and b!68046 c!9587) b!68040))

(assert (= (and b!68046 (not c!9587)) b!68038))

(assert (= (or b!68040 b!68038) bm!5724))

(assert (= (or b!68045 bm!5724) bm!5723))

(assert (= (or b!68042 bm!5723) bm!5725))

(assert (= (and bm!5725 c!9586) b!68041))

(assert (= (and bm!5725 (not c!9586)) b!68043))

(assert (= (and d!14601 res!36664) b!68044))

(assert (= (and b!68044 res!36663) b!68039))

(declare-fun m!63841 () Bool)

(assert (=> b!68039 m!63841))

(declare-fun m!63843 () Bool)

(assert (=> d!14601 m!63843))

(assert (=> d!14601 m!62615))

(declare-fun m!63845 () Bool)

(assert (=> bm!5725 m!63845))

(declare-fun m!63847 () Bool)

(assert (=> b!68044 m!63847))

(declare-fun m!63849 () Bool)

(assert (=> b!68041 m!63849))

(assert (=> b!66855 d!14601))

(assert (=> d!13889 d!14025))

(declare-fun d!14603 () Bool)

(declare-fun e!44575 () Bool)

(assert (=> d!14603 e!44575))

(declare-fun res!36665 () Bool)

(assert (=> d!14603 (=> res!36665 e!44575)))

(declare-fun lt!29673 () Bool)

(assert (=> d!14603 (= res!36665 (not lt!29673))))

(declare-fun lt!29671 () Bool)

(assert (=> d!14603 (= lt!29673 lt!29671)))

(declare-fun lt!29674 () Unit!1838)

(declare-fun e!44574 () Unit!1838)

(assert (=> d!14603 (= lt!29674 e!44574)))

(declare-fun c!9589 () Bool)

(assert (=> d!14603 (= c!9589 lt!29671)))

(assert (=> d!14603 (= lt!29671 (containsKey!134 (toList!717 lt!29030) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14603 (= (contains!710 lt!29030 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29673)))

(declare-fun b!68048 () Bool)

(declare-fun lt!29672 () Unit!1838)

(assert (=> b!68048 (= e!44574 lt!29672)))

(assert (=> b!68048 (= lt!29672 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29030) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!68048 (isDefined!83 (getValueByKey!130 (toList!717 lt!29030) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68049 () Bool)

(declare-fun Unit!1902 () Unit!1838)

(assert (=> b!68049 (= e!44574 Unit!1902)))

(declare-fun b!68050 () Bool)

(assert (=> b!68050 (= e!44575 (isDefined!83 (getValueByKey!130 (toList!717 lt!29030) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14603 c!9589) b!68048))

(assert (= (and d!14603 (not c!9589)) b!68049))

(assert (= (and d!14603 (not res!36665)) b!68050))

(declare-fun m!63851 () Bool)

(assert (=> d!14603 m!63851))

(declare-fun m!63853 () Bool)

(assert (=> b!68048 m!63853))

(assert (=> b!68048 m!61857))

(assert (=> b!68048 m!61857))

(declare-fun m!63855 () Bool)

(assert (=> b!68048 m!63855))

(assert (=> b!68050 m!61857))

(assert (=> b!68050 m!61857))

(assert (=> b!68050 m!63855))

(assert (=> d!13919 d!14603))

(declare-fun d!14605 () Bool)

(declare-fun c!9590 () Bool)

(assert (=> d!14605 (= c!9590 (and ((_ is Cons!1462) lt!29031) (= (_1!1057 (h!2046 lt!29031)) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44576 () Option!136)

(assert (=> d!14605 (= (getValueByKey!130 lt!29031 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44576)))

(declare-fun b!68052 () Bool)

(declare-fun e!44577 () Option!136)

(assert (=> b!68052 (= e!44576 e!44577)))

(declare-fun c!9591 () Bool)

(assert (=> b!68052 (= c!9591 (and ((_ is Cons!1462) lt!29031) (not (= (_1!1057 (h!2046 lt!29031)) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!68051 () Bool)

(assert (=> b!68051 (= e!44576 (Some!135 (_2!1057 (h!2046 lt!29031))))))

(declare-fun b!68053 () Bool)

(assert (=> b!68053 (= e!44577 (getValueByKey!130 (t!4948 lt!29031) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68054 () Bool)

(assert (=> b!68054 (= e!44577 None!134)))

(assert (= (and d!14605 c!9590) b!68051))

(assert (= (and d!14605 (not c!9590)) b!68052))

(assert (= (and b!68052 c!9591) b!68053))

(assert (= (and b!68052 (not c!9591)) b!68054))

(declare-fun m!63857 () Bool)

(assert (=> b!68053 m!63857))

(assert (=> d!13919 d!14605))

(declare-fun d!14607 () Bool)

(assert (=> d!14607 (= (getValueByKey!130 lt!29031 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) (Some!135 (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29675 () Unit!1838)

(assert (=> d!14607 (= lt!29675 (choose!367 lt!29031 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44578 () Bool)

(assert (=> d!14607 e!44578))

(declare-fun res!36666 () Bool)

(assert (=> d!14607 (=> (not res!36666) (not e!44578))))

(assert (=> d!14607 (= res!36666 (isStrictlySorted!289 lt!29031))))

(assert (=> d!14607 (= (lemmaContainsTupThenGetReturnValue!47 lt!29031 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29675)))

(declare-fun b!68055 () Bool)

(declare-fun res!36667 () Bool)

(assert (=> b!68055 (=> (not res!36667) (not e!44578))))

(assert (=> b!68055 (= res!36667 (containsKey!134 lt!29031 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68056 () Bool)

(assert (=> b!68056 (= e!44578 (contains!712 lt!29031 (tuple2!2093 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14607 res!36666) b!68055))

(assert (= (and b!68055 res!36667) b!68056))

(assert (=> d!14607 m!61851))

(declare-fun m!63859 () Bool)

(assert (=> d!14607 m!63859))

(declare-fun m!63861 () Bool)

(assert (=> d!14607 m!63861))

(declare-fun m!63863 () Bool)

(assert (=> b!68055 m!63863))

(declare-fun m!63865 () Bool)

(assert (=> b!68056 m!63865))

(assert (=> d!13919 d!14607))

(declare-fun b!68057 () Bool)

(declare-fun e!44581 () List!1466)

(declare-fun call!5729 () List!1466)

(assert (=> b!68057 (= e!44581 call!5729)))

(declare-fun bm!5726 () Bool)

(declare-fun call!5730 () List!1466)

(declare-fun call!5731 () List!1466)

(assert (=> bm!5726 (= call!5730 call!5731)))

(declare-fun lt!29676 () List!1466)

(declare-fun b!68058 () Bool)

(declare-fun e!44583 () Bool)

(assert (=> b!68058 (= e!44583 (contains!712 lt!29676 (tuple2!2093 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!68059 () Bool)

(assert (=> b!68059 (= e!44581 call!5729)))

(declare-fun e!44579 () List!1466)

(declare-fun b!68060 () Bool)

(assert (=> b!68060 (= e!44579 (insertStrictlySorted!50 (t!4948 (toList!717 lt!28871)) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68061 () Bool)

(declare-fun e!44582 () List!1466)

(assert (=> b!68061 (= e!44582 call!5731)))

(declare-fun b!68062 () Bool)

(declare-fun c!9594 () Bool)

(declare-fun c!9592 () Bool)

(assert (=> b!68062 (= e!44579 (ite c!9592 (t!4948 (toList!717 lt!28871)) (ite c!9594 (Cons!1462 (h!2046 (toList!717 lt!28871)) (t!4948 (toList!717 lt!28871))) Nil!1463)))))

(declare-fun d!14609 () Bool)

(assert (=> d!14609 e!44583))

(declare-fun res!36669 () Bool)

(assert (=> d!14609 (=> (not res!36669) (not e!44583))))

(assert (=> d!14609 (= res!36669 (isStrictlySorted!289 lt!29676))))

(assert (=> d!14609 (= lt!29676 e!44582)))

(declare-fun c!9595 () Bool)

(assert (=> d!14609 (= c!9595 (and ((_ is Cons!1462) (toList!717 lt!28871)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28871))) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14609 (isStrictlySorted!289 (toList!717 lt!28871))))

(assert (=> d!14609 (= (insertStrictlySorted!50 (toList!717 lt!28871) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29676)))

(declare-fun bm!5727 () Bool)

(assert (=> bm!5727 (= call!5729 call!5730)))

(declare-fun b!68063 () Bool)

(declare-fun res!36668 () Bool)

(assert (=> b!68063 (=> (not res!36668) (not e!44583))))

(assert (=> b!68063 (= res!36668 (containsKey!134 lt!29676 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68064 () Bool)

(declare-fun e!44580 () List!1466)

(assert (=> b!68064 (= e!44580 call!5730)))

(declare-fun b!68065 () Bool)

(assert (=> b!68065 (= c!9594 (and ((_ is Cons!1462) (toList!717 lt!28871)) (bvsgt (_1!1057 (h!2046 (toList!717 lt!28871))) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!68065 (= e!44580 e!44581)))

(declare-fun b!68066 () Bool)

(assert (=> b!68066 (= e!44582 e!44580)))

(assert (=> b!68066 (= c!9592 (and ((_ is Cons!1462) (toList!717 lt!28871)) (= (_1!1057 (h!2046 (toList!717 lt!28871))) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun bm!5728 () Bool)

(assert (=> bm!5728 (= call!5731 ($colon$colon!63 e!44579 (ite c!9595 (h!2046 (toList!717 lt!28871)) (tuple2!2093 (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))) (_2!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9593 () Bool)

(assert (=> bm!5728 (= c!9593 c!9595)))

(assert (= (and d!14609 c!9595) b!68061))

(assert (= (and d!14609 (not c!9595)) b!68066))

(assert (= (and b!68066 c!9592) b!68064))

(assert (= (and b!68066 (not c!9592)) b!68065))

(assert (= (and b!68065 c!9594) b!68059))

(assert (= (and b!68065 (not c!9594)) b!68057))

(assert (= (or b!68059 b!68057) bm!5727))

(assert (= (or b!68064 bm!5727) bm!5726))

(assert (= (or b!68061 bm!5726) bm!5728))

(assert (= (and bm!5728 c!9593) b!68060))

(assert (= (and bm!5728 (not c!9593)) b!68062))

(assert (= (and d!14609 res!36669) b!68063))

(assert (= (and b!68063 res!36668) b!68058))

(declare-fun m!63867 () Bool)

(assert (=> b!68058 m!63867))

(declare-fun m!63869 () Bool)

(assert (=> d!14609 m!63869))

(declare-fun m!63871 () Bool)

(assert (=> d!14609 m!63871))

(declare-fun m!63873 () Bool)

(assert (=> bm!5728 m!63873))

(declare-fun m!63875 () Bool)

(assert (=> b!68063 m!63875))

(declare-fun m!63877 () Bool)

(assert (=> b!68060 m!63877))

(assert (=> d!13919 d!14609))

(declare-fun lt!29677 () Bool)

(declare-fun d!14611 () Bool)

(assert (=> d!14611 (= lt!29677 (select (content!72 (toList!717 lt!28964)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(declare-fun e!44584 () Bool)

(assert (=> d!14611 (= lt!29677 e!44584)))

(declare-fun res!36670 () Bool)

(assert (=> d!14611 (=> (not res!36670) (not e!44584))))

(assert (=> d!14611 (= res!36670 ((_ is Cons!1462) (toList!717 lt!28964)))))

(assert (=> d!14611 (= (contains!712 (toList!717 lt!28964) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) lt!29677)))

(declare-fun b!68067 () Bool)

(declare-fun e!44585 () Bool)

(assert (=> b!68067 (= e!44584 e!44585)))

(declare-fun res!36671 () Bool)

(assert (=> b!68067 (=> res!36671 e!44585)))

(assert (=> b!68067 (= res!36671 (= (h!2046 (toList!717 lt!28964)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(declare-fun b!68068 () Bool)

(assert (=> b!68068 (= e!44585 (contains!712 (t!4948 (toList!717 lt!28964)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))

(assert (= (and d!14611 res!36670) b!68067))

(assert (= (and b!68067 (not res!36671)) b!68068))

(declare-fun m!63879 () Bool)

(assert (=> d!14611 m!63879))

(declare-fun m!63881 () Bool)

(assert (=> d!14611 m!63881))

(declare-fun m!63883 () Bool)

(assert (=> b!68068 m!63883))

(assert (=> b!66909 d!14611))

(declare-fun d!14613 () Bool)

(declare-fun c!9596 () Bool)

(assert (=> d!14613 (= c!9596 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28703))) (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28703)))) (_1!1057 lt!28617))))))

(declare-fun e!44586 () Option!136)

(assert (=> d!14613 (= (getValueByKey!130 (t!4948 (toList!717 lt!28703)) (_1!1057 lt!28617)) e!44586)))

(declare-fun b!68070 () Bool)

(declare-fun e!44587 () Option!136)

(assert (=> b!68070 (= e!44586 e!44587)))

(declare-fun c!9597 () Bool)

(assert (=> b!68070 (= c!9597 (and ((_ is Cons!1462) (t!4948 (toList!717 lt!28703))) (not (= (_1!1057 (h!2046 (t!4948 (toList!717 lt!28703)))) (_1!1057 lt!28617)))))))

(declare-fun b!68069 () Bool)

(assert (=> b!68069 (= e!44586 (Some!135 (_2!1057 (h!2046 (t!4948 (toList!717 lt!28703))))))))

(declare-fun b!68071 () Bool)

(assert (=> b!68071 (= e!44587 (getValueByKey!130 (t!4948 (t!4948 (toList!717 lt!28703))) (_1!1057 lt!28617)))))

(declare-fun b!68072 () Bool)

(assert (=> b!68072 (= e!44587 None!134)))

(assert (= (and d!14613 c!9596) b!68069))

(assert (= (and d!14613 (not c!9596)) b!68070))

(assert (= (and b!68070 c!9597) b!68071))

(assert (= (and b!68070 (not c!9597)) b!68072))

(declare-fun m!63885 () Bool)

(assert (=> b!68071 m!63885))

(assert (=> b!66960 d!14613))

(declare-fun d!14615 () Bool)

(declare-fun res!36672 () Bool)

(declare-fun e!44588 () Bool)

(assert (=> d!14615 (=> res!36672 e!44588)))

(assert (=> d!14615 (= res!36672 (and ((_ is Cons!1462) (toList!717 lt!28698)) (= (_1!1057 (h!2046 (toList!717 lt!28698))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14615 (= (containsKey!134 (toList!717 lt!28698) #b0000000000000000000000000000000000000000000000000000000000000000) e!44588)))

(declare-fun b!68073 () Bool)

(declare-fun e!44589 () Bool)

(assert (=> b!68073 (= e!44588 e!44589)))

(declare-fun res!36673 () Bool)

(assert (=> b!68073 (=> (not res!36673) (not e!44589))))

(assert (=> b!68073 (= res!36673 (and (or (not ((_ is Cons!1462) (toList!717 lt!28698))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28698))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1462) (toList!717 lt!28698)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28698))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68074 () Bool)

(assert (=> b!68074 (= e!44589 (containsKey!134 (t!4948 (toList!717 lt!28698)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14615 (not res!36672)) b!68073))

(assert (= (and b!68073 res!36673) b!68074))

(declare-fun m!63887 () Bool)

(assert (=> b!68074 m!63887))

(assert (=> d!13993 d!14615))

(declare-fun d!14617 () Bool)

(declare-fun e!44591 () Bool)

(assert (=> d!14617 e!44591))

(declare-fun res!36674 () Bool)

(assert (=> d!14617 (=> res!36674 e!44591)))

(declare-fun lt!29680 () Bool)

(assert (=> d!14617 (= res!36674 (not lt!29680))))

(declare-fun lt!29678 () Bool)

(assert (=> d!14617 (= lt!29680 lt!29678)))

(declare-fun lt!29681 () Unit!1838)

(declare-fun e!44590 () Unit!1838)

(assert (=> d!14617 (= lt!29681 e!44590)))

(declare-fun c!9598 () Bool)

(assert (=> d!14617 (= c!9598 lt!29678)))

(assert (=> d!14617 (= lt!29678 (containsKey!134 (toList!717 lt!28913) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14617 (= (contains!710 lt!28913 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29680)))

(declare-fun b!68075 () Bool)

(declare-fun lt!29679 () Unit!1838)

(assert (=> b!68075 (= e!44590 lt!29679)))

(assert (=> b!68075 (= lt!29679 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28913) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68075 (isDefined!83 (getValueByKey!130 (toList!717 lt!28913) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68076 () Bool)

(declare-fun Unit!1903 () Unit!1838)

(assert (=> b!68076 (= e!44590 Unit!1903)))

(declare-fun b!68077 () Bool)

(assert (=> b!68077 (= e!44591 (isDefined!83 (getValueByKey!130 (toList!717 lt!28913) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14617 c!9598) b!68075))

(assert (= (and d!14617 (not c!9598)) b!68076))

(assert (= (and d!14617 (not res!36674)) b!68077))

(declare-fun m!63889 () Bool)

(assert (=> d!14617 m!63889))

(declare-fun m!63891 () Bool)

(assert (=> b!68075 m!63891))

(assert (=> b!68075 m!62539))

(assert (=> b!68075 m!62539))

(declare-fun m!63893 () Bool)

(assert (=> b!68075 m!63893))

(assert (=> b!68077 m!62539))

(assert (=> b!68077 m!62539))

(assert (=> b!68077 m!63893))

(assert (=> bm!5582 d!14617))

(declare-fun d!14619 () Bool)

(declare-fun e!44593 () Bool)

(assert (=> d!14619 e!44593))

(declare-fun res!36675 () Bool)

(assert (=> d!14619 (=> res!36675 e!44593)))

(declare-fun lt!29684 () Bool)

(assert (=> d!14619 (= res!36675 (not lt!29684))))

(declare-fun lt!29682 () Bool)

(assert (=> d!14619 (= lt!29684 lt!29682)))

(declare-fun lt!29685 () Unit!1838)

(declare-fun e!44592 () Unit!1838)

(assert (=> d!14619 (= lt!29685 e!44592)))

(declare-fun c!9599 () Bool)

(assert (=> d!14619 (= c!9599 lt!29682)))

(assert (=> d!14619 (= lt!29682 (containsKey!134 (toList!717 lt!28964) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!14619 (= (contains!710 lt!28964 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29684)))

(declare-fun b!68078 () Bool)

(declare-fun lt!29683 () Unit!1838)

(assert (=> b!68078 (= e!44592 lt!29683)))

(assert (=> b!68078 (= lt!29683 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28964) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> b!68078 (isDefined!83 (getValueByKey!130 (toList!717 lt!28964) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68079 () Bool)

(declare-fun Unit!1904 () Unit!1838)

(assert (=> b!68079 (= e!44592 Unit!1904)))

(declare-fun b!68080 () Bool)

(assert (=> b!68080 (= e!44593 (isDefined!83 (getValueByKey!130 (toList!717 lt!28964) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (= (and d!14619 c!9599) b!68078))

(assert (= (and d!14619 (not c!9599)) b!68079))

(assert (= (and d!14619 (not res!36675)) b!68080))

(declare-fun m!63895 () Bool)

(assert (=> d!14619 m!63895))

(declare-fun m!63897 () Bool)

(assert (=> b!68078 m!63897))

(assert (=> b!68078 m!61673))

(assert (=> b!68078 m!61673))

(declare-fun m!63899 () Bool)

(assert (=> b!68078 m!63899))

(assert (=> b!68080 m!61673))

(assert (=> b!68080 m!61673))

(assert (=> b!68080 m!63899))

(assert (=> d!13869 d!14619))

(declare-fun c!9600 () Bool)

(declare-fun d!14621 () Bool)

(assert (=> d!14621 (= c!9600 (and ((_ is Cons!1462) lt!28965) (= (_1!1057 (h!2046 lt!28965)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun e!44594 () Option!136)

(assert (=> d!14621 (= (getValueByKey!130 lt!28965 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) e!44594)))

(declare-fun b!68082 () Bool)

(declare-fun e!44595 () Option!136)

(assert (=> b!68082 (= e!44594 e!44595)))

(declare-fun c!9601 () Bool)

(assert (=> b!68082 (= c!9601 (and ((_ is Cons!1462) lt!28965) (not (= (_1!1057 (h!2046 lt!28965)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun b!68081 () Bool)

(assert (=> b!68081 (= e!44594 (Some!135 (_2!1057 (h!2046 lt!28965))))))

(declare-fun b!68083 () Bool)

(assert (=> b!68083 (= e!44595 (getValueByKey!130 (t!4948 lt!28965) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68084 () Bool)

(assert (=> b!68084 (= e!44595 None!134)))

(assert (= (and d!14621 c!9600) b!68081))

(assert (= (and d!14621 (not c!9600)) b!68082))

(assert (= (and b!68082 c!9601) b!68083))

(assert (= (and b!68082 (not c!9601)) b!68084))

(declare-fun m!63901 () Bool)

(assert (=> b!68083 m!63901))

(assert (=> d!13869 d!14621))

(declare-fun d!14623 () Bool)

(assert (=> d!14623 (= (getValueByKey!130 lt!28965 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun lt!29686 () Unit!1838)

(assert (=> d!14623 (= lt!29686 (choose!367 lt!28965 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun e!44596 () Bool)

(assert (=> d!14623 e!44596))

(declare-fun res!36676 () Bool)

(assert (=> d!14623 (=> (not res!36676) (not e!44596))))

(assert (=> d!14623 (= res!36676 (isStrictlySorted!289 lt!28965))))

(assert (=> d!14623 (= (lemmaContainsTupThenGetReturnValue!47 lt!28965 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29686)))

(declare-fun b!68085 () Bool)

(declare-fun res!36677 () Bool)

(assert (=> b!68085 (=> (not res!36677) (not e!44596))))

(assert (=> b!68085 (= res!36677 (containsKey!134 lt!28965 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68086 () Bool)

(assert (=> b!68086 (= e!44596 (contains!712 lt!28965 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (= (and d!14623 res!36676) b!68085))

(assert (= (and b!68085 res!36677) b!68086))

(assert (=> d!14623 m!61667))

(declare-fun m!63903 () Bool)

(assert (=> d!14623 m!63903))

(declare-fun m!63905 () Bool)

(assert (=> d!14623 m!63905))

(declare-fun m!63907 () Bool)

(assert (=> b!68085 m!63907))

(declare-fun m!63909 () Bool)

(assert (=> b!68086 m!63909))

(assert (=> d!13869 d!14623))

(declare-fun b!68087 () Bool)

(declare-fun e!44599 () List!1466)

(declare-fun call!5732 () List!1466)

(assert (=> b!68087 (= e!44599 call!5732)))

(declare-fun bm!5729 () Bool)

(declare-fun call!5733 () List!1466)

(declare-fun call!5734 () List!1466)

(assert (=> bm!5729 (= call!5733 call!5734)))

(declare-fun lt!29687 () List!1466)

(declare-fun b!68088 () Bool)

(declare-fun e!44601 () Bool)

(assert (=> b!68088 (= e!44601 (contains!712 lt!29687 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!68089 () Bool)

(assert (=> b!68089 (= e!44599 call!5732)))

(declare-fun e!44597 () List!1466)

(declare-fun b!68090 () Bool)

(assert (=> b!68090 (= e!44597 (insertStrictlySorted!50 (t!4948 (toList!717 lt!28620)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68091 () Bool)

(declare-fun e!44600 () List!1466)

(assert (=> b!68091 (= e!44600 call!5734)))

(declare-fun c!9602 () Bool)

(declare-fun b!68092 () Bool)

(declare-fun c!9604 () Bool)

(assert (=> b!68092 (= e!44597 (ite c!9602 (t!4948 (toList!717 lt!28620)) (ite c!9604 (Cons!1462 (h!2046 (toList!717 lt!28620)) (t!4948 (toList!717 lt!28620))) Nil!1463)))))

(declare-fun d!14625 () Bool)

(assert (=> d!14625 e!44601))

(declare-fun res!36679 () Bool)

(assert (=> d!14625 (=> (not res!36679) (not e!44601))))

(assert (=> d!14625 (= res!36679 (isStrictlySorted!289 lt!29687))))

(assert (=> d!14625 (= lt!29687 e!44600)))

(declare-fun c!9605 () Bool)

(assert (=> d!14625 (= c!9605 (and ((_ is Cons!1462) (toList!717 lt!28620)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> d!14625 (isStrictlySorted!289 (toList!717 lt!28620))))

(assert (=> d!14625 (= (insertStrictlySorted!50 (toList!717 lt!28620) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29687)))

(declare-fun bm!5730 () Bool)

(assert (=> bm!5730 (= call!5732 call!5733)))

(declare-fun b!68093 () Bool)

(declare-fun res!36678 () Bool)

(assert (=> b!68093 (=> (not res!36678) (not e!44601))))

(assert (=> b!68093 (= res!36678 (containsKey!134 lt!29687 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68094 () Bool)

(declare-fun e!44598 () List!1466)

(assert (=> b!68094 (= e!44598 call!5733)))

(declare-fun b!68095 () Bool)

(assert (=> b!68095 (= c!9604 (and ((_ is Cons!1462) (toList!717 lt!28620)) (bvsgt (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> b!68095 (= e!44598 e!44599)))

(declare-fun b!68096 () Bool)

(assert (=> b!68096 (= e!44600 e!44598)))

(assert (=> b!68096 (= c!9602 (and ((_ is Cons!1462) (toList!717 lt!28620)) (= (_1!1057 (h!2046 (toList!717 lt!28620))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun bm!5731 () Bool)

(assert (=> bm!5731 (= call!5734 ($colon$colon!63 e!44597 (ite c!9605 (h!2046 (toList!717 lt!28620)) (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun c!9603 () Bool)

(assert (=> bm!5731 (= c!9603 c!9605)))

(assert (= (and d!14625 c!9605) b!68091))

(assert (= (and d!14625 (not c!9605)) b!68096))

(assert (= (and b!68096 c!9602) b!68094))

(assert (= (and b!68096 (not c!9602)) b!68095))

(assert (= (and b!68095 c!9604) b!68089))

(assert (= (and b!68095 (not c!9604)) b!68087))

(assert (= (or b!68089 b!68087) bm!5730))

(assert (= (or b!68094 bm!5730) bm!5729))

(assert (= (or b!68091 bm!5729) bm!5731))

(assert (= (and bm!5731 c!9603) b!68090))

(assert (= (and bm!5731 (not c!9603)) b!68092))

(assert (= (and d!14625 res!36679) b!68093))

(assert (= (and b!68093 res!36678) b!68088))

(declare-fun m!63911 () Bool)

(assert (=> b!68088 m!63911))

(declare-fun m!63913 () Bool)

(assert (=> d!14625 m!63913))

(assert (=> d!14625 m!61425))

(declare-fun m!63915 () Bool)

(assert (=> bm!5731 m!63915))

(declare-fun m!63917 () Bool)

(assert (=> b!68093 m!63917))

(declare-fun m!63919 () Bool)

(assert (=> b!68090 m!63919))

(assert (=> d!13869 d!14625))

(assert (=> b!67109 d!14121))

(assert (=> b!67109 d!14123))

(declare-fun d!14627 () Bool)

(declare-fun lt!29688 () Bool)

(assert (=> d!14627 (= lt!29688 (select (content!72 (t!4948 (toList!717 lt!28671))) lt!28617))))

(declare-fun e!44602 () Bool)

(assert (=> d!14627 (= lt!29688 e!44602)))

(declare-fun res!36680 () Bool)

(assert (=> d!14627 (=> (not res!36680) (not e!44602))))

(assert (=> d!14627 (= res!36680 ((_ is Cons!1462) (t!4948 (toList!717 lt!28671))))))

(assert (=> d!14627 (= (contains!712 (t!4948 (toList!717 lt!28671)) lt!28617) lt!29688)))

(declare-fun b!68097 () Bool)

(declare-fun e!44603 () Bool)

(assert (=> b!68097 (= e!44602 e!44603)))

(declare-fun res!36681 () Bool)

(assert (=> b!68097 (=> res!36681 e!44603)))

(assert (=> b!68097 (= res!36681 (= (h!2046 (t!4948 (toList!717 lt!28671))) lt!28617))))

(declare-fun b!68098 () Bool)

(assert (=> b!68098 (= e!44603 (contains!712 (t!4948 (t!4948 (toList!717 lt!28671))) lt!28617))))

(assert (= (and d!14627 res!36680) b!68097))

(assert (= (and b!68097 (not res!36681)) b!68098))

(declare-fun m!63921 () Bool)

(assert (=> d!14627 m!63921))

(declare-fun m!63923 () Bool)

(assert (=> d!14627 m!63923))

(declare-fun m!63925 () Bool)

(assert (=> b!68098 m!63925))

(assert (=> b!66952 d!14627))

(declare-fun d!14629 () Bool)

(assert (=> d!14629 (= (get!1119 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66813 d!14629))

(declare-fun d!14631 () Bool)

(declare-fun res!36682 () Bool)

(declare-fun e!44604 () Bool)

(assert (=> d!14631 (=> res!36682 e!44604)))

(assert (=> d!14631 (= res!36682 (and ((_ is Cons!1462) lt!28672) (= (_1!1057 (h!2046 lt!28672)) (_1!1057 lt!28617))))))

(assert (=> d!14631 (= (containsKey!134 lt!28672 (_1!1057 lt!28617)) e!44604)))

(declare-fun b!68099 () Bool)

(declare-fun e!44605 () Bool)

(assert (=> b!68099 (= e!44604 e!44605)))

(declare-fun res!36683 () Bool)

(assert (=> b!68099 (=> (not res!36683) (not e!44605))))

(assert (=> b!68099 (= res!36683 (and (or (not ((_ is Cons!1462) lt!28672)) (bvsle (_1!1057 (h!2046 lt!28672)) (_1!1057 lt!28617))) ((_ is Cons!1462) lt!28672) (bvslt (_1!1057 (h!2046 lt!28672)) (_1!1057 lt!28617))))))

(declare-fun b!68100 () Bool)

(assert (=> b!68100 (= e!44605 (containsKey!134 (t!4948 lt!28672) (_1!1057 lt!28617)))))

(assert (= (and d!14631 (not res!36682)) b!68099))

(assert (= (and b!68099 res!36683) b!68100))

(declare-fun m!63927 () Bool)

(assert (=> b!68100 m!63927))

(assert (=> b!66869 d!14631))

(assert (=> b!67143 d!14051))

(assert (=> b!67143 d!14053))

(declare-fun d!14633 () Bool)

(declare-fun e!44607 () Bool)

(assert (=> d!14633 e!44607))

(declare-fun res!36684 () Bool)

(assert (=> d!14633 (=> res!36684 e!44607)))

(declare-fun lt!29691 () Bool)

(assert (=> d!14633 (= res!36684 (not lt!29691))))

(declare-fun lt!29689 () Bool)

(assert (=> d!14633 (= lt!29691 lt!29689)))

(declare-fun lt!29692 () Unit!1838)

(declare-fun e!44606 () Unit!1838)

(assert (=> d!14633 (= lt!29692 e!44606)))

(declare-fun c!9606 () Bool)

(assert (=> d!14633 (= c!9606 lt!29689)))

(assert (=> d!14633 (= lt!29689 (containsKey!134 (toList!717 lt!29012) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14633 (= (contains!710 lt!29012 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29691)))

(declare-fun b!68101 () Bool)

(declare-fun lt!29690 () Unit!1838)

(assert (=> b!68101 (= e!44606 lt!29690)))

(assert (=> b!68101 (= lt!29690 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29012) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68101 (isDefined!83 (getValueByKey!130 (toList!717 lt!29012) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68102 () Bool)

(declare-fun Unit!1905 () Unit!1838)

(assert (=> b!68102 (= e!44606 Unit!1905)))

(declare-fun b!68103 () Bool)

(assert (=> b!68103 (= e!44607 (isDefined!83 (getValueByKey!130 (toList!717 lt!29012) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14633 c!9606) b!68101))

(assert (= (and d!14633 (not c!9606)) b!68102))

(assert (= (and d!14633 (not res!36684)) b!68103))

(declare-fun m!63929 () Bool)

(assert (=> d!14633 m!63929))

(declare-fun m!63931 () Bool)

(assert (=> b!68101 m!63931))

(assert (=> b!68101 m!62235))

(assert (=> b!68101 m!62235))

(declare-fun m!63933 () Bool)

(assert (=> b!68101 m!63933))

(assert (=> b!68103 m!62235))

(assert (=> b!68103 m!62235))

(assert (=> b!68103 m!63933))

(assert (=> bm!5606 d!14633))

(declare-fun c!9607 () Bool)

(declare-fun d!14635 () Bool)

(assert (=> d!14635 (= c!9607 (and ((_ is Cons!1462) (toList!717 lt!28972)) (= (_1!1057 (h!2046 (toList!717 lt!28972))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun e!44608 () Option!136)

(assert (=> d!14635 (= (getValueByKey!130 (toList!717 lt!28972) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) e!44608)))

(declare-fun b!68105 () Bool)

(declare-fun e!44609 () Option!136)

(assert (=> b!68105 (= e!44608 e!44609)))

(declare-fun c!9608 () Bool)

(assert (=> b!68105 (= c!9608 (and ((_ is Cons!1462) (toList!717 lt!28972)) (not (= (_1!1057 (h!2046 (toList!717 lt!28972))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun b!68104 () Bool)

(assert (=> b!68104 (= e!44608 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28972)))))))

(declare-fun b!68106 () Bool)

(assert (=> b!68106 (= e!44609 (getValueByKey!130 (t!4948 (toList!717 lt!28972)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68107 () Bool)

(assert (=> b!68107 (= e!44609 None!134)))

(assert (= (and d!14635 c!9607) b!68104))

(assert (= (and d!14635 (not c!9607)) b!68105))

(assert (= (and b!68105 c!9608) b!68106))

(assert (= (and b!68105 (not c!9608)) b!68107))

(declare-fun m!63935 () Bool)

(assert (=> b!68106 m!63935))

(assert (=> b!66912 d!14635))

(declare-fun d!14637 () Bool)

(assert (=> d!14637 (isDefined!83 (getValueByKey!130 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!29693 () Unit!1838)

(assert (=> d!14637 (= lt!29693 (choose!377 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!44610 () Bool)

(assert (=> d!14637 e!44610))

(declare-fun res!36685 () Bool)

(assert (=> d!14637 (=> (not res!36685) (not e!44610))))

(assert (=> d!14637 (= res!36685 (isStrictlySorted!289 (toList!717 lt!28698)))))

(assert (=> d!14637 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29693)))

(declare-fun b!68108 () Bool)

(assert (=> b!68108 (= e!44610 (containsKey!134 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14637 res!36685) b!68108))

(assert (=> d!14637 m!61229))

(assert (=> d!14637 m!61507))

(assert (=> d!14637 m!61507))

(assert (=> d!14637 m!62001))

(assert (=> d!14637 m!61229))

(declare-fun m!63937 () Bool)

(assert (=> d!14637 m!63937))

(assert (=> d!14637 m!62319))

(assert (=> b!68108 m!61229))

(assert (=> b!68108 m!61997))

(assert (=> b!67090 d!14637))

(assert (=> b!67090 d!14505))

(assert (=> b!67090 d!14507))

(declare-fun d!14639 () Bool)

(declare-fun c!9609 () Bool)

(assert (=> d!14639 (= c!9609 (and ((_ is Cons!1462) (toList!717 lt!29030)) (= (_1!1057 (h!2046 (toList!717 lt!29030))) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44611 () Option!136)

(assert (=> d!14639 (= (getValueByKey!130 (toList!717 lt!29030) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) e!44611)))

(declare-fun b!68110 () Bool)

(declare-fun e!44612 () Option!136)

(assert (=> b!68110 (= e!44611 e!44612)))

(declare-fun c!9610 () Bool)

(assert (=> b!68110 (= c!9610 (and ((_ is Cons!1462) (toList!717 lt!29030)) (not (= (_1!1057 (h!2046 (toList!717 lt!29030))) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!68109 () Bool)

(assert (=> b!68109 (= e!44611 (Some!135 (_2!1057 (h!2046 (toList!717 lt!29030)))))))

(declare-fun b!68111 () Bool)

(assert (=> b!68111 (= e!44612 (getValueByKey!130 (t!4948 (toList!717 lt!29030)) (_1!1057 (tuple2!2093 lt!28868 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68112 () Bool)

(assert (=> b!68112 (= e!44612 None!134)))

(assert (= (and d!14639 c!9609) b!68109))

(assert (= (and d!14639 (not c!9609)) b!68110))

(assert (= (and b!68110 c!9610) b!68111))

(assert (= (and b!68110 (not c!9610)) b!68112))

(declare-fun m!63939 () Bool)

(assert (=> b!68111 m!63939))

(assert (=> b!67001 d!14639))

(assert (=> d!13969 d!13967))

(assert (=> d!13969 d!13973))

(declare-fun d!14641 () Bool)

(assert (=> d!14641 (not (contains!710 (+!89 lt!28697 (tuple2!2093 lt!28695 lt!28694)) lt!28696))))

(assert (=> d!14641 true))

(declare-fun _$36!292 () Unit!1838)

(assert (=> d!14641 (= (choose!375 lt!28697 lt!28695 lt!28694 lt!28696) _$36!292)))

(declare-fun bs!2943 () Bool)

(assert (= bs!2943 d!14641))

(assert (=> bs!2943 m!61221))

(assert (=> bs!2943 m!61221))

(assert (=> bs!2943 m!61223))

(assert (=> d!13969 d!14641))

(declare-fun d!14643 () Bool)

(declare-fun e!44614 () Bool)

(assert (=> d!14643 e!44614))

(declare-fun res!36686 () Bool)

(assert (=> d!14643 (=> res!36686 e!44614)))

(declare-fun lt!29696 () Bool)

(assert (=> d!14643 (= res!36686 (not lt!29696))))

(declare-fun lt!29694 () Bool)

(assert (=> d!14643 (= lt!29696 lt!29694)))

(declare-fun lt!29697 () Unit!1838)

(declare-fun e!44613 () Unit!1838)

(assert (=> d!14643 (= lt!29697 e!44613)))

(declare-fun c!9611 () Bool)

(assert (=> d!14643 (= c!9611 lt!29694)))

(assert (=> d!14643 (= lt!29694 (containsKey!134 (toList!717 lt!28697) lt!28696))))

(assert (=> d!14643 (= (contains!710 lt!28697 lt!28696) lt!29696)))

(declare-fun b!68114 () Bool)

(declare-fun lt!29695 () Unit!1838)

(assert (=> b!68114 (= e!44613 lt!29695)))

(assert (=> b!68114 (= lt!29695 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28697) lt!28696))))

(assert (=> b!68114 (isDefined!83 (getValueByKey!130 (toList!717 lt!28697) lt!28696))))

(declare-fun b!68115 () Bool)

(declare-fun Unit!1906 () Unit!1838)

(assert (=> b!68115 (= e!44613 Unit!1906)))

(declare-fun b!68116 () Bool)

(assert (=> b!68116 (= e!44614 (isDefined!83 (getValueByKey!130 (toList!717 lt!28697) lt!28696)))))

(assert (= (and d!14643 c!9611) b!68114))

(assert (= (and d!14643 (not c!9611)) b!68115))

(assert (= (and d!14643 (not res!36686)) b!68116))

(declare-fun m!63941 () Bool)

(assert (=> d!14643 m!63941))

(declare-fun m!63943 () Bool)

(assert (=> b!68114 m!63943))

(declare-fun m!63945 () Bool)

(assert (=> b!68114 m!63945))

(assert (=> b!68114 m!63945))

(declare-fun m!63947 () Bool)

(assert (=> b!68114 m!63947))

(assert (=> b!68116 m!63945))

(assert (=> b!68116 m!63945))

(assert (=> b!68116 m!63947))

(assert (=> d!13969 d!14643))

(declare-fun d!14645 () Bool)

(declare-fun e!44616 () Bool)

(assert (=> d!14645 e!44616))

(declare-fun res!36687 () Bool)

(assert (=> d!14645 (=> res!36687 e!44616)))

(declare-fun lt!29700 () Bool)

(assert (=> d!14645 (= res!36687 (not lt!29700))))

(declare-fun lt!29698 () Bool)

(assert (=> d!14645 (= lt!29700 lt!29698)))

(declare-fun lt!29701 () Unit!1838)

(declare-fun e!44615 () Unit!1838)

(assert (=> d!14645 (= lt!29701 e!44615)))

(declare-fun c!9612 () Bool)

(assert (=> d!14645 (= c!9612 lt!29698)))

(assert (=> d!14645 (= lt!29698 (containsKey!134 (toList!717 lt!28972) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> d!14645 (= (contains!710 lt!28972 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29700)))

(declare-fun b!68117 () Bool)

(declare-fun lt!29699 () Unit!1838)

(assert (=> b!68117 (= e!44615 lt!29699)))

(assert (=> b!68117 (= lt!29699 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28972) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(assert (=> b!68117 (isDefined!83 (getValueByKey!130 (toList!717 lt!28972) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68118 () Bool)

(declare-fun Unit!1907 () Unit!1838)

(assert (=> b!68118 (= e!44615 Unit!1907)))

(declare-fun b!68119 () Bool)

(assert (=> b!68119 (= e!44616 (isDefined!83 (getValueByKey!130 (toList!717 lt!28972) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (= (and d!14645 c!9612) b!68117))

(assert (= (and d!14645 (not c!9612)) b!68118))

(assert (= (and d!14645 (not res!36687)) b!68119))

(declare-fun m!63949 () Bool)

(assert (=> d!14645 m!63949))

(declare-fun m!63951 () Bool)

(assert (=> b!68117 m!63951))

(assert (=> b!68117 m!61697))

(assert (=> b!68117 m!61697))

(declare-fun m!63953 () Bool)

(assert (=> b!68117 m!63953))

(assert (=> b!68119 m!61697))

(assert (=> b!68119 m!61697))

(assert (=> b!68119 m!63953))

(assert (=> d!13875 d!14645))

(declare-fun c!9613 () Bool)

(declare-fun d!14647 () Bool)

(assert (=> d!14647 (= c!9613 (and ((_ is Cons!1462) lt!28973) (= (_1!1057 (h!2046 lt!28973)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun e!44617 () Option!136)

(assert (=> d!14647 (= (getValueByKey!130 lt!28973 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) e!44617)))

(declare-fun b!68121 () Bool)

(declare-fun e!44618 () Option!136)

(assert (=> b!68121 (= e!44617 e!44618)))

(declare-fun c!9614 () Bool)

(assert (=> b!68121 (= c!9614 (and ((_ is Cons!1462) lt!28973) (not (= (_1!1057 (h!2046 lt!28973)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun b!68120 () Bool)

(assert (=> b!68120 (= e!44617 (Some!135 (_2!1057 (h!2046 lt!28973))))))

(declare-fun b!68122 () Bool)

(assert (=> b!68122 (= e!44618 (getValueByKey!130 (t!4948 lt!28973) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68123 () Bool)

(assert (=> b!68123 (= e!44618 None!134)))

(assert (= (and d!14647 c!9613) b!68120))

(assert (= (and d!14647 (not c!9613)) b!68121))

(assert (= (and b!68121 c!9614) b!68122))

(assert (= (and b!68121 (not c!9614)) b!68123))

(declare-fun m!63955 () Bool)

(assert (=> b!68122 m!63955))

(assert (=> d!13875 d!14647))

(declare-fun d!14649 () Bool)

(assert (=> d!14649 (= (getValueByKey!130 lt!28973 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun lt!29702 () Unit!1838)

(assert (=> d!14649 (= lt!29702 (choose!367 lt!28973 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun e!44619 () Bool)

(assert (=> d!14649 e!44619))

(declare-fun res!36688 () Bool)

(assert (=> d!14649 (=> (not res!36688) (not e!44619))))

(assert (=> d!14649 (= res!36688 (isStrictlySorted!289 lt!28973))))

(assert (=> d!14649 (= (lemmaContainsTupThenGetReturnValue!47 lt!28973 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29702)))

(declare-fun b!68124 () Bool)

(declare-fun res!36689 () Bool)

(assert (=> b!68124 (=> (not res!36689) (not e!44619))))

(assert (=> b!68124 (= res!36689 (containsKey!134 lt!28973 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68125 () Bool)

(assert (=> b!68125 (= e!44619 (contains!712 lt!28973 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (= (and d!14649 res!36688) b!68124))

(assert (= (and b!68124 res!36689) b!68125))

(assert (=> d!14649 m!61691))

(declare-fun m!63957 () Bool)

(assert (=> d!14649 m!63957))

(declare-fun m!63959 () Bool)

(assert (=> d!14649 m!63959))

(declare-fun m!63961 () Bool)

(assert (=> b!68124 m!63961))

(declare-fun m!63963 () Bool)

(assert (=> b!68125 m!63963))

(assert (=> d!13875 d!14649))

(declare-fun b!68126 () Bool)

(declare-fun e!44622 () List!1466)

(declare-fun call!5735 () List!1466)

(assert (=> b!68126 (= e!44622 call!5735)))

(declare-fun bm!5732 () Bool)

(declare-fun call!5736 () List!1466)

(declare-fun call!5737 () List!1466)

(assert (=> bm!5732 (= call!5736 call!5737)))

(declare-fun b!68127 () Bool)

(declare-fun lt!29703 () List!1466)

(declare-fun e!44624 () Bool)

(assert (=> b!68127 (= e!44624 (contains!712 lt!29703 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun b!68128 () Bool)

(assert (=> b!68128 (= e!44622 call!5735)))

(declare-fun e!44620 () List!1466)

(declare-fun b!68129 () Bool)

(assert (=> b!68129 (= e!44620 (insertStrictlySorted!50 (t!4948 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68130 () Bool)

(declare-fun e!44623 () List!1466)

(assert (=> b!68130 (= e!44623 call!5737)))

(declare-fun b!68131 () Bool)

(declare-fun c!9617 () Bool)

(declare-fun c!9615 () Bool)

(assert (=> b!68131 (= e!44620 (ite c!9615 (t!4948 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (ite c!9617 (Cons!1462 (h!2046 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (t!4948 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) Nil!1463)))))

(declare-fun d!14651 () Bool)

(assert (=> d!14651 e!44624))

(declare-fun res!36691 () Bool)

(assert (=> d!14651 (=> (not res!36691) (not e!44624))))

(assert (=> d!14651 (= res!36691 (isStrictlySorted!289 lt!29703))))

(assert (=> d!14651 (= lt!29703 e!44623)))

(declare-fun c!9618 () Bool)

(assert (=> d!14651 (= c!9618 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (bvslt (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> d!14651 (isStrictlySorted!289 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14651 (= (insertStrictlySorted!50 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) lt!29703)))

(declare-fun bm!5733 () Bool)

(assert (=> bm!5733 (= call!5735 call!5736)))

(declare-fun b!68132 () Bool)

(declare-fun res!36690 () Bool)

(assert (=> b!68132 (=> (not res!36690) (not e!44624))))

(assert (=> b!68132 (= res!36690 (containsKey!134 lt!29703 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68133 () Bool)

(declare-fun e!44621 () List!1466)

(assert (=> b!68133 (= e!44621 call!5736)))

(declare-fun b!68134 () Bool)

(assert (=> b!68134 (= c!9617 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (bvsgt (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(assert (=> b!68134 (= e!44621 e!44622)))

(declare-fun b!68135 () Bool)

(assert (=> b!68135 (= e!44623 e!44621)))

(assert (=> b!68135 (= c!9615 (and ((_ is Cons!1462) (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1057 (h!2046 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))))))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun bm!5734 () Bool)

(assert (=> bm!5734 (= call!5737 ($colon$colon!63 e!44620 (ite c!9618 (h!2046 (toList!717 (+!89 lt!28620 (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))) (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun c!9616 () Bool)

(assert (=> bm!5734 (= c!9616 c!9618)))

(assert (= (and d!14651 c!9618) b!68130))

(assert (= (and d!14651 (not c!9618)) b!68135))

(assert (= (and b!68135 c!9615) b!68133))

(assert (= (and b!68135 (not c!9615)) b!68134))

(assert (= (and b!68134 c!9617) b!68128))

(assert (= (and b!68134 (not c!9617)) b!68126))

(assert (= (or b!68128 b!68126) bm!5733))

(assert (= (or b!68133 bm!5733) bm!5732))

(assert (= (or b!68130 bm!5732) bm!5734))

(assert (= (and bm!5734 c!9616) b!68129))

(assert (= (and bm!5734 (not c!9616)) b!68131))

(assert (= (and d!14651 res!36691) b!68132))

(assert (= (and b!68132 res!36690) b!68127))

(declare-fun m!63965 () Bool)

(assert (=> b!68127 m!63965))

(declare-fun m!63967 () Bool)

(assert (=> d!14651 m!63967))

(declare-fun m!63969 () Bool)

(assert (=> d!14651 m!63969))

(declare-fun m!63971 () Bool)

(assert (=> bm!5734 m!63971))

(declare-fun m!63973 () Bool)

(assert (=> b!68132 m!63973))

(declare-fun m!63975 () Bool)

(assert (=> b!68129 m!63975))

(assert (=> d!13875 d!14651))

(declare-fun d!14653 () Bool)

(declare-fun c!9619 () Bool)

(assert (=> d!14653 (= c!9619 ((_ is Nil!1463) (toList!717 lt!28671)))))

(declare-fun e!44625 () (InoxSet tuple2!2092))

(assert (=> d!14653 (= (content!72 (toList!717 lt!28671)) e!44625)))

(declare-fun b!68136 () Bool)

(assert (=> b!68136 (= e!44625 ((as const (Array tuple2!2092 Bool)) false))))

(declare-fun b!68137 () Bool)

(assert (=> b!68137 (= e!44625 ((_ map or) (store ((as const (Array tuple2!2092 Bool)) false) (h!2046 (toList!717 lt!28671)) true) (content!72 (t!4948 (toList!717 lt!28671)))))))

(assert (= (and d!14653 c!9619) b!68136))

(assert (= (and d!14653 (not c!9619)) b!68137))

(declare-fun m!63977 () Bool)

(assert (=> b!68137 m!63977))

(assert (=> b!68137 m!63921))

(assert (=> d!13895 d!14653))

(assert (=> d!13999 d!14001))

(assert (=> d!13999 d!14003))

(declare-fun d!14655 () Bool)

(assert (=> d!14655 (isDefined!83 (getValueByKey!130 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14655 true))

(declare-fun _$12!314 () Unit!1838)

(assert (=> d!14655 (= (choose!377 (toList!717 lt!28622) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) _$12!314)))

(declare-fun bs!2944 () Bool)

(assert (= bs!2944 d!14655))

(assert (=> bs!2944 m!61065))

(assert (=> bs!2944 m!61295))

(assert (=> bs!2944 m!61295))

(assert (=> bs!2944 m!61297))

(assert (=> d!13999 d!14655))

(declare-fun d!14657 () Bool)

(declare-fun res!36692 () Bool)

(declare-fun e!44626 () Bool)

(assert (=> d!14657 (=> res!36692 e!44626)))

(assert (=> d!14657 (= res!36692 (or ((_ is Nil!1463) (toList!717 lt!28622)) ((_ is Nil!1463) (t!4948 (toList!717 lt!28622)))))))

(assert (=> d!14657 (= (isStrictlySorted!289 (toList!717 lt!28622)) e!44626)))

(declare-fun b!68138 () Bool)

(declare-fun e!44627 () Bool)

(assert (=> b!68138 (= e!44626 e!44627)))

(declare-fun res!36693 () Bool)

(assert (=> b!68138 (=> (not res!36693) (not e!44627))))

(assert (=> b!68138 (= res!36693 (bvslt (_1!1057 (h!2046 (toList!717 lt!28622))) (_1!1057 (h!2046 (t!4948 (toList!717 lt!28622))))))))

(declare-fun b!68139 () Bool)

(assert (=> b!68139 (= e!44627 (isStrictlySorted!289 (t!4948 (toList!717 lt!28622))))))

(assert (= (and d!14657 (not res!36692)) b!68138))

(assert (= (and b!68138 res!36693) b!68139))

(declare-fun m!63979 () Bool)

(assert (=> b!68139 m!63979))

(assert (=> d!13999 d!14657))

(assert (=> b!66864 d!14061))

(assert (=> b!66864 d!13977))

(assert (=> b!66816 d!14065))

(assert (=> b!66816 d!14067))

(assert (=> d!14005 d!14025))

(assert (=> b!67198 d!14069))

(assert (=> b!66898 d!14155))

(assert (=> b!67150 d!14137))

(assert (=> b!67150 d!13983))

(assert (=> d!13809 d!13807))

(declare-fun d!14659 () Bool)

(assert (=> d!14659 (= (getValueByKey!130 lt!28704 (_1!1057 lt!28617)) (Some!135 (_2!1057 lt!28617)))))

(assert (=> d!14659 true))

(declare-fun _$22!369 () Unit!1838)

(assert (=> d!14659 (= (choose!367 lt!28704 (_1!1057 lt!28617) (_2!1057 lt!28617)) _$22!369)))

(declare-fun bs!2945 () Bool)

(assert (= bs!2945 d!14659))

(assert (=> bs!2945 m!61255))

(assert (=> d!13809 d!14659))

(declare-fun d!14661 () Bool)

(declare-fun res!36694 () Bool)

(declare-fun e!44628 () Bool)

(assert (=> d!14661 (=> res!36694 e!44628)))

(assert (=> d!14661 (= res!36694 (or ((_ is Nil!1463) lt!28704) ((_ is Nil!1463) (t!4948 lt!28704))))))

(assert (=> d!14661 (= (isStrictlySorted!289 lt!28704) e!44628)))

(declare-fun b!68140 () Bool)

(declare-fun e!44629 () Bool)

(assert (=> b!68140 (= e!44628 e!44629)))

(declare-fun res!36695 () Bool)

(assert (=> b!68140 (=> (not res!36695) (not e!44629))))

(assert (=> b!68140 (= res!36695 (bvslt (_1!1057 (h!2046 lt!28704)) (_1!1057 (h!2046 (t!4948 lt!28704)))))))

(declare-fun b!68141 () Bool)

(assert (=> b!68141 (= e!44629 (isStrictlySorted!289 (t!4948 lt!28704)))))

(assert (= (and d!14661 (not res!36694)) b!68140))

(assert (= (and b!68140 res!36695) b!68141))

(declare-fun m!63981 () Bool)

(assert (=> b!68141 m!63981))

(assert (=> d!13809 d!14661))

(declare-fun d!14663 () Bool)

(declare-fun res!36696 () Bool)

(declare-fun e!44630 () Bool)

(assert (=> d!14663 (=> res!36696 e!44630)))

(assert (=> d!14663 (= res!36696 (and ((_ is Cons!1462) lt!28888) (= (_1!1057 (h!2046 lt!28888)) (_1!1057 lt!28617))))))

(assert (=> d!14663 (= (containsKey!134 lt!28888 (_1!1057 lt!28617)) e!44630)))

(declare-fun b!68142 () Bool)

(declare-fun e!44631 () Bool)

(assert (=> b!68142 (= e!44630 e!44631)))

(declare-fun res!36697 () Bool)

(assert (=> b!68142 (=> (not res!36697) (not e!44631))))

(assert (=> b!68142 (= res!36697 (and (or (not ((_ is Cons!1462) lt!28888)) (bvsle (_1!1057 (h!2046 lt!28888)) (_1!1057 lt!28617))) ((_ is Cons!1462) lt!28888) (bvslt (_1!1057 (h!2046 lt!28888)) (_1!1057 lt!28617))))))

(declare-fun b!68143 () Bool)

(assert (=> b!68143 (= e!44631 (containsKey!134 (t!4948 lt!28888) (_1!1057 lt!28617)))))

(assert (= (and d!14663 (not res!36696)) b!68142))

(assert (= (and b!68142 res!36697) b!68143))

(declare-fun m!63983 () Bool)

(assert (=> b!68143 m!63983))

(assert (=> b!66778 d!14663))

(declare-fun lt!29704 () Bool)

(declare-fun d!14665 () Bool)

(assert (=> d!14665 (= lt!29704 (select (content!72 (toList!717 lt!29180)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!44632 () Bool)

(assert (=> d!14665 (= lt!29704 e!44632)))

(declare-fun res!36698 () Bool)

(assert (=> d!14665 (=> (not res!36698) (not e!44632))))

(assert (=> d!14665 (= res!36698 ((_ is Cons!1462) (toList!717 lt!29180)))))

(assert (=> d!14665 (= (contains!712 (toList!717 lt!29180) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!29704)))

(declare-fun b!68144 () Bool)

(declare-fun e!44633 () Bool)

(assert (=> b!68144 (= e!44632 e!44633)))

(declare-fun res!36699 () Bool)

(assert (=> b!68144 (=> res!36699 e!44633)))

(assert (=> b!68144 (= res!36699 (= (h!2046 (toList!717 lt!29180)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!68145 () Bool)

(assert (=> b!68145 (= e!44633 (contains!712 (t!4948 (toList!717 lt!29180)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14665 res!36698) b!68144))

(assert (= (and b!68144 (not res!36699)) b!68145))

(declare-fun m!63985 () Bool)

(assert (=> d!14665 m!63985))

(declare-fun m!63987 () Bool)

(assert (=> d!14665 m!63987))

(declare-fun m!63989 () Bool)

(assert (=> b!68145 m!63989))

(assert (=> b!67122 d!14665))

(declare-fun d!14667 () Bool)

(declare-fun res!36700 () Bool)

(declare-fun e!44634 () Bool)

(assert (=> d!14667 (=> res!36700 e!44634)))

(assert (=> d!14667 (= res!36700 (and ((_ is Cons!1462) (toList!717 lt!28698)) (= (_1!1057 (h!2046 (toList!717 lt!28698))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14667 (= (containsKey!134 (toList!717 lt!28698) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44634)))

(declare-fun b!68146 () Bool)

(declare-fun e!44635 () Bool)

(assert (=> b!68146 (= e!44634 e!44635)))

(declare-fun res!36701 () Bool)

(assert (=> b!68146 (=> (not res!36701) (not e!44635))))

(assert (=> b!68146 (= res!36701 (and (or (not ((_ is Cons!1462) (toList!717 lt!28698))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28698))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1462) (toList!717 lt!28698)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28698))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!68147 () Bool)

(assert (=> b!68147 (= e!44635 (containsKey!134 (t!4948 (toList!717 lt!28698)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14667 (not res!36700)) b!68146))

(assert (= (and b!68146 res!36701) b!68147))

(assert (=> b!68147 m!61229))

(declare-fun m!63991 () Bool)

(assert (=> b!68147 m!63991))

(assert (=> d!13949 d!14667))

(declare-fun d!14669 () Bool)

(assert (=> d!14669 (= (get!1120 (getValueByKey!130 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2482 (getValueByKey!130 (toList!717 lt!28877) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!13851 d!14669))

(assert (=> d!13851 d!14123))

(declare-fun d!14671 () Bool)

(declare-fun res!36702 () Bool)

(declare-fun e!44636 () Bool)

(assert (=> d!14671 (=> res!36702 e!44636)))

(assert (=> d!14671 (= res!36702 (and ((_ is Cons!1462) lt!28676) (= (_1!1057 (h!2046 lt!28676)) (_1!1057 lt!28624))))))

(assert (=> d!14671 (= (containsKey!134 lt!28676 (_1!1057 lt!28624)) e!44636)))

(declare-fun b!68148 () Bool)

(declare-fun e!44637 () Bool)

(assert (=> b!68148 (= e!44636 e!44637)))

(declare-fun res!36703 () Bool)

(assert (=> b!68148 (=> (not res!36703) (not e!44637))))

(assert (=> b!68148 (= res!36703 (and (or (not ((_ is Cons!1462) lt!28676)) (bvsle (_1!1057 (h!2046 lt!28676)) (_1!1057 lt!28624))) ((_ is Cons!1462) lt!28676) (bvslt (_1!1057 (h!2046 lt!28676)) (_1!1057 lt!28624))))))

(declare-fun b!68149 () Bool)

(assert (=> b!68149 (= e!44637 (containsKey!134 (t!4948 lt!28676) (_1!1057 lt!28624)))))

(assert (= (and d!14671 (not res!36702)) b!68148))

(assert (= (and b!68148 res!36703) b!68149))

(declare-fun m!63993 () Bool)

(assert (=> b!68149 m!63993))

(assert (=> b!67155 d!14671))

(declare-fun d!14673 () Bool)

(declare-fun c!9620 () Bool)

(assert (=> d!14673 (= c!9620 (and ((_ is Cons!1462) (toList!717 lt!28964)) (= (_1!1057 (h!2046 (toList!717 lt!28964))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)))))))

(declare-fun e!44638 () Option!136)

(assert (=> d!14673 (= (getValueByKey!130 (toList!717 lt!28964) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))) e!44638)))

(declare-fun b!68151 () Bool)

(declare-fun e!44639 () Option!136)

(assert (=> b!68151 (= e!44638 e!44639)))

(declare-fun c!9621 () Bool)

(assert (=> b!68151 (= c!9621 (and ((_ is Cons!1462) (toList!717 lt!28964)) (not (= (_1!1057 (h!2046 (toList!717 lt!28964))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))))

(declare-fun b!68150 () Bool)

(assert (=> b!68150 (= e!44638 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28964)))))))

(declare-fun b!68152 () Bool)

(assert (=> b!68152 (= e!44639 (getValueByKey!130 (t!4948 (toList!717 lt!28964)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616))))))

(declare-fun b!68153 () Bool)

(assert (=> b!68153 (= e!44639 None!134)))

(assert (= (and d!14673 c!9620) b!68150))

(assert (= (and d!14673 (not c!9620)) b!68151))

(assert (= (and b!68151 c!9621) b!68152))

(assert (= (and b!68151 (not c!9621)) b!68153))

(declare-fun m!63995 () Bool)

(assert (=> b!68152 m!63995))

(assert (=> b!66908 d!14673))

(declare-fun d!14675 () Bool)

(declare-fun c!9622 () Bool)

(assert (=> d!14675 (= c!9622 ((_ is Nil!1463) (toList!717 lt!28707)))))

(declare-fun e!44640 () (InoxSet tuple2!2092))

(assert (=> d!14675 (= (content!72 (toList!717 lt!28707)) e!44640)))

(declare-fun b!68154 () Bool)

(assert (=> b!68154 (= e!44640 ((as const (Array tuple2!2092 Bool)) false))))

(declare-fun b!68155 () Bool)

(assert (=> b!68155 (= e!44640 ((_ map or) (store ((as const (Array tuple2!2092 Bool)) false) (h!2046 (toList!717 lt!28707)) true) (content!72 (t!4948 (toList!717 lt!28707)))))))

(assert (= (and d!14675 c!9622) b!68154))

(assert (= (and d!14675 (not c!9622)) b!68155))

(declare-fun m!63997 () Bool)

(assert (=> b!68155 m!63997))

(declare-fun m!63999 () Bool)

(assert (=> b!68155 m!63999))

(assert (=> d!13963 d!14675))

(declare-fun b!68156 () Bool)

(declare-fun res!36707 () Bool)

(declare-fun e!44641 () Bool)

(assert (=> b!68156 (=> (not res!36707) (not e!44641))))

(assert (=> b!68156 (= res!36707 (and (= (size!2071 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001)) (= (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (size!2071 (_values!2130 (v!2478 (underlying!250 thiss!992))))) (bvsge (_size!385 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!385 (v!2478 (underlying!250 thiss!992))) (bvadd (mask!6082 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!68159 () Bool)

(assert (=> b!68159 (= e!44641 (and (bvsge (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!385 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!14677 () Bool)

(declare-fun res!36704 () Bool)

(assert (=> d!14677 (=> (not res!36704) (not e!44641))))

(assert (=> d!14677 (= res!36704 (validMask!0 (mask!6082 (v!2478 (underlying!250 thiss!992)))))))

(assert (=> d!14677 (= (simpleValid!48 (v!2478 (underlying!250 thiss!992))) e!44641)))

(declare-fun b!68157 () Bool)

(declare-fun res!36705 () Bool)

(assert (=> b!68157 (=> (not res!36705) (not e!44641))))

(assert (=> b!68157 (= res!36705 (bvsge (size!2074 (v!2478 (underlying!250 thiss!992))) (_size!385 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!68158 () Bool)

(declare-fun res!36706 () Bool)

(assert (=> b!68158 (=> (not res!36706) (not e!44641))))

(assert (=> b!68158 (= res!36706 (= (size!2074 (v!2478 (underlying!250 thiss!992))) (bvadd (_size!385 (v!2478 (underlying!250 thiss!992))) (bvsdiv (bvadd (extraKeys!2018 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!14677 res!36704) b!68156))

(assert (= (and b!68156 res!36707) b!68157))

(assert (= (and b!68157 res!36705) b!68158))

(assert (= (and b!68158 res!36706) b!68159))

(assert (=> d!14677 m!61069))

(declare-fun m!64001 () Bool)

(assert (=> b!68157 m!64001))

(assert (=> b!68158 m!64001))

(assert (=> d!13897 d!14677))

(declare-fun d!14679 () Bool)

(assert (=> d!14679 (= (get!1120 (getValueByKey!130 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2482 (getValueByKey!130 (toList!717 lt!28877) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13863 d!14679))

(assert (=> d!13863 d!14067))

(declare-fun d!14681 () Bool)

(assert (=> d!14681 (isDefined!83 (getValueByKey!130 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun lt!29705 () Unit!1838)

(assert (=> d!14681 (= lt!29705 (choose!377 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!44642 () Bool)

(assert (=> d!14681 e!44642))

(declare-fun res!36708 () Bool)

(assert (=> d!14681 (=> (not res!36708) (not e!44642))))

(assert (=> d!14681 (= res!36708 (isStrictlySorted!289 (toList!717 call!5541)))))

(assert (=> d!14681 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29705)))

(declare-fun b!68160 () Bool)

(assert (=> b!68160 (= e!44642 (containsKey!134 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14681 res!36708) b!68160))

(assert (=> d!14681 m!61065))

(assert (=> d!14681 m!61809))

(assert (=> d!14681 m!61809))

(assert (=> d!14681 m!61811))

(assert (=> d!14681 m!61065))

(declare-fun m!64003 () Bool)

(assert (=> d!14681 m!64003))

(declare-fun m!64005 () Bool)

(assert (=> d!14681 m!64005))

(assert (=> b!68160 m!61065))

(assert (=> b!68160 m!61805))

(assert (=> b!66983 d!14681))

(assert (=> b!66983 d!14535))

(assert (=> b!66983 d!14537))

(declare-fun d!14683 () Bool)

(declare-fun e!44644 () Bool)

(assert (=> d!14683 e!44644))

(declare-fun res!36709 () Bool)

(assert (=> d!14683 (=> res!36709 e!44644)))

(declare-fun lt!29708 () Bool)

(assert (=> d!14683 (= res!36709 (not lt!29708))))

(declare-fun lt!29706 () Bool)

(assert (=> d!14683 (= lt!29708 lt!29706)))

(declare-fun lt!29709 () Unit!1838)

(declare-fun e!44643 () Unit!1838)

(assert (=> d!14683 (= lt!29709 e!44643)))

(declare-fun c!9623 () Bool)

(assert (=> d!14683 (= c!9623 lt!29706)))

(assert (=> d!14683 (= lt!29706 (containsKey!134 (toList!717 lt!29235) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14683 (= (contains!710 lt!29235 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29708)))

(declare-fun b!68161 () Bool)

(declare-fun lt!29707 () Unit!1838)

(assert (=> b!68161 (= e!44643 lt!29707)))

(assert (=> b!68161 (= lt!29707 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29235) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68161 (isDefined!83 (getValueByKey!130 (toList!717 lt!29235) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68162 () Bool)

(declare-fun Unit!1908 () Unit!1838)

(assert (=> b!68162 (= e!44643 Unit!1908)))

(declare-fun b!68163 () Bool)

(assert (=> b!68163 (= e!44644 (isDefined!83 (getValueByKey!130 (toList!717 lt!29235) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14683 c!9623) b!68161))

(assert (= (and d!14683 (not c!9623)) b!68162))

(assert (= (and d!14683 (not res!36709)) b!68163))

(declare-fun m!64007 () Bool)

(assert (=> d!14683 m!64007))

(declare-fun m!64009 () Bool)

(assert (=> b!68161 m!64009))

(assert (=> b!68161 m!63789))

(assert (=> b!68161 m!63789))

(declare-fun m!64011 () Bool)

(assert (=> b!68161 m!64011))

(assert (=> b!68163 m!63789))

(assert (=> b!68163 m!63789))

(assert (=> b!68163 m!64011))

(assert (=> bm!5637 d!14683))

(declare-fun d!14685 () Bool)

(declare-fun res!36710 () Bool)

(declare-fun e!44645 () Bool)

(assert (=> d!14685 (=> res!36710 e!44645)))

(assert (=> d!14685 (= res!36710 (and ((_ is Cons!1462) (toList!717 call!5541)) (= (_1!1057 (h!2046 (toList!717 call!5541))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!14685 (= (containsKey!134 (toList!717 call!5541) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44645)))

(declare-fun b!68164 () Bool)

(declare-fun e!44646 () Bool)

(assert (=> b!68164 (= e!44645 e!44646)))

(declare-fun res!36711 () Bool)

(assert (=> b!68164 (=> (not res!36711) (not e!44646))))

(assert (=> b!68164 (= res!36711 (and (or (not ((_ is Cons!1462) (toList!717 call!5541))) (bvsle (_1!1057 (h!2046 (toList!717 call!5541))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))) ((_ is Cons!1462) (toList!717 call!5541)) (bvslt (_1!1057 (h!2046 (toList!717 call!5541))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun b!68165 () Bool)

(assert (=> b!68165 (= e!44646 (containsKey!134 (t!4948 (toList!717 call!5541)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14685 (not res!36710)) b!68164))

(assert (= (and b!68164 res!36711) b!68165))

(assert (=> b!68165 m!61065))

(declare-fun m!64013 () Bool)

(assert (=> b!68165 m!64013))

(assert (=> d!13905 d!14685))

(declare-fun d!14687 () Bool)

(assert (=> d!14687 (= (get!1118 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2477 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66812 d!14687))

(assert (=> bm!5605 d!14467))

(assert (=> b!67174 d!13945))

(declare-fun d!14689 () Bool)

(declare-fun c!9624 () Bool)

(assert (=> d!14689 (= c!9624 ((_ is Nil!1463) (toList!717 lt!28675)))))

(declare-fun e!44647 () (InoxSet tuple2!2092))

(assert (=> d!14689 (= (content!72 (toList!717 lt!28675)) e!44647)))

(declare-fun b!68166 () Bool)

(assert (=> b!68166 (= e!44647 ((as const (Array tuple2!2092 Bool)) false))))

(declare-fun b!68167 () Bool)

(assert (=> b!68167 (= e!44647 ((_ map or) (store ((as const (Array tuple2!2092 Bool)) false) (h!2046 (toList!717 lt!28675)) true) (content!72 (t!4948 (toList!717 lt!28675)))))))

(assert (= (and d!14689 c!9624) b!68166))

(assert (= (and d!14689 (not c!9624)) b!68167))

(declare-fun m!64015 () Bool)

(assert (=> b!68167 m!64015))

(assert (=> b!68167 m!62561))

(assert (=> d!13943 d!14689))

(declare-fun b!68168 () Bool)

(declare-fun e!44649 () (_ BitVec 32))

(declare-fun call!5738 () (_ BitVec 32))

(assert (=> b!68168 (= e!44649 call!5738)))

(declare-fun d!14691 () Bool)

(declare-fun lt!29710 () (_ BitVec 32))

(assert (=> d!14691 (and (bvsge lt!29710 #b00000000000000000000000000000000) (bvsle lt!29710 (bvsub (size!2070 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!44648 () (_ BitVec 32))

(assert (=> d!14691 (= lt!29710 e!44648)))

(declare-fun c!9625 () Bool)

(assert (=> d!14691 (= c!9625 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14691 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2070 (_keys!3787 newMap!16)) (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14691 (= (arrayCountValidKeys!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))) lt!29710)))

(declare-fun b!68169 () Bool)

(assert (=> b!68169 (= e!44649 (bvadd #b00000000000000000000000000000001 call!5738))))

(declare-fun b!68170 () Bool)

(assert (=> b!68170 (= e!44648 #b00000000000000000000000000000000)))

(declare-fun b!68171 () Bool)

(assert (=> b!68171 (= e!44648 e!44649)))

(declare-fun c!9626 () Bool)

(assert (=> b!68171 (= c!9626 (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!5735 () Bool)

(assert (=> bm!5735 (= call!5738 (arrayCountValidKeys!0 (_keys!3787 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))))))

(assert (= (and d!14691 c!9625) b!68170))

(assert (= (and d!14691 (not c!9625)) b!68171))

(assert (= (and b!68171 c!9626) b!68169))

(assert (= (and b!68171 (not c!9626)) b!68168))

(assert (= (or b!68169 b!68168) bm!5735))

(assert (=> b!68171 m!62949))

(assert (=> b!68171 m!62949))

(assert (=> b!68171 m!62981))

(declare-fun m!64017 () Bool)

(assert (=> bm!5735 m!64017))

(assert (=> bm!5627 d!14691))

(declare-fun d!14693 () Bool)

(assert (=> d!14693 (isDefined!83 (getValueByKey!130 (toList!717 lt!28703) (_1!1057 lt!28617)))))

(declare-fun lt!29711 () Unit!1838)

(assert (=> d!14693 (= lt!29711 (choose!377 (toList!717 lt!28703) (_1!1057 lt!28617)))))

(declare-fun e!44650 () Bool)

(assert (=> d!14693 e!44650))

(declare-fun res!36712 () Bool)

(assert (=> d!14693 (=> (not res!36712) (not e!44650))))

(assert (=> d!14693 (= res!36712 (isStrictlySorted!289 (toList!717 lt!28703)))))

(assert (=> d!14693 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!28703) (_1!1057 lt!28617)) lt!29711)))

(declare-fun b!68172 () Bool)

(assert (=> b!68172 (= e!44650 (containsKey!134 (toList!717 lt!28703) (_1!1057 lt!28617)))))

(assert (= (and d!14693 res!36712) b!68172))

(assert (=> d!14693 m!61261))

(assert (=> d!14693 m!61261))

(assert (=> d!14693 m!61409))

(declare-fun m!64019 () Bool)

(assert (=> d!14693 m!64019))

(declare-fun m!64021 () Bool)

(assert (=> d!14693 m!64021))

(assert (=> b!68172 m!61405))

(assert (=> b!66731 d!14693))

(assert (=> b!66731 d!14573))

(assert (=> b!66731 d!13901))

(declare-fun d!14695 () Bool)

(assert (=> d!14695 (= (apply!72 lt!29235 (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000)) (get!1120 (getValueByKey!130 (toList!717 lt!29235) (select (arr!1835 (_keys!3787 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2946 () Bool)

(assert (= bs!2946 d!14695))

(assert (=> bs!2946 m!61465))

(assert (=> bs!2946 m!62243))

(assert (=> bs!2946 m!62243))

(declare-fun m!64023 () Bool)

(assert (=> bs!2946 m!64023))

(assert (=> b!67184 d!14695))

(declare-fun d!14697 () Bool)

(declare-fun c!9627 () Bool)

(assert (=> d!14697 (= c!9627 ((_ is ValueCellFull!882) (select (arr!1836 (ite c!9195 (_values!2130 newMap!16) lt!28797)) #b00000000000000000000000000000000)))))

(declare-fun e!44651 () V!2915)

(assert (=> d!14697 (= (get!1116 (select (arr!1836 (ite c!9195 (_values!2130 newMap!16) lt!28797)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44651)))

(declare-fun b!68173 () Bool)

(assert (=> b!68173 (= e!44651 (get!1118 (select (arr!1836 (ite c!9195 (_values!2130 newMap!16) lt!28797)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68174 () Bool)

(assert (=> b!68174 (= e!44651 (get!1119 (select (arr!1836 (ite c!9195 (_values!2130 newMap!16) lt!28797)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14697 c!9627) b!68173))

(assert (= (and d!14697 (not c!9627)) b!68174))

(assert (=> b!68173 m!62211))

(assert (=> b!68173 m!61491))

(declare-fun m!64025 () Bool)

(assert (=> b!68173 m!64025))

(assert (=> b!68174 m!62211))

(assert (=> b!68174 m!61491))

(declare-fun m!64027 () Bool)

(assert (=> b!68174 m!64027))

(assert (=> b!67184 d!14697))

(declare-fun d!14699 () Bool)

(assert (=> d!14699 (= (inRange!0 (index!3061 lt!28949) (mask!6082 newMap!16)) (and (bvsge (index!3061 lt!28949) #b00000000000000000000000000000000) (bvslt (index!3061 lt!28949) (bvadd (mask!6082 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!66885 d!14699))

(assert (=> bm!5581 d!14337))

(declare-fun d!14701 () Bool)

(declare-fun lt!29712 () Bool)

(assert (=> d!14701 (= lt!29712 (select (content!72 (toList!717 lt!28968)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44652 () Bool)

(assert (=> d!14701 (= lt!29712 e!44652)))

(declare-fun res!36713 () Bool)

(assert (=> d!14701 (=> (not res!36713) (not e!44652))))

(assert (=> d!14701 (= res!36713 ((_ is Cons!1462) (toList!717 lt!28968)))))

(assert (=> d!14701 (= (contains!712 (toList!717 lt!28968) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))) lt!29712)))

(declare-fun b!68175 () Bool)

(declare-fun e!44653 () Bool)

(assert (=> b!68175 (= e!44652 e!44653)))

(declare-fun res!36714 () Bool)

(assert (=> b!68175 (=> res!36714 e!44653)))

(assert (=> b!68175 (= res!36714 (= (h!2046 (toList!717 lt!28968)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!68176 () Bool)

(assert (=> b!68176 (= e!44653 (contains!712 (t!4948 (toList!717 lt!28968)) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14701 res!36713) b!68175))

(assert (= (and b!68175 (not res!36714)) b!68176))

(declare-fun m!64029 () Bool)

(assert (=> d!14701 m!64029))

(declare-fun m!64031 () Bool)

(assert (=> d!14701 m!64031))

(declare-fun m!64033 () Bool)

(assert (=> b!68176 m!64033))

(assert (=> b!66911 d!14701))

(declare-fun lt!29713 () Bool)

(declare-fun d!14703 () Bool)

(assert (=> d!14703 (= lt!29713 (select (content!72 (toList!717 lt!29169)) (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44654 () Bool)

(assert (=> d!14703 (= lt!29713 e!44654)))

(declare-fun res!36715 () Bool)

(assert (=> d!14703 (=> (not res!36715) (not e!44654))))

(assert (=> d!14703 (= res!36715 ((_ is Cons!1462) (toList!717 lt!29169)))))

(assert (=> d!14703 (= (contains!712 (toList!717 lt!29169) (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))) lt!29713)))

(declare-fun b!68177 () Bool)

(declare-fun e!44655 () Bool)

(assert (=> b!68177 (= e!44654 e!44655)))

(declare-fun res!36716 () Bool)

(assert (=> b!68177 (=> res!36716 e!44655)))

(assert (=> b!68177 (= res!36716 (= (h!2046 (toList!717 lt!29169)) (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68178 () Bool)

(assert (=> b!68178 (= e!44655 (contains!712 (t!4948 (toList!717 lt!29169)) (ite (or c!9216 c!9215) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (v!2478 (underlying!250 thiss!992)))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (v!2478 (underlying!250 thiss!992)))))))))

(assert (= (and d!14703 res!36715) b!68177))

(assert (= (and b!68177 (not res!36716)) b!68178))

(declare-fun m!64035 () Bool)

(assert (=> d!14703 m!64035))

(declare-fun m!64037 () Bool)

(assert (=> d!14703 m!64037))

(declare-fun m!64039 () Bool)

(assert (=> b!68178 m!64039))

(assert (=> b!67113 d!14703))

(declare-fun d!14705 () Bool)

(declare-fun c!9628 () Bool)

(assert (=> d!14705 (= c!9628 (and ((_ is Cons!1462) (t!4948 lt!28672)) (= (_1!1057 (h!2046 (t!4948 lt!28672))) (_1!1057 lt!28617))))))

(declare-fun e!44656 () Option!136)

(assert (=> d!14705 (= (getValueByKey!130 (t!4948 lt!28672) (_1!1057 lt!28617)) e!44656)))

(declare-fun b!68180 () Bool)

(declare-fun e!44657 () Option!136)

(assert (=> b!68180 (= e!44656 e!44657)))

(declare-fun c!9629 () Bool)

(assert (=> b!68180 (= c!9629 (and ((_ is Cons!1462) (t!4948 lt!28672)) (not (= (_1!1057 (h!2046 (t!4948 lt!28672))) (_1!1057 lt!28617)))))))

(declare-fun b!68179 () Bool)

(assert (=> b!68179 (= e!44656 (Some!135 (_2!1057 (h!2046 (t!4948 lt!28672)))))))

(declare-fun b!68181 () Bool)

(assert (=> b!68181 (= e!44657 (getValueByKey!130 (t!4948 (t!4948 lt!28672)) (_1!1057 lt!28617)))))

(declare-fun b!68182 () Bool)

(assert (=> b!68182 (= e!44657 None!134)))

(assert (= (and d!14705 c!9628) b!68179))

(assert (= (and d!14705 (not c!9628)) b!68180))

(assert (= (and b!68180 c!9629) b!68181))

(assert (= (and b!68180 (not c!9629)) b!68182))

(declare-fun m!64041 () Bool)

(assert (=> b!68181 m!64041))

(assert (=> b!66867 d!14705))

(declare-fun d!14707 () Bool)

(assert (=> d!14707 (contains!710 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))

(declare-fun lt!29716 () Unit!1838)

(declare-fun choose!378 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 64) (_ BitVec 32) Int) Unit!1838)

(assert (=> d!14707 (= lt!29716 (choose!378 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(assert (=> d!14707 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14707 (= (lemmaArrayContainsKeyThenInListMap!10 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29716)))

(declare-fun bs!2947 () Bool)

(assert (= bs!2947 d!14707))

(assert (=> bs!2947 m!61299))

(assert (=> bs!2947 m!61299))

(assert (=> bs!2947 m!61065))

(assert (=> bs!2947 m!61923))

(assert (=> bs!2947 m!61065))

(declare-fun m!64043 () Bool)

(assert (=> bs!2947 m!64043))

(assert (=> bs!2947 m!61485))

(assert (=> b!67051 d!14707))

(declare-fun d!14709 () Bool)

(declare-fun e!44659 () Bool)

(assert (=> d!14709 e!44659))

(declare-fun res!36717 () Bool)

(assert (=> d!14709 (=> res!36717 e!44659)))

(declare-fun lt!29719 () Bool)

(assert (=> d!14709 (= res!36717 (not lt!29719))))

(declare-fun lt!29717 () Bool)

(assert (=> d!14709 (= lt!29719 lt!29717)))

(declare-fun lt!29720 () Unit!1838)

(declare-fun e!44658 () Unit!1838)

(assert (=> d!14709 (= lt!29720 e!44658)))

(declare-fun c!9630 () Bool)

(assert (=> d!14709 (= c!9630 lt!29717)))

(assert (=> d!14709 (= lt!29717 (containsKey!134 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14709 (= (contains!710 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29719)))

(declare-fun b!68183 () Bool)

(declare-fun lt!29718 () Unit!1838)

(assert (=> b!68183 (= e!44658 lt!29718)))

(assert (=> b!68183 (= lt!29718 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!68183 (isDefined!83 (getValueByKey!130 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!68184 () Bool)

(declare-fun Unit!1909 () Unit!1838)

(assert (=> b!68184 (= e!44658 Unit!1909)))

(declare-fun b!68185 () Bool)

(assert (=> b!68185 (= e!44659 (isDefined!83 (getValueByKey!130 (toList!717 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (= (and d!14709 c!9630) b!68183))

(assert (= (and d!14709 (not c!9630)) b!68184))

(assert (= (and d!14709 (not res!36717)) b!68185))

(assert (=> d!14709 m!61065))

(declare-fun m!64045 () Bool)

(assert (=> d!14709 m!64045))

(assert (=> b!68183 m!61065))

(declare-fun m!64047 () Bool)

(assert (=> b!68183 m!64047))

(assert (=> b!68183 m!61065))

(declare-fun m!64049 () Bool)

(assert (=> b!68183 m!64049))

(assert (=> b!68183 m!64049))

(declare-fun m!64051 () Bool)

(assert (=> b!68183 m!64051))

(assert (=> b!68185 m!61065))

(assert (=> b!68185 m!64049))

(assert (=> b!68185 m!64049))

(assert (=> b!68185 m!64051))

(assert (=> b!67051 d!14709))

(assert (=> b!67051 d!13903))

(assert (=> d!13837 d!13835))

(declare-fun d!14711 () Bool)

(assert (=> d!14711 (= (getValueByKey!130 lt!28708 (_1!1057 lt!28624)) (Some!135 (_2!1057 lt!28624)))))

(assert (=> d!14711 true))

(declare-fun _$22!370 () Unit!1838)

(assert (=> d!14711 (= (choose!367 lt!28708 (_1!1057 lt!28624) (_2!1057 lt!28624)) _$22!370)))

(declare-fun bs!2948 () Bool)

(assert (= bs!2948 d!14711))

(assert (=> bs!2948 m!61267))

(assert (=> d!13837 d!14711))

(declare-fun d!14713 () Bool)

(declare-fun res!36718 () Bool)

(declare-fun e!44660 () Bool)

(assert (=> d!14713 (=> res!36718 e!44660)))

(assert (=> d!14713 (= res!36718 (or ((_ is Nil!1463) lt!28708) ((_ is Nil!1463) (t!4948 lt!28708))))))

(assert (=> d!14713 (= (isStrictlySorted!289 lt!28708) e!44660)))

(declare-fun b!68186 () Bool)

(declare-fun e!44661 () Bool)

(assert (=> b!68186 (= e!44660 e!44661)))

(declare-fun res!36719 () Bool)

(assert (=> b!68186 (=> (not res!36719) (not e!44661))))

(assert (=> b!68186 (= res!36719 (bvslt (_1!1057 (h!2046 lt!28708)) (_1!1057 (h!2046 (t!4948 lt!28708)))))))

(declare-fun b!68187 () Bool)

(assert (=> b!68187 (= e!44661 (isStrictlySorted!289 (t!4948 lt!28708)))))

(assert (= (and d!14713 (not res!36718)) b!68186))

(assert (= (and b!68186 res!36719) b!68187))

(declare-fun m!64053 () Bool)

(assert (=> b!68187 m!64053))

(assert (=> d!13837 d!14713))

(declare-fun d!14715 () Bool)

(declare-fun e!44663 () Bool)

(assert (=> d!14715 e!44663))

(declare-fun res!36720 () Bool)

(assert (=> d!14715 (=> res!36720 e!44663)))

(declare-fun lt!29723 () Bool)

(assert (=> d!14715 (= res!36720 (not lt!29723))))

(declare-fun lt!29721 () Bool)

(assert (=> d!14715 (= lt!29723 lt!29721)))

(declare-fun lt!29724 () Unit!1838)

(declare-fun e!44662 () Unit!1838)

(assert (=> d!14715 (= lt!29724 e!44662)))

(declare-fun c!9631 () Bool)

(assert (=> d!14715 (= c!9631 lt!29721)))

(assert (=> d!14715 (= lt!29721 (containsKey!134 (toList!717 lt!29180) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14715 (= (contains!710 lt!29180 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29723)))

(declare-fun b!68188 () Bool)

(declare-fun lt!29722 () Unit!1838)

(assert (=> b!68188 (= e!44662 lt!29722)))

(assert (=> b!68188 (= lt!29722 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 lt!29180) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!68188 (isDefined!83 (getValueByKey!130 (toList!717 lt!29180) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68189 () Bool)

(declare-fun Unit!1910 () Unit!1838)

(assert (=> b!68189 (= e!44662 Unit!1910)))

(declare-fun b!68190 () Bool)

(assert (=> b!68190 (= e!44663 (isDefined!83 (getValueByKey!130 (toList!717 lt!29180) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!14715 c!9631) b!68188))

(assert (= (and d!14715 (not c!9631)) b!68189))

(assert (= (and d!14715 (not res!36720)) b!68190))

(declare-fun m!64055 () Bool)

(assert (=> d!14715 m!64055))

(declare-fun m!64057 () Bool)

(assert (=> b!68188 m!64057))

(assert (=> b!68188 m!62073))

(assert (=> b!68188 m!62073))

(declare-fun m!64059 () Bool)

(assert (=> b!68188 m!64059))

(assert (=> b!68190 m!62073))

(assert (=> b!68190 m!62073))

(assert (=> b!68190 m!64059))

(assert (=> d!13971 d!14715))

(declare-fun c!9632 () Bool)

(declare-fun d!14717 () Bool)

(assert (=> d!14717 (= c!9632 (and ((_ is Cons!1462) lt!29181) (= (_1!1057 (h!2046 lt!29181)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!44664 () Option!136)

(assert (=> d!14717 (= (getValueByKey!130 lt!29181 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!44664)))

(declare-fun b!68192 () Bool)

(declare-fun e!44665 () Option!136)

(assert (=> b!68192 (= e!44664 e!44665)))

(declare-fun c!9633 () Bool)

(assert (=> b!68192 (= c!9633 (and ((_ is Cons!1462) lt!29181) (not (= (_1!1057 (h!2046 lt!29181)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!68191 () Bool)

(assert (=> b!68191 (= e!44664 (Some!135 (_2!1057 (h!2046 lt!29181))))))

(declare-fun b!68193 () Bool)

(assert (=> b!68193 (= e!44665 (getValueByKey!130 (t!4948 lt!29181) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68194 () Bool)

(assert (=> b!68194 (= e!44665 None!134)))

(assert (= (and d!14717 c!9632) b!68191))

(assert (= (and d!14717 (not c!9632)) b!68192))

(assert (= (and b!68192 c!9633) b!68193))

(assert (= (and b!68192 (not c!9633)) b!68194))

(declare-fun m!64061 () Bool)

(assert (=> b!68193 m!64061))

(assert (=> d!13971 d!14717))

(declare-fun d!14719 () Bool)

(assert (=> d!14719 (= (getValueByKey!130 lt!29181 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!29725 () Unit!1838)

(assert (=> d!14719 (= lt!29725 (choose!367 lt!29181 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!44666 () Bool)

(assert (=> d!14719 e!44666))

(declare-fun res!36721 () Bool)

(assert (=> d!14719 (=> (not res!36721) (not e!44666))))

(assert (=> d!14719 (= res!36721 (isStrictlySorted!289 lt!29181))))

(assert (=> d!14719 (= (lemmaContainsTupThenGetReturnValue!47 lt!29181 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29725)))

(declare-fun b!68195 () Bool)

(declare-fun res!36722 () Bool)

(assert (=> b!68195 (=> (not res!36722) (not e!44666))))

(assert (=> b!68195 (= res!36722 (containsKey!134 lt!29181 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68196 () Bool)

(assert (=> b!68196 (= e!44666 (contains!712 lt!29181 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!14719 res!36721) b!68195))

(assert (= (and b!68195 res!36722) b!68196))

(assert (=> d!14719 m!62067))

(declare-fun m!64063 () Bool)

(assert (=> d!14719 m!64063))

(declare-fun m!64065 () Bool)

(assert (=> d!14719 m!64065))

(declare-fun m!64067 () Bool)

(assert (=> b!68195 m!64067))

(declare-fun m!64069 () Bool)

(assert (=> b!68196 m!64069))

(assert (=> d!13971 d!14719))

(declare-fun b!68197 () Bool)

(declare-fun e!44669 () List!1466)

(declare-fun call!5739 () List!1466)

(assert (=> b!68197 (= e!44669 call!5739)))

(declare-fun bm!5736 () Bool)

(declare-fun call!5740 () List!1466)

(declare-fun call!5741 () List!1466)

(assert (=> bm!5736 (= call!5740 call!5741)))

(declare-fun e!44671 () Bool)

(declare-fun lt!29726 () List!1466)

(declare-fun b!68198 () Bool)

(assert (=> b!68198 (= e!44671 (contains!712 lt!29726 (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!68199 () Bool)

(assert (=> b!68199 (= e!44669 call!5739)))

(declare-fun b!68200 () Bool)

(declare-fun e!44667 () List!1466)

(assert (=> b!68200 (= e!44667 (insertStrictlySorted!50 (t!4948 (toList!717 call!5478)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68201 () Bool)

(declare-fun e!44670 () List!1466)

(assert (=> b!68201 (= e!44670 call!5741)))

(declare-fun c!9634 () Bool)

(declare-fun b!68202 () Bool)

(declare-fun c!9636 () Bool)

(assert (=> b!68202 (= e!44667 (ite c!9634 (t!4948 (toList!717 call!5478)) (ite c!9636 (Cons!1462 (h!2046 (toList!717 call!5478)) (t!4948 (toList!717 call!5478))) Nil!1463)))))

(declare-fun d!14721 () Bool)

(assert (=> d!14721 e!44671))

(declare-fun res!36724 () Bool)

(assert (=> d!14721 (=> (not res!36724) (not e!44671))))

(assert (=> d!14721 (= res!36724 (isStrictlySorted!289 lt!29726))))

(assert (=> d!14721 (= lt!29726 e!44670)))

(declare-fun c!9637 () Bool)

(assert (=> d!14721 (= c!9637 (and ((_ is Cons!1462) (toList!717 call!5478)) (bvslt (_1!1057 (h!2046 (toList!717 call!5478))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!14721 (isStrictlySorted!289 (toList!717 call!5478))))

(assert (=> d!14721 (= (insertStrictlySorted!50 (toList!717 call!5478) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29726)))

(declare-fun bm!5737 () Bool)

(assert (=> bm!5737 (= call!5739 call!5740)))

(declare-fun b!68203 () Bool)

(declare-fun res!36723 () Bool)

(assert (=> b!68203 (=> (not res!36723) (not e!44671))))

(assert (=> b!68203 (= res!36723 (containsKey!134 lt!29726 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68204 () Bool)

(declare-fun e!44668 () List!1466)

(assert (=> b!68204 (= e!44668 call!5740)))

(declare-fun b!68205 () Bool)

(assert (=> b!68205 (= c!9636 (and ((_ is Cons!1462) (toList!717 call!5478)) (bvsgt (_1!1057 (h!2046 (toList!717 call!5478))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!68205 (= e!44668 e!44669)))

(declare-fun b!68206 () Bool)

(assert (=> b!68206 (= e!44670 e!44668)))

(assert (=> b!68206 (= c!9634 (and ((_ is Cons!1462) (toList!717 call!5478)) (= (_1!1057 (h!2046 (toList!717 call!5478))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!5738 () Bool)

(assert (=> bm!5738 (= call!5741 ($colon$colon!63 e!44667 (ite c!9637 (h!2046 (toList!717 call!5478)) (tuple2!2093 (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!9635 () Bool)

(assert (=> bm!5738 (= c!9635 c!9637)))

(assert (= (and d!14721 c!9637) b!68201))

(assert (= (and d!14721 (not c!9637)) b!68206))

(assert (= (and b!68206 c!9634) b!68204))

(assert (= (and b!68206 (not c!9634)) b!68205))

(assert (= (and b!68205 c!9636) b!68199))

(assert (= (and b!68205 (not c!9636)) b!68197))

(assert (= (or b!68199 b!68197) bm!5737))

(assert (= (or b!68204 bm!5737) bm!5736))

(assert (= (or b!68201 bm!5736) bm!5738))

(assert (= (and bm!5738 c!9635) b!68200))

(assert (= (and bm!5738 (not c!9635)) b!68202))

(assert (= (and d!14721 res!36724) b!68203))

(assert (= (and b!68203 res!36723) b!68198))

(declare-fun m!64071 () Bool)

(assert (=> b!68198 m!64071))

(declare-fun m!64073 () Bool)

(assert (=> d!14721 m!64073))

(declare-fun m!64075 () Bool)

(assert (=> d!14721 m!64075))

(declare-fun m!64077 () Bool)

(assert (=> bm!5738 m!64077))

(declare-fun m!64079 () Bool)

(assert (=> b!68203 m!64079))

(declare-fun m!64081 () Bool)

(assert (=> b!68200 m!64081))

(assert (=> d!13971 d!14721))

(declare-fun b!68207 () Bool)

(declare-fun e!44681 () ListLongMap!1403)

(declare-fun call!5747 () ListLongMap!1403)

(assert (=> b!68207 (= e!44681 call!5747)))

(declare-fun b!68208 () Bool)

(declare-fun e!44676 () ListLongMap!1403)

(assert (=> b!68208 (= e!44676 call!5747)))

(declare-fun b!68209 () Bool)

(declare-fun e!44679 () Bool)

(declare-fun lt!29747 () ListLongMap!1403)

(assert (=> b!68209 (= e!44679 (= (apply!72 lt!29747 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 (_2!1058 lt!28812))))))

(declare-fun bm!5739 () Bool)

(declare-fun call!5748 () ListLongMap!1403)

(assert (=> bm!5739 (= call!5748 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (_2!1058 lt!28812)) (_values!2130 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812)) (extraKeys!2018 (_2!1058 lt!28812)) (zeroValue!2055 (_2!1058 lt!28812)) (minValue!2055 (_2!1058 lt!28812)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1058 lt!28812))))))

(declare-fun bm!5740 () Bool)

(declare-fun call!5742 () Bool)

(assert (=> bm!5740 (= call!5742 (contains!710 lt!29747 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5741 () Bool)

(declare-fun call!5745 () ListLongMap!1403)

(declare-fun call!5743 () ListLongMap!1403)

(assert (=> bm!5741 (= call!5745 call!5743)))

(declare-fun b!68210 () Bool)

(declare-fun e!44682 () ListLongMap!1403)

(declare-fun call!5746 () ListLongMap!1403)

(assert (=> b!68210 (= e!44682 (+!89 call!5746 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (_2!1058 lt!28812)))))))

(declare-fun b!68211 () Bool)

(declare-fun e!44674 () Unit!1838)

(declare-fun lt!29748 () Unit!1838)

(assert (=> b!68211 (= e!44674 lt!29748)))

(declare-fun lt!29744 () ListLongMap!1403)

(assert (=> b!68211 (= lt!29744 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (_2!1058 lt!28812)) (_values!2130 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812)) (extraKeys!2018 (_2!1058 lt!28812)) (zeroValue!2055 (_2!1058 lt!28812)) (minValue!2055 (_2!1058 lt!28812)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1058 lt!28812))))))

(declare-fun lt!29746 () (_ BitVec 64))

(assert (=> b!68211 (= lt!29746 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29736 () (_ BitVec 64))

(assert (=> b!68211 (= lt!29736 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000))))

(declare-fun lt!29735 () Unit!1838)

(assert (=> b!68211 (= lt!29735 (addStillContains!48 lt!29744 lt!29746 (zeroValue!2055 (_2!1058 lt!28812)) lt!29736))))

(assert (=> b!68211 (contains!710 (+!89 lt!29744 (tuple2!2093 lt!29746 (zeroValue!2055 (_2!1058 lt!28812)))) lt!29736)))

(declare-fun lt!29728 () Unit!1838)

(assert (=> b!68211 (= lt!29728 lt!29735)))

(declare-fun lt!29741 () ListLongMap!1403)

(assert (=> b!68211 (= lt!29741 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (_2!1058 lt!28812)) (_values!2130 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812)) (extraKeys!2018 (_2!1058 lt!28812)) (zeroValue!2055 (_2!1058 lt!28812)) (minValue!2055 (_2!1058 lt!28812)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1058 lt!28812))))))

(declare-fun lt!29738 () (_ BitVec 64))

(assert (=> b!68211 (= lt!29738 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29730 () (_ BitVec 64))

(assert (=> b!68211 (= lt!29730 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000))))

(declare-fun lt!29731 () Unit!1838)

(assert (=> b!68211 (= lt!29731 (addApplyDifferent!48 lt!29741 lt!29738 (minValue!2055 (_2!1058 lt!28812)) lt!29730))))

(assert (=> b!68211 (= (apply!72 (+!89 lt!29741 (tuple2!2093 lt!29738 (minValue!2055 (_2!1058 lt!28812)))) lt!29730) (apply!72 lt!29741 lt!29730))))

(declare-fun lt!29745 () Unit!1838)

(assert (=> b!68211 (= lt!29745 lt!29731)))

(declare-fun lt!29733 () ListLongMap!1403)

(assert (=> b!68211 (= lt!29733 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (_2!1058 lt!28812)) (_values!2130 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812)) (extraKeys!2018 (_2!1058 lt!28812)) (zeroValue!2055 (_2!1058 lt!28812)) (minValue!2055 (_2!1058 lt!28812)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1058 lt!28812))))))

(declare-fun lt!29732 () (_ BitVec 64))

(assert (=> b!68211 (= lt!29732 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29743 () (_ BitVec 64))

(assert (=> b!68211 (= lt!29743 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000))))

(declare-fun lt!29742 () Unit!1838)

(assert (=> b!68211 (= lt!29742 (addApplyDifferent!48 lt!29733 lt!29732 (zeroValue!2055 (_2!1058 lt!28812)) lt!29743))))

(assert (=> b!68211 (= (apply!72 (+!89 lt!29733 (tuple2!2093 lt!29732 (zeroValue!2055 (_2!1058 lt!28812)))) lt!29743) (apply!72 lt!29733 lt!29743))))

(declare-fun lt!29734 () Unit!1838)

(assert (=> b!68211 (= lt!29734 lt!29742)))

(declare-fun lt!29737 () ListLongMap!1403)

(assert (=> b!68211 (= lt!29737 (getCurrentListMapNoExtraKeys!54 (_keys!3787 (_2!1058 lt!28812)) (_values!2130 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812)) (extraKeys!2018 (_2!1058 lt!28812)) (zeroValue!2055 (_2!1058 lt!28812)) (minValue!2055 (_2!1058 lt!28812)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1058 lt!28812))))))

(declare-fun lt!29727 () (_ BitVec 64))

(assert (=> b!68211 (= lt!29727 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29740 () (_ BitVec 64))

(assert (=> b!68211 (= lt!29740 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000))))

(assert (=> b!68211 (= lt!29748 (addApplyDifferent!48 lt!29737 lt!29727 (minValue!2055 (_2!1058 lt!28812)) lt!29740))))

(assert (=> b!68211 (= (apply!72 (+!89 lt!29737 (tuple2!2093 lt!29727 (minValue!2055 (_2!1058 lt!28812)))) lt!29740) (apply!72 lt!29737 lt!29740))))

(declare-fun b!68212 () Bool)

(declare-fun e!44680 () Bool)

(assert (=> b!68212 (= e!44680 (= (apply!72 lt!29747 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (_values!2130 (_2!1058 lt!28812))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 (_2!1058 lt!28812)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68212 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (_values!2130 (_2!1058 lt!28812)))))))

(assert (=> b!68212 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))))))

(declare-fun b!68213 () Bool)

(assert (=> b!68213 (= e!44682 e!44681)))

(declare-fun c!9640 () Bool)

(assert (=> b!68213 (= c!9640 (and (not (= (bvand (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14723 () Bool)

(declare-fun e!44678 () Bool)

(assert (=> d!14723 e!44678))

(declare-fun res!36730 () Bool)

(assert (=> d!14723 (=> (not res!36730) (not e!44678))))

(assert (=> d!14723 (= res!36730 (or (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))))))))

(declare-fun lt!29729 () ListLongMap!1403)

(assert (=> d!14723 (= lt!29747 lt!29729)))

(declare-fun lt!29739 () Unit!1838)

(assert (=> d!14723 (= lt!29739 e!44674)))

(declare-fun c!9642 () Bool)

(declare-fun e!44683 () Bool)

(assert (=> d!14723 (= c!9642 e!44683)))

(declare-fun res!36732 () Bool)

(assert (=> d!14723 (=> (not res!36732) (not e!44683))))

(assert (=> d!14723 (= res!36732 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))))))

(assert (=> d!14723 (= lt!29729 e!44682)))

(declare-fun c!9641 () Bool)

(assert (=> d!14723 (= c!9641 (and (not (= (bvand (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14723 (validMask!0 (mask!6082 (_2!1058 lt!28812)))))

(assert (=> d!14723 (= (getCurrentListMap!415 (_keys!3787 (_2!1058 lt!28812)) (_values!2130 (_2!1058 lt!28812)) (mask!6082 (_2!1058 lt!28812)) (extraKeys!2018 (_2!1058 lt!28812)) (zeroValue!2055 (_2!1058 lt!28812)) (minValue!2055 (_2!1058 lt!28812)) #b00000000000000000000000000000000 (defaultEntry!2147 (_2!1058 lt!28812))) lt!29747)))

(declare-fun b!68214 () Bool)

(declare-fun e!44677 () Bool)

(declare-fun call!5744 () Bool)

(assert (=> b!68214 (= e!44677 (not call!5744))))

(declare-fun b!68215 () Bool)

(declare-fun res!36729 () Bool)

(assert (=> b!68215 (=> (not res!36729) (not e!44678))))

(assert (=> b!68215 (= res!36729 e!44677)))

(declare-fun c!9639 () Bool)

(assert (=> b!68215 (= c!9639 (not (= (bvand (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5742 () Bool)

(assert (=> bm!5742 (= call!5747 call!5746)))

(declare-fun b!68216 () Bool)

(declare-fun e!44672 () Bool)

(assert (=> b!68216 (= e!44678 e!44672)))

(declare-fun c!9638 () Bool)

(assert (=> b!68216 (= c!9638 (not (= (bvand (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68217 () Bool)

(assert (=> b!68217 (= e!44672 e!44679)))

(declare-fun res!36726 () Bool)

(assert (=> b!68217 (= res!36726 call!5742)))

(assert (=> b!68217 (=> (not res!36726) (not e!44679))))

(declare-fun bm!5743 () Bool)

(assert (=> bm!5743 (= call!5746 (+!89 (ite c!9641 call!5748 (ite c!9640 call!5743 call!5745)) (ite (or c!9641 c!9640) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 (_2!1058 lt!28812))) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 (_2!1058 lt!28812))))))))

(declare-fun b!68218 () Bool)

(declare-fun c!9643 () Bool)

(assert (=> b!68218 (= c!9643 (and (not (= (bvand (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 (_2!1058 lt!28812)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68218 (= e!44681 e!44676)))

(declare-fun bm!5744 () Bool)

(assert (=> bm!5744 (= call!5743 call!5748)))

(declare-fun b!68219 () Bool)

(assert (=> b!68219 (= e!44683 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000)))))

(declare-fun b!68220 () Bool)

(declare-fun res!36728 () Bool)

(assert (=> b!68220 (=> (not res!36728) (not e!44678))))

(declare-fun e!44684 () Bool)

(assert (=> b!68220 (= res!36728 e!44684)))

(declare-fun res!36725 () Bool)

(assert (=> b!68220 (=> res!36725 e!44684)))

(declare-fun e!44675 () Bool)

(assert (=> b!68220 (= res!36725 (not e!44675))))

(declare-fun res!36727 () Bool)

(assert (=> b!68220 (=> (not res!36727) (not e!44675))))

(assert (=> b!68220 (= res!36727 (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))))))

(declare-fun b!68221 () Bool)

(declare-fun e!44673 () Bool)

(assert (=> b!68221 (= e!44677 e!44673)))

(declare-fun res!36733 () Bool)

(assert (=> b!68221 (= res!36733 call!5744)))

(assert (=> b!68221 (=> (not res!36733) (not e!44673))))

(declare-fun b!68222 () Bool)

(assert (=> b!68222 (= e!44672 (not call!5742))))

(declare-fun b!68223 () Bool)

(assert (=> b!68223 (= e!44676 call!5745)))

(declare-fun b!68224 () Bool)

(declare-fun Unit!1911 () Unit!1838)

(assert (=> b!68224 (= e!44674 Unit!1911)))

(declare-fun b!68225 () Bool)

(assert (=> b!68225 (= e!44684 e!44680)))

(declare-fun res!36731 () Bool)

(assert (=> b!68225 (=> (not res!36731) (not e!44680))))

(assert (=> b!68225 (= res!36731 (contains!710 lt!29747 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000)))))

(assert (=> b!68225 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (_keys!3787 (_2!1058 lt!28812)))))))

(declare-fun bm!5745 () Bool)

(assert (=> bm!5745 (= call!5744 (contains!710 lt!29747 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68226 () Bool)

(assert (=> b!68226 (= e!44675 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (_2!1058 lt!28812))) #b00000000000000000000000000000000)))))

(declare-fun b!68227 () Bool)

(assert (=> b!68227 (= e!44673 (= (apply!72 lt!29747 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 (_2!1058 lt!28812))))))

(assert (= (and d!14723 c!9641) b!68210))

(assert (= (and d!14723 (not c!9641)) b!68213))

(assert (= (and b!68213 c!9640) b!68207))

(assert (= (and b!68213 (not c!9640)) b!68218))

(assert (= (and b!68218 c!9643) b!68208))

(assert (= (and b!68218 (not c!9643)) b!68223))

(assert (= (or b!68208 b!68223) bm!5741))

(assert (= (or b!68207 bm!5741) bm!5744))

(assert (= (or b!68207 b!68208) bm!5742))

(assert (= (or b!68210 bm!5744) bm!5739))

(assert (= (or b!68210 bm!5742) bm!5743))

(assert (= (and d!14723 res!36732) b!68219))

(assert (= (and d!14723 c!9642) b!68211))

(assert (= (and d!14723 (not c!9642)) b!68224))

(assert (= (and d!14723 res!36730) b!68220))

(assert (= (and b!68220 res!36727) b!68226))

(assert (= (and b!68220 (not res!36725)) b!68225))

(assert (= (and b!68225 res!36731) b!68212))

(assert (= (and b!68220 res!36728) b!68215))

(assert (= (and b!68215 c!9639) b!68221))

(assert (= (and b!68215 (not c!9639)) b!68214))

(assert (= (and b!68221 res!36733) b!68227))

(assert (= (or b!68221 b!68214) bm!5745))

(assert (= (and b!68215 res!36729) b!68216))

(assert (= (and b!68216 c!9638) b!68217))

(assert (= (and b!68216 (not c!9638)) b!68222))

(assert (= (and b!68217 res!36726) b!68209))

(assert (= (or b!68217 b!68222) bm!5740))

(declare-fun b_lambda!3037 () Bool)

(assert (=> (not b_lambda!3037) (not b!68212)))

(declare-fun tb!1469 () Bool)

(declare-fun t!4960 () Bool)

(assert (=> (and b!66357 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 (_2!1058 lt!28812))) t!4960) tb!1469))

(declare-fun result!2595 () Bool)

(assert (=> tb!1469 (= result!2595 tp_is_empty!2451)))

(assert (=> b!68212 t!4960))

(declare-fun b_and!4199 () Bool)

(assert (= b_and!4195 (and (=> t!4960 result!2595) b_and!4199)))

(declare-fun tb!1471 () Bool)

(declare-fun t!4962 () Bool)

(assert (=> (and b!66361 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (_2!1058 lt!28812))) t!4962) tb!1471))

(declare-fun result!2597 () Bool)

(assert (= result!2597 result!2595))

(assert (=> b!68212 t!4962))

(declare-fun b_and!4201 () Bool)

(assert (= b_and!4197 (and (=> t!4962 result!2597) b_and!4201)))

(declare-fun m!64083 () Bool)

(assert (=> b!68211 m!64083))

(declare-fun m!64085 () Bool)

(assert (=> b!68211 m!64085))

(declare-fun m!64087 () Bool)

(assert (=> b!68211 m!64087))

(declare-fun m!64089 () Bool)

(assert (=> b!68211 m!64089))

(declare-fun m!64091 () Bool)

(assert (=> b!68211 m!64091))

(declare-fun m!64093 () Bool)

(assert (=> b!68211 m!64093))

(declare-fun m!64095 () Bool)

(assert (=> b!68211 m!64095))

(declare-fun m!64097 () Bool)

(assert (=> b!68211 m!64097))

(declare-fun m!64099 () Bool)

(assert (=> b!68211 m!64099))

(declare-fun m!64101 () Bool)

(assert (=> b!68211 m!64101))

(declare-fun m!64103 () Bool)

(assert (=> b!68211 m!64103))

(assert (=> b!68211 m!64091))

(assert (=> b!68211 m!64099))

(declare-fun m!64105 () Bool)

(assert (=> b!68211 m!64105))

(assert (=> b!68211 m!62645))

(declare-fun m!64107 () Bool)

(assert (=> b!68211 m!64107))

(assert (=> b!68211 m!64107))

(declare-fun m!64109 () Bool)

(assert (=> b!68211 m!64109))

(assert (=> b!68211 m!64089))

(declare-fun m!64111 () Bool)

(assert (=> b!68211 m!64111))

(declare-fun m!64113 () Bool)

(assert (=> b!68211 m!64113))

(declare-fun m!64115 () Bool)

(assert (=> b!68209 m!64115))

(declare-fun m!64117 () Bool)

(assert (=> b!68227 m!64117))

(assert (=> b!68226 m!62645))

(assert (=> b!68226 m!62645))

(assert (=> b!68226 m!62651))

(declare-fun m!64119 () Bool)

(assert (=> b!68210 m!64119))

(assert (=> bm!5739 m!64103))

(declare-fun m!64121 () Bool)

(assert (=> bm!5740 m!64121))

(assert (=> b!68219 m!62645))

(assert (=> b!68219 m!62645))

(assert (=> b!68219 m!62651))

(assert (=> d!14723 m!62535))

(declare-fun m!64123 () Bool)

(assert (=> bm!5743 m!64123))

(declare-fun m!64125 () Bool)

(assert (=> bm!5745 m!64125))

(assert (=> b!68212 m!62645))

(declare-fun m!64127 () Bool)

(assert (=> b!68212 m!64127))

(assert (=> b!68212 m!62645))

(declare-fun m!64129 () Bool)

(assert (=> b!68212 m!64129))

(declare-fun m!64131 () Bool)

(assert (=> b!68212 m!64131))

(assert (=> b!68212 m!64131))

(assert (=> b!68212 m!64127))

(declare-fun m!64133 () Bool)

(assert (=> b!68212 m!64133))

(assert (=> b!68225 m!62645))

(assert (=> b!68225 m!62645))

(declare-fun m!64135 () Bool)

(assert (=> b!68225 m!64135))

(assert (=> d!13879 d!14723))

(declare-fun d!14725 () Bool)

(declare-fun lt!29749 () Bool)

(assert (=> d!14725 (= lt!29749 (select (content!72 (t!4948 (toList!717 lt!28707))) lt!28624))))

(declare-fun e!44685 () Bool)

(assert (=> d!14725 (= lt!29749 e!44685)))

(declare-fun res!36734 () Bool)

(assert (=> d!14725 (=> (not res!36734) (not e!44685))))

(assert (=> d!14725 (= res!36734 ((_ is Cons!1462) (t!4948 (toList!717 lt!28707))))))

(assert (=> d!14725 (= (contains!712 (t!4948 (toList!717 lt!28707)) lt!28624) lt!29749)))

(declare-fun b!68228 () Bool)

(declare-fun e!44686 () Bool)

(assert (=> b!68228 (= e!44685 e!44686)))

(declare-fun res!36735 () Bool)

(assert (=> b!68228 (=> res!36735 e!44686)))

(assert (=> b!68228 (= res!36735 (= (h!2046 (t!4948 (toList!717 lt!28707))) lt!28624))))

(declare-fun b!68229 () Bool)

(assert (=> b!68229 (= e!44686 (contains!712 (t!4948 (t!4948 (toList!717 lt!28707))) lt!28624))))

(assert (= (and d!14725 res!36734) b!68228))

(assert (= (and b!68228 (not res!36735)) b!68229))

(assert (=> d!14725 m!63999))

(declare-fun m!64137 () Bool)

(assert (=> d!14725 m!64137))

(declare-fun m!64139 () Bool)

(assert (=> b!68229 m!64139))

(assert (=> b!67111 d!14725))

(declare-fun d!14727 () Bool)

(declare-fun res!36736 () Bool)

(declare-fun e!44689 () Bool)

(assert (=> d!14727 (=> res!36736 e!44689)))

(assert (=> d!14727 (= res!36736 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14727 (= (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 Nil!1462) e!44689)))

(declare-fun bm!5746 () Bool)

(declare-fun call!5749 () Bool)

(declare-fun c!9644 () Bool)

(assert (=> bm!5746 (= call!5749 (arrayNoDuplicates!0 (_keys!3787 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9644 (Cons!1461 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000) Nil!1462) Nil!1462)))))

(declare-fun b!68230 () Bool)

(declare-fun e!44690 () Bool)

(assert (=> b!68230 (= e!44690 (contains!713 Nil!1462 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!68231 () Bool)

(declare-fun e!44688 () Bool)

(declare-fun e!44687 () Bool)

(assert (=> b!68231 (= e!44688 e!44687)))

(assert (=> b!68231 (= c!9644 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!68232 () Bool)

(assert (=> b!68232 (= e!44689 e!44688)))

(declare-fun res!36738 () Bool)

(assert (=> b!68232 (=> (not res!36738) (not e!44688))))

(assert (=> b!68232 (= res!36738 (not e!44690))))

(declare-fun res!36737 () Bool)

(assert (=> b!68232 (=> (not res!36737) (not e!44690))))

(assert (=> b!68232 (= res!36737 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!68233 () Bool)

(assert (=> b!68233 (= e!44687 call!5749)))

(declare-fun b!68234 () Bool)

(assert (=> b!68234 (= e!44687 call!5749)))

(assert (= (and d!14727 (not res!36736)) b!68232))

(assert (= (and b!68232 res!36737) b!68230))

(assert (= (and b!68232 res!36738) b!68231))

(assert (= (and b!68231 c!9644) b!68234))

(assert (= (and b!68231 (not c!9644)) b!68233))

(assert (= (or b!68234 b!68233) bm!5746))

(assert (=> bm!5746 m!62585))

(declare-fun m!64141 () Bool)

(assert (=> bm!5746 m!64141))

(assert (=> b!68230 m!62585))

(assert (=> b!68230 m!62585))

(declare-fun m!64143 () Bool)

(assert (=> b!68230 m!64143))

(assert (=> b!68231 m!62585))

(assert (=> b!68231 m!62585))

(assert (=> b!68231 m!62595))

(assert (=> b!68232 m!62585))

(assert (=> b!68232 m!62585))

(assert (=> b!68232 m!62595))

(assert (=> b!66955 d!14727))

(declare-fun d!14729 () Bool)

(declare-fun res!36739 () Bool)

(declare-fun e!44691 () Bool)

(assert (=> d!14729 (=> res!36739 e!44691)))

(assert (=> d!14729 (= res!36739 (or ((_ is Nil!1463) lt!28888) ((_ is Nil!1463) (t!4948 lt!28888))))))

(assert (=> d!14729 (= (isStrictlySorted!289 lt!28888) e!44691)))

(declare-fun b!68235 () Bool)

(declare-fun e!44692 () Bool)

(assert (=> b!68235 (= e!44691 e!44692)))

(declare-fun res!36740 () Bool)

(assert (=> b!68235 (=> (not res!36740) (not e!44692))))

(assert (=> b!68235 (= res!36740 (bvslt (_1!1057 (h!2046 lt!28888)) (_1!1057 (h!2046 (t!4948 lt!28888)))))))

(declare-fun b!68236 () Bool)

(assert (=> b!68236 (= e!44692 (isStrictlySorted!289 (t!4948 lt!28888)))))

(assert (= (and d!14729 (not res!36739)) b!68235))

(assert (= (and b!68235 res!36740) b!68236))

(declare-fun m!64145 () Bool)

(assert (=> b!68236 m!64145))

(assert (=> d!13811 d!14729))

(assert (=> d!13811 d!14511))

(declare-fun d!14731 () Bool)

(declare-fun lt!29750 () Bool)

(assert (=> d!14731 (= lt!29750 (select (content!72 lt!28937) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun e!44693 () Bool)

(assert (=> d!14731 (= lt!29750 e!44693)))

(declare-fun res!36741 () Bool)

(assert (=> d!14731 (=> (not res!36741) (not e!44693))))

(assert (=> d!14731 (= res!36741 ((_ is Cons!1462) lt!28937))))

(assert (=> d!14731 (= (contains!712 lt!28937 (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))) lt!29750)))

(declare-fun b!68237 () Bool)

(declare-fun e!44694 () Bool)

(assert (=> b!68237 (= e!44693 e!44694)))

(declare-fun res!36742 () Bool)

(assert (=> b!68237 (=> res!36742 e!44694)))

(assert (=> b!68237 (= res!36742 (= (h!2046 lt!28937) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(declare-fun b!68238 () Bool)

(assert (=> b!68238 (= e!44694 (contains!712 (t!4948 lt!28937) (tuple2!2093 (_1!1057 lt!28624) (_2!1057 lt!28624))))))

(assert (= (and d!14731 res!36741) b!68237))

(assert (= (and b!68237 (not res!36742)) b!68238))

(declare-fun m!64147 () Bool)

(assert (=> d!14731 m!64147))

(declare-fun m!64149 () Bool)

(assert (=> d!14731 m!64149))

(declare-fun m!64151 () Bool)

(assert (=> b!68238 m!64151))

(assert (=> b!66853 d!14731))

(assert (=> b!67116 d!14249))

(assert (=> b!67116 d!14251))

(declare-fun d!14733 () Bool)

(declare-fun res!36743 () Bool)

(declare-fun e!44695 () Bool)

(assert (=> d!14733 (=> res!36743 e!44695)))

(assert (=> d!14733 (= res!36743 (and ((_ is Cons!1462) (toList!717 lt!28703)) (= (_1!1057 (h!2046 (toList!717 lt!28703))) (_1!1057 lt!28617))))))

(assert (=> d!14733 (= (containsKey!134 (toList!717 lt!28703) (_1!1057 lt!28617)) e!44695)))

(declare-fun b!68239 () Bool)

(declare-fun e!44696 () Bool)

(assert (=> b!68239 (= e!44695 e!44696)))

(declare-fun res!36744 () Bool)

(assert (=> b!68239 (=> (not res!36744) (not e!44696))))

(assert (=> b!68239 (= res!36744 (and (or (not ((_ is Cons!1462) (toList!717 lt!28703))) (bvsle (_1!1057 (h!2046 (toList!717 lt!28703))) (_1!1057 lt!28617))) ((_ is Cons!1462) (toList!717 lt!28703)) (bvslt (_1!1057 (h!2046 (toList!717 lt!28703))) (_1!1057 lt!28617))))))

(declare-fun b!68240 () Bool)

(assert (=> b!68240 (= e!44696 (containsKey!134 (t!4948 (toList!717 lt!28703)) (_1!1057 lt!28617)))))

(assert (= (and d!14733 (not res!36743)) b!68239))

(assert (= (and b!68239 res!36744) b!68240))

(declare-fun m!64153 () Bool)

(assert (=> b!68240 m!64153))

(assert (=> d!13805 d!14733))

(declare-fun d!14735 () Bool)

(declare-fun c!9645 () Bool)

(assert (=> d!14735 (= c!9645 (and ((_ is Cons!1462) (toList!717 lt!29180)) (= (_1!1057 (h!2046 (toList!717 lt!29180))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!44697 () Option!136)

(assert (=> d!14735 (= (getValueByKey!130 (toList!717 lt!29180) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!44697)))

(declare-fun b!68242 () Bool)

(declare-fun e!44698 () Option!136)

(assert (=> b!68242 (= e!44697 e!44698)))

(declare-fun c!9646 () Bool)

(assert (=> b!68242 (= c!9646 (and ((_ is Cons!1462) (toList!717 lt!29180)) (not (= (_1!1057 (h!2046 (toList!717 lt!29180))) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!68241 () Bool)

(assert (=> b!68241 (= e!44697 (Some!135 (_2!1057 (h!2046 (toList!717 lt!29180)))))))

(declare-fun b!68243 () Bool)

(assert (=> b!68243 (= e!44698 (getValueByKey!130 (t!4948 (toList!717 lt!29180)) (_1!1057 (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1116 (select (arr!1836 (_values!2130 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!68244 () Bool)

(assert (=> b!68244 (= e!44698 None!134)))

(assert (= (and d!14735 c!9645) b!68241))

(assert (= (and d!14735 (not c!9645)) b!68242))

(assert (= (and b!68242 c!9646) b!68243))

(assert (= (and b!68242 (not c!9646)) b!68244))

(declare-fun m!64155 () Bool)

(assert (=> b!68243 m!64155))

(assert (=> b!67121 d!14735))

(assert (=> b!66946 d!14069))

(declare-fun d!14737 () Bool)

(assert (=> d!14737 (arrayContainsKey!0 lt!29117 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!29751 () Unit!1838)

(assert (=> d!14737 (= lt!29751 (choose!13 lt!29117 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))))))

(assert (=> d!14737 (bvsge (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000000)))

(assert (=> d!14737 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!29117 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))) lt!29751)))

(declare-fun bs!2949 () Bool)

(assert (= bs!2949 d!14737))

(assert (=> bs!2949 m!61065))

(assert (=> bs!2949 m!61961))

(assert (=> bs!2949 m!61065))

(declare-fun m!64157 () Bool)

(assert (=> bs!2949 m!64157))

(assert (=> d!13941 d!14737))

(declare-fun b!68245 () Bool)

(declare-fun e!44700 () (_ BitVec 32))

(declare-fun call!5750 () (_ BitVec 32))

(assert (=> b!68245 (= e!44700 call!5750)))

(declare-fun lt!29752 () (_ BitVec 32))

(declare-fun d!14739 () Bool)

(assert (=> d!14739 (and (bvsge lt!29752 #b00000000000000000000000000000000) (bvsle lt!29752 (bvsub (size!2070 lt!29128) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)))))))

(declare-fun e!44699 () (_ BitVec 32))

(assert (=> d!14739 (= lt!29752 e!44699)))

(declare-fun c!9647 () Bool)

(assert (=> d!14739 (= c!9647 (bvsge (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (bvadd (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000001)))))

(assert (=> d!14739 (and (bvsle (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (bvadd (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000001)) (bvsge (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000001) (size!2070 lt!29128)))))

(assert (=> d!14739 (= (arrayCountValidKeys!0 lt!29128 (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (bvadd (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000001)) lt!29752)))

(declare-fun b!68246 () Bool)

(assert (=> b!68246 (= e!44700 (bvadd #b00000000000000000000000000000001 call!5750))))

(declare-fun b!68247 () Bool)

(assert (=> b!68247 (= e!44699 #b00000000000000000000000000000000)))

(declare-fun b!68248 () Bool)

(assert (=> b!68248 (= e!44699 e!44700)))

(declare-fun c!9648 () Bool)

(assert (=> b!68248 (= c!9648 (validKeyInArray!0 (select (arr!1835 lt!29128) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)))))))

(declare-fun bm!5747 () Bool)

(assert (=> bm!5747 (= call!5750 (arrayCountValidKeys!0 lt!29128 (bvadd (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000001) (bvadd (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000001)))))

(assert (= (and d!14739 c!9647) b!68247))

(assert (= (and d!14739 (not c!9647)) b!68248))

(assert (= (and b!68248 c!9648) b!68246))

(assert (= (and b!68248 (not c!9648)) b!68245))

(assert (= (or b!68246 b!68245) bm!5747))

(declare-fun m!64159 () Bool)

(assert (=> b!68248 m!64159))

(assert (=> b!68248 m!64159))

(declare-fun m!64161 () Bool)

(assert (=> b!68248 m!64161))

(declare-fun m!64163 () Bool)

(assert (=> bm!5747 m!64163))

(assert (=> d!13941 d!14739))

(assert (=> d!13941 d!14497))

(assert (=> d!13941 d!14709))

(assert (=> d!13941 d!13903))

(assert (=> d!13941 d!13763))

(assert (=> d!13941 d!13853))

(declare-fun b!68249 () Bool)

(declare-fun e!44710 () ListLongMap!1403)

(declare-fun call!5756 () ListLongMap!1403)

(assert (=> b!68249 (= e!44710 call!5756)))

(declare-fun b!68250 () Bool)

(declare-fun e!44705 () ListLongMap!1403)

(assert (=> b!68250 (= e!44705 call!5756)))

(declare-fun b!68251 () Bool)

(declare-fun e!44708 () Bool)

(declare-fun lt!29773 () ListLongMap!1403)

(assert (=> b!68251 (= e!44708 (= (apply!72 lt!29773 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun call!5757 () ListLongMap!1403)

(declare-fun bm!5748 () Bool)

(assert (=> bm!5748 (= call!5757 (getCurrentListMapNoExtraKeys!54 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5749 () Bool)

(declare-fun call!5751 () Bool)

(assert (=> bm!5749 (= call!5751 (contains!710 lt!29773 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5750 () Bool)

(declare-fun call!5754 () ListLongMap!1403)

(declare-fun call!5752 () ListLongMap!1403)

(assert (=> bm!5750 (= call!5754 call!5752)))

(declare-fun b!68252 () Bool)

(declare-fun e!44711 () ListLongMap!1403)

(declare-fun call!5755 () ListLongMap!1403)

(assert (=> b!68252 (= e!44711 (+!89 call!5755 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!68253 () Bool)

(declare-fun e!44703 () Unit!1838)

(declare-fun lt!29774 () Unit!1838)

(assert (=> b!68253 (= e!44703 lt!29774)))

(declare-fun lt!29770 () ListLongMap!1403)

(assert (=> b!68253 (= lt!29770 (getCurrentListMapNoExtraKeys!54 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29772 () (_ BitVec 64))

(assert (=> b!68253 (= lt!29772 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29762 () (_ BitVec 64))

(assert (=> b!68253 (= lt!29762 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29761 () Unit!1838)

(assert (=> b!68253 (= lt!29761 (addStillContains!48 lt!29770 lt!29772 (zeroValue!2055 newMap!16) lt!29762))))

(assert (=> b!68253 (contains!710 (+!89 lt!29770 (tuple2!2093 lt!29772 (zeroValue!2055 newMap!16))) lt!29762)))

(declare-fun lt!29754 () Unit!1838)

(assert (=> b!68253 (= lt!29754 lt!29761)))

(declare-fun lt!29767 () ListLongMap!1403)

(assert (=> b!68253 (= lt!29767 (getCurrentListMapNoExtraKeys!54 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29764 () (_ BitVec 64))

(assert (=> b!68253 (= lt!29764 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29756 () (_ BitVec 64))

(assert (=> b!68253 (= lt!29756 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29757 () Unit!1838)

(assert (=> b!68253 (= lt!29757 (addApplyDifferent!48 lt!29767 lt!29764 (minValue!2055 newMap!16) lt!29756))))

(assert (=> b!68253 (= (apply!72 (+!89 lt!29767 (tuple2!2093 lt!29764 (minValue!2055 newMap!16))) lt!29756) (apply!72 lt!29767 lt!29756))))

(declare-fun lt!29771 () Unit!1838)

(assert (=> b!68253 (= lt!29771 lt!29757)))

(declare-fun lt!29759 () ListLongMap!1403)

(assert (=> b!68253 (= lt!29759 (getCurrentListMapNoExtraKeys!54 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29758 () (_ BitVec 64))

(assert (=> b!68253 (= lt!29758 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29769 () (_ BitVec 64))

(assert (=> b!68253 (= lt!29769 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29768 () Unit!1838)

(assert (=> b!68253 (= lt!29768 (addApplyDifferent!48 lt!29759 lt!29758 (zeroValue!2055 newMap!16) lt!29769))))

(assert (=> b!68253 (= (apply!72 (+!89 lt!29759 (tuple2!2093 lt!29758 (zeroValue!2055 newMap!16))) lt!29769) (apply!72 lt!29759 lt!29769))))

(declare-fun lt!29760 () Unit!1838)

(assert (=> b!68253 (= lt!29760 lt!29768)))

(declare-fun lt!29763 () ListLongMap!1403)

(assert (=> b!68253 (= lt!29763 (getCurrentListMapNoExtraKeys!54 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29753 () (_ BitVec 64))

(assert (=> b!68253 (= lt!29753 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29766 () (_ BitVec 64))

(assert (=> b!68253 (= lt!29766 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!68253 (= lt!29774 (addApplyDifferent!48 lt!29763 lt!29753 (minValue!2055 newMap!16) lt!29766))))

(assert (=> b!68253 (= (apply!72 (+!89 lt!29763 (tuple2!2093 lt!29753 (minValue!2055 newMap!16))) lt!29766) (apply!72 lt!29763 lt!29766))))

(declare-fun b!68254 () Bool)

(declare-fun e!44709 () Bool)

(assert (=> b!68254 (= e!44709 (= (apply!72 lt!29773 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68254 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))))))))

(assert (=> b!68254 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))))

(declare-fun b!68255 () Bool)

(assert (=> b!68255 (= e!44711 e!44710)))

(declare-fun c!9651 () Bool)

(assert (=> b!68255 (= c!9651 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14741 () Bool)

(declare-fun e!44707 () Bool)

(assert (=> d!14741 e!44707))

(declare-fun res!36750 () Bool)

(assert (=> d!14741 (=> (not res!36750) (not e!44707))))

(assert (=> d!14741 (= res!36750 (or (bvsge #b00000000000000000000000000000000 (size!2070 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))))))

(declare-fun lt!29755 () ListLongMap!1403)

(assert (=> d!14741 (= lt!29773 lt!29755)))

(declare-fun lt!29765 () Unit!1838)

(assert (=> d!14741 (= lt!29765 e!44703)))

(declare-fun c!9653 () Bool)

(declare-fun e!44712 () Bool)

(assert (=> d!14741 (= c!9653 e!44712)))

(declare-fun res!36752 () Bool)

(assert (=> d!14741 (=> (not res!36752) (not e!44712))))

(assert (=> d!14741 (= res!36752 (bvslt #b00000000000000000000000000000000 (size!2070 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))))

(assert (=> d!14741 (= lt!29755 e!44711)))

(declare-fun c!9652 () Bool)

(assert (=> d!14741 (= c!9652 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14741 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14741 (= (getCurrentListMap!415 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29773)))

(declare-fun b!68256 () Bool)

(declare-fun e!44706 () Bool)

(declare-fun call!5753 () Bool)

(assert (=> b!68256 (= e!44706 (not call!5753))))

(declare-fun b!68257 () Bool)

(declare-fun res!36749 () Bool)

(assert (=> b!68257 (=> (not res!36749) (not e!44707))))

(assert (=> b!68257 (= res!36749 e!44706)))

(declare-fun c!9650 () Bool)

(assert (=> b!68257 (= c!9650 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5751 () Bool)

(assert (=> bm!5751 (= call!5756 call!5755)))

(declare-fun b!68258 () Bool)

(declare-fun e!44701 () Bool)

(assert (=> b!68258 (= e!44707 e!44701)))

(declare-fun c!9649 () Bool)

(assert (=> b!68258 (= c!9649 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68259 () Bool)

(assert (=> b!68259 (= e!44701 e!44708)))

(declare-fun res!36746 () Bool)

(assert (=> b!68259 (= res!36746 call!5751)))

(assert (=> b!68259 (=> (not res!36746) (not e!44708))))

(declare-fun bm!5752 () Bool)

(assert (=> bm!5752 (= call!5755 (+!89 (ite c!9652 call!5757 (ite c!9651 call!5752 call!5754)) (ite (or c!9652 c!9651) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!68260 () Bool)

(declare-fun c!9654 () Bool)

(assert (=> b!68260 (= c!9654 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68260 (= e!44710 e!44705)))

(declare-fun bm!5753 () Bool)

(assert (=> bm!5753 (= call!5752 call!5757)))

(declare-fun b!68261 () Bool)

(assert (=> b!68261 (= e!44712 (validKeyInArray!0 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!68262 () Bool)

(declare-fun res!36748 () Bool)

(assert (=> b!68262 (=> (not res!36748) (not e!44707))))

(declare-fun e!44713 () Bool)

(assert (=> b!68262 (= res!36748 e!44713)))

(declare-fun res!36745 () Bool)

(assert (=> b!68262 (=> res!36745 e!44713)))

(declare-fun e!44704 () Bool)

(assert (=> b!68262 (= res!36745 (not e!44704))))

(declare-fun res!36747 () Bool)

(assert (=> b!68262 (=> (not res!36747) (not e!44704))))

(assert (=> b!68262 (= res!36747 (bvslt #b00000000000000000000000000000000 (size!2070 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))))

(declare-fun b!68263 () Bool)

(declare-fun e!44702 () Bool)

(assert (=> b!68263 (= e!44706 e!44702)))

(declare-fun res!36753 () Bool)

(assert (=> b!68263 (= res!36753 call!5753)))

(assert (=> b!68263 (=> (not res!36753) (not e!44702))))

(declare-fun b!68264 () Bool)

(assert (=> b!68264 (= e!44701 (not call!5751))))

(declare-fun b!68265 () Bool)

(assert (=> b!68265 (= e!44705 call!5754)))

(declare-fun b!68266 () Bool)

(declare-fun Unit!1912 () Unit!1838)

(assert (=> b!68266 (= e!44703 Unit!1912)))

(declare-fun b!68267 () Bool)

(assert (=> b!68267 (= e!44713 e!44709)))

(declare-fun res!36751 () Bool)

(assert (=> b!68267 (=> (not res!36751) (not e!44709))))

(assert (=> b!68267 (= res!36751 (contains!710 lt!29773 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!68267 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))))

(declare-fun bm!5754 () Bool)

(assert (=> bm!5754 (= call!5753 (contains!710 lt!29773 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68268 () Bool)

(assert (=> b!68268 (= e!44704 (validKeyInArray!0 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!68269 () Bool)

(assert (=> b!68269 (= e!44702 (= (apply!72 lt!29773 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(assert (= (and d!14741 c!9652) b!68252))

(assert (= (and d!14741 (not c!9652)) b!68255))

(assert (= (and b!68255 c!9651) b!68249))

(assert (= (and b!68255 (not c!9651)) b!68260))

(assert (= (and b!68260 c!9654) b!68250))

(assert (= (and b!68260 (not c!9654)) b!68265))

(assert (= (or b!68250 b!68265) bm!5750))

(assert (= (or b!68249 bm!5750) bm!5753))

(assert (= (or b!68249 b!68250) bm!5751))

(assert (= (or b!68252 bm!5753) bm!5748))

(assert (= (or b!68252 bm!5751) bm!5752))

(assert (= (and d!14741 res!36752) b!68261))

(assert (= (and d!14741 c!9653) b!68253))

(assert (= (and d!14741 (not c!9653)) b!68266))

(assert (= (and d!14741 res!36750) b!68262))

(assert (= (and b!68262 res!36747) b!68268))

(assert (= (and b!68262 (not res!36745)) b!68267))

(assert (= (and b!68267 res!36751) b!68254))

(assert (= (and b!68262 res!36748) b!68257))

(assert (= (and b!68257 c!9650) b!68263))

(assert (= (and b!68257 (not c!9650)) b!68256))

(assert (= (and b!68263 res!36753) b!68269))

(assert (= (or b!68263 b!68256) bm!5754))

(assert (= (and b!68257 res!36749) b!68258))

(assert (= (and b!68258 c!9649) b!68259))

(assert (= (and b!68258 (not c!9649)) b!68264))

(assert (= (and b!68259 res!36746) b!68251))

(assert (= (or b!68259 b!68264) bm!5749))

(declare-fun b_lambda!3039 () Bool)

(assert (=> (not b_lambda!3039) (not b!68254)))

(assert (=> b!68254 t!4955))

(declare-fun b_and!4203 () Bool)

(assert (= b_and!4199 (and (=> t!4955 result!2591) b_and!4203)))

(assert (=> b!68254 t!4957))

(declare-fun b_and!4205 () Bool)

(assert (= b_and!4201 (and (=> t!4957 result!2593) b_and!4205)))

(declare-fun m!64165 () Bool)

(assert (=> b!68253 m!64165))

(declare-fun m!64167 () Bool)

(assert (=> b!68253 m!64167))

(declare-fun m!64169 () Bool)

(assert (=> b!68253 m!64169))

(declare-fun m!64171 () Bool)

(assert (=> b!68253 m!64171))

(declare-fun m!64173 () Bool)

(assert (=> b!68253 m!64173))

(declare-fun m!64175 () Bool)

(assert (=> b!68253 m!64175))

(declare-fun m!64177 () Bool)

(assert (=> b!68253 m!64177))

(declare-fun m!64179 () Bool)

(assert (=> b!68253 m!64179))

(declare-fun m!64181 () Bool)

(assert (=> b!68253 m!64181))

(declare-fun m!64183 () Bool)

(assert (=> b!68253 m!64183))

(declare-fun m!64185 () Bool)

(assert (=> b!68253 m!64185))

(assert (=> b!68253 m!64173))

(assert (=> b!68253 m!64181))

(declare-fun m!64187 () Bool)

(assert (=> b!68253 m!64187))

(declare-fun m!64189 () Bool)

(assert (=> b!68253 m!64189))

(declare-fun m!64191 () Bool)

(assert (=> b!68253 m!64191))

(assert (=> b!68253 m!64191))

(declare-fun m!64193 () Bool)

(assert (=> b!68253 m!64193))

(assert (=> b!68253 m!64171))

(declare-fun m!64195 () Bool)

(assert (=> b!68253 m!64195))

(declare-fun m!64197 () Bool)

(assert (=> b!68253 m!64197))

(declare-fun m!64199 () Bool)

(assert (=> b!68251 m!64199))

(declare-fun m!64201 () Bool)

(assert (=> b!68269 m!64201))

(assert (=> b!68268 m!64189))

(assert (=> b!68268 m!64189))

(declare-fun m!64203 () Bool)

(assert (=> b!68268 m!64203))

(declare-fun m!64205 () Bool)

(assert (=> b!68252 m!64205))

(assert (=> bm!5748 m!64185))

(declare-fun m!64207 () Bool)

(assert (=> bm!5749 m!64207))

(assert (=> b!68261 m!64189))

(assert (=> b!68261 m!64189))

(assert (=> b!68261 m!64203))

(assert (=> d!14741 m!61485))

(declare-fun m!64209 () Bool)

(assert (=> bm!5752 m!64209))

(declare-fun m!64211 () Bool)

(assert (=> bm!5754 m!64211))

(assert (=> b!68254 m!64189))

(assert (=> b!68254 m!61491))

(assert (=> b!68254 m!64189))

(declare-fun m!64213 () Bool)

(assert (=> b!68254 m!64213))

(declare-fun m!64215 () Bool)

(assert (=> b!68254 m!64215))

(assert (=> b!68254 m!64215))

(assert (=> b!68254 m!61491))

(declare-fun m!64217 () Bool)

(assert (=> b!68254 m!64217))

(assert (=> b!68267 m!64189))

(assert (=> b!68267 m!64189))

(declare-fun m!64219 () Bool)

(assert (=> b!68267 m!64219))

(assert (=> d!13941 d!14741))

(declare-fun d!14743 () Bool)

(declare-fun e!44715 () Bool)

(assert (=> d!14743 e!44715))

(declare-fun res!36754 () Bool)

(assert (=> d!14743 (=> res!36754 e!44715)))

(declare-fun lt!29777 () Bool)

(assert (=> d!14743 (= res!36754 (not lt!29777))))

(declare-fun lt!29775 () Bool)

(assert (=> d!14743 (= lt!29777 lt!29775)))

(declare-fun lt!29778 () Unit!1838)

(declare-fun e!44714 () Unit!1838)

(assert (=> d!14743 (= lt!29778 e!44714)))

(declare-fun c!9655 () Bool)

(assert (=> d!14743 (= c!9655 lt!29775)))

(assert (=> d!14743 (= lt!29775 (containsKey!134 (toList!717 (getCurrentListMap!415 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)))))))

(assert (=> d!14743 (= (contains!710 (getCurrentListMap!415 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)))) lt!29777)))

(declare-fun b!68270 () Bool)

(declare-fun lt!29776 () Unit!1838)

(assert (=> b!68270 (= e!44714 lt!29776)))

(assert (=> b!68270 (= lt!29776 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!717 (getCurrentListMap!415 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)))))))

(assert (=> b!68270 (isDefined!83 (getValueByKey!130 (toList!717 (getCurrentListMap!415 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)))))))

(declare-fun b!68271 () Bool)

(declare-fun Unit!1913 () Unit!1838)

(assert (=> b!68271 (= e!44714 Unit!1913)))

(declare-fun b!68272 () Bool)

(assert (=> b!68272 (= e!44715 (isDefined!83 (getValueByKey!130 (toList!717 (getCurrentListMap!415 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))) (select (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))))))))

(assert (= (and d!14743 c!9655) b!68270))

(assert (= (and d!14743 (not c!9655)) b!68271))

(assert (= (and d!14743 (not res!36754)) b!68272))

(assert (=> d!14743 m!61939))

(declare-fun m!64221 () Bool)

(assert (=> d!14743 m!64221))

(assert (=> b!68270 m!61939))

(declare-fun m!64223 () Bool)

(assert (=> b!68270 m!64223))

(assert (=> b!68270 m!61939))

(declare-fun m!64225 () Bool)

(assert (=> b!68270 m!64225))

(assert (=> b!68270 m!64225))

(declare-fun m!64227 () Bool)

(assert (=> b!68270 m!64227))

(assert (=> b!68272 m!61939))

(assert (=> b!68272 m!64225))

(assert (=> b!68272 m!64225))

(assert (=> b!68272 m!64227))

(assert (=> d!13941 d!14743))

(declare-fun d!14745 () Bool)

(declare-fun e!44718 () Bool)

(assert (=> d!14745 e!44718))

(declare-fun res!36757 () Bool)

(assert (=> d!14745 (=> (not res!36757) (not e!44718))))

(assert (=> d!14745 (= res!36757 (and (bvsge (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000000) (bvslt (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (size!2070 (_keys!3787 newMap!16))) (bvslt (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (size!2071 (_values!2130 newMap!16)))))))

(declare-fun lt!29781 () Unit!1838)

(declare-fun choose!379 (array!3841 array!3843 (_ BitVec 32) (_ BitVec 32) V!2915 V!2915 (_ BitVec 32) (_ BitVec 64) V!2915 Int) Unit!1838)

(assert (=> d!14745 (= lt!29781 (choose!379 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 (defaultEntry!2147 newMap!16)))))

(assert (=> d!14745 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14745 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!10 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616 (defaultEntry!2147 newMap!16)) lt!29781)))

(declare-fun b!68275 () Bool)

(assert (=> b!68275 (= e!44718 (= (+!89 (getCurrentListMap!415 (_keys!3787 newMap!16) (_values!2130 newMap!16) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (tuple2!2093 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28616)) (getCurrentListMap!415 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (array!3844 (store (arr!1836 (_values!2130 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (ValueCellFull!882 lt!28616)) (size!2071 (_values!2130 newMap!16))) (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16))))))

(assert (= (and d!14745 res!36757) b!68275))

(assert (=> d!14745 m!61065))

(declare-fun m!64229 () Bool)

(assert (=> d!14745 m!64229))

(assert (=> d!14745 m!61485))

(assert (=> b!68275 m!61947))

(assert (=> b!68275 m!61299))

(assert (=> b!68275 m!61959))

(assert (=> b!68275 m!61965))

(assert (=> b!68275 m!61299))

(assert (=> b!68275 m!61943))

(assert (=> d!13941 d!14745))

(declare-fun e!44724 () Bool)

(declare-fun b!68287 () Bool)

(assert (=> b!68287 (= e!44724 (= (arrayCountValidKeys!0 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3787 newMap!16) #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!68286 () Bool)

(declare-fun e!44723 () Bool)

(assert (=> b!68286 (= e!44723 (bvslt (size!2070 (_keys!3787 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!14747 () Bool)

(assert (=> d!14747 e!44724))

(declare-fun res!36769 () Bool)

(assert (=> d!14747 (=> (not res!36769) (not e!44724))))

(assert (=> d!14747 (= res!36769 (and (bvsge (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000000) (bvslt (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (size!2070 (_keys!3787 newMap!16)))))))

(declare-fun lt!29784 () Unit!1838)

(declare-fun choose!1 (array!3841 (_ BitVec 32) (_ BitVec 64)) Unit!1838)

(assert (=> d!14747 (= lt!29784 (choose!1 (_keys!3787 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14747 e!44723))

(declare-fun res!36768 () Bool)

(assert (=> d!14747 (=> (not res!36768) (not e!44723))))

(assert (=> d!14747 (= res!36768 (and (bvsge (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000000) (bvslt (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (size!2070 (_keys!3787 newMap!16)))))))

(assert (=> d!14747 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3787 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29784)))

(declare-fun b!68284 () Bool)

(declare-fun res!36766 () Bool)

(assert (=> b!68284 (=> (not res!36766) (not e!44723))))

(assert (=> b!68284 (= res!36766 (not (validKeyInArray!0 (select (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))))))))

(declare-fun b!68285 () Bool)

(declare-fun res!36767 () Bool)

(assert (=> b!68285 (=> (not res!36767) (not e!44723))))

(assert (=> b!68285 (= res!36767 (validKeyInArray!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14747 res!36768) b!68284))

(assert (= (and b!68284 res!36766) b!68285))

(assert (= (and b!68285 res!36767) b!68286))

(assert (= (and d!14747 res!36769) b!68287))

(assert (=> b!68287 m!61965))

(assert (=> b!68287 m!61945))

(assert (=> b!68287 m!61185))

(assert (=> d!14747 m!61065))

(declare-fun m!64231 () Bool)

(assert (=> d!14747 m!64231))

(declare-fun m!64233 () Bool)

(assert (=> b!68284 m!64233))

(assert (=> b!68284 m!64233))

(declare-fun m!64235 () Bool)

(assert (=> b!68284 m!64235))

(assert (=> b!68285 m!61065))

(assert (=> b!68285 m!61289))

(assert (=> d!13941 d!14747))

(declare-fun d!14749 () Bool)

(declare-fun e!44727 () Bool)

(assert (=> d!14749 e!44727))

(declare-fun res!36772 () Bool)

(assert (=> d!14749 (=> (not res!36772) (not e!44727))))

(assert (=> d!14749 (= res!36772 (and (bvsge (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000000) (bvslt (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (size!2070 (_keys!3787 newMap!16)))))))

(declare-fun lt!29787 () Unit!1838)

(declare-fun choose!41 (array!3841 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1465) Unit!1838)

(assert (=> d!14749 (= lt!29787 (choose!41 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) lt!29127 lt!29115))))

(assert (=> d!14749 (bvslt (size!2070 (_keys!3787 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!14749 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3787 newMap!16) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) lt!29127 lt!29115) lt!29787)))

(declare-fun b!68290 () Bool)

(assert (=> b!68290 (= e!44727 (arrayNoDuplicates!0 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) lt!29127 lt!29115))))

(assert (= (and d!14749 res!36772) b!68290))

(assert (=> d!14749 m!61065))

(declare-fun m!64237 () Bool)

(assert (=> d!14749 m!64237))

(assert (=> b!68290 m!61965))

(assert (=> b!68290 m!61937))

(assert (=> d!13941 d!14749))

(declare-fun d!14751 () Bool)

(declare-fun res!36773 () Bool)

(declare-fun e!44730 () Bool)

(assert (=> d!14751 (=> res!36773 e!44730)))

(assert (=> d!14751 (= res!36773 (bvsge lt!29127 (size!2070 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))))

(assert (=> d!14751 (= (arrayNoDuplicates!0 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) lt!29127 lt!29115) e!44730)))

(declare-fun c!9656 () Bool)

(declare-fun bm!5755 () Bool)

(declare-fun call!5758 () Bool)

(assert (=> bm!5755 (= call!5758 (arrayNoDuplicates!0 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (bvadd lt!29127 #b00000000000000000000000000000001) (ite c!9656 (Cons!1461 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) lt!29127) lt!29115) lt!29115)))))

(declare-fun e!44731 () Bool)

(declare-fun b!68291 () Bool)

(assert (=> b!68291 (= e!44731 (contains!713 lt!29115 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) lt!29127)))))

(declare-fun b!68292 () Bool)

(declare-fun e!44729 () Bool)

(declare-fun e!44728 () Bool)

(assert (=> b!68292 (= e!44729 e!44728)))

(assert (=> b!68292 (= c!9656 (validKeyInArray!0 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) lt!29127)))))

(declare-fun b!68293 () Bool)

(assert (=> b!68293 (= e!44730 e!44729)))

(declare-fun res!36775 () Bool)

(assert (=> b!68293 (=> (not res!36775) (not e!44729))))

(assert (=> b!68293 (= res!36775 (not e!44731))))

(declare-fun res!36774 () Bool)

(assert (=> b!68293 (=> (not res!36774) (not e!44731))))

(assert (=> b!68293 (= res!36774 (validKeyInArray!0 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) lt!29127)))))

(declare-fun b!68294 () Bool)

(assert (=> b!68294 (= e!44728 call!5758)))

(declare-fun b!68295 () Bool)

(assert (=> b!68295 (= e!44728 call!5758)))

(assert (= (and d!14751 (not res!36773)) b!68293))

(assert (= (and b!68293 res!36774) b!68291))

(assert (= (and b!68293 res!36775) b!68292))

(assert (= (and b!68292 c!9656) b!68295))

(assert (= (and b!68292 (not c!9656)) b!68294))

(assert (= (or b!68295 b!68294) bm!5755))

(declare-fun m!64239 () Bool)

(assert (=> bm!5755 m!64239))

(declare-fun m!64241 () Bool)

(assert (=> bm!5755 m!64241))

(assert (=> b!68291 m!64239))

(assert (=> b!68291 m!64239))

(declare-fun m!64243 () Bool)

(assert (=> b!68291 m!64243))

(assert (=> b!68292 m!64239))

(assert (=> b!68292 m!64239))

(declare-fun m!64245 () Bool)

(assert (=> b!68292 m!64245))

(assert (=> b!68293 m!64239))

(assert (=> b!68293 m!64239))

(assert (=> b!68293 m!64245))

(assert (=> d!13941 d!14751))

(declare-fun b!68296 () Bool)

(declare-fun e!44732 () Bool)

(declare-fun e!44734 () Bool)

(assert (=> b!68296 (= e!44732 e!44734)))

(declare-fun lt!29789 () (_ BitVec 64))

(assert (=> b!68296 (= lt!29789 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29790 () Unit!1838)

(assert (=> b!68296 (= lt!29790 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) lt!29789 #b00000000000000000000000000000000))))

(assert (=> b!68296 (arrayContainsKey!0 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) lt!29789 #b00000000000000000000000000000000)))

(declare-fun lt!29788 () Unit!1838)

(assert (=> b!68296 (= lt!29788 lt!29790)))

(declare-fun res!36776 () Bool)

(assert (=> b!68296 (= res!36776 (= (seekEntryOrOpen!0 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000) (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (mask!6082 newMap!16)) (Found!233 #b00000000000000000000000000000000)))))

(assert (=> b!68296 (=> (not res!36776) (not e!44734))))

(declare-fun call!5759 () Bool)

(declare-fun bm!5756 () Bool)

(assert (=> bm!5756 (= call!5759 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (mask!6082 newMap!16)))))

(declare-fun d!14753 () Bool)

(declare-fun res!36777 () Bool)

(declare-fun e!44733 () Bool)

(assert (=> d!14753 (=> res!36777 e!44733)))

(assert (=> d!14753 (= res!36777 (bvsge #b00000000000000000000000000000000 (size!2070 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))))

(assert (=> d!14753 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (mask!6082 newMap!16)) e!44733)))

(declare-fun b!68297 () Bool)

(assert (=> b!68297 (= e!44734 call!5759)))

(declare-fun b!68298 () Bool)

(assert (=> b!68298 (= e!44732 call!5759)))

(declare-fun b!68299 () Bool)

(assert (=> b!68299 (= e!44733 e!44732)))

(declare-fun c!9657 () Bool)

(assert (=> b!68299 (= c!9657 (validKeyInArray!0 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!14753 (not res!36777)) b!68299))

(assert (= (and b!68299 c!9657) b!68296))

(assert (= (and b!68299 (not c!9657)) b!68298))

(assert (= (and b!68296 res!36776) b!68297))

(assert (= (or b!68297 b!68298) bm!5756))

(assert (=> b!68296 m!64189))

(declare-fun m!64247 () Bool)

(assert (=> b!68296 m!64247))

(declare-fun m!64249 () Bool)

(assert (=> b!68296 m!64249))

(assert (=> b!68296 m!64189))

(declare-fun m!64251 () Bool)

(assert (=> b!68296 m!64251))

(declare-fun m!64253 () Bool)

(assert (=> bm!5756 m!64253))

(assert (=> b!68299 m!64189))

(assert (=> b!68299 m!64189))

(assert (=> b!68299 m!64203))

(assert (=> d!13941 d!14753))

(declare-fun b!68300 () Bool)

(declare-fun e!44736 () (_ BitVec 32))

(declare-fun call!5760 () (_ BitVec 32))

(assert (=> b!68300 (= e!44736 call!5760)))

(declare-fun d!14755 () Bool)

(declare-fun lt!29791 () (_ BitVec 32))

(assert (=> d!14755 (and (bvsge lt!29791 #b00000000000000000000000000000000) (bvsle lt!29791 (bvsub (size!2070 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!44735 () (_ BitVec 32))

(assert (=> d!14755 (= lt!29791 e!44735)))

(declare-fun c!9658 () Bool)

(assert (=> d!14755 (= c!9658 (bvsge #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))))))

(assert (=> d!14755 (and (bvsle #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2070 (_keys!3787 newMap!16)) (size!2070 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))))))))

(assert (=> d!14755 (= (arrayCountValidKeys!0 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) #b00000000000000000000000000000000 (size!2070 (_keys!3787 newMap!16))) lt!29791)))

(declare-fun b!68301 () Bool)

(assert (=> b!68301 (= e!44736 (bvadd #b00000000000000000000000000000001 call!5760))))

(declare-fun b!68302 () Bool)

(assert (=> b!68302 (= e!44735 #b00000000000000000000000000000000)))

(declare-fun b!68303 () Bool)

(assert (=> b!68303 (= e!44735 e!44736)))

(declare-fun c!9659 () Bool)

(assert (=> b!68303 (= c!9659 (validKeyInArray!0 (select (arr!1835 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!5757 () Bool)

(assert (=> bm!5757 (= call!5760 (arrayCountValidKeys!0 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 (_keys!3787 newMap!16))))))

(assert (= (and d!14755 c!9658) b!68302))

(assert (= (and d!14755 (not c!9658)) b!68303))

(assert (= (and b!68303 c!9659) b!68301))

(assert (= (and b!68303 (not c!9659)) b!68300))

(assert (= (or b!68301 b!68300) bm!5757))

(assert (=> b!68303 m!64189))

(assert (=> b!68303 m!64189))

(assert (=> b!68303 m!64203))

(declare-fun m!64255 () Bool)

(assert (=> bm!5757 m!64255))

(assert (=> d!13941 d!14755))

(declare-fun d!14757 () Bool)

(declare-fun e!44739 () Bool)

(assert (=> d!14757 e!44739))

(declare-fun res!36780 () Bool)

(assert (=> d!14757 (=> (not res!36780) (not e!44739))))

(assert (=> d!14757 (= res!36780 (and (bvsge (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000000) (bvslt (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (size!2070 (_keys!3787 newMap!16)))))))

(declare-fun lt!29794 () Unit!1838)

(declare-fun choose!102 ((_ BitVec 64) array!3841 (_ BitVec 32) (_ BitVec 32)) Unit!1838)

(assert (=> d!14757 (= lt!29794 (choose!102 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (mask!6082 newMap!16)))))

(assert (=> d!14757 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14757 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (mask!6082 newMap!16)) lt!29794)))

(declare-fun b!68306 () Bool)

(assert (=> b!68306 (= e!44739 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3842 (store (arr!1835 (_keys!3787 newMap!16)) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2070 (_keys!3787 newMap!16))) (mask!6082 newMap!16)))))

(assert (= (and d!14757 res!36780) b!68306))

(assert (=> d!14757 m!61065))

(declare-fun m!64257 () Bool)

(assert (=> d!14757 m!64257))

(assert (=> d!14757 m!61485))

(assert (=> b!68306 m!61965))

(assert (=> b!68306 m!61935))

(assert (=> d!13941 d!14757))

(assert (=> d!13941 d!13975))

(declare-fun d!14759 () Bool)

(declare-fun res!36781 () Bool)

(declare-fun e!44740 () Bool)

(assert (=> d!14759 (=> res!36781 e!44740)))

(assert (=> d!14759 (= res!36781 (= (select (arr!1835 lt!29117) #b00000000000000000000000000000000) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14759 (= (arrayContainsKey!0 lt!29117 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000) e!44740)))

(declare-fun b!68307 () Bool)

(declare-fun e!44741 () Bool)

(assert (=> b!68307 (= e!44740 e!44741)))

(declare-fun res!36782 () Bool)

(assert (=> b!68307 (=> (not res!36782) (not e!44741))))

(assert (=> b!68307 (= res!36782 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2070 lt!29117)))))

(declare-fun b!68308 () Bool)

(assert (=> b!68308 (= e!44741 (arrayContainsKey!0 lt!29117 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!14759 (not res!36781)) b!68307))

(assert (= (and b!68307 res!36782) b!68308))

(declare-fun m!64259 () Bool)

(assert (=> d!14759 m!64259))

(assert (=> b!68308 m!61065))

(declare-fun m!64261 () Bool)

(assert (=> b!68308 m!64261))

(assert (=> d!13941 d!14759))

(declare-fun d!14761 () Bool)

(declare-fun e!44742 () Bool)

(assert (=> d!14761 e!44742))

(declare-fun res!36783 () Bool)

(assert (=> d!14761 (=> (not res!36783) (not e!44742))))

(assert (=> d!14761 (= res!36783 (and (bvsge (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000000) (bvslt (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (size!2070 lt!29121))))))

(declare-fun lt!29795 () Unit!1838)

(assert (=> d!14761 (= lt!29795 (choose!373 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (defaultEntry!2147 newMap!16)))))

(assert (=> d!14761 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14761 (= (lemmaValidKeyInArrayIsInListMap!82 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (defaultEntry!2147 newMap!16)) lt!29795)))

(declare-fun b!68309 () Bool)

(assert (=> b!68309 (= e!44742 (contains!710 (getCurrentListMap!415 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) (select (arr!1835 lt!29121) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)))))))

(assert (= (and d!14761 res!36783) b!68309))

(declare-fun m!64263 () Bool)

(assert (=> d!14761 m!64263))

(assert (=> d!14761 m!61485))

(assert (=> b!68309 m!61949))

(declare-fun m!64265 () Bool)

(assert (=> b!68309 m!64265))

(assert (=> b!68309 m!61949))

(assert (=> b!68309 m!64265))

(declare-fun m!64267 () Bool)

(assert (=> b!68309 m!64267))

(assert (=> d!13941 d!14761))

(declare-fun b!68310 () Bool)

(declare-fun e!44752 () ListLongMap!1403)

(declare-fun call!5766 () ListLongMap!1403)

(assert (=> b!68310 (= e!44752 call!5766)))

(declare-fun b!68311 () Bool)

(declare-fun e!44747 () ListLongMap!1403)

(assert (=> b!68311 (= e!44747 call!5766)))

(declare-fun b!68312 () Bool)

(declare-fun e!44750 () Bool)

(declare-fun lt!29816 () ListLongMap!1403)

(assert (=> b!68312 (= e!44750 (= (apply!72 lt!29816 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2055 newMap!16)))))

(declare-fun bm!5758 () Bool)

(declare-fun call!5767 () ListLongMap!1403)

(assert (=> bm!5758 (= call!5767 (getCurrentListMapNoExtraKeys!54 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun bm!5759 () Bool)

(declare-fun call!5761 () Bool)

(assert (=> bm!5759 (= call!5761 (contains!710 lt!29816 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5760 () Bool)

(declare-fun call!5764 () ListLongMap!1403)

(declare-fun call!5762 () ListLongMap!1403)

(assert (=> bm!5760 (= call!5764 call!5762)))

(declare-fun b!68313 () Bool)

(declare-fun e!44753 () ListLongMap!1403)

(declare-fun call!5765 () ListLongMap!1403)

(assert (=> b!68313 (= e!44753 (+!89 call!5765 (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16))))))

(declare-fun b!68314 () Bool)

(declare-fun e!44745 () Unit!1838)

(declare-fun lt!29817 () Unit!1838)

(assert (=> b!68314 (= e!44745 lt!29817)))

(declare-fun lt!29813 () ListLongMap!1403)

(assert (=> b!68314 (= lt!29813 (getCurrentListMapNoExtraKeys!54 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29815 () (_ BitVec 64))

(assert (=> b!68314 (= lt!29815 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29805 () (_ BitVec 64))

(assert (=> b!68314 (= lt!29805 (select (arr!1835 lt!29121) #b00000000000000000000000000000000))))

(declare-fun lt!29804 () Unit!1838)

(assert (=> b!68314 (= lt!29804 (addStillContains!48 lt!29813 lt!29815 (zeroValue!2055 newMap!16) lt!29805))))

(assert (=> b!68314 (contains!710 (+!89 lt!29813 (tuple2!2093 lt!29815 (zeroValue!2055 newMap!16))) lt!29805)))

(declare-fun lt!29797 () Unit!1838)

(assert (=> b!68314 (= lt!29797 lt!29804)))

(declare-fun lt!29810 () ListLongMap!1403)

(assert (=> b!68314 (= lt!29810 (getCurrentListMapNoExtraKeys!54 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29807 () (_ BitVec 64))

(assert (=> b!68314 (= lt!29807 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29799 () (_ BitVec 64))

(assert (=> b!68314 (= lt!29799 (select (arr!1835 lt!29121) #b00000000000000000000000000000000))))

(declare-fun lt!29800 () Unit!1838)

(assert (=> b!68314 (= lt!29800 (addApplyDifferent!48 lt!29810 lt!29807 (minValue!2055 newMap!16) lt!29799))))

(assert (=> b!68314 (= (apply!72 (+!89 lt!29810 (tuple2!2093 lt!29807 (minValue!2055 newMap!16))) lt!29799) (apply!72 lt!29810 lt!29799))))

(declare-fun lt!29814 () Unit!1838)

(assert (=> b!68314 (= lt!29814 lt!29800)))

(declare-fun lt!29802 () ListLongMap!1403)

(assert (=> b!68314 (= lt!29802 (getCurrentListMapNoExtraKeys!54 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29801 () (_ BitVec 64))

(assert (=> b!68314 (= lt!29801 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29812 () (_ BitVec 64))

(assert (=> b!68314 (= lt!29812 (select (arr!1835 lt!29121) #b00000000000000000000000000000000))))

(declare-fun lt!29811 () Unit!1838)

(assert (=> b!68314 (= lt!29811 (addApplyDifferent!48 lt!29802 lt!29801 (zeroValue!2055 newMap!16) lt!29812))))

(assert (=> b!68314 (= (apply!72 (+!89 lt!29802 (tuple2!2093 lt!29801 (zeroValue!2055 newMap!16))) lt!29812) (apply!72 lt!29802 lt!29812))))

(declare-fun lt!29803 () Unit!1838)

(assert (=> b!68314 (= lt!29803 lt!29811)))

(declare-fun lt!29806 () ListLongMap!1403)

(assert (=> b!68314 (= lt!29806 (getCurrentListMapNoExtraKeys!54 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)))))

(declare-fun lt!29796 () (_ BitVec 64))

(assert (=> b!68314 (= lt!29796 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29809 () (_ BitVec 64))

(assert (=> b!68314 (= lt!29809 (select (arr!1835 lt!29121) #b00000000000000000000000000000000))))

(assert (=> b!68314 (= lt!29817 (addApplyDifferent!48 lt!29806 lt!29796 (minValue!2055 newMap!16) lt!29809))))

(assert (=> b!68314 (= (apply!72 (+!89 lt!29806 (tuple2!2093 lt!29796 (minValue!2055 newMap!16))) lt!29809) (apply!72 lt!29806 lt!29809))))

(declare-fun e!44751 () Bool)

(declare-fun b!68315 () Bool)

(assert (=> b!68315 (= e!44751 (= (apply!72 lt!29816 (select (arr!1835 lt!29121) #b00000000000000000000000000000000)) (get!1116 (select (arr!1836 lt!29129) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2147 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68315 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2071 lt!29129)))))

(assert (=> b!68315 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 lt!29121)))))

(declare-fun b!68316 () Bool)

(assert (=> b!68316 (= e!44753 e!44752)))

(declare-fun c!9662 () Bool)

(assert (=> b!68316 (= c!9662 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun d!14763 () Bool)

(declare-fun e!44749 () Bool)

(assert (=> d!14763 e!44749))

(declare-fun res!36789 () Bool)

(assert (=> d!14763 (=> (not res!36789) (not e!44749))))

(assert (=> d!14763 (= res!36789 (or (bvsge #b00000000000000000000000000000000 (size!2070 lt!29121)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 lt!29121)))))))

(declare-fun lt!29798 () ListLongMap!1403)

(assert (=> d!14763 (= lt!29816 lt!29798)))

(declare-fun lt!29808 () Unit!1838)

(assert (=> d!14763 (= lt!29808 e!44745)))

(declare-fun c!9664 () Bool)

(declare-fun e!44754 () Bool)

(assert (=> d!14763 (= c!9664 e!44754)))

(declare-fun res!36791 () Bool)

(assert (=> d!14763 (=> (not res!36791) (not e!44754))))

(assert (=> d!14763 (= res!36791 (bvslt #b00000000000000000000000000000000 (size!2070 lt!29121)))))

(assert (=> d!14763 (= lt!29798 e!44753)))

(declare-fun c!9663 () Bool)

(assert (=> d!14763 (= c!9663 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14763 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14763 (= (getCurrentListMap!415 lt!29121 lt!29129 (mask!6082 newMap!16) (extraKeys!2018 newMap!16) (zeroValue!2055 newMap!16) (minValue!2055 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2147 newMap!16)) lt!29816)))

(declare-fun b!68317 () Bool)

(declare-fun e!44748 () Bool)

(declare-fun call!5763 () Bool)

(assert (=> b!68317 (= e!44748 (not call!5763))))

(declare-fun b!68318 () Bool)

(declare-fun res!36788 () Bool)

(assert (=> b!68318 (=> (not res!36788) (not e!44749))))

(assert (=> b!68318 (= res!36788 e!44748)))

(declare-fun c!9661 () Bool)

(assert (=> b!68318 (= c!9661 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!5761 () Bool)

(assert (=> bm!5761 (= call!5766 call!5765)))

(declare-fun b!68319 () Bool)

(declare-fun e!44743 () Bool)

(assert (=> b!68319 (= e!44749 e!44743)))

(declare-fun c!9660 () Bool)

(assert (=> b!68319 (= c!9660 (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68320 () Bool)

(assert (=> b!68320 (= e!44743 e!44750)))

(declare-fun res!36785 () Bool)

(assert (=> b!68320 (= res!36785 call!5761)))

(assert (=> b!68320 (=> (not res!36785) (not e!44750))))

(declare-fun bm!5762 () Bool)

(assert (=> bm!5762 (= call!5765 (+!89 (ite c!9663 call!5767 (ite c!9662 call!5762 call!5764)) (ite (or c!9663 c!9662) (tuple2!2093 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2055 newMap!16)) (tuple2!2093 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2055 newMap!16)))))))

(declare-fun b!68321 () Bool)

(declare-fun c!9665 () Bool)

(assert (=> b!68321 (= c!9665 (and (not (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2018 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68321 (= e!44752 e!44747)))

(declare-fun bm!5763 () Bool)

(assert (=> bm!5763 (= call!5762 call!5767)))

(declare-fun b!68322 () Bool)

(assert (=> b!68322 (= e!44754 (validKeyInArray!0 (select (arr!1835 lt!29121) #b00000000000000000000000000000000)))))

(declare-fun b!68323 () Bool)

(declare-fun res!36787 () Bool)

(assert (=> b!68323 (=> (not res!36787) (not e!44749))))

(declare-fun e!44755 () Bool)

(assert (=> b!68323 (= res!36787 e!44755)))

(declare-fun res!36784 () Bool)

(assert (=> b!68323 (=> res!36784 e!44755)))

(declare-fun e!44746 () Bool)

(assert (=> b!68323 (= res!36784 (not e!44746))))

(declare-fun res!36786 () Bool)

(assert (=> b!68323 (=> (not res!36786) (not e!44746))))

(assert (=> b!68323 (= res!36786 (bvslt #b00000000000000000000000000000000 (size!2070 lt!29121)))))

(declare-fun b!68324 () Bool)

(declare-fun e!44744 () Bool)

(assert (=> b!68324 (= e!44748 e!44744)))

(declare-fun res!36792 () Bool)

(assert (=> b!68324 (= res!36792 call!5763)))

(assert (=> b!68324 (=> (not res!36792) (not e!44744))))

(declare-fun b!68325 () Bool)

(assert (=> b!68325 (= e!44743 (not call!5761))))

(declare-fun b!68326 () Bool)

(assert (=> b!68326 (= e!44747 call!5764)))

(declare-fun b!68327 () Bool)

(declare-fun Unit!1914 () Unit!1838)

(assert (=> b!68327 (= e!44745 Unit!1914)))

(declare-fun b!68328 () Bool)

(assert (=> b!68328 (= e!44755 e!44751)))

(declare-fun res!36790 () Bool)

(assert (=> b!68328 (=> (not res!36790) (not e!44751))))

(assert (=> b!68328 (= res!36790 (contains!710 lt!29816 (select (arr!1835 lt!29121) #b00000000000000000000000000000000)))))

(assert (=> b!68328 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2070 lt!29121)))))

(declare-fun bm!5764 () Bool)

(assert (=> bm!5764 (= call!5763 (contains!710 lt!29816 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68329 () Bool)

(assert (=> b!68329 (= e!44746 (validKeyInArray!0 (select (arr!1835 lt!29121) #b00000000000000000000000000000000)))))

(declare-fun b!68330 () Bool)

(assert (=> b!68330 (= e!44744 (= (apply!72 lt!29816 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2055 newMap!16)))))

(assert (= (and d!14763 c!9663) b!68313))

(assert (= (and d!14763 (not c!9663)) b!68316))

(assert (= (and b!68316 c!9662) b!68310))

(assert (= (and b!68316 (not c!9662)) b!68321))

(assert (= (and b!68321 c!9665) b!68311))

(assert (= (and b!68321 (not c!9665)) b!68326))

(assert (= (or b!68311 b!68326) bm!5760))

(assert (= (or b!68310 bm!5760) bm!5763))

(assert (= (or b!68310 b!68311) bm!5761))

(assert (= (or b!68313 bm!5763) bm!5758))

(assert (= (or b!68313 bm!5761) bm!5762))

(assert (= (and d!14763 res!36791) b!68322))

(assert (= (and d!14763 c!9664) b!68314))

(assert (= (and d!14763 (not c!9664)) b!68327))

(assert (= (and d!14763 res!36789) b!68323))

(assert (= (and b!68323 res!36786) b!68329))

(assert (= (and b!68323 (not res!36784)) b!68328))

(assert (= (and b!68328 res!36790) b!68315))

(assert (= (and b!68323 res!36787) b!68318))

(assert (= (and b!68318 c!9661) b!68324))

(assert (= (and b!68318 (not c!9661)) b!68317))

(assert (= (and b!68324 res!36792) b!68330))

(assert (= (or b!68324 b!68317) bm!5764))

(assert (= (and b!68318 res!36788) b!68319))

(assert (= (and b!68319 c!9660) b!68320))

(assert (= (and b!68319 (not c!9660)) b!68325))

(assert (= (and b!68320 res!36785) b!68312))

(assert (= (or b!68320 b!68325) bm!5759))

(declare-fun b_lambda!3041 () Bool)

(assert (=> (not b_lambda!3041) (not b!68315)))

(assert (=> b!68315 t!4955))

(declare-fun b_and!4207 () Bool)

(assert (= b_and!4203 (and (=> t!4955 result!2591) b_and!4207)))

(assert (=> b!68315 t!4957))

(declare-fun b_and!4209 () Bool)

(assert (= b_and!4205 (and (=> t!4957 result!2593) b_and!4209)))

(declare-fun m!64269 () Bool)

(assert (=> b!68314 m!64269))

(declare-fun m!64271 () Bool)

(assert (=> b!68314 m!64271))

(declare-fun m!64273 () Bool)

(assert (=> b!68314 m!64273))

(declare-fun m!64275 () Bool)

(assert (=> b!68314 m!64275))

(declare-fun m!64277 () Bool)

(assert (=> b!68314 m!64277))

(declare-fun m!64279 () Bool)

(assert (=> b!68314 m!64279))

(declare-fun m!64281 () Bool)

(assert (=> b!68314 m!64281))

(declare-fun m!64283 () Bool)

(assert (=> b!68314 m!64283))

(declare-fun m!64285 () Bool)

(assert (=> b!68314 m!64285))

(declare-fun m!64287 () Bool)

(assert (=> b!68314 m!64287))

(declare-fun m!64289 () Bool)

(assert (=> b!68314 m!64289))

(assert (=> b!68314 m!64277))

(assert (=> b!68314 m!64285))

(declare-fun m!64291 () Bool)

(assert (=> b!68314 m!64291))

(declare-fun m!64293 () Bool)

(assert (=> b!68314 m!64293))

(declare-fun m!64295 () Bool)

(assert (=> b!68314 m!64295))

(assert (=> b!68314 m!64295))

(declare-fun m!64297 () Bool)

(assert (=> b!68314 m!64297))

(assert (=> b!68314 m!64275))

(declare-fun m!64299 () Bool)

(assert (=> b!68314 m!64299))

(declare-fun m!64301 () Bool)

(assert (=> b!68314 m!64301))

(declare-fun m!64303 () Bool)

(assert (=> b!68312 m!64303))

(declare-fun m!64305 () Bool)

(assert (=> b!68330 m!64305))

(assert (=> b!68329 m!64293))

(assert (=> b!68329 m!64293))

(declare-fun m!64307 () Bool)

(assert (=> b!68329 m!64307))

(declare-fun m!64309 () Bool)

(assert (=> b!68313 m!64309))

(assert (=> bm!5758 m!64289))

(declare-fun m!64311 () Bool)

(assert (=> bm!5759 m!64311))

(assert (=> b!68322 m!64293))

(assert (=> b!68322 m!64293))

(assert (=> b!68322 m!64307))

(assert (=> d!14763 m!61485))

(declare-fun m!64313 () Bool)

(assert (=> bm!5762 m!64313))

(declare-fun m!64315 () Bool)

(assert (=> bm!5764 m!64315))

(assert (=> b!68315 m!64293))

(assert (=> b!68315 m!61491))

(assert (=> b!68315 m!64293))

(declare-fun m!64317 () Bool)

(assert (=> b!68315 m!64317))

(declare-fun m!64319 () Bool)

(assert (=> b!68315 m!64319))

(assert (=> b!68315 m!64319))

(assert (=> b!68315 m!61491))

(declare-fun m!64321 () Bool)

(assert (=> b!68315 m!64321))

(assert (=> b!68328 m!64293))

(assert (=> b!68328 m!64293))

(declare-fun m!64323 () Bool)

(assert (=> b!68328 m!64323))

(assert (=> d!13941 d!14763))

(declare-fun d!14765 () Bool)

(assert (=> d!14765 (= (arrayCountValidKeys!0 lt!29128 (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (bvadd (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!29820 () Unit!1838)

(declare-fun choose!2 (array!3841 (_ BitVec 32)) Unit!1838)

(assert (=> d!14765 (= lt!29820 (choose!2 lt!29128 (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))))))

(declare-fun e!44758 () Bool)

(assert (=> d!14765 e!44758))

(declare-fun res!36797 () Bool)

(assert (=> d!14765 (=> (not res!36797) (not e!44758))))

(assert (=> d!14765 (= res!36797 (and (bvsge (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) #b00000000000000000000000000000000) (bvslt (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)) (size!2070 lt!29128))))))

(assert (=> d!14765 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!29128 (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803))) lt!29820)))

(declare-fun b!68335 () Bool)

(declare-fun res!36798 () Bool)

(assert (=> b!68335 (=> (not res!36798) (not e!44758))))

(assert (=> b!68335 (= res!36798 (validKeyInArray!0 (select (arr!1835 lt!29128) (ite c!9187 (index!3063 lt!28803) (index!3060 lt!28803)))))))

(declare-fun b!68336 () Bool)

(assert (=> b!68336 (= e!44758 (bvslt (size!2070 lt!29128) #b01111111111111111111111111111111))))

(assert (= (and d!14765 res!36797) b!68335))

(assert (= (and b!68335 res!36798) b!68336))

(assert (=> d!14765 m!61941))

(declare-fun m!64325 () Bool)

(assert (=> d!14765 m!64325))

(assert (=> b!68335 m!64159))

(assert (=> b!68335 m!64159))

(assert (=> b!68335 m!64161))

(assert (=> d!13941 d!14765))

(declare-fun d!14767 () Bool)

(assert (=> d!14767 (= (isEmpty!307 lt!28955) (isEmpty!308 (toList!717 lt!28955)))))

(declare-fun bs!2950 () Bool)

(assert (= bs!2950 d!14767))

(declare-fun m!64327 () Bool)

(assert (=> bs!2950 m!64327))

(assert (=> b!66897 d!14767))

(declare-fun lt!29825 () SeekEntryResult!233)

(declare-fun d!14769 () Bool)

(assert (=> d!14769 (and (or ((_ is Undefined!233) lt!29825) (not ((_ is Found!233) lt!29825)) (and (bvsge (index!3061 lt!29825) #b00000000000000000000000000000000) (bvslt (index!3061 lt!29825) (size!2070 (_keys!3787 newMap!16))))) (or ((_ is Undefined!233) lt!29825) ((_ is Found!233) lt!29825) (not ((_ is MissingVacant!233) lt!29825)) (not (= (index!3063 lt!29825) (index!3062 lt!29148))) (and (bvsge (index!3063 lt!29825) #b00000000000000000000000000000000) (bvslt (index!3063 lt!29825) (size!2070 (_keys!3787 newMap!16))))) (or ((_ is Undefined!233) lt!29825) (ite ((_ is Found!233) lt!29825) (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3061 lt!29825)) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)) (and ((_ is MissingVacant!233) lt!29825) (= (index!3063 lt!29825) (index!3062 lt!29148)) (= (select (arr!1835 (_keys!3787 newMap!16)) (index!3063 lt!29825)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!44765 () SeekEntryResult!233)

(assert (=> d!14769 (= lt!29825 e!44765)))

(declare-fun c!9673 () Bool)

(assert (=> d!14769 (= c!9673 (bvsge (x!10703 lt!29148) #b01111111111111111111111111111110))))

(declare-fun lt!29826 () (_ BitVec 64))

(assert (=> d!14769 (= lt!29826 (select (arr!1835 (_keys!3787 newMap!16)) (index!3062 lt!29148)))))

(assert (=> d!14769 (validMask!0 (mask!6082 newMap!16))))

(assert (=> d!14769 (= (seekKeyOrZeroReturnVacant!0 (x!10703 lt!29148) (index!3062 lt!29148) (index!3062 lt!29148) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)) lt!29825)))

(declare-fun b!68349 () Bool)

(declare-fun e!44766 () SeekEntryResult!233)

(assert (=> b!68349 (= e!44765 e!44766)))

(declare-fun c!9672 () Bool)

(assert (=> b!68349 (= c!9672 (= lt!29826 (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!68350 () Bool)

(declare-fun c!9674 () Bool)

(assert (=> b!68350 (= c!9674 (= lt!29826 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44767 () SeekEntryResult!233)

(assert (=> b!68350 (= e!44766 e!44767)))

(declare-fun b!68351 () Bool)

(assert (=> b!68351 (= e!44766 (Found!233 (index!3062 lt!29148)))))

(declare-fun b!68352 () Bool)

(assert (=> b!68352 (= e!44767 (MissingVacant!233 (index!3062 lt!29148)))))

(declare-fun b!68353 () Bool)

(assert (=> b!68353 (= e!44767 (seekKeyOrZeroReturnVacant!0 (bvadd (x!10703 lt!29148) #b00000000000000000000000000000001) (nextIndex!0 (index!3062 lt!29148) (x!10703 lt!29148) (mask!6082 newMap!16)) (index!3062 lt!29148) (select (arr!1835 (_keys!3787 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3787 newMap!16) (mask!6082 newMap!16)))))

(declare-fun b!68354 () Bool)

(assert (=> b!68354 (= e!44765 Undefined!233)))

(assert (= (and d!14769 c!9673) b!68354))

(assert (= (and d!14769 (not c!9673)) b!68349))

(assert (= (and b!68349 c!9672) b!68351))

(assert (= (and b!68349 (not c!9672)) b!68350))

(assert (= (and b!68350 c!9674) b!68352))

(assert (= (and b!68350 (not c!9674)) b!68353))

(declare-fun m!64329 () Bool)

(assert (=> d!14769 m!64329))

(declare-fun m!64331 () Bool)

(assert (=> d!14769 m!64331))

(assert (=> d!14769 m!61995))

(assert (=> d!14769 m!61485))

(declare-fun m!64333 () Bool)

(assert (=> b!68353 m!64333))

(assert (=> b!68353 m!64333))

(assert (=> b!68353 m!61065))

(declare-fun m!64335 () Bool)

(assert (=> b!68353 m!64335))

(assert (=> b!67087 d!14769))

(declare-fun d!14771 () Bool)

(assert (=> d!14771 (= (get!1120 (getValueByKey!130 (toList!717 lt!28863) lt!28873)) (v!2482 (getValueByKey!130 (toList!717 lt!28863) lt!28873)))))

(assert (=> d!13921 d!14771))

(declare-fun d!14773 () Bool)

(declare-fun c!9675 () Bool)

(assert (=> d!14773 (= c!9675 (and ((_ is Cons!1462) (toList!717 lt!28863)) (= (_1!1057 (h!2046 (toList!717 lt!28863))) lt!28873)))))

(declare-fun e!44768 () Option!136)

(assert (=> d!14773 (= (getValueByKey!130 (toList!717 lt!28863) lt!28873) e!44768)))

(declare-fun b!68356 () Bool)

(declare-fun e!44769 () Option!136)

(assert (=> b!68356 (= e!44768 e!44769)))

(declare-fun c!9676 () Bool)

(assert (=> b!68356 (= c!9676 (and ((_ is Cons!1462) (toList!717 lt!28863)) (not (= (_1!1057 (h!2046 (toList!717 lt!28863))) lt!28873))))))

(declare-fun b!68355 () Bool)

(assert (=> b!68355 (= e!44768 (Some!135 (_2!1057 (h!2046 (toList!717 lt!28863)))))))

(declare-fun b!68357 () Bool)

(assert (=> b!68357 (= e!44769 (getValueByKey!130 (t!4948 (toList!717 lt!28863)) lt!28873))))

(declare-fun b!68358 () Bool)

(assert (=> b!68358 (= e!44769 None!134)))

(assert (= (and d!14773 c!9675) b!68355))

(assert (= (and d!14773 (not c!9675)) b!68356))

(assert (= (and b!68356 c!9676) b!68357))

(assert (= (and b!68356 (not c!9676)) b!68358))

(declare-fun m!64337 () Bool)

(assert (=> b!68357 m!64337))

(assert (=> d!13921 d!14773))

(declare-fun b!68359 () Bool)

(declare-fun e!44770 () Bool)

(assert (=> b!68359 (= e!44770 tp_is_empty!2451)))

(declare-fun mapNonEmpty!3089 () Bool)

(declare-fun mapRes!3089 () Bool)

(declare-fun tp!8381 () Bool)

(assert (=> mapNonEmpty!3089 (= mapRes!3089 (and tp!8381 e!44770))))

(declare-fun mapValue!3089 () ValueCell!882)

(declare-fun mapRest!3089 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapKey!3089 () (_ BitVec 32))

(assert (=> mapNonEmpty!3089 (= mapRest!3088 (store mapRest!3089 mapKey!3089 mapValue!3089))))

(declare-fun b!68360 () Bool)

(declare-fun e!44771 () Bool)

(assert (=> b!68360 (= e!44771 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3089 () Bool)

(assert (=> mapIsEmpty!3089 mapRes!3089))

(declare-fun condMapEmpty!3089 () Bool)

(declare-fun mapDefault!3089 () ValueCell!882)

(assert (=> mapNonEmpty!3088 (= condMapEmpty!3089 (= mapRest!3088 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3089)))))

(assert (=> mapNonEmpty!3088 (= tp!8380 (and e!44771 mapRes!3089))))

(assert (= (and mapNonEmpty!3088 condMapEmpty!3089) mapIsEmpty!3089))

(assert (= (and mapNonEmpty!3088 (not condMapEmpty!3089)) mapNonEmpty!3089))

(assert (= (and mapNonEmpty!3089 ((_ is ValueCellFull!882) mapValue!3089)) b!68359))

(assert (= (and mapNonEmpty!3088 ((_ is ValueCellFull!882) mapDefault!3089)) b!68360))

(declare-fun m!64339 () Bool)

(assert (=> mapNonEmpty!3089 m!64339))

(declare-fun b!68361 () Bool)

(declare-fun e!44772 () Bool)

(assert (=> b!68361 (= e!44772 tp_is_empty!2451)))

(declare-fun mapNonEmpty!3090 () Bool)

(declare-fun mapRes!3090 () Bool)

(declare-fun tp!8382 () Bool)

(assert (=> mapNonEmpty!3090 (= mapRes!3090 (and tp!8382 e!44772))))

(declare-fun mapKey!3090 () (_ BitVec 32))

(declare-fun mapRest!3090 () (Array (_ BitVec 32) ValueCell!882))

(declare-fun mapValue!3090 () ValueCell!882)

(assert (=> mapNonEmpty!3090 (= mapRest!3087 (store mapRest!3090 mapKey!3090 mapValue!3090))))

(declare-fun b!68362 () Bool)

(declare-fun e!44773 () Bool)

(assert (=> b!68362 (= e!44773 tp_is_empty!2451)))

(declare-fun mapIsEmpty!3090 () Bool)

(assert (=> mapIsEmpty!3090 mapRes!3090))

(declare-fun condMapEmpty!3090 () Bool)

(declare-fun mapDefault!3090 () ValueCell!882)

(assert (=> mapNonEmpty!3087 (= condMapEmpty!3090 (= mapRest!3087 ((as const (Array (_ BitVec 32) ValueCell!882)) mapDefault!3090)))))

(assert (=> mapNonEmpty!3087 (= tp!8379 (and e!44773 mapRes!3090))))

(assert (= (and mapNonEmpty!3087 condMapEmpty!3090) mapIsEmpty!3090))

(assert (= (and mapNonEmpty!3087 (not condMapEmpty!3090)) mapNonEmpty!3090))

(assert (= (and mapNonEmpty!3090 ((_ is ValueCellFull!882) mapValue!3090)) b!68361))

(assert (= (and mapNonEmpty!3087 ((_ is ValueCellFull!882) mapDefault!3090)) b!68362))

(declare-fun m!64341 () Bool)

(assert (=> mapNonEmpty!3090 m!64341))

(declare-fun b_lambda!3043 () Bool)

(assert (= b_lambda!3017 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3043)))

(declare-fun b_lambda!3045 () Bool)

(assert (= b_lambda!3013 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3045)))

(declare-fun b_lambda!3047 () Bool)

(assert (= b_lambda!3029 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3047)))

(declare-fun b_lambda!3049 () Bool)

(assert (= b_lambda!3031 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3049)))

(declare-fun b_lambda!3051 () Bool)

(assert (= b_lambda!3027 (or (and b!66357 b_free!2069) (and b!66361 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))) b_lambda!3051)))

(declare-fun b_lambda!3053 () Bool)

(assert (= b_lambda!3015 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3053)))

(declare-fun b_lambda!3055 () Bool)

(assert (= b_lambda!3023 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3055)))

(declare-fun b_lambda!3057 () Bool)

(assert (= b_lambda!3019 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3057)))

(declare-fun b_lambda!3059 () Bool)

(assert (= b_lambda!3033 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3059)))

(declare-fun b_lambda!3061 () Bool)

(assert (= b_lambda!3039 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3061)))

(declare-fun b_lambda!3063 () Bool)

(assert (= b_lambda!3035 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3063)))

(declare-fun b_lambda!3065 () Bool)

(assert (= b_lambda!3041 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3065)))

(declare-fun b_lambda!3067 () Bool)

(assert (= b_lambda!3025 (or (and b!66357 b_free!2069) (and b!66361 b_free!2071 (= (defaultEntry!2147 newMap!16) (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))))) b_lambda!3067)))

(declare-fun b_lambda!3069 () Bool)

(assert (= b_lambda!3021 (or (and b!66357 b_free!2069 (= (defaultEntry!2147 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2147 newMap!16))) (and b!66361 b_free!2071) b_lambda!3069)))

(check-sat (not b!67295) (not b!67423) (not b!68129) (not d!14535) (not b!67450) (not b!68188) (not b!67917) (not d!14523) (not b_lambda!3069) (not b!67624) (not b!68238) (not b!67267) (not b!67803) (not d!14581) (not d!14533) (not b!67796) (not bm!5695) (not d!14763) (not d!14011) (not b!67518) (not b!67354) (not b!67770) (not b!67769) (not b!68125) (not b!67642) (not b!67212) (not b!67786) (not b!67255) b_and!4209 (not b!67507) (not b!67528) (not b!68088) (not b!67763) (not d!14431) (not b!67601) (not b!67442) (not b!67801) (not b!68141) (not b!67322) (not d!14077) (not b!68160) (not b!67480) (not b!68119) (not b!67876) (not b_lambda!3049) (not d!14357) (not b!67857) (not d!14725) (not b!68275) (not d!14597) (not d!14339) (not d!14659) (not b!67440) (not d!14765) (not b!67668) (not b!68013) (not d!14623) (not b!67539) (not b!67886) (not b!67382) (not d!14517) (not bm!5718) (not b!67417) (not b!67606) (not b!67391) (not b!68030) (not d!14575) (not d!14353) (not bm!5759) (not b!68292) (not d!14469) (not b!68058) (not d!14327) (not d!14695) (not bm!5735) (not b!67271) (not d!14049) (not d!14429) (not b!68303) (not bm!5748) (not b!67912) (not b!68127) (not d!14465) (not b!68211) (not b!67677) (not b!67736) (not d!14293) (not b!67632) (not d!14031) (not b!67402) (not b!67782) (not b_lambda!3047) (not b!67641) (not d!14379) (not mapNonEmpty!3089) (not b!67328) (not b!67810) (not d!14407) (not d!14447) (not b!67634) (not d!14259) (not b!67337) (not b!68231) (not d!14115) (not b!67523) (not d!14333) (not b!67250) (not b!67765) (not d!14761) (not b!68010) (not bm!5689) (not b!67553) (not b!67428) (not b!67240) (not b!67513) (not b!67438) (not d!14683) (not b!67715) (not b!67474) (not b!67511) (not b!67365) (not b!67209) (not b!68111) (not b!68253) (not d!14225) (not b!67771) (not d!14467) (not d!14089) (not b!67955) (not b!67422) (not d!14521) (not b!67396) (not b!67933) (not b!67302) (not b!68328) (not b!67799) (not b_lambda!3059) (not b!67931) (not b!68122) (not b!67725) (not b!67909) (not b!67502) (not b!67588) (not d!14651) (not b!67759) (not d!14427) (not d!14247) (not d!14043) (not d!14057) (not b!68185) (not b!67802) (not bm!5745) (not b!68080) (not bm!5655) (not b!67574) (not b!67812) (not bm!5706) (not d!14495) (not b!67822) (not b_lambda!3063) (not b!67655) (not d!14059) (not b_lambda!3003) (not b!67980) (not b!67924) (not b!67702) (not d!14093) (not b!67470) (not d!14445) (not d!14179) (not bm!5686) (not d!14475) (not b!67381) (not d!14303) (not b!68268) (not b!68248) (not d!14215) (not bm!5756) (not d!14573) (not b!68240) (not b!67317) (not d!14551) (not b!68143) (not d!14151) (not d!14723) (not b!67252) (not b!67289) (not b!68027) (not b!68044) (not b!67843) (not b!67603) (not d!14203) (not b!67388) (not bm!5648) (not d!14027) (not b!67875) (not b!67848) (not b!67788) (not b!68041) (not b!67557) (not d!14767) (not b!68090) (not d!14711) (not d!14747) (not b!68103) (not d!14497) (not d!14107) (not b!67376) (not b!67820) (not b!67830) (not d!14033) (not d!14239) (not d!14463) (not d!14489) (not b!67547) (not b!68219) (not b!67242) (not b!67849) (not d!14701) (not b!68060) (not b!67550) (not b!68243) (not d!14601) (not b!67501) (not bm!5702) (not bm!5691) (not b!67329) (not b!68287) (not d!14323) (not b!67452) (not b!68309) (not d!14385) (not bm!5672) (not bm!5728) (not d!14591) (not b!67477) (not b!67630) (not b!68050) (not b!67894) (not d!14749) (not b!67793) (not bm!5654) (not b!67591) (not b_lambda!3011) (not d!14041) (not b!67460) (not d!14209) (not d!14265) (not b!67326) (not bm!5738) (not b!67961) (not b!67552) (not b!67437) (not d!14349) (not d!14125) (not bm!5743) (not d!14091) (not b!68230) (not bm!5644) (not b!68015) (not d!14417) (not b!68074) (not b!68285) (not b!67352) (not b_lambda!3057) (not b!67335) (not d!14015) (not b!67973) (not b!67884) (not b!68085) (not bm!5755) (not b!68210) (not b!67285) (not b!67846) (not b!67541) (not d!14189) (not d!14071) (not bm!5640) (not d!14183) (not b!67635) (not b!68272) (not b!67264) (not d!14261) (not mapNonEmpty!3090) (not d!14085) (not b!67932) (not b!67420) (not b_lambda!3009) (not b!67872) (not b!67936) (not b!67636) (not b!67818) (not b!67946) (not b!68149) (not d!14345) (not b!67710) (not b!67587) (not b!67704) (not b!67640) (not b!67720) (not d!14193) (not b!67207) (not d!14403) (not b!67432) (not d!14101) (not d!14459) (not b!67318) (not b!67871) (not b!67734) (not bm!5722) (not b!67521) (not bm!5747) (not b!67891) (not b!68225) (not b!67617) (not d!14273) (not d!14443) (not b!68284) (not b!67496) (not d!14051) (not b!67709) (not d!14299) (not b!67280) (not b!67309) (not b!67629) (not bm!5752) (not d!14137) (not b_lambda!3053) (not b!67684) (not b!67773) (not b!67948) (not b!67768) (not d!14439) (not b!67345) (not b!67472) (not b!67324) (not d!14171) (not b!67907) (not d!14065) (not d!14351) (not b!68196) (not b!68314) (not d!14715) (not b!67777) (not b!68203) (not d!14721) (not d!14377) (not b!67767) tp_is_empty!2451 (not b!68114) (not b!67293) (not b!68116) (not b!68152) (not d!14633) (not b!68353) (not b!67540) (not b!67927) (not d!14559) (not b!67653) (not b!67545) (not d!14337) (not b!67686) (not bm!5656) (not b!67336) (not b!68171) (not b!68335) (not b!67320) (not b!67625) (not d!14083) (not b_lambda!3005) (not b!67525) (not b!67651) (not d!14199) (not b!67259) (not b!68020) (not b!68229) (not b!68007) (not b!67908) (not b!67247) (not d!14231) (not b!67643) (not b!67430) (not d!14019) (not d!14063) (not d!14201) (not d!14185) (not bm!5676) (not b!68176) (not d!14363) (not b!67327) (not b!67966) (not b!67657) (not b!67914) (not b!67654) (not d!14457) (not d!14257) (not d!14745) (not b!68251) (not b!67941) (not d!14587) (not b!68083) (not d!14481) (not d!14743) (not b!67746) (not b!67844) (not b!67901) (not d!14095) (not bm!5731) (not d!14139) (not b!67334) (not d!14295) (not b!67373) (not b!67485) (not d!14245) (not b!67649) (not d!14617) (not d!14585) (not b!67404) (not d!14607) (not b!67266) (not d!14343) (not bm!5659) (not bm!5754) (not bm!5764) (not b!67594) (not b!68024) (not b_lambda!2987) (not b!67964) (not b!67615) (not d!14625) (not b!67679) (not b!68056) (not bm!5675) (not b!68236) (not bm!5713) (not b!67340) (not b!67755) (not b!67858) (not b!67585) (not b!67360) (not b!67623) (not b!67348) (not b!68312) (not b_lambda!2991) (not b!67639) (not b!67850) (not b!68093) (not bm!5762) (not b!67362) (not d!14087) (not b_next!2069) (not bm!5669) (not b!67290) (not b!67542) (not bm!5681) (not d!14441) (not b!67761) (not d!14641) (not b!67658) (not b!67581) (not b!68254) (not bm!5757) (not b!68299) (not b!68053) (not b!67611) (not b!67620) (not d!14275) (not b!67666) (not b!68167) (not d!14449) (not b!68106) (not b!68132) (not d!14061) (not b!67571) (not b!67784) (not d!14135) (not b!67794) (not b_lambda!3061) (not b!67344) (not b!67646) (not bm!5651) (not bm!5703) (not b!67681) (not b!68269) (not b!67873) (not b!68039) (not bm!5739) (not b!67832) (not b!68098) (not b!67805) (not d!14235) (not d!14281) (not bm!5734) (not b!68101) (not b!67261) (not b!68157) (not d!14355) (not b!67282) (not b!67752) (not d!14073) (not b!67584) (not b!68137) (not b!68155) (not d!14411) (not d!14149) (not d!14253) (not b!67451) (not d!14335) (not b!67274) (not b_lambda!3067) (not b!68063) (not bm!5711) (not b!67619) (not b!67296) (not d!14391) (not b!67887) (not b!68181) (not b!67392) (not b!67599) (not b!68048) (not b!67578) (not b_lambda!3007) (not d!14105) (not d!14709) (not b!67739) (not b!67757) (not b!67394) (not b!68296) (not d!14433) (not d!14309) (not d!14121) (not d!14311) (not d!14731) (not d!14109) (not b!67406) (not b!68290) (not b!67288) (not b!67301) (not b!67535) (not b!67738) (not b!68071) (not b!67791) (not d!14255) (not d!14677) (not b!67627) (not d!14557) (not d!14017) (not b!68012) (not d!14451) (not b!67597) (not b_next!2071) (not d!14741) (not bm!5679) (not bm!5665) (not b!67942) (not b!68124) (not bm!5712) (not d!14285) (not d!14425) (not d!14501) (not d!14421) (not d!14527) (not d!14769) (not d!14375) (not bm!5643) (not b!68330) (not b!67580) (not d!14681) (not b!67385) (not b!68165) (not b!67851) (not b_lambda!3037) (not b!67879) (not d!14579) (not d!14571) (not bm!5678) (not b!68172) (not b!67463) (not b!67882) (not d!14103) (not b!67856) (not b!67645) (not d!14393) (not b!67865) (not b!67705) (not b!67412) (not d!14627) (not b!67764) (not d!14279) (not b!68174) (not b!67911) (not d!14619) (not d!14347) (not b!68055) (not b!68077) (not d!14665) (not b!68017) (not d!14405) (not d!14461) (not b!67800) (not b!67315) (not d!14331) (not b!68147) (not b!67300) (not b!67458) (not b!67855) (not b!67504) (not b!67537) (not b_lambda!3055) (not b!67922) (not b!68308) (not b_lambda!3065) (not b!67600) (not d!14381) (not b!67701) (not d!14081) (not d!14643) (not b!67482) (not b!67661) (not b!67685) (not b!67815) (not b!67248) (not b!68291) (not b_lambda!3043) (not d!14473) (not b!67694) (not b!67762) (not b!67245) (not d!14757) (not b!68193) (not b!67560) (not b!68209) (not b!67515) (not b!68183) (not b!67939) (not b!67555) (not bm!5725) (not d!14389) (not b!68108) (not b!67569) (not d!14637) (not b!68158) (not bm!5680) (not d!14577) (not b!68075) (not d!14119) (not b!67325) (not bm!5749) (not b!67919) (not b!67421) (not b!68178) (not d!14477) (not d!14341) (not d!14021) (not b!67210) (not d!14529) (not d!14565) (not b!68033) (not b!67874) (not b!68322) (not b!67566) (not bm!5701) (not d!14703) (not b!67718) (not b!67672) (not b_lambda!2989) (not b_lambda!3051) (not d!14243) (not d!14127) (not bm!5662) (not b!68068) (not d!14267) (not b!68252) (not d!14223) (not b!67835) (not bm!5696) (not b!68227) (not b!68212) (not b!67700) (not bm!5699) (not d!14589) (not b!68200) (not d!14097) (not b!67520) (not b!67483) (not b!68190) (not b!67339) (not b!67893) (not b!67487) (not b!68226) (not b!67789) (not b!68163) (not d!14419) (not b!67717) (not b!67637) (not b!67976) (not b!68198) (not d!14371) (not d!14453) (not b!67357) (not b!67951) (not b!67741) (not b!67435) (not d!14645) (not b!68329) (not b!67712) (not b!67742) (not d!14541) (not b!67731) (not d!14319) (not d!14079) (not b!67532) (not b!67888) (not d!14455) (not b!67852) (not d!14039) (not b!67269) (not b!67343) (not b_lambda!2979) (not d!14737) (not bm!5746) (not b!67351) (not b!68306) (not d!14499) (not b!67589) (not b!68270) (not b!67978) (not bm!5645) (not d!14693) (not b!67892) (not b!68313) (not d!14329) (not b!67455) (not b!68357) (not d!14437) (not b!67809) (not d!14719) (not b!68187) (not b!68036) (not b!67299) (not b!68078) (not d!14009) (not d!14099) (not b!68086) (not b!67797) (not b!67316) (not b!67943) (not b!67779) (not b!67825) (not b!67475) (not b!67445) (not d!14655) (not b!67333) (not b!68267) (not d!14055) (not d!14195) (not b!68100) (not d!14707) (not b!68173) (not b!68195) (not d!14611) (not d!14367) (not d!14649) (not d!14515) (not b!67970) (not b!68315) (not b!68117) (not b_lambda!3045) (not d!14161) (not b!68232) (not b!67543) (not d!14117) (not b!67239) (not b!67468) (not b!67605) (not bm!5684) (not b!68293) (not bm!5677) (not d!14325) (not b!68139) (not d!14603) (not b!67379) (not bm!5650) (not b!68145) (not b!67729) (not b!68261) (not b!67409) (not b!67722) (not b!68161) (not b!67774) (not b!68005) (not bm!5690) (not b!67319) b_and!4207 (not d!14035) (not d!14217) (not bm!5719) (not b!67370) (not b!67490) (not bm!5758) (not d!14505) (not d!14211) (not b!67414) (not b!67378) (not b!67790) (not b!67920) (not b!67687) (not b!67608) (not b!67806) (not b!67817) (not bm!5708) (not d!14373) (not bm!5666) (not d!14075) (not b!67405) (not b!67968) (not b!68026) (not b!67743) (not d!14249) (not bm!5740) (not d!14519) (not d!14609) (not b!67842) (not b!67707) (not d!14315) (not bm!5694) (not b!67958))
(check-sat b_and!4207 b_and!4209 (not b_next!2069) (not b_next!2071))
