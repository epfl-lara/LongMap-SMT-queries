; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9264 () Bool)

(assert start!9264)

(declare-fun b!66230 () Bool)

(declare-fun b_free!2065 () Bool)

(declare-fun b_next!2065 () Bool)

(assert (=> b!66230 (= b_free!2065 (not b_next!2065))))

(declare-fun tp!8350 () Bool)

(declare-fun b_and!4089 () Bool)

(assert (=> b!66230 (= tp!8350 b_and!4089)))

(declare-fun b!66241 () Bool)

(declare-fun b_free!2067 () Bool)

(declare-fun b_next!2067 () Bool)

(assert (=> b!66241 (= b_free!2067 (not b_next!2067))))

(declare-fun tp!8349 () Bool)

(declare-fun b_and!4091 () Bool)

(assert (=> b!66241 (= tp!8349 b_and!4091)))

(declare-datatypes ((V!2913 0))(
  ( (V!2914 (val!1269 Int)) )
))
(declare-datatypes ((array!3823 0))(
  ( (array!3824 (arr!1826 (Array (_ BitVec 32) (_ BitVec 64))) (size!2061 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!881 0))(
  ( (ValueCellFull!881 (v!2477 V!2913)) (EmptyCell!881) )
))
(declare-datatypes ((array!3825 0))(
  ( (array!3826 (arr!1827 (Array (_ BitVec 32) ValueCell!881)) (size!2062 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!670 0))(
  ( (LongMapFixedSize!671 (defaultEntry!2146 Int) (mask!6081 (_ BitVec 32)) (extraKeys!2017 (_ BitVec 32)) (zeroValue!2054 V!2913) (minValue!2054 V!2913) (_size!384 (_ BitVec 32)) (_keys!3786 array!3823) (_values!2129 array!3825) (_vacant!384 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!478 0))(
  ( (Cell!479 (v!2478 LongMapFixedSize!670)) )
))
(declare-datatypes ((LongMap!478 0))(
  ( (LongMap!479 (underlying!250 Cell!478)) )
))
(declare-fun thiss!992 () LongMap!478)

(declare-fun e!43458 () Bool)

(declare-fun tp_is_empty!2449 () Bool)

(declare-fun e!43447 () Bool)

(declare-fun array_inv!1121 (array!3823) Bool)

(declare-fun array_inv!1122 (array!3825) Bool)

(assert (=> b!66230 (= e!43447 (and tp!8350 tp_is_empty!2449 (array_inv!1121 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (array_inv!1122 (_values!2129 (v!2478 (underlying!250 thiss!992)))) e!43458))))

(declare-fun b!66231 () Bool)

(declare-datatypes ((Unit!1824 0))(
  ( (Unit!1825) )
))
(declare-fun e!43452 () Unit!1824)

(declare-fun Unit!1826 () Unit!1824)

(assert (=> b!66231 (= e!43452 Unit!1826)))

(declare-fun b!66232 () Bool)

(declare-fun e!43444 () Bool)

(assert (=> b!66232 (= e!43444 tp_is_empty!2449)))

(declare-fun b!66233 () Bool)

(declare-fun e!43442 () Bool)

(assert (=> b!66233 (= e!43442 tp_is_empty!2449)))

(declare-fun res!35893 () Bool)

(declare-fun e!43450 () Bool)

(assert (=> start!9264 (=> (not res!35893) (not e!43450))))

(declare-fun valid!288 (LongMap!478) Bool)

(assert (=> start!9264 (= res!35893 (valid!288 thiss!992))))

(assert (=> start!9264 e!43450))

(declare-fun e!43453 () Bool)

(assert (=> start!9264 e!43453))

(assert (=> start!9264 true))

(declare-fun e!43445 () Bool)

(assert (=> start!9264 e!43445))

(declare-fun mapNonEmpty!3069 () Bool)

(declare-fun mapRes!3070 () Bool)

(declare-fun tp!8348 () Bool)

(declare-fun e!43456 () Bool)

(assert (=> mapNonEmpty!3069 (= mapRes!3070 (and tp!8348 e!43456))))

(declare-fun mapKey!3070 () (_ BitVec 32))

(declare-fun mapValue!3070 () ValueCell!881)

(declare-fun mapRest!3069 () (Array (_ BitVec 32) ValueCell!881))

(assert (=> mapNonEmpty!3069 (= (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (store mapRest!3069 mapKey!3070 mapValue!3070))))

(declare-fun b!66234 () Bool)

(declare-fun e!43457 () Bool)

(assert (=> b!66234 (= e!43457 e!43447)))

(declare-fun b!66235 () Bool)

(declare-fun res!35888 () Bool)

(assert (=> b!66235 (=> (not res!35888) (not e!43450))))

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!66235 (= res!35888 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!66236 () Bool)

(declare-fun Unit!1827 () Unit!1824)

(assert (=> b!66236 (= e!43452 Unit!1827)))

(declare-fun lt!28519 () Unit!1824)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!36 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) (_ BitVec 32) Int) Unit!1824)

(assert (=> b!66236 (= lt!28519 (lemmaListMapContainsThenArrayContainsFrom!36 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3823 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!66236 (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!28526 () Unit!1824)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3823 (_ BitVec 32) (_ BitVec 32)) Unit!1824)

(assert (=> b!66236 (= lt!28526 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1454 0))(
  ( (Nil!1451) (Cons!1450 (h!2034 (_ BitVec 64)) (t!4928 List!1454)) )
))
(declare-fun arrayNoDuplicates!0 (array!3823 (_ BitVec 32) List!1454) Bool)

(assert (=> b!66236 (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) from!355 Nil!1451)))

(declare-fun lt!28524 () Unit!1824)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3823 (_ BitVec 32) (_ BitVec 64) List!1454) Unit!1824)

(assert (=> b!66236 (= lt!28524 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451)))))

(assert (=> b!66236 false))

(declare-fun b!66237 () Bool)

(declare-fun e!43448 () Bool)

(declare-fun e!43443 () Bool)

(assert (=> b!66237 (= e!43448 e!43443)))

(declare-fun res!35892 () Bool)

(assert (=> b!66237 (=> (not res!35892) (not e!43443))))

(assert (=> b!66237 (= res!35892 (and (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!28522 () V!2913)

(declare-fun get!1122 (ValueCell!881 V!2913) V!2913)

(declare-fun dynLambda!319 (Int (_ BitVec 64)) V!2913)

(assert (=> b!66237 (= lt!28522 (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66238 () Bool)

(declare-fun e!43454 () Bool)

(declare-fun mapRes!3069 () Bool)

(assert (=> b!66238 (= e!43454 (and e!43442 mapRes!3069))))

(declare-fun condMapEmpty!3070 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!670)

(declare-fun mapDefault!3070 () ValueCell!881)

(assert (=> b!66238 (= condMapEmpty!3070 (= (arr!1827 (_values!2129 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3070)))))

(declare-fun b!66239 () Bool)

(declare-fun e!43455 () Bool)

(assert (=> b!66239 (= e!43443 e!43455)))

(declare-fun res!35891 () Bool)

(assert (=> b!66239 (=> (not res!35891) (not e!43455))))

(declare-datatypes ((tuple2!2080 0))(
  ( (tuple2!2081 (_1!1051 Bool) (_2!1051 LongMapFixedSize!670)) )
))
(declare-fun lt!28529 () tuple2!2080)

(assert (=> b!66239 (= res!35891 (and (_1!1051 lt!28529) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!28525 () Unit!1824)

(assert (=> b!66239 (= lt!28525 e!43452)))

(declare-datatypes ((tuple2!2082 0))(
  ( (tuple2!2083 (_1!1052 (_ BitVec 64)) (_2!1052 V!2913)) )
))
(declare-datatypes ((List!1455 0))(
  ( (Nil!1452) (Cons!1451 (h!2035 tuple2!2082) (t!4929 List!1455)) )
))
(declare-datatypes ((ListLongMap!1379 0))(
  ( (ListLongMap!1380 (toList!705 List!1455)) )
))
(declare-fun lt!28518 () ListLongMap!1379)

(declare-fun c!9116 () Bool)

(declare-fun contains!705 (ListLongMap!1379 (_ BitVec 64)) Bool)

(assert (=> b!66239 (= c!9116 (contains!705 lt!28518 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun update!101 (LongMapFixedSize!670 (_ BitVec 64) V!2913) tuple2!2080)

(assert (=> b!66239 (= lt!28529 (update!101 newMap!16 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))

(declare-fun b!66240 () Bool)

(declare-fun e!43441 () Bool)

(assert (=> b!66240 (= e!43441 (= (size!2062 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6081 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!66241 (= e!43445 (and tp!8349 tp_is_empty!2449 (array_inv!1121 (_keys!3786 newMap!16)) (array_inv!1122 (_values!2129 newMap!16)) e!43454))))

(declare-fun b!66242 () Bool)

(assert (=> b!66242 (= e!43455 (not e!43441))))

(declare-fun res!35889 () Bool)

(assert (=> b!66242 (=> res!35889 e!43441)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!66242 (= res!35889 (not (validMask!0 (mask!6081 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun lt!28527 () ListLongMap!1379)

(declare-fun lt!28528 () tuple2!2082)

(declare-fun lt!28520 () tuple2!2082)

(declare-fun +!86 (ListLongMap!1379 tuple2!2082) ListLongMap!1379)

(assert (=> b!66242 (= (+!86 (+!86 lt!28527 lt!28528) lt!28520) (+!86 (+!86 lt!28527 lt!28520) lt!28528))))

(assert (=> b!66242 (= lt!28520 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))

(assert (=> b!66242 (= lt!28528 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))

(declare-fun lt!28523 () Unit!1824)

(declare-fun addCommutativeForDiffKeys!6 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64) V!2913) Unit!1824)

(assert (=> b!66242 (= lt!28523 (addCommutativeForDiffKeys!6 lt!28527 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!51 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) Int) ListLongMap!1379)

(assert (=> b!66242 (= lt!28527 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun mapIsEmpty!3069 () Bool)

(assert (=> mapIsEmpty!3069 mapRes!3070))

(declare-fun b!66243 () Bool)

(assert (=> b!66243 (= e!43456 tp_is_empty!2449)))

(declare-fun mapNonEmpty!3070 () Bool)

(declare-fun tp!8347 () Bool)

(assert (=> mapNonEmpty!3070 (= mapRes!3069 (and tp!8347 e!43444))))

(declare-fun mapRest!3070 () (Array (_ BitVec 32) ValueCell!881))

(declare-fun mapKey!3069 () (_ BitVec 32))

(declare-fun mapValue!3069 () ValueCell!881)

(assert (=> mapNonEmpty!3070 (= (arr!1827 (_values!2129 newMap!16)) (store mapRest!3070 mapKey!3069 mapValue!3069))))

(declare-fun b!66244 () Bool)

(declare-fun e!43449 () Bool)

(assert (=> b!66244 (= e!43458 (and e!43449 mapRes!3070))))

(declare-fun condMapEmpty!3069 () Bool)

(declare-fun mapDefault!3069 () ValueCell!881)

(assert (=> b!66244 (= condMapEmpty!3069 (= (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3069)))))

(declare-fun mapIsEmpty!3070 () Bool)

(assert (=> mapIsEmpty!3070 mapRes!3069))

(declare-fun b!66245 () Bool)

(assert (=> b!66245 (= e!43453 e!43457)))

(declare-fun b!66246 () Bool)

(declare-fun res!35887 () Bool)

(assert (=> b!66246 (=> (not res!35887) (not e!43450))))

(declare-fun valid!289 (LongMapFixedSize!670) Bool)

(assert (=> b!66246 (= res!35887 (valid!289 newMap!16))))

(declare-fun b!66247 () Bool)

(assert (=> b!66247 (= e!43449 tp_is_empty!2449)))

(declare-fun b!66248 () Bool)

(declare-fun res!35890 () Bool)

(assert (=> b!66248 (=> (not res!35890) (not e!43450))))

(assert (=> b!66248 (= res!35890 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6081 newMap!16)) (_size!384 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!66249 () Bool)

(assert (=> b!66249 (= e!43450 e!43448)))

(declare-fun res!35894 () Bool)

(assert (=> b!66249 (=> (not res!35894) (not e!43448))))

(declare-fun lt!28521 () ListLongMap!1379)

(assert (=> b!66249 (= res!35894 (= lt!28521 lt!28518))))

(declare-fun map!1141 (LongMapFixedSize!670) ListLongMap!1379)

(assert (=> b!66249 (= lt!28518 (map!1141 newMap!16))))

(declare-fun getCurrentListMap!403 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) Int) ListLongMap!1379)

(assert (=> b!66249 (= lt!28521 (getCurrentListMap!403 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(assert (= (and start!9264 res!35893) b!66235))

(assert (= (and b!66235 res!35888) b!66246))

(assert (= (and b!66246 res!35887) b!66248))

(assert (= (and b!66248 res!35890) b!66249))

(assert (= (and b!66249 res!35894) b!66237))

(assert (= (and b!66237 res!35892) b!66239))

(assert (= (and b!66239 c!9116) b!66236))

(assert (= (and b!66239 (not c!9116)) b!66231))

(assert (= (and b!66239 res!35891) b!66242))

(assert (= (and b!66242 (not res!35889)) b!66240))

(assert (= (and b!66244 condMapEmpty!3069) mapIsEmpty!3069))

(assert (= (and b!66244 (not condMapEmpty!3069)) mapNonEmpty!3069))

(get-info :version)

(assert (= (and mapNonEmpty!3069 ((_ is ValueCellFull!881) mapValue!3070)) b!66243))

(assert (= (and b!66244 ((_ is ValueCellFull!881) mapDefault!3069)) b!66247))

(assert (= b!66230 b!66244))

(assert (= b!66234 b!66230))

(assert (= b!66245 b!66234))

(assert (= start!9264 b!66245))

(assert (= (and b!66238 condMapEmpty!3070) mapIsEmpty!3070))

(assert (= (and b!66238 (not condMapEmpty!3070)) mapNonEmpty!3070))

(assert (= (and mapNonEmpty!3070 ((_ is ValueCellFull!881) mapValue!3069)) b!66232))

(assert (= (and b!66238 ((_ is ValueCellFull!881) mapDefault!3070)) b!66233))

(assert (= b!66241 b!66238))

(assert (= start!9264 b!66241))

(declare-fun b_lambda!2971 () Bool)

(assert (=> (not b_lambda!2971) (not b!66237)))

(declare-fun t!4925 () Bool)

(declare-fun tb!1449 () Bool)

(assert (=> (and b!66230 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))) t!4925) tb!1449))

(declare-fun result!2567 () Bool)

(assert (=> tb!1449 (= result!2567 tp_is_empty!2449)))

(assert (=> b!66237 t!4925))

(declare-fun b_and!4093 () Bool)

(assert (= b_and!4089 (and (=> t!4925 result!2567) b_and!4093)))

(declare-fun tb!1451 () Bool)

(declare-fun t!4927 () Bool)

(assert (=> (and b!66241 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))) t!4927) tb!1451))

(declare-fun result!2571 () Bool)

(assert (= result!2571 result!2567))

(assert (=> b!66237 t!4927))

(declare-fun b_and!4095 () Bool)

(assert (= b_and!4091 (and (=> t!4927 result!2571) b_and!4095)))

(declare-fun m!60827 () Bool)

(assert (=> b!66239 m!60827))

(assert (=> b!66239 m!60827))

(declare-fun m!60829 () Bool)

(assert (=> b!66239 m!60829))

(assert (=> b!66239 m!60827))

(declare-fun m!60831 () Bool)

(assert (=> b!66239 m!60831))

(declare-fun m!60833 () Bool)

(assert (=> b!66236 m!60833))

(declare-fun m!60835 () Bool)

(assert (=> b!66236 m!60835))

(assert (=> b!66236 m!60827))

(declare-fun m!60837 () Bool)

(assert (=> b!66236 m!60837))

(assert (=> b!66236 m!60827))

(assert (=> b!66236 m!60827))

(declare-fun m!60839 () Bool)

(assert (=> b!66236 m!60839))

(assert (=> b!66236 m!60827))

(declare-fun m!60841 () Bool)

(assert (=> b!66236 m!60841))

(declare-fun m!60843 () Bool)

(assert (=> b!66249 m!60843))

(declare-fun m!60845 () Bool)

(assert (=> b!66249 m!60845))

(declare-fun m!60847 () Bool)

(assert (=> b!66241 m!60847))

(declare-fun m!60849 () Bool)

(assert (=> b!66241 m!60849))

(declare-fun m!60851 () Bool)

(assert (=> b!66246 m!60851))

(declare-fun m!60853 () Bool)

(assert (=> mapNonEmpty!3070 m!60853))

(declare-fun m!60855 () Bool)

(assert (=> start!9264 m!60855))

(declare-fun m!60857 () Bool)

(assert (=> mapNonEmpty!3069 m!60857))

(declare-fun m!60859 () Bool)

(assert (=> b!66230 m!60859))

(declare-fun m!60861 () Bool)

(assert (=> b!66230 m!60861))

(declare-fun m!60863 () Bool)

(assert (=> b!66242 m!60863))

(assert (=> b!66242 m!60827))

(declare-fun m!60865 () Bool)

(assert (=> b!66242 m!60865))

(assert (=> b!66242 m!60827))

(declare-fun m!60867 () Bool)

(assert (=> b!66242 m!60867))

(assert (=> b!66242 m!60867))

(declare-fun m!60869 () Bool)

(assert (=> b!66242 m!60869))

(declare-fun m!60871 () Bool)

(assert (=> b!66242 m!60871))

(declare-fun m!60873 () Bool)

(assert (=> b!66242 m!60873))

(assert (=> b!66242 m!60873))

(declare-fun m!60875 () Bool)

(assert (=> b!66242 m!60875))

(assert (=> b!66237 m!60827))

(declare-fun m!60877 () Bool)

(assert (=> b!66237 m!60877))

(declare-fun m!60879 () Bool)

(assert (=> b!66237 m!60879))

(assert (=> b!66237 m!60877))

(assert (=> b!66237 m!60879))

(declare-fun m!60881 () Bool)

(assert (=> b!66237 m!60881))

(check-sat (not b_next!2067) (not b!66237) b_and!4093 (not b!66239) (not b!66246) (not mapNonEmpty!3069) (not b_lambda!2971) (not b!66242) (not b!66236) b_and!4095 (not b!66241) (not b_next!2065) (not mapNonEmpty!3070) (not b!66249) (not b!66230) (not start!9264) tp_is_empty!2449)
(check-sat b_and!4093 b_and!4095 (not b_next!2065) (not b_next!2067))
(get-model)

(declare-fun b_lambda!2977 () Bool)

(assert (= b_lambda!2971 (or (and b!66230 b_free!2065) (and b!66241 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))) b_lambda!2977)))

(check-sat (not b_next!2067) (not b!66237) b_and!4093 (not b!66239) (not b!66246) (not mapNonEmpty!3069) (not b!66242) (not b!66236) b_and!4095 (not b_next!2065) (not mapNonEmpty!3070) (not b!66249) (not b!66230) (not start!9264) tp_is_empty!2449 (not b!66241) (not b_lambda!2977))
(check-sat b_and!4093 b_and!4095 (not b_next!2065) (not b_next!2067))
(get-model)

(declare-fun d!13743 () Bool)

(declare-fun c!9125 () Bool)

(assert (=> d!13743 (= c!9125 ((_ is ValueCellFull!881) (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!43569 () V!2913)

(assert (=> d!13743 (= (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!43569)))

(declare-fun b!66380 () Bool)

(declare-fun get!1125 (ValueCell!881 V!2913) V!2913)

(assert (=> b!66380 (= e!43569 (get!1125 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66381 () Bool)

(declare-fun get!1126 (ValueCell!881 V!2913) V!2913)

(assert (=> b!66381 (= e!43569 (get!1126 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13743 c!9125) b!66380))

(assert (= (and d!13743 (not c!9125)) b!66381))

(assert (=> b!66380 m!60877))

(assert (=> b!66380 m!60879))

(declare-fun m!60995 () Bool)

(assert (=> b!66380 m!60995))

(assert (=> b!66381 m!60877))

(assert (=> b!66381 m!60879))

(declare-fun m!60997 () Bool)

(assert (=> b!66381 m!60997))

(assert (=> b!66237 d!13743))

(declare-fun d!13745 () Bool)

(assert (=> d!13745 (= (valid!288 thiss!992) (valid!289 (v!2478 (underlying!250 thiss!992))))))

(declare-fun bs!2861 () Bool)

(assert (= bs!2861 d!13745))

(declare-fun m!60999 () Bool)

(assert (=> bs!2861 m!60999))

(assert (=> start!9264 d!13745))

(declare-fun d!13747 () Bool)

(assert (=> d!13747 (not (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28604 () Unit!1824)

(declare-fun choose!68 (array!3823 (_ BitVec 32) (_ BitVec 64) List!1454) Unit!1824)

(assert (=> d!13747 (= lt!28604 (choose!68 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451)))))

(assert (=> d!13747 (bvslt (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!13747 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451)) lt!28604)))

(declare-fun bs!2862 () Bool)

(assert (= bs!2862 d!13747))

(assert (=> bs!2862 m!60827))

(assert (=> bs!2862 m!60839))

(assert (=> bs!2862 m!60827))

(declare-fun m!61001 () Bool)

(assert (=> bs!2862 m!61001))

(assert (=> b!66236 d!13747))

(declare-fun d!13749 () Bool)

(assert (=> d!13749 (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) from!355 Nil!1451)))

(declare-fun lt!28607 () Unit!1824)

(declare-fun choose!39 (array!3823 (_ BitVec 32) (_ BitVec 32)) Unit!1824)

(assert (=> d!13749 (= lt!28607 (choose!39 (_keys!3786 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!13749 (bvslt (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!13749 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 from!355) lt!28607)))

(declare-fun bs!2863 () Bool)

(assert (= bs!2863 d!13749))

(assert (=> bs!2863 m!60835))

(declare-fun m!61003 () Bool)

(assert (=> bs!2863 m!61003))

(assert (=> b!66236 d!13749))

(declare-fun d!13751 () Bool)

(declare-fun res!35947 () Bool)

(declare-fun e!43574 () Bool)

(assert (=> d!13751 (=> res!35947 e!43574)))

(assert (=> d!13751 (= res!35947 (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13751 (= (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!43574)))

(declare-fun b!66386 () Bool)

(declare-fun e!43575 () Bool)

(assert (=> b!66386 (= e!43574 e!43575)))

(declare-fun res!35948 () Bool)

(assert (=> b!66386 (=> (not res!35948) (not e!43575))))

(assert (=> b!66386 (= res!35948 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66387 () Bool)

(assert (=> b!66387 (= e!43575 (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!13751 (not res!35947)) b!66386))

(assert (= (and b!66386 res!35948) b!66387))

(declare-fun m!61005 () Bool)

(assert (=> d!13751 m!61005))

(assert (=> b!66387 m!60827))

(declare-fun m!61007 () Bool)

(assert (=> b!66387 m!61007))

(assert (=> b!66236 d!13751))

(declare-fun d!13753 () Bool)

(declare-fun e!43578 () Bool)

(assert (=> d!13753 e!43578))

(declare-fun c!9128 () Bool)

(assert (=> d!13753 (= c!9128 (and (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!28610 () Unit!1824)

(declare-fun choose!372 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) (_ BitVec 32) Int) Unit!1824)

(assert (=> d!13753 (= lt!28610 (choose!372 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(assert (=> d!13753 (validMask!0 (mask!6081 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!13753 (= (lemmaListMapContainsThenArrayContainsFrom!36 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))) lt!28610)))

(declare-fun b!66392 () Bool)

(assert (=> b!66392 (= e!43578 (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!66393 () Bool)

(assert (=> b!66393 (= e!43578 (ite (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!13753 c!9128) b!66392))

(assert (= (and d!13753 (not c!9128)) b!66393))

(assert (=> d!13753 m!60827))

(declare-fun m!61009 () Bool)

(assert (=> d!13753 m!61009))

(assert (=> d!13753 m!60863))

(assert (=> b!66392 m!60827))

(assert (=> b!66392 m!60839))

(assert (=> b!66236 d!13753))

(declare-fun b!66404 () Bool)

(declare-fun e!43588 () Bool)

(declare-fun call!5457 () Bool)

(assert (=> b!66404 (= e!43588 call!5457)))

(declare-fun b!66405 () Bool)

(declare-fun e!43589 () Bool)

(assert (=> b!66405 (= e!43589 e!43588)))

(declare-fun c!9131 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!66405 (= c!9131 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66406 () Bool)

(declare-fun e!43587 () Bool)

(declare-fun contains!708 (List!1454 (_ BitVec 64)) Bool)

(assert (=> b!66406 (= e!43587 (contains!708 Nil!1451 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66407 () Bool)

(assert (=> b!66407 (= e!43588 call!5457)))

(declare-fun b!66408 () Bool)

(declare-fun e!43590 () Bool)

(assert (=> b!66408 (= e!43590 e!43589)))

(declare-fun res!35955 () Bool)

(assert (=> b!66408 (=> (not res!35955) (not e!43589))))

(assert (=> b!66408 (= res!35955 (not e!43587))))

(declare-fun res!35957 () Bool)

(assert (=> b!66408 (=> (not res!35957) (not e!43587))))

(assert (=> b!66408 (= res!35957 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun d!13755 () Bool)

(declare-fun res!35956 () Bool)

(assert (=> d!13755 (=> res!35956 e!43590)))

(assert (=> d!13755 (= res!35956 (bvsge from!355 (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!13755 (= (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) from!355 Nil!1451) e!43590)))

(declare-fun bm!5454 () Bool)

(assert (=> bm!5454 (= call!5457 (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)))))

(assert (= (and d!13755 (not res!35956)) b!66408))

(assert (= (and b!66408 res!35957) b!66406))

(assert (= (and b!66408 res!35955) b!66405))

(assert (= (and b!66405 c!9131) b!66404))

(assert (= (and b!66405 (not c!9131)) b!66407))

(assert (= (or b!66404 b!66407) bm!5454))

(assert (=> b!66405 m!60827))

(assert (=> b!66405 m!60827))

(declare-fun m!61011 () Bool)

(assert (=> b!66405 m!61011))

(assert (=> b!66406 m!60827))

(assert (=> b!66406 m!60827))

(declare-fun m!61013 () Bool)

(assert (=> b!66406 m!61013))

(assert (=> b!66408 m!60827))

(assert (=> b!66408 m!60827))

(assert (=> b!66408 m!61011))

(assert (=> bm!5454 m!60827))

(declare-fun m!61015 () Bool)

(assert (=> bm!5454 m!61015))

(assert (=> b!66236 d!13755))

(declare-fun d!13757 () Bool)

(assert (=> d!13757 (= (map!1141 newMap!16) (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bs!2864 () Bool)

(assert (= bs!2864 d!13757))

(declare-fun m!61017 () Bool)

(assert (=> bs!2864 m!61017))

(assert (=> b!66249 d!13757))

(declare-fun b!66451 () Bool)

(declare-fun res!35984 () Bool)

(declare-fun e!43620 () Bool)

(assert (=> b!66451 (=> (not res!35984) (not e!43620))))

(declare-fun e!43625 () Bool)

(assert (=> b!66451 (= res!35984 e!43625)))

(declare-fun c!9149 () Bool)

(assert (=> b!66451 (= c!9149 (not (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!66452 () Bool)

(declare-fun call!5476 () Bool)

(assert (=> b!66452 (= e!43625 (not call!5476))))

(declare-fun b!66453 () Bool)

(declare-fun e!43621 () Bool)

(assert (=> b!66453 (= e!43621 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66454 () Bool)

(declare-fun e!43623 () Bool)

(assert (=> b!66454 (= e!43625 e!43623)))

(declare-fun res!35978 () Bool)

(assert (=> b!66454 (= res!35978 call!5476)))

(assert (=> b!66454 (=> (not res!35978) (not e!43623))))

(declare-fun e!43622 () Bool)

(declare-fun b!66455 () Bool)

(declare-fun lt!28667 () ListLongMap!1379)

(declare-fun apply!72 (ListLongMap!1379 (_ BitVec 64)) V!2913)

(assert (=> b!66455 (= e!43622 (= (apply!72 lt!28667 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66455 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2062 (_values!2129 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!66455 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun d!13759 () Bool)

(assert (=> d!13759 e!43620))

(declare-fun res!35979 () Bool)

(assert (=> d!13759 (=> (not res!35979) (not e!43620))))

(assert (=> d!13759 (= res!35979 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun lt!28675 () ListLongMap!1379)

(assert (=> d!13759 (= lt!28667 lt!28675)))

(declare-fun lt!28672 () Unit!1824)

(declare-fun e!43619 () Unit!1824)

(assert (=> d!13759 (= lt!28672 e!43619)))

(declare-fun c!9147 () Bool)

(declare-fun e!43617 () Bool)

(assert (=> d!13759 (= c!9147 e!43617)))

(declare-fun res!35983 () Bool)

(assert (=> d!13759 (=> (not res!35983) (not e!43617))))

(assert (=> d!13759 (= res!35983 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!43624 () ListLongMap!1379)

(assert (=> d!13759 (= lt!28675 e!43624)))

(declare-fun c!9144 () Bool)

(assert (=> d!13759 (= c!9144 (and (not (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13759 (validMask!0 (mask!6081 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!13759 (= (getCurrentListMap!403 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))) lt!28667)))

(declare-fun b!66456 () Bool)

(declare-fun e!43627 () Bool)

(declare-fun e!43629 () Bool)

(assert (=> b!66456 (= e!43627 e!43629)))

(declare-fun res!35981 () Bool)

(declare-fun call!5473 () Bool)

(assert (=> b!66456 (= res!35981 call!5473)))

(assert (=> b!66456 (=> (not res!35981) (not e!43629))))

(declare-fun b!66457 () Bool)

(assert (=> b!66457 (= e!43627 (not call!5473))))

(declare-fun b!66458 () Bool)

(assert (=> b!66458 (= e!43623 (= (apply!72 lt!28667 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun bm!5469 () Bool)

(declare-fun call!5475 () ListLongMap!1379)

(declare-fun call!5478 () ListLongMap!1379)

(assert (=> bm!5469 (= call!5475 call!5478)))

(declare-fun b!66459 () Bool)

(declare-fun Unit!1834 () Unit!1824)

(assert (=> b!66459 (= e!43619 Unit!1834)))

(declare-fun b!66460 () Bool)

(declare-fun e!43618 () ListLongMap!1379)

(assert (=> b!66460 (= e!43618 call!5475)))

(declare-fun bm!5470 () Bool)

(declare-fun call!5474 () ListLongMap!1379)

(assert (=> bm!5470 (= call!5478 call!5474)))

(declare-fun c!9146 () Bool)

(declare-fun call!5472 () ListLongMap!1379)

(declare-fun bm!5471 () Bool)

(assert (=> bm!5471 (= call!5472 (+!86 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475)) (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!66461 () Bool)

(declare-fun e!43628 () ListLongMap!1379)

(declare-fun call!5477 () ListLongMap!1379)

(assert (=> b!66461 (= e!43628 call!5477)))

(declare-fun bm!5472 () Bool)

(assert (=> bm!5472 (= call!5477 call!5472)))

(declare-fun bm!5473 () Bool)

(assert (=> bm!5473 (= call!5473 (contains!705 lt!28667 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66462 () Bool)

(declare-fun res!35982 () Bool)

(assert (=> b!66462 (=> (not res!35982) (not e!43620))))

(declare-fun e!43626 () Bool)

(assert (=> b!66462 (= res!35982 e!43626)))

(declare-fun res!35977 () Bool)

(assert (=> b!66462 (=> res!35977 e!43626)))

(assert (=> b!66462 (= res!35977 (not e!43621))))

(declare-fun res!35980 () Bool)

(assert (=> b!66462 (=> (not res!35980) (not e!43621))))

(assert (=> b!66462 (= res!35980 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66463 () Bool)

(assert (=> b!66463 (= e!43620 e!43627)))

(declare-fun c!9148 () Bool)

(assert (=> b!66463 (= c!9148 (not (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66464 () Bool)

(assert (=> b!66464 (= e!43624 (+!86 call!5472 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66465 () Bool)

(assert (=> b!66465 (= e!43617 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66466 () Bool)

(assert (=> b!66466 (= e!43629 (= (apply!72 lt!28667 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!66467 () Bool)

(declare-fun lt!28664 () Unit!1824)

(assert (=> b!66467 (= e!43619 lt!28664)))

(declare-fun lt!28666 () ListLongMap!1379)

(assert (=> b!66467 (= lt!28666 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun lt!28671 () (_ BitVec 64))

(assert (=> b!66467 (= lt!28671 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28669 () (_ BitVec 64))

(assert (=> b!66467 (= lt!28669 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28676 () Unit!1824)

(declare-fun addStillContains!48 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1824)

(assert (=> b!66467 (= lt!28676 (addStillContains!48 lt!28666 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28669))))

(assert (=> b!66467 (contains!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28669)))

(declare-fun lt!28670 () Unit!1824)

(assert (=> b!66467 (= lt!28670 lt!28676)))

(declare-fun lt!28661 () ListLongMap!1379)

(assert (=> b!66467 (= lt!28661 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun lt!28673 () (_ BitVec 64))

(assert (=> b!66467 (= lt!28673 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28665 () (_ BitVec 64))

(assert (=> b!66467 (= lt!28665 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28655 () Unit!1824)

(declare-fun addApplyDifferent!48 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1824)

(assert (=> b!66467 (= lt!28655 (addApplyDifferent!48 lt!28661 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28665))))

(assert (=> b!66467 (= (apply!72 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28665) (apply!72 lt!28661 lt!28665))))

(declare-fun lt!28657 () Unit!1824)

(assert (=> b!66467 (= lt!28657 lt!28655)))

(declare-fun lt!28674 () ListLongMap!1379)

(assert (=> b!66467 (= lt!28674 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun lt!28659 () (_ BitVec 64))

(assert (=> b!66467 (= lt!28659 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28660 () (_ BitVec 64))

(assert (=> b!66467 (= lt!28660 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!28658 () Unit!1824)

(assert (=> b!66467 (= lt!28658 (addApplyDifferent!48 lt!28674 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28660))))

(assert (=> b!66467 (= (apply!72 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28660) (apply!72 lt!28674 lt!28660))))

(declare-fun lt!28668 () Unit!1824)

(assert (=> b!66467 (= lt!28668 lt!28658)))

(declare-fun lt!28663 () ListLongMap!1379)

(assert (=> b!66467 (= lt!28663 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun lt!28662 () (_ BitVec 64))

(assert (=> b!66467 (= lt!28662 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28656 () (_ BitVec 64))

(assert (=> b!66467 (= lt!28656 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!66467 (= lt!28664 (addApplyDifferent!48 lt!28663 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28656))))

(assert (=> b!66467 (= (apply!72 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28656) (apply!72 lt!28663 lt!28656))))

(declare-fun b!66468 () Bool)

(declare-fun c!9145 () Bool)

(assert (=> b!66468 (= c!9145 (and (not (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!66468 (= e!43628 e!43618)))

(declare-fun b!66469 () Bool)

(assert (=> b!66469 (= e!43624 e!43628)))

(assert (=> b!66469 (= c!9146 (and (not (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66470 () Bool)

(assert (=> b!66470 (= e!43626 e!43622)))

(declare-fun res!35976 () Bool)

(assert (=> b!66470 (=> (not res!35976) (not e!43622))))

(assert (=> b!66470 (= res!35976 (contains!705 lt!28667 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66470 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66471 () Bool)

(assert (=> b!66471 (= e!43618 call!5477)))

(declare-fun bm!5474 () Bool)

(assert (=> bm!5474 (= call!5474 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun bm!5475 () Bool)

(assert (=> bm!5475 (= call!5476 (contains!705 lt!28667 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13759 c!9144) b!66464))

(assert (= (and d!13759 (not c!9144)) b!66469))

(assert (= (and b!66469 c!9146) b!66461))

(assert (= (and b!66469 (not c!9146)) b!66468))

(assert (= (and b!66468 c!9145) b!66471))

(assert (= (and b!66468 (not c!9145)) b!66460))

(assert (= (or b!66471 b!66460) bm!5469))

(assert (= (or b!66461 bm!5469) bm!5470))

(assert (= (or b!66461 b!66471) bm!5472))

(assert (= (or b!66464 bm!5470) bm!5474))

(assert (= (or b!66464 bm!5472) bm!5471))

(assert (= (and d!13759 res!35983) b!66465))

(assert (= (and d!13759 c!9147) b!66467))

(assert (= (and d!13759 (not c!9147)) b!66459))

(assert (= (and d!13759 res!35979) b!66462))

(assert (= (and b!66462 res!35980) b!66453))

(assert (= (and b!66462 (not res!35977)) b!66470))

(assert (= (and b!66470 res!35976) b!66455))

(assert (= (and b!66462 res!35982) b!66451))

(assert (= (and b!66451 c!9149) b!66454))

(assert (= (and b!66451 (not c!9149)) b!66452))

(assert (= (and b!66454 res!35978) b!66458))

(assert (= (or b!66454 b!66452) bm!5475))

(assert (= (and b!66451 res!35984) b!66463))

(assert (= (and b!66463 c!9148) b!66456))

(assert (= (and b!66463 (not c!9148)) b!66457))

(assert (= (and b!66456 res!35981) b!66466))

(assert (= (or b!66456 b!66457) bm!5473))

(declare-fun b_lambda!2979 () Bool)

(assert (=> (not b_lambda!2979) (not b!66455)))

(assert (=> b!66455 t!4925))

(declare-fun b_and!4113 () Bool)

(assert (= b_and!4093 (and (=> t!4925 result!2567) b_and!4113)))

(assert (=> b!66455 t!4927))

(declare-fun b_and!4115 () Bool)

(assert (= b_and!4095 (and (=> t!4927 result!2571) b_and!4115)))

(assert (=> b!66465 m!61005))

(assert (=> b!66465 m!61005))

(declare-fun m!61019 () Bool)

(assert (=> b!66465 m!61019))

(declare-fun m!61021 () Bool)

(assert (=> bm!5473 m!61021))

(declare-fun m!61023 () Bool)

(assert (=> b!66458 m!61023))

(assert (=> b!66470 m!61005))

(assert (=> b!66470 m!61005))

(declare-fun m!61025 () Bool)

(assert (=> b!66470 m!61025))

(declare-fun m!61027 () Bool)

(assert (=> bm!5471 m!61027))

(declare-fun m!61029 () Bool)

(assert (=> b!66464 m!61029))

(declare-fun m!61031 () Bool)

(assert (=> b!66467 m!61031))

(declare-fun m!61033 () Bool)

(assert (=> b!66467 m!61033))

(declare-fun m!61035 () Bool)

(assert (=> b!66467 m!61035))

(declare-fun m!61037 () Bool)

(assert (=> b!66467 m!61037))

(assert (=> b!66467 m!60871))

(assert (=> b!66467 m!61035))

(declare-fun m!61039 () Bool)

(assert (=> b!66467 m!61039))

(declare-fun m!61041 () Bool)

(assert (=> b!66467 m!61041))

(declare-fun m!61043 () Bool)

(assert (=> b!66467 m!61043))

(declare-fun m!61045 () Bool)

(assert (=> b!66467 m!61045))

(assert (=> b!66467 m!61005))

(declare-fun m!61047 () Bool)

(assert (=> b!66467 m!61047))

(assert (=> b!66467 m!61043))

(declare-fun m!61049 () Bool)

(assert (=> b!66467 m!61049))

(declare-fun m!61051 () Bool)

(assert (=> b!66467 m!61051))

(assert (=> b!66467 m!61031))

(declare-fun m!61053 () Bool)

(assert (=> b!66467 m!61053))

(assert (=> b!66467 m!61049))

(declare-fun m!61055 () Bool)

(assert (=> b!66467 m!61055))

(declare-fun m!61057 () Bool)

(assert (=> b!66467 m!61057))

(declare-fun m!61059 () Bool)

(assert (=> b!66467 m!61059))

(assert (=> bm!5474 m!60871))

(assert (=> d!13759 m!60863))

(assert (=> b!66453 m!61005))

(assert (=> b!66453 m!61005))

(assert (=> b!66453 m!61019))

(assert (=> b!66455 m!60879))

(declare-fun m!61061 () Bool)

(assert (=> b!66455 m!61061))

(assert (=> b!66455 m!60879))

(declare-fun m!61063 () Bool)

(assert (=> b!66455 m!61063))

(assert (=> b!66455 m!61061))

(assert (=> b!66455 m!61005))

(declare-fun m!61065 () Bool)

(assert (=> b!66455 m!61065))

(assert (=> b!66455 m!61005))

(declare-fun m!61067 () Bool)

(assert (=> b!66466 m!61067))

(declare-fun m!61069 () Bool)

(assert (=> bm!5475 m!61069))

(assert (=> b!66249 d!13759))

(declare-fun d!13761 () Bool)

(assert (=> d!13761 (= (array_inv!1121 (_keys!3786 newMap!16)) (bvsge (size!2061 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66241 d!13761))

(declare-fun d!13763 () Bool)

(assert (=> d!13763 (= (array_inv!1122 (_values!2129 newMap!16)) (bvsge (size!2062 (_values!2129 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66241 d!13763))

(declare-fun d!13765 () Bool)

(declare-fun e!43632 () Bool)

(assert (=> d!13765 e!43632))

(declare-fun res!35990 () Bool)

(assert (=> d!13765 (=> (not res!35990) (not e!43632))))

(declare-fun lt!28687 () ListLongMap!1379)

(assert (=> d!13765 (= res!35990 (contains!705 lt!28687 (_1!1052 lt!28520)))))

(declare-fun lt!28685 () List!1455)

(assert (=> d!13765 (= lt!28687 (ListLongMap!1380 lt!28685))))

(declare-fun lt!28686 () Unit!1824)

(declare-fun lt!28688 () Unit!1824)

(assert (=> d!13765 (= lt!28686 lt!28688)))

(declare-datatypes ((Option!137 0))(
  ( (Some!136 (v!2484 V!2913)) (None!135) )
))
(declare-fun getValueByKey!131 (List!1455 (_ BitVec 64)) Option!137)

(assert (=> d!13765 (= (getValueByKey!131 lt!28685 (_1!1052 lt!28520)) (Some!136 (_2!1052 lt!28520)))))

(declare-fun lemmaContainsTupThenGetReturnValue!48 (List!1455 (_ BitVec 64) V!2913) Unit!1824)

(assert (=> d!13765 (= lt!28688 (lemmaContainsTupThenGetReturnValue!48 lt!28685 (_1!1052 lt!28520) (_2!1052 lt!28520)))))

(declare-fun insertStrictlySorted!51 (List!1455 (_ BitVec 64) V!2913) List!1455)

(assert (=> d!13765 (= lt!28685 (insertStrictlySorted!51 (toList!705 (+!86 lt!28527 lt!28528)) (_1!1052 lt!28520) (_2!1052 lt!28520)))))

(assert (=> d!13765 (= (+!86 (+!86 lt!28527 lt!28528) lt!28520) lt!28687)))

(declare-fun b!66476 () Bool)

(declare-fun res!35989 () Bool)

(assert (=> b!66476 (=> (not res!35989) (not e!43632))))

(assert (=> b!66476 (= res!35989 (= (getValueByKey!131 (toList!705 lt!28687) (_1!1052 lt!28520)) (Some!136 (_2!1052 lt!28520))))))

(declare-fun b!66477 () Bool)

(declare-fun contains!709 (List!1455 tuple2!2082) Bool)

(assert (=> b!66477 (= e!43632 (contains!709 (toList!705 lt!28687) lt!28520))))

(assert (= (and d!13765 res!35990) b!66476))

(assert (= (and b!66476 res!35989) b!66477))

(declare-fun m!61071 () Bool)

(assert (=> d!13765 m!61071))

(declare-fun m!61073 () Bool)

(assert (=> d!13765 m!61073))

(declare-fun m!61075 () Bool)

(assert (=> d!13765 m!61075))

(declare-fun m!61077 () Bool)

(assert (=> d!13765 m!61077))

(declare-fun m!61079 () Bool)

(assert (=> b!66476 m!61079))

(declare-fun m!61081 () Bool)

(assert (=> b!66477 m!61081))

(assert (=> b!66242 d!13765))

(declare-fun d!13767 () Bool)

(declare-fun e!43633 () Bool)

(assert (=> d!13767 e!43633))

(declare-fun res!35992 () Bool)

(assert (=> d!13767 (=> (not res!35992) (not e!43633))))

(declare-fun lt!28691 () ListLongMap!1379)

(assert (=> d!13767 (= res!35992 (contains!705 lt!28691 (_1!1052 lt!28528)))))

(declare-fun lt!28689 () List!1455)

(assert (=> d!13767 (= lt!28691 (ListLongMap!1380 lt!28689))))

(declare-fun lt!28690 () Unit!1824)

(declare-fun lt!28692 () Unit!1824)

(assert (=> d!13767 (= lt!28690 lt!28692)))

(assert (=> d!13767 (= (getValueByKey!131 lt!28689 (_1!1052 lt!28528)) (Some!136 (_2!1052 lt!28528)))))

(assert (=> d!13767 (= lt!28692 (lemmaContainsTupThenGetReturnValue!48 lt!28689 (_1!1052 lt!28528) (_2!1052 lt!28528)))))

(assert (=> d!13767 (= lt!28689 (insertStrictlySorted!51 (toList!705 lt!28527) (_1!1052 lt!28528) (_2!1052 lt!28528)))))

(assert (=> d!13767 (= (+!86 lt!28527 lt!28528) lt!28691)))

(declare-fun b!66478 () Bool)

(declare-fun res!35991 () Bool)

(assert (=> b!66478 (=> (not res!35991) (not e!43633))))

(assert (=> b!66478 (= res!35991 (= (getValueByKey!131 (toList!705 lt!28691) (_1!1052 lt!28528)) (Some!136 (_2!1052 lt!28528))))))

(declare-fun b!66479 () Bool)

(assert (=> b!66479 (= e!43633 (contains!709 (toList!705 lt!28691) lt!28528))))

(assert (= (and d!13767 res!35992) b!66478))

(assert (= (and b!66478 res!35991) b!66479))

(declare-fun m!61083 () Bool)

(assert (=> d!13767 m!61083))

(declare-fun m!61085 () Bool)

(assert (=> d!13767 m!61085))

(declare-fun m!61087 () Bool)

(assert (=> d!13767 m!61087))

(declare-fun m!61089 () Bool)

(assert (=> d!13767 m!61089))

(declare-fun m!61091 () Bool)

(assert (=> b!66478 m!61091))

(declare-fun m!61093 () Bool)

(assert (=> b!66479 m!61093))

(assert (=> b!66242 d!13767))

(declare-fun b!66504 () Bool)

(declare-fun e!43654 () ListLongMap!1379)

(declare-fun call!5481 () ListLongMap!1379)

(assert (=> b!66504 (= e!43654 call!5481)))

(declare-fun bm!5478 () Bool)

(assert (=> bm!5478 (= call!5481 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!66505 () Bool)

(declare-fun e!43648 () Bool)

(declare-fun e!43651 () Bool)

(assert (=> b!66505 (= e!43648 e!43651)))

(declare-fun c!9160 () Bool)

(declare-fun e!43653 () Bool)

(assert (=> b!66505 (= c!9160 e!43653)))

(declare-fun res!36003 () Bool)

(assert (=> b!66505 (=> (not res!36003) (not e!43653))))

(assert (=> b!66505 (= res!36003 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66506 () Bool)

(declare-fun e!43649 () Bool)

(assert (=> b!66506 (= e!43651 e!43649)))

(assert (=> b!66506 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun lt!28707 () ListLongMap!1379)

(declare-fun res!36002 () Bool)

(assert (=> b!66506 (= res!36002 (contains!705 lt!28707 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66506 (=> (not res!36002) (not e!43649))))

(declare-fun b!66507 () Bool)

(assert (=> b!66507 (= e!43653 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66507 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!66508 () Bool)

(declare-fun e!43650 () ListLongMap!1379)

(assert (=> b!66508 (= e!43650 (ListLongMap!1380 Nil!1452))))

(declare-fun e!43652 () Bool)

(declare-fun b!66509 () Bool)

(assert (=> b!66509 (= e!43652 (= lt!28707 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66510 () Bool)

(declare-fun isEmpty!313 (ListLongMap!1379) Bool)

(assert (=> b!66510 (= e!43652 (isEmpty!313 lt!28707))))

(declare-fun b!66512 () Bool)

(assert (=> b!66512 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!66512 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2062 (_values!2129 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!66512 (= e!43649 (= (apply!72 lt!28707 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!66513 () Bool)

(declare-fun res!36001 () Bool)

(assert (=> b!66513 (=> (not res!36001) (not e!43648))))

(assert (=> b!66513 (= res!36001 (not (contains!705 lt!28707 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66514 () Bool)

(assert (=> b!66514 (= e!43650 e!43654)))

(declare-fun c!9161 () Bool)

(assert (=> b!66514 (= c!9161 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!66515 () Bool)

(declare-fun lt!28709 () Unit!1824)

(declare-fun lt!28710 () Unit!1824)

(assert (=> b!66515 (= lt!28709 lt!28710)))

(declare-fun lt!28713 () (_ BitVec 64))

(declare-fun lt!28712 () (_ BitVec 64))

(declare-fun lt!28711 () ListLongMap!1379)

(declare-fun lt!28708 () V!2913)

(assert (=> b!66515 (not (contains!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)) lt!28713))))

(declare-fun addStillNotContains!23 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1824)

(assert (=> b!66515 (= lt!28710 (addStillNotContains!23 lt!28711 lt!28712 lt!28708 lt!28713))))

(assert (=> b!66515 (= lt!28713 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!66515 (= lt!28708 (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!66515 (= lt!28712 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!66515 (= lt!28711 call!5481)))

(assert (=> b!66515 (= e!43654 (+!86 call!5481 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!13769 () Bool)

(assert (=> d!13769 e!43648))

(declare-fun res!36004 () Bool)

(assert (=> d!13769 (=> (not res!36004) (not e!43648))))

(assert (=> d!13769 (= res!36004 (not (contains!705 lt!28707 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13769 (= lt!28707 e!43650)))

(declare-fun c!9159 () Bool)

(assert (=> d!13769 (= c!9159 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!13769 (validMask!0 (mask!6081 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!13769 (= (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))) lt!28707)))

(declare-fun b!66511 () Bool)

(assert (=> b!66511 (= e!43651 e!43652)))

(declare-fun c!9158 () Bool)

(assert (=> b!66511 (= c!9158 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13769 c!9159) b!66508))

(assert (= (and d!13769 (not c!9159)) b!66514))

(assert (= (and b!66514 c!9161) b!66515))

(assert (= (and b!66514 (not c!9161)) b!66504))

(assert (= (or b!66515 b!66504) bm!5478))

(assert (= (and d!13769 res!36004) b!66513))

(assert (= (and b!66513 res!36001) b!66505))

(assert (= (and b!66505 res!36003) b!66507))

(assert (= (and b!66505 c!9160) b!66506))

(assert (= (and b!66505 (not c!9160)) b!66511))

(assert (= (and b!66506 res!36002) b!66512))

(assert (= (and b!66511 c!9158) b!66509))

(assert (= (and b!66511 (not c!9158)) b!66510))

(declare-fun b_lambda!2981 () Bool)

(assert (=> (not b_lambda!2981) (not b!66512)))

(assert (=> b!66512 t!4925))

(declare-fun b_and!4117 () Bool)

(assert (= b_and!4113 (and (=> t!4925 result!2567) b_and!4117)))

(assert (=> b!66512 t!4927))

(declare-fun b_and!4119 () Bool)

(assert (= b_and!4115 (and (=> t!4927 result!2571) b_and!4119)))

(declare-fun b_lambda!2983 () Bool)

(assert (=> (not b_lambda!2983) (not b!66515)))

(assert (=> b!66515 t!4925))

(declare-fun b_and!4121 () Bool)

(assert (= b_and!4117 (and (=> t!4925 result!2567) b_and!4121)))

(assert (=> b!66515 t!4927))

(declare-fun b_and!4123 () Bool)

(assert (= b_and!4119 (and (=> t!4927 result!2571) b_and!4123)))

(declare-fun m!61095 () Bool)

(assert (=> b!66509 m!61095))

(declare-fun m!61097 () Bool)

(assert (=> d!13769 m!61097))

(assert (=> d!13769 m!60863))

(assert (=> b!66507 m!61005))

(assert (=> b!66507 m!61005))

(assert (=> b!66507 m!61019))

(assert (=> b!66512 m!61005))

(declare-fun m!61099 () Bool)

(assert (=> b!66512 m!61099))

(assert (=> b!66512 m!61061))

(assert (=> b!66512 m!60879))

(assert (=> b!66512 m!61063))

(assert (=> b!66512 m!61061))

(assert (=> b!66512 m!60879))

(assert (=> b!66512 m!61005))

(assert (=> b!66506 m!61005))

(assert (=> b!66506 m!61005))

(declare-fun m!61101 () Bool)

(assert (=> b!66506 m!61101))

(declare-fun m!61103 () Bool)

(assert (=> b!66513 m!61103))

(assert (=> bm!5478 m!61095))

(declare-fun m!61105 () Bool)

(assert (=> b!66510 m!61105))

(assert (=> b!66514 m!61005))

(assert (=> b!66514 m!61005))

(assert (=> b!66514 m!61019))

(declare-fun m!61107 () Bool)

(assert (=> b!66515 m!61107))

(assert (=> b!66515 m!60879))

(assert (=> b!66515 m!61005))

(declare-fun m!61109 () Bool)

(assert (=> b!66515 m!61109))

(declare-fun m!61111 () Bool)

(assert (=> b!66515 m!61111))

(assert (=> b!66515 m!61061))

(assert (=> b!66515 m!60879))

(assert (=> b!66515 m!61063))

(assert (=> b!66515 m!61107))

(declare-fun m!61113 () Bool)

(assert (=> b!66515 m!61113))

(assert (=> b!66515 m!61061))

(assert (=> b!66242 d!13769))

(declare-fun d!13771 () Bool)

(assert (=> d!13771 (= (+!86 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (+!86 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(declare-fun lt!28716 () Unit!1824)

(declare-fun choose!373 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64) V!2913) Unit!1824)

(assert (=> d!13771 (= lt!28716 (choose!373 lt!28527 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))

(assert (=> d!13771 (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13771 (= (addCommutativeForDiffKeys!6 lt!28527 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) lt!28716)))

(declare-fun bs!2865 () Bool)

(assert (= bs!2865 d!13771))

(declare-fun m!61115 () Bool)

(assert (=> bs!2865 m!61115))

(declare-fun m!61117 () Bool)

(assert (=> bs!2865 m!61117))

(assert (=> bs!2865 m!61115))

(declare-fun m!61119 () Bool)

(assert (=> bs!2865 m!61119))

(declare-fun m!61121 () Bool)

(assert (=> bs!2865 m!61121))

(assert (=> bs!2865 m!60827))

(declare-fun m!61123 () Bool)

(assert (=> bs!2865 m!61123))

(assert (=> bs!2865 m!61119))

(assert (=> b!66242 d!13771))

(declare-fun d!13773 () Bool)

(declare-fun e!43655 () Bool)

(assert (=> d!13773 e!43655))

(declare-fun res!36006 () Bool)

(assert (=> d!13773 (=> (not res!36006) (not e!43655))))

(declare-fun lt!28719 () ListLongMap!1379)

(assert (=> d!13773 (= res!36006 (contains!705 lt!28719 (_1!1052 lt!28520)))))

(declare-fun lt!28717 () List!1455)

(assert (=> d!13773 (= lt!28719 (ListLongMap!1380 lt!28717))))

(declare-fun lt!28718 () Unit!1824)

(declare-fun lt!28720 () Unit!1824)

(assert (=> d!13773 (= lt!28718 lt!28720)))

(assert (=> d!13773 (= (getValueByKey!131 lt!28717 (_1!1052 lt!28520)) (Some!136 (_2!1052 lt!28520)))))

(assert (=> d!13773 (= lt!28720 (lemmaContainsTupThenGetReturnValue!48 lt!28717 (_1!1052 lt!28520) (_2!1052 lt!28520)))))

(assert (=> d!13773 (= lt!28717 (insertStrictlySorted!51 (toList!705 lt!28527) (_1!1052 lt!28520) (_2!1052 lt!28520)))))

(assert (=> d!13773 (= (+!86 lt!28527 lt!28520) lt!28719)))

(declare-fun b!66516 () Bool)

(declare-fun res!36005 () Bool)

(assert (=> b!66516 (=> (not res!36005) (not e!43655))))

(assert (=> b!66516 (= res!36005 (= (getValueByKey!131 (toList!705 lt!28719) (_1!1052 lt!28520)) (Some!136 (_2!1052 lt!28520))))))

(declare-fun b!66517 () Bool)

(assert (=> b!66517 (= e!43655 (contains!709 (toList!705 lt!28719) lt!28520))))

(assert (= (and d!13773 res!36006) b!66516))

(assert (= (and b!66516 res!36005) b!66517))

(declare-fun m!61125 () Bool)

(assert (=> d!13773 m!61125))

(declare-fun m!61127 () Bool)

(assert (=> d!13773 m!61127))

(declare-fun m!61129 () Bool)

(assert (=> d!13773 m!61129))

(declare-fun m!61131 () Bool)

(assert (=> d!13773 m!61131))

(declare-fun m!61133 () Bool)

(assert (=> b!66516 m!61133))

(declare-fun m!61135 () Bool)

(assert (=> b!66517 m!61135))

(assert (=> b!66242 d!13773))

(declare-fun d!13775 () Bool)

(declare-fun e!43656 () Bool)

(assert (=> d!13775 e!43656))

(declare-fun res!36008 () Bool)

(assert (=> d!13775 (=> (not res!36008) (not e!43656))))

(declare-fun lt!28723 () ListLongMap!1379)

(assert (=> d!13775 (= res!36008 (contains!705 lt!28723 (_1!1052 lt!28528)))))

(declare-fun lt!28721 () List!1455)

(assert (=> d!13775 (= lt!28723 (ListLongMap!1380 lt!28721))))

(declare-fun lt!28722 () Unit!1824)

(declare-fun lt!28724 () Unit!1824)

(assert (=> d!13775 (= lt!28722 lt!28724)))

(assert (=> d!13775 (= (getValueByKey!131 lt!28721 (_1!1052 lt!28528)) (Some!136 (_2!1052 lt!28528)))))

(assert (=> d!13775 (= lt!28724 (lemmaContainsTupThenGetReturnValue!48 lt!28721 (_1!1052 lt!28528) (_2!1052 lt!28528)))))

(assert (=> d!13775 (= lt!28721 (insertStrictlySorted!51 (toList!705 (+!86 lt!28527 lt!28520)) (_1!1052 lt!28528) (_2!1052 lt!28528)))))

(assert (=> d!13775 (= (+!86 (+!86 lt!28527 lt!28520) lt!28528) lt!28723)))

(declare-fun b!66518 () Bool)

(declare-fun res!36007 () Bool)

(assert (=> b!66518 (=> (not res!36007) (not e!43656))))

(assert (=> b!66518 (= res!36007 (= (getValueByKey!131 (toList!705 lt!28723) (_1!1052 lt!28528)) (Some!136 (_2!1052 lt!28528))))))

(declare-fun b!66519 () Bool)

(assert (=> b!66519 (= e!43656 (contains!709 (toList!705 lt!28723) lt!28528))))

(assert (= (and d!13775 res!36008) b!66518))

(assert (= (and b!66518 res!36007) b!66519))

(declare-fun m!61137 () Bool)

(assert (=> d!13775 m!61137))

(declare-fun m!61139 () Bool)

(assert (=> d!13775 m!61139))

(declare-fun m!61141 () Bool)

(assert (=> d!13775 m!61141))

(declare-fun m!61143 () Bool)

(assert (=> d!13775 m!61143))

(declare-fun m!61145 () Bool)

(assert (=> b!66518 m!61145))

(declare-fun m!61147 () Bool)

(assert (=> b!66519 m!61147))

(assert (=> b!66242 d!13775))

(declare-fun d!13777 () Bool)

(assert (=> d!13777 (= (validMask!0 (mask!6081 (v!2478 (underlying!250 thiss!992)))) (and (or (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000001111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000011111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000001111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000011111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000001111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000011111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000001111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000011111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000001111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000011111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000001111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000011111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000111111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000001111111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000011111111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000111111111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000001111111111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000011111111111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000111111111111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00001111111111111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00011111111111111111111111111111) (= (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!66242 d!13777))

(declare-fun d!13779 () Bool)

(assert (=> d!13779 (= (array_inv!1121 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvsge (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!66230 d!13779))

(declare-fun d!13781 () Bool)

(assert (=> d!13781 (= (array_inv!1122 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvsge (size!2062 (_values!2129 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!66230 d!13781))

(declare-fun d!13783 () Bool)

(declare-fun res!36015 () Bool)

(declare-fun e!43659 () Bool)

(assert (=> d!13783 (=> (not res!36015) (not e!43659))))

(declare-fun simpleValid!48 (LongMapFixedSize!670) Bool)

(assert (=> d!13783 (= res!36015 (simpleValid!48 newMap!16))))

(assert (=> d!13783 (= (valid!289 newMap!16) e!43659)))

(declare-fun b!66526 () Bool)

(declare-fun res!36016 () Bool)

(assert (=> b!66526 (=> (not res!36016) (not e!43659))))

(declare-fun arrayCountValidKeys!0 (array!3823 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!66526 (= res!36016 (= (arrayCountValidKeys!0 (_keys!3786 newMap!16) #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (_size!384 newMap!16)))))

(declare-fun b!66527 () Bool)

(declare-fun res!36017 () Bool)

(assert (=> b!66527 (=> (not res!36017) (not e!43659))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3823 (_ BitVec 32)) Bool)

(assert (=> b!66527 (= res!36017 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(declare-fun b!66528 () Bool)

(assert (=> b!66528 (= e!43659 (arrayNoDuplicates!0 (_keys!3786 newMap!16) #b00000000000000000000000000000000 Nil!1451))))

(assert (= (and d!13783 res!36015) b!66526))

(assert (= (and b!66526 res!36016) b!66527))

(assert (= (and b!66527 res!36017) b!66528))

(declare-fun m!61149 () Bool)

(assert (=> d!13783 m!61149))

(declare-fun m!61151 () Bool)

(assert (=> b!66526 m!61151))

(declare-fun m!61153 () Bool)

(assert (=> b!66527 m!61153))

(declare-fun m!61155 () Bool)

(assert (=> b!66528 m!61155))

(assert (=> b!66246 d!13783))

(declare-fun d!13785 () Bool)

(declare-fun e!43664 () Bool)

(assert (=> d!13785 e!43664))

(declare-fun res!36020 () Bool)

(assert (=> d!13785 (=> res!36020 e!43664)))

(declare-fun lt!28733 () Bool)

(assert (=> d!13785 (= res!36020 (not lt!28733))))

(declare-fun lt!28736 () Bool)

(assert (=> d!13785 (= lt!28733 lt!28736)))

(declare-fun lt!28735 () Unit!1824)

(declare-fun e!43665 () Unit!1824)

(assert (=> d!13785 (= lt!28735 e!43665)))

(declare-fun c!9164 () Bool)

(assert (=> d!13785 (= c!9164 lt!28736)))

(declare-fun containsKey!134 (List!1455 (_ BitVec 64)) Bool)

(assert (=> d!13785 (= lt!28736 (containsKey!134 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13785 (= (contains!705 lt!28518 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!28733)))

(declare-fun b!66535 () Bool)

(declare-fun lt!28734 () Unit!1824)

(assert (=> b!66535 (= e!43665 lt!28734)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!82 (List!1455 (_ BitVec 64)) Unit!1824)

(assert (=> b!66535 (= lt!28734 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun isDefined!83 (Option!137) Bool)

(assert (=> b!66535 (isDefined!83 (getValueByKey!131 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66536 () Bool)

(declare-fun Unit!1835 () Unit!1824)

(assert (=> b!66536 (= e!43665 Unit!1835)))

(declare-fun b!66537 () Bool)

(assert (=> b!66537 (= e!43664 (isDefined!83 (getValueByKey!131 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (= (and d!13785 c!9164) b!66535))

(assert (= (and d!13785 (not c!9164)) b!66536))

(assert (= (and d!13785 (not res!36020)) b!66537))

(assert (=> d!13785 m!60827))

(declare-fun m!61157 () Bool)

(assert (=> d!13785 m!61157))

(assert (=> b!66535 m!60827))

(declare-fun m!61159 () Bool)

(assert (=> b!66535 m!61159))

(assert (=> b!66535 m!60827))

(declare-fun m!61161 () Bool)

(assert (=> b!66535 m!61161))

(assert (=> b!66535 m!61161))

(declare-fun m!61163 () Bool)

(assert (=> b!66535 m!61163))

(assert (=> b!66537 m!60827))

(assert (=> b!66537 m!61161))

(assert (=> b!66537 m!61161))

(assert (=> b!66537 m!61163))

(assert (=> b!66239 d!13785))

(declare-fun bm!5527 () Bool)

(declare-fun call!5543 () ListLongMap!1379)

(assert (=> bm!5527 (= call!5543 (map!1141 newMap!16))))

(declare-fun e!43712 () Bool)

(declare-fun b!66618 () Bool)

(declare-datatypes ((SeekEntryResult!227 0))(
  ( (MissingZero!227 (index!3036 (_ BitVec 32))) (Found!227 (index!3037 (_ BitVec 32))) (Intermediate!227 (undefined!1039 Bool) (index!3038 (_ BitVec 32)) (x!10697 (_ BitVec 32))) (Undefined!227) (MissingVacant!227 (index!3039 (_ BitVec 32))) )
))
(declare-fun lt!28791 () SeekEntryResult!227)

(assert (=> b!66618 (= e!43712 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28791)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66619 () Bool)

(declare-fun e!43728 () Unit!1824)

(declare-fun lt!28799 () Unit!1824)

(assert (=> b!66619 (= e!43728 lt!28799)))

(declare-fun call!5551 () Unit!1824)

(assert (=> b!66619 (= lt!28799 call!5551)))

(declare-fun lt!28807 () SeekEntryResult!227)

(declare-fun call!5530 () SeekEntryResult!227)

(assert (=> b!66619 (= lt!28807 call!5530)))

(declare-fun c!9191 () Bool)

(assert (=> b!66619 (= c!9191 ((_ is MissingZero!227) lt!28807))))

(declare-fun e!43725 () Bool)

(assert (=> b!66619 e!43725))

(declare-fun call!5544 () Unit!1824)

(declare-fun bm!5528 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) Int) Unit!1824)

(assert (=> bm!5528 (= call!5544 (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(declare-fun b!66620 () Bool)

(declare-fun e!43722 () Bool)

(declare-fun lt!28810 () SeekEntryResult!227)

(assert (=> b!66620 (= e!43722 ((_ is Undefined!227) lt!28810))))

(declare-fun bm!5529 () Bool)

(declare-fun call!5540 () ListLongMap!1379)

(declare-fun call!5549 () ListLongMap!1379)

(assert (=> bm!5529 (= call!5540 call!5549)))

(declare-fun lt!28811 () SeekEntryResult!227)

(declare-fun b!66621 () Bool)

(declare-fun e!43719 () Bool)

(assert (=> b!66621 (= e!43719 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28811)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66622 () Bool)

(declare-fun c!9192 () Bool)

(assert (=> b!66622 (= c!9192 ((_ is MissingVacant!227) lt!28807))))

(declare-fun e!43721 () Bool)

(assert (=> b!66622 (= e!43725 e!43721)))

(declare-fun bm!5530 () Bool)

(declare-fun call!5546 () Bool)

(declare-fun call!5552 () Bool)

(assert (=> bm!5530 (= call!5546 call!5552)))

(declare-fun b!66623 () Bool)

(declare-fun res!36056 () Bool)

(declare-fun e!43714 () Bool)

(assert (=> b!66623 (=> (not res!36056) (not e!43714))))

(declare-fun call!5539 () Bool)

(assert (=> b!66623 (= res!36056 call!5539)))

(declare-fun e!43718 () Bool)

(assert (=> b!66623 (= e!43718 e!43714)))

(declare-fun bm!5531 () Bool)

(declare-fun call!5553 () Bool)

(declare-fun call!5534 () Bool)

(assert (=> bm!5531 (= call!5553 call!5534)))

(declare-fun bm!5532 () Bool)

(declare-fun c!9200 () Bool)

(declare-fun c!9198 () Bool)

(assert (=> bm!5532 (= c!9200 c!9198)))

(declare-fun call!5537 () Bool)

(declare-fun lt!28796 () SeekEntryResult!227)

(declare-fun e!43717 () ListLongMap!1379)

(assert (=> bm!5532 (= call!5537 (contains!705 e!43717 (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))

(declare-fun b!66624 () Bool)

(declare-fun lt!28815 () Unit!1824)

(declare-fun lt!28816 () Unit!1824)

(assert (=> b!66624 (= lt!28815 lt!28816)))

(assert (=> b!66624 call!5537))

(declare-fun lt!28812 () array!3825)

(declare-fun lemmaValidKeyInArrayIsInListMap!81 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) Int) Unit!1824)

(assert (=> b!66624 (= lt!28816 (lemmaValidKeyInArrayIsInListMap!81 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3037 lt!28796) (defaultEntry!2146 newMap!16)))))

(assert (=> b!66624 (= lt!28812 (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))))

(declare-fun lt!28809 () Unit!1824)

(declare-fun lt!28817 () Unit!1824)

(assert (=> b!66624 (= lt!28809 lt!28817)))

(declare-fun call!5535 () ListLongMap!1379)

(assert (=> b!66624 (= call!5549 call!5535)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) (_ BitVec 64) V!2913 Int) Unit!1824)

(assert (=> b!66624 (= lt!28817 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3037 lt!28796) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28801 () Unit!1824)

(declare-fun e!43710 () Unit!1824)

(assert (=> b!66624 (= lt!28801 e!43710)))

(declare-fun call!5548 () ListLongMap!1379)

(declare-fun c!9196 () Bool)

(assert (=> b!66624 (= c!9196 (contains!705 call!5548 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!43715 () tuple2!2080)

(assert (=> b!66624 (= e!43715 (tuple2!2081 true (LongMapFixedSize!671 (defaultEntry!2146 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (_size!384 newMap!16) (_keys!3786 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (_vacant!384 newMap!16))))))

(declare-fun b!66625 () Bool)

(declare-fun e!43723 () Bool)

(assert (=> b!66625 (= e!43722 e!43723)))

(declare-fun res!36055 () Bool)

(assert (=> b!66625 (= res!36055 call!5539)))

(assert (=> b!66625 (=> (not res!36055) (not e!43723))))

(declare-fun b!66626 () Bool)

(declare-fun e!43713 () Bool)

(declare-fun e!43724 () Bool)

(assert (=> b!66626 (= e!43713 e!43724)))

(declare-fun call!5542 () ListLongMap!1379)

(declare-fun res!36060 () Bool)

(assert (=> b!66626 (= res!36060 (contains!705 call!5542 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!66626 (=> (not res!36060) (not e!43724))))

(declare-fun b!66627 () Bool)

(declare-fun res!36051 () Bool)

(assert (=> b!66627 (= res!36051 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3039 lt!28810)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66627 (=> (not res!36051) (not e!43723))))

(declare-fun d!13787 () Bool)

(declare-fun e!43720 () Bool)

(assert (=> d!13787 e!43720))

(declare-fun res!36058 () Bool)

(assert (=> d!13787 (=> (not res!36058) (not e!43720))))

(declare-fun lt!28794 () tuple2!2080)

(assert (=> d!13787 (= res!36058 (valid!289 (_2!1051 lt!28794)))))

(declare-fun e!43716 () tuple2!2080)

(assert (=> d!13787 (= lt!28794 e!43716)))

(declare-fun c!9197 () Bool)

(assert (=> d!13787 (= c!9197 (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvneg (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!13787 (valid!289 newMap!16)))

(assert (=> d!13787 (= (update!101 newMap!16 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522) lt!28794)))

(declare-fun b!66628 () Bool)

(assert (=> b!66628 (= e!43717 call!5535)))

(declare-fun b!66629 () Bool)

(declare-fun e!43727 () tuple2!2080)

(assert (=> b!66629 (= e!43716 e!43727)))

(declare-fun c!9193 () Bool)

(assert (=> b!66629 (= c!9193 (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5533 () Bool)

(declare-fun call!5538 () Bool)

(assert (=> bm!5533 (= call!5539 call!5538)))

(declare-fun b!66630 () Bool)

(assert (=> b!66630 (= e!43720 e!43713)))

(declare-fun c!9201 () Bool)

(assert (=> b!66630 (= c!9201 (_1!1051 lt!28794))))

(declare-fun b!66631 () Bool)

(declare-fun Unit!1836 () Unit!1824)

(assert (=> b!66631 (= e!43710 Unit!1836)))

(declare-fun lt!28800 () Unit!1824)

(assert (=> b!66631 (= lt!28800 call!5551)))

(declare-fun call!5532 () SeekEntryResult!227)

(assert (=> b!66631 (= lt!28810 call!5532)))

(declare-fun c!9194 () Bool)

(assert (=> b!66631 (= c!9194 ((_ is MissingZero!227) lt!28810))))

(assert (=> b!66631 e!43718))

(declare-fun lt!28802 () Unit!1824)

(assert (=> b!66631 (= lt!28802 lt!28800)))

(assert (=> b!66631 false))

(declare-fun bm!5534 () Bool)

(declare-fun call!5550 () SeekEntryResult!227)

(assert (=> bm!5534 (= call!5530 call!5550)))

(declare-fun b!66632 () Bool)

(declare-fun e!43711 () Bool)

(assert (=> b!66632 (= e!43721 e!43711)))

(declare-fun res!36052 () Bool)

(declare-fun call!5533 () Bool)

(assert (=> b!66632 (= res!36052 call!5533)))

(assert (=> b!66632 (=> (not res!36052) (not e!43711))))

(declare-fun b!66633 () Bool)

(declare-fun c!9199 () Bool)

(assert (=> b!66633 (= c!9199 ((_ is MissingVacant!227) lt!28810))))

(assert (=> b!66633 (= e!43718 e!43722)))

(declare-fun bm!5535 () Bool)

(declare-fun call!5545 () ListLongMap!1379)

(declare-fun call!5536 () ListLongMap!1379)

(assert (=> bm!5535 (= call!5545 call!5536)))

(declare-fun bm!5536 () Bool)

(declare-fun call!5547 () ListLongMap!1379)

(assert (=> bm!5536 (= call!5549 (+!86 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548) (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!66634 () Bool)

(declare-fun c!9203 () Bool)

(assert (=> b!66634 (= c!9203 ((_ is MissingVacant!227) lt!28796))))

(declare-fun e!43709 () tuple2!2080)

(declare-fun e!43726 () tuple2!2080)

(assert (=> b!66634 (= e!43709 e!43726)))

(declare-fun b!66635 () Bool)

(declare-fun lt!28792 () tuple2!2080)

(assert (=> b!66635 (= e!43726 (tuple2!2081 (_1!1051 lt!28792) (_2!1051 lt!28792)))))

(declare-fun call!5541 () tuple2!2080)

(assert (=> b!66635 (= lt!28792 call!5541)))

(declare-fun b!66636 () Bool)

(assert (=> b!66636 (= e!43723 (not call!5546))))

(declare-fun bm!5537 () Bool)

(assert (=> bm!5537 (= call!5538 call!5534)))

(declare-fun b!66637 () Bool)

(assert (=> b!66637 (= e!43717 (getCurrentListMap!403 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!66638 () Bool)

(assert (=> b!66638 (= e!43714 (not call!5546))))

(declare-fun b!66639 () Bool)

(declare-fun call!5531 () Bool)

(assert (=> b!66639 (= e!43711 (not call!5531))))

(declare-fun bm!5538 () Bool)

(declare-fun c!9202 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!5538 (= call!5534 (inRange!0 (ite c!9198 (ite c!9202 (index!3037 lt!28811) (ite c!9191 (index!3036 lt!28807) (index!3039 lt!28807))) (ite c!9196 (index!3037 lt!28791) (ite c!9194 (index!3036 lt!28810) (index!3039 lt!28810)))) (mask!6081 newMap!16)))))

(declare-fun bm!5539 () Bool)

(assert (=> bm!5539 (= call!5542 (map!1141 (_2!1051 lt!28794)))))

(declare-fun b!66640 () Bool)

(declare-fun res!36054 () Bool)

(declare-fun e!43708 () Bool)

(assert (=> b!66640 (=> (not res!36054) (not e!43708))))

(assert (=> b!66640 (= res!36054 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3036 lt!28807)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5540 () Bool)

(declare-fun updateHelperNewKey!21 (LongMapFixedSize!670 (_ BitVec 64) V!2913 (_ BitVec 32)) tuple2!2080)

(assert (=> bm!5540 (= call!5541 (updateHelperNewKey!21 newMap!16 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))))))

(declare-fun bm!5541 () Bool)

(assert (=> bm!5541 (= call!5547 call!5548)))

(declare-fun bm!5542 () Bool)

(assert (=> bm!5542 (= call!5535 call!5536)))

(declare-fun bm!5543 () Bool)

(assert (=> bm!5543 (= call!5552 (arrayContainsKey!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!66641 () Bool)

(declare-fun res!36053 () Bool)

(assert (=> b!66641 (= res!36053 call!5538)))

(assert (=> b!66641 (=> (not res!36053) (not e!43712))))

(declare-fun b!66642 () Bool)

(declare-fun res!36059 () Bool)

(assert (=> b!66642 (=> (not res!36059) (not e!43714))))

(assert (=> b!66642 (= res!36059 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3036 lt!28810)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!5544 () Bool)

(assert (=> bm!5544 (= call!5532 call!5550)))

(declare-fun b!66643 () Bool)

(declare-fun Unit!1837 () Unit!1824)

(assert (=> b!66643 (= e!43728 Unit!1837)))

(declare-fun lt!28805 () Unit!1824)

(assert (=> b!66643 (= lt!28805 call!5544)))

(assert (=> b!66643 (= lt!28811 call!5530)))

(declare-fun res!36057 () Bool)

(assert (=> b!66643 (= res!36057 ((_ is Found!227) lt!28811))))

(assert (=> b!66643 (=> (not res!36057) (not e!43719))))

(assert (=> b!66643 e!43719))

(declare-fun lt!28793 () Unit!1824)

(assert (=> b!66643 (= lt!28793 lt!28805)))

(assert (=> b!66643 false))

(declare-fun b!66644 () Bool)

(assert (=> b!66644 (= e!43721 ((_ is Undefined!227) lt!28807))))

(declare-fun b!66645 () Bool)

(declare-fun lt!28813 () Unit!1824)

(assert (=> b!66645 (= e!43710 lt!28813)))

(assert (=> b!66645 (= lt!28813 call!5544)))

(assert (=> b!66645 (= lt!28791 call!5532)))

(declare-fun res!36061 () Bool)

(assert (=> b!66645 (= res!36061 ((_ is Found!227) lt!28791))))

(assert (=> b!66645 (=> (not res!36061) (not e!43712))))

(assert (=> b!66645 e!43712))

(declare-fun bm!5545 () Bool)

(declare-fun lt!28798 () (_ BitVec 32))

(assert (=> bm!5545 (= call!5536 (getCurrentListMap!403 (_keys!3786 newMap!16) (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) (mask!6081 newMap!16) (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!66646 () Bool)

(assert (=> b!66646 (= e!43708 (not call!5531))))

(declare-fun bm!5546 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) Int) Unit!1824)

(assert (=> bm!5546 (= call!5551 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(declare-fun b!66647 () Bool)

(assert (=> b!66647 (= e!43726 e!43715)))

(declare-fun c!9195 () Bool)

(assert (=> b!66647 (= c!9195 ((_ is MissingZero!227) lt!28796))))

(declare-fun bm!5547 () Bool)

(declare-fun lt!28808 () (_ BitVec 32))

(assert (=> bm!5547 (= call!5548 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) (zeroValue!2054 newMap!16) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun b!66648 () Bool)

(assert (=> b!66648 (= e!43724 (= call!5542 (+!86 call!5543 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!66649 () Bool)

(declare-fun lt!28795 () Unit!1824)

(assert (=> b!66649 (= lt!28795 e!43728)))

(assert (=> b!66649 (= c!9202 call!5537)))

(assert (=> b!66649 (= e!43709 (tuple2!2081 false newMap!16))))

(declare-fun b!66650 () Bool)

(assert (=> b!66650 (= e!43713 (= call!5542 call!5543))))

(declare-fun bm!5548 () Bool)

(assert (=> bm!5548 (= call!5531 call!5552)))

(declare-fun b!66651 () Bool)

(declare-fun res!36049 () Bool)

(assert (=> b!66651 (= res!36049 call!5553)))

(assert (=> b!66651 (=> (not res!36049) (not e!43719))))

(declare-fun b!66652 () Bool)

(declare-fun res!36062 () Bool)

(assert (=> b!66652 (= res!36062 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3039 lt!28807)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66652 (=> (not res!36062) (not e!43711))))

(declare-fun b!66653 () Bool)

(declare-fun lt!28804 () Unit!1824)

(declare-fun lt!28803 () Unit!1824)

(assert (=> b!66653 (= lt!28804 lt!28803)))

(assert (=> b!66653 (= call!5540 call!5545)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!21 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 V!2913 Int) Unit!1824)

(assert (=> b!66653 (= lt!28803 (lemmaChangeZeroKeyThenAddPairToListMap!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) lt!28798 (zeroValue!2054 newMap!16) lt!28522 (minValue!2054 newMap!16) (defaultEntry!2146 newMap!16)))))

(assert (=> b!66653 (= lt!28798 (bvor (extraKeys!2017 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!66653 (= e!43727 (tuple2!2081 true (LongMapFixedSize!671 (defaultEntry!2146 newMap!16) (mask!6081 newMap!16) (bvor (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) lt!28522 (minValue!2054 newMap!16) (_size!384 newMap!16) (_keys!3786 newMap!16) (_values!2129 newMap!16) (_vacant!384 newMap!16))))))

(declare-fun b!66654 () Bool)

(declare-fun res!36050 () Bool)

(assert (=> b!66654 (=> (not res!36050) (not e!43708))))

(assert (=> b!66654 (= res!36050 call!5533)))

(assert (=> b!66654 (= e!43725 e!43708)))

(declare-fun bm!5549 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3823 (_ BitVec 32)) SeekEntryResult!227)

(assert (=> bm!5549 (= call!5550 (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(declare-fun bm!5550 () Bool)

(assert (=> bm!5550 (= call!5533 call!5553)))

(declare-fun b!66655 () Bool)

(declare-fun lt!28797 () Unit!1824)

(declare-fun lt!28806 () Unit!1824)

(assert (=> b!66655 (= lt!28797 lt!28806)))

(assert (=> b!66655 (= call!5540 call!5547)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 V!2913 Int) Unit!1824)

(assert (=> b!66655 (= lt!28806 (lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) lt!28808 (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) lt!28522 (defaultEntry!2146 newMap!16)))))

(assert (=> b!66655 (= lt!28808 (bvor (extraKeys!2017 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!66655 (= e!43727 (tuple2!2081 true (LongMapFixedSize!671 (defaultEntry!2146 newMap!16) (mask!6081 newMap!16) (bvor (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) (zeroValue!2054 newMap!16) lt!28522 (_size!384 newMap!16) (_keys!3786 newMap!16) (_values!2129 newMap!16) (_vacant!384 newMap!16))))))

(declare-fun b!66656 () Bool)

(assert (=> b!66656 (= e!43716 e!43709)))

(assert (=> b!66656 (= lt!28796 (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(assert (=> b!66656 (= c!9198 ((_ is Undefined!227) lt!28796))))

(declare-fun b!66657 () Bool)

(declare-fun lt!28814 () tuple2!2080)

(assert (=> b!66657 (= lt!28814 call!5541)))

(assert (=> b!66657 (= e!43715 (tuple2!2081 (_1!1051 lt!28814) (_2!1051 lt!28814)))))

(assert (= (and d!13787 c!9197) b!66629))

(assert (= (and d!13787 (not c!9197)) b!66656))

(assert (= (and b!66629 c!9193) b!66653))

(assert (= (and b!66629 (not c!9193)) b!66655))

(assert (= (or b!66653 b!66655) bm!5541))

(assert (= (or b!66653 b!66655) bm!5535))

(assert (= (or b!66653 b!66655) bm!5529))

(assert (= (and b!66656 c!9198) b!66649))

(assert (= (and b!66656 (not c!9198)) b!66634))

(assert (= (and b!66649 c!9202) b!66643))

(assert (= (and b!66649 (not c!9202)) b!66619))

(assert (= (and b!66643 res!36057) b!66651))

(assert (= (and b!66651 res!36049) b!66621))

(assert (= (and b!66619 c!9191) b!66654))

(assert (= (and b!66619 (not c!9191)) b!66622))

(assert (= (and b!66654 res!36050) b!66640))

(assert (= (and b!66640 res!36054) b!66646))

(assert (= (and b!66622 c!9192) b!66632))

(assert (= (and b!66622 (not c!9192)) b!66644))

(assert (= (and b!66632 res!36052) b!66652))

(assert (= (and b!66652 res!36062) b!66639))

(assert (= (or b!66654 b!66632) bm!5550))

(assert (= (or b!66646 b!66639) bm!5548))

(assert (= (or b!66651 bm!5550) bm!5531))

(assert (= (or b!66643 b!66619) bm!5534))

(assert (= (and b!66634 c!9203) b!66635))

(assert (= (and b!66634 (not c!9203)) b!66647))

(assert (= (and b!66647 c!9195) b!66657))

(assert (= (and b!66647 (not c!9195)) b!66624))

(assert (= (and b!66624 c!9196) b!66645))

(assert (= (and b!66624 (not c!9196)) b!66631))

(assert (= (and b!66645 res!36061) b!66641))

(assert (= (and b!66641 res!36053) b!66618))

(assert (= (and b!66631 c!9194) b!66623))

(assert (= (and b!66631 (not c!9194)) b!66633))

(assert (= (and b!66623 res!36056) b!66642))

(assert (= (and b!66642 res!36059) b!66638))

(assert (= (and b!66633 c!9199) b!66625))

(assert (= (and b!66633 (not c!9199)) b!66620))

(assert (= (and b!66625 res!36055) b!66627))

(assert (= (and b!66627 res!36051) b!66636))

(assert (= (or b!66623 b!66625) bm!5533))

(assert (= (or b!66638 b!66636) bm!5530))

(assert (= (or b!66641 bm!5533) bm!5537))

(assert (= (or b!66645 b!66631) bm!5544))

(assert (= (or b!66635 b!66657) bm!5540))

(assert (= (or bm!5531 bm!5537) bm!5538))

(assert (= (or b!66619 b!66631) bm!5546))

(assert (= (or bm!5548 bm!5530) bm!5543))

(assert (= (or b!66643 b!66645) bm!5528))

(assert (= (or b!66649 b!66624) bm!5542))

(assert (= (or bm!5534 bm!5544) bm!5549))

(assert (= (or b!66649 b!66624) bm!5532))

(assert (= (and bm!5532 c!9200) b!66628))

(assert (= (and bm!5532 (not c!9200)) b!66637))

(assert (= (or bm!5535 bm!5542) bm!5545))

(assert (= (or bm!5541 b!66624) bm!5547))

(assert (= (or bm!5529 b!66624) bm!5536))

(assert (= (and d!13787 res!36058) b!66630))

(assert (= (and b!66630 c!9201) b!66626))

(assert (= (and b!66630 (not c!9201)) b!66650))

(assert (= (and b!66626 res!36060) b!66648))

(assert (= (or b!66648 b!66650) bm!5527))

(assert (= (or b!66626 b!66648 b!66650) bm!5539))

(declare-fun m!61165 () Bool)

(assert (=> b!66653 m!61165))

(declare-fun m!61167 () Bool)

(assert (=> bm!5539 m!61167))

(declare-fun m!61169 () Bool)

(assert (=> b!66621 m!61169))

(declare-fun m!61171 () Bool)

(assert (=> bm!5538 m!61171))

(assert (=> bm!5528 m!60827))

(declare-fun m!61173 () Bool)

(assert (=> bm!5528 m!61173))

(declare-fun m!61175 () Bool)

(assert (=> b!66627 m!61175))

(assert (=> b!66626 m!60827))

(declare-fun m!61177 () Bool)

(assert (=> b!66626 m!61177))

(declare-fun m!61179 () Bool)

(assert (=> b!66637 m!61179))

(assert (=> bm!5549 m!60827))

(declare-fun m!61181 () Bool)

(assert (=> bm!5549 m!61181))

(declare-fun m!61183 () Bool)

(assert (=> bm!5532 m!61183))

(declare-fun m!61185 () Bool)

(assert (=> bm!5532 m!61185))

(declare-fun m!61187 () Bool)

(assert (=> b!66652 m!61187))

(declare-fun m!61189 () Bool)

(assert (=> b!66618 m!61189))

(declare-fun m!61191 () Bool)

(assert (=> b!66624 m!61191))

(declare-fun m!61193 () Bool)

(assert (=> b!66624 m!61193))

(assert (=> b!66624 m!60827))

(declare-fun m!61195 () Bool)

(assert (=> b!66624 m!61195))

(assert (=> b!66624 m!60827))

(declare-fun m!61197 () Bool)

(assert (=> b!66624 m!61197))

(assert (=> bm!5546 m!60827))

(declare-fun m!61199 () Bool)

(assert (=> bm!5546 m!61199))

(declare-fun m!61201 () Bool)

(assert (=> b!66640 m!61201))

(declare-fun m!61203 () Bool)

(assert (=> bm!5547 m!61203))

(declare-fun m!61205 () Bool)

(assert (=> d!13787 m!61205))

(assert (=> d!13787 m!60851))

(assert (=> b!66656 m!60827))

(assert (=> b!66656 m!61181))

(assert (=> bm!5543 m!60827))

(declare-fun m!61207 () Bool)

(assert (=> bm!5543 m!61207))

(declare-fun m!61209 () Bool)

(assert (=> b!66655 m!61209))

(declare-fun m!61211 () Bool)

(assert (=> bm!5536 m!61211))

(declare-fun m!61213 () Bool)

(assert (=> b!66648 m!61213))

(assert (=> bm!5527 m!60843))

(declare-fun m!61215 () Bool)

(assert (=> b!66642 m!61215))

(assert (=> bm!5540 m!60827))

(declare-fun m!61217 () Bool)

(assert (=> bm!5540 m!61217))

(assert (=> bm!5545 m!61193))

(declare-fun m!61219 () Bool)

(assert (=> bm!5545 m!61219))

(assert (=> b!66239 d!13787))

(declare-fun condMapEmpty!3085 () Bool)

(declare-fun mapDefault!3085 () ValueCell!881)

(assert (=> mapNonEmpty!3070 (= condMapEmpty!3085 (= mapRest!3070 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3085)))))

(declare-fun e!43734 () Bool)

(declare-fun mapRes!3085 () Bool)

(assert (=> mapNonEmpty!3070 (= tp!8347 (and e!43734 mapRes!3085))))

(declare-fun b!66664 () Bool)

(declare-fun e!43733 () Bool)

(assert (=> b!66664 (= e!43733 tp_is_empty!2449)))

(declare-fun mapIsEmpty!3085 () Bool)

(assert (=> mapIsEmpty!3085 mapRes!3085))

(declare-fun mapNonEmpty!3085 () Bool)

(declare-fun tp!8377 () Bool)

(assert (=> mapNonEmpty!3085 (= mapRes!3085 (and tp!8377 e!43733))))

(declare-fun mapKey!3085 () (_ BitVec 32))

(declare-fun mapRest!3085 () (Array (_ BitVec 32) ValueCell!881))

(declare-fun mapValue!3085 () ValueCell!881)

(assert (=> mapNonEmpty!3085 (= mapRest!3070 (store mapRest!3085 mapKey!3085 mapValue!3085))))

(declare-fun b!66665 () Bool)

(assert (=> b!66665 (= e!43734 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3070 condMapEmpty!3085) mapIsEmpty!3085))

(assert (= (and mapNonEmpty!3070 (not condMapEmpty!3085)) mapNonEmpty!3085))

(assert (= (and mapNonEmpty!3085 ((_ is ValueCellFull!881) mapValue!3085)) b!66664))

(assert (= (and mapNonEmpty!3070 ((_ is ValueCellFull!881) mapDefault!3085)) b!66665))

(declare-fun m!61221 () Bool)

(assert (=> mapNonEmpty!3085 m!61221))

(declare-fun condMapEmpty!3086 () Bool)

(declare-fun mapDefault!3086 () ValueCell!881)

(assert (=> mapNonEmpty!3069 (= condMapEmpty!3086 (= mapRest!3069 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3086)))))

(declare-fun e!43736 () Bool)

(declare-fun mapRes!3086 () Bool)

(assert (=> mapNonEmpty!3069 (= tp!8348 (and e!43736 mapRes!3086))))

(declare-fun b!66666 () Bool)

(declare-fun e!43735 () Bool)

(assert (=> b!66666 (= e!43735 tp_is_empty!2449)))

(declare-fun mapIsEmpty!3086 () Bool)

(assert (=> mapIsEmpty!3086 mapRes!3086))

(declare-fun mapNonEmpty!3086 () Bool)

(declare-fun tp!8378 () Bool)

(assert (=> mapNonEmpty!3086 (= mapRes!3086 (and tp!8378 e!43735))))

(declare-fun mapRest!3086 () (Array (_ BitVec 32) ValueCell!881))

(declare-fun mapValue!3086 () ValueCell!881)

(declare-fun mapKey!3086 () (_ BitVec 32))

(assert (=> mapNonEmpty!3086 (= mapRest!3069 (store mapRest!3086 mapKey!3086 mapValue!3086))))

(declare-fun b!66667 () Bool)

(assert (=> b!66667 (= e!43736 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3069 condMapEmpty!3086) mapIsEmpty!3086))

(assert (= (and mapNonEmpty!3069 (not condMapEmpty!3086)) mapNonEmpty!3086))

(assert (= (and mapNonEmpty!3086 ((_ is ValueCellFull!881) mapValue!3086)) b!66666))

(assert (= (and mapNonEmpty!3069 ((_ is ValueCellFull!881) mapDefault!3086)) b!66667))

(declare-fun m!61223 () Bool)

(assert (=> mapNonEmpty!3086 m!61223))

(declare-fun b_lambda!2985 () Bool)

(assert (= b_lambda!2983 (or (and b!66230 b_free!2065) (and b!66241 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))) b_lambda!2985)))

(declare-fun b_lambda!2987 () Bool)

(assert (= b_lambda!2981 (or (and b!66230 b_free!2065) (and b!66241 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))) b_lambda!2987)))

(declare-fun b_lambda!2989 () Bool)

(assert (= b_lambda!2979 (or (and b!66230 b_free!2065) (and b!66241 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))) b_lambda!2989)))

(check-sat b_and!4123 (not b!66381) (not d!13749) (not b!66514) (not b!66479) (not d!13759) (not d!13757) (not b!66656) (not b!66510) (not b!66380) (not d!13767) (not bm!5538) (not d!13745) (not b!66518) (not b_next!2067) (not bm!5478) (not bm!5527) (not d!13783) (not b!66515) (not b!66387) (not b_next!2065) (not mapNonEmpty!3086) (not bm!5475) (not b!66408) (not b!66406) (not b!66478) (not b!66526) (not d!13787) (not b!66405) (not bm!5474) (not b_lambda!2985) (not b!66512) (not bm!5536) (not bm!5454) (not d!13747) (not bm!5473) (not b!66455) (not b!66467) (not b!66458) b_and!4121 (not bm!5547) (not b!66517) (not b!66516) (not d!13769) (not b!66466) (not bm!5545) (not b!66506) (not b_lambda!2987) (not d!13775) (not b_lambda!2989) (not b!66477) (not bm!5549) (not b!66509) (not d!13765) (not b!66626) (not b!66528) (not b!66513) (not b!66470) (not bm!5471) (not b!66392) (not b!66519) (not bm!5528) (not d!13771) (not bm!5546) (not b!66648) (not b!66464) (not b!66624) (not d!13753) (not d!13773) (not d!13785) (not bm!5543) (not bm!5532) (not b!66535) (not bm!5539) (not mapNonEmpty!3085) (not b!66453) tp_is_empty!2449 (not b!66537) (not b!66655) (not b_lambda!2977) (not b!66653) (not b!66507) (not b!66465) (not b!66527) (not b!66476) (not b!66637) (not bm!5540))
(check-sat b_and!4121 b_and!4123 (not b_next!2065) (not b_next!2067))
(get-model)

(declare-fun d!13789 () Bool)

(assert (=> d!13789 (= (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66514 d!13789))

(declare-fun d!13791 () Bool)

(declare-fun e!43737 () Bool)

(assert (=> d!13791 e!43737))

(declare-fun res!36063 () Bool)

(assert (=> d!13791 (=> res!36063 e!43737)))

(declare-fun lt!28818 () Bool)

(assert (=> d!13791 (= res!36063 (not lt!28818))))

(declare-fun lt!28821 () Bool)

(assert (=> d!13791 (= lt!28818 lt!28821)))

(declare-fun lt!28820 () Unit!1824)

(declare-fun e!43738 () Unit!1824)

(assert (=> d!13791 (= lt!28820 e!43738)))

(declare-fun c!9204 () Bool)

(assert (=> d!13791 (= c!9204 lt!28821)))

(assert (=> d!13791 (= lt!28821 (containsKey!134 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13791 (= (contains!705 lt!28667 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28818)))

(declare-fun b!66668 () Bool)

(declare-fun lt!28819 () Unit!1824)

(assert (=> b!66668 (= e!43738 lt!28819)))

(assert (=> b!66668 (= lt!28819 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66668 (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66669 () Bool)

(declare-fun Unit!1838 () Unit!1824)

(assert (=> b!66669 (= e!43738 Unit!1838)))

(declare-fun b!66670 () Bool)

(assert (=> b!66670 (= e!43737 (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13791 c!9204) b!66668))

(assert (= (and d!13791 (not c!9204)) b!66669))

(assert (= (and d!13791 (not res!36063)) b!66670))

(declare-fun m!61225 () Bool)

(assert (=> d!13791 m!61225))

(declare-fun m!61227 () Bool)

(assert (=> b!66668 m!61227))

(declare-fun m!61229 () Bool)

(assert (=> b!66668 m!61229))

(assert (=> b!66668 m!61229))

(declare-fun m!61231 () Bool)

(assert (=> b!66668 m!61231))

(assert (=> b!66670 m!61229))

(assert (=> b!66670 m!61229))

(assert (=> b!66670 m!61231))

(assert (=> bm!5475 d!13791))

(declare-fun b!66705 () Bool)

(declare-fun e!43755 () Unit!1824)

(declare-fun lt!28890 () Unit!1824)

(assert (=> b!66705 (= e!43755 lt!28890)))

(assert (=> b!66705 (= lt!28890 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28900 () SeekEntryResult!227)

(declare-fun call!5564 () SeekEntryResult!227)

(assert (=> b!66705 (= lt!28900 call!5564)))

(declare-fun c!9213 () Bool)

(assert (=> b!66705 (= c!9213 ((_ is MissingZero!227) lt!28900))))

(declare-fun e!43761 () Bool)

(assert (=> b!66705 e!43761))

(declare-fun e!43759 () Bool)

(declare-fun b!66706 () Bool)

(declare-fun lt!28909 () SeekEntryResult!227)

(assert (=> b!66706 (= e!43759 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28909)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66707 () Bool)

(declare-fun res!36088 () Bool)

(declare-fun e!43758 () Bool)

(assert (=> b!66707 (=> (not res!36088) (not e!43758))))

(declare-fun lt!28883 () tuple2!2080)

(assert (=> b!66707 (= res!36088 (contains!705 (map!1141 (_2!1051 lt!28883)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66708 () Bool)

(declare-fun c!9216 () Bool)

(assert (=> b!66708 (= c!9216 ((_ is MissingVacant!227) lt!28900))))

(declare-fun e!43757 () Bool)

(assert (=> b!66708 (= e!43761 e!43757)))

(declare-fun b!66709 () Bool)

(assert (=> b!66709 (= e!43757 ((_ is Undefined!227) lt!28900))))

(declare-fun call!5562 () Bool)

(declare-fun bm!5559 () Bool)

(assert (=> bm!5559 (= call!5562 (arrayContainsKey!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!5560 () Bool)

(declare-fun call!5563 () Bool)

(declare-fun call!5565 () Bool)

(assert (=> bm!5560 (= call!5563 call!5565)))

(declare-fun b!66710 () Bool)

(declare-fun e!43756 () Bool)

(assert (=> b!66710 (= e!43756 (not call!5562))))

(declare-fun bm!5561 () Bool)

(assert (=> bm!5561 (= call!5564 (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(declare-fun b!66711 () Bool)

(declare-fun res!36087 () Bool)

(assert (=> b!66711 (= res!36087 call!5565)))

(assert (=> b!66711 (=> (not res!36087) (not e!43759))))

(declare-fun b!66712 () Bool)

(assert (=> b!66712 (= e!43757 e!43756)))

(declare-fun res!36086 () Bool)

(assert (=> b!66712 (= res!36086 call!5563)))

(assert (=> b!66712 (=> (not res!36086) (not e!43756))))

(declare-fun b!66713 () Bool)

(declare-fun Unit!1839 () Unit!1824)

(assert (=> b!66713 (= e!43755 Unit!1839)))

(declare-fun lt!28889 () Unit!1824)

(assert (=> b!66713 (= lt!28889 (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(assert (=> b!66713 (= lt!28909 call!5564)))

(declare-fun res!36082 () Bool)

(assert (=> b!66713 (= res!36082 ((_ is Found!227) lt!28909))))

(assert (=> b!66713 (=> (not res!36082) (not e!43759))))

(assert (=> b!66713 e!43759))

(declare-fun lt!28911 () Unit!1824)

(assert (=> b!66713 (= lt!28911 lt!28889)))

(assert (=> b!66713 false))

(declare-fun d!13793 () Bool)

(assert (=> d!13793 e!43758))

(declare-fun res!36089 () Bool)

(assert (=> d!13793 (=> (not res!36089) (not e!43758))))

(assert (=> d!13793 (= res!36089 (_1!1051 lt!28883))))

(assert (=> d!13793 (= lt!28883 (tuple2!2081 true (LongMapFixedSize!671 (defaultEntry!2146 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (bvadd (_size!384 newMap!16) #b00000000000000000000000000000001) (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (_vacant!384 newMap!16))))))

(declare-fun lt!28902 () Unit!1824)

(declare-fun lt!28887 () Unit!1824)

(assert (=> d!13793 (= lt!28902 lt!28887)))

(declare-fun lt!28901 () array!3823)

(declare-fun lt!28905 () array!3825)

(assert (=> d!13793 (contains!705 (getCurrentListMap!403 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))))))

(assert (=> d!13793 (= lt!28887 (lemmaValidKeyInArrayIsInListMap!81 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13793 (= lt!28905 (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))))

(assert (=> d!13793 (= lt!28901 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))

(declare-fun lt!28891 () Unit!1824)

(declare-fun lt!28896 () Unit!1824)

(assert (=> d!13793 (= lt!28891 lt!28896)))

(declare-fun lt!28908 () array!3823)

(assert (=> d!13793 (= (arrayCountValidKeys!0 lt!28908 (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (bvadd (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3823 (_ BitVec 32)) Unit!1824)

(assert (=> d!13793 (= lt!28896 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!28908 (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))))))

(assert (=> d!13793 (= lt!28908 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))

(declare-fun lt!28898 () Unit!1824)

(declare-fun lt!28910 () Unit!1824)

(assert (=> d!13793 (= lt!28898 lt!28910)))

(declare-fun lt!28885 () array!3823)

(assert (=> d!13793 (arrayContainsKey!0 lt!28885 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3823 (_ BitVec 64) (_ BitVec 32)) Unit!1824)

(assert (=> d!13793 (= lt!28910 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!28885 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))))))

(assert (=> d!13793 (= lt!28885 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))

(declare-fun lt!28907 () Unit!1824)

(declare-fun lt!28899 () Unit!1824)

(assert (=> d!13793 (= lt!28907 lt!28899)))

(assert (=> d!13793 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (getCurrentListMap!403 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!10 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) (_ BitVec 64) V!2913 Int) Unit!1824)

(assert (=> d!13793 (= lt!28899 (lemmaAddValidKeyToArrayThenAddPairToListMap!10 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28903 () Unit!1824)

(declare-fun lt!28893 () Unit!1824)

(assert (=> d!13793 (= lt!28903 lt!28893)))

(assert (=> d!13793 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (mask!6081 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3823 (_ BitVec 32) (_ BitVec 32)) Unit!1824)

(assert (=> d!13793 (= lt!28893 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (mask!6081 newMap!16)))))

(declare-fun lt!28888 () Unit!1824)

(declare-fun lt!28897 () Unit!1824)

(assert (=> d!13793 (= lt!28888 lt!28897)))

(assert (=> d!13793 (= (arrayCountValidKeys!0 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3786 newMap!16) #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3823 (_ BitVec 32) (_ BitVec 64)) Unit!1824)

(assert (=> d!13793 (= lt!28897 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3786 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun lt!28906 () Unit!1824)

(declare-fun lt!28894 () Unit!1824)

(assert (=> d!13793 (= lt!28906 lt!28894)))

(declare-fun lt!28886 () List!1454)

(declare-fun lt!28904 () (_ BitVec 32))

(assert (=> d!13793 (arrayNoDuplicates!0 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) lt!28904 lt!28886)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3823 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1454) Unit!1824)

(assert (=> d!13793 (= lt!28894 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) lt!28904 lt!28886))))

(assert (=> d!13793 (= lt!28886 Nil!1451)))

(assert (=> d!13793 (= lt!28904 #b00000000000000000000000000000000)))

(declare-fun lt!28882 () Unit!1824)

(declare-fun e!43762 () Unit!1824)

(assert (=> d!13793 (= lt!28882 e!43762)))

(declare-fun c!9214 () Bool)

(assert (=> d!13793 (= c!9214 (arrayContainsKey!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!28892 () Unit!1824)

(assert (=> d!13793 (= lt!28892 e!43755)))

(declare-fun c!9215 () Bool)

(assert (=> d!13793 (= c!9215 (contains!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13793 (valid!289 newMap!16)))

(assert (=> d!13793 (= (updateHelperNewKey!21 newMap!16 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))) lt!28883)))

(declare-fun b!66714 () Bool)

(assert (=> b!66714 (= e!43758 (= (map!1141 (_2!1051 lt!28883)) (+!86 (map!1141 newMap!16) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!66715 () Bool)

(declare-fun res!36090 () Bool)

(assert (=> b!66715 (= res!36090 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3039 lt!28900)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66715 (=> (not res!36090) (not e!43756))))

(declare-fun b!66716 () Bool)

(declare-fun Unit!1840 () Unit!1824)

(assert (=> b!66716 (= e!43762 Unit!1840)))

(declare-fun lt!28895 () Unit!1824)

(declare-fun lemmaArrayContainsKeyThenInListMap!10 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) (_ BitVec 32) Int) Unit!1824)

(assert (=> b!66716 (= lt!28895 (lemmaArrayContainsKeyThenInListMap!10 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(assert (=> b!66716 (contains!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))

(declare-fun lt!28884 () Unit!1824)

(assert (=> b!66716 (= lt!28884 lt!28895)))

(assert (=> b!66716 false))

(declare-fun b!66717 () Bool)

(declare-fun res!36085 () Bool)

(declare-fun e!43760 () Bool)

(assert (=> b!66717 (=> (not res!36085) (not e!43760))))

(assert (=> b!66717 (= res!36085 call!5563)))

(assert (=> b!66717 (= e!43761 e!43760)))

(declare-fun b!66718 () Bool)

(declare-fun res!36084 () Bool)

(assert (=> b!66718 (=> (not res!36084) (not e!43758))))

(assert (=> b!66718 (= res!36084 (valid!289 (_2!1051 lt!28883)))))

(declare-fun b!66719 () Bool)

(declare-fun res!36083 () Bool)

(assert (=> b!66719 (=> (not res!36083) (not e!43760))))

(assert (=> b!66719 (= res!36083 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3036 lt!28900)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66720 () Bool)

(declare-fun Unit!1841 () Unit!1824)

(assert (=> b!66720 (= e!43762 Unit!1841)))

(declare-fun b!66721 () Bool)

(assert (=> b!66721 (= e!43760 (not call!5562))))

(declare-fun bm!5562 () Bool)

(assert (=> bm!5562 (= call!5565 (inRange!0 (ite c!9215 (index!3037 lt!28909) (ite c!9213 (index!3036 lt!28900) (index!3039 lt!28900))) (mask!6081 newMap!16)))))

(assert (= (and d!13793 c!9215) b!66713))

(assert (= (and d!13793 (not c!9215)) b!66705))

(assert (= (and b!66713 res!36082) b!66711))

(assert (= (and b!66711 res!36087) b!66706))

(assert (= (and b!66705 c!9213) b!66717))

(assert (= (and b!66705 (not c!9213)) b!66708))

(assert (= (and b!66717 res!36085) b!66719))

(assert (= (and b!66719 res!36083) b!66721))

(assert (= (and b!66708 c!9216) b!66712))

(assert (= (and b!66708 (not c!9216)) b!66709))

(assert (= (and b!66712 res!36086) b!66715))

(assert (= (and b!66715 res!36090) b!66710))

(assert (= (or b!66717 b!66712) bm!5560))

(assert (= (or b!66721 b!66710) bm!5559))

(assert (= (or b!66711 bm!5560) bm!5562))

(assert (= (or b!66713 b!66705) bm!5561))

(assert (= (and d!13793 c!9214) b!66716))

(assert (= (and d!13793 (not c!9214)) b!66720))

(assert (= (and d!13793 res!36089) b!66718))

(assert (= (and b!66718 res!36084) b!66707))

(assert (= (and b!66707 res!36088) b!66714))

(assert (=> bm!5559 m!60827))

(assert (=> bm!5559 m!61207))

(assert (=> bm!5561 m!60827))

(assert (=> bm!5561 m!61181))

(declare-fun m!61233 () Bool)

(assert (=> b!66718 m!61233))

(declare-fun m!61235 () Bool)

(assert (=> b!66706 m!61235))

(declare-fun m!61237 () Bool)

(assert (=> bm!5562 m!61237))

(assert (=> b!66716 m!60827))

(declare-fun m!61239 () Bool)

(assert (=> b!66716 m!61239))

(assert (=> b!66716 m!61017))

(assert (=> b!66716 m!61017))

(assert (=> b!66716 m!60827))

(declare-fun m!61241 () Bool)

(assert (=> b!66716 m!61241))

(declare-fun m!61243 () Bool)

(assert (=> b!66719 m!61243))

(declare-fun m!61245 () Bool)

(assert (=> d!13793 m!61245))

(assert (=> d!13793 m!61017))

(assert (=> d!13793 m!60851))

(assert (=> d!13793 m!60827))

(declare-fun m!61247 () Bool)

(assert (=> d!13793 m!61247))

(assert (=> d!13793 m!60827))

(assert (=> d!13793 m!61207))

(declare-fun m!61249 () Bool)

(assert (=> d!13793 m!61249))

(declare-fun m!61251 () Bool)

(assert (=> d!13793 m!61251))

(assert (=> d!13793 m!60827))

(declare-fun m!61253 () Bool)

(assert (=> d!13793 m!61253))

(declare-fun m!61255 () Bool)

(assert (=> d!13793 m!61255))

(declare-fun m!61257 () Bool)

(assert (=> d!13793 m!61257))

(declare-fun m!61259 () Bool)

(assert (=> d!13793 m!61259))

(declare-fun m!61261 () Bool)

(assert (=> d!13793 m!61261))

(declare-fun m!61263 () Bool)

(assert (=> d!13793 m!61263))

(declare-fun m!61265 () Bool)

(assert (=> d!13793 m!61265))

(assert (=> d!13793 m!60827))

(declare-fun m!61267 () Bool)

(assert (=> d!13793 m!61267))

(declare-fun m!61269 () Bool)

(assert (=> d!13793 m!61269))

(declare-fun m!61271 () Bool)

(assert (=> d!13793 m!61271))

(assert (=> d!13793 m!60827))

(declare-fun m!61273 () Bool)

(assert (=> d!13793 m!61273))

(assert (=> d!13793 m!61017))

(declare-fun m!61275 () Bool)

(assert (=> d!13793 m!61275))

(assert (=> d!13793 m!60827))

(declare-fun m!61277 () Bool)

(assert (=> d!13793 m!61277))

(assert (=> d!13793 m!61151))

(assert (=> d!13793 m!61017))

(assert (=> d!13793 m!60827))

(assert (=> d!13793 m!61241))

(assert (=> d!13793 m!61249))

(assert (=> d!13793 m!61257))

(declare-fun m!61279 () Bool)

(assert (=> d!13793 m!61279))

(assert (=> d!13793 m!60827))

(declare-fun m!61281 () Bool)

(assert (=> d!13793 m!61281))

(declare-fun m!61283 () Bool)

(assert (=> b!66707 m!61283))

(assert (=> b!66707 m!61283))

(assert (=> b!66707 m!60827))

(declare-fun m!61285 () Bool)

(assert (=> b!66707 m!61285))

(assert (=> b!66713 m!60827))

(assert (=> b!66713 m!61173))

(assert (=> b!66705 m!60827))

(assert (=> b!66705 m!61199))

(declare-fun m!61287 () Bool)

(assert (=> b!66715 m!61287))

(assert (=> b!66714 m!61283))

(assert (=> b!66714 m!60843))

(assert (=> b!66714 m!60843))

(declare-fun m!61289 () Bool)

(assert (=> b!66714 m!61289))

(assert (=> bm!5540 d!13793))

(declare-fun d!13795 () Bool)

(assert (=> d!13795 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28798 lt!28522 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28914 () Unit!1824)

(declare-fun choose!374 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 V!2913 Int) Unit!1824)

(assert (=> d!13795 (= lt!28914 (choose!374 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) lt!28798 (zeroValue!2054 newMap!16) lt!28522 (minValue!2054 newMap!16) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13795 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13795 (= (lemmaChangeZeroKeyThenAddPairToListMap!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) lt!28798 (zeroValue!2054 newMap!16) lt!28522 (minValue!2054 newMap!16) (defaultEntry!2146 newMap!16)) lt!28914)))

(declare-fun bs!2866 () Bool)

(assert (= bs!2866 d!13795))

(assert (=> bs!2866 m!61017))

(assert (=> bs!2866 m!61017))

(declare-fun m!61291 () Bool)

(assert (=> bs!2866 m!61291))

(declare-fun m!61293 () Bool)

(assert (=> bs!2866 m!61293))

(declare-fun m!61295 () Bool)

(assert (=> bs!2866 m!61295))

(declare-fun m!61297 () Bool)

(assert (=> bs!2866 m!61297))

(assert (=> b!66653 d!13795))

(declare-fun b!66734 () Bool)

(declare-fun e!43769 () SeekEntryResult!227)

(assert (=> b!66734 (= e!43769 Undefined!227)))

(declare-fun b!66736 () Bool)

(declare-fun e!43771 () SeekEntryResult!227)

(assert (=> b!66736 (= e!43769 e!43771)))

(declare-fun lt!28923 () (_ BitVec 64))

(declare-fun lt!28921 () SeekEntryResult!227)

(assert (=> b!66736 (= lt!28923 (select (arr!1826 (_keys!3786 newMap!16)) (index!3038 lt!28921)))))

(declare-fun c!9223 () Bool)

(assert (=> b!66736 (= c!9223 (= lt!28923 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!43770 () SeekEntryResult!227)

(declare-fun b!66737 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3823 (_ BitVec 32)) SeekEntryResult!227)

(assert (=> b!66737 (= e!43770 (seekKeyOrZeroReturnVacant!0 (x!10697 lt!28921) (index!3038 lt!28921) (index!3038 lt!28921) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(declare-fun b!66738 () Bool)

(declare-fun c!9224 () Bool)

(assert (=> b!66738 (= c!9224 (= lt!28923 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66738 (= e!43771 e!43770)))

(declare-fun b!66739 () Bool)

(assert (=> b!66739 (= e!43770 (MissingZero!227 (index!3038 lt!28921)))))

(declare-fun d!13797 () Bool)

(declare-fun lt!28922 () SeekEntryResult!227)

(assert (=> d!13797 (and (or ((_ is Undefined!227) lt!28922) (not ((_ is Found!227) lt!28922)) (and (bvsge (index!3037 lt!28922) #b00000000000000000000000000000000) (bvslt (index!3037 lt!28922) (size!2061 (_keys!3786 newMap!16))))) (or ((_ is Undefined!227) lt!28922) ((_ is Found!227) lt!28922) (not ((_ is MissingZero!227) lt!28922)) (and (bvsge (index!3036 lt!28922) #b00000000000000000000000000000000) (bvslt (index!3036 lt!28922) (size!2061 (_keys!3786 newMap!16))))) (or ((_ is Undefined!227) lt!28922) ((_ is Found!227) lt!28922) ((_ is MissingZero!227) lt!28922) (not ((_ is MissingVacant!227) lt!28922)) (and (bvsge (index!3039 lt!28922) #b00000000000000000000000000000000) (bvslt (index!3039 lt!28922) (size!2061 (_keys!3786 newMap!16))))) (or ((_ is Undefined!227) lt!28922) (ite ((_ is Found!227) lt!28922) (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28922)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite ((_ is MissingZero!227) lt!28922) (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3036 lt!28922)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!227) lt!28922) (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3039 lt!28922)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13797 (= lt!28922 e!43769)))

(declare-fun c!9225 () Bool)

(assert (=> d!13797 (= c!9225 (and ((_ is Intermediate!227) lt!28921) (undefined!1039 lt!28921)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3823 (_ BitVec 32)) SeekEntryResult!227)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!13797 (= lt!28921 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6081 newMap!16)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(assert (=> d!13797 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13797 (= (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)) lt!28922)))

(declare-fun b!66735 () Bool)

(assert (=> b!66735 (= e!43771 (Found!227 (index!3038 lt!28921)))))

(assert (= (and d!13797 c!9225) b!66734))

(assert (= (and d!13797 (not c!9225)) b!66736))

(assert (= (and b!66736 c!9223) b!66735))

(assert (= (and b!66736 (not c!9223)) b!66738))

(assert (= (and b!66738 c!9224) b!66739))

(assert (= (and b!66738 (not c!9224)) b!66737))

(declare-fun m!61299 () Bool)

(assert (=> b!66736 m!61299))

(assert (=> b!66737 m!60827))

(declare-fun m!61301 () Bool)

(assert (=> b!66737 m!61301))

(assert (=> d!13797 m!60827))

(declare-fun m!61303 () Bool)

(assert (=> d!13797 m!61303))

(assert (=> d!13797 m!61297))

(declare-fun m!61305 () Bool)

(assert (=> d!13797 m!61305))

(declare-fun m!61307 () Bool)

(assert (=> d!13797 m!61307))

(assert (=> d!13797 m!61303))

(assert (=> d!13797 m!60827))

(declare-fun m!61309 () Bool)

(assert (=> d!13797 m!61309))

(declare-fun m!61311 () Bool)

(assert (=> d!13797 m!61311))

(assert (=> bm!5549 d!13797))

(declare-fun d!13799 () Bool)

(declare-fun e!43774 () Bool)

(assert (=> d!13799 e!43774))

(declare-fun c!9228 () Bool)

(assert (=> d!13799 (= c!9228 (and (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!13799 true))

(declare-fun _$29!81 () Unit!1824)

(assert (=> d!13799 (= (choose!372 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))) _$29!81)))

(declare-fun b!66744 () Bool)

(assert (=> b!66744 (= e!43774 (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!66745 () Bool)

(assert (=> b!66745 (= e!43774 (ite (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!13799 c!9228) b!66744))

(assert (= (and d!13799 (not c!9228)) b!66745))

(assert (=> b!66744 m!60827))

(assert (=> b!66744 m!60839))

(assert (=> d!13753 d!13799))

(assert (=> d!13753 d!13777))

(assert (=> d!13749 d!13755))

(declare-fun d!13801 () Bool)

(assert (=> d!13801 (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) from!355 Nil!1451)))

(assert (=> d!13801 true))

(declare-fun _$71!87 () Unit!1824)

(assert (=> d!13801 (= (choose!39 (_keys!3786 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!87)))

(declare-fun bs!2867 () Bool)

(assert (= bs!2867 d!13801))

(assert (=> bs!2867 m!60835))

(assert (=> d!13749 d!13801))

(declare-fun d!13803 () Bool)

(declare-fun lt!28926 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!72 (List!1455) (InoxSet tuple2!2082))

(assert (=> d!13803 (= lt!28926 (select (content!72 (toList!705 lt!28719)) lt!28520))))

(declare-fun e!43780 () Bool)

(assert (=> d!13803 (= lt!28926 e!43780)))

(declare-fun res!36096 () Bool)

(assert (=> d!13803 (=> (not res!36096) (not e!43780))))

(assert (=> d!13803 (= res!36096 ((_ is Cons!1451) (toList!705 lt!28719)))))

(assert (=> d!13803 (= (contains!709 (toList!705 lt!28719) lt!28520) lt!28926)))

(declare-fun b!66750 () Bool)

(declare-fun e!43779 () Bool)

(assert (=> b!66750 (= e!43780 e!43779)))

(declare-fun res!36095 () Bool)

(assert (=> b!66750 (=> res!36095 e!43779)))

(assert (=> b!66750 (= res!36095 (= (h!2035 (toList!705 lt!28719)) lt!28520))))

(declare-fun b!66751 () Bool)

(assert (=> b!66751 (= e!43779 (contains!709 (t!4929 (toList!705 lt!28719)) lt!28520))))

(assert (= (and d!13803 res!36096) b!66750))

(assert (= (and b!66750 (not res!36095)) b!66751))

(declare-fun m!61313 () Bool)

(assert (=> d!13803 m!61313))

(declare-fun m!61315 () Bool)

(assert (=> d!13803 m!61315))

(declare-fun m!61317 () Bool)

(assert (=> b!66751 m!61317))

(assert (=> b!66517 d!13803))

(declare-fun d!13805 () Bool)

(assert (=> d!13805 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28808 (zeroValue!2054 newMap!16) lt!28522 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28929 () Unit!1824)

(declare-fun choose!375 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 V!2913 Int) Unit!1824)

(assert (=> d!13805 (= lt!28929 (choose!375 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) lt!28808 (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) lt!28522 (defaultEntry!2146 newMap!16)))))

(assert (=> d!13805 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13805 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) lt!28808 (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) lt!28522 (defaultEntry!2146 newMap!16)) lt!28929)))

(declare-fun bs!2868 () Bool)

(assert (= bs!2868 d!13805))

(declare-fun m!61319 () Bool)

(assert (=> bs!2868 m!61319))

(declare-fun m!61321 () Bool)

(assert (=> bs!2868 m!61321))

(assert (=> bs!2868 m!61017))

(declare-fun m!61323 () Bool)

(assert (=> bs!2868 m!61323))

(assert (=> bs!2868 m!61297))

(assert (=> bs!2868 m!61017))

(assert (=> b!66655 d!13805))

(declare-fun d!13807 () Bool)

(declare-fun lt!28930 () Bool)

(assert (=> d!13807 (= lt!28930 (select (content!72 (toList!705 lt!28687)) lt!28520))))

(declare-fun e!43782 () Bool)

(assert (=> d!13807 (= lt!28930 e!43782)))

(declare-fun res!36098 () Bool)

(assert (=> d!13807 (=> (not res!36098) (not e!43782))))

(assert (=> d!13807 (= res!36098 ((_ is Cons!1451) (toList!705 lt!28687)))))

(assert (=> d!13807 (= (contains!709 (toList!705 lt!28687) lt!28520) lt!28930)))

(declare-fun b!66752 () Bool)

(declare-fun e!43781 () Bool)

(assert (=> b!66752 (= e!43782 e!43781)))

(declare-fun res!36097 () Bool)

(assert (=> b!66752 (=> res!36097 e!43781)))

(assert (=> b!66752 (= res!36097 (= (h!2035 (toList!705 lt!28687)) lt!28520))))

(declare-fun b!66753 () Bool)

(assert (=> b!66753 (= e!43781 (contains!709 (t!4929 (toList!705 lt!28687)) lt!28520))))

(assert (= (and d!13807 res!36098) b!66752))

(assert (= (and b!66752 (not res!36097)) b!66753))

(declare-fun m!61325 () Bool)

(assert (=> d!13807 m!61325))

(declare-fun m!61327 () Bool)

(assert (=> d!13807 m!61327))

(declare-fun m!61329 () Bool)

(assert (=> b!66753 m!61329))

(assert (=> b!66477 d!13807))

(declare-fun d!13809 () Bool)

(declare-fun res!36099 () Bool)

(declare-fun e!43783 () Bool)

(assert (=> d!13809 (=> res!36099 e!43783)))

(assert (=> d!13809 (= res!36099 (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13809 (= (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!43783)))

(declare-fun b!66754 () Bool)

(declare-fun e!43784 () Bool)

(assert (=> b!66754 (= e!43783 e!43784)))

(declare-fun res!36100 () Bool)

(assert (=> b!66754 (=> (not res!36100) (not e!43784))))

(assert (=> b!66754 (= res!36100 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!66755 () Bool)

(assert (=> b!66755 (= e!43784 (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!13809 (not res!36099)) b!66754))

(assert (= (and b!66754 res!36100) b!66755))

(declare-fun m!61331 () Bool)

(assert (=> d!13809 m!61331))

(assert (=> b!66755 m!60827))

(declare-fun m!61333 () Bool)

(assert (=> b!66755 m!61333))

(assert (=> b!66387 d!13809))

(declare-fun d!13811 () Bool)

(declare-fun e!43785 () Bool)

(assert (=> d!13811 e!43785))

(declare-fun res!36101 () Bool)

(assert (=> d!13811 (=> res!36101 e!43785)))

(declare-fun lt!28931 () Bool)

(assert (=> d!13811 (= res!36101 (not lt!28931))))

(declare-fun lt!28934 () Bool)

(assert (=> d!13811 (= lt!28931 lt!28934)))

(declare-fun lt!28933 () Unit!1824)

(declare-fun e!43786 () Unit!1824)

(assert (=> d!13811 (= lt!28933 e!43786)))

(declare-fun c!9229 () Bool)

(assert (=> d!13811 (= c!9229 lt!28934)))

(assert (=> d!13811 (= lt!28934 (containsKey!134 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669))))

(assert (=> d!13811 (= (contains!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28669) lt!28931)))

(declare-fun b!66756 () Bool)

(declare-fun lt!28932 () Unit!1824)

(assert (=> b!66756 (= e!43786 lt!28932)))

(assert (=> b!66756 (= lt!28932 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669))))

(assert (=> b!66756 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669))))

(declare-fun b!66757 () Bool)

(declare-fun Unit!1842 () Unit!1824)

(assert (=> b!66757 (= e!43786 Unit!1842)))

(declare-fun b!66758 () Bool)

(assert (=> b!66758 (= e!43785 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669)))))

(assert (= (and d!13811 c!9229) b!66756))

(assert (= (and d!13811 (not c!9229)) b!66757))

(assert (= (and d!13811 (not res!36101)) b!66758))

(declare-fun m!61335 () Bool)

(assert (=> d!13811 m!61335))

(declare-fun m!61337 () Bool)

(assert (=> b!66756 m!61337))

(declare-fun m!61339 () Bool)

(assert (=> b!66756 m!61339))

(assert (=> b!66756 m!61339))

(declare-fun m!61341 () Bool)

(assert (=> b!66756 m!61341))

(assert (=> b!66758 m!61339))

(assert (=> b!66758 m!61339))

(assert (=> b!66758 m!61341))

(assert (=> b!66467 d!13811))

(declare-fun d!13813 () Bool)

(declare-fun e!43787 () Bool)

(assert (=> d!13813 e!43787))

(declare-fun res!36103 () Bool)

(assert (=> d!13813 (=> (not res!36103) (not e!43787))))

(declare-fun lt!28937 () ListLongMap!1379)

(assert (=> d!13813 (= res!36103 (contains!705 lt!28937 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!28935 () List!1455)

(assert (=> d!13813 (= lt!28937 (ListLongMap!1380 lt!28935))))

(declare-fun lt!28936 () Unit!1824)

(declare-fun lt!28938 () Unit!1824)

(assert (=> d!13813 (= lt!28936 lt!28938)))

(assert (=> d!13813 (= (getValueByKey!131 lt!28935 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13813 (= lt!28938 (lemmaContainsTupThenGetReturnValue!48 lt!28935 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13813 (= lt!28935 (insertStrictlySorted!51 (toList!705 lt!28661) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13813 (= (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28937)))

(declare-fun b!66759 () Bool)

(declare-fun res!36102 () Bool)

(assert (=> b!66759 (=> (not res!36102) (not e!43787))))

(assert (=> b!66759 (= res!36102 (= (getValueByKey!131 (toList!705 lt!28937) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66760 () Bool)

(assert (=> b!66760 (= e!43787 (contains!709 (toList!705 lt!28937) (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13813 res!36103) b!66759))

(assert (= (and b!66759 res!36102) b!66760))

(declare-fun m!61343 () Bool)

(assert (=> d!13813 m!61343))

(declare-fun m!61345 () Bool)

(assert (=> d!13813 m!61345))

(declare-fun m!61347 () Bool)

(assert (=> d!13813 m!61347))

(declare-fun m!61349 () Bool)

(assert (=> d!13813 m!61349))

(declare-fun m!61351 () Bool)

(assert (=> b!66759 m!61351))

(declare-fun m!61353 () Bool)

(assert (=> b!66760 m!61353))

(assert (=> b!66467 d!13813))

(declare-fun d!13815 () Bool)

(declare-fun get!1127 (Option!137) V!2913)

(assert (=> d!13815 (= (apply!72 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28656) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28656)))))

(declare-fun bs!2869 () Bool)

(assert (= bs!2869 d!13815))

(declare-fun m!61355 () Bool)

(assert (=> bs!2869 m!61355))

(assert (=> bs!2869 m!61355))

(declare-fun m!61357 () Bool)

(assert (=> bs!2869 m!61357))

(assert (=> b!66467 d!13815))

(assert (=> b!66467 d!13769))

(declare-fun d!13817 () Bool)

(assert (=> d!13817 (= (apply!72 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28660) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28660)))))

(declare-fun bs!2870 () Bool)

(assert (= bs!2870 d!13817))

(declare-fun m!61359 () Bool)

(assert (=> bs!2870 m!61359))

(assert (=> bs!2870 m!61359))

(declare-fun m!61361 () Bool)

(assert (=> bs!2870 m!61361))

(assert (=> b!66467 d!13817))

(declare-fun d!13819 () Bool)

(assert (=> d!13819 (= (apply!72 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28660) (apply!72 lt!28674 lt!28660))))

(declare-fun lt!28941 () Unit!1824)

(declare-fun choose!376 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1824)

(assert (=> d!13819 (= lt!28941 (choose!376 lt!28674 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28660))))

(declare-fun e!43790 () Bool)

(assert (=> d!13819 e!43790))

(declare-fun res!36106 () Bool)

(assert (=> d!13819 (=> (not res!36106) (not e!43790))))

(assert (=> d!13819 (= res!36106 (contains!705 lt!28674 lt!28660))))

(assert (=> d!13819 (= (addApplyDifferent!48 lt!28674 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28660) lt!28941)))

(declare-fun b!66764 () Bool)

(assert (=> b!66764 (= e!43790 (not (= lt!28660 lt!28659)))))

(assert (= (and d!13819 res!36106) b!66764))

(declare-fun m!61363 () Bool)

(assert (=> d!13819 m!61363))

(assert (=> d!13819 m!61043))

(assert (=> d!13819 m!61043))

(assert (=> d!13819 m!61045))

(declare-fun m!61365 () Bool)

(assert (=> d!13819 m!61365))

(assert (=> d!13819 m!61047))

(assert (=> b!66467 d!13819))

(declare-fun d!13821 () Bool)

(assert (=> d!13821 (= (apply!72 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28665) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28665)))))

(declare-fun bs!2871 () Bool)

(assert (= bs!2871 d!13821))

(declare-fun m!61367 () Bool)

(assert (=> bs!2871 m!61367))

(assert (=> bs!2871 m!61367))

(declare-fun m!61369 () Bool)

(assert (=> bs!2871 m!61369))

(assert (=> b!66467 d!13821))

(declare-fun d!13823 () Bool)

(declare-fun e!43791 () Bool)

(assert (=> d!13823 e!43791))

(declare-fun res!36108 () Bool)

(assert (=> d!13823 (=> (not res!36108) (not e!43791))))

(declare-fun lt!28944 () ListLongMap!1379)

(assert (=> d!13823 (= res!36108 (contains!705 lt!28944 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!28942 () List!1455)

(assert (=> d!13823 (= lt!28944 (ListLongMap!1380 lt!28942))))

(declare-fun lt!28943 () Unit!1824)

(declare-fun lt!28945 () Unit!1824)

(assert (=> d!13823 (= lt!28943 lt!28945)))

(assert (=> d!13823 (= (getValueByKey!131 lt!28942 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13823 (= lt!28945 (lemmaContainsTupThenGetReturnValue!48 lt!28942 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13823 (= lt!28942 (insertStrictlySorted!51 (toList!705 lt!28674) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13823 (= (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28944)))

(declare-fun b!66765 () Bool)

(declare-fun res!36107 () Bool)

(assert (=> b!66765 (=> (not res!36107) (not e!43791))))

(assert (=> b!66765 (= res!36107 (= (getValueByKey!131 (toList!705 lt!28944) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66766 () Bool)

(assert (=> b!66766 (= e!43791 (contains!709 (toList!705 lt!28944) (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13823 res!36108) b!66765))

(assert (= (and b!66765 res!36107) b!66766))

(declare-fun m!61371 () Bool)

(assert (=> d!13823 m!61371))

(declare-fun m!61373 () Bool)

(assert (=> d!13823 m!61373))

(declare-fun m!61375 () Bool)

(assert (=> d!13823 m!61375))

(declare-fun m!61377 () Bool)

(assert (=> d!13823 m!61377))

(declare-fun m!61379 () Bool)

(assert (=> b!66765 m!61379))

(declare-fun m!61381 () Bool)

(assert (=> b!66766 m!61381))

(assert (=> b!66467 d!13823))

(declare-fun d!13825 () Bool)

(assert (=> d!13825 (contains!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28669)))

(declare-fun lt!28948 () Unit!1824)

(declare-fun choose!377 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1824)

(assert (=> d!13825 (= lt!28948 (choose!377 lt!28666 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28669))))

(assert (=> d!13825 (contains!705 lt!28666 lt!28669)))

(assert (=> d!13825 (= (addStillContains!48 lt!28666 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28669) lt!28948)))

(declare-fun bs!2872 () Bool)

(assert (= bs!2872 d!13825))

(assert (=> bs!2872 m!61035))

(assert (=> bs!2872 m!61035))

(assert (=> bs!2872 m!61037))

(declare-fun m!61383 () Bool)

(assert (=> bs!2872 m!61383))

(declare-fun m!61385 () Bool)

(assert (=> bs!2872 m!61385))

(assert (=> b!66467 d!13825))

(declare-fun d!13827 () Bool)

(declare-fun e!43792 () Bool)

(assert (=> d!13827 e!43792))

(declare-fun res!36110 () Bool)

(assert (=> d!13827 (=> (not res!36110) (not e!43792))))

(declare-fun lt!28951 () ListLongMap!1379)

(assert (=> d!13827 (= res!36110 (contains!705 lt!28951 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!28949 () List!1455)

(assert (=> d!13827 (= lt!28951 (ListLongMap!1380 lt!28949))))

(declare-fun lt!28950 () Unit!1824)

(declare-fun lt!28952 () Unit!1824)

(assert (=> d!13827 (= lt!28950 lt!28952)))

(assert (=> d!13827 (= (getValueByKey!131 lt!28949 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13827 (= lt!28952 (lemmaContainsTupThenGetReturnValue!48 lt!28949 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13827 (= lt!28949 (insertStrictlySorted!51 (toList!705 lt!28663) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13827 (= (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28951)))

(declare-fun b!66768 () Bool)

(declare-fun res!36109 () Bool)

(assert (=> b!66768 (=> (not res!36109) (not e!43792))))

(assert (=> b!66768 (= res!36109 (= (getValueByKey!131 (toList!705 lt!28951) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66769 () Bool)

(assert (=> b!66769 (= e!43792 (contains!709 (toList!705 lt!28951) (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13827 res!36110) b!66768))

(assert (= (and b!66768 res!36109) b!66769))

(declare-fun m!61387 () Bool)

(assert (=> d!13827 m!61387))

(declare-fun m!61389 () Bool)

(assert (=> d!13827 m!61389))

(declare-fun m!61391 () Bool)

(assert (=> d!13827 m!61391))

(declare-fun m!61393 () Bool)

(assert (=> d!13827 m!61393))

(declare-fun m!61395 () Bool)

(assert (=> b!66768 m!61395))

(declare-fun m!61397 () Bool)

(assert (=> b!66769 m!61397))

(assert (=> b!66467 d!13827))

(declare-fun d!13829 () Bool)

(assert (=> d!13829 (= (apply!72 lt!28661 lt!28665) (get!1127 (getValueByKey!131 (toList!705 lt!28661) lt!28665)))))

(declare-fun bs!2873 () Bool)

(assert (= bs!2873 d!13829))

(declare-fun m!61399 () Bool)

(assert (=> bs!2873 m!61399))

(assert (=> bs!2873 m!61399))

(declare-fun m!61401 () Bool)

(assert (=> bs!2873 m!61401))

(assert (=> b!66467 d!13829))

(declare-fun d!13831 () Bool)

(assert (=> d!13831 (= (apply!72 lt!28663 lt!28656) (get!1127 (getValueByKey!131 (toList!705 lt!28663) lt!28656)))))

(declare-fun bs!2874 () Bool)

(assert (= bs!2874 d!13831))

(declare-fun m!61403 () Bool)

(assert (=> bs!2874 m!61403))

(assert (=> bs!2874 m!61403))

(declare-fun m!61405 () Bool)

(assert (=> bs!2874 m!61405))

(assert (=> b!66467 d!13831))

(declare-fun d!13833 () Bool)

(assert (=> d!13833 (= (apply!72 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28656) (apply!72 lt!28663 lt!28656))))

(declare-fun lt!28953 () Unit!1824)

(assert (=> d!13833 (= lt!28953 (choose!376 lt!28663 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28656))))

(declare-fun e!43793 () Bool)

(assert (=> d!13833 e!43793))

(declare-fun res!36111 () Bool)

(assert (=> d!13833 (=> (not res!36111) (not e!43793))))

(assert (=> d!13833 (= res!36111 (contains!705 lt!28663 lt!28656))))

(assert (=> d!13833 (= (addApplyDifferent!48 lt!28663 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28656) lt!28953)))

(declare-fun b!66770 () Bool)

(assert (=> b!66770 (= e!43793 (not (= lt!28656 lt!28662)))))

(assert (= (and d!13833 res!36111) b!66770))

(declare-fun m!61407 () Bool)

(assert (=> d!13833 m!61407))

(assert (=> d!13833 m!61049))

(assert (=> d!13833 m!61049))

(assert (=> d!13833 m!61055))

(declare-fun m!61409 () Bool)

(assert (=> d!13833 m!61409))

(assert (=> d!13833 m!61041))

(assert (=> b!66467 d!13833))

(declare-fun d!13835 () Bool)

(declare-fun e!43794 () Bool)

(assert (=> d!13835 e!43794))

(declare-fun res!36113 () Bool)

(assert (=> d!13835 (=> (not res!36113) (not e!43794))))

(declare-fun lt!28956 () ListLongMap!1379)

(assert (=> d!13835 (= res!36113 (contains!705 lt!28956 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!28954 () List!1455)

(assert (=> d!13835 (= lt!28956 (ListLongMap!1380 lt!28954))))

(declare-fun lt!28955 () Unit!1824)

(declare-fun lt!28957 () Unit!1824)

(assert (=> d!13835 (= lt!28955 lt!28957)))

(assert (=> d!13835 (= (getValueByKey!131 lt!28954 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13835 (= lt!28957 (lemmaContainsTupThenGetReturnValue!48 lt!28954 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13835 (= lt!28954 (insertStrictlySorted!51 (toList!705 lt!28666) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13835 (= (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28956)))

(declare-fun b!66771 () Bool)

(declare-fun res!36112 () Bool)

(assert (=> b!66771 (=> (not res!36112) (not e!43794))))

(assert (=> b!66771 (= res!36112 (= (getValueByKey!131 (toList!705 lt!28956) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66772 () Bool)

(assert (=> b!66772 (= e!43794 (contains!709 (toList!705 lt!28956) (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13835 res!36113) b!66771))

(assert (= (and b!66771 res!36112) b!66772))

(declare-fun m!61411 () Bool)

(assert (=> d!13835 m!61411))

(declare-fun m!61413 () Bool)

(assert (=> d!13835 m!61413))

(declare-fun m!61415 () Bool)

(assert (=> d!13835 m!61415))

(declare-fun m!61417 () Bool)

(assert (=> d!13835 m!61417))

(declare-fun m!61419 () Bool)

(assert (=> b!66771 m!61419))

(declare-fun m!61421 () Bool)

(assert (=> b!66772 m!61421))

(assert (=> b!66467 d!13835))

(declare-fun d!13837 () Bool)

(assert (=> d!13837 (= (apply!72 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28665) (apply!72 lt!28661 lt!28665))))

(declare-fun lt!28958 () Unit!1824)

(assert (=> d!13837 (= lt!28958 (choose!376 lt!28661 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28665))))

(declare-fun e!43795 () Bool)

(assert (=> d!13837 e!43795))

(declare-fun res!36114 () Bool)

(assert (=> d!13837 (=> (not res!36114) (not e!43795))))

(assert (=> d!13837 (= res!36114 (contains!705 lt!28661 lt!28665))))

(assert (=> d!13837 (= (addApplyDifferent!48 lt!28661 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28665) lt!28958)))

(declare-fun b!66773 () Bool)

(assert (=> b!66773 (= e!43795 (not (= lt!28665 lt!28673)))))

(assert (= (and d!13837 res!36114) b!66773))

(declare-fun m!61423 () Bool)

(assert (=> d!13837 m!61423))

(assert (=> d!13837 m!61031))

(assert (=> d!13837 m!61031))

(assert (=> d!13837 m!61053))

(declare-fun m!61425 () Bool)

(assert (=> d!13837 m!61425))

(assert (=> d!13837 m!61057))

(assert (=> b!66467 d!13837))

(declare-fun d!13839 () Bool)

(assert (=> d!13839 (= (apply!72 lt!28674 lt!28660) (get!1127 (getValueByKey!131 (toList!705 lt!28674) lt!28660)))))

(declare-fun bs!2875 () Bool)

(assert (= bs!2875 d!13839))

(declare-fun m!61427 () Bool)

(assert (=> bs!2875 m!61427))

(assert (=> bs!2875 m!61427))

(declare-fun m!61429 () Bool)

(assert (=> bs!2875 m!61429))

(assert (=> b!66467 d!13839))

(declare-fun b!66774 () Bool)

(declare-fun res!36123 () Bool)

(declare-fun e!43799 () Bool)

(assert (=> b!66774 (=> (not res!36123) (not e!43799))))

(declare-fun e!43804 () Bool)

(assert (=> b!66774 (= res!36123 e!43804)))

(declare-fun c!9235 () Bool)

(assert (=> b!66774 (= c!9235 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!66775 () Bool)

(declare-fun call!5570 () Bool)

(assert (=> b!66775 (= e!43804 (not call!5570))))

(declare-fun b!66776 () Bool)

(declare-fun e!43800 () Bool)

(assert (=> b!66776 (= e!43800 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66777 () Bool)

(declare-fun e!43802 () Bool)

(assert (=> b!66777 (= e!43804 e!43802)))

(declare-fun res!36117 () Bool)

(assert (=> b!66777 (= res!36117 call!5570)))

(assert (=> b!66777 (=> (not res!36117) (not e!43802))))

(declare-fun b!66778 () Bool)

(declare-fun e!43801 () Bool)

(declare-fun lt!28971 () ListLongMap!1379)

(assert (=> b!66778 (= e!43801 (= (apply!72 lt!28971 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 lt!28812) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66778 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 lt!28812)))))

(assert (=> b!66778 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun d!13841 () Bool)

(assert (=> d!13841 e!43799))

(declare-fun res!36118 () Bool)

(assert (=> d!13841 (=> (not res!36118) (not e!43799))))

(assert (=> d!13841 (= res!36118 (or (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun lt!28979 () ListLongMap!1379)

(assert (=> d!13841 (= lt!28971 lt!28979)))

(declare-fun lt!28976 () Unit!1824)

(declare-fun e!43798 () Unit!1824)

(assert (=> d!13841 (= lt!28976 e!43798)))

(declare-fun c!9233 () Bool)

(declare-fun e!43796 () Bool)

(assert (=> d!13841 (= c!9233 e!43796)))

(declare-fun res!36122 () Bool)

(assert (=> d!13841 (=> (not res!36122) (not e!43796))))

(assert (=> d!13841 (= res!36122 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun e!43803 () ListLongMap!1379)

(assert (=> d!13841 (= lt!28979 e!43803)))

(declare-fun c!9230 () Bool)

(assert (=> d!13841 (= c!9230 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13841 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13841 (= (getCurrentListMap!403 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!28971)))

(declare-fun b!66779 () Bool)

(declare-fun e!43806 () Bool)

(declare-fun e!43808 () Bool)

(assert (=> b!66779 (= e!43806 e!43808)))

(declare-fun res!36120 () Bool)

(declare-fun call!5567 () Bool)

(assert (=> b!66779 (= res!36120 call!5567)))

(assert (=> b!66779 (=> (not res!36120) (not e!43808))))

(declare-fun b!66780 () Bool)

(assert (=> b!66780 (= e!43806 (not call!5567))))

(declare-fun b!66781 () Bool)

(assert (=> b!66781 (= e!43802 (= (apply!72 lt!28971 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun bm!5563 () Bool)

(declare-fun call!5569 () ListLongMap!1379)

(declare-fun call!5572 () ListLongMap!1379)

(assert (=> bm!5563 (= call!5569 call!5572)))

(declare-fun b!66782 () Bool)

(declare-fun Unit!1843 () Unit!1824)

(assert (=> b!66782 (= e!43798 Unit!1843)))

(declare-fun b!66783 () Bool)

(declare-fun e!43797 () ListLongMap!1379)

(assert (=> b!66783 (= e!43797 call!5569)))

(declare-fun bm!5564 () Bool)

(declare-fun call!5568 () ListLongMap!1379)

(assert (=> bm!5564 (= call!5572 call!5568)))

(declare-fun c!9232 () Bool)

(declare-fun call!5566 () ListLongMap!1379)

(declare-fun bm!5565 () Bool)

(assert (=> bm!5565 (= call!5566 (+!86 (ite c!9230 call!5568 (ite c!9232 call!5572 call!5569)) (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!66784 () Bool)

(declare-fun e!43807 () ListLongMap!1379)

(declare-fun call!5571 () ListLongMap!1379)

(assert (=> b!66784 (= e!43807 call!5571)))

(declare-fun bm!5566 () Bool)

(assert (=> bm!5566 (= call!5571 call!5566)))

(declare-fun bm!5567 () Bool)

(assert (=> bm!5567 (= call!5567 (contains!705 lt!28971 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66785 () Bool)

(declare-fun res!36121 () Bool)

(assert (=> b!66785 (=> (not res!36121) (not e!43799))))

(declare-fun e!43805 () Bool)

(assert (=> b!66785 (= res!36121 e!43805)))

(declare-fun res!36116 () Bool)

(assert (=> b!66785 (=> res!36116 e!43805)))

(assert (=> b!66785 (= res!36116 (not e!43800))))

(declare-fun res!36119 () Bool)

(assert (=> b!66785 (=> (not res!36119) (not e!43800))))

(assert (=> b!66785 (= res!36119 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!66786 () Bool)

(assert (=> b!66786 (= e!43799 e!43806)))

(declare-fun c!9234 () Bool)

(assert (=> b!66786 (= c!9234 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66787 () Bool)

(assert (=> b!66787 (= e!43803 (+!86 call!5566 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun b!66788 () Bool)

(assert (=> b!66788 (= e!43796 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66789 () Bool)

(assert (=> b!66789 (= e!43808 (= (apply!72 lt!28971 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun b!66790 () Bool)

(declare-fun lt!28968 () Unit!1824)

(assert (=> b!66790 (= e!43798 lt!28968)))

(declare-fun lt!28970 () ListLongMap!1379)

(assert (=> b!66790 (= lt!28970 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28975 () (_ BitVec 64))

(assert (=> b!66790 (= lt!28975 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28973 () (_ BitVec 64))

(assert (=> b!66790 (= lt!28973 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28980 () Unit!1824)

(assert (=> b!66790 (= lt!28980 (addStillContains!48 lt!28970 lt!28975 (zeroValue!2054 newMap!16) lt!28973))))

(assert (=> b!66790 (contains!705 (+!86 lt!28970 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16))) lt!28973)))

(declare-fun lt!28974 () Unit!1824)

(assert (=> b!66790 (= lt!28974 lt!28980)))

(declare-fun lt!28965 () ListLongMap!1379)

(assert (=> b!66790 (= lt!28965 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28977 () (_ BitVec 64))

(assert (=> b!66790 (= lt!28977 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28969 () (_ BitVec 64))

(assert (=> b!66790 (= lt!28969 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28959 () Unit!1824)

(assert (=> b!66790 (= lt!28959 (addApplyDifferent!48 lt!28965 lt!28977 (minValue!2054 newMap!16) lt!28969))))

(assert (=> b!66790 (= (apply!72 (+!86 lt!28965 (tuple2!2083 lt!28977 (minValue!2054 newMap!16))) lt!28969) (apply!72 lt!28965 lt!28969))))

(declare-fun lt!28961 () Unit!1824)

(assert (=> b!66790 (= lt!28961 lt!28959)))

(declare-fun lt!28978 () ListLongMap!1379)

(assert (=> b!66790 (= lt!28978 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28963 () (_ BitVec 64))

(assert (=> b!66790 (= lt!28963 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28964 () (_ BitVec 64))

(assert (=> b!66790 (= lt!28964 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28962 () Unit!1824)

(assert (=> b!66790 (= lt!28962 (addApplyDifferent!48 lt!28978 lt!28963 (zeroValue!2054 newMap!16) lt!28964))))

(assert (=> b!66790 (= (apply!72 (+!86 lt!28978 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16))) lt!28964) (apply!72 lt!28978 lt!28964))))

(declare-fun lt!28972 () Unit!1824)

(assert (=> b!66790 (= lt!28972 lt!28962)))

(declare-fun lt!28967 () ListLongMap!1379)

(assert (=> b!66790 (= lt!28967 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28966 () (_ BitVec 64))

(assert (=> b!66790 (= lt!28966 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28960 () (_ BitVec 64))

(assert (=> b!66790 (= lt!28960 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66790 (= lt!28968 (addApplyDifferent!48 lt!28967 lt!28966 (minValue!2054 newMap!16) lt!28960))))

(assert (=> b!66790 (= (apply!72 (+!86 lt!28967 (tuple2!2083 lt!28966 (minValue!2054 newMap!16))) lt!28960) (apply!72 lt!28967 lt!28960))))

(declare-fun b!66791 () Bool)

(declare-fun c!9231 () Bool)

(assert (=> b!66791 (= c!9231 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!66791 (= e!43807 e!43797)))

(declare-fun b!66792 () Bool)

(assert (=> b!66792 (= e!43803 e!43807)))

(assert (=> b!66792 (= c!9232 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66793 () Bool)

(assert (=> b!66793 (= e!43805 e!43801)))

(declare-fun res!36115 () Bool)

(assert (=> b!66793 (=> (not res!36115) (not e!43801))))

(assert (=> b!66793 (= res!36115 (contains!705 lt!28971 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66793 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!66794 () Bool)

(assert (=> b!66794 (= e!43797 call!5571)))

(declare-fun bm!5568 () Bool)

(assert (=> bm!5568 (= call!5568 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5569 () Bool)

(assert (=> bm!5569 (= call!5570 (contains!705 lt!28971 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13841 c!9230) b!66787))

(assert (= (and d!13841 (not c!9230)) b!66792))

(assert (= (and b!66792 c!9232) b!66784))

(assert (= (and b!66792 (not c!9232)) b!66791))

(assert (= (and b!66791 c!9231) b!66794))

(assert (= (and b!66791 (not c!9231)) b!66783))

(assert (= (or b!66794 b!66783) bm!5563))

(assert (= (or b!66784 bm!5563) bm!5564))

(assert (= (or b!66784 b!66794) bm!5566))

(assert (= (or b!66787 bm!5564) bm!5568))

(assert (= (or b!66787 bm!5566) bm!5565))

(assert (= (and d!13841 res!36122) b!66788))

(assert (= (and d!13841 c!9233) b!66790))

(assert (= (and d!13841 (not c!9233)) b!66782))

(assert (= (and d!13841 res!36118) b!66785))

(assert (= (and b!66785 res!36119) b!66776))

(assert (= (and b!66785 (not res!36116)) b!66793))

(assert (= (and b!66793 res!36115) b!66778))

(assert (= (and b!66785 res!36121) b!66774))

(assert (= (and b!66774 c!9235) b!66777))

(assert (= (and b!66774 (not c!9235)) b!66775))

(assert (= (and b!66777 res!36117) b!66781))

(assert (= (or b!66777 b!66775) bm!5569))

(assert (= (and b!66774 res!36123) b!66786))

(assert (= (and b!66786 c!9234) b!66779))

(assert (= (and b!66786 (not c!9234)) b!66780))

(assert (= (and b!66779 res!36120) b!66789))

(assert (= (or b!66779 b!66780) bm!5567))

(declare-fun b_lambda!2991 () Bool)

(assert (=> (not b_lambda!2991) (not b!66778)))

(declare-fun tb!1461 () Bool)

(declare-fun t!4942 () Bool)

(assert (=> (and b!66230 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16)) t!4942) tb!1461))

(declare-fun result!2587 () Bool)

(assert (=> tb!1461 (= result!2587 tp_is_empty!2449)))

(assert (=> b!66778 t!4942))

(declare-fun b_and!4125 () Bool)

(assert (= b_and!4121 (and (=> t!4942 result!2587) b_and!4125)))

(declare-fun t!4944 () Bool)

(declare-fun tb!1463 () Bool)

(assert (=> (and b!66241 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 newMap!16)) t!4944) tb!1463))

(declare-fun result!2589 () Bool)

(assert (= result!2589 result!2587))

(assert (=> b!66778 t!4944))

(declare-fun b_and!4127 () Bool)

(assert (= b_and!4123 (and (=> t!4944 result!2589) b_and!4127)))

(declare-fun m!61431 () Bool)

(assert (=> b!66788 m!61431))

(assert (=> b!66788 m!61431))

(declare-fun m!61433 () Bool)

(assert (=> b!66788 m!61433))

(declare-fun m!61435 () Bool)

(assert (=> bm!5567 m!61435))

(declare-fun m!61437 () Bool)

(assert (=> b!66781 m!61437))

(assert (=> b!66793 m!61431))

(assert (=> b!66793 m!61431))

(declare-fun m!61439 () Bool)

(assert (=> b!66793 m!61439))

(declare-fun m!61441 () Bool)

(assert (=> bm!5565 m!61441))

(declare-fun m!61443 () Bool)

(assert (=> b!66787 m!61443))

(declare-fun m!61445 () Bool)

(assert (=> b!66790 m!61445))

(declare-fun m!61447 () Bool)

(assert (=> b!66790 m!61447))

(declare-fun m!61449 () Bool)

(assert (=> b!66790 m!61449))

(declare-fun m!61451 () Bool)

(assert (=> b!66790 m!61451))

(declare-fun m!61453 () Bool)

(assert (=> b!66790 m!61453))

(assert (=> b!66790 m!61449))

(declare-fun m!61455 () Bool)

(assert (=> b!66790 m!61455))

(declare-fun m!61457 () Bool)

(assert (=> b!66790 m!61457))

(declare-fun m!61459 () Bool)

(assert (=> b!66790 m!61459))

(declare-fun m!61461 () Bool)

(assert (=> b!66790 m!61461))

(assert (=> b!66790 m!61431))

(declare-fun m!61463 () Bool)

(assert (=> b!66790 m!61463))

(assert (=> b!66790 m!61459))

(declare-fun m!61465 () Bool)

(assert (=> b!66790 m!61465))

(declare-fun m!61467 () Bool)

(assert (=> b!66790 m!61467))

(assert (=> b!66790 m!61445))

(declare-fun m!61469 () Bool)

(assert (=> b!66790 m!61469))

(assert (=> b!66790 m!61465))

(declare-fun m!61471 () Bool)

(assert (=> b!66790 m!61471))

(declare-fun m!61473 () Bool)

(assert (=> b!66790 m!61473))

(declare-fun m!61475 () Bool)

(assert (=> b!66790 m!61475))

(assert (=> bm!5568 m!61453))

(assert (=> d!13841 m!61297))

(assert (=> b!66776 m!61431))

(assert (=> b!66776 m!61431))

(assert (=> b!66776 m!61433))

(declare-fun m!61477 () Bool)

(assert (=> b!66778 m!61477))

(declare-fun m!61479 () Bool)

(assert (=> b!66778 m!61479))

(assert (=> b!66778 m!61477))

(declare-fun m!61481 () Bool)

(assert (=> b!66778 m!61481))

(assert (=> b!66778 m!61479))

(assert (=> b!66778 m!61431))

(declare-fun m!61483 () Bool)

(assert (=> b!66778 m!61483))

(assert (=> b!66778 m!61431))

(declare-fun m!61485 () Bool)

(assert (=> b!66789 m!61485))

(declare-fun m!61487 () Bool)

(assert (=> bm!5569 m!61487))

(assert (=> b!66637 d!13841))

(declare-fun d!13843 () Bool)

(declare-fun e!43809 () Bool)

(assert (=> d!13843 e!43809))

(declare-fun res!36124 () Bool)

(assert (=> d!13843 (=> res!36124 e!43809)))

(declare-fun lt!28981 () Bool)

(assert (=> d!13843 (= res!36124 (not lt!28981))))

(declare-fun lt!28984 () Bool)

(assert (=> d!13843 (= lt!28981 lt!28984)))

(declare-fun lt!28983 () Unit!1824)

(declare-fun e!43810 () Unit!1824)

(assert (=> d!13843 (= lt!28983 e!43810)))

(declare-fun c!9236 () Bool)

(assert (=> d!13843 (= c!9236 lt!28984)))

(assert (=> d!13843 (= lt!28984 (containsKey!134 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))

(assert (=> d!13843 (= (contains!705 e!43717 (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))) lt!28981)))

(declare-fun b!66795 () Bool)

(declare-fun lt!28982 () Unit!1824)

(assert (=> b!66795 (= e!43810 lt!28982)))

(assert (=> b!66795 (= lt!28982 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))

(assert (=> b!66795 (isDefined!83 (getValueByKey!131 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))

(declare-fun b!66796 () Bool)

(declare-fun Unit!1844 () Unit!1824)

(assert (=> b!66796 (= e!43810 Unit!1844)))

(declare-fun b!66797 () Bool)

(assert (=> b!66797 (= e!43809 (isDefined!83 (getValueByKey!131 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))))))))

(assert (= (and d!13843 c!9236) b!66795))

(assert (= (and d!13843 (not c!9236)) b!66796))

(assert (= (and d!13843 (not res!36124)) b!66797))

(declare-fun m!61489 () Bool)

(assert (=> d!13843 m!61489))

(declare-fun m!61491 () Bool)

(assert (=> b!66795 m!61491))

(declare-fun m!61493 () Bool)

(assert (=> b!66795 m!61493))

(assert (=> b!66795 m!61493))

(declare-fun m!61495 () Bool)

(assert (=> b!66795 m!61495))

(assert (=> b!66797 m!61493))

(assert (=> b!66797 m!61493))

(assert (=> b!66797 m!61495))

(assert (=> bm!5532 d!13843))

(declare-fun d!13845 () Bool)

(declare-fun isEmpty!314 (List!1455) Bool)

(assert (=> d!13845 (= (isEmpty!313 lt!28707) (isEmpty!314 (toList!705 lt!28707)))))

(declare-fun bs!2876 () Bool)

(assert (= bs!2876 d!13845))

(declare-fun m!61497 () Bool)

(assert (=> bs!2876 m!61497))

(assert (=> b!66510 d!13845))

(declare-fun d!13847 () Bool)

(declare-fun lt!28985 () Bool)

(assert (=> d!13847 (= lt!28985 (select (content!72 (toList!705 lt!28691)) lt!28528))))

(declare-fun e!43812 () Bool)

(assert (=> d!13847 (= lt!28985 e!43812)))

(declare-fun res!36126 () Bool)

(assert (=> d!13847 (=> (not res!36126) (not e!43812))))

(assert (=> d!13847 (= res!36126 ((_ is Cons!1451) (toList!705 lt!28691)))))

(assert (=> d!13847 (= (contains!709 (toList!705 lt!28691) lt!28528) lt!28985)))

(declare-fun b!66798 () Bool)

(declare-fun e!43811 () Bool)

(assert (=> b!66798 (= e!43812 e!43811)))

(declare-fun res!36125 () Bool)

(assert (=> b!66798 (=> res!36125 e!43811)))

(assert (=> b!66798 (= res!36125 (= (h!2035 (toList!705 lt!28691)) lt!28528))))

(declare-fun b!66799 () Bool)

(assert (=> b!66799 (= e!43811 (contains!709 (t!4929 (toList!705 lt!28691)) lt!28528))))

(assert (= (and d!13847 res!36126) b!66798))

(assert (= (and b!66798 (not res!36125)) b!66799))

(declare-fun m!61499 () Bool)

(assert (=> d!13847 m!61499))

(declare-fun m!61501 () Bool)

(assert (=> d!13847 m!61501))

(declare-fun m!61503 () Bool)

(assert (=> b!66799 m!61503))

(assert (=> b!66479 d!13847))

(declare-fun d!13849 () Bool)

(assert (=> d!13849 (= (get!1125 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2477 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!66380 d!13849))

(assert (=> b!66453 d!13789))

(declare-fun b!66800 () Bool)

(declare-fun e!43814 () Bool)

(declare-fun call!5573 () Bool)

(assert (=> b!66800 (= e!43814 call!5573)))

(declare-fun b!66801 () Bool)

(declare-fun e!43815 () Bool)

(assert (=> b!66801 (= e!43815 e!43814)))

(declare-fun c!9237 () Bool)

(assert (=> b!66801 (= c!9237 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!43813 () Bool)

(declare-fun b!66802 () Bool)

(assert (=> b!66802 (= e!43813 (contains!708 (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!66803 () Bool)

(assert (=> b!66803 (= e!43814 call!5573)))

(declare-fun b!66804 () Bool)

(declare-fun e!43816 () Bool)

(assert (=> b!66804 (= e!43816 e!43815)))

(declare-fun res!36127 () Bool)

(assert (=> b!66804 (=> (not res!36127) (not e!43815))))

(assert (=> b!66804 (= res!36127 (not e!43813))))

(declare-fun res!36129 () Bool)

(assert (=> b!66804 (=> (not res!36129) (not e!43813))))

(assert (=> b!66804 (= res!36129 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!13851 () Bool)

(declare-fun res!36128 () Bool)

(assert (=> d!13851 (=> res!36128 e!43816)))

(assert (=> d!13851 (= res!36128 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!13851 (= (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)) e!43816)))

(declare-fun bm!5570 () Bool)

(assert (=> bm!5570 (= call!5573 (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9237 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451))))))

(assert (= (and d!13851 (not res!36128)) b!66804))

(assert (= (and b!66804 res!36129) b!66802))

(assert (= (and b!66804 res!36127) b!66801))

(assert (= (and b!66801 c!9237) b!66800))

(assert (= (and b!66801 (not c!9237)) b!66803))

(assert (= (or b!66800 b!66803) bm!5570))

(declare-fun m!61505 () Bool)

(assert (=> b!66801 m!61505))

(assert (=> b!66801 m!61505))

(declare-fun m!61507 () Bool)

(assert (=> b!66801 m!61507))

(assert (=> b!66802 m!61505))

(assert (=> b!66802 m!61505))

(declare-fun m!61509 () Bool)

(assert (=> b!66802 m!61509))

(assert (=> b!66804 m!61505))

(assert (=> b!66804 m!61505))

(assert (=> b!66804 m!61507))

(assert (=> bm!5570 m!61505))

(declare-fun m!61511 () Bool)

(assert (=> bm!5570 m!61511))

(assert (=> bm!5454 d!13851))

(declare-fun d!13853 () Bool)

(assert (=> d!13853 (= (apply!72 lt!28667 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1127 (getValueByKey!131 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2877 () Bool)

(assert (= bs!2877 d!13853))

(assert (=> bs!2877 m!61005))

(declare-fun m!61513 () Bool)

(assert (=> bs!2877 m!61513))

(assert (=> bs!2877 m!61513))

(declare-fun m!61515 () Bool)

(assert (=> bs!2877 m!61515))

(assert (=> b!66455 d!13853))

(declare-fun d!13855 () Bool)

(declare-fun c!9238 () Bool)

(assert (=> d!13855 (= c!9238 ((_ is ValueCellFull!881) (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!43817 () V!2913)

(assert (=> d!13855 (= (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!43817)))

(declare-fun b!66805 () Bool)

(assert (=> b!66805 (= e!43817 (get!1125 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!66806 () Bool)

(assert (=> b!66806 (= e!43817 (get!1126 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13855 c!9238) b!66805))

(assert (= (and d!13855 (not c!9238)) b!66806))

(assert (=> b!66805 m!61061))

(assert (=> b!66805 m!60879))

(declare-fun m!61517 () Bool)

(assert (=> b!66805 m!61517))

(assert (=> b!66806 m!61061))

(assert (=> b!66806 m!60879))

(declare-fun m!61519 () Bool)

(assert (=> b!66806 m!61519))

(assert (=> b!66455 d!13855))

(declare-fun d!13857 () Bool)

(assert (=> d!13857 (= (apply!72 lt!28707 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1127 (getValueByKey!131 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2878 () Bool)

(assert (= bs!2878 d!13857))

(assert (=> bs!2878 m!61005))

(declare-fun m!61521 () Bool)

(assert (=> bs!2878 m!61521))

(assert (=> bs!2878 m!61521))

(declare-fun m!61523 () Bool)

(assert (=> bs!2878 m!61523))

(assert (=> b!66512 d!13857))

(assert (=> b!66512 d!13855))

(declare-fun d!13859 () Bool)

(assert (=> d!13859 (= (map!1141 (_2!1051 lt!28794)) (getCurrentListMap!403 (_keys!3786 (_2!1051 lt!28794)) (_values!2129 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794)) (extraKeys!2017 (_2!1051 lt!28794)) (zeroValue!2054 (_2!1051 lt!28794)) (minValue!2054 (_2!1051 lt!28794)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28794))))))

(declare-fun bs!2879 () Bool)

(assert (= bs!2879 d!13859))

(declare-fun m!61525 () Bool)

(assert (=> bs!2879 m!61525))

(assert (=> bm!5539 d!13859))

(declare-fun d!13861 () Bool)

(declare-fun res!36134 () Bool)

(declare-fun e!43822 () Bool)

(assert (=> d!13861 (=> res!36134 e!43822)))

(assert (=> d!13861 (= res!36134 (and ((_ is Cons!1451) (toList!705 lt!28518)) (= (_1!1052 (h!2035 (toList!705 lt!28518))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!13861 (= (containsKey!134 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) e!43822)))

(declare-fun b!66811 () Bool)

(declare-fun e!43823 () Bool)

(assert (=> b!66811 (= e!43822 e!43823)))

(declare-fun res!36135 () Bool)

(assert (=> b!66811 (=> (not res!36135) (not e!43823))))

(assert (=> b!66811 (= res!36135 (and (or (not ((_ is Cons!1451) (toList!705 lt!28518))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28518))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))) ((_ is Cons!1451) (toList!705 lt!28518)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28518))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun b!66812 () Bool)

(assert (=> b!66812 (= e!43823 (containsKey!134 (t!4929 (toList!705 lt!28518)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!13861 (not res!36134)) b!66811))

(assert (= (and b!66811 res!36135) b!66812))

(assert (=> b!66812 m!60827))

(declare-fun m!61527 () Bool)

(assert (=> b!66812 m!61527))

(assert (=> d!13785 d!13861))

(declare-fun d!13863 () Bool)

(declare-fun e!43824 () Bool)

(assert (=> d!13863 e!43824))

(declare-fun res!36137 () Bool)

(assert (=> d!13863 (=> (not res!36137) (not e!43824))))

(declare-fun lt!28988 () ListLongMap!1379)

(assert (=> d!13863 (= res!36137 (contains!705 lt!28988 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun lt!28986 () List!1455)

(assert (=> d!13863 (= lt!28988 (ListLongMap!1380 lt!28986))))

(declare-fun lt!28987 () Unit!1824)

(declare-fun lt!28989 () Unit!1824)

(assert (=> d!13863 (= lt!28987 lt!28989)))

(assert (=> d!13863 (= (getValueByKey!131 lt!28986 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) (Some!136 (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!13863 (= lt!28989 (lemmaContainsTupThenGetReturnValue!48 lt!28986 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!13863 (= lt!28986 (insertStrictlySorted!51 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548)) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!13863 (= (+!86 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548) (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!28988)))

(declare-fun b!66813 () Bool)

(declare-fun res!36136 () Bool)

(assert (=> b!66813 (=> (not res!36136) (not e!43824))))

(assert (=> b!66813 (= res!36136 (= (getValueByKey!131 (toList!705 lt!28988) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) (Some!136 (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(declare-fun b!66814 () Bool)

(assert (=> b!66814 (= e!43824 (contains!709 (toList!705 lt!28988) (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (= (and d!13863 res!36137) b!66813))

(assert (= (and b!66813 res!36136) b!66814))

(declare-fun m!61529 () Bool)

(assert (=> d!13863 m!61529))

(declare-fun m!61531 () Bool)

(assert (=> d!13863 m!61531))

(declare-fun m!61533 () Bool)

(assert (=> d!13863 m!61533))

(declare-fun m!61535 () Bool)

(assert (=> d!13863 m!61535))

(declare-fun m!61537 () Bool)

(assert (=> b!66813 m!61537))

(declare-fun m!61539 () Bool)

(assert (=> b!66814 m!61539))

(assert (=> bm!5536 d!13863))

(declare-fun d!13865 () Bool)

(declare-fun e!43825 () Bool)

(assert (=> d!13865 e!43825))

(declare-fun res!36138 () Bool)

(assert (=> d!13865 (=> res!36138 e!43825)))

(declare-fun lt!28990 () Bool)

(assert (=> d!13865 (= res!36138 (not lt!28990))))

(declare-fun lt!28993 () Bool)

(assert (=> d!13865 (= lt!28990 lt!28993)))

(declare-fun lt!28992 () Unit!1824)

(declare-fun e!43826 () Unit!1824)

(assert (=> d!13865 (= lt!28992 e!43826)))

(declare-fun c!9239 () Bool)

(assert (=> d!13865 (= c!9239 lt!28993)))

(assert (=> d!13865 (= lt!28993 (containsKey!134 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13865 (= (contains!705 lt!28707 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28990)))

(declare-fun b!66815 () Bool)

(declare-fun lt!28991 () Unit!1824)

(assert (=> b!66815 (= e!43826 lt!28991)))

(assert (=> b!66815 (= lt!28991 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66815 (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66816 () Bool)

(declare-fun Unit!1845 () Unit!1824)

(assert (=> b!66816 (= e!43826 Unit!1845)))

(declare-fun b!66817 () Bool)

(assert (=> b!66817 (= e!43825 (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13865 c!9239) b!66815))

(assert (= (and d!13865 (not c!9239)) b!66816))

(assert (= (and d!13865 (not res!36138)) b!66817))

(declare-fun m!61541 () Bool)

(assert (=> d!13865 m!61541))

(declare-fun m!61543 () Bool)

(assert (=> b!66815 m!61543))

(declare-fun m!61545 () Bool)

(assert (=> b!66815 m!61545))

(assert (=> b!66815 m!61545))

(declare-fun m!61547 () Bool)

(assert (=> b!66815 m!61547))

(assert (=> b!66817 m!61545))

(assert (=> b!66817 m!61545))

(assert (=> b!66817 m!61547))

(assert (=> d!13769 d!13865))

(assert (=> d!13769 d!13777))

(declare-fun b!66818 () Bool)

(declare-fun res!36147 () Bool)

(declare-fun e!43830 () Bool)

(assert (=> b!66818 (=> (not res!36147) (not e!43830))))

(declare-fun e!43835 () Bool)

(assert (=> b!66818 (= res!36147 e!43835)))

(declare-fun c!9245 () Bool)

(assert (=> b!66818 (= c!9245 (not (= (bvand (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!66819 () Bool)

(declare-fun call!5578 () Bool)

(assert (=> b!66819 (= e!43835 (not call!5578))))

(declare-fun b!66820 () Bool)

(declare-fun e!43831 () Bool)

(assert (=> b!66820 (= e!43831 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66821 () Bool)

(declare-fun e!43833 () Bool)

(assert (=> b!66821 (= e!43835 e!43833)))

(declare-fun res!36141 () Bool)

(assert (=> b!66821 (= res!36141 call!5578)))

(assert (=> b!66821 (=> (not res!36141) (not e!43833))))

(declare-fun lt!29006 () ListLongMap!1379)

(declare-fun b!66822 () Bool)

(declare-fun e!43832 () Bool)

(assert (=> b!66822 (= e!43832 (= (apply!72 lt!29006 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66822 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))))))))

(assert (=> b!66822 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun d!13867 () Bool)

(assert (=> d!13867 e!43830))

(declare-fun res!36142 () Bool)

(assert (=> d!13867 (=> (not res!36142) (not e!43830))))

(assert (=> d!13867 (= res!36142 (or (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun lt!29014 () ListLongMap!1379)

(assert (=> d!13867 (= lt!29006 lt!29014)))

(declare-fun lt!29011 () Unit!1824)

(declare-fun e!43829 () Unit!1824)

(assert (=> d!13867 (= lt!29011 e!43829)))

(declare-fun c!9243 () Bool)

(declare-fun e!43827 () Bool)

(assert (=> d!13867 (= c!9243 e!43827)))

(declare-fun res!36146 () Bool)

(assert (=> d!13867 (=> (not res!36146) (not e!43827))))

(assert (=> d!13867 (= res!36146 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun e!43834 () ListLongMap!1379)

(assert (=> d!13867 (= lt!29014 e!43834)))

(declare-fun c!9240 () Bool)

(assert (=> d!13867 (= c!9240 (and (not (= (bvand (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13867 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13867 (= (getCurrentListMap!403 (_keys!3786 newMap!16) (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) (mask!6081 newMap!16) (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29006)))

(declare-fun b!66823 () Bool)

(declare-fun e!43837 () Bool)

(declare-fun e!43839 () Bool)

(assert (=> b!66823 (= e!43837 e!43839)))

(declare-fun res!36144 () Bool)

(declare-fun call!5575 () Bool)

(assert (=> b!66823 (= res!36144 call!5575)))

(assert (=> b!66823 (=> (not res!36144) (not e!43839))))

(declare-fun b!66824 () Bool)

(assert (=> b!66824 (= e!43837 (not call!5575))))

(declare-fun b!66825 () Bool)

(assert (=> b!66825 (= e!43833 (= (apply!72 lt!29006 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))))

(declare-fun bm!5571 () Bool)

(declare-fun call!5577 () ListLongMap!1379)

(declare-fun call!5580 () ListLongMap!1379)

(assert (=> bm!5571 (= call!5577 call!5580)))

(declare-fun b!66826 () Bool)

(declare-fun Unit!1846 () Unit!1824)

(assert (=> b!66826 (= e!43829 Unit!1846)))

(declare-fun b!66827 () Bool)

(declare-fun e!43828 () ListLongMap!1379)

(assert (=> b!66827 (= e!43828 call!5577)))

(declare-fun bm!5572 () Bool)

(declare-fun call!5576 () ListLongMap!1379)

(assert (=> bm!5572 (= call!5580 call!5576)))

(declare-fun c!9242 () Bool)

(declare-fun bm!5573 () Bool)

(declare-fun call!5574 () ListLongMap!1379)

(assert (=> bm!5573 (= call!5574 (+!86 (ite c!9240 call!5576 (ite c!9242 call!5580 call!5577)) (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!66828 () Bool)

(declare-fun e!43838 () ListLongMap!1379)

(declare-fun call!5579 () ListLongMap!1379)

(assert (=> b!66828 (= e!43838 call!5579)))

(declare-fun bm!5574 () Bool)

(assert (=> bm!5574 (= call!5579 call!5574)))

(declare-fun bm!5575 () Bool)

(assert (=> bm!5575 (= call!5575 (contains!705 lt!29006 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66829 () Bool)

(declare-fun res!36145 () Bool)

(assert (=> b!66829 (=> (not res!36145) (not e!43830))))

(declare-fun e!43836 () Bool)

(assert (=> b!66829 (= res!36145 e!43836)))

(declare-fun res!36140 () Bool)

(assert (=> b!66829 (=> res!36140 e!43836)))

(assert (=> b!66829 (= res!36140 (not e!43831))))

(declare-fun res!36143 () Bool)

(assert (=> b!66829 (=> (not res!36143) (not e!43831))))

(assert (=> b!66829 (= res!36143 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!66830 () Bool)

(assert (=> b!66830 (= e!43830 e!43837)))

(declare-fun c!9244 () Bool)

(assert (=> b!66830 (= c!9244 (not (= (bvand (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66831 () Bool)

(assert (=> b!66831 (= e!43834 (+!86 call!5574 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun b!66832 () Bool)

(assert (=> b!66832 (= e!43827 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66833 () Bool)

(assert (=> b!66833 (= e!43839 (= (apply!72 lt!29006 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun b!66834 () Bool)

(declare-fun lt!29003 () Unit!1824)

(assert (=> b!66834 (= e!43829 lt!29003)))

(declare-fun lt!29005 () ListLongMap!1379)

(assert (=> b!66834 (= lt!29005 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) (mask!6081 newMap!16) (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29010 () (_ BitVec 64))

(assert (=> b!66834 (= lt!29010 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29008 () (_ BitVec 64))

(assert (=> b!66834 (= lt!29008 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29015 () Unit!1824)

(assert (=> b!66834 (= lt!29015 (addStillContains!48 lt!29005 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) lt!29008))))

(assert (=> b!66834 (contains!705 (+!86 lt!29005 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) lt!29008)))

(declare-fun lt!29009 () Unit!1824)

(assert (=> b!66834 (= lt!29009 lt!29015)))

(declare-fun lt!29000 () ListLongMap!1379)

(assert (=> b!66834 (= lt!29000 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) (mask!6081 newMap!16) (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29012 () (_ BitVec 64))

(assert (=> b!66834 (= lt!29012 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29004 () (_ BitVec 64))

(assert (=> b!66834 (= lt!29004 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28994 () Unit!1824)

(assert (=> b!66834 (= lt!28994 (addApplyDifferent!48 lt!29000 lt!29012 (minValue!2054 newMap!16) lt!29004))))

(assert (=> b!66834 (= (apply!72 (+!86 lt!29000 (tuple2!2083 lt!29012 (minValue!2054 newMap!16))) lt!29004) (apply!72 lt!29000 lt!29004))))

(declare-fun lt!28996 () Unit!1824)

(assert (=> b!66834 (= lt!28996 lt!28994)))

(declare-fun lt!29013 () ListLongMap!1379)

(assert (=> b!66834 (= lt!29013 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) (mask!6081 newMap!16) (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!28998 () (_ BitVec 64))

(assert (=> b!66834 (= lt!28998 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28999 () (_ BitVec 64))

(assert (=> b!66834 (= lt!28999 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!28997 () Unit!1824)

(assert (=> b!66834 (= lt!28997 (addApplyDifferent!48 lt!29013 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) lt!28999))))

(assert (=> b!66834 (= (apply!72 (+!86 lt!29013 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) lt!28999) (apply!72 lt!29013 lt!28999))))

(declare-fun lt!29007 () Unit!1824)

(assert (=> b!66834 (= lt!29007 lt!28997)))

(declare-fun lt!29002 () ListLongMap!1379)

(assert (=> b!66834 (= lt!29002 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) (mask!6081 newMap!16) (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29001 () (_ BitVec 64))

(assert (=> b!66834 (= lt!29001 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!28995 () (_ BitVec 64))

(assert (=> b!66834 (= lt!28995 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66834 (= lt!29003 (addApplyDifferent!48 lt!29002 lt!29001 (minValue!2054 newMap!16) lt!28995))))

(assert (=> b!66834 (= (apply!72 (+!86 lt!29002 (tuple2!2083 lt!29001 (minValue!2054 newMap!16))) lt!28995) (apply!72 lt!29002 lt!28995))))

(declare-fun c!9241 () Bool)

(declare-fun b!66835 () Bool)

(assert (=> b!66835 (= c!9241 (and (not (= (bvand (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!66835 (= e!43838 e!43828)))

(declare-fun b!66836 () Bool)

(assert (=> b!66836 (= e!43834 e!43838)))

(assert (=> b!66836 (= c!9242 (and (not (= (bvand (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66837 () Bool)

(assert (=> b!66837 (= e!43836 e!43832)))

(declare-fun res!36139 () Bool)

(assert (=> b!66837 (=> (not res!36139) (not e!43832))))

(assert (=> b!66837 (= res!36139 (contains!705 lt!29006 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66837 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!66838 () Bool)

(assert (=> b!66838 (= e!43828 call!5579)))

(declare-fun bm!5576 () Bool)

(assert (=> bm!5576 (= call!5576 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) (mask!6081 newMap!16) (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5577 () Bool)

(assert (=> bm!5577 (= call!5578 (contains!705 lt!29006 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13867 c!9240) b!66831))

(assert (= (and d!13867 (not c!9240)) b!66836))

(assert (= (and b!66836 c!9242) b!66828))

(assert (= (and b!66836 (not c!9242)) b!66835))

(assert (= (and b!66835 c!9241) b!66838))

(assert (= (and b!66835 (not c!9241)) b!66827))

(assert (= (or b!66838 b!66827) bm!5571))

(assert (= (or b!66828 bm!5571) bm!5572))

(assert (= (or b!66828 b!66838) bm!5574))

(assert (= (or b!66831 bm!5572) bm!5576))

(assert (= (or b!66831 bm!5574) bm!5573))

(assert (= (and d!13867 res!36146) b!66832))

(assert (= (and d!13867 c!9243) b!66834))

(assert (= (and d!13867 (not c!9243)) b!66826))

(assert (= (and d!13867 res!36142) b!66829))

(assert (= (and b!66829 res!36143) b!66820))

(assert (= (and b!66829 (not res!36140)) b!66837))

(assert (= (and b!66837 res!36139) b!66822))

(assert (= (and b!66829 res!36145) b!66818))

(assert (= (and b!66818 c!9245) b!66821))

(assert (= (and b!66818 (not c!9245)) b!66819))

(assert (= (and b!66821 res!36141) b!66825))

(assert (= (or b!66821 b!66819) bm!5577))

(assert (= (and b!66818 res!36147) b!66830))

(assert (= (and b!66830 c!9244) b!66823))

(assert (= (and b!66830 (not c!9244)) b!66824))

(assert (= (and b!66823 res!36144) b!66833))

(assert (= (or b!66823 b!66824) bm!5575))

(declare-fun b_lambda!2993 () Bool)

(assert (=> (not b_lambda!2993) (not b!66822)))

(assert (=> b!66822 t!4942))

(declare-fun b_and!4129 () Bool)

(assert (= b_and!4125 (and (=> t!4942 result!2587) b_and!4129)))

(assert (=> b!66822 t!4944))

(declare-fun b_and!4131 () Bool)

(assert (= b_and!4127 (and (=> t!4944 result!2589) b_and!4131)))

(assert (=> b!66832 m!61431))

(assert (=> b!66832 m!61431))

(assert (=> b!66832 m!61433))

(declare-fun m!61549 () Bool)

(assert (=> bm!5575 m!61549))

(declare-fun m!61551 () Bool)

(assert (=> b!66825 m!61551))

(assert (=> b!66837 m!61431))

(assert (=> b!66837 m!61431))

(declare-fun m!61553 () Bool)

(assert (=> b!66837 m!61553))

(declare-fun m!61555 () Bool)

(assert (=> bm!5573 m!61555))

(declare-fun m!61557 () Bool)

(assert (=> b!66831 m!61557))

(declare-fun m!61559 () Bool)

(assert (=> b!66834 m!61559))

(declare-fun m!61561 () Bool)

(assert (=> b!66834 m!61561))

(declare-fun m!61563 () Bool)

(assert (=> b!66834 m!61563))

(declare-fun m!61565 () Bool)

(assert (=> b!66834 m!61565))

(declare-fun m!61567 () Bool)

(assert (=> b!66834 m!61567))

(assert (=> b!66834 m!61563))

(declare-fun m!61569 () Bool)

(assert (=> b!66834 m!61569))

(declare-fun m!61571 () Bool)

(assert (=> b!66834 m!61571))

(declare-fun m!61573 () Bool)

(assert (=> b!66834 m!61573))

(declare-fun m!61575 () Bool)

(assert (=> b!66834 m!61575))

(assert (=> b!66834 m!61431))

(declare-fun m!61577 () Bool)

(assert (=> b!66834 m!61577))

(assert (=> b!66834 m!61573))

(declare-fun m!61579 () Bool)

(assert (=> b!66834 m!61579))

(declare-fun m!61581 () Bool)

(assert (=> b!66834 m!61581))

(assert (=> b!66834 m!61559))

(declare-fun m!61583 () Bool)

(assert (=> b!66834 m!61583))

(assert (=> b!66834 m!61579))

(declare-fun m!61585 () Bool)

(assert (=> b!66834 m!61585))

(declare-fun m!61587 () Bool)

(assert (=> b!66834 m!61587))

(declare-fun m!61589 () Bool)

(assert (=> b!66834 m!61589))

(assert (=> bm!5576 m!61567))

(assert (=> d!13867 m!61297))

(assert (=> b!66820 m!61431))

(assert (=> b!66820 m!61431))

(assert (=> b!66820 m!61433))

(assert (=> b!66822 m!61477))

(declare-fun m!61591 () Bool)

(assert (=> b!66822 m!61591))

(assert (=> b!66822 m!61477))

(declare-fun m!61593 () Bool)

(assert (=> b!66822 m!61593))

(assert (=> b!66822 m!61591))

(assert (=> b!66822 m!61431))

(declare-fun m!61595 () Bool)

(assert (=> b!66822 m!61595))

(assert (=> b!66822 m!61431))

(declare-fun m!61597 () Bool)

(assert (=> b!66833 m!61597))

(declare-fun m!61599 () Bool)

(assert (=> bm!5577 m!61599))

(assert (=> bm!5545 d!13867))

(declare-fun b!66855 () Bool)

(declare-fun e!43849 () Bool)

(declare-fun lt!29021 () SeekEntryResult!227)

(assert (=> b!66855 (= e!43849 ((_ is Undefined!227) lt!29021))))

(declare-fun b!66856 () Bool)

(declare-fun e!43848 () Bool)

(assert (=> b!66856 (= e!43848 e!43849)))

(declare-fun c!9251 () Bool)

(assert (=> b!66856 (= c!9251 ((_ is MissingVacant!227) lt!29021))))

(declare-fun d!13869 () Bool)

(assert (=> d!13869 e!43848))

(declare-fun c!9250 () Bool)

(assert (=> d!13869 (= c!9250 ((_ is MissingZero!227) lt!29021))))

(assert (=> d!13869 (= lt!29021 (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(declare-fun lt!29020 () Unit!1824)

(declare-fun choose!378 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) Int) Unit!1824)

(assert (=> d!13869 (= lt!29020 (choose!378 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13869 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13869 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)) lt!29020)))

(declare-fun b!66857 () Bool)

(declare-fun e!43851 () Bool)

(assert (=> b!66857 (= e!43848 e!43851)))

(declare-fun res!36157 () Bool)

(declare-fun call!5585 () Bool)

(assert (=> b!66857 (= res!36157 call!5585)))

(assert (=> b!66857 (=> (not res!36157) (not e!43851))))

(declare-fun bm!5582 () Bool)

(assert (=> bm!5582 (= call!5585 (inRange!0 (ite c!9250 (index!3036 lt!29021) (index!3039 lt!29021)) (mask!6081 newMap!16)))))

(declare-fun b!66858 () Bool)

(assert (=> b!66858 (and (bvsge (index!3036 lt!29021) #b00000000000000000000000000000000) (bvslt (index!3036 lt!29021) (size!2061 (_keys!3786 newMap!16))))))

(declare-fun res!36156 () Bool)

(assert (=> b!66858 (= res!36156 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3036 lt!29021)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66858 (=> (not res!36156) (not e!43851))))

(declare-fun b!66859 () Bool)

(declare-fun call!5586 () Bool)

(assert (=> b!66859 (= e!43851 (not call!5586))))

(declare-fun b!66860 () Bool)

(declare-fun res!36158 () Bool)

(declare-fun e!43850 () Bool)

(assert (=> b!66860 (=> (not res!36158) (not e!43850))))

(assert (=> b!66860 (= res!36158 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3039 lt!29021)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66860 (and (bvsge (index!3039 lt!29021) #b00000000000000000000000000000000) (bvslt (index!3039 lt!29021) (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!66861 () Bool)

(assert (=> b!66861 (= e!43850 (not call!5586))))

(declare-fun b!66862 () Bool)

(declare-fun res!36159 () Bool)

(assert (=> b!66862 (=> (not res!36159) (not e!43850))))

(assert (=> b!66862 (= res!36159 call!5585)))

(assert (=> b!66862 (= e!43849 e!43850)))

(declare-fun bm!5583 () Bool)

(assert (=> bm!5583 (= call!5586 (arrayContainsKey!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!13869 c!9250) b!66857))

(assert (= (and d!13869 (not c!9250)) b!66856))

(assert (= (and b!66857 res!36157) b!66858))

(assert (= (and b!66858 res!36156) b!66859))

(assert (= (and b!66856 c!9251) b!66862))

(assert (= (and b!66856 (not c!9251)) b!66855))

(assert (= (and b!66862 res!36159) b!66860))

(assert (= (and b!66860 res!36158) b!66861))

(assert (= (or b!66857 b!66862) bm!5582))

(assert (= (or b!66859 b!66861) bm!5583))

(assert (=> d!13869 m!60827))

(assert (=> d!13869 m!61181))

(assert (=> d!13869 m!60827))

(declare-fun m!61601 () Bool)

(assert (=> d!13869 m!61601))

(assert (=> d!13869 m!61297))

(declare-fun m!61603 () Bool)

(assert (=> bm!5582 m!61603))

(declare-fun m!61605 () Bool)

(assert (=> b!66860 m!61605))

(declare-fun m!61607 () Bool)

(assert (=> b!66858 m!61607))

(assert (=> bm!5583 m!60827))

(assert (=> bm!5583 m!61207))

(assert (=> bm!5546 d!13869))

(declare-fun d!13871 () Bool)

(assert (=> d!13871 (isDefined!83 (getValueByKey!131 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun lt!29024 () Unit!1824)

(declare-fun choose!379 (List!1455 (_ BitVec 64)) Unit!1824)

(assert (=> d!13871 (= lt!29024 (choose!379 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!43854 () Bool)

(assert (=> d!13871 e!43854))

(declare-fun res!36162 () Bool)

(assert (=> d!13871 (=> (not res!36162) (not e!43854))))

(declare-fun isStrictlySorted!276 (List!1455) Bool)

(assert (=> d!13871 (= res!36162 (isStrictlySorted!276 (toList!705 lt!28518)))))

(assert (=> d!13871 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29024)))

(declare-fun b!66865 () Bool)

(assert (=> b!66865 (= e!43854 (containsKey!134 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!13871 res!36162) b!66865))

(assert (=> d!13871 m!60827))

(assert (=> d!13871 m!61161))

(assert (=> d!13871 m!61161))

(assert (=> d!13871 m!61163))

(assert (=> d!13871 m!60827))

(declare-fun m!61609 () Bool)

(assert (=> d!13871 m!61609))

(declare-fun m!61611 () Bool)

(assert (=> d!13871 m!61611))

(assert (=> b!66865 m!60827))

(assert (=> b!66865 m!61157))

(assert (=> b!66535 d!13871))

(declare-fun d!13873 () Bool)

(declare-fun isEmpty!315 (Option!137) Bool)

(assert (=> d!13873 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(declare-fun bs!2880 () Bool)

(assert (= bs!2880 d!13873))

(assert (=> bs!2880 m!61161))

(declare-fun m!61613 () Bool)

(assert (=> bs!2880 m!61613))

(assert (=> b!66535 d!13873))

(declare-fun b!66876 () Bool)

(declare-fun e!43860 () Option!137)

(assert (=> b!66876 (= e!43860 (getValueByKey!131 (t!4929 (toList!705 lt!28518)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66874 () Bool)

(declare-fun e!43859 () Option!137)

(assert (=> b!66874 (= e!43859 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28518)))))))

(declare-fun c!9256 () Bool)

(declare-fun d!13875 () Bool)

(assert (=> d!13875 (= c!9256 (and ((_ is Cons!1451) (toList!705 lt!28518)) (= (_1!1052 (h!2035 (toList!705 lt!28518))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!13875 (= (getValueByKey!131 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) e!43859)))

(declare-fun b!66877 () Bool)

(assert (=> b!66877 (= e!43860 None!135)))

(declare-fun b!66875 () Bool)

(assert (=> b!66875 (= e!43859 e!43860)))

(declare-fun c!9257 () Bool)

(assert (=> b!66875 (= c!9257 (and ((_ is Cons!1451) (toList!705 lt!28518)) (not (= (_1!1052 (h!2035 (toList!705 lt!28518))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(assert (= (and d!13875 c!9256) b!66874))

(assert (= (and d!13875 (not c!9256)) b!66875))

(assert (= (and b!66875 c!9257) b!66876))

(assert (= (and b!66875 (not c!9257)) b!66877))

(assert (=> b!66876 m!60827))

(declare-fun m!61615 () Bool)

(assert (=> b!66876 m!61615))

(assert (=> b!66535 d!13875))

(assert (=> b!66537 d!13873))

(assert (=> b!66537 d!13875))

(declare-fun d!13877 () Bool)

(declare-fun lt!29027 () Bool)

(declare-fun content!73 (List!1454) (InoxSet (_ BitVec 64)))

(assert (=> d!13877 (= lt!29027 (select (content!73 Nil!1451) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!43865 () Bool)

(assert (=> d!13877 (= lt!29027 e!43865)))

(declare-fun res!36167 () Bool)

(assert (=> d!13877 (=> (not res!36167) (not e!43865))))

(assert (=> d!13877 (= res!36167 ((_ is Cons!1450) Nil!1451))))

(assert (=> d!13877 (= (contains!708 Nil!1451 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29027)))

(declare-fun b!66882 () Bool)

(declare-fun e!43866 () Bool)

(assert (=> b!66882 (= e!43865 e!43866)))

(declare-fun res!36168 () Bool)

(assert (=> b!66882 (=> res!36168 e!43866)))

(assert (=> b!66882 (= res!36168 (= (h!2034 Nil!1451) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!66883 () Bool)

(assert (=> b!66883 (= e!43866 (contains!708 (t!4928 Nil!1451) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!13877 res!36167) b!66882))

(assert (= (and b!66882 (not res!36168)) b!66883))

(declare-fun m!61617 () Bool)

(assert (=> d!13877 m!61617))

(assert (=> d!13877 m!60827))

(declare-fun m!61619 () Bool)

(assert (=> d!13877 m!61619))

(assert (=> b!66883 m!60827))

(declare-fun m!61621 () Bool)

(assert (=> b!66883 m!61621))

(assert (=> b!66406 d!13877))

(declare-fun d!13879 () Bool)

(declare-fun e!43867 () Bool)

(assert (=> d!13879 e!43867))

(declare-fun res!36170 () Bool)

(assert (=> d!13879 (=> (not res!36170) (not e!43867))))

(declare-fun lt!29030 () ListLongMap!1379)

(assert (=> d!13879 (= res!36170 (contains!705 lt!29030 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29028 () List!1455)

(assert (=> d!13879 (= lt!29030 (ListLongMap!1380 lt!29028))))

(declare-fun lt!29029 () Unit!1824)

(declare-fun lt!29031 () Unit!1824)

(assert (=> d!13879 (= lt!29029 lt!29031)))

(assert (=> d!13879 (= (getValueByKey!131 lt!29028 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13879 (= lt!29031 (lemmaContainsTupThenGetReturnValue!48 lt!29028 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13879 (= lt!29028 (insertStrictlySorted!51 (toList!705 call!5472) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13879 (= (+!86 call!5472 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!29030)))

(declare-fun b!66884 () Bool)

(declare-fun res!36169 () Bool)

(assert (=> b!66884 (=> (not res!36169) (not e!43867))))

(assert (=> b!66884 (= res!36169 (= (getValueByKey!131 (toList!705 lt!29030) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66885 () Bool)

(assert (=> b!66885 (= e!43867 (contains!709 (toList!705 lt!29030) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13879 res!36170) b!66884))

(assert (= (and b!66884 res!36169) b!66885))

(declare-fun m!61623 () Bool)

(assert (=> d!13879 m!61623))

(declare-fun m!61625 () Bool)

(assert (=> d!13879 m!61625))

(declare-fun m!61627 () Bool)

(assert (=> d!13879 m!61627))

(declare-fun m!61629 () Bool)

(assert (=> d!13879 m!61629))

(declare-fun m!61631 () Bool)

(assert (=> b!66884 m!61631))

(declare-fun m!61633 () Bool)

(assert (=> b!66885 m!61633))

(assert (=> b!66464 d!13879))

(assert (=> d!13759 d!13777))

(declare-fun b!66888 () Bool)

(declare-fun e!43869 () Option!137)

(assert (=> b!66888 (= e!43869 (getValueByKey!131 (t!4929 (toList!705 lt!28687)) (_1!1052 lt!28520)))))

(declare-fun b!66886 () Bool)

(declare-fun e!43868 () Option!137)

(assert (=> b!66886 (= e!43868 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28687)))))))

(declare-fun d!13881 () Bool)

(declare-fun c!9258 () Bool)

(assert (=> d!13881 (= c!9258 (and ((_ is Cons!1451) (toList!705 lt!28687)) (= (_1!1052 (h!2035 (toList!705 lt!28687))) (_1!1052 lt!28520))))))

(assert (=> d!13881 (= (getValueByKey!131 (toList!705 lt!28687) (_1!1052 lt!28520)) e!43868)))

(declare-fun b!66889 () Bool)

(assert (=> b!66889 (= e!43869 None!135)))

(declare-fun b!66887 () Bool)

(assert (=> b!66887 (= e!43868 e!43869)))

(declare-fun c!9259 () Bool)

(assert (=> b!66887 (= c!9259 (and ((_ is Cons!1451) (toList!705 lt!28687)) (not (= (_1!1052 (h!2035 (toList!705 lt!28687))) (_1!1052 lt!28520)))))))

(assert (= (and d!13881 c!9258) b!66886))

(assert (= (and d!13881 (not c!9258)) b!66887))

(assert (= (and b!66887 c!9259) b!66888))

(assert (= (and b!66887 (not c!9259)) b!66889))

(declare-fun m!61635 () Bool)

(assert (=> b!66888 m!61635))

(assert (=> b!66476 d!13881))

(assert (=> b!66507 d!13789))

(declare-fun d!13883 () Bool)

(assert (=> d!13883 (= (apply!72 lt!28667 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2881 () Bool)

(assert (= bs!2881 d!13883))

(declare-fun m!61637 () Bool)

(assert (=> bs!2881 m!61637))

(assert (=> bs!2881 m!61637))

(declare-fun m!61639 () Bool)

(assert (=> bs!2881 m!61639))

(assert (=> b!66466 d!13883))

(declare-fun b!66890 () Bool)

(declare-fun res!36179 () Bool)

(declare-fun e!43873 () Bool)

(assert (=> b!66890 (=> (not res!36179) (not e!43873))))

(declare-fun e!43878 () Bool)

(assert (=> b!66890 (= res!36179 e!43878)))

(declare-fun c!9265 () Bool)

(assert (=> b!66890 (= c!9265 (not (= (bvand (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!66891 () Bool)

(declare-fun call!5591 () Bool)

(assert (=> b!66891 (= e!43878 (not call!5591))))

(declare-fun b!66892 () Bool)

(declare-fun e!43874 () Bool)

(assert (=> b!66892 (= e!43874 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66893 () Bool)

(declare-fun e!43876 () Bool)

(assert (=> b!66893 (= e!43878 e!43876)))

(declare-fun res!36173 () Bool)

(assert (=> b!66893 (= res!36173 call!5591)))

(assert (=> b!66893 (=> (not res!36173) (not e!43876))))

(declare-fun b!66894 () Bool)

(declare-fun e!43875 () Bool)

(declare-fun lt!29044 () ListLongMap!1379)

(assert (=> b!66894 (= e!43875 (= (apply!72 lt!29044 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66894 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (_values!2129 newMap!16))))))

(assert (=> b!66894 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun d!13885 () Bool)

(assert (=> d!13885 e!43873))

(declare-fun res!36174 () Bool)

(assert (=> d!13885 (=> (not res!36174) (not e!43873))))

(assert (=> d!13885 (= res!36174 (or (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun lt!29052 () ListLongMap!1379)

(assert (=> d!13885 (= lt!29044 lt!29052)))

(declare-fun lt!29049 () Unit!1824)

(declare-fun e!43872 () Unit!1824)

(assert (=> d!13885 (= lt!29049 e!43872)))

(declare-fun c!9263 () Bool)

(declare-fun e!43870 () Bool)

(assert (=> d!13885 (= c!9263 e!43870)))

(declare-fun res!36178 () Bool)

(assert (=> d!13885 (=> (not res!36178) (not e!43870))))

(assert (=> d!13885 (= res!36178 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun e!43877 () ListLongMap!1379)

(assert (=> d!13885 (= lt!29052 e!43877)))

(declare-fun c!9260 () Bool)

(assert (=> d!13885 (= c!9260 (and (not (= (bvand (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13885 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13885 (= (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) (zeroValue!2054 newMap!16) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29044)))

(declare-fun b!66895 () Bool)

(declare-fun e!43880 () Bool)

(declare-fun e!43882 () Bool)

(assert (=> b!66895 (= e!43880 e!43882)))

(declare-fun res!36176 () Bool)

(declare-fun call!5588 () Bool)

(assert (=> b!66895 (= res!36176 call!5588)))

(assert (=> b!66895 (=> (not res!36176) (not e!43882))))

(declare-fun b!66896 () Bool)

(assert (=> b!66896 (= e!43880 (not call!5588))))

(declare-fun b!66897 () Bool)

(assert (=> b!66897 (= e!43876 (= (apply!72 lt!29044 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun bm!5584 () Bool)

(declare-fun call!5590 () ListLongMap!1379)

(declare-fun call!5593 () ListLongMap!1379)

(assert (=> bm!5584 (= call!5590 call!5593)))

(declare-fun b!66898 () Bool)

(declare-fun Unit!1847 () Unit!1824)

(assert (=> b!66898 (= e!43872 Unit!1847)))

(declare-fun b!66899 () Bool)

(declare-fun e!43871 () ListLongMap!1379)

(assert (=> b!66899 (= e!43871 call!5590)))

(declare-fun bm!5585 () Bool)

(declare-fun call!5589 () ListLongMap!1379)

(assert (=> bm!5585 (= call!5593 call!5589)))

(declare-fun c!9262 () Bool)

(declare-fun call!5587 () ListLongMap!1379)

(declare-fun bm!5586 () Bool)

(assert (=> bm!5586 (= call!5587 (+!86 (ite c!9260 call!5589 (ite c!9262 call!5593 call!5590)) (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(declare-fun b!66900 () Bool)

(declare-fun e!43881 () ListLongMap!1379)

(declare-fun call!5592 () ListLongMap!1379)

(assert (=> b!66900 (= e!43881 call!5592)))

(declare-fun bm!5587 () Bool)

(assert (=> bm!5587 (= call!5592 call!5587)))

(declare-fun bm!5588 () Bool)

(assert (=> bm!5588 (= call!5588 (contains!705 lt!29044 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66901 () Bool)

(declare-fun res!36177 () Bool)

(assert (=> b!66901 (=> (not res!36177) (not e!43873))))

(declare-fun e!43879 () Bool)

(assert (=> b!66901 (= res!36177 e!43879)))

(declare-fun res!36172 () Bool)

(assert (=> b!66901 (=> res!36172 e!43879)))

(assert (=> b!66901 (= res!36172 (not e!43874))))

(declare-fun res!36175 () Bool)

(assert (=> b!66901 (=> (not res!36175) (not e!43874))))

(assert (=> b!66901 (= res!36175 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!66902 () Bool)

(assert (=> b!66902 (= e!43873 e!43880)))

(declare-fun c!9264 () Bool)

(assert (=> b!66902 (= c!9264 (not (= (bvand (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66903 () Bool)

(assert (=> b!66903 (= e!43877 (+!86 call!5587 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))

(declare-fun b!66904 () Bool)

(assert (=> b!66904 (= e!43870 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66905 () Bool)

(assert (=> b!66905 (= e!43882 (= (apply!72 lt!29044 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))

(declare-fun b!66906 () Bool)

(declare-fun lt!29041 () Unit!1824)

(assert (=> b!66906 (= e!43872 lt!29041)))

(declare-fun lt!29043 () ListLongMap!1379)

(assert (=> b!66906 (= lt!29043 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) (zeroValue!2054 newMap!16) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29048 () (_ BitVec 64))

(assert (=> b!66906 (= lt!29048 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29046 () (_ BitVec 64))

(assert (=> b!66906 (= lt!29046 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29053 () Unit!1824)

(assert (=> b!66906 (= lt!29053 (addStillContains!48 lt!29043 lt!29048 (zeroValue!2054 newMap!16) lt!29046))))

(assert (=> b!66906 (contains!705 (+!86 lt!29043 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16))) lt!29046)))

(declare-fun lt!29047 () Unit!1824)

(assert (=> b!66906 (= lt!29047 lt!29053)))

(declare-fun lt!29038 () ListLongMap!1379)

(assert (=> b!66906 (= lt!29038 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) (zeroValue!2054 newMap!16) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29050 () (_ BitVec 64))

(assert (=> b!66906 (= lt!29050 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29042 () (_ BitVec 64))

(assert (=> b!66906 (= lt!29042 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29032 () Unit!1824)

(assert (=> b!66906 (= lt!29032 (addApplyDifferent!48 lt!29038 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) lt!29042))))

(assert (=> b!66906 (= (apply!72 (+!86 lt!29038 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) lt!29042) (apply!72 lt!29038 lt!29042))))

(declare-fun lt!29034 () Unit!1824)

(assert (=> b!66906 (= lt!29034 lt!29032)))

(declare-fun lt!29051 () ListLongMap!1379)

(assert (=> b!66906 (= lt!29051 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) (zeroValue!2054 newMap!16) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29036 () (_ BitVec 64))

(assert (=> b!66906 (= lt!29036 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29037 () (_ BitVec 64))

(assert (=> b!66906 (= lt!29037 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29035 () Unit!1824)

(assert (=> b!66906 (= lt!29035 (addApplyDifferent!48 lt!29051 lt!29036 (zeroValue!2054 newMap!16) lt!29037))))

(assert (=> b!66906 (= (apply!72 (+!86 lt!29051 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16))) lt!29037) (apply!72 lt!29051 lt!29037))))

(declare-fun lt!29045 () Unit!1824)

(assert (=> b!66906 (= lt!29045 lt!29035)))

(declare-fun lt!29040 () ListLongMap!1379)

(assert (=> b!66906 (= lt!29040 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) (zeroValue!2054 newMap!16) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29039 () (_ BitVec 64))

(assert (=> b!66906 (= lt!29039 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29033 () (_ BitVec 64))

(assert (=> b!66906 (= lt!29033 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66906 (= lt!29041 (addApplyDifferent!48 lt!29040 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) lt!29033))))

(assert (=> b!66906 (= (apply!72 (+!86 lt!29040 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) lt!29033) (apply!72 lt!29040 lt!29033))))

(declare-fun c!9261 () Bool)

(declare-fun b!66907 () Bool)

(assert (=> b!66907 (= c!9261 (and (not (= (bvand (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!66907 (= e!43881 e!43871)))

(declare-fun b!66908 () Bool)

(assert (=> b!66908 (= e!43877 e!43881)))

(assert (=> b!66908 (= c!9262 (and (not (= (bvand (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66909 () Bool)

(assert (=> b!66909 (= e!43879 e!43875)))

(declare-fun res!36171 () Bool)

(assert (=> b!66909 (=> (not res!36171) (not e!43875))))

(assert (=> b!66909 (= res!36171 (contains!705 lt!29044 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66909 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!66910 () Bool)

(assert (=> b!66910 (= e!43871 call!5592)))

(declare-fun bm!5589 () Bool)

(assert (=> bm!5589 (= call!5589 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) (zeroValue!2054 newMap!16) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5590 () Bool)

(assert (=> bm!5590 (= call!5591 (contains!705 lt!29044 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13885 c!9260) b!66903))

(assert (= (and d!13885 (not c!9260)) b!66908))

(assert (= (and b!66908 c!9262) b!66900))

(assert (= (and b!66908 (not c!9262)) b!66907))

(assert (= (and b!66907 c!9261) b!66910))

(assert (= (and b!66907 (not c!9261)) b!66899))

(assert (= (or b!66910 b!66899) bm!5584))

(assert (= (or b!66900 bm!5584) bm!5585))

(assert (= (or b!66900 b!66910) bm!5587))

(assert (= (or b!66903 bm!5585) bm!5589))

(assert (= (or b!66903 bm!5587) bm!5586))

(assert (= (and d!13885 res!36178) b!66904))

(assert (= (and d!13885 c!9263) b!66906))

(assert (= (and d!13885 (not c!9263)) b!66898))

(assert (= (and d!13885 res!36174) b!66901))

(assert (= (and b!66901 res!36175) b!66892))

(assert (= (and b!66901 (not res!36172)) b!66909))

(assert (= (and b!66909 res!36171) b!66894))

(assert (= (and b!66901 res!36177) b!66890))

(assert (= (and b!66890 c!9265) b!66893))

(assert (= (and b!66890 (not c!9265)) b!66891))

(assert (= (and b!66893 res!36173) b!66897))

(assert (= (or b!66893 b!66891) bm!5590))

(assert (= (and b!66890 res!36179) b!66902))

(assert (= (and b!66902 c!9264) b!66895))

(assert (= (and b!66902 (not c!9264)) b!66896))

(assert (= (and b!66895 res!36176) b!66905))

(assert (= (or b!66895 b!66896) bm!5588))

(declare-fun b_lambda!2995 () Bool)

(assert (=> (not b_lambda!2995) (not b!66894)))

(assert (=> b!66894 t!4942))

(declare-fun b_and!4133 () Bool)

(assert (= b_and!4129 (and (=> t!4942 result!2587) b_and!4133)))

(assert (=> b!66894 t!4944))

(declare-fun b_and!4135 () Bool)

(assert (= b_and!4131 (and (=> t!4944 result!2589) b_and!4135)))

(assert (=> b!66904 m!61431))

(assert (=> b!66904 m!61431))

(assert (=> b!66904 m!61433))

(declare-fun m!61641 () Bool)

(assert (=> bm!5588 m!61641))

(declare-fun m!61643 () Bool)

(assert (=> b!66897 m!61643))

(assert (=> b!66909 m!61431))

(assert (=> b!66909 m!61431))

(declare-fun m!61645 () Bool)

(assert (=> b!66909 m!61645))

(declare-fun m!61647 () Bool)

(assert (=> bm!5586 m!61647))

(declare-fun m!61649 () Bool)

(assert (=> b!66903 m!61649))

(declare-fun m!61651 () Bool)

(assert (=> b!66906 m!61651))

(declare-fun m!61653 () Bool)

(assert (=> b!66906 m!61653))

(declare-fun m!61655 () Bool)

(assert (=> b!66906 m!61655))

(declare-fun m!61657 () Bool)

(assert (=> b!66906 m!61657))

(declare-fun m!61659 () Bool)

(assert (=> b!66906 m!61659))

(assert (=> b!66906 m!61655))

(declare-fun m!61661 () Bool)

(assert (=> b!66906 m!61661))

(declare-fun m!61663 () Bool)

(assert (=> b!66906 m!61663))

(declare-fun m!61665 () Bool)

(assert (=> b!66906 m!61665))

(declare-fun m!61667 () Bool)

(assert (=> b!66906 m!61667))

(assert (=> b!66906 m!61431))

(declare-fun m!61669 () Bool)

(assert (=> b!66906 m!61669))

(assert (=> b!66906 m!61665))

(declare-fun m!61671 () Bool)

(assert (=> b!66906 m!61671))

(declare-fun m!61673 () Bool)

(assert (=> b!66906 m!61673))

(assert (=> b!66906 m!61651))

(declare-fun m!61675 () Bool)

(assert (=> b!66906 m!61675))

(assert (=> b!66906 m!61671))

(declare-fun m!61677 () Bool)

(assert (=> b!66906 m!61677))

(declare-fun m!61679 () Bool)

(assert (=> b!66906 m!61679))

(declare-fun m!61681 () Bool)

(assert (=> b!66906 m!61681))

(assert (=> bm!5589 m!61659))

(assert (=> d!13885 m!61297))

(assert (=> b!66892 m!61431))

(assert (=> b!66892 m!61431))

(assert (=> b!66892 m!61433))

(assert (=> b!66894 m!61477))

(declare-fun m!61683 () Bool)

(assert (=> b!66894 m!61683))

(assert (=> b!66894 m!61477))

(declare-fun m!61685 () Bool)

(assert (=> b!66894 m!61685))

(assert (=> b!66894 m!61683))

(assert (=> b!66894 m!61431))

(declare-fun m!61687 () Bool)

(assert (=> b!66894 m!61687))

(assert (=> b!66894 m!61431))

(declare-fun m!61689 () Bool)

(assert (=> b!66905 m!61689))

(declare-fun m!61691 () Bool)

(assert (=> bm!5590 m!61691))

(assert (=> bm!5547 d!13885))

(declare-fun d!13887 () Bool)

(declare-fun e!43883 () Bool)

(assert (=> d!13887 e!43883))

(declare-fun res!36181 () Bool)

(assert (=> d!13887 (=> (not res!36181) (not e!43883))))

(declare-fun lt!29056 () ListLongMap!1379)

(assert (=> d!13887 (= res!36181 (contains!705 lt!29056 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun lt!29054 () List!1455)

(assert (=> d!13887 (= lt!29056 (ListLongMap!1380 lt!29054))))

(declare-fun lt!29055 () Unit!1824)

(declare-fun lt!29057 () Unit!1824)

(assert (=> d!13887 (= lt!29055 lt!29057)))

(assert (=> d!13887 (= (getValueByKey!131 lt!29054 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!13887 (= lt!29057 (lemmaContainsTupThenGetReturnValue!48 lt!29054 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!13887 (= lt!29054 (insertStrictlySorted!51 (toList!705 lt!28527) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!13887 (= (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) lt!29056)))

(declare-fun b!66911 () Bool)

(declare-fun res!36180 () Bool)

(assert (=> b!66911 (=> (not res!36180) (not e!43883))))

(assert (=> b!66911 (= res!36180 (= (getValueByKey!131 (toList!705 lt!29056) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!66912 () Bool)

(assert (=> b!66912 (= e!43883 (contains!709 (toList!705 lt!29056) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(assert (= (and d!13887 res!36181) b!66911))

(assert (= (and b!66911 res!36180) b!66912))

(declare-fun m!61693 () Bool)

(assert (=> d!13887 m!61693))

(declare-fun m!61695 () Bool)

(assert (=> d!13887 m!61695))

(declare-fun m!61697 () Bool)

(assert (=> d!13887 m!61697))

(declare-fun m!61699 () Bool)

(assert (=> d!13887 m!61699))

(declare-fun m!61701 () Bool)

(assert (=> b!66911 m!61701))

(declare-fun m!61703 () Bool)

(assert (=> b!66912 m!61703))

(assert (=> d!13771 d!13887))

(declare-fun d!13889 () Bool)

(assert (=> d!13889 (= (+!86 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (+!86 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(assert (=> d!13889 true))

(declare-fun _$28!112 () Unit!1824)

(assert (=> d!13889 (= (choose!373 lt!28527 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) _$28!112)))

(declare-fun bs!2882 () Bool)

(assert (= bs!2882 d!13889))

(assert (=> bs!2882 m!61115))

(assert (=> bs!2882 m!61115))

(assert (=> bs!2882 m!61117))

(assert (=> bs!2882 m!61119))

(assert (=> bs!2882 m!61119))

(assert (=> bs!2882 m!61121))

(assert (=> d!13771 d!13889))

(declare-fun d!13891 () Bool)

(declare-fun e!43884 () Bool)

(assert (=> d!13891 e!43884))

(declare-fun res!36183 () Bool)

(assert (=> d!13891 (=> (not res!36183) (not e!43884))))

(declare-fun lt!29060 () ListLongMap!1379)

(assert (=> d!13891 (= res!36183 (contains!705 lt!29060 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun lt!29058 () List!1455)

(assert (=> d!13891 (= lt!29060 (ListLongMap!1380 lt!29058))))

(declare-fun lt!29059 () Unit!1824)

(declare-fun lt!29061 () Unit!1824)

(assert (=> d!13891 (= lt!29059 lt!29061)))

(assert (=> d!13891 (= (getValueByKey!131 lt!29058 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!13891 (= lt!29061 (lemmaContainsTupThenGetReturnValue!48 lt!29058 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!13891 (= lt!29058 (insertStrictlySorted!51 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!13891 (= (+!86 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) lt!29060)))

(declare-fun b!66913 () Bool)

(declare-fun res!36182 () Bool)

(assert (=> b!66913 (=> (not res!36182) (not e!43884))))

(assert (=> b!66913 (= res!36182 (= (getValueByKey!131 (toList!705 lt!29060) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!66914 () Bool)

(assert (=> b!66914 (= e!43884 (contains!709 (toList!705 lt!29060) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(assert (= (and d!13891 res!36183) b!66913))

(assert (= (and b!66913 res!36182) b!66914))

(declare-fun m!61705 () Bool)

(assert (=> d!13891 m!61705))

(declare-fun m!61707 () Bool)

(assert (=> d!13891 m!61707))

(declare-fun m!61709 () Bool)

(assert (=> d!13891 m!61709))

(declare-fun m!61711 () Bool)

(assert (=> d!13891 m!61711))

(declare-fun m!61713 () Bool)

(assert (=> b!66913 m!61713))

(declare-fun m!61715 () Bool)

(assert (=> b!66914 m!61715))

(assert (=> d!13771 d!13891))

(declare-fun d!13893 () Bool)

(declare-fun e!43885 () Bool)

(assert (=> d!13893 e!43885))

(declare-fun res!36185 () Bool)

(assert (=> d!13893 (=> (not res!36185) (not e!43885))))

(declare-fun lt!29064 () ListLongMap!1379)

(assert (=> d!13893 (= res!36185 (contains!705 lt!29064 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29062 () List!1455)

(assert (=> d!13893 (= lt!29064 (ListLongMap!1380 lt!29062))))

(declare-fun lt!29063 () Unit!1824)

(declare-fun lt!29065 () Unit!1824)

(assert (=> d!13893 (= lt!29063 lt!29065)))

(assert (=> d!13893 (= (getValueByKey!131 lt!29062 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13893 (= lt!29065 (lemmaContainsTupThenGetReturnValue!48 lt!29062 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13893 (= lt!29062 (insertStrictlySorted!51 (toList!705 lt!28527) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13893 (= (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!29064)))

(declare-fun b!66915 () Bool)

(declare-fun res!36184 () Bool)

(assert (=> b!66915 (=> (not res!36184) (not e!43885))))

(assert (=> b!66915 (= res!36184 (= (getValueByKey!131 (toList!705 lt!29064) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66916 () Bool)

(assert (=> b!66916 (= e!43885 (contains!709 (toList!705 lt!29064) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13893 res!36185) b!66915))

(assert (= (and b!66915 res!36184) b!66916))

(declare-fun m!61717 () Bool)

(assert (=> d!13893 m!61717))

(declare-fun m!61719 () Bool)

(assert (=> d!13893 m!61719))

(declare-fun m!61721 () Bool)

(assert (=> d!13893 m!61721))

(declare-fun m!61723 () Bool)

(assert (=> d!13893 m!61723))

(declare-fun m!61725 () Bool)

(assert (=> b!66915 m!61725))

(declare-fun m!61727 () Bool)

(assert (=> b!66916 m!61727))

(assert (=> d!13771 d!13893))

(declare-fun d!13895 () Bool)

(declare-fun e!43886 () Bool)

(assert (=> d!13895 e!43886))

(declare-fun res!36187 () Bool)

(assert (=> d!13895 (=> (not res!36187) (not e!43886))))

(declare-fun lt!29068 () ListLongMap!1379)

(assert (=> d!13895 (= res!36187 (contains!705 lt!29068 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29066 () List!1455)

(assert (=> d!13895 (= lt!29068 (ListLongMap!1380 lt!29066))))

(declare-fun lt!29067 () Unit!1824)

(declare-fun lt!29069 () Unit!1824)

(assert (=> d!13895 (= lt!29067 lt!29069)))

(assert (=> d!13895 (= (getValueByKey!131 lt!29066 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13895 (= lt!29069 (lemmaContainsTupThenGetReturnValue!48 lt!29066 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13895 (= lt!29066 (insertStrictlySorted!51 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13895 (= (+!86 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!29068)))

(declare-fun b!66917 () Bool)

(declare-fun res!36186 () Bool)

(assert (=> b!66917 (=> (not res!36186) (not e!43886))))

(assert (=> b!66917 (= res!36186 (= (getValueByKey!131 (toList!705 lt!29068) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!66918 () Bool)

(assert (=> b!66918 (= e!43886 (contains!709 (toList!705 lt!29068) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13895 res!36187) b!66917))

(assert (= (and b!66917 res!36186) b!66918))

(declare-fun m!61729 () Bool)

(assert (=> d!13895 m!61729))

(declare-fun m!61731 () Bool)

(assert (=> d!13895 m!61731))

(declare-fun m!61733 () Bool)

(assert (=> d!13895 m!61733))

(declare-fun m!61735 () Bool)

(assert (=> d!13895 m!61735))

(declare-fun m!61737 () Bool)

(assert (=> b!66917 m!61737))

(declare-fun m!61739 () Bool)

(assert (=> b!66918 m!61739))

(assert (=> d!13771 d!13895))

(declare-fun d!13897 () Bool)

(declare-fun lt!29070 () Bool)

(assert (=> d!13897 (= lt!29070 (select (content!72 (toList!705 lt!28723)) lt!28528))))

(declare-fun e!43888 () Bool)

(assert (=> d!13897 (= lt!29070 e!43888)))

(declare-fun res!36189 () Bool)

(assert (=> d!13897 (=> (not res!36189) (not e!43888))))

(assert (=> d!13897 (= res!36189 ((_ is Cons!1451) (toList!705 lt!28723)))))

(assert (=> d!13897 (= (contains!709 (toList!705 lt!28723) lt!28528) lt!29070)))

(declare-fun b!66919 () Bool)

(declare-fun e!43887 () Bool)

(assert (=> b!66919 (= e!43888 e!43887)))

(declare-fun res!36188 () Bool)

(assert (=> b!66919 (=> res!36188 e!43887)))

(assert (=> b!66919 (= res!36188 (= (h!2035 (toList!705 lt!28723)) lt!28528))))

(declare-fun b!66920 () Bool)

(assert (=> b!66920 (= e!43887 (contains!709 (t!4929 (toList!705 lt!28723)) lt!28528))))

(assert (= (and d!13897 res!36189) b!66919))

(assert (= (and b!66919 (not res!36188)) b!66920))

(declare-fun m!61741 () Bool)

(assert (=> d!13897 m!61741))

(declare-fun m!61743 () Bool)

(assert (=> d!13897 m!61743))

(declare-fun m!61745 () Bool)

(assert (=> b!66920 m!61745))

(assert (=> b!66519 d!13897))

(declare-fun b!66921 () Bool)

(declare-fun res!36198 () Bool)

(declare-fun e!43892 () Bool)

(assert (=> b!66921 (=> (not res!36198) (not e!43892))))

(declare-fun e!43897 () Bool)

(assert (=> b!66921 (= res!36198 e!43897)))

(declare-fun c!9271 () Bool)

(assert (=> b!66921 (= c!9271 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!66922 () Bool)

(declare-fun call!5598 () Bool)

(assert (=> b!66922 (= e!43897 (not call!5598))))

(declare-fun b!66923 () Bool)

(declare-fun e!43893 () Bool)

(assert (=> b!66923 (= e!43893 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66924 () Bool)

(declare-fun e!43895 () Bool)

(assert (=> b!66924 (= e!43897 e!43895)))

(declare-fun res!36192 () Bool)

(assert (=> b!66924 (= res!36192 call!5598)))

(assert (=> b!66924 (=> (not res!36192) (not e!43895))))

(declare-fun b!66925 () Bool)

(declare-fun e!43894 () Bool)

(declare-fun lt!29083 () ListLongMap!1379)

(assert (=> b!66925 (= e!43894 (= (apply!72 lt!29083 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66925 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (_values!2129 newMap!16))))))

(assert (=> b!66925 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun d!13899 () Bool)

(assert (=> d!13899 e!43892))

(declare-fun res!36193 () Bool)

(assert (=> d!13899 (=> (not res!36193) (not e!43892))))

(assert (=> d!13899 (= res!36193 (or (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun lt!29091 () ListLongMap!1379)

(assert (=> d!13899 (= lt!29083 lt!29091)))

(declare-fun lt!29088 () Unit!1824)

(declare-fun e!43891 () Unit!1824)

(assert (=> d!13899 (= lt!29088 e!43891)))

(declare-fun c!9269 () Bool)

(declare-fun e!43889 () Bool)

(assert (=> d!13899 (= c!9269 e!43889)))

(declare-fun res!36197 () Bool)

(assert (=> d!13899 (=> (not res!36197) (not e!43889))))

(assert (=> d!13899 (= res!36197 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun e!43896 () ListLongMap!1379)

(assert (=> d!13899 (= lt!29091 e!43896)))

(declare-fun c!9266 () Bool)

(assert (=> d!13899 (= c!9266 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!13899 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13899 (= (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29083)))

(declare-fun b!66926 () Bool)

(declare-fun e!43899 () Bool)

(declare-fun e!43901 () Bool)

(assert (=> b!66926 (= e!43899 e!43901)))

(declare-fun res!36195 () Bool)

(declare-fun call!5595 () Bool)

(assert (=> b!66926 (= res!36195 call!5595)))

(assert (=> b!66926 (=> (not res!36195) (not e!43901))))

(declare-fun b!66927 () Bool)

(assert (=> b!66927 (= e!43899 (not call!5595))))

(declare-fun b!66928 () Bool)

(assert (=> b!66928 (= e!43895 (= (apply!72 lt!29083 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun bm!5591 () Bool)

(declare-fun call!5597 () ListLongMap!1379)

(declare-fun call!5600 () ListLongMap!1379)

(assert (=> bm!5591 (= call!5597 call!5600)))

(declare-fun b!66929 () Bool)

(declare-fun Unit!1848 () Unit!1824)

(assert (=> b!66929 (= e!43891 Unit!1848)))

(declare-fun b!66930 () Bool)

(declare-fun e!43890 () ListLongMap!1379)

(assert (=> b!66930 (= e!43890 call!5597)))

(declare-fun bm!5592 () Bool)

(declare-fun call!5596 () ListLongMap!1379)

(assert (=> bm!5592 (= call!5600 call!5596)))

(declare-fun bm!5593 () Bool)

(declare-fun c!9268 () Bool)

(declare-fun call!5594 () ListLongMap!1379)

(assert (=> bm!5593 (= call!5594 (+!86 (ite c!9266 call!5596 (ite c!9268 call!5600 call!5597)) (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!66931 () Bool)

(declare-fun e!43900 () ListLongMap!1379)

(declare-fun call!5599 () ListLongMap!1379)

(assert (=> b!66931 (= e!43900 call!5599)))

(declare-fun bm!5594 () Bool)

(assert (=> bm!5594 (= call!5599 call!5594)))

(declare-fun bm!5595 () Bool)

(assert (=> bm!5595 (= call!5595 (contains!705 lt!29083 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!66932 () Bool)

(declare-fun res!36196 () Bool)

(assert (=> b!66932 (=> (not res!36196) (not e!43892))))

(declare-fun e!43898 () Bool)

(assert (=> b!66932 (= res!36196 e!43898)))

(declare-fun res!36191 () Bool)

(assert (=> b!66932 (=> res!36191 e!43898)))

(assert (=> b!66932 (= res!36191 (not e!43893))))

(declare-fun res!36194 () Bool)

(assert (=> b!66932 (=> (not res!36194) (not e!43893))))

(assert (=> b!66932 (= res!36194 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!66933 () Bool)

(assert (=> b!66933 (= e!43892 e!43899)))

(declare-fun c!9270 () Bool)

(assert (=> b!66933 (= c!9270 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66934 () Bool)

(assert (=> b!66934 (= e!43896 (+!86 call!5594 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun b!66935 () Bool)

(assert (=> b!66935 (= e!43889 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66936 () Bool)

(assert (=> b!66936 (= e!43901 (= (apply!72 lt!29083 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun b!66937 () Bool)

(declare-fun lt!29080 () Unit!1824)

(assert (=> b!66937 (= e!43891 lt!29080)))

(declare-fun lt!29082 () ListLongMap!1379)

(assert (=> b!66937 (= lt!29082 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29087 () (_ BitVec 64))

(assert (=> b!66937 (= lt!29087 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29085 () (_ BitVec 64))

(assert (=> b!66937 (= lt!29085 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29092 () Unit!1824)

(assert (=> b!66937 (= lt!29092 (addStillContains!48 lt!29082 lt!29087 (zeroValue!2054 newMap!16) lt!29085))))

(assert (=> b!66937 (contains!705 (+!86 lt!29082 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16))) lt!29085)))

(declare-fun lt!29086 () Unit!1824)

(assert (=> b!66937 (= lt!29086 lt!29092)))

(declare-fun lt!29077 () ListLongMap!1379)

(assert (=> b!66937 (= lt!29077 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29089 () (_ BitVec 64))

(assert (=> b!66937 (= lt!29089 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29081 () (_ BitVec 64))

(assert (=> b!66937 (= lt!29081 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29071 () Unit!1824)

(assert (=> b!66937 (= lt!29071 (addApplyDifferent!48 lt!29077 lt!29089 (minValue!2054 newMap!16) lt!29081))))

(assert (=> b!66937 (= (apply!72 (+!86 lt!29077 (tuple2!2083 lt!29089 (minValue!2054 newMap!16))) lt!29081) (apply!72 lt!29077 lt!29081))))

(declare-fun lt!29073 () Unit!1824)

(assert (=> b!66937 (= lt!29073 lt!29071)))

(declare-fun lt!29090 () ListLongMap!1379)

(assert (=> b!66937 (= lt!29090 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29075 () (_ BitVec 64))

(assert (=> b!66937 (= lt!29075 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29076 () (_ BitVec 64))

(assert (=> b!66937 (= lt!29076 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29074 () Unit!1824)

(assert (=> b!66937 (= lt!29074 (addApplyDifferent!48 lt!29090 lt!29075 (zeroValue!2054 newMap!16) lt!29076))))

(assert (=> b!66937 (= (apply!72 (+!86 lt!29090 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16))) lt!29076) (apply!72 lt!29090 lt!29076))))

(declare-fun lt!29084 () Unit!1824)

(assert (=> b!66937 (= lt!29084 lt!29074)))

(declare-fun lt!29079 () ListLongMap!1379)

(assert (=> b!66937 (= lt!29079 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29078 () (_ BitVec 64))

(assert (=> b!66937 (= lt!29078 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29072 () (_ BitVec 64))

(assert (=> b!66937 (= lt!29072 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!66937 (= lt!29080 (addApplyDifferent!48 lt!29079 lt!29078 (minValue!2054 newMap!16) lt!29072))))

(assert (=> b!66937 (= (apply!72 (+!86 lt!29079 (tuple2!2083 lt!29078 (minValue!2054 newMap!16))) lt!29072) (apply!72 lt!29079 lt!29072))))

(declare-fun b!66938 () Bool)

(declare-fun c!9267 () Bool)

(assert (=> b!66938 (= c!9267 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!66938 (= e!43900 e!43890)))

(declare-fun b!66939 () Bool)

(assert (=> b!66939 (= e!43896 e!43900)))

(assert (=> b!66939 (= c!9268 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!66940 () Bool)

(assert (=> b!66940 (= e!43898 e!43894)))

(declare-fun res!36190 () Bool)

(assert (=> b!66940 (=> (not res!36190) (not e!43894))))

(assert (=> b!66940 (= res!36190 (contains!705 lt!29083 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!66940 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!66941 () Bool)

(assert (=> b!66941 (= e!43890 call!5599)))

(declare-fun bm!5596 () Bool)

(assert (=> bm!5596 (= call!5596 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5597 () Bool)

(assert (=> bm!5597 (= call!5598 (contains!705 lt!29083 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!13899 c!9266) b!66934))

(assert (= (and d!13899 (not c!9266)) b!66939))

(assert (= (and b!66939 c!9268) b!66931))

(assert (= (and b!66939 (not c!9268)) b!66938))

(assert (= (and b!66938 c!9267) b!66941))

(assert (= (and b!66938 (not c!9267)) b!66930))

(assert (= (or b!66941 b!66930) bm!5591))

(assert (= (or b!66931 bm!5591) bm!5592))

(assert (= (or b!66931 b!66941) bm!5594))

(assert (= (or b!66934 bm!5592) bm!5596))

(assert (= (or b!66934 bm!5594) bm!5593))

(assert (= (and d!13899 res!36197) b!66935))

(assert (= (and d!13899 c!9269) b!66937))

(assert (= (and d!13899 (not c!9269)) b!66929))

(assert (= (and d!13899 res!36193) b!66932))

(assert (= (and b!66932 res!36194) b!66923))

(assert (= (and b!66932 (not res!36191)) b!66940))

(assert (= (and b!66940 res!36190) b!66925))

(assert (= (and b!66932 res!36196) b!66921))

(assert (= (and b!66921 c!9271) b!66924))

(assert (= (and b!66921 (not c!9271)) b!66922))

(assert (= (and b!66924 res!36192) b!66928))

(assert (= (or b!66924 b!66922) bm!5597))

(assert (= (and b!66921 res!36198) b!66933))

(assert (= (and b!66933 c!9270) b!66926))

(assert (= (and b!66933 (not c!9270)) b!66927))

(assert (= (and b!66926 res!36195) b!66936))

(assert (= (or b!66926 b!66927) bm!5595))

(declare-fun b_lambda!2997 () Bool)

(assert (=> (not b_lambda!2997) (not b!66925)))

(assert (=> b!66925 t!4942))

(declare-fun b_and!4137 () Bool)

(assert (= b_and!4133 (and (=> t!4942 result!2587) b_and!4137)))

(assert (=> b!66925 t!4944))

(declare-fun b_and!4139 () Bool)

(assert (= b_and!4135 (and (=> t!4944 result!2589) b_and!4139)))

(assert (=> b!66935 m!61431))

(assert (=> b!66935 m!61431))

(assert (=> b!66935 m!61433))

(declare-fun m!61747 () Bool)

(assert (=> bm!5595 m!61747))

(declare-fun m!61749 () Bool)

(assert (=> b!66928 m!61749))

(assert (=> b!66940 m!61431))

(assert (=> b!66940 m!61431))

(declare-fun m!61751 () Bool)

(assert (=> b!66940 m!61751))

(declare-fun m!61753 () Bool)

(assert (=> bm!5593 m!61753))

(declare-fun m!61755 () Bool)

(assert (=> b!66934 m!61755))

(declare-fun m!61757 () Bool)

(assert (=> b!66937 m!61757))

(declare-fun m!61759 () Bool)

(assert (=> b!66937 m!61759))

(declare-fun m!61761 () Bool)

(assert (=> b!66937 m!61761))

(declare-fun m!61763 () Bool)

(assert (=> b!66937 m!61763))

(declare-fun m!61765 () Bool)

(assert (=> b!66937 m!61765))

(assert (=> b!66937 m!61761))

(declare-fun m!61767 () Bool)

(assert (=> b!66937 m!61767))

(declare-fun m!61769 () Bool)

(assert (=> b!66937 m!61769))

(declare-fun m!61771 () Bool)

(assert (=> b!66937 m!61771))

(declare-fun m!61773 () Bool)

(assert (=> b!66937 m!61773))

(assert (=> b!66937 m!61431))

(declare-fun m!61775 () Bool)

(assert (=> b!66937 m!61775))

(assert (=> b!66937 m!61771))

(declare-fun m!61777 () Bool)

(assert (=> b!66937 m!61777))

(declare-fun m!61779 () Bool)

(assert (=> b!66937 m!61779))

(assert (=> b!66937 m!61757))

(declare-fun m!61781 () Bool)

(assert (=> b!66937 m!61781))

(assert (=> b!66937 m!61777))

(declare-fun m!61783 () Bool)

(assert (=> b!66937 m!61783))

(declare-fun m!61785 () Bool)

(assert (=> b!66937 m!61785))

(declare-fun m!61787 () Bool)

(assert (=> b!66937 m!61787))

(assert (=> bm!5596 m!61765))

(assert (=> d!13899 m!61297))

(assert (=> b!66923 m!61431))

(assert (=> b!66923 m!61431))

(assert (=> b!66923 m!61433))

(assert (=> b!66925 m!61477))

(assert (=> b!66925 m!61683))

(assert (=> b!66925 m!61477))

(assert (=> b!66925 m!61685))

(assert (=> b!66925 m!61683))

(assert (=> b!66925 m!61431))

(declare-fun m!61789 () Bool)

(assert (=> b!66925 m!61789))

(assert (=> b!66925 m!61431))

(declare-fun m!61791 () Bool)

(assert (=> b!66936 m!61791))

(declare-fun m!61793 () Bool)

(assert (=> bm!5597 m!61793))

(assert (=> d!13757 d!13899))

(assert (=> bm!5527 d!13757))

(declare-fun b!66951 () Bool)

(declare-fun res!36209 () Bool)

(declare-fun e!43904 () Bool)

(assert (=> b!66951 (=> (not res!36209) (not e!43904))))

(declare-fun size!2067 (LongMapFixedSize!670) (_ BitVec 32))

(assert (=> b!66951 (= res!36209 (bvsge (size!2067 newMap!16) (_size!384 newMap!16)))))

(declare-fun b!66950 () Bool)

(declare-fun res!36210 () Bool)

(assert (=> b!66950 (=> (not res!36210) (not e!43904))))

(assert (=> b!66950 (= res!36210 (and (= (size!2062 (_values!2129 newMap!16)) (bvadd (mask!6081 newMap!16) #b00000000000000000000000000000001)) (= (size!2061 (_keys!3786 newMap!16)) (size!2062 (_values!2129 newMap!16))) (bvsge (_size!384 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!384 newMap!16) (bvadd (mask!6081 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!13901 () Bool)

(declare-fun res!36208 () Bool)

(assert (=> d!13901 (=> (not res!36208) (not e!43904))))

(assert (=> d!13901 (= res!36208 (validMask!0 (mask!6081 newMap!16)))))

(assert (=> d!13901 (= (simpleValid!48 newMap!16) e!43904)))

(declare-fun b!66952 () Bool)

(declare-fun res!36207 () Bool)

(assert (=> b!66952 (=> (not res!36207) (not e!43904))))

(assert (=> b!66952 (= res!36207 (= (size!2067 newMap!16) (bvadd (_size!384 newMap!16) (bvsdiv (bvadd (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!66953 () Bool)

(assert (=> b!66953 (= e!43904 (and (bvsge (extraKeys!2017 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2017 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!384 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!13901 res!36208) b!66950))

(assert (= (and b!66950 res!36210) b!66951))

(assert (= (and b!66951 res!36209) b!66952))

(assert (= (and b!66952 res!36207) b!66953))

(declare-fun m!61795 () Bool)

(assert (=> b!66951 m!61795))

(assert (=> d!13901 m!61297))

(assert (=> b!66952 m!61795))

(assert (=> d!13783 d!13901))

(declare-fun d!13903 () Bool)

(declare-fun e!43905 () Bool)

(assert (=> d!13903 e!43905))

(declare-fun res!36212 () Bool)

(assert (=> d!13903 (=> (not res!36212) (not e!43905))))

(declare-fun lt!29095 () ListLongMap!1379)

(assert (=> d!13903 (= res!36212 (contains!705 lt!29095 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun lt!29093 () List!1455)

(assert (=> d!13903 (= lt!29095 (ListLongMap!1380 lt!29093))))

(declare-fun lt!29094 () Unit!1824)

(declare-fun lt!29096 () Unit!1824)

(assert (=> d!13903 (= lt!29094 lt!29096)))

(assert (=> d!13903 (= (getValueByKey!131 lt!29093 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) (Some!136 (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!13903 (= lt!29096 (lemmaContainsTupThenGetReturnValue!48 lt!29093 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!13903 (= lt!29093 (insertStrictlySorted!51 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475))) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!13903 (= (+!86 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475)) (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29095)))

(declare-fun b!66954 () Bool)

(declare-fun res!36211 () Bool)

(assert (=> b!66954 (=> (not res!36211) (not e!43905))))

(assert (=> b!66954 (= res!36211 (= (getValueByKey!131 (toList!705 lt!29095) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) (Some!136 (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!66955 () Bool)

(assert (=> b!66955 (= e!43905 (contains!709 (toList!705 lt!29095) (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (= (and d!13903 res!36212) b!66954))

(assert (= (and b!66954 res!36211) b!66955))

(declare-fun m!61797 () Bool)

(assert (=> d!13903 m!61797))

(declare-fun m!61799 () Bool)

(assert (=> d!13903 m!61799))

(declare-fun m!61801 () Bool)

(assert (=> d!13903 m!61801))

(declare-fun m!61803 () Bool)

(assert (=> d!13903 m!61803))

(declare-fun m!61805 () Bool)

(assert (=> b!66954 m!61805))

(declare-fun m!61807 () Bool)

(assert (=> b!66955 m!61807))

(assert (=> bm!5471 d!13903))

(assert (=> b!66392 d!13751))

(declare-fun b!66964 () Bool)

(declare-fun e!43914 () Bool)

(declare-fun call!5603 () Bool)

(assert (=> b!66964 (= e!43914 call!5603)))

(declare-fun b!66965 () Bool)

(declare-fun e!43912 () Bool)

(assert (=> b!66965 (= e!43912 e!43914)))

(declare-fun c!9274 () Bool)

(assert (=> b!66965 (= c!9274 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!66966 () Bool)

(declare-fun e!43913 () Bool)

(assert (=> b!66966 (= e!43913 call!5603)))

(declare-fun d!13905 () Bool)

(declare-fun res!36217 () Bool)

(assert (=> d!13905 (=> res!36217 e!43912)))

(assert (=> d!13905 (= res!36217 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!13905 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3786 newMap!16) (mask!6081 newMap!16)) e!43912)))

(declare-fun b!66967 () Bool)

(assert (=> b!66967 (= e!43914 e!43913)))

(declare-fun lt!29104 () (_ BitVec 64))

(assert (=> b!66967 (= lt!29104 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29103 () Unit!1824)

(assert (=> b!66967 (= lt!29103 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3786 newMap!16) lt!29104 #b00000000000000000000000000000000))))

(assert (=> b!66967 (arrayContainsKey!0 (_keys!3786 newMap!16) lt!29104 #b00000000000000000000000000000000)))

(declare-fun lt!29105 () Unit!1824)

(assert (=> b!66967 (= lt!29105 lt!29103)))

(declare-fun res!36218 () Bool)

(assert (=> b!66967 (= res!36218 (= (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) (_keys!3786 newMap!16) (mask!6081 newMap!16)) (Found!227 #b00000000000000000000000000000000)))))

(assert (=> b!66967 (=> (not res!36218) (not e!43913))))

(declare-fun bm!5600 () Bool)

(assert (=> bm!5600 (= call!5603 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(assert (= (and d!13905 (not res!36217)) b!66965))

(assert (= (and b!66965 c!9274) b!66967))

(assert (= (and b!66965 (not c!9274)) b!66964))

(assert (= (and b!66967 res!36218) b!66966))

(assert (= (or b!66966 b!66964) bm!5600))

(assert (=> b!66965 m!61431))

(assert (=> b!66965 m!61431))

(assert (=> b!66965 m!61433))

(assert (=> b!66967 m!61431))

(declare-fun m!61809 () Bool)

(assert (=> b!66967 m!61809))

(declare-fun m!61811 () Bool)

(assert (=> b!66967 m!61811))

(assert (=> b!66967 m!61431))

(declare-fun m!61813 () Bool)

(assert (=> b!66967 m!61813))

(declare-fun m!61815 () Bool)

(assert (=> bm!5600 m!61815))

(assert (=> b!66527 d!13905))

(declare-fun d!13907 () Bool)

(declare-fun e!43915 () Bool)

(assert (=> d!13907 e!43915))

(declare-fun res!36219 () Bool)

(assert (=> d!13907 (=> res!36219 e!43915)))

(declare-fun lt!29106 () Bool)

(assert (=> d!13907 (= res!36219 (not lt!29106))))

(declare-fun lt!29109 () Bool)

(assert (=> d!13907 (= lt!29106 lt!29109)))

(declare-fun lt!29108 () Unit!1824)

(declare-fun e!43916 () Unit!1824)

(assert (=> d!13907 (= lt!29108 e!43916)))

(declare-fun c!9275 () Bool)

(assert (=> d!13907 (= c!9275 lt!29109)))

(assert (=> d!13907 (= lt!29109 (containsKey!134 (toList!705 lt!28691) (_1!1052 lt!28528)))))

(assert (=> d!13907 (= (contains!705 lt!28691 (_1!1052 lt!28528)) lt!29106)))

(declare-fun b!66968 () Bool)

(declare-fun lt!29107 () Unit!1824)

(assert (=> b!66968 (= e!43916 lt!29107)))

(assert (=> b!66968 (= lt!29107 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28691) (_1!1052 lt!28528)))))

(assert (=> b!66968 (isDefined!83 (getValueByKey!131 (toList!705 lt!28691) (_1!1052 lt!28528)))))

(declare-fun b!66969 () Bool)

(declare-fun Unit!1849 () Unit!1824)

(assert (=> b!66969 (= e!43916 Unit!1849)))

(declare-fun b!66970 () Bool)

(assert (=> b!66970 (= e!43915 (isDefined!83 (getValueByKey!131 (toList!705 lt!28691) (_1!1052 lt!28528))))))

(assert (= (and d!13907 c!9275) b!66968))

(assert (= (and d!13907 (not c!9275)) b!66969))

(assert (= (and d!13907 (not res!36219)) b!66970))

(declare-fun m!61817 () Bool)

(assert (=> d!13907 m!61817))

(declare-fun m!61819 () Bool)

(assert (=> b!66968 m!61819))

(assert (=> b!66968 m!61091))

(assert (=> b!66968 m!61091))

(declare-fun m!61821 () Bool)

(assert (=> b!66968 m!61821))

(assert (=> b!66970 m!61091))

(assert (=> b!66970 m!61091))

(assert (=> b!66970 m!61821))

(assert (=> d!13767 d!13907))

(declare-fun b!66973 () Bool)

(declare-fun e!43918 () Option!137)

(assert (=> b!66973 (= e!43918 (getValueByKey!131 (t!4929 lt!28689) (_1!1052 lt!28528)))))

(declare-fun b!66971 () Bool)

(declare-fun e!43917 () Option!137)

(assert (=> b!66971 (= e!43917 (Some!136 (_2!1052 (h!2035 lt!28689))))))

(declare-fun d!13909 () Bool)

(declare-fun c!9276 () Bool)

(assert (=> d!13909 (= c!9276 (and ((_ is Cons!1451) lt!28689) (= (_1!1052 (h!2035 lt!28689)) (_1!1052 lt!28528))))))

(assert (=> d!13909 (= (getValueByKey!131 lt!28689 (_1!1052 lt!28528)) e!43917)))

(declare-fun b!66974 () Bool)

(assert (=> b!66974 (= e!43918 None!135)))

(declare-fun b!66972 () Bool)

(assert (=> b!66972 (= e!43917 e!43918)))

(declare-fun c!9277 () Bool)

(assert (=> b!66972 (= c!9277 (and ((_ is Cons!1451) lt!28689) (not (= (_1!1052 (h!2035 lt!28689)) (_1!1052 lt!28528)))))))

(assert (= (and d!13909 c!9276) b!66971))

(assert (= (and d!13909 (not c!9276)) b!66972))

(assert (= (and b!66972 c!9277) b!66973))

(assert (= (and b!66972 (not c!9277)) b!66974))

(declare-fun m!61823 () Bool)

(assert (=> b!66973 m!61823))

(assert (=> d!13767 d!13909))

(declare-fun d!13911 () Bool)

(assert (=> d!13911 (= (getValueByKey!131 lt!28689 (_1!1052 lt!28528)) (Some!136 (_2!1052 lt!28528)))))

(declare-fun lt!29112 () Unit!1824)

(declare-fun choose!380 (List!1455 (_ BitVec 64) V!2913) Unit!1824)

(assert (=> d!13911 (= lt!29112 (choose!380 lt!28689 (_1!1052 lt!28528) (_2!1052 lt!28528)))))

(declare-fun e!43921 () Bool)

(assert (=> d!13911 e!43921))

(declare-fun res!36224 () Bool)

(assert (=> d!13911 (=> (not res!36224) (not e!43921))))

(assert (=> d!13911 (= res!36224 (isStrictlySorted!276 lt!28689))))

(assert (=> d!13911 (= (lemmaContainsTupThenGetReturnValue!48 lt!28689 (_1!1052 lt!28528) (_2!1052 lt!28528)) lt!29112)))

(declare-fun b!66979 () Bool)

(declare-fun res!36225 () Bool)

(assert (=> b!66979 (=> (not res!36225) (not e!43921))))

(assert (=> b!66979 (= res!36225 (containsKey!134 lt!28689 (_1!1052 lt!28528)))))

(declare-fun b!66980 () Bool)

(assert (=> b!66980 (= e!43921 (contains!709 lt!28689 (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(assert (= (and d!13911 res!36224) b!66979))

(assert (= (and b!66979 res!36225) b!66980))

(assert (=> d!13911 m!61085))

(declare-fun m!61825 () Bool)

(assert (=> d!13911 m!61825))

(declare-fun m!61827 () Bool)

(assert (=> d!13911 m!61827))

(declare-fun m!61829 () Bool)

(assert (=> b!66979 m!61829))

(declare-fun m!61831 () Bool)

(assert (=> b!66980 m!61831))

(assert (=> d!13767 d!13911))

(declare-fun b!67001 () Bool)

(declare-fun e!43936 () List!1455)

(declare-fun call!5610 () List!1455)

(assert (=> b!67001 (= e!43936 call!5610)))

(declare-fun b!67002 () Bool)

(declare-fun e!43932 () List!1455)

(declare-fun e!43934 () List!1455)

(assert (=> b!67002 (= e!43932 e!43934)))

(declare-fun c!9288 () Bool)

(assert (=> b!67002 (= c!9288 (and ((_ is Cons!1451) (toList!705 lt!28527)) (= (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 lt!28528))))))

(declare-fun b!67003 () Bool)

(declare-fun res!36230 () Bool)

(declare-fun e!43935 () Bool)

(assert (=> b!67003 (=> (not res!36230) (not e!43935))))

(declare-fun lt!29115 () List!1455)

(assert (=> b!67003 (= res!36230 (containsKey!134 lt!29115 (_1!1052 lt!28528)))))

(declare-fun bm!5607 () Bool)

(declare-fun call!5612 () List!1455)

(assert (=> bm!5607 (= call!5610 call!5612)))

(declare-fun b!67004 () Bool)

(declare-fun call!5611 () List!1455)

(assert (=> b!67004 (= e!43932 call!5611)))

(declare-fun b!67005 () Bool)

(declare-fun c!9289 () Bool)

(assert (=> b!67005 (= c!9289 (and ((_ is Cons!1451) (toList!705 lt!28527)) (bvsgt (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 lt!28528))))))

(assert (=> b!67005 (= e!43934 e!43936)))

(declare-fun b!67006 () Bool)

(declare-fun e!43933 () List!1455)

(assert (=> b!67006 (= e!43933 (ite c!9288 (t!4929 (toList!705 lt!28527)) (ite c!9289 (Cons!1451 (h!2035 (toList!705 lt!28527)) (t!4929 (toList!705 lt!28527))) Nil!1452)))))

(declare-fun d!13913 () Bool)

(assert (=> d!13913 e!43935))

(declare-fun res!36231 () Bool)

(assert (=> d!13913 (=> (not res!36231) (not e!43935))))

(assert (=> d!13913 (= res!36231 (isStrictlySorted!276 lt!29115))))

(assert (=> d!13913 (= lt!29115 e!43932)))

(declare-fun c!9286 () Bool)

(assert (=> d!13913 (= c!9286 (and ((_ is Cons!1451) (toList!705 lt!28527)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 lt!28528))))))

(assert (=> d!13913 (isStrictlySorted!276 (toList!705 lt!28527))))

(assert (=> d!13913 (= (insertStrictlySorted!51 (toList!705 lt!28527) (_1!1052 lt!28528) (_2!1052 lt!28528)) lt!29115)))

(declare-fun b!67007 () Bool)

(assert (=> b!67007 (= e!43933 (insertStrictlySorted!51 (t!4929 (toList!705 lt!28527)) (_1!1052 lt!28528) (_2!1052 lt!28528)))))

(declare-fun b!67008 () Bool)

(assert (=> b!67008 (= e!43934 call!5612)))

(declare-fun bm!5608 () Bool)

(assert (=> bm!5608 (= call!5612 call!5611)))

(declare-fun b!67009 () Bool)

(assert (=> b!67009 (= e!43936 call!5610)))

(declare-fun bm!5609 () Bool)

(declare-fun $colon$colon!62 (List!1455 tuple2!2082) List!1455)

(assert (=> bm!5609 (= call!5611 ($colon$colon!62 e!43933 (ite c!9286 (h!2035 (toList!705 lt!28527)) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528)))))))

(declare-fun c!9287 () Bool)

(assert (=> bm!5609 (= c!9287 c!9286)))

(declare-fun b!67010 () Bool)

(assert (=> b!67010 (= e!43935 (contains!709 lt!29115 (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(assert (= (and d!13913 c!9286) b!67004))

(assert (= (and d!13913 (not c!9286)) b!67002))

(assert (= (and b!67002 c!9288) b!67008))

(assert (= (and b!67002 (not c!9288)) b!67005))

(assert (= (and b!67005 c!9289) b!67001))

(assert (= (and b!67005 (not c!9289)) b!67009))

(assert (= (or b!67001 b!67009) bm!5607))

(assert (= (or b!67008 bm!5607) bm!5608))

(assert (= (or b!67004 bm!5608) bm!5609))

(assert (= (and bm!5609 c!9287) b!67007))

(assert (= (and bm!5609 (not c!9287)) b!67006))

(assert (= (and d!13913 res!36231) b!67003))

(assert (= (and b!67003 res!36230) b!67010))

(declare-fun m!61833 () Bool)

(assert (=> bm!5609 m!61833))

(declare-fun m!61835 () Bool)

(assert (=> b!67007 m!61835))

(declare-fun m!61837 () Bool)

(assert (=> b!67003 m!61837))

(declare-fun m!61839 () Bool)

(assert (=> b!67010 m!61839))

(declare-fun m!61841 () Bool)

(assert (=> d!13913 m!61841))

(declare-fun m!61843 () Bool)

(assert (=> d!13913 m!61843))

(assert (=> d!13767 d!13913))

(declare-fun d!13915 () Bool)

(declare-fun e!43937 () Bool)

(assert (=> d!13915 e!43937))

(declare-fun res!36232 () Bool)

(assert (=> d!13915 (=> res!36232 e!43937)))

(declare-fun lt!29116 () Bool)

(assert (=> d!13915 (= res!36232 (not lt!29116))))

(declare-fun lt!29119 () Bool)

(assert (=> d!13915 (= lt!29116 lt!29119)))

(declare-fun lt!29118 () Unit!1824)

(declare-fun e!43938 () Unit!1824)

(assert (=> d!13915 (= lt!29118 e!43938)))

(declare-fun c!9290 () Bool)

(assert (=> d!13915 (= c!9290 lt!29119)))

(assert (=> d!13915 (= lt!29119 (containsKey!134 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13915 (= (contains!705 call!5542 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29116)))

(declare-fun b!67011 () Bool)

(declare-fun lt!29117 () Unit!1824)

(assert (=> b!67011 (= e!43938 lt!29117)))

(assert (=> b!67011 (= lt!29117 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!67011 (isDefined!83 (getValueByKey!131 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67012 () Bool)

(declare-fun Unit!1850 () Unit!1824)

(assert (=> b!67012 (= e!43938 Unit!1850)))

(declare-fun b!67013 () Bool)

(assert (=> b!67013 (= e!43937 (isDefined!83 (getValueByKey!131 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (= (and d!13915 c!9290) b!67011))

(assert (= (and d!13915 (not c!9290)) b!67012))

(assert (= (and d!13915 (not res!36232)) b!67013))

(assert (=> d!13915 m!60827))

(declare-fun m!61845 () Bool)

(assert (=> d!13915 m!61845))

(assert (=> b!67011 m!60827))

(declare-fun m!61847 () Bool)

(assert (=> b!67011 m!61847))

(assert (=> b!67011 m!60827))

(declare-fun m!61849 () Bool)

(assert (=> b!67011 m!61849))

(assert (=> b!67011 m!61849))

(declare-fun m!61851 () Bool)

(assert (=> b!67011 m!61851))

(assert (=> b!67013 m!60827))

(assert (=> b!67013 m!61849))

(assert (=> b!67013 m!61849))

(assert (=> b!67013 m!61851))

(assert (=> b!66626 d!13915))

(declare-fun d!13917 () Bool)

(declare-fun e!43939 () Bool)

(assert (=> d!13917 e!43939))

(declare-fun res!36233 () Bool)

(assert (=> d!13917 (=> res!36233 e!43939)))

(declare-fun lt!29120 () Bool)

(assert (=> d!13917 (= res!36233 (not lt!29120))))

(declare-fun lt!29123 () Bool)

(assert (=> d!13917 (= lt!29120 lt!29123)))

(declare-fun lt!29122 () Unit!1824)

(declare-fun e!43940 () Unit!1824)

(assert (=> d!13917 (= lt!29122 e!43940)))

(declare-fun c!9291 () Bool)

(assert (=> d!13917 (= c!9291 lt!29123)))

(assert (=> d!13917 (= lt!29123 (containsKey!134 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13917 (= (contains!705 lt!28707 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29120)))

(declare-fun b!67014 () Bool)

(declare-fun lt!29121 () Unit!1824)

(assert (=> b!67014 (= e!43940 lt!29121)))

(assert (=> b!67014 (= lt!29121 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67014 (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67015 () Bool)

(declare-fun Unit!1851 () Unit!1824)

(assert (=> b!67015 (= e!43940 Unit!1851)))

(declare-fun b!67016 () Bool)

(assert (=> b!67016 (= e!43939 (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13917 c!9291) b!67014))

(assert (= (and d!13917 (not c!9291)) b!67015))

(assert (= (and d!13917 (not res!36233)) b!67016))

(declare-fun m!61853 () Bool)

(assert (=> d!13917 m!61853))

(declare-fun m!61855 () Bool)

(assert (=> b!67014 m!61855))

(declare-fun m!61857 () Bool)

(assert (=> b!67014 m!61857))

(assert (=> b!67014 m!61857))

(declare-fun m!61859 () Bool)

(assert (=> b!67014 m!61859))

(assert (=> b!67016 m!61857))

(assert (=> b!67016 m!61857))

(assert (=> b!67016 m!61859))

(assert (=> b!66513 d!13917))

(assert (=> bm!5474 d!13769))

(declare-fun d!13919 () Bool)

(assert (=> d!13919 (= (apply!72 lt!28667 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2883 () Bool)

(assert (= bs!2883 d!13919))

(assert (=> bs!2883 m!61229))

(assert (=> bs!2883 m!61229))

(declare-fun m!61861 () Bool)

(assert (=> bs!2883 m!61861))

(assert (=> b!66458 d!13919))

(declare-fun d!13921 () Bool)

(declare-fun e!43941 () Bool)

(assert (=> d!13921 e!43941))

(declare-fun res!36235 () Bool)

(assert (=> d!13921 (=> (not res!36235) (not e!43941))))

(declare-fun lt!29126 () ListLongMap!1379)

(assert (=> d!13921 (= res!36235 (contains!705 lt!29126 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!29124 () List!1455)

(assert (=> d!13921 (= lt!29126 (ListLongMap!1380 lt!29124))))

(declare-fun lt!29125 () Unit!1824)

(declare-fun lt!29127 () Unit!1824)

(assert (=> d!13921 (= lt!29125 lt!29127)))

(assert (=> d!13921 (= (getValueByKey!131 lt!29124 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13921 (= lt!29127 (lemmaContainsTupThenGetReturnValue!48 lt!29124 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13921 (= lt!29124 (insertStrictlySorted!51 (toList!705 call!5481) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!13921 (= (+!86 call!5481 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!29126)))

(declare-fun b!67017 () Bool)

(declare-fun res!36234 () Bool)

(assert (=> b!67017 (=> (not res!36234) (not e!43941))))

(assert (=> b!67017 (= res!36234 (= (getValueByKey!131 (toList!705 lt!29126) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!67018 () Bool)

(assert (=> b!67018 (= e!43941 (contains!709 (toList!705 lt!29126) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!13921 res!36235) b!67017))

(assert (= (and b!67017 res!36234) b!67018))

(declare-fun m!61863 () Bool)

(assert (=> d!13921 m!61863))

(declare-fun m!61865 () Bool)

(assert (=> d!13921 m!61865))

(declare-fun m!61867 () Bool)

(assert (=> d!13921 m!61867))

(declare-fun m!61869 () Bool)

(assert (=> d!13921 m!61869))

(declare-fun m!61871 () Bool)

(assert (=> b!67017 m!61871))

(declare-fun m!61873 () Bool)

(assert (=> b!67018 m!61873))

(assert (=> b!66515 d!13921))

(assert (=> b!66515 d!13855))

(declare-fun d!13923 () Bool)

(declare-fun e!43942 () Bool)

(assert (=> d!13923 e!43942))

(declare-fun res!36237 () Bool)

(assert (=> d!13923 (=> (not res!36237) (not e!43942))))

(declare-fun lt!29130 () ListLongMap!1379)

(assert (=> d!13923 (= res!36237 (contains!705 lt!29130 (_1!1052 (tuple2!2083 lt!28712 lt!28708))))))

(declare-fun lt!29128 () List!1455)

(assert (=> d!13923 (= lt!29130 (ListLongMap!1380 lt!29128))))

(declare-fun lt!29129 () Unit!1824)

(declare-fun lt!29131 () Unit!1824)

(assert (=> d!13923 (= lt!29129 lt!29131)))

(assert (=> d!13923 (= (getValueByKey!131 lt!29128 (_1!1052 (tuple2!2083 lt!28712 lt!28708))) (Some!136 (_2!1052 (tuple2!2083 lt!28712 lt!28708))))))

(assert (=> d!13923 (= lt!29131 (lemmaContainsTupThenGetReturnValue!48 lt!29128 (_1!1052 (tuple2!2083 lt!28712 lt!28708)) (_2!1052 (tuple2!2083 lt!28712 lt!28708))))))

(assert (=> d!13923 (= lt!29128 (insertStrictlySorted!51 (toList!705 lt!28711) (_1!1052 (tuple2!2083 lt!28712 lt!28708)) (_2!1052 (tuple2!2083 lt!28712 lt!28708))))))

(assert (=> d!13923 (= (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)) lt!29130)))

(declare-fun b!67019 () Bool)

(declare-fun res!36236 () Bool)

(assert (=> b!67019 (=> (not res!36236) (not e!43942))))

(assert (=> b!67019 (= res!36236 (= (getValueByKey!131 (toList!705 lt!29130) (_1!1052 (tuple2!2083 lt!28712 lt!28708))) (Some!136 (_2!1052 (tuple2!2083 lt!28712 lt!28708)))))))

(declare-fun b!67020 () Bool)

(assert (=> b!67020 (= e!43942 (contains!709 (toList!705 lt!29130) (tuple2!2083 lt!28712 lt!28708)))))

(assert (= (and d!13923 res!36237) b!67019))

(assert (= (and b!67019 res!36236) b!67020))

(declare-fun m!61875 () Bool)

(assert (=> d!13923 m!61875))

(declare-fun m!61877 () Bool)

(assert (=> d!13923 m!61877))

(declare-fun m!61879 () Bool)

(assert (=> d!13923 m!61879))

(declare-fun m!61881 () Bool)

(assert (=> d!13923 m!61881))

(declare-fun m!61883 () Bool)

(assert (=> b!67019 m!61883))

(declare-fun m!61885 () Bool)

(assert (=> b!67020 m!61885))

(assert (=> b!66515 d!13923))

(declare-fun d!13925 () Bool)

(declare-fun e!43943 () Bool)

(assert (=> d!13925 e!43943))

(declare-fun res!36238 () Bool)

(assert (=> d!13925 (=> res!36238 e!43943)))

(declare-fun lt!29132 () Bool)

(assert (=> d!13925 (= res!36238 (not lt!29132))))

(declare-fun lt!29135 () Bool)

(assert (=> d!13925 (= lt!29132 lt!29135)))

(declare-fun lt!29134 () Unit!1824)

(declare-fun e!43944 () Unit!1824)

(assert (=> d!13925 (= lt!29134 e!43944)))

(declare-fun c!9292 () Bool)

(assert (=> d!13925 (= c!9292 lt!29135)))

(assert (=> d!13925 (= lt!29135 (containsKey!134 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713))))

(assert (=> d!13925 (= (contains!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)) lt!28713) lt!29132)))

(declare-fun b!67021 () Bool)

(declare-fun lt!29133 () Unit!1824)

(assert (=> b!67021 (= e!43944 lt!29133)))

(assert (=> b!67021 (= lt!29133 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713))))

(assert (=> b!67021 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713))))

(declare-fun b!67022 () Bool)

(declare-fun Unit!1852 () Unit!1824)

(assert (=> b!67022 (= e!43944 Unit!1852)))

(declare-fun b!67023 () Bool)

(assert (=> b!67023 (= e!43943 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713)))))

(assert (= (and d!13925 c!9292) b!67021))

(assert (= (and d!13925 (not c!9292)) b!67022))

(assert (= (and d!13925 (not res!36238)) b!67023))

(declare-fun m!61887 () Bool)

(assert (=> d!13925 m!61887))

(declare-fun m!61889 () Bool)

(assert (=> b!67021 m!61889))

(declare-fun m!61891 () Bool)

(assert (=> b!67021 m!61891))

(assert (=> b!67021 m!61891))

(declare-fun m!61893 () Bool)

(assert (=> b!67021 m!61893))

(assert (=> b!67023 m!61891))

(assert (=> b!67023 m!61891))

(assert (=> b!67023 m!61893))

(assert (=> b!66515 d!13925))

(declare-fun d!13927 () Bool)

(assert (=> d!13927 (not (contains!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)) lt!28713))))

(declare-fun lt!29138 () Unit!1824)

(declare-fun choose!381 (ListLongMap!1379 (_ BitVec 64) V!2913 (_ BitVec 64)) Unit!1824)

(assert (=> d!13927 (= lt!29138 (choose!381 lt!28711 lt!28712 lt!28708 lt!28713))))

(declare-fun e!43947 () Bool)

(assert (=> d!13927 e!43947))

(declare-fun res!36241 () Bool)

(assert (=> d!13927 (=> (not res!36241) (not e!43947))))

(assert (=> d!13927 (= res!36241 (not (contains!705 lt!28711 lt!28713)))))

(assert (=> d!13927 (= (addStillNotContains!23 lt!28711 lt!28712 lt!28708 lt!28713) lt!29138)))

(declare-fun b!67027 () Bool)

(assert (=> b!67027 (= e!43947 (not (= lt!28712 lt!28713)))))

(assert (= (and d!13927 res!36241) b!67027))

(assert (=> d!13927 m!61107))

(assert (=> d!13927 m!61107))

(assert (=> d!13927 m!61113))

(declare-fun m!61895 () Bool)

(assert (=> d!13927 m!61895))

(declare-fun m!61897 () Bool)

(assert (=> d!13927 m!61897))

(assert (=> b!66515 d!13927))

(declare-fun d!13929 () Bool)

(declare-fun res!36242 () Bool)

(declare-fun e!43948 () Bool)

(assert (=> d!13929 (=> res!36242 e!43948)))

(assert (=> d!13929 (= res!36242 (= (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13929 (= (arrayContainsKey!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000) e!43948)))

(declare-fun b!67028 () Bool)

(declare-fun e!43949 () Bool)

(assert (=> b!67028 (= e!43948 e!43949)))

(declare-fun res!36243 () Bool)

(assert (=> b!67028 (=> (not res!36243) (not e!43949))))

(assert (=> b!67028 (= res!36243 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!67029 () Bool)

(assert (=> b!67029 (= e!43949 (arrayContainsKey!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!13929 (not res!36242)) b!67028))

(assert (= (and b!67028 res!36243) b!67029))

(assert (=> d!13929 m!61431))

(assert (=> b!67029 m!60827))

(declare-fun m!61899 () Bool)

(assert (=> b!67029 m!61899))

(assert (=> bm!5543 d!13929))

(declare-fun d!13931 () Bool)

(declare-fun res!36244 () Bool)

(declare-fun e!43950 () Bool)

(assert (=> d!13931 (=> (not res!36244) (not e!43950))))

(assert (=> d!13931 (= res!36244 (simpleValid!48 (_2!1051 lt!28794)))))

(assert (=> d!13931 (= (valid!289 (_2!1051 lt!28794)) e!43950)))

(declare-fun b!67030 () Bool)

(declare-fun res!36245 () Bool)

(assert (=> b!67030 (=> (not res!36245) (not e!43950))))

(assert (=> b!67030 (= res!36245 (= (arrayCountValidKeys!0 (_keys!3786 (_2!1051 lt!28794)) #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))) (_size!384 (_2!1051 lt!28794))))))

(declare-fun b!67031 () Bool)

(declare-fun res!36246 () Bool)

(assert (=> b!67031 (=> (not res!36246) (not e!43950))))

(assert (=> b!67031 (= res!36246 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3786 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794))))))

(declare-fun b!67032 () Bool)

(assert (=> b!67032 (= e!43950 (arrayNoDuplicates!0 (_keys!3786 (_2!1051 lt!28794)) #b00000000000000000000000000000000 Nil!1451))))

(assert (= (and d!13931 res!36244) b!67030))

(assert (= (and b!67030 res!36245) b!67031))

(assert (= (and b!67031 res!36246) b!67032))

(declare-fun m!61901 () Bool)

(assert (=> d!13931 m!61901))

(declare-fun m!61903 () Bool)

(assert (=> b!67030 m!61903))

(declare-fun m!61905 () Bool)

(assert (=> b!67031 m!61905))

(declare-fun m!61907 () Bool)

(assert (=> b!67032 m!61907))

(assert (=> d!13787 d!13931))

(assert (=> d!13787 d!13783))

(declare-fun b!67035 () Bool)

(declare-fun e!43952 () Option!137)

(assert (=> b!67035 (= e!43952 (getValueByKey!131 (t!4929 (toList!705 lt!28719)) (_1!1052 lt!28520)))))

(declare-fun b!67033 () Bool)

(declare-fun e!43951 () Option!137)

(assert (=> b!67033 (= e!43951 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28719)))))))

(declare-fun d!13933 () Bool)

(declare-fun c!9293 () Bool)

(assert (=> d!13933 (= c!9293 (and ((_ is Cons!1451) (toList!705 lt!28719)) (= (_1!1052 (h!2035 (toList!705 lt!28719))) (_1!1052 lt!28520))))))

(assert (=> d!13933 (= (getValueByKey!131 (toList!705 lt!28719) (_1!1052 lt!28520)) e!43951)))

(declare-fun b!67036 () Bool)

(assert (=> b!67036 (= e!43952 None!135)))

(declare-fun b!67034 () Bool)

(assert (=> b!67034 (= e!43951 e!43952)))

(declare-fun c!9294 () Bool)

(assert (=> b!67034 (= c!9294 (and ((_ is Cons!1451) (toList!705 lt!28719)) (not (= (_1!1052 (h!2035 (toList!705 lt!28719))) (_1!1052 lt!28520)))))))

(assert (= (and d!13933 c!9293) b!67033))

(assert (= (and d!13933 (not c!9293)) b!67034))

(assert (= (and b!67034 c!9294) b!67035))

(assert (= (and b!67034 (not c!9294)) b!67036))

(declare-fun m!61909 () Bool)

(assert (=> b!67035 m!61909))

(assert (=> b!66516 d!13933))

(declare-fun d!13935 () Bool)

(declare-fun res!36247 () Bool)

(declare-fun e!43953 () Bool)

(assert (=> d!13935 (=> (not res!36247) (not e!43953))))

(assert (=> d!13935 (= res!36247 (simpleValid!48 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!13935 (= (valid!289 (v!2478 (underlying!250 thiss!992))) e!43953)))

(declare-fun b!67037 () Bool)

(declare-fun res!36248 () Bool)

(assert (=> b!67037 (=> (not res!36248) (not e!43953))))

(assert (=> b!67037 (= res!36248 (= (arrayCountValidKeys!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))) (_size!384 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!67038 () Bool)

(declare-fun res!36249 () Bool)

(assert (=> b!67038 (=> (not res!36249) (not e!43953))))

(assert (=> b!67038 (= res!36249 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!67039 () Bool)

(assert (=> b!67039 (= e!43953 (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 Nil!1451))))

(assert (= (and d!13935 res!36247) b!67037))

(assert (= (and b!67037 res!36248) b!67038))

(assert (= (and b!67038 res!36249) b!67039))

(declare-fun m!61911 () Bool)

(assert (=> d!13935 m!61911))

(declare-fun m!61913 () Bool)

(assert (=> b!67037 m!61913))

(declare-fun m!61915 () Bool)

(assert (=> b!67038 m!61915))

(declare-fun m!61917 () Bool)

(assert (=> b!67039 m!61917))

(assert (=> d!13745 d!13935))

(declare-fun b!67042 () Bool)

(declare-fun e!43955 () Option!137)

(assert (=> b!67042 (= e!43955 (getValueByKey!131 (t!4929 (toList!705 lt!28723)) (_1!1052 lt!28528)))))

(declare-fun b!67040 () Bool)

(declare-fun e!43954 () Option!137)

(assert (=> b!67040 (= e!43954 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28723)))))))

(declare-fun d!13937 () Bool)

(declare-fun c!9295 () Bool)

(assert (=> d!13937 (= c!9295 (and ((_ is Cons!1451) (toList!705 lt!28723)) (= (_1!1052 (h!2035 (toList!705 lt!28723))) (_1!1052 lt!28528))))))

(assert (=> d!13937 (= (getValueByKey!131 (toList!705 lt!28723) (_1!1052 lt!28528)) e!43954)))

(declare-fun b!67043 () Bool)

(assert (=> b!67043 (= e!43955 None!135)))

(declare-fun b!67041 () Bool)

(assert (=> b!67041 (= e!43954 e!43955)))

(declare-fun c!9296 () Bool)

(assert (=> b!67041 (= c!9296 (and ((_ is Cons!1451) (toList!705 lt!28723)) (not (= (_1!1052 (h!2035 (toList!705 lt!28723))) (_1!1052 lt!28528)))))))

(assert (= (and d!13937 c!9295) b!67040))

(assert (= (and d!13937 (not c!9295)) b!67041))

(assert (= (and b!67041 c!9296) b!67042))

(assert (= (and b!67041 (not c!9296)) b!67043))

(declare-fun m!61919 () Bool)

(assert (=> b!67042 m!61919))

(assert (=> b!66518 d!13937))

(declare-fun d!13939 () Bool)

(assert (=> d!13939 (= (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (and (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66408 d!13939))

(declare-fun d!13941 () Bool)

(assert (=> d!13941 (= (get!1126 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) from!355) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66381 d!13941))

(declare-fun d!13943 () Bool)

(declare-fun e!43956 () Bool)

(assert (=> d!13943 e!43956))

(declare-fun res!36250 () Bool)

(assert (=> d!13943 (=> res!36250 e!43956)))

(declare-fun lt!29139 () Bool)

(assert (=> d!13943 (= res!36250 (not lt!29139))))

(declare-fun lt!29142 () Bool)

(assert (=> d!13943 (= lt!29139 lt!29142)))

(declare-fun lt!29141 () Unit!1824)

(declare-fun e!43957 () Unit!1824)

(assert (=> d!13943 (= lt!29141 e!43957)))

(declare-fun c!9297 () Bool)

(assert (=> d!13943 (= c!9297 lt!29142)))

(assert (=> d!13943 (= lt!29142 (containsKey!134 (toList!705 lt!28719) (_1!1052 lt!28520)))))

(assert (=> d!13943 (= (contains!705 lt!28719 (_1!1052 lt!28520)) lt!29139)))

(declare-fun b!67044 () Bool)

(declare-fun lt!29140 () Unit!1824)

(assert (=> b!67044 (= e!43957 lt!29140)))

(assert (=> b!67044 (= lt!29140 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28719) (_1!1052 lt!28520)))))

(assert (=> b!67044 (isDefined!83 (getValueByKey!131 (toList!705 lt!28719) (_1!1052 lt!28520)))))

(declare-fun b!67045 () Bool)

(declare-fun Unit!1853 () Unit!1824)

(assert (=> b!67045 (= e!43957 Unit!1853)))

(declare-fun b!67046 () Bool)

(assert (=> b!67046 (= e!43956 (isDefined!83 (getValueByKey!131 (toList!705 lt!28719) (_1!1052 lt!28520))))))

(assert (= (and d!13943 c!9297) b!67044))

(assert (= (and d!13943 (not c!9297)) b!67045))

(assert (= (and d!13943 (not res!36250)) b!67046))

(declare-fun m!61921 () Bool)

(assert (=> d!13943 m!61921))

(declare-fun m!61923 () Bool)

(assert (=> b!67044 m!61923))

(assert (=> b!67044 m!61133))

(assert (=> b!67044 m!61133))

(declare-fun m!61925 () Bool)

(assert (=> b!67044 m!61925))

(assert (=> b!67046 m!61133))

(assert (=> b!67046 m!61133))

(assert (=> b!67046 m!61925))

(assert (=> d!13773 d!13943))

(declare-fun b!67049 () Bool)

(declare-fun e!43959 () Option!137)

(assert (=> b!67049 (= e!43959 (getValueByKey!131 (t!4929 lt!28717) (_1!1052 lt!28520)))))

(declare-fun b!67047 () Bool)

(declare-fun e!43958 () Option!137)

(assert (=> b!67047 (= e!43958 (Some!136 (_2!1052 (h!2035 lt!28717))))))

(declare-fun d!13945 () Bool)

(declare-fun c!9298 () Bool)

(assert (=> d!13945 (= c!9298 (and ((_ is Cons!1451) lt!28717) (= (_1!1052 (h!2035 lt!28717)) (_1!1052 lt!28520))))))

(assert (=> d!13945 (= (getValueByKey!131 lt!28717 (_1!1052 lt!28520)) e!43958)))

(declare-fun b!67050 () Bool)

(assert (=> b!67050 (= e!43959 None!135)))

(declare-fun b!67048 () Bool)

(assert (=> b!67048 (= e!43958 e!43959)))

(declare-fun c!9299 () Bool)

(assert (=> b!67048 (= c!9299 (and ((_ is Cons!1451) lt!28717) (not (= (_1!1052 (h!2035 lt!28717)) (_1!1052 lt!28520)))))))

(assert (= (and d!13945 c!9298) b!67047))

(assert (= (and d!13945 (not c!9298)) b!67048))

(assert (= (and b!67048 c!9299) b!67049))

(assert (= (and b!67048 (not c!9299)) b!67050))

(declare-fun m!61927 () Bool)

(assert (=> b!67049 m!61927))

(assert (=> d!13773 d!13945))

(declare-fun d!13947 () Bool)

(assert (=> d!13947 (= (getValueByKey!131 lt!28717 (_1!1052 lt!28520)) (Some!136 (_2!1052 lt!28520)))))

(declare-fun lt!29143 () Unit!1824)

(assert (=> d!13947 (= lt!29143 (choose!380 lt!28717 (_1!1052 lt!28520) (_2!1052 lt!28520)))))

(declare-fun e!43960 () Bool)

(assert (=> d!13947 e!43960))

(declare-fun res!36251 () Bool)

(assert (=> d!13947 (=> (not res!36251) (not e!43960))))

(assert (=> d!13947 (= res!36251 (isStrictlySorted!276 lt!28717))))

(assert (=> d!13947 (= (lemmaContainsTupThenGetReturnValue!48 lt!28717 (_1!1052 lt!28520) (_2!1052 lt!28520)) lt!29143)))

(declare-fun b!67051 () Bool)

(declare-fun res!36252 () Bool)

(assert (=> b!67051 (=> (not res!36252) (not e!43960))))

(assert (=> b!67051 (= res!36252 (containsKey!134 lt!28717 (_1!1052 lt!28520)))))

(declare-fun b!67052 () Bool)

(assert (=> b!67052 (= e!43960 (contains!709 lt!28717 (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(assert (= (and d!13947 res!36251) b!67051))

(assert (= (and b!67051 res!36252) b!67052))

(assert (=> d!13947 m!61127))

(declare-fun m!61929 () Bool)

(assert (=> d!13947 m!61929))

(declare-fun m!61931 () Bool)

(assert (=> d!13947 m!61931))

(declare-fun m!61933 () Bool)

(assert (=> b!67051 m!61933))

(declare-fun m!61935 () Bool)

(assert (=> b!67052 m!61935))

(assert (=> d!13773 d!13947))

(declare-fun b!67053 () Bool)

(declare-fun e!43965 () List!1455)

(declare-fun call!5613 () List!1455)

(assert (=> b!67053 (= e!43965 call!5613)))

(declare-fun b!67054 () Bool)

(declare-fun e!43961 () List!1455)

(declare-fun e!43963 () List!1455)

(assert (=> b!67054 (= e!43961 e!43963)))

(declare-fun c!9302 () Bool)

(assert (=> b!67054 (= c!9302 (and ((_ is Cons!1451) (toList!705 lt!28527)) (= (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 lt!28520))))))

(declare-fun b!67055 () Bool)

(declare-fun res!36253 () Bool)

(declare-fun e!43964 () Bool)

(assert (=> b!67055 (=> (not res!36253) (not e!43964))))

(declare-fun lt!29144 () List!1455)

(assert (=> b!67055 (= res!36253 (containsKey!134 lt!29144 (_1!1052 lt!28520)))))

(declare-fun bm!5610 () Bool)

(declare-fun call!5615 () List!1455)

(assert (=> bm!5610 (= call!5613 call!5615)))

(declare-fun b!67056 () Bool)

(declare-fun call!5614 () List!1455)

(assert (=> b!67056 (= e!43961 call!5614)))

(declare-fun b!67057 () Bool)

(declare-fun c!9303 () Bool)

(assert (=> b!67057 (= c!9303 (and ((_ is Cons!1451) (toList!705 lt!28527)) (bvsgt (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 lt!28520))))))

(assert (=> b!67057 (= e!43963 e!43965)))

(declare-fun e!43962 () List!1455)

(declare-fun b!67058 () Bool)

(assert (=> b!67058 (= e!43962 (ite c!9302 (t!4929 (toList!705 lt!28527)) (ite c!9303 (Cons!1451 (h!2035 (toList!705 lt!28527)) (t!4929 (toList!705 lt!28527))) Nil!1452)))))

(declare-fun d!13949 () Bool)

(assert (=> d!13949 e!43964))

(declare-fun res!36254 () Bool)

(assert (=> d!13949 (=> (not res!36254) (not e!43964))))

(assert (=> d!13949 (= res!36254 (isStrictlySorted!276 lt!29144))))

(assert (=> d!13949 (= lt!29144 e!43961)))

(declare-fun c!9300 () Bool)

(assert (=> d!13949 (= c!9300 (and ((_ is Cons!1451) (toList!705 lt!28527)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 lt!28520))))))

(assert (=> d!13949 (isStrictlySorted!276 (toList!705 lt!28527))))

(assert (=> d!13949 (= (insertStrictlySorted!51 (toList!705 lt!28527) (_1!1052 lt!28520) (_2!1052 lt!28520)) lt!29144)))

(declare-fun b!67059 () Bool)

(assert (=> b!67059 (= e!43962 (insertStrictlySorted!51 (t!4929 (toList!705 lt!28527)) (_1!1052 lt!28520) (_2!1052 lt!28520)))))

(declare-fun b!67060 () Bool)

(assert (=> b!67060 (= e!43963 call!5615)))

(declare-fun bm!5611 () Bool)

(assert (=> bm!5611 (= call!5615 call!5614)))

(declare-fun b!67061 () Bool)

(assert (=> b!67061 (= e!43965 call!5613)))

(declare-fun bm!5612 () Bool)

(assert (=> bm!5612 (= call!5614 ($colon$colon!62 e!43962 (ite c!9300 (h!2035 (toList!705 lt!28527)) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520)))))))

(declare-fun c!9301 () Bool)

(assert (=> bm!5612 (= c!9301 c!9300)))

(declare-fun b!67062 () Bool)

(assert (=> b!67062 (= e!43964 (contains!709 lt!29144 (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(assert (= (and d!13949 c!9300) b!67056))

(assert (= (and d!13949 (not c!9300)) b!67054))

(assert (= (and b!67054 c!9302) b!67060))

(assert (= (and b!67054 (not c!9302)) b!67057))

(assert (= (and b!67057 c!9303) b!67053))

(assert (= (and b!67057 (not c!9303)) b!67061))

(assert (= (or b!67053 b!67061) bm!5610))

(assert (= (or b!67060 bm!5610) bm!5611))

(assert (= (or b!67056 bm!5611) bm!5612))

(assert (= (and bm!5612 c!9301) b!67059))

(assert (= (and bm!5612 (not c!9301)) b!67058))

(assert (= (and d!13949 res!36254) b!67055))

(assert (= (and b!67055 res!36253) b!67062))

(declare-fun m!61937 () Bool)

(assert (=> bm!5612 m!61937))

(declare-fun m!61939 () Bool)

(assert (=> b!67059 m!61939))

(declare-fun m!61941 () Bool)

(assert (=> b!67055 m!61941))

(declare-fun m!61943 () Bool)

(assert (=> b!67062 m!61943))

(declare-fun m!61945 () Bool)

(assert (=> d!13949 m!61945))

(assert (=> d!13949 m!61843))

(assert (=> d!13773 d!13949))

(declare-fun d!13951 () Bool)

(declare-fun e!43966 () Bool)

(assert (=> d!13951 e!43966))

(declare-fun res!36255 () Bool)

(assert (=> d!13951 (=> res!36255 e!43966)))

(declare-fun lt!29145 () Bool)

(assert (=> d!13951 (= res!36255 (not lt!29145))))

(declare-fun lt!29148 () Bool)

(assert (=> d!13951 (= lt!29145 lt!29148)))

(declare-fun lt!29147 () Unit!1824)

(declare-fun e!43967 () Unit!1824)

(assert (=> d!13951 (= lt!29147 e!43967)))

(declare-fun c!9304 () Bool)

(assert (=> d!13951 (= c!9304 lt!29148)))

(assert (=> d!13951 (= lt!29148 (containsKey!134 (toList!705 lt!28723) (_1!1052 lt!28528)))))

(assert (=> d!13951 (= (contains!705 lt!28723 (_1!1052 lt!28528)) lt!29145)))

(declare-fun b!67063 () Bool)

(declare-fun lt!29146 () Unit!1824)

(assert (=> b!67063 (= e!43967 lt!29146)))

(assert (=> b!67063 (= lt!29146 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28723) (_1!1052 lt!28528)))))

(assert (=> b!67063 (isDefined!83 (getValueByKey!131 (toList!705 lt!28723) (_1!1052 lt!28528)))))

(declare-fun b!67064 () Bool)

(declare-fun Unit!1854 () Unit!1824)

(assert (=> b!67064 (= e!43967 Unit!1854)))

(declare-fun b!67065 () Bool)

(assert (=> b!67065 (= e!43966 (isDefined!83 (getValueByKey!131 (toList!705 lt!28723) (_1!1052 lt!28528))))))

(assert (= (and d!13951 c!9304) b!67063))

(assert (= (and d!13951 (not c!9304)) b!67064))

(assert (= (and d!13951 (not res!36255)) b!67065))

(declare-fun m!61947 () Bool)

(assert (=> d!13951 m!61947))

(declare-fun m!61949 () Bool)

(assert (=> b!67063 m!61949))

(assert (=> b!67063 m!61145))

(assert (=> b!67063 m!61145))

(declare-fun m!61951 () Bool)

(assert (=> b!67063 m!61951))

(assert (=> b!67065 m!61145))

(assert (=> b!67065 m!61145))

(assert (=> b!67065 m!61951))

(assert (=> d!13775 d!13951))

(declare-fun b!67068 () Bool)

(declare-fun e!43969 () Option!137)

(assert (=> b!67068 (= e!43969 (getValueByKey!131 (t!4929 lt!28721) (_1!1052 lt!28528)))))

(declare-fun b!67066 () Bool)

(declare-fun e!43968 () Option!137)

(assert (=> b!67066 (= e!43968 (Some!136 (_2!1052 (h!2035 lt!28721))))))

(declare-fun d!13953 () Bool)

(declare-fun c!9305 () Bool)

(assert (=> d!13953 (= c!9305 (and ((_ is Cons!1451) lt!28721) (= (_1!1052 (h!2035 lt!28721)) (_1!1052 lt!28528))))))

(assert (=> d!13953 (= (getValueByKey!131 lt!28721 (_1!1052 lt!28528)) e!43968)))

(declare-fun b!67069 () Bool)

(assert (=> b!67069 (= e!43969 None!135)))

(declare-fun b!67067 () Bool)

(assert (=> b!67067 (= e!43968 e!43969)))

(declare-fun c!9306 () Bool)

(assert (=> b!67067 (= c!9306 (and ((_ is Cons!1451) lt!28721) (not (= (_1!1052 (h!2035 lt!28721)) (_1!1052 lt!28528)))))))

(assert (= (and d!13953 c!9305) b!67066))

(assert (= (and d!13953 (not c!9305)) b!67067))

(assert (= (and b!67067 c!9306) b!67068))

(assert (= (and b!67067 (not c!9306)) b!67069))

(declare-fun m!61953 () Bool)

(assert (=> b!67068 m!61953))

(assert (=> d!13775 d!13953))

(declare-fun d!13955 () Bool)

(assert (=> d!13955 (= (getValueByKey!131 lt!28721 (_1!1052 lt!28528)) (Some!136 (_2!1052 lt!28528)))))

(declare-fun lt!29149 () Unit!1824)

(assert (=> d!13955 (= lt!29149 (choose!380 lt!28721 (_1!1052 lt!28528) (_2!1052 lt!28528)))))

(declare-fun e!43970 () Bool)

(assert (=> d!13955 e!43970))

(declare-fun res!36256 () Bool)

(assert (=> d!13955 (=> (not res!36256) (not e!43970))))

(assert (=> d!13955 (= res!36256 (isStrictlySorted!276 lt!28721))))

(assert (=> d!13955 (= (lemmaContainsTupThenGetReturnValue!48 lt!28721 (_1!1052 lt!28528) (_2!1052 lt!28528)) lt!29149)))

(declare-fun b!67070 () Bool)

(declare-fun res!36257 () Bool)

(assert (=> b!67070 (=> (not res!36257) (not e!43970))))

(assert (=> b!67070 (= res!36257 (containsKey!134 lt!28721 (_1!1052 lt!28528)))))

(declare-fun b!67071 () Bool)

(assert (=> b!67071 (= e!43970 (contains!709 lt!28721 (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(assert (= (and d!13955 res!36256) b!67070))

(assert (= (and b!67070 res!36257) b!67071))

(assert (=> d!13955 m!61139))

(declare-fun m!61955 () Bool)

(assert (=> d!13955 m!61955))

(declare-fun m!61957 () Bool)

(assert (=> d!13955 m!61957))

(declare-fun m!61959 () Bool)

(assert (=> b!67070 m!61959))

(declare-fun m!61961 () Bool)

(assert (=> b!67071 m!61961))

(assert (=> d!13775 d!13955))

(declare-fun b!67072 () Bool)

(declare-fun e!43975 () List!1455)

(declare-fun call!5616 () List!1455)

(assert (=> b!67072 (= e!43975 call!5616)))

(declare-fun b!67073 () Bool)

(declare-fun e!43971 () List!1455)

(declare-fun e!43973 () List!1455)

(assert (=> b!67073 (= e!43971 e!43973)))

(declare-fun c!9309 () Bool)

(assert (=> b!67073 (= c!9309 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 lt!28520))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 lt!28520)))) (_1!1052 lt!28528))))))

(declare-fun b!67074 () Bool)

(declare-fun res!36258 () Bool)

(declare-fun e!43974 () Bool)

(assert (=> b!67074 (=> (not res!36258) (not e!43974))))

(declare-fun lt!29150 () List!1455)

(assert (=> b!67074 (= res!36258 (containsKey!134 lt!29150 (_1!1052 lt!28528)))))

(declare-fun bm!5613 () Bool)

(declare-fun call!5618 () List!1455)

(assert (=> bm!5613 (= call!5616 call!5618)))

(declare-fun b!67075 () Bool)

(declare-fun call!5617 () List!1455)

(assert (=> b!67075 (= e!43971 call!5617)))

(declare-fun c!9310 () Bool)

(declare-fun b!67076 () Bool)

(assert (=> b!67076 (= c!9310 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 lt!28520))) (bvsgt (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 lt!28520)))) (_1!1052 lt!28528))))))

(assert (=> b!67076 (= e!43973 e!43975)))

(declare-fun e!43972 () List!1455)

(declare-fun b!67077 () Bool)

(assert (=> b!67077 (= e!43972 (ite c!9309 (t!4929 (toList!705 (+!86 lt!28527 lt!28520))) (ite c!9310 (Cons!1451 (h!2035 (toList!705 (+!86 lt!28527 lt!28520))) (t!4929 (toList!705 (+!86 lt!28527 lt!28520)))) Nil!1452)))))

(declare-fun d!13957 () Bool)

(assert (=> d!13957 e!43974))

(declare-fun res!36259 () Bool)

(assert (=> d!13957 (=> (not res!36259) (not e!43974))))

(assert (=> d!13957 (= res!36259 (isStrictlySorted!276 lt!29150))))

(assert (=> d!13957 (= lt!29150 e!43971)))

(declare-fun c!9307 () Bool)

(assert (=> d!13957 (= c!9307 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 lt!28520))) (bvslt (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 lt!28520)))) (_1!1052 lt!28528))))))

(assert (=> d!13957 (isStrictlySorted!276 (toList!705 (+!86 lt!28527 lt!28520)))))

(assert (=> d!13957 (= (insertStrictlySorted!51 (toList!705 (+!86 lt!28527 lt!28520)) (_1!1052 lt!28528) (_2!1052 lt!28528)) lt!29150)))

(declare-fun b!67078 () Bool)

(assert (=> b!67078 (= e!43972 (insertStrictlySorted!51 (t!4929 (toList!705 (+!86 lt!28527 lt!28520))) (_1!1052 lt!28528) (_2!1052 lt!28528)))))

(declare-fun b!67079 () Bool)

(assert (=> b!67079 (= e!43973 call!5618)))

(declare-fun bm!5614 () Bool)

(assert (=> bm!5614 (= call!5618 call!5617)))

(declare-fun b!67080 () Bool)

(assert (=> b!67080 (= e!43975 call!5616)))

(declare-fun bm!5615 () Bool)

(assert (=> bm!5615 (= call!5617 ($colon$colon!62 e!43972 (ite c!9307 (h!2035 (toList!705 (+!86 lt!28527 lt!28520))) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528)))))))

(declare-fun c!9308 () Bool)

(assert (=> bm!5615 (= c!9308 c!9307)))

(declare-fun b!67081 () Bool)

(assert (=> b!67081 (= e!43974 (contains!709 lt!29150 (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(assert (= (and d!13957 c!9307) b!67075))

(assert (= (and d!13957 (not c!9307)) b!67073))

(assert (= (and b!67073 c!9309) b!67079))

(assert (= (and b!67073 (not c!9309)) b!67076))

(assert (= (and b!67076 c!9310) b!67072))

(assert (= (and b!67076 (not c!9310)) b!67080))

(assert (= (or b!67072 b!67080) bm!5613))

(assert (= (or b!67079 bm!5613) bm!5614))

(assert (= (or b!67075 bm!5614) bm!5615))

(assert (= (and bm!5615 c!9308) b!67078))

(assert (= (and bm!5615 (not c!9308)) b!67077))

(assert (= (and d!13957 res!36259) b!67074))

(assert (= (and b!67074 res!36258) b!67081))

(declare-fun m!61963 () Bool)

(assert (=> bm!5615 m!61963))

(declare-fun m!61965 () Bool)

(assert (=> b!67078 m!61965))

(declare-fun m!61967 () Bool)

(assert (=> b!67074 m!61967))

(declare-fun m!61969 () Bool)

(assert (=> b!67081 m!61969))

(declare-fun m!61971 () Bool)

(assert (=> d!13957 m!61971))

(declare-fun m!61973 () Bool)

(assert (=> d!13957 m!61973))

(assert (=> d!13775 d!13957))

(declare-fun b!67082 () Bool)

(declare-fun e!43982 () ListLongMap!1379)

(declare-fun call!5619 () ListLongMap!1379)

(assert (=> b!67082 (= e!43982 call!5619)))

(declare-fun bm!5616 () Bool)

(assert (=> bm!5616 (= call!5619 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!67083 () Bool)

(declare-fun e!43976 () Bool)

(declare-fun e!43979 () Bool)

(assert (=> b!67083 (= e!43976 e!43979)))

(declare-fun c!9313 () Bool)

(declare-fun e!43981 () Bool)

(assert (=> b!67083 (= c!9313 e!43981)))

(declare-fun res!36262 () Bool)

(assert (=> b!67083 (=> (not res!36262) (not e!43981))))

(assert (=> b!67083 (= res!36262 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67084 () Bool)

(declare-fun e!43977 () Bool)

(assert (=> b!67084 (= e!43979 e!43977)))

(assert (=> b!67084 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun res!36261 () Bool)

(declare-fun lt!29151 () ListLongMap!1379)

(assert (=> b!67084 (= res!36261 (contains!705 lt!29151 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!67084 (=> (not res!36261) (not e!43977))))

(declare-fun b!67085 () Bool)

(assert (=> b!67085 (= e!43981 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!67085 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!67086 () Bool)

(declare-fun e!43978 () ListLongMap!1379)

(assert (=> b!67086 (= e!43978 (ListLongMap!1380 Nil!1452))))

(declare-fun b!67087 () Bool)

(declare-fun e!43980 () Bool)

(assert (=> b!67087 (= e!43980 (= lt!29151 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67088 () Bool)

(assert (=> b!67088 (= e!43980 (isEmpty!313 lt!29151))))

(declare-fun b!67090 () Bool)

(assert (=> b!67090 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!67090 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2062 (_values!2129 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!67090 (= e!43977 (= (apply!72 lt!29151 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!67091 () Bool)

(declare-fun res!36260 () Bool)

(assert (=> b!67091 (=> (not res!36260) (not e!43976))))

(assert (=> b!67091 (= res!36260 (not (contains!705 lt!29151 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67092 () Bool)

(assert (=> b!67092 (= e!43978 e!43982)))

(declare-fun c!9314 () Bool)

(assert (=> b!67092 (= c!9314 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!67093 () Bool)

(declare-fun lt!29153 () Unit!1824)

(declare-fun lt!29154 () Unit!1824)

(assert (=> b!67093 (= lt!29153 lt!29154)))

(declare-fun lt!29157 () (_ BitVec 64))

(declare-fun lt!29152 () V!2913)

(declare-fun lt!29155 () ListLongMap!1379)

(declare-fun lt!29156 () (_ BitVec 64))

(assert (=> b!67093 (not (contains!705 (+!86 lt!29155 (tuple2!2083 lt!29156 lt!29152)) lt!29157))))

(assert (=> b!67093 (= lt!29154 (addStillNotContains!23 lt!29155 lt!29156 lt!29152 lt!29157))))

(assert (=> b!67093 (= lt!29157 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67093 (= lt!29152 (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67093 (= lt!29156 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!67093 (= lt!29155 call!5619)))

(assert (=> b!67093 (= e!43982 (+!86 call!5619 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!13959 () Bool)

(assert (=> d!13959 e!43976))

(declare-fun res!36263 () Bool)

(assert (=> d!13959 (=> (not res!36263) (not e!43976))))

(assert (=> d!13959 (= res!36263 (not (contains!705 lt!29151 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13959 (= lt!29151 e!43978)))

(declare-fun c!9312 () Bool)

(assert (=> d!13959 (= c!9312 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!13959 (validMask!0 (mask!6081 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!13959 (= (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))) lt!29151)))

(declare-fun b!67089 () Bool)

(assert (=> b!67089 (= e!43979 e!43980)))

(declare-fun c!9311 () Bool)

(assert (=> b!67089 (= c!9311 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!13959 c!9312) b!67086))

(assert (= (and d!13959 (not c!9312)) b!67092))

(assert (= (and b!67092 c!9314) b!67093))

(assert (= (and b!67092 (not c!9314)) b!67082))

(assert (= (or b!67093 b!67082) bm!5616))

(assert (= (and d!13959 res!36263) b!67091))

(assert (= (and b!67091 res!36260) b!67083))

(assert (= (and b!67083 res!36262) b!67085))

(assert (= (and b!67083 c!9313) b!67084))

(assert (= (and b!67083 (not c!9313)) b!67089))

(assert (= (and b!67084 res!36261) b!67090))

(assert (= (and b!67089 c!9311) b!67087))

(assert (= (and b!67089 (not c!9311)) b!67088))

(declare-fun b_lambda!2999 () Bool)

(assert (=> (not b_lambda!2999) (not b!67090)))

(assert (=> b!67090 t!4925))

(declare-fun b_and!4141 () Bool)

(assert (= b_and!4137 (and (=> t!4925 result!2567) b_and!4141)))

(assert (=> b!67090 t!4927))

(declare-fun b_and!4143 () Bool)

(assert (= b_and!4139 (and (=> t!4927 result!2571) b_and!4143)))

(declare-fun b_lambda!3001 () Bool)

(assert (=> (not b_lambda!3001) (not b!67093)))

(assert (=> b!67093 t!4925))

(declare-fun b_and!4145 () Bool)

(assert (= b_and!4141 (and (=> t!4925 result!2567) b_and!4145)))

(assert (=> b!67093 t!4927))

(declare-fun b_and!4147 () Bool)

(assert (= b_and!4143 (and (=> t!4927 result!2571) b_and!4147)))

(declare-fun m!61975 () Bool)

(assert (=> b!67087 m!61975))

(declare-fun m!61977 () Bool)

(assert (=> d!13959 m!61977))

(assert (=> d!13959 m!60863))

(assert (=> b!67085 m!61331))

(assert (=> b!67085 m!61331))

(declare-fun m!61979 () Bool)

(assert (=> b!67085 m!61979))

(assert (=> b!67090 m!61331))

(declare-fun m!61981 () Bool)

(assert (=> b!67090 m!61981))

(declare-fun m!61983 () Bool)

(assert (=> b!67090 m!61983))

(assert (=> b!67090 m!60879))

(declare-fun m!61985 () Bool)

(assert (=> b!67090 m!61985))

(assert (=> b!67090 m!61983))

(assert (=> b!67090 m!60879))

(assert (=> b!67090 m!61331))

(assert (=> b!67084 m!61331))

(assert (=> b!67084 m!61331))

(declare-fun m!61987 () Bool)

(assert (=> b!67084 m!61987))

(declare-fun m!61989 () Bool)

(assert (=> b!67091 m!61989))

(assert (=> bm!5616 m!61975))

(declare-fun m!61991 () Bool)

(assert (=> b!67088 m!61991))

(assert (=> b!67092 m!61331))

(assert (=> b!67092 m!61331))

(assert (=> b!67092 m!61979))

(declare-fun m!61993 () Bool)

(assert (=> b!67093 m!61993))

(assert (=> b!67093 m!60879))

(assert (=> b!67093 m!61331))

(declare-fun m!61995 () Bool)

(assert (=> b!67093 m!61995))

(declare-fun m!61997 () Bool)

(assert (=> b!67093 m!61997))

(assert (=> b!67093 m!61983))

(assert (=> b!67093 m!60879))

(assert (=> b!67093 m!61985))

(assert (=> b!67093 m!61993))

(declare-fun m!61999 () Bool)

(assert (=> b!67093 m!61999))

(assert (=> b!67093 m!61983))

(assert (=> b!66509 d!13959))

(declare-fun b!67096 () Bool)

(declare-fun e!43984 () Option!137)

(assert (=> b!67096 (= e!43984 (getValueByKey!131 (t!4929 (toList!705 lt!28691)) (_1!1052 lt!28528)))))

(declare-fun b!67094 () Bool)

(declare-fun e!43983 () Option!137)

(assert (=> b!67094 (= e!43983 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28691)))))))

(declare-fun d!13961 () Bool)

(declare-fun c!9315 () Bool)

(assert (=> d!13961 (= c!9315 (and ((_ is Cons!1451) (toList!705 lt!28691)) (= (_1!1052 (h!2035 (toList!705 lt!28691))) (_1!1052 lt!28528))))))

(assert (=> d!13961 (= (getValueByKey!131 (toList!705 lt!28691) (_1!1052 lt!28528)) e!43983)))

(declare-fun b!67097 () Bool)

(assert (=> b!67097 (= e!43984 None!135)))

(declare-fun b!67095 () Bool)

(assert (=> b!67095 (= e!43983 e!43984)))

(declare-fun c!9316 () Bool)

(assert (=> b!67095 (= c!9316 (and ((_ is Cons!1451) (toList!705 lt!28691)) (not (= (_1!1052 (h!2035 (toList!705 lt!28691))) (_1!1052 lt!28528)))))))

(assert (= (and d!13961 c!9315) b!67094))

(assert (= (and d!13961 (not c!9315)) b!67095))

(assert (= (and b!67095 c!9316) b!67096))

(assert (= (and b!67095 (not c!9316)) b!67097))

(declare-fun m!62001 () Bool)

(assert (=> b!67096 m!62001))

(assert (=> b!66478 d!13961))

(declare-fun d!13963 () Bool)

(declare-fun e!43987 () Bool)

(assert (=> d!13963 e!43987))

(declare-fun res!36266 () Bool)

(assert (=> d!13963 (=> (not res!36266) (not e!43987))))

(assert (=> d!13963 (= res!36266 (and (bvsge (index!3037 lt!28796) #b00000000000000000000000000000000) (bvslt (index!3037 lt!28796) (size!2061 (_keys!3786 newMap!16)))))))

(declare-fun lt!29160 () Unit!1824)

(declare-fun choose!382 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) Int) Unit!1824)

(assert (=> d!13963 (= lt!29160 (choose!382 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3037 lt!28796) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13963 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13963 (= (lemmaValidKeyInArrayIsInListMap!81 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3037 lt!28796) (defaultEntry!2146 newMap!16)) lt!29160)))

(declare-fun b!67100 () Bool)

(assert (=> b!67100 (= e!43987 (contains!705 (getCurrentListMap!403 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))))))

(assert (= (and d!13963 res!36266) b!67100))

(declare-fun m!62003 () Bool)

(assert (=> d!13963 m!62003))

(assert (=> d!13963 m!61297))

(assert (=> b!67100 m!61179))

(assert (=> b!67100 m!61183))

(assert (=> b!67100 m!61179))

(assert (=> b!67100 m!61183))

(declare-fun m!62005 () Bool)

(assert (=> b!67100 m!62005))

(assert (=> b!66624 d!13963))

(declare-fun d!13965 () Bool)

(declare-fun e!43990 () Bool)

(assert (=> d!13965 e!43990))

(declare-fun res!36269 () Bool)

(assert (=> d!13965 (=> (not res!36269) (not e!43990))))

(assert (=> d!13965 (= res!36269 (and (bvsge (index!3037 lt!28796) #b00000000000000000000000000000000) (bvslt (index!3037 lt!28796) (size!2062 (_values!2129 newMap!16)))))))

(declare-fun lt!29163 () Unit!1824)

(declare-fun choose!383 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) (_ BitVec 64) V!2913 Int) Unit!1824)

(assert (=> d!13965 (= lt!29163 (choose!383 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3037 lt!28796) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 (defaultEntry!2146 newMap!16)))))

(assert (=> d!13965 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13965 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3037 lt!28796) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 (defaultEntry!2146 newMap!16)) lt!29163)))

(declare-fun b!67103 () Bool)

(assert (=> b!67103 (= e!43990 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (getCurrentListMap!403 (_keys!3786 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))))))

(assert (= (and d!13965 res!36269) b!67103))

(assert (=> d!13965 m!60827))

(declare-fun m!62007 () Bool)

(assert (=> d!13965 m!62007))

(assert (=> d!13965 m!61297))

(assert (=> b!67103 m!61017))

(assert (=> b!67103 m!61017))

(assert (=> b!67103 m!61275))

(assert (=> b!67103 m!61193))

(declare-fun m!62009 () Bool)

(assert (=> b!67103 m!62009))

(assert (=> b!66624 d!13965))

(declare-fun d!13967 () Bool)

(declare-fun e!43991 () Bool)

(assert (=> d!13967 e!43991))

(declare-fun res!36270 () Bool)

(assert (=> d!13967 (=> res!36270 e!43991)))

(declare-fun lt!29164 () Bool)

(assert (=> d!13967 (= res!36270 (not lt!29164))))

(declare-fun lt!29167 () Bool)

(assert (=> d!13967 (= lt!29164 lt!29167)))

(declare-fun lt!29166 () Unit!1824)

(declare-fun e!43992 () Unit!1824)

(assert (=> d!13967 (= lt!29166 e!43992)))

(declare-fun c!9317 () Bool)

(assert (=> d!13967 (= c!9317 lt!29167)))

(assert (=> d!13967 (= lt!29167 (containsKey!134 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!13967 (= (contains!705 call!5548 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29164)))

(declare-fun b!67104 () Bool)

(declare-fun lt!29165 () Unit!1824)

(assert (=> b!67104 (= e!43992 lt!29165)))

(assert (=> b!67104 (= lt!29165 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!67104 (isDefined!83 (getValueByKey!131 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67105 () Bool)

(declare-fun Unit!1855 () Unit!1824)

(assert (=> b!67105 (= e!43992 Unit!1855)))

(declare-fun b!67106 () Bool)

(assert (=> b!67106 (= e!43991 (isDefined!83 (getValueByKey!131 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (= (and d!13967 c!9317) b!67104))

(assert (= (and d!13967 (not c!9317)) b!67105))

(assert (= (and d!13967 (not res!36270)) b!67106))

(assert (=> d!13967 m!60827))

(declare-fun m!62011 () Bool)

(assert (=> d!13967 m!62011))

(assert (=> b!67104 m!60827))

(declare-fun m!62013 () Bool)

(assert (=> b!67104 m!62013))

(assert (=> b!67104 m!60827))

(declare-fun m!62015 () Bool)

(assert (=> b!67104 m!62015))

(assert (=> b!67104 m!62015))

(declare-fun m!62017 () Bool)

(assert (=> b!67104 m!62017))

(assert (=> b!67106 m!60827))

(assert (=> b!67106 m!62015))

(assert (=> b!67106 m!62015))

(assert (=> b!67106 m!62017))

(assert (=> b!66624 d!13967))

(declare-fun d!13969 () Bool)

(declare-fun e!43993 () Bool)

(assert (=> d!13969 e!43993))

(declare-fun res!36271 () Bool)

(assert (=> d!13969 (=> res!36271 e!43993)))

(declare-fun lt!29168 () Bool)

(assert (=> d!13969 (= res!36271 (not lt!29168))))

(declare-fun lt!29171 () Bool)

(assert (=> d!13969 (= lt!29168 lt!29171)))

(declare-fun lt!29170 () Unit!1824)

(declare-fun e!43994 () Unit!1824)

(assert (=> d!13969 (= lt!29170 e!43994)))

(declare-fun c!9318 () Bool)

(assert (=> d!13969 (= c!9318 lt!29171)))

(assert (=> d!13969 (= lt!29171 (containsKey!134 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!13969 (= (contains!705 lt!28667 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29168)))

(declare-fun b!67107 () Bool)

(declare-fun lt!29169 () Unit!1824)

(assert (=> b!67107 (= e!43994 lt!29169)))

(assert (=> b!67107 (= lt!29169 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!67107 (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67108 () Bool)

(declare-fun Unit!1856 () Unit!1824)

(assert (=> b!67108 (= e!43994 Unit!1856)))

(declare-fun b!67109 () Bool)

(assert (=> b!67109 (= e!43993 (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!13969 c!9318) b!67107))

(assert (= (and d!13969 (not c!9318)) b!67108))

(assert (= (and d!13969 (not res!36271)) b!67109))

(assert (=> d!13969 m!61005))

(declare-fun m!62019 () Bool)

(assert (=> d!13969 m!62019))

(assert (=> b!67107 m!61005))

(declare-fun m!62021 () Bool)

(assert (=> b!67107 m!62021))

(assert (=> b!67107 m!61005))

(assert (=> b!67107 m!61513))

(assert (=> b!67107 m!61513))

(declare-fun m!62023 () Bool)

(assert (=> b!67107 m!62023))

(assert (=> b!67109 m!61005))

(assert (=> b!67109 m!61513))

(assert (=> b!67109 m!61513))

(assert (=> b!67109 m!62023))

(assert (=> b!66470 d!13969))

(declare-fun d!13971 () Bool)

(assert (=> d!13971 (= (inRange!0 (ite c!9198 (ite c!9202 (index!3037 lt!28811) (ite c!9191 (index!3036 lt!28807) (index!3039 lt!28807))) (ite c!9196 (index!3037 lt!28791) (ite c!9194 (index!3036 lt!28810) (index!3039 lt!28810)))) (mask!6081 newMap!16)) (and (bvsge (ite c!9198 (ite c!9202 (index!3037 lt!28811) (ite c!9191 (index!3036 lt!28807) (index!3039 lt!28807))) (ite c!9196 (index!3037 lt!28791) (ite c!9194 (index!3036 lt!28810) (index!3039 lt!28810)))) #b00000000000000000000000000000000) (bvslt (ite c!9198 (ite c!9202 (index!3037 lt!28811) (ite c!9191 (index!3036 lt!28807) (index!3039 lt!28807))) (ite c!9196 (index!3037 lt!28791) (ite c!9194 (index!3036 lt!28810) (index!3039 lt!28810)))) (bvadd (mask!6081 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5538 d!13971))

(assert (=> d!13747 d!13751))

(declare-fun d!13973 () Bool)

(assert (=> d!13973 (not (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!13973 true))

(declare-fun _$68!46 () Unit!1824)

(assert (=> d!13973 (= (choose!68 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451)) _$68!46)))

(declare-fun bs!2884 () Bool)

(assert (= bs!2884 d!13973))

(assert (=> bs!2884 m!60827))

(assert (=> bs!2884 m!60839))

(assert (=> d!13747 d!13973))

(assert (=> bm!5478 d!13959))

(assert (=> b!66405 d!13939))

(declare-fun d!13975 () Bool)

(declare-fun e!43995 () Bool)

(assert (=> d!13975 e!43995))

(declare-fun res!36272 () Bool)

(assert (=> d!13975 (=> res!36272 e!43995)))

(declare-fun lt!29172 () Bool)

(assert (=> d!13975 (= res!36272 (not lt!29172))))

(declare-fun lt!29175 () Bool)

(assert (=> d!13975 (= lt!29172 lt!29175)))

(declare-fun lt!29174 () Unit!1824)

(declare-fun e!43996 () Unit!1824)

(assert (=> d!13975 (= lt!29174 e!43996)))

(declare-fun c!9319 () Bool)

(assert (=> d!13975 (= c!9319 lt!29175)))

(assert (=> d!13975 (= lt!29175 (containsKey!134 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!13975 (= (contains!705 lt!28707 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29172)))

(declare-fun b!67110 () Bool)

(declare-fun lt!29173 () Unit!1824)

(assert (=> b!67110 (= e!43996 lt!29173)))

(assert (=> b!67110 (= lt!29173 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!67110 (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67111 () Bool)

(declare-fun Unit!1857 () Unit!1824)

(assert (=> b!67111 (= e!43996 Unit!1857)))

(declare-fun b!67112 () Bool)

(assert (=> b!67112 (= e!43995 (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!13975 c!9319) b!67110))

(assert (= (and d!13975 (not c!9319)) b!67111))

(assert (= (and d!13975 (not res!36272)) b!67112))

(assert (=> d!13975 m!61005))

(declare-fun m!62025 () Bool)

(assert (=> d!13975 m!62025))

(assert (=> b!67110 m!61005))

(declare-fun m!62027 () Bool)

(assert (=> b!67110 m!62027))

(assert (=> b!67110 m!61005))

(assert (=> b!67110 m!61521))

(assert (=> b!67110 m!61521))

(declare-fun m!62029 () Bool)

(assert (=> b!67110 m!62029))

(assert (=> b!67112 m!61005))

(assert (=> b!67112 m!61521))

(assert (=> b!67112 m!61521))

(assert (=> b!67112 m!62029))

(assert (=> b!66506 d!13975))

(assert (=> b!66465 d!13789))

(declare-fun d!13977 () Bool)

(declare-fun e!43997 () Bool)

(assert (=> d!13977 e!43997))

(declare-fun res!36274 () Bool)

(assert (=> d!13977 (=> (not res!36274) (not e!43997))))

(declare-fun lt!29178 () ListLongMap!1379)

(assert (=> d!13977 (= res!36274 (contains!705 lt!29178 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun lt!29176 () List!1455)

(assert (=> d!13977 (= lt!29178 (ListLongMap!1380 lt!29176))))

(declare-fun lt!29177 () Unit!1824)

(declare-fun lt!29179 () Unit!1824)

(assert (=> d!13977 (= lt!29177 lt!29179)))

(assert (=> d!13977 (= (getValueByKey!131 lt!29176 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!13977 (= lt!29179 (lemmaContainsTupThenGetReturnValue!48 lt!29176 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!13977 (= lt!29176 (insertStrictlySorted!51 (toList!705 call!5543) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!13977 (= (+!86 call!5543 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) lt!29178)))

(declare-fun b!67113 () Bool)

(declare-fun res!36273 () Bool)

(assert (=> b!67113 (=> (not res!36273) (not e!43997))))

(assert (=> b!67113 (= res!36273 (= (getValueByKey!131 (toList!705 lt!29178) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!67114 () Bool)

(assert (=> b!67114 (= e!43997 (contains!709 (toList!705 lt!29178) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(assert (= (and d!13977 res!36274) b!67113))

(assert (= (and b!67113 res!36273) b!67114))

(declare-fun m!62031 () Bool)

(assert (=> d!13977 m!62031))

(declare-fun m!62033 () Bool)

(assert (=> d!13977 m!62033))

(declare-fun m!62035 () Bool)

(assert (=> d!13977 m!62035))

(declare-fun m!62037 () Bool)

(assert (=> d!13977 m!62037))

(declare-fun m!62039 () Bool)

(assert (=> b!67113 m!62039))

(declare-fun m!62041 () Bool)

(assert (=> b!67114 m!62041))

(assert (=> b!66648 d!13977))

(assert (=> b!66656 d!13797))

(declare-fun d!13979 () Bool)

(declare-fun e!43998 () Bool)

(assert (=> d!13979 e!43998))

(declare-fun res!36275 () Bool)

(assert (=> d!13979 (=> res!36275 e!43998)))

(declare-fun lt!29180 () Bool)

(assert (=> d!13979 (= res!36275 (not lt!29180))))

(declare-fun lt!29183 () Bool)

(assert (=> d!13979 (= lt!29180 lt!29183)))

(declare-fun lt!29182 () Unit!1824)

(declare-fun e!43999 () Unit!1824)

(assert (=> d!13979 (= lt!29182 e!43999)))

(declare-fun c!9320 () Bool)

(assert (=> d!13979 (= c!9320 lt!29183)))

(assert (=> d!13979 (= lt!29183 (containsKey!134 (toList!705 lt!28687) (_1!1052 lt!28520)))))

(assert (=> d!13979 (= (contains!705 lt!28687 (_1!1052 lt!28520)) lt!29180)))

(declare-fun b!67115 () Bool)

(declare-fun lt!29181 () Unit!1824)

(assert (=> b!67115 (= e!43999 lt!29181)))

(assert (=> b!67115 (= lt!29181 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28687) (_1!1052 lt!28520)))))

(assert (=> b!67115 (isDefined!83 (getValueByKey!131 (toList!705 lt!28687) (_1!1052 lt!28520)))))

(declare-fun b!67116 () Bool)

(declare-fun Unit!1858 () Unit!1824)

(assert (=> b!67116 (= e!43999 Unit!1858)))

(declare-fun b!67117 () Bool)

(assert (=> b!67117 (= e!43998 (isDefined!83 (getValueByKey!131 (toList!705 lt!28687) (_1!1052 lt!28520))))))

(assert (= (and d!13979 c!9320) b!67115))

(assert (= (and d!13979 (not c!9320)) b!67116))

(assert (= (and d!13979 (not res!36275)) b!67117))

(declare-fun m!62043 () Bool)

(assert (=> d!13979 m!62043))

(declare-fun m!62045 () Bool)

(assert (=> b!67115 m!62045))

(assert (=> b!67115 m!61079))

(assert (=> b!67115 m!61079))

(declare-fun m!62047 () Bool)

(assert (=> b!67115 m!62047))

(assert (=> b!67117 m!61079))

(assert (=> b!67117 m!61079))

(assert (=> b!67117 m!62047))

(assert (=> d!13765 d!13979))

(declare-fun b!67120 () Bool)

(declare-fun e!44001 () Option!137)

(assert (=> b!67120 (= e!44001 (getValueByKey!131 (t!4929 lt!28685) (_1!1052 lt!28520)))))

(declare-fun b!67118 () Bool)

(declare-fun e!44000 () Option!137)

(assert (=> b!67118 (= e!44000 (Some!136 (_2!1052 (h!2035 lt!28685))))))

(declare-fun d!13981 () Bool)

(declare-fun c!9321 () Bool)

(assert (=> d!13981 (= c!9321 (and ((_ is Cons!1451) lt!28685) (= (_1!1052 (h!2035 lt!28685)) (_1!1052 lt!28520))))))

(assert (=> d!13981 (= (getValueByKey!131 lt!28685 (_1!1052 lt!28520)) e!44000)))

(declare-fun b!67121 () Bool)

(assert (=> b!67121 (= e!44001 None!135)))

(declare-fun b!67119 () Bool)

(assert (=> b!67119 (= e!44000 e!44001)))

(declare-fun c!9322 () Bool)

(assert (=> b!67119 (= c!9322 (and ((_ is Cons!1451) lt!28685) (not (= (_1!1052 (h!2035 lt!28685)) (_1!1052 lt!28520)))))))

(assert (= (and d!13981 c!9321) b!67118))

(assert (= (and d!13981 (not c!9321)) b!67119))

(assert (= (and b!67119 c!9322) b!67120))

(assert (= (and b!67119 (not c!9322)) b!67121))

(declare-fun m!62049 () Bool)

(assert (=> b!67120 m!62049))

(assert (=> d!13765 d!13981))

(declare-fun d!13983 () Bool)

(assert (=> d!13983 (= (getValueByKey!131 lt!28685 (_1!1052 lt!28520)) (Some!136 (_2!1052 lt!28520)))))

(declare-fun lt!29184 () Unit!1824)

(assert (=> d!13983 (= lt!29184 (choose!380 lt!28685 (_1!1052 lt!28520) (_2!1052 lt!28520)))))

(declare-fun e!44002 () Bool)

(assert (=> d!13983 e!44002))

(declare-fun res!36276 () Bool)

(assert (=> d!13983 (=> (not res!36276) (not e!44002))))

(assert (=> d!13983 (= res!36276 (isStrictlySorted!276 lt!28685))))

(assert (=> d!13983 (= (lemmaContainsTupThenGetReturnValue!48 lt!28685 (_1!1052 lt!28520) (_2!1052 lt!28520)) lt!29184)))

(declare-fun b!67122 () Bool)

(declare-fun res!36277 () Bool)

(assert (=> b!67122 (=> (not res!36277) (not e!44002))))

(assert (=> b!67122 (= res!36277 (containsKey!134 lt!28685 (_1!1052 lt!28520)))))

(declare-fun b!67123 () Bool)

(assert (=> b!67123 (= e!44002 (contains!709 lt!28685 (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(assert (= (and d!13983 res!36276) b!67122))

(assert (= (and b!67122 res!36277) b!67123))

(assert (=> d!13983 m!61073))

(declare-fun m!62051 () Bool)

(assert (=> d!13983 m!62051))

(declare-fun m!62053 () Bool)

(assert (=> d!13983 m!62053))

(declare-fun m!62055 () Bool)

(assert (=> b!67122 m!62055))

(declare-fun m!62057 () Bool)

(assert (=> b!67123 m!62057))

(assert (=> d!13765 d!13983))

(declare-fun b!67124 () Bool)

(declare-fun e!44007 () List!1455)

(declare-fun call!5620 () List!1455)

(assert (=> b!67124 (= e!44007 call!5620)))

(declare-fun b!67125 () Bool)

(declare-fun e!44003 () List!1455)

(declare-fun e!44005 () List!1455)

(assert (=> b!67125 (= e!44003 e!44005)))

(declare-fun c!9325 () Bool)

(assert (=> b!67125 (= c!9325 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 lt!28528))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 lt!28528)))) (_1!1052 lt!28520))))))

(declare-fun b!67126 () Bool)

(declare-fun res!36278 () Bool)

(declare-fun e!44006 () Bool)

(assert (=> b!67126 (=> (not res!36278) (not e!44006))))

(declare-fun lt!29185 () List!1455)

(assert (=> b!67126 (= res!36278 (containsKey!134 lt!29185 (_1!1052 lt!28520)))))

(declare-fun bm!5617 () Bool)

(declare-fun call!5622 () List!1455)

(assert (=> bm!5617 (= call!5620 call!5622)))

(declare-fun b!67127 () Bool)

(declare-fun call!5621 () List!1455)

(assert (=> b!67127 (= e!44003 call!5621)))

(declare-fun c!9326 () Bool)

(declare-fun b!67128 () Bool)

(assert (=> b!67128 (= c!9326 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 lt!28528))) (bvsgt (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 lt!28528)))) (_1!1052 lt!28520))))))

(assert (=> b!67128 (= e!44005 e!44007)))

(declare-fun b!67129 () Bool)

(declare-fun e!44004 () List!1455)

(assert (=> b!67129 (= e!44004 (ite c!9325 (t!4929 (toList!705 (+!86 lt!28527 lt!28528))) (ite c!9326 (Cons!1451 (h!2035 (toList!705 (+!86 lt!28527 lt!28528))) (t!4929 (toList!705 (+!86 lt!28527 lt!28528)))) Nil!1452)))))

(declare-fun d!13985 () Bool)

(assert (=> d!13985 e!44006))

(declare-fun res!36279 () Bool)

(assert (=> d!13985 (=> (not res!36279) (not e!44006))))

(assert (=> d!13985 (= res!36279 (isStrictlySorted!276 lt!29185))))

(assert (=> d!13985 (= lt!29185 e!44003)))

(declare-fun c!9323 () Bool)

(assert (=> d!13985 (= c!9323 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 lt!28528))) (bvslt (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 lt!28528)))) (_1!1052 lt!28520))))))

(assert (=> d!13985 (isStrictlySorted!276 (toList!705 (+!86 lt!28527 lt!28528)))))

(assert (=> d!13985 (= (insertStrictlySorted!51 (toList!705 (+!86 lt!28527 lt!28528)) (_1!1052 lt!28520) (_2!1052 lt!28520)) lt!29185)))

(declare-fun b!67130 () Bool)

(assert (=> b!67130 (= e!44004 (insertStrictlySorted!51 (t!4929 (toList!705 (+!86 lt!28527 lt!28528))) (_1!1052 lt!28520) (_2!1052 lt!28520)))))

(declare-fun b!67131 () Bool)

(assert (=> b!67131 (= e!44005 call!5622)))

(declare-fun bm!5618 () Bool)

(assert (=> bm!5618 (= call!5622 call!5621)))

(declare-fun b!67132 () Bool)

(assert (=> b!67132 (= e!44007 call!5620)))

(declare-fun bm!5619 () Bool)

(assert (=> bm!5619 (= call!5621 ($colon$colon!62 e!44004 (ite c!9323 (h!2035 (toList!705 (+!86 lt!28527 lt!28528))) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520)))))))

(declare-fun c!9324 () Bool)

(assert (=> bm!5619 (= c!9324 c!9323)))

(declare-fun b!67133 () Bool)

(assert (=> b!67133 (= e!44006 (contains!709 lt!29185 (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(assert (= (and d!13985 c!9323) b!67127))

(assert (= (and d!13985 (not c!9323)) b!67125))

(assert (= (and b!67125 c!9325) b!67131))

(assert (= (and b!67125 (not c!9325)) b!67128))

(assert (= (and b!67128 c!9326) b!67124))

(assert (= (and b!67128 (not c!9326)) b!67132))

(assert (= (or b!67124 b!67132) bm!5617))

(assert (= (or b!67131 bm!5617) bm!5618))

(assert (= (or b!67127 bm!5618) bm!5619))

(assert (= (and bm!5619 c!9324) b!67130))

(assert (= (and bm!5619 (not c!9324)) b!67129))

(assert (= (and d!13985 res!36279) b!67126))

(assert (= (and b!67126 res!36278) b!67133))

(declare-fun m!62059 () Bool)

(assert (=> bm!5619 m!62059))

(declare-fun m!62061 () Bool)

(assert (=> b!67130 m!62061))

(declare-fun m!62063 () Bool)

(assert (=> b!67126 m!62063))

(declare-fun m!62065 () Bool)

(assert (=> b!67133 m!62065))

(declare-fun m!62067 () Bool)

(assert (=> d!13985 m!62067))

(declare-fun m!62069 () Bool)

(assert (=> d!13985 m!62069))

(assert (=> d!13765 d!13985))

(declare-fun b!67142 () Bool)

(declare-fun e!44013 () (_ BitVec 32))

(assert (=> b!67142 (= e!44013 #b00000000000000000000000000000000)))

(declare-fun b!67143 () Bool)

(declare-fun e!44012 () (_ BitVec 32))

(declare-fun call!5625 () (_ BitVec 32))

(assert (=> b!67143 (= e!44012 (bvadd #b00000000000000000000000000000001 call!5625))))

(declare-fun b!67144 () Bool)

(assert (=> b!67144 (= e!44012 call!5625)))

(declare-fun d!13987 () Bool)

(declare-fun lt!29188 () (_ BitVec 32))

(assert (=> d!13987 (and (bvsge lt!29188 #b00000000000000000000000000000000) (bvsle lt!29188 (bvsub (size!2061 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!13987 (= lt!29188 e!44013)))

(declare-fun c!9332 () Bool)

(assert (=> d!13987 (= c!9332 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!13987 (and (bvsle #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2061 (_keys!3786 newMap!16)) (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!13987 (= (arrayCountValidKeys!0 (_keys!3786 newMap!16) #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) lt!29188)))

(declare-fun b!67145 () Bool)

(assert (=> b!67145 (= e!44013 e!44012)))

(declare-fun c!9331 () Bool)

(assert (=> b!67145 (= c!9331 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!5622 () Bool)

(assert (=> bm!5622 (= call!5625 (arrayCountValidKeys!0 (_keys!3786 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))))))

(assert (= (and d!13987 c!9332) b!67142))

(assert (= (and d!13987 (not c!9332)) b!67145))

(assert (= (and b!67145 c!9331) b!67143))

(assert (= (and b!67145 (not c!9331)) b!67144))

(assert (= (or b!67143 b!67144) bm!5622))

(assert (=> b!67145 m!61431))

(assert (=> b!67145 m!61431))

(assert (=> b!67145 m!61433))

(declare-fun m!62071 () Bool)

(assert (=> bm!5622 m!62071))

(assert (=> b!66526 d!13987))

(declare-fun d!13989 () Bool)

(declare-fun e!44016 () Bool)

(assert (=> d!13989 e!44016))

(declare-fun res!36285 () Bool)

(assert (=> d!13989 (=> (not res!36285) (not e!44016))))

(declare-fun lt!29194 () SeekEntryResult!227)

(assert (=> d!13989 (= res!36285 ((_ is Found!227) lt!29194))))

(assert (=> d!13989 (= lt!29194 (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(declare-fun lt!29193 () Unit!1824)

(declare-fun choose!384 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) Int) Unit!1824)

(assert (=> d!13989 (= lt!29193 (choose!384 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)))))

(assert (=> d!13989 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!13989 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!21 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)) lt!29193)))

(declare-fun b!67150 () Bool)

(declare-fun res!36284 () Bool)

(assert (=> b!67150 (=> (not res!36284) (not e!44016))))

(assert (=> b!67150 (= res!36284 (inRange!0 (index!3037 lt!29194) (mask!6081 newMap!16)))))

(declare-fun b!67151 () Bool)

(assert (=> b!67151 (= e!44016 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!29194)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!67151 (and (bvsge (index!3037 lt!29194) #b00000000000000000000000000000000) (bvslt (index!3037 lt!29194) (size!2061 (_keys!3786 newMap!16))))))

(assert (= (and d!13989 res!36285) b!67150))

(assert (= (and b!67150 res!36284) b!67151))

(assert (=> d!13989 m!60827))

(assert (=> d!13989 m!61181))

(assert (=> d!13989 m!60827))

(declare-fun m!62073 () Bool)

(assert (=> d!13989 m!62073))

(assert (=> d!13989 m!61297))

(declare-fun m!62075 () Bool)

(assert (=> b!67150 m!62075))

(declare-fun m!62077 () Bool)

(assert (=> b!67151 m!62077))

(assert (=> bm!5528 d!13989))

(declare-fun d!13991 () Bool)

(declare-fun e!44017 () Bool)

(assert (=> d!13991 e!44017))

(declare-fun res!36286 () Bool)

(assert (=> d!13991 (=> res!36286 e!44017)))

(declare-fun lt!29195 () Bool)

(assert (=> d!13991 (= res!36286 (not lt!29195))))

(declare-fun lt!29198 () Bool)

(assert (=> d!13991 (= lt!29195 lt!29198)))

(declare-fun lt!29197 () Unit!1824)

(declare-fun e!44018 () Unit!1824)

(assert (=> d!13991 (= lt!29197 e!44018)))

(declare-fun c!9333 () Bool)

(assert (=> d!13991 (= c!9333 lt!29198)))

(assert (=> d!13991 (= lt!29198 (containsKey!134 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!13991 (= (contains!705 lt!28667 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29195)))

(declare-fun b!67152 () Bool)

(declare-fun lt!29196 () Unit!1824)

(assert (=> b!67152 (= e!44018 lt!29196)))

(assert (=> b!67152 (= lt!29196 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67152 (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67153 () Bool)

(declare-fun Unit!1859 () Unit!1824)

(assert (=> b!67153 (= e!44018 Unit!1859)))

(declare-fun b!67154 () Bool)

(assert (=> b!67154 (= e!44017 (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!13991 c!9333) b!67152))

(assert (= (and d!13991 (not c!9333)) b!67153))

(assert (= (and d!13991 (not res!36286)) b!67154))

(declare-fun m!62079 () Bool)

(assert (=> d!13991 m!62079))

(declare-fun m!62081 () Bool)

(assert (=> b!67152 m!62081))

(assert (=> b!67152 m!61637))

(assert (=> b!67152 m!61637))

(declare-fun m!62083 () Bool)

(assert (=> b!67152 m!62083))

(assert (=> b!67154 m!61637))

(assert (=> b!67154 m!61637))

(assert (=> b!67154 m!62083))

(assert (=> bm!5473 d!13991))

(declare-fun b!67155 () Bool)

(declare-fun e!44020 () Bool)

(declare-fun call!5626 () Bool)

(assert (=> b!67155 (= e!44020 call!5626)))

(declare-fun b!67156 () Bool)

(declare-fun e!44021 () Bool)

(assert (=> b!67156 (= e!44021 e!44020)))

(declare-fun c!9334 () Bool)

(assert (=> b!67156 (= c!9334 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67157 () Bool)

(declare-fun e!44019 () Bool)

(assert (=> b!67157 (= e!44019 (contains!708 Nil!1451 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67158 () Bool)

(assert (=> b!67158 (= e!44020 call!5626)))

(declare-fun b!67159 () Bool)

(declare-fun e!44022 () Bool)

(assert (=> b!67159 (= e!44022 e!44021)))

(declare-fun res!36287 () Bool)

(assert (=> b!67159 (=> (not res!36287) (not e!44021))))

(assert (=> b!67159 (= res!36287 (not e!44019))))

(declare-fun res!36289 () Bool)

(assert (=> b!67159 (=> (not res!36289) (not e!44019))))

(assert (=> b!67159 (= res!36289 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!13993 () Bool)

(declare-fun res!36288 () Bool)

(assert (=> d!13993 (=> res!36288 e!44022)))

(assert (=> d!13993 (= res!36288 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!13993 (= (arrayNoDuplicates!0 (_keys!3786 newMap!16) #b00000000000000000000000000000000 Nil!1451) e!44022)))

(declare-fun bm!5623 () Bool)

(assert (=> bm!5623 (= call!5626 (arrayNoDuplicates!0 (_keys!3786 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9334 (Cons!1450 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) Nil!1451) Nil!1451)))))

(assert (= (and d!13993 (not res!36288)) b!67159))

(assert (= (and b!67159 res!36289) b!67157))

(assert (= (and b!67159 res!36287) b!67156))

(assert (= (and b!67156 c!9334) b!67155))

(assert (= (and b!67156 (not c!9334)) b!67158))

(assert (= (or b!67155 b!67158) bm!5623))

(assert (=> b!67156 m!61431))

(assert (=> b!67156 m!61431))

(assert (=> b!67156 m!61433))

(assert (=> b!67157 m!61431))

(assert (=> b!67157 m!61431))

(declare-fun m!62085 () Bool)

(assert (=> b!67157 m!62085))

(assert (=> b!67159 m!61431))

(assert (=> b!67159 m!61431))

(assert (=> b!67159 m!61433))

(assert (=> bm!5623 m!61431))

(declare-fun m!62087 () Bool)

(assert (=> bm!5623 m!62087))

(assert (=> b!66528 d!13993))

(declare-fun condMapEmpty!3087 () Bool)

(declare-fun mapDefault!3087 () ValueCell!881)

(assert (=> mapNonEmpty!3086 (= condMapEmpty!3087 (= mapRest!3086 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3087)))))

(declare-fun e!44024 () Bool)

(declare-fun mapRes!3087 () Bool)

(assert (=> mapNonEmpty!3086 (= tp!8378 (and e!44024 mapRes!3087))))

(declare-fun b!67160 () Bool)

(declare-fun e!44023 () Bool)

(assert (=> b!67160 (= e!44023 tp_is_empty!2449)))

(declare-fun mapIsEmpty!3087 () Bool)

(assert (=> mapIsEmpty!3087 mapRes!3087))

(declare-fun mapNonEmpty!3087 () Bool)

(declare-fun tp!8379 () Bool)

(assert (=> mapNonEmpty!3087 (= mapRes!3087 (and tp!8379 e!44023))))

(declare-fun mapKey!3087 () (_ BitVec 32))

(declare-fun mapRest!3087 () (Array (_ BitVec 32) ValueCell!881))

(declare-fun mapValue!3087 () ValueCell!881)

(assert (=> mapNonEmpty!3087 (= mapRest!3086 (store mapRest!3087 mapKey!3087 mapValue!3087))))

(declare-fun b!67161 () Bool)

(assert (=> b!67161 (= e!44024 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3086 condMapEmpty!3087) mapIsEmpty!3087))

(assert (= (and mapNonEmpty!3086 (not condMapEmpty!3087)) mapNonEmpty!3087))

(assert (= (and mapNonEmpty!3087 ((_ is ValueCellFull!881) mapValue!3087)) b!67160))

(assert (= (and mapNonEmpty!3086 ((_ is ValueCellFull!881) mapDefault!3087)) b!67161))

(declare-fun m!62089 () Bool)

(assert (=> mapNonEmpty!3087 m!62089))

(declare-fun condMapEmpty!3088 () Bool)

(declare-fun mapDefault!3088 () ValueCell!881)

(assert (=> mapNonEmpty!3085 (= condMapEmpty!3088 (= mapRest!3085 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3088)))))

(declare-fun e!44026 () Bool)

(declare-fun mapRes!3088 () Bool)

(assert (=> mapNonEmpty!3085 (= tp!8377 (and e!44026 mapRes!3088))))

(declare-fun b!67162 () Bool)

(declare-fun e!44025 () Bool)

(assert (=> b!67162 (= e!44025 tp_is_empty!2449)))

(declare-fun mapIsEmpty!3088 () Bool)

(assert (=> mapIsEmpty!3088 mapRes!3088))

(declare-fun mapNonEmpty!3088 () Bool)

(declare-fun tp!8380 () Bool)

(assert (=> mapNonEmpty!3088 (= mapRes!3088 (and tp!8380 e!44025))))

(declare-fun mapValue!3088 () ValueCell!881)

(declare-fun mapRest!3088 () (Array (_ BitVec 32) ValueCell!881))

(declare-fun mapKey!3088 () (_ BitVec 32))

(assert (=> mapNonEmpty!3088 (= mapRest!3085 (store mapRest!3088 mapKey!3088 mapValue!3088))))

(declare-fun b!67163 () Bool)

(assert (=> b!67163 (= e!44026 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3085 condMapEmpty!3088) mapIsEmpty!3088))

(assert (= (and mapNonEmpty!3085 (not condMapEmpty!3088)) mapNonEmpty!3088))

(assert (= (and mapNonEmpty!3088 ((_ is ValueCellFull!881) mapValue!3088)) b!67162))

(assert (= (and mapNonEmpty!3085 ((_ is ValueCellFull!881) mapDefault!3088)) b!67163))

(declare-fun m!62091 () Bool)

(assert (=> mapNonEmpty!3088 m!62091))

(declare-fun b_lambda!3003 () Bool)

(assert (= b_lambda!2995 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3003)))

(declare-fun b_lambda!3005 () Bool)

(assert (= b_lambda!2991 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3005)))

(declare-fun b_lambda!3007 () Bool)

(assert (= b_lambda!2999 (or (and b!66230 b_free!2065) (and b!66241 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))) b_lambda!3007)))

(declare-fun b_lambda!3009 () Bool)

(assert (= b_lambda!2997 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3009)))

(declare-fun b_lambda!3011 () Bool)

(assert (= b_lambda!2993 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3011)))

(declare-fun b_lambda!3013 () Bool)

(assert (= b_lambda!3001 (or (and b!66230 b_free!2065) (and b!66241 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))) b_lambda!3013)))

(check-sat (not d!13911) (not b!66755) (not d!13827) (not d!13867) (not d!13877) (not bm!5612) (not b!66834) (not b_lambda!3013) (not b!66831) (not bm!5597) (not d!13793) (not b!67007) (not d!13887) (not b!66769) (not d!13925) (not d!13967) (not d!13889) (not b!66804) (not bm!5590) (not b!67110) (not b!67084) (not b!67037) (not bm!5575) (not b!67115) (not d!13919) (not b!66705) (not b!67065) (not b!67049) (not b!67055) (not b!67133) (not b!67085) (not b!67096) (not d!13973) (not b!66822) (not b!66812) (not bm!5561) (not b!66788) (not b!67010) (not b!66885) (not mapNonEmpty!3088) (not b!66912) (not d!13843) (not d!13923) (not bm!5623) (not b!67126) (not b!66817) (not b!67088) (not b!66883) (not b!67074) (not b!66967) (not b!66833) (not b!66892) (not bm!5615) (not mapNonEmpty!3087) b_and!4147 (not b!67114) (not d!13955) (not b!66759) (not b!66771) (not d!13991) (not d!13983) (not b!67122) (not b!67019) (not b_next!2067) (not d!13797) (not bm!5593) (not b!67104) (not bm!5570) (not d!13813) (not d!13897) (not b!67068) (not b!67014) (not b!66713) (not b!67120) (not b!67021) (not b!67090) (not b!66776) (not b!66928) (not b!66797) (not b!66906) (not d!13847) (not b!66766) (not b!66904) (not b!67087) (not b!67091) (not bm!5583) (not d!13891) (not b!66737) (not d!13935) (not b!67156) (not d!13989) (not b!66825) (not b_lambda!3005) (not bm!5569) (not b!67159) (not d!13807) (not d!13791) (not b_next!2065) (not b!66940) (not b!66925) (not b!66772) (not b!66718) (not d!13917) (not b!66806) (not b_lambda!3011) (not bm!5573) (not bm!5595) (not b!66768) (not b!66758) (not b!66917) (not b!66965) (not d!13817) (not b!67030) (not b_lambda!3007) (not d!13885) (not b!66936) (not b!66790) (not b!66787) (not d!13965) (not d!13927) (not b!67042) (not b!66968) (not b!67018) (not b!67150) (not d!13947) (not b!67063) (not b!67023) (not d!13801) (not b!66744) (not d!13845) (not bm!5567) (not b!66795) (not b!67031) (not b_lambda!2985) (not b!66793) (not bm!5576) (not b!66801) (not b!66760) (not b_lambda!3003) (not d!13819) (not b!66714) (not b!66951) (not b!66915) (not d!13825) (not d!13951) (not b!66765) (not d!13957) (not b!66832) (not b!66920) (not d!13899) (not bm!5577) (not b!66954) (not b!66781) (not b!66911) (not d!13977) (not b!67078) (not b!66905) (not b!66980) (not b!66952) (not bm!5586) (not b!67035) (not d!13985) (not d!13795) (not d!13879) (not b!66894) (not b!66909) (not d!13857) (not b!67117) (not d!13931) (not b!67020) (not d!13895) (not d!13831) (not b!66789) (not b!66979) (not b!67106) (not d!13835) (not d!13873) (not d!13863) (not d!13865) (not d!13837) (not b!66670) (not b_lambda!2987) (not b!66934) (not b!66935) (not b!67051) (not b_lambda!2989) (not d!13943) (not d!13969) (not b!66799) (not d!13821) (not d!13883) (not d!13913) (not d!13963) (not d!13959) (not b!66973) (not d!13903) (not b!66888) (not b!67081) (not b!67070) (not b!67112) (not b!67152) (not d!13869) (not d!13893) (not b!67044) (not b!67113) (not b!67039) (not bm!5622) (not b!66897) (not bm!5582) (not b!67052) (not b!66837) (not d!13907) (not bm!5565) (not b!66668) b_and!4145 (not d!13949) (not bm!5600) (not b!67123) (not d!13805) (not bm!5596) (not d!13853) (not b!67029) (not d!13815) (not b!67032) (not b!67059) (not b!66756) (not b!67062) (not b!67017) (not d!13833) (not b!66884) (not b!66820) (not b!66916) (not b!66876) (not b!67100) (not b!67109) (not b!66814) (not d!13859) (not d!13975) (not b!67157) (not b!67107) (not d!13871) (not b!66914) (not b!66923) (not b!67092) (not b!66918) tp_is_empty!2449 (not bm!5588) (not bm!5609) (not b!66937) (not b!67013) (not bm!5589) (not b_lambda!3009) (not d!13823) (not b!67011) (not b!66970) (not d!13915) (not b!66955) (not b!66815) (not b!67145) (not bm!5562) (not bm!5616) (not b_lambda!2977) (not b!67154) (not d!13829) (not d!13921) (not bm!5568) (not d!13803) (not d!13901) (not b!67130) (not b!66751) (not b!67071) (not b!66805) (not d!13839) (not b!66865) (not b!66813) (not d!13811) (not b!66707) (not b!67038) (not b!66913) (not b!67093) (not b!67003) (not b!67046) (not b!66716) (not b!66778) (not b!66753) (not bm!5559) (not b!66903) (not b!67016) (not b!67103) (not b!66802) (not d!13979) (not d!13841) (not bm!5619))
(check-sat b_and!4145 b_and!4147 (not b_next!2065) (not b_next!2067))
(get-model)

(declare-fun d!13995 () Bool)

(declare-fun e!44027 () Bool)

(assert (=> d!13995 e!44027))

(declare-fun res!36291 () Bool)

(assert (=> d!13995 (=> (not res!36291) (not e!44027))))

(declare-fun lt!29201 () ListLongMap!1379)

(assert (=> d!13995 (= res!36291 (contains!705 lt!29201 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(declare-fun lt!29199 () List!1455)

(assert (=> d!13995 (= lt!29201 (ListLongMap!1380 lt!29199))))

(declare-fun lt!29200 () Unit!1824)

(declare-fun lt!29202 () Unit!1824)

(assert (=> d!13995 (= lt!29200 lt!29202)))

(assert (=> d!13995 (= (getValueByKey!131 lt!29199 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(assert (=> d!13995 (= lt!29202 (lemmaContainsTupThenGetReturnValue!48 lt!29199 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(assert (=> d!13995 (= lt!29199 (insertStrictlySorted!51 (toList!705 call!5587) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(assert (=> d!13995 (= (+!86 call!5587 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) lt!29201)))

(declare-fun b!67164 () Bool)

(declare-fun res!36290 () Bool)

(assert (=> b!67164 (=> (not res!36290) (not e!44027))))

(assert (=> b!67164 (= res!36290 (= (getValueByKey!131 (toList!705 lt!29201) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))))

(declare-fun b!67165 () Bool)

(assert (=> b!67165 (= e!44027 (contains!709 (toList!705 lt!29201) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))

(assert (= (and d!13995 res!36291) b!67164))

(assert (= (and b!67164 res!36290) b!67165))

(declare-fun m!62093 () Bool)

(assert (=> d!13995 m!62093))

(declare-fun m!62095 () Bool)

(assert (=> d!13995 m!62095))

(declare-fun m!62097 () Bool)

(assert (=> d!13995 m!62097))

(declare-fun m!62099 () Bool)

(assert (=> d!13995 m!62099))

(declare-fun m!62101 () Bool)

(assert (=> b!67164 m!62101))

(declare-fun m!62103 () Bool)

(assert (=> b!67165 m!62103))

(assert (=> b!66903 d!13995))

(declare-fun d!13997 () Bool)

(assert (not d!13997))

(assert (=> b!66883 d!13997))

(declare-fun d!13999 () Bool)

(declare-fun e!44028 () Bool)

(assert (=> d!13999 e!44028))

(declare-fun res!36292 () Bool)

(assert (=> d!13999 (=> res!36292 e!44028)))

(declare-fun lt!29203 () Bool)

(assert (=> d!13999 (= res!36292 (not lt!29203))))

(declare-fun lt!29206 () Bool)

(assert (=> d!13999 (= lt!29203 lt!29206)))

(declare-fun lt!29205 () Unit!1824)

(declare-fun e!44029 () Unit!1824)

(assert (=> d!13999 (= lt!29205 e!44029)))

(declare-fun c!9335 () Bool)

(assert (=> d!13999 (= c!9335 lt!29206)))

(assert (=> d!13999 (= lt!29206 (containsKey!134 (toList!705 lt!29068) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!13999 (= (contains!705 lt!29068 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29203)))

(declare-fun b!67166 () Bool)

(declare-fun lt!29204 () Unit!1824)

(assert (=> b!67166 (= e!44029 lt!29204)))

(assert (=> b!67166 (= lt!29204 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29068) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67166 (isDefined!83 (getValueByKey!131 (toList!705 lt!29068) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67167 () Bool)

(declare-fun Unit!1860 () Unit!1824)

(assert (=> b!67167 (= e!44029 Unit!1860)))

(declare-fun b!67168 () Bool)

(assert (=> b!67168 (= e!44028 (isDefined!83 (getValueByKey!131 (toList!705 lt!29068) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!13999 c!9335) b!67166))

(assert (= (and d!13999 (not c!9335)) b!67167))

(assert (= (and d!13999 (not res!36292)) b!67168))

(declare-fun m!62105 () Bool)

(assert (=> d!13999 m!62105))

(declare-fun m!62107 () Bool)

(assert (=> b!67166 m!62107))

(assert (=> b!67166 m!61737))

(assert (=> b!67166 m!61737))

(declare-fun m!62109 () Bool)

(assert (=> b!67166 m!62109))

(assert (=> b!67168 m!61737))

(assert (=> b!67168 m!61737))

(assert (=> b!67168 m!62109))

(assert (=> d!13895 d!13999))

(declare-fun b!67171 () Bool)

(declare-fun e!44031 () Option!137)

(assert (=> b!67171 (= e!44031 (getValueByKey!131 (t!4929 lt!29066) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67169 () Bool)

(declare-fun e!44030 () Option!137)

(assert (=> b!67169 (= e!44030 (Some!136 (_2!1052 (h!2035 lt!29066))))))

(declare-fun d!14001 () Bool)

(declare-fun c!9336 () Bool)

(assert (=> d!14001 (= c!9336 (and ((_ is Cons!1451) lt!29066) (= (_1!1052 (h!2035 lt!29066)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14001 (= (getValueByKey!131 lt!29066 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44030)))

(declare-fun b!67172 () Bool)

(assert (=> b!67172 (= e!44031 None!135)))

(declare-fun b!67170 () Bool)

(assert (=> b!67170 (= e!44030 e!44031)))

(declare-fun c!9337 () Bool)

(assert (=> b!67170 (= c!9337 (and ((_ is Cons!1451) lt!29066) (not (= (_1!1052 (h!2035 lt!29066)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14001 c!9336) b!67169))

(assert (= (and d!14001 (not c!9336)) b!67170))

(assert (= (and b!67170 c!9337) b!67171))

(assert (= (and b!67170 (not c!9337)) b!67172))

(declare-fun m!62111 () Bool)

(assert (=> b!67171 m!62111))

(assert (=> d!13895 d!14001))

(declare-fun d!14003 () Bool)

(assert (=> d!14003 (= (getValueByKey!131 lt!29066 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29207 () Unit!1824)

(assert (=> d!14003 (= lt!29207 (choose!380 lt!29066 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44032 () Bool)

(assert (=> d!14003 e!44032))

(declare-fun res!36293 () Bool)

(assert (=> d!14003 (=> (not res!36293) (not e!44032))))

(assert (=> d!14003 (= res!36293 (isStrictlySorted!276 lt!29066))))

(assert (=> d!14003 (= (lemmaContainsTupThenGetReturnValue!48 lt!29066 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29207)))

(declare-fun b!67173 () Bool)

(declare-fun res!36294 () Bool)

(assert (=> b!67173 (=> (not res!36294) (not e!44032))))

(assert (=> b!67173 (= res!36294 (containsKey!134 lt!29066 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67174 () Bool)

(assert (=> b!67174 (= e!44032 (contains!709 lt!29066 (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14003 res!36293) b!67173))

(assert (= (and b!67173 res!36294) b!67174))

(assert (=> d!14003 m!61731))

(declare-fun m!62113 () Bool)

(assert (=> d!14003 m!62113))

(declare-fun m!62115 () Bool)

(assert (=> d!14003 m!62115))

(declare-fun m!62117 () Bool)

(assert (=> b!67173 m!62117))

(declare-fun m!62119 () Bool)

(assert (=> b!67174 m!62119))

(assert (=> d!13895 d!14003))

(declare-fun b!67175 () Bool)

(declare-fun e!44037 () List!1455)

(declare-fun call!5627 () List!1455)

(assert (=> b!67175 (= e!44037 call!5627)))

(declare-fun b!67176 () Bool)

(declare-fun e!44033 () List!1455)

(declare-fun e!44035 () List!1455)

(assert (=> b!67176 (= e!44033 e!44035)))

(declare-fun c!9340 () Bool)

(assert (=> b!67176 (= c!9340 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67177 () Bool)

(declare-fun res!36295 () Bool)

(declare-fun e!44036 () Bool)

(assert (=> b!67177 (=> (not res!36295) (not e!44036))))

(declare-fun lt!29208 () List!1455)

(assert (=> b!67177 (= res!36295 (containsKey!134 lt!29208 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun bm!5624 () Bool)

(declare-fun call!5629 () List!1455)

(assert (=> bm!5624 (= call!5627 call!5629)))

(declare-fun b!67178 () Bool)

(declare-fun call!5628 () List!1455)

(assert (=> b!67178 (= e!44033 call!5628)))

(declare-fun b!67179 () Bool)

(declare-fun c!9341 () Bool)

(assert (=> b!67179 (= c!9341 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) (bvsgt (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67179 (= e!44035 e!44037)))

(declare-fun b!67180 () Bool)

(declare-fun e!44034 () List!1455)

(assert (=> b!67180 (= e!44034 (ite c!9340 (t!4929 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) (ite c!9341 (Cons!1451 (h!2035 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) (t!4929 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))) Nil!1452)))))

(declare-fun d!14005 () Bool)

(assert (=> d!14005 e!44036))

(declare-fun res!36296 () Bool)

(assert (=> d!14005 (=> (not res!36296) (not e!44036))))

(assert (=> d!14005 (= res!36296 (isStrictlySorted!276 lt!29208))))

(assert (=> d!14005 (= lt!29208 e!44033)))

(declare-fun c!9338 () Bool)

(assert (=> d!14005 (= c!9338 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) (bvslt (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14005 (isStrictlySorted!276 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!14005 (= (insertStrictlySorted!51 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29208)))

(declare-fun b!67181 () Bool)

(assert (=> b!67181 (= e!44034 (insertStrictlySorted!51 (t!4929 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67182 () Bool)

(assert (=> b!67182 (= e!44035 call!5629)))

(declare-fun bm!5625 () Bool)

(assert (=> bm!5625 (= call!5629 call!5628)))

(declare-fun b!67183 () Bool)

(assert (=> b!67183 (= e!44037 call!5627)))

(declare-fun bm!5626 () Bool)

(assert (=> bm!5626 (= call!5628 ($colon$colon!62 e!44034 (ite c!9338 (h!2035 (toList!705 (+!86 lt!28527 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9339 () Bool)

(assert (=> bm!5626 (= c!9339 c!9338)))

(declare-fun b!67184 () Bool)

(assert (=> b!67184 (= e!44036 (contains!709 lt!29208 (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14005 c!9338) b!67178))

(assert (= (and d!14005 (not c!9338)) b!67176))

(assert (= (and b!67176 c!9340) b!67182))

(assert (= (and b!67176 (not c!9340)) b!67179))

(assert (= (and b!67179 c!9341) b!67175))

(assert (= (and b!67179 (not c!9341)) b!67183))

(assert (= (or b!67175 b!67183) bm!5624))

(assert (= (or b!67182 bm!5624) bm!5625))

(assert (= (or b!67178 bm!5625) bm!5626))

(assert (= (and bm!5626 c!9339) b!67181))

(assert (= (and bm!5626 (not c!9339)) b!67180))

(assert (= (and d!14005 res!36296) b!67177))

(assert (= (and b!67177 res!36295) b!67184))

(declare-fun m!62121 () Bool)

(assert (=> bm!5626 m!62121))

(declare-fun m!62123 () Bool)

(assert (=> b!67181 m!62123))

(declare-fun m!62125 () Bool)

(assert (=> b!67177 m!62125))

(declare-fun m!62127 () Bool)

(assert (=> b!67184 m!62127))

(declare-fun m!62129 () Bool)

(assert (=> d!14005 m!62129))

(declare-fun m!62131 () Bool)

(assert (=> d!14005 m!62131))

(assert (=> d!13895 d!14005))

(declare-fun b!67185 () Bool)

(declare-fun e!44042 () List!1455)

(declare-fun call!5630 () List!1455)

(assert (=> b!67185 (= e!44042 call!5630)))

(declare-fun b!67186 () Bool)

(declare-fun e!44038 () List!1455)

(declare-fun e!44040 () List!1455)

(assert (=> b!67186 (= e!44038 e!44040)))

(declare-fun c!9344 () Bool)

(assert (=> b!67186 (= c!9344 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28527))) (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28527)))) (_1!1052 lt!28520))))))

(declare-fun b!67187 () Bool)

(declare-fun res!36297 () Bool)

(declare-fun e!44041 () Bool)

(assert (=> b!67187 (=> (not res!36297) (not e!44041))))

(declare-fun lt!29209 () List!1455)

(assert (=> b!67187 (= res!36297 (containsKey!134 lt!29209 (_1!1052 lt!28520)))))

(declare-fun bm!5627 () Bool)

(declare-fun call!5632 () List!1455)

(assert (=> bm!5627 (= call!5630 call!5632)))

(declare-fun b!67188 () Bool)

(declare-fun call!5631 () List!1455)

(assert (=> b!67188 (= e!44038 call!5631)))

(declare-fun b!67189 () Bool)

(declare-fun c!9345 () Bool)

(assert (=> b!67189 (= c!9345 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28527))) (bvsgt (_1!1052 (h!2035 (t!4929 (toList!705 lt!28527)))) (_1!1052 lt!28520))))))

(assert (=> b!67189 (= e!44040 e!44042)))

(declare-fun e!44039 () List!1455)

(declare-fun b!67190 () Bool)

(assert (=> b!67190 (= e!44039 (ite c!9344 (t!4929 (t!4929 (toList!705 lt!28527))) (ite c!9345 (Cons!1451 (h!2035 (t!4929 (toList!705 lt!28527))) (t!4929 (t!4929 (toList!705 lt!28527)))) Nil!1452)))))

(declare-fun d!14007 () Bool)

(assert (=> d!14007 e!44041))

(declare-fun res!36298 () Bool)

(assert (=> d!14007 (=> (not res!36298) (not e!44041))))

(assert (=> d!14007 (= res!36298 (isStrictlySorted!276 lt!29209))))

(assert (=> d!14007 (= lt!29209 e!44038)))

(declare-fun c!9342 () Bool)

(assert (=> d!14007 (= c!9342 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28527))) (bvslt (_1!1052 (h!2035 (t!4929 (toList!705 lt!28527)))) (_1!1052 lt!28520))))))

(assert (=> d!14007 (isStrictlySorted!276 (t!4929 (toList!705 lt!28527)))))

(assert (=> d!14007 (= (insertStrictlySorted!51 (t!4929 (toList!705 lt!28527)) (_1!1052 lt!28520) (_2!1052 lt!28520)) lt!29209)))

(declare-fun b!67191 () Bool)

(assert (=> b!67191 (= e!44039 (insertStrictlySorted!51 (t!4929 (t!4929 (toList!705 lt!28527))) (_1!1052 lt!28520) (_2!1052 lt!28520)))))

(declare-fun b!67192 () Bool)

(assert (=> b!67192 (= e!44040 call!5632)))

(declare-fun bm!5628 () Bool)

(assert (=> bm!5628 (= call!5632 call!5631)))

(declare-fun b!67193 () Bool)

(assert (=> b!67193 (= e!44042 call!5630)))

(declare-fun bm!5629 () Bool)

(assert (=> bm!5629 (= call!5631 ($colon$colon!62 e!44039 (ite c!9342 (h!2035 (t!4929 (toList!705 lt!28527))) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520)))))))

(declare-fun c!9343 () Bool)

(assert (=> bm!5629 (= c!9343 c!9342)))

(declare-fun b!67194 () Bool)

(assert (=> b!67194 (= e!44041 (contains!709 lt!29209 (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(assert (= (and d!14007 c!9342) b!67188))

(assert (= (and d!14007 (not c!9342)) b!67186))

(assert (= (and b!67186 c!9344) b!67192))

(assert (= (and b!67186 (not c!9344)) b!67189))

(assert (= (and b!67189 c!9345) b!67185))

(assert (= (and b!67189 (not c!9345)) b!67193))

(assert (= (or b!67185 b!67193) bm!5627))

(assert (= (or b!67192 bm!5627) bm!5628))

(assert (= (or b!67188 bm!5628) bm!5629))

(assert (= (and bm!5629 c!9343) b!67191))

(assert (= (and bm!5629 (not c!9343)) b!67190))

(assert (= (and d!14007 res!36298) b!67187))

(assert (= (and b!67187 res!36297) b!67194))

(declare-fun m!62133 () Bool)

(assert (=> bm!5629 m!62133))

(declare-fun m!62135 () Bool)

(assert (=> b!67191 m!62135))

(declare-fun m!62137 () Bool)

(assert (=> b!67187 m!62137))

(declare-fun m!62139 () Bool)

(assert (=> b!67194 m!62139))

(declare-fun m!62141 () Bool)

(assert (=> d!14007 m!62141))

(declare-fun m!62143 () Bool)

(assert (=> d!14007 m!62143))

(assert (=> b!67059 d!14007))

(declare-fun d!14009 () Bool)

(assert (=> d!14009 (= (apply!72 lt!28971 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!705 lt!28971) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2885 () Bool)

(assert (= bs!2885 d!14009))

(declare-fun m!62145 () Bool)

(assert (=> bs!2885 m!62145))

(assert (=> bs!2885 m!62145))

(declare-fun m!62147 () Bool)

(assert (=> bs!2885 m!62147))

(assert (=> b!66781 d!14009))

(declare-fun d!14011 () Bool)

(declare-fun lt!29210 () Bool)

(assert (=> d!14011 (= lt!29210 (select (content!72 lt!29185) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(declare-fun e!44044 () Bool)

(assert (=> d!14011 (= lt!29210 e!44044)))

(declare-fun res!36300 () Bool)

(assert (=> d!14011 (=> (not res!36300) (not e!44044))))

(assert (=> d!14011 (= res!36300 ((_ is Cons!1451) lt!29185))))

(assert (=> d!14011 (= (contains!709 lt!29185 (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))) lt!29210)))

(declare-fun b!67195 () Bool)

(declare-fun e!44043 () Bool)

(assert (=> b!67195 (= e!44044 e!44043)))

(declare-fun res!36299 () Bool)

(assert (=> b!67195 (=> res!36299 e!44043)))

(assert (=> b!67195 (= res!36299 (= (h!2035 lt!29185) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(declare-fun b!67196 () Bool)

(assert (=> b!67196 (= e!44043 (contains!709 (t!4929 lt!29185) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(assert (= (and d!14011 res!36300) b!67195))

(assert (= (and b!67195 (not res!36299)) b!67196))

(declare-fun m!62149 () Bool)

(assert (=> d!14011 m!62149))

(declare-fun m!62151 () Bool)

(assert (=> d!14011 m!62151))

(declare-fun m!62153 () Bool)

(assert (=> b!67196 m!62153))

(assert (=> b!67133 d!14011))

(declare-fun d!14013 () Bool)

(declare-fun res!36301 () Bool)

(declare-fun e!44045 () Bool)

(assert (=> d!14013 (=> res!36301 e!44045)))

(assert (=> d!14013 (= res!36301 (and ((_ is Cons!1451) (toList!705 lt!28723)) (= (_1!1052 (h!2035 (toList!705 lt!28723))) (_1!1052 lt!28528))))))

(assert (=> d!14013 (= (containsKey!134 (toList!705 lt!28723) (_1!1052 lt!28528)) e!44045)))

(declare-fun b!67197 () Bool)

(declare-fun e!44046 () Bool)

(assert (=> b!67197 (= e!44045 e!44046)))

(declare-fun res!36302 () Bool)

(assert (=> b!67197 (=> (not res!36302) (not e!44046))))

(assert (=> b!67197 (= res!36302 (and (or (not ((_ is Cons!1451) (toList!705 lt!28723))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28723))) (_1!1052 lt!28528))) ((_ is Cons!1451) (toList!705 lt!28723)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28723))) (_1!1052 lt!28528))))))

(declare-fun b!67198 () Bool)

(assert (=> b!67198 (= e!44046 (containsKey!134 (t!4929 (toList!705 lt!28723)) (_1!1052 lt!28528)))))

(assert (= (and d!14013 (not res!36301)) b!67197))

(assert (= (and b!67197 res!36302) b!67198))

(declare-fun m!62155 () Bool)

(assert (=> b!67198 m!62155))

(assert (=> d!13951 d!14013))

(declare-fun d!14015 () Bool)

(declare-fun lt!29211 () Bool)

(assert (=> d!14015 (= lt!29211 (select (content!73 Nil!1451) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!44047 () Bool)

(assert (=> d!14015 (= lt!29211 e!44047)))

(declare-fun res!36303 () Bool)

(assert (=> d!14015 (=> (not res!36303) (not e!44047))))

(assert (=> d!14015 (= res!36303 ((_ is Cons!1450) Nil!1451))))

(assert (=> d!14015 (= (contains!708 Nil!1451 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) lt!29211)))

(declare-fun b!67199 () Bool)

(declare-fun e!44048 () Bool)

(assert (=> b!67199 (= e!44047 e!44048)))

(declare-fun res!36304 () Bool)

(assert (=> b!67199 (=> res!36304 e!44048)))

(assert (=> b!67199 (= res!36304 (= (h!2034 Nil!1451) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67200 () Bool)

(assert (=> b!67200 (= e!44048 (contains!708 (t!4928 Nil!1451) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!14015 res!36303) b!67199))

(assert (= (and b!67199 (not res!36304)) b!67200))

(assert (=> d!14015 m!61617))

(assert (=> d!14015 m!61431))

(declare-fun m!62157 () Bool)

(assert (=> d!14015 m!62157))

(assert (=> b!67200 m!61431))

(declare-fun m!62159 () Bool)

(assert (=> b!67200 m!62159))

(assert (=> b!67157 d!14015))

(declare-fun d!14017 () Bool)

(declare-fun lt!29212 () Bool)

(assert (=> d!14017 (= lt!29212 (select (content!72 (toList!705 lt!29030)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44050 () Bool)

(assert (=> d!14017 (= lt!29212 e!44050)))

(declare-fun res!36306 () Bool)

(assert (=> d!14017 (=> (not res!36306) (not e!44050))))

(assert (=> d!14017 (= res!36306 ((_ is Cons!1451) (toList!705 lt!29030)))))

(assert (=> d!14017 (= (contains!709 (toList!705 lt!29030) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!29212)))

(declare-fun b!67201 () Bool)

(declare-fun e!44049 () Bool)

(assert (=> b!67201 (= e!44050 e!44049)))

(declare-fun res!36305 () Bool)

(assert (=> b!67201 (=> res!36305 e!44049)))

(assert (=> b!67201 (= res!36305 (= (h!2035 (toList!705 lt!29030)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67202 () Bool)

(assert (=> b!67202 (= e!44049 (contains!709 (t!4929 (toList!705 lt!29030)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14017 res!36306) b!67201))

(assert (= (and b!67201 (not res!36305)) b!67202))

(declare-fun m!62161 () Bool)

(assert (=> d!14017 m!62161))

(declare-fun m!62163 () Bool)

(assert (=> d!14017 m!62163))

(declare-fun m!62165 () Bool)

(assert (=> b!67202 m!62165))

(assert (=> b!66885 d!14017))

(declare-fun d!14019 () Bool)

(assert (=> d!14019 (= (content!73 Nil!1451) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!13877 d!14019))

(declare-fun d!14021 () Bool)

(declare-fun e!44051 () Bool)

(assert (=> d!14021 e!44051))

(declare-fun res!36307 () Bool)

(assert (=> d!14021 (=> res!36307 e!44051)))

(declare-fun lt!29213 () Bool)

(assert (=> d!14021 (= res!36307 (not lt!29213))))

(declare-fun lt!29216 () Bool)

(assert (=> d!14021 (= lt!29213 lt!29216)))

(declare-fun lt!29215 () Unit!1824)

(declare-fun e!44052 () Unit!1824)

(assert (=> d!14021 (= lt!29215 e!44052)))

(declare-fun c!9346 () Bool)

(assert (=> d!14021 (= c!9346 lt!29216)))

(assert (=> d!14021 (= lt!29216 (containsKey!134 (toList!705 lt!28971) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14021 (= (contains!705 lt!28971 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) lt!29213)))

(declare-fun b!67203 () Bool)

(declare-fun lt!29214 () Unit!1824)

(assert (=> b!67203 (= e!44052 lt!29214)))

(assert (=> b!67203 (= lt!29214 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28971) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67203 (isDefined!83 (getValueByKey!131 (toList!705 lt!28971) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67204 () Bool)

(declare-fun Unit!1861 () Unit!1824)

(assert (=> b!67204 (= e!44052 Unit!1861)))

(declare-fun b!67205 () Bool)

(assert (=> b!67205 (= e!44051 (isDefined!83 (getValueByKey!131 (toList!705 lt!28971) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14021 c!9346) b!67203))

(assert (= (and d!14021 (not c!9346)) b!67204))

(assert (= (and d!14021 (not res!36307)) b!67205))

(assert (=> d!14021 m!61431))

(declare-fun m!62167 () Bool)

(assert (=> d!14021 m!62167))

(assert (=> b!67203 m!61431))

(declare-fun m!62169 () Bool)

(assert (=> b!67203 m!62169))

(assert (=> b!67203 m!61431))

(declare-fun m!62171 () Bool)

(assert (=> b!67203 m!62171))

(assert (=> b!67203 m!62171))

(declare-fun m!62173 () Bool)

(assert (=> b!67203 m!62173))

(assert (=> b!67205 m!61431))

(assert (=> b!67205 m!62171))

(assert (=> b!67205 m!62171))

(assert (=> b!67205 m!62173))

(assert (=> b!66793 d!14021))

(declare-fun d!14023 () Bool)

(declare-fun res!36308 () Bool)

(declare-fun e!44053 () Bool)

(assert (=> d!14023 (=> res!36308 e!44053)))

(assert (=> d!14023 (= res!36308 (and ((_ is Cons!1451) lt!28717) (= (_1!1052 (h!2035 lt!28717)) (_1!1052 lt!28520))))))

(assert (=> d!14023 (= (containsKey!134 lt!28717 (_1!1052 lt!28520)) e!44053)))

(declare-fun b!67206 () Bool)

(declare-fun e!44054 () Bool)

(assert (=> b!67206 (= e!44053 e!44054)))

(declare-fun res!36309 () Bool)

(assert (=> b!67206 (=> (not res!36309) (not e!44054))))

(assert (=> b!67206 (= res!36309 (and (or (not ((_ is Cons!1451) lt!28717)) (bvsle (_1!1052 (h!2035 lt!28717)) (_1!1052 lt!28520))) ((_ is Cons!1451) lt!28717) (bvslt (_1!1052 (h!2035 lt!28717)) (_1!1052 lt!28520))))))

(declare-fun b!67207 () Bool)

(assert (=> b!67207 (= e!44054 (containsKey!134 (t!4929 lt!28717) (_1!1052 lt!28520)))))

(assert (= (and d!14023 (not res!36308)) b!67206))

(assert (= (and b!67206 res!36309) b!67207))

(declare-fun m!62175 () Bool)

(assert (=> b!67207 m!62175))

(assert (=> b!67051 d!14023))

(declare-fun d!14025 () Bool)

(declare-fun e!44055 () Bool)

(assert (=> d!14025 e!44055))

(declare-fun res!36310 () Bool)

(assert (=> d!14025 (=> res!36310 e!44055)))

(declare-fun lt!29217 () Bool)

(assert (=> d!14025 (= res!36310 (not lt!29217))))

(declare-fun lt!29220 () Bool)

(assert (=> d!14025 (= lt!29217 lt!29220)))

(declare-fun lt!29219 () Unit!1824)

(declare-fun e!44056 () Unit!1824)

(assert (=> d!14025 (= lt!29219 e!44056)))

(declare-fun c!9347 () Bool)

(assert (=> d!14025 (= c!9347 lt!29220)))

(assert (=> d!14025 (= lt!29220 (containsKey!134 (toList!705 lt!28971) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14025 (= (contains!705 lt!28971 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29217)))

(declare-fun b!67208 () Bool)

(declare-fun lt!29218 () Unit!1824)

(assert (=> b!67208 (= e!44056 lt!29218)))

(assert (=> b!67208 (= lt!29218 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28971) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67208 (isDefined!83 (getValueByKey!131 (toList!705 lt!28971) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67209 () Bool)

(declare-fun Unit!1862 () Unit!1824)

(assert (=> b!67209 (= e!44056 Unit!1862)))

(declare-fun b!67210 () Bool)

(assert (=> b!67210 (= e!44055 (isDefined!83 (getValueByKey!131 (toList!705 lt!28971) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14025 c!9347) b!67208))

(assert (= (and d!14025 (not c!9347)) b!67209))

(assert (= (and d!14025 (not res!36310)) b!67210))

(declare-fun m!62177 () Bool)

(assert (=> d!14025 m!62177))

(declare-fun m!62179 () Bool)

(assert (=> b!67208 m!62179))

(declare-fun m!62181 () Bool)

(assert (=> b!67208 m!62181))

(assert (=> b!67208 m!62181))

(declare-fun m!62183 () Bool)

(assert (=> b!67208 m!62183))

(assert (=> b!67210 m!62181))

(assert (=> b!67210 m!62181))

(assert (=> b!67210 m!62183))

(assert (=> bm!5567 d!14025))

(declare-fun d!14027 () Bool)

(declare-fun c!9350 () Bool)

(assert (=> d!14027 (= c!9350 ((_ is Nil!1452) (toList!705 lt!28687)))))

(declare-fun e!44059 () (InoxSet tuple2!2082))

(assert (=> d!14027 (= (content!72 (toList!705 lt!28687)) e!44059)))

(declare-fun b!67215 () Bool)

(assert (=> b!67215 (= e!44059 ((as const (Array tuple2!2082 Bool)) false))))

(declare-fun b!67216 () Bool)

(assert (=> b!67216 (= e!44059 ((_ map or) (store ((as const (Array tuple2!2082 Bool)) false) (h!2035 (toList!705 lt!28687)) true) (content!72 (t!4929 (toList!705 lt!28687)))))))

(assert (= (and d!14027 c!9350) b!67215))

(assert (= (and d!14027 (not c!9350)) b!67216))

(declare-fun m!62185 () Bool)

(assert (=> b!67216 m!62185))

(declare-fun m!62187 () Bool)

(assert (=> b!67216 m!62187))

(assert (=> d!13807 d!14027))

(declare-fun d!14029 () Bool)

(assert (=> d!14029 (= (apply!72 lt!29077 lt!29081) (get!1127 (getValueByKey!131 (toList!705 lt!29077) lt!29081)))))

(declare-fun bs!2886 () Bool)

(assert (= bs!2886 d!14029))

(declare-fun m!62189 () Bool)

(assert (=> bs!2886 m!62189))

(assert (=> bs!2886 m!62189))

(declare-fun m!62191 () Bool)

(assert (=> bs!2886 m!62191))

(assert (=> b!66937 d!14029))

(declare-fun d!14031 () Bool)

(assert (=> d!14031 (= (apply!72 (+!86 lt!29090 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16))) lt!29076) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!29090 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16)))) lt!29076)))))

(declare-fun bs!2887 () Bool)

(assert (= bs!2887 d!14031))

(declare-fun m!62193 () Bool)

(assert (=> bs!2887 m!62193))

(assert (=> bs!2887 m!62193))

(declare-fun m!62195 () Bool)

(assert (=> bs!2887 m!62195))

(assert (=> b!66937 d!14031))

(declare-fun d!14033 () Bool)

(assert (=> d!14033 (= (apply!72 (+!86 lt!29077 (tuple2!2083 lt!29089 (minValue!2054 newMap!16))) lt!29081) (apply!72 lt!29077 lt!29081))))

(declare-fun lt!29221 () Unit!1824)

(assert (=> d!14033 (= lt!29221 (choose!376 lt!29077 lt!29089 (minValue!2054 newMap!16) lt!29081))))

(declare-fun e!44060 () Bool)

(assert (=> d!14033 e!44060))

(declare-fun res!36311 () Bool)

(assert (=> d!14033 (=> (not res!36311) (not e!44060))))

(assert (=> d!14033 (= res!36311 (contains!705 lt!29077 lt!29081))))

(assert (=> d!14033 (= (addApplyDifferent!48 lt!29077 lt!29089 (minValue!2054 newMap!16) lt!29081) lt!29221)))

(declare-fun b!67217 () Bool)

(assert (=> b!67217 (= e!44060 (not (= lt!29081 lt!29089)))))

(assert (= (and d!14033 res!36311) b!67217))

(declare-fun m!62197 () Bool)

(assert (=> d!14033 m!62197))

(assert (=> d!14033 m!61757))

(assert (=> d!14033 m!61757))

(assert (=> d!14033 m!61781))

(declare-fun m!62199 () Bool)

(assert (=> d!14033 m!62199))

(assert (=> d!14033 m!61785))

(assert (=> b!66937 d!14033))

(declare-fun d!14035 () Bool)

(assert (=> d!14035 (contains!705 (+!86 lt!29082 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16))) lt!29085)))

(declare-fun lt!29222 () Unit!1824)

(assert (=> d!14035 (= lt!29222 (choose!377 lt!29082 lt!29087 (zeroValue!2054 newMap!16) lt!29085))))

(assert (=> d!14035 (contains!705 lt!29082 lt!29085)))

(assert (=> d!14035 (= (addStillContains!48 lt!29082 lt!29087 (zeroValue!2054 newMap!16) lt!29085) lt!29222)))

(declare-fun bs!2888 () Bool)

(assert (= bs!2888 d!14035))

(assert (=> bs!2888 m!61761))

(assert (=> bs!2888 m!61761))

(assert (=> bs!2888 m!61763))

(declare-fun m!62201 () Bool)

(assert (=> bs!2888 m!62201))

(declare-fun m!62203 () Bool)

(assert (=> bs!2888 m!62203))

(assert (=> b!66937 d!14035))

(declare-fun d!14037 () Bool)

(declare-fun e!44061 () Bool)

(assert (=> d!14037 e!44061))

(declare-fun res!36313 () Bool)

(assert (=> d!14037 (=> (not res!36313) (not e!44061))))

(declare-fun lt!29225 () ListLongMap!1379)

(assert (=> d!14037 (= res!36313 (contains!705 lt!29225 (_1!1052 (tuple2!2083 lt!29078 (minValue!2054 newMap!16)))))))

(declare-fun lt!29223 () List!1455)

(assert (=> d!14037 (= lt!29225 (ListLongMap!1380 lt!29223))))

(declare-fun lt!29224 () Unit!1824)

(declare-fun lt!29226 () Unit!1824)

(assert (=> d!14037 (= lt!29224 lt!29226)))

(assert (=> d!14037 (= (getValueByKey!131 lt!29223 (_1!1052 (tuple2!2083 lt!29078 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29078 (minValue!2054 newMap!16)))))))

(assert (=> d!14037 (= lt!29226 (lemmaContainsTupThenGetReturnValue!48 lt!29223 (_1!1052 (tuple2!2083 lt!29078 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29078 (minValue!2054 newMap!16)))))))

(assert (=> d!14037 (= lt!29223 (insertStrictlySorted!51 (toList!705 lt!29079) (_1!1052 (tuple2!2083 lt!29078 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29078 (minValue!2054 newMap!16)))))))

(assert (=> d!14037 (= (+!86 lt!29079 (tuple2!2083 lt!29078 (minValue!2054 newMap!16))) lt!29225)))

(declare-fun b!67218 () Bool)

(declare-fun res!36312 () Bool)

(assert (=> b!67218 (=> (not res!36312) (not e!44061))))

(assert (=> b!67218 (= res!36312 (= (getValueByKey!131 (toList!705 lt!29225) (_1!1052 (tuple2!2083 lt!29078 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29078 (minValue!2054 newMap!16))))))))

(declare-fun b!67219 () Bool)

(assert (=> b!67219 (= e!44061 (contains!709 (toList!705 lt!29225) (tuple2!2083 lt!29078 (minValue!2054 newMap!16))))))

(assert (= (and d!14037 res!36313) b!67218))

(assert (= (and b!67218 res!36312) b!67219))

(declare-fun m!62205 () Bool)

(assert (=> d!14037 m!62205))

(declare-fun m!62207 () Bool)

(assert (=> d!14037 m!62207))

(declare-fun m!62209 () Bool)

(assert (=> d!14037 m!62209))

(declare-fun m!62211 () Bool)

(assert (=> d!14037 m!62211))

(declare-fun m!62213 () Bool)

(assert (=> b!67218 m!62213))

(declare-fun m!62215 () Bool)

(assert (=> b!67219 m!62215))

(assert (=> b!66937 d!14037))

(declare-fun d!14039 () Bool)

(assert (=> d!14039 (= (apply!72 (+!86 lt!29077 (tuple2!2083 lt!29089 (minValue!2054 newMap!16))) lt!29081) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!29077 (tuple2!2083 lt!29089 (minValue!2054 newMap!16)))) lt!29081)))))

(declare-fun bs!2889 () Bool)

(assert (= bs!2889 d!14039))

(declare-fun m!62217 () Bool)

(assert (=> bs!2889 m!62217))

(assert (=> bs!2889 m!62217))

(declare-fun m!62219 () Bool)

(assert (=> bs!2889 m!62219))

(assert (=> b!66937 d!14039))

(declare-fun d!14041 () Bool)

(assert (=> d!14041 (= (apply!72 lt!29079 lt!29072) (get!1127 (getValueByKey!131 (toList!705 lt!29079) lt!29072)))))

(declare-fun bs!2890 () Bool)

(assert (= bs!2890 d!14041))

(declare-fun m!62221 () Bool)

(assert (=> bs!2890 m!62221))

(assert (=> bs!2890 m!62221))

(declare-fun m!62223 () Bool)

(assert (=> bs!2890 m!62223))

(assert (=> b!66937 d!14041))

(declare-fun d!14043 () Bool)

(declare-fun e!44062 () Bool)

(assert (=> d!14043 e!44062))

(declare-fun res!36315 () Bool)

(assert (=> d!14043 (=> (not res!36315) (not e!44062))))

(declare-fun lt!29229 () ListLongMap!1379)

(assert (=> d!14043 (= res!36315 (contains!705 lt!29229 (_1!1052 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16)))))))

(declare-fun lt!29227 () List!1455)

(assert (=> d!14043 (= lt!29229 (ListLongMap!1380 lt!29227))))

(declare-fun lt!29228 () Unit!1824)

(declare-fun lt!29230 () Unit!1824)

(assert (=> d!14043 (= lt!29228 lt!29230)))

(assert (=> d!14043 (= (getValueByKey!131 lt!29227 (_1!1052 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14043 (= lt!29230 (lemmaContainsTupThenGetReturnValue!48 lt!29227 (_1!1052 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14043 (= lt!29227 (insertStrictlySorted!51 (toList!705 lt!29082) (_1!1052 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14043 (= (+!86 lt!29082 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16))) lt!29229)))

(declare-fun b!67220 () Bool)

(declare-fun res!36314 () Bool)

(assert (=> b!67220 (=> (not res!36314) (not e!44062))))

(assert (=> b!67220 (= res!36314 (= (getValueByKey!131 (toList!705 lt!29229) (_1!1052 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16))))))))

(declare-fun b!67221 () Bool)

(assert (=> b!67221 (= e!44062 (contains!709 (toList!705 lt!29229) (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16))))))

(assert (= (and d!14043 res!36315) b!67220))

(assert (= (and b!67220 res!36314) b!67221))

(declare-fun m!62225 () Bool)

(assert (=> d!14043 m!62225))

(declare-fun m!62227 () Bool)

(assert (=> d!14043 m!62227))

(declare-fun m!62229 () Bool)

(assert (=> d!14043 m!62229))

(declare-fun m!62231 () Bool)

(assert (=> d!14043 m!62231))

(declare-fun m!62233 () Bool)

(assert (=> b!67220 m!62233))

(declare-fun m!62235 () Bool)

(assert (=> b!67221 m!62235))

(assert (=> b!66937 d!14043))

(declare-fun b!67222 () Bool)

(declare-fun e!44069 () ListLongMap!1379)

(declare-fun call!5633 () ListLongMap!1379)

(assert (=> b!67222 (= e!44069 call!5633)))

(declare-fun bm!5630 () Bool)

(assert (=> bm!5630 (= call!5633 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16)))))

(declare-fun b!67223 () Bool)

(declare-fun e!44063 () Bool)

(declare-fun e!44066 () Bool)

(assert (=> b!67223 (= e!44063 e!44066)))

(declare-fun c!9353 () Bool)

(declare-fun e!44068 () Bool)

(assert (=> b!67223 (= c!9353 e!44068)))

(declare-fun res!36318 () Bool)

(assert (=> b!67223 (=> (not res!36318) (not e!44068))))

(assert (=> b!67223 (= res!36318 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!67224 () Bool)

(declare-fun e!44064 () Bool)

(assert (=> b!67224 (= e!44066 e!44064)))

(assert (=> b!67224 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun res!36317 () Bool)

(declare-fun lt!29231 () ListLongMap!1379)

(assert (=> b!67224 (= res!36317 (contains!705 lt!29231 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67224 (=> (not res!36317) (not e!44064))))

(declare-fun b!67225 () Bool)

(assert (=> b!67225 (= e!44068 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67225 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67226 () Bool)

(declare-fun e!44065 () ListLongMap!1379)

(assert (=> b!67226 (= e!44065 (ListLongMap!1380 Nil!1452))))

(declare-fun b!67227 () Bool)

(declare-fun e!44067 () Bool)

(assert (=> b!67227 (= e!44067 (= lt!29231 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16))))))

(declare-fun b!67228 () Bool)

(assert (=> b!67228 (= e!44067 (isEmpty!313 lt!29231))))

(declare-fun b!67230 () Bool)

(assert (=> b!67230 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> b!67230 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (_values!2129 newMap!16))))))

(assert (=> b!67230 (= e!44064 (= (apply!72 lt!29231 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!67231 () Bool)

(declare-fun res!36316 () Bool)

(assert (=> b!67231 (=> (not res!36316) (not e!44063))))

(assert (=> b!67231 (= res!36316 (not (contains!705 lt!29231 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67232 () Bool)

(assert (=> b!67232 (= e!44065 e!44069)))

(declare-fun c!9354 () Bool)

(assert (=> b!67232 (= c!9354 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67233 () Bool)

(declare-fun lt!29233 () Unit!1824)

(declare-fun lt!29234 () Unit!1824)

(assert (=> b!67233 (= lt!29233 lt!29234)))

(declare-fun lt!29232 () V!2913)

(declare-fun lt!29237 () (_ BitVec 64))

(declare-fun lt!29235 () ListLongMap!1379)

(declare-fun lt!29236 () (_ BitVec 64))

(assert (=> b!67233 (not (contains!705 (+!86 lt!29235 (tuple2!2083 lt!29236 lt!29232)) lt!29237))))

(assert (=> b!67233 (= lt!29234 (addStillNotContains!23 lt!29235 lt!29236 lt!29232 lt!29237))))

(assert (=> b!67233 (= lt!29237 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67233 (= lt!29232 (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67233 (= lt!29236 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67233 (= lt!29235 call!5633)))

(assert (=> b!67233 (= e!44069 (+!86 call!5633 (tuple2!2083 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!14045 () Bool)

(assert (=> d!14045 e!44063))

(declare-fun res!36319 () Bool)

(assert (=> d!14045 (=> (not res!36319) (not e!44063))))

(assert (=> d!14045 (= res!36319 (not (contains!705 lt!29231 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14045 (= lt!29231 e!44065)))

(declare-fun c!9352 () Bool)

(assert (=> d!14045 (= c!9352 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!14045 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14045 (= (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29231)))

(declare-fun b!67229 () Bool)

(assert (=> b!67229 (= e!44066 e!44067)))

(declare-fun c!9351 () Bool)

(assert (=> b!67229 (= c!9351 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (= (and d!14045 c!9352) b!67226))

(assert (= (and d!14045 (not c!9352)) b!67232))

(assert (= (and b!67232 c!9354) b!67233))

(assert (= (and b!67232 (not c!9354)) b!67222))

(assert (= (or b!67233 b!67222) bm!5630))

(assert (= (and d!14045 res!36319) b!67231))

(assert (= (and b!67231 res!36316) b!67223))

(assert (= (and b!67223 res!36318) b!67225))

(assert (= (and b!67223 c!9353) b!67224))

(assert (= (and b!67223 (not c!9353)) b!67229))

(assert (= (and b!67224 res!36317) b!67230))

(assert (= (and b!67229 c!9351) b!67227))

(assert (= (and b!67229 (not c!9351)) b!67228))

(declare-fun b_lambda!3015 () Bool)

(assert (=> (not b_lambda!3015) (not b!67230)))

(assert (=> b!67230 t!4942))

(declare-fun b_and!4149 () Bool)

(assert (= b_and!4145 (and (=> t!4942 result!2587) b_and!4149)))

(assert (=> b!67230 t!4944))

(declare-fun b_and!4151 () Bool)

(assert (= b_and!4147 (and (=> t!4944 result!2589) b_and!4151)))

(declare-fun b_lambda!3017 () Bool)

(assert (=> (not b_lambda!3017) (not b!67233)))

(assert (=> b!67233 t!4942))

(declare-fun b_and!4153 () Bool)

(assert (= b_and!4149 (and (=> t!4942 result!2587) b_and!4153)))

(assert (=> b!67233 t!4944))

(declare-fun b_and!4155 () Bool)

(assert (= b_and!4151 (and (=> t!4944 result!2589) b_and!4155)))

(declare-fun m!62237 () Bool)

(assert (=> b!67227 m!62237))

(declare-fun m!62239 () Bool)

(assert (=> d!14045 m!62239))

(assert (=> d!14045 m!61297))

(assert (=> b!67225 m!61431))

(assert (=> b!67225 m!61431))

(assert (=> b!67225 m!61433))

(assert (=> b!67230 m!61431))

(declare-fun m!62241 () Bool)

(assert (=> b!67230 m!62241))

(assert (=> b!67230 m!61683))

(assert (=> b!67230 m!61477))

(assert (=> b!67230 m!61685))

(assert (=> b!67230 m!61683))

(assert (=> b!67230 m!61477))

(assert (=> b!67230 m!61431))

(assert (=> b!67224 m!61431))

(assert (=> b!67224 m!61431))

(declare-fun m!62243 () Bool)

(assert (=> b!67224 m!62243))

(declare-fun m!62245 () Bool)

(assert (=> b!67231 m!62245))

(assert (=> bm!5630 m!62237))

(declare-fun m!62247 () Bool)

(assert (=> b!67228 m!62247))

(assert (=> b!67232 m!61431))

(assert (=> b!67232 m!61431))

(assert (=> b!67232 m!61433))

(declare-fun m!62249 () Bool)

(assert (=> b!67233 m!62249))

(assert (=> b!67233 m!61477))

(assert (=> b!67233 m!61431))

(declare-fun m!62251 () Bool)

(assert (=> b!67233 m!62251))

(declare-fun m!62253 () Bool)

(assert (=> b!67233 m!62253))

(assert (=> b!67233 m!61683))

(assert (=> b!67233 m!61477))

(assert (=> b!67233 m!61685))

(assert (=> b!67233 m!62249))

(declare-fun m!62255 () Bool)

(assert (=> b!67233 m!62255))

(assert (=> b!67233 m!61683))

(assert (=> b!66937 d!14045))

(declare-fun d!14047 () Bool)

(assert (=> d!14047 (= (apply!72 (+!86 lt!29079 (tuple2!2083 lt!29078 (minValue!2054 newMap!16))) lt!29072) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!29079 (tuple2!2083 lt!29078 (minValue!2054 newMap!16)))) lt!29072)))))

(declare-fun bs!2891 () Bool)

(assert (= bs!2891 d!14047))

(declare-fun m!62257 () Bool)

(assert (=> bs!2891 m!62257))

(assert (=> bs!2891 m!62257))

(declare-fun m!62259 () Bool)

(assert (=> bs!2891 m!62259))

(assert (=> b!66937 d!14047))

(declare-fun d!14049 () Bool)

(assert (=> d!14049 (= (apply!72 (+!86 lt!29090 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16))) lt!29076) (apply!72 lt!29090 lt!29076))))

(declare-fun lt!29238 () Unit!1824)

(assert (=> d!14049 (= lt!29238 (choose!376 lt!29090 lt!29075 (zeroValue!2054 newMap!16) lt!29076))))

(declare-fun e!44070 () Bool)

(assert (=> d!14049 e!44070))

(declare-fun res!36320 () Bool)

(assert (=> d!14049 (=> (not res!36320) (not e!44070))))

(assert (=> d!14049 (= res!36320 (contains!705 lt!29090 lt!29076))))

(assert (=> d!14049 (= (addApplyDifferent!48 lt!29090 lt!29075 (zeroValue!2054 newMap!16) lt!29076) lt!29238)))

(declare-fun b!67234 () Bool)

(assert (=> b!67234 (= e!44070 (not (= lt!29076 lt!29075)))))

(assert (= (and d!14049 res!36320) b!67234))

(declare-fun m!62261 () Bool)

(assert (=> d!14049 m!62261))

(assert (=> d!14049 m!61771))

(assert (=> d!14049 m!61771))

(assert (=> d!14049 m!61773))

(declare-fun m!62263 () Bool)

(assert (=> d!14049 m!62263))

(assert (=> d!14049 m!61775))

(assert (=> b!66937 d!14049))

(declare-fun d!14051 () Bool)

(declare-fun e!44071 () Bool)

(assert (=> d!14051 e!44071))

(declare-fun res!36322 () Bool)

(assert (=> d!14051 (=> (not res!36322) (not e!44071))))

(declare-fun lt!29241 () ListLongMap!1379)

(assert (=> d!14051 (= res!36322 (contains!705 lt!29241 (_1!1052 (tuple2!2083 lt!29089 (minValue!2054 newMap!16)))))))

(declare-fun lt!29239 () List!1455)

(assert (=> d!14051 (= lt!29241 (ListLongMap!1380 lt!29239))))

(declare-fun lt!29240 () Unit!1824)

(declare-fun lt!29242 () Unit!1824)

(assert (=> d!14051 (= lt!29240 lt!29242)))

(assert (=> d!14051 (= (getValueByKey!131 lt!29239 (_1!1052 (tuple2!2083 lt!29089 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29089 (minValue!2054 newMap!16)))))))

(assert (=> d!14051 (= lt!29242 (lemmaContainsTupThenGetReturnValue!48 lt!29239 (_1!1052 (tuple2!2083 lt!29089 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29089 (minValue!2054 newMap!16)))))))

(assert (=> d!14051 (= lt!29239 (insertStrictlySorted!51 (toList!705 lt!29077) (_1!1052 (tuple2!2083 lt!29089 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29089 (minValue!2054 newMap!16)))))))

(assert (=> d!14051 (= (+!86 lt!29077 (tuple2!2083 lt!29089 (minValue!2054 newMap!16))) lt!29241)))

(declare-fun b!67235 () Bool)

(declare-fun res!36321 () Bool)

(assert (=> b!67235 (=> (not res!36321) (not e!44071))))

(assert (=> b!67235 (= res!36321 (= (getValueByKey!131 (toList!705 lt!29241) (_1!1052 (tuple2!2083 lt!29089 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29089 (minValue!2054 newMap!16))))))))

(declare-fun b!67236 () Bool)

(assert (=> b!67236 (= e!44071 (contains!709 (toList!705 lt!29241) (tuple2!2083 lt!29089 (minValue!2054 newMap!16))))))

(assert (= (and d!14051 res!36322) b!67235))

(assert (= (and b!67235 res!36321) b!67236))

(declare-fun m!62265 () Bool)

(assert (=> d!14051 m!62265))

(declare-fun m!62267 () Bool)

(assert (=> d!14051 m!62267))

(declare-fun m!62269 () Bool)

(assert (=> d!14051 m!62269))

(declare-fun m!62271 () Bool)

(assert (=> d!14051 m!62271))

(declare-fun m!62273 () Bool)

(assert (=> b!67235 m!62273))

(declare-fun m!62275 () Bool)

(assert (=> b!67236 m!62275))

(assert (=> b!66937 d!14051))

(declare-fun d!14053 () Bool)

(declare-fun e!44072 () Bool)

(assert (=> d!14053 e!44072))

(declare-fun res!36324 () Bool)

(assert (=> d!14053 (=> (not res!36324) (not e!44072))))

(declare-fun lt!29245 () ListLongMap!1379)

(assert (=> d!14053 (= res!36324 (contains!705 lt!29245 (_1!1052 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16)))))))

(declare-fun lt!29243 () List!1455)

(assert (=> d!14053 (= lt!29245 (ListLongMap!1380 lt!29243))))

(declare-fun lt!29244 () Unit!1824)

(declare-fun lt!29246 () Unit!1824)

(assert (=> d!14053 (= lt!29244 lt!29246)))

(assert (=> d!14053 (= (getValueByKey!131 lt!29243 (_1!1052 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14053 (= lt!29246 (lemmaContainsTupThenGetReturnValue!48 lt!29243 (_1!1052 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14053 (= lt!29243 (insertStrictlySorted!51 (toList!705 lt!29090) (_1!1052 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14053 (= (+!86 lt!29090 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16))) lt!29245)))

(declare-fun b!67237 () Bool)

(declare-fun res!36323 () Bool)

(assert (=> b!67237 (=> (not res!36323) (not e!44072))))

(assert (=> b!67237 (= res!36323 (= (getValueByKey!131 (toList!705 lt!29245) (_1!1052 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16))))))))

(declare-fun b!67238 () Bool)

(assert (=> b!67238 (= e!44072 (contains!709 (toList!705 lt!29245) (tuple2!2083 lt!29075 (zeroValue!2054 newMap!16))))))

(assert (= (and d!14053 res!36324) b!67237))

(assert (= (and b!67237 res!36323) b!67238))

(declare-fun m!62277 () Bool)

(assert (=> d!14053 m!62277))

(declare-fun m!62279 () Bool)

(assert (=> d!14053 m!62279))

(declare-fun m!62281 () Bool)

(assert (=> d!14053 m!62281))

(declare-fun m!62283 () Bool)

(assert (=> d!14053 m!62283))

(declare-fun m!62285 () Bool)

(assert (=> b!67237 m!62285))

(declare-fun m!62287 () Bool)

(assert (=> b!67238 m!62287))

(assert (=> b!66937 d!14053))

(declare-fun d!14055 () Bool)

(assert (=> d!14055 (= (apply!72 (+!86 lt!29079 (tuple2!2083 lt!29078 (minValue!2054 newMap!16))) lt!29072) (apply!72 lt!29079 lt!29072))))

(declare-fun lt!29247 () Unit!1824)

(assert (=> d!14055 (= lt!29247 (choose!376 lt!29079 lt!29078 (minValue!2054 newMap!16) lt!29072))))

(declare-fun e!44073 () Bool)

(assert (=> d!14055 e!44073))

(declare-fun res!36325 () Bool)

(assert (=> d!14055 (=> (not res!36325) (not e!44073))))

(assert (=> d!14055 (= res!36325 (contains!705 lt!29079 lt!29072))))

(assert (=> d!14055 (= (addApplyDifferent!48 lt!29079 lt!29078 (minValue!2054 newMap!16) lt!29072) lt!29247)))

(declare-fun b!67239 () Bool)

(assert (=> b!67239 (= e!44073 (not (= lt!29072 lt!29078)))))

(assert (= (and d!14055 res!36325) b!67239))

(declare-fun m!62289 () Bool)

(assert (=> d!14055 m!62289))

(assert (=> d!14055 m!61777))

(assert (=> d!14055 m!61777))

(assert (=> d!14055 m!61783))

(declare-fun m!62291 () Bool)

(assert (=> d!14055 m!62291))

(assert (=> d!14055 m!61769))

(assert (=> b!66937 d!14055))

(declare-fun d!14057 () Bool)

(assert (=> d!14057 (= (apply!72 lt!29090 lt!29076) (get!1127 (getValueByKey!131 (toList!705 lt!29090) lt!29076)))))

(declare-fun bs!2892 () Bool)

(assert (= bs!2892 d!14057))

(declare-fun m!62293 () Bool)

(assert (=> bs!2892 m!62293))

(assert (=> bs!2892 m!62293))

(declare-fun m!62295 () Bool)

(assert (=> bs!2892 m!62295))

(assert (=> b!66937 d!14057))

(declare-fun d!14059 () Bool)

(declare-fun e!44074 () Bool)

(assert (=> d!14059 e!44074))

(declare-fun res!36326 () Bool)

(assert (=> d!14059 (=> res!36326 e!44074)))

(declare-fun lt!29248 () Bool)

(assert (=> d!14059 (= res!36326 (not lt!29248))))

(declare-fun lt!29251 () Bool)

(assert (=> d!14059 (= lt!29248 lt!29251)))

(declare-fun lt!29250 () Unit!1824)

(declare-fun e!44075 () Unit!1824)

(assert (=> d!14059 (= lt!29250 e!44075)))

(declare-fun c!9355 () Bool)

(assert (=> d!14059 (= c!9355 lt!29251)))

(assert (=> d!14059 (= lt!29251 (containsKey!134 (toList!705 (+!86 lt!29082 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16)))) lt!29085))))

(assert (=> d!14059 (= (contains!705 (+!86 lt!29082 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16))) lt!29085) lt!29248)))

(declare-fun b!67240 () Bool)

(declare-fun lt!29249 () Unit!1824)

(assert (=> b!67240 (= e!44075 lt!29249)))

(assert (=> b!67240 (= lt!29249 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (+!86 lt!29082 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16)))) lt!29085))))

(assert (=> b!67240 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!29082 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16)))) lt!29085))))

(declare-fun b!67241 () Bool)

(declare-fun Unit!1863 () Unit!1824)

(assert (=> b!67241 (= e!44075 Unit!1863)))

(declare-fun b!67242 () Bool)

(assert (=> b!67242 (= e!44074 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!29082 (tuple2!2083 lt!29087 (zeroValue!2054 newMap!16)))) lt!29085)))))

(assert (= (and d!14059 c!9355) b!67240))

(assert (= (and d!14059 (not c!9355)) b!67241))

(assert (= (and d!14059 (not res!36326)) b!67242))

(declare-fun m!62297 () Bool)

(assert (=> d!14059 m!62297))

(declare-fun m!62299 () Bool)

(assert (=> b!67240 m!62299))

(declare-fun m!62301 () Bool)

(assert (=> b!67240 m!62301))

(assert (=> b!67240 m!62301))

(declare-fun m!62303 () Bool)

(assert (=> b!67240 m!62303))

(assert (=> b!67242 m!62301))

(assert (=> b!67242 m!62301))

(assert (=> b!67242 m!62303))

(assert (=> b!66937 d!14059))

(declare-fun d!14061 () Bool)

(assert (=> d!14061 (= (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!66801 d!14061))

(assert (=> d!13825 d!13811))

(assert (=> d!13825 d!13835))

(declare-fun d!14063 () Bool)

(assert (=> d!14063 (contains!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28669)))

(assert (=> d!14063 true))

(declare-fun _$35!309 () Unit!1824)

(assert (=> d!14063 (= (choose!377 lt!28666 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28669) _$35!309)))

(declare-fun bs!2893 () Bool)

(assert (= bs!2893 d!14063))

(assert (=> bs!2893 m!61035))

(assert (=> bs!2893 m!61035))

(assert (=> bs!2893 m!61037))

(assert (=> d!13825 d!14063))

(declare-fun d!14065 () Bool)

(declare-fun e!44076 () Bool)

(assert (=> d!14065 e!44076))

(declare-fun res!36327 () Bool)

(assert (=> d!14065 (=> res!36327 e!44076)))

(declare-fun lt!29252 () Bool)

(assert (=> d!14065 (= res!36327 (not lt!29252))))

(declare-fun lt!29255 () Bool)

(assert (=> d!14065 (= lt!29252 lt!29255)))

(declare-fun lt!29254 () Unit!1824)

(declare-fun e!44077 () Unit!1824)

(assert (=> d!14065 (= lt!29254 e!44077)))

(declare-fun c!9356 () Bool)

(assert (=> d!14065 (= c!9356 lt!29255)))

(assert (=> d!14065 (= lt!29255 (containsKey!134 (toList!705 lt!28666) lt!28669))))

(assert (=> d!14065 (= (contains!705 lt!28666 lt!28669) lt!29252)))

(declare-fun b!67244 () Bool)

(declare-fun lt!29253 () Unit!1824)

(assert (=> b!67244 (= e!44077 lt!29253)))

(assert (=> b!67244 (= lt!29253 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28666) lt!28669))))

(assert (=> b!67244 (isDefined!83 (getValueByKey!131 (toList!705 lt!28666) lt!28669))))

(declare-fun b!67245 () Bool)

(declare-fun Unit!1864 () Unit!1824)

(assert (=> b!67245 (= e!44077 Unit!1864)))

(declare-fun b!67246 () Bool)

(assert (=> b!67246 (= e!44076 (isDefined!83 (getValueByKey!131 (toList!705 lt!28666) lt!28669)))))

(assert (= (and d!14065 c!9356) b!67244))

(assert (= (and d!14065 (not c!9356)) b!67245))

(assert (= (and d!14065 (not res!36327)) b!67246))

(declare-fun m!62305 () Bool)

(assert (=> d!14065 m!62305))

(declare-fun m!62307 () Bool)

(assert (=> b!67244 m!62307))

(declare-fun m!62309 () Bool)

(assert (=> b!67244 m!62309))

(assert (=> b!67244 m!62309))

(declare-fun m!62311 () Bool)

(assert (=> b!67244 m!62311))

(assert (=> b!67246 m!62309))

(assert (=> b!67246 m!62309))

(assert (=> b!67246 m!62311))

(assert (=> d!13825 d!14065))

(declare-fun d!14067 () Bool)

(assert (=> d!14067 (= (isDefined!83 (getValueByKey!131 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))))) (not (isEmpty!315 (getValueByKey!131 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))))

(declare-fun bs!2894 () Bool)

(assert (= bs!2894 d!14067))

(assert (=> bs!2894 m!61493))

(declare-fun m!62313 () Bool)

(assert (=> bs!2894 m!62313))

(assert (=> b!66797 d!14067))

(declare-fun e!44079 () Option!137)

(declare-fun b!67249 () Bool)

(assert (=> b!67249 (= e!44079 (getValueByKey!131 (t!4929 (toList!705 e!43717)) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))

(declare-fun b!67247 () Bool)

(declare-fun e!44078 () Option!137)

(assert (=> b!67247 (= e!44078 (Some!136 (_2!1052 (h!2035 (toList!705 e!43717)))))))

(declare-fun c!9357 () Bool)

(declare-fun d!14069 () Bool)

(assert (=> d!14069 (= c!9357 (and ((_ is Cons!1451) (toList!705 e!43717)) (= (_1!1052 (h!2035 (toList!705 e!43717))) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))))))))

(assert (=> d!14069 (= (getValueByKey!131 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))) e!44078)))

(declare-fun b!67250 () Bool)

(assert (=> b!67250 (= e!44079 None!135)))

(declare-fun b!67248 () Bool)

(assert (=> b!67248 (= e!44078 e!44079)))

(declare-fun c!9358 () Bool)

(assert (=> b!67248 (= c!9358 (and ((_ is Cons!1451) (toList!705 e!43717)) (not (= (_1!1052 (h!2035 (toList!705 e!43717))) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))))

(assert (= (and d!14069 c!9357) b!67247))

(assert (= (and d!14069 (not c!9357)) b!67248))

(assert (= (and b!67248 c!9358) b!67249))

(assert (= (and b!67248 (not c!9358)) b!67250))

(declare-fun m!62315 () Bool)

(assert (=> b!67249 m!62315))

(assert (=> b!66797 d!14069))

(declare-fun d!14071 () Bool)

(assert (=> d!14071 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2895 () Bool)

(assert (= bs!2895 d!14071))

(assert (=> bs!2895 m!61857))

(declare-fun m!62317 () Bool)

(assert (=> bs!2895 m!62317))

(assert (=> b!67016 d!14071))

(declare-fun b!67253 () Bool)

(declare-fun e!44081 () Option!137)

(assert (=> b!67253 (= e!44081 (getValueByKey!131 (t!4929 (toList!705 lt!28707)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67251 () Bool)

(declare-fun e!44080 () Option!137)

(assert (=> b!67251 (= e!44080 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28707)))))))

(declare-fun d!14073 () Bool)

(declare-fun c!9359 () Bool)

(assert (=> d!14073 (= c!9359 (and ((_ is Cons!1451) (toList!705 lt!28707)) (= (_1!1052 (h!2035 (toList!705 lt!28707))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14073 (= (getValueByKey!131 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000) e!44080)))

(declare-fun b!67254 () Bool)

(assert (=> b!67254 (= e!44081 None!135)))

(declare-fun b!67252 () Bool)

(assert (=> b!67252 (= e!44080 e!44081)))

(declare-fun c!9360 () Bool)

(assert (=> b!67252 (= c!9360 (and ((_ is Cons!1451) (toList!705 lt!28707)) (not (= (_1!1052 (h!2035 (toList!705 lt!28707))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14073 c!9359) b!67251))

(assert (= (and d!14073 (not c!9359)) b!67252))

(assert (= (and b!67252 c!9360) b!67253))

(assert (= (and b!67252 (not c!9360)) b!67254))

(declare-fun m!62319 () Bool)

(assert (=> b!67253 m!62319))

(assert (=> b!67016 d!14073))

(assert (=> d!13889 d!13895))

(assert (=> d!13889 d!13887))

(assert (=> d!13889 d!13891))

(assert (=> d!13889 d!13893))

(declare-fun d!14075 () Bool)

(assert (=> d!14075 (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29256 () Unit!1824)

(assert (=> d!14075 (= lt!29256 (choose!379 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44082 () Bool)

(assert (=> d!14075 e!44082))

(declare-fun res!36328 () Bool)

(assert (=> d!14075 (=> (not res!36328) (not e!44082))))

(assert (=> d!14075 (= res!36328 (isStrictlySorted!276 (toList!705 lt!28707)))))

(assert (=> d!14075 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000) lt!29256)))

(declare-fun b!67255 () Bool)

(assert (=> b!67255 (= e!44082 (containsKey!134 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14075 res!36328) b!67255))

(assert (=> d!14075 m!61545))

(assert (=> d!14075 m!61545))

(assert (=> d!14075 m!61547))

(declare-fun m!62321 () Bool)

(assert (=> d!14075 m!62321))

(declare-fun m!62323 () Bool)

(assert (=> d!14075 m!62323))

(assert (=> b!67255 m!61541))

(assert (=> b!66815 d!14075))

(declare-fun d!14077 () Bool)

(assert (=> d!14077 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2896 () Bool)

(assert (= bs!2896 d!14077))

(assert (=> bs!2896 m!61545))

(declare-fun m!62325 () Bool)

(assert (=> bs!2896 m!62325))

(assert (=> b!66815 d!14077))

(declare-fun b!67258 () Bool)

(declare-fun e!44084 () Option!137)

(assert (=> b!67258 (= e!44084 (getValueByKey!131 (t!4929 (toList!705 lt!28707)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67256 () Bool)

(declare-fun e!44083 () Option!137)

(assert (=> b!67256 (= e!44083 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28707)))))))

(declare-fun d!14079 () Bool)

(declare-fun c!9361 () Bool)

(assert (=> d!14079 (= c!9361 (and ((_ is Cons!1451) (toList!705 lt!28707)) (= (_1!1052 (h!2035 (toList!705 lt!28707))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14079 (= (getValueByKey!131 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000) e!44083)))

(declare-fun b!67259 () Bool)

(assert (=> b!67259 (= e!44084 None!135)))

(declare-fun b!67257 () Bool)

(assert (=> b!67257 (= e!44083 e!44084)))

(declare-fun c!9362 () Bool)

(assert (=> b!67257 (= c!9362 (and ((_ is Cons!1451) (toList!705 lt!28707)) (not (= (_1!1052 (h!2035 (toList!705 lt!28707))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14079 c!9361) b!67256))

(assert (= (and d!14079 (not c!9361)) b!67257))

(assert (= (and b!67257 c!9362) b!67258))

(assert (= (and b!67257 (not c!9362)) b!67259))

(declare-fun m!62327 () Bool)

(assert (=> b!67258 m!62327))

(assert (=> b!66815 d!14079))

(declare-fun d!14081 () Bool)

(assert (=> d!14081 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28719) (_1!1052 lt!28520))) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28719) (_1!1052 lt!28520)))))))

(declare-fun bs!2897 () Bool)

(assert (= bs!2897 d!14081))

(assert (=> bs!2897 m!61133))

(declare-fun m!62329 () Bool)

(assert (=> bs!2897 m!62329))

(assert (=> b!67046 d!14081))

(assert (=> b!67046 d!13933))

(declare-fun b!67260 () Bool)

(declare-fun e!44091 () ListLongMap!1379)

(declare-fun call!5634 () ListLongMap!1379)

(assert (=> b!67260 (= e!44091 call!5634)))

(declare-fun bm!5631 () Bool)

(assert (=> bm!5631 (= call!5634 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) (zeroValue!2054 newMap!16) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16)))))

(declare-fun b!67261 () Bool)

(declare-fun e!44085 () Bool)

(declare-fun e!44088 () Bool)

(assert (=> b!67261 (= e!44085 e!44088)))

(declare-fun c!9365 () Bool)

(declare-fun e!44090 () Bool)

(assert (=> b!67261 (= c!9365 e!44090)))

(declare-fun res!36331 () Bool)

(assert (=> b!67261 (=> (not res!36331) (not e!44090))))

(assert (=> b!67261 (= res!36331 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!67262 () Bool)

(declare-fun e!44086 () Bool)

(assert (=> b!67262 (= e!44088 e!44086)))

(assert (=> b!67262 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun res!36330 () Bool)

(declare-fun lt!29257 () ListLongMap!1379)

(assert (=> b!67262 (= res!36330 (contains!705 lt!29257 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67262 (=> (not res!36330) (not e!44086))))

(declare-fun b!67263 () Bool)

(assert (=> b!67263 (= e!44090 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67263 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67264 () Bool)

(declare-fun e!44087 () ListLongMap!1379)

(assert (=> b!67264 (= e!44087 (ListLongMap!1380 Nil!1452))))

(declare-fun e!44089 () Bool)

(declare-fun b!67265 () Bool)

(assert (=> b!67265 (= e!44089 (= lt!29257 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) (zeroValue!2054 newMap!16) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16))))))

(declare-fun b!67266 () Bool)

(assert (=> b!67266 (= e!44089 (isEmpty!313 lt!29257))))

(declare-fun b!67268 () Bool)

(assert (=> b!67268 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> b!67268 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (_values!2129 newMap!16))))))

(assert (=> b!67268 (= e!44086 (= (apply!72 lt!29257 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!67269 () Bool)

(declare-fun res!36329 () Bool)

(assert (=> b!67269 (=> (not res!36329) (not e!44085))))

(assert (=> b!67269 (= res!36329 (not (contains!705 lt!29257 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67270 () Bool)

(assert (=> b!67270 (= e!44087 e!44091)))

(declare-fun c!9366 () Bool)

(assert (=> b!67270 (= c!9366 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67271 () Bool)

(declare-fun lt!29259 () Unit!1824)

(declare-fun lt!29260 () Unit!1824)

(assert (=> b!67271 (= lt!29259 lt!29260)))

(declare-fun lt!29261 () ListLongMap!1379)

(declare-fun lt!29258 () V!2913)

(declare-fun lt!29262 () (_ BitVec 64))

(declare-fun lt!29263 () (_ BitVec 64))

(assert (=> b!67271 (not (contains!705 (+!86 lt!29261 (tuple2!2083 lt!29262 lt!29258)) lt!29263))))

(assert (=> b!67271 (= lt!29260 (addStillNotContains!23 lt!29261 lt!29262 lt!29258 lt!29263))))

(assert (=> b!67271 (= lt!29263 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67271 (= lt!29258 (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67271 (= lt!29262 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67271 (= lt!29261 call!5634)))

(assert (=> b!67271 (= e!44091 (+!86 call!5634 (tuple2!2083 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!14083 () Bool)

(assert (=> d!14083 e!44085))

(declare-fun res!36332 () Bool)

(assert (=> d!14083 (=> (not res!36332) (not e!44085))))

(assert (=> d!14083 (= res!36332 (not (contains!705 lt!29257 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14083 (= lt!29257 e!44087)))

(declare-fun c!9364 () Bool)

(assert (=> d!14083 (= c!9364 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!14083 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14083 (= (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (ite c!9197 (ite c!9193 (extraKeys!2017 newMap!16) lt!28808) (extraKeys!2017 newMap!16)) (zeroValue!2054 newMap!16) (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29257)))

(declare-fun b!67267 () Bool)

(assert (=> b!67267 (= e!44088 e!44089)))

(declare-fun c!9363 () Bool)

(assert (=> b!67267 (= c!9363 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (= (and d!14083 c!9364) b!67264))

(assert (= (and d!14083 (not c!9364)) b!67270))

(assert (= (and b!67270 c!9366) b!67271))

(assert (= (and b!67270 (not c!9366)) b!67260))

(assert (= (or b!67271 b!67260) bm!5631))

(assert (= (and d!14083 res!36332) b!67269))

(assert (= (and b!67269 res!36329) b!67261))

(assert (= (and b!67261 res!36331) b!67263))

(assert (= (and b!67261 c!9365) b!67262))

(assert (= (and b!67261 (not c!9365)) b!67267))

(assert (= (and b!67262 res!36330) b!67268))

(assert (= (and b!67267 c!9363) b!67265))

(assert (= (and b!67267 (not c!9363)) b!67266))

(declare-fun b_lambda!3019 () Bool)

(assert (=> (not b_lambda!3019) (not b!67268)))

(assert (=> b!67268 t!4942))

(declare-fun b_and!4157 () Bool)

(assert (= b_and!4153 (and (=> t!4942 result!2587) b_and!4157)))

(assert (=> b!67268 t!4944))

(declare-fun b_and!4159 () Bool)

(assert (= b_and!4155 (and (=> t!4944 result!2589) b_and!4159)))

(declare-fun b_lambda!3021 () Bool)

(assert (=> (not b_lambda!3021) (not b!67271)))

(assert (=> b!67271 t!4942))

(declare-fun b_and!4161 () Bool)

(assert (= b_and!4157 (and (=> t!4942 result!2587) b_and!4161)))

(assert (=> b!67271 t!4944))

(declare-fun b_and!4163 () Bool)

(assert (= b_and!4159 (and (=> t!4944 result!2589) b_and!4163)))

(declare-fun m!62331 () Bool)

(assert (=> b!67265 m!62331))

(declare-fun m!62333 () Bool)

(assert (=> d!14083 m!62333))

(assert (=> d!14083 m!61297))

(assert (=> b!67263 m!61431))

(assert (=> b!67263 m!61431))

(assert (=> b!67263 m!61433))

(assert (=> b!67268 m!61431))

(declare-fun m!62335 () Bool)

(assert (=> b!67268 m!62335))

(assert (=> b!67268 m!61683))

(assert (=> b!67268 m!61477))

(assert (=> b!67268 m!61685))

(assert (=> b!67268 m!61683))

(assert (=> b!67268 m!61477))

(assert (=> b!67268 m!61431))

(assert (=> b!67262 m!61431))

(assert (=> b!67262 m!61431))

(declare-fun m!62337 () Bool)

(assert (=> b!67262 m!62337))

(declare-fun m!62339 () Bool)

(assert (=> b!67269 m!62339))

(assert (=> bm!5631 m!62331))

(declare-fun m!62341 () Bool)

(assert (=> b!67266 m!62341))

(assert (=> b!67270 m!61431))

(assert (=> b!67270 m!61431))

(assert (=> b!67270 m!61433))

(declare-fun m!62343 () Bool)

(assert (=> b!67271 m!62343))

(assert (=> b!67271 m!61477))

(assert (=> b!67271 m!61431))

(declare-fun m!62345 () Bool)

(assert (=> b!67271 m!62345))

(declare-fun m!62347 () Bool)

(assert (=> b!67271 m!62347))

(assert (=> b!67271 m!61683))

(assert (=> b!67271 m!61477))

(assert (=> b!67271 m!61685))

(assert (=> b!67271 m!62343))

(declare-fun m!62349 () Bool)

(assert (=> b!67271 m!62349))

(assert (=> b!67271 m!61683))

(assert (=> bm!5589 d!14083))

(declare-fun b!67272 () Bool)

(declare-fun e!44094 () Bool)

(declare-fun call!5635 () Bool)

(assert (=> b!67272 (= e!44094 call!5635)))

(declare-fun b!67273 () Bool)

(declare-fun e!44092 () Bool)

(assert (=> b!67273 (= e!44092 e!44094)))

(declare-fun c!9367 () Bool)

(assert (=> b!67273 (= c!9367 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!67274 () Bool)

(declare-fun e!44093 () Bool)

(assert (=> b!67274 (= e!44093 call!5635)))

(declare-fun d!14085 () Bool)

(declare-fun res!36333 () Bool)

(assert (=> d!14085 (=> res!36333 e!44092)))

(assert (=> d!14085 (= res!36333 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14085 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992)))) e!44092)))

(declare-fun b!67275 () Bool)

(assert (=> b!67275 (= e!44094 e!44093)))

(declare-fun lt!29265 () (_ BitVec 64))

(assert (=> b!67275 (= lt!29265 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!29264 () Unit!1824)

(assert (=> b!67275 (= lt!29264 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) lt!29265 #b00000000000000000000000000000000))))

(assert (=> b!67275 (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) lt!29265 #b00000000000000000000000000000000)))

(declare-fun lt!29266 () Unit!1824)

(assert (=> b!67275 (= lt!29266 lt!29264)))

(declare-fun res!36334 () Bool)

(assert (=> b!67275 (= res!36334 (= (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000) (_keys!3786 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992)))) (Found!227 #b00000000000000000000000000000000)))))

(assert (=> b!67275 (=> (not res!36334) (not e!44093))))

(declare-fun bm!5632 () Bool)

(assert (=> bm!5632 (= call!5635 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3786 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992)))))))

(assert (= (and d!14085 (not res!36333)) b!67273))

(assert (= (and b!67273 c!9367) b!67275))

(assert (= (and b!67273 (not c!9367)) b!67272))

(assert (= (and b!67275 res!36334) b!67274))

(assert (= (or b!67274 b!67272) bm!5632))

(declare-fun m!62351 () Bool)

(assert (=> b!67273 m!62351))

(assert (=> b!67273 m!62351))

(declare-fun m!62353 () Bool)

(assert (=> b!67273 m!62353))

(assert (=> b!67275 m!62351))

(declare-fun m!62355 () Bool)

(assert (=> b!67275 m!62355))

(declare-fun m!62357 () Bool)

(assert (=> b!67275 m!62357))

(assert (=> b!67275 m!62351))

(declare-fun m!62359 () Bool)

(assert (=> b!67275 m!62359))

(declare-fun m!62361 () Bool)

(assert (=> bm!5632 m!62361))

(assert (=> b!67038 d!14085))

(declare-fun d!14087 () Bool)

(assert (=> d!14087 (= (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67085 d!14087))

(declare-fun d!14089 () Bool)

(assert (=> d!14089 (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29267 () Unit!1824)

(assert (=> d!14089 (= lt!29267 (choose!379 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44095 () Bool)

(assert (=> d!14089 e!44095))

(declare-fun res!36335 () Bool)

(assert (=> d!14089 (=> (not res!36335) (not e!44095))))

(assert (=> d!14089 (= res!36335 (isStrictlySorted!276 (toList!705 lt!28667)))))

(assert (=> d!14089 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000) lt!29267)))

(declare-fun b!67276 () Bool)

(assert (=> b!67276 (= e!44095 (containsKey!134 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14089 res!36335) b!67276))

(assert (=> d!14089 m!61229))

(assert (=> d!14089 m!61229))

(assert (=> d!14089 m!61231))

(declare-fun m!62363 () Bool)

(assert (=> d!14089 m!62363))

(declare-fun m!62365 () Bool)

(assert (=> d!14089 m!62365))

(assert (=> b!67276 m!61225))

(assert (=> b!66668 d!14089))

(declare-fun d!14091 () Bool)

(assert (=> d!14091 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2898 () Bool)

(assert (= bs!2898 d!14091))

(assert (=> bs!2898 m!61229))

(declare-fun m!62367 () Bool)

(assert (=> bs!2898 m!62367))

(assert (=> b!66668 d!14091))

(declare-fun b!67279 () Bool)

(declare-fun e!44097 () Option!137)

(assert (=> b!67279 (= e!44097 (getValueByKey!131 (t!4929 (toList!705 lt!28667)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67277 () Bool)

(declare-fun e!44096 () Option!137)

(assert (=> b!67277 (= e!44096 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28667)))))))

(declare-fun d!14093 () Bool)

(declare-fun c!9368 () Bool)

(assert (=> d!14093 (= c!9368 (and ((_ is Cons!1451) (toList!705 lt!28667)) (= (_1!1052 (h!2035 (toList!705 lt!28667))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14093 (= (getValueByKey!131 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000) e!44096)))

(declare-fun b!67280 () Bool)

(assert (=> b!67280 (= e!44097 None!135)))

(declare-fun b!67278 () Bool)

(assert (=> b!67278 (= e!44096 e!44097)))

(declare-fun c!9369 () Bool)

(assert (=> b!67278 (= c!9369 (and ((_ is Cons!1451) (toList!705 lt!28667)) (not (= (_1!1052 (h!2035 (toList!705 lt!28667))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14093 c!9368) b!67277))

(assert (= (and d!14093 (not c!9368)) b!67278))

(assert (= (and b!67278 c!9369) b!67279))

(assert (= (and b!67278 (not c!9369)) b!67280))

(declare-fun m!62369 () Bool)

(assert (=> b!67279 m!62369))

(assert (=> b!66668 d!14093))

(declare-fun d!14095 () Bool)

(declare-fun lt!29268 () Bool)

(assert (=> d!14095 (= lt!29268 (select (content!72 lt!29150) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(declare-fun e!44099 () Bool)

(assert (=> d!14095 (= lt!29268 e!44099)))

(declare-fun res!36337 () Bool)

(assert (=> d!14095 (=> (not res!36337) (not e!44099))))

(assert (=> d!14095 (= res!36337 ((_ is Cons!1451) lt!29150))))

(assert (=> d!14095 (= (contains!709 lt!29150 (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))) lt!29268)))

(declare-fun b!67281 () Bool)

(declare-fun e!44098 () Bool)

(assert (=> b!67281 (= e!44099 e!44098)))

(declare-fun res!36336 () Bool)

(assert (=> b!67281 (=> res!36336 e!44098)))

(assert (=> b!67281 (= res!36336 (= (h!2035 lt!29150) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(declare-fun b!67282 () Bool)

(assert (=> b!67282 (= e!44098 (contains!709 (t!4929 lt!29150) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(assert (= (and d!14095 res!36337) b!67281))

(assert (= (and b!67281 (not res!36336)) b!67282))

(declare-fun m!62371 () Bool)

(assert (=> d!14095 m!62371))

(declare-fun m!62373 () Bool)

(assert (=> d!14095 m!62373))

(declare-fun m!62375 () Bool)

(assert (=> b!67282 m!62375))

(assert (=> b!67081 d!14095))

(assert (=> d!13911 d!13909))

(declare-fun d!14097 () Bool)

(assert (=> d!14097 (= (getValueByKey!131 lt!28689 (_1!1052 lt!28528)) (Some!136 (_2!1052 lt!28528)))))

(assert (=> d!14097 true))

(declare-fun _$22!367 () Unit!1824)

(assert (=> d!14097 (= (choose!380 lt!28689 (_1!1052 lt!28528) (_2!1052 lt!28528)) _$22!367)))

(declare-fun bs!2899 () Bool)

(assert (= bs!2899 d!14097))

(assert (=> bs!2899 m!61085))

(assert (=> d!13911 d!14097))

(declare-fun d!14099 () Bool)

(declare-fun res!36342 () Bool)

(declare-fun e!44104 () Bool)

(assert (=> d!14099 (=> res!36342 e!44104)))

(assert (=> d!14099 (= res!36342 (or ((_ is Nil!1452) lt!28689) ((_ is Nil!1452) (t!4929 lt!28689))))))

(assert (=> d!14099 (= (isStrictlySorted!276 lt!28689) e!44104)))

(declare-fun b!67287 () Bool)

(declare-fun e!44105 () Bool)

(assert (=> b!67287 (= e!44104 e!44105)))

(declare-fun res!36343 () Bool)

(assert (=> b!67287 (=> (not res!36343) (not e!44105))))

(assert (=> b!67287 (= res!36343 (bvslt (_1!1052 (h!2035 lt!28689)) (_1!1052 (h!2035 (t!4929 lt!28689)))))))

(declare-fun b!67288 () Bool)

(assert (=> b!67288 (= e!44105 (isStrictlySorted!276 (t!4929 lt!28689)))))

(assert (= (and d!14099 (not res!36342)) b!67287))

(assert (= (and b!67287 res!36343) b!67288))

(declare-fun m!62377 () Bool)

(assert (=> b!67288 m!62377))

(assert (=> d!13911 d!14099))

(declare-fun d!14101 () Bool)

(declare-fun lt!29269 () Bool)

(assert (=> d!14101 (= lt!29269 (select (content!72 (toList!705 lt!28951)) (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44107 () Bool)

(assert (=> d!14101 (= lt!29269 e!44107)))

(declare-fun res!36345 () Bool)

(assert (=> d!14101 (=> (not res!36345) (not e!44107))))

(assert (=> d!14101 (= res!36345 ((_ is Cons!1451) (toList!705 lt!28951)))))

(assert (=> d!14101 (= (contains!709 (toList!705 lt!28951) (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!29269)))

(declare-fun b!67289 () Bool)

(declare-fun e!44106 () Bool)

(assert (=> b!67289 (= e!44107 e!44106)))

(declare-fun res!36344 () Bool)

(assert (=> b!67289 (=> res!36344 e!44106)))

(assert (=> b!67289 (= res!36344 (= (h!2035 (toList!705 lt!28951)) (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67290 () Bool)

(assert (=> b!67290 (= e!44106 (contains!709 (t!4929 (toList!705 lt!28951)) (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14101 res!36345) b!67289))

(assert (= (and b!67289 (not res!36344)) b!67290))

(declare-fun m!62379 () Bool)

(assert (=> d!14101 m!62379))

(declare-fun m!62381 () Bool)

(assert (=> d!14101 m!62381))

(declare-fun m!62383 () Bool)

(assert (=> b!67290 m!62383))

(assert (=> b!66769 d!14101))

(declare-fun d!14103 () Bool)

(assert (=> d!14103 (= (validMask!0 (mask!6081 newMap!16)) (and (or (= (mask!6081 newMap!16) #b00000000000000000000000000000111) (= (mask!6081 newMap!16) #b00000000000000000000000000001111) (= (mask!6081 newMap!16) #b00000000000000000000000000011111) (= (mask!6081 newMap!16) #b00000000000000000000000000111111) (= (mask!6081 newMap!16) #b00000000000000000000000001111111) (= (mask!6081 newMap!16) #b00000000000000000000000011111111) (= (mask!6081 newMap!16) #b00000000000000000000000111111111) (= (mask!6081 newMap!16) #b00000000000000000000001111111111) (= (mask!6081 newMap!16) #b00000000000000000000011111111111) (= (mask!6081 newMap!16) #b00000000000000000000111111111111) (= (mask!6081 newMap!16) #b00000000000000000001111111111111) (= (mask!6081 newMap!16) #b00000000000000000011111111111111) (= (mask!6081 newMap!16) #b00000000000000000111111111111111) (= (mask!6081 newMap!16) #b00000000000000001111111111111111) (= (mask!6081 newMap!16) #b00000000000000011111111111111111) (= (mask!6081 newMap!16) #b00000000000000111111111111111111) (= (mask!6081 newMap!16) #b00000000000001111111111111111111) (= (mask!6081 newMap!16) #b00000000000011111111111111111111) (= (mask!6081 newMap!16) #b00000000000111111111111111111111) (= (mask!6081 newMap!16) #b00000000001111111111111111111111) (= (mask!6081 newMap!16) #b00000000011111111111111111111111) (= (mask!6081 newMap!16) #b00000000111111111111111111111111) (= (mask!6081 newMap!16) #b00000001111111111111111111111111) (= (mask!6081 newMap!16) #b00000011111111111111111111111111) (= (mask!6081 newMap!16) #b00000111111111111111111111111111) (= (mask!6081 newMap!16) #b00001111111111111111111111111111) (= (mask!6081 newMap!16) #b00011111111111111111111111111111) (= (mask!6081 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6081 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!13885 d!14103))

(declare-fun d!14105 () Bool)

(declare-fun lt!29270 () Bool)

(assert (=> d!14105 (= lt!29270 (select (content!72 (t!4929 (toList!705 lt!28691))) lt!28528))))

(declare-fun e!44109 () Bool)

(assert (=> d!14105 (= lt!29270 e!44109)))

(declare-fun res!36347 () Bool)

(assert (=> d!14105 (=> (not res!36347) (not e!44109))))

(assert (=> d!14105 (= res!36347 ((_ is Cons!1451) (t!4929 (toList!705 lt!28691))))))

(assert (=> d!14105 (= (contains!709 (t!4929 (toList!705 lt!28691)) lt!28528) lt!29270)))

(declare-fun b!67291 () Bool)

(declare-fun e!44108 () Bool)

(assert (=> b!67291 (= e!44109 e!44108)))

(declare-fun res!36346 () Bool)

(assert (=> b!67291 (=> res!36346 e!44108)))

(assert (=> b!67291 (= res!36346 (= (h!2035 (t!4929 (toList!705 lt!28691))) lt!28528))))

(declare-fun b!67292 () Bool)

(assert (=> b!67292 (= e!44108 (contains!709 (t!4929 (t!4929 (toList!705 lt!28691))) lt!28528))))

(assert (= (and d!14105 res!36347) b!67291))

(assert (= (and b!67291 (not res!36346)) b!67292))

(declare-fun m!62385 () Bool)

(assert (=> d!14105 m!62385))

(declare-fun m!62387 () Bool)

(assert (=> d!14105 m!62387))

(declare-fun m!62389 () Bool)

(assert (=> b!67292 m!62389))

(assert (=> b!66799 d!14105))

(declare-fun d!14107 () Bool)

(assert (=> d!14107 (arrayContainsKey!0 (_keys!3786 newMap!16) lt!29104 #b00000000000000000000000000000000)))

(declare-fun lt!29273 () Unit!1824)

(declare-fun choose!13 (array!3823 (_ BitVec 64) (_ BitVec 32)) Unit!1824)

(assert (=> d!14107 (= lt!29273 (choose!13 (_keys!3786 newMap!16) lt!29104 #b00000000000000000000000000000000))))

(assert (=> d!14107 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!14107 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3786 newMap!16) lt!29104 #b00000000000000000000000000000000) lt!29273)))

(declare-fun bs!2900 () Bool)

(assert (= bs!2900 d!14107))

(assert (=> bs!2900 m!61811))

(declare-fun m!62391 () Bool)

(assert (=> bs!2900 m!62391))

(assert (=> b!66967 d!14107))

(declare-fun d!14109 () Bool)

(declare-fun res!36348 () Bool)

(declare-fun e!44110 () Bool)

(assert (=> d!14109 (=> res!36348 e!44110)))

(assert (=> d!14109 (= res!36348 (= (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) lt!29104))))

(assert (=> d!14109 (= (arrayContainsKey!0 (_keys!3786 newMap!16) lt!29104 #b00000000000000000000000000000000) e!44110)))

(declare-fun b!67293 () Bool)

(declare-fun e!44111 () Bool)

(assert (=> b!67293 (= e!44110 e!44111)))

(declare-fun res!36349 () Bool)

(assert (=> b!67293 (=> (not res!36349) (not e!44111))))

(assert (=> b!67293 (= res!36349 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!67294 () Bool)

(assert (=> b!67294 (= e!44111 (arrayContainsKey!0 (_keys!3786 newMap!16) lt!29104 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!14109 (not res!36348)) b!67293))

(assert (= (and b!67293 res!36349) b!67294))

(assert (=> d!14109 m!61431))

(declare-fun m!62393 () Bool)

(assert (=> b!67294 m!62393))

(assert (=> b!66967 d!14109))

(declare-fun b!67295 () Bool)

(declare-fun e!44112 () SeekEntryResult!227)

(assert (=> b!67295 (= e!44112 Undefined!227)))

(declare-fun b!67297 () Bool)

(declare-fun e!44114 () SeekEntryResult!227)

(assert (=> b!67297 (= e!44112 e!44114)))

(declare-fun lt!29276 () (_ BitVec 64))

(declare-fun lt!29274 () SeekEntryResult!227)

(assert (=> b!67297 (= lt!29276 (select (arr!1826 (_keys!3786 newMap!16)) (index!3038 lt!29274)))))

(declare-fun c!9370 () Bool)

(assert (=> b!67297 (= c!9370 (= lt!29276 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67298 () Bool)

(declare-fun e!44113 () SeekEntryResult!227)

(assert (=> b!67298 (= e!44113 (seekKeyOrZeroReturnVacant!0 (x!10697 lt!29274) (index!3038 lt!29274) (index!3038 lt!29274) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(declare-fun b!67299 () Bool)

(declare-fun c!9371 () Bool)

(assert (=> b!67299 (= c!9371 (= lt!29276 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67299 (= e!44114 e!44113)))

(declare-fun b!67300 () Bool)

(assert (=> b!67300 (= e!44113 (MissingZero!227 (index!3038 lt!29274)))))

(declare-fun d!14111 () Bool)

(declare-fun lt!29275 () SeekEntryResult!227)

(assert (=> d!14111 (and (or ((_ is Undefined!227) lt!29275) (not ((_ is Found!227) lt!29275)) (and (bvsge (index!3037 lt!29275) #b00000000000000000000000000000000) (bvslt (index!3037 lt!29275) (size!2061 (_keys!3786 newMap!16))))) (or ((_ is Undefined!227) lt!29275) ((_ is Found!227) lt!29275) (not ((_ is MissingZero!227) lt!29275)) (and (bvsge (index!3036 lt!29275) #b00000000000000000000000000000000) (bvslt (index!3036 lt!29275) (size!2061 (_keys!3786 newMap!16))))) (or ((_ is Undefined!227) lt!29275) ((_ is Found!227) lt!29275) ((_ is MissingZero!227) lt!29275) (not ((_ is MissingVacant!227) lt!29275)) (and (bvsge (index!3039 lt!29275) #b00000000000000000000000000000000) (bvslt (index!3039 lt!29275) (size!2061 (_keys!3786 newMap!16))))) (or ((_ is Undefined!227) lt!29275) (ite ((_ is Found!227) lt!29275) (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!29275)) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!227) lt!29275) (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3036 lt!29275)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!227) lt!29275) (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3039 lt!29275)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14111 (= lt!29275 e!44112)))

(declare-fun c!9372 () Bool)

(assert (=> d!14111 (= c!9372 (and ((_ is Intermediate!227) lt!29274) (undefined!1039 lt!29274)))))

(assert (=> d!14111 (= lt!29274 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) (mask!6081 newMap!16)) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(assert (=> d!14111 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14111 (= (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) (_keys!3786 newMap!16) (mask!6081 newMap!16)) lt!29275)))

(declare-fun b!67296 () Bool)

(assert (=> b!67296 (= e!44114 (Found!227 (index!3038 lt!29274)))))

(assert (= (and d!14111 c!9372) b!67295))

(assert (= (and d!14111 (not c!9372)) b!67297))

(assert (= (and b!67297 c!9370) b!67296))

(assert (= (and b!67297 (not c!9370)) b!67299))

(assert (= (and b!67299 c!9371) b!67300))

(assert (= (and b!67299 (not c!9371)) b!67298))

(declare-fun m!62395 () Bool)

(assert (=> b!67297 m!62395))

(assert (=> b!67298 m!61431))

(declare-fun m!62397 () Bool)

(assert (=> b!67298 m!62397))

(assert (=> d!14111 m!61431))

(declare-fun m!62399 () Bool)

(assert (=> d!14111 m!62399))

(assert (=> d!14111 m!61297))

(declare-fun m!62401 () Bool)

(assert (=> d!14111 m!62401))

(declare-fun m!62403 () Bool)

(assert (=> d!14111 m!62403))

(assert (=> d!14111 m!62399))

(assert (=> d!14111 m!61431))

(declare-fun m!62405 () Bool)

(assert (=> d!14111 m!62405))

(declare-fun m!62407 () Bool)

(assert (=> d!14111 m!62407))

(assert (=> b!66967 d!14111))

(declare-fun d!14113 () Bool)

(declare-fun e!44115 () Bool)

(assert (=> d!14113 e!44115))

(declare-fun res!36350 () Bool)

(assert (=> d!14113 (=> res!36350 e!44115)))

(declare-fun lt!29277 () Bool)

(assert (=> d!14113 (= res!36350 (not lt!29277))))

(declare-fun lt!29280 () Bool)

(assert (=> d!14113 (= lt!29277 lt!29280)))

(declare-fun lt!29279 () Unit!1824)

(declare-fun e!44116 () Unit!1824)

(assert (=> d!14113 (= lt!29279 e!44116)))

(declare-fun c!9373 () Bool)

(assert (=> d!14113 (= c!9373 lt!29280)))

(assert (=> d!14113 (= lt!29280 (containsKey!134 (toList!705 lt!29030) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14113 (= (contains!705 lt!29030 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29277)))

(declare-fun b!67301 () Bool)

(declare-fun lt!29278 () Unit!1824)

(assert (=> b!67301 (= e!44116 lt!29278)))

(assert (=> b!67301 (= lt!29278 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29030) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67301 (isDefined!83 (getValueByKey!131 (toList!705 lt!29030) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67302 () Bool)

(declare-fun Unit!1865 () Unit!1824)

(assert (=> b!67302 (= e!44116 Unit!1865)))

(declare-fun b!67303 () Bool)

(assert (=> b!67303 (= e!44115 (isDefined!83 (getValueByKey!131 (toList!705 lt!29030) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14113 c!9373) b!67301))

(assert (= (and d!14113 (not c!9373)) b!67302))

(assert (= (and d!14113 (not res!36350)) b!67303))

(declare-fun m!62409 () Bool)

(assert (=> d!14113 m!62409))

(declare-fun m!62411 () Bool)

(assert (=> b!67301 m!62411))

(assert (=> b!67301 m!61631))

(assert (=> b!67301 m!61631))

(declare-fun m!62413 () Bool)

(assert (=> b!67301 m!62413))

(assert (=> b!67303 m!61631))

(assert (=> b!67303 m!61631))

(assert (=> b!67303 m!62413))

(assert (=> d!13879 d!14113))

(declare-fun b!67306 () Bool)

(declare-fun e!44118 () Option!137)

(assert (=> b!67306 (= e!44118 (getValueByKey!131 (t!4929 lt!29028) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67304 () Bool)

(declare-fun e!44117 () Option!137)

(assert (=> b!67304 (= e!44117 (Some!136 (_2!1052 (h!2035 lt!29028))))))

(declare-fun d!14115 () Bool)

(declare-fun c!9374 () Bool)

(assert (=> d!14115 (= c!9374 (and ((_ is Cons!1451) lt!29028) (= (_1!1052 (h!2035 lt!29028)) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14115 (= (getValueByKey!131 lt!29028 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44117)))

(declare-fun b!67307 () Bool)

(assert (=> b!67307 (= e!44118 None!135)))

(declare-fun b!67305 () Bool)

(assert (=> b!67305 (= e!44117 e!44118)))

(declare-fun c!9375 () Bool)

(assert (=> b!67305 (= c!9375 (and ((_ is Cons!1451) lt!29028) (not (= (_1!1052 (h!2035 lt!29028)) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14115 c!9374) b!67304))

(assert (= (and d!14115 (not c!9374)) b!67305))

(assert (= (and b!67305 c!9375) b!67306))

(assert (= (and b!67305 (not c!9375)) b!67307))

(declare-fun m!62415 () Bool)

(assert (=> b!67306 m!62415))

(assert (=> d!13879 d!14115))

(declare-fun d!14117 () Bool)

(assert (=> d!14117 (= (getValueByKey!131 lt!29028 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29281 () Unit!1824)

(assert (=> d!14117 (= lt!29281 (choose!380 lt!29028 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44119 () Bool)

(assert (=> d!14117 e!44119))

(declare-fun res!36351 () Bool)

(assert (=> d!14117 (=> (not res!36351) (not e!44119))))

(assert (=> d!14117 (= res!36351 (isStrictlySorted!276 lt!29028))))

(assert (=> d!14117 (= (lemmaContainsTupThenGetReturnValue!48 lt!29028 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29281)))

(declare-fun b!67308 () Bool)

(declare-fun res!36352 () Bool)

(assert (=> b!67308 (=> (not res!36352) (not e!44119))))

(assert (=> b!67308 (= res!36352 (containsKey!134 lt!29028 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67309 () Bool)

(assert (=> b!67309 (= e!44119 (contains!709 lt!29028 (tuple2!2083 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14117 res!36351) b!67308))

(assert (= (and b!67308 res!36352) b!67309))

(assert (=> d!14117 m!61625))

(declare-fun m!62417 () Bool)

(assert (=> d!14117 m!62417))

(declare-fun m!62419 () Bool)

(assert (=> d!14117 m!62419))

(declare-fun m!62421 () Bool)

(assert (=> b!67308 m!62421))

(declare-fun m!62423 () Bool)

(assert (=> b!67309 m!62423))

(assert (=> d!13879 d!14117))

(declare-fun b!67310 () Bool)

(declare-fun e!44124 () List!1455)

(declare-fun call!5636 () List!1455)

(assert (=> b!67310 (= e!44124 call!5636)))

(declare-fun b!67311 () Bool)

(declare-fun e!44120 () List!1455)

(declare-fun e!44122 () List!1455)

(assert (=> b!67311 (= e!44120 e!44122)))

(declare-fun c!9378 () Bool)

(assert (=> b!67311 (= c!9378 (and ((_ is Cons!1451) (toList!705 call!5472)) (= (_1!1052 (h!2035 (toList!705 call!5472))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67312 () Bool)

(declare-fun res!36353 () Bool)

(declare-fun e!44123 () Bool)

(assert (=> b!67312 (=> (not res!36353) (not e!44123))))

(declare-fun lt!29282 () List!1455)

(assert (=> b!67312 (= res!36353 (containsKey!134 lt!29282 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun bm!5633 () Bool)

(declare-fun call!5638 () List!1455)

(assert (=> bm!5633 (= call!5636 call!5638)))

(declare-fun b!67313 () Bool)

(declare-fun call!5637 () List!1455)

(assert (=> b!67313 (= e!44120 call!5637)))

(declare-fun b!67314 () Bool)

(declare-fun c!9379 () Bool)

(assert (=> b!67314 (= c!9379 (and ((_ is Cons!1451) (toList!705 call!5472)) (bvsgt (_1!1052 (h!2035 (toList!705 call!5472))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67314 (= e!44122 e!44124)))

(declare-fun b!67315 () Bool)

(declare-fun e!44121 () List!1455)

(assert (=> b!67315 (= e!44121 (ite c!9378 (t!4929 (toList!705 call!5472)) (ite c!9379 (Cons!1451 (h!2035 (toList!705 call!5472)) (t!4929 (toList!705 call!5472))) Nil!1452)))))

(declare-fun d!14119 () Bool)

(assert (=> d!14119 e!44123))

(declare-fun res!36354 () Bool)

(assert (=> d!14119 (=> (not res!36354) (not e!44123))))

(assert (=> d!14119 (= res!36354 (isStrictlySorted!276 lt!29282))))

(assert (=> d!14119 (= lt!29282 e!44120)))

(declare-fun c!9376 () Bool)

(assert (=> d!14119 (= c!9376 (and ((_ is Cons!1451) (toList!705 call!5472)) (bvslt (_1!1052 (h!2035 (toList!705 call!5472))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14119 (isStrictlySorted!276 (toList!705 call!5472))))

(assert (=> d!14119 (= (insertStrictlySorted!51 (toList!705 call!5472) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29282)))

(declare-fun b!67316 () Bool)

(assert (=> b!67316 (= e!44121 (insertStrictlySorted!51 (t!4929 (toList!705 call!5472)) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67317 () Bool)

(assert (=> b!67317 (= e!44122 call!5638)))

(declare-fun bm!5634 () Bool)

(assert (=> bm!5634 (= call!5638 call!5637)))

(declare-fun b!67318 () Bool)

(assert (=> b!67318 (= e!44124 call!5636)))

(declare-fun bm!5635 () Bool)

(assert (=> bm!5635 (= call!5637 ($colon$colon!62 e!44121 (ite c!9376 (h!2035 (toList!705 call!5472)) (tuple2!2083 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9377 () Bool)

(assert (=> bm!5635 (= c!9377 c!9376)))

(declare-fun b!67319 () Bool)

(assert (=> b!67319 (= e!44123 (contains!709 lt!29282 (tuple2!2083 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14119 c!9376) b!67313))

(assert (= (and d!14119 (not c!9376)) b!67311))

(assert (= (and b!67311 c!9378) b!67317))

(assert (= (and b!67311 (not c!9378)) b!67314))

(assert (= (and b!67314 c!9379) b!67310))

(assert (= (and b!67314 (not c!9379)) b!67318))

(assert (= (or b!67310 b!67318) bm!5633))

(assert (= (or b!67317 bm!5633) bm!5634))

(assert (= (or b!67313 bm!5634) bm!5635))

(assert (= (and bm!5635 c!9377) b!67316))

(assert (= (and bm!5635 (not c!9377)) b!67315))

(assert (= (and d!14119 res!36354) b!67312))

(assert (= (and b!67312 res!36353) b!67319))

(declare-fun m!62425 () Bool)

(assert (=> bm!5635 m!62425))

(declare-fun m!62427 () Bool)

(assert (=> b!67316 m!62427))

(declare-fun m!62429 () Bool)

(assert (=> b!67312 m!62429))

(declare-fun m!62431 () Bool)

(assert (=> b!67319 m!62431))

(declare-fun m!62433 () Bool)

(assert (=> d!14119 m!62433))

(declare-fun m!62435 () Bool)

(assert (=> d!14119 m!62435))

(assert (=> d!13879 d!14119))

(declare-fun d!14121 () Bool)

(assert (=> d!14121 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2901 () Bool)

(assert (= bs!2901 d!14121))

(assert (=> bs!2901 m!61513))

(declare-fun m!62437 () Bool)

(assert (=> bs!2901 m!62437))

(assert (=> b!67109 d!14121))

(declare-fun b!67322 () Bool)

(declare-fun e!44126 () Option!137)

(assert (=> b!67322 (= e!44126 (getValueByKey!131 (t!4929 (toList!705 lt!28667)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67320 () Bool)

(declare-fun e!44125 () Option!137)

(assert (=> b!67320 (= e!44125 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28667)))))))

(declare-fun c!9380 () Bool)

(declare-fun d!14123 () Bool)

(assert (=> d!14123 (= c!9380 (and ((_ is Cons!1451) (toList!705 lt!28667)) (= (_1!1052 (h!2035 (toList!705 lt!28667))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14123 (= (getValueByKey!131 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44125)))

(declare-fun b!67323 () Bool)

(assert (=> b!67323 (= e!44126 None!135)))

(declare-fun b!67321 () Bool)

(assert (=> b!67321 (= e!44125 e!44126)))

(declare-fun c!9381 () Bool)

(assert (=> b!67321 (= c!9381 (and ((_ is Cons!1451) (toList!705 lt!28667)) (not (= (_1!1052 (h!2035 (toList!705 lt!28667))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!14123 c!9380) b!67320))

(assert (= (and d!14123 (not c!9380)) b!67321))

(assert (= (and b!67321 c!9381) b!67322))

(assert (= (and b!67321 (not c!9381)) b!67323))

(assert (=> b!67322 m!61005))

(declare-fun m!62439 () Bool)

(assert (=> b!67322 m!62439))

(assert (=> b!67109 d!14123))

(assert (=> d!13801 d!13755))

(declare-fun b!67326 () Bool)

(declare-fun e!44128 () Option!137)

(assert (=> b!67326 (= e!44128 (getValueByKey!131 (t!4929 (toList!705 lt!29068)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67324 () Bool)

(declare-fun e!44127 () Option!137)

(assert (=> b!67324 (= e!44127 (Some!136 (_2!1052 (h!2035 (toList!705 lt!29068)))))))

(declare-fun d!14125 () Bool)

(declare-fun c!9382 () Bool)

(assert (=> d!14125 (= c!9382 (and ((_ is Cons!1451) (toList!705 lt!29068)) (= (_1!1052 (h!2035 (toList!705 lt!29068))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14125 (= (getValueByKey!131 (toList!705 lt!29068) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44127)))

(declare-fun b!67327 () Bool)

(assert (=> b!67327 (= e!44128 None!135)))

(declare-fun b!67325 () Bool)

(assert (=> b!67325 (= e!44127 e!44128)))

(declare-fun c!9383 () Bool)

(assert (=> b!67325 (= c!9383 (and ((_ is Cons!1451) (toList!705 lt!29068)) (not (= (_1!1052 (h!2035 (toList!705 lt!29068))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14125 c!9382) b!67324))

(assert (= (and d!14125 (not c!9382)) b!67325))

(assert (= (and b!67325 c!9383) b!67326))

(assert (= (and b!67325 (not c!9383)) b!67327))

(declare-fun m!62441 () Bool)

(assert (=> b!67326 m!62441))

(assert (=> b!66917 d!14125))

(declare-fun d!14127 () Bool)

(declare-fun e!44129 () Bool)

(assert (=> d!14127 e!44129))

(declare-fun res!36355 () Bool)

(assert (=> d!14127 (=> res!36355 e!44129)))

(declare-fun lt!29283 () Bool)

(assert (=> d!14127 (= res!36355 (not lt!29283))))

(declare-fun lt!29286 () Bool)

(assert (=> d!14127 (= lt!29283 lt!29286)))

(declare-fun lt!29285 () Unit!1824)

(declare-fun e!44130 () Unit!1824)

(assert (=> d!14127 (= lt!29285 e!44130)))

(declare-fun c!9384 () Bool)

(assert (=> d!14127 (= c!9384 lt!29286)))

(assert (=> d!14127 (= lt!29286 (containsKey!134 (toList!705 lt!28951) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14127 (= (contains!705 lt!28951 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29283)))

(declare-fun b!67328 () Bool)

(declare-fun lt!29284 () Unit!1824)

(assert (=> b!67328 (= e!44130 lt!29284)))

(assert (=> b!67328 (= lt!29284 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28951) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67328 (isDefined!83 (getValueByKey!131 (toList!705 lt!28951) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67329 () Bool)

(declare-fun Unit!1866 () Unit!1824)

(assert (=> b!67329 (= e!44130 Unit!1866)))

(declare-fun b!67330 () Bool)

(assert (=> b!67330 (= e!44129 (isDefined!83 (getValueByKey!131 (toList!705 lt!28951) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14127 c!9384) b!67328))

(assert (= (and d!14127 (not c!9384)) b!67329))

(assert (= (and d!14127 (not res!36355)) b!67330))

(declare-fun m!62443 () Bool)

(assert (=> d!14127 m!62443))

(declare-fun m!62445 () Bool)

(assert (=> b!67328 m!62445))

(assert (=> b!67328 m!61395))

(assert (=> b!67328 m!61395))

(declare-fun m!62447 () Bool)

(assert (=> b!67328 m!62447))

(assert (=> b!67330 m!61395))

(assert (=> b!67330 m!61395))

(assert (=> b!67330 m!62447))

(assert (=> d!13827 d!14127))

(declare-fun e!44132 () Option!137)

(declare-fun b!67333 () Bool)

(assert (=> b!67333 (= e!44132 (getValueByKey!131 (t!4929 lt!28949) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67331 () Bool)

(declare-fun e!44131 () Option!137)

(assert (=> b!67331 (= e!44131 (Some!136 (_2!1052 (h!2035 lt!28949))))))

(declare-fun d!14129 () Bool)

(declare-fun c!9385 () Bool)

(assert (=> d!14129 (= c!9385 (and ((_ is Cons!1451) lt!28949) (= (_1!1052 (h!2035 lt!28949)) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14129 (= (getValueByKey!131 lt!28949 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44131)))

(declare-fun b!67334 () Bool)

(assert (=> b!67334 (= e!44132 None!135)))

(declare-fun b!67332 () Bool)

(assert (=> b!67332 (= e!44131 e!44132)))

(declare-fun c!9386 () Bool)

(assert (=> b!67332 (= c!9386 (and ((_ is Cons!1451) lt!28949) (not (= (_1!1052 (h!2035 lt!28949)) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14129 c!9385) b!67331))

(assert (= (and d!14129 (not c!9385)) b!67332))

(assert (= (and b!67332 c!9386) b!67333))

(assert (= (and b!67332 (not c!9386)) b!67334))

(declare-fun m!62449 () Bool)

(assert (=> b!67333 m!62449))

(assert (=> d!13827 d!14129))

(declare-fun d!14131 () Bool)

(assert (=> d!14131 (= (getValueByKey!131 lt!28949 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29287 () Unit!1824)

(assert (=> d!14131 (= lt!29287 (choose!380 lt!28949 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44133 () Bool)

(assert (=> d!14131 e!44133))

(declare-fun res!36356 () Bool)

(assert (=> d!14131 (=> (not res!36356) (not e!44133))))

(assert (=> d!14131 (= res!36356 (isStrictlySorted!276 lt!28949))))

(assert (=> d!14131 (= (lemmaContainsTupThenGetReturnValue!48 lt!28949 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29287)))

(declare-fun b!67335 () Bool)

(declare-fun res!36357 () Bool)

(assert (=> b!67335 (=> (not res!36357) (not e!44133))))

(assert (=> b!67335 (= res!36357 (containsKey!134 lt!28949 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67336 () Bool)

(assert (=> b!67336 (= e!44133 (contains!709 lt!28949 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14131 res!36356) b!67335))

(assert (= (and b!67335 res!36357) b!67336))

(assert (=> d!14131 m!61389))

(declare-fun m!62451 () Bool)

(assert (=> d!14131 m!62451))

(declare-fun m!62453 () Bool)

(assert (=> d!14131 m!62453))

(declare-fun m!62455 () Bool)

(assert (=> b!67335 m!62455))

(declare-fun m!62457 () Bool)

(assert (=> b!67336 m!62457))

(assert (=> d!13827 d!14131))

(declare-fun b!67337 () Bool)

(declare-fun e!44138 () List!1455)

(declare-fun call!5639 () List!1455)

(assert (=> b!67337 (= e!44138 call!5639)))

(declare-fun b!67338 () Bool)

(declare-fun e!44134 () List!1455)

(declare-fun e!44136 () List!1455)

(assert (=> b!67338 (= e!44134 e!44136)))

(declare-fun c!9389 () Bool)

(assert (=> b!67338 (= c!9389 (and ((_ is Cons!1451) (toList!705 lt!28663)) (= (_1!1052 (h!2035 (toList!705 lt!28663))) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67339 () Bool)

(declare-fun res!36358 () Bool)

(declare-fun e!44137 () Bool)

(assert (=> b!67339 (=> (not res!36358) (not e!44137))))

(declare-fun lt!29288 () List!1455)

(assert (=> b!67339 (= res!36358 (containsKey!134 lt!29288 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun bm!5636 () Bool)

(declare-fun call!5641 () List!1455)

(assert (=> bm!5636 (= call!5639 call!5641)))

(declare-fun b!67340 () Bool)

(declare-fun call!5640 () List!1455)

(assert (=> b!67340 (= e!44134 call!5640)))

(declare-fun c!9390 () Bool)

(declare-fun b!67341 () Bool)

(assert (=> b!67341 (= c!9390 (and ((_ is Cons!1451) (toList!705 lt!28663)) (bvsgt (_1!1052 (h!2035 (toList!705 lt!28663))) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67341 (= e!44136 e!44138)))

(declare-fun e!44135 () List!1455)

(declare-fun b!67342 () Bool)

(assert (=> b!67342 (= e!44135 (ite c!9389 (t!4929 (toList!705 lt!28663)) (ite c!9390 (Cons!1451 (h!2035 (toList!705 lt!28663)) (t!4929 (toList!705 lt!28663))) Nil!1452)))))

(declare-fun d!14133 () Bool)

(assert (=> d!14133 e!44137))

(declare-fun res!36359 () Bool)

(assert (=> d!14133 (=> (not res!36359) (not e!44137))))

(assert (=> d!14133 (= res!36359 (isStrictlySorted!276 lt!29288))))

(assert (=> d!14133 (= lt!29288 e!44134)))

(declare-fun c!9387 () Bool)

(assert (=> d!14133 (= c!9387 (and ((_ is Cons!1451) (toList!705 lt!28663)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28663))) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14133 (isStrictlySorted!276 (toList!705 lt!28663))))

(assert (=> d!14133 (= (insertStrictlySorted!51 (toList!705 lt!28663) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29288)))

(declare-fun b!67343 () Bool)

(assert (=> b!67343 (= e!44135 (insertStrictlySorted!51 (t!4929 (toList!705 lt!28663)) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67344 () Bool)

(assert (=> b!67344 (= e!44136 call!5641)))

(declare-fun bm!5637 () Bool)

(assert (=> bm!5637 (= call!5641 call!5640)))

(declare-fun b!67345 () Bool)

(assert (=> b!67345 (= e!44138 call!5639)))

(declare-fun bm!5638 () Bool)

(assert (=> bm!5638 (= call!5640 ($colon$colon!62 e!44135 (ite c!9387 (h!2035 (toList!705 lt!28663)) (tuple2!2083 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9388 () Bool)

(assert (=> bm!5638 (= c!9388 c!9387)))

(declare-fun b!67346 () Bool)

(assert (=> b!67346 (= e!44137 (contains!709 lt!29288 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14133 c!9387) b!67340))

(assert (= (and d!14133 (not c!9387)) b!67338))

(assert (= (and b!67338 c!9389) b!67344))

(assert (= (and b!67338 (not c!9389)) b!67341))

(assert (= (and b!67341 c!9390) b!67337))

(assert (= (and b!67341 (not c!9390)) b!67345))

(assert (= (or b!67337 b!67345) bm!5636))

(assert (= (or b!67344 bm!5636) bm!5637))

(assert (= (or b!67340 bm!5637) bm!5638))

(assert (= (and bm!5638 c!9388) b!67343))

(assert (= (and bm!5638 (not c!9388)) b!67342))

(assert (= (and d!14133 res!36359) b!67339))

(assert (= (and b!67339 res!36358) b!67346))

(declare-fun m!62459 () Bool)

(assert (=> bm!5638 m!62459))

(declare-fun m!62461 () Bool)

(assert (=> b!67343 m!62461))

(declare-fun m!62463 () Bool)

(assert (=> b!67339 m!62463))

(declare-fun m!62465 () Bool)

(assert (=> b!67346 m!62465))

(declare-fun m!62467 () Bool)

(assert (=> d!14133 m!62467))

(declare-fun m!62469 () Bool)

(assert (=> d!14133 m!62469))

(assert (=> d!13827 d!14133))

(declare-fun d!14135 () Bool)

(assert (=> d!14135 (= ($colon$colon!62 e!44004 (ite c!9323 (h!2035 (toList!705 (+!86 lt!28527 lt!28528))) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520)))) (Cons!1451 (ite c!9323 (h!2035 (toList!705 (+!86 lt!28527 lt!28528))) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))) e!44004))))

(assert (=> bm!5619 d!14135))

(declare-fun d!14137 () Bool)

(declare-fun e!44139 () Bool)

(assert (=> d!14137 e!44139))

(declare-fun res!36361 () Bool)

(assert (=> d!14137 (=> (not res!36361) (not e!44139))))

(declare-fun lt!29291 () ListLongMap!1379)

(assert (=> d!14137 (= res!36361 (contains!705 lt!29291 (_1!1052 (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(declare-fun lt!29289 () List!1455)

(assert (=> d!14137 (= lt!29291 (ListLongMap!1380 lt!29289))))

(declare-fun lt!29290 () Unit!1824)

(declare-fun lt!29292 () Unit!1824)

(assert (=> d!14137 (= lt!29290 lt!29292)))

(assert (=> d!14137 (= (getValueByKey!131 lt!29289 (_1!1052 (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14137 (= lt!29292 (lemmaContainsTupThenGetReturnValue!48 lt!29289 (_1!1052 (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (_2!1052 (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14137 (= lt!29289 (insertStrictlySorted!51 (toList!705 (ite c!9266 call!5596 (ite c!9268 call!5600 call!5597))) (_1!1052 (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (_2!1052 (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14137 (= (+!86 (ite c!9266 call!5596 (ite c!9268 call!5600 call!5597)) (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) lt!29291)))

(declare-fun b!67347 () Bool)

(declare-fun res!36360 () Bool)

(assert (=> b!67347 (=> (not res!36360) (not e!44139))))

(assert (=> b!67347 (= res!36360 (= (getValueByKey!131 (toList!705 lt!29291) (_1!1052 (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))))

(declare-fun b!67348 () Bool)

(assert (=> b!67348 (= e!44139 (contains!709 (toList!705 lt!29291) (ite (or c!9266 c!9268) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (= (and d!14137 res!36361) b!67347))

(assert (= (and b!67347 res!36360) b!67348))

(declare-fun m!62471 () Bool)

(assert (=> d!14137 m!62471))

(declare-fun m!62473 () Bool)

(assert (=> d!14137 m!62473))

(declare-fun m!62475 () Bool)

(assert (=> d!14137 m!62475))

(declare-fun m!62477 () Bool)

(assert (=> d!14137 m!62477))

(declare-fun m!62479 () Bool)

(assert (=> b!67347 m!62479))

(declare-fun m!62481 () Bool)

(assert (=> b!67348 m!62481))

(assert (=> bm!5593 d!14137))

(declare-fun d!14139 () Bool)

(declare-fun c!9391 () Bool)

(assert (=> d!14139 (= c!9391 ((_ is ValueCellFull!881) (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!44140 () V!2913)

(assert (=> d!14139 (= (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44140)))

(declare-fun b!67349 () Bool)

(assert (=> b!67349 (= e!44140 (get!1125 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67350 () Bool)

(assert (=> b!67350 (= e!44140 (get!1126 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14139 c!9391) b!67349))

(assert (= (and d!14139 (not c!9391)) b!67350))

(assert (=> b!67349 m!61983))

(assert (=> b!67349 m!60879))

(declare-fun m!62483 () Bool)

(assert (=> b!67349 m!62483))

(assert (=> b!67350 m!61983))

(assert (=> b!67350 m!60879))

(declare-fun m!62485 () Bool)

(assert (=> b!67350 m!62485))

(assert (=> b!67093 d!14139))

(declare-fun d!14141 () Bool)

(assert (=> d!14141 (not (contains!705 (+!86 lt!29155 (tuple2!2083 lt!29156 lt!29152)) lt!29157))))

(declare-fun lt!29293 () Unit!1824)

(assert (=> d!14141 (= lt!29293 (choose!381 lt!29155 lt!29156 lt!29152 lt!29157))))

(declare-fun e!44141 () Bool)

(assert (=> d!14141 e!44141))

(declare-fun res!36362 () Bool)

(assert (=> d!14141 (=> (not res!36362) (not e!44141))))

(assert (=> d!14141 (= res!36362 (not (contains!705 lt!29155 lt!29157)))))

(assert (=> d!14141 (= (addStillNotContains!23 lt!29155 lt!29156 lt!29152 lt!29157) lt!29293)))

(declare-fun b!67351 () Bool)

(assert (=> b!67351 (= e!44141 (not (= lt!29156 lt!29157)))))

(assert (= (and d!14141 res!36362) b!67351))

(assert (=> d!14141 m!61993))

(assert (=> d!14141 m!61993))

(assert (=> d!14141 m!61999))

(declare-fun m!62487 () Bool)

(assert (=> d!14141 m!62487))

(declare-fun m!62489 () Bool)

(assert (=> d!14141 m!62489))

(assert (=> b!67093 d!14141))

(declare-fun d!14143 () Bool)

(declare-fun e!44142 () Bool)

(assert (=> d!14143 e!44142))

(declare-fun res!36364 () Bool)

(assert (=> d!14143 (=> (not res!36364) (not e!44142))))

(declare-fun lt!29296 () ListLongMap!1379)

(assert (=> d!14143 (= res!36364 (contains!705 lt!29296 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!29294 () List!1455)

(assert (=> d!14143 (= lt!29296 (ListLongMap!1380 lt!29294))))

(declare-fun lt!29295 () Unit!1824)

(declare-fun lt!29297 () Unit!1824)

(assert (=> d!14143 (= lt!29295 lt!29297)))

(assert (=> d!14143 (= (getValueByKey!131 lt!29294 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14143 (= lt!29297 (lemmaContainsTupThenGetReturnValue!48 lt!29294 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14143 (= lt!29294 (insertStrictlySorted!51 (toList!705 call!5619) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14143 (= (+!86 call!5619 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!29296)))

(declare-fun b!67352 () Bool)

(declare-fun res!36363 () Bool)

(assert (=> b!67352 (=> (not res!36363) (not e!44142))))

(assert (=> b!67352 (= res!36363 (= (getValueByKey!131 (toList!705 lt!29296) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!67353 () Bool)

(assert (=> b!67353 (= e!44142 (contains!709 (toList!705 lt!29296) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14143 res!36364) b!67352))

(assert (= (and b!67352 res!36363) b!67353))

(declare-fun m!62491 () Bool)

(assert (=> d!14143 m!62491))

(declare-fun m!62493 () Bool)

(assert (=> d!14143 m!62493))

(declare-fun m!62495 () Bool)

(assert (=> d!14143 m!62495))

(declare-fun m!62497 () Bool)

(assert (=> d!14143 m!62497))

(declare-fun m!62499 () Bool)

(assert (=> b!67352 m!62499))

(declare-fun m!62501 () Bool)

(assert (=> b!67353 m!62501))

(assert (=> b!67093 d!14143))

(declare-fun d!14145 () Bool)

(declare-fun e!44143 () Bool)

(assert (=> d!14145 e!44143))

(declare-fun res!36366 () Bool)

(assert (=> d!14145 (=> (not res!36366) (not e!44143))))

(declare-fun lt!29300 () ListLongMap!1379)

(assert (=> d!14145 (= res!36366 (contains!705 lt!29300 (_1!1052 (tuple2!2083 lt!29156 lt!29152))))))

(declare-fun lt!29298 () List!1455)

(assert (=> d!14145 (= lt!29300 (ListLongMap!1380 lt!29298))))

(declare-fun lt!29299 () Unit!1824)

(declare-fun lt!29301 () Unit!1824)

(assert (=> d!14145 (= lt!29299 lt!29301)))

(assert (=> d!14145 (= (getValueByKey!131 lt!29298 (_1!1052 (tuple2!2083 lt!29156 lt!29152))) (Some!136 (_2!1052 (tuple2!2083 lt!29156 lt!29152))))))

(assert (=> d!14145 (= lt!29301 (lemmaContainsTupThenGetReturnValue!48 lt!29298 (_1!1052 (tuple2!2083 lt!29156 lt!29152)) (_2!1052 (tuple2!2083 lt!29156 lt!29152))))))

(assert (=> d!14145 (= lt!29298 (insertStrictlySorted!51 (toList!705 lt!29155) (_1!1052 (tuple2!2083 lt!29156 lt!29152)) (_2!1052 (tuple2!2083 lt!29156 lt!29152))))))

(assert (=> d!14145 (= (+!86 lt!29155 (tuple2!2083 lt!29156 lt!29152)) lt!29300)))

(declare-fun b!67354 () Bool)

(declare-fun res!36365 () Bool)

(assert (=> b!67354 (=> (not res!36365) (not e!44143))))

(assert (=> b!67354 (= res!36365 (= (getValueByKey!131 (toList!705 lt!29300) (_1!1052 (tuple2!2083 lt!29156 lt!29152))) (Some!136 (_2!1052 (tuple2!2083 lt!29156 lt!29152)))))))

(declare-fun b!67355 () Bool)

(assert (=> b!67355 (= e!44143 (contains!709 (toList!705 lt!29300) (tuple2!2083 lt!29156 lt!29152)))))

(assert (= (and d!14145 res!36366) b!67354))

(assert (= (and b!67354 res!36365) b!67355))

(declare-fun m!62503 () Bool)

(assert (=> d!14145 m!62503))

(declare-fun m!62505 () Bool)

(assert (=> d!14145 m!62505))

(declare-fun m!62507 () Bool)

(assert (=> d!14145 m!62507))

(declare-fun m!62509 () Bool)

(assert (=> d!14145 m!62509))

(declare-fun m!62511 () Bool)

(assert (=> b!67354 m!62511))

(declare-fun m!62513 () Bool)

(assert (=> b!67355 m!62513))

(assert (=> b!67093 d!14145))

(declare-fun d!14147 () Bool)

(declare-fun e!44144 () Bool)

(assert (=> d!14147 e!44144))

(declare-fun res!36367 () Bool)

(assert (=> d!14147 (=> res!36367 e!44144)))

(declare-fun lt!29302 () Bool)

(assert (=> d!14147 (= res!36367 (not lt!29302))))

(declare-fun lt!29305 () Bool)

(assert (=> d!14147 (= lt!29302 lt!29305)))

(declare-fun lt!29304 () Unit!1824)

(declare-fun e!44145 () Unit!1824)

(assert (=> d!14147 (= lt!29304 e!44145)))

(declare-fun c!9392 () Bool)

(assert (=> d!14147 (= c!9392 lt!29305)))

(assert (=> d!14147 (= lt!29305 (containsKey!134 (toList!705 (+!86 lt!29155 (tuple2!2083 lt!29156 lt!29152))) lt!29157))))

(assert (=> d!14147 (= (contains!705 (+!86 lt!29155 (tuple2!2083 lt!29156 lt!29152)) lt!29157) lt!29302)))

(declare-fun b!67356 () Bool)

(declare-fun lt!29303 () Unit!1824)

(assert (=> b!67356 (= e!44145 lt!29303)))

(assert (=> b!67356 (= lt!29303 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (+!86 lt!29155 (tuple2!2083 lt!29156 lt!29152))) lt!29157))))

(assert (=> b!67356 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!29155 (tuple2!2083 lt!29156 lt!29152))) lt!29157))))

(declare-fun b!67357 () Bool)

(declare-fun Unit!1867 () Unit!1824)

(assert (=> b!67357 (= e!44145 Unit!1867)))

(declare-fun b!67358 () Bool)

(assert (=> b!67358 (= e!44144 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!29155 (tuple2!2083 lt!29156 lt!29152))) lt!29157)))))

(assert (= (and d!14147 c!9392) b!67356))

(assert (= (and d!14147 (not c!9392)) b!67357))

(assert (= (and d!14147 (not res!36367)) b!67358))

(declare-fun m!62515 () Bool)

(assert (=> d!14147 m!62515))

(declare-fun m!62517 () Bool)

(assert (=> b!67356 m!62517))

(declare-fun m!62519 () Bool)

(assert (=> b!67356 m!62519))

(assert (=> b!67356 m!62519))

(declare-fun m!62521 () Bool)

(assert (=> b!67356 m!62521))

(assert (=> b!67358 m!62519))

(assert (=> b!67358 m!62519))

(assert (=> b!67358 m!62521))

(assert (=> b!67093 d!14147))

(declare-fun d!14149 () Bool)

(assert (=> d!14149 (= (get!1126 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!66806 d!14149))

(declare-fun d!14151 () Bool)

(assert (=> d!14151 (= (apply!72 lt!29083 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (getValueByKey!131 (toList!705 lt!29083) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2902 () Bool)

(assert (= bs!2902 d!14151))

(assert (=> bs!2902 m!61431))

(declare-fun m!62523 () Bool)

(assert (=> bs!2902 m!62523))

(assert (=> bs!2902 m!62523))

(declare-fun m!62525 () Bool)

(assert (=> bs!2902 m!62525))

(assert (=> b!66925 d!14151))

(declare-fun d!14153 () Bool)

(declare-fun c!9393 () Bool)

(assert (=> d!14153 (= c!9393 ((_ is ValueCellFull!881) (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!44146 () V!2913)

(assert (=> d!14153 (= (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44146)))

(declare-fun b!67359 () Bool)

(assert (=> b!67359 (= e!44146 (get!1125 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67360 () Bool)

(assert (=> b!67360 (= e!44146 (get!1126 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14153 c!9393) b!67359))

(assert (= (and d!14153 (not c!9393)) b!67360))

(assert (=> b!67359 m!61683))

(assert (=> b!67359 m!61477))

(declare-fun m!62527 () Bool)

(assert (=> b!67359 m!62527))

(assert (=> b!67360 m!61683))

(assert (=> b!67360 m!61477))

(declare-fun m!62529 () Bool)

(assert (=> b!67360 m!62529))

(assert (=> b!66925 d!14153))

(declare-fun b!67363 () Bool)

(declare-fun e!44148 () Option!137)

(assert (=> b!67363 (= e!44148 (getValueByKey!131 (t!4929 (toList!705 lt!29030)) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67361 () Bool)

(declare-fun e!44147 () Option!137)

(assert (=> b!67361 (= e!44147 (Some!136 (_2!1052 (h!2035 (toList!705 lt!29030)))))))

(declare-fun d!14155 () Bool)

(declare-fun c!9394 () Bool)

(assert (=> d!14155 (= c!9394 (and ((_ is Cons!1451) (toList!705 lt!29030)) (= (_1!1052 (h!2035 (toList!705 lt!29030))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14155 (= (getValueByKey!131 (toList!705 lt!29030) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44147)))

(declare-fun b!67364 () Bool)

(assert (=> b!67364 (= e!44148 None!135)))

(declare-fun b!67362 () Bool)

(assert (=> b!67362 (= e!44147 e!44148)))

(declare-fun c!9395 () Bool)

(assert (=> b!67362 (= c!9395 (and ((_ is Cons!1451) (toList!705 lt!29030)) (not (= (_1!1052 (h!2035 (toList!705 lt!29030))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14155 c!9394) b!67361))

(assert (= (and d!14155 (not c!9394)) b!67362))

(assert (= (and b!67362 c!9395) b!67363))

(assert (= (and b!67362 (not c!9395)) b!67364))

(declare-fun m!62531 () Bool)

(assert (=> b!67363 m!62531))

(assert (=> b!66884 d!14155))

(declare-fun b!67365 () Bool)

(declare-fun e!44153 () List!1455)

(declare-fun call!5642 () List!1455)

(assert (=> b!67365 (= e!44153 call!5642)))

(declare-fun b!67366 () Bool)

(declare-fun e!44149 () List!1455)

(declare-fun e!44151 () List!1455)

(assert (=> b!67366 (= e!44149 e!44151)))

(declare-fun c!9398 () Bool)

(assert (=> b!67366 (= c!9398 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28527))) (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28527)))) (_1!1052 lt!28528))))))

(declare-fun b!67367 () Bool)

(declare-fun res!36368 () Bool)

(declare-fun e!44152 () Bool)

(assert (=> b!67367 (=> (not res!36368) (not e!44152))))

(declare-fun lt!29306 () List!1455)

(assert (=> b!67367 (= res!36368 (containsKey!134 lt!29306 (_1!1052 lt!28528)))))

(declare-fun bm!5639 () Bool)

(declare-fun call!5644 () List!1455)

(assert (=> bm!5639 (= call!5642 call!5644)))

(declare-fun b!67368 () Bool)

(declare-fun call!5643 () List!1455)

(assert (=> b!67368 (= e!44149 call!5643)))

(declare-fun b!67369 () Bool)

(declare-fun c!9399 () Bool)

(assert (=> b!67369 (= c!9399 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28527))) (bvsgt (_1!1052 (h!2035 (t!4929 (toList!705 lt!28527)))) (_1!1052 lt!28528))))))

(assert (=> b!67369 (= e!44151 e!44153)))

(declare-fun b!67370 () Bool)

(declare-fun e!44150 () List!1455)

(assert (=> b!67370 (= e!44150 (ite c!9398 (t!4929 (t!4929 (toList!705 lt!28527))) (ite c!9399 (Cons!1451 (h!2035 (t!4929 (toList!705 lt!28527))) (t!4929 (t!4929 (toList!705 lt!28527)))) Nil!1452)))))

(declare-fun d!14157 () Bool)

(assert (=> d!14157 e!44152))

(declare-fun res!36369 () Bool)

(assert (=> d!14157 (=> (not res!36369) (not e!44152))))

(assert (=> d!14157 (= res!36369 (isStrictlySorted!276 lt!29306))))

(assert (=> d!14157 (= lt!29306 e!44149)))

(declare-fun c!9396 () Bool)

(assert (=> d!14157 (= c!9396 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28527))) (bvslt (_1!1052 (h!2035 (t!4929 (toList!705 lt!28527)))) (_1!1052 lt!28528))))))

(assert (=> d!14157 (isStrictlySorted!276 (t!4929 (toList!705 lt!28527)))))

(assert (=> d!14157 (= (insertStrictlySorted!51 (t!4929 (toList!705 lt!28527)) (_1!1052 lt!28528) (_2!1052 lt!28528)) lt!29306)))

(declare-fun b!67371 () Bool)

(assert (=> b!67371 (= e!44150 (insertStrictlySorted!51 (t!4929 (t!4929 (toList!705 lt!28527))) (_1!1052 lt!28528) (_2!1052 lt!28528)))))

(declare-fun b!67372 () Bool)

(assert (=> b!67372 (= e!44151 call!5644)))

(declare-fun bm!5640 () Bool)

(assert (=> bm!5640 (= call!5644 call!5643)))

(declare-fun b!67373 () Bool)

(assert (=> b!67373 (= e!44153 call!5642)))

(declare-fun bm!5641 () Bool)

(assert (=> bm!5641 (= call!5643 ($colon$colon!62 e!44150 (ite c!9396 (h!2035 (t!4929 (toList!705 lt!28527))) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528)))))))

(declare-fun c!9397 () Bool)

(assert (=> bm!5641 (= c!9397 c!9396)))

(declare-fun b!67374 () Bool)

(assert (=> b!67374 (= e!44152 (contains!709 lt!29306 (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(assert (= (and d!14157 c!9396) b!67368))

(assert (= (and d!14157 (not c!9396)) b!67366))

(assert (= (and b!67366 c!9398) b!67372))

(assert (= (and b!67366 (not c!9398)) b!67369))

(assert (= (and b!67369 c!9399) b!67365))

(assert (= (and b!67369 (not c!9399)) b!67373))

(assert (= (or b!67365 b!67373) bm!5639))

(assert (= (or b!67372 bm!5639) bm!5640))

(assert (= (or b!67368 bm!5640) bm!5641))

(assert (= (and bm!5641 c!9397) b!67371))

(assert (= (and bm!5641 (not c!9397)) b!67370))

(assert (= (and d!14157 res!36369) b!67367))

(assert (= (and b!67367 res!36368) b!67374))

(declare-fun m!62533 () Bool)

(assert (=> bm!5641 m!62533))

(declare-fun m!62535 () Bool)

(assert (=> b!67371 m!62535))

(declare-fun m!62537 () Bool)

(assert (=> b!67367 m!62537))

(declare-fun m!62539 () Bool)

(assert (=> b!67374 m!62539))

(declare-fun m!62541 () Bool)

(assert (=> d!14157 m!62541))

(assert (=> d!14157 m!62143))

(assert (=> b!67007 d!14157))

(declare-fun d!14159 () Bool)

(declare-fun res!36370 () Bool)

(declare-fun e!44154 () Bool)

(assert (=> d!14159 (=> res!36370 e!44154)))

(assert (=> d!14159 (= res!36370 (and ((_ is Cons!1451) (toList!705 lt!28667)) (= (_1!1052 (h!2035 (toList!705 lt!28667))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14159 (= (containsKey!134 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000) e!44154)))

(declare-fun b!67375 () Bool)

(declare-fun e!44155 () Bool)

(assert (=> b!67375 (= e!44154 e!44155)))

(declare-fun res!36371 () Bool)

(assert (=> b!67375 (=> (not res!36371) (not e!44155))))

(assert (=> b!67375 (= res!36371 (and (or (not ((_ is Cons!1451) (toList!705 lt!28667))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28667))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1451) (toList!705 lt!28667)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28667))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67376 () Bool)

(assert (=> b!67376 (= e!44155 (containsKey!134 (t!4929 (toList!705 lt!28667)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14159 (not res!36370)) b!67375))

(assert (= (and b!67375 res!36371) b!67376))

(declare-fun m!62543 () Bool)

(assert (=> b!67376 m!62543))

(assert (=> d!13791 d!14159))

(assert (=> b!66705 d!13869))

(declare-fun d!14161 () Bool)

(declare-fun res!36372 () Bool)

(declare-fun e!44156 () Bool)

(assert (=> d!14161 (=> res!36372 e!44156)))

(assert (=> d!14161 (= res!36372 (and ((_ is Cons!1451) (toList!705 lt!28707)) (= (_1!1052 (h!2035 (toList!705 lt!28707))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14161 (= (containsKey!134 (toList!705 lt!28707) #b0000000000000000000000000000000000000000000000000000000000000000) e!44156)))

(declare-fun b!67377 () Bool)

(declare-fun e!44157 () Bool)

(assert (=> b!67377 (= e!44156 e!44157)))

(declare-fun res!36373 () Bool)

(assert (=> b!67377 (=> (not res!36373) (not e!44157))))

(assert (=> b!67377 (= res!36373 (and (or (not ((_ is Cons!1451) (toList!705 lt!28707))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28707))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1451) (toList!705 lt!28707)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28707))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67378 () Bool)

(assert (=> b!67378 (= e!44157 (containsKey!134 (t!4929 (toList!705 lt!28707)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14161 (not res!36372)) b!67377))

(assert (= (and b!67377 res!36373) b!67378))

(declare-fun m!62545 () Bool)

(assert (=> b!67378 m!62545))

(assert (=> d!13865 d!14161))

(declare-fun d!14163 () Bool)

(assert (=> d!14163 (= (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67156 d!14163))

(declare-fun d!14165 () Bool)

(declare-fun res!36374 () Bool)

(declare-fun e!44158 () Bool)

(assert (=> d!14165 (=> res!36374 e!44158)))

(assert (=> d!14165 (= res!36374 (or ((_ is Nil!1452) lt!29115) ((_ is Nil!1452) (t!4929 lt!29115))))))

(assert (=> d!14165 (= (isStrictlySorted!276 lt!29115) e!44158)))

(declare-fun b!67379 () Bool)

(declare-fun e!44159 () Bool)

(assert (=> b!67379 (= e!44158 e!44159)))

(declare-fun res!36375 () Bool)

(assert (=> b!67379 (=> (not res!36375) (not e!44159))))

(assert (=> b!67379 (= res!36375 (bvslt (_1!1052 (h!2035 lt!29115)) (_1!1052 (h!2035 (t!4929 lt!29115)))))))

(declare-fun b!67380 () Bool)

(assert (=> b!67380 (= e!44159 (isStrictlySorted!276 (t!4929 lt!29115)))))

(assert (= (and d!14165 (not res!36374)) b!67379))

(assert (= (and b!67379 res!36375) b!67380))

(declare-fun m!62547 () Bool)

(assert (=> b!67380 m!62547))

(assert (=> d!13913 d!14165))

(declare-fun d!14167 () Bool)

(declare-fun res!36376 () Bool)

(declare-fun e!44160 () Bool)

(assert (=> d!14167 (=> res!36376 e!44160)))

(assert (=> d!14167 (= res!36376 (or ((_ is Nil!1452) (toList!705 lt!28527)) ((_ is Nil!1452) (t!4929 (toList!705 lt!28527)))))))

(assert (=> d!14167 (= (isStrictlySorted!276 (toList!705 lt!28527)) e!44160)))

(declare-fun b!67381 () Bool)

(declare-fun e!44161 () Bool)

(assert (=> b!67381 (= e!44160 e!44161)))

(declare-fun res!36377 () Bool)

(assert (=> b!67381 (=> (not res!36377) (not e!44161))))

(assert (=> b!67381 (= res!36377 (bvslt (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 (h!2035 (t!4929 (toList!705 lt!28527))))))))

(declare-fun b!67382 () Bool)

(assert (=> b!67382 (= e!44161 (isStrictlySorted!276 (t!4929 (toList!705 lt!28527))))))

(assert (= (and d!14167 (not res!36376)) b!67381))

(assert (= (and b!67381 res!36377) b!67382))

(assert (=> b!67382 m!62143))

(assert (=> d!13913 d!14167))

(declare-fun d!14169 () Bool)

(assert (=> d!14169 (= (apply!72 lt!29083 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!705 lt!29083) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2903 () Bool)

(assert (= bs!2903 d!14169))

(declare-fun m!62549 () Bool)

(assert (=> bs!2903 m!62549))

(assert (=> bs!2903 m!62549))

(declare-fun m!62551 () Bool)

(assert (=> bs!2903 m!62551))

(assert (=> b!66936 d!14169))

(declare-fun d!14171 () Bool)

(assert (=> d!14171 (= (apply!72 lt!29000 lt!29004) (get!1127 (getValueByKey!131 (toList!705 lt!29000) lt!29004)))))

(declare-fun bs!2904 () Bool)

(assert (= bs!2904 d!14171))

(declare-fun m!62553 () Bool)

(assert (=> bs!2904 m!62553))

(assert (=> bs!2904 m!62553))

(declare-fun m!62555 () Bool)

(assert (=> bs!2904 m!62555))

(assert (=> b!66834 d!14171))

(declare-fun d!14173 () Bool)

(declare-fun e!44162 () Bool)

(assert (=> d!14173 e!44162))

(declare-fun res!36379 () Bool)

(assert (=> d!14173 (=> (not res!36379) (not e!44162))))

(declare-fun lt!29309 () ListLongMap!1379)

(assert (=> d!14173 (= res!36379 (contains!705 lt!29309 (_1!1052 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))))))

(declare-fun lt!29307 () List!1455)

(assert (=> d!14173 (= lt!29309 (ListLongMap!1380 lt!29307))))

(declare-fun lt!29308 () Unit!1824)

(declare-fun lt!29310 () Unit!1824)

(assert (=> d!14173 (= lt!29308 lt!29310)))

(assert (=> d!14173 (= (getValueByKey!131 lt!29307 (_1!1052 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))) (Some!136 (_2!1052 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))))))

(assert (=> d!14173 (= lt!29310 (lemmaContainsTupThenGetReturnValue!48 lt!29307 (_1!1052 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))))))

(assert (=> d!14173 (= lt!29307 (insertStrictlySorted!51 (toList!705 lt!29005) (_1!1052 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))))))

(assert (=> d!14173 (= (+!86 lt!29005 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) lt!29309)))

(declare-fun b!67383 () Bool)

(declare-fun res!36378 () Bool)

(assert (=> b!67383 (=> (not res!36378) (not e!44162))))

(assert (=> b!67383 (= res!36378 (= (getValueByKey!131 (toList!705 lt!29309) (_1!1052 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))) (Some!136 (_2!1052 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))))))))

(declare-fun b!67384 () Bool)

(assert (=> b!67384 (= e!44162 (contains!709 (toList!705 lt!29309) (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))))))

(assert (= (and d!14173 res!36379) b!67383))

(assert (= (and b!67383 res!36378) b!67384))

(declare-fun m!62557 () Bool)

(assert (=> d!14173 m!62557))

(declare-fun m!62559 () Bool)

(assert (=> d!14173 m!62559))

(declare-fun m!62561 () Bool)

(assert (=> d!14173 m!62561))

(declare-fun m!62563 () Bool)

(assert (=> d!14173 m!62563))

(declare-fun m!62565 () Bool)

(assert (=> b!67383 m!62565))

(declare-fun m!62567 () Bool)

(assert (=> b!67384 m!62567))

(assert (=> b!66834 d!14173))

(declare-fun d!14175 () Bool)

(assert (=> d!14175 (= (apply!72 (+!86 lt!29000 (tuple2!2083 lt!29012 (minValue!2054 newMap!16))) lt!29004) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!29000 (tuple2!2083 lt!29012 (minValue!2054 newMap!16)))) lt!29004)))))

(declare-fun bs!2905 () Bool)

(assert (= bs!2905 d!14175))

(declare-fun m!62569 () Bool)

(assert (=> bs!2905 m!62569))

(assert (=> bs!2905 m!62569))

(declare-fun m!62571 () Bool)

(assert (=> bs!2905 m!62571))

(assert (=> b!66834 d!14175))

(declare-fun d!14177 () Bool)

(assert (=> d!14177 (= (apply!72 (+!86 lt!29013 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) lt!28999) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!29013 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))) lt!28999)))))

(declare-fun bs!2906 () Bool)

(assert (= bs!2906 d!14177))

(declare-fun m!62573 () Bool)

(assert (=> bs!2906 m!62573))

(assert (=> bs!2906 m!62573))

(declare-fun m!62575 () Bool)

(assert (=> bs!2906 m!62575))

(assert (=> b!66834 d!14177))

(declare-fun d!14179 () Bool)

(assert (=> d!14179 (= (apply!72 (+!86 lt!29000 (tuple2!2083 lt!29012 (minValue!2054 newMap!16))) lt!29004) (apply!72 lt!29000 lt!29004))))

(declare-fun lt!29311 () Unit!1824)

(assert (=> d!14179 (= lt!29311 (choose!376 lt!29000 lt!29012 (minValue!2054 newMap!16) lt!29004))))

(declare-fun e!44163 () Bool)

(assert (=> d!14179 e!44163))

(declare-fun res!36380 () Bool)

(assert (=> d!14179 (=> (not res!36380) (not e!44163))))

(assert (=> d!14179 (= res!36380 (contains!705 lt!29000 lt!29004))))

(assert (=> d!14179 (= (addApplyDifferent!48 lt!29000 lt!29012 (minValue!2054 newMap!16) lt!29004) lt!29311)))

(declare-fun b!67385 () Bool)

(assert (=> b!67385 (= e!44163 (not (= lt!29004 lt!29012)))))

(assert (= (and d!14179 res!36380) b!67385))

(declare-fun m!62577 () Bool)

(assert (=> d!14179 m!62577))

(assert (=> d!14179 m!61559))

(assert (=> d!14179 m!61559))

(assert (=> d!14179 m!61583))

(declare-fun m!62579 () Bool)

(assert (=> d!14179 m!62579))

(assert (=> d!14179 m!61587))

(assert (=> b!66834 d!14179))

(declare-fun d!14181 () Bool)

(declare-fun e!44164 () Bool)

(assert (=> d!14181 e!44164))

(declare-fun res!36382 () Bool)

(assert (=> d!14181 (=> (not res!36382) (not e!44164))))

(declare-fun lt!29314 () ListLongMap!1379)

(assert (=> d!14181 (= res!36382 (contains!705 lt!29314 (_1!1052 (tuple2!2083 lt!29001 (minValue!2054 newMap!16)))))))

(declare-fun lt!29312 () List!1455)

(assert (=> d!14181 (= lt!29314 (ListLongMap!1380 lt!29312))))

(declare-fun lt!29313 () Unit!1824)

(declare-fun lt!29315 () Unit!1824)

(assert (=> d!14181 (= lt!29313 lt!29315)))

(assert (=> d!14181 (= (getValueByKey!131 lt!29312 (_1!1052 (tuple2!2083 lt!29001 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29001 (minValue!2054 newMap!16)))))))

(assert (=> d!14181 (= lt!29315 (lemmaContainsTupThenGetReturnValue!48 lt!29312 (_1!1052 (tuple2!2083 lt!29001 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29001 (minValue!2054 newMap!16)))))))

(assert (=> d!14181 (= lt!29312 (insertStrictlySorted!51 (toList!705 lt!29002) (_1!1052 (tuple2!2083 lt!29001 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29001 (minValue!2054 newMap!16)))))))

(assert (=> d!14181 (= (+!86 lt!29002 (tuple2!2083 lt!29001 (minValue!2054 newMap!16))) lt!29314)))

(declare-fun b!67386 () Bool)

(declare-fun res!36381 () Bool)

(assert (=> b!67386 (=> (not res!36381) (not e!44164))))

(assert (=> b!67386 (= res!36381 (= (getValueByKey!131 (toList!705 lt!29314) (_1!1052 (tuple2!2083 lt!29001 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29001 (minValue!2054 newMap!16))))))))

(declare-fun b!67387 () Bool)

(assert (=> b!67387 (= e!44164 (contains!709 (toList!705 lt!29314) (tuple2!2083 lt!29001 (minValue!2054 newMap!16))))))

(assert (= (and d!14181 res!36382) b!67386))

(assert (= (and b!67386 res!36381) b!67387))

(declare-fun m!62581 () Bool)

(assert (=> d!14181 m!62581))

(declare-fun m!62583 () Bool)

(assert (=> d!14181 m!62583))

(declare-fun m!62585 () Bool)

(assert (=> d!14181 m!62585))

(declare-fun m!62587 () Bool)

(assert (=> d!14181 m!62587))

(declare-fun m!62589 () Bool)

(assert (=> b!67386 m!62589))

(declare-fun m!62591 () Bool)

(assert (=> b!67387 m!62591))

(assert (=> b!66834 d!14181))

(declare-fun d!14183 () Bool)

(assert (=> d!14183 (= (apply!72 lt!29013 lt!28999) (get!1127 (getValueByKey!131 (toList!705 lt!29013) lt!28999)))))

(declare-fun bs!2907 () Bool)

(assert (= bs!2907 d!14183))

(declare-fun m!62593 () Bool)

(assert (=> bs!2907 m!62593))

(assert (=> bs!2907 m!62593))

(declare-fun m!62595 () Bool)

(assert (=> bs!2907 m!62595))

(assert (=> b!66834 d!14183))

(declare-fun d!14185 () Bool)

(declare-fun e!44165 () Bool)

(assert (=> d!14185 e!44165))

(declare-fun res!36384 () Bool)

(assert (=> d!14185 (=> (not res!36384) (not e!44165))))

(declare-fun lt!29318 () ListLongMap!1379)

(assert (=> d!14185 (= res!36384 (contains!705 lt!29318 (_1!1052 (tuple2!2083 lt!29012 (minValue!2054 newMap!16)))))))

(declare-fun lt!29316 () List!1455)

(assert (=> d!14185 (= lt!29318 (ListLongMap!1380 lt!29316))))

(declare-fun lt!29317 () Unit!1824)

(declare-fun lt!29319 () Unit!1824)

(assert (=> d!14185 (= lt!29317 lt!29319)))

(assert (=> d!14185 (= (getValueByKey!131 lt!29316 (_1!1052 (tuple2!2083 lt!29012 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29012 (minValue!2054 newMap!16)))))))

(assert (=> d!14185 (= lt!29319 (lemmaContainsTupThenGetReturnValue!48 lt!29316 (_1!1052 (tuple2!2083 lt!29012 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29012 (minValue!2054 newMap!16)))))))

(assert (=> d!14185 (= lt!29316 (insertStrictlySorted!51 (toList!705 lt!29000) (_1!1052 (tuple2!2083 lt!29012 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29012 (minValue!2054 newMap!16)))))))

(assert (=> d!14185 (= (+!86 lt!29000 (tuple2!2083 lt!29012 (minValue!2054 newMap!16))) lt!29318)))

(declare-fun b!67388 () Bool)

(declare-fun res!36383 () Bool)

(assert (=> b!67388 (=> (not res!36383) (not e!44165))))

(assert (=> b!67388 (= res!36383 (= (getValueByKey!131 (toList!705 lt!29318) (_1!1052 (tuple2!2083 lt!29012 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29012 (minValue!2054 newMap!16))))))))

(declare-fun b!67389 () Bool)

(assert (=> b!67389 (= e!44165 (contains!709 (toList!705 lt!29318) (tuple2!2083 lt!29012 (minValue!2054 newMap!16))))))

(assert (= (and d!14185 res!36384) b!67388))

(assert (= (and b!67388 res!36383) b!67389))

(declare-fun m!62597 () Bool)

(assert (=> d!14185 m!62597))

(declare-fun m!62599 () Bool)

(assert (=> d!14185 m!62599))

(declare-fun m!62601 () Bool)

(assert (=> d!14185 m!62601))

(declare-fun m!62603 () Bool)

(assert (=> d!14185 m!62603))

(declare-fun m!62605 () Bool)

(assert (=> b!67388 m!62605))

(declare-fun m!62607 () Bool)

(assert (=> b!67389 m!62607))

(assert (=> b!66834 d!14185))

(declare-fun d!14187 () Bool)

(assert (=> d!14187 (contains!705 (+!86 lt!29005 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) lt!29008)))

(declare-fun lt!29320 () Unit!1824)

(assert (=> d!14187 (= lt!29320 (choose!377 lt!29005 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) lt!29008))))

(assert (=> d!14187 (contains!705 lt!29005 lt!29008)))

(assert (=> d!14187 (= (addStillContains!48 lt!29005 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) lt!29008) lt!29320)))

(declare-fun bs!2908 () Bool)

(assert (= bs!2908 d!14187))

(assert (=> bs!2908 m!61563))

(assert (=> bs!2908 m!61563))

(assert (=> bs!2908 m!61565))

(declare-fun m!62609 () Bool)

(assert (=> bs!2908 m!62609))

(declare-fun m!62611 () Bool)

(assert (=> bs!2908 m!62611))

(assert (=> b!66834 d!14187))

(declare-fun d!14189 () Bool)

(assert (=> d!14189 (= (apply!72 (+!86 lt!29013 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) lt!28999) (apply!72 lt!29013 lt!28999))))

(declare-fun lt!29321 () Unit!1824)

(assert (=> d!14189 (= lt!29321 (choose!376 lt!29013 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) lt!28999))))

(declare-fun e!44166 () Bool)

(assert (=> d!14189 e!44166))

(declare-fun res!36385 () Bool)

(assert (=> d!14189 (=> (not res!36385) (not e!44166))))

(assert (=> d!14189 (= res!36385 (contains!705 lt!29013 lt!28999))))

(assert (=> d!14189 (= (addApplyDifferent!48 lt!29013 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) lt!28999) lt!29321)))

(declare-fun b!67390 () Bool)

(assert (=> b!67390 (= e!44166 (not (= lt!28999 lt!28998)))))

(assert (= (and d!14189 res!36385) b!67390))

(declare-fun m!62613 () Bool)

(assert (=> d!14189 m!62613))

(assert (=> d!14189 m!61573))

(assert (=> d!14189 m!61573))

(assert (=> d!14189 m!61575))

(declare-fun m!62615 () Bool)

(assert (=> d!14189 m!62615))

(assert (=> d!14189 m!61577))

(assert (=> b!66834 d!14189))

(declare-fun d!14191 () Bool)

(declare-fun e!44167 () Bool)

(assert (=> d!14191 e!44167))

(declare-fun res!36387 () Bool)

(assert (=> d!14191 (=> (not res!36387) (not e!44167))))

(declare-fun lt!29324 () ListLongMap!1379)

(assert (=> d!14191 (= res!36387 (contains!705 lt!29324 (_1!1052 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))))))

(declare-fun lt!29322 () List!1455)

(assert (=> d!14191 (= lt!29324 (ListLongMap!1380 lt!29322))))

(declare-fun lt!29323 () Unit!1824)

(declare-fun lt!29325 () Unit!1824)

(assert (=> d!14191 (= lt!29323 lt!29325)))

(assert (=> d!14191 (= (getValueByKey!131 lt!29322 (_1!1052 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))) (Some!136 (_2!1052 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))))))

(assert (=> d!14191 (= lt!29325 (lemmaContainsTupThenGetReturnValue!48 lt!29322 (_1!1052 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))))))

(assert (=> d!14191 (= lt!29322 (insertStrictlySorted!51 (toList!705 lt!29013) (_1!1052 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))))))

(assert (=> d!14191 (= (+!86 lt!29013 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) lt!29324)))

(declare-fun b!67391 () Bool)

(declare-fun res!36386 () Bool)

(assert (=> b!67391 (=> (not res!36386) (not e!44167))))

(assert (=> b!67391 (= res!36386 (= (getValueByKey!131 (toList!705 lt!29324) (_1!1052 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))) (Some!136 (_2!1052 (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))))))))

(declare-fun b!67392 () Bool)

(assert (=> b!67392 (= e!44167 (contains!709 (toList!705 lt!29324) (tuple2!2083 lt!28998 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))))))

(assert (= (and d!14191 res!36387) b!67391))

(assert (= (and b!67391 res!36386) b!67392))

(declare-fun m!62617 () Bool)

(assert (=> d!14191 m!62617))

(declare-fun m!62619 () Bool)

(assert (=> d!14191 m!62619))

(declare-fun m!62621 () Bool)

(assert (=> d!14191 m!62621))

(declare-fun m!62623 () Bool)

(assert (=> d!14191 m!62623))

(declare-fun m!62625 () Bool)

(assert (=> b!67391 m!62625))

(declare-fun m!62627 () Bool)

(assert (=> b!67392 m!62627))

(assert (=> b!66834 d!14191))

(declare-fun d!14193 () Bool)

(assert (=> d!14193 (= (apply!72 lt!29002 lt!28995) (get!1127 (getValueByKey!131 (toList!705 lt!29002) lt!28995)))))

(declare-fun bs!2909 () Bool)

(assert (= bs!2909 d!14193))

(declare-fun m!62629 () Bool)

(assert (=> bs!2909 m!62629))

(assert (=> bs!2909 m!62629))

(declare-fun m!62631 () Bool)

(assert (=> bs!2909 m!62631))

(assert (=> b!66834 d!14193))

(declare-fun d!14195 () Bool)

(assert (=> d!14195 (= (apply!72 (+!86 lt!29002 (tuple2!2083 lt!29001 (minValue!2054 newMap!16))) lt!28995) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!29002 (tuple2!2083 lt!29001 (minValue!2054 newMap!16)))) lt!28995)))))

(declare-fun bs!2910 () Bool)

(assert (= bs!2910 d!14195))

(declare-fun m!62633 () Bool)

(assert (=> bs!2910 m!62633))

(assert (=> bs!2910 m!62633))

(declare-fun m!62635 () Bool)

(assert (=> bs!2910 m!62635))

(assert (=> b!66834 d!14195))

(declare-fun b!67393 () Bool)

(declare-fun e!44174 () ListLongMap!1379)

(declare-fun call!5645 () ListLongMap!1379)

(assert (=> b!67393 (= e!44174 call!5645)))

(declare-fun bm!5642 () Bool)

(assert (=> bm!5642 (= call!5645 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) (mask!6081 newMap!16) (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) (minValue!2054 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16)))))

(declare-fun b!67394 () Bool)

(declare-fun e!44168 () Bool)

(declare-fun e!44171 () Bool)

(assert (=> b!67394 (= e!44168 e!44171)))

(declare-fun c!9402 () Bool)

(declare-fun e!44173 () Bool)

(assert (=> b!67394 (= c!9402 e!44173)))

(declare-fun res!36390 () Bool)

(assert (=> b!67394 (=> (not res!36390) (not e!44173))))

(assert (=> b!67394 (= res!36390 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!67395 () Bool)

(declare-fun e!44169 () Bool)

(assert (=> b!67395 (= e!44171 e!44169)))

(assert (=> b!67395 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun res!36389 () Bool)

(declare-fun lt!29326 () ListLongMap!1379)

(assert (=> b!67395 (= res!36389 (contains!705 lt!29326 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67395 (=> (not res!36389) (not e!44169))))

(declare-fun b!67396 () Bool)

(assert (=> b!67396 (= e!44173 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67396 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67397 () Bool)

(declare-fun e!44170 () ListLongMap!1379)

(assert (=> b!67397 (= e!44170 (ListLongMap!1380 Nil!1452))))

(declare-fun b!67398 () Bool)

(declare-fun e!44172 () Bool)

(assert (=> b!67398 (= e!44172 (= lt!29326 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) (mask!6081 newMap!16) (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) (minValue!2054 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16))))))

(declare-fun b!67399 () Bool)

(assert (=> b!67399 (= e!44172 (isEmpty!313 lt!29326))))

(declare-fun b!67401 () Bool)

(assert (=> b!67401 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> b!67401 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))))))))

(assert (=> b!67401 (= e!44169 (= (apply!72 lt!29326 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!67402 () Bool)

(declare-fun res!36388 () Bool)

(assert (=> b!67402 (=> (not res!36388) (not e!44168))))

(assert (=> b!67402 (= res!36388 (not (contains!705 lt!29326 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67403 () Bool)

(assert (=> b!67403 (= e!44170 e!44174)))

(declare-fun c!9403 () Bool)

(assert (=> b!67403 (= c!9403 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67404 () Bool)

(declare-fun lt!29328 () Unit!1824)

(declare-fun lt!29329 () Unit!1824)

(assert (=> b!67404 (= lt!29328 lt!29329)))

(declare-fun lt!29327 () V!2913)

(declare-fun lt!29332 () (_ BitVec 64))

(declare-fun lt!29330 () ListLongMap!1379)

(declare-fun lt!29331 () (_ BitVec 64))

(assert (=> b!67404 (not (contains!705 (+!86 lt!29330 (tuple2!2083 lt!29331 lt!29327)) lt!29332))))

(assert (=> b!67404 (= lt!29329 (addStillNotContains!23 lt!29330 lt!29331 lt!29327 lt!29332))))

(assert (=> b!67404 (= lt!29332 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67404 (= lt!29327 (get!1122 (select (arr!1827 (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67404 (= lt!29331 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67404 (= lt!29330 call!5645)))

(assert (=> b!67404 (= e!44174 (+!86 call!5645 (tuple2!2083 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) (get!1122 (select (arr!1827 (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!14197 () Bool)

(assert (=> d!14197 e!44168))

(declare-fun res!36391 () Bool)

(assert (=> d!14197 (=> (not res!36391) (not e!44168))))

(assert (=> d!14197 (= res!36391 (not (contains!705 lt!29326 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14197 (= lt!29326 e!44170)))

(declare-fun c!9401 () Bool)

(assert (=> d!14197 (= c!9401 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!14197 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14197 (= (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) (mask!6081 newMap!16) (ite (and c!9197 c!9193) lt!28798 (extraKeys!2017 newMap!16)) (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29326)))

(declare-fun b!67400 () Bool)

(assert (=> b!67400 (= e!44171 e!44172)))

(declare-fun c!9400 () Bool)

(assert (=> b!67400 (= c!9400 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (= (and d!14197 c!9401) b!67397))

(assert (= (and d!14197 (not c!9401)) b!67403))

(assert (= (and b!67403 c!9403) b!67404))

(assert (= (and b!67403 (not c!9403)) b!67393))

(assert (= (or b!67404 b!67393) bm!5642))

(assert (= (and d!14197 res!36391) b!67402))

(assert (= (and b!67402 res!36388) b!67394))

(assert (= (and b!67394 res!36390) b!67396))

(assert (= (and b!67394 c!9402) b!67395))

(assert (= (and b!67394 (not c!9402)) b!67400))

(assert (= (and b!67395 res!36389) b!67401))

(assert (= (and b!67400 c!9400) b!67398))

(assert (= (and b!67400 (not c!9400)) b!67399))

(declare-fun b_lambda!3023 () Bool)

(assert (=> (not b_lambda!3023) (not b!67401)))

(assert (=> b!67401 t!4942))

(declare-fun b_and!4165 () Bool)

(assert (= b_and!4161 (and (=> t!4942 result!2587) b_and!4165)))

(assert (=> b!67401 t!4944))

(declare-fun b_and!4167 () Bool)

(assert (= b_and!4163 (and (=> t!4944 result!2589) b_and!4167)))

(declare-fun b_lambda!3025 () Bool)

(assert (=> (not b_lambda!3025) (not b!67404)))

(assert (=> b!67404 t!4942))

(declare-fun b_and!4169 () Bool)

(assert (= b_and!4165 (and (=> t!4942 result!2587) b_and!4169)))

(assert (=> b!67404 t!4944))

(declare-fun b_and!4171 () Bool)

(assert (= b_and!4167 (and (=> t!4944 result!2589) b_and!4171)))

(declare-fun m!62637 () Bool)

(assert (=> b!67398 m!62637))

(declare-fun m!62639 () Bool)

(assert (=> d!14197 m!62639))

(assert (=> d!14197 m!61297))

(assert (=> b!67396 m!61431))

(assert (=> b!67396 m!61431))

(assert (=> b!67396 m!61433))

(assert (=> b!67401 m!61431))

(declare-fun m!62641 () Bool)

(assert (=> b!67401 m!62641))

(assert (=> b!67401 m!61591))

(assert (=> b!67401 m!61477))

(assert (=> b!67401 m!61593))

(assert (=> b!67401 m!61591))

(assert (=> b!67401 m!61477))

(assert (=> b!67401 m!61431))

(assert (=> b!67395 m!61431))

(assert (=> b!67395 m!61431))

(declare-fun m!62643 () Bool)

(assert (=> b!67395 m!62643))

(declare-fun m!62645 () Bool)

(assert (=> b!67402 m!62645))

(assert (=> bm!5642 m!62637))

(declare-fun m!62647 () Bool)

(assert (=> b!67399 m!62647))

(assert (=> b!67403 m!61431))

(assert (=> b!67403 m!61431))

(assert (=> b!67403 m!61433))

(declare-fun m!62649 () Bool)

(assert (=> b!67404 m!62649))

(assert (=> b!67404 m!61477))

(assert (=> b!67404 m!61431))

(declare-fun m!62651 () Bool)

(assert (=> b!67404 m!62651))

(declare-fun m!62653 () Bool)

(assert (=> b!67404 m!62653))

(assert (=> b!67404 m!61591))

(assert (=> b!67404 m!61477))

(assert (=> b!67404 m!61593))

(assert (=> b!67404 m!62649))

(declare-fun m!62655 () Bool)

(assert (=> b!67404 m!62655))

(assert (=> b!67404 m!61591))

(assert (=> b!66834 d!14197))

(declare-fun d!14199 () Bool)

(declare-fun e!44175 () Bool)

(assert (=> d!14199 e!44175))

(declare-fun res!36392 () Bool)

(assert (=> d!14199 (=> res!36392 e!44175)))

(declare-fun lt!29333 () Bool)

(assert (=> d!14199 (= res!36392 (not lt!29333))))

(declare-fun lt!29336 () Bool)

(assert (=> d!14199 (= lt!29333 lt!29336)))

(declare-fun lt!29335 () Unit!1824)

(declare-fun e!44176 () Unit!1824)

(assert (=> d!14199 (= lt!29335 e!44176)))

(declare-fun c!9404 () Bool)

(assert (=> d!14199 (= c!9404 lt!29336)))

(assert (=> d!14199 (= lt!29336 (containsKey!134 (toList!705 (+!86 lt!29005 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))) lt!29008))))

(assert (=> d!14199 (= (contains!705 (+!86 lt!29005 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16)))) lt!29008) lt!29333)))

(declare-fun b!67405 () Bool)

(declare-fun lt!29334 () Unit!1824)

(assert (=> b!67405 (= e!44176 lt!29334)))

(assert (=> b!67405 (= lt!29334 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (+!86 lt!29005 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))) lt!29008))))

(assert (=> b!67405 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!29005 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))) lt!29008))))

(declare-fun b!67406 () Bool)

(declare-fun Unit!1868 () Unit!1824)

(assert (=> b!67406 (= e!44176 Unit!1868)))

(declare-fun b!67407 () Bool)

(assert (=> b!67407 (= e!44175 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!29005 (tuple2!2083 lt!29010 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))))) lt!29008)))))

(assert (= (and d!14199 c!9404) b!67405))

(assert (= (and d!14199 (not c!9404)) b!67406))

(assert (= (and d!14199 (not res!36392)) b!67407))

(declare-fun m!62657 () Bool)

(assert (=> d!14199 m!62657))

(declare-fun m!62659 () Bool)

(assert (=> b!67405 m!62659))

(declare-fun m!62661 () Bool)

(assert (=> b!67405 m!62661))

(assert (=> b!67405 m!62661))

(declare-fun m!62663 () Bool)

(assert (=> b!67405 m!62663))

(assert (=> b!67407 m!62661))

(assert (=> b!67407 m!62661))

(assert (=> b!67407 m!62663))

(assert (=> b!66834 d!14199))

(declare-fun d!14201 () Bool)

(assert (=> d!14201 (= (apply!72 (+!86 lt!29002 (tuple2!2083 lt!29001 (minValue!2054 newMap!16))) lt!28995) (apply!72 lt!29002 lt!28995))))

(declare-fun lt!29337 () Unit!1824)

(assert (=> d!14201 (= lt!29337 (choose!376 lt!29002 lt!29001 (minValue!2054 newMap!16) lt!28995))))

(declare-fun e!44177 () Bool)

(assert (=> d!14201 e!44177))

(declare-fun res!36393 () Bool)

(assert (=> d!14201 (=> (not res!36393) (not e!44177))))

(assert (=> d!14201 (= res!36393 (contains!705 lt!29002 lt!28995))))

(assert (=> d!14201 (= (addApplyDifferent!48 lt!29002 lt!29001 (minValue!2054 newMap!16) lt!28995) lt!29337)))

(declare-fun b!67408 () Bool)

(assert (=> b!67408 (= e!44177 (not (= lt!28995 lt!29001)))))

(assert (= (and d!14201 res!36393) b!67408))

(declare-fun m!62665 () Bool)

(assert (=> d!14201 m!62665))

(assert (=> d!14201 m!61579))

(assert (=> d!14201 m!61579))

(assert (=> d!14201 m!61585))

(declare-fun m!62667 () Bool)

(assert (=> d!14201 m!62667))

(assert (=> d!14201 m!61571))

(assert (=> b!66834 d!14201))

(declare-fun d!14203 () Bool)

(declare-fun res!36394 () Bool)

(declare-fun e!44178 () Bool)

(assert (=> d!14203 (=> (not res!36394) (not e!44178))))

(assert (=> d!14203 (= res!36394 (simpleValid!48 (_2!1051 lt!28883)))))

(assert (=> d!14203 (= (valid!289 (_2!1051 lt!28883)) e!44178)))

(declare-fun b!67409 () Bool)

(declare-fun res!36395 () Bool)

(assert (=> b!67409 (=> (not res!36395) (not e!44178))))

(assert (=> b!67409 (= res!36395 (= (arrayCountValidKeys!0 (_keys!3786 (_2!1051 lt!28883)) #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28883)))) (_size!384 (_2!1051 lt!28883))))))

(declare-fun b!67410 () Bool)

(declare-fun res!36396 () Bool)

(assert (=> b!67410 (=> (not res!36396) (not e!44178))))

(assert (=> b!67410 (= res!36396 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3786 (_2!1051 lt!28883)) (mask!6081 (_2!1051 lt!28883))))))

(declare-fun b!67411 () Bool)

(assert (=> b!67411 (= e!44178 (arrayNoDuplicates!0 (_keys!3786 (_2!1051 lt!28883)) #b00000000000000000000000000000000 Nil!1451))))

(assert (= (and d!14203 res!36394) b!67409))

(assert (= (and b!67409 res!36395) b!67410))

(assert (= (and b!67410 res!36396) b!67411))

(declare-fun m!62669 () Bool)

(assert (=> d!14203 m!62669))

(declare-fun m!62671 () Bool)

(assert (=> b!67409 m!62671))

(declare-fun m!62673 () Bool)

(assert (=> b!67410 m!62673))

(declare-fun m!62675 () Bool)

(assert (=> b!67411 m!62675))

(assert (=> b!66718 d!14203))

(declare-fun d!14205 () Bool)

(declare-fun res!36397 () Bool)

(declare-fun e!44179 () Bool)

(assert (=> d!14205 (=> res!36397 e!44179)))

(assert (=> d!14205 (= res!36397 (and ((_ is Cons!1451) lt!29185) (= (_1!1052 (h!2035 lt!29185)) (_1!1052 lt!28520))))))

(assert (=> d!14205 (= (containsKey!134 lt!29185 (_1!1052 lt!28520)) e!44179)))

(declare-fun b!67412 () Bool)

(declare-fun e!44180 () Bool)

(assert (=> b!67412 (= e!44179 e!44180)))

(declare-fun res!36398 () Bool)

(assert (=> b!67412 (=> (not res!36398) (not e!44180))))

(assert (=> b!67412 (= res!36398 (and (or (not ((_ is Cons!1451) lt!29185)) (bvsle (_1!1052 (h!2035 lt!29185)) (_1!1052 lt!28520))) ((_ is Cons!1451) lt!29185) (bvslt (_1!1052 (h!2035 lt!29185)) (_1!1052 lt!28520))))))

(declare-fun b!67413 () Bool)

(assert (=> b!67413 (= e!44180 (containsKey!134 (t!4929 lt!29185) (_1!1052 lt!28520)))))

(assert (= (and d!14205 (not res!36397)) b!67412))

(assert (= (and b!67412 res!36398) b!67413))

(declare-fun m!62677 () Bool)

(assert (=> b!67413 m!62677))

(assert (=> b!67126 d!14205))

(assert (=> b!67092 d!14087))

(declare-fun b!67415 () Bool)

(declare-fun res!36401 () Bool)

(declare-fun e!44181 () Bool)

(assert (=> b!67415 (=> (not res!36401) (not e!44181))))

(assert (=> b!67415 (= res!36401 (bvsge (size!2067 (_2!1051 lt!28794)) (_size!384 (_2!1051 lt!28794))))))

(declare-fun b!67414 () Bool)

(declare-fun res!36402 () Bool)

(assert (=> b!67414 (=> (not res!36402) (not e!44181))))

(assert (=> b!67414 (= res!36402 (and (= (size!2062 (_values!2129 (_2!1051 lt!28794))) (bvadd (mask!6081 (_2!1051 lt!28794)) #b00000000000000000000000000000001)) (= (size!2061 (_keys!3786 (_2!1051 lt!28794))) (size!2062 (_values!2129 (_2!1051 lt!28794)))) (bvsge (_size!384 (_2!1051 lt!28794)) #b00000000000000000000000000000000) (bvsle (_size!384 (_2!1051 lt!28794)) (bvadd (mask!6081 (_2!1051 lt!28794)) #b00000000000000000000000000000001))))))

(declare-fun d!14207 () Bool)

(declare-fun res!36400 () Bool)

(assert (=> d!14207 (=> (not res!36400) (not e!44181))))

(assert (=> d!14207 (= res!36400 (validMask!0 (mask!6081 (_2!1051 lt!28794))))))

(assert (=> d!14207 (= (simpleValid!48 (_2!1051 lt!28794)) e!44181)))

(declare-fun b!67416 () Bool)

(declare-fun res!36399 () Bool)

(assert (=> b!67416 (=> (not res!36399) (not e!44181))))

(assert (=> b!67416 (= res!36399 (= (size!2067 (_2!1051 lt!28794)) (bvadd (_size!384 (_2!1051 lt!28794)) (bvsdiv (bvadd (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!67417 () Bool)

(assert (=> b!67417 (= e!44181 (and (bvsge (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000000) (bvsle (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000011) (bvsge (_vacant!384 (_2!1051 lt!28794)) #b00000000000000000000000000000000)))))

(assert (= (and d!14207 res!36400) b!67414))

(assert (= (and b!67414 res!36402) b!67415))

(assert (= (and b!67415 res!36401) b!67416))

(assert (= (and b!67416 res!36399) b!67417))

(declare-fun m!62679 () Bool)

(assert (=> b!67415 m!62679))

(declare-fun m!62681 () Bool)

(assert (=> d!14207 m!62681))

(assert (=> b!67416 m!62679))

(assert (=> d!13931 d!14207))

(assert (=> bm!5561 d!13797))

(declare-fun b!67418 () Bool)

(declare-fun e!44183 () (_ BitVec 32))

(assert (=> b!67418 (= e!44183 #b00000000000000000000000000000000)))

(declare-fun b!67419 () Bool)

(declare-fun e!44182 () (_ BitVec 32))

(declare-fun call!5646 () (_ BitVec 32))

(assert (=> b!67419 (= e!44182 (bvadd #b00000000000000000000000000000001 call!5646))))

(declare-fun b!67420 () Bool)

(assert (=> b!67420 (= e!44182 call!5646)))

(declare-fun d!14209 () Bool)

(declare-fun lt!29338 () (_ BitVec 32))

(assert (=> d!14209 (and (bvsge lt!29338 #b00000000000000000000000000000000) (bvsle lt!29338 (bvsub (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!14209 (= lt!29338 e!44183)))

(declare-fun c!9406 () Bool)

(assert (=> d!14209 (= c!9406 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14209 (and (bvsle #b00000000000000000000000000000000 (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14209 (= (arrayCountValidKeys!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))) lt!29338)))

(declare-fun b!67421 () Bool)

(assert (=> b!67421 (= e!44183 e!44182)))

(declare-fun c!9405 () Bool)

(assert (=> b!67421 (= c!9405 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!5643 () Bool)

(assert (=> bm!5643 (= call!5646 (arrayCountValidKeys!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14209 c!9406) b!67418))

(assert (= (and d!14209 (not c!9406)) b!67421))

(assert (= (and b!67421 c!9405) b!67419))

(assert (= (and b!67421 (not c!9405)) b!67420))

(assert (= (or b!67419 b!67420) bm!5643))

(assert (=> b!67421 m!62351))

(assert (=> b!67421 m!62351))

(assert (=> b!67421 m!62353))

(declare-fun m!62683 () Bool)

(assert (=> bm!5643 m!62683))

(assert (=> b!67037 d!14209))

(declare-fun d!14211 () Bool)

(declare-fun e!44184 () Bool)

(assert (=> d!14211 e!44184))

(declare-fun res!36403 () Bool)

(assert (=> d!14211 (=> res!36403 e!44184)))

(declare-fun lt!29339 () Bool)

(assert (=> d!14211 (= res!36403 (not lt!29339))))

(declare-fun lt!29342 () Bool)

(assert (=> d!14211 (= lt!29339 lt!29342)))

(declare-fun lt!29341 () Unit!1824)

(declare-fun e!44185 () Unit!1824)

(assert (=> d!14211 (= lt!29341 e!44185)))

(declare-fun c!9407 () Bool)

(assert (=> d!14211 (= c!9407 lt!29342)))

(assert (=> d!14211 (= lt!29342 (containsKey!134 (toList!705 lt!29151) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!14211 (= (contains!705 lt!29151 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!29339)))

(declare-fun b!67422 () Bool)

(declare-fun lt!29340 () Unit!1824)

(assert (=> b!67422 (= e!44185 lt!29340)))

(assert (=> b!67422 (= lt!29340 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29151) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!67422 (isDefined!83 (getValueByKey!131 (toList!705 lt!29151) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!67423 () Bool)

(declare-fun Unit!1869 () Unit!1824)

(assert (=> b!67423 (= e!44185 Unit!1869)))

(declare-fun b!67424 () Bool)

(assert (=> b!67424 (= e!44184 (isDefined!83 (getValueByKey!131 (toList!705 lt!29151) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!14211 c!9407) b!67422))

(assert (= (and d!14211 (not c!9407)) b!67423))

(assert (= (and d!14211 (not res!36403)) b!67424))

(assert (=> d!14211 m!61331))

(declare-fun m!62685 () Bool)

(assert (=> d!14211 m!62685))

(assert (=> b!67422 m!61331))

(declare-fun m!62687 () Bool)

(assert (=> b!67422 m!62687))

(assert (=> b!67422 m!61331))

(declare-fun m!62689 () Bool)

(assert (=> b!67422 m!62689))

(assert (=> b!67422 m!62689))

(declare-fun m!62691 () Bool)

(assert (=> b!67422 m!62691))

(assert (=> b!67424 m!61331))

(assert (=> b!67424 m!62689))

(assert (=> b!67424 m!62689))

(assert (=> b!67424 m!62691))

(assert (=> b!67084 d!14211))

(declare-fun d!14213 () Bool)

(assert (=> d!14213 (= ($colon$colon!62 e!43972 (ite c!9307 (h!2035 (toList!705 (+!86 lt!28527 lt!28520))) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528)))) (Cons!1451 (ite c!9307 (h!2035 (toList!705 (+!86 lt!28527 lt!28520))) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))) e!43972))))

(assert (=> bm!5615 d!14213))

(declare-fun e!44187 () Option!137)

(declare-fun b!67427 () Bool)

(assert (=> b!67427 (= e!44187 (getValueByKey!131 (t!4929 (toList!705 lt!28951)) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67425 () Bool)

(declare-fun e!44186 () Option!137)

(assert (=> b!67425 (= e!44186 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28951)))))))

(declare-fun c!9408 () Bool)

(declare-fun d!14215 () Bool)

(assert (=> d!14215 (= c!9408 (and ((_ is Cons!1451) (toList!705 lt!28951)) (= (_1!1052 (h!2035 (toList!705 lt!28951))) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14215 (= (getValueByKey!131 (toList!705 lt!28951) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44186)))

(declare-fun b!67428 () Bool)

(assert (=> b!67428 (= e!44187 None!135)))

(declare-fun b!67426 () Bool)

(assert (=> b!67426 (= e!44186 e!44187)))

(declare-fun c!9409 () Bool)

(assert (=> b!67426 (= c!9409 (and ((_ is Cons!1451) (toList!705 lt!28951)) (not (= (_1!1052 (h!2035 (toList!705 lt!28951))) (_1!1052 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14215 c!9408) b!67425))

(assert (= (and d!14215 (not c!9408)) b!67426))

(assert (= (and b!67426 c!9409) b!67427))

(assert (= (and b!67426 (not c!9409)) b!67428))

(declare-fun m!62693 () Bool)

(assert (=> b!67427 m!62693))

(assert (=> b!66768 d!14215))

(declare-fun lt!29343 () Bool)

(declare-fun d!14217 () Bool)

(assert (=> d!14217 (= lt!29343 (select (content!72 (toList!705 lt!29126)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!44189 () Bool)

(assert (=> d!14217 (= lt!29343 e!44189)))

(declare-fun res!36405 () Bool)

(assert (=> d!14217 (=> (not res!36405) (not e!44189))))

(assert (=> d!14217 (= res!36405 ((_ is Cons!1451) (toList!705 lt!29126)))))

(assert (=> d!14217 (= (contains!709 (toList!705 lt!29126) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!29343)))

(declare-fun b!67429 () Bool)

(declare-fun e!44188 () Bool)

(assert (=> b!67429 (= e!44189 e!44188)))

(declare-fun res!36404 () Bool)

(assert (=> b!67429 (=> res!36404 e!44188)))

(assert (=> b!67429 (= res!36404 (= (h!2035 (toList!705 lt!29126)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!67430 () Bool)

(assert (=> b!67430 (= e!44188 (contains!709 (t!4929 (toList!705 lt!29126)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!14217 res!36405) b!67429))

(assert (= (and b!67429 (not res!36404)) b!67430))

(declare-fun m!62695 () Bool)

(assert (=> d!14217 m!62695))

(declare-fun m!62697 () Bool)

(assert (=> d!14217 m!62697))

(declare-fun m!62699 () Bool)

(assert (=> b!67430 m!62699))

(assert (=> b!67018 d!14217))

(declare-fun d!14219 () Bool)

(declare-fun e!44190 () Bool)

(assert (=> d!14219 e!44190))

(declare-fun res!36406 () Bool)

(assert (=> d!14219 (=> res!36406 e!44190)))

(declare-fun lt!29344 () Bool)

(assert (=> d!14219 (= res!36406 (not lt!29344))))

(declare-fun lt!29347 () Bool)

(assert (=> d!14219 (= lt!29344 lt!29347)))

(declare-fun lt!29346 () Unit!1824)

(declare-fun e!44191 () Unit!1824)

(assert (=> d!14219 (= lt!29346 e!44191)))

(declare-fun c!9410 () Bool)

(assert (=> d!14219 (= c!9410 lt!29347)))

(assert (=> d!14219 (= lt!29347 (containsKey!134 (toList!705 lt!29126) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!14219 (= (contains!705 lt!29126 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29344)))

(declare-fun b!67431 () Bool)

(declare-fun lt!29345 () Unit!1824)

(assert (=> b!67431 (= e!44191 lt!29345)))

(assert (=> b!67431 (= lt!29345 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29126) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!67431 (isDefined!83 (getValueByKey!131 (toList!705 lt!29126) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67432 () Bool)

(declare-fun Unit!1870 () Unit!1824)

(assert (=> b!67432 (= e!44191 Unit!1870)))

(declare-fun b!67433 () Bool)

(assert (=> b!67433 (= e!44190 (isDefined!83 (getValueByKey!131 (toList!705 lt!29126) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!14219 c!9410) b!67431))

(assert (= (and d!14219 (not c!9410)) b!67432))

(assert (= (and d!14219 (not res!36406)) b!67433))

(declare-fun m!62701 () Bool)

(assert (=> d!14219 m!62701))

(declare-fun m!62703 () Bool)

(assert (=> b!67431 m!62703))

(assert (=> b!67431 m!61871))

(assert (=> b!67431 m!61871))

(declare-fun m!62705 () Bool)

(assert (=> b!67431 m!62705))

(assert (=> b!67433 m!61871))

(assert (=> b!67433 m!61871))

(assert (=> b!67433 m!62705))

(assert (=> d!13921 d!14219))

(declare-fun b!67436 () Bool)

(declare-fun e!44193 () Option!137)

(assert (=> b!67436 (= e!44193 (getValueByKey!131 (t!4929 lt!29124) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67434 () Bool)

(declare-fun e!44192 () Option!137)

(assert (=> b!67434 (= e!44192 (Some!136 (_2!1052 (h!2035 lt!29124))))))

(declare-fun d!14221 () Bool)

(declare-fun c!9411 () Bool)

(assert (=> d!14221 (= c!9411 (and ((_ is Cons!1451) lt!29124) (= (_1!1052 (h!2035 lt!29124)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!14221 (= (getValueByKey!131 lt!29124 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!44192)))

(declare-fun b!67437 () Bool)

(assert (=> b!67437 (= e!44193 None!135)))

(declare-fun b!67435 () Bool)

(assert (=> b!67435 (= e!44192 e!44193)))

(declare-fun c!9412 () Bool)

(assert (=> b!67435 (= c!9412 (and ((_ is Cons!1451) lt!29124) (not (= (_1!1052 (h!2035 lt!29124)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!14221 c!9411) b!67434))

(assert (= (and d!14221 (not c!9411)) b!67435))

(assert (= (and b!67435 c!9412) b!67436))

(assert (= (and b!67435 (not c!9412)) b!67437))

(declare-fun m!62707 () Bool)

(assert (=> b!67436 m!62707))

(assert (=> d!13921 d!14221))

(declare-fun d!14223 () Bool)

(assert (=> d!14223 (= (getValueByKey!131 lt!29124 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!29348 () Unit!1824)

(assert (=> d!14223 (= lt!29348 (choose!380 lt!29124 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!44194 () Bool)

(assert (=> d!14223 e!44194))

(declare-fun res!36407 () Bool)

(assert (=> d!14223 (=> (not res!36407) (not e!44194))))

(assert (=> d!14223 (= res!36407 (isStrictlySorted!276 lt!29124))))

(assert (=> d!14223 (= (lemmaContainsTupThenGetReturnValue!48 lt!29124 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29348)))

(declare-fun b!67438 () Bool)

(declare-fun res!36408 () Bool)

(assert (=> b!67438 (=> (not res!36408) (not e!44194))))

(assert (=> b!67438 (= res!36408 (containsKey!134 lt!29124 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67439 () Bool)

(assert (=> b!67439 (= e!44194 (contains!709 lt!29124 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!14223 res!36407) b!67438))

(assert (= (and b!67438 res!36408) b!67439))

(assert (=> d!14223 m!61865))

(declare-fun m!62709 () Bool)

(assert (=> d!14223 m!62709))

(declare-fun m!62711 () Bool)

(assert (=> d!14223 m!62711))

(declare-fun m!62713 () Bool)

(assert (=> b!67438 m!62713))

(declare-fun m!62715 () Bool)

(assert (=> b!67439 m!62715))

(assert (=> d!13921 d!14223))

(declare-fun b!67440 () Bool)

(declare-fun e!44199 () List!1455)

(declare-fun call!5647 () List!1455)

(assert (=> b!67440 (= e!44199 call!5647)))

(declare-fun b!67441 () Bool)

(declare-fun e!44195 () List!1455)

(declare-fun e!44197 () List!1455)

(assert (=> b!67441 (= e!44195 e!44197)))

(declare-fun c!9415 () Bool)

(assert (=> b!67441 (= c!9415 (and ((_ is Cons!1451) (toList!705 call!5481)) (= (_1!1052 (h!2035 (toList!705 call!5481))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!67442 () Bool)

(declare-fun res!36409 () Bool)

(declare-fun e!44198 () Bool)

(assert (=> b!67442 (=> (not res!36409) (not e!44198))))

(declare-fun lt!29349 () List!1455)

(assert (=> b!67442 (= res!36409 (containsKey!134 lt!29349 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!5644 () Bool)

(declare-fun call!5649 () List!1455)

(assert (=> bm!5644 (= call!5647 call!5649)))

(declare-fun b!67443 () Bool)

(declare-fun call!5648 () List!1455)

(assert (=> b!67443 (= e!44195 call!5648)))

(declare-fun c!9416 () Bool)

(declare-fun b!67444 () Bool)

(assert (=> b!67444 (= c!9416 (and ((_ is Cons!1451) (toList!705 call!5481)) (bvsgt (_1!1052 (h!2035 (toList!705 call!5481))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!67444 (= e!44197 e!44199)))

(declare-fun e!44196 () List!1455)

(declare-fun b!67445 () Bool)

(assert (=> b!67445 (= e!44196 (ite c!9415 (t!4929 (toList!705 call!5481)) (ite c!9416 (Cons!1451 (h!2035 (toList!705 call!5481)) (t!4929 (toList!705 call!5481))) Nil!1452)))))

(declare-fun d!14225 () Bool)

(assert (=> d!14225 e!44198))

(declare-fun res!36410 () Bool)

(assert (=> d!14225 (=> (not res!36410) (not e!44198))))

(assert (=> d!14225 (= res!36410 (isStrictlySorted!276 lt!29349))))

(assert (=> d!14225 (= lt!29349 e!44195)))

(declare-fun c!9413 () Bool)

(assert (=> d!14225 (= c!9413 (and ((_ is Cons!1451) (toList!705 call!5481)) (bvslt (_1!1052 (h!2035 (toList!705 call!5481))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!14225 (isStrictlySorted!276 (toList!705 call!5481))))

(assert (=> d!14225 (= (insertStrictlySorted!51 (toList!705 call!5481) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!29349)))

(declare-fun b!67446 () Bool)

(assert (=> b!67446 (= e!44196 (insertStrictlySorted!51 (t!4929 (toList!705 call!5481)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67447 () Bool)

(assert (=> b!67447 (= e!44197 call!5649)))

(declare-fun bm!5645 () Bool)

(assert (=> bm!5645 (= call!5649 call!5648)))

(declare-fun b!67448 () Bool)

(assert (=> b!67448 (= e!44199 call!5647)))

(declare-fun bm!5646 () Bool)

(assert (=> bm!5646 (= call!5648 ($colon$colon!62 e!44196 (ite c!9413 (h!2035 (toList!705 call!5481)) (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!9414 () Bool)

(assert (=> bm!5646 (= c!9414 c!9413)))

(declare-fun b!67449 () Bool)

(assert (=> b!67449 (= e!44198 (contains!709 lt!29349 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!14225 c!9413) b!67443))

(assert (= (and d!14225 (not c!9413)) b!67441))

(assert (= (and b!67441 c!9415) b!67447))

(assert (= (and b!67441 (not c!9415)) b!67444))

(assert (= (and b!67444 c!9416) b!67440))

(assert (= (and b!67444 (not c!9416)) b!67448))

(assert (= (or b!67440 b!67448) bm!5644))

(assert (= (or b!67447 bm!5644) bm!5645))

(assert (= (or b!67443 bm!5645) bm!5646))

(assert (= (and bm!5646 c!9414) b!67446))

(assert (= (and bm!5646 (not c!9414)) b!67445))

(assert (= (and d!14225 res!36410) b!67442))

(assert (= (and b!67442 res!36409) b!67449))

(declare-fun m!62717 () Bool)

(assert (=> bm!5646 m!62717))

(declare-fun m!62719 () Bool)

(assert (=> b!67446 m!62719))

(declare-fun m!62721 () Bool)

(assert (=> b!67442 m!62721))

(declare-fun m!62723 () Bool)

(assert (=> b!67449 m!62723))

(declare-fun m!62725 () Bool)

(assert (=> d!14225 m!62725))

(declare-fun m!62727 () Bool)

(assert (=> d!14225 m!62727))

(assert (=> d!13921 d!14225))

(declare-fun b!67452 () Bool)

(declare-fun e!44201 () Option!137)

(assert (=> b!67452 (= e!44201 (getValueByKey!131 (t!4929 (t!4929 lt!28717)) (_1!1052 lt!28520)))))

(declare-fun b!67450 () Bool)

(declare-fun e!44200 () Option!137)

(assert (=> b!67450 (= e!44200 (Some!136 (_2!1052 (h!2035 (t!4929 lt!28717)))))))

(declare-fun d!14227 () Bool)

(declare-fun c!9417 () Bool)

(assert (=> d!14227 (= c!9417 (and ((_ is Cons!1451) (t!4929 lt!28717)) (= (_1!1052 (h!2035 (t!4929 lt!28717))) (_1!1052 lt!28520))))))

(assert (=> d!14227 (= (getValueByKey!131 (t!4929 lt!28717) (_1!1052 lt!28520)) e!44200)))

(declare-fun b!67453 () Bool)

(assert (=> b!67453 (= e!44201 None!135)))

(declare-fun b!67451 () Bool)

(assert (=> b!67451 (= e!44200 e!44201)))

(declare-fun c!9418 () Bool)

(assert (=> b!67451 (= c!9418 (and ((_ is Cons!1451) (t!4929 lt!28717)) (not (= (_1!1052 (h!2035 (t!4929 lt!28717))) (_1!1052 lt!28520)))))))

(assert (= (and d!14227 c!9417) b!67450))

(assert (= (and d!14227 (not c!9417)) b!67451))

(assert (= (and b!67451 c!9418) b!67452))

(assert (= (and b!67451 (not c!9418)) b!67453))

(declare-fun m!62729 () Bool)

(assert (=> b!67452 m!62729))

(assert (=> b!67049 d!14227))

(assert (=> d!13983 d!13981))

(declare-fun d!14229 () Bool)

(assert (=> d!14229 (= (getValueByKey!131 lt!28685 (_1!1052 lt!28520)) (Some!136 (_2!1052 lt!28520)))))

(assert (=> d!14229 true))

(declare-fun _$22!368 () Unit!1824)

(assert (=> d!14229 (= (choose!380 lt!28685 (_1!1052 lt!28520) (_2!1052 lt!28520)) _$22!368)))

(declare-fun bs!2911 () Bool)

(assert (= bs!2911 d!14229))

(assert (=> bs!2911 m!61073))

(assert (=> d!13983 d!14229))

(declare-fun d!14231 () Bool)

(declare-fun res!36411 () Bool)

(declare-fun e!44202 () Bool)

(assert (=> d!14231 (=> res!36411 e!44202)))

(assert (=> d!14231 (= res!36411 (or ((_ is Nil!1452) lt!28685) ((_ is Nil!1452) (t!4929 lt!28685))))))

(assert (=> d!14231 (= (isStrictlySorted!276 lt!28685) e!44202)))

(declare-fun b!67454 () Bool)

(declare-fun e!44203 () Bool)

(assert (=> b!67454 (= e!44202 e!44203)))

(declare-fun res!36412 () Bool)

(assert (=> b!67454 (=> (not res!36412) (not e!44203))))

(assert (=> b!67454 (= res!36412 (bvslt (_1!1052 (h!2035 lt!28685)) (_1!1052 (h!2035 (t!4929 lt!28685)))))))

(declare-fun b!67455 () Bool)

(assert (=> b!67455 (= e!44203 (isStrictlySorted!276 (t!4929 lt!28685)))))

(assert (= (and d!14231 (not res!36411)) b!67454))

(assert (= (and b!67454 res!36412) b!67455))

(declare-fun m!62731 () Bool)

(assert (=> b!67455 m!62731))

(assert (=> d!13983 d!14231))

(assert (=> d!13927 d!13925))

(assert (=> d!13927 d!13923))

(declare-fun d!14233 () Bool)

(assert (=> d!14233 (not (contains!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)) lt!28713))))

(assert (=> d!14233 true))

(declare-fun _$36!292 () Unit!1824)

(assert (=> d!14233 (= (choose!381 lt!28711 lt!28712 lt!28708 lt!28713) _$36!292)))

(declare-fun bs!2912 () Bool)

(assert (= bs!2912 d!14233))

(assert (=> bs!2912 m!61107))

(assert (=> bs!2912 m!61107))

(assert (=> bs!2912 m!61113))

(assert (=> d!13927 d!14233))

(declare-fun d!14235 () Bool)

(declare-fun e!44204 () Bool)

(assert (=> d!14235 e!44204))

(declare-fun res!36413 () Bool)

(assert (=> d!14235 (=> res!36413 e!44204)))

(declare-fun lt!29350 () Bool)

(assert (=> d!14235 (= res!36413 (not lt!29350))))

(declare-fun lt!29353 () Bool)

(assert (=> d!14235 (= lt!29350 lt!29353)))

(declare-fun lt!29352 () Unit!1824)

(declare-fun e!44205 () Unit!1824)

(assert (=> d!14235 (= lt!29352 e!44205)))

(declare-fun c!9419 () Bool)

(assert (=> d!14235 (= c!9419 lt!29353)))

(assert (=> d!14235 (= lt!29353 (containsKey!134 (toList!705 lt!28711) lt!28713))))

(assert (=> d!14235 (= (contains!705 lt!28711 lt!28713) lt!29350)))

(declare-fun b!67457 () Bool)

(declare-fun lt!29351 () Unit!1824)

(assert (=> b!67457 (= e!44205 lt!29351)))

(assert (=> b!67457 (= lt!29351 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28711) lt!28713))))

(assert (=> b!67457 (isDefined!83 (getValueByKey!131 (toList!705 lt!28711) lt!28713))))

(declare-fun b!67458 () Bool)

(declare-fun Unit!1871 () Unit!1824)

(assert (=> b!67458 (= e!44205 Unit!1871)))

(declare-fun b!67459 () Bool)

(assert (=> b!67459 (= e!44204 (isDefined!83 (getValueByKey!131 (toList!705 lt!28711) lt!28713)))))

(assert (= (and d!14235 c!9419) b!67457))

(assert (= (and d!14235 (not c!9419)) b!67458))

(assert (= (and d!14235 (not res!36413)) b!67459))

(declare-fun m!62733 () Bool)

(assert (=> d!14235 m!62733))

(declare-fun m!62735 () Bool)

(assert (=> b!67457 m!62735))

(declare-fun m!62737 () Bool)

(assert (=> b!67457 m!62737))

(assert (=> b!67457 m!62737))

(declare-fun m!62739 () Bool)

(assert (=> b!67457 m!62739))

(assert (=> b!67459 m!62737))

(assert (=> b!67459 m!62737))

(assert (=> b!67459 m!62739))

(assert (=> d!13927 d!14235))

(declare-fun d!14237 () Bool)

(declare-fun c!9420 () Bool)

(assert (=> d!14237 (= c!9420 ((_ is Nil!1452) (toList!705 lt!28723)))))

(declare-fun e!44206 () (InoxSet tuple2!2082))

(assert (=> d!14237 (= (content!72 (toList!705 lt!28723)) e!44206)))

(declare-fun b!67460 () Bool)

(assert (=> b!67460 (= e!44206 ((as const (Array tuple2!2082 Bool)) false))))

(declare-fun b!67461 () Bool)

(assert (=> b!67461 (= e!44206 ((_ map or) (store ((as const (Array tuple2!2082 Bool)) false) (h!2035 (toList!705 lt!28723)) true) (content!72 (t!4929 (toList!705 lt!28723)))))))

(assert (= (and d!14237 c!9420) b!67460))

(assert (= (and d!14237 (not c!9420)) b!67461))

(declare-fun m!62741 () Bool)

(assert (=> b!67461 m!62741))

(declare-fun m!62743 () Bool)

(assert (=> b!67461 m!62743))

(assert (=> d!13897 d!14237))

(declare-fun d!14239 () Bool)

(declare-fun e!44207 () Bool)

(assert (=> d!14239 e!44207))

(declare-fun res!36415 () Bool)

(assert (=> d!14239 (=> (not res!36415) (not e!44207))))

(declare-fun lt!29356 () ListLongMap!1379)

(assert (=> d!14239 (= res!36415 (contains!705 lt!29356 (_1!1052 (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(declare-fun lt!29354 () List!1455)

(assert (=> d!14239 (= lt!29356 (ListLongMap!1380 lt!29354))))

(declare-fun lt!29355 () Unit!1824)

(declare-fun lt!29357 () Unit!1824)

(assert (=> d!14239 (= lt!29355 lt!29357)))

(assert (=> d!14239 (= (getValueByKey!131 lt!29354 (_1!1052 (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14239 (= lt!29357 (lemmaContainsTupThenGetReturnValue!48 lt!29354 (_1!1052 (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (_2!1052 (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14239 (= lt!29354 (insertStrictlySorted!51 (toList!705 (ite c!9240 call!5576 (ite c!9242 call!5580 call!5577))) (_1!1052 (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (_2!1052 (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14239 (= (+!86 (ite c!9240 call!5576 (ite c!9242 call!5580 call!5577)) (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) lt!29356)))

(declare-fun b!67462 () Bool)

(declare-fun res!36414 () Bool)

(assert (=> b!67462 (=> (not res!36414) (not e!44207))))

(assert (=> b!67462 (= res!36414 (= (getValueByKey!131 (toList!705 lt!29356) (_1!1052 (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))))

(declare-fun b!67463 () Bool)

(assert (=> b!67463 (= e!44207 (contains!709 (toList!705 lt!29356) (ite (or c!9240 c!9242) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!9197 c!9193) lt!28522 (zeroValue!2054 newMap!16))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (= (and d!14239 res!36415) b!67462))

(assert (= (and b!67462 res!36414) b!67463))

(declare-fun m!62745 () Bool)

(assert (=> d!14239 m!62745))

(declare-fun m!62747 () Bool)

(assert (=> d!14239 m!62747))

(declare-fun m!62749 () Bool)

(assert (=> d!14239 m!62749))

(declare-fun m!62751 () Bool)

(assert (=> d!14239 m!62751))

(declare-fun m!62753 () Bool)

(assert (=> b!67462 m!62753))

(declare-fun m!62755 () Bool)

(assert (=> b!67463 m!62755))

(assert (=> bm!5573 d!14239))

(declare-fun d!14241 () Bool)

(assert (=> d!14241 (isDefined!83 (getValueByKey!131 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))

(declare-fun lt!29358 () Unit!1824)

(assert (=> d!14241 (= lt!29358 (choose!379 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))

(declare-fun e!44208 () Bool)

(assert (=> d!14241 e!44208))

(declare-fun res!36416 () Bool)

(assert (=> d!14241 (=> (not res!36416) (not e!44208))))

(assert (=> d!14241 (= res!36416 (isStrictlySorted!276 (toList!705 e!43717)))))

(assert (=> d!14241 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))) lt!29358)))

(declare-fun b!67464 () Bool)

(assert (=> b!67464 (= e!44208 (containsKey!134 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))

(assert (= (and d!14241 res!36416) b!67464))

(assert (=> d!14241 m!61493))

(assert (=> d!14241 m!61493))

(assert (=> d!14241 m!61495))

(declare-fun m!62757 () Bool)

(assert (=> d!14241 m!62757))

(declare-fun m!62759 () Bool)

(assert (=> d!14241 m!62759))

(assert (=> b!67464 m!61489))

(assert (=> b!66795 d!14241))

(assert (=> b!66795 d!14067))

(assert (=> b!66795 d!14069))

(declare-fun d!14243 () Bool)

(assert (=> d!14243 (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29359 () Unit!1824)

(assert (=> d!14243 (= lt!29359 (choose!379 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44209 () Bool)

(assert (=> d!14243 e!44209))

(declare-fun res!36417 () Bool)

(assert (=> d!14243 (=> (not res!36417) (not e!44209))))

(assert (=> d!14243 (= res!36417 (isStrictlySorted!276 (toList!705 lt!28707)))))

(assert (=> d!14243 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000) lt!29359)))

(declare-fun b!67465 () Bool)

(assert (=> b!67465 (= e!44209 (containsKey!134 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14243 res!36417) b!67465))

(assert (=> d!14243 m!61857))

(assert (=> d!14243 m!61857))

(assert (=> d!14243 m!61859))

(declare-fun m!62761 () Bool)

(assert (=> d!14243 m!62761))

(assert (=> d!14243 m!62323))

(assert (=> b!67465 m!61853))

(assert (=> b!67014 d!14243))

(assert (=> b!67014 d!14071))

(assert (=> b!67014 d!14073))

(declare-fun d!14245 () Bool)

(declare-fun e!44210 () Bool)

(assert (=> d!14245 e!44210))

(declare-fun res!36418 () Bool)

(assert (=> d!14245 (=> res!36418 e!44210)))

(declare-fun lt!29360 () Bool)

(assert (=> d!14245 (= res!36418 (not lt!29360))))

(declare-fun lt!29363 () Bool)

(assert (=> d!14245 (= lt!29360 lt!29363)))

(declare-fun lt!29362 () Unit!1824)

(declare-fun e!44211 () Unit!1824)

(assert (=> d!14245 (= lt!29362 e!44211)))

(declare-fun c!9421 () Bool)

(assert (=> d!14245 (= c!9421 lt!29363)))

(assert (=> d!14245 (= lt!29363 (containsKey!134 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))))))

(assert (=> d!14245 (= (contains!705 (getCurrentListMap!403 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))) lt!29360)))

(declare-fun b!67466 () Bool)

(declare-fun lt!29361 () Unit!1824)

(assert (=> b!67466 (= e!44211 lt!29361)))

(assert (=> b!67466 (= lt!29361 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))))))

(assert (=> b!67466 (isDefined!83 (getValueByKey!131 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))))))

(declare-fun b!67467 () Bool)

(declare-fun Unit!1872 () Unit!1824)

(assert (=> b!67467 (= e!44211 Unit!1872)))

(declare-fun b!67468 () Bool)

(assert (=> b!67468 (= e!44210 (isDefined!83 (getValueByKey!131 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))

(assert (= (and d!14245 c!9421) b!67466))

(assert (= (and d!14245 (not c!9421)) b!67467))

(assert (= (and d!14245 (not res!36418)) b!67468))

(assert (=> d!14245 m!61183))

(declare-fun m!62763 () Bool)

(assert (=> d!14245 m!62763))

(assert (=> b!67466 m!61183))

(declare-fun m!62765 () Bool)

(assert (=> b!67466 m!62765))

(assert (=> b!67466 m!61183))

(declare-fun m!62767 () Bool)

(assert (=> b!67466 m!62767))

(assert (=> b!67466 m!62767))

(declare-fun m!62769 () Bool)

(assert (=> b!67466 m!62769))

(assert (=> b!67468 m!61183))

(assert (=> b!67468 m!62767))

(assert (=> b!67468 m!62767))

(assert (=> b!67468 m!62769))

(assert (=> b!67100 d!14245))

(assert (=> b!67100 d!13841))

(declare-fun d!14247 () Bool)

(assert (=> d!14247 (= (get!1125 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2477 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!66805 d!14247))

(declare-fun d!14249 () Bool)

(assert (=> d!14249 (= (apply!72 lt!29006 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (getValueByKey!131 (toList!705 lt!29006) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2913 () Bool)

(assert (= bs!2913 d!14249))

(assert (=> bs!2913 m!61431))

(declare-fun m!62771 () Bool)

(assert (=> bs!2913 m!62771))

(assert (=> bs!2913 m!62771))

(declare-fun m!62773 () Bool)

(assert (=> bs!2913 m!62773))

(assert (=> b!66822 d!14249))

(declare-fun d!14251 () Bool)

(declare-fun c!9422 () Bool)

(assert (=> d!14251 (= c!9422 ((_ is ValueCellFull!881) (select (arr!1827 (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!44212 () V!2913)

(assert (=> d!14251 (= (get!1122 (select (arr!1827 (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44212)))

(declare-fun b!67469 () Bool)

(assert (=> b!67469 (= e!44212 (get!1125 (select (arr!1827 (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67470 () Bool)

(assert (=> b!67470 (= e!44212 (get!1126 (select (arr!1827 (ite (or c!9197 c!9198) (_values!2129 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14251 c!9422) b!67469))

(assert (= (and d!14251 (not c!9422)) b!67470))

(assert (=> b!67469 m!61591))

(assert (=> b!67469 m!61477))

(declare-fun m!62775 () Bool)

(assert (=> b!67469 m!62775))

(assert (=> b!67470 m!61591))

(assert (=> b!67470 m!61477))

(declare-fun m!62777 () Bool)

(assert (=> b!67470 m!62777))

(assert (=> b!66822 d!14251))

(declare-fun d!14253 () Bool)

(assert (=> d!14253 (= (size!2067 newMap!16) (bvadd (_size!384 newMap!16) (bvsdiv (bvadd (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!66952 d!14253))

(declare-fun d!14255 () Bool)

(declare-fun lt!29364 () Bool)

(assert (=> d!14255 (= lt!29364 (select (content!72 (t!4929 (toList!705 lt!28687))) lt!28520))))

(declare-fun e!44214 () Bool)

(assert (=> d!14255 (= lt!29364 e!44214)))

(declare-fun res!36420 () Bool)

(assert (=> d!14255 (=> (not res!36420) (not e!44214))))

(assert (=> d!14255 (= res!36420 ((_ is Cons!1451) (t!4929 (toList!705 lt!28687))))))

(assert (=> d!14255 (= (contains!709 (t!4929 (toList!705 lt!28687)) lt!28520) lt!29364)))

(declare-fun b!67471 () Bool)

(declare-fun e!44213 () Bool)

(assert (=> b!67471 (= e!44214 e!44213)))

(declare-fun res!36419 () Bool)

(assert (=> b!67471 (=> res!36419 e!44213)))

(assert (=> b!67471 (= res!36419 (= (h!2035 (t!4929 (toList!705 lt!28687))) lt!28520))))

(declare-fun b!67472 () Bool)

(assert (=> b!67472 (= e!44213 (contains!709 (t!4929 (t!4929 (toList!705 lt!28687))) lt!28520))))

(assert (= (and d!14255 res!36420) b!67471))

(assert (= (and b!67471 (not res!36419)) b!67472))

(assert (=> d!14255 m!62187))

(declare-fun m!62779 () Bool)

(assert (=> d!14255 m!62779))

(declare-fun m!62781 () Bool)

(assert (=> b!67472 m!62781))

(assert (=> b!66753 d!14255))

(declare-fun d!14257 () Bool)

(declare-fun res!36421 () Bool)

(declare-fun e!44215 () Bool)

(assert (=> d!14257 (=> res!36421 e!44215)))

(assert (=> d!14257 (= res!36421 (and ((_ is Cons!1451) lt!29150) (= (_1!1052 (h!2035 lt!29150)) (_1!1052 lt!28528))))))

(assert (=> d!14257 (= (containsKey!134 lt!29150 (_1!1052 lt!28528)) e!44215)))

(declare-fun b!67473 () Bool)

(declare-fun e!44216 () Bool)

(assert (=> b!67473 (= e!44215 e!44216)))

(declare-fun res!36422 () Bool)

(assert (=> b!67473 (=> (not res!36422) (not e!44216))))

(assert (=> b!67473 (= res!36422 (and (or (not ((_ is Cons!1451) lt!29150)) (bvsle (_1!1052 (h!2035 lt!29150)) (_1!1052 lt!28528))) ((_ is Cons!1451) lt!29150) (bvslt (_1!1052 (h!2035 lt!29150)) (_1!1052 lt!28528))))))

(declare-fun b!67474 () Bool)

(assert (=> b!67474 (= e!44216 (containsKey!134 (t!4929 lt!29150) (_1!1052 lt!28528)))))

(assert (= (and d!14257 (not res!36421)) b!67473))

(assert (= (and b!67473 res!36422) b!67474))

(declare-fun m!62783 () Bool)

(assert (=> b!67474 m!62783))

(assert (=> b!67074 d!14257))

(declare-fun d!14259 () Bool)

(declare-fun lt!29365 () Bool)

(assert (=> d!14259 (= lt!29365 (select (content!72 lt!28689) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(declare-fun e!44218 () Bool)

(assert (=> d!14259 (= lt!29365 e!44218)))

(declare-fun res!36424 () Bool)

(assert (=> d!14259 (=> (not res!36424) (not e!44218))))

(assert (=> d!14259 (= res!36424 ((_ is Cons!1451) lt!28689))))

(assert (=> d!14259 (= (contains!709 lt!28689 (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))) lt!29365)))

(declare-fun b!67475 () Bool)

(declare-fun e!44217 () Bool)

(assert (=> b!67475 (= e!44218 e!44217)))

(declare-fun res!36423 () Bool)

(assert (=> b!67475 (=> res!36423 e!44217)))

(assert (=> b!67475 (= res!36423 (= (h!2035 lt!28689) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(declare-fun b!67476 () Bool)

(assert (=> b!67476 (= e!44217 (contains!709 (t!4929 lt!28689) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(assert (= (and d!14259 res!36424) b!67475))

(assert (= (and b!67475 (not res!36423)) b!67476))

(declare-fun m!62785 () Bool)

(assert (=> d!14259 m!62785))

(declare-fun m!62787 () Bool)

(assert (=> d!14259 m!62787))

(declare-fun m!62789 () Bool)

(assert (=> b!67476 m!62789))

(assert (=> b!66980 d!14259))

(declare-fun d!14261 () Bool)

(assert (=> d!14261 (= (apply!72 lt!29044 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!705 lt!29044) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2914 () Bool)

(assert (= bs!2914 d!14261))

(declare-fun m!62791 () Bool)

(assert (=> bs!2914 m!62791))

(assert (=> bs!2914 m!62791))

(declare-fun m!62793 () Bool)

(assert (=> bs!2914 m!62793))

(assert (=> b!66897 d!14261))

(declare-fun d!14263 () Bool)

(assert (=> d!14263 (= (apply!72 lt!29006 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!705 lt!29006) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2915 () Bool)

(assert (= bs!2915 d!14263))

(declare-fun m!62795 () Bool)

(assert (=> bs!2915 m!62795))

(assert (=> bs!2915 m!62795))

(declare-fun m!62797 () Bool)

(assert (=> bs!2915 m!62797))

(assert (=> b!66833 d!14263))

(declare-fun d!14265 () Bool)

(declare-fun res!36425 () Bool)

(declare-fun e!44219 () Bool)

(assert (=> d!14265 (=> res!36425 e!44219)))

(assert (=> d!14265 (= res!36425 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28518))) (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28518)))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!14265 (= (containsKey!134 (t!4929 (toList!705 lt!28518)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44219)))

(declare-fun b!67477 () Bool)

(declare-fun e!44220 () Bool)

(assert (=> b!67477 (= e!44219 e!44220)))

(declare-fun res!36426 () Bool)

(assert (=> b!67477 (=> (not res!36426) (not e!44220))))

(assert (=> b!67477 (= res!36426 (and (or (not ((_ is Cons!1451) (t!4929 (toList!705 lt!28518)))) (bvsle (_1!1052 (h!2035 (t!4929 (toList!705 lt!28518)))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))) ((_ is Cons!1451) (t!4929 (toList!705 lt!28518))) (bvslt (_1!1052 (h!2035 (t!4929 (toList!705 lt!28518)))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun b!67478 () Bool)

(assert (=> b!67478 (= e!44220 (containsKey!134 (t!4929 (t!4929 (toList!705 lt!28518))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14265 (not res!36425)) b!67477))

(assert (= (and b!67477 res!36426) b!67478))

(assert (=> b!67478 m!60827))

(declare-fun m!62799 () Bool)

(assert (=> b!67478 m!62799))

(assert (=> b!66812 d!14265))

(declare-fun d!14267 () Bool)

(declare-fun e!44221 () Bool)

(assert (=> d!14267 e!44221))

(declare-fun res!36427 () Bool)

(assert (=> d!14267 (=> res!36427 e!44221)))

(declare-fun lt!29366 () Bool)

(assert (=> d!14267 (= res!36427 (not lt!29366))))

(declare-fun lt!29369 () Bool)

(assert (=> d!14267 (= lt!29366 lt!29369)))

(declare-fun lt!29368 () Unit!1824)

(declare-fun e!44222 () Unit!1824)

(assert (=> d!14267 (= lt!29368 e!44222)))

(declare-fun c!9423 () Bool)

(assert (=> d!14267 (= c!9423 lt!29369)))

(assert (=> d!14267 (= lt!29369 (containsKey!134 (toList!705 lt!29151) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14267 (= (contains!705 lt!29151 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29366)))

(declare-fun b!67479 () Bool)

(declare-fun lt!29367 () Unit!1824)

(assert (=> b!67479 (= e!44222 lt!29367)))

(assert (=> b!67479 (= lt!29367 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29151) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67479 (isDefined!83 (getValueByKey!131 (toList!705 lt!29151) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67480 () Bool)

(declare-fun Unit!1873 () Unit!1824)

(assert (=> b!67480 (= e!44222 Unit!1873)))

(declare-fun b!67481 () Bool)

(assert (=> b!67481 (= e!44221 (isDefined!83 (getValueByKey!131 (toList!705 lt!29151) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14267 c!9423) b!67479))

(assert (= (and d!14267 (not c!9423)) b!67480))

(assert (= (and d!14267 (not res!36427)) b!67481))

(declare-fun m!62801 () Bool)

(assert (=> d!14267 m!62801))

(declare-fun m!62803 () Bool)

(assert (=> b!67479 m!62803))

(declare-fun m!62805 () Bool)

(assert (=> b!67479 m!62805))

(assert (=> b!67479 m!62805))

(declare-fun m!62807 () Bool)

(assert (=> b!67479 m!62807))

(assert (=> b!67481 m!62805))

(assert (=> b!67481 m!62805))

(assert (=> b!67481 m!62807))

(assert (=> b!67091 d!14267))

(assert (=> b!66923 d!14163))

(assert (=> d!13869 d!13797))

(declare-fun b!67498 () Bool)

(declare-fun res!36439 () Bool)

(declare-fun e!44232 () Bool)

(assert (=> b!67498 (=> (not res!36439) (not e!44232))))

(declare-fun lt!29372 () SeekEntryResult!227)

(assert (=> b!67498 (= res!36439 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3039 lt!29372)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67499 () Bool)

(declare-fun e!44234 () Bool)

(declare-fun e!44233 () Bool)

(assert (=> b!67499 (= e!44234 e!44233)))

(declare-fun c!9428 () Bool)

(assert (=> b!67499 (= c!9428 ((_ is MissingVacant!227) lt!29372))))

(declare-fun b!67500 () Bool)

(assert (=> b!67500 (= e!44233 ((_ is Undefined!227) lt!29372))))

(declare-fun b!67501 () Bool)

(declare-fun res!36438 () Bool)

(assert (=> b!67501 (= res!36438 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3036 lt!29372)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44231 () Bool)

(assert (=> b!67501 (=> (not res!36438) (not e!44231))))

(declare-fun b!67502 () Bool)

(declare-fun call!5655 () Bool)

(assert (=> b!67502 (= e!44232 (not call!5655))))

(declare-fun b!67503 () Bool)

(assert (=> b!67503 (= e!44234 e!44231)))

(declare-fun res!36436 () Bool)

(declare-fun call!5654 () Bool)

(assert (=> b!67503 (= res!36436 call!5654)))

(assert (=> b!67503 (=> (not res!36436) (not e!44231))))

(declare-fun b!67504 () Bool)

(declare-fun res!36437 () Bool)

(assert (=> b!67504 (=> (not res!36437) (not e!44232))))

(assert (=> b!67504 (= res!36437 call!5654)))

(assert (=> b!67504 (= e!44233 e!44232)))

(declare-fun b!67505 () Bool)

(assert (=> b!67505 (= e!44231 (not call!5655))))

(declare-fun bm!5651 () Bool)

(assert (=> bm!5651 (= call!5655 (arrayContainsKey!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!14269 () Bool)

(assert (=> d!14269 e!44234))

(declare-fun c!9429 () Bool)

(assert (=> d!14269 (= c!9429 ((_ is MissingZero!227) lt!29372))))

(assert (=> d!14269 (= lt!29372 (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(assert (=> d!14269 true))

(declare-fun _$34!783 () Unit!1824)

(assert (=> d!14269 (= (choose!378 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)) _$34!783)))

(declare-fun bm!5652 () Bool)

(assert (=> bm!5652 (= call!5654 (inRange!0 (ite c!9429 (index!3036 lt!29372) (index!3039 lt!29372)) (mask!6081 newMap!16)))))

(assert (= (and d!14269 c!9429) b!67503))

(assert (= (and d!14269 (not c!9429)) b!67499))

(assert (= (and b!67503 res!36436) b!67501))

(assert (= (and b!67501 res!36438) b!67505))

(assert (= (and b!67499 c!9428) b!67504))

(assert (= (and b!67499 (not c!9428)) b!67500))

(assert (= (and b!67504 res!36437) b!67498))

(assert (= (and b!67498 res!36439) b!67502))

(assert (= (or b!67503 b!67504) bm!5652))

(assert (= (or b!67505 b!67502) bm!5651))

(declare-fun m!62809 () Bool)

(assert (=> b!67498 m!62809))

(assert (=> d!14269 m!60827))

(assert (=> d!14269 m!61181))

(assert (=> bm!5651 m!60827))

(assert (=> bm!5651 m!61207))

(declare-fun m!62811 () Bool)

(assert (=> bm!5652 m!62811))

(declare-fun m!62813 () Bool)

(assert (=> b!67501 m!62813))

(assert (=> d!13869 d!14269))

(assert (=> d!13869 d!14103))

(declare-fun d!14271 () Bool)

(assert (=> d!14271 (isDefined!83 (getValueByKey!131 (toList!705 lt!28719) (_1!1052 lt!28520)))))

(declare-fun lt!29373 () Unit!1824)

(assert (=> d!14271 (= lt!29373 (choose!379 (toList!705 lt!28719) (_1!1052 lt!28520)))))

(declare-fun e!44235 () Bool)

(assert (=> d!14271 e!44235))

(declare-fun res!36440 () Bool)

(assert (=> d!14271 (=> (not res!36440) (not e!44235))))

(assert (=> d!14271 (= res!36440 (isStrictlySorted!276 (toList!705 lt!28719)))))

(assert (=> d!14271 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28719) (_1!1052 lt!28520)) lt!29373)))

(declare-fun b!67506 () Bool)

(assert (=> b!67506 (= e!44235 (containsKey!134 (toList!705 lt!28719) (_1!1052 lt!28520)))))

(assert (= (and d!14271 res!36440) b!67506))

(assert (=> d!14271 m!61133))

(assert (=> d!14271 m!61133))

(assert (=> d!14271 m!61925))

(declare-fun m!62815 () Bool)

(assert (=> d!14271 m!62815))

(declare-fun m!62817 () Bool)

(assert (=> d!14271 m!62817))

(assert (=> b!67506 m!61921))

(assert (=> b!67044 d!14271))

(assert (=> b!67044 d!14081))

(assert (=> b!67044 d!13933))

(declare-fun d!14273 () Bool)

(declare-fun e!44236 () Bool)

(assert (=> d!14273 e!44236))

(declare-fun res!36441 () Bool)

(assert (=> d!14273 (=> res!36441 e!44236)))

(declare-fun lt!29374 () Bool)

(assert (=> d!14273 (= res!36441 (not lt!29374))))

(declare-fun lt!29377 () Bool)

(assert (=> d!14273 (= lt!29374 lt!29377)))

(declare-fun lt!29376 () Unit!1824)

(declare-fun e!44237 () Unit!1824)

(assert (=> d!14273 (= lt!29376 e!44237)))

(declare-fun c!9430 () Bool)

(assert (=> d!14273 (= c!9430 lt!29377)))

(assert (=> d!14273 (= lt!29377 (containsKey!134 (toList!705 lt!29044) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14273 (= (contains!705 lt!29044 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) lt!29374)))

(declare-fun b!67507 () Bool)

(declare-fun lt!29375 () Unit!1824)

(assert (=> b!67507 (= e!44237 lt!29375)))

(assert (=> b!67507 (= lt!29375 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29044) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67507 (isDefined!83 (getValueByKey!131 (toList!705 lt!29044) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67508 () Bool)

(declare-fun Unit!1874 () Unit!1824)

(assert (=> b!67508 (= e!44237 Unit!1874)))

(declare-fun b!67509 () Bool)

(assert (=> b!67509 (= e!44236 (isDefined!83 (getValueByKey!131 (toList!705 lt!29044) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14273 c!9430) b!67507))

(assert (= (and d!14273 (not c!9430)) b!67508))

(assert (= (and d!14273 (not res!36441)) b!67509))

(assert (=> d!14273 m!61431))

(declare-fun m!62819 () Bool)

(assert (=> d!14273 m!62819))

(assert (=> b!67507 m!61431))

(declare-fun m!62821 () Bool)

(assert (=> b!67507 m!62821))

(assert (=> b!67507 m!61431))

(declare-fun m!62823 () Bool)

(assert (=> b!67507 m!62823))

(assert (=> b!67507 m!62823))

(declare-fun m!62825 () Bool)

(assert (=> b!67507 m!62825))

(assert (=> b!67509 m!61431))

(assert (=> b!67509 m!62823))

(assert (=> b!67509 m!62823))

(assert (=> b!67509 m!62825))

(assert (=> b!66909 d!14273))

(declare-fun d!14275 () Bool)

(declare-fun lt!29378 () Bool)

(assert (=> d!14275 (= lt!29378 (select (content!72 (toList!705 lt!28937)) (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44239 () Bool)

(assert (=> d!14275 (= lt!29378 e!44239)))

(declare-fun res!36443 () Bool)

(assert (=> d!14275 (=> (not res!36443) (not e!44239))))

(assert (=> d!14275 (= res!36443 ((_ is Cons!1451) (toList!705 lt!28937)))))

(assert (=> d!14275 (= (contains!709 (toList!705 lt!28937) (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!29378)))

(declare-fun b!67510 () Bool)

(declare-fun e!44238 () Bool)

(assert (=> b!67510 (= e!44239 e!44238)))

(declare-fun res!36442 () Bool)

(assert (=> b!67510 (=> res!36442 e!44238)))

(assert (=> b!67510 (= res!36442 (= (h!2035 (toList!705 lt!28937)) (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67511 () Bool)

(assert (=> b!67511 (= e!44238 (contains!709 (t!4929 (toList!705 lt!28937)) (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14275 res!36443) b!67510))

(assert (= (and b!67510 (not res!36442)) b!67511))

(declare-fun m!62827 () Bool)

(assert (=> d!14275 m!62827))

(declare-fun m!62829 () Bool)

(assert (=> d!14275 m!62829))

(declare-fun m!62831 () Bool)

(assert (=> b!67511 m!62831))

(assert (=> b!66760 d!14275))

(declare-fun d!14277 () Bool)

(assert (=> d!14277 (= (inRange!0 (ite c!9250 (index!3036 lt!29021) (index!3039 lt!29021)) (mask!6081 newMap!16)) (and (bvsge (ite c!9250 (index!3036 lt!29021) (index!3039 lt!29021)) #b00000000000000000000000000000000) (bvslt (ite c!9250 (index!3036 lt!29021) (index!3039 lt!29021)) (bvadd (mask!6081 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5582 d!14277))

(assert (=> d!13955 d!13953))

(declare-fun d!14279 () Bool)

(assert (=> d!14279 (= (getValueByKey!131 lt!28721 (_1!1052 lt!28528)) (Some!136 (_2!1052 lt!28528)))))

(assert (=> d!14279 true))

(declare-fun _$22!369 () Unit!1824)

(assert (=> d!14279 (= (choose!380 lt!28721 (_1!1052 lt!28528) (_2!1052 lt!28528)) _$22!369)))

(declare-fun bs!2916 () Bool)

(assert (= bs!2916 d!14279))

(assert (=> bs!2916 m!61139))

(assert (=> d!13955 d!14279))

(declare-fun d!14281 () Bool)

(declare-fun res!36444 () Bool)

(declare-fun e!44240 () Bool)

(assert (=> d!14281 (=> res!36444 e!44240)))

(assert (=> d!14281 (= res!36444 (or ((_ is Nil!1452) lt!28721) ((_ is Nil!1452) (t!4929 lt!28721))))))

(assert (=> d!14281 (= (isStrictlySorted!276 lt!28721) e!44240)))

(declare-fun b!67512 () Bool)

(declare-fun e!44241 () Bool)

(assert (=> b!67512 (= e!44240 e!44241)))

(declare-fun res!36445 () Bool)

(assert (=> b!67512 (=> (not res!36445) (not e!44241))))

(assert (=> b!67512 (= res!36445 (bvslt (_1!1052 (h!2035 lt!28721)) (_1!1052 (h!2035 (t!4929 lt!28721)))))))

(declare-fun b!67513 () Bool)

(assert (=> b!67513 (= e!44241 (isStrictlySorted!276 (t!4929 lt!28721)))))

(assert (= (and d!14281 (not res!36444)) b!67512))

(assert (= (and b!67512 res!36445) b!67513))

(declare-fun m!62833 () Bool)

(assert (=> b!67513 m!62833))

(assert (=> d!13955 d!14281))

(assert (=> b!66965 d!14163))

(declare-fun d!14283 () Bool)

(assert (=> d!14283 (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!29379 () Unit!1824)

(assert (=> d!14283 (= lt!29379 (choose!379 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!44242 () Bool)

(assert (=> d!14283 e!44242))

(declare-fun res!36446 () Bool)

(assert (=> d!14283 (=> (not res!36446) (not e!44242))))

(assert (=> d!14283 (= res!36446 (isStrictlySorted!276 (toList!705 lt!28667)))))

(assert (=> d!14283 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29379)))

(declare-fun b!67514 () Bool)

(assert (=> b!67514 (= e!44242 (containsKey!134 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14283 res!36446) b!67514))

(assert (=> d!14283 m!61005))

(assert (=> d!14283 m!61513))

(assert (=> d!14283 m!61513))

(assert (=> d!14283 m!62023))

(assert (=> d!14283 m!61005))

(declare-fun m!62835 () Bool)

(assert (=> d!14283 m!62835))

(assert (=> d!14283 m!62365))

(assert (=> b!67514 m!61005))

(assert (=> b!67514 m!62019))

(assert (=> b!67107 d!14283))

(assert (=> b!67107 d!14121))

(assert (=> b!67107 d!14123))

(declare-fun b!67517 () Bool)

(declare-fun e!44244 () Option!137)

(assert (=> b!67517 (= e!44244 (getValueByKey!131 (t!4929 (toList!705 lt!29126)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!67515 () Bool)

(declare-fun e!44243 () Option!137)

(assert (=> b!67515 (= e!44243 (Some!136 (_2!1052 (h!2035 (toList!705 lt!29126)))))))

(declare-fun c!9431 () Bool)

(declare-fun d!14285 () Bool)

(assert (=> d!14285 (= c!9431 (and ((_ is Cons!1451) (toList!705 lt!29126)) (= (_1!1052 (h!2035 (toList!705 lt!29126))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!14285 (= (getValueByKey!131 (toList!705 lt!29126) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!44243)))

(declare-fun b!67518 () Bool)

(assert (=> b!67518 (= e!44244 None!135)))

(declare-fun b!67516 () Bool)

(assert (=> b!67516 (= e!44243 e!44244)))

(declare-fun c!9432 () Bool)

(assert (=> b!67516 (= c!9432 (and ((_ is Cons!1451) (toList!705 lt!29126)) (not (= (_1!1052 (h!2035 (toList!705 lt!29126))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!14285 c!9431) b!67515))

(assert (= (and d!14285 (not c!9431)) b!67516))

(assert (= (and b!67516 c!9432) b!67517))

(assert (= (and b!67516 (not c!9432)) b!67518))

(declare-fun m!62837 () Bool)

(assert (=> b!67517 m!62837))

(assert (=> b!67017 d!14285))

(declare-fun d!14287 () Bool)

(assert (=> d!14287 (= (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28660)) (v!2484 (getValueByKey!131 (toList!705 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28660)))))

(assert (=> d!13817 d!14287))

(declare-fun b!67521 () Bool)

(declare-fun e!44246 () Option!137)

(assert (=> b!67521 (= e!44246 (getValueByKey!131 (t!4929 (toList!705 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) lt!28660))))

(declare-fun b!67519 () Bool)

(declare-fun e!44245 () Option!137)

(assert (=> b!67519 (= e!44245 (Some!136 (_2!1052 (h!2035 (toList!705 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun d!14289 () Bool)

(declare-fun c!9433 () Bool)

(assert (=> d!14289 (= c!9433 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28660)))))

(assert (=> d!14289 (= (getValueByKey!131 (toList!705 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28660) e!44245)))

(declare-fun b!67522 () Bool)

(assert (=> b!67522 (= e!44246 None!135)))

(declare-fun b!67520 () Bool)

(assert (=> b!67520 (= e!44245 e!44246)))

(declare-fun c!9434 () Bool)

(assert (=> b!67520 (= c!9434 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (not (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28660))))))

(assert (= (and d!14289 c!9433) b!67519))

(assert (= (and d!14289 (not c!9433)) b!67520))

(assert (= (and b!67520 c!9434) b!67521))

(assert (= (and b!67520 (not c!9434)) b!67522))

(declare-fun m!62839 () Bool)

(assert (=> b!67521 m!62839))

(assert (=> d!13817 d!14289))

(assert (=> b!66935 d!14163))

(declare-fun d!14291 () Bool)

(assert (=> d!14291 (= (apply!72 lt!28971 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (getValueByKey!131 (toList!705 lt!28971) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2917 () Bool)

(assert (= bs!2917 d!14291))

(assert (=> bs!2917 m!61431))

(assert (=> bs!2917 m!62171))

(assert (=> bs!2917 m!62171))

(declare-fun m!62841 () Bool)

(assert (=> bs!2917 m!62841))

(assert (=> b!66778 d!14291))

(declare-fun d!14293 () Bool)

(declare-fun c!9435 () Bool)

(assert (=> d!14293 (= c!9435 ((_ is ValueCellFull!881) (select (arr!1827 lt!28812) #b00000000000000000000000000000000)))))

(declare-fun e!44247 () V!2913)

(assert (=> d!14293 (= (get!1122 (select (arr!1827 lt!28812) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!44247)))

(declare-fun b!67523 () Bool)

(assert (=> b!67523 (= e!44247 (get!1125 (select (arr!1827 lt!28812) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67524 () Bool)

(assert (=> b!67524 (= e!44247 (get!1126 (select (arr!1827 lt!28812) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14293 c!9435) b!67523))

(assert (= (and d!14293 (not c!9435)) b!67524))

(assert (=> b!67523 m!61479))

(assert (=> b!67523 m!61477))

(declare-fun m!62843 () Bool)

(assert (=> b!67523 m!62843))

(assert (=> b!67524 m!61479))

(assert (=> b!67524 m!61477))

(declare-fun m!62845 () Bool)

(assert (=> b!67524 m!62845))

(assert (=> b!66778 d!14293))

(assert (=> d!13871 d!13873))

(assert (=> d!13871 d!13875))

(declare-fun d!14295 () Bool)

(assert (=> d!14295 (isDefined!83 (getValueByKey!131 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14295 true))

(declare-fun _$12!314 () Unit!1824)

(assert (=> d!14295 (= (choose!379 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) _$12!314)))

(declare-fun bs!2918 () Bool)

(assert (= bs!2918 d!14295))

(assert (=> bs!2918 m!60827))

(assert (=> bs!2918 m!61161))

(assert (=> bs!2918 m!61161))

(assert (=> bs!2918 m!61163))

(assert (=> d!13871 d!14295))

(declare-fun d!14297 () Bool)

(declare-fun res!36447 () Bool)

(declare-fun e!44248 () Bool)

(assert (=> d!14297 (=> res!36447 e!44248)))

(assert (=> d!14297 (= res!36447 (or ((_ is Nil!1452) (toList!705 lt!28518)) ((_ is Nil!1452) (t!4929 (toList!705 lt!28518)))))))

(assert (=> d!14297 (= (isStrictlySorted!276 (toList!705 lt!28518)) e!44248)))

(declare-fun b!67525 () Bool)

(declare-fun e!44249 () Bool)

(assert (=> b!67525 (= e!44248 e!44249)))

(declare-fun res!36448 () Bool)

(assert (=> b!67525 (=> (not res!36448) (not e!44249))))

(assert (=> b!67525 (= res!36448 (bvslt (_1!1052 (h!2035 (toList!705 lt!28518))) (_1!1052 (h!2035 (t!4929 (toList!705 lt!28518))))))))

(declare-fun b!67526 () Bool)

(assert (=> b!67526 (= e!44249 (isStrictlySorted!276 (t!4929 (toList!705 lt!28518))))))

(assert (= (and d!14297 (not res!36447)) b!67525))

(assert (= (and b!67525 res!36448) b!67526))

(declare-fun m!62847 () Bool)

(assert (=> b!67526 m!62847))

(assert (=> d!13871 d!14297))

(declare-fun d!14299 () Bool)

(assert (=> d!14299 (= (get!1127 (getValueByKey!131 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2484 (getValueByKey!131 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!13857 d!14299))

(declare-fun e!44251 () Option!137)

(declare-fun b!67529 () Bool)

(assert (=> b!67529 (= e!44251 (getValueByKey!131 (t!4929 (toList!705 lt!28707)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!67527 () Bool)

(declare-fun e!44250 () Option!137)

(assert (=> b!67527 (= e!44250 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28707)))))))

(declare-fun d!14301 () Bool)

(declare-fun c!9436 () Bool)

(assert (=> d!14301 (= c!9436 (and ((_ is Cons!1451) (toList!705 lt!28707)) (= (_1!1052 (h!2035 (toList!705 lt!28707))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14301 (= (getValueByKey!131 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44250)))

(declare-fun b!67530 () Bool)

(assert (=> b!67530 (= e!44251 None!135)))

(declare-fun b!67528 () Bool)

(assert (=> b!67528 (= e!44250 e!44251)))

(declare-fun c!9437 () Bool)

(assert (=> b!67528 (= c!9437 (and ((_ is Cons!1451) (toList!705 lt!28707)) (not (= (_1!1052 (h!2035 (toList!705 lt!28707))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!14301 c!9436) b!67527))

(assert (= (and d!14301 (not c!9436)) b!67528))

(assert (= (and b!67528 c!9437) b!67529))

(assert (= (and b!67528 (not c!9437)) b!67530))

(assert (=> b!67529 m!61005))

(declare-fun m!62849 () Bool)

(assert (=> b!67529 m!62849))

(assert (=> d!13857 d!14301))

(declare-fun b!67531 () Bool)

(declare-fun e!44253 () Bool)

(declare-fun call!5656 () Bool)

(assert (=> b!67531 (= e!44253 call!5656)))

(declare-fun b!67532 () Bool)

(declare-fun e!44254 () Bool)

(assert (=> b!67532 (= e!44254 e!44253)))

(declare-fun c!9438 () Bool)

(assert (=> b!67532 (= c!9438 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000)))))

(declare-fun b!67533 () Bool)

(declare-fun e!44252 () Bool)

(assert (=> b!67533 (= e!44252 (contains!708 Nil!1451 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000)))))

(declare-fun b!67534 () Bool)

(assert (=> b!67534 (= e!44253 call!5656)))

(declare-fun b!67535 () Bool)

(declare-fun e!44255 () Bool)

(assert (=> b!67535 (= e!44255 e!44254)))

(declare-fun res!36449 () Bool)

(assert (=> b!67535 (=> (not res!36449) (not e!44254))))

(assert (=> b!67535 (= res!36449 (not e!44252))))

(declare-fun res!36451 () Bool)

(assert (=> b!67535 (=> (not res!36451) (not e!44252))))

(assert (=> b!67535 (= res!36451 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000)))))

(declare-fun d!14303 () Bool)

(declare-fun res!36450 () Bool)

(assert (=> d!14303 (=> res!36450 e!44255)))

(assert (=> d!14303 (= res!36450 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))))))

(assert (=> d!14303 (= (arrayNoDuplicates!0 (_keys!3786 (_2!1051 lt!28794)) #b00000000000000000000000000000000 Nil!1451) e!44255)))

(declare-fun bm!5653 () Bool)

(assert (=> bm!5653 (= call!5656 (arrayNoDuplicates!0 (_keys!3786 (_2!1051 lt!28794)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9438 (Cons!1450 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000) Nil!1451) Nil!1451)))))

(assert (= (and d!14303 (not res!36450)) b!67535))

(assert (= (and b!67535 res!36451) b!67533))

(assert (= (and b!67535 res!36449) b!67532))

(assert (= (and b!67532 c!9438) b!67531))

(assert (= (and b!67532 (not c!9438)) b!67534))

(assert (= (or b!67531 b!67534) bm!5653))

(declare-fun m!62851 () Bool)

(assert (=> b!67532 m!62851))

(assert (=> b!67532 m!62851))

(declare-fun m!62853 () Bool)

(assert (=> b!67532 m!62853))

(assert (=> b!67533 m!62851))

(assert (=> b!67533 m!62851))

(declare-fun m!62855 () Bool)

(assert (=> b!67533 m!62855))

(assert (=> b!67535 m!62851))

(assert (=> b!67535 m!62851))

(assert (=> b!67535 m!62853))

(assert (=> bm!5653 m!62851))

(declare-fun m!62857 () Bool)

(assert (=> bm!5653 m!62857))

(assert (=> b!67032 d!14303))

(declare-fun d!14305 () Bool)

(declare-fun e!44256 () Bool)

(assert (=> d!14305 e!44256))

(declare-fun res!36452 () Bool)

(assert (=> d!14305 (=> res!36452 e!44256)))

(declare-fun lt!29380 () Bool)

(assert (=> d!14305 (= res!36452 (not lt!29380))))

(declare-fun lt!29383 () Bool)

(assert (=> d!14305 (= lt!29380 lt!29383)))

(declare-fun lt!29382 () Unit!1824)

(declare-fun e!44257 () Unit!1824)

(assert (=> d!14305 (= lt!29382 e!44257)))

(declare-fun c!9439 () Bool)

(assert (=> d!14305 (= c!9439 lt!29383)))

(assert (=> d!14305 (= lt!29383 (containsKey!134 (toList!705 lt!29151) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14305 (= (contains!705 lt!29151 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29380)))

(declare-fun b!67536 () Bool)

(declare-fun lt!29381 () Unit!1824)

(assert (=> b!67536 (= e!44257 lt!29381)))

(assert (=> b!67536 (= lt!29381 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29151) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67536 (isDefined!83 (getValueByKey!131 (toList!705 lt!29151) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67537 () Bool)

(declare-fun Unit!1875 () Unit!1824)

(assert (=> b!67537 (= e!44257 Unit!1875)))

(declare-fun b!67538 () Bool)

(assert (=> b!67538 (= e!44256 (isDefined!83 (getValueByKey!131 (toList!705 lt!29151) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14305 c!9439) b!67536))

(assert (= (and d!14305 (not c!9439)) b!67537))

(assert (= (and d!14305 (not res!36452)) b!67538))

(declare-fun m!62859 () Bool)

(assert (=> d!14305 m!62859))

(declare-fun m!62861 () Bool)

(assert (=> b!67536 m!62861))

(declare-fun m!62863 () Bool)

(assert (=> b!67536 m!62863))

(assert (=> b!67536 m!62863))

(declare-fun m!62865 () Bool)

(assert (=> b!67536 m!62865))

(assert (=> b!67538 m!62863))

(assert (=> b!67538 m!62863))

(assert (=> b!67538 m!62865))

(assert (=> d!13959 d!14305))

(assert (=> d!13959 d!13777))

(declare-fun d!14307 () Bool)

(declare-fun res!36453 () Bool)

(declare-fun e!44258 () Bool)

(assert (=> d!14307 (=> res!36453 e!44258)))

(assert (=> d!14307 (= res!36453 (or ((_ is Nil!1452) lt!29150) ((_ is Nil!1452) (t!4929 lt!29150))))))

(assert (=> d!14307 (= (isStrictlySorted!276 lt!29150) e!44258)))

(declare-fun b!67539 () Bool)

(declare-fun e!44259 () Bool)

(assert (=> b!67539 (= e!44258 e!44259)))

(declare-fun res!36454 () Bool)

(assert (=> b!67539 (=> (not res!36454) (not e!44259))))

(assert (=> b!67539 (= res!36454 (bvslt (_1!1052 (h!2035 lt!29150)) (_1!1052 (h!2035 (t!4929 lt!29150)))))))

(declare-fun b!67540 () Bool)

(assert (=> b!67540 (= e!44259 (isStrictlySorted!276 (t!4929 lt!29150)))))

(assert (= (and d!14307 (not res!36453)) b!67539))

(assert (= (and b!67539 res!36454) b!67540))

(declare-fun m!62867 () Bool)

(assert (=> b!67540 m!62867))

(assert (=> d!13957 d!14307))

(declare-fun d!14309 () Bool)

(declare-fun res!36455 () Bool)

(declare-fun e!44260 () Bool)

(assert (=> d!14309 (=> res!36455 e!44260)))

(assert (=> d!14309 (= res!36455 (or ((_ is Nil!1452) (toList!705 (+!86 lt!28527 lt!28520))) ((_ is Nil!1452) (t!4929 (toList!705 (+!86 lt!28527 lt!28520))))))))

(assert (=> d!14309 (= (isStrictlySorted!276 (toList!705 (+!86 lt!28527 lt!28520))) e!44260)))

(declare-fun b!67541 () Bool)

(declare-fun e!44261 () Bool)

(assert (=> b!67541 (= e!44260 e!44261)))

(declare-fun res!36456 () Bool)

(assert (=> b!67541 (=> (not res!36456) (not e!44261))))

(assert (=> b!67541 (= res!36456 (bvslt (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 lt!28520)))) (_1!1052 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28520)))))))))

(declare-fun b!67542 () Bool)

(assert (=> b!67542 (= e!44261 (isStrictlySorted!276 (t!4929 (toList!705 (+!86 lt!28527 lt!28520)))))))

(assert (= (and d!14309 (not res!36455)) b!67541))

(assert (= (and b!67541 res!36456) b!67542))

(declare-fun m!62869 () Bool)

(assert (=> b!67542 m!62869))

(assert (=> d!13957 d!14309))

(assert (=> d!13973 d!13751))

(declare-fun d!14311 () Bool)

(assert (=> d!14311 (= (get!1127 (getValueByKey!131 (toList!705 lt!28661) lt!28665)) (v!2484 (getValueByKey!131 (toList!705 lt!28661) lt!28665)))))

(assert (=> d!13829 d!14311))

(declare-fun b!67545 () Bool)

(declare-fun e!44263 () Option!137)

(assert (=> b!67545 (= e!44263 (getValueByKey!131 (t!4929 (toList!705 lt!28661)) lt!28665))))

(declare-fun b!67543 () Bool)

(declare-fun e!44262 () Option!137)

(assert (=> b!67543 (= e!44262 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28661)))))))

(declare-fun d!14313 () Bool)

(declare-fun c!9440 () Bool)

(assert (=> d!14313 (= c!9440 (and ((_ is Cons!1451) (toList!705 lt!28661)) (= (_1!1052 (h!2035 (toList!705 lt!28661))) lt!28665)))))

(assert (=> d!14313 (= (getValueByKey!131 (toList!705 lt!28661) lt!28665) e!44262)))

(declare-fun b!67546 () Bool)

(assert (=> b!67546 (= e!44263 None!135)))

(declare-fun b!67544 () Bool)

(assert (=> b!67544 (= e!44262 e!44263)))

(declare-fun c!9441 () Bool)

(assert (=> b!67544 (= c!9441 (and ((_ is Cons!1451) (toList!705 lt!28661)) (not (= (_1!1052 (h!2035 (toList!705 lt!28661))) lt!28665))))))

(assert (= (and d!14313 c!9440) b!67543))

(assert (= (and d!14313 (not c!9440)) b!67544))

(assert (= (and b!67544 c!9441) b!67545))

(assert (= (and b!67544 (not c!9441)) b!67546))

(declare-fun m!62871 () Bool)

(assert (=> b!67545 m!62871))

(assert (=> d!13829 d!14313))

(declare-fun b!67549 () Bool)

(declare-fun e!44265 () Option!137)

(assert (=> b!67549 (= e!44265 (getValueByKey!131 (t!4929 (toList!705 lt!28937)) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67547 () Bool)

(declare-fun e!44264 () Option!137)

(assert (=> b!67547 (= e!44264 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28937)))))))

(declare-fun c!9442 () Bool)

(declare-fun d!14315 () Bool)

(assert (=> d!14315 (= c!9442 (and ((_ is Cons!1451) (toList!705 lt!28937)) (= (_1!1052 (h!2035 (toList!705 lt!28937))) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14315 (= (getValueByKey!131 (toList!705 lt!28937) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44264)))

(declare-fun b!67550 () Bool)

(assert (=> b!67550 (= e!44265 None!135)))

(declare-fun b!67548 () Bool)

(assert (=> b!67548 (= e!44264 e!44265)))

(declare-fun c!9443 () Bool)

(assert (=> b!67548 (= c!9443 (and ((_ is Cons!1451) (toList!705 lt!28937)) (not (= (_1!1052 (h!2035 (toList!705 lt!28937))) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14315 c!9442) b!67547))

(assert (= (and d!14315 (not c!9442)) b!67548))

(assert (= (and b!67548 c!9443) b!67549))

(assert (= (and b!67548 (not c!9443)) b!67550))

(declare-fun m!62873 () Bool)

(assert (=> b!67549 m!62873))

(assert (=> b!66759 d!14315))

(declare-fun d!14317 () Bool)

(declare-fun res!36457 () Bool)

(declare-fun e!44266 () Bool)

(assert (=> d!14317 (=> res!36457 e!44266)))

(assert (=> d!14317 (= res!36457 (and ((_ is Cons!1451) (toList!705 e!43717)) (= (_1!1052 (h!2035 (toList!705 e!43717))) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))))))))

(assert (=> d!14317 (= (containsKey!134 (toList!705 e!43717) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))) e!44266)))

(declare-fun b!67551 () Bool)

(declare-fun e!44267 () Bool)

(assert (=> b!67551 (= e!44266 e!44267)))

(declare-fun res!36458 () Bool)

(assert (=> b!67551 (=> (not res!36458) (not e!44267))))

(assert (=> b!67551 (= res!36458 (and (or (not ((_ is Cons!1451) (toList!705 e!43717))) (bvsle (_1!1052 (h!2035 (toList!705 e!43717))) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))))) ((_ is Cons!1451) (toList!705 e!43717)) (bvslt (_1!1052 (h!2035 (toList!705 e!43717))) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796))))))))

(declare-fun b!67552 () Bool)

(assert (=> b!67552 (= e!44267 (containsKey!134 (t!4929 (toList!705 e!43717)) (ite c!9198 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))))

(assert (= (and d!14317 (not res!36457)) b!67551))

(assert (= (and b!67551 res!36458) b!67552))

(declare-fun m!62875 () Bool)

(assert (=> b!67552 m!62875))

(assert (=> d!13843 d!14317))

(declare-fun d!14319 () Bool)

(declare-fun res!36459 () Bool)

(declare-fun e!44268 () Bool)

(assert (=> d!14319 (=> res!36459 e!44268)))

(assert (=> d!14319 (= res!36459 (and ((_ is Cons!1451) (toList!705 lt!28707)) (= (_1!1052 (h!2035 (toList!705 lt!28707))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14319 (= (containsKey!134 (toList!705 lt!28707) #b1000000000000000000000000000000000000000000000000000000000000000) e!44268)))

(declare-fun b!67553 () Bool)

(declare-fun e!44269 () Bool)

(assert (=> b!67553 (= e!44268 e!44269)))

(declare-fun res!36460 () Bool)

(assert (=> b!67553 (=> (not res!36460) (not e!44269))))

(assert (=> b!67553 (= res!36460 (and (or (not ((_ is Cons!1451) (toList!705 lt!28707))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28707))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1451) (toList!705 lt!28707)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28707))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67554 () Bool)

(assert (=> b!67554 (= e!44269 (containsKey!134 (t!4929 (toList!705 lt!28707)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14319 (not res!36459)) b!67553))

(assert (= (and b!67553 res!36460) b!67554))

(declare-fun m!62877 () Bool)

(assert (=> b!67554 m!62877))

(assert (=> d!13917 d!14319))

(assert (=> d!13989 d!13797))

(declare-fun d!14321 () Bool)

(declare-fun e!44272 () Bool)

(assert (=> d!14321 e!44272))

(declare-fun res!36466 () Bool)

(assert (=> d!14321 (=> (not res!36466) (not e!44272))))

(declare-fun lt!29386 () SeekEntryResult!227)

(assert (=> d!14321 (= res!36466 ((_ is Found!227) lt!29386))))

(assert (=> d!14321 (= lt!29386 (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(assert (=> d!14321 true))

(declare-fun _$33!51 () Unit!1824)

(assert (=> d!14321 (= (choose!384 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (defaultEntry!2146 newMap!16)) _$33!51)))

(declare-fun b!67559 () Bool)

(declare-fun res!36465 () Bool)

(assert (=> b!67559 (=> (not res!36465) (not e!44272))))

(assert (=> b!67559 (= res!36465 (inRange!0 (index!3037 lt!29386) (mask!6081 newMap!16)))))

(declare-fun b!67560 () Bool)

(assert (=> b!67560 (= e!44272 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!29386)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14321 res!36466) b!67559))

(assert (= (and b!67559 res!36465) b!67560))

(assert (=> d!14321 m!60827))

(assert (=> d!14321 m!61181))

(declare-fun m!62879 () Bool)

(assert (=> b!67559 m!62879))

(declare-fun m!62881 () Bool)

(assert (=> b!67560 m!62881))

(assert (=> d!13989 d!14321))

(assert (=> d!13989 d!14103))

(assert (=> b!66951 d!14253))

(declare-fun d!14323 () Bool)

(declare-fun e!44273 () Bool)

(assert (=> d!14323 e!44273))

(declare-fun res!36467 () Bool)

(assert (=> d!14323 (=> res!36467 e!44273)))

(declare-fun lt!29387 () Bool)

(assert (=> d!14323 (= res!36467 (not lt!29387))))

(declare-fun lt!29390 () Bool)

(assert (=> d!14323 (= lt!29387 lt!29390)))

(declare-fun lt!29389 () Unit!1824)

(declare-fun e!44274 () Unit!1824)

(assert (=> d!14323 (= lt!29389 e!44274)))

(declare-fun c!9444 () Bool)

(assert (=> d!14323 (= c!9444 lt!29390)))

(assert (=> d!14323 (= lt!29390 (containsKey!134 (toList!705 lt!28937) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14323 (= (contains!705 lt!28937 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29387)))

(declare-fun b!67561 () Bool)

(declare-fun lt!29388 () Unit!1824)

(assert (=> b!67561 (= e!44274 lt!29388)))

(assert (=> b!67561 (= lt!29388 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28937) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67561 (isDefined!83 (getValueByKey!131 (toList!705 lt!28937) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67562 () Bool)

(declare-fun Unit!1876 () Unit!1824)

(assert (=> b!67562 (= e!44274 Unit!1876)))

(declare-fun b!67563 () Bool)

(assert (=> b!67563 (= e!44273 (isDefined!83 (getValueByKey!131 (toList!705 lt!28937) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14323 c!9444) b!67561))

(assert (= (and d!14323 (not c!9444)) b!67562))

(assert (= (and d!14323 (not res!36467)) b!67563))

(declare-fun m!62883 () Bool)

(assert (=> d!14323 m!62883))

(declare-fun m!62885 () Bool)

(assert (=> b!67561 m!62885))

(assert (=> b!67561 m!61351))

(assert (=> b!67561 m!61351))

(declare-fun m!62887 () Bool)

(assert (=> b!67561 m!62887))

(assert (=> b!67563 m!61351))

(assert (=> b!67563 m!61351))

(assert (=> b!67563 m!62887))

(assert (=> d!13813 d!14323))

(declare-fun e!44276 () Option!137)

(declare-fun b!67566 () Bool)

(assert (=> b!67566 (= e!44276 (getValueByKey!131 (t!4929 lt!28935) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67564 () Bool)

(declare-fun e!44275 () Option!137)

(assert (=> b!67564 (= e!44275 (Some!136 (_2!1052 (h!2035 lt!28935))))))

(declare-fun c!9445 () Bool)

(declare-fun d!14325 () Bool)

(assert (=> d!14325 (= c!9445 (and ((_ is Cons!1451) lt!28935) (= (_1!1052 (h!2035 lt!28935)) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14325 (= (getValueByKey!131 lt!28935 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44275)))

(declare-fun b!67567 () Bool)

(assert (=> b!67567 (= e!44276 None!135)))

(declare-fun b!67565 () Bool)

(assert (=> b!67565 (= e!44275 e!44276)))

(declare-fun c!9446 () Bool)

(assert (=> b!67565 (= c!9446 (and ((_ is Cons!1451) lt!28935) (not (= (_1!1052 (h!2035 lt!28935)) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14325 c!9445) b!67564))

(assert (= (and d!14325 (not c!9445)) b!67565))

(assert (= (and b!67565 c!9446) b!67566))

(assert (= (and b!67565 (not c!9446)) b!67567))

(declare-fun m!62889 () Bool)

(assert (=> b!67566 m!62889))

(assert (=> d!13813 d!14325))

(declare-fun d!14327 () Bool)

(assert (=> d!14327 (= (getValueByKey!131 lt!28935 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29391 () Unit!1824)

(assert (=> d!14327 (= lt!29391 (choose!380 lt!28935 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44277 () Bool)

(assert (=> d!14327 e!44277))

(declare-fun res!36468 () Bool)

(assert (=> d!14327 (=> (not res!36468) (not e!44277))))

(assert (=> d!14327 (= res!36468 (isStrictlySorted!276 lt!28935))))

(assert (=> d!14327 (= (lemmaContainsTupThenGetReturnValue!48 lt!28935 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29391)))

(declare-fun b!67568 () Bool)

(declare-fun res!36469 () Bool)

(assert (=> b!67568 (=> (not res!36469) (not e!44277))))

(assert (=> b!67568 (= res!36469 (containsKey!134 lt!28935 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67569 () Bool)

(assert (=> b!67569 (= e!44277 (contains!709 lt!28935 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14327 res!36468) b!67568))

(assert (= (and b!67568 res!36469) b!67569))

(assert (=> d!14327 m!61345))

(declare-fun m!62891 () Bool)

(assert (=> d!14327 m!62891))

(declare-fun m!62893 () Bool)

(assert (=> d!14327 m!62893))

(declare-fun m!62895 () Bool)

(assert (=> b!67568 m!62895))

(declare-fun m!62897 () Bool)

(assert (=> b!67569 m!62897))

(assert (=> d!13813 d!14327))

(declare-fun b!67570 () Bool)

(declare-fun e!44282 () List!1455)

(declare-fun call!5657 () List!1455)

(assert (=> b!67570 (= e!44282 call!5657)))

(declare-fun b!67571 () Bool)

(declare-fun e!44278 () List!1455)

(declare-fun e!44280 () List!1455)

(assert (=> b!67571 (= e!44278 e!44280)))

(declare-fun c!9449 () Bool)

(assert (=> b!67571 (= c!9449 (and ((_ is Cons!1451) (toList!705 lt!28661)) (= (_1!1052 (h!2035 (toList!705 lt!28661))) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67572 () Bool)

(declare-fun res!36470 () Bool)

(declare-fun e!44281 () Bool)

(assert (=> b!67572 (=> (not res!36470) (not e!44281))))

(declare-fun lt!29392 () List!1455)

(assert (=> b!67572 (= res!36470 (containsKey!134 lt!29392 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun bm!5654 () Bool)

(declare-fun call!5659 () List!1455)

(assert (=> bm!5654 (= call!5657 call!5659)))

(declare-fun b!67573 () Bool)

(declare-fun call!5658 () List!1455)

(assert (=> b!67573 (= e!44278 call!5658)))

(declare-fun c!9450 () Bool)

(declare-fun b!67574 () Bool)

(assert (=> b!67574 (= c!9450 (and ((_ is Cons!1451) (toList!705 lt!28661)) (bvsgt (_1!1052 (h!2035 (toList!705 lt!28661))) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67574 (= e!44280 e!44282)))

(declare-fun e!44279 () List!1455)

(declare-fun b!67575 () Bool)

(assert (=> b!67575 (= e!44279 (ite c!9449 (t!4929 (toList!705 lt!28661)) (ite c!9450 (Cons!1451 (h!2035 (toList!705 lt!28661)) (t!4929 (toList!705 lt!28661))) Nil!1452)))))

(declare-fun d!14329 () Bool)

(assert (=> d!14329 e!44281))

(declare-fun res!36471 () Bool)

(assert (=> d!14329 (=> (not res!36471) (not e!44281))))

(assert (=> d!14329 (= res!36471 (isStrictlySorted!276 lt!29392))))

(assert (=> d!14329 (= lt!29392 e!44278)))

(declare-fun c!9447 () Bool)

(assert (=> d!14329 (= c!9447 (and ((_ is Cons!1451) (toList!705 lt!28661)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28661))) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14329 (isStrictlySorted!276 (toList!705 lt!28661))))

(assert (=> d!14329 (= (insertStrictlySorted!51 (toList!705 lt!28661) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29392)))

(declare-fun b!67576 () Bool)

(assert (=> b!67576 (= e!44279 (insertStrictlySorted!51 (t!4929 (toList!705 lt!28661)) (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67577 () Bool)

(assert (=> b!67577 (= e!44280 call!5659)))

(declare-fun bm!5655 () Bool)

(assert (=> bm!5655 (= call!5659 call!5658)))

(declare-fun b!67578 () Bool)

(assert (=> b!67578 (= e!44282 call!5657)))

(declare-fun bm!5656 () Bool)

(assert (=> bm!5656 (= call!5658 ($colon$colon!62 e!44279 (ite c!9447 (h!2035 (toList!705 lt!28661)) (tuple2!2083 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9448 () Bool)

(assert (=> bm!5656 (= c!9448 c!9447)))

(declare-fun b!67579 () Bool)

(assert (=> b!67579 (= e!44281 (contains!709 lt!29392 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14329 c!9447) b!67573))

(assert (= (and d!14329 (not c!9447)) b!67571))

(assert (= (and b!67571 c!9449) b!67577))

(assert (= (and b!67571 (not c!9449)) b!67574))

(assert (= (and b!67574 c!9450) b!67570))

(assert (= (and b!67574 (not c!9450)) b!67578))

(assert (= (or b!67570 b!67578) bm!5654))

(assert (= (or b!67577 bm!5654) bm!5655))

(assert (= (or b!67573 bm!5655) bm!5656))

(assert (= (and bm!5656 c!9448) b!67576))

(assert (= (and bm!5656 (not c!9448)) b!67575))

(assert (= (and d!14329 res!36471) b!67572))

(assert (= (and b!67572 res!36470) b!67579))

(declare-fun m!62899 () Bool)

(assert (=> bm!5656 m!62899))

(declare-fun m!62901 () Bool)

(assert (=> b!67576 m!62901))

(declare-fun m!62903 () Bool)

(assert (=> b!67572 m!62903))

(declare-fun m!62905 () Bool)

(assert (=> b!67579 m!62905))

(declare-fun m!62907 () Bool)

(assert (=> d!14329 m!62907))

(declare-fun m!62909 () Bool)

(assert (=> d!14329 m!62909))

(assert (=> d!13813 d!14329))

(declare-fun d!14331 () Bool)

(assert (=> d!14331 (= (apply!72 (+!86 lt!28967 (tuple2!2083 lt!28966 (minValue!2054 newMap!16))) lt!28960) (apply!72 lt!28967 lt!28960))))

(declare-fun lt!29393 () Unit!1824)

(assert (=> d!14331 (= lt!29393 (choose!376 lt!28967 lt!28966 (minValue!2054 newMap!16) lt!28960))))

(declare-fun e!44283 () Bool)

(assert (=> d!14331 e!44283))

(declare-fun res!36472 () Bool)

(assert (=> d!14331 (=> (not res!36472) (not e!44283))))

(assert (=> d!14331 (= res!36472 (contains!705 lt!28967 lt!28960))))

(assert (=> d!14331 (= (addApplyDifferent!48 lt!28967 lt!28966 (minValue!2054 newMap!16) lt!28960) lt!29393)))

(declare-fun b!67580 () Bool)

(assert (=> b!67580 (= e!44283 (not (= lt!28960 lt!28966)))))

(assert (= (and d!14331 res!36472) b!67580))

(declare-fun m!62911 () Bool)

(assert (=> d!14331 m!62911))

(assert (=> d!14331 m!61465))

(assert (=> d!14331 m!61465))

(assert (=> d!14331 m!61471))

(declare-fun m!62913 () Bool)

(assert (=> d!14331 m!62913))

(assert (=> d!14331 m!61457))

(assert (=> b!66790 d!14331))

(declare-fun d!14333 () Bool)

(assert (=> d!14333 (contains!705 (+!86 lt!28970 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16))) lt!28973)))

(declare-fun lt!29394 () Unit!1824)

(assert (=> d!14333 (= lt!29394 (choose!377 lt!28970 lt!28975 (zeroValue!2054 newMap!16) lt!28973))))

(assert (=> d!14333 (contains!705 lt!28970 lt!28973)))

(assert (=> d!14333 (= (addStillContains!48 lt!28970 lt!28975 (zeroValue!2054 newMap!16) lt!28973) lt!29394)))

(declare-fun bs!2919 () Bool)

(assert (= bs!2919 d!14333))

(assert (=> bs!2919 m!61449))

(assert (=> bs!2919 m!61449))

(assert (=> bs!2919 m!61451))

(declare-fun m!62915 () Bool)

(assert (=> bs!2919 m!62915))

(declare-fun m!62917 () Bool)

(assert (=> bs!2919 m!62917))

(assert (=> b!66790 d!14333))

(declare-fun d!14335 () Bool)

(declare-fun e!44284 () Bool)

(assert (=> d!14335 e!44284))

(declare-fun res!36473 () Bool)

(assert (=> d!14335 (=> res!36473 e!44284)))

(declare-fun lt!29395 () Bool)

(assert (=> d!14335 (= res!36473 (not lt!29395))))

(declare-fun lt!29398 () Bool)

(assert (=> d!14335 (= lt!29395 lt!29398)))

(declare-fun lt!29397 () Unit!1824)

(declare-fun e!44285 () Unit!1824)

(assert (=> d!14335 (= lt!29397 e!44285)))

(declare-fun c!9451 () Bool)

(assert (=> d!14335 (= c!9451 lt!29398)))

(assert (=> d!14335 (= lt!29398 (containsKey!134 (toList!705 (+!86 lt!28970 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16)))) lt!28973))))

(assert (=> d!14335 (= (contains!705 (+!86 lt!28970 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16))) lt!28973) lt!29395)))

(declare-fun b!67581 () Bool)

(declare-fun lt!29396 () Unit!1824)

(assert (=> b!67581 (= e!44285 lt!29396)))

(assert (=> b!67581 (= lt!29396 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (+!86 lt!28970 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16)))) lt!28973))))

(assert (=> b!67581 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!28970 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16)))) lt!28973))))

(declare-fun b!67582 () Bool)

(declare-fun Unit!1877 () Unit!1824)

(assert (=> b!67582 (= e!44285 Unit!1877)))

(declare-fun b!67583 () Bool)

(assert (=> b!67583 (= e!44284 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!28970 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16)))) lt!28973)))))

(assert (= (and d!14335 c!9451) b!67581))

(assert (= (and d!14335 (not c!9451)) b!67582))

(assert (= (and d!14335 (not res!36473)) b!67583))

(declare-fun m!62919 () Bool)

(assert (=> d!14335 m!62919))

(declare-fun m!62921 () Bool)

(assert (=> b!67581 m!62921))

(declare-fun m!62923 () Bool)

(assert (=> b!67581 m!62923))

(assert (=> b!67581 m!62923))

(declare-fun m!62925 () Bool)

(assert (=> b!67581 m!62925))

(assert (=> b!67583 m!62923))

(assert (=> b!67583 m!62923))

(assert (=> b!67583 m!62925))

(assert (=> b!66790 d!14335))

(declare-fun b!67584 () Bool)

(declare-fun e!44292 () ListLongMap!1379)

(declare-fun call!5660 () ListLongMap!1379)

(assert (=> b!67584 (= e!44292 call!5660)))

(declare-fun bm!5657 () Bool)

(assert (=> bm!5657 (= call!5660 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16)))))

(declare-fun b!67585 () Bool)

(declare-fun e!44286 () Bool)

(declare-fun e!44289 () Bool)

(assert (=> b!67585 (= e!44286 e!44289)))

(declare-fun c!9454 () Bool)

(declare-fun e!44291 () Bool)

(assert (=> b!67585 (= c!9454 e!44291)))

(declare-fun res!36476 () Bool)

(assert (=> b!67585 (=> (not res!36476) (not e!44291))))

(assert (=> b!67585 (= res!36476 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!67586 () Bool)

(declare-fun e!44287 () Bool)

(assert (=> b!67586 (= e!44289 e!44287)))

(assert (=> b!67586 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun res!36475 () Bool)

(declare-fun lt!29399 () ListLongMap!1379)

(assert (=> b!67586 (= res!36475 (contains!705 lt!29399 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67586 (=> (not res!36475) (not e!44287))))

(declare-fun b!67587 () Bool)

(assert (=> b!67587 (= e!44291 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67587 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!67588 () Bool)

(declare-fun e!44288 () ListLongMap!1379)

(assert (=> b!67588 (= e!44288 (ListLongMap!1380 Nil!1452))))

(declare-fun b!67589 () Bool)

(declare-fun e!44290 () Bool)

(assert (=> b!67589 (= e!44290 (= lt!29399 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2146 newMap!16))))))

(declare-fun b!67590 () Bool)

(assert (=> b!67590 (= e!44290 (isEmpty!313 lt!29399))))

(declare-fun b!67592 () Bool)

(assert (=> b!67592 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> b!67592 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 lt!28812)))))

(assert (=> b!67592 (= e!44287 (= (apply!72 lt!29399 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 lt!28812) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!67593 () Bool)

(declare-fun res!36474 () Bool)

(assert (=> b!67593 (=> (not res!36474) (not e!44286))))

(assert (=> b!67593 (= res!36474 (not (contains!705 lt!29399 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67594 () Bool)

(assert (=> b!67594 (= e!44288 e!44292)))

(declare-fun c!9455 () Bool)

(assert (=> b!67594 (= c!9455 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67595 () Bool)

(declare-fun lt!29401 () Unit!1824)

(declare-fun lt!29402 () Unit!1824)

(assert (=> b!67595 (= lt!29401 lt!29402)))

(declare-fun lt!29400 () V!2913)

(declare-fun lt!29403 () ListLongMap!1379)

(declare-fun lt!29405 () (_ BitVec 64))

(declare-fun lt!29404 () (_ BitVec 64))

(assert (=> b!67595 (not (contains!705 (+!86 lt!29403 (tuple2!2083 lt!29404 lt!29400)) lt!29405))))

(assert (=> b!67595 (= lt!29402 (addStillNotContains!23 lt!29403 lt!29404 lt!29400 lt!29405))))

(assert (=> b!67595 (= lt!29405 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67595 (= lt!29400 (get!1122 (select (arr!1827 lt!28812) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67595 (= lt!29404 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67595 (= lt!29403 call!5660)))

(assert (=> b!67595 (= e!44292 (+!86 call!5660 (tuple2!2083 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) (get!1122 (select (arr!1827 lt!28812) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!14337 () Bool)

(assert (=> d!14337 e!44286))

(declare-fun res!36477 () Bool)

(assert (=> d!14337 (=> (not res!36477) (not e!44286))))

(assert (=> d!14337 (= res!36477 (not (contains!705 lt!29399 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14337 (= lt!29399 e!44288)))

(declare-fun c!9453 () Bool)

(assert (=> d!14337 (= c!9453 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!14337 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14337 (= (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29399)))

(declare-fun b!67591 () Bool)

(assert (=> b!67591 (= e!44289 e!44290)))

(declare-fun c!9452 () Bool)

(assert (=> b!67591 (= c!9452 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (= (and d!14337 c!9453) b!67588))

(assert (= (and d!14337 (not c!9453)) b!67594))

(assert (= (and b!67594 c!9455) b!67595))

(assert (= (and b!67594 (not c!9455)) b!67584))

(assert (= (or b!67595 b!67584) bm!5657))

(assert (= (and d!14337 res!36477) b!67593))

(assert (= (and b!67593 res!36474) b!67585))

(assert (= (and b!67585 res!36476) b!67587))

(assert (= (and b!67585 c!9454) b!67586))

(assert (= (and b!67585 (not c!9454)) b!67591))

(assert (= (and b!67586 res!36475) b!67592))

(assert (= (and b!67591 c!9452) b!67589))

(assert (= (and b!67591 (not c!9452)) b!67590))

(declare-fun b_lambda!3027 () Bool)

(assert (=> (not b_lambda!3027) (not b!67592)))

(assert (=> b!67592 t!4942))

(declare-fun b_and!4173 () Bool)

(assert (= b_and!4169 (and (=> t!4942 result!2587) b_and!4173)))

(assert (=> b!67592 t!4944))

(declare-fun b_and!4175 () Bool)

(assert (= b_and!4171 (and (=> t!4944 result!2589) b_and!4175)))

(declare-fun b_lambda!3029 () Bool)

(assert (=> (not b_lambda!3029) (not b!67595)))

(assert (=> b!67595 t!4942))

(declare-fun b_and!4177 () Bool)

(assert (= b_and!4173 (and (=> t!4942 result!2587) b_and!4177)))

(assert (=> b!67595 t!4944))

(declare-fun b_and!4179 () Bool)

(assert (= b_and!4175 (and (=> t!4944 result!2589) b_and!4179)))

(declare-fun m!62927 () Bool)

(assert (=> b!67589 m!62927))

(declare-fun m!62929 () Bool)

(assert (=> d!14337 m!62929))

(assert (=> d!14337 m!61297))

(assert (=> b!67587 m!61431))

(assert (=> b!67587 m!61431))

(assert (=> b!67587 m!61433))

(assert (=> b!67592 m!61431))

(declare-fun m!62931 () Bool)

(assert (=> b!67592 m!62931))

(assert (=> b!67592 m!61479))

(assert (=> b!67592 m!61477))

(assert (=> b!67592 m!61481))

(assert (=> b!67592 m!61479))

(assert (=> b!67592 m!61477))

(assert (=> b!67592 m!61431))

(assert (=> b!67586 m!61431))

(assert (=> b!67586 m!61431))

(declare-fun m!62933 () Bool)

(assert (=> b!67586 m!62933))

(declare-fun m!62935 () Bool)

(assert (=> b!67593 m!62935))

(assert (=> bm!5657 m!62927))

(declare-fun m!62937 () Bool)

(assert (=> b!67590 m!62937))

(assert (=> b!67594 m!61431))

(assert (=> b!67594 m!61431))

(assert (=> b!67594 m!61433))

(declare-fun m!62939 () Bool)

(assert (=> b!67595 m!62939))

(assert (=> b!67595 m!61477))

(assert (=> b!67595 m!61431))

(declare-fun m!62941 () Bool)

(assert (=> b!67595 m!62941))

(declare-fun m!62943 () Bool)

(assert (=> b!67595 m!62943))

(assert (=> b!67595 m!61479))

(assert (=> b!67595 m!61477))

(assert (=> b!67595 m!61481))

(assert (=> b!67595 m!62939))

(declare-fun m!62945 () Bool)

(assert (=> b!67595 m!62945))

(assert (=> b!67595 m!61479))

(assert (=> b!66790 d!14337))

(declare-fun d!14339 () Bool)

(assert (=> d!14339 (= (apply!72 lt!28965 lt!28969) (get!1127 (getValueByKey!131 (toList!705 lt!28965) lt!28969)))))

(declare-fun bs!2920 () Bool)

(assert (= bs!2920 d!14339))

(declare-fun m!62947 () Bool)

(assert (=> bs!2920 m!62947))

(assert (=> bs!2920 m!62947))

(declare-fun m!62949 () Bool)

(assert (=> bs!2920 m!62949))

(assert (=> b!66790 d!14339))

(declare-fun d!14341 () Bool)

(declare-fun e!44293 () Bool)

(assert (=> d!14341 e!44293))

(declare-fun res!36479 () Bool)

(assert (=> d!14341 (=> (not res!36479) (not e!44293))))

(declare-fun lt!29408 () ListLongMap!1379)

(assert (=> d!14341 (= res!36479 (contains!705 lt!29408 (_1!1052 (tuple2!2083 lt!28977 (minValue!2054 newMap!16)))))))

(declare-fun lt!29406 () List!1455)

(assert (=> d!14341 (= lt!29408 (ListLongMap!1380 lt!29406))))

(declare-fun lt!29407 () Unit!1824)

(declare-fun lt!29409 () Unit!1824)

(assert (=> d!14341 (= lt!29407 lt!29409)))

(assert (=> d!14341 (= (getValueByKey!131 lt!29406 (_1!1052 (tuple2!2083 lt!28977 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!28977 (minValue!2054 newMap!16)))))))

(assert (=> d!14341 (= lt!29409 (lemmaContainsTupThenGetReturnValue!48 lt!29406 (_1!1052 (tuple2!2083 lt!28977 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28977 (minValue!2054 newMap!16)))))))

(assert (=> d!14341 (= lt!29406 (insertStrictlySorted!51 (toList!705 lt!28965) (_1!1052 (tuple2!2083 lt!28977 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28977 (minValue!2054 newMap!16)))))))

(assert (=> d!14341 (= (+!86 lt!28965 (tuple2!2083 lt!28977 (minValue!2054 newMap!16))) lt!29408)))

(declare-fun b!67596 () Bool)

(declare-fun res!36478 () Bool)

(assert (=> b!67596 (=> (not res!36478) (not e!44293))))

(assert (=> b!67596 (= res!36478 (= (getValueByKey!131 (toList!705 lt!29408) (_1!1052 (tuple2!2083 lt!28977 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!28977 (minValue!2054 newMap!16))))))))

(declare-fun b!67597 () Bool)

(assert (=> b!67597 (= e!44293 (contains!709 (toList!705 lt!29408) (tuple2!2083 lt!28977 (minValue!2054 newMap!16))))))

(assert (= (and d!14341 res!36479) b!67596))

(assert (= (and b!67596 res!36478) b!67597))

(declare-fun m!62951 () Bool)

(assert (=> d!14341 m!62951))

(declare-fun m!62953 () Bool)

(assert (=> d!14341 m!62953))

(declare-fun m!62955 () Bool)

(assert (=> d!14341 m!62955))

(declare-fun m!62957 () Bool)

(assert (=> d!14341 m!62957))

(declare-fun m!62959 () Bool)

(assert (=> b!67596 m!62959))

(declare-fun m!62961 () Bool)

(assert (=> b!67597 m!62961))

(assert (=> b!66790 d!14341))

(declare-fun d!14343 () Bool)

(declare-fun e!44294 () Bool)

(assert (=> d!14343 e!44294))

(declare-fun res!36481 () Bool)

(assert (=> d!14343 (=> (not res!36481) (not e!44294))))

(declare-fun lt!29412 () ListLongMap!1379)

(assert (=> d!14343 (= res!36481 (contains!705 lt!29412 (_1!1052 (tuple2!2083 lt!28966 (minValue!2054 newMap!16)))))))

(declare-fun lt!29410 () List!1455)

(assert (=> d!14343 (= lt!29412 (ListLongMap!1380 lt!29410))))

(declare-fun lt!29411 () Unit!1824)

(declare-fun lt!29413 () Unit!1824)

(assert (=> d!14343 (= lt!29411 lt!29413)))

(assert (=> d!14343 (= (getValueByKey!131 lt!29410 (_1!1052 (tuple2!2083 lt!28966 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!28966 (minValue!2054 newMap!16)))))))

(assert (=> d!14343 (= lt!29413 (lemmaContainsTupThenGetReturnValue!48 lt!29410 (_1!1052 (tuple2!2083 lt!28966 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28966 (minValue!2054 newMap!16)))))))

(assert (=> d!14343 (= lt!29410 (insertStrictlySorted!51 (toList!705 lt!28967) (_1!1052 (tuple2!2083 lt!28966 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28966 (minValue!2054 newMap!16)))))))

(assert (=> d!14343 (= (+!86 lt!28967 (tuple2!2083 lt!28966 (minValue!2054 newMap!16))) lt!29412)))

(declare-fun b!67598 () Bool)

(declare-fun res!36480 () Bool)

(assert (=> b!67598 (=> (not res!36480) (not e!44294))))

(assert (=> b!67598 (= res!36480 (= (getValueByKey!131 (toList!705 lt!29412) (_1!1052 (tuple2!2083 lt!28966 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!28966 (minValue!2054 newMap!16))))))))

(declare-fun b!67599 () Bool)

(assert (=> b!67599 (= e!44294 (contains!709 (toList!705 lt!29412) (tuple2!2083 lt!28966 (minValue!2054 newMap!16))))))

(assert (= (and d!14343 res!36481) b!67598))

(assert (= (and b!67598 res!36480) b!67599))

(declare-fun m!62963 () Bool)

(assert (=> d!14343 m!62963))

(declare-fun m!62965 () Bool)

(assert (=> d!14343 m!62965))

(declare-fun m!62967 () Bool)

(assert (=> d!14343 m!62967))

(declare-fun m!62969 () Bool)

(assert (=> d!14343 m!62969))

(declare-fun m!62971 () Bool)

(assert (=> b!67598 m!62971))

(declare-fun m!62973 () Bool)

(assert (=> b!67599 m!62973))

(assert (=> b!66790 d!14343))

(declare-fun d!14345 () Bool)

(assert (=> d!14345 (= (apply!72 (+!86 lt!28967 (tuple2!2083 lt!28966 (minValue!2054 newMap!16))) lt!28960) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!28967 (tuple2!2083 lt!28966 (minValue!2054 newMap!16)))) lt!28960)))))

(declare-fun bs!2921 () Bool)

(assert (= bs!2921 d!14345))

(declare-fun m!62975 () Bool)

(assert (=> bs!2921 m!62975))

(assert (=> bs!2921 m!62975))

(declare-fun m!62977 () Bool)

(assert (=> bs!2921 m!62977))

(assert (=> b!66790 d!14345))

(declare-fun d!14347 () Bool)

(assert (=> d!14347 (= (apply!72 lt!28967 lt!28960) (get!1127 (getValueByKey!131 (toList!705 lt!28967) lt!28960)))))

(declare-fun bs!2922 () Bool)

(assert (= bs!2922 d!14347))

(declare-fun m!62979 () Bool)

(assert (=> bs!2922 m!62979))

(assert (=> bs!2922 m!62979))

(declare-fun m!62981 () Bool)

(assert (=> bs!2922 m!62981))

(assert (=> b!66790 d!14347))

(declare-fun d!14349 () Bool)

(declare-fun e!44295 () Bool)

(assert (=> d!14349 e!44295))

(declare-fun res!36483 () Bool)

(assert (=> d!14349 (=> (not res!36483) (not e!44295))))

(declare-fun lt!29416 () ListLongMap!1379)

(assert (=> d!14349 (= res!36483 (contains!705 lt!29416 (_1!1052 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16)))))))

(declare-fun lt!29414 () List!1455)

(assert (=> d!14349 (= lt!29416 (ListLongMap!1380 lt!29414))))

(declare-fun lt!29415 () Unit!1824)

(declare-fun lt!29417 () Unit!1824)

(assert (=> d!14349 (= lt!29415 lt!29417)))

(assert (=> d!14349 (= (getValueByKey!131 lt!29414 (_1!1052 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14349 (= lt!29417 (lemmaContainsTupThenGetReturnValue!48 lt!29414 (_1!1052 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14349 (= lt!29414 (insertStrictlySorted!51 (toList!705 lt!28970) (_1!1052 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14349 (= (+!86 lt!28970 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16))) lt!29416)))

(declare-fun b!67600 () Bool)

(declare-fun res!36482 () Bool)

(assert (=> b!67600 (=> (not res!36482) (not e!44295))))

(assert (=> b!67600 (= res!36482 (= (getValueByKey!131 (toList!705 lt!29416) (_1!1052 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16))))))))

(declare-fun b!67601 () Bool)

(assert (=> b!67601 (= e!44295 (contains!709 (toList!705 lt!29416) (tuple2!2083 lt!28975 (zeroValue!2054 newMap!16))))))

(assert (= (and d!14349 res!36483) b!67600))

(assert (= (and b!67600 res!36482) b!67601))

(declare-fun m!62983 () Bool)

(assert (=> d!14349 m!62983))

(declare-fun m!62985 () Bool)

(assert (=> d!14349 m!62985))

(declare-fun m!62987 () Bool)

(assert (=> d!14349 m!62987))

(declare-fun m!62989 () Bool)

(assert (=> d!14349 m!62989))

(declare-fun m!62991 () Bool)

(assert (=> b!67600 m!62991))

(declare-fun m!62993 () Bool)

(assert (=> b!67601 m!62993))

(assert (=> b!66790 d!14349))

(declare-fun d!14351 () Bool)

(assert (=> d!14351 (= (apply!72 (+!86 lt!28978 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16))) lt!28964) (apply!72 lt!28978 lt!28964))))

(declare-fun lt!29418 () Unit!1824)

(assert (=> d!14351 (= lt!29418 (choose!376 lt!28978 lt!28963 (zeroValue!2054 newMap!16) lt!28964))))

(declare-fun e!44296 () Bool)

(assert (=> d!14351 e!44296))

(declare-fun res!36484 () Bool)

(assert (=> d!14351 (=> (not res!36484) (not e!44296))))

(assert (=> d!14351 (= res!36484 (contains!705 lt!28978 lt!28964))))

(assert (=> d!14351 (= (addApplyDifferent!48 lt!28978 lt!28963 (zeroValue!2054 newMap!16) lt!28964) lt!29418)))

(declare-fun b!67602 () Bool)

(assert (=> b!67602 (= e!44296 (not (= lt!28964 lt!28963)))))

(assert (= (and d!14351 res!36484) b!67602))

(declare-fun m!62995 () Bool)

(assert (=> d!14351 m!62995))

(assert (=> d!14351 m!61459))

(assert (=> d!14351 m!61459))

(assert (=> d!14351 m!61461))

(declare-fun m!62997 () Bool)

(assert (=> d!14351 m!62997))

(assert (=> d!14351 m!61463))

(assert (=> b!66790 d!14351))

(declare-fun d!14353 () Bool)

(assert (=> d!14353 (= (apply!72 (+!86 lt!28965 (tuple2!2083 lt!28977 (minValue!2054 newMap!16))) lt!28969) (apply!72 lt!28965 lt!28969))))

(declare-fun lt!29419 () Unit!1824)

(assert (=> d!14353 (= lt!29419 (choose!376 lt!28965 lt!28977 (minValue!2054 newMap!16) lt!28969))))

(declare-fun e!44297 () Bool)

(assert (=> d!14353 e!44297))

(declare-fun res!36485 () Bool)

(assert (=> d!14353 (=> (not res!36485) (not e!44297))))

(assert (=> d!14353 (= res!36485 (contains!705 lt!28965 lt!28969))))

(assert (=> d!14353 (= (addApplyDifferent!48 lt!28965 lt!28977 (minValue!2054 newMap!16) lt!28969) lt!29419)))

(declare-fun b!67603 () Bool)

(assert (=> b!67603 (= e!44297 (not (= lt!28969 lt!28977)))))

(assert (= (and d!14353 res!36485) b!67603))

(declare-fun m!62999 () Bool)

(assert (=> d!14353 m!62999))

(assert (=> d!14353 m!61445))

(assert (=> d!14353 m!61445))

(assert (=> d!14353 m!61469))

(declare-fun m!63001 () Bool)

(assert (=> d!14353 m!63001))

(assert (=> d!14353 m!61473))

(assert (=> b!66790 d!14353))

(declare-fun d!14355 () Bool)

(assert (=> d!14355 (= (apply!72 (+!86 lt!28965 (tuple2!2083 lt!28977 (minValue!2054 newMap!16))) lt!28969) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!28965 (tuple2!2083 lt!28977 (minValue!2054 newMap!16)))) lt!28969)))))

(declare-fun bs!2923 () Bool)

(assert (= bs!2923 d!14355))

(declare-fun m!63003 () Bool)

(assert (=> bs!2923 m!63003))

(assert (=> bs!2923 m!63003))

(declare-fun m!63005 () Bool)

(assert (=> bs!2923 m!63005))

(assert (=> b!66790 d!14355))

(declare-fun d!14357 () Bool)

(assert (=> d!14357 (= (apply!72 lt!28978 lt!28964) (get!1127 (getValueByKey!131 (toList!705 lt!28978) lt!28964)))))

(declare-fun bs!2924 () Bool)

(assert (= bs!2924 d!14357))

(declare-fun m!63007 () Bool)

(assert (=> bs!2924 m!63007))

(assert (=> bs!2924 m!63007))

(declare-fun m!63009 () Bool)

(assert (=> bs!2924 m!63009))

(assert (=> b!66790 d!14357))

(declare-fun d!14359 () Bool)

(declare-fun e!44298 () Bool)

(assert (=> d!14359 e!44298))

(declare-fun res!36487 () Bool)

(assert (=> d!14359 (=> (not res!36487) (not e!44298))))

(declare-fun lt!29422 () ListLongMap!1379)

(assert (=> d!14359 (= res!36487 (contains!705 lt!29422 (_1!1052 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16)))))))

(declare-fun lt!29420 () List!1455)

(assert (=> d!14359 (= lt!29422 (ListLongMap!1380 lt!29420))))

(declare-fun lt!29421 () Unit!1824)

(declare-fun lt!29423 () Unit!1824)

(assert (=> d!14359 (= lt!29421 lt!29423)))

(assert (=> d!14359 (= (getValueByKey!131 lt!29420 (_1!1052 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14359 (= lt!29423 (lemmaContainsTupThenGetReturnValue!48 lt!29420 (_1!1052 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14359 (= lt!29420 (insertStrictlySorted!51 (toList!705 lt!28978) (_1!1052 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14359 (= (+!86 lt!28978 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16))) lt!29422)))

(declare-fun b!67604 () Bool)

(declare-fun res!36486 () Bool)

(assert (=> b!67604 (=> (not res!36486) (not e!44298))))

(assert (=> b!67604 (= res!36486 (= (getValueByKey!131 (toList!705 lt!29422) (_1!1052 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16))))))))

(declare-fun b!67605 () Bool)

(assert (=> b!67605 (= e!44298 (contains!709 (toList!705 lt!29422) (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16))))))

(assert (= (and d!14359 res!36487) b!67604))

(assert (= (and b!67604 res!36486) b!67605))

(declare-fun m!63011 () Bool)

(assert (=> d!14359 m!63011))

(declare-fun m!63013 () Bool)

(assert (=> d!14359 m!63013))

(declare-fun m!63015 () Bool)

(assert (=> d!14359 m!63015))

(declare-fun m!63017 () Bool)

(assert (=> d!14359 m!63017))

(declare-fun m!63019 () Bool)

(assert (=> b!67604 m!63019))

(declare-fun m!63021 () Bool)

(assert (=> b!67605 m!63021))

(assert (=> b!66790 d!14359))

(declare-fun d!14361 () Bool)

(assert (=> d!14361 (= (apply!72 (+!86 lt!28978 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16))) lt!28964) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!28978 (tuple2!2083 lt!28963 (zeroValue!2054 newMap!16)))) lt!28964)))))

(declare-fun bs!2925 () Bool)

(assert (= bs!2925 d!14361))

(declare-fun m!63023 () Bool)

(assert (=> bs!2925 m!63023))

(assert (=> bs!2925 m!63023))

(declare-fun m!63025 () Bool)

(assert (=> bs!2925 m!63025))

(assert (=> b!66790 d!14361))

(declare-fun d!14363 () Bool)

(declare-fun res!36488 () Bool)

(declare-fun e!44299 () Bool)

(assert (=> d!14363 (=> res!36488 e!44299)))

(assert (=> d!14363 (= res!36488 (and ((_ is Cons!1451) (toList!705 lt!28719)) (= (_1!1052 (h!2035 (toList!705 lt!28719))) (_1!1052 lt!28520))))))

(assert (=> d!14363 (= (containsKey!134 (toList!705 lt!28719) (_1!1052 lt!28520)) e!44299)))

(declare-fun b!67606 () Bool)

(declare-fun e!44300 () Bool)

(assert (=> b!67606 (= e!44299 e!44300)))

(declare-fun res!36489 () Bool)

(assert (=> b!67606 (=> (not res!36489) (not e!44300))))

(assert (=> b!67606 (= res!36489 (and (or (not ((_ is Cons!1451) (toList!705 lt!28719))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28719))) (_1!1052 lt!28520))) ((_ is Cons!1451) (toList!705 lt!28719)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28719))) (_1!1052 lt!28520))))))

(declare-fun b!67607 () Bool)

(assert (=> b!67607 (= e!44300 (containsKey!134 (t!4929 (toList!705 lt!28719)) (_1!1052 lt!28520)))))

(assert (= (and d!14363 (not res!36488)) b!67606))

(assert (= (and b!67606 res!36489) b!67607))

(declare-fun m!63027 () Bool)

(assert (=> b!67607 m!63027))

(assert (=> d!13943 d!14363))

(declare-fun d!14365 () Bool)

(declare-fun e!44301 () Bool)

(assert (=> d!14365 e!44301))

(declare-fun res!36490 () Bool)

(assert (=> d!14365 (=> res!36490 e!44301)))

(declare-fun lt!29424 () Bool)

(assert (=> d!14365 (= res!36490 (not lt!29424))))

(declare-fun lt!29427 () Bool)

(assert (=> d!14365 (= lt!29424 lt!29427)))

(declare-fun lt!29426 () Unit!1824)

(declare-fun e!44302 () Unit!1824)

(assert (=> d!14365 (= lt!29426 e!44302)))

(declare-fun c!9456 () Bool)

(assert (=> d!14365 (= c!9456 lt!29427)))

(assert (=> d!14365 (= lt!29427 (containsKey!134 (toList!705 lt!29083) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14365 (= (contains!705 lt!29083 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29424)))

(declare-fun b!67608 () Bool)

(declare-fun lt!29425 () Unit!1824)

(assert (=> b!67608 (= e!44302 lt!29425)))

(assert (=> b!67608 (= lt!29425 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29083) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67608 (isDefined!83 (getValueByKey!131 (toList!705 lt!29083) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67609 () Bool)

(declare-fun Unit!1878 () Unit!1824)

(assert (=> b!67609 (= e!44302 Unit!1878)))

(declare-fun b!67610 () Bool)

(assert (=> b!67610 (= e!44301 (isDefined!83 (getValueByKey!131 (toList!705 lt!29083) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14365 c!9456) b!67608))

(assert (= (and d!14365 (not c!9456)) b!67609))

(assert (= (and d!14365 (not res!36490)) b!67610))

(declare-fun m!63029 () Bool)

(assert (=> d!14365 m!63029))

(declare-fun m!63031 () Bool)

(assert (=> b!67608 m!63031))

(declare-fun m!63033 () Bool)

(assert (=> b!67608 m!63033))

(assert (=> b!67608 m!63033))

(declare-fun m!63035 () Bool)

(assert (=> b!67608 m!63035))

(assert (=> b!67610 m!63033))

(assert (=> b!67610 m!63033))

(assert (=> b!67610 m!63035))

(assert (=> bm!5597 d!14365))

(declare-fun d!14367 () Bool)

(assert (=> d!14367 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2926 () Bool)

(assert (= bs!2926 d!14367))

(assert (=> bs!2926 m!61637))

(declare-fun m!63037 () Bool)

(assert (=> bs!2926 m!63037))

(assert (=> b!67154 d!14367))

(declare-fun b!67613 () Bool)

(declare-fun e!44304 () Option!137)

(assert (=> b!67613 (= e!44304 (getValueByKey!131 (t!4929 (toList!705 lt!28667)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67611 () Bool)

(declare-fun e!44303 () Option!137)

(assert (=> b!67611 (= e!44303 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28667)))))))

(declare-fun d!14369 () Bool)

(declare-fun c!9457 () Bool)

(assert (=> d!14369 (= c!9457 (and ((_ is Cons!1451) (toList!705 lt!28667)) (= (_1!1052 (h!2035 (toList!705 lt!28667))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14369 (= (getValueByKey!131 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000) e!44303)))

(declare-fun b!67614 () Bool)

(assert (=> b!67614 (= e!44304 None!135)))

(declare-fun b!67612 () Bool)

(assert (=> b!67612 (= e!44303 e!44304)))

(declare-fun c!9458 () Bool)

(assert (=> b!67612 (= c!9458 (and ((_ is Cons!1451) (toList!705 lt!28667)) (not (= (_1!1052 (h!2035 (toList!705 lt!28667))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!14369 c!9457) b!67611))

(assert (= (and d!14369 (not c!9457)) b!67612))

(assert (= (and b!67612 c!9458) b!67613))

(assert (= (and b!67612 (not c!9458)) b!67614))

(declare-fun m!63039 () Bool)

(assert (=> b!67613 m!63039))

(assert (=> b!67154 d!14369))

(declare-fun d!14371 () Bool)

(declare-fun res!36491 () Bool)

(declare-fun e!44305 () Bool)

(assert (=> d!14371 (=> res!36491 e!44305)))

(assert (=> d!14371 (= res!36491 (or ((_ is Nil!1452) lt!29185) ((_ is Nil!1452) (t!4929 lt!29185))))))

(assert (=> d!14371 (= (isStrictlySorted!276 lt!29185) e!44305)))

(declare-fun b!67615 () Bool)

(declare-fun e!44306 () Bool)

(assert (=> b!67615 (= e!44305 e!44306)))

(declare-fun res!36492 () Bool)

(assert (=> b!67615 (=> (not res!36492) (not e!44306))))

(assert (=> b!67615 (= res!36492 (bvslt (_1!1052 (h!2035 lt!29185)) (_1!1052 (h!2035 (t!4929 lt!29185)))))))

(declare-fun b!67616 () Bool)

(assert (=> b!67616 (= e!44306 (isStrictlySorted!276 (t!4929 lt!29185)))))

(assert (= (and d!14371 (not res!36491)) b!67615))

(assert (= (and b!67615 res!36492) b!67616))

(declare-fun m!63041 () Bool)

(assert (=> b!67616 m!63041))

(assert (=> d!13985 d!14371))

(declare-fun d!14373 () Bool)

(declare-fun res!36493 () Bool)

(declare-fun e!44307 () Bool)

(assert (=> d!14373 (=> res!36493 e!44307)))

(assert (=> d!14373 (= res!36493 (or ((_ is Nil!1452) (toList!705 (+!86 lt!28527 lt!28528))) ((_ is Nil!1452) (t!4929 (toList!705 (+!86 lt!28527 lt!28528))))))))

(assert (=> d!14373 (= (isStrictlySorted!276 (toList!705 (+!86 lt!28527 lt!28528))) e!44307)))

(declare-fun b!67617 () Bool)

(declare-fun e!44308 () Bool)

(assert (=> b!67617 (= e!44307 e!44308)))

(declare-fun res!36494 () Bool)

(assert (=> b!67617 (=> (not res!36494) (not e!44308))))

(assert (=> b!67617 (= res!36494 (bvslt (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 lt!28528)))) (_1!1052 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28528)))))))))

(declare-fun b!67618 () Bool)

(assert (=> b!67618 (= e!44308 (isStrictlySorted!276 (t!4929 (toList!705 (+!86 lt!28527 lt!28528)))))))

(assert (= (and d!14373 (not res!36493)) b!67617))

(assert (= (and b!67617 res!36494) b!67618))

(declare-fun m!63043 () Bool)

(assert (=> b!67618 m!63043))

(assert (=> d!13985 d!14373))

(declare-fun b!67621 () Bool)

(declare-fun e!44310 () Option!137)

(assert (=> b!67621 (= e!44310 (getValueByKey!131 (t!4929 (t!4929 (toList!705 lt!28719))) (_1!1052 lt!28520)))))

(declare-fun b!67619 () Bool)

(declare-fun e!44309 () Option!137)

(assert (=> b!67619 (= e!44309 (Some!136 (_2!1052 (h!2035 (t!4929 (toList!705 lt!28719))))))))

(declare-fun d!14375 () Bool)

(declare-fun c!9459 () Bool)

(assert (=> d!14375 (= c!9459 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28719))) (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28719)))) (_1!1052 lt!28520))))))

(assert (=> d!14375 (= (getValueByKey!131 (t!4929 (toList!705 lt!28719)) (_1!1052 lt!28520)) e!44309)))

(declare-fun b!67622 () Bool)

(assert (=> b!67622 (= e!44310 None!135)))

(declare-fun b!67620 () Bool)

(assert (=> b!67620 (= e!44309 e!44310)))

(declare-fun c!9460 () Bool)

(assert (=> b!67620 (= c!9460 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28719))) (not (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28719)))) (_1!1052 lt!28520)))))))

(assert (= (and d!14375 c!9459) b!67619))

(assert (= (and d!14375 (not c!9459)) b!67620))

(assert (= (and b!67620 c!9460) b!67621))

(assert (= (and b!67620 (not c!9460)) b!67622))

(declare-fun m!63045 () Bool)

(assert (=> b!67621 m!63045))

(assert (=> b!67035 d!14375))

(declare-fun d!14377 () Bool)

(declare-fun e!44311 () Bool)

(assert (=> d!14377 e!44311))

(declare-fun res!36495 () Bool)

(assert (=> d!14377 (=> res!36495 e!44311)))

(declare-fun lt!29428 () Bool)

(assert (=> d!14377 (= res!36495 (not lt!29428))))

(declare-fun lt!29431 () Bool)

(assert (=> d!14377 (= lt!29428 lt!29431)))

(declare-fun lt!29430 () Unit!1824)

(declare-fun e!44312 () Unit!1824)

(assert (=> d!14377 (= lt!29430 e!44312)))

(declare-fun c!9461 () Bool)

(assert (=> d!14377 (= c!9461 lt!29431)))

(assert (=> d!14377 (= lt!29431 (containsKey!134 (toList!705 lt!29044) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14377 (= (contains!705 lt!29044 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29428)))

(declare-fun b!67623 () Bool)

(declare-fun lt!29429 () Unit!1824)

(assert (=> b!67623 (= e!44312 lt!29429)))

(assert (=> b!67623 (= lt!29429 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29044) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67623 (isDefined!83 (getValueByKey!131 (toList!705 lt!29044) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67624 () Bool)

(declare-fun Unit!1879 () Unit!1824)

(assert (=> b!67624 (= e!44312 Unit!1879)))

(declare-fun b!67625 () Bool)

(assert (=> b!67625 (= e!44311 (isDefined!83 (getValueByKey!131 (toList!705 lt!29044) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14377 c!9461) b!67623))

(assert (= (and d!14377 (not c!9461)) b!67624))

(assert (= (and d!14377 (not res!36495)) b!67625))

(declare-fun m!63047 () Bool)

(assert (=> d!14377 m!63047))

(declare-fun m!63049 () Bool)

(assert (=> b!67623 m!63049))

(declare-fun m!63051 () Bool)

(assert (=> b!67623 m!63051))

(assert (=> b!67623 m!63051))

(declare-fun m!63053 () Bool)

(assert (=> b!67623 m!63053))

(assert (=> b!67625 m!63051))

(assert (=> b!67625 m!63051))

(assert (=> b!67625 m!63053))

(assert (=> bm!5588 d!14377))

(declare-fun d!14379 () Bool)

(declare-fun res!36496 () Bool)

(declare-fun e!44313 () Bool)

(assert (=> d!14379 (=> res!36496 e!44313)))

(assert (=> d!14379 (= res!36496 (and ((_ is Cons!1451) (toList!705 lt!28667)) (= (_1!1052 (h!2035 (toList!705 lt!28667))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14379 (= (containsKey!134 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44313)))

(declare-fun b!67626 () Bool)

(declare-fun e!44314 () Bool)

(assert (=> b!67626 (= e!44313 e!44314)))

(declare-fun res!36497 () Bool)

(assert (=> b!67626 (=> (not res!36497) (not e!44314))))

(assert (=> b!67626 (= res!36497 (and (or (not ((_ is Cons!1451) (toList!705 lt!28667))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28667))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1451) (toList!705 lt!28667)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28667))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!67627 () Bool)

(assert (=> b!67627 (= e!44314 (containsKey!134 (t!4929 (toList!705 lt!28667)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14379 (not res!36496)) b!67626))

(assert (= (and b!67626 res!36497) b!67627))

(assert (=> b!67627 m!61005))

(declare-fun m!63055 () Bool)

(assert (=> b!67627 m!63055))

(assert (=> d!13969 d!14379))

(declare-fun lt!29432 () Bool)

(declare-fun d!14381 () Bool)

(assert (=> d!14381 (= lt!29432 (select (content!72 (toList!705 lt!29130)) (tuple2!2083 lt!28712 lt!28708)))))

(declare-fun e!44316 () Bool)

(assert (=> d!14381 (= lt!29432 e!44316)))

(declare-fun res!36499 () Bool)

(assert (=> d!14381 (=> (not res!36499) (not e!44316))))

(assert (=> d!14381 (= res!36499 ((_ is Cons!1451) (toList!705 lt!29130)))))

(assert (=> d!14381 (= (contains!709 (toList!705 lt!29130) (tuple2!2083 lt!28712 lt!28708)) lt!29432)))

(declare-fun b!67628 () Bool)

(declare-fun e!44315 () Bool)

(assert (=> b!67628 (= e!44316 e!44315)))

(declare-fun res!36498 () Bool)

(assert (=> b!67628 (=> res!36498 e!44315)))

(assert (=> b!67628 (= res!36498 (= (h!2035 (toList!705 lt!29130)) (tuple2!2083 lt!28712 lt!28708)))))

(declare-fun b!67629 () Bool)

(assert (=> b!67629 (= e!44315 (contains!709 (t!4929 (toList!705 lt!29130)) (tuple2!2083 lt!28712 lt!28708)))))

(assert (= (and d!14381 res!36499) b!67628))

(assert (= (and b!67628 (not res!36498)) b!67629))

(declare-fun m!63057 () Bool)

(assert (=> d!14381 m!63057))

(declare-fun m!63059 () Bool)

(assert (=> d!14381 m!63059))

(declare-fun m!63061 () Bool)

(assert (=> b!67629 m!63061))

(assert (=> b!67020 d!14381))

(declare-fun d!14383 () Bool)

(declare-fun lt!29433 () Bool)

(assert (=> d!14383 (= lt!29433 (select (content!72 (t!4929 (toList!705 lt!28723))) lt!28528))))

(declare-fun e!44318 () Bool)

(assert (=> d!14383 (= lt!29433 e!44318)))

(declare-fun res!36501 () Bool)

(assert (=> d!14383 (=> (not res!36501) (not e!44318))))

(assert (=> d!14383 (= res!36501 ((_ is Cons!1451) (t!4929 (toList!705 lt!28723))))))

(assert (=> d!14383 (= (contains!709 (t!4929 (toList!705 lt!28723)) lt!28528) lt!29433)))

(declare-fun b!67630 () Bool)

(declare-fun e!44317 () Bool)

(assert (=> b!67630 (= e!44318 e!44317)))

(declare-fun res!36500 () Bool)

(assert (=> b!67630 (=> res!36500 e!44317)))

(assert (=> b!67630 (= res!36500 (= (h!2035 (t!4929 (toList!705 lt!28723))) lt!28528))))

(declare-fun b!67631 () Bool)

(assert (=> b!67631 (= e!44317 (contains!709 (t!4929 (t!4929 (toList!705 lt!28723))) lt!28528))))

(assert (= (and d!14383 res!36501) b!67630))

(assert (= (and b!67630 (not res!36500)) b!67631))

(assert (=> d!14383 m!62743))

(declare-fun m!63063 () Bool)

(assert (=> d!14383 m!63063))

(declare-fun m!63065 () Bool)

(assert (=> b!67631 m!63065))

(assert (=> b!66920 d!14383))

(assert (=> b!66832 d!14163))

(declare-fun d!14385 () Bool)

(assert (=> d!14385 (= (apply!72 lt!29151 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1127 (getValueByKey!131 (toList!705 lt!29151) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!2927 () Bool)

(assert (= bs!2927 d!14385))

(assert (=> bs!2927 m!61331))

(assert (=> bs!2927 m!62689))

(assert (=> bs!2927 m!62689))

(declare-fun m!63067 () Bool)

(assert (=> bs!2927 m!63067))

(assert (=> b!67090 d!14385))

(assert (=> b!67090 d!14139))

(declare-fun d!14387 () Bool)

(declare-fun lt!29434 () Bool)

(assert (=> d!14387 (= lt!29434 (select (content!72 (toList!705 lt!28956)) (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44320 () Bool)

(assert (=> d!14387 (= lt!29434 e!44320)))

(declare-fun res!36503 () Bool)

(assert (=> d!14387 (=> (not res!36503) (not e!44320))))

(assert (=> d!14387 (= res!36503 ((_ is Cons!1451) (toList!705 lt!28956)))))

(assert (=> d!14387 (= (contains!709 (toList!705 lt!28956) (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!29434)))

(declare-fun b!67632 () Bool)

(declare-fun e!44319 () Bool)

(assert (=> b!67632 (= e!44320 e!44319)))

(declare-fun res!36502 () Bool)

(assert (=> b!67632 (=> res!36502 e!44319)))

(assert (=> b!67632 (= res!36502 (= (h!2035 (toList!705 lt!28956)) (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67633 () Bool)

(assert (=> b!67633 (= e!44319 (contains!709 (t!4929 (toList!705 lt!28956)) (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14387 res!36503) b!67632))

(assert (= (and b!67632 (not res!36502)) b!67633))

(declare-fun m!63069 () Bool)

(assert (=> d!14387 m!63069))

(declare-fun m!63071 () Bool)

(assert (=> d!14387 m!63071))

(declare-fun m!63073 () Bool)

(assert (=> b!67633 m!63073))

(assert (=> b!66772 d!14387))

(declare-fun d!14389 () Bool)

(assert (=> d!14389 (contains!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))

(declare-fun lt!29437 () Unit!1824)

(declare-fun choose!385 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 64) (_ BitVec 32) Int) Unit!1824)

(assert (=> d!14389 (= lt!29437 (choose!385 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(assert (=> d!14389 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14389 (= (lemmaArrayContainsKeyThenInListMap!10 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29437)))

(declare-fun bs!2928 () Bool)

(assert (= bs!2928 d!14389))

(assert (=> bs!2928 m!61017))

(assert (=> bs!2928 m!61017))

(assert (=> bs!2928 m!60827))

(assert (=> bs!2928 m!61241))

(assert (=> bs!2928 m!60827))

(declare-fun m!63075 () Bool)

(assert (=> bs!2928 m!63075))

(assert (=> bs!2928 m!61297))

(assert (=> b!66716 d!14389))

(declare-fun d!14391 () Bool)

(declare-fun e!44321 () Bool)

(assert (=> d!14391 e!44321))

(declare-fun res!36504 () Bool)

(assert (=> d!14391 (=> res!36504 e!44321)))

(declare-fun lt!29438 () Bool)

(assert (=> d!14391 (= res!36504 (not lt!29438))))

(declare-fun lt!29441 () Bool)

(assert (=> d!14391 (= lt!29438 lt!29441)))

(declare-fun lt!29440 () Unit!1824)

(declare-fun e!44322 () Unit!1824)

(assert (=> d!14391 (= lt!29440 e!44322)))

(declare-fun c!9462 () Bool)

(assert (=> d!14391 (= c!9462 lt!29441)))

(assert (=> d!14391 (= lt!29441 (containsKey!134 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14391 (= (contains!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29438)))

(declare-fun b!67634 () Bool)

(declare-fun lt!29439 () Unit!1824)

(assert (=> b!67634 (= e!44322 lt!29439)))

(assert (=> b!67634 (= lt!29439 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!67634 (isDefined!83 (getValueByKey!131 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67635 () Bool)

(declare-fun Unit!1880 () Unit!1824)

(assert (=> b!67635 (= e!44322 Unit!1880)))

(declare-fun b!67636 () Bool)

(assert (=> b!67636 (= e!44321 (isDefined!83 (getValueByKey!131 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (= (and d!14391 c!9462) b!67634))

(assert (= (and d!14391 (not c!9462)) b!67635))

(assert (= (and d!14391 (not res!36504)) b!67636))

(assert (=> d!14391 m!60827))

(declare-fun m!63077 () Bool)

(assert (=> d!14391 m!63077))

(assert (=> b!67634 m!60827))

(declare-fun m!63079 () Bool)

(assert (=> b!67634 m!63079))

(assert (=> b!67634 m!60827))

(declare-fun m!63081 () Bool)

(assert (=> b!67634 m!63081))

(assert (=> b!67634 m!63081))

(declare-fun m!63083 () Bool)

(assert (=> b!67634 m!63083))

(assert (=> b!67636 m!60827))

(assert (=> b!67636 m!63081))

(assert (=> b!67636 m!63081))

(assert (=> b!67636 m!63083))

(assert (=> b!66716 d!14391))

(assert (=> b!66716 d!13899))

(declare-fun d!14393 () Bool)

(assert (=> d!14393 (= (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713)) (not (isEmpty!315 (getValueByKey!131 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713))))))

(declare-fun bs!2929 () Bool)

(assert (= bs!2929 d!14393))

(assert (=> bs!2929 m!61891))

(declare-fun m!63085 () Bool)

(assert (=> bs!2929 m!63085))

(assert (=> b!67023 d!14393))

(declare-fun e!44324 () Option!137)

(declare-fun b!67639 () Bool)

(assert (=> b!67639 (= e!44324 (getValueByKey!131 (t!4929 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)))) lt!28713))))

(declare-fun e!44323 () Option!137)

(declare-fun b!67637 () Bool)

(assert (=> b!67637 (= e!44323 (Some!136 (_2!1052 (h!2035 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)))))))))

(declare-fun d!14395 () Bool)

(declare-fun c!9463 () Bool)

(assert (=> d!14395 (= c!9463 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))))) lt!28713)))))

(assert (=> d!14395 (= (getValueByKey!131 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713) e!44323)))

(declare-fun b!67640 () Bool)

(assert (=> b!67640 (= e!44324 None!135)))

(declare-fun b!67638 () Bool)

(assert (=> b!67638 (= e!44323 e!44324)))

(declare-fun c!9464 () Bool)

(assert (=> b!67638 (= c!9464 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)))) (not (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))))) lt!28713))))))

(assert (= (and d!14395 c!9463) b!67637))

(assert (= (and d!14395 (not c!9463)) b!67638))

(assert (= (and b!67638 c!9464) b!67639))

(assert (= (and b!67638 (not c!9464)) b!67640))

(declare-fun m!63087 () Bool)

(assert (=> b!67639 m!63087))

(assert (=> b!67023 d!14395))

(assert (=> b!66820 d!14163))

(declare-fun b!67641 () Bool)

(declare-fun e!44331 () ListLongMap!1379)

(declare-fun call!5661 () ListLongMap!1379)

(assert (=> b!67641 (= e!44331 call!5661)))

(declare-fun bm!5658 () Bool)

(assert (=> bm!5658 (= call!5661 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!67642 () Bool)

(declare-fun e!44325 () Bool)

(declare-fun e!44328 () Bool)

(assert (=> b!67642 (= e!44325 e!44328)))

(declare-fun c!9467 () Bool)

(declare-fun e!44330 () Bool)

(assert (=> b!67642 (= c!9467 e!44330)))

(declare-fun res!36507 () Bool)

(assert (=> b!67642 (=> (not res!36507) (not e!44330))))

(assert (=> b!67642 (= res!36507 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67643 () Bool)

(declare-fun e!44326 () Bool)

(assert (=> b!67643 (= e!44328 e!44326)))

(assert (=> b!67643 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun lt!29442 () ListLongMap!1379)

(declare-fun res!36506 () Bool)

(assert (=> b!67643 (= res!36506 (contains!705 lt!29442 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!67643 (=> (not res!36506) (not e!44326))))

(declare-fun b!67644 () Bool)

(assert (=> b!67644 (= e!44330 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!67644 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!67645 () Bool)

(declare-fun e!44327 () ListLongMap!1379)

(assert (=> b!67645 (= e!44327 (ListLongMap!1380 Nil!1452))))

(declare-fun e!44329 () Bool)

(declare-fun b!67646 () Bool)

(assert (=> b!67646 (= e!44329 (= lt!29442 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67647 () Bool)

(assert (=> b!67647 (= e!44329 (isEmpty!313 lt!29442))))

(declare-fun b!67649 () Bool)

(assert (=> b!67649 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!67649 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2062 (_values!2129 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> b!67649 (= e!44326 (= (apply!72 lt!29442 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!67650 () Bool)

(declare-fun res!36505 () Bool)

(assert (=> b!67650 (=> (not res!36505) (not e!44325))))

(assert (=> b!67650 (= res!36505 (not (contains!705 lt!29442 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67651 () Bool)

(assert (=> b!67651 (= e!44327 e!44331)))

(declare-fun c!9468 () Bool)

(assert (=> b!67651 (= c!9468 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67652 () Bool)

(declare-fun lt!29444 () Unit!1824)

(declare-fun lt!29445 () Unit!1824)

(assert (=> b!67652 (= lt!29444 lt!29445)))

(declare-fun lt!29448 () (_ BitVec 64))

(declare-fun lt!29447 () (_ BitVec 64))

(declare-fun lt!29446 () ListLongMap!1379)

(declare-fun lt!29443 () V!2913)

(assert (=> b!67652 (not (contains!705 (+!86 lt!29446 (tuple2!2083 lt!29447 lt!29443)) lt!29448))))

(assert (=> b!67652 (= lt!29445 (addStillNotContains!23 lt!29446 lt!29447 lt!29443 lt!29448))))

(assert (=> b!67652 (= lt!29448 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!67652 (= lt!29443 (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!67652 (= lt!29447 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!67652 (= lt!29446 call!5661)))

(assert (=> b!67652 (= e!44331 (+!86 call!5661 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1122 (select (arr!1827 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!319 (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!14397 () Bool)

(assert (=> d!14397 e!44325))

(declare-fun res!36508 () Bool)

(assert (=> d!14397 (=> (not res!36508) (not e!44325))))

(assert (=> d!14397 (= res!36508 (not (contains!705 lt!29442 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14397 (= lt!29442 e!44327)))

(declare-fun c!9466 () Bool)

(assert (=> d!14397 (= c!9466 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14397 (validMask!0 (mask!6081 (v!2478 (underlying!250 thiss!992))))))

(assert (=> d!14397 (= (getCurrentListMapNoExtraKeys!51 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (_values!2129 (v!2478 (underlying!250 thiss!992))) (mask!6081 (v!2478 (underlying!250 thiss!992))) (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) (minValue!2054 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992)))) lt!29442)))

(declare-fun b!67648 () Bool)

(assert (=> b!67648 (= e!44328 e!44329)))

(declare-fun c!9465 () Bool)

(assert (=> b!67648 (= c!9465 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14397 c!9466) b!67645))

(assert (= (and d!14397 (not c!9466)) b!67651))

(assert (= (and b!67651 c!9468) b!67652))

(assert (= (and b!67651 (not c!9468)) b!67641))

(assert (= (or b!67652 b!67641) bm!5658))

(assert (= (and d!14397 res!36508) b!67650))

(assert (= (and b!67650 res!36505) b!67642))

(assert (= (and b!67642 res!36507) b!67644))

(assert (= (and b!67642 c!9467) b!67643))

(assert (= (and b!67642 (not c!9467)) b!67648))

(assert (= (and b!67643 res!36506) b!67649))

(assert (= (and b!67648 c!9465) b!67646))

(assert (= (and b!67648 (not c!9465)) b!67647))

(declare-fun b_lambda!3031 () Bool)

(assert (=> (not b_lambda!3031) (not b!67649)))

(assert (=> b!67649 t!4925))

(declare-fun b_and!4181 () Bool)

(assert (= b_and!4177 (and (=> t!4925 result!2567) b_and!4181)))

(assert (=> b!67649 t!4927))

(declare-fun b_and!4183 () Bool)

(assert (= b_and!4179 (and (=> t!4927 result!2571) b_and!4183)))

(declare-fun b_lambda!3033 () Bool)

(assert (=> (not b_lambda!3033) (not b!67652)))

(assert (=> b!67652 t!4925))

(declare-fun b_and!4185 () Bool)

(assert (= b_and!4181 (and (=> t!4925 result!2567) b_and!4185)))

(assert (=> b!67652 t!4927))

(declare-fun b_and!4187 () Bool)

(assert (= b_and!4183 (and (=> t!4927 result!2571) b_and!4187)))

(declare-fun m!63089 () Bool)

(assert (=> b!67646 m!63089))

(declare-fun m!63091 () Bool)

(assert (=> d!14397 m!63091))

(assert (=> d!14397 m!60863))

(declare-fun m!63093 () Bool)

(assert (=> b!67644 m!63093))

(assert (=> b!67644 m!63093))

(declare-fun m!63095 () Bool)

(assert (=> b!67644 m!63095))

(assert (=> b!67649 m!63093))

(declare-fun m!63097 () Bool)

(assert (=> b!67649 m!63097))

(declare-fun m!63099 () Bool)

(assert (=> b!67649 m!63099))

(assert (=> b!67649 m!60879))

(declare-fun m!63101 () Bool)

(assert (=> b!67649 m!63101))

(assert (=> b!67649 m!63099))

(assert (=> b!67649 m!60879))

(assert (=> b!67649 m!63093))

(assert (=> b!67643 m!63093))

(assert (=> b!67643 m!63093))

(declare-fun m!63103 () Bool)

(assert (=> b!67643 m!63103))

(declare-fun m!63105 () Bool)

(assert (=> b!67650 m!63105))

(assert (=> bm!5658 m!63089))

(declare-fun m!63107 () Bool)

(assert (=> b!67647 m!63107))

(assert (=> b!67651 m!63093))

(assert (=> b!67651 m!63093))

(assert (=> b!67651 m!63095))

(declare-fun m!63109 () Bool)

(assert (=> b!67652 m!63109))

(assert (=> b!67652 m!60879))

(assert (=> b!67652 m!63093))

(declare-fun m!63111 () Bool)

(assert (=> b!67652 m!63111))

(declare-fun m!63113 () Bool)

(assert (=> b!67652 m!63113))

(assert (=> b!67652 m!63099))

(assert (=> b!67652 m!60879))

(assert (=> b!67652 m!63101))

(assert (=> b!67652 m!63109))

(declare-fun m!63115 () Bool)

(assert (=> b!67652 m!63115))

(assert (=> b!67652 m!63099))

(assert (=> bm!5616 d!14397))

(declare-fun d!14399 () Bool)

(assert (=> d!14399 (= (get!1127 (getValueByKey!131 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2484 (getValueByKey!131 (toList!705 lt!28667) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!13853 d!14399))

(assert (=> d!13853 d!14123))

(assert (=> b!66744 d!13751))

(declare-fun d!14401 () Bool)

(declare-fun lt!29449 () Bool)

(assert (=> d!14401 (= lt!29449 (select (content!72 (toList!705 lt!29060)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(declare-fun e!44333 () Bool)

(assert (=> d!14401 (= lt!29449 e!44333)))

(declare-fun res!36510 () Bool)

(assert (=> d!14401 (=> (not res!36510) (not e!44333))))

(assert (=> d!14401 (= res!36510 ((_ is Cons!1451) (toList!705 lt!29060)))))

(assert (=> d!14401 (= (contains!709 (toList!705 lt!29060) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) lt!29449)))

(declare-fun b!67653 () Bool)

(declare-fun e!44332 () Bool)

(assert (=> b!67653 (= e!44333 e!44332)))

(declare-fun res!36509 () Bool)

(assert (=> b!67653 (=> res!36509 e!44332)))

(assert (=> b!67653 (= res!36509 (= (h!2035 (toList!705 lt!29060)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(declare-fun b!67654 () Bool)

(assert (=> b!67654 (= e!44332 (contains!709 (t!4929 (toList!705 lt!29060)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(assert (= (and d!14401 res!36510) b!67653))

(assert (= (and b!67653 (not res!36509)) b!67654))

(declare-fun m!63117 () Bool)

(assert (=> d!14401 m!63117))

(declare-fun m!63119 () Bool)

(assert (=> d!14401 m!63119))

(declare-fun m!63121 () Bool)

(assert (=> b!67654 m!63121))

(assert (=> b!66914 d!14401))

(declare-fun d!14403 () Bool)

(declare-fun lt!29450 () Bool)

(assert (=> d!14403 (= lt!29450 (select (content!72 lt!29144) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(declare-fun e!44335 () Bool)

(assert (=> d!14403 (= lt!29450 e!44335)))

(declare-fun res!36512 () Bool)

(assert (=> d!14403 (=> (not res!36512) (not e!44335))))

(assert (=> d!14403 (= res!36512 ((_ is Cons!1451) lt!29144))))

(assert (=> d!14403 (= (contains!709 lt!29144 (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))) lt!29450)))

(declare-fun b!67655 () Bool)

(declare-fun e!44334 () Bool)

(assert (=> b!67655 (= e!44335 e!44334)))

(declare-fun res!36511 () Bool)

(assert (=> b!67655 (=> res!36511 e!44334)))

(assert (=> b!67655 (= res!36511 (= (h!2035 lt!29144) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(declare-fun b!67656 () Bool)

(assert (=> b!67656 (= e!44334 (contains!709 (t!4929 lt!29144) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(assert (= (and d!14403 res!36512) b!67655))

(assert (= (and b!67655 (not res!36511)) b!67656))

(declare-fun m!63123 () Bool)

(assert (=> d!14403 m!63123))

(declare-fun m!63125 () Bool)

(assert (=> d!14403 m!63125))

(declare-fun m!63127 () Bool)

(assert (=> b!67656 m!63127))

(assert (=> b!67062 d!14403))

(declare-fun d!14405 () Bool)

(declare-fun e!44336 () Bool)

(assert (=> d!14405 e!44336))

(declare-fun res!36514 () Bool)

(assert (=> d!14405 (=> (not res!36514) (not e!44336))))

(declare-fun lt!29453 () ListLongMap!1379)

(assert (=> d!14405 (= res!36514 (contains!705 lt!29453 (_1!1052 (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(declare-fun lt!29451 () List!1455)

(assert (=> d!14405 (= lt!29453 (ListLongMap!1380 lt!29451))))

(declare-fun lt!29452 () Unit!1824)

(declare-fun lt!29454 () Unit!1824)

(assert (=> d!14405 (= lt!29452 lt!29454)))

(assert (=> d!14405 (= (getValueByKey!131 lt!29451 (_1!1052 (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14405 (= lt!29454 (lemmaContainsTupThenGetReturnValue!48 lt!29451 (_1!1052 (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (_2!1052 (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14405 (= lt!29451 (insertStrictlySorted!51 (toList!705 (ite c!9230 call!5568 (ite c!9232 call!5572 call!5569))) (_1!1052 (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (_2!1052 (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(assert (=> d!14405 (= (+!86 (ite c!9230 call!5568 (ite c!9232 call!5572 call!5569)) (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) lt!29453)))

(declare-fun b!67657 () Bool)

(declare-fun res!36513 () Bool)

(assert (=> b!67657 (=> (not res!36513) (not e!44336))))

(assert (=> b!67657 (= res!36513 (= (getValueByKey!131 (toList!705 lt!29453) (_1!1052 (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))))

(declare-fun b!67658 () Bool)

(assert (=> b!67658 (= e!44336 (contains!709 (toList!705 lt!29453) (ite (or c!9230 c!9232) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (= (and d!14405 res!36514) b!67657))

(assert (= (and b!67657 res!36513) b!67658))

(declare-fun m!63129 () Bool)

(assert (=> d!14405 m!63129))

(declare-fun m!63131 () Bool)

(assert (=> d!14405 m!63131))

(declare-fun m!63133 () Bool)

(assert (=> d!14405 m!63133))

(declare-fun m!63135 () Bool)

(assert (=> d!14405 m!63135))

(declare-fun m!63137 () Bool)

(assert (=> b!67657 m!63137))

(declare-fun m!63139 () Bool)

(assert (=> b!67658 m!63139))

(assert (=> bm!5565 d!14405))

(declare-fun d!14407 () Bool)

(declare-fun e!44337 () Bool)

(assert (=> d!14407 e!44337))

(declare-fun res!36516 () Bool)

(assert (=> d!14407 (=> (not res!36516) (not e!44337))))

(declare-fun lt!29457 () ListLongMap!1379)

(assert (=> d!14407 (= res!36516 (contains!705 lt!29457 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun lt!29455 () List!1455)

(assert (=> d!14407 (= lt!29457 (ListLongMap!1380 lt!29455))))

(declare-fun lt!29456 () Unit!1824)

(declare-fun lt!29458 () Unit!1824)

(assert (=> d!14407 (= lt!29456 lt!29458)))

(assert (=> d!14407 (= (getValueByKey!131 lt!29455 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14407 (= lt!29458 (lemmaContainsTupThenGetReturnValue!48 lt!29455 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14407 (= lt!29455 (insertStrictlySorted!51 (toList!705 call!5594) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14407 (= (+!86 call!5594 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) lt!29457)))

(declare-fun b!67659 () Bool)

(declare-fun res!36515 () Bool)

(assert (=> b!67659 (=> (not res!36515) (not e!44337))))

(assert (=> b!67659 (= res!36515 (= (getValueByKey!131 (toList!705 lt!29457) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(declare-fun b!67660 () Bool)

(assert (=> b!67660 (= e!44337 (contains!709 (toList!705 lt!29457) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(assert (= (and d!14407 res!36516) b!67659))

(assert (= (and b!67659 res!36515) b!67660))

(declare-fun m!63141 () Bool)

(assert (=> d!14407 m!63141))

(declare-fun m!63143 () Bool)

(assert (=> d!14407 m!63143))

(declare-fun m!63145 () Bool)

(assert (=> d!14407 m!63145))

(declare-fun m!63147 () Bool)

(assert (=> d!14407 m!63147))

(declare-fun m!63149 () Bool)

(assert (=> b!67659 m!63149))

(declare-fun m!63151 () Bool)

(assert (=> b!67660 m!63151))

(assert (=> b!66934 d!14407))

(declare-fun d!14409 () Bool)

(declare-fun res!36517 () Bool)

(declare-fun e!44338 () Bool)

(assert (=> d!14409 (=> res!36517 e!44338)))

(assert (=> d!14409 (= res!36517 (and ((_ is Cons!1451) lt!28689) (= (_1!1052 (h!2035 lt!28689)) (_1!1052 lt!28528))))))

(assert (=> d!14409 (= (containsKey!134 lt!28689 (_1!1052 lt!28528)) e!44338)))

(declare-fun b!67661 () Bool)

(declare-fun e!44339 () Bool)

(assert (=> b!67661 (= e!44338 e!44339)))

(declare-fun res!36518 () Bool)

(assert (=> b!67661 (=> (not res!36518) (not e!44339))))

(assert (=> b!67661 (= res!36518 (and (or (not ((_ is Cons!1451) lt!28689)) (bvsle (_1!1052 (h!2035 lt!28689)) (_1!1052 lt!28528))) ((_ is Cons!1451) lt!28689) (bvslt (_1!1052 (h!2035 lt!28689)) (_1!1052 lt!28528))))))

(declare-fun b!67662 () Bool)

(assert (=> b!67662 (= e!44339 (containsKey!134 (t!4929 lt!28689) (_1!1052 lt!28528)))))

(assert (= (and d!14409 (not res!36517)) b!67661))

(assert (= (and b!67661 res!36518) b!67662))

(declare-fun m!63153 () Bool)

(assert (=> b!67662 m!63153))

(assert (=> b!66979 d!14409))

(declare-fun d!14411 () Bool)

(assert (=> d!14411 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28691) (_1!1052 lt!28528))) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28691) (_1!1052 lt!28528)))))))

(declare-fun bs!2930 () Bool)

(assert (= bs!2930 d!14411))

(assert (=> bs!2930 m!61091))

(declare-fun m!63155 () Bool)

(assert (=> bs!2930 m!63155))

(assert (=> b!66970 d!14411))

(assert (=> b!66970 d!13961))

(declare-fun b!67663 () Bool)

(declare-fun e!44342 () Bool)

(declare-fun call!5662 () Bool)

(assert (=> b!67663 (= e!44342 call!5662)))

(declare-fun b!67664 () Bool)

(declare-fun e!44340 () Bool)

(assert (=> b!67664 (= e!44340 e!44342)))

(declare-fun c!9469 () Bool)

(assert (=> b!67664 (= c!9469 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000)))))

(declare-fun b!67665 () Bool)

(declare-fun e!44341 () Bool)

(assert (=> b!67665 (= e!44341 call!5662)))

(declare-fun d!14413 () Bool)

(declare-fun res!36519 () Bool)

(assert (=> d!14413 (=> res!36519 e!44340)))

(assert (=> d!14413 (= res!36519 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))))))

(assert (=> d!14413 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3786 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794))) e!44340)))

(declare-fun b!67666 () Bool)

(assert (=> b!67666 (= e!44342 e!44341)))

(declare-fun lt!29460 () (_ BitVec 64))

(assert (=> b!67666 (= lt!29460 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000))))

(declare-fun lt!29459 () Unit!1824)

(assert (=> b!67666 (= lt!29459 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3786 (_2!1051 lt!28794)) lt!29460 #b00000000000000000000000000000000))))

(assert (=> b!67666 (arrayContainsKey!0 (_keys!3786 (_2!1051 lt!28794)) lt!29460 #b00000000000000000000000000000000)))

(declare-fun lt!29461 () Unit!1824)

(assert (=> b!67666 (= lt!29461 lt!29459)))

(declare-fun res!36520 () Bool)

(assert (=> b!67666 (= res!36520 (= (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000) (_keys!3786 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794))) (Found!227 #b00000000000000000000000000000000)))))

(assert (=> b!67666 (=> (not res!36520) (not e!44341))))

(declare-fun bm!5659 () Bool)

(assert (=> bm!5659 (= call!5662 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3786 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794))))))

(assert (= (and d!14413 (not res!36519)) b!67664))

(assert (= (and b!67664 c!9469) b!67666))

(assert (= (and b!67664 (not c!9469)) b!67663))

(assert (= (and b!67666 res!36520) b!67665))

(assert (= (or b!67665 b!67663) bm!5659))

(assert (=> b!67664 m!62851))

(assert (=> b!67664 m!62851))

(assert (=> b!67664 m!62853))

(assert (=> b!67666 m!62851))

(declare-fun m!63157 () Bool)

(assert (=> b!67666 m!63157))

(declare-fun m!63159 () Bool)

(assert (=> b!67666 m!63159))

(assert (=> b!67666 m!62851))

(declare-fun m!63161 () Bool)

(assert (=> b!67666 m!63161))

(declare-fun m!63163 () Bool)

(assert (=> bm!5659 m!63163))

(assert (=> b!67031 d!14413))

(declare-fun d!14415 () Bool)

(declare-fun e!44343 () Bool)

(assert (=> d!14415 e!44343))

(declare-fun res!36521 () Bool)

(assert (=> d!14415 (=> res!36521 e!44343)))

(declare-fun lt!29462 () Bool)

(assert (=> d!14415 (= res!36521 (not lt!29462))))

(declare-fun lt!29465 () Bool)

(assert (=> d!14415 (= lt!29462 lt!29465)))

(declare-fun lt!29464 () Unit!1824)

(declare-fun e!44344 () Unit!1824)

(assert (=> d!14415 (= lt!29464 e!44344)))

(declare-fun c!9470 () Bool)

(assert (=> d!14415 (= c!9470 lt!29465)))

(assert (=> d!14415 (= lt!29465 (containsKey!134 (toList!705 lt!29130) (_1!1052 (tuple2!2083 lt!28712 lt!28708))))))

(assert (=> d!14415 (= (contains!705 lt!29130 (_1!1052 (tuple2!2083 lt!28712 lt!28708))) lt!29462)))

(declare-fun b!67667 () Bool)

(declare-fun lt!29463 () Unit!1824)

(assert (=> b!67667 (= e!44344 lt!29463)))

(assert (=> b!67667 (= lt!29463 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29130) (_1!1052 (tuple2!2083 lt!28712 lt!28708))))))

(assert (=> b!67667 (isDefined!83 (getValueByKey!131 (toList!705 lt!29130) (_1!1052 (tuple2!2083 lt!28712 lt!28708))))))

(declare-fun b!67668 () Bool)

(declare-fun Unit!1881 () Unit!1824)

(assert (=> b!67668 (= e!44344 Unit!1881)))

(declare-fun b!67669 () Bool)

(assert (=> b!67669 (= e!44343 (isDefined!83 (getValueByKey!131 (toList!705 lt!29130) (_1!1052 (tuple2!2083 lt!28712 lt!28708)))))))

(assert (= (and d!14415 c!9470) b!67667))

(assert (= (and d!14415 (not c!9470)) b!67668))

(assert (= (and d!14415 (not res!36521)) b!67669))

(declare-fun m!63165 () Bool)

(assert (=> d!14415 m!63165))

(declare-fun m!63167 () Bool)

(assert (=> b!67667 m!63167))

(assert (=> b!67667 m!61883))

(assert (=> b!67667 m!61883))

(declare-fun m!63169 () Bool)

(assert (=> b!67667 m!63169))

(assert (=> b!67669 m!61883))

(assert (=> b!67669 m!61883))

(assert (=> b!67669 m!63169))

(assert (=> d!13923 d!14415))

(declare-fun e!44346 () Option!137)

(declare-fun b!67672 () Bool)

(assert (=> b!67672 (= e!44346 (getValueByKey!131 (t!4929 lt!29128) (_1!1052 (tuple2!2083 lt!28712 lt!28708))))))

(declare-fun b!67670 () Bool)

(declare-fun e!44345 () Option!137)

(assert (=> b!67670 (= e!44345 (Some!136 (_2!1052 (h!2035 lt!29128))))))

(declare-fun d!14417 () Bool)

(declare-fun c!9471 () Bool)

(assert (=> d!14417 (= c!9471 (and ((_ is Cons!1451) lt!29128) (= (_1!1052 (h!2035 lt!29128)) (_1!1052 (tuple2!2083 lt!28712 lt!28708)))))))

(assert (=> d!14417 (= (getValueByKey!131 lt!29128 (_1!1052 (tuple2!2083 lt!28712 lt!28708))) e!44345)))

(declare-fun b!67673 () Bool)

(assert (=> b!67673 (= e!44346 None!135)))

(declare-fun b!67671 () Bool)

(assert (=> b!67671 (= e!44345 e!44346)))

(declare-fun c!9472 () Bool)

(assert (=> b!67671 (= c!9472 (and ((_ is Cons!1451) lt!29128) (not (= (_1!1052 (h!2035 lt!29128)) (_1!1052 (tuple2!2083 lt!28712 lt!28708))))))))

(assert (= (and d!14417 c!9471) b!67670))

(assert (= (and d!14417 (not c!9471)) b!67671))

(assert (= (and b!67671 c!9472) b!67672))

(assert (= (and b!67671 (not c!9472)) b!67673))

(declare-fun m!63171 () Bool)

(assert (=> b!67672 m!63171))

(assert (=> d!13923 d!14417))

(declare-fun d!14419 () Bool)

(assert (=> d!14419 (= (getValueByKey!131 lt!29128 (_1!1052 (tuple2!2083 lt!28712 lt!28708))) (Some!136 (_2!1052 (tuple2!2083 lt!28712 lt!28708))))))

(declare-fun lt!29466 () Unit!1824)

(assert (=> d!14419 (= lt!29466 (choose!380 lt!29128 (_1!1052 (tuple2!2083 lt!28712 lt!28708)) (_2!1052 (tuple2!2083 lt!28712 lt!28708))))))

(declare-fun e!44347 () Bool)

(assert (=> d!14419 e!44347))

(declare-fun res!36522 () Bool)

(assert (=> d!14419 (=> (not res!36522) (not e!44347))))

(assert (=> d!14419 (= res!36522 (isStrictlySorted!276 lt!29128))))

(assert (=> d!14419 (= (lemmaContainsTupThenGetReturnValue!48 lt!29128 (_1!1052 (tuple2!2083 lt!28712 lt!28708)) (_2!1052 (tuple2!2083 lt!28712 lt!28708))) lt!29466)))

(declare-fun b!67674 () Bool)

(declare-fun res!36523 () Bool)

(assert (=> b!67674 (=> (not res!36523) (not e!44347))))

(assert (=> b!67674 (= res!36523 (containsKey!134 lt!29128 (_1!1052 (tuple2!2083 lt!28712 lt!28708))))))

(declare-fun b!67675 () Bool)

(assert (=> b!67675 (= e!44347 (contains!709 lt!29128 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28712 lt!28708)) (_2!1052 (tuple2!2083 lt!28712 lt!28708)))))))

(assert (= (and d!14419 res!36522) b!67674))

(assert (= (and b!67674 res!36523) b!67675))

(assert (=> d!14419 m!61877))

(declare-fun m!63173 () Bool)

(assert (=> d!14419 m!63173))

(declare-fun m!63175 () Bool)

(assert (=> d!14419 m!63175))

(declare-fun m!63177 () Bool)

(assert (=> b!67674 m!63177))

(declare-fun m!63179 () Bool)

(assert (=> b!67675 m!63179))

(assert (=> d!13923 d!14419))

(declare-fun b!67676 () Bool)

(declare-fun e!44352 () List!1455)

(declare-fun call!5663 () List!1455)

(assert (=> b!67676 (= e!44352 call!5663)))

(declare-fun b!67677 () Bool)

(declare-fun e!44348 () List!1455)

(declare-fun e!44350 () List!1455)

(assert (=> b!67677 (= e!44348 e!44350)))

(declare-fun c!9475 () Bool)

(assert (=> b!67677 (= c!9475 (and ((_ is Cons!1451) (toList!705 lt!28711)) (= (_1!1052 (h!2035 (toList!705 lt!28711))) (_1!1052 (tuple2!2083 lt!28712 lt!28708)))))))

(declare-fun b!67678 () Bool)

(declare-fun res!36524 () Bool)

(declare-fun e!44351 () Bool)

(assert (=> b!67678 (=> (not res!36524) (not e!44351))))

(declare-fun lt!29467 () List!1455)

(assert (=> b!67678 (= res!36524 (containsKey!134 lt!29467 (_1!1052 (tuple2!2083 lt!28712 lt!28708))))))

(declare-fun bm!5660 () Bool)

(declare-fun call!5665 () List!1455)

(assert (=> bm!5660 (= call!5663 call!5665)))

(declare-fun b!67679 () Bool)

(declare-fun call!5664 () List!1455)

(assert (=> b!67679 (= e!44348 call!5664)))

(declare-fun b!67680 () Bool)

(declare-fun c!9476 () Bool)

(assert (=> b!67680 (= c!9476 (and ((_ is Cons!1451) (toList!705 lt!28711)) (bvsgt (_1!1052 (h!2035 (toList!705 lt!28711))) (_1!1052 (tuple2!2083 lt!28712 lt!28708)))))))

(assert (=> b!67680 (= e!44350 e!44352)))

(declare-fun e!44349 () List!1455)

(declare-fun b!67681 () Bool)

(assert (=> b!67681 (= e!44349 (ite c!9475 (t!4929 (toList!705 lt!28711)) (ite c!9476 (Cons!1451 (h!2035 (toList!705 lt!28711)) (t!4929 (toList!705 lt!28711))) Nil!1452)))))

(declare-fun d!14421 () Bool)

(assert (=> d!14421 e!44351))

(declare-fun res!36525 () Bool)

(assert (=> d!14421 (=> (not res!36525) (not e!44351))))

(assert (=> d!14421 (= res!36525 (isStrictlySorted!276 lt!29467))))

(assert (=> d!14421 (= lt!29467 e!44348)))

(declare-fun c!9473 () Bool)

(assert (=> d!14421 (= c!9473 (and ((_ is Cons!1451) (toList!705 lt!28711)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28711))) (_1!1052 (tuple2!2083 lt!28712 lt!28708)))))))

(assert (=> d!14421 (isStrictlySorted!276 (toList!705 lt!28711))))

(assert (=> d!14421 (= (insertStrictlySorted!51 (toList!705 lt!28711) (_1!1052 (tuple2!2083 lt!28712 lt!28708)) (_2!1052 (tuple2!2083 lt!28712 lt!28708))) lt!29467)))

(declare-fun b!67682 () Bool)

(assert (=> b!67682 (= e!44349 (insertStrictlySorted!51 (t!4929 (toList!705 lt!28711)) (_1!1052 (tuple2!2083 lt!28712 lt!28708)) (_2!1052 (tuple2!2083 lt!28712 lt!28708))))))

(declare-fun b!67683 () Bool)

(assert (=> b!67683 (= e!44350 call!5665)))

(declare-fun bm!5661 () Bool)

(assert (=> bm!5661 (= call!5665 call!5664)))

(declare-fun b!67684 () Bool)

(assert (=> b!67684 (= e!44352 call!5663)))

(declare-fun bm!5662 () Bool)

(assert (=> bm!5662 (= call!5664 ($colon$colon!62 e!44349 (ite c!9473 (h!2035 (toList!705 lt!28711)) (tuple2!2083 (_1!1052 (tuple2!2083 lt!28712 lt!28708)) (_2!1052 (tuple2!2083 lt!28712 lt!28708))))))))

(declare-fun c!9474 () Bool)

(assert (=> bm!5662 (= c!9474 c!9473)))

(declare-fun b!67685 () Bool)

(assert (=> b!67685 (= e!44351 (contains!709 lt!29467 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28712 lt!28708)) (_2!1052 (tuple2!2083 lt!28712 lt!28708)))))))

(assert (= (and d!14421 c!9473) b!67679))

(assert (= (and d!14421 (not c!9473)) b!67677))

(assert (= (and b!67677 c!9475) b!67683))

(assert (= (and b!67677 (not c!9475)) b!67680))

(assert (= (and b!67680 c!9476) b!67676))

(assert (= (and b!67680 (not c!9476)) b!67684))

(assert (= (or b!67676 b!67684) bm!5660))

(assert (= (or b!67683 bm!5660) bm!5661))

(assert (= (or b!67679 bm!5661) bm!5662))

(assert (= (and bm!5662 c!9474) b!67682))

(assert (= (and bm!5662 (not c!9474)) b!67681))

(assert (= (and d!14421 res!36525) b!67678))

(assert (= (and b!67678 res!36524) b!67685))

(declare-fun m!63181 () Bool)

(assert (=> bm!5662 m!63181))

(declare-fun m!63183 () Bool)

(assert (=> b!67682 m!63183))

(declare-fun m!63185 () Bool)

(assert (=> b!67678 m!63185))

(declare-fun m!63187 () Bool)

(assert (=> b!67685 m!63187))

(declare-fun m!63189 () Bool)

(assert (=> d!14421 m!63189))

(declare-fun m!63191 () Bool)

(assert (=> d!14421 m!63191))

(assert (=> d!13923 d!14421))

(declare-fun d!14423 () Bool)

(declare-fun lt!29468 () Bool)

(assert (=> d!14423 (= lt!29468 (select (content!72 lt!29115) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(declare-fun e!44354 () Bool)

(assert (=> d!14423 (= lt!29468 e!44354)))

(declare-fun res!36527 () Bool)

(assert (=> d!14423 (=> (not res!36527) (not e!44354))))

(assert (=> d!14423 (= res!36527 ((_ is Cons!1451) lt!29115))))

(assert (=> d!14423 (= (contains!709 lt!29115 (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))) lt!29468)))

(declare-fun b!67686 () Bool)

(declare-fun e!44353 () Bool)

(assert (=> b!67686 (= e!44354 e!44353)))

(declare-fun res!36526 () Bool)

(assert (=> b!67686 (=> res!36526 e!44353)))

(assert (=> b!67686 (= res!36526 (= (h!2035 lt!29115) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(declare-fun b!67687 () Bool)

(assert (=> b!67687 (= e!44353 (contains!709 (t!4929 lt!29115) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(assert (= (and d!14423 res!36527) b!67686))

(assert (= (and b!67686 (not res!36526)) b!67687))

(declare-fun m!63193 () Bool)

(assert (=> d!14423 m!63193))

(declare-fun m!63195 () Bool)

(assert (=> d!14423 m!63195))

(declare-fun m!63197 () Bool)

(assert (=> b!67687 m!63197))

(assert (=> b!67010 d!14423))

(assert (=> bm!5559 d!13929))

(declare-fun d!14425 () Bool)

(assert (=> d!14425 (= (apply!72 (+!86 lt!28674 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28660) (apply!72 lt!28674 lt!28660))))

(assert (=> d!14425 true))

(declare-fun _$34!786 () Unit!1824)

(assert (=> d!14425 (= (choose!376 lt!28674 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28660) _$34!786)))

(declare-fun bs!2931 () Bool)

(assert (= bs!2931 d!14425))

(assert (=> bs!2931 m!61043))

(assert (=> bs!2931 m!61043))

(assert (=> bs!2931 m!61045))

(assert (=> bs!2931 m!61047))

(assert (=> d!13819 d!14425))

(assert (=> d!13819 d!13817))

(declare-fun d!14427 () Bool)

(declare-fun e!44355 () Bool)

(assert (=> d!14427 e!44355))

(declare-fun res!36528 () Bool)

(assert (=> d!14427 (=> res!36528 e!44355)))

(declare-fun lt!29469 () Bool)

(assert (=> d!14427 (= res!36528 (not lt!29469))))

(declare-fun lt!29472 () Bool)

(assert (=> d!14427 (= lt!29469 lt!29472)))

(declare-fun lt!29471 () Unit!1824)

(declare-fun e!44356 () Unit!1824)

(assert (=> d!14427 (= lt!29471 e!44356)))

(declare-fun c!9477 () Bool)

(assert (=> d!14427 (= c!9477 lt!29472)))

(assert (=> d!14427 (= lt!29472 (containsKey!134 (toList!705 lt!28674) lt!28660))))

(assert (=> d!14427 (= (contains!705 lt!28674 lt!28660) lt!29469)))

(declare-fun b!67689 () Bool)

(declare-fun lt!29470 () Unit!1824)

(assert (=> b!67689 (= e!44356 lt!29470)))

(assert (=> b!67689 (= lt!29470 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28674) lt!28660))))

(assert (=> b!67689 (isDefined!83 (getValueByKey!131 (toList!705 lt!28674) lt!28660))))

(declare-fun b!67690 () Bool)

(declare-fun Unit!1882 () Unit!1824)

(assert (=> b!67690 (= e!44356 Unit!1882)))

(declare-fun b!67691 () Bool)

(assert (=> b!67691 (= e!44355 (isDefined!83 (getValueByKey!131 (toList!705 lt!28674) lt!28660)))))

(assert (= (and d!14427 c!9477) b!67689))

(assert (= (and d!14427 (not c!9477)) b!67690))

(assert (= (and d!14427 (not res!36528)) b!67691))

(declare-fun m!63199 () Bool)

(assert (=> d!14427 m!63199))

(declare-fun m!63201 () Bool)

(assert (=> b!67689 m!63201))

(assert (=> b!67689 m!61427))

(assert (=> b!67689 m!61427))

(declare-fun m!63203 () Bool)

(assert (=> b!67689 m!63203))

(assert (=> b!67691 m!61427))

(assert (=> b!67691 m!61427))

(assert (=> b!67691 m!63203))

(assert (=> d!13819 d!14427))

(assert (=> d!13819 d!13823))

(assert (=> d!13819 d!13839))

(assert (=> b!66865 d!13861))

(declare-fun d!14429 () Bool)

(assert (=> d!14429 (= (apply!72 lt!28971 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!705 lt!28971) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2932 () Bool)

(assert (= bs!2932 d!14429))

(assert (=> bs!2932 m!62181))

(assert (=> bs!2932 m!62181))

(declare-fun m!63205 () Bool)

(assert (=> bs!2932 m!63205))

(assert (=> b!66789 d!14429))

(assert (=> bm!5596 d!14045))

(declare-fun b!67694 () Bool)

(declare-fun e!44358 () Option!137)

(assert (=> b!67694 (= e!44358 (getValueByKey!131 (t!4929 (t!4929 (toList!705 lt!28687))) (_1!1052 lt!28520)))))

(declare-fun b!67692 () Bool)

(declare-fun e!44357 () Option!137)

(assert (=> b!67692 (= e!44357 (Some!136 (_2!1052 (h!2035 (t!4929 (toList!705 lt!28687))))))))

(declare-fun d!14431 () Bool)

(declare-fun c!9478 () Bool)

(assert (=> d!14431 (= c!9478 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28687))) (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28687)))) (_1!1052 lt!28520))))))

(assert (=> d!14431 (= (getValueByKey!131 (t!4929 (toList!705 lt!28687)) (_1!1052 lt!28520)) e!44357)))

(declare-fun b!67695 () Bool)

(assert (=> b!67695 (= e!44358 None!135)))

(declare-fun b!67693 () Bool)

(assert (=> b!67693 (= e!44357 e!44358)))

(declare-fun c!9479 () Bool)

(assert (=> b!67693 (= c!9479 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28687))) (not (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28687)))) (_1!1052 lt!28520)))))))

(assert (= (and d!14431 c!9478) b!67692))

(assert (= (and d!14431 (not c!9478)) b!67693))

(assert (= (and b!67693 c!9479) b!67694))

(assert (= (and b!67693 (not c!9479)) b!67695))

(declare-fun m!63207 () Bool)

(assert (=> b!67694 m!63207))

(assert (=> b!66888 d!14431))

(assert (=> d!13899 d!14103))

(declare-fun d!14433 () Bool)

(declare-fun e!44359 () Bool)

(assert (=> d!14433 e!44359))

(declare-fun res!36529 () Bool)

(assert (=> d!14433 (=> res!36529 e!44359)))

(declare-fun lt!29473 () Bool)

(assert (=> d!14433 (= res!36529 (not lt!29473))))

(declare-fun lt!29476 () Bool)

(assert (=> d!14433 (= lt!29473 lt!29476)))

(declare-fun lt!29475 () Unit!1824)

(declare-fun e!44360 () Unit!1824)

(assert (=> d!14433 (= lt!29475 e!44360)))

(declare-fun c!9480 () Bool)

(assert (=> d!14433 (= c!9480 lt!29476)))

(assert (=> d!14433 (= lt!29476 (containsKey!134 (toList!705 lt!29006) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14433 (= (contains!705 lt!29006 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29473)))

(declare-fun b!67696 () Bool)

(declare-fun lt!29474 () Unit!1824)

(assert (=> b!67696 (= e!44360 lt!29474)))

(assert (=> b!67696 (= lt!29474 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29006) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67696 (isDefined!83 (getValueByKey!131 (toList!705 lt!29006) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67697 () Bool)

(declare-fun Unit!1883 () Unit!1824)

(assert (=> b!67697 (= e!44360 Unit!1883)))

(declare-fun b!67698 () Bool)

(assert (=> b!67698 (= e!44359 (isDefined!83 (getValueByKey!131 (toList!705 lt!29006) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14433 c!9480) b!67696))

(assert (= (and d!14433 (not c!9480)) b!67697))

(assert (= (and d!14433 (not res!36529)) b!67698))

(declare-fun m!63209 () Bool)

(assert (=> d!14433 m!63209))

(declare-fun m!63211 () Bool)

(assert (=> b!67696 m!63211))

(declare-fun m!63213 () Bool)

(assert (=> b!67696 m!63213))

(assert (=> b!67696 m!63213))

(declare-fun m!63215 () Bool)

(assert (=> b!67696 m!63215))

(assert (=> b!67698 m!63213))

(assert (=> b!67698 m!63213))

(assert (=> b!67698 m!63215))

(assert (=> bm!5577 d!14433))

(declare-fun d!14435 () Bool)

(declare-fun e!44361 () Bool)

(assert (=> d!14435 e!44361))

(declare-fun res!36530 () Bool)

(assert (=> d!14435 (=> res!36530 e!44361)))

(declare-fun lt!29477 () Bool)

(assert (=> d!14435 (= res!36530 (not lt!29477))))

(declare-fun lt!29480 () Bool)

(assert (=> d!14435 (= lt!29477 lt!29480)))

(declare-fun lt!29479 () Unit!1824)

(declare-fun e!44362 () Unit!1824)

(assert (=> d!14435 (= lt!29479 e!44362)))

(declare-fun c!9481 () Bool)

(assert (=> d!14435 (= c!9481 lt!29480)))

(assert (=> d!14435 (= lt!29480 (containsKey!134 (toList!705 lt!29060) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!14435 (= (contains!705 lt!29060 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!29477)))

(declare-fun b!67699 () Bool)

(declare-fun lt!29478 () Unit!1824)

(assert (=> b!67699 (= e!44362 lt!29478)))

(assert (=> b!67699 (= lt!29478 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29060) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> b!67699 (isDefined!83 (getValueByKey!131 (toList!705 lt!29060) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!67700 () Bool)

(declare-fun Unit!1884 () Unit!1824)

(assert (=> b!67700 (= e!44362 Unit!1884)))

(declare-fun b!67701 () Bool)

(assert (=> b!67701 (= e!44361 (isDefined!83 (getValueByKey!131 (toList!705 lt!29060) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (= (and d!14435 c!9481) b!67699))

(assert (= (and d!14435 (not c!9481)) b!67700))

(assert (= (and d!14435 (not res!36530)) b!67701))

(declare-fun m!63217 () Bool)

(assert (=> d!14435 m!63217))

(declare-fun m!63219 () Bool)

(assert (=> b!67699 m!63219))

(assert (=> b!67699 m!61713))

(assert (=> b!67699 m!61713))

(declare-fun m!63221 () Bool)

(assert (=> b!67699 m!63221))

(assert (=> b!67701 m!61713))

(assert (=> b!67701 m!61713))

(assert (=> b!67701 m!63221))

(assert (=> d!13891 d!14435))

(declare-fun e!44364 () Option!137)

(declare-fun b!67704 () Bool)

(assert (=> b!67704 (= e!44364 (getValueByKey!131 (t!4929 lt!29058) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!67702 () Bool)

(declare-fun e!44363 () Option!137)

(assert (=> b!67702 (= e!44363 (Some!136 (_2!1052 (h!2035 lt!29058))))))

(declare-fun d!14437 () Bool)

(declare-fun c!9482 () Bool)

(assert (=> d!14437 (= c!9482 (and ((_ is Cons!1451) lt!29058) (= (_1!1052 (h!2035 lt!29058)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!14437 (= (getValueByKey!131 lt!29058 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) e!44363)))

(declare-fun b!67705 () Bool)

(assert (=> b!67705 (= e!44364 None!135)))

(declare-fun b!67703 () Bool)

(assert (=> b!67703 (= e!44363 e!44364)))

(declare-fun c!9483 () Bool)

(assert (=> b!67703 (= c!9483 (and ((_ is Cons!1451) lt!29058) (not (= (_1!1052 (h!2035 lt!29058)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (= (and d!14437 c!9482) b!67702))

(assert (= (and d!14437 (not c!9482)) b!67703))

(assert (= (and b!67703 c!9483) b!67704))

(assert (= (and b!67703 (not c!9483)) b!67705))

(declare-fun m!63223 () Bool)

(assert (=> b!67704 m!63223))

(assert (=> d!13891 d!14437))

(declare-fun d!14439 () Bool)

(assert (=> d!14439 (= (getValueByKey!131 lt!29058 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun lt!29481 () Unit!1824)

(assert (=> d!14439 (= lt!29481 (choose!380 lt!29058 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun e!44365 () Bool)

(assert (=> d!14439 e!44365))

(declare-fun res!36531 () Bool)

(assert (=> d!14439 (=> (not res!36531) (not e!44365))))

(assert (=> d!14439 (= res!36531 (isStrictlySorted!276 lt!29058))))

(assert (=> d!14439 (= (lemmaContainsTupThenGetReturnValue!48 lt!29058 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!29481)))

(declare-fun b!67706 () Bool)

(declare-fun res!36532 () Bool)

(assert (=> b!67706 (=> (not res!36532) (not e!44365))))

(assert (=> b!67706 (= res!36532 (containsKey!134 lt!29058 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!67707 () Bool)

(assert (=> b!67707 (= e!44365 (contains!709 lt!29058 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (= (and d!14439 res!36531) b!67706))

(assert (= (and b!67706 res!36532) b!67707))

(assert (=> d!14439 m!61707))

(declare-fun m!63225 () Bool)

(assert (=> d!14439 m!63225))

(declare-fun m!63227 () Bool)

(assert (=> d!14439 m!63227))

(declare-fun m!63229 () Bool)

(assert (=> b!67706 m!63229))

(declare-fun m!63231 () Bool)

(assert (=> b!67707 m!63231))

(assert (=> d!13891 d!14439))

(declare-fun b!67708 () Bool)

(declare-fun e!44370 () List!1455)

(declare-fun call!5666 () List!1455)

(assert (=> b!67708 (= e!44370 call!5666)))

(declare-fun b!67709 () Bool)

(declare-fun e!44366 () List!1455)

(declare-fun e!44368 () List!1455)

(assert (=> b!67709 (= e!44366 e!44368)))

(declare-fun c!9486 () Bool)

(assert (=> b!67709 (= c!9486 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!67710 () Bool)

(declare-fun res!36533 () Bool)

(declare-fun e!44369 () Bool)

(assert (=> b!67710 (=> (not res!36533) (not e!44369))))

(declare-fun lt!29482 () List!1455)

(assert (=> b!67710 (= res!36533 (containsKey!134 lt!29482 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun bm!5663 () Bool)

(declare-fun call!5668 () List!1455)

(assert (=> bm!5663 (= call!5666 call!5668)))

(declare-fun b!67711 () Bool)

(declare-fun call!5667 () List!1455)

(assert (=> b!67711 (= e!44366 call!5667)))

(declare-fun c!9487 () Bool)

(declare-fun b!67712 () Bool)

(assert (=> b!67712 (= c!9487 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (bvsgt (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> b!67712 (= e!44368 e!44370)))

(declare-fun b!67713 () Bool)

(declare-fun e!44367 () List!1455)

(assert (=> b!67713 (= e!44367 (ite c!9486 (t!4929 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (ite c!9487 (Cons!1451 (h!2035 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (t!4929 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) Nil!1452)))))

(declare-fun d!14441 () Bool)

(assert (=> d!14441 e!44369))

(declare-fun res!36534 () Bool)

(assert (=> d!14441 (=> (not res!36534) (not e!44369))))

(assert (=> d!14441 (= res!36534 (isStrictlySorted!276 lt!29482))))

(assert (=> d!14441 (= lt!29482 e!44366)))

(declare-fun c!9484 () Bool)

(assert (=> d!14441 (= c!9484 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (bvslt (_1!1052 (h!2035 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!14441 (isStrictlySorted!276 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14441 (= (insertStrictlySorted!51 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!29482)))

(declare-fun b!67714 () Bool)

(assert (=> b!67714 (= e!44367 (insertStrictlySorted!51 (t!4929 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!67715 () Bool)

(assert (=> b!67715 (= e!44368 call!5668)))

(declare-fun bm!5664 () Bool)

(assert (=> bm!5664 (= call!5668 call!5667)))

(declare-fun b!67716 () Bool)

(assert (=> b!67716 (= e!44370 call!5666)))

(declare-fun bm!5665 () Bool)

(assert (=> bm!5665 (= call!5667 ($colon$colon!62 e!44367 (ite c!9484 (h!2035 (toList!705 (+!86 lt!28527 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(declare-fun c!9485 () Bool)

(assert (=> bm!5665 (= c!9485 c!9484)))

(declare-fun b!67717 () Bool)

(assert (=> b!67717 (= e!44369 (contains!709 lt!29482 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (= (and d!14441 c!9484) b!67711))

(assert (= (and d!14441 (not c!9484)) b!67709))

(assert (= (and b!67709 c!9486) b!67715))

(assert (= (and b!67709 (not c!9486)) b!67712))

(assert (= (and b!67712 c!9487) b!67708))

(assert (= (and b!67712 (not c!9487)) b!67716))

(assert (= (or b!67708 b!67716) bm!5663))

(assert (= (or b!67715 bm!5663) bm!5664))

(assert (= (or b!67711 bm!5664) bm!5665))

(assert (= (and bm!5665 c!9485) b!67714))

(assert (= (and bm!5665 (not c!9485)) b!67713))

(assert (= (and d!14441 res!36534) b!67710))

(assert (= (and b!67710 res!36533) b!67717))

(declare-fun m!63233 () Bool)

(assert (=> bm!5665 m!63233))

(declare-fun m!63235 () Bool)

(assert (=> b!67714 m!63235))

(declare-fun m!63237 () Bool)

(assert (=> b!67710 m!63237))

(declare-fun m!63239 () Bool)

(assert (=> b!67717 m!63239))

(declare-fun m!63241 () Bool)

(assert (=> d!14441 m!63241))

(declare-fun m!63243 () Bool)

(assert (=> d!14441 m!63243))

(assert (=> d!13891 d!14441))

(declare-fun b!67720 () Bool)

(declare-fun e!44372 () Option!137)

(assert (=> b!67720 (= e!44372 (getValueByKey!131 (t!4929 (t!4929 (toList!705 lt!28691))) (_1!1052 lt!28528)))))

(declare-fun b!67718 () Bool)

(declare-fun e!44371 () Option!137)

(assert (=> b!67718 (= e!44371 (Some!136 (_2!1052 (h!2035 (t!4929 (toList!705 lt!28691))))))))

(declare-fun d!14443 () Bool)

(declare-fun c!9488 () Bool)

(assert (=> d!14443 (= c!9488 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28691))) (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28691)))) (_1!1052 lt!28528))))))

(assert (=> d!14443 (= (getValueByKey!131 (t!4929 (toList!705 lt!28691)) (_1!1052 lt!28528)) e!44371)))

(declare-fun b!67721 () Bool)

(assert (=> b!67721 (= e!44372 None!135)))

(declare-fun b!67719 () Bool)

(assert (=> b!67719 (= e!44371 e!44372)))

(declare-fun c!9489 () Bool)

(assert (=> b!67719 (= c!9489 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28691))) (not (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28691)))) (_1!1052 lt!28528)))))))

(assert (= (and d!14443 c!9488) b!67718))

(assert (= (and d!14443 (not c!9488)) b!67719))

(assert (= (and b!67719 c!9489) b!67720))

(assert (= (and b!67719 (not c!9489)) b!67721))

(declare-fun m!63245 () Bool)

(assert (=> b!67720 m!63245))

(assert (=> b!67096 d!14443))

(declare-fun d!14445 () Bool)

(declare-fun lt!29483 () Bool)

(assert (=> d!14445 (= lt!29483 (select (content!72 (toList!705 lt!29095)) (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44374 () Bool)

(assert (=> d!14445 (= lt!29483 e!44374)))

(declare-fun res!36536 () Bool)

(assert (=> d!14445 (=> (not res!36536) (not e!44374))))

(assert (=> d!14445 (= res!36536 ((_ is Cons!1451) (toList!705 lt!29095)))))

(assert (=> d!14445 (= (contains!709 (toList!705 lt!29095) (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29483)))

(declare-fun b!67722 () Bool)

(declare-fun e!44373 () Bool)

(assert (=> b!67722 (= e!44374 e!44373)))

(declare-fun res!36535 () Bool)

(assert (=> b!67722 (=> res!36535 e!44373)))

(assert (=> b!67722 (= res!36535 (= (h!2035 (toList!705 lt!29095)) (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67723 () Bool)

(assert (=> b!67723 (= e!44373 (contains!709 (t!4929 (toList!705 lt!29095)) (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (= (and d!14445 res!36536) b!67722))

(assert (= (and b!67722 (not res!36535)) b!67723))

(declare-fun m!63247 () Bool)

(assert (=> d!14445 m!63247))

(declare-fun m!63249 () Bool)

(assert (=> d!14445 m!63249))

(declare-fun m!63251 () Bool)

(assert (=> b!67723 m!63251))

(assert (=> b!66955 d!14445))

(declare-fun d!14447 () Bool)

(assert (=> d!14447 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (getCurrentListMap!403 (_keys!3786 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(assert (=> d!14447 true))

(declare-fun _$5!71 () Unit!1824)

(assert (=> d!14447 (= (choose!383 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3037 lt!28796) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 (defaultEntry!2146 newMap!16)) _$5!71)))

(declare-fun bs!2933 () Bool)

(assert (= bs!2933 d!14447))

(assert (=> bs!2933 m!61017))

(assert (=> bs!2933 m!61017))

(assert (=> bs!2933 m!61275))

(assert (=> bs!2933 m!61193))

(assert (=> bs!2933 m!62009))

(assert (=> d!13965 d!14447))

(assert (=> d!13965 d!14103))

(assert (=> bm!5583 d!13929))

(declare-fun d!14449 () Bool)

(declare-fun res!36537 () Bool)

(declare-fun e!44375 () Bool)

(assert (=> d!14449 (=> res!36537 e!44375)))

(assert (=> d!14449 (= res!36537 (= (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14449 (= (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!44375)))

(declare-fun b!67724 () Bool)

(declare-fun e!44376 () Bool)

(assert (=> b!67724 (= e!44375 e!44376)))

(declare-fun res!36538 () Bool)

(assert (=> b!67724 (=> (not res!36538) (not e!44376))))

(assert (=> b!67724 (= res!36538 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!67725 () Bool)

(assert (=> b!67725 (= e!44376 (arrayContainsKey!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14449 (not res!36537)) b!67724))

(assert (= (and b!67724 res!36538) b!67725))

(assert (=> d!14449 m!63093))

(assert (=> b!67725 m!60827))

(declare-fun m!63253 () Bool)

(assert (=> b!67725 m!63253))

(assert (=> b!66755 d!14449))

(declare-fun d!14451 () Bool)

(declare-fun lt!29484 () Bool)

(assert (=> d!14451 (= lt!29484 (select (content!72 lt!28721) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(declare-fun e!44378 () Bool)

(assert (=> d!14451 (= lt!29484 e!44378)))

(declare-fun res!36540 () Bool)

(assert (=> d!14451 (=> (not res!36540) (not e!44378))))

(assert (=> d!14451 (= res!36540 ((_ is Cons!1451) lt!28721))))

(assert (=> d!14451 (= (contains!709 lt!28721 (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))) lt!29484)))

(declare-fun b!67726 () Bool)

(declare-fun e!44377 () Bool)

(assert (=> b!67726 (= e!44378 e!44377)))

(declare-fun res!36539 () Bool)

(assert (=> b!67726 (=> res!36539 e!44377)))

(assert (=> b!67726 (= res!36539 (= (h!2035 lt!28721) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(declare-fun b!67727 () Bool)

(assert (=> b!67727 (= e!44377 (contains!709 (t!4929 lt!28721) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(assert (= (and d!14451 res!36540) b!67726))

(assert (= (and b!67726 (not res!36539)) b!67727))

(declare-fun m!63255 () Bool)

(assert (=> d!14451 m!63255))

(declare-fun m!63257 () Bool)

(assert (=> d!14451 m!63257))

(declare-fun m!63259 () Bool)

(assert (=> b!67727 m!63259))

(assert (=> b!67071 d!14451))

(declare-fun e!44380 () Option!137)

(declare-fun b!67730 () Bool)

(assert (=> b!67730 (= e!44380 (getValueByKey!131 (t!4929 (toList!705 lt!28956)) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67728 () Bool)

(declare-fun e!44379 () Option!137)

(assert (=> b!67728 (= e!44379 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28956)))))))

(declare-fun d!14453 () Bool)

(declare-fun c!9490 () Bool)

(assert (=> d!14453 (= c!9490 (and ((_ is Cons!1451) (toList!705 lt!28956)) (= (_1!1052 (h!2035 (toList!705 lt!28956))) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14453 (= (getValueByKey!131 (toList!705 lt!28956) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44379)))

(declare-fun b!67731 () Bool)

(assert (=> b!67731 (= e!44380 None!135)))

(declare-fun b!67729 () Bool)

(assert (=> b!67729 (= e!44379 e!44380)))

(declare-fun c!9491 () Bool)

(assert (=> b!67729 (= c!9491 (and ((_ is Cons!1451) (toList!705 lt!28956)) (not (= (_1!1052 (h!2035 (toList!705 lt!28956))) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14453 c!9490) b!67728))

(assert (= (and d!14453 (not c!9490)) b!67729))

(assert (= (and b!67729 c!9491) b!67730))

(assert (= (and b!67729 (not c!9491)) b!67731))

(declare-fun m!63261 () Bool)

(assert (=> b!67730 m!63261))

(assert (=> b!66771 d!14453))

(declare-fun b!67734 () Bool)

(declare-fun e!44382 () Option!137)

(assert (=> b!67734 (= e!44382 (getValueByKey!131 (t!4929 (t!4929 (toList!705 lt!28518))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67732 () Bool)

(declare-fun e!44381 () Option!137)

(assert (=> b!67732 (= e!44381 (Some!136 (_2!1052 (h!2035 (t!4929 (toList!705 lt!28518))))))))

(declare-fun c!9492 () Bool)

(declare-fun d!14455 () Bool)

(assert (=> d!14455 (= c!9492 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28518))) (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28518)))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!14455 (= (getValueByKey!131 (t!4929 (toList!705 lt!28518)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44381)))

(declare-fun b!67735 () Bool)

(assert (=> b!67735 (= e!44382 None!135)))

(declare-fun b!67733 () Bool)

(assert (=> b!67733 (= e!44381 e!44382)))

(declare-fun c!9493 () Bool)

(assert (=> b!67733 (= c!9493 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28518))) (not (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28518)))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(assert (= (and d!14455 c!9492) b!67732))

(assert (= (and d!14455 (not c!9492)) b!67733))

(assert (= (and b!67733 c!9493) b!67734))

(assert (= (and b!67733 (not c!9493)) b!67735))

(assert (=> b!67734 m!60827))

(declare-fun m!63263 () Bool)

(assert (=> b!67734 m!63263))

(assert (=> b!66876 d!14455))

(declare-fun d!14457 () Bool)

(declare-fun e!44383 () Bool)

(assert (=> d!14457 e!44383))

(declare-fun res!36542 () Bool)

(assert (=> d!14457 (=> (not res!36542) (not e!44383))))

(declare-fun lt!29487 () ListLongMap!1379)

(assert (=> d!14457 (= res!36542 (contains!705 lt!29487 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun lt!29485 () List!1455)

(assert (=> d!14457 (= lt!29487 (ListLongMap!1380 lt!29485))))

(declare-fun lt!29486 () Unit!1824)

(declare-fun lt!29488 () Unit!1824)

(assert (=> d!14457 (= lt!29486 lt!29488)))

(assert (=> d!14457 (= (getValueByKey!131 lt!29485 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!14457 (= lt!29488 (lemmaContainsTupThenGetReturnValue!48 lt!29485 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!14457 (= lt!29485 (insertStrictlySorted!51 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!14457 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) lt!29487)))

(declare-fun b!67736 () Bool)

(declare-fun res!36541 () Bool)

(assert (=> b!67736 (=> (not res!36541) (not e!44383))))

(assert (=> b!67736 (= res!36541 (= (getValueByKey!131 (toList!705 lt!29487) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!67737 () Bool)

(assert (=> b!67737 (= e!44383 (contains!709 (toList!705 lt!29487) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(assert (= (and d!14457 res!36542) b!67736))

(assert (= (and b!67736 res!36541) b!67737))

(declare-fun m!63265 () Bool)

(assert (=> d!14457 m!63265))

(declare-fun m!63267 () Bool)

(assert (=> d!14457 m!63267))

(declare-fun m!63269 () Bool)

(assert (=> d!14457 m!63269))

(declare-fun m!63271 () Bool)

(assert (=> d!14457 m!63271))

(declare-fun m!63273 () Bool)

(assert (=> b!67736 m!63273))

(declare-fun m!63275 () Bool)

(assert (=> b!67737 m!63275))

(assert (=> b!67103 d!14457))

(assert (=> b!67103 d!13899))

(declare-fun b!67738 () Bool)

(declare-fun res!36551 () Bool)

(declare-fun e!44387 () Bool)

(assert (=> b!67738 (=> (not res!36551) (not e!44387))))

(declare-fun e!44392 () Bool)

(assert (=> b!67738 (= res!36551 e!44392)))

(declare-fun c!9499 () Bool)

(assert (=> b!67738 (= c!9499 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!67739 () Bool)

(declare-fun call!5673 () Bool)

(assert (=> b!67739 (= e!44392 (not call!5673))))

(declare-fun b!67740 () Bool)

(declare-fun e!44388 () Bool)

(assert (=> b!67740 (= e!44388 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67741 () Bool)

(declare-fun e!44390 () Bool)

(assert (=> b!67741 (= e!44392 e!44390)))

(declare-fun res!36545 () Bool)

(assert (=> b!67741 (= res!36545 call!5673)))

(assert (=> b!67741 (=> (not res!36545) (not e!44390))))

(declare-fun e!44389 () Bool)

(declare-fun lt!29501 () ListLongMap!1379)

(declare-fun b!67742 () Bool)

(assert (=> b!67742 (= e!44389 (= (apply!72 lt!29501 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67742 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))))))

(assert (=> b!67742 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun d!14459 () Bool)

(assert (=> d!14459 e!44387))

(declare-fun res!36546 () Bool)

(assert (=> d!14459 (=> (not res!36546) (not e!44387))))

(assert (=> d!14459 (= res!36546 (or (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun lt!29509 () ListLongMap!1379)

(assert (=> d!14459 (= lt!29501 lt!29509)))

(declare-fun lt!29506 () Unit!1824)

(declare-fun e!44386 () Unit!1824)

(assert (=> d!14459 (= lt!29506 e!44386)))

(declare-fun c!9497 () Bool)

(declare-fun e!44384 () Bool)

(assert (=> d!14459 (= c!9497 e!44384)))

(declare-fun res!36550 () Bool)

(assert (=> d!14459 (=> (not res!36550) (not e!44384))))

(assert (=> d!14459 (= res!36550 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun e!44391 () ListLongMap!1379)

(assert (=> d!14459 (= lt!29509 e!44391)))

(declare-fun c!9494 () Bool)

(assert (=> d!14459 (= c!9494 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14459 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14459 (= (getCurrentListMap!403 (_keys!3786 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29501)))

(declare-fun b!67743 () Bool)

(declare-fun e!44394 () Bool)

(declare-fun e!44396 () Bool)

(assert (=> b!67743 (= e!44394 e!44396)))

(declare-fun res!36548 () Bool)

(declare-fun call!5670 () Bool)

(assert (=> b!67743 (= res!36548 call!5670)))

(assert (=> b!67743 (=> (not res!36548) (not e!44396))))

(declare-fun b!67744 () Bool)

(assert (=> b!67744 (= e!44394 (not call!5670))))

(declare-fun b!67745 () Bool)

(assert (=> b!67745 (= e!44390 (= (apply!72 lt!29501 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun bm!5666 () Bool)

(declare-fun call!5672 () ListLongMap!1379)

(declare-fun call!5675 () ListLongMap!1379)

(assert (=> bm!5666 (= call!5672 call!5675)))

(declare-fun b!67746 () Bool)

(declare-fun Unit!1885 () Unit!1824)

(assert (=> b!67746 (= e!44386 Unit!1885)))

(declare-fun b!67747 () Bool)

(declare-fun e!44385 () ListLongMap!1379)

(assert (=> b!67747 (= e!44385 call!5672)))

(declare-fun bm!5667 () Bool)

(declare-fun call!5671 () ListLongMap!1379)

(assert (=> bm!5667 (= call!5675 call!5671)))

(declare-fun c!9496 () Bool)

(declare-fun call!5669 () ListLongMap!1379)

(declare-fun bm!5668 () Bool)

(assert (=> bm!5668 (= call!5669 (+!86 (ite c!9494 call!5671 (ite c!9496 call!5675 call!5672)) (ite (or c!9494 c!9496) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!67748 () Bool)

(declare-fun e!44395 () ListLongMap!1379)

(declare-fun call!5674 () ListLongMap!1379)

(assert (=> b!67748 (= e!44395 call!5674)))

(declare-fun bm!5669 () Bool)

(assert (=> bm!5669 (= call!5674 call!5669)))

(declare-fun bm!5670 () Bool)

(assert (=> bm!5670 (= call!5670 (contains!705 lt!29501 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67749 () Bool)

(declare-fun res!36549 () Bool)

(assert (=> b!67749 (=> (not res!36549) (not e!44387))))

(declare-fun e!44393 () Bool)

(assert (=> b!67749 (= res!36549 e!44393)))

(declare-fun res!36544 () Bool)

(assert (=> b!67749 (=> res!36544 e!44393)))

(assert (=> b!67749 (= res!36544 (not e!44388))))

(declare-fun res!36547 () Bool)

(assert (=> b!67749 (=> (not res!36547) (not e!44388))))

(assert (=> b!67749 (= res!36547 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!67750 () Bool)

(assert (=> b!67750 (= e!44387 e!44394)))

(declare-fun c!9498 () Bool)

(assert (=> b!67750 (= c!9498 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67751 () Bool)

(assert (=> b!67751 (= e!44391 (+!86 call!5669 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun b!67752 () Bool)

(assert (=> b!67752 (= e!44384 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67753 () Bool)

(assert (=> b!67753 (= e!44396 (= (apply!72 lt!29501 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun b!67754 () Bool)

(declare-fun lt!29498 () Unit!1824)

(assert (=> b!67754 (= e!44386 lt!29498)))

(declare-fun lt!29500 () ListLongMap!1379)

(assert (=> b!67754 (= lt!29500 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29505 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29505 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29503 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29503 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29510 () Unit!1824)

(assert (=> b!67754 (= lt!29510 (addStillContains!48 lt!29500 lt!29505 (zeroValue!2054 newMap!16) lt!29503))))

(assert (=> b!67754 (contains!705 (+!86 lt!29500 (tuple2!2083 lt!29505 (zeroValue!2054 newMap!16))) lt!29503)))

(declare-fun lt!29504 () Unit!1824)

(assert (=> b!67754 (= lt!29504 lt!29510)))

(declare-fun lt!29495 () ListLongMap!1379)

(assert (=> b!67754 (= lt!29495 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29507 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29507 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29499 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29499 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29489 () Unit!1824)

(assert (=> b!67754 (= lt!29489 (addApplyDifferent!48 lt!29495 lt!29507 (minValue!2054 newMap!16) lt!29499))))

(assert (=> b!67754 (= (apply!72 (+!86 lt!29495 (tuple2!2083 lt!29507 (minValue!2054 newMap!16))) lt!29499) (apply!72 lt!29495 lt!29499))))

(declare-fun lt!29491 () Unit!1824)

(assert (=> b!67754 (= lt!29491 lt!29489)))

(declare-fun lt!29508 () ListLongMap!1379)

(assert (=> b!67754 (= lt!29508 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29493 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29493 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29494 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29494 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29492 () Unit!1824)

(assert (=> b!67754 (= lt!29492 (addApplyDifferent!48 lt!29508 lt!29493 (zeroValue!2054 newMap!16) lt!29494))))

(assert (=> b!67754 (= (apply!72 (+!86 lt!29508 (tuple2!2083 lt!29493 (zeroValue!2054 newMap!16))) lt!29494) (apply!72 lt!29508 lt!29494))))

(declare-fun lt!29502 () Unit!1824)

(assert (=> b!67754 (= lt!29502 lt!29492)))

(declare-fun lt!29497 () ListLongMap!1379)

(assert (=> b!67754 (= lt!29497 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29496 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29496 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29490 () (_ BitVec 64))

(assert (=> b!67754 (= lt!29490 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67754 (= lt!29498 (addApplyDifferent!48 lt!29497 lt!29496 (minValue!2054 newMap!16) lt!29490))))

(assert (=> b!67754 (= (apply!72 (+!86 lt!29497 (tuple2!2083 lt!29496 (minValue!2054 newMap!16))) lt!29490) (apply!72 lt!29497 lt!29490))))

(declare-fun b!67755 () Bool)

(declare-fun c!9495 () Bool)

(assert (=> b!67755 (= c!9495 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!67755 (= e!44395 e!44385)))

(declare-fun b!67756 () Bool)

(assert (=> b!67756 (= e!44391 e!44395)))

(assert (=> b!67756 (= c!9496 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67757 () Bool)

(assert (=> b!67757 (= e!44393 e!44389)))

(declare-fun res!36543 () Bool)

(assert (=> b!67757 (=> (not res!36543) (not e!44389))))

(assert (=> b!67757 (= res!36543 (contains!705 lt!29501 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67757 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!67758 () Bool)

(assert (=> b!67758 (= e!44385 call!5674)))

(declare-fun bm!5671 () Bool)

(assert (=> bm!5671 (= call!5671 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (index!3037 lt!28796) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5672 () Bool)

(assert (=> bm!5672 (= call!5673 (contains!705 lt!29501 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14459 c!9494) b!67751))

(assert (= (and d!14459 (not c!9494)) b!67756))

(assert (= (and b!67756 c!9496) b!67748))

(assert (= (and b!67756 (not c!9496)) b!67755))

(assert (= (and b!67755 c!9495) b!67758))

(assert (= (and b!67755 (not c!9495)) b!67747))

(assert (= (or b!67758 b!67747) bm!5666))

(assert (= (or b!67748 bm!5666) bm!5667))

(assert (= (or b!67748 b!67758) bm!5669))

(assert (= (or b!67751 bm!5667) bm!5671))

(assert (= (or b!67751 bm!5669) bm!5668))

(assert (= (and d!14459 res!36550) b!67752))

(assert (= (and d!14459 c!9497) b!67754))

(assert (= (and d!14459 (not c!9497)) b!67746))

(assert (= (and d!14459 res!36546) b!67749))

(assert (= (and b!67749 res!36547) b!67740))

(assert (= (and b!67749 (not res!36544)) b!67757))

(assert (= (and b!67757 res!36543) b!67742))

(assert (= (and b!67749 res!36549) b!67738))

(assert (= (and b!67738 c!9499) b!67741))

(assert (= (and b!67738 (not c!9499)) b!67739))

(assert (= (and b!67741 res!36545) b!67745))

(assert (= (or b!67741 b!67739) bm!5672))

(assert (= (and b!67738 res!36551) b!67750))

(assert (= (and b!67750 c!9498) b!67743))

(assert (= (and b!67750 (not c!9498)) b!67744))

(assert (= (and b!67743 res!36548) b!67753))

(assert (= (or b!67743 b!67744) bm!5670))

(declare-fun b_lambda!3035 () Bool)

(assert (=> (not b_lambda!3035) (not b!67742)))

(assert (=> b!67742 t!4942))

(declare-fun b_and!4189 () Bool)

(assert (= b_and!4185 (and (=> t!4942 result!2587) b_and!4189)))

(assert (=> b!67742 t!4944))

(declare-fun b_and!4191 () Bool)

(assert (= b_and!4187 (and (=> t!4944 result!2589) b_and!4191)))

(assert (=> b!67752 m!61431))

(assert (=> b!67752 m!61431))

(assert (=> b!67752 m!61433))

(declare-fun m!63277 () Bool)

(assert (=> bm!5670 m!63277))

(declare-fun m!63279 () Bool)

(assert (=> b!67745 m!63279))

(assert (=> b!67757 m!61431))

(assert (=> b!67757 m!61431))

(declare-fun m!63281 () Bool)

(assert (=> b!67757 m!63281))

(declare-fun m!63283 () Bool)

(assert (=> bm!5668 m!63283))

(declare-fun m!63285 () Bool)

(assert (=> b!67751 m!63285))

(declare-fun m!63287 () Bool)

(assert (=> b!67754 m!63287))

(declare-fun m!63289 () Bool)

(assert (=> b!67754 m!63289))

(declare-fun m!63291 () Bool)

(assert (=> b!67754 m!63291))

(declare-fun m!63293 () Bool)

(assert (=> b!67754 m!63293))

(declare-fun m!63295 () Bool)

(assert (=> b!67754 m!63295))

(assert (=> b!67754 m!63291))

(declare-fun m!63297 () Bool)

(assert (=> b!67754 m!63297))

(declare-fun m!63299 () Bool)

(assert (=> b!67754 m!63299))

(declare-fun m!63301 () Bool)

(assert (=> b!67754 m!63301))

(declare-fun m!63303 () Bool)

(assert (=> b!67754 m!63303))

(assert (=> b!67754 m!61431))

(declare-fun m!63305 () Bool)

(assert (=> b!67754 m!63305))

(assert (=> b!67754 m!63301))

(declare-fun m!63307 () Bool)

(assert (=> b!67754 m!63307))

(declare-fun m!63309 () Bool)

(assert (=> b!67754 m!63309))

(assert (=> b!67754 m!63287))

(declare-fun m!63311 () Bool)

(assert (=> b!67754 m!63311))

(assert (=> b!67754 m!63307))

(declare-fun m!63313 () Bool)

(assert (=> b!67754 m!63313))

(declare-fun m!63315 () Bool)

(assert (=> b!67754 m!63315))

(declare-fun m!63317 () Bool)

(assert (=> b!67754 m!63317))

(assert (=> bm!5671 m!63295))

(assert (=> d!14459 m!61297))

(assert (=> b!67740 m!61431))

(assert (=> b!67740 m!61431))

(assert (=> b!67740 m!61433))

(assert (=> b!67742 m!61477))

(declare-fun m!63319 () Bool)

(assert (=> b!67742 m!63319))

(assert (=> b!67742 m!61477))

(declare-fun m!63321 () Bool)

(assert (=> b!67742 m!63321))

(assert (=> b!67742 m!63319))

(assert (=> b!67742 m!61431))

(declare-fun m!63323 () Bool)

(assert (=> b!67742 m!63323))

(assert (=> b!67742 m!61431))

(declare-fun m!63325 () Bool)

(assert (=> b!67753 m!63325))

(declare-fun m!63327 () Bool)

(assert (=> bm!5672 m!63327))

(assert (=> b!67103 d!14459))

(declare-fun b!67759 () Bool)

(declare-fun res!36560 () Bool)

(declare-fun e!44400 () Bool)

(assert (=> b!67759 (=> (not res!36560) (not e!44400))))

(declare-fun e!44405 () Bool)

(assert (=> b!67759 (= res!36560 e!44405)))

(declare-fun c!9505 () Bool)

(assert (=> b!67759 (= c!9505 (not (= (bvand lt!28798 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!67760 () Bool)

(declare-fun call!5680 () Bool)

(assert (=> b!67760 (= e!44405 (not call!5680))))

(declare-fun b!67761 () Bool)

(declare-fun e!44401 () Bool)

(assert (=> b!67761 (= e!44401 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67762 () Bool)

(declare-fun e!44403 () Bool)

(assert (=> b!67762 (= e!44405 e!44403)))

(declare-fun res!36554 () Bool)

(assert (=> b!67762 (= res!36554 call!5680)))

(assert (=> b!67762 (=> (not res!36554) (not e!44403))))

(declare-fun b!67763 () Bool)

(declare-fun e!44402 () Bool)

(declare-fun lt!29523 () ListLongMap!1379)

(assert (=> b!67763 (= e!44402 (= (apply!72 lt!29523 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67763 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (_values!2129 newMap!16))))))

(assert (=> b!67763 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun d!14461 () Bool)

(assert (=> d!14461 e!44400))

(declare-fun res!36555 () Bool)

(assert (=> d!14461 (=> (not res!36555) (not e!44400))))

(assert (=> d!14461 (= res!36555 (or (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun lt!29531 () ListLongMap!1379)

(assert (=> d!14461 (= lt!29523 lt!29531)))

(declare-fun lt!29528 () Unit!1824)

(declare-fun e!44399 () Unit!1824)

(assert (=> d!14461 (= lt!29528 e!44399)))

(declare-fun c!9503 () Bool)

(declare-fun e!44397 () Bool)

(assert (=> d!14461 (= c!9503 e!44397)))

(declare-fun res!36559 () Bool)

(assert (=> d!14461 (=> (not res!36559) (not e!44397))))

(assert (=> d!14461 (= res!36559 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun e!44404 () ListLongMap!1379)

(assert (=> d!14461 (= lt!29531 e!44404)))

(declare-fun c!9500 () Bool)

(assert (=> d!14461 (= c!9500 (and (not (= (bvand lt!28798 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!28798 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14461 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14461 (= (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28798 lt!28522 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29523)))

(declare-fun b!67764 () Bool)

(declare-fun e!44407 () Bool)

(declare-fun e!44409 () Bool)

(assert (=> b!67764 (= e!44407 e!44409)))

(declare-fun res!36557 () Bool)

(declare-fun call!5677 () Bool)

(assert (=> b!67764 (= res!36557 call!5677)))

(assert (=> b!67764 (=> (not res!36557) (not e!44409))))

(declare-fun b!67765 () Bool)

(assert (=> b!67765 (= e!44407 (not call!5677))))

(declare-fun b!67766 () Bool)

(assert (=> b!67766 (= e!44403 (= (apply!72 lt!29523 #b0000000000000000000000000000000000000000000000000000000000000000) lt!28522))))

(declare-fun bm!5673 () Bool)

(declare-fun call!5679 () ListLongMap!1379)

(declare-fun call!5682 () ListLongMap!1379)

(assert (=> bm!5673 (= call!5679 call!5682)))

(declare-fun b!67767 () Bool)

(declare-fun Unit!1886 () Unit!1824)

(assert (=> b!67767 (= e!44399 Unit!1886)))

(declare-fun b!67768 () Bool)

(declare-fun e!44398 () ListLongMap!1379)

(assert (=> b!67768 (= e!44398 call!5679)))

(declare-fun bm!5674 () Bool)

(declare-fun call!5678 () ListLongMap!1379)

(assert (=> bm!5674 (= call!5682 call!5678)))

(declare-fun call!5676 () ListLongMap!1379)

(declare-fun bm!5675 () Bool)

(declare-fun c!9502 () Bool)

(assert (=> bm!5675 (= call!5676 (+!86 (ite c!9500 call!5678 (ite c!9502 call!5682 call!5679)) (ite (or c!9500 c!9502) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!67769 () Bool)

(declare-fun e!44408 () ListLongMap!1379)

(declare-fun call!5681 () ListLongMap!1379)

(assert (=> b!67769 (= e!44408 call!5681)))

(declare-fun bm!5676 () Bool)

(assert (=> bm!5676 (= call!5681 call!5676)))

(declare-fun bm!5677 () Bool)

(assert (=> bm!5677 (= call!5677 (contains!705 lt!29523 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67770 () Bool)

(declare-fun res!36558 () Bool)

(assert (=> b!67770 (=> (not res!36558) (not e!44400))))

(declare-fun e!44406 () Bool)

(assert (=> b!67770 (= res!36558 e!44406)))

(declare-fun res!36553 () Bool)

(assert (=> b!67770 (=> res!36553 e!44406)))

(assert (=> b!67770 (= res!36553 (not e!44401))))

(declare-fun res!36556 () Bool)

(assert (=> b!67770 (=> (not res!36556) (not e!44401))))

(assert (=> b!67770 (= res!36556 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!67771 () Bool)

(assert (=> b!67771 (= e!44400 e!44407)))

(declare-fun c!9504 () Bool)

(assert (=> b!67771 (= c!9504 (not (= (bvand lt!28798 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67772 () Bool)

(assert (=> b!67772 (= e!44404 (+!86 call!5676 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun b!67773 () Bool)

(assert (=> b!67773 (= e!44397 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!67774 () Bool)

(assert (=> b!67774 (= e!44409 (= (apply!72 lt!29523 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun b!67775 () Bool)

(declare-fun lt!29520 () Unit!1824)

(assert (=> b!67775 (= e!44399 lt!29520)))

(declare-fun lt!29522 () ListLongMap!1379)

(assert (=> b!67775 (= lt!29522 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28798 lt!28522 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29527 () (_ BitVec 64))

(assert (=> b!67775 (= lt!29527 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29525 () (_ BitVec 64))

(assert (=> b!67775 (= lt!29525 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29532 () Unit!1824)

(assert (=> b!67775 (= lt!29532 (addStillContains!48 lt!29522 lt!29527 lt!28522 lt!29525))))

(assert (=> b!67775 (contains!705 (+!86 lt!29522 (tuple2!2083 lt!29527 lt!28522)) lt!29525)))

(declare-fun lt!29526 () Unit!1824)

(assert (=> b!67775 (= lt!29526 lt!29532)))

(declare-fun lt!29517 () ListLongMap!1379)

(assert (=> b!67775 (= lt!29517 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28798 lt!28522 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29529 () (_ BitVec 64))

(assert (=> b!67775 (= lt!29529 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29521 () (_ BitVec 64))

(assert (=> b!67775 (= lt!29521 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29511 () Unit!1824)

(assert (=> b!67775 (= lt!29511 (addApplyDifferent!48 lt!29517 lt!29529 (minValue!2054 newMap!16) lt!29521))))

(assert (=> b!67775 (= (apply!72 (+!86 lt!29517 (tuple2!2083 lt!29529 (minValue!2054 newMap!16))) lt!29521) (apply!72 lt!29517 lt!29521))))

(declare-fun lt!29513 () Unit!1824)

(assert (=> b!67775 (= lt!29513 lt!29511)))

(declare-fun lt!29530 () ListLongMap!1379)

(assert (=> b!67775 (= lt!29530 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28798 lt!28522 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29515 () (_ BitVec 64))

(assert (=> b!67775 (= lt!29515 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29516 () (_ BitVec 64))

(assert (=> b!67775 (= lt!29516 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29514 () Unit!1824)

(assert (=> b!67775 (= lt!29514 (addApplyDifferent!48 lt!29530 lt!29515 lt!28522 lt!29516))))

(assert (=> b!67775 (= (apply!72 (+!86 lt!29530 (tuple2!2083 lt!29515 lt!28522)) lt!29516) (apply!72 lt!29530 lt!29516))))

(declare-fun lt!29524 () Unit!1824)

(assert (=> b!67775 (= lt!29524 lt!29514)))

(declare-fun lt!29519 () ListLongMap!1379)

(assert (=> b!67775 (= lt!29519 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28798 lt!28522 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29518 () (_ BitVec 64))

(assert (=> b!67775 (= lt!29518 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29512 () (_ BitVec 64))

(assert (=> b!67775 (= lt!29512 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!67775 (= lt!29520 (addApplyDifferent!48 lt!29519 lt!29518 (minValue!2054 newMap!16) lt!29512))))

(assert (=> b!67775 (= (apply!72 (+!86 lt!29519 (tuple2!2083 lt!29518 (minValue!2054 newMap!16))) lt!29512) (apply!72 lt!29519 lt!29512))))

(declare-fun b!67776 () Bool)

(declare-fun c!9501 () Bool)

(assert (=> b!67776 (= c!9501 (and (not (= (bvand lt!28798 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!28798 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!67776 (= e!44408 e!44398)))

(declare-fun b!67777 () Bool)

(assert (=> b!67777 (= e!44404 e!44408)))

(assert (=> b!67777 (= c!9502 (and (not (= (bvand lt!28798 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!28798 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67778 () Bool)

(assert (=> b!67778 (= e!44406 e!44402)))

(declare-fun res!36552 () Bool)

(assert (=> b!67778 (=> (not res!36552) (not e!44402))))

(assert (=> b!67778 (= res!36552 (contains!705 lt!29523 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!67778 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!67779 () Bool)

(assert (=> b!67779 (= e!44398 call!5681)))

(declare-fun bm!5678 () Bool)

(assert (=> bm!5678 (= call!5678 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28798 lt!28522 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5679 () Bool)

(assert (=> bm!5679 (= call!5680 (contains!705 lt!29523 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14461 c!9500) b!67772))

(assert (= (and d!14461 (not c!9500)) b!67777))

(assert (= (and b!67777 c!9502) b!67769))

(assert (= (and b!67777 (not c!9502)) b!67776))

(assert (= (and b!67776 c!9501) b!67779))

(assert (= (and b!67776 (not c!9501)) b!67768))

(assert (= (or b!67779 b!67768) bm!5673))

(assert (= (or b!67769 bm!5673) bm!5674))

(assert (= (or b!67769 b!67779) bm!5676))

(assert (= (or b!67772 bm!5674) bm!5678))

(assert (= (or b!67772 bm!5676) bm!5675))

(assert (= (and d!14461 res!36559) b!67773))

(assert (= (and d!14461 c!9503) b!67775))

(assert (= (and d!14461 (not c!9503)) b!67767))

(assert (= (and d!14461 res!36555) b!67770))

(assert (= (and b!67770 res!36556) b!67761))

(assert (= (and b!67770 (not res!36553)) b!67778))

(assert (= (and b!67778 res!36552) b!67763))

(assert (= (and b!67770 res!36558) b!67759))

(assert (= (and b!67759 c!9505) b!67762))

(assert (= (and b!67759 (not c!9505)) b!67760))

(assert (= (and b!67762 res!36554) b!67766))

(assert (= (or b!67762 b!67760) bm!5679))

(assert (= (and b!67759 res!36560) b!67771))

(assert (= (and b!67771 c!9504) b!67764))

(assert (= (and b!67771 (not c!9504)) b!67765))

(assert (= (and b!67764 res!36557) b!67774))

(assert (= (or b!67764 b!67765) bm!5677))

(declare-fun b_lambda!3037 () Bool)

(assert (=> (not b_lambda!3037) (not b!67763)))

(assert (=> b!67763 t!4942))

(declare-fun b_and!4193 () Bool)

(assert (= b_and!4189 (and (=> t!4942 result!2587) b_and!4193)))

(assert (=> b!67763 t!4944))

(declare-fun b_and!4195 () Bool)

(assert (= b_and!4191 (and (=> t!4944 result!2589) b_and!4195)))

(assert (=> b!67773 m!61431))

(assert (=> b!67773 m!61431))

(assert (=> b!67773 m!61433))

(declare-fun m!63329 () Bool)

(assert (=> bm!5677 m!63329))

(declare-fun m!63331 () Bool)

(assert (=> b!67766 m!63331))

(assert (=> b!67778 m!61431))

(assert (=> b!67778 m!61431))

(declare-fun m!63333 () Bool)

(assert (=> b!67778 m!63333))

(declare-fun m!63335 () Bool)

(assert (=> bm!5675 m!63335))

(declare-fun m!63337 () Bool)

(assert (=> b!67772 m!63337))

(declare-fun m!63339 () Bool)

(assert (=> b!67775 m!63339))

(declare-fun m!63341 () Bool)

(assert (=> b!67775 m!63341))

(declare-fun m!63343 () Bool)

(assert (=> b!67775 m!63343))

(declare-fun m!63345 () Bool)

(assert (=> b!67775 m!63345))

(declare-fun m!63347 () Bool)

(assert (=> b!67775 m!63347))

(assert (=> b!67775 m!63343))

(declare-fun m!63349 () Bool)

(assert (=> b!67775 m!63349))

(declare-fun m!63351 () Bool)

(assert (=> b!67775 m!63351))

(declare-fun m!63353 () Bool)

(assert (=> b!67775 m!63353))

(declare-fun m!63355 () Bool)

(assert (=> b!67775 m!63355))

(assert (=> b!67775 m!61431))

(declare-fun m!63357 () Bool)

(assert (=> b!67775 m!63357))

(assert (=> b!67775 m!63353))

(declare-fun m!63359 () Bool)

(assert (=> b!67775 m!63359))

(declare-fun m!63361 () Bool)

(assert (=> b!67775 m!63361))

(assert (=> b!67775 m!63339))

(declare-fun m!63363 () Bool)

(assert (=> b!67775 m!63363))

(assert (=> b!67775 m!63359))

(declare-fun m!63365 () Bool)

(assert (=> b!67775 m!63365))

(declare-fun m!63367 () Bool)

(assert (=> b!67775 m!63367))

(declare-fun m!63369 () Bool)

(assert (=> b!67775 m!63369))

(assert (=> bm!5678 m!63347))

(assert (=> d!14461 m!61297))

(assert (=> b!67761 m!61431))

(assert (=> b!67761 m!61431))

(assert (=> b!67761 m!61433))

(assert (=> b!67763 m!61477))

(assert (=> b!67763 m!61683))

(assert (=> b!67763 m!61477))

(assert (=> b!67763 m!61685))

(assert (=> b!67763 m!61683))

(assert (=> b!67763 m!61431))

(declare-fun m!63371 () Bool)

(assert (=> b!67763 m!63371))

(assert (=> b!67763 m!61431))

(declare-fun m!63373 () Bool)

(assert (=> b!67774 m!63373))

(declare-fun m!63375 () Bool)

(assert (=> bm!5679 m!63375))

(assert (=> d!13795 d!14461))

(assert (=> d!13795 d!13899))

(declare-fun d!14463 () Bool)

(assert (=> d!14463 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28798 lt!28522 (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(assert (=> d!14463 true))

(declare-fun _$7!53 () Unit!1824)

(assert (=> d!14463 (= (choose!374 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) lt!28798 (zeroValue!2054 newMap!16) lt!28522 (minValue!2054 newMap!16) (defaultEntry!2146 newMap!16)) _$7!53)))

(declare-fun bs!2934 () Bool)

(assert (= bs!2934 d!14463))

(assert (=> bs!2934 m!61017))

(assert (=> bs!2934 m!61017))

(assert (=> bs!2934 m!61291))

(assert (=> bs!2934 m!61293))

(assert (=> d!13795 d!14463))

(assert (=> d!13795 d!14103))

(declare-fun d!14465 () Bool)

(declare-fun e!44410 () Bool)

(assert (=> d!14465 e!44410))

(declare-fun res!36562 () Bool)

(assert (=> d!14465 (=> (not res!36562) (not e!44410))))

(declare-fun lt!29535 () ListLongMap!1379)

(assert (=> d!14465 (= res!36562 (contains!705 lt!29535 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522))))))

(declare-fun lt!29533 () List!1455)

(assert (=> d!14465 (= lt!29535 (ListLongMap!1380 lt!29533))))

(declare-fun lt!29534 () Unit!1824)

(declare-fun lt!29536 () Unit!1824)

(assert (=> d!14465 (= lt!29534 lt!29536)))

(assert (=> d!14465 (= (getValueByKey!131 lt!29533 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522))) (Some!136 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522))))))

(assert (=> d!14465 (= lt!29536 (lemmaContainsTupThenGetReturnValue!48 lt!29533 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522))))))

(assert (=> d!14465 (= lt!29533 (insertStrictlySorted!51 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522))))))

(assert (=> d!14465 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522)) lt!29535)))

(declare-fun b!67780 () Bool)

(declare-fun res!36561 () Bool)

(assert (=> b!67780 (=> (not res!36561) (not e!44410))))

(assert (=> b!67780 (= res!36561 (= (getValueByKey!131 (toList!705 lt!29535) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522))) (Some!136 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522)))))))

(declare-fun b!67781 () Bool)

(assert (=> b!67781 (= e!44410 (contains!709 (toList!705 lt!29535) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522)))))

(assert (= (and d!14465 res!36562) b!67780))

(assert (= (and b!67780 res!36561) b!67781))

(declare-fun m!63377 () Bool)

(assert (=> d!14465 m!63377))

(declare-fun m!63379 () Bool)

(assert (=> d!14465 m!63379))

(declare-fun m!63381 () Bool)

(assert (=> d!14465 m!63381))

(declare-fun m!63383 () Bool)

(assert (=> d!14465 m!63383))

(declare-fun m!63385 () Bool)

(assert (=> b!67780 m!63385))

(declare-fun m!63387 () Bool)

(assert (=> b!67781 m!63387))

(assert (=> d!13795 d!14465))

(assert (=> b!66788 d!14163))

(declare-fun b!67794 () Bool)

(declare-fun e!44417 () SeekEntryResult!227)

(declare-fun e!44418 () SeekEntryResult!227)

(assert (=> b!67794 (= e!44417 e!44418)))

(declare-fun lt!29541 () (_ BitVec 64))

(declare-fun c!9512 () Bool)

(assert (=> b!67794 (= c!9512 (= lt!29541 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67795 () Bool)

(declare-fun e!44419 () SeekEntryResult!227)

(assert (=> b!67795 (= e!44419 (MissingVacant!227 (index!3038 lt!28921)))))

(declare-fun d!14467 () Bool)

(declare-fun lt!29542 () SeekEntryResult!227)

(assert (=> d!14467 (and (or ((_ is Undefined!227) lt!29542) (not ((_ is Found!227) lt!29542)) (and (bvsge (index!3037 lt!29542) #b00000000000000000000000000000000) (bvslt (index!3037 lt!29542) (size!2061 (_keys!3786 newMap!16))))) (or ((_ is Undefined!227) lt!29542) ((_ is Found!227) lt!29542) (not ((_ is MissingVacant!227) lt!29542)) (not (= (index!3039 lt!29542) (index!3038 lt!28921))) (and (bvsge (index!3039 lt!29542) #b00000000000000000000000000000000) (bvslt (index!3039 lt!29542) (size!2061 (_keys!3786 newMap!16))))) (or ((_ is Undefined!227) lt!29542) (ite ((_ is Found!227) lt!29542) (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!29542)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (and ((_ is MissingVacant!227) lt!29542) (= (index!3039 lt!29542) (index!3038 lt!28921)) (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3039 lt!29542)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!14467 (= lt!29542 e!44417)))

(declare-fun c!9514 () Bool)

(assert (=> d!14467 (= c!9514 (bvsge (x!10697 lt!28921) #b01111111111111111111111111111110))))

(assert (=> d!14467 (= lt!29541 (select (arr!1826 (_keys!3786 newMap!16)) (index!3038 lt!28921)))))

(assert (=> d!14467 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14467 (= (seekKeyOrZeroReturnVacant!0 (x!10697 lt!28921) (index!3038 lt!28921) (index!3038 lt!28921) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)) lt!29542)))

(declare-fun b!67796 () Bool)

(assert (=> b!67796 (= e!44418 (Found!227 (index!3038 lt!28921)))))

(declare-fun b!67797 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!67797 (= e!44419 (seekKeyOrZeroReturnVacant!0 (bvadd (x!10697 lt!28921) #b00000000000000000000000000000001) (nextIndex!0 (index!3038 lt!28921) (bvadd (x!10697 lt!28921) #b00000000000000000000000000000001) (mask!6081 newMap!16)) (index!3038 lt!28921) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(declare-fun b!67798 () Bool)

(assert (=> b!67798 (= e!44417 Undefined!227)))

(declare-fun b!67799 () Bool)

(declare-fun c!9513 () Bool)

(assert (=> b!67799 (= c!9513 (= lt!29541 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67799 (= e!44418 e!44419)))

(assert (= (and d!14467 c!9514) b!67798))

(assert (= (and d!14467 (not c!9514)) b!67794))

(assert (= (and b!67794 c!9512) b!67796))

(assert (= (and b!67794 (not c!9512)) b!67799))

(assert (= (and b!67799 c!9513) b!67795))

(assert (= (and b!67799 (not c!9513)) b!67797))

(declare-fun m!63389 () Bool)

(assert (=> d!14467 m!63389))

(declare-fun m!63391 () Bool)

(assert (=> d!14467 m!63391))

(assert (=> d!14467 m!61299))

(assert (=> d!14467 m!61297))

(declare-fun m!63393 () Bool)

(assert (=> b!67797 m!63393))

(assert (=> b!67797 m!63393))

(assert (=> b!67797 m!60827))

(declare-fun m!63395 () Bool)

(assert (=> b!67797 m!63395))

(assert (=> b!66737 d!14467))

(declare-fun d!14469 () Bool)

(declare-fun e!44420 () Bool)

(assert (=> d!14469 e!44420))

(declare-fun res!36563 () Bool)

(assert (=> d!14469 (=> res!36563 e!44420)))

(declare-fun lt!29543 () Bool)

(assert (=> d!14469 (= res!36563 (not lt!29543))))

(declare-fun lt!29546 () Bool)

(assert (=> d!14469 (= lt!29543 lt!29546)))

(declare-fun lt!29545 () Unit!1824)

(declare-fun e!44421 () Unit!1824)

(assert (=> d!14469 (= lt!29545 e!44421)))

(declare-fun c!9515 () Bool)

(assert (=> d!14469 (= c!9515 lt!29546)))

(assert (=> d!14469 (= lt!29546 (containsKey!134 (toList!705 lt!28956) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14469 (= (contains!705 lt!28956 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29543)))

(declare-fun b!67800 () Bool)

(declare-fun lt!29544 () Unit!1824)

(assert (=> b!67800 (= e!44421 lt!29544)))

(assert (=> b!67800 (= lt!29544 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28956) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!67800 (isDefined!83 (getValueByKey!131 (toList!705 lt!28956) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67801 () Bool)

(declare-fun Unit!1887 () Unit!1824)

(assert (=> b!67801 (= e!44421 Unit!1887)))

(declare-fun b!67802 () Bool)

(assert (=> b!67802 (= e!44420 (isDefined!83 (getValueByKey!131 (toList!705 lt!28956) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14469 c!9515) b!67800))

(assert (= (and d!14469 (not c!9515)) b!67801))

(assert (= (and d!14469 (not res!36563)) b!67802))

(declare-fun m!63397 () Bool)

(assert (=> d!14469 m!63397))

(declare-fun m!63399 () Bool)

(assert (=> b!67800 m!63399))

(assert (=> b!67800 m!61419))

(assert (=> b!67800 m!61419))

(declare-fun m!63401 () Bool)

(assert (=> b!67800 m!63401))

(assert (=> b!67802 m!61419))

(assert (=> b!67802 m!61419))

(assert (=> b!67802 m!63401))

(assert (=> d!13835 d!14469))

(declare-fun e!44423 () Option!137)

(declare-fun b!67805 () Bool)

(assert (=> b!67805 (= e!44423 (getValueByKey!131 (t!4929 lt!28954) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67803 () Bool)

(declare-fun e!44422 () Option!137)

(assert (=> b!67803 (= e!44422 (Some!136 (_2!1052 (h!2035 lt!28954))))))

(declare-fun c!9516 () Bool)

(declare-fun d!14471 () Bool)

(assert (=> d!14471 (= c!9516 (and ((_ is Cons!1451) lt!28954) (= (_1!1052 (h!2035 lt!28954)) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14471 (= (getValueByKey!131 lt!28954 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44422)))

(declare-fun b!67806 () Bool)

(assert (=> b!67806 (= e!44423 None!135)))

(declare-fun b!67804 () Bool)

(assert (=> b!67804 (= e!44422 e!44423)))

(declare-fun c!9517 () Bool)

(assert (=> b!67804 (= c!9517 (and ((_ is Cons!1451) lt!28954) (not (= (_1!1052 (h!2035 lt!28954)) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14471 c!9516) b!67803))

(assert (= (and d!14471 (not c!9516)) b!67804))

(assert (= (and b!67804 c!9517) b!67805))

(assert (= (and b!67804 (not c!9517)) b!67806))

(declare-fun m!63403 () Bool)

(assert (=> b!67805 m!63403))

(assert (=> d!13835 d!14471))

(declare-fun d!14473 () Bool)

(assert (=> d!14473 (= (getValueByKey!131 lt!28954 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29547 () Unit!1824)

(assert (=> d!14473 (= lt!29547 (choose!380 lt!28954 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44424 () Bool)

(assert (=> d!14473 e!44424))

(declare-fun res!36564 () Bool)

(assert (=> d!14473 (=> (not res!36564) (not e!44424))))

(assert (=> d!14473 (= res!36564 (isStrictlySorted!276 lt!28954))))

(assert (=> d!14473 (= (lemmaContainsTupThenGetReturnValue!48 lt!28954 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29547)))

(declare-fun b!67807 () Bool)

(declare-fun res!36565 () Bool)

(assert (=> b!67807 (=> (not res!36565) (not e!44424))))

(assert (=> b!67807 (= res!36565 (containsKey!134 lt!28954 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67808 () Bool)

(assert (=> b!67808 (= e!44424 (contains!709 lt!28954 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14473 res!36564) b!67807))

(assert (= (and b!67807 res!36565) b!67808))

(assert (=> d!14473 m!61413))

(declare-fun m!63405 () Bool)

(assert (=> d!14473 m!63405))

(declare-fun m!63407 () Bool)

(assert (=> d!14473 m!63407))

(declare-fun m!63409 () Bool)

(assert (=> b!67807 m!63409))

(declare-fun m!63411 () Bool)

(assert (=> b!67808 m!63411))

(assert (=> d!13835 d!14473))

(declare-fun b!67809 () Bool)

(declare-fun e!44429 () List!1455)

(declare-fun call!5683 () List!1455)

(assert (=> b!67809 (= e!44429 call!5683)))

(declare-fun b!67810 () Bool)

(declare-fun e!44425 () List!1455)

(declare-fun e!44427 () List!1455)

(assert (=> b!67810 (= e!44425 e!44427)))

(declare-fun c!9520 () Bool)

(assert (=> b!67810 (= c!9520 (and ((_ is Cons!1451) (toList!705 lt!28666)) (= (_1!1052 (h!2035 (toList!705 lt!28666))) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67811 () Bool)

(declare-fun res!36566 () Bool)

(declare-fun e!44428 () Bool)

(assert (=> b!67811 (=> (not res!36566) (not e!44428))))

(declare-fun lt!29548 () List!1455)

(assert (=> b!67811 (= res!36566 (containsKey!134 lt!29548 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun bm!5680 () Bool)

(declare-fun call!5685 () List!1455)

(assert (=> bm!5680 (= call!5683 call!5685)))

(declare-fun b!67812 () Bool)

(declare-fun call!5684 () List!1455)

(assert (=> b!67812 (= e!44425 call!5684)))

(declare-fun b!67813 () Bool)

(declare-fun c!9521 () Bool)

(assert (=> b!67813 (= c!9521 (and ((_ is Cons!1451) (toList!705 lt!28666)) (bvsgt (_1!1052 (h!2035 (toList!705 lt!28666))) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67813 (= e!44427 e!44429)))

(declare-fun e!44426 () List!1455)

(declare-fun b!67814 () Bool)

(assert (=> b!67814 (= e!44426 (ite c!9520 (t!4929 (toList!705 lt!28666)) (ite c!9521 (Cons!1451 (h!2035 (toList!705 lt!28666)) (t!4929 (toList!705 lt!28666))) Nil!1452)))))

(declare-fun d!14475 () Bool)

(assert (=> d!14475 e!44428))

(declare-fun res!36567 () Bool)

(assert (=> d!14475 (=> (not res!36567) (not e!44428))))

(assert (=> d!14475 (= res!36567 (isStrictlySorted!276 lt!29548))))

(assert (=> d!14475 (= lt!29548 e!44425)))

(declare-fun c!9518 () Bool)

(assert (=> d!14475 (= c!9518 (and ((_ is Cons!1451) (toList!705 lt!28666)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28666))) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14475 (isStrictlySorted!276 (toList!705 lt!28666))))

(assert (=> d!14475 (= (insertStrictlySorted!51 (toList!705 lt!28666) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29548)))

(declare-fun b!67815 () Bool)

(assert (=> b!67815 (= e!44426 (insertStrictlySorted!51 (t!4929 (toList!705 lt!28666)) (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!67816 () Bool)

(assert (=> b!67816 (= e!44427 call!5685)))

(declare-fun bm!5681 () Bool)

(assert (=> bm!5681 (= call!5685 call!5684)))

(declare-fun b!67817 () Bool)

(assert (=> b!67817 (= e!44429 call!5683)))

(declare-fun bm!5682 () Bool)

(assert (=> bm!5682 (= call!5684 ($colon$colon!62 e!44426 (ite c!9518 (h!2035 (toList!705 lt!28666)) (tuple2!2083 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9519 () Bool)

(assert (=> bm!5682 (= c!9519 c!9518)))

(declare-fun b!67818 () Bool)

(assert (=> b!67818 (= e!44428 (contains!709 lt!29548 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14475 c!9518) b!67812))

(assert (= (and d!14475 (not c!9518)) b!67810))

(assert (= (and b!67810 c!9520) b!67816))

(assert (= (and b!67810 (not c!9520)) b!67813))

(assert (= (and b!67813 c!9521) b!67809))

(assert (= (and b!67813 (not c!9521)) b!67817))

(assert (= (or b!67809 b!67817) bm!5680))

(assert (= (or b!67816 bm!5680) bm!5681))

(assert (= (or b!67812 bm!5681) bm!5682))

(assert (= (and bm!5682 c!9519) b!67815))

(assert (= (and bm!5682 (not c!9519)) b!67814))

(assert (= (and d!14475 res!36567) b!67811))

(assert (= (and b!67811 res!36566) b!67818))

(declare-fun m!63413 () Bool)

(assert (=> bm!5682 m!63413))

(declare-fun m!63415 () Bool)

(assert (=> b!67815 m!63415))

(declare-fun m!63417 () Bool)

(assert (=> b!67811 m!63417))

(declare-fun m!63419 () Bool)

(assert (=> b!67818 m!63419))

(declare-fun m!63421 () Bool)

(assert (=> d!14475 m!63421))

(declare-fun m!63423 () Bool)

(assert (=> d!14475 m!63423))

(assert (=> d!13835 d!14475))

(declare-fun d!14477 () Bool)

(assert (=> d!14477 (= ($colon$colon!62 e!43962 (ite c!9300 (h!2035 (toList!705 lt!28527)) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520)))) (Cons!1451 (ite c!9300 (h!2035 (toList!705 lt!28527)) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))) e!43962))))

(assert (=> bm!5612 d!14477))

(declare-fun d!14479 () Bool)

(assert (=> d!14479 (= (isDefined!83 (getValueByKey!131 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))) (not (isEmpty!315 (getValueByKey!131 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(declare-fun bs!2935 () Bool)

(assert (= bs!2935 d!14479))

(assert (=> bs!2935 m!61849))

(declare-fun m!63425 () Bool)

(assert (=> bs!2935 m!63425))

(assert (=> b!67013 d!14479))

(declare-fun e!44431 () Option!137)

(declare-fun b!67821 () Bool)

(assert (=> b!67821 (= e!44431 (getValueByKey!131 (t!4929 (toList!705 call!5542)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67819 () Bool)

(declare-fun e!44430 () Option!137)

(assert (=> b!67819 (= e!44430 (Some!136 (_2!1052 (h!2035 (toList!705 call!5542)))))))

(declare-fun d!14481 () Bool)

(declare-fun c!9522 () Bool)

(assert (=> d!14481 (= c!9522 (and ((_ is Cons!1451) (toList!705 call!5542)) (= (_1!1052 (h!2035 (toList!705 call!5542))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!14481 (= (getValueByKey!131 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44430)))

(declare-fun b!67822 () Bool)

(assert (=> b!67822 (= e!44431 None!135)))

(declare-fun b!67820 () Bool)

(assert (=> b!67820 (= e!44430 e!44431)))

(declare-fun c!9523 () Bool)

(assert (=> b!67820 (= c!9523 (and ((_ is Cons!1451) (toList!705 call!5542)) (not (= (_1!1052 (h!2035 (toList!705 call!5542))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(assert (= (and d!14481 c!9522) b!67819))

(assert (= (and d!14481 (not c!9522)) b!67820))

(assert (= (and b!67820 c!9523) b!67821))

(assert (= (and b!67820 (not c!9523)) b!67822))

(assert (=> b!67821 m!60827))

(declare-fun m!63427 () Bool)

(assert (=> b!67821 m!63427))

(assert (=> b!67013 d!14481))

(declare-fun e!44433 () Option!137)

(declare-fun b!67825 () Bool)

(assert (=> b!67825 (= e!44433 (getValueByKey!131 (t!4929 (toList!705 lt!29060)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!67823 () Bool)

(declare-fun e!44432 () Option!137)

(assert (=> b!67823 (= e!44432 (Some!136 (_2!1052 (h!2035 (toList!705 lt!29060)))))))

(declare-fun d!14483 () Bool)

(declare-fun c!9524 () Bool)

(assert (=> d!14483 (= c!9524 (and ((_ is Cons!1451) (toList!705 lt!29060)) (= (_1!1052 (h!2035 (toList!705 lt!29060))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!14483 (= (getValueByKey!131 (toList!705 lt!29060) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) e!44432)))

(declare-fun b!67826 () Bool)

(assert (=> b!67826 (= e!44433 None!135)))

(declare-fun b!67824 () Bool)

(assert (=> b!67824 (= e!44432 e!44433)))

(declare-fun c!9525 () Bool)

(assert (=> b!67824 (= c!9525 (and ((_ is Cons!1451) (toList!705 lt!29060)) (not (= (_1!1052 (h!2035 (toList!705 lt!29060))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (= (and d!14483 c!9524) b!67823))

(assert (= (and d!14483 (not c!9524)) b!67824))

(assert (= (and b!67824 c!9525) b!67825))

(assert (= (and b!67824 (not c!9525)) b!67826))

(declare-fun m!63429 () Bool)

(assert (=> b!67825 m!63429))

(assert (=> b!66913 d!14483))

(declare-fun d!14485 () Bool)

(declare-fun lt!29549 () Bool)

(assert (=> d!14485 (= lt!29549 (select (content!72 lt!28685) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(declare-fun e!44435 () Bool)

(assert (=> d!14485 (= lt!29549 e!44435)))

(declare-fun res!36569 () Bool)

(assert (=> d!14485 (=> (not res!36569) (not e!44435))))

(assert (=> d!14485 (= res!36569 ((_ is Cons!1451) lt!28685))))

(assert (=> d!14485 (= (contains!709 lt!28685 (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))) lt!29549)))

(declare-fun b!67827 () Bool)

(declare-fun e!44434 () Bool)

(assert (=> b!67827 (= e!44435 e!44434)))

(declare-fun res!36568 () Bool)

(assert (=> b!67827 (=> res!36568 e!44434)))

(assert (=> b!67827 (= res!36568 (= (h!2035 lt!28685) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(declare-fun b!67828 () Bool)

(assert (=> b!67828 (= e!44434 (contains!709 (t!4929 lt!28685) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(assert (= (and d!14485 res!36569) b!67827))

(assert (= (and b!67827 (not res!36568)) b!67828))

(declare-fun m!63431 () Bool)

(assert (=> d!14485 m!63431))

(declare-fun m!63433 () Bool)

(assert (=> d!14485 m!63433))

(declare-fun m!63435 () Bool)

(assert (=> b!67828 m!63435))

(assert (=> b!67123 d!14485))

(declare-fun d!14487 () Bool)

(assert (=> d!14487 (= (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669)) (not (isEmpty!315 (getValueByKey!131 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669))))))

(declare-fun bs!2936 () Bool)

(assert (= bs!2936 d!14487))

(assert (=> bs!2936 m!61339))

(declare-fun m!63437 () Bool)

(assert (=> bs!2936 m!63437))

(assert (=> b!66758 d!14487))

(declare-fun e!44437 () Option!137)

(declare-fun b!67831 () Bool)

(assert (=> b!67831 (= e!44437 (getValueByKey!131 (t!4929 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) lt!28669))))

(declare-fun e!44436 () Option!137)

(declare-fun b!67829 () Bool)

(assert (=> b!67829 (= e!44436 (Some!136 (_2!1052 (h!2035 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun c!9526 () Bool)

(declare-fun d!14489 () Bool)

(assert (=> d!14489 (= c!9526 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28669)))))

(assert (=> d!14489 (= (getValueByKey!131 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669) e!44436)))

(declare-fun b!67832 () Bool)

(assert (=> b!67832 (= e!44437 None!135)))

(declare-fun b!67830 () Bool)

(assert (=> b!67830 (= e!44436 e!44437)))

(declare-fun c!9527 () Bool)

(assert (=> b!67830 (= c!9527 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (not (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28669))))))

(assert (= (and d!14489 c!9526) b!67829))

(assert (= (and d!14489 (not c!9526)) b!67830))

(assert (= (and b!67830 c!9527) b!67831))

(assert (= (and b!67830 (not c!9527)) b!67832))

(declare-fun m!63439 () Bool)

(assert (=> b!67831 m!63439))

(assert (=> b!66758 d!14489))

(declare-fun b!67833 () Bool)

(declare-fun res!36578 () Bool)

(declare-fun e!44441 () Bool)

(assert (=> b!67833 (=> (not res!36578) (not e!44441))))

(declare-fun e!44446 () Bool)

(assert (=> b!67833 (= res!36578 e!44446)))

(declare-fun c!9533 () Bool)

(assert (=> b!67833 (= c!9533 (not (= (bvand (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!67834 () Bool)

(declare-fun call!5690 () Bool)

(assert (=> b!67834 (= e!44446 (not call!5690))))

(declare-fun b!67835 () Bool)

(declare-fun e!44442 () Bool)

(assert (=> b!67835 (= e!44442 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000)))))

(declare-fun b!67836 () Bool)

(declare-fun e!44444 () Bool)

(assert (=> b!67836 (= e!44446 e!44444)))

(declare-fun res!36572 () Bool)

(assert (=> b!67836 (= res!36572 call!5690)))

(assert (=> b!67836 (=> (not res!36572) (not e!44444))))

(declare-fun b!67837 () Bool)

(declare-fun e!44443 () Bool)

(declare-fun lt!29562 () ListLongMap!1379)

(assert (=> b!67837 (= e!44443 (= (apply!72 lt!29562 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (_values!2129 (_2!1051 lt!28794))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 (_2!1051 lt!28794)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!67837 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (_values!2129 (_2!1051 lt!28794)))))))

(assert (=> b!67837 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))))))

(declare-fun d!14491 () Bool)

(assert (=> d!14491 e!44441))

(declare-fun res!36573 () Bool)

(assert (=> d!14491 (=> (not res!36573) (not e!44441))))

(assert (=> d!14491 (= res!36573 (or (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))))))))

(declare-fun lt!29570 () ListLongMap!1379)

(assert (=> d!14491 (= lt!29562 lt!29570)))

(declare-fun lt!29567 () Unit!1824)

(declare-fun e!44440 () Unit!1824)

(assert (=> d!14491 (= lt!29567 e!44440)))

(declare-fun c!9531 () Bool)

(declare-fun e!44438 () Bool)

(assert (=> d!14491 (= c!9531 e!44438)))

(declare-fun res!36577 () Bool)

(assert (=> d!14491 (=> (not res!36577) (not e!44438))))

(assert (=> d!14491 (= res!36577 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))))))

(declare-fun e!44445 () ListLongMap!1379)

(assert (=> d!14491 (= lt!29570 e!44445)))

(declare-fun c!9528 () Bool)

(assert (=> d!14491 (= c!9528 (and (not (= (bvand (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14491 (validMask!0 (mask!6081 (_2!1051 lt!28794)))))

(assert (=> d!14491 (= (getCurrentListMap!403 (_keys!3786 (_2!1051 lt!28794)) (_values!2129 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794)) (extraKeys!2017 (_2!1051 lt!28794)) (zeroValue!2054 (_2!1051 lt!28794)) (minValue!2054 (_2!1051 lt!28794)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28794))) lt!29562)))

(declare-fun b!67838 () Bool)

(declare-fun e!44448 () Bool)

(declare-fun e!44450 () Bool)

(assert (=> b!67838 (= e!44448 e!44450)))

(declare-fun res!36575 () Bool)

(declare-fun call!5687 () Bool)

(assert (=> b!67838 (= res!36575 call!5687)))

(assert (=> b!67838 (=> (not res!36575) (not e!44450))))

(declare-fun b!67839 () Bool)

(assert (=> b!67839 (= e!44448 (not call!5687))))

(declare-fun b!67840 () Bool)

(assert (=> b!67840 (= e!44444 (= (apply!72 lt!29562 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 (_2!1051 lt!28794))))))

(declare-fun bm!5683 () Bool)

(declare-fun call!5689 () ListLongMap!1379)

(declare-fun call!5692 () ListLongMap!1379)

(assert (=> bm!5683 (= call!5689 call!5692)))

(declare-fun b!67841 () Bool)

(declare-fun Unit!1888 () Unit!1824)

(assert (=> b!67841 (= e!44440 Unit!1888)))

(declare-fun b!67842 () Bool)

(declare-fun e!44439 () ListLongMap!1379)

(assert (=> b!67842 (= e!44439 call!5689)))

(declare-fun bm!5684 () Bool)

(declare-fun call!5688 () ListLongMap!1379)

(assert (=> bm!5684 (= call!5692 call!5688)))

(declare-fun call!5686 () ListLongMap!1379)

(declare-fun bm!5685 () Bool)

(declare-fun c!9530 () Bool)

(assert (=> bm!5685 (= call!5686 (+!86 (ite c!9528 call!5688 (ite c!9530 call!5692 call!5689)) (ite (or c!9528 c!9530) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (_2!1051 lt!28794))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (_2!1051 lt!28794))))))))

(declare-fun b!67843 () Bool)

(declare-fun e!44449 () ListLongMap!1379)

(declare-fun call!5691 () ListLongMap!1379)

(assert (=> b!67843 (= e!44449 call!5691)))

(declare-fun bm!5686 () Bool)

(assert (=> bm!5686 (= call!5691 call!5686)))

(declare-fun bm!5687 () Bool)

(assert (=> bm!5687 (= call!5687 (contains!705 lt!29562 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67844 () Bool)

(declare-fun res!36576 () Bool)

(assert (=> b!67844 (=> (not res!36576) (not e!44441))))

(declare-fun e!44447 () Bool)

(assert (=> b!67844 (= res!36576 e!44447)))

(declare-fun res!36571 () Bool)

(assert (=> b!67844 (=> res!36571 e!44447)))

(assert (=> b!67844 (= res!36571 (not e!44442))))

(declare-fun res!36574 () Bool)

(assert (=> b!67844 (=> (not res!36574) (not e!44442))))

(assert (=> b!67844 (= res!36574 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))))))

(declare-fun b!67845 () Bool)

(assert (=> b!67845 (= e!44441 e!44448)))

(declare-fun c!9532 () Bool)

(assert (=> b!67845 (= c!9532 (not (= (bvand (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67846 () Bool)

(assert (=> b!67846 (= e!44445 (+!86 call!5686 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (_2!1051 lt!28794)))))))

(declare-fun b!67847 () Bool)

(assert (=> b!67847 (= e!44438 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000)))))

(declare-fun b!67848 () Bool)

(assert (=> b!67848 (= e!44450 (= (apply!72 lt!29562 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 (_2!1051 lt!28794))))))

(declare-fun b!67849 () Bool)

(declare-fun lt!29559 () Unit!1824)

(assert (=> b!67849 (= e!44440 lt!29559)))

(declare-fun lt!29561 () ListLongMap!1379)

(assert (=> b!67849 (= lt!29561 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (_2!1051 lt!28794)) (_values!2129 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794)) (extraKeys!2017 (_2!1051 lt!28794)) (zeroValue!2054 (_2!1051 lt!28794)) (minValue!2054 (_2!1051 lt!28794)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28794))))))

(declare-fun lt!29566 () (_ BitVec 64))

(assert (=> b!67849 (= lt!29566 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29564 () (_ BitVec 64))

(assert (=> b!67849 (= lt!29564 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000))))

(declare-fun lt!29571 () Unit!1824)

(assert (=> b!67849 (= lt!29571 (addStillContains!48 lt!29561 lt!29566 (zeroValue!2054 (_2!1051 lt!28794)) lt!29564))))

(assert (=> b!67849 (contains!705 (+!86 lt!29561 (tuple2!2083 lt!29566 (zeroValue!2054 (_2!1051 lt!28794)))) lt!29564)))

(declare-fun lt!29565 () Unit!1824)

(assert (=> b!67849 (= lt!29565 lt!29571)))

(declare-fun lt!29556 () ListLongMap!1379)

(assert (=> b!67849 (= lt!29556 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (_2!1051 lt!28794)) (_values!2129 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794)) (extraKeys!2017 (_2!1051 lt!28794)) (zeroValue!2054 (_2!1051 lt!28794)) (minValue!2054 (_2!1051 lt!28794)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28794))))))

(declare-fun lt!29568 () (_ BitVec 64))

(assert (=> b!67849 (= lt!29568 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29560 () (_ BitVec 64))

(assert (=> b!67849 (= lt!29560 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000))))

(declare-fun lt!29550 () Unit!1824)

(assert (=> b!67849 (= lt!29550 (addApplyDifferent!48 lt!29556 lt!29568 (minValue!2054 (_2!1051 lt!28794)) lt!29560))))

(assert (=> b!67849 (= (apply!72 (+!86 lt!29556 (tuple2!2083 lt!29568 (minValue!2054 (_2!1051 lt!28794)))) lt!29560) (apply!72 lt!29556 lt!29560))))

(declare-fun lt!29552 () Unit!1824)

(assert (=> b!67849 (= lt!29552 lt!29550)))

(declare-fun lt!29569 () ListLongMap!1379)

(assert (=> b!67849 (= lt!29569 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (_2!1051 lt!28794)) (_values!2129 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794)) (extraKeys!2017 (_2!1051 lt!28794)) (zeroValue!2054 (_2!1051 lt!28794)) (minValue!2054 (_2!1051 lt!28794)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28794))))))

(declare-fun lt!29554 () (_ BitVec 64))

(assert (=> b!67849 (= lt!29554 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29555 () (_ BitVec 64))

(assert (=> b!67849 (= lt!29555 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000))))

(declare-fun lt!29553 () Unit!1824)

(assert (=> b!67849 (= lt!29553 (addApplyDifferent!48 lt!29569 lt!29554 (zeroValue!2054 (_2!1051 lt!28794)) lt!29555))))

(assert (=> b!67849 (= (apply!72 (+!86 lt!29569 (tuple2!2083 lt!29554 (zeroValue!2054 (_2!1051 lt!28794)))) lt!29555) (apply!72 lt!29569 lt!29555))))

(declare-fun lt!29563 () Unit!1824)

(assert (=> b!67849 (= lt!29563 lt!29553)))

(declare-fun lt!29558 () ListLongMap!1379)

(assert (=> b!67849 (= lt!29558 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (_2!1051 lt!28794)) (_values!2129 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794)) (extraKeys!2017 (_2!1051 lt!28794)) (zeroValue!2054 (_2!1051 lt!28794)) (minValue!2054 (_2!1051 lt!28794)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28794))))))

(declare-fun lt!29557 () (_ BitVec 64))

(assert (=> b!67849 (= lt!29557 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29551 () (_ BitVec 64))

(assert (=> b!67849 (= lt!29551 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000))))

(assert (=> b!67849 (= lt!29559 (addApplyDifferent!48 lt!29558 lt!29557 (minValue!2054 (_2!1051 lt!28794)) lt!29551))))

(assert (=> b!67849 (= (apply!72 (+!86 lt!29558 (tuple2!2083 lt!29557 (minValue!2054 (_2!1051 lt!28794)))) lt!29551) (apply!72 lt!29558 lt!29551))))

(declare-fun b!67850 () Bool)

(declare-fun c!9529 () Bool)

(assert (=> b!67850 (= c!9529 (and (not (= (bvand (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!67850 (= e!44449 e!44439)))

(declare-fun b!67851 () Bool)

(assert (=> b!67851 (= e!44445 e!44449)))

(assert (=> b!67851 (= c!9530 (and (not (= (bvand (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 (_2!1051 lt!28794)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!67852 () Bool)

(assert (=> b!67852 (= e!44447 e!44443)))

(declare-fun res!36570 () Bool)

(assert (=> b!67852 (=> (not res!36570) (not e!44443))))

(assert (=> b!67852 (= res!36570 (contains!705 lt!29562 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000)))))

(assert (=> b!67852 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))))))

(declare-fun b!67853 () Bool)

(assert (=> b!67853 (= e!44439 call!5691)))

(declare-fun bm!5688 () Bool)

(assert (=> bm!5688 (= call!5688 (getCurrentListMapNoExtraKeys!51 (_keys!3786 (_2!1051 lt!28794)) (_values!2129 (_2!1051 lt!28794)) (mask!6081 (_2!1051 lt!28794)) (extraKeys!2017 (_2!1051 lt!28794)) (zeroValue!2054 (_2!1051 lt!28794)) (minValue!2054 (_2!1051 lt!28794)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28794))))))

(declare-fun bm!5689 () Bool)

(assert (=> bm!5689 (= call!5690 (contains!705 lt!29562 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14491 c!9528) b!67846))

(assert (= (and d!14491 (not c!9528)) b!67851))

(assert (= (and b!67851 c!9530) b!67843))

(assert (= (and b!67851 (not c!9530)) b!67850))

(assert (= (and b!67850 c!9529) b!67853))

(assert (= (and b!67850 (not c!9529)) b!67842))

(assert (= (or b!67853 b!67842) bm!5683))

(assert (= (or b!67843 bm!5683) bm!5684))

(assert (= (or b!67843 b!67853) bm!5686))

(assert (= (or b!67846 bm!5684) bm!5688))

(assert (= (or b!67846 bm!5686) bm!5685))

(assert (= (and d!14491 res!36577) b!67847))

(assert (= (and d!14491 c!9531) b!67849))

(assert (= (and d!14491 (not c!9531)) b!67841))

(assert (= (and d!14491 res!36573) b!67844))

(assert (= (and b!67844 res!36574) b!67835))

(assert (= (and b!67844 (not res!36571)) b!67852))

(assert (= (and b!67852 res!36570) b!67837))

(assert (= (and b!67844 res!36576) b!67833))

(assert (= (and b!67833 c!9533) b!67836))

(assert (= (and b!67833 (not c!9533)) b!67834))

(assert (= (and b!67836 res!36572) b!67840))

(assert (= (or b!67836 b!67834) bm!5689))

(assert (= (and b!67833 res!36578) b!67845))

(assert (= (and b!67845 c!9532) b!67838))

(assert (= (and b!67845 (not c!9532)) b!67839))

(assert (= (and b!67838 res!36575) b!67848))

(assert (= (or b!67838 b!67839) bm!5687))

(declare-fun b_lambda!3039 () Bool)

(assert (=> (not b_lambda!3039) (not b!67837)))

(declare-fun t!4947 () Bool)

(declare-fun tb!1465 () Bool)

(assert (=> (and b!66230 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 (_2!1051 lt!28794))) t!4947) tb!1465))

(declare-fun result!2591 () Bool)

(assert (=> tb!1465 (= result!2591 tp_is_empty!2449)))

(assert (=> b!67837 t!4947))

(declare-fun b_and!4197 () Bool)

(assert (= b_and!4193 (and (=> t!4947 result!2591) b_and!4197)))

(declare-fun tb!1467 () Bool)

(declare-fun t!4949 () Bool)

(assert (=> (and b!66241 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (_2!1051 lt!28794))) t!4949) tb!1467))

(declare-fun result!2593 () Bool)

(assert (= result!2593 result!2591))

(assert (=> b!67837 t!4949))

(declare-fun b_and!4199 () Bool)

(assert (= b_and!4195 (and (=> t!4949 result!2593) b_and!4199)))

(assert (=> b!67847 m!62851))

(assert (=> b!67847 m!62851))

(assert (=> b!67847 m!62853))

(declare-fun m!63441 () Bool)

(assert (=> bm!5687 m!63441))

(declare-fun m!63443 () Bool)

(assert (=> b!67840 m!63443))

(assert (=> b!67852 m!62851))

(assert (=> b!67852 m!62851))

(declare-fun m!63445 () Bool)

(assert (=> b!67852 m!63445))

(declare-fun m!63447 () Bool)

(assert (=> bm!5685 m!63447))

(declare-fun m!63449 () Bool)

(assert (=> b!67846 m!63449))

(declare-fun m!63451 () Bool)

(assert (=> b!67849 m!63451))

(declare-fun m!63453 () Bool)

(assert (=> b!67849 m!63453))

(declare-fun m!63455 () Bool)

(assert (=> b!67849 m!63455))

(declare-fun m!63457 () Bool)

(assert (=> b!67849 m!63457))

(declare-fun m!63459 () Bool)

(assert (=> b!67849 m!63459))

(assert (=> b!67849 m!63455))

(declare-fun m!63461 () Bool)

(assert (=> b!67849 m!63461))

(declare-fun m!63463 () Bool)

(assert (=> b!67849 m!63463))

(declare-fun m!63465 () Bool)

(assert (=> b!67849 m!63465))

(declare-fun m!63467 () Bool)

(assert (=> b!67849 m!63467))

(assert (=> b!67849 m!62851))

(declare-fun m!63469 () Bool)

(assert (=> b!67849 m!63469))

(assert (=> b!67849 m!63465))

(declare-fun m!63471 () Bool)

(assert (=> b!67849 m!63471))

(declare-fun m!63473 () Bool)

(assert (=> b!67849 m!63473))

(assert (=> b!67849 m!63451))

(declare-fun m!63475 () Bool)

(assert (=> b!67849 m!63475))

(assert (=> b!67849 m!63471))

(declare-fun m!63477 () Bool)

(assert (=> b!67849 m!63477))

(declare-fun m!63479 () Bool)

(assert (=> b!67849 m!63479))

(declare-fun m!63481 () Bool)

(assert (=> b!67849 m!63481))

(assert (=> bm!5688 m!63459))

(assert (=> d!14491 m!62681))

(assert (=> b!67835 m!62851))

(assert (=> b!67835 m!62851))

(assert (=> b!67835 m!62853))

(declare-fun m!63483 () Bool)

(assert (=> b!67837 m!63483))

(declare-fun m!63485 () Bool)

(assert (=> b!67837 m!63485))

(assert (=> b!67837 m!63483))

(declare-fun m!63487 () Bool)

(assert (=> b!67837 m!63487))

(assert (=> b!67837 m!63485))

(assert (=> b!67837 m!62851))

(declare-fun m!63489 () Bool)

(assert (=> b!67837 m!63489))

(assert (=> b!67837 m!62851))

(declare-fun m!63491 () Bool)

(assert (=> b!67848 m!63491))

(declare-fun m!63493 () Bool)

(assert (=> bm!5689 m!63493))

(assert (=> d!13859 d!14491))

(declare-fun b!67856 () Bool)

(declare-fun e!44452 () Option!137)

(assert (=> b!67856 (= e!44452 (getValueByKey!131 (t!4929 (toList!705 lt!29130)) (_1!1052 (tuple2!2083 lt!28712 lt!28708))))))

(declare-fun b!67854 () Bool)

(declare-fun e!44451 () Option!137)

(assert (=> b!67854 (= e!44451 (Some!136 (_2!1052 (h!2035 (toList!705 lt!29130)))))))

(declare-fun d!14493 () Bool)

(declare-fun c!9534 () Bool)

(assert (=> d!14493 (= c!9534 (and ((_ is Cons!1451) (toList!705 lt!29130)) (= (_1!1052 (h!2035 (toList!705 lt!29130))) (_1!1052 (tuple2!2083 lt!28712 lt!28708)))))))

(assert (=> d!14493 (= (getValueByKey!131 (toList!705 lt!29130) (_1!1052 (tuple2!2083 lt!28712 lt!28708))) e!44451)))

(declare-fun b!67857 () Bool)

(assert (=> b!67857 (= e!44452 None!135)))

(declare-fun b!67855 () Bool)

(assert (=> b!67855 (= e!44451 e!44452)))

(declare-fun c!9535 () Bool)

(assert (=> b!67855 (= c!9535 (and ((_ is Cons!1451) (toList!705 lt!29130)) (not (= (_1!1052 (h!2035 (toList!705 lt!29130))) (_1!1052 (tuple2!2083 lt!28712 lt!28708))))))))

(assert (= (and d!14493 c!9534) b!67854))

(assert (= (and d!14493 (not c!9534)) b!67855))

(assert (= (and b!67855 c!9535) b!67856))

(assert (= (and b!67855 (not c!9535)) b!67857))

(declare-fun m!63495 () Bool)

(assert (=> b!67856 m!63495))

(assert (=> b!67019 d!14493))

(declare-fun d!14495 () Bool)

(declare-fun e!44453 () Bool)

(assert (=> d!14495 e!44453))

(declare-fun res!36580 () Bool)

(assert (=> d!14495 (=> (not res!36580) (not e!44453))))

(declare-fun lt!29574 () ListLongMap!1379)

(assert (=> d!14495 (= res!36580 (contains!705 lt!29574 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun lt!29572 () List!1455)

(assert (=> d!14495 (= lt!29574 (ListLongMap!1380 lt!29572))))

(declare-fun lt!29573 () Unit!1824)

(declare-fun lt!29575 () Unit!1824)

(assert (=> d!14495 (= lt!29573 lt!29575)))

(assert (=> d!14495 (= (getValueByKey!131 lt!29572 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14495 (= lt!29575 (lemmaContainsTupThenGetReturnValue!48 lt!29572 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14495 (= lt!29572 (insertStrictlySorted!51 (toList!705 call!5574) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14495 (= (+!86 call!5574 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) lt!29574)))

(declare-fun b!67858 () Bool)

(declare-fun res!36579 () Bool)

(assert (=> b!67858 (=> (not res!36579) (not e!44453))))

(assert (=> b!67858 (= res!36579 (= (getValueByKey!131 (toList!705 lt!29574) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(declare-fun b!67859 () Bool)

(assert (=> b!67859 (= e!44453 (contains!709 (toList!705 lt!29574) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(assert (= (and d!14495 res!36580) b!67858))

(assert (= (and b!67858 res!36579) b!67859))

(declare-fun m!63497 () Bool)

(assert (=> d!14495 m!63497))

(declare-fun m!63499 () Bool)

(assert (=> d!14495 m!63499))

(declare-fun m!63501 () Bool)

(assert (=> d!14495 m!63501))

(declare-fun m!63503 () Bool)

(assert (=> d!14495 m!63503))

(declare-fun m!63505 () Bool)

(assert (=> b!67858 m!63505))

(declare-fun m!63507 () Bool)

(assert (=> b!67859 m!63507))

(assert (=> b!66831 d!14495))

(declare-fun d!14497 () Bool)

(assert (=> d!14497 (= (get!1127 (getValueByKey!131 (toList!705 lt!28663) lt!28656)) (v!2484 (getValueByKey!131 (toList!705 lt!28663) lt!28656)))))

(assert (=> d!13831 d!14497))

(declare-fun b!67862 () Bool)

(declare-fun e!44455 () Option!137)

(assert (=> b!67862 (= e!44455 (getValueByKey!131 (t!4929 (toList!705 lt!28663)) lt!28656))))

(declare-fun b!67860 () Bool)

(declare-fun e!44454 () Option!137)

(assert (=> b!67860 (= e!44454 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28663)))))))

(declare-fun d!14499 () Bool)

(declare-fun c!9536 () Bool)

(assert (=> d!14499 (= c!9536 (and ((_ is Cons!1451) (toList!705 lt!28663)) (= (_1!1052 (h!2035 (toList!705 lt!28663))) lt!28656)))))

(assert (=> d!14499 (= (getValueByKey!131 (toList!705 lt!28663) lt!28656) e!44454)))

(declare-fun b!67863 () Bool)

(assert (=> b!67863 (= e!44455 None!135)))

(declare-fun b!67861 () Bool)

(assert (=> b!67861 (= e!44454 e!44455)))

(declare-fun c!9537 () Bool)

(assert (=> b!67861 (= c!9537 (and ((_ is Cons!1451) (toList!705 lt!28663)) (not (= (_1!1052 (h!2035 (toList!705 lt!28663))) lt!28656))))))

(assert (= (and d!14499 c!9536) b!67860))

(assert (= (and d!14499 (not c!9536)) b!67861))

(assert (= (and b!67861 c!9537) b!67862))

(assert (= (and b!67861 (not c!9537)) b!67863))

(declare-fun m!63509 () Bool)

(assert (=> b!67862 m!63509))

(assert (=> d!13831 d!14499))

(declare-fun d!14501 () Bool)

(assert (=> d!14501 (= (isDefined!83 (getValueByKey!131 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))) (not (isEmpty!315 (getValueByKey!131 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(declare-fun bs!2937 () Bool)

(assert (= bs!2937 d!14501))

(assert (=> bs!2937 m!62015))

(declare-fun m!63511 () Bool)

(assert (=> bs!2937 m!63511))

(assert (=> b!67106 d!14501))

(declare-fun e!44457 () Option!137)

(declare-fun b!67866 () Bool)

(assert (=> b!67866 (= e!44457 (getValueByKey!131 (t!4929 (toList!705 call!5548)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!67864 () Bool)

(declare-fun e!44456 () Option!137)

(assert (=> b!67864 (= e!44456 (Some!136 (_2!1052 (h!2035 (toList!705 call!5548)))))))

(declare-fun c!9538 () Bool)

(declare-fun d!14503 () Bool)

(assert (=> d!14503 (= c!9538 (and ((_ is Cons!1451) (toList!705 call!5548)) (= (_1!1052 (h!2035 (toList!705 call!5548))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!14503 (= (getValueByKey!131 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44456)))

(declare-fun b!67867 () Bool)

(assert (=> b!67867 (= e!44457 None!135)))

(declare-fun b!67865 () Bool)

(assert (=> b!67865 (= e!44456 e!44457)))

(declare-fun c!9539 () Bool)

(assert (=> b!67865 (= c!9539 (and ((_ is Cons!1451) (toList!705 call!5548)) (not (= (_1!1052 (h!2035 (toList!705 call!5548))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(assert (= (and d!14503 c!9538) b!67864))

(assert (= (and d!14503 (not c!9538)) b!67865))

(assert (= (and b!67865 c!9539) b!67866))

(assert (= (and b!67865 (not c!9539)) b!67867))

(assert (=> b!67866 m!60827))

(declare-fun m!63513 () Bool)

(assert (=> b!67866 m!63513))

(assert (=> b!67106 d!14503))

(declare-fun d!14505 () Bool)

(declare-fun lt!29576 () Bool)

(assert (=> d!14505 (= lt!29576 (select (content!72 (toList!705 lt!29178)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(declare-fun e!44459 () Bool)

(assert (=> d!14505 (= lt!29576 e!44459)))

(declare-fun res!36582 () Bool)

(assert (=> d!14505 (=> (not res!36582) (not e!44459))))

(assert (=> d!14505 (= res!36582 ((_ is Cons!1451) (toList!705 lt!29178)))))

(assert (=> d!14505 (= (contains!709 (toList!705 lt!29178) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) lt!29576)))

(declare-fun b!67868 () Bool)

(declare-fun e!44458 () Bool)

(assert (=> b!67868 (= e!44459 e!44458)))

(declare-fun res!36581 () Bool)

(assert (=> b!67868 (=> res!36581 e!44458)))

(assert (=> b!67868 (= res!36581 (= (h!2035 (toList!705 lt!29178)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(declare-fun b!67869 () Bool)

(assert (=> b!67869 (= e!44458 (contains!709 (t!4929 (toList!705 lt!29178)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(assert (= (and d!14505 res!36582) b!67868))

(assert (= (and b!67868 (not res!36581)) b!67869))

(declare-fun m!63515 () Bool)

(assert (=> d!14505 m!63515))

(declare-fun m!63517 () Bool)

(assert (=> d!14505 m!63517))

(declare-fun m!63519 () Bool)

(assert (=> b!67869 m!63519))

(assert (=> b!67114 d!14505))

(declare-fun d!14507 () Bool)

(declare-fun e!44460 () Bool)

(assert (=> d!14507 e!44460))

(declare-fun res!36583 () Bool)

(assert (=> d!14507 (=> res!36583 e!44460)))

(declare-fun lt!29577 () Bool)

(assert (=> d!14507 (= res!36583 (not lt!29577))))

(declare-fun lt!29580 () Bool)

(assert (=> d!14507 (= lt!29577 lt!29580)))

(declare-fun lt!29579 () Unit!1824)

(declare-fun e!44461 () Unit!1824)

(assert (=> d!14507 (= lt!29579 e!44461)))

(declare-fun c!9540 () Bool)

(assert (=> d!14507 (= c!9540 lt!29580)))

(assert (=> d!14507 (= lt!29580 (containsKey!134 (toList!705 lt!29095) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14507 (= (contains!705 lt!29095 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) lt!29577)))

(declare-fun b!67870 () Bool)

(declare-fun lt!29578 () Unit!1824)

(assert (=> b!67870 (= e!44461 lt!29578)))

(assert (=> b!67870 (= lt!29578 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29095) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!67870 (isDefined!83 (getValueByKey!131 (toList!705 lt!29095) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67871 () Bool)

(declare-fun Unit!1889 () Unit!1824)

(assert (=> b!67871 (= e!44461 Unit!1889)))

(declare-fun b!67872 () Bool)

(assert (=> b!67872 (= e!44460 (isDefined!83 (getValueByKey!131 (toList!705 lt!29095) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14507 c!9540) b!67870))

(assert (= (and d!14507 (not c!9540)) b!67871))

(assert (= (and d!14507 (not res!36583)) b!67872))

(declare-fun m!63521 () Bool)

(assert (=> d!14507 m!63521))

(declare-fun m!63523 () Bool)

(assert (=> b!67870 m!63523))

(assert (=> b!67870 m!61805))

(assert (=> b!67870 m!61805))

(declare-fun m!63525 () Bool)

(assert (=> b!67870 m!63525))

(assert (=> b!67872 m!61805))

(assert (=> b!67872 m!61805))

(assert (=> b!67872 m!63525))

(assert (=> d!13903 d!14507))

(declare-fun b!67875 () Bool)

(declare-fun e!44463 () Option!137)

(assert (=> b!67875 (= e!44463 (getValueByKey!131 (t!4929 lt!29093) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67873 () Bool)

(declare-fun e!44462 () Option!137)

(assert (=> b!67873 (= e!44462 (Some!136 (_2!1052 (h!2035 lt!29093))))))

(declare-fun c!9541 () Bool)

(declare-fun d!14509 () Bool)

(assert (=> d!14509 (= c!9541 (and ((_ is Cons!1451) lt!29093) (= (_1!1052 (h!2035 lt!29093)) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (=> d!14509 (= (getValueByKey!131 lt!29093 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) e!44462)))

(declare-fun b!67876 () Bool)

(assert (=> b!67876 (= e!44463 None!135)))

(declare-fun b!67874 () Bool)

(assert (=> b!67874 (= e!44462 e!44463)))

(declare-fun c!9542 () Bool)

(assert (=> b!67874 (= c!9542 (and ((_ is Cons!1451) lt!29093) (not (= (_1!1052 (h!2035 lt!29093)) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))))

(assert (= (and d!14509 c!9541) b!67873))

(assert (= (and d!14509 (not c!9541)) b!67874))

(assert (= (and b!67874 c!9542) b!67875))

(assert (= (and b!67874 (not c!9542)) b!67876))

(declare-fun m!63527 () Bool)

(assert (=> b!67875 m!63527))

(assert (=> d!13903 d!14509))

(declare-fun d!14511 () Bool)

(assert (=> d!14511 (= (getValueByKey!131 lt!29093 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) (Some!136 (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun lt!29581 () Unit!1824)

(assert (=> d!14511 (= lt!29581 (choose!380 lt!29093 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun e!44464 () Bool)

(assert (=> d!14511 e!44464))

(declare-fun res!36584 () Bool)

(assert (=> d!14511 (=> (not res!36584) (not e!44464))))

(assert (=> d!14511 (= res!36584 (isStrictlySorted!276 lt!29093))))

(assert (=> d!14511 (= (lemmaContainsTupThenGetReturnValue!48 lt!29093 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) lt!29581)))

(declare-fun b!67877 () Bool)

(declare-fun res!36585 () Bool)

(assert (=> b!67877 (=> (not res!36585) (not e!44464))))

(assert (=> b!67877 (= res!36585 (containsKey!134 lt!29093 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67878 () Bool)

(assert (=> b!67878 (= e!44464 (contains!709 lt!29093 (tuple2!2083 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14511 res!36584) b!67877))

(assert (= (and b!67877 res!36585) b!67878))

(assert (=> d!14511 m!61799))

(declare-fun m!63529 () Bool)

(assert (=> d!14511 m!63529))

(declare-fun m!63531 () Bool)

(assert (=> d!14511 m!63531))

(declare-fun m!63533 () Bool)

(assert (=> b!67877 m!63533))

(declare-fun m!63535 () Bool)

(assert (=> b!67878 m!63535))

(assert (=> d!13903 d!14511))

(declare-fun b!67879 () Bool)

(declare-fun e!44469 () List!1455)

(declare-fun call!5693 () List!1455)

(assert (=> b!67879 (= e!44469 call!5693)))

(declare-fun b!67880 () Bool)

(declare-fun e!44465 () List!1455)

(declare-fun e!44467 () List!1455)

(assert (=> b!67880 (= e!44465 e!44467)))

(declare-fun c!9545 () Bool)

(assert (=> b!67880 (= c!9545 (and ((_ is Cons!1451) (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475)))) (= (_1!1052 (h!2035 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475))))) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun b!67881 () Bool)

(declare-fun res!36586 () Bool)

(declare-fun e!44468 () Bool)

(assert (=> b!67881 (=> (not res!36586) (not e!44468))))

(declare-fun lt!29582 () List!1455)

(assert (=> b!67881 (= res!36586 (containsKey!134 lt!29582 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun bm!5690 () Bool)

(declare-fun call!5695 () List!1455)

(assert (=> bm!5690 (= call!5693 call!5695)))

(declare-fun b!67882 () Bool)

(declare-fun call!5694 () List!1455)

(assert (=> b!67882 (= e!44465 call!5694)))

(declare-fun b!67883 () Bool)

(declare-fun c!9546 () Bool)

(assert (=> b!67883 (= c!9546 (and ((_ is Cons!1451) (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475)))) (bvsgt (_1!1052 (h!2035 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475))))) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (=> b!67883 (= e!44467 e!44469)))

(declare-fun b!67884 () Bool)

(declare-fun e!44466 () List!1455)

(assert (=> b!67884 (= e!44466 (ite c!9545 (t!4929 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475)))) (ite c!9546 (Cons!1451 (h!2035 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475)))) (t!4929 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475))))) Nil!1452)))))

(declare-fun d!14513 () Bool)

(assert (=> d!14513 e!44468))

(declare-fun res!36587 () Bool)

(assert (=> d!14513 (=> (not res!36587) (not e!44468))))

(assert (=> d!14513 (= res!36587 (isStrictlySorted!276 lt!29582))))

(assert (=> d!14513 (= lt!29582 e!44465)))

(declare-fun c!9543 () Bool)

(assert (=> d!14513 (= c!9543 (and ((_ is Cons!1451) (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475)))) (bvslt (_1!1052 (h!2035 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475))))) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (=> d!14513 (isStrictlySorted!276 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475))))))

(assert (=> d!14513 (= (insertStrictlySorted!51 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475))) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) lt!29582)))

(declare-fun b!67885 () Bool)

(assert (=> b!67885 (= e!44466 (insertStrictlySorted!51 (t!4929 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475)))) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!67886 () Bool)

(assert (=> b!67886 (= e!44467 call!5695)))

(declare-fun bm!5691 () Bool)

(assert (=> bm!5691 (= call!5695 call!5694)))

(declare-fun b!67887 () Bool)

(assert (=> b!67887 (= e!44469 call!5693)))

(declare-fun bm!5692 () Bool)

(assert (=> bm!5692 (= call!5694 ($colon$colon!62 e!44466 (ite c!9543 (h!2035 (toList!705 (ite c!9144 call!5474 (ite c!9146 call!5478 call!5475)))) (tuple2!2083 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun c!9544 () Bool)

(assert (=> bm!5692 (= c!9544 c!9543)))

(declare-fun b!67888 () Bool)

(assert (=> b!67888 (= e!44468 (contains!709 lt!29582 (tuple2!2083 (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) (_2!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14513 c!9543) b!67882))

(assert (= (and d!14513 (not c!9543)) b!67880))

(assert (= (and b!67880 c!9545) b!67886))

(assert (= (and b!67880 (not c!9545)) b!67883))

(assert (= (and b!67883 c!9546) b!67879))

(assert (= (and b!67883 (not c!9546)) b!67887))

(assert (= (or b!67879 b!67887) bm!5690))

(assert (= (or b!67886 bm!5690) bm!5691))

(assert (= (or b!67882 bm!5691) bm!5692))

(assert (= (and bm!5692 c!9544) b!67885))

(assert (= (and bm!5692 (not c!9544)) b!67884))

(assert (= (and d!14513 res!36587) b!67881))

(assert (= (and b!67881 res!36586) b!67888))

(declare-fun m!63537 () Bool)

(assert (=> bm!5692 m!63537))

(declare-fun m!63539 () Bool)

(assert (=> b!67885 m!63539))

(declare-fun m!63541 () Bool)

(assert (=> b!67881 m!63541))

(declare-fun m!63543 () Bool)

(assert (=> b!67888 m!63543))

(declare-fun m!63545 () Bool)

(assert (=> d!14513 m!63545))

(declare-fun m!63547 () Bool)

(assert (=> d!14513 m!63547))

(assert (=> d!13903 d!14513))

(declare-fun d!14515 () Bool)

(declare-fun e!44470 () Bool)

(assert (=> d!14515 e!44470))

(declare-fun res!36588 () Bool)

(assert (=> d!14515 (=> res!36588 e!44470)))

(declare-fun lt!29583 () Bool)

(assert (=> d!14515 (= res!36588 (not lt!29583))))

(declare-fun lt!29586 () Bool)

(assert (=> d!14515 (= lt!29583 lt!29586)))

(declare-fun lt!29585 () Unit!1824)

(declare-fun e!44471 () Unit!1824)

(assert (=> d!14515 (= lt!29585 e!44471)))

(declare-fun c!9547 () Bool)

(assert (=> d!14515 (= c!9547 lt!29586)))

(assert (=> d!14515 (= lt!29586 (containsKey!134 (toList!705 lt!28971) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14515 (= (contains!705 lt!28971 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29583)))

(declare-fun b!67889 () Bool)

(declare-fun lt!29584 () Unit!1824)

(assert (=> b!67889 (= e!44471 lt!29584)))

(assert (=> b!67889 (= lt!29584 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28971) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!67889 (isDefined!83 (getValueByKey!131 (toList!705 lt!28971) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!67890 () Bool)

(declare-fun Unit!1890 () Unit!1824)

(assert (=> b!67890 (= e!44471 Unit!1890)))

(declare-fun b!67891 () Bool)

(assert (=> b!67891 (= e!44470 (isDefined!83 (getValueByKey!131 (toList!705 lt!28971) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14515 c!9547) b!67889))

(assert (= (and d!14515 (not c!9547)) b!67890))

(assert (= (and d!14515 (not res!36588)) b!67891))

(declare-fun m!63549 () Bool)

(assert (=> d!14515 m!63549))

(declare-fun m!63551 () Bool)

(assert (=> b!67889 m!63551))

(assert (=> b!67889 m!62145))

(assert (=> b!67889 m!62145))

(declare-fun m!63553 () Bool)

(assert (=> b!67889 m!63553))

(assert (=> b!67891 m!62145))

(assert (=> b!67891 m!62145))

(assert (=> b!67891 m!63553))

(assert (=> bm!5569 d!14515))

(declare-fun d!14517 () Bool)

(assert (=> d!14517 (= ($colon$colon!62 e!43933 (ite c!9286 (h!2035 (toList!705 lt!28527)) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528)))) (Cons!1451 (ite c!9286 (h!2035 (toList!705 lt!28527)) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))) e!43933))))

(assert (=> bm!5609 d!14517))

(declare-fun d!14519 () Bool)

(declare-fun e!44472 () Bool)

(assert (=> d!14519 e!44472))

(declare-fun res!36589 () Bool)

(assert (=> d!14519 (=> res!36589 e!44472)))

(declare-fun lt!29587 () Bool)

(assert (=> d!14519 (= res!36589 (not lt!29587))))

(declare-fun lt!29590 () Bool)

(assert (=> d!14519 (= lt!29587 lt!29590)))

(declare-fun lt!29589 () Unit!1824)

(declare-fun e!44473 () Unit!1824)

(assert (=> d!14519 (= lt!29589 e!44473)))

(declare-fun c!9548 () Bool)

(assert (=> d!14519 (= c!9548 lt!29590)))

(assert (=> d!14519 (= lt!29590 (containsKey!134 (toList!705 (+!86 lt!29043 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16)))) lt!29046))))

(assert (=> d!14519 (= (contains!705 (+!86 lt!29043 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16))) lt!29046) lt!29587)))

(declare-fun b!67892 () Bool)

(declare-fun lt!29588 () Unit!1824)

(assert (=> b!67892 (= e!44473 lt!29588)))

(assert (=> b!67892 (= lt!29588 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (+!86 lt!29043 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16)))) lt!29046))))

(assert (=> b!67892 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!29043 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16)))) lt!29046))))

(declare-fun b!67893 () Bool)

(declare-fun Unit!1891 () Unit!1824)

(assert (=> b!67893 (= e!44473 Unit!1891)))

(declare-fun b!67894 () Bool)

(assert (=> b!67894 (= e!44472 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!29043 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16)))) lt!29046)))))

(assert (= (and d!14519 c!9548) b!67892))

(assert (= (and d!14519 (not c!9548)) b!67893))

(assert (= (and d!14519 (not res!36589)) b!67894))

(declare-fun m!63555 () Bool)

(assert (=> d!14519 m!63555))

(declare-fun m!63557 () Bool)

(assert (=> b!67892 m!63557))

(declare-fun m!63559 () Bool)

(assert (=> b!67892 m!63559))

(assert (=> b!67892 m!63559))

(declare-fun m!63561 () Bool)

(assert (=> b!67892 m!63561))

(assert (=> b!67894 m!63559))

(assert (=> b!67894 m!63559))

(assert (=> b!67894 m!63561))

(assert (=> b!66906 d!14519))

(assert (=> b!66906 d!14083))

(declare-fun d!14521 () Bool)

(assert (=> d!14521 (= (apply!72 (+!86 lt!29040 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) lt!29033) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!29040 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) lt!29033)))))

(declare-fun bs!2938 () Bool)

(assert (= bs!2938 d!14521))

(declare-fun m!63563 () Bool)

(assert (=> bs!2938 m!63563))

(assert (=> bs!2938 m!63563))

(declare-fun m!63565 () Bool)

(assert (=> bs!2938 m!63565))

(assert (=> b!66906 d!14521))

(declare-fun d!14523 () Bool)

(assert (=> d!14523 (contains!705 (+!86 lt!29043 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16))) lt!29046)))

(declare-fun lt!29591 () Unit!1824)

(assert (=> d!14523 (= lt!29591 (choose!377 lt!29043 lt!29048 (zeroValue!2054 newMap!16) lt!29046))))

(assert (=> d!14523 (contains!705 lt!29043 lt!29046)))

(assert (=> d!14523 (= (addStillContains!48 lt!29043 lt!29048 (zeroValue!2054 newMap!16) lt!29046) lt!29591)))

(declare-fun bs!2939 () Bool)

(assert (= bs!2939 d!14523))

(assert (=> bs!2939 m!61655))

(assert (=> bs!2939 m!61655))

(assert (=> bs!2939 m!61657))

(declare-fun m!63567 () Bool)

(assert (=> bs!2939 m!63567))

(declare-fun m!63569 () Bool)

(assert (=> bs!2939 m!63569))

(assert (=> b!66906 d!14523))

(declare-fun d!14525 () Bool)

(assert (=> d!14525 (= (apply!72 (+!86 lt!29051 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16))) lt!29037) (apply!72 lt!29051 lt!29037))))

(declare-fun lt!29592 () Unit!1824)

(assert (=> d!14525 (= lt!29592 (choose!376 lt!29051 lt!29036 (zeroValue!2054 newMap!16) lt!29037))))

(declare-fun e!44474 () Bool)

(assert (=> d!14525 e!44474))

(declare-fun res!36590 () Bool)

(assert (=> d!14525 (=> (not res!36590) (not e!44474))))

(assert (=> d!14525 (= res!36590 (contains!705 lt!29051 lt!29037))))

(assert (=> d!14525 (= (addApplyDifferent!48 lt!29051 lt!29036 (zeroValue!2054 newMap!16) lt!29037) lt!29592)))

(declare-fun b!67895 () Bool)

(assert (=> b!67895 (= e!44474 (not (= lt!29037 lt!29036)))))

(assert (= (and d!14525 res!36590) b!67895))

(declare-fun m!63571 () Bool)

(assert (=> d!14525 m!63571))

(assert (=> d!14525 m!61665))

(assert (=> d!14525 m!61665))

(assert (=> d!14525 m!61667))

(declare-fun m!63573 () Bool)

(assert (=> d!14525 m!63573))

(assert (=> d!14525 m!61669))

(assert (=> b!66906 d!14525))

(declare-fun d!14527 () Bool)

(assert (=> d!14527 (= (apply!72 lt!29051 lt!29037) (get!1127 (getValueByKey!131 (toList!705 lt!29051) lt!29037)))))

(declare-fun bs!2940 () Bool)

(assert (= bs!2940 d!14527))

(declare-fun m!63575 () Bool)

(assert (=> bs!2940 m!63575))

(assert (=> bs!2940 m!63575))

(declare-fun m!63577 () Bool)

(assert (=> bs!2940 m!63577))

(assert (=> b!66906 d!14527))

(declare-fun d!14529 () Bool)

(declare-fun e!44475 () Bool)

(assert (=> d!14529 e!44475))

(declare-fun res!36592 () Bool)

(assert (=> d!14529 (=> (not res!36592) (not e!44475))))

(declare-fun lt!29595 () ListLongMap!1379)

(assert (=> d!14529 (= res!36592 (contains!705 lt!29595 (_1!1052 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16)))))))

(declare-fun lt!29593 () List!1455)

(assert (=> d!14529 (= lt!29595 (ListLongMap!1380 lt!29593))))

(declare-fun lt!29594 () Unit!1824)

(declare-fun lt!29596 () Unit!1824)

(assert (=> d!14529 (= lt!29594 lt!29596)))

(assert (=> d!14529 (= (getValueByKey!131 lt!29593 (_1!1052 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14529 (= lt!29596 (lemmaContainsTupThenGetReturnValue!48 lt!29593 (_1!1052 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14529 (= lt!29593 (insertStrictlySorted!51 (toList!705 lt!29051) (_1!1052 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14529 (= (+!86 lt!29051 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16))) lt!29595)))

(declare-fun b!67896 () Bool)

(declare-fun res!36591 () Bool)

(assert (=> b!67896 (=> (not res!36591) (not e!44475))))

(assert (=> b!67896 (= res!36591 (= (getValueByKey!131 (toList!705 lt!29595) (_1!1052 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16))))))))

(declare-fun b!67897 () Bool)

(assert (=> b!67897 (= e!44475 (contains!709 (toList!705 lt!29595) (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16))))))

(assert (= (and d!14529 res!36592) b!67896))

(assert (= (and b!67896 res!36591) b!67897))

(declare-fun m!63579 () Bool)

(assert (=> d!14529 m!63579))

(declare-fun m!63581 () Bool)

(assert (=> d!14529 m!63581))

(declare-fun m!63583 () Bool)

(assert (=> d!14529 m!63583))

(declare-fun m!63585 () Bool)

(assert (=> d!14529 m!63585))

(declare-fun m!63587 () Bool)

(assert (=> b!67896 m!63587))

(declare-fun m!63589 () Bool)

(assert (=> b!67897 m!63589))

(assert (=> b!66906 d!14529))

(declare-fun d!14531 () Bool)

(assert (=> d!14531 (= (apply!72 (+!86 lt!29038 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) lt!29042) (apply!72 lt!29038 lt!29042))))

(declare-fun lt!29597 () Unit!1824)

(assert (=> d!14531 (= lt!29597 (choose!376 lt!29038 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) lt!29042))))

(declare-fun e!44476 () Bool)

(assert (=> d!14531 e!44476))

(declare-fun res!36593 () Bool)

(assert (=> d!14531 (=> (not res!36593) (not e!44476))))

(assert (=> d!14531 (= res!36593 (contains!705 lt!29038 lt!29042))))

(assert (=> d!14531 (= (addApplyDifferent!48 lt!29038 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) lt!29042) lt!29597)))

(declare-fun b!67898 () Bool)

(assert (=> b!67898 (= e!44476 (not (= lt!29042 lt!29050)))))

(assert (= (and d!14531 res!36593) b!67898))

(declare-fun m!63591 () Bool)

(assert (=> d!14531 m!63591))

(assert (=> d!14531 m!61651))

(assert (=> d!14531 m!61651))

(assert (=> d!14531 m!61675))

(declare-fun m!63593 () Bool)

(assert (=> d!14531 m!63593))

(assert (=> d!14531 m!61679))

(assert (=> b!66906 d!14531))

(declare-fun d!14533 () Bool)

(declare-fun e!44477 () Bool)

(assert (=> d!14533 e!44477))

(declare-fun res!36595 () Bool)

(assert (=> d!14533 (=> (not res!36595) (not e!44477))))

(declare-fun lt!29600 () ListLongMap!1379)

(assert (=> d!14533 (= res!36595 (contains!705 lt!29600 (_1!1052 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(declare-fun lt!29598 () List!1455)

(assert (=> d!14533 (= lt!29600 (ListLongMap!1380 lt!29598))))

(declare-fun lt!29599 () Unit!1824)

(declare-fun lt!29601 () Unit!1824)

(assert (=> d!14533 (= lt!29599 lt!29601)))

(assert (=> d!14533 (= (getValueByKey!131 lt!29598 (_1!1052 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(assert (=> d!14533 (= lt!29601 (lemmaContainsTupThenGetReturnValue!48 lt!29598 (_1!1052 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(assert (=> d!14533 (= lt!29598 (insertStrictlySorted!51 (toList!705 lt!29040) (_1!1052 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(assert (=> d!14533 (= (+!86 lt!29040 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) lt!29600)))

(declare-fun b!67899 () Bool)

(declare-fun res!36594 () Bool)

(assert (=> b!67899 (=> (not res!36594) (not e!44477))))

(assert (=> b!67899 (= res!36594 (= (getValueByKey!131 (toList!705 lt!29600) (_1!1052 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))))

(declare-fun b!67900 () Bool)

(assert (=> b!67900 (= e!44477 (contains!709 (toList!705 lt!29600) (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))

(assert (= (and d!14533 res!36595) b!67899))

(assert (= (and b!67899 res!36594) b!67900))

(declare-fun m!63595 () Bool)

(assert (=> d!14533 m!63595))

(declare-fun m!63597 () Bool)

(assert (=> d!14533 m!63597))

(declare-fun m!63599 () Bool)

(assert (=> d!14533 m!63599))

(declare-fun m!63601 () Bool)

(assert (=> d!14533 m!63601))

(declare-fun m!63603 () Bool)

(assert (=> b!67899 m!63603))

(declare-fun m!63605 () Bool)

(assert (=> b!67900 m!63605))

(assert (=> b!66906 d!14533))

(declare-fun d!14535 () Bool)

(assert (=> d!14535 (= (apply!72 (+!86 lt!29038 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) lt!29042) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!29038 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) lt!29042)))))

(declare-fun bs!2941 () Bool)

(assert (= bs!2941 d!14535))

(declare-fun m!63607 () Bool)

(assert (=> bs!2941 m!63607))

(assert (=> bs!2941 m!63607))

(declare-fun m!63609 () Bool)

(assert (=> bs!2941 m!63609))

(assert (=> b!66906 d!14535))

(declare-fun d!14537 () Bool)

(assert (=> d!14537 (= (apply!72 lt!29040 lt!29033) (get!1127 (getValueByKey!131 (toList!705 lt!29040) lt!29033)))))

(declare-fun bs!2942 () Bool)

(assert (= bs!2942 d!14537))

(declare-fun m!63611 () Bool)

(assert (=> bs!2942 m!63611))

(assert (=> bs!2942 m!63611))

(declare-fun m!63613 () Bool)

(assert (=> bs!2942 m!63613))

(assert (=> b!66906 d!14537))

(declare-fun d!14539 () Bool)

(assert (=> d!14539 (= (apply!72 (+!86 lt!29051 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16))) lt!29037) (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!29051 (tuple2!2083 lt!29036 (zeroValue!2054 newMap!16)))) lt!29037)))))

(declare-fun bs!2943 () Bool)

(assert (= bs!2943 d!14539))

(declare-fun m!63615 () Bool)

(assert (=> bs!2943 m!63615))

(assert (=> bs!2943 m!63615))

(declare-fun m!63617 () Bool)

(assert (=> bs!2943 m!63617))

(assert (=> b!66906 d!14539))

(declare-fun d!14541 () Bool)

(assert (=> d!14541 (= (apply!72 (+!86 lt!29040 (tuple2!2083 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) lt!29033) (apply!72 lt!29040 lt!29033))))

(declare-fun lt!29602 () Unit!1824)

(assert (=> d!14541 (= lt!29602 (choose!376 lt!29040 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) lt!29033))))

(declare-fun e!44478 () Bool)

(assert (=> d!14541 e!44478))

(declare-fun res!36596 () Bool)

(assert (=> d!14541 (=> (not res!36596) (not e!44478))))

(assert (=> d!14541 (= res!36596 (contains!705 lt!29040 lt!29033))))

(assert (=> d!14541 (= (addApplyDifferent!48 lt!29040 lt!29039 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)) lt!29033) lt!29602)))

(declare-fun b!67901 () Bool)

(assert (=> b!67901 (= e!44478 (not (= lt!29033 lt!29039)))))

(assert (= (and d!14541 res!36596) b!67901))

(declare-fun m!63619 () Bool)

(assert (=> d!14541 m!63619))

(assert (=> d!14541 m!61671))

(assert (=> d!14541 m!61671))

(assert (=> d!14541 m!61677))

(declare-fun m!63621 () Bool)

(assert (=> d!14541 m!63621))

(assert (=> d!14541 m!61663))

(assert (=> b!66906 d!14541))

(declare-fun d!14543 () Bool)

(assert (=> d!14543 (= (apply!72 lt!29038 lt!29042) (get!1127 (getValueByKey!131 (toList!705 lt!29038) lt!29042)))))

(declare-fun bs!2944 () Bool)

(assert (= bs!2944 d!14543))

(declare-fun m!63623 () Bool)

(assert (=> bs!2944 m!63623))

(assert (=> bs!2944 m!63623))

(declare-fun m!63625 () Bool)

(assert (=> bs!2944 m!63625))

(assert (=> b!66906 d!14543))

(declare-fun d!14545 () Bool)

(declare-fun e!44479 () Bool)

(assert (=> d!14545 e!44479))

(declare-fun res!36598 () Bool)

(assert (=> d!14545 (=> (not res!36598) (not e!44479))))

(declare-fun lt!29605 () ListLongMap!1379)

(assert (=> d!14545 (= res!36598 (contains!705 lt!29605 (_1!1052 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16)))))))

(declare-fun lt!29603 () List!1455)

(assert (=> d!14545 (= lt!29605 (ListLongMap!1380 lt!29603))))

(declare-fun lt!29604 () Unit!1824)

(declare-fun lt!29606 () Unit!1824)

(assert (=> d!14545 (= lt!29604 lt!29606)))

(assert (=> d!14545 (= (getValueByKey!131 lt!29603 (_1!1052 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14545 (= lt!29606 (lemmaContainsTupThenGetReturnValue!48 lt!29603 (_1!1052 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14545 (= lt!29603 (insertStrictlySorted!51 (toList!705 lt!29043) (_1!1052 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16))) (_2!1052 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16)))))))

(assert (=> d!14545 (= (+!86 lt!29043 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16))) lt!29605)))

(declare-fun b!67902 () Bool)

(declare-fun res!36597 () Bool)

(assert (=> b!67902 (=> (not res!36597) (not e!44479))))

(assert (=> b!67902 (= res!36597 (= (getValueByKey!131 (toList!705 lt!29605) (_1!1052 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16))))))))

(declare-fun b!67903 () Bool)

(assert (=> b!67903 (= e!44479 (contains!709 (toList!705 lt!29605) (tuple2!2083 lt!29048 (zeroValue!2054 newMap!16))))))

(assert (= (and d!14545 res!36598) b!67902))

(assert (= (and b!67902 res!36597) b!67903))

(declare-fun m!63627 () Bool)

(assert (=> d!14545 m!63627))

(declare-fun m!63629 () Bool)

(assert (=> d!14545 m!63629))

(declare-fun m!63631 () Bool)

(assert (=> d!14545 m!63631))

(declare-fun m!63633 () Bool)

(assert (=> d!14545 m!63633))

(declare-fun m!63635 () Bool)

(assert (=> b!67902 m!63635))

(declare-fun m!63637 () Bool)

(assert (=> b!67903 m!63637))

(assert (=> b!66906 d!14545))

(declare-fun d!14547 () Bool)

(declare-fun e!44480 () Bool)

(assert (=> d!14547 e!44480))

(declare-fun res!36600 () Bool)

(assert (=> d!14547 (=> (not res!36600) (not e!44480))))

(declare-fun lt!29609 () ListLongMap!1379)

(assert (=> d!14547 (= res!36600 (contains!705 lt!29609 (_1!1052 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(declare-fun lt!29607 () List!1455)

(assert (=> d!14547 (= lt!29609 (ListLongMap!1380 lt!29607))))

(declare-fun lt!29608 () Unit!1824)

(declare-fun lt!29610 () Unit!1824)

(assert (=> d!14547 (= lt!29608 lt!29610)))

(assert (=> d!14547 (= (getValueByKey!131 lt!29607 (_1!1052 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(assert (=> d!14547 (= lt!29610 (lemmaContainsTupThenGetReturnValue!48 lt!29607 (_1!1052 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(assert (=> d!14547 (= lt!29607 (insertStrictlySorted!51 (toList!705 lt!29038) (_1!1052 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) (_2!1052 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(assert (=> d!14547 (= (+!86 lt!29038 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))) lt!29609)))

(declare-fun b!67904 () Bool)

(declare-fun res!36599 () Bool)

(assert (=> b!67904 (=> (not res!36599) (not e!44480))))

(assert (=> b!67904 (= res!36599 (= (getValueByKey!131 (toList!705 lt!29609) (_1!1052 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) (Some!136 (_2!1052 (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))))

(declare-fun b!67905 () Bool)

(assert (=> b!67905 (= e!44480 (contains!709 (toList!705 lt!29609) (tuple2!2083 lt!29050 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))

(assert (= (and d!14547 res!36600) b!67904))

(assert (= (and b!67904 res!36599) b!67905))

(declare-fun m!63639 () Bool)

(assert (=> d!14547 m!63639))

(declare-fun m!63641 () Bool)

(assert (=> d!14547 m!63641))

(declare-fun m!63643 () Bool)

(assert (=> d!14547 m!63643))

(declare-fun m!63645 () Bool)

(assert (=> d!14547 m!63645))

(declare-fun m!63647 () Bool)

(assert (=> b!67904 m!63647))

(declare-fun m!63649 () Bool)

(assert (=> b!67905 m!63649))

(assert (=> b!66906 d!14547))

(declare-fun d!14549 () Bool)

(assert (=> d!14549 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28687) (_1!1052 lt!28520))) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28687) (_1!1052 lt!28520)))))))

(declare-fun bs!2945 () Bool)

(assert (= bs!2945 d!14549))

(assert (=> bs!2945 m!61079))

(declare-fun m!63651 () Bool)

(assert (=> bs!2945 m!63651))

(assert (=> b!67117 d!14549))

(assert (=> b!67117 d!13881))

(declare-fun b!67906 () Bool)

(declare-fun e!44485 () List!1455)

(declare-fun call!5696 () List!1455)

(assert (=> b!67906 (= e!44485 call!5696)))

(declare-fun b!67907 () Bool)

(declare-fun e!44481 () List!1455)

(declare-fun e!44483 () List!1455)

(assert (=> b!67907 (= e!44481 e!44483)))

(declare-fun c!9551 () Bool)

(assert (=> b!67907 (= c!9551 (and ((_ is Cons!1451) (t!4929 (toList!705 (+!86 lt!28527 lt!28520)))) (= (_1!1052 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28520))))) (_1!1052 lt!28528))))))

(declare-fun b!67908 () Bool)

(declare-fun res!36601 () Bool)

(declare-fun e!44484 () Bool)

(assert (=> b!67908 (=> (not res!36601) (not e!44484))))

(declare-fun lt!29611 () List!1455)

(assert (=> b!67908 (= res!36601 (containsKey!134 lt!29611 (_1!1052 lt!28528)))))

(declare-fun bm!5693 () Bool)

(declare-fun call!5698 () List!1455)

(assert (=> bm!5693 (= call!5696 call!5698)))

(declare-fun b!67909 () Bool)

(declare-fun call!5697 () List!1455)

(assert (=> b!67909 (= e!44481 call!5697)))

(declare-fun b!67910 () Bool)

(declare-fun c!9552 () Bool)

(assert (=> b!67910 (= c!9552 (and ((_ is Cons!1451) (t!4929 (toList!705 (+!86 lt!28527 lt!28520)))) (bvsgt (_1!1052 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28520))))) (_1!1052 lt!28528))))))

(assert (=> b!67910 (= e!44483 e!44485)))

(declare-fun b!67911 () Bool)

(declare-fun e!44482 () List!1455)

(assert (=> b!67911 (= e!44482 (ite c!9551 (t!4929 (t!4929 (toList!705 (+!86 lt!28527 lt!28520)))) (ite c!9552 (Cons!1451 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28520)))) (t!4929 (t!4929 (toList!705 (+!86 lt!28527 lt!28520))))) Nil!1452)))))

(declare-fun d!14551 () Bool)

(assert (=> d!14551 e!44484))

(declare-fun res!36602 () Bool)

(assert (=> d!14551 (=> (not res!36602) (not e!44484))))

(assert (=> d!14551 (= res!36602 (isStrictlySorted!276 lt!29611))))

(assert (=> d!14551 (= lt!29611 e!44481)))

(declare-fun c!9549 () Bool)

(assert (=> d!14551 (= c!9549 (and ((_ is Cons!1451) (t!4929 (toList!705 (+!86 lt!28527 lt!28520)))) (bvslt (_1!1052 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28520))))) (_1!1052 lt!28528))))))

(assert (=> d!14551 (isStrictlySorted!276 (t!4929 (toList!705 (+!86 lt!28527 lt!28520))))))

(assert (=> d!14551 (= (insertStrictlySorted!51 (t!4929 (toList!705 (+!86 lt!28527 lt!28520))) (_1!1052 lt!28528) (_2!1052 lt!28528)) lt!29611)))

(declare-fun b!67912 () Bool)

(assert (=> b!67912 (= e!44482 (insertStrictlySorted!51 (t!4929 (t!4929 (toList!705 (+!86 lt!28527 lt!28520)))) (_1!1052 lt!28528) (_2!1052 lt!28528)))))

(declare-fun b!67913 () Bool)

(assert (=> b!67913 (= e!44483 call!5698)))

(declare-fun bm!5694 () Bool)

(assert (=> bm!5694 (= call!5698 call!5697)))

(declare-fun b!67914 () Bool)

(assert (=> b!67914 (= e!44485 call!5696)))

(declare-fun bm!5695 () Bool)

(assert (=> bm!5695 (= call!5697 ($colon$colon!62 e!44482 (ite c!9549 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28520)))) (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528)))))))

(declare-fun c!9550 () Bool)

(assert (=> bm!5695 (= c!9550 c!9549)))

(declare-fun b!67915 () Bool)

(assert (=> b!67915 (= e!44484 (contains!709 lt!29611 (tuple2!2083 (_1!1052 lt!28528) (_2!1052 lt!28528))))))

(assert (= (and d!14551 c!9549) b!67909))

(assert (= (and d!14551 (not c!9549)) b!67907))

(assert (= (and b!67907 c!9551) b!67913))

(assert (= (and b!67907 (not c!9551)) b!67910))

(assert (= (and b!67910 c!9552) b!67906))

(assert (= (and b!67910 (not c!9552)) b!67914))

(assert (= (or b!67906 b!67914) bm!5693))

(assert (= (or b!67913 bm!5693) bm!5694))

(assert (= (or b!67909 bm!5694) bm!5695))

(assert (= (and bm!5695 c!9550) b!67912))

(assert (= (and bm!5695 (not c!9550)) b!67911))

(assert (= (and d!14551 res!36602) b!67908))

(assert (= (and b!67908 res!36601) b!67915))

(declare-fun m!63653 () Bool)

(assert (=> bm!5695 m!63653))

(declare-fun m!63655 () Bool)

(assert (=> b!67912 m!63655))

(declare-fun m!63657 () Bool)

(assert (=> b!67908 m!63657))

(declare-fun m!63659 () Bool)

(assert (=> b!67915 m!63659))

(declare-fun m!63661 () Bool)

(assert (=> d!14551 m!63661))

(assert (=> d!14551 m!62869))

(assert (=> b!67078 d!14551))

(declare-fun b!67918 () Bool)

(declare-fun e!44487 () Option!137)

(assert (=> b!67918 (= e!44487 (getValueByKey!131 (t!4929 (t!4929 lt!28689)) (_1!1052 lt!28528)))))

(declare-fun b!67916 () Bool)

(declare-fun e!44486 () Option!137)

(assert (=> b!67916 (= e!44486 (Some!136 (_2!1052 (h!2035 (t!4929 lt!28689)))))))

(declare-fun d!14553 () Bool)

(declare-fun c!9553 () Bool)

(assert (=> d!14553 (= c!9553 (and ((_ is Cons!1451) (t!4929 lt!28689)) (= (_1!1052 (h!2035 (t!4929 lt!28689))) (_1!1052 lt!28528))))))

(assert (=> d!14553 (= (getValueByKey!131 (t!4929 lt!28689) (_1!1052 lt!28528)) e!44486)))

(declare-fun b!67919 () Bool)

(assert (=> b!67919 (= e!44487 None!135)))

(declare-fun b!67917 () Bool)

(assert (=> b!67917 (= e!44486 e!44487)))

(declare-fun c!9554 () Bool)

(assert (=> b!67917 (= c!9554 (and ((_ is Cons!1451) (t!4929 lt!28689)) (not (= (_1!1052 (h!2035 (t!4929 lt!28689))) (_1!1052 lt!28528)))))))

(assert (= (and d!14553 c!9553) b!67916))

(assert (= (and d!14553 (not c!9553)) b!67917))

(assert (= (and b!67917 c!9554) b!67918))

(assert (= (and b!67917 (not c!9554)) b!67919))

(declare-fun m!63663 () Bool)

(assert (=> b!67918 m!63663))

(assert (=> b!66973 d!14553))

(declare-fun d!14555 () Bool)

(assert (=> d!14555 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2946 () Bool)

(assert (= bs!2946 d!14555))

(assert (=> bs!2946 m!61521))

(declare-fun m!63665 () Bool)

(assert (=> bs!2946 m!63665))

(assert (=> b!67112 d!14555))

(assert (=> b!67112 d!14301))

(declare-fun d!14557 () Bool)

(assert (=> d!14557 (= (get!1127 (getValueByKey!131 (toList!705 lt!28674) lt!28660)) (v!2484 (getValueByKey!131 (toList!705 lt!28674) lt!28660)))))

(assert (=> d!13839 d!14557))

(declare-fun b!67922 () Bool)

(declare-fun e!44489 () Option!137)

(assert (=> b!67922 (= e!44489 (getValueByKey!131 (t!4929 (toList!705 lt!28674)) lt!28660))))

(declare-fun b!67920 () Bool)

(declare-fun e!44488 () Option!137)

(assert (=> b!67920 (= e!44488 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28674)))))))

(declare-fun d!14559 () Bool)

(declare-fun c!9555 () Bool)

(assert (=> d!14559 (= c!9555 (and ((_ is Cons!1451) (toList!705 lt!28674)) (= (_1!1052 (h!2035 (toList!705 lt!28674))) lt!28660)))))

(assert (=> d!14559 (= (getValueByKey!131 (toList!705 lt!28674) lt!28660) e!44488)))

(declare-fun b!67923 () Bool)

(assert (=> b!67923 (= e!44489 None!135)))

(declare-fun b!67921 () Bool)

(assert (=> b!67921 (= e!44488 e!44489)))

(declare-fun c!9556 () Bool)

(assert (=> b!67921 (= c!9556 (and ((_ is Cons!1451) (toList!705 lt!28674)) (not (= (_1!1052 (h!2035 (toList!705 lt!28674))) lt!28660))))))

(assert (= (and d!14559 c!9555) b!67920))

(assert (= (and d!14559 (not c!9555)) b!67921))

(assert (= (and b!67921 c!9556) b!67922))

(assert (= (and b!67921 (not c!9556)) b!67923))

(declare-fun m!63667 () Bool)

(assert (=> b!67922 m!63667))

(assert (=> d!13839 d!14559))

(declare-fun b!67924 () Bool)

(declare-fun e!44491 () Bool)

(declare-fun call!5699 () Bool)

(assert (=> b!67924 (= e!44491 call!5699)))

(declare-fun b!67925 () Bool)

(declare-fun e!44492 () Bool)

(assert (=> b!67925 (= e!44492 e!44491)))

(declare-fun c!9557 () Bool)

(assert (=> b!67925 (= c!9557 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!67926 () Bool)

(declare-fun e!44490 () Bool)

(assert (=> b!67926 (= e!44490 (contains!708 (ite c!9334 (Cons!1450 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) Nil!1451) Nil!1451) (select (arr!1826 (_keys!3786 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!67927 () Bool)

(assert (=> b!67927 (= e!44491 call!5699)))

(declare-fun b!67928 () Bool)

(declare-fun e!44493 () Bool)

(assert (=> b!67928 (= e!44493 e!44492)))

(declare-fun res!36603 () Bool)

(assert (=> b!67928 (=> (not res!36603) (not e!44492))))

(assert (=> b!67928 (= res!36603 (not e!44490))))

(declare-fun res!36605 () Bool)

(assert (=> b!67928 (=> (not res!36605) (not e!44490))))

(assert (=> b!67928 (= res!36605 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!14561 () Bool)

(declare-fun res!36604 () Bool)

(assert (=> d!14561 (=> res!36604 e!44493)))

(assert (=> d!14561 (= res!36604 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!14561 (= (arrayNoDuplicates!0 (_keys!3786 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9334 (Cons!1450 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) Nil!1451) Nil!1451)) e!44493)))

(declare-fun bm!5696 () Bool)

(assert (=> bm!5696 (= call!5699 (arrayNoDuplicates!0 (_keys!3786 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9557 (Cons!1450 (select (arr!1826 (_keys!3786 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!9334 (Cons!1450 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) Nil!1451) Nil!1451)) (ite c!9334 (Cons!1450 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000) Nil!1451) Nil!1451))))))

(assert (= (and d!14561 (not res!36604)) b!67928))

(assert (= (and b!67928 res!36605) b!67926))

(assert (= (and b!67928 res!36603) b!67925))

(assert (= (and b!67925 c!9557) b!67924))

(assert (= (and b!67925 (not c!9557)) b!67927))

(assert (= (or b!67924 b!67927) bm!5696))

(declare-fun m!63669 () Bool)

(assert (=> b!67925 m!63669))

(assert (=> b!67925 m!63669))

(declare-fun m!63671 () Bool)

(assert (=> b!67925 m!63671))

(assert (=> b!67926 m!63669))

(assert (=> b!67926 m!63669))

(declare-fun m!63673 () Bool)

(assert (=> b!67926 m!63673))

(assert (=> b!67928 m!63669))

(assert (=> b!67928 m!63669))

(assert (=> b!67928 m!63671))

(assert (=> bm!5696 m!63669))

(declare-fun m!63675 () Bool)

(assert (=> bm!5696 m!63675))

(assert (=> bm!5623 d!14561))

(declare-fun b!67929 () Bool)

(declare-fun e!44495 () Bool)

(declare-fun call!5700 () Bool)

(assert (=> b!67929 (= e!44495 call!5700)))

(declare-fun b!67930 () Bool)

(declare-fun e!44496 () Bool)

(assert (=> b!67930 (= e!44496 e!44495)))

(declare-fun c!9558 () Bool)

(assert (=> b!67930 (= c!9558 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun e!44494 () Bool)

(declare-fun b!67931 () Bool)

(assert (=> b!67931 (= e!44494 (contains!708 (ite c!9237 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!67932 () Bool)

(assert (=> b!67932 (= e!44495 call!5700)))

(declare-fun b!67933 () Bool)

(declare-fun e!44497 () Bool)

(assert (=> b!67933 (= e!44497 e!44496)))

(declare-fun res!36606 () Bool)

(assert (=> b!67933 (=> (not res!36606) (not e!44496))))

(assert (=> b!67933 (= res!36606 (not e!44494))))

(declare-fun res!36608 () Bool)

(assert (=> b!67933 (=> (not res!36608) (not e!44494))))

(assert (=> b!67933 (= res!36608 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!14563 () Bool)

(declare-fun res!36607 () Bool)

(assert (=> d!14563 (=> res!36607 e!44497)))

(assert (=> d!14563 (= res!36607 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14563 (= (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9237 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451))) e!44497)))

(declare-fun bm!5697 () Bool)

(assert (=> bm!5697 (= call!5700 (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!9558 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!9237 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451))) (ite c!9237 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)))))))

(assert (= (and d!14563 (not res!36607)) b!67933))

(assert (= (and b!67933 res!36608) b!67931))

(assert (= (and b!67933 res!36606) b!67930))

(assert (= (and b!67930 c!9558) b!67929))

(assert (= (and b!67930 (not c!9558)) b!67932))

(assert (= (or b!67929 b!67932) bm!5697))

(declare-fun m!63677 () Bool)

(assert (=> b!67930 m!63677))

(assert (=> b!67930 m!63677))

(declare-fun m!63679 () Bool)

(assert (=> b!67930 m!63679))

(assert (=> b!67931 m!63677))

(assert (=> b!67931 m!63677))

(declare-fun m!63681 () Bool)

(assert (=> b!67931 m!63681))

(assert (=> b!67933 m!63677))

(assert (=> b!67933 m!63677))

(assert (=> b!67933 m!63679))

(assert (=> bm!5697 m!63677))

(declare-fun m!63683 () Bool)

(assert (=> bm!5697 m!63683))

(assert (=> bm!5570 d!14563))

(assert (=> bm!5576 d!14197))

(declare-fun e!44511 () SeekEntryResult!227)

(declare-fun b!67952 () Bool)

(assert (=> b!67952 (= e!44511 (Intermediate!227 false (toIndex!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6081 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!67953 () Bool)

(declare-fun lt!29617 () SeekEntryResult!227)

(assert (=> b!67953 (and (bvsge (index!3038 lt!29617) #b00000000000000000000000000000000) (bvslt (index!3038 lt!29617) (size!2061 (_keys!3786 newMap!16))))))

(declare-fun res!36617 () Bool)

(assert (=> b!67953 (= res!36617 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3038 lt!29617)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44509 () Bool)

(assert (=> b!67953 (=> res!36617 e!44509)))

(declare-fun b!67954 () Bool)

(assert (=> b!67954 (= e!44511 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6081 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6081 newMap!16)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(declare-fun b!67955 () Bool)

(declare-fun e!44512 () SeekEntryResult!227)

(assert (=> b!67955 (= e!44512 e!44511)))

(declare-fun c!9565 () Bool)

(declare-fun lt!29616 () (_ BitVec 64))

(assert (=> b!67955 (= c!9565 (or (= lt!29616 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (= (bvadd lt!29616 lt!29616) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!67957 () Bool)

(assert (=> b!67957 (and (bvsge (index!3038 lt!29617) #b00000000000000000000000000000000) (bvslt (index!3038 lt!29617) (size!2061 (_keys!3786 newMap!16))))))

(declare-fun res!36615 () Bool)

(assert (=> b!67957 (= res!36615 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3038 lt!29617)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!67957 (=> res!36615 e!44509)))

(declare-fun e!44508 () Bool)

(assert (=> b!67957 (= e!44508 e!44509)))

(declare-fun b!67958 () Bool)

(assert (=> b!67958 (= e!44512 (Intermediate!227 true (toIndex!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6081 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!67959 () Bool)

(declare-fun e!44510 () Bool)

(assert (=> b!67959 (= e!44510 e!44508)))

(declare-fun res!36616 () Bool)

(assert (=> b!67959 (= res!36616 (and ((_ is Intermediate!227) lt!29617) (not (undefined!1039 lt!29617)) (bvslt (x!10697 lt!29617) #b01111111111111111111111111111110) (bvsge (x!10697 lt!29617) #b00000000000000000000000000000000) (bvsge (x!10697 lt!29617) #b00000000000000000000000000000000)))))

(assert (=> b!67959 (=> (not res!36616) (not e!44508))))

(declare-fun b!67960 () Bool)

(assert (=> b!67960 (= e!44510 (bvsge (x!10697 lt!29617) #b01111111111111111111111111111110))))

(declare-fun b!67956 () Bool)

(assert (=> b!67956 (and (bvsge (index!3038 lt!29617) #b00000000000000000000000000000000) (bvslt (index!3038 lt!29617) (size!2061 (_keys!3786 newMap!16))))))

(assert (=> b!67956 (= e!44509 (= (select (arr!1826 (_keys!3786 newMap!16)) (index!3038 lt!29617)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!14565 () Bool)

(assert (=> d!14565 e!44510))

(declare-fun c!9566 () Bool)

(assert (=> d!14565 (= c!9566 (and ((_ is Intermediate!227) lt!29617) (undefined!1039 lt!29617)))))

(assert (=> d!14565 (= lt!29617 e!44512)))

(declare-fun c!9567 () Bool)

(assert (=> d!14565 (= c!9567 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!14565 (= lt!29616 (select (arr!1826 (_keys!3786 newMap!16)) (toIndex!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6081 newMap!16))))))

(assert (=> d!14565 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14565 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6081 newMap!16)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (mask!6081 newMap!16)) lt!29617)))

(assert (= (and d!14565 c!9567) b!67958))

(assert (= (and d!14565 (not c!9567)) b!67955))

(assert (= (and b!67955 c!9565) b!67952))

(assert (= (and b!67955 (not c!9565)) b!67954))

(assert (= (and d!14565 c!9566) b!67960))

(assert (= (and d!14565 (not c!9566)) b!67959))

(assert (= (and b!67959 res!36616) b!67957))

(assert (= (and b!67957 (not res!36615)) b!67953))

(assert (= (and b!67953 (not res!36617)) b!67956))

(assert (=> d!14565 m!61303))

(declare-fun m!63685 () Bool)

(assert (=> d!14565 m!63685))

(assert (=> d!14565 m!61297))

(declare-fun m!63687 () Bool)

(assert (=> b!67953 m!63687))

(assert (=> b!67954 m!61303))

(declare-fun m!63689 () Bool)

(assert (=> b!67954 m!63689))

(assert (=> b!67954 m!63689))

(assert (=> b!67954 m!60827))

(declare-fun m!63691 () Bool)

(assert (=> b!67954 m!63691))

(assert (=> b!67956 m!63687))

(assert (=> b!67957 m!63687))

(assert (=> d!13797 d!14565))

(declare-fun d!14567 () Bool)

(declare-fun lt!29623 () (_ BitVec 32))

(declare-fun lt!29622 () (_ BitVec 32))

(assert (=> d!14567 (= lt!29623 (bvmul (bvxor lt!29622 (bvlshr lt!29622 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!14567 (= lt!29622 ((_ extract 31 0) (bvand (bvxor (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvlshr (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!14567 (and (bvsge (mask!6081 newMap!16) #b00000000000000000000000000000000) (let ((res!36618 (let ((h!2039 ((_ extract 31 0) (bvand (bvxor (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvlshr (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!10800 (bvmul (bvxor h!2039 (bvlshr h!2039 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!10800 (bvlshr x!10800 #b00000000000000000000000000001101)) (mask!6081 newMap!16)))))) (and (bvslt res!36618 (bvadd (mask!6081 newMap!16) #b00000000000000000000000000000001)) (bvsge res!36618 #b00000000000000000000000000000000))))))

(assert (=> d!14567 (= (toIndex!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (mask!6081 newMap!16)) (bvand (bvxor lt!29623 (bvlshr lt!29623 #b00000000000000000000000000001101)) (mask!6081 newMap!16)))))

(assert (=> d!13797 d!14567))

(assert (=> d!13797 d!14103))

(declare-fun d!14569 () Bool)

(declare-fun res!36619 () Bool)

(declare-fun e!44513 () Bool)

(assert (=> d!14569 (=> res!36619 e!44513)))

(assert (=> d!14569 (= res!36619 (and ((_ is Cons!1451) lt!29144) (= (_1!1052 (h!2035 lt!29144)) (_1!1052 lt!28520))))))

(assert (=> d!14569 (= (containsKey!134 lt!29144 (_1!1052 lt!28520)) e!44513)))

(declare-fun b!67961 () Bool)

(declare-fun e!44514 () Bool)

(assert (=> b!67961 (= e!44513 e!44514)))

(declare-fun res!36620 () Bool)

(assert (=> b!67961 (=> (not res!36620) (not e!44514))))

(assert (=> b!67961 (= res!36620 (and (or (not ((_ is Cons!1451) lt!29144)) (bvsle (_1!1052 (h!2035 lt!29144)) (_1!1052 lt!28520))) ((_ is Cons!1451) lt!29144) (bvslt (_1!1052 (h!2035 lt!29144)) (_1!1052 lt!28520))))))

(declare-fun b!67962 () Bool)

(assert (=> b!67962 (= e!44514 (containsKey!134 (t!4929 lt!29144) (_1!1052 lt!28520)))))

(assert (= (and d!14569 (not res!36619)) b!67961))

(assert (= (and b!67961 res!36620) b!67962))

(declare-fun m!63693 () Bool)

(assert (=> b!67962 m!63693))

(assert (=> b!67055 d!14569))

(declare-fun d!14571 () Bool)

(assert (=> d!14571 (= (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28656)) (v!2484 (getValueByKey!131 (toList!705 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28656)))))

(assert (=> d!13815 d!14571))

(declare-fun e!44516 () Option!137)

(declare-fun b!67965 () Bool)

(assert (=> b!67965 (= e!44516 (getValueByKey!131 (t!4929 (toList!705 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) lt!28656))))

(declare-fun b!67963 () Bool)

(declare-fun e!44515 () Option!137)

(assert (=> b!67963 (= e!44515 (Some!136 (_2!1052 (h!2035 (toList!705 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun d!14573 () Bool)

(declare-fun c!9568 () Bool)

(assert (=> d!14573 (= c!9568 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28656)))))

(assert (=> d!14573 (= (getValueByKey!131 (toList!705 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28656) e!44515)))

(declare-fun b!67966 () Bool)

(assert (=> b!67966 (= e!44516 None!135)))

(declare-fun b!67964 () Bool)

(assert (=> b!67964 (= e!44515 e!44516)))

(declare-fun c!9569 () Bool)

(assert (=> b!67964 (= c!9569 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) (not (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28656))))))

(assert (= (and d!14573 c!9568) b!67963))

(assert (= (and d!14573 (not c!9568)) b!67964))

(assert (= (and b!67964 c!9569) b!67965))

(assert (= (and b!67964 (not c!9569)) b!67966))

(declare-fun m!63695 () Bool)

(assert (=> b!67965 m!63695))

(assert (=> d!13815 d!14573))

(assert (=> d!13867 d!14103))

(declare-fun d!14575 () Bool)

(assert (=> d!14575 (= (get!1127 (getValueByKey!131 (toList!705 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28665)) (v!2484 (getValueByKey!131 (toList!705 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28665)))))

(assert (=> d!13821 d!14575))

(declare-fun b!67969 () Bool)

(declare-fun e!44518 () Option!137)

(assert (=> b!67969 (= e!44518 (getValueByKey!131 (t!4929 (toList!705 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) lt!28665))))

(declare-fun e!44517 () Option!137)

(declare-fun b!67967 () Bool)

(assert (=> b!67967 (= e!44517 (Some!136 (_2!1052 (h!2035 (toList!705 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))))

(declare-fun d!14577 () Bool)

(declare-fun c!9570 () Bool)

(assert (=> d!14577 (= c!9570 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28665)))))

(assert (=> d!14577 (= (getValueByKey!131 (toList!705 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28665) e!44517)))

(declare-fun b!67970 () Bool)

(assert (=> b!67970 (= e!44518 None!135)))

(declare-fun b!67968 () Bool)

(assert (=> b!67968 (= e!44517 e!44518)))

(declare-fun c!9571 () Bool)

(assert (=> b!67968 (= c!9571 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) (not (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28665))))))

(assert (= (and d!14577 c!9570) b!67967))

(assert (= (and d!14577 (not c!9570)) b!67968))

(assert (= (and b!67968 c!9571) b!67969))

(assert (= (and b!67968 (not c!9571)) b!67970))

(declare-fun m!63697 () Bool)

(assert (=> b!67969 m!63697))

(assert (=> d!13821 d!14577))

(declare-fun b!67971 () Bool)

(declare-fun e!44523 () List!1455)

(declare-fun call!5701 () List!1455)

(assert (=> b!67971 (= e!44523 call!5701)))

(declare-fun b!67972 () Bool)

(declare-fun e!44519 () List!1455)

(declare-fun e!44521 () List!1455)

(assert (=> b!67972 (= e!44519 e!44521)))

(declare-fun c!9574 () Bool)

(assert (=> b!67972 (= c!9574 (and ((_ is Cons!1451) (t!4929 (toList!705 (+!86 lt!28527 lt!28528)))) (= (_1!1052 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28528))))) (_1!1052 lt!28520))))))

(declare-fun b!67973 () Bool)

(declare-fun res!36621 () Bool)

(declare-fun e!44522 () Bool)

(assert (=> b!67973 (=> (not res!36621) (not e!44522))))

(declare-fun lt!29624 () List!1455)

(assert (=> b!67973 (= res!36621 (containsKey!134 lt!29624 (_1!1052 lt!28520)))))

(declare-fun bm!5698 () Bool)

(declare-fun call!5703 () List!1455)

(assert (=> bm!5698 (= call!5701 call!5703)))

(declare-fun b!67974 () Bool)

(declare-fun call!5702 () List!1455)

(assert (=> b!67974 (= e!44519 call!5702)))

(declare-fun c!9575 () Bool)

(declare-fun b!67975 () Bool)

(assert (=> b!67975 (= c!9575 (and ((_ is Cons!1451) (t!4929 (toList!705 (+!86 lt!28527 lt!28528)))) (bvsgt (_1!1052 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28528))))) (_1!1052 lt!28520))))))

(assert (=> b!67975 (= e!44521 e!44523)))

(declare-fun e!44520 () List!1455)

(declare-fun b!67976 () Bool)

(assert (=> b!67976 (= e!44520 (ite c!9574 (t!4929 (t!4929 (toList!705 (+!86 lt!28527 lt!28528)))) (ite c!9575 (Cons!1451 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28528)))) (t!4929 (t!4929 (toList!705 (+!86 lt!28527 lt!28528))))) Nil!1452)))))

(declare-fun d!14579 () Bool)

(assert (=> d!14579 e!44522))

(declare-fun res!36622 () Bool)

(assert (=> d!14579 (=> (not res!36622) (not e!44522))))

(assert (=> d!14579 (= res!36622 (isStrictlySorted!276 lt!29624))))

(assert (=> d!14579 (= lt!29624 e!44519)))

(declare-fun c!9572 () Bool)

(assert (=> d!14579 (= c!9572 (and ((_ is Cons!1451) (t!4929 (toList!705 (+!86 lt!28527 lt!28528)))) (bvslt (_1!1052 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28528))))) (_1!1052 lt!28520))))))

(assert (=> d!14579 (isStrictlySorted!276 (t!4929 (toList!705 (+!86 lt!28527 lt!28528))))))

(assert (=> d!14579 (= (insertStrictlySorted!51 (t!4929 (toList!705 (+!86 lt!28527 lt!28528))) (_1!1052 lt!28520) (_2!1052 lt!28520)) lt!29624)))

(declare-fun b!67977 () Bool)

(assert (=> b!67977 (= e!44520 (insertStrictlySorted!51 (t!4929 (t!4929 (toList!705 (+!86 lt!28527 lt!28528)))) (_1!1052 lt!28520) (_2!1052 lt!28520)))))

(declare-fun b!67978 () Bool)

(assert (=> b!67978 (= e!44521 call!5703)))

(declare-fun bm!5699 () Bool)

(assert (=> bm!5699 (= call!5703 call!5702)))

(declare-fun b!67979 () Bool)

(assert (=> b!67979 (= e!44523 call!5701)))

(declare-fun bm!5700 () Bool)

(assert (=> bm!5700 (= call!5702 ($colon$colon!62 e!44520 (ite c!9572 (h!2035 (t!4929 (toList!705 (+!86 lt!28527 lt!28528)))) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520)))))))

(declare-fun c!9573 () Bool)

(assert (=> bm!5700 (= c!9573 c!9572)))

(declare-fun b!67980 () Bool)

(assert (=> b!67980 (= e!44522 (contains!709 lt!29624 (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(assert (= (and d!14579 c!9572) b!67974))

(assert (= (and d!14579 (not c!9572)) b!67972))

(assert (= (and b!67972 c!9574) b!67978))

(assert (= (and b!67972 (not c!9574)) b!67975))

(assert (= (and b!67975 c!9575) b!67971))

(assert (= (and b!67975 (not c!9575)) b!67979))

(assert (= (or b!67971 b!67979) bm!5698))

(assert (= (or b!67978 bm!5698) bm!5699))

(assert (= (or b!67974 bm!5699) bm!5700))

(assert (= (and bm!5700 c!9573) b!67977))

(assert (= (and bm!5700 (not c!9573)) b!67976))

(assert (= (and d!14579 res!36622) b!67973))

(assert (= (and b!67973 res!36621) b!67980))

(declare-fun m!63699 () Bool)

(assert (=> bm!5700 m!63699))

(declare-fun m!63701 () Bool)

(assert (=> b!67977 m!63701))

(declare-fun m!63703 () Bool)

(assert (=> b!67973 m!63703))

(declare-fun m!63705 () Bool)

(assert (=> b!67980 m!63705))

(declare-fun m!63707 () Bool)

(assert (=> d!14579 m!63707))

(assert (=> d!14579 m!63043))

(assert (=> b!67130 d!14579))

(declare-fun d!14581 () Bool)

(assert (=> d!14581 (isDefined!83 (getValueByKey!131 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!29625 () Unit!1824)

(assert (=> d!14581 (= lt!29625 (choose!379 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!44524 () Bool)

(assert (=> d!14581 e!44524))

(declare-fun res!36623 () Bool)

(assert (=> d!14581 (=> (not res!36623) (not e!44524))))

(assert (=> d!14581 (= res!36623 (isStrictlySorted!276 (toList!705 lt!28667)))))

(assert (=> d!14581 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000) lt!29625)))

(declare-fun b!67981 () Bool)

(assert (=> b!67981 (= e!44524 (containsKey!134 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14581 res!36623) b!67981))

(assert (=> d!14581 m!61637))

(assert (=> d!14581 m!61637))

(assert (=> d!14581 m!62083))

(declare-fun m!63709 () Bool)

(assert (=> d!14581 m!63709))

(assert (=> d!14581 m!62365))

(assert (=> b!67981 m!62079))

(assert (=> b!67152 d!14581))

(assert (=> b!67152 d!14367))

(assert (=> b!67152 d!14369))

(assert (=> b!66776 d!14163))

(declare-fun b!67982 () Bool)

(declare-fun e!44526 () (_ BitVec 32))

(assert (=> b!67982 (= e!44526 #b00000000000000000000000000000000)))

(declare-fun b!67983 () Bool)

(declare-fun e!44525 () (_ BitVec 32))

(declare-fun call!5704 () (_ BitVec 32))

(assert (=> b!67983 (= e!44525 (bvadd #b00000000000000000000000000000001 call!5704))))

(declare-fun b!67984 () Bool)

(assert (=> b!67984 (= e!44525 call!5704)))

(declare-fun d!14583 () Bool)

(declare-fun lt!29626 () (_ BitVec 32))

(assert (=> d!14583 (and (bvsge lt!29626 #b00000000000000000000000000000000) (bvsle lt!29626 (bvsub (size!2061 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000)))))

(assert (=> d!14583 (= lt!29626 e!44526)))

(declare-fun c!9577 () Bool)

(assert (=> d!14583 (= c!9577 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))))))

(assert (=> d!14583 (and (bvsle #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2061 (_keys!3786 (_2!1051 lt!28794))) (size!2061 (_keys!3786 (_2!1051 lt!28794)))))))

(assert (=> d!14583 (= (arrayCountValidKeys!0 (_keys!3786 (_2!1051 lt!28794)) #b00000000000000000000000000000000 (size!2061 (_keys!3786 (_2!1051 lt!28794)))) lt!29626)))

(declare-fun b!67985 () Bool)

(assert (=> b!67985 (= e!44526 e!44525)))

(declare-fun c!9576 () Bool)

(assert (=> b!67985 (= c!9576 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (_2!1051 lt!28794))) #b00000000000000000000000000000000)))))

(declare-fun bm!5701 () Bool)

(assert (=> bm!5701 (= call!5704 (arrayCountValidKeys!0 (_keys!3786 (_2!1051 lt!28794)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 (_2!1051 lt!28794)))))))

(assert (= (and d!14583 c!9577) b!67982))

(assert (= (and d!14583 (not c!9577)) b!67985))

(assert (= (and b!67985 c!9576) b!67983))

(assert (= (and b!67985 (not c!9576)) b!67984))

(assert (= (or b!67983 b!67984) bm!5701))

(assert (=> b!67985 m!62851))

(assert (=> b!67985 m!62851))

(assert (=> b!67985 m!62853))

(declare-fun m!63711 () Bool)

(assert (=> bm!5701 m!63711))

(assert (=> b!67030 d!14583))

(declare-fun b!67986 () Bool)

(declare-fun e!44528 () (_ BitVec 32))

(assert (=> b!67986 (= e!44528 #b00000000000000000000000000000000)))

(declare-fun b!67987 () Bool)

(declare-fun e!44527 () (_ BitVec 32))

(declare-fun call!5705 () (_ BitVec 32))

(assert (=> b!67987 (= e!44527 (bvadd #b00000000000000000000000000000001 call!5705))))

(declare-fun b!67988 () Bool)

(assert (=> b!67988 (= e!44527 call!5705)))

(declare-fun lt!29627 () (_ BitVec 32))

(declare-fun d!14585 () Bool)

(assert (=> d!14585 (and (bvsge lt!29627 #b00000000000000000000000000000000) (bvsle lt!29627 (bvsub (size!2061 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!14585 (= lt!29627 e!44528)))

(declare-fun c!9579 () Bool)

(assert (=> d!14585 (= c!9579 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!14585 (and (bvsle #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2061 (_keys!3786 newMap!16)) (size!2061 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))))

(assert (=> d!14585 (= (arrayCountValidKeys!0 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) lt!29627)))

(declare-fun b!67989 () Bool)

(assert (=> b!67989 (= e!44528 e!44527)))

(declare-fun c!9578 () Bool)

(assert (=> b!67989 (= c!9578 (validKeyInArray!0 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!5702 () Bool)

(assert (=> bm!5702 (= call!5705 (arrayCountValidKeys!0 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))))))

(assert (= (and d!14585 c!9579) b!67986))

(assert (= (and d!14585 (not c!9579)) b!67989))

(assert (= (and b!67989 c!9578) b!67987))

(assert (= (and b!67989 (not c!9578)) b!67988))

(assert (= (or b!67987 b!67988) bm!5702))

(declare-fun m!63713 () Bool)

(assert (=> b!67989 m!63713))

(assert (=> b!67989 m!63713))

(declare-fun m!63715 () Bool)

(assert (=> b!67989 m!63715))

(declare-fun m!63717 () Bool)

(assert (=> bm!5702 m!63717))

(assert (=> d!13793 d!14585))

(declare-fun b!67990 () Bool)

(declare-fun e!44531 () Bool)

(declare-fun call!5706 () Bool)

(assert (=> b!67990 (= e!44531 call!5706)))

(declare-fun b!67991 () Bool)

(declare-fun e!44529 () Bool)

(assert (=> b!67991 (= e!44529 e!44531)))

(declare-fun c!9580 () Bool)

(assert (=> b!67991 (= c!9580 (validKeyInArray!0 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!67992 () Bool)

(declare-fun e!44530 () Bool)

(assert (=> b!67992 (= e!44530 call!5706)))

(declare-fun d!14587 () Bool)

(declare-fun res!36624 () Bool)

(assert (=> d!14587 (=> res!36624 e!44529)))

(assert (=> d!14587 (= res!36624 (bvsge #b00000000000000000000000000000000 (size!2061 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))))

(assert (=> d!14587 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (mask!6081 newMap!16)) e!44529)))

(declare-fun b!67993 () Bool)

(assert (=> b!67993 (= e!44531 e!44530)))

(declare-fun lt!29629 () (_ BitVec 64))

(assert (=> b!67993 (= lt!29629 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29628 () Unit!1824)

(assert (=> b!67993 (= lt!29628 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) lt!29629 #b00000000000000000000000000000000))))

(assert (=> b!67993 (arrayContainsKey!0 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) lt!29629 #b00000000000000000000000000000000)))

(declare-fun lt!29630 () Unit!1824)

(assert (=> b!67993 (= lt!29630 lt!29628)))

(declare-fun res!36625 () Bool)

(assert (=> b!67993 (= res!36625 (= (seekEntryOrOpen!0 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000) (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (mask!6081 newMap!16)) (Found!227 #b00000000000000000000000000000000)))))

(assert (=> b!67993 (=> (not res!36625) (not e!44530))))

(declare-fun bm!5703 () Bool)

(assert (=> bm!5703 (= call!5706 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (mask!6081 newMap!16)))))

(assert (= (and d!14587 (not res!36624)) b!67991))

(assert (= (and b!67991 c!9580) b!67993))

(assert (= (and b!67991 (not c!9580)) b!67990))

(assert (= (and b!67993 res!36625) b!67992))

(assert (= (or b!67992 b!67990) bm!5703))

(assert (=> b!67991 m!63713))

(assert (=> b!67991 m!63713))

(assert (=> b!67991 m!63715))

(assert (=> b!67993 m!63713))

(declare-fun m!63719 () Bool)

(assert (=> b!67993 m!63719))

(declare-fun m!63721 () Bool)

(assert (=> b!67993 m!63721))

(assert (=> b!67993 m!63713))

(declare-fun m!63723 () Bool)

(assert (=> b!67993 m!63723))

(declare-fun m!63725 () Bool)

(assert (=> bm!5703 m!63725))

(assert (=> d!13793 d!14587))

(assert (=> d!13793 d!14457))

(assert (=> d!13793 d!13899))

(assert (=> d!13793 d!13783))

(assert (=> d!13793 d!13987))

(declare-fun d!14589 () Bool)

(declare-fun e!44534 () Bool)

(assert (=> d!14589 e!44534))

(declare-fun res!36628 () Bool)

(assert (=> d!14589 (=> (not res!36628) (not e!44534))))

(assert (=> d!14589 (= res!36628 (and (bvsge (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000000) (bvslt (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (size!2061 (_keys!3786 newMap!16)))))))

(declare-fun lt!29633 () Unit!1824)

(declare-fun choose!102 ((_ BitVec 64) array!3823 (_ BitVec 32) (_ BitVec 32)) Unit!1824)

(assert (=> d!14589 (= lt!29633 (choose!102 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (mask!6081 newMap!16)))))

(assert (=> d!14589 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14589 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (_keys!3786 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (mask!6081 newMap!16)) lt!29633)))

(declare-fun b!67996 () Bool)

(assert (=> b!67996 (= e!44534 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (mask!6081 newMap!16)))))

(assert (= (and d!14589 res!36628) b!67996))

(assert (=> d!14589 m!60827))

(declare-fun m!63727 () Bool)

(assert (=> d!14589 m!63727))

(assert (=> d!14589 m!61297))

(assert (=> b!67996 m!61265))

(assert (=> b!67996 m!61269))

(assert (=> d!13793 d!14589))

(declare-fun b!67997 () Bool)

(declare-fun e!44536 () (_ BitVec 32))

(assert (=> b!67997 (= e!44536 #b00000000000000000000000000000000)))

(declare-fun b!67998 () Bool)

(declare-fun e!44535 () (_ BitVec 32))

(declare-fun call!5707 () (_ BitVec 32))

(assert (=> b!67998 (= e!44535 (bvadd #b00000000000000000000000000000001 call!5707))))

(declare-fun b!67999 () Bool)

(assert (=> b!67999 (= e!44535 call!5707)))

(declare-fun d!14591 () Bool)

(declare-fun lt!29634 () (_ BitVec 32))

(assert (=> d!14591 (and (bvsge lt!29634 #b00000000000000000000000000000000) (bvsle lt!29634 (bvsub (size!2061 lt!28908) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)))))))

(assert (=> d!14591 (= lt!29634 e!44536)))

(declare-fun c!9582 () Bool)

(assert (=> d!14591 (= c!9582 (bvsge (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (bvadd (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000001)))))

(assert (=> d!14591 (and (bvsle (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (bvadd (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000001)) (bvsge (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000001) (size!2061 lt!28908)))))

(assert (=> d!14591 (= (arrayCountValidKeys!0 lt!28908 (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (bvadd (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000001)) lt!29634)))

(declare-fun b!68000 () Bool)

(assert (=> b!68000 (= e!44536 e!44535)))

(declare-fun c!9581 () Bool)

(assert (=> b!68000 (= c!9581 (validKeyInArray!0 (select (arr!1826 lt!28908) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)))))))

(declare-fun bm!5704 () Bool)

(assert (=> bm!5704 (= call!5707 (arrayCountValidKeys!0 lt!28908 (bvadd (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000001) (bvadd (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000001)))))

(assert (= (and d!14591 c!9582) b!67997))

(assert (= (and d!14591 (not c!9582)) b!68000))

(assert (= (and b!68000 c!9581) b!67998))

(assert (= (and b!68000 (not c!9581)) b!67999))

(assert (= (or b!67998 b!67999) bm!5704))

(declare-fun m!63729 () Bool)

(assert (=> b!68000 m!63729))

(assert (=> b!68000 m!63729))

(declare-fun m!63731 () Bool)

(assert (=> b!68000 m!63731))

(declare-fun m!63733 () Bool)

(assert (=> bm!5704 m!63733))

(assert (=> d!13793 d!14591))

(declare-fun b!68001 () Bool)

(declare-fun e!44538 () Bool)

(declare-fun call!5708 () Bool)

(assert (=> b!68001 (= e!44538 call!5708)))

(declare-fun b!68002 () Bool)

(declare-fun e!44539 () Bool)

(assert (=> b!68002 (= e!44539 e!44538)))

(declare-fun c!9583 () Bool)

(assert (=> b!68002 (= c!9583 (validKeyInArray!0 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) lt!28904)))))

(declare-fun b!68003 () Bool)

(declare-fun e!44537 () Bool)

(assert (=> b!68003 (= e!44537 (contains!708 lt!28886 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) lt!28904)))))

(declare-fun b!68004 () Bool)

(assert (=> b!68004 (= e!44538 call!5708)))

(declare-fun b!68005 () Bool)

(declare-fun e!44540 () Bool)

(assert (=> b!68005 (= e!44540 e!44539)))

(declare-fun res!36629 () Bool)

(assert (=> b!68005 (=> (not res!36629) (not e!44539))))

(assert (=> b!68005 (= res!36629 (not e!44537))))

(declare-fun res!36631 () Bool)

(assert (=> b!68005 (=> (not res!36631) (not e!44537))))

(assert (=> b!68005 (= res!36631 (validKeyInArray!0 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) lt!28904)))))

(declare-fun d!14593 () Bool)

(declare-fun res!36630 () Bool)

(assert (=> d!14593 (=> res!36630 e!44540)))

(assert (=> d!14593 (= res!36630 (bvsge lt!28904 (size!2061 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))))

(assert (=> d!14593 (= (arrayNoDuplicates!0 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) lt!28904 lt!28886) e!44540)))

(declare-fun bm!5705 () Bool)

(assert (=> bm!5705 (= call!5708 (arrayNoDuplicates!0 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (bvadd lt!28904 #b00000000000000000000000000000001) (ite c!9583 (Cons!1450 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) lt!28904) lt!28886) lt!28886)))))

(assert (= (and d!14593 (not res!36630)) b!68005))

(assert (= (and b!68005 res!36631) b!68003))

(assert (= (and b!68005 res!36629) b!68002))

(assert (= (and b!68002 c!9583) b!68001))

(assert (= (and b!68002 (not c!9583)) b!68004))

(assert (= (or b!68001 b!68004) bm!5705))

(declare-fun m!63735 () Bool)

(assert (=> b!68002 m!63735))

(assert (=> b!68002 m!63735))

(declare-fun m!63737 () Bool)

(assert (=> b!68002 m!63737))

(assert (=> b!68003 m!63735))

(assert (=> b!68003 m!63735))

(declare-fun m!63739 () Bool)

(assert (=> b!68003 m!63739))

(assert (=> b!68005 m!63735))

(assert (=> b!68005 m!63735))

(assert (=> b!68005 m!63737))

(assert (=> bm!5705 m!63735))

(declare-fun m!63741 () Bool)

(assert (=> bm!5705 m!63741))

(assert (=> d!13793 d!14593))

(declare-fun d!14595 () Bool)

(declare-fun e!44543 () Bool)

(assert (=> d!14595 e!44543))

(declare-fun res!36634 () Bool)

(assert (=> d!14595 (=> (not res!36634) (not e!44543))))

(assert (=> d!14595 (= res!36634 (and (bvsge (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000000) (bvslt (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (size!2061 (_keys!3786 newMap!16)))))))

(declare-fun lt!29637 () Unit!1824)

(declare-fun choose!41 (array!3823 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1454) Unit!1824)

(assert (=> d!14595 (= lt!29637 (choose!41 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) lt!28904 lt!28886))))

(assert (=> d!14595 (bvslt (size!2061 (_keys!3786 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!14595 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) lt!28904 lt!28886) lt!29637)))

(declare-fun b!68008 () Bool)

(assert (=> b!68008 (= e!44543 (arrayNoDuplicates!0 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) lt!28904 lt!28886))))

(assert (= (and d!14595 res!36634) b!68008))

(assert (=> d!14595 m!60827))

(declare-fun m!63743 () Bool)

(assert (=> d!14595 m!63743))

(assert (=> b!68008 m!61265))

(assert (=> b!68008 m!61263))

(assert (=> d!13793 d!14595))

(declare-fun b!68009 () Bool)

(declare-fun res!36643 () Bool)

(declare-fun e!44547 () Bool)

(assert (=> b!68009 (=> (not res!36643) (not e!44547))))

(declare-fun e!44552 () Bool)

(assert (=> b!68009 (= res!36643 e!44552)))

(declare-fun c!9589 () Bool)

(assert (=> b!68009 (= c!9589 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!68010 () Bool)

(declare-fun call!5713 () Bool)

(assert (=> b!68010 (= e!44552 (not call!5713))))

(declare-fun b!68011 () Bool)

(declare-fun e!44548 () Bool)

(assert (=> b!68011 (= e!44548 (validKeyInArray!0 (select (arr!1826 lt!28901) #b00000000000000000000000000000000)))))

(declare-fun b!68012 () Bool)

(declare-fun e!44550 () Bool)

(assert (=> b!68012 (= e!44552 e!44550)))

(declare-fun res!36637 () Bool)

(assert (=> b!68012 (= res!36637 call!5713)))

(assert (=> b!68012 (=> (not res!36637) (not e!44550))))

(declare-fun lt!29650 () ListLongMap!1379)

(declare-fun e!44549 () Bool)

(declare-fun b!68013 () Bool)

(assert (=> b!68013 (= e!44549 (= (apply!72 lt!29650 (select (arr!1826 lt!28901) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 lt!28905) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68013 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 lt!28905)))))

(assert (=> b!68013 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 lt!28901)))))

(declare-fun d!14597 () Bool)

(assert (=> d!14597 e!44547))

(declare-fun res!36638 () Bool)

(assert (=> d!14597 (=> (not res!36638) (not e!44547))))

(assert (=> d!14597 (= res!36638 (or (bvsge #b00000000000000000000000000000000 (size!2061 lt!28901)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 lt!28901)))))))

(declare-fun lt!29658 () ListLongMap!1379)

(assert (=> d!14597 (= lt!29650 lt!29658)))

(declare-fun lt!29655 () Unit!1824)

(declare-fun e!44546 () Unit!1824)

(assert (=> d!14597 (= lt!29655 e!44546)))

(declare-fun c!9587 () Bool)

(declare-fun e!44544 () Bool)

(assert (=> d!14597 (= c!9587 e!44544)))

(declare-fun res!36642 () Bool)

(assert (=> d!14597 (=> (not res!36642) (not e!44544))))

(assert (=> d!14597 (= res!36642 (bvslt #b00000000000000000000000000000000 (size!2061 lt!28901)))))

(declare-fun e!44551 () ListLongMap!1379)

(assert (=> d!14597 (= lt!29658 e!44551)))

(declare-fun c!9584 () Bool)

(assert (=> d!14597 (= c!9584 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14597 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14597 (= (getCurrentListMap!403 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29650)))

(declare-fun b!68014 () Bool)

(declare-fun e!44554 () Bool)

(declare-fun e!44556 () Bool)

(assert (=> b!68014 (= e!44554 e!44556)))

(declare-fun res!36640 () Bool)

(declare-fun call!5710 () Bool)

(assert (=> b!68014 (= res!36640 call!5710)))

(assert (=> b!68014 (=> (not res!36640) (not e!44556))))

(declare-fun b!68015 () Bool)

(assert (=> b!68015 (= e!44554 (not call!5710))))

(declare-fun b!68016 () Bool)

(assert (=> b!68016 (= e!44550 (= (apply!72 lt!29650 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun bm!5706 () Bool)

(declare-fun call!5712 () ListLongMap!1379)

(declare-fun call!5715 () ListLongMap!1379)

(assert (=> bm!5706 (= call!5712 call!5715)))

(declare-fun b!68017 () Bool)

(declare-fun Unit!1892 () Unit!1824)

(assert (=> b!68017 (= e!44546 Unit!1892)))

(declare-fun b!68018 () Bool)

(declare-fun e!44545 () ListLongMap!1379)

(assert (=> b!68018 (= e!44545 call!5712)))

(declare-fun bm!5707 () Bool)

(declare-fun call!5711 () ListLongMap!1379)

(assert (=> bm!5707 (= call!5715 call!5711)))

(declare-fun call!5709 () ListLongMap!1379)

(declare-fun bm!5708 () Bool)

(declare-fun c!9586 () Bool)

(assert (=> bm!5708 (= call!5709 (+!86 (ite c!9584 call!5711 (ite c!9586 call!5715 call!5712)) (ite (or c!9584 c!9586) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!68019 () Bool)

(declare-fun e!44555 () ListLongMap!1379)

(declare-fun call!5714 () ListLongMap!1379)

(assert (=> b!68019 (= e!44555 call!5714)))

(declare-fun bm!5709 () Bool)

(assert (=> bm!5709 (= call!5714 call!5709)))

(declare-fun bm!5710 () Bool)

(assert (=> bm!5710 (= call!5710 (contains!705 lt!29650 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68020 () Bool)

(declare-fun res!36641 () Bool)

(assert (=> b!68020 (=> (not res!36641) (not e!44547))))

(declare-fun e!44553 () Bool)

(assert (=> b!68020 (= res!36641 e!44553)))

(declare-fun res!36636 () Bool)

(assert (=> b!68020 (=> res!36636 e!44553)))

(assert (=> b!68020 (= res!36636 (not e!44548))))

(declare-fun res!36639 () Bool)

(assert (=> b!68020 (=> (not res!36639) (not e!44548))))

(assert (=> b!68020 (= res!36639 (bvslt #b00000000000000000000000000000000 (size!2061 lt!28901)))))

(declare-fun b!68021 () Bool)

(assert (=> b!68021 (= e!44547 e!44554)))

(declare-fun c!9588 () Bool)

(assert (=> b!68021 (= c!9588 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68022 () Bool)

(assert (=> b!68022 (= e!44551 (+!86 call!5709 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun b!68023 () Bool)

(assert (=> b!68023 (= e!44544 (validKeyInArray!0 (select (arr!1826 lt!28901) #b00000000000000000000000000000000)))))

(declare-fun b!68024 () Bool)

(assert (=> b!68024 (= e!44556 (= (apply!72 lt!29650 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun b!68025 () Bool)

(declare-fun lt!29647 () Unit!1824)

(assert (=> b!68025 (= e!44546 lt!29647)))

(declare-fun lt!29649 () ListLongMap!1379)

(assert (=> b!68025 (= lt!29649 (getCurrentListMapNoExtraKeys!51 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29654 () (_ BitVec 64))

(assert (=> b!68025 (= lt!29654 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29652 () (_ BitVec 64))

(assert (=> b!68025 (= lt!29652 (select (arr!1826 lt!28901) #b00000000000000000000000000000000))))

(declare-fun lt!29659 () Unit!1824)

(assert (=> b!68025 (= lt!29659 (addStillContains!48 lt!29649 lt!29654 (zeroValue!2054 newMap!16) lt!29652))))

(assert (=> b!68025 (contains!705 (+!86 lt!29649 (tuple2!2083 lt!29654 (zeroValue!2054 newMap!16))) lt!29652)))

(declare-fun lt!29653 () Unit!1824)

(assert (=> b!68025 (= lt!29653 lt!29659)))

(declare-fun lt!29644 () ListLongMap!1379)

(assert (=> b!68025 (= lt!29644 (getCurrentListMapNoExtraKeys!51 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29656 () (_ BitVec 64))

(assert (=> b!68025 (= lt!29656 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29648 () (_ BitVec 64))

(assert (=> b!68025 (= lt!29648 (select (arr!1826 lt!28901) #b00000000000000000000000000000000))))

(declare-fun lt!29638 () Unit!1824)

(assert (=> b!68025 (= lt!29638 (addApplyDifferent!48 lt!29644 lt!29656 (minValue!2054 newMap!16) lt!29648))))

(assert (=> b!68025 (= (apply!72 (+!86 lt!29644 (tuple2!2083 lt!29656 (minValue!2054 newMap!16))) lt!29648) (apply!72 lt!29644 lt!29648))))

(declare-fun lt!29640 () Unit!1824)

(assert (=> b!68025 (= lt!29640 lt!29638)))

(declare-fun lt!29657 () ListLongMap!1379)

(assert (=> b!68025 (= lt!29657 (getCurrentListMapNoExtraKeys!51 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29642 () (_ BitVec 64))

(assert (=> b!68025 (= lt!29642 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29643 () (_ BitVec 64))

(assert (=> b!68025 (= lt!29643 (select (arr!1826 lt!28901) #b00000000000000000000000000000000))))

(declare-fun lt!29641 () Unit!1824)

(assert (=> b!68025 (= lt!29641 (addApplyDifferent!48 lt!29657 lt!29642 (zeroValue!2054 newMap!16) lt!29643))))

(assert (=> b!68025 (= (apply!72 (+!86 lt!29657 (tuple2!2083 lt!29642 (zeroValue!2054 newMap!16))) lt!29643) (apply!72 lt!29657 lt!29643))))

(declare-fun lt!29651 () Unit!1824)

(assert (=> b!68025 (= lt!29651 lt!29641)))

(declare-fun lt!29646 () ListLongMap!1379)

(assert (=> b!68025 (= lt!29646 (getCurrentListMapNoExtraKeys!51 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29645 () (_ BitVec 64))

(assert (=> b!68025 (= lt!29645 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29639 () (_ BitVec 64))

(assert (=> b!68025 (= lt!29639 (select (arr!1826 lt!28901) #b00000000000000000000000000000000))))

(assert (=> b!68025 (= lt!29647 (addApplyDifferent!48 lt!29646 lt!29645 (minValue!2054 newMap!16) lt!29639))))

(assert (=> b!68025 (= (apply!72 (+!86 lt!29646 (tuple2!2083 lt!29645 (minValue!2054 newMap!16))) lt!29639) (apply!72 lt!29646 lt!29639))))

(declare-fun b!68026 () Bool)

(declare-fun c!9585 () Bool)

(assert (=> b!68026 (= c!9585 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68026 (= e!44555 e!44545)))

(declare-fun b!68027 () Bool)

(assert (=> b!68027 (= e!44551 e!44555)))

(assert (=> b!68027 (= c!9586 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68028 () Bool)

(assert (=> b!68028 (= e!44553 e!44549)))

(declare-fun res!36635 () Bool)

(assert (=> b!68028 (=> (not res!36635) (not e!44549))))

(assert (=> b!68028 (= res!36635 (contains!705 lt!29650 (select (arr!1826 lt!28901) #b00000000000000000000000000000000)))))

(assert (=> b!68028 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 lt!28901)))))

(declare-fun b!68029 () Bool)

(assert (=> b!68029 (= e!44545 call!5714)))

(declare-fun bm!5711 () Bool)

(assert (=> bm!5711 (= call!5711 (getCurrentListMapNoExtraKeys!51 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5712 () Bool)

(assert (=> bm!5712 (= call!5713 (contains!705 lt!29650 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14597 c!9584) b!68022))

(assert (= (and d!14597 (not c!9584)) b!68027))

(assert (= (and b!68027 c!9586) b!68019))

(assert (= (and b!68027 (not c!9586)) b!68026))

(assert (= (and b!68026 c!9585) b!68029))

(assert (= (and b!68026 (not c!9585)) b!68018))

(assert (= (or b!68029 b!68018) bm!5706))

(assert (= (or b!68019 bm!5706) bm!5707))

(assert (= (or b!68019 b!68029) bm!5709))

(assert (= (or b!68022 bm!5707) bm!5711))

(assert (= (or b!68022 bm!5709) bm!5708))

(assert (= (and d!14597 res!36642) b!68023))

(assert (= (and d!14597 c!9587) b!68025))

(assert (= (and d!14597 (not c!9587)) b!68017))

(assert (= (and d!14597 res!36638) b!68020))

(assert (= (and b!68020 res!36639) b!68011))

(assert (= (and b!68020 (not res!36636)) b!68028))

(assert (= (and b!68028 res!36635) b!68013))

(assert (= (and b!68020 res!36641) b!68009))

(assert (= (and b!68009 c!9589) b!68012))

(assert (= (and b!68009 (not c!9589)) b!68010))

(assert (= (and b!68012 res!36637) b!68016))

(assert (= (or b!68012 b!68010) bm!5712))

(assert (= (and b!68009 res!36643) b!68021))

(assert (= (and b!68021 c!9588) b!68014))

(assert (= (and b!68021 (not c!9588)) b!68015))

(assert (= (and b!68014 res!36640) b!68024))

(assert (= (or b!68014 b!68015) bm!5710))

(declare-fun b_lambda!3041 () Bool)

(assert (=> (not b_lambda!3041) (not b!68013)))

(assert (=> b!68013 t!4942))

(declare-fun b_and!4201 () Bool)

(assert (= b_and!4197 (and (=> t!4942 result!2587) b_and!4201)))

(assert (=> b!68013 t!4944))

(declare-fun b_and!4203 () Bool)

(assert (= b_and!4199 (and (=> t!4944 result!2589) b_and!4203)))

(declare-fun m!63745 () Bool)

(assert (=> b!68023 m!63745))

(assert (=> b!68023 m!63745))

(declare-fun m!63747 () Bool)

(assert (=> b!68023 m!63747))

(declare-fun m!63749 () Bool)

(assert (=> bm!5710 m!63749))

(declare-fun m!63751 () Bool)

(assert (=> b!68016 m!63751))

(assert (=> b!68028 m!63745))

(assert (=> b!68028 m!63745))

(declare-fun m!63753 () Bool)

(assert (=> b!68028 m!63753))

(declare-fun m!63755 () Bool)

(assert (=> bm!5708 m!63755))

(declare-fun m!63757 () Bool)

(assert (=> b!68022 m!63757))

(declare-fun m!63759 () Bool)

(assert (=> b!68025 m!63759))

(declare-fun m!63761 () Bool)

(assert (=> b!68025 m!63761))

(declare-fun m!63763 () Bool)

(assert (=> b!68025 m!63763))

(declare-fun m!63765 () Bool)

(assert (=> b!68025 m!63765))

(declare-fun m!63767 () Bool)

(assert (=> b!68025 m!63767))

(assert (=> b!68025 m!63763))

(declare-fun m!63769 () Bool)

(assert (=> b!68025 m!63769))

(declare-fun m!63771 () Bool)

(assert (=> b!68025 m!63771))

(declare-fun m!63773 () Bool)

(assert (=> b!68025 m!63773))

(declare-fun m!63775 () Bool)

(assert (=> b!68025 m!63775))

(assert (=> b!68025 m!63745))

(declare-fun m!63777 () Bool)

(assert (=> b!68025 m!63777))

(assert (=> b!68025 m!63773))

(declare-fun m!63779 () Bool)

(assert (=> b!68025 m!63779))

(declare-fun m!63781 () Bool)

(assert (=> b!68025 m!63781))

(assert (=> b!68025 m!63759))

(declare-fun m!63783 () Bool)

(assert (=> b!68025 m!63783))

(assert (=> b!68025 m!63779))

(declare-fun m!63785 () Bool)

(assert (=> b!68025 m!63785))

(declare-fun m!63787 () Bool)

(assert (=> b!68025 m!63787))

(declare-fun m!63789 () Bool)

(assert (=> b!68025 m!63789))

(assert (=> bm!5711 m!63767))

(assert (=> d!14597 m!61297))

(assert (=> b!68011 m!63745))

(assert (=> b!68011 m!63745))

(assert (=> b!68011 m!63747))

(assert (=> b!68013 m!61477))

(declare-fun m!63791 () Bool)

(assert (=> b!68013 m!63791))

(assert (=> b!68013 m!61477))

(declare-fun m!63793 () Bool)

(assert (=> b!68013 m!63793))

(assert (=> b!68013 m!63791))

(assert (=> b!68013 m!63745))

(declare-fun m!63795 () Bool)

(assert (=> b!68013 m!63795))

(assert (=> b!68013 m!63745))

(declare-fun m!63797 () Bool)

(assert (=> b!68024 m!63797))

(declare-fun m!63799 () Bool)

(assert (=> bm!5712 m!63799))

(assert (=> d!13793 d!14597))

(declare-fun d!14599 () Bool)

(declare-fun e!44559 () Bool)

(assert (=> d!14599 e!44559))

(declare-fun res!36646 () Bool)

(assert (=> d!14599 (=> (not res!36646) (not e!44559))))

(assert (=> d!14599 (= res!36646 (and (bvsge (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000000) (bvslt (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (size!2061 (_keys!3786 newMap!16))) (bvslt (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (size!2062 (_values!2129 newMap!16)))))))

(declare-fun lt!29662 () Unit!1824)

(declare-fun choose!386 (array!3823 array!3825 (_ BitVec 32) (_ BitVec 32) V!2913 V!2913 (_ BitVec 32) (_ BitVec 64) V!2913 Int) Unit!1824)

(assert (=> d!14599 (= lt!29662 (choose!386 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 (defaultEntry!2146 newMap!16)))))

(assert (=> d!14599 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14599 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!10 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522 (defaultEntry!2146 newMap!16)) lt!29662)))

(declare-fun b!68032 () Bool)

(assert (=> b!68032 (= e!44559 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (getCurrentListMap!403 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))))))

(assert (= (and d!14599 res!36646) b!68032))

(assert (=> d!14599 m!60827))

(declare-fun m!63801 () Bool)

(assert (=> d!14599 m!63801))

(assert (=> d!14599 m!61297))

(assert (=> b!68032 m!61265))

(assert (=> b!68032 m!61251))

(assert (=> b!68032 m!61017))

(assert (=> b!68032 m!61275))

(assert (=> b!68032 m!61259))

(assert (=> b!68032 m!61017))

(assert (=> d!13793 d!14599))

(declare-fun d!14601 () Bool)

(assert (=> d!14601 (arrayContainsKey!0 lt!28885 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!29663 () Unit!1824)

(assert (=> d!14601 (= lt!29663 (choose!13 lt!28885 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))))))

(assert (=> d!14601 (bvsge (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000000)))

(assert (=> d!14601 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!28885 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))) lt!29663)))

(declare-fun bs!2947 () Bool)

(assert (= bs!2947 d!14601))

(assert (=> bs!2947 m!60827))

(assert (=> bs!2947 m!61253))

(assert (=> bs!2947 m!60827))

(declare-fun m!63803 () Bool)

(assert (=> bs!2947 m!63803))

(assert (=> d!13793 d!14601))

(declare-fun d!14603 () Bool)

(assert (=> d!14603 (= (arrayCountValidKeys!0 lt!28908 (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (bvadd (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!29666 () Unit!1824)

(declare-fun choose!2 (array!3823 (_ BitVec 32)) Unit!1824)

(assert (=> d!14603 (= lt!29666 (choose!2 lt!28908 (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))))))

(declare-fun e!44562 () Bool)

(assert (=> d!14603 e!44562))

(declare-fun res!36651 () Bool)

(assert (=> d!14603 (=> (not res!36651) (not e!44562))))

(assert (=> d!14603 (= res!36651 (and (bvsge (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000000) (bvslt (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (size!2061 lt!28908))))))

(assert (=> d!14603 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!28908 (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))) lt!29666)))

(declare-fun b!68037 () Bool)

(declare-fun res!36652 () Bool)

(assert (=> b!68037 (=> (not res!36652) (not e!44562))))

(assert (=> b!68037 (= res!36652 (validKeyInArray!0 (select (arr!1826 lt!28908) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)))))))

(declare-fun b!68038 () Bool)

(assert (=> b!68038 (= e!44562 (bvslt (size!2061 lt!28908) #b01111111111111111111111111111111))))

(assert (= (and d!14603 res!36651) b!68037))

(assert (= (and b!68037 res!36652) b!68038))

(assert (=> d!14603 m!61271))

(declare-fun m!63805 () Bool)

(assert (=> d!14603 m!63805))

(assert (=> b!68037 m!63729))

(assert (=> b!68037 m!63729))

(assert (=> b!68037 m!63731))

(assert (=> d!13793 d!14603))

(declare-fun d!14605 () Bool)

(declare-fun e!44563 () Bool)

(assert (=> d!14605 e!44563))

(declare-fun res!36653 () Bool)

(assert (=> d!14605 (=> res!36653 e!44563)))

(declare-fun lt!29667 () Bool)

(assert (=> d!14605 (= res!36653 (not lt!29667))))

(declare-fun lt!29670 () Bool)

(assert (=> d!14605 (= lt!29667 lt!29670)))

(declare-fun lt!29669 () Unit!1824)

(declare-fun e!44564 () Unit!1824)

(assert (=> d!14605 (= lt!29669 e!44564)))

(declare-fun c!9590 () Bool)

(assert (=> d!14605 (= c!9590 lt!29670)))

(assert (=> d!14605 (= lt!29670 (containsKey!134 (toList!705 (getCurrentListMap!403 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)))))))

(assert (=> d!14605 (= (contains!705 (getCurrentListMap!403 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)))) lt!29667)))

(declare-fun b!68039 () Bool)

(declare-fun lt!29668 () Unit!1824)

(assert (=> b!68039 (= e!44564 lt!29668)))

(assert (=> b!68039 (= lt!29668 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (getCurrentListMap!403 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)))))))

(assert (=> b!68039 (isDefined!83 (getValueByKey!131 (toList!705 (getCurrentListMap!403 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)))))))

(declare-fun b!68040 () Bool)

(declare-fun Unit!1893 () Unit!1824)

(assert (=> b!68040 (= e!44564 Unit!1893)))

(declare-fun b!68041 () Bool)

(assert (=> b!68041 (= e!44563 (isDefined!83 (getValueByKey!131 (toList!705 (getCurrentListMap!403 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (select (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))))))))

(assert (= (and d!14605 c!9590) b!68039))

(assert (= (and d!14605 (not c!9590)) b!68040))

(assert (= (and d!14605 (not res!36653)) b!68041))

(assert (=> d!14605 m!61257))

(declare-fun m!63807 () Bool)

(assert (=> d!14605 m!63807))

(assert (=> b!68039 m!61257))

(declare-fun m!63809 () Bool)

(assert (=> b!68039 m!63809))

(assert (=> b!68039 m!61257))

(declare-fun m!63811 () Bool)

(assert (=> b!68039 m!63811))

(assert (=> b!68039 m!63811))

(declare-fun m!63813 () Bool)

(assert (=> b!68039 m!63813))

(assert (=> b!68041 m!61257))

(assert (=> b!68041 m!63811))

(assert (=> b!68041 m!63811))

(assert (=> b!68041 m!63813))

(assert (=> d!13793 d!14605))

(assert (=> d!13793 d!14391))

(declare-fun d!14607 () Bool)

(declare-fun res!36654 () Bool)

(declare-fun e!44565 () Bool)

(assert (=> d!14607 (=> res!36654 e!44565)))

(assert (=> d!14607 (= res!36654 (= (select (arr!1826 lt!28885) #b00000000000000000000000000000000) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14607 (= (arrayContainsKey!0 lt!28885 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) #b00000000000000000000000000000000) e!44565)))

(declare-fun b!68042 () Bool)

(declare-fun e!44566 () Bool)

(assert (=> b!68042 (= e!44565 e!44566)))

(declare-fun res!36655 () Bool)

(assert (=> b!68042 (=> (not res!36655) (not e!44566))))

(assert (=> b!68042 (= res!36655 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 lt!28885)))))

(declare-fun b!68043 () Bool)

(assert (=> b!68043 (= e!44566 (arrayContainsKey!0 lt!28885 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!14607 (not res!36654)) b!68042))

(assert (= (and b!68042 res!36655) b!68043))

(declare-fun m!63815 () Bool)

(assert (=> d!14607 m!63815))

(assert (=> b!68043 m!60827))

(declare-fun m!63817 () Bool)

(assert (=> b!68043 m!63817))

(assert (=> d!13793 d!14607))

(assert (=> d!13793 d!13929))

(declare-fun d!14609 () Bool)

(declare-fun e!44567 () Bool)

(assert (=> d!14609 e!44567))

(declare-fun res!36656 () Bool)

(assert (=> d!14609 (=> (not res!36656) (not e!44567))))

(assert (=> d!14609 (= res!36656 (and (bvsge (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000000) (bvslt (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (size!2061 lt!28901))))))

(declare-fun lt!29671 () Unit!1824)

(assert (=> d!14609 (= lt!29671 (choose!382 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (defaultEntry!2146 newMap!16)))))

(assert (=> d!14609 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14609 (= (lemmaValidKeyInArrayIsInListMap!81 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (defaultEntry!2146 newMap!16)) lt!29671)))

(declare-fun b!68044 () Bool)

(assert (=> b!68044 (= e!44567 (contains!705 (getCurrentListMap!403 lt!28901 lt!28905 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1826 lt!28901) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)))))))

(assert (= (and d!14609 res!36656) b!68044))

(declare-fun m!63819 () Bool)

(assert (=> d!14609 m!63819))

(assert (=> d!14609 m!61297))

(assert (=> b!68044 m!61249))

(declare-fun m!63821 () Bool)

(assert (=> b!68044 m!63821))

(assert (=> b!68044 m!61249))

(assert (=> b!68044 m!63821))

(declare-fun m!63823 () Bool)

(assert (=> b!68044 m!63823))

(assert (=> d!13793 d!14609))

(declare-fun b!68045 () Bool)

(declare-fun res!36665 () Bool)

(declare-fun e!44571 () Bool)

(assert (=> b!68045 (=> (not res!36665) (not e!44571))))

(declare-fun e!44576 () Bool)

(assert (=> b!68045 (= res!36665 e!44576)))

(declare-fun c!9596 () Bool)

(assert (=> b!68045 (= c!9596 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!68046 () Bool)

(declare-fun call!5720 () Bool)

(assert (=> b!68046 (= e!44576 (not call!5720))))

(declare-fun b!68047 () Bool)

(declare-fun e!44572 () Bool)

(assert (=> b!68047 (= e!44572 (validKeyInArray!0 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!68048 () Bool)

(declare-fun e!44574 () Bool)

(assert (=> b!68048 (= e!44576 e!44574)))

(declare-fun res!36659 () Bool)

(assert (=> b!68048 (= res!36659 call!5720)))

(assert (=> b!68048 (=> (not res!36659) (not e!44574))))

(declare-fun e!44573 () Bool)

(declare-fun b!68049 () Bool)

(declare-fun lt!29684 () ListLongMap!1379)

(assert (=> b!68049 (= e!44573 (= (apply!72 lt!29684 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68049 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))))))))

(assert (=> b!68049 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun d!14611 () Bool)

(assert (=> d!14611 e!44571))

(declare-fun res!36660 () Bool)

(assert (=> d!14611 (=> (not res!36660) (not e!44571))))

(assert (=> d!14611 (= res!36660 (or (bvsge #b00000000000000000000000000000000 (size!2061 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))))))

(declare-fun lt!29692 () ListLongMap!1379)

(assert (=> d!14611 (= lt!29684 lt!29692)))

(declare-fun lt!29689 () Unit!1824)

(declare-fun e!44570 () Unit!1824)

(assert (=> d!14611 (= lt!29689 e!44570)))

(declare-fun c!9594 () Bool)

(declare-fun e!44568 () Bool)

(assert (=> d!14611 (= c!9594 e!44568)))

(declare-fun res!36664 () Bool)

(assert (=> d!14611 (=> (not res!36664) (not e!44568))))

(assert (=> d!14611 (= res!36664 (bvslt #b00000000000000000000000000000000 (size!2061 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun e!44575 () ListLongMap!1379)

(assert (=> d!14611 (= lt!29692 e!44575)))

(declare-fun c!9591 () Bool)

(assert (=> d!14611 (= c!9591 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14611 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14611 (= (getCurrentListMap!403 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29684)))

(declare-fun b!68050 () Bool)

(declare-fun e!44578 () Bool)

(declare-fun e!44580 () Bool)

(assert (=> b!68050 (= e!44578 e!44580)))

(declare-fun res!36662 () Bool)

(declare-fun call!5717 () Bool)

(assert (=> b!68050 (= res!36662 call!5717)))

(assert (=> b!68050 (=> (not res!36662) (not e!44580))))

(declare-fun b!68051 () Bool)

(assert (=> b!68051 (= e!44578 (not call!5717))))

(declare-fun b!68052 () Bool)

(assert (=> b!68052 (= e!44574 (= (apply!72 lt!29684 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun bm!5713 () Bool)

(declare-fun call!5719 () ListLongMap!1379)

(declare-fun call!5722 () ListLongMap!1379)

(assert (=> bm!5713 (= call!5719 call!5722)))

(declare-fun b!68053 () Bool)

(declare-fun Unit!1894 () Unit!1824)

(assert (=> b!68053 (= e!44570 Unit!1894)))

(declare-fun b!68054 () Bool)

(declare-fun e!44569 () ListLongMap!1379)

(assert (=> b!68054 (= e!44569 call!5719)))

(declare-fun bm!5714 () Bool)

(declare-fun call!5718 () ListLongMap!1379)

(assert (=> bm!5714 (= call!5722 call!5718)))

(declare-fun call!5716 () ListLongMap!1379)

(declare-fun bm!5715 () Bool)

(declare-fun c!9593 () Bool)

(assert (=> bm!5715 (= call!5716 (+!86 (ite c!9591 call!5718 (ite c!9593 call!5722 call!5719)) (ite (or c!9591 c!9593) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun b!68055 () Bool)

(declare-fun e!44579 () ListLongMap!1379)

(declare-fun call!5721 () ListLongMap!1379)

(assert (=> b!68055 (= e!44579 call!5721)))

(declare-fun bm!5716 () Bool)

(assert (=> bm!5716 (= call!5721 call!5716)))

(declare-fun bm!5717 () Bool)

(assert (=> bm!5717 (= call!5717 (contains!705 lt!29684 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68056 () Bool)

(declare-fun res!36663 () Bool)

(assert (=> b!68056 (=> (not res!36663) (not e!44571))))

(declare-fun e!44577 () Bool)

(assert (=> b!68056 (= res!36663 e!44577)))

(declare-fun res!36658 () Bool)

(assert (=> b!68056 (=> res!36658 e!44577)))

(assert (=> b!68056 (= res!36658 (not e!44572))))

(declare-fun res!36661 () Bool)

(assert (=> b!68056 (=> (not res!36661) (not e!44572))))

(assert (=> b!68056 (= res!36661 (bvslt #b00000000000000000000000000000000 (size!2061 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun b!68057 () Bool)

(assert (=> b!68057 (= e!44571 e!44578)))

(declare-fun c!9595 () Bool)

(assert (=> b!68057 (= c!9595 (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68058 () Bool)

(assert (=> b!68058 (= e!44575 (+!86 call!5716 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(declare-fun b!68059 () Bool)

(assert (=> b!68059 (= e!44568 (validKeyInArray!0 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!68060 () Bool)

(assert (=> b!68060 (= e!44580 (= (apply!72 lt!29684 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2054 newMap!16)))))

(declare-fun b!68061 () Bool)

(declare-fun lt!29681 () Unit!1824)

(assert (=> b!68061 (= e!44570 lt!29681)))

(declare-fun lt!29683 () ListLongMap!1379)

(assert (=> b!68061 (= lt!29683 (getCurrentListMapNoExtraKeys!51 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29688 () (_ BitVec 64))

(assert (=> b!68061 (= lt!29688 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29686 () (_ BitVec 64))

(assert (=> b!68061 (= lt!29686 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29693 () Unit!1824)

(assert (=> b!68061 (= lt!29693 (addStillContains!48 lt!29683 lt!29688 (zeroValue!2054 newMap!16) lt!29686))))

(assert (=> b!68061 (contains!705 (+!86 lt!29683 (tuple2!2083 lt!29688 (zeroValue!2054 newMap!16))) lt!29686)))

(declare-fun lt!29687 () Unit!1824)

(assert (=> b!68061 (= lt!29687 lt!29693)))

(declare-fun lt!29678 () ListLongMap!1379)

(assert (=> b!68061 (= lt!29678 (getCurrentListMapNoExtraKeys!51 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29690 () (_ BitVec 64))

(assert (=> b!68061 (= lt!29690 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29682 () (_ BitVec 64))

(assert (=> b!68061 (= lt!29682 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29672 () Unit!1824)

(assert (=> b!68061 (= lt!29672 (addApplyDifferent!48 lt!29678 lt!29690 (minValue!2054 newMap!16) lt!29682))))

(assert (=> b!68061 (= (apply!72 (+!86 lt!29678 (tuple2!2083 lt!29690 (minValue!2054 newMap!16))) lt!29682) (apply!72 lt!29678 lt!29682))))

(declare-fun lt!29674 () Unit!1824)

(assert (=> b!68061 (= lt!29674 lt!29672)))

(declare-fun lt!29691 () ListLongMap!1379)

(assert (=> b!68061 (= lt!29691 (getCurrentListMapNoExtraKeys!51 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29676 () (_ BitVec 64))

(assert (=> b!68061 (= lt!29676 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29677 () (_ BitVec 64))

(assert (=> b!68061 (= lt!29677 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!29675 () Unit!1824)

(assert (=> b!68061 (= lt!29675 (addApplyDifferent!48 lt!29691 lt!29676 (zeroValue!2054 newMap!16) lt!29677))))

(assert (=> b!68061 (= (apply!72 (+!86 lt!29691 (tuple2!2083 lt!29676 (zeroValue!2054 newMap!16))) lt!29677) (apply!72 lt!29691 lt!29677))))

(declare-fun lt!29685 () Unit!1824)

(assert (=> b!68061 (= lt!29685 lt!29675)))

(declare-fun lt!29680 () ListLongMap!1379)

(assert (=> b!68061 (= lt!29680 (getCurrentListMapNoExtraKeys!51 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29679 () (_ BitVec 64))

(assert (=> b!68061 (= lt!29679 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29673 () (_ BitVec 64))

(assert (=> b!68061 (= lt!29673 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!68061 (= lt!29681 (addApplyDifferent!48 lt!29680 lt!29679 (minValue!2054 newMap!16) lt!29673))))

(assert (=> b!68061 (= (apply!72 (+!86 lt!29680 (tuple2!2083 lt!29679 (minValue!2054 newMap!16))) lt!29673) (apply!72 lt!29680 lt!29673))))

(declare-fun b!68062 () Bool)

(declare-fun c!9592 () Bool)

(assert (=> b!68062 (= c!9592 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68062 (= e!44579 e!44569)))

(declare-fun b!68063 () Bool)

(assert (=> b!68063 (= e!44575 e!44579)))

(assert (=> b!68063 (= c!9593 (and (not (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2017 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68064 () Bool)

(assert (=> b!68064 (= e!44577 e!44573)))

(declare-fun res!36657 () Bool)

(assert (=> b!68064 (=> (not res!36657) (not e!44573))))

(assert (=> b!68064 (= res!36657 (contains!705 lt!29684 (select (arr!1826 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!68064 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun b!68065 () Bool)

(assert (=> b!68065 (= e!44569 call!5721)))

(declare-fun bm!5718 () Bool)

(assert (=> bm!5718 (= call!5718 (getCurrentListMapNoExtraKeys!51 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) (array!3826 (store (arr!1827 (_values!2129 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (ValueCellFull!881 lt!28522)) (size!2062 (_values!2129 newMap!16))) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5719 () Bool)

(assert (=> bm!5719 (= call!5720 (contains!705 lt!29684 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14611 c!9591) b!68058))

(assert (= (and d!14611 (not c!9591)) b!68063))

(assert (= (and b!68063 c!9593) b!68055))

(assert (= (and b!68063 (not c!9593)) b!68062))

(assert (= (and b!68062 c!9592) b!68065))

(assert (= (and b!68062 (not c!9592)) b!68054))

(assert (= (or b!68065 b!68054) bm!5713))

(assert (= (or b!68055 bm!5713) bm!5714))

(assert (= (or b!68055 b!68065) bm!5716))

(assert (= (or b!68058 bm!5714) bm!5718))

(assert (= (or b!68058 bm!5716) bm!5715))

(assert (= (and d!14611 res!36664) b!68059))

(assert (= (and d!14611 c!9594) b!68061))

(assert (= (and d!14611 (not c!9594)) b!68053))

(assert (= (and d!14611 res!36660) b!68056))

(assert (= (and b!68056 res!36661) b!68047))

(assert (= (and b!68056 (not res!36658)) b!68064))

(assert (= (and b!68064 res!36657) b!68049))

(assert (= (and b!68056 res!36663) b!68045))

(assert (= (and b!68045 c!9596) b!68048))

(assert (= (and b!68045 (not c!9596)) b!68046))

(assert (= (and b!68048 res!36659) b!68052))

(assert (= (or b!68048 b!68046) bm!5719))

(assert (= (and b!68045 res!36665) b!68057))

(assert (= (and b!68057 c!9595) b!68050))

(assert (= (and b!68057 (not c!9595)) b!68051))

(assert (= (and b!68050 res!36662) b!68060))

(assert (= (or b!68050 b!68051) bm!5717))

(declare-fun b_lambda!3043 () Bool)

(assert (=> (not b_lambda!3043) (not b!68049)))

(assert (=> b!68049 t!4942))

(declare-fun b_and!4205 () Bool)

(assert (= b_and!4201 (and (=> t!4942 result!2587) b_and!4205)))

(assert (=> b!68049 t!4944))

(declare-fun b_and!4207 () Bool)

(assert (= b_and!4203 (and (=> t!4944 result!2589) b_and!4207)))

(assert (=> b!68059 m!63713))

(assert (=> b!68059 m!63713))

(assert (=> b!68059 m!63715))

(declare-fun m!63825 () Bool)

(assert (=> bm!5717 m!63825))

(declare-fun m!63827 () Bool)

(assert (=> b!68052 m!63827))

(assert (=> b!68064 m!63713))

(assert (=> b!68064 m!63713))

(declare-fun m!63829 () Bool)

(assert (=> b!68064 m!63829))

(declare-fun m!63831 () Bool)

(assert (=> bm!5715 m!63831))

(declare-fun m!63833 () Bool)

(assert (=> b!68058 m!63833))

(declare-fun m!63835 () Bool)

(assert (=> b!68061 m!63835))

(declare-fun m!63837 () Bool)

(assert (=> b!68061 m!63837))

(declare-fun m!63839 () Bool)

(assert (=> b!68061 m!63839))

(declare-fun m!63841 () Bool)

(assert (=> b!68061 m!63841))

(declare-fun m!63843 () Bool)

(assert (=> b!68061 m!63843))

(assert (=> b!68061 m!63839))

(declare-fun m!63845 () Bool)

(assert (=> b!68061 m!63845))

(declare-fun m!63847 () Bool)

(assert (=> b!68061 m!63847))

(declare-fun m!63849 () Bool)

(assert (=> b!68061 m!63849))

(declare-fun m!63851 () Bool)

(assert (=> b!68061 m!63851))

(assert (=> b!68061 m!63713))

(declare-fun m!63853 () Bool)

(assert (=> b!68061 m!63853))

(assert (=> b!68061 m!63849))

(declare-fun m!63855 () Bool)

(assert (=> b!68061 m!63855))

(declare-fun m!63857 () Bool)

(assert (=> b!68061 m!63857))

(assert (=> b!68061 m!63835))

(declare-fun m!63859 () Bool)

(assert (=> b!68061 m!63859))

(assert (=> b!68061 m!63855))

(declare-fun m!63861 () Bool)

(assert (=> b!68061 m!63861))

(declare-fun m!63863 () Bool)

(assert (=> b!68061 m!63863))

(declare-fun m!63865 () Bool)

(assert (=> b!68061 m!63865))

(assert (=> bm!5718 m!63843))

(assert (=> d!14611 m!61297))

(assert (=> b!68047 m!63713))

(assert (=> b!68047 m!63713))

(assert (=> b!68047 m!63715))

(assert (=> b!68049 m!61477))

(declare-fun m!63867 () Bool)

(assert (=> b!68049 m!63867))

(assert (=> b!68049 m!61477))

(declare-fun m!63869 () Bool)

(assert (=> b!68049 m!63869))

(assert (=> b!68049 m!63867))

(assert (=> b!68049 m!63713))

(declare-fun m!63871 () Bool)

(assert (=> b!68049 m!63871))

(assert (=> b!68049 m!63713))

(declare-fun m!63873 () Bool)

(assert (=> b!68060 m!63873))

(declare-fun m!63875 () Bool)

(assert (=> bm!5719 m!63875))

(assert (=> d!13793 d!14611))

(declare-fun e!44585 () Bool)

(declare-fun b!68077 () Bool)

(assert (=> b!68077 (= e!44585 (= (arrayCountValidKeys!0 (array!3824 (store (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) (size!2061 (_keys!3786 newMap!16))) #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3786 newMap!16) #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!68076 () Bool)

(declare-fun e!44586 () Bool)

(assert (=> b!68076 (= e!44586 (bvslt (size!2061 (_keys!3786 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!68075 () Bool)

(declare-fun res!36675 () Bool)

(assert (=> b!68075 (=> (not res!36675) (not e!44586))))

(assert (=> b!68075 (= res!36675 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!68074 () Bool)

(declare-fun res!36677 () Bool)

(assert (=> b!68074 (=> (not res!36677) (not e!44586))))

(assert (=> b!68074 (= res!36677 (not (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796))))))))

(declare-fun d!14613 () Bool)

(assert (=> d!14613 e!44585))

(declare-fun res!36674 () Bool)

(assert (=> d!14613 (=> (not res!36674) (not e!44585))))

(assert (=> d!14613 (= res!36674 (and (bvsge (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000000) (bvslt (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (size!2061 (_keys!3786 newMap!16)))))))

(declare-fun lt!29696 () Unit!1824)

(declare-fun choose!1 (array!3823 (_ BitVec 32) (_ BitVec 64)) Unit!1824)

(assert (=> d!14613 (= lt!29696 (choose!1 (_keys!3786 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14613 e!44586))

(declare-fun res!36676 () Bool)

(assert (=> d!14613 (=> (not res!36676) (not e!44586))))

(assert (=> d!14613 (= res!36676 (and (bvsge (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) #b00000000000000000000000000000000) (bvslt (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (size!2061 (_keys!3786 newMap!16)))))))

(assert (=> d!14613 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3786 newMap!16) (ite c!9203 (index!3039 lt!28796) (index!3036 lt!28796)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29696)))

(assert (= (and d!14613 res!36676) b!68074))

(assert (= (and b!68074 res!36677) b!68075))

(assert (= (and b!68075 res!36675) b!68076))

(assert (= (and d!14613 res!36674) b!68077))

(assert (=> b!68077 m!61265))

(assert (=> b!68077 m!61245))

(assert (=> b!68077 m!61151))

(assert (=> b!68075 m!60827))

(assert (=> b!68075 m!61011))

(declare-fun m!63877 () Bool)

(assert (=> b!68074 m!63877))

(assert (=> b!68074 m!63877))

(declare-fun m!63879 () Bool)

(assert (=> b!68074 m!63879))

(assert (=> d!14613 m!60827))

(declare-fun m!63881 () Bool)

(assert (=> d!14613 m!63881))

(assert (=> d!13793 d!14613))

(declare-fun d!14615 () Bool)

(assert (=> d!14615 (= (map!1141 (_2!1051 lt!28883)) (getCurrentListMap!403 (_keys!3786 (_2!1051 lt!28883)) (_values!2129 (_2!1051 lt!28883)) (mask!6081 (_2!1051 lt!28883)) (extraKeys!2017 (_2!1051 lt!28883)) (zeroValue!2054 (_2!1051 lt!28883)) (minValue!2054 (_2!1051 lt!28883)) #b00000000000000000000000000000000 (defaultEntry!2146 (_2!1051 lt!28883))))))

(declare-fun bs!2948 () Bool)

(assert (= bs!2948 d!14615))

(declare-fun m!63883 () Bool)

(assert (=> bs!2948 m!63883))

(assert (=> b!66714 d!14615))

(declare-fun d!14617 () Bool)

(declare-fun e!44587 () Bool)

(assert (=> d!14617 e!44587))

(declare-fun res!36679 () Bool)

(assert (=> d!14617 (=> (not res!36679) (not e!44587))))

(declare-fun lt!29699 () ListLongMap!1379)

(assert (=> d!14617 (= res!36679 (contains!705 lt!29699 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun lt!29697 () List!1455)

(assert (=> d!14617 (= lt!29699 (ListLongMap!1380 lt!29697))))

(declare-fun lt!29698 () Unit!1824)

(declare-fun lt!29700 () Unit!1824)

(assert (=> d!14617 (= lt!29698 lt!29700)))

(assert (=> d!14617 (= (getValueByKey!131 lt!29697 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!14617 (= lt!29700 (lemmaContainsTupThenGetReturnValue!48 lt!29697 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!14617 (= lt!29697 (insertStrictlySorted!51 (toList!705 (map!1141 newMap!16)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!14617 (= (+!86 (map!1141 newMap!16) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) lt!29699)))

(declare-fun b!68078 () Bool)

(declare-fun res!36678 () Bool)

(assert (=> b!68078 (=> (not res!36678) (not e!44587))))

(assert (=> b!68078 (= res!36678 (= (getValueByKey!131 (toList!705 lt!29699) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!68079 () Bool)

(assert (=> b!68079 (= e!44587 (contains!709 (toList!705 lt!29699) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(assert (= (and d!14617 res!36679) b!68078))

(assert (= (and b!68078 res!36678) b!68079))

(declare-fun m!63885 () Bool)

(assert (=> d!14617 m!63885))

(declare-fun m!63887 () Bool)

(assert (=> d!14617 m!63887))

(declare-fun m!63889 () Bool)

(assert (=> d!14617 m!63889))

(declare-fun m!63891 () Bool)

(assert (=> d!14617 m!63891))

(declare-fun m!63893 () Bool)

(assert (=> b!68078 m!63893))

(declare-fun m!63895 () Bool)

(assert (=> b!68079 m!63895))

(assert (=> b!66714 d!14617))

(assert (=> b!66714 d!13757))

(declare-fun d!14619 () Bool)

(assert (=> d!14619 (= (isEmpty!313 lt!29151) (isEmpty!314 (toList!705 lt!29151)))))

(declare-fun bs!2949 () Bool)

(assert (= bs!2949 d!14619))

(declare-fun m!63897 () Bool)

(assert (=> bs!2949 m!63897))

(assert (=> b!67088 d!14619))

(declare-fun d!14621 () Bool)

(declare-fun res!36680 () Bool)

(declare-fun e!44588 () Bool)

(assert (=> d!14621 (=> res!36680 e!44588)))

(assert (=> d!14621 (= res!36680 (= (select (arr!1826 (_keys!3786 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14621 (= (arrayContainsKey!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!44588)))

(declare-fun b!68080 () Bool)

(declare-fun e!44589 () Bool)

(assert (=> b!68080 (= e!44588 e!44589)))

(declare-fun res!36681 () Bool)

(assert (=> b!68080 (=> (not res!36681) (not e!44589))))

(assert (=> b!68080 (= res!36681 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!68081 () Bool)

(assert (=> b!68081 (= e!44589 (arrayContainsKey!0 (_keys!3786 newMap!16) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!14621 (not res!36680)) b!68080))

(assert (= (and b!68080 res!36681) b!68081))

(assert (=> d!14621 m!63669))

(assert (=> b!68081 m!60827))

(declare-fun m!63899 () Bool)

(assert (=> b!68081 m!63899))

(assert (=> b!67029 d!14621))

(declare-fun d!14623 () Bool)

(declare-fun e!44590 () Bool)

(assert (=> d!14623 e!44590))

(declare-fun res!36682 () Bool)

(assert (=> d!14623 (=> res!36682 e!44590)))

(declare-fun lt!29701 () Bool)

(assert (=> d!14623 (= res!36682 (not lt!29701))))

(declare-fun lt!29704 () Bool)

(assert (=> d!14623 (= lt!29701 lt!29704)))

(declare-fun lt!29703 () Unit!1824)

(declare-fun e!44591 () Unit!1824)

(assert (=> d!14623 (= lt!29703 e!44591)))

(declare-fun c!9597 () Bool)

(assert (=> d!14623 (= c!9597 lt!29704)))

(assert (=> d!14623 (= lt!29704 (containsKey!134 (toList!705 lt!29178) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!14623 (= (contains!705 lt!29178 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!29701)))

(declare-fun b!68082 () Bool)

(declare-fun lt!29702 () Unit!1824)

(assert (=> b!68082 (= e!44591 lt!29702)))

(assert (=> b!68082 (= lt!29702 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29178) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> b!68082 (isDefined!83 (getValueByKey!131 (toList!705 lt!29178) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68083 () Bool)

(declare-fun Unit!1895 () Unit!1824)

(assert (=> b!68083 (= e!44591 Unit!1895)))

(declare-fun b!68084 () Bool)

(assert (=> b!68084 (= e!44590 (isDefined!83 (getValueByKey!131 (toList!705 lt!29178) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (= (and d!14623 c!9597) b!68082))

(assert (= (and d!14623 (not c!9597)) b!68083))

(assert (= (and d!14623 (not res!36682)) b!68084))

(declare-fun m!63901 () Bool)

(assert (=> d!14623 m!63901))

(declare-fun m!63903 () Bool)

(assert (=> b!68082 m!63903))

(assert (=> b!68082 m!62039))

(assert (=> b!68082 m!62039))

(declare-fun m!63905 () Bool)

(assert (=> b!68082 m!63905))

(assert (=> b!68084 m!62039))

(assert (=> b!68084 m!62039))

(assert (=> b!68084 m!63905))

(assert (=> d!13977 d!14623))

(declare-fun b!68087 () Bool)

(declare-fun e!44593 () Option!137)

(assert (=> b!68087 (= e!44593 (getValueByKey!131 (t!4929 lt!29176) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68085 () Bool)

(declare-fun e!44592 () Option!137)

(assert (=> b!68085 (= e!44592 (Some!136 (_2!1052 (h!2035 lt!29176))))))

(declare-fun c!9598 () Bool)

(declare-fun d!14625 () Bool)

(assert (=> d!14625 (= c!9598 (and ((_ is Cons!1451) lt!29176) (= (_1!1052 (h!2035 lt!29176)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!14625 (= (getValueByKey!131 lt!29176 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) e!44592)))

(declare-fun b!68088 () Bool)

(assert (=> b!68088 (= e!44593 None!135)))

(declare-fun b!68086 () Bool)

(assert (=> b!68086 (= e!44592 e!44593)))

(declare-fun c!9599 () Bool)

(assert (=> b!68086 (= c!9599 (and ((_ is Cons!1451) lt!29176) (not (= (_1!1052 (h!2035 lt!29176)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (= (and d!14625 c!9598) b!68085))

(assert (= (and d!14625 (not c!9598)) b!68086))

(assert (= (and b!68086 c!9599) b!68087))

(assert (= (and b!68086 (not c!9599)) b!68088))

(declare-fun m!63907 () Bool)

(assert (=> b!68087 m!63907))

(assert (=> d!13977 d!14625))

(declare-fun d!14627 () Bool)

(assert (=> d!14627 (= (getValueByKey!131 lt!29176 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun lt!29705 () Unit!1824)

(assert (=> d!14627 (= lt!29705 (choose!380 lt!29176 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun e!44594 () Bool)

(assert (=> d!14627 e!44594))

(declare-fun res!36683 () Bool)

(assert (=> d!14627 (=> (not res!36683) (not e!44594))))

(assert (=> d!14627 (= res!36683 (isStrictlySorted!276 lt!29176))))

(assert (=> d!14627 (= (lemmaContainsTupThenGetReturnValue!48 lt!29176 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!29705)))

(declare-fun b!68089 () Bool)

(declare-fun res!36684 () Bool)

(assert (=> b!68089 (=> (not res!36684) (not e!44594))))

(assert (=> b!68089 (= res!36684 (containsKey!134 lt!29176 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68090 () Bool)

(assert (=> b!68090 (= e!44594 (contains!709 lt!29176 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (= (and d!14627 res!36683) b!68089))

(assert (= (and b!68089 res!36684) b!68090))

(assert (=> d!14627 m!62033))

(declare-fun m!63909 () Bool)

(assert (=> d!14627 m!63909))

(declare-fun m!63911 () Bool)

(assert (=> d!14627 m!63911))

(declare-fun m!63913 () Bool)

(assert (=> b!68089 m!63913))

(declare-fun m!63915 () Bool)

(assert (=> b!68090 m!63915))

(assert (=> d!13977 d!14627))

(declare-fun b!68091 () Bool)

(declare-fun e!44599 () List!1455)

(declare-fun call!5723 () List!1455)

(assert (=> b!68091 (= e!44599 call!5723)))

(declare-fun b!68092 () Bool)

(declare-fun e!44595 () List!1455)

(declare-fun e!44597 () List!1455)

(assert (=> b!68092 (= e!44595 e!44597)))

(declare-fun c!9602 () Bool)

(assert (=> b!68092 (= c!9602 (and ((_ is Cons!1451) (toList!705 call!5543)) (= (_1!1052 (h!2035 (toList!705 call!5543))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!68093 () Bool)

(declare-fun res!36685 () Bool)

(declare-fun e!44598 () Bool)

(assert (=> b!68093 (=> (not res!36685) (not e!44598))))

(declare-fun lt!29706 () List!1455)

(assert (=> b!68093 (= res!36685 (containsKey!134 lt!29706 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun bm!5720 () Bool)

(declare-fun call!5725 () List!1455)

(assert (=> bm!5720 (= call!5723 call!5725)))

(declare-fun b!68094 () Bool)

(declare-fun call!5724 () List!1455)

(assert (=> b!68094 (= e!44595 call!5724)))

(declare-fun c!9603 () Bool)

(declare-fun b!68095 () Bool)

(assert (=> b!68095 (= c!9603 (and ((_ is Cons!1451) (toList!705 call!5543)) (bvsgt (_1!1052 (h!2035 (toList!705 call!5543))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> b!68095 (= e!44597 e!44599)))

(declare-fun e!44596 () List!1455)

(declare-fun b!68096 () Bool)

(assert (=> b!68096 (= e!44596 (ite c!9602 (t!4929 (toList!705 call!5543)) (ite c!9603 (Cons!1451 (h!2035 (toList!705 call!5543)) (t!4929 (toList!705 call!5543))) Nil!1452)))))

(declare-fun d!14629 () Bool)

(assert (=> d!14629 e!44598))

(declare-fun res!36686 () Bool)

(assert (=> d!14629 (=> (not res!36686) (not e!44598))))

(assert (=> d!14629 (= res!36686 (isStrictlySorted!276 lt!29706))))

(assert (=> d!14629 (= lt!29706 e!44595)))

(declare-fun c!9600 () Bool)

(assert (=> d!14629 (= c!9600 (and ((_ is Cons!1451) (toList!705 call!5543)) (bvslt (_1!1052 (h!2035 (toList!705 call!5543))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!14629 (isStrictlySorted!276 (toList!705 call!5543))))

(assert (=> d!14629 (= (insertStrictlySorted!51 (toList!705 call!5543) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!29706)))

(declare-fun b!68097 () Bool)

(assert (=> b!68097 (= e!44596 (insertStrictlySorted!51 (t!4929 (toList!705 call!5543)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68098 () Bool)

(assert (=> b!68098 (= e!44597 call!5725)))

(declare-fun bm!5721 () Bool)

(assert (=> bm!5721 (= call!5725 call!5724)))

(declare-fun b!68099 () Bool)

(assert (=> b!68099 (= e!44599 call!5723)))

(declare-fun bm!5722 () Bool)

(assert (=> bm!5722 (= call!5724 ($colon$colon!62 e!44596 (ite c!9600 (h!2035 (toList!705 call!5543)) (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(declare-fun c!9601 () Bool)

(assert (=> bm!5722 (= c!9601 c!9600)))

(declare-fun b!68100 () Bool)

(assert (=> b!68100 (= e!44598 (contains!709 lt!29706 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (= (and d!14629 c!9600) b!68094))

(assert (= (and d!14629 (not c!9600)) b!68092))

(assert (= (and b!68092 c!9602) b!68098))

(assert (= (and b!68092 (not c!9602)) b!68095))

(assert (= (and b!68095 c!9603) b!68091))

(assert (= (and b!68095 (not c!9603)) b!68099))

(assert (= (or b!68091 b!68099) bm!5720))

(assert (= (or b!68098 bm!5720) bm!5721))

(assert (= (or b!68094 bm!5721) bm!5722))

(assert (= (and bm!5722 c!9601) b!68097))

(assert (= (and bm!5722 (not c!9601)) b!68096))

(assert (= (and d!14629 res!36686) b!68093))

(assert (= (and b!68093 res!36685) b!68100))

(declare-fun m!63917 () Bool)

(assert (=> bm!5722 m!63917))

(declare-fun m!63919 () Bool)

(assert (=> b!68097 m!63919))

(declare-fun m!63921 () Bool)

(assert (=> b!68093 m!63921))

(declare-fun m!63923 () Bool)

(assert (=> b!68100 m!63923))

(declare-fun m!63925 () Bool)

(assert (=> d!14629 m!63925))

(declare-fun m!63927 () Bool)

(assert (=> d!14629 m!63927))

(assert (=> d!13977 d!14629))

(declare-fun d!14631 () Bool)

(assert (=> d!14631 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713))))

(declare-fun lt!29707 () Unit!1824)

(assert (=> d!14631 (= lt!29707 (choose!379 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713))))

(declare-fun e!44600 () Bool)

(assert (=> d!14631 e!44600))

(declare-fun res!36687 () Bool)

(assert (=> d!14631 (=> (not res!36687) (not e!44600))))

(assert (=> d!14631 (= res!36687 (isStrictlySorted!276 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)))))))

(assert (=> d!14631 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713) lt!29707)))

(declare-fun b!68101 () Bool)

(assert (=> b!68101 (= e!44600 (containsKey!134 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713))))

(assert (= (and d!14631 res!36687) b!68101))

(assert (=> d!14631 m!61891))

(assert (=> d!14631 m!61891))

(assert (=> d!14631 m!61893))

(declare-fun m!63929 () Bool)

(assert (=> d!14631 m!63929))

(declare-fun m!63931 () Bool)

(assert (=> d!14631 m!63931))

(assert (=> b!68101 m!61887))

(assert (=> b!67021 d!14631))

(assert (=> b!67021 d!14393))

(assert (=> b!67021 d!14395))

(declare-fun d!14633 () Bool)

(declare-fun res!36688 () Bool)

(declare-fun e!44601 () Bool)

(assert (=> d!14633 (=> res!36688 e!44601)))

(assert (=> d!14633 (= res!36688 (and ((_ is Cons!1451) lt!28721) (= (_1!1052 (h!2035 lt!28721)) (_1!1052 lt!28528))))))

(assert (=> d!14633 (= (containsKey!134 lt!28721 (_1!1052 lt!28528)) e!44601)))

(declare-fun b!68102 () Bool)

(declare-fun e!44602 () Bool)

(assert (=> b!68102 (= e!44601 e!44602)))

(declare-fun res!36689 () Bool)

(assert (=> b!68102 (=> (not res!36689) (not e!44602))))

(assert (=> b!68102 (= res!36689 (and (or (not ((_ is Cons!1451) lt!28721)) (bvsle (_1!1052 (h!2035 lt!28721)) (_1!1052 lt!28528))) ((_ is Cons!1451) lt!28721) (bvslt (_1!1052 (h!2035 lt!28721)) (_1!1052 lt!28528))))))

(declare-fun b!68103 () Bool)

(assert (=> b!68103 (= e!44602 (containsKey!134 (t!4929 lt!28721) (_1!1052 lt!28528)))))

(assert (= (and d!14633 (not res!36688)) b!68102))

(assert (= (and b!68102 res!36689) b!68103))

(declare-fun m!63933 () Bool)

(assert (=> b!68103 m!63933))

(assert (=> b!67070 d!14633))

(declare-fun d!14635 () Bool)

(declare-fun res!36690 () Bool)

(declare-fun e!44603 () Bool)

(assert (=> d!14635 (=> res!36690 e!44603)))

(assert (=> d!14635 (= res!36690 (and ((_ is Cons!1451) (toList!705 lt!28667)) (= (_1!1052 (h!2035 (toList!705 lt!28667))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!14635 (= (containsKey!134 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000) e!44603)))

(declare-fun b!68104 () Bool)

(declare-fun e!44604 () Bool)

(assert (=> b!68104 (= e!44603 e!44604)))

(declare-fun res!36691 () Bool)

(assert (=> b!68104 (=> (not res!36691) (not e!44604))))

(assert (=> b!68104 (= res!36691 (and (or (not ((_ is Cons!1451) (toList!705 lt!28667))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28667))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1451) (toList!705 lt!28667)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28667))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!68105 () Bool)

(assert (=> b!68105 (= e!44604 (containsKey!134 (t!4929 (toList!705 lt!28667)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14635 (not res!36690)) b!68104))

(assert (= (and b!68104 res!36691) b!68105))

(declare-fun m!63935 () Bool)

(assert (=> b!68105 m!63935))

(assert (=> d!13991 d!14635))

(declare-fun lt!29708 () Bool)

(declare-fun d!14637 () Bool)

(assert (=> d!14637 (= lt!29708 (select (content!72 (toList!705 lt!29056)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(declare-fun e!44606 () Bool)

(assert (=> d!14637 (= lt!29708 e!44606)))

(declare-fun res!36693 () Bool)

(assert (=> d!14637 (=> (not res!36693) (not e!44606))))

(assert (=> d!14637 (= res!36693 ((_ is Cons!1451) (toList!705 lt!29056)))))

(assert (=> d!14637 (= (contains!709 (toList!705 lt!29056) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) lt!29708)))

(declare-fun b!68106 () Bool)

(declare-fun e!44605 () Bool)

(assert (=> b!68106 (= e!44606 e!44605)))

(declare-fun res!36692 () Bool)

(assert (=> b!68106 (=> res!36692 e!44605)))

(assert (=> b!68106 (= res!36692 (= (h!2035 (toList!705 lt!29056)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(declare-fun b!68107 () Bool)

(assert (=> b!68107 (= e!44605 (contains!709 (t!4929 (toList!705 lt!29056)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))

(assert (= (and d!14637 res!36693) b!68106))

(assert (= (and b!68106 (not res!36692)) b!68107))

(declare-fun m!63937 () Bool)

(assert (=> d!14637 m!63937))

(declare-fun m!63939 () Bool)

(assert (=> d!14637 m!63939))

(declare-fun m!63941 () Bool)

(assert (=> b!68107 m!63941))

(assert (=> b!66912 d!14637))

(declare-fun d!14639 () Bool)

(declare-fun lt!29709 () Bool)

(assert (=> d!14639 (= lt!29709 (select (content!72 (toList!705 lt!28944)) (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44608 () Bool)

(assert (=> d!14639 (= lt!29709 e!44608)))

(declare-fun res!36695 () Bool)

(assert (=> d!14639 (=> (not res!36695) (not e!44608))))

(assert (=> d!14639 (= res!36695 ((_ is Cons!1451) (toList!705 lt!28944)))))

(assert (=> d!14639 (= (contains!709 (toList!705 lt!28944) (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!29709)))

(declare-fun b!68108 () Bool)

(declare-fun e!44607 () Bool)

(assert (=> b!68108 (= e!44608 e!44607)))

(declare-fun res!36694 () Bool)

(assert (=> b!68108 (=> res!36694 e!44607)))

(assert (=> b!68108 (= res!36694 (= (h!2035 (toList!705 lt!28944)) (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!68109 () Bool)

(assert (=> b!68109 (= e!44607 (contains!709 (t!4929 (toList!705 lt!28944)) (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14639 res!36695) b!68108))

(assert (= (and b!68108 (not res!36694)) b!68109))

(declare-fun m!63943 () Bool)

(assert (=> d!14639 m!63943))

(declare-fun m!63945 () Bool)

(assert (=> d!14639 m!63945))

(declare-fun m!63947 () Bool)

(assert (=> b!68109 m!63947))

(assert (=> b!66766 d!14639))

(declare-fun d!14641 () Bool)

(declare-fun res!36696 () Bool)

(declare-fun e!44609 () Bool)

(assert (=> d!14641 (=> res!36696 e!44609)))

(assert (=> d!14641 (= res!36696 (and ((_ is Cons!1451) lt!29115) (= (_1!1052 (h!2035 lt!29115)) (_1!1052 lt!28528))))))

(assert (=> d!14641 (= (containsKey!134 lt!29115 (_1!1052 lt!28528)) e!44609)))

(declare-fun b!68110 () Bool)

(declare-fun e!44610 () Bool)

(assert (=> b!68110 (= e!44609 e!44610)))

(declare-fun res!36697 () Bool)

(assert (=> b!68110 (=> (not res!36697) (not e!44610))))

(assert (=> b!68110 (= res!36697 (and (or (not ((_ is Cons!1451) lt!29115)) (bvsle (_1!1052 (h!2035 lt!29115)) (_1!1052 lt!28528))) ((_ is Cons!1451) lt!29115) (bvslt (_1!1052 (h!2035 lt!29115)) (_1!1052 lt!28528))))))

(declare-fun b!68111 () Bool)

(assert (=> b!68111 (= e!44610 (containsKey!134 (t!4929 lt!29115) (_1!1052 lt!28528)))))

(assert (= (and d!14641 (not res!36696)) b!68110))

(assert (= (and b!68110 res!36697) b!68111))

(declare-fun m!63949 () Bool)

(assert (=> b!68111 m!63949))

(assert (=> b!67003 d!14641))

(declare-fun d!14643 () Bool)

(declare-fun e!44611 () Bool)

(assert (=> d!14643 e!44611))

(declare-fun res!36699 () Bool)

(assert (=> d!14643 (=> (not res!36699) (not e!44611))))

(declare-fun lt!29712 () ListLongMap!1379)

(assert (=> d!14643 (= res!36699 (contains!705 lt!29712 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(declare-fun lt!29710 () List!1455)

(assert (=> d!14643 (= lt!29712 (ListLongMap!1380 lt!29710))))

(declare-fun lt!29711 () Unit!1824)

(declare-fun lt!29713 () Unit!1824)

(assert (=> d!14643 (= lt!29711 lt!29713)))

(assert (=> d!14643 (= (getValueByKey!131 lt!29710 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14643 (= lt!29713 (lemmaContainsTupThenGetReturnValue!48 lt!29710 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14643 (= lt!29710 (insertStrictlySorted!51 (toList!705 call!5566) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))))))

(assert (=> d!14643 (= (+!86 call!5566 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))) lt!29712)))

(declare-fun b!68112 () Bool)

(declare-fun res!36698 () Bool)

(assert (=> b!68112 (=> (not res!36698) (not e!44611))))

(assert (=> b!68112 (= res!36698 (= (getValueByKey!131 (toList!705 lt!29712) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16)))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))))

(declare-fun b!68113 () Bool)

(assert (=> b!68113 (= e!44611 (contains!709 (toList!705 lt!29712) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 newMap!16))))))

(assert (= (and d!14643 res!36699) b!68112))

(assert (= (and b!68112 res!36698) b!68113))

(declare-fun m!63951 () Bool)

(assert (=> d!14643 m!63951))

(declare-fun m!63953 () Bool)

(assert (=> d!14643 m!63953))

(declare-fun m!63955 () Bool)

(assert (=> d!14643 m!63955))

(declare-fun m!63957 () Bool)

(assert (=> d!14643 m!63957))

(declare-fun m!63959 () Bool)

(assert (=> b!68112 m!63959))

(declare-fun m!63961 () Bool)

(assert (=> b!68113 m!63961))

(assert (=> b!66787 d!14643))

(declare-fun d!14645 () Bool)

(declare-fun e!44612 () Bool)

(assert (=> d!14645 e!44612))

(declare-fun res!36701 () Bool)

(assert (=> d!14645 (=> (not res!36701) (not e!44612))))

(declare-fun lt!29716 () ListLongMap!1379)

(assert (=> d!14645 (= res!36701 (contains!705 lt!29716 (_1!1052 (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))))

(declare-fun lt!29714 () List!1455)

(assert (=> d!14645 (= lt!29716 (ListLongMap!1380 lt!29714))))

(declare-fun lt!29715 () Unit!1824)

(declare-fun lt!29717 () Unit!1824)

(assert (=> d!14645 (= lt!29715 lt!29717)))

(assert (=> d!14645 (= (getValueByKey!131 lt!29714 (_1!1052 (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))) (Some!136 (_2!1052 (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))))

(assert (=> d!14645 (= lt!29717 (lemmaContainsTupThenGetReturnValue!48 lt!29714 (_1!1052 (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) (_2!1052 (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))))

(assert (=> d!14645 (= lt!29714 (insertStrictlySorted!51 (toList!705 (ite c!9260 call!5589 (ite c!9262 call!5593 call!5590))) (_1!1052 (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) (_2!1052 (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))))))

(assert (=> d!14645 (= (+!86 (ite c!9260 call!5589 (ite c!9262 call!5593 call!5590)) (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))) lt!29716)))

(declare-fun b!68114 () Bool)

(declare-fun res!36700 () Bool)

(assert (=> b!68114 (=> (not res!36700) (not e!44612))))

(assert (=> b!68114 (= res!36700 (= (getValueByKey!131 (toList!705 lt!29716) (_1!1052 (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16)))))) (Some!136 (_2!1052 (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))))

(declare-fun b!68115 () Bool)

(assert (=> b!68115 (= e!44612 (contains!709 (toList!705 lt!29716) (ite (or c!9260 c!9262) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!9197 (ite c!9193 (minValue!2054 newMap!16) lt!28522) (minValue!2054 newMap!16))))))))

(assert (= (and d!14645 res!36701) b!68114))

(assert (= (and b!68114 res!36700) b!68115))

(declare-fun m!63963 () Bool)

(assert (=> d!14645 m!63963))

(declare-fun m!63965 () Bool)

(assert (=> d!14645 m!63965))

(declare-fun m!63967 () Bool)

(assert (=> d!14645 m!63967))

(declare-fun m!63969 () Bool)

(assert (=> d!14645 m!63969))

(declare-fun m!63971 () Bool)

(assert (=> b!68114 m!63971))

(declare-fun m!63973 () Bool)

(assert (=> b!68115 m!63973))

(assert (=> bm!5586 d!14645))

(declare-fun d!14647 () Bool)

(declare-fun e!44613 () Bool)

(assert (=> d!14647 e!44613))

(declare-fun res!36702 () Bool)

(assert (=> d!14647 (=> res!36702 e!44613)))

(declare-fun lt!29718 () Bool)

(assert (=> d!14647 (= res!36702 (not lt!29718))))

(declare-fun lt!29721 () Bool)

(assert (=> d!14647 (= lt!29718 lt!29721)))

(declare-fun lt!29720 () Unit!1824)

(declare-fun e!44614 () Unit!1824)

(assert (=> d!14647 (= lt!29720 e!44614)))

(declare-fun c!9604 () Bool)

(assert (=> d!14647 (= c!9604 lt!29721)))

(assert (=> d!14647 (= lt!29721 (containsKey!134 (toList!705 lt!29083) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14647 (= (contains!705 lt!29083 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) lt!29718)))

(declare-fun b!68116 () Bool)

(declare-fun lt!29719 () Unit!1824)

(assert (=> b!68116 (= e!44614 lt!29719)))

(assert (=> b!68116 (= lt!29719 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29083) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68116 (isDefined!83 (getValueByKey!131 (toList!705 lt!29083) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68117 () Bool)

(declare-fun Unit!1896 () Unit!1824)

(assert (=> b!68117 (= e!44614 Unit!1896)))

(declare-fun b!68118 () Bool)

(assert (=> b!68118 (= e!44613 (isDefined!83 (getValueByKey!131 (toList!705 lt!29083) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14647 c!9604) b!68116))

(assert (= (and d!14647 (not c!9604)) b!68117))

(assert (= (and d!14647 (not res!36702)) b!68118))

(assert (=> d!14647 m!61431))

(declare-fun m!63975 () Bool)

(assert (=> d!14647 m!63975))

(assert (=> b!68116 m!61431))

(declare-fun m!63977 () Bool)

(assert (=> b!68116 m!63977))

(assert (=> b!68116 m!61431))

(assert (=> b!68116 m!62523))

(assert (=> b!68116 m!62523))

(declare-fun m!63979 () Bool)

(assert (=> b!68116 m!63979))

(assert (=> b!68118 m!61431))

(assert (=> b!68118 m!62523))

(assert (=> b!68118 m!62523))

(assert (=> b!68118 m!63979))

(assert (=> b!66940 d!14647))

(assert (=> d!13947 d!13945))

(declare-fun d!14649 () Bool)

(assert (=> d!14649 (= (getValueByKey!131 lt!28717 (_1!1052 lt!28520)) (Some!136 (_2!1052 lt!28520)))))

(assert (=> d!14649 true))

(declare-fun _$22!370 () Unit!1824)

(assert (=> d!14649 (= (choose!380 lt!28717 (_1!1052 lt!28520) (_2!1052 lt!28520)) _$22!370)))

(declare-fun bs!2950 () Bool)

(assert (= bs!2950 d!14649))

(assert (=> bs!2950 m!61127))

(assert (=> d!13947 d!14649))

(declare-fun d!14651 () Bool)

(declare-fun res!36703 () Bool)

(declare-fun e!44615 () Bool)

(assert (=> d!14651 (=> res!36703 e!44615)))

(assert (=> d!14651 (= res!36703 (or ((_ is Nil!1452) lt!28717) ((_ is Nil!1452) (t!4929 lt!28717))))))

(assert (=> d!14651 (= (isStrictlySorted!276 lt!28717) e!44615)))

(declare-fun b!68119 () Bool)

(declare-fun e!44616 () Bool)

(assert (=> b!68119 (= e!44615 e!44616)))

(declare-fun res!36704 () Bool)

(assert (=> b!68119 (=> (not res!36704) (not e!44616))))

(assert (=> b!68119 (= res!36704 (bvslt (_1!1052 (h!2035 lt!28717)) (_1!1052 (h!2035 (t!4929 lt!28717)))))))

(declare-fun b!68120 () Bool)

(assert (=> b!68120 (= e!44616 (isStrictlySorted!276 (t!4929 lt!28717)))))

(assert (= (and d!14651 (not res!36703)) b!68119))

(assert (= (and b!68119 res!36704) b!68120))

(declare-fun m!63981 () Bool)

(assert (=> b!68120 m!63981))

(assert (=> d!13947 d!14651))

(declare-fun d!14653 () Bool)

(assert (=> d!14653 (= (apply!72 lt!29044 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1127 (getValueByKey!131 (toList!705 lt!29044) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2951 () Bool)

(assert (= bs!2951 d!14653))

(assert (=> bs!2951 m!61431))

(assert (=> bs!2951 m!62823))

(assert (=> bs!2951 m!62823))

(declare-fun m!63983 () Bool)

(assert (=> bs!2951 m!63983))

(assert (=> b!66894 d!14653))

(assert (=> b!66894 d!14153))

(declare-fun d!14655 () Bool)

(declare-fun res!36705 () Bool)

(declare-fun e!44617 () Bool)

(assert (=> d!14655 (=> res!36705 e!44617)))

(assert (=> d!14655 (= res!36705 (and ((_ is Cons!1451) lt!28685) (= (_1!1052 (h!2035 lt!28685)) (_1!1052 lt!28520))))))

(assert (=> d!14655 (= (containsKey!134 lt!28685 (_1!1052 lt!28520)) e!44617)))

(declare-fun b!68121 () Bool)

(declare-fun e!44618 () Bool)

(assert (=> b!68121 (= e!44617 e!44618)))

(declare-fun res!36706 () Bool)

(assert (=> b!68121 (=> (not res!36706) (not e!44618))))

(assert (=> b!68121 (= res!36706 (and (or (not ((_ is Cons!1451) lt!28685)) (bvsle (_1!1052 (h!2035 lt!28685)) (_1!1052 lt!28520))) ((_ is Cons!1451) lt!28685) (bvslt (_1!1052 (h!2035 lt!28685)) (_1!1052 lt!28520))))))

(declare-fun b!68122 () Bool)

(assert (=> b!68122 (= e!44618 (containsKey!134 (t!4929 lt!28685) (_1!1052 lt!28520)))))

(assert (= (and d!14655 (not res!36705)) b!68121))

(assert (= (and b!68121 res!36706) b!68122))

(declare-fun m!63985 () Bool)

(assert (=> b!68122 m!63985))

(assert (=> b!67122 d!14655))

(declare-fun d!14657 () Bool)

(assert (=> d!14657 (isDefined!83 (getValueByKey!131 (toList!705 lt!28691) (_1!1052 lt!28528)))))

(declare-fun lt!29722 () Unit!1824)

(assert (=> d!14657 (= lt!29722 (choose!379 (toList!705 lt!28691) (_1!1052 lt!28528)))))

(declare-fun e!44619 () Bool)

(assert (=> d!14657 e!44619))

(declare-fun res!36707 () Bool)

(assert (=> d!14657 (=> (not res!36707) (not e!44619))))

(assert (=> d!14657 (= res!36707 (isStrictlySorted!276 (toList!705 lt!28691)))))

(assert (=> d!14657 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28691) (_1!1052 lt!28528)) lt!29722)))

(declare-fun b!68123 () Bool)

(assert (=> b!68123 (= e!44619 (containsKey!134 (toList!705 lt!28691) (_1!1052 lt!28528)))))

(assert (= (and d!14657 res!36707) b!68123))

(assert (=> d!14657 m!61091))

(assert (=> d!14657 m!61091))

(assert (=> d!14657 m!61821))

(declare-fun m!63987 () Bool)

(assert (=> d!14657 m!63987))

(declare-fun m!63989 () Bool)

(assert (=> d!14657 m!63989))

(assert (=> b!68123 m!61817))

(assert (=> b!66968 d!14657))

(assert (=> b!66968 d!14411))

(assert (=> b!66968 d!13961))

(declare-fun d!14659 () Bool)

(assert (=> d!14659 (= (isDefined!83 (getValueByKey!131 (toList!705 lt!28723) (_1!1052 lt!28528))) (not (isEmpty!315 (getValueByKey!131 (toList!705 lt!28723) (_1!1052 lt!28528)))))))

(declare-fun bs!2952 () Bool)

(assert (= bs!2952 d!14659))

(assert (=> bs!2952 m!61145))

(declare-fun m!63991 () Bool)

(assert (=> bs!2952 m!63991))

(assert (=> b!67065 d!14659))

(assert (=> b!67065 d!13937))

(declare-fun d!14661 () Bool)

(declare-fun lt!29723 () Bool)

(assert (=> d!14661 (= lt!29723 (select (content!72 (toList!705 lt!29064)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44621 () Bool)

(assert (=> d!14661 (= lt!29723 e!44621)))

(declare-fun res!36709 () Bool)

(assert (=> d!14661 (=> (not res!36709) (not e!44621))))

(assert (=> d!14661 (= res!36709 ((_ is Cons!1451) (toList!705 lt!29064)))))

(assert (=> d!14661 (= (contains!709 (toList!705 lt!29064) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!29723)))

(declare-fun b!68124 () Bool)

(declare-fun e!44620 () Bool)

(assert (=> b!68124 (= e!44621 e!44620)))

(declare-fun res!36708 () Bool)

(assert (=> b!68124 (=> res!36708 e!44620)))

(assert (=> b!68124 (= res!36708 (= (h!2035 (toList!705 lt!29064)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!68125 () Bool)

(assert (=> b!68125 (= e!44620 (contains!709 (t!4929 (toList!705 lt!29064)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14661 res!36709) b!68124))

(assert (= (and b!68124 (not res!36708)) b!68125))

(declare-fun m!63993 () Bool)

(assert (=> d!14661 m!63993))

(declare-fun m!63995 () Bool)

(assert (=> d!14661 m!63995))

(declare-fun m!63997 () Bool)

(assert (=> b!68125 m!63997))

(assert (=> b!66916 d!14661))

(declare-fun e!44623 () Option!137)

(declare-fun b!68128 () Bool)

(assert (=> b!68128 (= e!44623 (getValueByKey!131 (t!4929 (toList!705 lt!29095)) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!68126 () Bool)

(declare-fun e!44622 () Option!137)

(assert (=> b!68126 (= e!44622 (Some!136 (_2!1052 (h!2035 (toList!705 lt!29095)))))))

(declare-fun c!9605 () Bool)

(declare-fun d!14663 () Bool)

(assert (=> d!14663 (= c!9605 (and ((_ is Cons!1451) (toList!705 lt!29095)) (= (_1!1052 (h!2035 (toList!705 lt!29095))) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (=> d!14663 (= (getValueByKey!131 (toList!705 lt!29095) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))) e!44622)))

(declare-fun b!68129 () Bool)

(assert (=> b!68129 (= e!44623 None!135)))

(declare-fun b!68127 () Bool)

(assert (=> b!68127 (= e!44622 e!44623)))

(declare-fun c!9606 () Bool)

(assert (=> b!68127 (= c!9606 (and ((_ is Cons!1451) (toList!705 lt!29095)) (not (= (_1!1052 (h!2035 (toList!705 lt!29095))) (_1!1052 (ite (or c!9144 c!9146) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2054 (v!2478 (underlying!250 thiss!992))))))))))))

(assert (= (and d!14663 c!9605) b!68126))

(assert (= (and d!14663 (not c!9605)) b!68127))

(assert (= (and b!68127 c!9606) b!68128))

(assert (= (and b!68127 (not c!9606)) b!68129))

(declare-fun m!63999 () Bool)

(assert (=> b!68128 m!63999))

(assert (=> b!66954 d!14663))

(assert (=> d!13901 d!14103))

(declare-fun d!14665 () Bool)

(declare-fun e!44624 () Bool)

(assert (=> d!14665 e!44624))

(declare-fun res!36710 () Bool)

(assert (=> d!14665 (=> res!36710 e!44624)))

(declare-fun lt!29724 () Bool)

(assert (=> d!14665 (= res!36710 (not lt!29724))))

(declare-fun lt!29727 () Bool)

(assert (=> d!14665 (= lt!29724 lt!29727)))

(declare-fun lt!29726 () Unit!1824)

(declare-fun e!44625 () Unit!1824)

(assert (=> d!14665 (= lt!29726 e!44625)))

(declare-fun c!9607 () Bool)

(assert (=> d!14665 (= c!9607 lt!29727)))

(assert (=> d!14665 (= lt!29727 (containsKey!134 (toList!705 lt!29064) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14665 (= (contains!705 lt!29064 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29724)))

(declare-fun b!68130 () Bool)

(declare-fun lt!29725 () Unit!1824)

(assert (=> b!68130 (= e!44625 lt!29725)))

(assert (=> b!68130 (= lt!29725 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29064) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!68130 (isDefined!83 (getValueByKey!131 (toList!705 lt!29064) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68131 () Bool)

(declare-fun Unit!1897 () Unit!1824)

(assert (=> b!68131 (= e!44625 Unit!1897)))

(declare-fun b!68132 () Bool)

(assert (=> b!68132 (= e!44624 (isDefined!83 (getValueByKey!131 (toList!705 lt!29064) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14665 c!9607) b!68130))

(assert (= (and d!14665 (not c!9607)) b!68131))

(assert (= (and d!14665 (not res!36710)) b!68132))

(declare-fun m!64001 () Bool)

(assert (=> d!14665 m!64001))

(declare-fun m!64003 () Bool)

(assert (=> b!68130 m!64003))

(assert (=> b!68130 m!61725))

(assert (=> b!68130 m!61725))

(declare-fun m!64005 () Bool)

(assert (=> b!68130 m!64005))

(assert (=> b!68132 m!61725))

(assert (=> b!68132 m!61725))

(assert (=> b!68132 m!64005))

(assert (=> d!13893 d!14665))

(declare-fun b!68135 () Bool)

(declare-fun e!44627 () Option!137)

(assert (=> b!68135 (= e!44627 (getValueByKey!131 (t!4929 lt!29062) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68133 () Bool)

(declare-fun e!44626 () Option!137)

(assert (=> b!68133 (= e!44626 (Some!136 (_2!1052 (h!2035 lt!29062))))))

(declare-fun d!14667 () Bool)

(declare-fun c!9608 () Bool)

(assert (=> d!14667 (= c!9608 (and ((_ is Cons!1451) lt!29062) (= (_1!1052 (h!2035 lt!29062)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14667 (= (getValueByKey!131 lt!29062 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44626)))

(declare-fun b!68136 () Bool)

(assert (=> b!68136 (= e!44627 None!135)))

(declare-fun b!68134 () Bool)

(assert (=> b!68134 (= e!44626 e!44627)))

(declare-fun c!9609 () Bool)

(assert (=> b!68134 (= c!9609 (and ((_ is Cons!1451) lt!29062) (not (= (_1!1052 (h!2035 lt!29062)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14667 c!9608) b!68133))

(assert (= (and d!14667 (not c!9608)) b!68134))

(assert (= (and b!68134 c!9609) b!68135))

(assert (= (and b!68134 (not c!9609)) b!68136))

(declare-fun m!64007 () Bool)

(assert (=> b!68135 m!64007))

(assert (=> d!13893 d!14667))

(declare-fun d!14669 () Bool)

(assert (=> d!14669 (= (getValueByKey!131 lt!29062 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29728 () Unit!1824)

(assert (=> d!14669 (= lt!29728 (choose!380 lt!29062 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44628 () Bool)

(assert (=> d!14669 e!44628))

(declare-fun res!36711 () Bool)

(assert (=> d!14669 (=> (not res!36711) (not e!44628))))

(assert (=> d!14669 (= res!36711 (isStrictlySorted!276 lt!29062))))

(assert (=> d!14669 (= (lemmaContainsTupThenGetReturnValue!48 lt!29062 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29728)))

(declare-fun b!68137 () Bool)

(declare-fun res!36712 () Bool)

(assert (=> b!68137 (=> (not res!36712) (not e!44628))))

(assert (=> b!68137 (= res!36712 (containsKey!134 lt!29062 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68138 () Bool)

(assert (=> b!68138 (= e!44628 (contains!709 lt!29062 (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14669 res!36711) b!68137))

(assert (= (and b!68137 res!36712) b!68138))

(assert (=> d!14669 m!61719))

(declare-fun m!64009 () Bool)

(assert (=> d!14669 m!64009))

(declare-fun m!64011 () Bool)

(assert (=> d!14669 m!64011))

(declare-fun m!64013 () Bool)

(assert (=> b!68137 m!64013))

(declare-fun m!64015 () Bool)

(assert (=> b!68138 m!64015))

(assert (=> d!13893 d!14669))

(declare-fun b!68139 () Bool)

(declare-fun e!44633 () List!1455)

(declare-fun call!5726 () List!1455)

(assert (=> b!68139 (= e!44633 call!5726)))

(declare-fun b!68140 () Bool)

(declare-fun e!44629 () List!1455)

(declare-fun e!44631 () List!1455)

(assert (=> b!68140 (= e!44629 e!44631)))

(declare-fun c!9612 () Bool)

(assert (=> b!68140 (= c!9612 (and ((_ is Cons!1451) (toList!705 lt!28527)) (= (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!68141 () Bool)

(declare-fun res!36713 () Bool)

(declare-fun e!44632 () Bool)

(assert (=> b!68141 (=> (not res!36713) (not e!44632))))

(declare-fun lt!29729 () List!1455)

(assert (=> b!68141 (= res!36713 (containsKey!134 lt!29729 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun bm!5723 () Bool)

(declare-fun call!5728 () List!1455)

(assert (=> bm!5723 (= call!5726 call!5728)))

(declare-fun b!68142 () Bool)

(declare-fun call!5727 () List!1455)

(assert (=> b!68142 (= e!44629 call!5727)))

(declare-fun b!68143 () Bool)

(declare-fun c!9613 () Bool)

(assert (=> b!68143 (= c!9613 (and ((_ is Cons!1451) (toList!705 lt!28527)) (bvsgt (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!68143 (= e!44631 e!44633)))

(declare-fun e!44630 () List!1455)

(declare-fun b!68144 () Bool)

(assert (=> b!68144 (= e!44630 (ite c!9612 (t!4929 (toList!705 lt!28527)) (ite c!9613 (Cons!1451 (h!2035 (toList!705 lt!28527)) (t!4929 (toList!705 lt!28527))) Nil!1452)))))

(declare-fun d!14671 () Bool)

(assert (=> d!14671 e!44632))

(declare-fun res!36714 () Bool)

(assert (=> d!14671 (=> (not res!36714) (not e!44632))))

(assert (=> d!14671 (= res!36714 (isStrictlySorted!276 lt!29729))))

(assert (=> d!14671 (= lt!29729 e!44629)))

(declare-fun c!9610 () Bool)

(assert (=> d!14671 (= c!9610 (and ((_ is Cons!1451) (toList!705 lt!28527)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14671 (isStrictlySorted!276 (toList!705 lt!28527))))

(assert (=> d!14671 (= (insertStrictlySorted!51 (toList!705 lt!28527) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29729)))

(declare-fun b!68145 () Bool)

(assert (=> b!68145 (= e!44630 (insertStrictlySorted!51 (t!4929 (toList!705 lt!28527)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68146 () Bool)

(assert (=> b!68146 (= e!44631 call!5728)))

(declare-fun bm!5724 () Bool)

(assert (=> bm!5724 (= call!5728 call!5727)))

(declare-fun b!68147 () Bool)

(assert (=> b!68147 (= e!44633 call!5726)))

(declare-fun bm!5725 () Bool)

(assert (=> bm!5725 (= call!5727 ($colon$colon!62 e!44630 (ite c!9610 (h!2035 (toList!705 lt!28527)) (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9611 () Bool)

(assert (=> bm!5725 (= c!9611 c!9610)))

(declare-fun b!68148 () Bool)

(assert (=> b!68148 (= e!44632 (contains!709 lt!29729 (tuple2!2083 (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14671 c!9610) b!68142))

(assert (= (and d!14671 (not c!9610)) b!68140))

(assert (= (and b!68140 c!9612) b!68146))

(assert (= (and b!68140 (not c!9612)) b!68143))

(assert (= (and b!68143 c!9613) b!68139))

(assert (= (and b!68143 (not c!9613)) b!68147))

(assert (= (or b!68139 b!68147) bm!5723))

(assert (= (or b!68146 bm!5723) bm!5724))

(assert (= (or b!68142 bm!5724) bm!5725))

(assert (= (and bm!5725 c!9611) b!68145))

(assert (= (and bm!5725 (not c!9611)) b!68144))

(assert (= (and d!14671 res!36714) b!68141))

(assert (= (and b!68141 res!36713) b!68148))

(declare-fun m!64017 () Bool)

(assert (=> bm!5725 m!64017))

(declare-fun m!64019 () Bool)

(assert (=> b!68145 m!64019))

(declare-fun m!64021 () Bool)

(assert (=> b!68141 m!64021))

(declare-fun m!64023 () Bool)

(assert (=> b!68148 m!64023))

(declare-fun m!64025 () Bool)

(assert (=> d!14671 m!64025))

(assert (=> d!14671 m!61843))

(assert (=> d!13893 d!14671))

(declare-fun d!14673 () Bool)

(declare-fun res!36715 () Bool)

(declare-fun e!44634 () Bool)

(assert (=> d!14673 (=> res!36715 e!44634)))

(assert (=> d!14673 (= res!36715 (or ((_ is Nil!1452) lt!29144) ((_ is Nil!1452) (t!4929 lt!29144))))))

(assert (=> d!14673 (= (isStrictlySorted!276 lt!29144) e!44634)))

(declare-fun b!68149 () Bool)

(declare-fun e!44635 () Bool)

(assert (=> b!68149 (= e!44634 e!44635)))

(declare-fun res!36716 () Bool)

(assert (=> b!68149 (=> (not res!36716) (not e!44635))))

(assert (=> b!68149 (= res!36716 (bvslt (_1!1052 (h!2035 lt!29144)) (_1!1052 (h!2035 (t!4929 lt!29144)))))))

(declare-fun b!68150 () Bool)

(assert (=> b!68150 (= e!44635 (isStrictlySorted!276 (t!4929 lt!29144)))))

(assert (= (and d!14673 (not res!36715)) b!68149))

(assert (= (and b!68149 res!36716) b!68150))

(declare-fun m!64027 () Bool)

(assert (=> b!68150 m!64027))

(assert (=> d!13949 d!14673))

(assert (=> d!13949 d!14167))

(declare-fun d!14675 () Bool)

(assert (=> d!14675 (= (isEmpty!315 (getValueByKey!131 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))) (not ((_ is Some!136) (getValueByKey!131 (toList!705 lt!28518) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))))

(assert (=> d!13873 d!14675))

(assert (=> bm!5568 d!14337))

(declare-fun d!14677 () Bool)

(assert (=> d!14677 (= (apply!72 lt!29044 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!705 lt!29044) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2953 () Bool)

(assert (= bs!2953 d!14677))

(assert (=> bs!2953 m!63051))

(assert (=> bs!2953 m!63051))

(declare-fun m!64029 () Bool)

(assert (=> bs!2953 m!64029))

(assert (=> b!66905 d!14677))

(declare-fun b!68152 () Bool)

(declare-fun res!36719 () Bool)

(declare-fun e!44636 () Bool)

(assert (=> b!68152 (=> (not res!36719) (not e!44636))))

(assert (=> b!68152 (= res!36719 (bvsge (size!2067 (v!2478 (underlying!250 thiss!992))) (_size!384 (v!2478 (underlying!250 thiss!992)))))))

(declare-fun b!68151 () Bool)

(declare-fun res!36720 () Bool)

(assert (=> b!68151 (=> (not res!36720) (not e!44636))))

(assert (=> b!68151 (= res!36720 (and (= (size!2062 (_values!2129 (v!2478 (underlying!250 thiss!992)))) (bvadd (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001)) (= (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (size!2062 (_values!2129 (v!2478 (underlying!250 thiss!992))))) (bvsge (_size!384 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!384 (v!2478 (underlying!250 thiss!992))) (bvadd (mask!6081 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!14679 () Bool)

(declare-fun res!36718 () Bool)

(assert (=> d!14679 (=> (not res!36718) (not e!44636))))

(assert (=> d!14679 (= res!36718 (validMask!0 (mask!6081 (v!2478 (underlying!250 thiss!992)))))))

(assert (=> d!14679 (= (simpleValid!48 (v!2478 (underlying!250 thiss!992))) e!44636)))

(declare-fun b!68153 () Bool)

(declare-fun res!36717 () Bool)

(assert (=> b!68153 (=> (not res!36717) (not e!44636))))

(assert (=> b!68153 (= res!36717 (= (size!2067 (v!2478 (underlying!250 thiss!992))) (bvadd (_size!384 (v!2478 (underlying!250 thiss!992))) (bvsdiv (bvadd (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!68154 () Bool)

(assert (=> b!68154 (= e!44636 (and (bvsge (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2017 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!384 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!14679 res!36718) b!68151))

(assert (= (and b!68151 res!36720) b!68152))

(assert (= (and b!68152 res!36719) b!68153))

(assert (= (and b!68153 res!36717) b!68154))

(declare-fun m!64031 () Bool)

(assert (=> b!68152 m!64031))

(assert (=> d!14679 m!60863))

(assert (=> b!68153 m!64031))

(assert (=> d!13935 d!14679))

(assert (=> d!13841 d!14103))

(declare-fun d!14681 () Bool)

(declare-fun res!36721 () Bool)

(declare-fun e!44637 () Bool)

(assert (=> d!14681 (=> res!36721 e!44637)))

(assert (=> d!14681 (= res!36721 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))))) lt!28713)))))

(assert (=> d!14681 (= (containsKey!134 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))) lt!28713) e!44637)))

(declare-fun b!68155 () Bool)

(declare-fun e!44638 () Bool)

(assert (=> b!68155 (= e!44637 e!44638)))

(declare-fun res!36722 () Bool)

(assert (=> b!68155 (=> (not res!36722) (not e!44638))))

(assert (=> b!68155 (= res!36722 (and (or (not ((_ is Cons!1451) (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))))) (bvsle (_1!1052 (h!2035 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))))) lt!28713)) ((_ is Cons!1451) (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)))) (bvslt (_1!1052 (h!2035 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708))))) lt!28713)))))

(declare-fun b!68156 () Bool)

(assert (=> b!68156 (= e!44638 (containsKey!134 (t!4929 (toList!705 (+!86 lt!28711 (tuple2!2083 lt!28712 lt!28708)))) lt!28713))))

(assert (= (and d!14681 (not res!36721)) b!68155))

(assert (= (and b!68155 res!36722) b!68156))

(declare-fun m!64033 () Bool)

(assert (=> b!68156 m!64033))

(assert (=> d!13925 d!14681))

(declare-fun d!14683 () Bool)

(declare-fun lt!29730 () Bool)

(assert (=> d!14683 (= lt!29730 (select (content!72 (t!4929 (toList!705 lt!28719))) lt!28520))))

(declare-fun e!44640 () Bool)

(assert (=> d!14683 (= lt!29730 e!44640)))

(declare-fun res!36724 () Bool)

(assert (=> d!14683 (=> (not res!36724) (not e!44640))))

(assert (=> d!14683 (= res!36724 ((_ is Cons!1451) (t!4929 (toList!705 lt!28719))))))

(assert (=> d!14683 (= (contains!709 (t!4929 (toList!705 lt!28719)) lt!28520) lt!29730)))

(declare-fun b!68157 () Bool)

(declare-fun e!44639 () Bool)

(assert (=> b!68157 (= e!44640 e!44639)))

(declare-fun res!36723 () Bool)

(assert (=> b!68157 (=> res!36723 e!44639)))

(assert (=> b!68157 (= res!36723 (= (h!2035 (t!4929 (toList!705 lt!28719))) lt!28520))))

(declare-fun b!68158 () Bool)

(assert (=> b!68158 (= e!44639 (contains!709 (t!4929 (t!4929 (toList!705 lt!28719))) lt!28520))))

(assert (= (and d!14683 res!36724) b!68157))

(assert (= (and b!68157 (not res!36723)) b!68158))

(declare-fun m!64035 () Bool)

(assert (=> d!14683 m!64035))

(declare-fun m!64037 () Bool)

(assert (=> d!14683 m!64037))

(declare-fun m!64039 () Bool)

(assert (=> b!68158 m!64039))

(assert (=> b!66751 d!14683))

(declare-fun d!14685 () Bool)

(declare-fun e!44641 () Bool)

(assert (=> d!14685 e!44641))

(declare-fun res!36725 () Bool)

(assert (=> d!14685 (=> res!36725 e!44641)))

(declare-fun lt!29731 () Bool)

(assert (=> d!14685 (= res!36725 (not lt!29731))))

(declare-fun lt!29734 () Bool)

(assert (=> d!14685 (= lt!29731 lt!29734)))

(declare-fun lt!29733 () Unit!1824)

(declare-fun e!44642 () Unit!1824)

(assert (=> d!14685 (= lt!29733 e!44642)))

(declare-fun c!9614 () Bool)

(assert (=> d!14685 (= c!9614 lt!29734)))

(assert (=> d!14685 (= lt!29734 (containsKey!134 (toList!705 lt!28944) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> d!14685 (= (contains!705 lt!28944 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29731)))

(declare-fun b!68159 () Bool)

(declare-fun lt!29732 () Unit!1824)

(assert (=> b!68159 (= e!44642 lt!29732)))

(assert (=> b!68159 (= lt!29732 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28944) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(assert (=> b!68159 (isDefined!83 (getValueByKey!131 (toList!705 lt!28944) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68160 () Bool)

(declare-fun Unit!1898 () Unit!1824)

(assert (=> b!68160 (= e!44642 Unit!1898)))

(declare-fun b!68161 () Bool)

(assert (=> b!68161 (= e!44641 (isDefined!83 (getValueByKey!131 (toList!705 lt!28944) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14685 c!9614) b!68159))

(assert (= (and d!14685 (not c!9614)) b!68160))

(assert (= (and d!14685 (not res!36725)) b!68161))

(declare-fun m!64041 () Bool)

(assert (=> d!14685 m!64041))

(declare-fun m!64043 () Bool)

(assert (=> b!68159 m!64043))

(assert (=> b!68159 m!61379))

(assert (=> b!68159 m!61379))

(declare-fun m!64045 () Bool)

(assert (=> b!68159 m!64045))

(assert (=> b!68161 m!61379))

(assert (=> b!68161 m!61379))

(assert (=> b!68161 m!64045))

(assert (=> d!13823 d!14685))

(declare-fun b!68164 () Bool)

(declare-fun e!44644 () Option!137)

(assert (=> b!68164 (= e!44644 (getValueByKey!131 (t!4929 lt!28942) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68162 () Bool)

(declare-fun e!44643 () Option!137)

(assert (=> b!68162 (= e!44643 (Some!136 (_2!1052 (h!2035 lt!28942))))))

(declare-fun c!9615 () Bool)

(declare-fun d!14687 () Bool)

(assert (=> d!14687 (= c!9615 (and ((_ is Cons!1451) lt!28942) (= (_1!1052 (h!2035 lt!28942)) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14687 (= (getValueByKey!131 lt!28942 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44643)))

(declare-fun b!68165 () Bool)

(assert (=> b!68165 (= e!44644 None!135)))

(declare-fun b!68163 () Bool)

(assert (=> b!68163 (= e!44643 e!44644)))

(declare-fun c!9616 () Bool)

(assert (=> b!68163 (= c!9616 (and ((_ is Cons!1451) lt!28942) (not (= (_1!1052 (h!2035 lt!28942)) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14687 c!9615) b!68162))

(assert (= (and d!14687 (not c!9615)) b!68163))

(assert (= (and b!68163 c!9616) b!68164))

(assert (= (and b!68163 (not c!9616)) b!68165))

(declare-fun m!64047 () Bool)

(assert (=> b!68164 m!64047))

(assert (=> d!13823 d!14687))

(declare-fun d!14689 () Bool)

(assert (=> d!14689 (= (getValueByKey!131 lt!28942 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) (Some!136 (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun lt!29735 () Unit!1824)

(assert (=> d!14689 (= lt!29735 (choose!380 lt!28942 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun e!44645 () Bool)

(assert (=> d!14689 e!44645))

(declare-fun res!36726 () Bool)

(assert (=> d!14689 (=> (not res!36726) (not e!44645))))

(assert (=> d!14689 (= res!36726 (isStrictlySorted!276 lt!28942))))

(assert (=> d!14689 (= (lemmaContainsTupThenGetReturnValue!48 lt!28942 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29735)))

(declare-fun b!68166 () Bool)

(declare-fun res!36727 () Bool)

(assert (=> b!68166 (=> (not res!36727) (not e!44645))))

(assert (=> b!68166 (= res!36727 (containsKey!134 lt!28942 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68167 () Bool)

(assert (=> b!68167 (= e!44645 (contains!709 lt!28942 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14689 res!36726) b!68166))

(assert (= (and b!68166 res!36727) b!68167))

(assert (=> d!14689 m!61373))

(declare-fun m!64049 () Bool)

(assert (=> d!14689 m!64049))

(declare-fun m!64051 () Bool)

(assert (=> d!14689 m!64051))

(declare-fun m!64053 () Bool)

(assert (=> b!68166 m!64053))

(declare-fun m!64055 () Bool)

(assert (=> b!68167 m!64055))

(assert (=> d!13823 d!14689))

(declare-fun b!68168 () Bool)

(declare-fun e!44650 () List!1455)

(declare-fun call!5729 () List!1455)

(assert (=> b!68168 (= e!44650 call!5729)))

(declare-fun b!68169 () Bool)

(declare-fun e!44646 () List!1455)

(declare-fun e!44648 () List!1455)

(assert (=> b!68169 (= e!44646 e!44648)))

(declare-fun c!9619 () Bool)

(assert (=> b!68169 (= c!9619 (and ((_ is Cons!1451) (toList!705 lt!28674)) (= (_1!1052 (h!2035 (toList!705 lt!28674))) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(declare-fun b!68170 () Bool)

(declare-fun res!36728 () Bool)

(declare-fun e!44649 () Bool)

(assert (=> b!68170 (=> (not res!36728) (not e!44649))))

(declare-fun lt!29736 () List!1455)

(assert (=> b!68170 (= res!36728 (containsKey!134 lt!29736 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun bm!5726 () Bool)

(declare-fun call!5731 () List!1455)

(assert (=> bm!5726 (= call!5729 call!5731)))

(declare-fun b!68171 () Bool)

(declare-fun call!5730 () List!1455)

(assert (=> b!68171 (= e!44646 call!5730)))

(declare-fun b!68172 () Bool)

(declare-fun c!9620 () Bool)

(assert (=> b!68172 (= c!9620 (and ((_ is Cons!1451) (toList!705 lt!28674)) (bvsgt (_1!1052 (h!2035 (toList!705 lt!28674))) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> b!68172 (= e!44648 e!44650)))

(declare-fun e!44647 () List!1455)

(declare-fun b!68173 () Bool)

(assert (=> b!68173 (= e!44647 (ite c!9619 (t!4929 (toList!705 lt!28674)) (ite c!9620 (Cons!1451 (h!2035 (toList!705 lt!28674)) (t!4929 (toList!705 lt!28674))) Nil!1452)))))

(declare-fun d!14691 () Bool)

(assert (=> d!14691 e!44649))

(declare-fun res!36729 () Bool)

(assert (=> d!14691 (=> (not res!36729) (not e!44649))))

(assert (=> d!14691 (= res!36729 (isStrictlySorted!276 lt!29736))))

(assert (=> d!14691 (= lt!29736 e!44646)))

(declare-fun c!9617 () Bool)

(assert (=> d!14691 (= c!9617 (and ((_ is Cons!1451) (toList!705 lt!28674)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28674))) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14691 (isStrictlySorted!276 (toList!705 lt!28674))))

(assert (=> d!14691 (= (insertStrictlySorted!51 (toList!705 lt!28674) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!29736)))

(declare-fun b!68174 () Bool)

(assert (=> b!68174 (= e!44647 (insertStrictlySorted!51 (t!4929 (toList!705 lt!28674)) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68175 () Bool)

(assert (=> b!68175 (= e!44648 call!5731)))

(declare-fun bm!5727 () Bool)

(assert (=> bm!5727 (= call!5731 call!5730)))

(declare-fun b!68176 () Bool)

(assert (=> b!68176 (= e!44650 call!5729)))

(declare-fun bm!5728 () Bool)

(assert (=> bm!5728 (= call!5730 ($colon$colon!62 e!44647 (ite c!9617 (h!2035 (toList!705 lt!28674)) (tuple2!2083 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(declare-fun c!9618 () Bool)

(assert (=> bm!5728 (= c!9618 c!9617)))

(declare-fun b!68177 () Bool)

(assert (=> b!68177 (= e!44649 (contains!709 lt!29736 (tuple2!2083 (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) (_2!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (= (and d!14691 c!9617) b!68171))

(assert (= (and d!14691 (not c!9617)) b!68169))

(assert (= (and b!68169 c!9619) b!68175))

(assert (= (and b!68169 (not c!9619)) b!68172))

(assert (= (and b!68172 c!9620) b!68168))

(assert (= (and b!68172 (not c!9620)) b!68176))

(assert (= (or b!68168 b!68176) bm!5726))

(assert (= (or b!68175 bm!5726) bm!5727))

(assert (= (or b!68171 bm!5727) bm!5728))

(assert (= (and bm!5728 c!9618) b!68174))

(assert (= (and bm!5728 (not c!9618)) b!68173))

(assert (= (and d!14691 res!36729) b!68170))

(assert (= (and b!68170 res!36728) b!68177))

(declare-fun m!64057 () Bool)

(assert (=> bm!5728 m!64057))

(declare-fun m!64059 () Bool)

(assert (=> b!68174 m!64059))

(declare-fun m!64061 () Bool)

(assert (=> b!68170 m!64061))

(declare-fun m!64063 () Bool)

(assert (=> b!68177 m!64063))

(declare-fun m!64065 () Bool)

(assert (=> d!14691 m!64065))

(declare-fun m!64067 () Bool)

(assert (=> d!14691 m!64067))

(assert (=> d!13823 d!14691))

(declare-fun d!14693 () Bool)

(assert (=> d!14693 (= (inRange!0 (index!3037 lt!29194) (mask!6081 newMap!16)) (and (bvsge (index!3037 lt!29194) #b00000000000000000000000000000000) (bvslt (index!3037 lt!29194) (bvadd (mask!6081 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!67150 d!14693))

(declare-fun d!14695 () Bool)

(assert (=> d!14695 (isDefined!83 (getValueByKey!131 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun lt!29737 () Unit!1824)

(assert (=> d!14695 (= lt!29737 (choose!379 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!44651 () Bool)

(assert (=> d!14695 e!44651))

(declare-fun res!36730 () Bool)

(assert (=> d!14695 (=> (not res!36730) (not e!44651))))

(assert (=> d!14695 (= res!36730 (isStrictlySorted!276 (toList!705 call!5542)))))

(assert (=> d!14695 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29737)))

(declare-fun b!68178 () Bool)

(assert (=> b!68178 (= e!44651 (containsKey!134 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14695 res!36730) b!68178))

(assert (=> d!14695 m!60827))

(assert (=> d!14695 m!61849))

(assert (=> d!14695 m!61849))

(assert (=> d!14695 m!61851))

(assert (=> d!14695 m!60827))

(declare-fun m!64069 () Bool)

(assert (=> d!14695 m!64069))

(declare-fun m!64071 () Bool)

(assert (=> d!14695 m!64071))

(assert (=> b!68178 m!60827))

(assert (=> b!68178 m!61845))

(assert (=> b!67011 d!14695))

(assert (=> b!67011 d!14479))

(assert (=> b!67011 d!14481))

(assert (=> d!13833 d!13815))

(declare-fun d!14697 () Bool)

(declare-fun e!44652 () Bool)

(assert (=> d!14697 e!44652))

(declare-fun res!36731 () Bool)

(assert (=> d!14697 (=> res!36731 e!44652)))

(declare-fun lt!29738 () Bool)

(assert (=> d!14697 (= res!36731 (not lt!29738))))

(declare-fun lt!29741 () Bool)

(assert (=> d!14697 (= lt!29738 lt!29741)))

(declare-fun lt!29740 () Unit!1824)

(declare-fun e!44653 () Unit!1824)

(assert (=> d!14697 (= lt!29740 e!44653)))

(declare-fun c!9621 () Bool)

(assert (=> d!14697 (= c!9621 lt!29741)))

(assert (=> d!14697 (= lt!29741 (containsKey!134 (toList!705 lt!28663) lt!28656))))

(assert (=> d!14697 (= (contains!705 lt!28663 lt!28656) lt!29738)))

(declare-fun b!68179 () Bool)

(declare-fun lt!29739 () Unit!1824)

(assert (=> b!68179 (= e!44653 lt!29739)))

(assert (=> b!68179 (= lt!29739 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28663) lt!28656))))

(assert (=> b!68179 (isDefined!83 (getValueByKey!131 (toList!705 lt!28663) lt!28656))))

(declare-fun b!68180 () Bool)

(declare-fun Unit!1899 () Unit!1824)

(assert (=> b!68180 (= e!44653 Unit!1899)))

(declare-fun b!68181 () Bool)

(assert (=> b!68181 (= e!44652 (isDefined!83 (getValueByKey!131 (toList!705 lt!28663) lt!28656)))))

(assert (= (and d!14697 c!9621) b!68179))

(assert (= (and d!14697 (not c!9621)) b!68180))

(assert (= (and d!14697 (not res!36731)) b!68181))

(declare-fun m!64073 () Bool)

(assert (=> d!14697 m!64073))

(declare-fun m!64075 () Bool)

(assert (=> b!68179 m!64075))

(assert (=> b!68179 m!61403))

(assert (=> b!68179 m!61403))

(declare-fun m!64077 () Bool)

(assert (=> b!68179 m!64077))

(assert (=> b!68181 m!61403))

(assert (=> b!68181 m!61403))

(assert (=> b!68181 m!64077))

(assert (=> d!13833 d!14697))

(declare-fun d!14699 () Bool)

(assert (=> d!14699 (= (apply!72 (+!86 lt!28663 (tuple2!2083 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28656) (apply!72 lt!28663 lt!28656))))

(assert (=> d!14699 true))

(declare-fun _$34!787 () Unit!1824)

(assert (=> d!14699 (= (choose!376 lt!28663 lt!28662 (minValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28656) _$34!787)))

(declare-fun bs!2954 () Bool)

(assert (= bs!2954 d!14699))

(assert (=> bs!2954 m!61049))

(assert (=> bs!2954 m!61049))

(assert (=> bs!2954 m!61055))

(assert (=> bs!2954 m!61041))

(assert (=> d!13833 d!14699))

(assert (=> d!13833 d!13827))

(assert (=> d!13833 d!13831))

(assert (=> b!66804 d!14061))

(assert (=> b!67159 d!14163))

(declare-fun d!14701 () Bool)

(assert (=> d!14701 (= (inRange!0 (ite c!9215 (index!3037 lt!28909) (ite c!9213 (index!3036 lt!28900) (index!3039 lt!28900))) (mask!6081 newMap!16)) (and (bvsge (ite c!9215 (index!3037 lt!28909) (ite c!9213 (index!3036 lt!28900) (index!3039 lt!28900))) #b00000000000000000000000000000000) (bvslt (ite c!9215 (index!3037 lt!28909) (ite c!9213 (index!3036 lt!28900) (index!3039 lt!28900))) (bvadd (mask!6081 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!5562 d!14701))

(declare-fun d!14703 () Bool)

(assert (=> d!14703 (= (apply!72 lt!29083 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!705 lt!29083) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2955 () Bool)

(assert (= bs!2955 d!14703))

(assert (=> bs!2955 m!63033))

(assert (=> bs!2955 m!63033))

(declare-fun m!64079 () Bool)

(assert (=> bs!2955 m!64079))

(assert (=> b!66928 d!14703))

(declare-fun d!14705 () Bool)

(declare-fun c!9622 () Bool)

(assert (=> d!14705 (= c!9622 ((_ is Nil!1452) (toList!705 lt!28719)))))

(declare-fun e!44654 () (InoxSet tuple2!2082))

(assert (=> d!14705 (= (content!72 (toList!705 lt!28719)) e!44654)))

(declare-fun b!68182 () Bool)

(assert (=> b!68182 (= e!44654 ((as const (Array tuple2!2082 Bool)) false))))

(declare-fun b!68183 () Bool)

(assert (=> b!68183 (= e!44654 ((_ map or) (store ((as const (Array tuple2!2082 Bool)) false) (h!2035 (toList!705 lt!28719)) true) (content!72 (t!4929 (toList!705 lt!28719)))))))

(assert (= (and d!14705 c!9622) b!68182))

(assert (= (and d!14705 (not c!9622)) b!68183))

(declare-fun m!64081 () Bool)

(assert (=> b!68183 m!64081))

(assert (=> b!68183 m!64035))

(assert (=> d!13803 d!14705))

(declare-fun e!44656 () Option!137)

(declare-fun b!68186 () Bool)

(assert (=> b!68186 (= e!44656 (getValueByKey!131 (t!4929 (toList!705 lt!29178)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68184 () Bool)

(declare-fun e!44655 () Option!137)

(assert (=> b!68184 (= e!44655 (Some!136 (_2!1052 (h!2035 (toList!705 lt!29178)))))))

(declare-fun d!14707 () Bool)

(declare-fun c!9623 () Bool)

(assert (=> d!14707 (= c!9623 (and ((_ is Cons!1451) (toList!705 lt!29178)) (= (_1!1052 (h!2035 (toList!705 lt!29178))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!14707 (= (getValueByKey!131 (toList!705 lt!29178) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) e!44655)))

(declare-fun b!68187 () Bool)

(assert (=> b!68187 (= e!44656 None!135)))

(declare-fun b!68185 () Bool)

(assert (=> b!68185 (= e!44655 e!44656)))

(declare-fun c!9624 () Bool)

(assert (=> b!68185 (= c!9624 (and ((_ is Cons!1451) (toList!705 lt!29178)) (not (= (_1!1052 (h!2035 (toList!705 lt!29178))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (= (and d!14707 c!9623) b!68184))

(assert (= (and d!14707 (not c!9623)) b!68185))

(assert (= (and b!68185 c!9624) b!68186))

(assert (= (and b!68185 (not c!9624)) b!68187))

(declare-fun m!64083 () Bool)

(assert (=> b!68186 m!64083))

(assert (=> b!67113 d!14707))

(declare-fun d!14709 () Bool)

(declare-fun res!36732 () Bool)

(declare-fun e!44657 () Bool)

(assert (=> d!14709 (=> res!36732 e!44657)))

(assert (=> d!14709 (= res!36732 (and ((_ is Cons!1451) (toList!705 lt!28691)) (= (_1!1052 (h!2035 (toList!705 lt!28691))) (_1!1052 lt!28528))))))

(assert (=> d!14709 (= (containsKey!134 (toList!705 lt!28691) (_1!1052 lt!28528)) e!44657)))

(declare-fun b!68188 () Bool)

(declare-fun e!44658 () Bool)

(assert (=> b!68188 (= e!44657 e!44658)))

(declare-fun res!36733 () Bool)

(assert (=> b!68188 (=> (not res!36733) (not e!44658))))

(assert (=> b!68188 (= res!36733 (and (or (not ((_ is Cons!1451) (toList!705 lt!28691))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28691))) (_1!1052 lt!28528))) ((_ is Cons!1451) (toList!705 lt!28691)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28691))) (_1!1052 lt!28528))))))

(declare-fun b!68189 () Bool)

(assert (=> b!68189 (= e!44658 (containsKey!134 (t!4929 (toList!705 lt!28691)) (_1!1052 lt!28528)))))

(assert (= (and d!14709 (not res!36732)) b!68188))

(assert (= (and b!68188 res!36733) b!68189))

(declare-fun m!64085 () Bool)

(assert (=> b!68189 m!64085))

(assert (=> d!13907 d!14709))

(assert (=> b!66713 d!13989))

(declare-fun b!68190 () Bool)

(declare-fun res!36742 () Bool)

(declare-fun e!44662 () Bool)

(assert (=> b!68190 (=> (not res!36742) (not e!44662))))

(declare-fun e!44667 () Bool)

(assert (=> b!68190 (= res!36742 e!44667)))

(declare-fun c!9630 () Bool)

(assert (=> b!68190 (= c!9630 (not (= (bvand lt!28808 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!68191 () Bool)

(declare-fun call!5736 () Bool)

(assert (=> b!68191 (= e!44667 (not call!5736))))

(declare-fun b!68192 () Bool)

(declare-fun e!44663 () Bool)

(assert (=> b!68192 (= e!44663 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68193 () Bool)

(declare-fun e!44665 () Bool)

(assert (=> b!68193 (= e!44667 e!44665)))

(declare-fun res!36736 () Bool)

(assert (=> b!68193 (= res!36736 call!5736)))

(assert (=> b!68193 (=> (not res!36736) (not e!44665))))

(declare-fun b!68194 () Bool)

(declare-fun e!44664 () Bool)

(declare-fun lt!29754 () ListLongMap!1379)

(assert (=> b!68194 (= e!44664 (= (apply!72 lt!29754 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) (get!1122 (select (arr!1827 (_values!2129 newMap!16)) #b00000000000000000000000000000000) (dynLambda!319 (defaultEntry!2146 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!68194 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2062 (_values!2129 newMap!16))))))

(assert (=> b!68194 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun d!14711 () Bool)

(assert (=> d!14711 e!44662))

(declare-fun res!36737 () Bool)

(assert (=> d!14711 (=> (not res!36737) (not e!44662))))

(assert (=> d!14711 (= res!36737 (or (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))))

(declare-fun lt!29762 () ListLongMap!1379)

(assert (=> d!14711 (= lt!29754 lt!29762)))

(declare-fun lt!29759 () Unit!1824)

(declare-fun e!44661 () Unit!1824)

(assert (=> d!14711 (= lt!29759 e!44661)))

(declare-fun c!9628 () Bool)

(declare-fun e!44659 () Bool)

(assert (=> d!14711 (= c!9628 e!44659)))

(declare-fun res!36741 () Bool)

(assert (=> d!14711 (=> (not res!36741) (not e!44659))))

(assert (=> d!14711 (= res!36741 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun e!44666 () ListLongMap!1379)

(assert (=> d!14711 (= lt!29762 e!44666)))

(declare-fun c!9625 () Bool)

(assert (=> d!14711 (= c!9625 (and (not (= (bvand lt!28808 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!28808 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!14711 (validMask!0 (mask!6081 newMap!16))))

(assert (=> d!14711 (= (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28808 (zeroValue!2054 newMap!16) lt!28522 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) lt!29754)))

(declare-fun b!68195 () Bool)

(declare-fun e!44669 () Bool)

(declare-fun e!44671 () Bool)

(assert (=> b!68195 (= e!44669 e!44671)))

(declare-fun res!36739 () Bool)

(declare-fun call!5733 () Bool)

(assert (=> b!68195 (= res!36739 call!5733)))

(assert (=> b!68195 (=> (not res!36739) (not e!44671))))

(declare-fun b!68196 () Bool)

(assert (=> b!68196 (= e!44669 (not call!5733))))

(declare-fun b!68197 () Bool)

(assert (=> b!68197 (= e!44665 (= (apply!72 lt!29754 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2054 newMap!16)))))

(declare-fun bm!5729 () Bool)

(declare-fun call!5735 () ListLongMap!1379)

(declare-fun call!5738 () ListLongMap!1379)

(assert (=> bm!5729 (= call!5735 call!5738)))

(declare-fun b!68198 () Bool)

(declare-fun Unit!1900 () Unit!1824)

(assert (=> b!68198 (= e!44661 Unit!1900)))

(declare-fun b!68199 () Bool)

(declare-fun e!44660 () ListLongMap!1379)

(assert (=> b!68199 (= e!44660 call!5735)))

(declare-fun bm!5730 () Bool)

(declare-fun call!5734 () ListLongMap!1379)

(assert (=> bm!5730 (= call!5738 call!5734)))

(declare-fun c!9627 () Bool)

(declare-fun bm!5731 () Bool)

(declare-fun call!5732 () ListLongMap!1379)

(assert (=> bm!5731 (= call!5732 (+!86 (ite c!9625 call!5734 (ite c!9627 call!5738 call!5735)) (ite (or c!9625 c!9627) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522))))))

(declare-fun b!68200 () Bool)

(declare-fun e!44670 () ListLongMap!1379)

(declare-fun call!5737 () ListLongMap!1379)

(assert (=> b!68200 (= e!44670 call!5737)))

(declare-fun bm!5732 () Bool)

(assert (=> bm!5732 (= call!5737 call!5732)))

(declare-fun bm!5733 () Bool)

(assert (=> bm!5733 (= call!5733 (contains!705 lt!29754 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68201 () Bool)

(declare-fun res!36740 () Bool)

(assert (=> b!68201 (=> (not res!36740) (not e!44662))))

(declare-fun e!44668 () Bool)

(assert (=> b!68201 (= res!36740 e!44668)))

(declare-fun res!36735 () Bool)

(assert (=> b!68201 (=> res!36735 e!44668)))

(assert (=> b!68201 (= res!36735 (not e!44663))))

(declare-fun res!36738 () Bool)

(assert (=> b!68201 (=> (not res!36738) (not e!44663))))

(assert (=> b!68201 (= res!36738 (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!68202 () Bool)

(assert (=> b!68202 (= e!44662 e!44669)))

(declare-fun c!9629 () Bool)

(assert (=> b!68202 (= c!9629 (not (= (bvand lt!28808 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68203 () Bool)

(assert (=> b!68203 (= e!44666 (+!86 call!5732 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)))))

(declare-fun b!68204 () Bool)

(assert (=> b!68204 (= e!44659 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68205 () Bool)

(assert (=> b!68205 (= e!44671 (= (apply!72 lt!29754 #b1000000000000000000000000000000000000000000000000000000000000000) lt!28522))))

(declare-fun b!68206 () Bool)

(declare-fun lt!29751 () Unit!1824)

(assert (=> b!68206 (= e!44661 lt!29751)))

(declare-fun lt!29753 () ListLongMap!1379)

(assert (=> b!68206 (= lt!29753 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28808 (zeroValue!2054 newMap!16) lt!28522 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29758 () (_ BitVec 64))

(assert (=> b!68206 (= lt!29758 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29756 () (_ BitVec 64))

(assert (=> b!68206 (= lt!29756 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29763 () Unit!1824)

(assert (=> b!68206 (= lt!29763 (addStillContains!48 lt!29753 lt!29758 (zeroValue!2054 newMap!16) lt!29756))))

(assert (=> b!68206 (contains!705 (+!86 lt!29753 (tuple2!2083 lt!29758 (zeroValue!2054 newMap!16))) lt!29756)))

(declare-fun lt!29757 () Unit!1824)

(assert (=> b!68206 (= lt!29757 lt!29763)))

(declare-fun lt!29748 () ListLongMap!1379)

(assert (=> b!68206 (= lt!29748 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28808 (zeroValue!2054 newMap!16) lt!28522 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29760 () (_ BitVec 64))

(assert (=> b!68206 (= lt!29760 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29752 () (_ BitVec 64))

(assert (=> b!68206 (= lt!29752 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29742 () Unit!1824)

(assert (=> b!68206 (= lt!29742 (addApplyDifferent!48 lt!29748 lt!29760 lt!28522 lt!29752))))

(assert (=> b!68206 (= (apply!72 (+!86 lt!29748 (tuple2!2083 lt!29760 lt!28522)) lt!29752) (apply!72 lt!29748 lt!29752))))

(declare-fun lt!29744 () Unit!1824)

(assert (=> b!68206 (= lt!29744 lt!29742)))

(declare-fun lt!29761 () ListLongMap!1379)

(assert (=> b!68206 (= lt!29761 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28808 (zeroValue!2054 newMap!16) lt!28522 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29746 () (_ BitVec 64))

(assert (=> b!68206 (= lt!29746 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29747 () (_ BitVec 64))

(assert (=> b!68206 (= lt!29747 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!29745 () Unit!1824)

(assert (=> b!68206 (= lt!29745 (addApplyDifferent!48 lt!29761 lt!29746 (zeroValue!2054 newMap!16) lt!29747))))

(assert (=> b!68206 (= (apply!72 (+!86 lt!29761 (tuple2!2083 lt!29746 (zeroValue!2054 newMap!16))) lt!29747) (apply!72 lt!29761 lt!29747))))

(declare-fun lt!29755 () Unit!1824)

(assert (=> b!68206 (= lt!29755 lt!29745)))

(declare-fun lt!29750 () ListLongMap!1379)

(assert (=> b!68206 (= lt!29750 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28808 (zeroValue!2054 newMap!16) lt!28522 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun lt!29749 () (_ BitVec 64))

(assert (=> b!68206 (= lt!29749 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!29743 () (_ BitVec 64))

(assert (=> b!68206 (= lt!29743 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!68206 (= lt!29751 (addApplyDifferent!48 lt!29750 lt!29749 lt!28522 lt!29743))))

(assert (=> b!68206 (= (apply!72 (+!86 lt!29750 (tuple2!2083 lt!29749 lt!28522)) lt!29743) (apply!72 lt!29750 lt!29743))))

(declare-fun b!68207 () Bool)

(declare-fun c!9626 () Bool)

(assert (=> b!68207 (= c!9626 (and (not (= (bvand lt!28808 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!28808 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!68207 (= e!44670 e!44660)))

(declare-fun b!68208 () Bool)

(assert (=> b!68208 (= e!44666 e!44670)))

(assert (=> b!68208 (= c!9627 (and (not (= (bvand lt!28808 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!28808 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!68209 () Bool)

(assert (=> b!68209 (= e!44668 e!44664)))

(declare-fun res!36734 () Bool)

(assert (=> b!68209 (=> (not res!36734) (not e!44664))))

(assert (=> b!68209 (= res!36734 (contains!705 lt!29754 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68209 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2061 (_keys!3786 newMap!16))))))

(declare-fun b!68210 () Bool)

(assert (=> b!68210 (= e!44660 call!5737)))

(declare-fun bm!5734 () Bool)

(assert (=> bm!5734 (= call!5734 (getCurrentListMapNoExtraKeys!51 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28808 (zeroValue!2054 newMap!16) lt!28522 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(declare-fun bm!5735 () Bool)

(assert (=> bm!5735 (= call!5736 (contains!705 lt!29754 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!14711 c!9625) b!68203))

(assert (= (and d!14711 (not c!9625)) b!68208))

(assert (= (and b!68208 c!9627) b!68200))

(assert (= (and b!68208 (not c!9627)) b!68207))

(assert (= (and b!68207 c!9626) b!68210))

(assert (= (and b!68207 (not c!9626)) b!68199))

(assert (= (or b!68210 b!68199) bm!5729))

(assert (= (or b!68200 bm!5729) bm!5730))

(assert (= (or b!68200 b!68210) bm!5732))

(assert (= (or b!68203 bm!5730) bm!5734))

(assert (= (or b!68203 bm!5732) bm!5731))

(assert (= (and d!14711 res!36741) b!68204))

(assert (= (and d!14711 c!9628) b!68206))

(assert (= (and d!14711 (not c!9628)) b!68198))

(assert (= (and d!14711 res!36737) b!68201))

(assert (= (and b!68201 res!36738) b!68192))

(assert (= (and b!68201 (not res!36735)) b!68209))

(assert (= (and b!68209 res!36734) b!68194))

(assert (= (and b!68201 res!36740) b!68190))

(assert (= (and b!68190 c!9630) b!68193))

(assert (= (and b!68190 (not c!9630)) b!68191))

(assert (= (and b!68193 res!36736) b!68197))

(assert (= (or b!68193 b!68191) bm!5735))

(assert (= (and b!68190 res!36742) b!68202))

(assert (= (and b!68202 c!9629) b!68195))

(assert (= (and b!68202 (not c!9629)) b!68196))

(assert (= (and b!68195 res!36739) b!68205))

(assert (= (or b!68195 b!68196) bm!5733))

(declare-fun b_lambda!3045 () Bool)

(assert (=> (not b_lambda!3045) (not b!68194)))

(assert (=> b!68194 t!4942))

(declare-fun b_and!4209 () Bool)

(assert (= b_and!4205 (and (=> t!4942 result!2587) b_and!4209)))

(assert (=> b!68194 t!4944))

(declare-fun b_and!4211 () Bool)

(assert (= b_and!4207 (and (=> t!4944 result!2589) b_and!4211)))

(assert (=> b!68204 m!61431))

(assert (=> b!68204 m!61431))

(assert (=> b!68204 m!61433))

(declare-fun m!64087 () Bool)

(assert (=> bm!5733 m!64087))

(declare-fun m!64089 () Bool)

(assert (=> b!68197 m!64089))

(assert (=> b!68209 m!61431))

(assert (=> b!68209 m!61431))

(declare-fun m!64091 () Bool)

(assert (=> b!68209 m!64091))

(declare-fun m!64093 () Bool)

(assert (=> bm!5731 m!64093))

(declare-fun m!64095 () Bool)

(assert (=> b!68203 m!64095))

(declare-fun m!64097 () Bool)

(assert (=> b!68206 m!64097))

(declare-fun m!64099 () Bool)

(assert (=> b!68206 m!64099))

(declare-fun m!64101 () Bool)

(assert (=> b!68206 m!64101))

(declare-fun m!64103 () Bool)

(assert (=> b!68206 m!64103))

(declare-fun m!64105 () Bool)

(assert (=> b!68206 m!64105))

(assert (=> b!68206 m!64101))

(declare-fun m!64107 () Bool)

(assert (=> b!68206 m!64107))

(declare-fun m!64109 () Bool)

(assert (=> b!68206 m!64109))

(declare-fun m!64111 () Bool)

(assert (=> b!68206 m!64111))

(declare-fun m!64113 () Bool)

(assert (=> b!68206 m!64113))

(assert (=> b!68206 m!61431))

(declare-fun m!64115 () Bool)

(assert (=> b!68206 m!64115))

(assert (=> b!68206 m!64111))

(declare-fun m!64117 () Bool)

(assert (=> b!68206 m!64117))

(declare-fun m!64119 () Bool)

(assert (=> b!68206 m!64119))

(assert (=> b!68206 m!64097))

(declare-fun m!64121 () Bool)

(assert (=> b!68206 m!64121))

(assert (=> b!68206 m!64117))

(declare-fun m!64123 () Bool)

(assert (=> b!68206 m!64123))

(declare-fun m!64125 () Bool)

(assert (=> b!68206 m!64125))

(declare-fun m!64127 () Bool)

(assert (=> b!68206 m!64127))

(assert (=> bm!5734 m!64105))

(assert (=> d!14711 m!61297))

(assert (=> b!68192 m!61431))

(assert (=> b!68192 m!61431))

(assert (=> b!68192 m!61433))

(assert (=> b!68194 m!61477))

(assert (=> b!68194 m!61683))

(assert (=> b!68194 m!61477))

(assert (=> b!68194 m!61685))

(assert (=> b!68194 m!61683))

(assert (=> b!68194 m!61431))

(declare-fun m!64129 () Bool)

(assert (=> b!68194 m!64129))

(assert (=> b!68194 m!61431))

(declare-fun m!64131 () Bool)

(assert (=> b!68205 m!64131))

(declare-fun m!64133 () Bool)

(assert (=> bm!5735 m!64133))

(assert (=> d!13805 d!14711))

(declare-fun d!14713 () Bool)

(assert (=> d!14713 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) lt!28808 (zeroValue!2054 newMap!16) lt!28522 #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)))))

(assert (=> d!14713 true))

(declare-fun _$8!55 () Unit!1824)

(assert (=> d!14713 (= (choose!375 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) lt!28808 (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) lt!28522 (defaultEntry!2146 newMap!16)) _$8!55)))

(declare-fun bs!2956 () Bool)

(assert (= bs!2956 d!14713))

(assert (=> bs!2956 m!61017))

(assert (=> bs!2956 m!61017))

(assert (=> bs!2956 m!61323))

(assert (=> bs!2956 m!61319))

(assert (=> d!13805 d!14713))

(assert (=> d!13805 d!14103))

(assert (=> d!13805 d!13899))

(declare-fun d!14715 () Bool)

(declare-fun e!44672 () Bool)

(assert (=> d!14715 e!44672))

(declare-fun res!36744 () Bool)

(assert (=> d!14715 (=> (not res!36744) (not e!44672))))

(declare-fun lt!29766 () ListLongMap!1379)

(assert (=> d!14715 (= res!36744 (contains!705 lt!29766 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522))))))

(declare-fun lt!29764 () List!1455)

(assert (=> d!14715 (= lt!29766 (ListLongMap!1380 lt!29764))))

(declare-fun lt!29765 () Unit!1824)

(declare-fun lt!29767 () Unit!1824)

(assert (=> d!14715 (= lt!29765 lt!29767)))

(assert (=> d!14715 (= (getValueByKey!131 lt!29764 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522))))))

(assert (=> d!14715 (= lt!29767 (lemmaContainsTupThenGetReturnValue!48 lt!29764 (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522))))))

(assert (=> d!14715 (= lt!29764 (insertStrictlySorted!51 (toList!705 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16))) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522))))))

(assert (=> d!14715 (= (+!86 (getCurrentListMap!403 (_keys!3786 newMap!16) (_values!2129 newMap!16) (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) lt!29766)))

(declare-fun b!68211 () Bool)

(declare-fun res!36743 () Bool)

(assert (=> b!68211 (=> (not res!36743) (not e!44672))))

(assert (=> b!68211 (= res!36743 (= (getValueByKey!131 (toList!705 lt!29766) (_1!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522))) (Some!136 (_2!1052 (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)))))))

(declare-fun b!68212 () Bool)

(assert (=> b!68212 (= e!44672 (contains!709 (toList!705 lt!29766) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)))))

(assert (= (and d!14715 res!36744) b!68211))

(assert (= (and b!68211 res!36743) b!68212))

(declare-fun m!64135 () Bool)

(assert (=> d!14715 m!64135))

(declare-fun m!64137 () Bool)

(assert (=> d!14715 m!64137))

(declare-fun m!64139 () Bool)

(assert (=> d!14715 m!64139))

(declare-fun m!64141 () Bool)

(assert (=> d!14715 m!64141))

(declare-fun m!64143 () Bool)

(assert (=> b!68211 m!64143))

(declare-fun m!64145 () Bool)

(assert (=> b!68212 m!64145))

(assert (=> d!13805 d!14715))

(declare-fun e!44674 () Option!137)

(declare-fun b!68215 () Bool)

(assert (=> b!68215 (= e!44674 (getValueByKey!131 (t!4929 (toList!705 lt!28944)) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68213 () Bool)

(declare-fun e!44673 () Option!137)

(assert (=> b!68213 (= e!44673 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28944)))))))

(declare-fun d!14717 () Bool)

(declare-fun c!9631 () Bool)

(assert (=> d!14717 (= c!9631 (and ((_ is Cons!1451) (toList!705 lt!28944)) (= (_1!1052 (h!2035 (toList!705 lt!28944))) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14717 (= (getValueByKey!131 (toList!705 lt!28944) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44673)))

(declare-fun b!68216 () Bool)

(assert (=> b!68216 (= e!44674 None!135)))

(declare-fun b!68214 () Bool)

(assert (=> b!68214 (= e!44673 e!44674)))

(declare-fun c!9632 () Bool)

(assert (=> b!68214 (= c!9632 (and ((_ is Cons!1451) (toList!705 lt!28944)) (not (= (_1!1052 (h!2035 (toList!705 lt!28944))) (_1!1052 (tuple2!2083 lt!28659 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14717 c!9631) b!68213))

(assert (= (and d!14717 (not c!9631)) b!68214))

(assert (= (and b!68214 c!9632) b!68215))

(assert (= (and b!68214 (not c!9632)) b!68216))

(declare-fun m!64147 () Bool)

(assert (=> b!68215 m!64147))

(assert (=> b!66765 d!14717))

(declare-fun b!68217 () Bool)

(declare-fun e!44676 () (_ BitVec 32))

(assert (=> b!68217 (= e!44676 #b00000000000000000000000000000000)))

(declare-fun b!68218 () Bool)

(declare-fun e!44675 () (_ BitVec 32))

(declare-fun call!5739 () (_ BitVec 32))

(assert (=> b!68218 (= e!44675 (bvadd #b00000000000000000000000000000001 call!5739))))

(declare-fun b!68219 () Bool)

(assert (=> b!68219 (= e!44675 call!5739)))

(declare-fun d!14719 () Bool)

(declare-fun lt!29768 () (_ BitVec 32))

(assert (=> d!14719 (and (bvsge lt!29768 #b00000000000000000000000000000000) (bvsle lt!29768 (bvsub (size!2061 (_keys!3786 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!14719 (= lt!29768 e!44676)))

(declare-fun c!9634 () Bool)

(assert (=> d!14719 (= c!9634 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!14719 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2061 (_keys!3786 newMap!16)) (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!14719 (= (arrayCountValidKeys!0 (_keys!3786 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))) lt!29768)))

(declare-fun b!68220 () Bool)

(assert (=> b!68220 (= e!44676 e!44675)))

(declare-fun c!9633 () Bool)

(assert (=> b!68220 (= c!9633 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!5736 () Bool)

(assert (=> bm!5736 (= call!5739 (arrayCountValidKeys!0 (_keys!3786 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))))))

(assert (= (and d!14719 c!9634) b!68217))

(assert (= (and d!14719 (not c!9634)) b!68220))

(assert (= (and b!68220 c!9633) b!68218))

(assert (= (and b!68220 (not c!9633)) b!68219))

(assert (= (or b!68218 b!68219) bm!5736))

(assert (=> b!68220 m!63669))

(assert (=> b!68220 m!63669))

(assert (=> b!68220 m!63671))

(declare-fun m!64149 () Bool)

(assert (=> bm!5736 m!64149))

(assert (=> bm!5622 d!14719))

(declare-fun e!44678 () Option!137)

(declare-fun b!68223 () Bool)

(assert (=> b!68223 (= e!44678 (getValueByKey!131 (t!4929 (toList!705 lt!29056)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68221 () Bool)

(declare-fun e!44677 () Option!137)

(assert (=> b!68221 (= e!44677 (Some!136 (_2!1052 (h!2035 (toList!705 lt!29056)))))))

(declare-fun c!9635 () Bool)

(declare-fun d!14721 () Bool)

(assert (=> d!14721 (= c!9635 (and ((_ is Cons!1451) (toList!705 lt!29056)) (= (_1!1052 (h!2035 (toList!705 lt!29056))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!14721 (= (getValueByKey!131 (toList!705 lt!29056) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) e!44677)))

(declare-fun b!68224 () Bool)

(assert (=> b!68224 (= e!44678 None!135)))

(declare-fun b!68222 () Bool)

(assert (=> b!68222 (= e!44677 e!44678)))

(declare-fun c!9636 () Bool)

(assert (=> b!68222 (= c!9636 (and ((_ is Cons!1451) (toList!705 lt!29056)) (not (= (_1!1052 (h!2035 (toList!705 lt!29056))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (= (and d!14721 c!9635) b!68221))

(assert (= (and d!14721 (not c!9635)) b!68222))

(assert (= (and b!68222 c!9636) b!68223))

(assert (= (and b!68222 (not c!9636)) b!68224))

(declare-fun m!64151 () Bool)

(assert (=> b!68223 m!64151))

(assert (=> b!66911 d!14721))

(declare-fun d!14723 () Bool)

(assert (=> d!14723 (isDefined!83 (getValueByKey!131 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669))))

(declare-fun lt!29769 () Unit!1824)

(assert (=> d!14723 (= lt!29769 (choose!379 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669))))

(declare-fun e!44679 () Bool)

(assert (=> d!14723 e!44679))

(declare-fun res!36745 () Bool)

(assert (=> d!14723 (=> (not res!36745) (not e!44679))))

(assert (=> d!14723 (= res!36745 (isStrictlySorted!276 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14723 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669) lt!29769)))

(declare-fun b!68225 () Bool)

(assert (=> b!68225 (= e!44679 (containsKey!134 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669))))

(assert (= (and d!14723 res!36745) b!68225))

(assert (=> d!14723 m!61339))

(assert (=> d!14723 m!61339))

(assert (=> d!14723 m!61341))

(declare-fun m!64153 () Bool)

(assert (=> d!14723 m!64153))

(declare-fun m!64155 () Bool)

(assert (=> d!14723 m!64155))

(assert (=> b!68225 m!61335))

(assert (=> b!66756 d!14723))

(assert (=> b!66756 d!14487))

(assert (=> b!66756 d!14489))

(declare-fun d!14725 () Bool)

(declare-fun e!44680 () Bool)

(assert (=> d!14725 e!44680))

(declare-fun res!36746 () Bool)

(assert (=> d!14725 (=> res!36746 e!44680)))

(declare-fun lt!29770 () Bool)

(assert (=> d!14725 (= res!36746 (not lt!29770))))

(declare-fun lt!29773 () Bool)

(assert (=> d!14725 (= lt!29770 lt!29773)))

(declare-fun lt!29772 () Unit!1824)

(declare-fun e!44681 () Unit!1824)

(assert (=> d!14725 (= lt!29772 e!44681)))

(declare-fun c!9637 () Bool)

(assert (=> d!14725 (= c!9637 lt!29773)))

(assert (=> d!14725 (= lt!29773 (containsKey!134 (toList!705 lt!29056) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> d!14725 (= (contains!705 lt!29056 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!29770)))

(declare-fun b!68226 () Bool)

(declare-fun lt!29771 () Unit!1824)

(assert (=> b!68226 (= e!44681 lt!29771)))

(assert (=> b!68226 (= lt!29771 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29056) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (=> b!68226 (isDefined!83 (getValueByKey!131 (toList!705 lt!29056) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68227 () Bool)

(declare-fun Unit!1901 () Unit!1824)

(assert (=> b!68227 (= e!44681 Unit!1901)))

(declare-fun b!68228 () Bool)

(assert (=> b!68228 (= e!44680 (isDefined!83 (getValueByKey!131 (toList!705 lt!29056) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (= (and d!14725 c!9637) b!68226))

(assert (= (and d!14725 (not c!9637)) b!68227))

(assert (= (and d!14725 (not res!36746)) b!68228))

(declare-fun m!64157 () Bool)

(assert (=> d!14725 m!64157))

(declare-fun m!64159 () Bool)

(assert (=> b!68226 m!64159))

(assert (=> b!68226 m!61701))

(assert (=> b!68226 m!61701))

(declare-fun m!64161 () Bool)

(assert (=> b!68226 m!64161))

(assert (=> b!68228 m!61701))

(assert (=> b!68228 m!61701))

(assert (=> b!68228 m!64161))

(assert (=> d!13887 d!14725))

(declare-fun e!44683 () Option!137)

(declare-fun b!68231 () Bool)

(assert (=> b!68231 (= e!44683 (getValueByKey!131 (t!4929 lt!29054) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68229 () Bool)

(declare-fun e!44682 () Option!137)

(assert (=> b!68229 (= e!44682 (Some!136 (_2!1052 (h!2035 lt!29054))))))

(declare-fun c!9638 () Bool)

(declare-fun d!14727 () Bool)

(assert (=> d!14727 (= c!9638 (and ((_ is Cons!1451) lt!29054) (= (_1!1052 (h!2035 lt!29054)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!14727 (= (getValueByKey!131 lt!29054 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) e!44682)))

(declare-fun b!68232 () Bool)

(assert (=> b!68232 (= e!44683 None!135)))

(declare-fun b!68230 () Bool)

(assert (=> b!68230 (= e!44682 e!44683)))

(declare-fun c!9639 () Bool)

(assert (=> b!68230 (= c!9639 (and ((_ is Cons!1451) lt!29054) (not (= (_1!1052 (h!2035 lt!29054)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (= (and d!14727 c!9638) b!68229))

(assert (= (and d!14727 (not c!9638)) b!68230))

(assert (= (and b!68230 c!9639) b!68231))

(assert (= (and b!68230 (not c!9639)) b!68232))

(declare-fun m!64163 () Bool)

(assert (=> b!68231 m!64163))

(assert (=> d!13887 d!14727))

(declare-fun d!14729 () Bool)

(assert (=> d!14729 (= (getValueByKey!131 lt!29054 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (Some!136 (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun lt!29774 () Unit!1824)

(assert (=> d!14729 (= lt!29774 (choose!380 lt!29054 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun e!44684 () Bool)

(assert (=> d!14729 e!44684))

(declare-fun res!36747 () Bool)

(assert (=> d!14729 (=> (not res!36747) (not e!44684))))

(assert (=> d!14729 (= res!36747 (isStrictlySorted!276 lt!29054))))

(assert (=> d!14729 (= (lemmaContainsTupThenGetReturnValue!48 lt!29054 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!29774)))

(declare-fun b!68233 () Bool)

(declare-fun res!36748 () Bool)

(assert (=> b!68233 (=> (not res!36748) (not e!44684))))

(assert (=> b!68233 (= res!36748 (containsKey!134 lt!29054 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68234 () Bool)

(assert (=> b!68234 (= e!44684 (contains!709 lt!29054 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (= (and d!14729 res!36747) b!68233))

(assert (= (and b!68233 res!36748) b!68234))

(assert (=> d!14729 m!61695))

(declare-fun m!64165 () Bool)

(assert (=> d!14729 m!64165))

(declare-fun m!64167 () Bool)

(assert (=> d!14729 m!64167))

(declare-fun m!64169 () Bool)

(assert (=> b!68233 m!64169))

(declare-fun m!64171 () Bool)

(assert (=> b!68234 m!64171))

(assert (=> d!13887 d!14729))

(declare-fun b!68235 () Bool)

(declare-fun e!44689 () List!1455)

(declare-fun call!5740 () List!1455)

(assert (=> b!68235 (= e!44689 call!5740)))

(declare-fun b!68236 () Bool)

(declare-fun e!44685 () List!1455)

(declare-fun e!44687 () List!1455)

(assert (=> b!68236 (= e!44685 e!44687)))

(declare-fun c!9642 () Bool)

(assert (=> b!68236 (= c!9642 (and ((_ is Cons!1451) (toList!705 lt!28527)) (= (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!68237 () Bool)

(declare-fun res!36749 () Bool)

(declare-fun e!44688 () Bool)

(assert (=> b!68237 (=> (not res!36749) (not e!44688))))

(declare-fun lt!29775 () List!1455)

(assert (=> b!68237 (= res!36749 (containsKey!134 lt!29775 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun bm!5737 () Bool)

(declare-fun call!5742 () List!1455)

(assert (=> bm!5737 (= call!5740 call!5742)))

(declare-fun b!68238 () Bool)

(declare-fun call!5741 () List!1455)

(assert (=> b!68238 (= e!44685 call!5741)))

(declare-fun c!9643 () Bool)

(declare-fun b!68239 () Bool)

(assert (=> b!68239 (= c!9643 (and ((_ is Cons!1451) (toList!705 lt!28527)) (bvsgt (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> b!68239 (= e!44687 e!44689)))

(declare-fun b!68240 () Bool)

(declare-fun e!44686 () List!1455)

(assert (=> b!68240 (= e!44686 (ite c!9642 (t!4929 (toList!705 lt!28527)) (ite c!9643 (Cons!1451 (h!2035 (toList!705 lt!28527)) (t!4929 (toList!705 lt!28527))) Nil!1452)))))

(declare-fun d!14731 () Bool)

(assert (=> d!14731 e!44688))

(declare-fun res!36750 () Bool)

(assert (=> d!14731 (=> (not res!36750) (not e!44688))))

(assert (=> d!14731 (= res!36750 (isStrictlySorted!276 lt!29775))))

(assert (=> d!14731 (= lt!29775 e!44685)))

(declare-fun c!9640 () Bool)

(assert (=> d!14731 (= c!9640 (and ((_ is Cons!1451) (toList!705 lt!28527)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28527))) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!14731 (isStrictlySorted!276 (toList!705 lt!28527))))

(assert (=> d!14731 (= (insertStrictlySorted!51 (toList!705 lt!28527) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!29775)))

(declare-fun b!68241 () Bool)

(assert (=> b!68241 (= e!44686 (insertStrictlySorted!51 (t!4929 (toList!705 lt!28527)) (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68242 () Bool)

(assert (=> b!68242 (= e!44687 call!5742)))

(declare-fun bm!5738 () Bool)

(assert (=> bm!5738 (= call!5742 call!5741)))

(declare-fun b!68243 () Bool)

(assert (=> b!68243 (= e!44689 call!5740)))

(declare-fun bm!5739 () Bool)

(assert (=> bm!5739 (= call!5741 ($colon$colon!62 e!44686 (ite c!9640 (h!2035 (toList!705 lt!28527)) (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(declare-fun c!9641 () Bool)

(assert (=> bm!5739 (= c!9641 c!9640)))

(declare-fun b!68244 () Bool)

(assert (=> b!68244 (= e!44688 (contains!709 lt!29775 (tuple2!2083 (_1!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)) (_2!1052 (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (= (and d!14731 c!9640) b!68238))

(assert (= (and d!14731 (not c!9640)) b!68236))

(assert (= (and b!68236 c!9642) b!68242))

(assert (= (and b!68236 (not c!9642)) b!68239))

(assert (= (and b!68239 c!9643) b!68235))

(assert (= (and b!68239 (not c!9643)) b!68243))

(assert (= (or b!68235 b!68243) bm!5737))

(assert (= (or b!68242 bm!5737) bm!5738))

(assert (= (or b!68238 bm!5738) bm!5739))

(assert (= (and bm!5739 c!9641) b!68241))

(assert (= (and bm!5739 (not c!9641)) b!68240))

(assert (= (and d!14731 res!36750) b!68237))

(assert (= (and b!68237 res!36749) b!68244))

(declare-fun m!64173 () Bool)

(assert (=> bm!5739 m!64173))

(declare-fun m!64175 () Bool)

(assert (=> b!68241 m!64175))

(declare-fun m!64177 () Bool)

(assert (=> b!68237 m!64177))

(declare-fun m!64179 () Bool)

(assert (=> b!68244 m!64179))

(declare-fun m!64181 () Bool)

(assert (=> d!14731 m!64181))

(assert (=> d!14731 m!61843))

(assert (=> d!13887 d!14731))

(declare-fun d!14733 () Bool)

(declare-fun e!44690 () Bool)

(assert (=> d!14733 e!44690))

(declare-fun res!36751 () Bool)

(assert (=> d!14733 (=> res!36751 e!44690)))

(declare-fun lt!29776 () Bool)

(assert (=> d!14733 (= res!36751 (not lt!29776))))

(declare-fun lt!29779 () Bool)

(assert (=> d!14733 (= lt!29776 lt!29779)))

(declare-fun lt!29778 () Unit!1824)

(declare-fun e!44691 () Unit!1824)

(assert (=> d!14733 (= lt!29778 e!44691)))

(declare-fun c!9644 () Bool)

(assert (=> d!14733 (= c!9644 lt!29779)))

(assert (=> d!14733 (= lt!29779 (containsKey!134 (toList!705 lt!29083) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14733 (= (contains!705 lt!29083 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29776)))

(declare-fun b!68245 () Bool)

(declare-fun lt!29777 () Unit!1824)

(assert (=> b!68245 (= e!44691 lt!29777)))

(assert (=> b!68245 (= lt!29777 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29083) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68245 (isDefined!83 (getValueByKey!131 (toList!705 lt!29083) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68246 () Bool)

(declare-fun Unit!1902 () Unit!1824)

(assert (=> b!68246 (= e!44691 Unit!1902)))

(declare-fun b!68247 () Bool)

(assert (=> b!68247 (= e!44690 (isDefined!83 (getValueByKey!131 (toList!705 lt!29083) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14733 c!9644) b!68245))

(assert (= (and d!14733 (not c!9644)) b!68246))

(assert (= (and d!14733 (not res!36751)) b!68247))

(declare-fun m!64183 () Bool)

(assert (=> d!14733 m!64183))

(declare-fun m!64185 () Bool)

(assert (=> b!68245 m!64185))

(assert (=> b!68245 m!62549))

(assert (=> b!68245 m!62549))

(declare-fun m!64187 () Bool)

(assert (=> b!68245 m!64187))

(assert (=> b!68247 m!62549))

(assert (=> b!68247 m!62549))

(assert (=> b!68247 m!64187))

(assert (=> bm!5595 d!14733))

(declare-fun d!14735 () Bool)

(declare-fun lt!29780 () Bool)

(assert (=> d!14735 (= lt!29780 (select (content!72 (toList!705 lt!28988)) (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun e!44693 () Bool)

(assert (=> d!14735 (= lt!29780 e!44693)))

(declare-fun res!36753 () Bool)

(assert (=> d!14735 (=> (not res!36753) (not e!44693))))

(assert (=> d!14735 (= res!36753 ((_ is Cons!1451) (toList!705 lt!28988)))))

(assert (=> d!14735 (= (contains!709 (toList!705 lt!28988) (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) lt!29780)))

(declare-fun b!68248 () Bool)

(declare-fun e!44692 () Bool)

(assert (=> b!68248 (= e!44693 e!44692)))

(declare-fun res!36752 () Bool)

(assert (=> b!68248 (=> res!36752 e!44692)))

(assert (=> b!68248 (= res!36752 (= (h!2035 (toList!705 lt!28988)) (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(declare-fun b!68249 () Bool)

(assert (=> b!68249 (= e!44692 (contains!709 (t!4929 (toList!705 lt!28988)) (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))

(assert (= (and d!14735 res!36753) b!68248))

(assert (= (and b!68248 (not res!36752)) b!68249))

(declare-fun m!64189 () Bool)

(assert (=> d!14735 m!64189))

(declare-fun m!64191 () Bool)

(assert (=> d!14735 m!64191))

(declare-fun m!64193 () Bool)

(assert (=> b!68249 m!64193))

(assert (=> b!66814 d!14735))

(declare-fun d!14737 () Bool)

(declare-fun e!44694 () Bool)

(assert (=> d!14737 e!44694))

(declare-fun res!36754 () Bool)

(assert (=> d!14737 (=> res!36754 e!44694)))

(declare-fun lt!29781 () Bool)

(assert (=> d!14737 (= res!36754 (not lt!29781))))

(declare-fun lt!29784 () Bool)

(assert (=> d!14737 (= lt!29781 lt!29784)))

(declare-fun lt!29783 () Unit!1824)

(declare-fun e!44695 () Unit!1824)

(assert (=> d!14737 (= lt!29783 e!44695)))

(declare-fun c!9645 () Bool)

(assert (=> d!14737 (= c!9645 lt!29784)))

(assert (=> d!14737 (= lt!29784 (containsKey!134 (toList!705 lt!28661) lt!28665))))

(assert (=> d!14737 (= (contains!705 lt!28661 lt!28665) lt!29781)))

(declare-fun b!68250 () Bool)

(declare-fun lt!29782 () Unit!1824)

(assert (=> b!68250 (= e!44695 lt!29782)))

(assert (=> b!68250 (= lt!29782 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28661) lt!28665))))

(assert (=> b!68250 (isDefined!83 (getValueByKey!131 (toList!705 lt!28661) lt!28665))))

(declare-fun b!68251 () Bool)

(declare-fun Unit!1903 () Unit!1824)

(assert (=> b!68251 (= e!44695 Unit!1903)))

(declare-fun b!68252 () Bool)

(assert (=> b!68252 (= e!44694 (isDefined!83 (getValueByKey!131 (toList!705 lt!28661) lt!28665)))))

(assert (= (and d!14737 c!9645) b!68250))

(assert (= (and d!14737 (not c!9645)) b!68251))

(assert (= (and d!14737 (not res!36754)) b!68252))

(declare-fun m!64195 () Bool)

(assert (=> d!14737 m!64195))

(declare-fun m!64197 () Bool)

(assert (=> b!68250 m!64197))

(assert (=> b!68250 m!61399))

(assert (=> b!68250 m!61399))

(declare-fun m!64199 () Bool)

(assert (=> b!68250 m!64199))

(assert (=> b!68252 m!61399))

(assert (=> b!68252 m!61399))

(assert (=> b!68252 m!64199))

(assert (=> d!13837 d!14737))

(assert (=> d!13837 d!13813))

(declare-fun d!14739 () Bool)

(assert (=> d!14739 (= (apply!72 (+!86 lt!28661 (tuple2!2083 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!28665) (apply!72 lt!28661 lt!28665))))

(assert (=> d!14739 true))

(declare-fun _$34!788 () Unit!1824)

(assert (=> d!14739 (= (choose!376 lt!28661 lt!28673 (minValue!2054 (v!2478 (underlying!250 thiss!992))) lt!28665) _$34!788)))

(declare-fun bs!2957 () Bool)

(assert (= bs!2957 d!14739))

(assert (=> bs!2957 m!61031))

(assert (=> bs!2957 m!61031))

(assert (=> bs!2957 m!61053))

(assert (=> bs!2957 m!61057))

(assert (=> d!13837 d!14739))

(assert (=> d!13837 d!13821))

(assert (=> d!13837 d!13829))

(declare-fun b!68255 () Bool)

(declare-fun e!44697 () Option!137)

(assert (=> b!68255 (= e!44697 (getValueByKey!131 (t!4929 (toList!705 lt!29064)) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))

(declare-fun b!68253 () Bool)

(declare-fun e!44696 () Option!137)

(assert (=> b!68253 (= e!44696 (Some!136 (_2!1052 (h!2035 (toList!705 lt!29064)))))))

(declare-fun d!14741 () Bool)

(declare-fun c!9646 () Bool)

(assert (=> d!14741 (= c!9646 (and ((_ is Cons!1451) (toList!705 lt!29064)) (= (_1!1052 (h!2035 (toList!705 lt!29064))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))))

(assert (=> d!14741 (= (getValueByKey!131 (toList!705 lt!29064) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) e!44696)))

(declare-fun b!68256 () Bool)

(assert (=> b!68256 (= e!44697 None!135)))

(declare-fun b!68254 () Bool)

(assert (=> b!68254 (= e!44696 e!44697)))

(declare-fun c!9647 () Bool)

(assert (=> b!68254 (= c!9647 (and ((_ is Cons!1451) (toList!705 lt!29064)) (not (= (_1!1052 (h!2035 (toList!705 lt!29064))) (_1!1052 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))))))

(assert (= (and d!14741 c!9646) b!68253))

(assert (= (and d!14741 (not c!9646)) b!68254))

(assert (= (and b!68254 c!9647) b!68255))

(assert (= (and b!68254 (not c!9647)) b!68256))

(declare-fun m!64201 () Bool)

(assert (=> b!68255 m!64201))

(assert (=> b!66915 d!14741))

(declare-fun d!14743 () Bool)

(assert (=> d!14743 (isDefined!83 (getValueByKey!131 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun lt!29785 () Unit!1824)

(assert (=> d!14743 (= lt!29785 (choose!379 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun e!44698 () Bool)

(assert (=> d!14743 e!44698))

(declare-fun res!36755 () Bool)

(assert (=> d!14743 (=> (not res!36755) (not e!44698))))

(assert (=> d!14743 (= res!36755 (isStrictlySorted!276 (toList!705 call!5548)))))

(assert (=> d!14743 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29785)))

(declare-fun b!68257 () Bool)

(assert (=> b!68257 (= e!44698 (containsKey!134 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14743 res!36755) b!68257))

(assert (=> d!14743 m!60827))

(assert (=> d!14743 m!62015))

(assert (=> d!14743 m!62015))

(assert (=> d!14743 m!62017))

(assert (=> d!14743 m!60827))

(declare-fun m!64203 () Bool)

(assert (=> d!14743 m!64203))

(declare-fun m!64205 () Bool)

(assert (=> d!14743 m!64205))

(assert (=> b!68257 m!60827))

(assert (=> b!68257 m!62011))

(assert (=> b!67104 d!14743))

(assert (=> b!67104 d!14501))

(assert (=> b!67104 d!14503))

(assert (=> b!66817 d!14077))

(assert (=> b!66817 d!14079))

(assert (=> b!66670 d!14091))

(assert (=> b!66670 d!14093))

(assert (=> b!67087 d!14397))

(assert (=> b!66904 d!14163))

(declare-fun d!14745 () Bool)

(assert (=> d!14745 (isDefined!83 (getValueByKey!131 (toList!705 lt!28687) (_1!1052 lt!28520)))))

(declare-fun lt!29786 () Unit!1824)

(assert (=> d!14745 (= lt!29786 (choose!379 (toList!705 lt!28687) (_1!1052 lt!28520)))))

(declare-fun e!44699 () Bool)

(assert (=> d!14745 e!44699))

(declare-fun res!36756 () Bool)

(assert (=> d!14745 (=> (not res!36756) (not e!44699))))

(assert (=> d!14745 (= res!36756 (isStrictlySorted!276 (toList!705 lt!28687)))))

(assert (=> d!14745 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28687) (_1!1052 lt!28520)) lt!29786)))

(declare-fun b!68258 () Bool)

(assert (=> b!68258 (= e!44699 (containsKey!134 (toList!705 lt!28687) (_1!1052 lt!28520)))))

(assert (= (and d!14745 res!36756) b!68258))

(assert (=> d!14745 m!61079))

(assert (=> d!14745 m!61079))

(assert (=> d!14745 m!62047))

(declare-fun m!64207 () Bool)

(assert (=> d!14745 m!64207))

(declare-fun m!64209 () Bool)

(assert (=> d!14745 m!64209))

(assert (=> b!68258 m!62043))

(assert (=> b!67115 d!14745))

(assert (=> b!67115 d!14549))

(assert (=> b!67115 d!13881))

(declare-fun d!14747 () Bool)

(declare-fun e!44700 () Bool)

(assert (=> d!14747 e!44700))

(declare-fun res!36757 () Bool)

(assert (=> d!14747 (=> res!36757 e!44700)))

(declare-fun lt!29787 () Bool)

(assert (=> d!14747 (= res!36757 (not lt!29787))))

(declare-fun lt!29790 () Bool)

(assert (=> d!14747 (= lt!29787 lt!29790)))

(declare-fun lt!29789 () Unit!1824)

(declare-fun e!44701 () Unit!1824)

(assert (=> d!14747 (= lt!29789 e!44701)))

(declare-fun c!9648 () Bool)

(assert (=> d!14747 (= c!9648 lt!29790)))

(assert (=> d!14747 (= lt!29790 (containsKey!134 (toList!705 (map!1141 (_2!1051 lt!28883))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> d!14747 (= (contains!705 (map!1141 (_2!1051 lt!28883)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) lt!29787)))

(declare-fun b!68259 () Bool)

(declare-fun lt!29788 () Unit!1824)

(assert (=> b!68259 (= e!44701 lt!29788)))

(assert (=> b!68259 (= lt!29788 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 (map!1141 (_2!1051 lt!28883))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (=> b!68259 (isDefined!83 (getValueByKey!131 (toList!705 (map!1141 (_2!1051 lt!28883))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(declare-fun b!68260 () Bool)

(declare-fun Unit!1904 () Unit!1824)

(assert (=> b!68260 (= e!44701 Unit!1904)))

(declare-fun b!68261 () Bool)

(assert (=> b!68261 (= e!44700 (isDefined!83 (getValueByKey!131 (toList!705 (map!1141 (_2!1051 lt!28883))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (= (and d!14747 c!9648) b!68259))

(assert (= (and d!14747 (not c!9648)) b!68260))

(assert (= (and d!14747 (not res!36757)) b!68261))

(assert (=> d!14747 m!60827))

(declare-fun m!64211 () Bool)

(assert (=> d!14747 m!64211))

(assert (=> b!68259 m!60827))

(declare-fun m!64213 () Bool)

(assert (=> b!68259 m!64213))

(assert (=> b!68259 m!60827))

(declare-fun m!64215 () Bool)

(assert (=> b!68259 m!64215))

(assert (=> b!68259 m!64215))

(declare-fun m!64217 () Bool)

(assert (=> b!68259 m!64217))

(assert (=> b!68261 m!60827))

(assert (=> b!68261 m!64215))

(assert (=> b!68261 m!64215))

(assert (=> b!68261 m!64217))

(assert (=> b!66707 d!14747))

(assert (=> b!66707 d!14615))

(declare-fun d!14749 () Bool)

(assert (=> d!14749 (isDefined!83 (getValueByKey!131 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!29791 () Unit!1824)

(assert (=> d!14749 (= lt!29791 (choose!379 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!44702 () Bool)

(assert (=> d!14749 e!44702))

(declare-fun res!36758 () Bool)

(assert (=> d!14749 (=> (not res!36758) (not e!44702))))

(assert (=> d!14749 (= res!36758 (isStrictlySorted!276 (toList!705 lt!28707)))))

(assert (=> d!14749 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!29791)))

(declare-fun b!68262 () Bool)

(assert (=> b!68262 (= e!44702 (containsKey!134 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14749 res!36758) b!68262))

(assert (=> d!14749 m!61005))

(assert (=> d!14749 m!61521))

(assert (=> d!14749 m!61521))

(assert (=> d!14749 m!62029))

(assert (=> d!14749 m!61005))

(declare-fun m!64219 () Bool)

(assert (=> d!14749 m!64219))

(assert (=> d!14749 m!62323))

(assert (=> b!68262 m!61005))

(assert (=> b!68262 m!62025))

(assert (=> b!67110 d!14749))

(assert (=> b!67110 d!14555))

(assert (=> b!67110 d!14301))

(declare-fun b!68265 () Bool)

(declare-fun e!44704 () Option!137)

(assert (=> b!68265 (= e!44704 (getValueByKey!131 (t!4929 (t!4929 lt!28721)) (_1!1052 lt!28528)))))

(declare-fun b!68263 () Bool)

(declare-fun e!44703 () Option!137)

(assert (=> b!68263 (= e!44703 (Some!136 (_2!1052 (h!2035 (t!4929 lt!28721)))))))

(declare-fun d!14751 () Bool)

(declare-fun c!9649 () Bool)

(assert (=> d!14751 (= c!9649 (and ((_ is Cons!1451) (t!4929 lt!28721)) (= (_1!1052 (h!2035 (t!4929 lt!28721))) (_1!1052 lt!28528))))))

(assert (=> d!14751 (= (getValueByKey!131 (t!4929 lt!28721) (_1!1052 lt!28528)) e!44703)))

(declare-fun b!68266 () Bool)

(assert (=> b!68266 (= e!44704 None!135)))

(declare-fun b!68264 () Bool)

(assert (=> b!68264 (= e!44703 e!44704)))

(declare-fun c!9650 () Bool)

(assert (=> b!68264 (= c!9650 (and ((_ is Cons!1451) (t!4929 lt!28721)) (not (= (_1!1052 (h!2035 (t!4929 lt!28721))) (_1!1052 lt!28528)))))))

(assert (= (and d!14751 c!9649) b!68263))

(assert (= (and d!14751 (not c!9649)) b!68264))

(assert (= (and b!68264 c!9650) b!68265))

(assert (= (and b!68264 (not c!9650)) b!68266))

(declare-fun m!64221 () Bool)

(assert (=> b!68265 m!64221))

(assert (=> b!67068 d!14751))

(declare-fun d!14753 () Bool)

(assert (=> d!14753 (= (get!1127 (getValueByKey!131 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2484 (getValueByKey!131 (toList!705 lt!28667) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13883 d!14753))

(assert (=> d!13883 d!14369))

(declare-fun d!14755 () Bool)

(declare-fun c!9651 () Bool)

(assert (=> d!14755 (= c!9651 ((_ is Nil!1452) (toList!705 lt!28691)))))

(declare-fun e!44705 () (InoxSet tuple2!2082))

(assert (=> d!14755 (= (content!72 (toList!705 lt!28691)) e!44705)))

(declare-fun b!68267 () Bool)

(assert (=> b!68267 (= e!44705 ((as const (Array tuple2!2082 Bool)) false))))

(declare-fun b!68268 () Bool)

(assert (=> b!68268 (= e!44705 ((_ map or) (store ((as const (Array tuple2!2082 Bool)) false) (h!2035 (toList!705 lt!28691)) true) (content!72 (t!4929 (toList!705 lt!28691)))))))

(assert (= (and d!14755 c!9651) b!68267))

(assert (= (and d!14755 (not c!9651)) b!68268))

(declare-fun m!64223 () Bool)

(assert (=> b!68268 m!64223))

(assert (=> b!68268 m!62385))

(assert (=> d!13847 d!14755))

(declare-fun d!14757 () Bool)

(assert (=> d!14757 (contains!705 (getCurrentListMap!403 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2146 newMap!16)) (select (arr!1826 (_keys!3786 newMap!16)) (index!3037 lt!28796)))))

(assert (=> d!14757 true))

(declare-fun _$16!87 () Unit!1824)

(assert (=> d!14757 (= (choose!382 (_keys!3786 newMap!16) lt!28812 (mask!6081 newMap!16) (extraKeys!2017 newMap!16) (zeroValue!2054 newMap!16) (minValue!2054 newMap!16) (index!3037 lt!28796) (defaultEntry!2146 newMap!16)) _$16!87)))

(declare-fun bs!2958 () Bool)

(assert (= bs!2958 d!14757))

(assert (=> bs!2958 m!61179))

(assert (=> bs!2958 m!61183))

(assert (=> bs!2958 m!61179))

(assert (=> bs!2958 m!61183))

(assert (=> bs!2958 m!62005))

(assert (=> d!13963 d!14757))

(assert (=> d!13963 d!14103))

(declare-fun e!44707 () Option!137)

(declare-fun b!68271 () Bool)

(assert (=> b!68271 (= e!44707 (getValueByKey!131 (t!4929 (toList!705 lt!28988)) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!68269 () Bool)

(declare-fun e!44706 () Option!137)

(assert (=> b!68269 (= e!44706 (Some!136 (_2!1052 (h!2035 (toList!705 lt!28988)))))))

(declare-fun c!9652 () Bool)

(declare-fun d!14759 () Bool)

(assert (=> d!14759 (= c!9652 (and ((_ is Cons!1451) (toList!705 lt!28988)) (= (_1!1052 (h!2035 (toList!705 lt!28988))) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (=> d!14759 (= (getValueByKey!131 (toList!705 lt!28988) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) e!44706)))

(declare-fun b!68272 () Bool)

(assert (=> b!68272 (= e!44707 None!135)))

(declare-fun b!68270 () Bool)

(assert (=> b!68270 (= e!44706 e!44707)))

(declare-fun c!9653 () Bool)

(assert (=> b!68270 (= c!9653 (and ((_ is Cons!1451) (toList!705 lt!28988)) (not (= (_1!1052 (h!2035 (toList!705 lt!28988))) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))))

(assert (= (and d!14759 c!9652) b!68269))

(assert (= (and d!14759 (not c!9652)) b!68270))

(assert (= (and b!68270 c!9653) b!68271))

(assert (= (and b!68270 (not c!9653)) b!68272))

(declare-fun m!64225 () Bool)

(assert (=> b!68271 m!64225))

(assert (=> b!66813 d!14759))

(declare-fun b!68275 () Bool)

(declare-fun e!44709 () Option!137)

(assert (=> b!68275 (= e!44709 (getValueByKey!131 (t!4929 (t!4929 (toList!705 lt!28723))) (_1!1052 lt!28528)))))

(declare-fun b!68273 () Bool)

(declare-fun e!44708 () Option!137)

(assert (=> b!68273 (= e!44708 (Some!136 (_2!1052 (h!2035 (t!4929 (toList!705 lt!28723))))))))

(declare-fun d!14761 () Bool)

(declare-fun c!9654 () Bool)

(assert (=> d!14761 (= c!9654 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28723))) (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28723)))) (_1!1052 lt!28528))))))

(assert (=> d!14761 (= (getValueByKey!131 (t!4929 (toList!705 lt!28723)) (_1!1052 lt!28528)) e!44708)))

(declare-fun b!68276 () Bool)

(assert (=> b!68276 (= e!44709 None!135)))

(declare-fun b!68274 () Bool)

(assert (=> b!68274 (= e!44708 e!44709)))

(declare-fun c!9655 () Bool)

(assert (=> b!68274 (= c!9655 (and ((_ is Cons!1451) (t!4929 (toList!705 lt!28723))) (not (= (_1!1052 (h!2035 (t!4929 (toList!705 lt!28723)))) (_1!1052 lt!28528)))))))

(assert (= (and d!14761 c!9654) b!68273))

(assert (= (and d!14761 (not c!9654)) b!68274))

(assert (= (and b!68274 c!9655) b!68275))

(assert (= (and b!68274 (not c!9655)) b!68276))

(declare-fun m!64227 () Bool)

(assert (=> b!68275 m!64227))

(assert (=> b!67042 d!14761))

(declare-fun d!14763 () Bool)

(declare-fun e!44710 () Bool)

(assert (=> d!14763 e!44710))

(declare-fun res!36759 () Bool)

(assert (=> d!14763 (=> res!36759 e!44710)))

(declare-fun lt!29792 () Bool)

(assert (=> d!14763 (= res!36759 (not lt!29792))))

(declare-fun lt!29795 () Bool)

(assert (=> d!14763 (= lt!29792 lt!29795)))

(declare-fun lt!29794 () Unit!1824)

(declare-fun e!44711 () Unit!1824)

(assert (=> d!14763 (= lt!29794 e!44711)))

(declare-fun c!9656 () Bool)

(assert (=> d!14763 (= c!9656 lt!29795)))

(assert (=> d!14763 (= lt!29795 (containsKey!134 (toList!705 lt!29006) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!14763 (= (contains!705 lt!29006 (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)) lt!29792)))

(declare-fun b!68277 () Bool)

(declare-fun lt!29793 () Unit!1824)

(assert (=> b!68277 (= e!44711 lt!29793)))

(assert (=> b!68277 (= lt!29793 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29006) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!68277 (isDefined!83 (getValueByKey!131 (toList!705 lt!29006) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!68278 () Bool)

(declare-fun Unit!1905 () Unit!1824)

(assert (=> b!68278 (= e!44711 Unit!1905)))

(declare-fun b!68279 () Bool)

(assert (=> b!68279 (= e!44710 (isDefined!83 (getValueByKey!131 (toList!705 lt!29006) (select (arr!1826 (_keys!3786 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!14763 c!9656) b!68277))

(assert (= (and d!14763 (not c!9656)) b!68278))

(assert (= (and d!14763 (not res!36759)) b!68279))

(assert (=> d!14763 m!61431))

(declare-fun m!64229 () Bool)

(assert (=> d!14763 m!64229))

(assert (=> b!68277 m!61431))

(declare-fun m!64231 () Bool)

(assert (=> b!68277 m!64231))

(assert (=> b!68277 m!61431))

(assert (=> b!68277 m!62771))

(assert (=> b!68277 m!62771))

(declare-fun m!64233 () Bool)

(assert (=> b!68277 m!64233))

(assert (=> b!68279 m!61431))

(assert (=> b!68279 m!62771))

(assert (=> b!68279 m!62771))

(assert (=> b!68279 m!64233))

(assert (=> b!66837 d!14763))

(declare-fun d!14765 () Bool)

(assert (=> d!14765 (= (isEmpty!314 (toList!705 lt!28707)) ((_ is Nil!1452) (toList!705 lt!28707)))))

(assert (=> d!13845 d!14765))

(declare-fun d!14767 () Bool)

(assert (=> d!14767 (= (get!1127 (getValueByKey!131 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2484 (getValueByKey!131 (toList!705 lt!28667) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!13919 d!14767))

(assert (=> d!13919 d!14093))

(declare-fun d!14769 () Bool)

(declare-fun res!36760 () Bool)

(declare-fun e!44712 () Bool)

(assert (=> d!14769 (=> res!36760 e!44712)))

(assert (=> d!14769 (= res!36760 (and ((_ is Cons!1451) (toList!705 call!5542)) (= (_1!1052 (h!2035 (toList!705 call!5542))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!14769 (= (containsKey!134 (toList!705 call!5542) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44712)))

(declare-fun b!68280 () Bool)

(declare-fun e!44713 () Bool)

(assert (=> b!68280 (= e!44712 e!44713)))

(declare-fun res!36761 () Bool)

(assert (=> b!68280 (=> (not res!36761) (not e!44713))))

(assert (=> b!68280 (= res!36761 (and (or (not ((_ is Cons!1451) (toList!705 call!5542))) (bvsle (_1!1052 (h!2035 (toList!705 call!5542))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))) ((_ is Cons!1451) (toList!705 call!5542)) (bvslt (_1!1052 (h!2035 (toList!705 call!5542))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun b!68281 () Bool)

(assert (=> b!68281 (= e!44713 (containsKey!134 (t!4929 (toList!705 call!5542)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14769 (not res!36760)) b!68280))

(assert (= (and b!68280 res!36761) b!68281))

(assert (=> b!68281 m!60827))

(declare-fun m!64235 () Bool)

(assert (=> b!68281 m!64235))

(assert (=> d!13915 d!14769))

(declare-fun d!14771 () Bool)

(declare-fun res!36762 () Bool)

(declare-fun e!44714 () Bool)

(assert (=> d!14771 (=> res!36762 e!44714)))

(assert (=> d!14771 (= res!36762 (and ((_ is Cons!1451) (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (= (_1!1052 (h!2035 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28669)))))

(assert (=> d!14771 (= (containsKey!134 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))) lt!28669) e!44714)))

(declare-fun b!68282 () Bool)

(declare-fun e!44715 () Bool)

(assert (=> b!68282 (= e!44714 e!44715)))

(declare-fun res!36763 () Bool)

(assert (=> b!68282 (=> (not res!36763) (not e!44715))))

(assert (=> b!68282 (= res!36763 (and (or (not ((_ is Cons!1451) (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) (bvsle (_1!1052 (h!2035 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28669)) ((_ is Cons!1451) (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) (bvslt (_1!1052 (h!2035 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992)))))))) lt!28669)))))

(declare-fun b!68283 () Bool)

(assert (=> b!68283 (= e!44715 (containsKey!134 (t!4929 (toList!705 (+!86 lt!28666 (tuple2!2083 lt!28671 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))) lt!28669))))

(assert (= (and d!14771 (not res!36762)) b!68282))

(assert (= (and b!68282 res!36763) b!68283))

(declare-fun m!64237 () Bool)

(assert (=> b!68283 m!64237))

(assert (=> d!13811 d!14771))

(declare-fun d!14773 () Bool)

(declare-fun e!44716 () Bool)

(assert (=> d!14773 e!44716))

(declare-fun res!36764 () Bool)

(assert (=> d!14773 (=> res!36764 e!44716)))

(declare-fun lt!29796 () Bool)

(assert (=> d!14773 (= res!36764 (not lt!29796))))

(declare-fun lt!29799 () Bool)

(assert (=> d!14773 (= lt!29796 lt!29799)))

(declare-fun lt!29798 () Unit!1824)

(declare-fun e!44717 () Unit!1824)

(assert (=> d!14773 (= lt!29798 e!44717)))

(declare-fun c!9657 () Bool)

(assert (=> d!14773 (= c!9657 lt!29799)))

(assert (=> d!14773 (= lt!29799 (containsKey!134 (toList!705 lt!28988) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> d!14773 (= (contains!705 lt!28988 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) lt!29796)))

(declare-fun b!68284 () Bool)

(declare-fun lt!29797 () Unit!1824)

(assert (=> b!68284 (= e!44717 lt!29797)))

(assert (=> b!68284 (= lt!29797 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28988) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(assert (=> b!68284 (isDefined!83 (getValueByKey!131 (toList!705 lt!28988) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!68285 () Bool)

(declare-fun Unit!1906 () Unit!1824)

(assert (=> b!68285 (= e!44717 Unit!1906)))

(declare-fun b!68286 () Bool)

(assert (=> b!68286 (= e!44716 (isDefined!83 (getValueByKey!131 (toList!705 lt!28988) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (= (and d!14773 c!9657) b!68284))

(assert (= (and d!14773 (not c!9657)) b!68285))

(assert (= (and d!14773 (not res!36764)) b!68286))

(declare-fun m!64239 () Bool)

(assert (=> d!14773 m!64239))

(declare-fun m!64241 () Bool)

(assert (=> b!68284 m!64241))

(assert (=> b!68284 m!61537))

(assert (=> b!68284 m!61537))

(declare-fun m!64243 () Bool)

(assert (=> b!68284 m!64243))

(assert (=> b!68286 m!61537))

(assert (=> b!68286 m!61537))

(assert (=> b!68286 m!64243))

(assert (=> d!13863 d!14773))

(declare-fun b!68289 () Bool)

(declare-fun e!44719 () Option!137)

(assert (=> b!68289 (= e!44719 (getValueByKey!131 (t!4929 lt!28986) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!68287 () Bool)

(declare-fun e!44718 () Option!137)

(assert (=> b!68287 (= e!44718 (Some!136 (_2!1052 (h!2035 lt!28986))))))

(declare-fun d!14775 () Bool)

(declare-fun c!9658 () Bool)

(assert (=> d!14775 (= c!9658 (and ((_ is Cons!1451) lt!28986) (= (_1!1052 (h!2035 lt!28986)) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (=> d!14775 (= (getValueByKey!131 lt!28986 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) e!44718)))

(declare-fun b!68290 () Bool)

(assert (=> b!68290 (= e!44719 None!135)))

(declare-fun b!68288 () Bool)

(assert (=> b!68288 (= e!44718 e!44719)))

(declare-fun c!9659 () Bool)

(assert (=> b!68288 (= c!9659 (and ((_ is Cons!1451) lt!28986) (not (= (_1!1052 (h!2035 lt!28986)) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))))

(assert (= (and d!14775 c!9658) b!68287))

(assert (= (and d!14775 (not c!9658)) b!68288))

(assert (= (and b!68288 c!9659) b!68289))

(assert (= (and b!68288 (not c!9659)) b!68290))

(declare-fun m!64245 () Bool)

(assert (=> b!68289 m!64245))

(assert (=> d!13863 d!14775))

(declare-fun d!14777 () Bool)

(assert (=> d!14777 (= (getValueByKey!131 lt!28986 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) (Some!136 (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun lt!29800 () Unit!1824)

(assert (=> d!14777 (= lt!29800 (choose!380 lt!28986 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun e!44720 () Bool)

(assert (=> d!14777 e!44720))

(declare-fun res!36765 () Bool)

(assert (=> d!14777 (=> (not res!36765) (not e!44720))))

(assert (=> d!14777 (= res!36765 (isStrictlySorted!276 lt!28986))))

(assert (=> d!14777 (= (lemmaContainsTupThenGetReturnValue!48 lt!28986 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) lt!29800)))

(declare-fun b!68291 () Bool)

(declare-fun res!36766 () Bool)

(assert (=> b!68291 (=> (not res!36766) (not e!44720))))

(assert (=> b!68291 (= res!36766 (containsKey!134 lt!28986 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!68292 () Bool)

(assert (=> b!68292 (= e!44720 (contains!709 lt!28986 (tuple2!2083 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (= (and d!14777 res!36765) b!68291))

(assert (= (and b!68291 res!36766) b!68292))

(assert (=> d!14777 m!61531))

(declare-fun m!64247 () Bool)

(assert (=> d!14777 m!64247))

(declare-fun m!64249 () Bool)

(assert (=> d!14777 m!64249))

(declare-fun m!64251 () Bool)

(assert (=> b!68291 m!64251))

(declare-fun m!64253 () Bool)

(assert (=> b!68292 m!64253))

(assert (=> d!13863 d!14777))

(declare-fun b!68293 () Bool)

(declare-fun e!44725 () List!1455)

(declare-fun call!5743 () List!1455)

(assert (=> b!68293 (= e!44725 call!5743)))

(declare-fun b!68294 () Bool)

(declare-fun e!44721 () List!1455)

(declare-fun e!44723 () List!1455)

(assert (=> b!68294 (= e!44721 e!44723)))

(declare-fun c!9662 () Bool)

(assert (=> b!68294 (= c!9662 (and ((_ is Cons!1451) (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548))) (= (_1!1052 (h!2035 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548)))) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(declare-fun b!68295 () Bool)

(declare-fun res!36767 () Bool)

(declare-fun e!44724 () Bool)

(assert (=> b!68295 (=> (not res!36767) (not e!44724))))

(declare-fun lt!29801 () List!1455)

(assert (=> b!68295 (= res!36767 (containsKey!134 lt!29801 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun bm!5740 () Bool)

(declare-fun call!5745 () List!1455)

(assert (=> bm!5740 (= call!5743 call!5745)))

(declare-fun b!68296 () Bool)

(declare-fun call!5744 () List!1455)

(assert (=> b!68296 (= e!44721 call!5744)))

(declare-fun b!68297 () Bool)

(declare-fun c!9663 () Bool)

(assert (=> b!68297 (= c!9663 (and ((_ is Cons!1451) (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548))) (bvsgt (_1!1052 (h!2035 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548)))) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (=> b!68297 (= e!44723 e!44725)))

(declare-fun b!68298 () Bool)

(declare-fun e!44722 () List!1455)

(assert (=> b!68298 (= e!44722 (ite c!9662 (t!4929 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548))) (ite c!9663 (Cons!1451 (h!2035 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548))) (t!4929 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548)))) Nil!1452)))))

(declare-fun d!14779 () Bool)

(assert (=> d!14779 e!44724))

(declare-fun res!36768 () Bool)

(assert (=> d!14779 (=> (not res!36768) (not e!44724))))

(assert (=> d!14779 (= res!36768 (isStrictlySorted!276 lt!29801))))

(assert (=> d!14779 (= lt!29801 e!44721)))

(declare-fun c!9660 () Bool)

(assert (=> d!14779 (= c!9660 (and ((_ is Cons!1451) (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548))) (bvslt (_1!1052 (h!2035 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548)))) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (=> d!14779 (isStrictlySorted!276 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548)))))

(assert (=> d!14779 (= (insertStrictlySorted!51 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548)) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))) lt!29801)))

(declare-fun b!68299 () Bool)

(assert (=> b!68299 (= e!44722 (insertStrictlySorted!51 (t!4929 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548))) (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))

(declare-fun b!68300 () Bool)

(assert (=> b!68300 (= e!44723 call!5745)))

(declare-fun bm!5741 () Bool)

(assert (=> bm!5741 (= call!5745 call!5744)))

(declare-fun b!68301 () Bool)

(assert (=> b!68301 (= e!44725 call!5743)))

(declare-fun bm!5742 () Bool)

(assert (=> bm!5742 (= call!5744 ($colon$colon!62 e!44722 (ite c!9660 (h!2035 (toList!705 (ite c!9197 (ite c!9193 call!5547 call!5545) call!5548))) (tuple2!2083 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522)))))))))

(declare-fun c!9661 () Bool)

(assert (=> bm!5742 (= c!9661 c!9660)))

(declare-fun b!68302 () Bool)

(assert (=> b!68302 (= e!44724 (contains!709 lt!29801 (tuple2!2083 (_1!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))) (_2!1052 (ite c!9197 (ite c!9193 (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 lt!28522) (tuple2!2083 #b1000000000000000000000000000000000000000000000000000000000000000 lt!28522)) (tuple2!2083 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) lt!28522))))))))

(assert (= (and d!14779 c!9660) b!68296))

(assert (= (and d!14779 (not c!9660)) b!68294))

(assert (= (and b!68294 c!9662) b!68300))

(assert (= (and b!68294 (not c!9662)) b!68297))

(assert (= (and b!68297 c!9663) b!68293))

(assert (= (and b!68297 (not c!9663)) b!68301))

(assert (= (or b!68293 b!68301) bm!5740))

(assert (= (or b!68300 bm!5740) bm!5741))

(assert (= (or b!68296 bm!5741) bm!5742))

(assert (= (and bm!5742 c!9661) b!68299))

(assert (= (and bm!5742 (not c!9661)) b!68298))

(assert (= (and d!14779 res!36768) b!68295))

(assert (= (and b!68295 res!36767) b!68302))

(declare-fun m!64255 () Bool)

(assert (=> bm!5742 m!64255))

(declare-fun m!64257 () Bool)

(assert (=> b!68299 m!64257))

(declare-fun m!64259 () Bool)

(assert (=> b!68295 m!64259))

(declare-fun m!64261 () Bool)

(assert (=> b!68302 m!64261))

(declare-fun m!64263 () Bool)

(assert (=> d!14779 m!64263))

(declare-fun m!64265 () Bool)

(assert (=> d!14779 m!64265))

(assert (=> d!13863 d!14779))

(declare-fun b!68305 () Bool)

(declare-fun e!44727 () Option!137)

(assert (=> b!68305 (= e!44727 (getValueByKey!131 (t!4929 (t!4929 lt!28685)) (_1!1052 lt!28520)))))

(declare-fun b!68303 () Bool)

(declare-fun e!44726 () Option!137)

(assert (=> b!68303 (= e!44726 (Some!136 (_2!1052 (h!2035 (t!4929 lt!28685)))))))

(declare-fun d!14781 () Bool)

(declare-fun c!9664 () Bool)

(assert (=> d!14781 (= c!9664 (and ((_ is Cons!1451) (t!4929 lt!28685)) (= (_1!1052 (h!2035 (t!4929 lt!28685))) (_1!1052 lt!28520))))))

(assert (=> d!14781 (= (getValueByKey!131 (t!4929 lt!28685) (_1!1052 lt!28520)) e!44726)))

(declare-fun b!68306 () Bool)

(assert (=> b!68306 (= e!44727 None!135)))

(declare-fun b!68304 () Bool)

(assert (=> b!68304 (= e!44726 e!44727)))

(declare-fun c!9665 () Bool)

(assert (=> b!68304 (= c!9665 (and ((_ is Cons!1451) (t!4929 lt!28685)) (not (= (_1!1052 (h!2035 (t!4929 lt!28685))) (_1!1052 lt!28520)))))))

(assert (= (and d!14781 c!9664) b!68303))

(assert (= (and d!14781 (not c!9664)) b!68304))

(assert (= (and b!68304 c!9665) b!68305))

(assert (= (and b!68304 (not c!9665)) b!68306))

(declare-fun m!64267 () Bool)

(assert (=> b!68305 m!64267))

(assert (=> b!67120 d!14781))

(declare-fun d!14783 () Bool)

(declare-fun res!36769 () Bool)

(declare-fun e!44728 () Bool)

(assert (=> d!14783 (=> res!36769 e!44728)))

(assert (=> d!14783 (= res!36769 (and ((_ is Cons!1451) (toList!705 call!5548)) (= (_1!1052 (h!2035 (toList!705 call!5548))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(assert (=> d!14783 (= (containsKey!134 (toList!705 call!5548) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)) e!44728)))

(declare-fun b!68307 () Bool)

(declare-fun e!44729 () Bool)

(assert (=> b!68307 (= e!44728 e!44729)))

(declare-fun res!36770 () Bool)

(assert (=> b!68307 (=> (not res!36770) (not e!44729))))

(assert (=> b!68307 (= res!36770 (and (or (not ((_ is Cons!1451) (toList!705 call!5548))) (bvsle (_1!1052 (h!2035 (toList!705 call!5548))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))) ((_ is Cons!1451) (toList!705 call!5548)) (bvslt (_1!1052 (h!2035 (toList!705 call!5548))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355))))))

(declare-fun b!68308 () Bool)

(assert (=> b!68308 (= e!44729 (containsKey!134 (t!4929 (toList!705 call!5548)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355)))))

(assert (= (and d!14783 (not res!36769)) b!68307))

(assert (= (and b!68307 res!36770) b!68308))

(assert (=> b!68308 m!60827))

(declare-fun m!64269 () Bool)

(assert (=> b!68308 m!64269))

(assert (=> d!13967 d!14783))

(declare-fun d!14785 () Bool)

(assert (=> d!14785 (= (apply!72 lt!29006 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1127 (getValueByKey!131 (toList!705 lt!29006) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2959 () Bool)

(assert (= bs!2959 d!14785))

(assert (=> bs!2959 m!63213))

(assert (=> bs!2959 m!63213))

(declare-fun m!64271 () Bool)

(assert (=> bs!2959 m!64271))

(assert (=> b!66825 d!14785))

(declare-fun d!14787 () Bool)

(declare-fun lt!29802 () Bool)

(assert (=> d!14787 (= lt!29802 (select (content!72 (toList!705 lt!29068)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun e!44731 () Bool)

(assert (=> d!14787 (= lt!29802 e!44731)))

(declare-fun res!36772 () Bool)

(assert (=> d!14787 (=> (not res!36772) (not e!44731))))

(assert (=> d!14787 (= res!36772 ((_ is Cons!1451) (toList!705 lt!29068)))))

(assert (=> d!14787 (= (contains!709 (toList!705 lt!29068) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))) lt!29802)))

(declare-fun b!68309 () Bool)

(declare-fun e!44730 () Bool)

(assert (=> b!68309 (= e!44731 e!44730)))

(declare-fun res!36771 () Bool)

(assert (=> b!68309 (=> res!36771 e!44730)))

(assert (=> b!68309 (= res!36771 (= (h!2035 (toList!705 lt!29068)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(declare-fun b!68310 () Bool)

(assert (=> b!68310 (= e!44730 (contains!709 (t!4929 (toList!705 lt!29068)) (tuple2!2083 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2054 (v!2478 (underlying!250 thiss!992))))))))

(assert (= (and d!14787 res!36772) b!68309))

(assert (= (and b!68309 (not res!36771)) b!68310))

(declare-fun m!64273 () Bool)

(assert (=> d!14787 m!64273))

(declare-fun m!64275 () Bool)

(assert (=> d!14787 m!64275))

(declare-fun m!64277 () Bool)

(assert (=> b!68310 m!64277))

(assert (=> b!66918 d!14787))

(declare-fun b!68311 () Bool)

(declare-fun e!44734 () Bool)

(declare-fun call!5746 () Bool)

(assert (=> b!68311 (= e!44734 call!5746)))

(declare-fun b!68312 () Bool)

(declare-fun e!44732 () Bool)

(assert (=> b!68312 (= e!44732 e!44734)))

(declare-fun c!9666 () Bool)

(assert (=> b!68312 (= c!9666 (validKeyInArray!0 (select (arr!1826 (_keys!3786 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!68313 () Bool)

(declare-fun e!44733 () Bool)

(assert (=> b!68313 (= e!44733 call!5746)))

(declare-fun d!14789 () Bool)

(declare-fun res!36773 () Bool)

(assert (=> d!14789 (=> res!36773 e!44732)))

(assert (=> d!14789 (= res!36773 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2061 (_keys!3786 newMap!16))))))

(assert (=> d!14789 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3786 newMap!16) (mask!6081 newMap!16)) e!44732)))

(declare-fun b!68314 () Bool)

(assert (=> b!68314 (= e!44734 e!44733)))

(declare-fun lt!29804 () (_ BitVec 64))

(assert (=> b!68314 (= lt!29804 (select (arr!1826 (_keys!3786 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!29803 () Unit!1824)

(assert (=> b!68314 (= lt!29803 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3786 newMap!16) lt!29804 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!68314 (arrayContainsKey!0 (_keys!3786 newMap!16) lt!29804 #b00000000000000000000000000000000)))

(declare-fun lt!29805 () Unit!1824)

(assert (=> b!68314 (= lt!29805 lt!29803)))

(declare-fun res!36774 () Bool)

(assert (=> b!68314 (= res!36774 (= (seekEntryOrOpen!0 (select (arr!1826 (_keys!3786 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3786 newMap!16) (mask!6081 newMap!16)) (Found!227 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!68314 (=> (not res!36774) (not e!44733))))

(declare-fun bm!5743 () Bool)

(assert (=> bm!5743 (= call!5746 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3786 newMap!16) (mask!6081 newMap!16)))))

(assert (= (and d!14789 (not res!36773)) b!68312))

(assert (= (and b!68312 c!9666) b!68314))

(assert (= (and b!68312 (not c!9666)) b!68311))

(assert (= (and b!68314 res!36774) b!68313))

(assert (= (or b!68313 b!68311) bm!5743))

(assert (=> b!68312 m!63669))

(assert (=> b!68312 m!63669))

(assert (=> b!68312 m!63671))

(assert (=> b!68314 m!63669))

(declare-fun m!64279 () Bool)

(assert (=> b!68314 m!64279))

(declare-fun m!64281 () Bool)

(assert (=> b!68314 m!64281))

(assert (=> b!68314 m!63669))

(declare-fun m!64283 () Bool)

(assert (=> b!68314 m!64283))

(declare-fun m!64285 () Bool)

(assert (=> bm!5743 m!64285))

(assert (=> bm!5600 d!14789))

(assert (=> b!67145 d!14163))

(declare-fun d!14791 () Bool)

(declare-fun lt!29806 () Bool)

(assert (=> d!14791 (= lt!29806 (select (content!72 lt!28717) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(declare-fun e!44736 () Bool)

(assert (=> d!14791 (= lt!29806 e!44736)))

(declare-fun res!36776 () Bool)

(assert (=> d!14791 (=> (not res!36776) (not e!44736))))

(assert (=> d!14791 (= res!36776 ((_ is Cons!1451) lt!28717))))

(assert (=> d!14791 (= (contains!709 lt!28717 (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))) lt!29806)))

(declare-fun b!68315 () Bool)

(declare-fun e!44735 () Bool)

(assert (=> b!68315 (= e!44736 e!44735)))

(declare-fun res!36775 () Bool)

(assert (=> b!68315 (=> res!36775 e!44735)))

(assert (=> b!68315 (= res!36775 (= (h!2035 lt!28717) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(declare-fun b!68316 () Bool)

(assert (=> b!68316 (= e!44735 (contains!709 (t!4929 lt!28717) (tuple2!2083 (_1!1052 lt!28520) (_2!1052 lt!28520))))))

(assert (= (and d!14791 res!36776) b!68315))

(assert (= (and b!68315 (not res!36775)) b!68316))

(declare-fun m!64287 () Bool)

(assert (=> d!14791 m!64287))

(declare-fun m!64289 () Bool)

(assert (=> d!14791 m!64289))

(declare-fun m!64291 () Bool)

(assert (=> b!68316 m!64291))

(assert (=> b!67052 d!14791))

(declare-fun d!14793 () Bool)

(declare-fun lt!29807 () Bool)

(assert (=> d!14793 (= lt!29807 (select (content!73 (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!44737 () Bool)

(assert (=> d!14793 (= lt!29807 e!44737)))

(declare-fun res!36777 () Bool)

(assert (=> d!14793 (=> (not res!36777) (not e!44737))))

(assert (=> d!14793 (= res!36777 ((_ is Cons!1450) (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)))))

(assert (=> d!14793 (= (contains!708 (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!29807)))

(declare-fun b!68317 () Bool)

(declare-fun e!44738 () Bool)

(assert (=> b!68317 (= e!44737 e!44738)))

(declare-fun res!36778 () Bool)

(assert (=> b!68317 (=> res!36778 e!44738)))

(assert (=> b!68317 (= res!36778 (= (h!2034 (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!68318 () Bool)

(assert (=> b!68318 (= e!44738 (contains!708 (t!4928 (ite c!9131 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) from!355) Nil!1451) Nil!1451)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!14793 res!36777) b!68317))

(assert (= (and b!68317 (not res!36778)) b!68318))

(declare-fun m!64293 () Bool)

(assert (=> d!14793 m!64293))

(assert (=> d!14793 m!61505))

(declare-fun m!64295 () Bool)

(assert (=> d!14793 m!64295))

(assert (=> b!68318 m!61505))

(declare-fun m!64297 () Bool)

(assert (=> b!68318 m!64297))

(assert (=> b!66802 d!14793))

(declare-fun d!14795 () Bool)

(declare-fun res!36779 () Bool)

(declare-fun e!44739 () Bool)

(assert (=> d!14795 (=> res!36779 e!44739)))

(assert (=> d!14795 (= res!36779 (and ((_ is Cons!1451) (toList!705 lt!28687)) (= (_1!1052 (h!2035 (toList!705 lt!28687))) (_1!1052 lt!28520))))))

(assert (=> d!14795 (= (containsKey!134 (toList!705 lt!28687) (_1!1052 lt!28520)) e!44739)))

(declare-fun b!68319 () Bool)

(declare-fun e!44740 () Bool)

(assert (=> b!68319 (= e!44739 e!44740)))

(declare-fun res!36780 () Bool)

(assert (=> b!68319 (=> (not res!36780) (not e!44740))))

(assert (=> b!68319 (= res!36780 (and (or (not ((_ is Cons!1451) (toList!705 lt!28687))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28687))) (_1!1052 lt!28520))) ((_ is Cons!1451) (toList!705 lt!28687)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28687))) (_1!1052 lt!28520))))))

(declare-fun b!68320 () Bool)

(assert (=> b!68320 (= e!44740 (containsKey!134 (t!4929 (toList!705 lt!28687)) (_1!1052 lt!28520)))))

(assert (= (and d!14795 (not res!36779)) b!68319))

(assert (= (and b!68319 res!36780) b!68320))

(declare-fun m!64299 () Bool)

(assert (=> b!68320 m!64299))

(assert (=> d!13979 d!14795))

(declare-fun d!14797 () Bool)

(declare-fun res!36781 () Bool)

(declare-fun e!44741 () Bool)

(assert (=> d!14797 (=> res!36781 e!44741)))

(assert (=> d!14797 (= res!36781 (and ((_ is Cons!1451) (toList!705 lt!28707)) (= (_1!1052 (h!2035 (toList!705 lt!28707))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!14797 (= (containsKey!134 (toList!705 lt!28707) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!44741)))

(declare-fun b!68321 () Bool)

(declare-fun e!44742 () Bool)

(assert (=> b!68321 (= e!44741 e!44742)))

(declare-fun res!36782 () Bool)

(assert (=> b!68321 (=> (not res!36782) (not e!44742))))

(assert (=> b!68321 (= res!36782 (and (or (not ((_ is Cons!1451) (toList!705 lt!28707))) (bvsle (_1!1052 (h!2035 (toList!705 lt!28707))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1451) (toList!705 lt!28707)) (bvslt (_1!1052 (h!2035 (toList!705 lt!28707))) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!68322 () Bool)

(assert (=> b!68322 (= e!44742 (containsKey!134 (t!4929 (toList!705 lt!28707)) (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!14797 (not res!36781)) b!68321))

(assert (= (and b!68321 res!36782) b!68322))

(assert (=> b!68322 m!61005))

(declare-fun m!64301 () Bool)

(assert (=> b!68322 m!64301))

(assert (=> d!13975 d!14797))

(assert (=> b!66892 d!14163))

(declare-fun d!14799 () Bool)

(assert (=> d!14799 (isDefined!83 (getValueByKey!131 (toList!705 lt!28723) (_1!1052 lt!28528)))))

(declare-fun lt!29808 () Unit!1824)

(assert (=> d!14799 (= lt!29808 (choose!379 (toList!705 lt!28723) (_1!1052 lt!28528)))))

(declare-fun e!44743 () Bool)

(assert (=> d!14799 e!44743))

(declare-fun res!36783 () Bool)

(assert (=> d!14799 (=> (not res!36783) (not e!44743))))

(assert (=> d!14799 (= res!36783 (isStrictlySorted!276 (toList!705 lt!28723)))))

(assert (=> d!14799 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!28723) (_1!1052 lt!28528)) lt!29808)))

(declare-fun b!68323 () Bool)

(assert (=> b!68323 (= e!44743 (containsKey!134 (toList!705 lt!28723) (_1!1052 lt!28528)))))

(assert (= (and d!14799 res!36783) b!68323))

(assert (=> d!14799 m!61145))

(assert (=> d!14799 m!61145))

(assert (=> d!14799 m!61951))

(declare-fun m!64303 () Bool)

(assert (=> d!14799 m!64303))

(declare-fun m!64305 () Bool)

(assert (=> d!14799 m!64305))

(assert (=> b!68323 m!61947))

(assert (=> b!67063 d!14799))

(assert (=> b!67063 d!14659))

(assert (=> b!67063 d!13937))

(declare-fun d!14801 () Bool)

(declare-fun e!44744 () Bool)

(assert (=> d!14801 e!44744))

(declare-fun res!36784 () Bool)

(assert (=> d!14801 (=> res!36784 e!44744)))

(declare-fun lt!29809 () Bool)

(assert (=> d!14801 (= res!36784 (not lt!29809))))

(declare-fun lt!29812 () Bool)

(assert (=> d!14801 (= lt!29809 lt!29812)))

(declare-fun lt!29811 () Unit!1824)

(declare-fun e!44745 () Unit!1824)

(assert (=> d!14801 (= lt!29811 e!44745)))

(declare-fun c!9667 () Bool)

(assert (=> d!14801 (= c!9667 lt!29812)))

(assert (=> d!14801 (= lt!29812 (containsKey!134 (toList!705 lt!29006) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14801 (= (contains!705 lt!29006 #b1000000000000000000000000000000000000000000000000000000000000000) lt!29809)))

(declare-fun b!68324 () Bool)

(declare-fun lt!29810 () Unit!1824)

(assert (=> b!68324 (= e!44745 lt!29810)))

(assert (=> b!68324 (= lt!29810 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29006) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68324 (isDefined!83 (getValueByKey!131 (toList!705 lt!29006) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68325 () Bool)

(declare-fun Unit!1907 () Unit!1824)

(assert (=> b!68325 (= e!44745 Unit!1907)))

(declare-fun b!68326 () Bool)

(assert (=> b!68326 (= e!44744 (isDefined!83 (getValueByKey!131 (toList!705 lt!29006) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14801 c!9667) b!68324))

(assert (= (and d!14801 (not c!9667)) b!68325))

(assert (= (and d!14801 (not res!36784)) b!68326))

(declare-fun m!64307 () Bool)

(assert (=> d!14801 m!64307))

(declare-fun m!64309 () Bool)

(assert (=> b!68324 m!64309))

(assert (=> b!68324 m!62795))

(assert (=> b!68324 m!62795))

(declare-fun m!64311 () Bool)

(assert (=> b!68324 m!64311))

(assert (=> b!68326 m!62795))

(assert (=> b!68326 m!62795))

(assert (=> b!68326 m!64311))

(assert (=> bm!5575 d!14801))

(declare-fun b!68327 () Bool)

(declare-fun e!44747 () Bool)

(declare-fun call!5747 () Bool)

(assert (=> b!68327 (= e!44747 call!5747)))

(declare-fun b!68328 () Bool)

(declare-fun e!44748 () Bool)

(assert (=> b!68328 (= e!44748 e!44747)))

(declare-fun c!9668 () Bool)

(assert (=> b!68328 (= c!9668 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!68329 () Bool)

(declare-fun e!44746 () Bool)

(assert (=> b!68329 (= e!44746 (contains!708 Nil!1451 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!68330 () Bool)

(assert (=> b!68330 (= e!44747 call!5747)))

(declare-fun b!68331 () Bool)

(declare-fun e!44749 () Bool)

(assert (=> b!68331 (= e!44749 e!44748)))

(declare-fun res!36785 () Bool)

(assert (=> b!68331 (=> (not res!36785) (not e!44748))))

(assert (=> b!68331 (= res!36785 (not e!44746))))

(declare-fun res!36787 () Bool)

(assert (=> b!68331 (=> (not res!36787) (not e!44746))))

(assert (=> b!68331 (= res!36787 (validKeyInArray!0 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!14803 () Bool)

(declare-fun res!36786 () Bool)

(assert (=> d!14803 (=> res!36786 e!44749)))

(assert (=> d!14803 (= res!36786 (bvsge #b00000000000000000000000000000000 (size!2061 (_keys!3786 (v!2478 (underlying!250 thiss!992))))))))

(assert (=> d!14803 (= (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) #b00000000000000000000000000000000 Nil!1451) e!44749)))

(declare-fun bm!5744 () Bool)

(assert (=> bm!5744 (= call!5747 (arrayNoDuplicates!0 (_keys!3786 (v!2478 (underlying!250 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!9668 (Cons!1450 (select (arr!1826 (_keys!3786 (v!2478 (underlying!250 thiss!992)))) #b00000000000000000000000000000000) Nil!1451) Nil!1451)))))

(assert (= (and d!14803 (not res!36786)) b!68331))

(assert (= (and b!68331 res!36787) b!68329))

(assert (= (and b!68331 res!36785) b!68328))

(assert (= (and b!68328 c!9668) b!68327))

(assert (= (and b!68328 (not c!9668)) b!68330))

(assert (= (or b!68327 b!68330) bm!5744))

(assert (=> b!68328 m!62351))

(assert (=> b!68328 m!62351))

(assert (=> b!68328 m!62353))

(assert (=> b!68329 m!62351))

(assert (=> b!68329 m!62351))

(declare-fun m!64313 () Bool)

(assert (=> b!68329 m!64313))

(assert (=> b!68331 m!62351))

(assert (=> b!68331 m!62351))

(assert (=> b!68331 m!62353))

(assert (=> bm!5744 m!62351))

(declare-fun m!64315 () Bool)

(assert (=> bm!5744 m!64315))

(assert (=> b!67039 d!14803))

(declare-fun d!14805 () Bool)

(declare-fun e!44750 () Bool)

(assert (=> d!14805 e!44750))

(declare-fun res!36788 () Bool)

(assert (=> d!14805 (=> res!36788 e!44750)))

(declare-fun lt!29813 () Bool)

(assert (=> d!14805 (= res!36788 (not lt!29813))))

(declare-fun lt!29816 () Bool)

(assert (=> d!14805 (= lt!29813 lt!29816)))

(declare-fun lt!29815 () Unit!1824)

(declare-fun e!44751 () Unit!1824)

(assert (=> d!14805 (= lt!29815 e!44751)))

(declare-fun c!9669 () Bool)

(assert (=> d!14805 (= c!9669 lt!29816)))

(assert (=> d!14805 (= lt!29816 (containsKey!134 (toList!705 lt!29044) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!14805 (= (contains!705 lt!29044 #b0000000000000000000000000000000000000000000000000000000000000000) lt!29813)))

(declare-fun b!68332 () Bool)

(declare-fun lt!29814 () Unit!1824)

(assert (=> b!68332 (= e!44751 lt!29814)))

(assert (=> b!68332 (= lt!29814 (lemmaContainsKeyImpliesGetValueByKeyDefined!82 (toList!705 lt!29044) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!68332 (isDefined!83 (getValueByKey!131 (toList!705 lt!29044) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!68333 () Bool)

(declare-fun Unit!1908 () Unit!1824)

(assert (=> b!68333 (= e!44751 Unit!1908)))

(declare-fun b!68334 () Bool)

(assert (=> b!68334 (= e!44750 (isDefined!83 (getValueByKey!131 (toList!705 lt!29044) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!14805 c!9669) b!68332))

(assert (= (and d!14805 (not c!9669)) b!68333))

(assert (= (and d!14805 (not res!36788)) b!68334))

(declare-fun m!64317 () Bool)

(assert (=> d!14805 m!64317))

(declare-fun m!64319 () Bool)

(assert (=> b!68332 m!64319))

(assert (=> b!68332 m!62791))

(assert (=> b!68332 m!62791))

(declare-fun m!64321 () Bool)

(assert (=> b!68332 m!64321))

(assert (=> b!68334 m!62791))

(assert (=> b!68334 m!62791))

(assert (=> b!68334 m!64321))

(assert (=> bm!5590 d!14805))

(declare-fun condMapEmpty!3089 () Bool)

(declare-fun mapDefault!3089 () ValueCell!881)

(assert (=> mapNonEmpty!3087 (= condMapEmpty!3089 (= mapRest!3087 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3089)))))

(declare-fun e!44753 () Bool)

(declare-fun mapRes!3089 () Bool)

(assert (=> mapNonEmpty!3087 (= tp!8379 (and e!44753 mapRes!3089))))

(declare-fun b!68335 () Bool)

(declare-fun e!44752 () Bool)

(assert (=> b!68335 (= e!44752 tp_is_empty!2449)))

(declare-fun mapIsEmpty!3089 () Bool)

(assert (=> mapIsEmpty!3089 mapRes!3089))

(declare-fun mapNonEmpty!3089 () Bool)

(declare-fun tp!8381 () Bool)

(assert (=> mapNonEmpty!3089 (= mapRes!3089 (and tp!8381 e!44752))))

(declare-fun mapValue!3089 () ValueCell!881)

(declare-fun mapKey!3089 () (_ BitVec 32))

(declare-fun mapRest!3089 () (Array (_ BitVec 32) ValueCell!881))

(assert (=> mapNonEmpty!3089 (= mapRest!3087 (store mapRest!3089 mapKey!3089 mapValue!3089))))

(declare-fun b!68336 () Bool)

(assert (=> b!68336 (= e!44753 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3087 condMapEmpty!3089) mapIsEmpty!3089))

(assert (= (and mapNonEmpty!3087 (not condMapEmpty!3089)) mapNonEmpty!3089))

(assert (= (and mapNonEmpty!3089 ((_ is ValueCellFull!881) mapValue!3089)) b!68335))

(assert (= (and mapNonEmpty!3087 ((_ is ValueCellFull!881) mapDefault!3089)) b!68336))

(declare-fun m!64323 () Bool)

(assert (=> mapNonEmpty!3089 m!64323))

(declare-fun condMapEmpty!3090 () Bool)

(declare-fun mapDefault!3090 () ValueCell!881)

(assert (=> mapNonEmpty!3088 (= condMapEmpty!3090 (= mapRest!3088 ((as const (Array (_ BitVec 32) ValueCell!881)) mapDefault!3090)))))

(declare-fun e!44755 () Bool)

(declare-fun mapRes!3090 () Bool)

(assert (=> mapNonEmpty!3088 (= tp!8380 (and e!44755 mapRes!3090))))

(declare-fun b!68337 () Bool)

(declare-fun e!44754 () Bool)

(assert (=> b!68337 (= e!44754 tp_is_empty!2449)))

(declare-fun mapIsEmpty!3090 () Bool)

(assert (=> mapIsEmpty!3090 mapRes!3090))

(declare-fun mapNonEmpty!3090 () Bool)

(declare-fun tp!8382 () Bool)

(assert (=> mapNonEmpty!3090 (= mapRes!3090 (and tp!8382 e!44754))))

(declare-fun mapKey!3090 () (_ BitVec 32))

(declare-fun mapValue!3090 () ValueCell!881)

(declare-fun mapRest!3090 () (Array (_ BitVec 32) ValueCell!881))

(assert (=> mapNonEmpty!3090 (= mapRest!3088 (store mapRest!3090 mapKey!3090 mapValue!3090))))

(declare-fun b!68338 () Bool)

(assert (=> b!68338 (= e!44755 tp_is_empty!2449)))

(assert (= (and mapNonEmpty!3088 condMapEmpty!3090) mapIsEmpty!3090))

(assert (= (and mapNonEmpty!3088 (not condMapEmpty!3090)) mapNonEmpty!3090))

(assert (= (and mapNonEmpty!3090 ((_ is ValueCellFull!881) mapValue!3090)) b!68337))

(assert (= (and mapNonEmpty!3088 ((_ is ValueCellFull!881) mapDefault!3090)) b!68338))

(declare-fun m!64325 () Bool)

(assert (=> mapNonEmpty!3090 m!64325))

(declare-fun b_lambda!3047 () Bool)

(assert (= b_lambda!3027 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3047)))

(declare-fun b_lambda!3049 () Bool)

(assert (= b_lambda!3031 (or (and b!66230 b_free!2065) (and b!66241 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))) b_lambda!3049)))

(declare-fun b_lambda!3051 () Bool)

(assert (= b_lambda!3029 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3051)))

(declare-fun b_lambda!3053 () Bool)

(assert (= b_lambda!3035 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3053)))

(declare-fun b_lambda!3055 () Bool)

(assert (= b_lambda!3025 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3055)))

(declare-fun b_lambda!3057 () Bool)

(assert (= b_lambda!3023 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3057)))

(declare-fun b_lambda!3059 () Bool)

(assert (= b_lambda!3041 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3059)))

(declare-fun b_lambda!3061 () Bool)

(assert (= b_lambda!3015 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3061)))

(declare-fun b_lambda!3063 () Bool)

(assert (= b_lambda!3043 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3063)))

(declare-fun b_lambda!3065 () Bool)

(assert (= b_lambda!3045 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3065)))

(declare-fun b_lambda!3067 () Bool)

(assert (= b_lambda!3033 (or (and b!66230 b_free!2065) (and b!66241 b_free!2067 (= (defaultEntry!2146 newMap!16) (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))))) b_lambda!3067)))

(declare-fun b_lambda!3069 () Bool)

(assert (= b_lambda!3021 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3069)))

(declare-fun b_lambda!3071 () Bool)

(assert (= b_lambda!3037 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3071)))

(declare-fun b_lambda!3073 () Bool)

(assert (= b_lambda!3017 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3073)))

(declare-fun b_lambda!3075 () Bool)

(assert (= b_lambda!3019 (or (and b!66230 b_free!2065 (= (defaultEntry!2146 (v!2478 (underlying!250 thiss!992))) (defaultEntry!2146 newMap!16))) (and b!66241 b_free!2067) b_lambda!3075)))

(check-sat (not d!14233) (not b!68223) (not d!14111) (not b!68047) (not b!67623) (not b!67554) (not b!67977) (not b!68135) (not d!14539) (not d!14697) (not d!14003) (not d!14433) (not b!68013) (not b!68204) (not b!67926) (not d!14355) (not d!14033) (not b!67928) (not d!14757) (not b!68310) (not b!67349) (not bm!5736) (not b!67869) (not b_lambda!3013) (not b!68137) (not b!67231) (not b!68197) (not d!14349) (not b!67569) (not b!67181) (not b!68205) (not b!67171) (not b!67230) (not b!67218) (not b!67775) (not d!14611) (not d!14171) (not d!14365) (not d!14249) (not b!68249) (not b!67424) (not b!68043) (not b!67309) (not d!14229) (not b!67466) (not b!67336) (not b!67288) (not b!68156) (not d!14077) (not b_lambda!3053) (not b!67660) (not d!14235) (not b!67359) (not d!14245) (not d!14485) (not d!14157) (not b!68250) (not d!14773) (not d!14551) (not b!68115) (not b!67523) (not b!67595) (not b!67657) (not b!67207) (not b!68277) (not d!14141) (not b!67255) (not b!67391) (not bm!5731) (not b!68308) (not d!14731) (not d!14533) (not b!67275) (not d!14201) (not d!14555) (not b!67598) (not b!67766) (not bm!5744) (not b!68257) (not b!67586) (not b!68093) (not bm!5642) (not b!67678) (not bm!5679) (not b!67306) (not b!68291) (not b!67472) (not b!67474) (not b!67312) (not b!67840) (not d!14269) (not b!67781) (not b!68028) (not b!67669) (not b!67835) (not b!68123) (not b!67446) (not b!67376) (not d!14143) (not d!14337) (not d!14505) (not d!14009) (not bm!5739) (not b!67535) (not b!67634) (not b!68064) (not d!14459) (not b!67808) (not d!14291) (not b!68314) (not b!67360) (not d!14195) (not b!67675) (not b!67220) (not d!14669) (not b!67691) (not b!67431) (not b!67631) (not b!67457) (not b!67706) (not b!67269) (not bm!5662) (not d!14711) (not b!67685) (not b!68089) (not d!14321) (not bm!5643) (not bm!5703) (not b!67576) (not d!14737) (not d!14007) (not d!14341) (not d!14203) (not b!68299) (not b!68322) (not b!67200) (not d!14219) (not b!67265) (not bm!5728) (not d!14089) (not b!67908) (not mapNonEmpty!3090) (not b!68194) (not b!67904) (not b!67427) (not b!67862) (not bm!5652) (not b!67292) (not bm!5629) (not d!14263) b_and!4209 (not b!67524) (not b!67925) (not d!14133) (not b!67973) (not b!67449) (not b!67430) (not b!67600) (not b!68234) (not b!67468) (not d!14519) (not b!67866) (not b!67616) (not b!67592) (not b!67227) (not bm!5702) (not b!68125) (not b!67387) (not b_next!2067) (not b!67888) (not bm!5678) (not bm!5632) (not b!67848) (not bm!5668) (not b!67203) (not b!67225) (not d!14047) (not b!67572) (not b!68005) (not d!14695) (not d!14045) (not b!67696) (not b!67224) (not d!14595) (not b!68052) (not b_lambda!3075) (not b!68032) (not d!14273) (not d!14323) (not b!68286) (not b!68003) (not b!68084) (not b!67374) (not b!67594) (not b!67985) (not b!68226) (not d!14501) (not bm!5659) (not b!68101) (not b!68132) (not bm!5631) (not d!14049) (not d!14397) (not b!67837) (not b!67262) (not b!67802) (not b!67352) (not d!14729) (not b!68164) (not d!14405) (not b!67237) (not d!14639) (not b!67465) (not b!68023) (not bm!5630) (not b!67348) (not d!14267) (not b!67514) (not b!67202) (not b!67533) (not b!67322) (not b!68281) (not b!68111) (not b!67532) (not d!14613) (not b!68244) (not b!67335) (not b!67877) (not b!68130) (not d!14743) (not b!67177) (not b!68087) (not b!68141) (not b!67629) (not b!67870) (not b!68245) (not b!67238) (not b!67549) (not b!68312) (not d!14457) (not b!67989) (not d!14359) (not b!67326) (not b!67271) (not d!14487) (not b!67538) (not b!67643) (not b!68255) (not b!68138) (not d!14035) (not b!68105) (not b!67881) (not b!67290) (not d!14113) (not b!67413) (not d!14393) (not d!14259) (not d!14617) (not b!68170) (not b!67403) (not b_lambda!3005) (not b!67459) (not b!67433) (not d!14347) (not b!68159) (not b!67415) (not b!67246) (not d!14647) (not b!67470) (not b!67818) (not d!14601) (not d!14197) (not d!14071) (not b!67734) (not b!67478) (not b!67993) (not b!67649) (not b!68167) (not b!67389) (not d!14637) (not b!68228) (not b!68060) (not d!13995) (not b_next!2065) (not d!14609) (not bm!5626) (not b!67698) (not b!68225) (not b!67455) (not b_lambda!3039) (not d!14037) (not b_lambda!3011) (not b!68177) (not b!68279) (not d!14541) (not d!14627) (not b!67625) (not d!14357) (not b!67618) (not b_lambda!3063) (not b!67589) (not b!68318) (not b!67411) (not b!67581) (not b!67461) (not b!67273) (not b!68122) (not b!67253) (not bm!5646) (not b!68002) (not d!14055) (not d!14279) (not b!68075) (not b_lambda!3073) (not b!67346) (not b!68231) (not d!14677) (not b!67221) (not b!68233) (not b!67656) (not b!67815) (not b!67513) (not b!68302) (not b!68152) (not b!67354) (not b!68331) (not b!68000) (not b!67355) (not bm!5677) (not b!68161) (not b!67249) (not d!14473) (not b!67536) (not bm!5734) (not b_lambda!3007) (not bm!5653) (not bm!5704) (not bm!5687) (not d!14691) (not d!14053) (not b!67707) (not b!67930) (not d!14605) (not d!14043) (not b!67343) (not d!14137) (not b!67552) (not b!67367) (not d!14785) (not b!68316) (not d!14067) (not d!14187) (not d!14513) (not b!68241) (not b!67438) (not b!67652) (not b!67825) (not d!14411) (not b!68211) (not bm!5715) (not d!14217) (not b!67740) (not b!67358) (not b!67198) (not bm!5719) (not b!68237) (not b!67579) (not b!68158) (not d!14021) (not d!14147) (not b!67228) (not d!14671) (not b!67996) (not d!14491) (not b!67410) (not b!67469) (not b!68320) (not d!14211) (not d!14653) (not d!14361) (not b!68328) (not d!14175) (not d!14725) (not b!67279) (not b_lambda!3057) (not b!67196) (not d!14645) (not b!67402) (not b!67507) (not b!67763) (not d!14255) (not d!14051) (not b!68025) (not b!67383) (not b_lambda!2985) (not bm!5695) (not b!67561) (not b!68332) (not b!67529) (not b!67773) (not b!67658) (not b!67604) (not b!67439) (not b!68283) (not b!67717) (not d!14423) (not b!67597) (not b_lambda!3047) (not b_lambda!3003) (not b!68268) (not d!14451) (not bm!5651) (not b!68011) (not b!67872) (not b!68215) (not b!67526) (not b_lambda!3051) (not d!14305) (not b!67378) (not d!14545) (not bm!5712) (not d!14025) (not b!68118) (not d!14389) (not b!68090) (not b!67667) (not d!14173) (not b!67965) (not b!67710) (not b!67666) (not d!14689) (not d!14787) (not b!67905) (not b!67405) (not b!67173) (not b!68024) (not b!67875) (not d!14261) (not b!67165) (not b!67807) (not d!14461) (not b!67651) (not b!68100) (not d!14353) (not b!67828) (not b!68209) (not b!67270) (not b!67401) (not d!14207) (not d!14739) (not d!14385) (not b!67210) (not b!68150) (not b!67723) (not bm!5675) (not d!14763) (not b!67191) (not bm!5718) (not b!67308) (not d!14749) (not d!14495) (not b!68203) (not d!14145) (not b!67382) (not b!67772) (not d!14547) (not bm!5733) (not b!68148) (not b!67583) (not d!14597) (not b!68107) (not b!67745) (not b!67464) (not b!67563) (not d!14525) (not b!67646) (not d!14179) (not b!68179) (not b!67778) (not b!68212) (not d!14581) (not d!14345) (not d!14403) (not bm!5688) (not d!14515) (not d!14599) (not b!67896) (not b!67168) (not b!67266) (not b!67892) (not b!68112) (not b!67694) (not b!67396) (not b!67386) (not b!67294) (not b!67476) (not d!14275) (not b!67687) (not b!67627) (not b!67899) (not d!14339) (not bm!5635) (not d!14225) (not d!14715) (not d!14241) (not b!67301) (not d!14343) (not d!14679) (not b!67363) (not b!67800) (not b!67742) (not bm!5696) (not bm!5682) (not b!68174) (not b!68097) (not bm!5743) (not d!14239) (not d!14649) (not d!14387) (not d!14429) (not d!14335) (not b!67599) (not d!14419) (not d!14723) (not b!68145) (not b!67545) (not d!14199) (not d!14435) (not b!68022) (not b_lambda!2987) (not b!67659) (not b!68305) (not b!68074) (not b!68082) (not d!14685) (not b!68114) (not d!14799) (not d!14005) (not b!67753) (not b!67885) (not b!67811) (not d!14031) (not bm!5672) (not d!14183) (not b!68116) (not bm!5689) (not b!67481) (not b!67900) (not b!67725) (not b!67912) (not b_lambda!3055) (not bm!5725) (not b!67954) (not bm!5658) (not b!67542) (not d!14791) (not bm!5700) (not b!68289) (not bm!5735) (not d!14535) (not b!68016) (not b!67922) (not b!68037) (not b!67590) (not b_lambda!2989) (not d!14057) (not b!67462) (not b!67852) (not d!14243) (not b!67566) b_and!4211 (not b!68008) (not b!67421) (not b!67856) (not d!14029) (not d!14351) (not d!14479) (not d!14177) (not d!14367) (not b!67235) (not d!14793) (not b!68192) (not b!68323) (not b!67479) (not b!68206) (not bm!5685) (not b!68113) (not d!13999) (not b!68128) (not b!67902) (not b!67353) (not d!14747) (not b!68044) (not b!68326) (not d!14151) (not d!14589) (not b!68181) (not b!67849) (not b!68262) (not d!14665) (not b!67240) (not d!14065) (not b!67621) (not bm!5710) (not d!14745) (not b!68295) (not bm!5722) (not b!68189) (not d!14511) (not bm!5665) (not b!67506) (not b!67991) (not b_lambda!3071) (not d!14463) (not b!67980) (not b!67761) (not d!14713) (not b!67392) (not b!67682) (not b!67674) (not b!68261) (not d!14565) (not d!14117) (not b!67737) (not b_lambda!3065) (not b!67236) (not d!14615) (not b!67371) (not d!14531) (not b!67596) (not b!67647) (not d!14421) (not b!67962) (not b!67701) (not b!68183) (not b!68247) (not b!68039) (not b!67636) (not bm!5670) (not d!14185) (not b!67409) (not d!14091) (not d!14805) (not b!67891) (not mapNonEmpty!3089) (not b!67333) (not d!14579) (not b!67399) (not b!67416) (not b!68284) (not d!14439) (not b!67268) (not b!67931) (not b!67356) (not b!68259) (not bm!5701) (not b_lambda!3069) (not d!14401) (not b!67452) (not b_lambda!3059) (not b!67878) (not b!67166) (not d!14121) (not b!67754) (not b!68334) (not d!14467) (not d!14083) (not d!14425) (not b!67780) (not b!67639) (not b!67858) (not d!14543) (not b!67605) (not b!67380) (not d!14181) (not b!67258) (not d!14063) (not b!68078) (not b!67846) (not b!67714) (not b!67517) (not b!67593) (not bm!5671) (not bm!5742) (not b!68275) (not d!14703) (not b!67282) (not d!14523) (not d!14017) (not b!67607) (not d!14801) (not d!14427) (not bm!5656) (not d!14465) (not d!14441) (not b!67664) (not b_lambda!3067) (not d!14777) (not b!67219) (not bm!5717) (not d!14659) (not b!67208) (not b!68258) (not b!68109) (not d!14271) (not b!68329) (not b!67509) (not d!14095) (not b!67933) (not b!68081) (not d!14283) (not b!67889) (not d!14329) (not b!67797) (not b!67233) (not b!67847) (not b!68324) (not d!14391) (not b!67511) (not b!67633) (not b_lambda!3061) (not d!14059) (not b!67720) (not b!67205) (not b!67903) (not d!14191) (not b!68271) (not b!67298) (not b!67730) (not b!67388) (not b!67699) (not d!14015) (not b!67276) (not b!68153) (not d!14735) (not b!67587) (not b!67981) (not b!68041) (not b!68059) (not b!67894) (not d!14629) (not b!67751) (not b!67736) (not b!68049) (not b!67194) (not bm!5657) (not b!67303) (not d!14631) (not d!14619) (not b!67610) (not b!67918) (not b!67650) (not b!67407) (not b!68058) (not bm!5692) (not b!68220) (not d!14603) (not b!68061) (not d!14127) (not d!14623) (not bm!5705) (not d!14733) (not d!14537) (not b!67644) (not b!67774) (not b!67821) (not b!67216) (not b!67831) (not b!67242) (not d!14521) tp_is_empty!2449 (not b!67463) (not b!68186) (not b!67422) (not d!14699) (not b!68252) (not d!14101) (not d!14041) (not b!67350) (not d!14011) (not d!14475) (not b!67347) (not d!14131) (not b!67244) (not bm!5697) (not b_lambda!3009) (not b!67672) (not b!68120) (not b!68079) (not d!14527) (not b!67601) (not d!14105) (not b!67328) (not b!67654) (not b_lambda!3049) (not b!67395) (not b!67757) (not d!14445) (not b!67897) (not d!14081) (not b!67164) (not d!14683) (not d!14507) (not b!67559) (not bm!5711) (not d!14097) (not b!67184) (not d!14657) (not b!68166) (not b!68103) (not bm!5638) (not d!14643) (not d!14295) (not b!67339) (not b_lambda!2977) (not d!14039) (not b!67727) (not d!14469) (not b!67384) (not b!67805) (not d!14331) (not d!14327) (not b!67608) (not b!67704) (not b!67521) (not d!14333) (not b!67752) (not b!67689) (not b!67859) (not d!14107) (not b!68292) (not d!14169) (not b!67232) (not b!67613) (not d!14447) (not b!67174) (not d!14189) (not b!67316) (not b!67263) (not d!14381) (not b!67915) (not b!67540) (not b!67404) (not d!14549) (not b!68178) (not d!14407) (not d!14415) (not d!14119) (not d!14377) (not d!14193) (not b!67568) (not b!67662) (not d!14661) (not d!14529) (not d!14223) (not b!67187) (not b!67442) (not d!14383) (not b!67398) (not d!14779) (not b!67330) (not b!68265) (not b!68077) (not b!67319) (not b!67969) (not d!14075) (not bm!5641) (not b!67436) (not bm!5708))
(check-sat b_and!4209 b_and!4211 (not b_next!2065) (not b_next!2067))
