; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!8726 () Bool)

(assert start!8726)

(declare-fun b!60405 () Bool)

(declare-fun b_free!1981 () Bool)

(declare-fun b_next!1981 () Bool)

(assert (=> b!60405 (= b_free!1981 (not b_next!1981))))

(declare-fun tp!8065 () Bool)

(declare-fun b_and!3673 () Bool)

(assert (=> b!60405 (= tp!8065 b_and!3673)))

(declare-fun b!60410 () Bool)

(declare-fun b_free!1983 () Bool)

(declare-fun b_next!1983 () Bool)

(assert (=> b!60410 (= b_free!1983 (not b_next!1983))))

(declare-fun tp!8066 () Bool)

(declare-fun b_and!3675 () Bool)

(assert (=> b!60410 (= tp!8066 b_and!3675)))

(declare-fun b!60402 () Bool)

(declare-fun e!39720 () Bool)

(declare-fun e!39723 () Bool)

(declare-fun mapRes!2911 () Bool)

(assert (=> b!60402 (= e!39720 (and e!39723 mapRes!2911))))

(declare-fun condMapEmpty!2911 () Bool)

(declare-datatypes ((V!2857 0))(
  ( (V!2858 (val!1248 Int)) )
))
(declare-datatypes ((array!3723 0))(
  ( (array!3724 (arr!1780 (Array (_ BitVec 32) (_ BitVec 64))) (size!2012 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!860 0))(
  ( (ValueCellFull!860 (v!2396 V!2857)) (EmptyCell!860) )
))
(declare-datatypes ((array!3725 0))(
  ( (array!3726 (arr!1781 (Array (_ BitVec 32) ValueCell!860)) (size!2013 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!628 0))(
  ( (LongMapFixedSize!629 (defaultEntry!2066 Int) (mask!5961 (_ BitVec 32)) (extraKeys!1949 (_ BitVec 32)) (zeroValue!1980 V!2857) (minValue!1980 V!2857) (_size!363 (_ BitVec 32)) (_keys!3693 array!3723) (_values!2049 array!3725) (_vacant!363 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!432 0))(
  ( (Cell!433 (v!2397 LongMapFixedSize!628)) )
))
(declare-datatypes ((LongMap!432 0))(
  ( (LongMap!433 (underlying!227 Cell!432)) )
))
(declare-fun thiss!992 () LongMap!432)

(declare-fun mapDefault!2911 () ValueCell!860)

(assert (=> b!60402 (= condMapEmpty!2911 (= (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!860)) mapDefault!2911)))))

(declare-fun b!60403 () Bool)

(declare-fun res!33415 () Bool)

(declare-fun e!39722 () Bool)

(assert (=> b!60403 (=> (not res!33415) (not e!39722))))

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!60403 (= res!33415 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!60404 () Bool)

(declare-fun e!39715 () Bool)

(declare-fun e!39728 () Bool)

(declare-fun mapRes!2912 () Bool)

(assert (=> b!60404 (= e!39715 (and e!39728 mapRes!2912))))

(declare-fun condMapEmpty!2912 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!628)

(declare-fun mapDefault!2912 () ValueCell!860)

(assert (=> b!60404 (= condMapEmpty!2912 (= (arr!1781 (_values!2049 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!860)) mapDefault!2912)))))

(declare-fun e!39727 () Bool)

(declare-fun tp_is_empty!2407 () Bool)

(declare-fun array_inv!1105 (array!3723) Bool)

(declare-fun array_inv!1106 (array!3725) Bool)

(assert (=> b!60405 (= e!39727 (and tp!8065 tp_is_empty!2407 (array_inv!1105 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (array_inv!1106 (_values!2049 (v!2397 (underlying!227 thiss!992)))) e!39720))))

(declare-fun b!60406 () Bool)

(declare-fun e!39719 () Bool)

(assert (=> b!60406 (= e!39719 e!39727)))

(declare-fun b!60407 () Bool)

(declare-fun e!39725 () Bool)

(assert (=> b!60407 (= e!39725 (and (= (size!2013 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!5961 (v!2397 (underlying!227 thiss!992))))) (= (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (size!2013 (_values!2049 (v!2397 (underlying!227 thiss!992))))) (bvsge (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun mapNonEmpty!2911 () Bool)

(declare-fun tp!8064 () Bool)

(declare-fun e!39717 () Bool)

(assert (=> mapNonEmpty!2911 (= mapRes!2911 (and tp!8064 e!39717))))

(declare-fun mapKey!2912 () (_ BitVec 32))

(declare-fun mapRest!2912 () (Array (_ BitVec 32) ValueCell!860))

(declare-fun mapValue!2912 () ValueCell!860)

(assert (=> mapNonEmpty!2911 (= (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (store mapRest!2912 mapKey!2912 mapValue!2912))))

(declare-fun b!60408 () Bool)

(assert (=> b!60408 (= e!39723 tp_is_empty!2407)))

(declare-fun res!33411 () Bool)

(assert (=> start!8726 (=> (not res!33411) (not e!39722))))

(declare-fun valid!262 (LongMap!432) Bool)

(assert (=> start!8726 (= res!33411 (valid!262 thiss!992))))

(assert (=> start!8726 e!39722))

(declare-fun e!39726 () Bool)

(assert (=> start!8726 e!39726))

(assert (=> start!8726 true))

(declare-fun e!39724 () Bool)

(assert (=> start!8726 e!39724))

(declare-fun b!60409 () Bool)

(assert (=> b!60409 (= e!39728 tp_is_empty!2407)))

(assert (=> b!60410 (= e!39724 (and tp!8066 tp_is_empty!2407 (array_inv!1105 (_keys!3693 newMap!16)) (array_inv!1106 (_values!2049 newMap!16)) e!39715))))

(declare-fun b!60411 () Bool)

(declare-fun e!39716 () Bool)

(assert (=> b!60411 (= e!39716 tp_is_empty!2407)))

(declare-fun mapIsEmpty!2911 () Bool)

(assert (=> mapIsEmpty!2911 mapRes!2911))

(declare-fun mapNonEmpty!2912 () Bool)

(declare-fun tp!8063 () Bool)

(assert (=> mapNonEmpty!2912 (= mapRes!2912 (and tp!8063 e!39716))))

(declare-fun mapValue!2911 () ValueCell!860)

(declare-fun mapRest!2911 () (Array (_ BitVec 32) ValueCell!860))

(declare-fun mapKey!2911 () (_ BitVec 32))

(assert (=> mapNonEmpty!2912 (= (arr!1781 (_values!2049 newMap!16)) (store mapRest!2911 mapKey!2911 mapValue!2911))))

(declare-fun b!60412 () Bool)

(declare-fun e!39729 () Bool)

(assert (=> b!60412 (= e!39729 e!39725)))

(declare-fun res!33409 () Bool)

(assert (=> b!60412 (=> (not res!33409) (not e!39725))))

(declare-datatypes ((tuple2!2046 0))(
  ( (tuple2!2047 (_1!1034 Bool) (_2!1034 LongMapFixedSize!628)) )
))
(declare-fun lt!24719 () tuple2!2046)

(assert (=> b!60412 (= res!33409 (and (_1!1034 lt!24719) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!1621 0))(
  ( (Unit!1622) )
))
(declare-fun lt!24717 () Unit!1621)

(declare-fun e!39714 () Unit!1621)

(assert (=> b!60412 (= lt!24717 e!39714)))

(declare-datatypes ((tuple2!2048 0))(
  ( (tuple2!2049 (_1!1035 (_ BitVec 64)) (_2!1035 V!2857)) )
))
(declare-datatypes ((List!1443 0))(
  ( (Nil!1440) (Cons!1439 (h!2021 tuple2!2048) (t!4808 List!1443)) )
))
(declare-datatypes ((ListLongMap!1361 0))(
  ( (ListLongMap!1362 (toList!696 List!1443)) )
))
(declare-fun lt!24715 () ListLongMap!1361)

(declare-fun c!7820 () Bool)

(declare-fun contains!687 (ListLongMap!1361 (_ BitVec 64)) Bool)

(assert (=> b!60412 (= c!7820 (contains!687 lt!24715 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun update!87 (LongMapFixedSize!628 (_ BitVec 64) V!2857) tuple2!2046)

(declare-fun get!1083 (ValueCell!860 V!2857) V!2857)

(declare-fun dynLambda!311 (Int (_ BitVec 64)) V!2857)

(assert (=> b!60412 (= lt!24719 (update!87 newMap!16 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!60413 () Bool)

(assert (=> b!60413 (= e!39726 e!39719)))

(declare-fun b!60414 () Bool)

(declare-fun res!33414 () Bool)

(assert (=> b!60414 (=> (not res!33414) (not e!39725))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!60414 (= res!33414 (validMask!0 (mask!5961 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!60415 () Bool)

(declare-fun Unit!1623 () Unit!1621)

(assert (=> b!60415 (= e!39714 Unit!1623)))

(declare-fun lt!24718 () Unit!1621)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!32 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 64) (_ BitVec 32) Int) Unit!1621)

(assert (=> b!60415 (= lt!24718 (lemmaListMapContainsThenArrayContainsFrom!32 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3723 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!60415 (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!24721 () Unit!1621)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3723 (_ BitVec 32) (_ BitVec 32)) Unit!1621)

(assert (=> b!60415 (= lt!24721 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1444 0))(
  ( (Nil!1441) (Cons!1440 (h!2022 (_ BitVec 64)) (t!4809 List!1444)) )
))
(declare-fun arrayNoDuplicates!0 (array!3723 (_ BitVec 32) List!1444) Bool)

(assert (=> b!60415 (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) from!355 Nil!1441)))

(declare-fun lt!24720 () Unit!1621)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3723 (_ BitVec 32) (_ BitVec 64) List!1444) Unit!1621)

(assert (=> b!60415 (= lt!24720 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441)))))

(assert (=> b!60415 false))

(declare-fun b!60416 () Bool)

(assert (=> b!60416 (= e!39717 tp_is_empty!2407)))

(declare-fun b!60417 () Bool)

(declare-fun res!33410 () Bool)

(assert (=> b!60417 (=> (not res!33410) (not e!39722))))

(declare-fun valid!263 (LongMapFixedSize!628) Bool)

(assert (=> b!60417 (= res!33410 (valid!263 newMap!16))))

(declare-fun b!60418 () Bool)

(assert (=> b!60418 (= e!39722 e!39729)))

(declare-fun res!33413 () Bool)

(assert (=> b!60418 (=> (not res!33413) (not e!39729))))

(declare-fun lt!24716 () ListLongMap!1361)

(assert (=> b!60418 (= res!33413 (and (= lt!24716 lt!24715) (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1110 (LongMapFixedSize!628) ListLongMap!1361)

(assert (=> b!60418 (= lt!24715 (map!1110 newMap!16))))

(declare-fun getCurrentListMap!392 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 32) Int) ListLongMap!1361)

(assert (=> b!60418 (= lt!24716 (getCurrentListMap!392 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!60419 () Bool)

(declare-fun Unit!1624 () Unit!1621)

(assert (=> b!60419 (= e!39714 Unit!1624)))

(declare-fun b!60420 () Bool)

(declare-fun res!33412 () Bool)

(assert (=> b!60420 (=> (not res!33412) (not e!39722))))

(assert (=> b!60420 (= res!33412 (bvsge (bvadd #b00000000000000000000000000000001 (mask!5961 newMap!16)) (_size!363 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun mapIsEmpty!2912 () Bool)

(assert (=> mapIsEmpty!2912 mapRes!2912))

(assert (= (and start!8726 res!33411) b!60403))

(assert (= (and b!60403 res!33415) b!60417))

(assert (= (and b!60417 res!33410) b!60420))

(assert (= (and b!60420 res!33412) b!60418))

(assert (= (and b!60418 res!33413) b!60412))

(assert (= (and b!60412 c!7820) b!60415))

(assert (= (and b!60412 (not c!7820)) b!60419))

(assert (= (and b!60412 res!33409) b!60414))

(assert (= (and b!60414 res!33414) b!60407))

(assert (= (and b!60402 condMapEmpty!2911) mapIsEmpty!2911))

(assert (= (and b!60402 (not condMapEmpty!2911)) mapNonEmpty!2911))

(get-info :version)

(assert (= (and mapNonEmpty!2911 ((_ is ValueCellFull!860) mapValue!2912)) b!60416))

(assert (= (and b!60402 ((_ is ValueCellFull!860) mapDefault!2911)) b!60408))

(assert (= b!60405 b!60402))

(assert (= b!60406 b!60405))

(assert (= b!60413 b!60406))

(assert (= start!8726 b!60413))

(assert (= (and b!60404 condMapEmpty!2912) mapIsEmpty!2912))

(assert (= (and b!60404 (not condMapEmpty!2912)) mapNonEmpty!2912))

(assert (= (and mapNonEmpty!2912 ((_ is ValueCellFull!860) mapValue!2911)) b!60411))

(assert (= (and b!60404 ((_ is ValueCellFull!860) mapDefault!2912)) b!60409))

(assert (= b!60410 b!60404))

(assert (= start!8726 b!60410))

(declare-fun b_lambda!2675 () Bool)

(assert (=> (not b_lambda!2675) (not b!60412)))

(declare-fun t!4805 () Bool)

(declare-fun tb!1341 () Bool)

(assert (=> (and b!60405 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))) t!4805) tb!1341))

(declare-fun result!2407 () Bool)

(assert (=> tb!1341 (= result!2407 tp_is_empty!2407)))

(assert (=> b!60412 t!4805))

(declare-fun b_and!3677 () Bool)

(assert (= b_and!3673 (and (=> t!4805 result!2407) b_and!3677)))

(declare-fun tb!1343 () Bool)

(declare-fun t!4807 () Bool)

(assert (=> (and b!60410 (= (defaultEntry!2066 newMap!16) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))) t!4807) tb!1343))

(declare-fun result!2411 () Bool)

(assert (= result!2411 result!2407))

(assert (=> b!60412 t!4807))

(declare-fun b_and!3679 () Bool)

(assert (= b_and!3675 (and (=> t!4807 result!2411) b_and!3679)))

(declare-fun m!52977 () Bool)

(assert (=> b!60418 m!52977))

(declare-fun m!52979 () Bool)

(assert (=> b!60418 m!52979))

(declare-fun m!52981 () Bool)

(assert (=> b!60418 m!52981))

(declare-fun m!52983 () Bool)

(assert (=> b!60412 m!52983))

(declare-fun m!52985 () Bool)

(assert (=> b!60412 m!52985))

(declare-fun m!52987 () Bool)

(assert (=> b!60412 m!52987))

(assert (=> b!60412 m!52977))

(assert (=> b!60412 m!52985))

(assert (=> b!60412 m!52977))

(declare-fun m!52989 () Bool)

(assert (=> b!60412 m!52989))

(assert (=> b!60412 m!52977))

(assert (=> b!60412 m!52987))

(declare-fun m!52991 () Bool)

(assert (=> b!60412 m!52991))

(assert (=> b!60412 m!52983))

(declare-fun m!52993 () Bool)

(assert (=> b!60415 m!52993))

(declare-fun m!52995 () Bool)

(assert (=> b!60415 m!52995))

(assert (=> b!60415 m!52977))

(declare-fun m!52997 () Bool)

(assert (=> b!60415 m!52997))

(assert (=> b!60415 m!52977))

(assert (=> b!60415 m!52977))

(declare-fun m!52999 () Bool)

(assert (=> b!60415 m!52999))

(assert (=> b!60415 m!52977))

(declare-fun m!53001 () Bool)

(assert (=> b!60415 m!53001))

(declare-fun m!53003 () Bool)

(assert (=> mapNonEmpty!2911 m!53003))

(declare-fun m!53005 () Bool)

(assert (=> start!8726 m!53005))

(declare-fun m!53007 () Bool)

(assert (=> mapNonEmpty!2912 m!53007))

(declare-fun m!53009 () Bool)

(assert (=> b!60410 m!53009))

(declare-fun m!53011 () Bool)

(assert (=> b!60410 m!53011))

(declare-fun m!53013 () Bool)

(assert (=> b!60417 m!53013))

(declare-fun m!53015 () Bool)

(assert (=> b!60414 m!53015))

(declare-fun m!53017 () Bool)

(assert (=> b!60405 m!53017))

(declare-fun m!53019 () Bool)

(assert (=> b!60405 m!53019))

(check-sat (not b_lambda!2675) b_and!3677 b_and!3679 (not b!60417) (not mapNonEmpty!2912) tp_is_empty!2407 (not b!60412) (not b!60414) (not mapNonEmpty!2911) (not b!60418) (not start!8726) (not b_next!1983) (not b!60415) (not b!60410) (not b_next!1981) (not b!60405))
(check-sat b_and!3677 b_and!3679 (not b_next!1981) (not b_next!1983))
(get-model)

(declare-fun b_lambda!2681 () Bool)

(assert (= b_lambda!2675 (or (and b!60405 b_free!1981) (and b!60410 b_free!1983 (= (defaultEntry!2066 newMap!16) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))))) b_lambda!2681)))

(check-sat b_and!3677 b_and!3679 (not b_lambda!2681) (not b!60417) (not mapNonEmpty!2912) tp_is_empty!2407 (not b!60412) (not b!60414) (not mapNonEmpty!2911) (not b!60418) (not start!8726) (not b_next!1983) (not b!60415) (not b!60410) (not b_next!1981) (not b!60405))
(check-sat b_and!3677 b_and!3679 (not b_next!1981) (not b_next!1983))
(get-model)

(declare-fun d!11865 () Bool)

(assert (=> d!11865 (= (validMask!0 (mask!5961 (v!2397 (underlying!227 thiss!992)))) (and (or (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000001111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000011111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000001111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000011111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000001111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000011111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000001111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000011111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000001111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000011111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000001111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000011111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000111111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000001111111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000011111111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000111111111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000001111111111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000011111111111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000111111111111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00001111111111111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00011111111111111111111111111111) (= (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!60414 d!11865))

(declare-fun d!11867 () Bool)

(assert (=> d!11867 (= (array_inv!1105 (_keys!3693 newMap!16)) (bvsge (size!2012 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!60410 d!11867))

(declare-fun d!11869 () Bool)

(assert (=> d!11869 (= (array_inv!1106 (_values!2049 newMap!16)) (bvsge (size!2013 (_values!2049 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!60410 d!11869))

(declare-fun d!11871 () Bool)

(assert (=> d!11871 (= (array_inv!1105 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvsge (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!60405 d!11871))

(declare-fun d!11873 () Bool)

(assert (=> d!11873 (= (array_inv!1106 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvsge (size!2013 (_values!2049 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!60405 d!11873))

(declare-fun d!11875 () Bool)

(assert (=> d!11875 (= (map!1110 newMap!16) (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun bs!2628 () Bool)

(assert (= bs!2628 d!11875))

(declare-fun m!53109 () Bool)

(assert (=> bs!2628 m!53109))

(assert (=> b!60418 d!11875))

(declare-fun bm!4568 () Bool)

(declare-fun call!4577 () ListLongMap!1361)

(declare-fun call!4576 () ListLongMap!1361)

(assert (=> bm!4568 (= call!4577 call!4576)))

(declare-fun b!60583 () Bool)

(declare-fun e!39857 () Unit!1621)

(declare-fun lt!24808 () Unit!1621)

(assert (=> b!60583 (= e!39857 lt!24808)))

(declare-fun lt!24815 () ListLongMap!1361)

(declare-fun getCurrentListMapNoExtraKeys!45 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 32) Int) ListLongMap!1361)

(assert (=> b!60583 (= lt!24815 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun lt!24813 () (_ BitVec 64))

(assert (=> b!60583 (= lt!24813 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24809 () (_ BitVec 64))

(assert (=> b!60583 (= lt!24809 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!24822 () Unit!1621)

(declare-fun addStillContains!43 (ListLongMap!1361 (_ BitVec 64) V!2857 (_ BitVec 64)) Unit!1621)

(assert (=> b!60583 (= lt!24822 (addStillContains!43 lt!24815 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24809))))

(declare-fun +!82 (ListLongMap!1361 tuple2!2048) ListLongMap!1361)

(assert (=> b!60583 (contains!687 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24809)))

(declare-fun lt!24828 () Unit!1621)

(assert (=> b!60583 (= lt!24828 lt!24822)))

(declare-fun lt!24819 () ListLongMap!1361)

(assert (=> b!60583 (= lt!24819 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun lt!24823 () (_ BitVec 64))

(assert (=> b!60583 (= lt!24823 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24826 () (_ BitVec 64))

(assert (=> b!60583 (= lt!24826 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!24816 () Unit!1621)

(declare-fun addApplyDifferent!43 (ListLongMap!1361 (_ BitVec 64) V!2857 (_ BitVec 64)) Unit!1621)

(assert (=> b!60583 (= lt!24816 (addApplyDifferent!43 lt!24819 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24826))))

(declare-fun apply!67 (ListLongMap!1361 (_ BitVec 64)) V!2857)

(assert (=> b!60583 (= (apply!67 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24826) (apply!67 lt!24819 lt!24826))))

(declare-fun lt!24817 () Unit!1621)

(assert (=> b!60583 (= lt!24817 lt!24816)))

(declare-fun lt!24824 () ListLongMap!1361)

(assert (=> b!60583 (= lt!24824 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun lt!24814 () (_ BitVec 64))

(assert (=> b!60583 (= lt!24814 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24829 () (_ BitVec 64))

(assert (=> b!60583 (= lt!24829 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!24812 () Unit!1621)

(assert (=> b!60583 (= lt!24812 (addApplyDifferent!43 lt!24824 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24829))))

(assert (=> b!60583 (= (apply!67 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24829) (apply!67 lt!24824 lt!24829))))

(declare-fun lt!24811 () Unit!1621)

(assert (=> b!60583 (= lt!24811 lt!24812)))

(declare-fun lt!24827 () ListLongMap!1361)

(assert (=> b!60583 (= lt!24827 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun lt!24820 () (_ BitVec 64))

(assert (=> b!60583 (= lt!24820 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!24818 () (_ BitVec 64))

(assert (=> b!60583 (= lt!24818 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!60583 (= lt!24808 (addApplyDifferent!43 lt!24827 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24818))))

(assert (=> b!60583 (= (apply!67 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24818) (apply!67 lt!24827 lt!24818))))

(declare-fun b!60584 () Bool)

(declare-fun e!39860 () Bool)

(declare-fun lt!24825 () ListLongMap!1361)

(assert (=> b!60584 (= e!39860 (= (apply!67 lt!24825 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!60585 () Bool)

(declare-fun e!39862 () Bool)

(declare-fun call!4574 () Bool)

(assert (=> b!60585 (= e!39862 (not call!4574))))

(declare-fun bm!4569 () Bool)

(assert (=> bm!4569 (= call!4576 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!60586 () Bool)

(declare-fun e!39864 () Bool)

(assert (=> b!60586 (= e!39864 (= (apply!67 lt!24825 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!60587 () Bool)

(declare-fun e!39859 () ListLongMap!1361)

(declare-fun e!39858 () ListLongMap!1361)

(assert (=> b!60587 (= e!39859 e!39858)))

(declare-fun c!7843 () Bool)

(assert (=> b!60587 (= c!7843 (and (not (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4570 () Bool)

(declare-fun call!4572 () ListLongMap!1361)

(assert (=> bm!4570 (= call!4572 call!4577)))

(declare-fun b!60588 () Bool)

(declare-fun res!33479 () Bool)

(declare-fun e!39853 () Bool)

(assert (=> b!60588 (=> (not res!33479) (not e!39853))))

(declare-fun e!39855 () Bool)

(assert (=> b!60588 (= res!33479 e!39855)))

(declare-fun res!33478 () Bool)

(assert (=> b!60588 (=> res!33478 e!39855)))

(declare-fun e!39861 () Bool)

(assert (=> b!60588 (= res!33478 (not e!39861))))

(declare-fun res!33484 () Bool)

(assert (=> b!60588 (=> (not res!33484) (not e!39861))))

(assert (=> b!60588 (= res!33484 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!60589 () Bool)

(declare-fun e!39852 () Bool)

(assert (=> b!60589 (= e!39855 e!39852)))

(declare-fun res!33480 () Bool)

(assert (=> b!60589 (=> (not res!33480) (not e!39852))))

(assert (=> b!60589 (= res!33480 (contains!687 lt!24825 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!60589 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun bm!4571 () Bool)

(assert (=> bm!4571 (= call!4574 (contains!687 lt!24825 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60590 () Bool)

(declare-fun res!33481 () Bool)

(assert (=> b!60590 (=> (not res!33481) (not e!39853))))

(declare-fun e!39863 () Bool)

(assert (=> b!60590 (= res!33481 e!39863)))

(declare-fun c!7844 () Bool)

(assert (=> b!60590 (= c!7844 (not (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!60591 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!60591 (= e!39861 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!7841 () Bool)

(declare-fun bm!4572 () Bool)

(declare-fun call!4575 () ListLongMap!1361)

(assert (=> bm!4572 (= call!4575 (+!82 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572)) (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!60592 () Bool)

(assert (=> b!60592 (= e!39853 e!39862)))

(declare-fun c!7842 () Bool)

(assert (=> b!60592 (= c!7842 (not (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!60593 () Bool)

(declare-fun Unit!1629 () Unit!1621)

(assert (=> b!60593 (= e!39857 Unit!1629)))

(declare-fun b!60594 () Bool)

(declare-fun call!4573 () ListLongMap!1361)

(assert (=> b!60594 (= e!39858 call!4573)))

(declare-fun b!60595 () Bool)

(declare-fun e!39856 () ListLongMap!1361)

(assert (=> b!60595 (= e!39856 call!4572)))

(declare-fun b!60596 () Bool)

(assert (=> b!60596 (= e!39859 (+!82 call!4575 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!60597 () Bool)

(declare-fun e!39854 () Bool)

(assert (=> b!60597 (= e!39854 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!60598 () Bool)

(declare-fun c!7840 () Bool)

(assert (=> b!60598 (= c!7840 (and (not (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!60598 (= e!39858 e!39856)))

(declare-fun b!60599 () Bool)

(assert (=> b!60599 (= e!39862 e!39864)))

(declare-fun res!33482 () Bool)

(assert (=> b!60599 (= res!33482 call!4574)))

(assert (=> b!60599 (=> (not res!33482) (not e!39864))))

(declare-fun d!11877 () Bool)

(assert (=> d!11877 e!39853))

(declare-fun res!33483 () Bool)

(assert (=> d!11877 (=> (not res!33483) (not e!39853))))

(assert (=> d!11877 (= res!33483 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun lt!24810 () ListLongMap!1361)

(assert (=> d!11877 (= lt!24825 lt!24810)))

(declare-fun lt!24821 () Unit!1621)

(assert (=> d!11877 (= lt!24821 e!39857)))

(declare-fun c!7839 () Bool)

(assert (=> d!11877 (= c!7839 e!39854)))

(declare-fun res!33476 () Bool)

(assert (=> d!11877 (=> (not res!33476) (not e!39854))))

(assert (=> d!11877 (= res!33476 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> d!11877 (= lt!24810 e!39859)))

(assert (=> d!11877 (= c!7841 (and (not (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11877 (validMask!0 (mask!5961 (v!2397 (underlying!227 thiss!992))))))

(assert (=> d!11877 (= (getCurrentListMap!392 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))) lt!24825)))

(declare-fun b!60600 () Bool)

(declare-fun call!4571 () Bool)

(assert (=> b!60600 (= e!39863 (not call!4571))))

(declare-fun b!60601 () Bool)

(assert (=> b!60601 (= e!39852 (= (apply!67 lt!24825 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!60601 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2013 (_values!2049 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> b!60601 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!60602 () Bool)

(assert (=> b!60602 (= e!39856 call!4573)))

(declare-fun b!60603 () Bool)

(assert (=> b!60603 (= e!39863 e!39860)))

(declare-fun res!33477 () Bool)

(assert (=> b!60603 (= res!33477 call!4571)))

(assert (=> b!60603 (=> (not res!33477) (not e!39860))))

(declare-fun bm!4573 () Bool)

(assert (=> bm!4573 (= call!4571 (contains!687 lt!24825 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4574 () Bool)

(assert (=> bm!4574 (= call!4573 call!4575)))

(assert (= (and d!11877 c!7841) b!60596))

(assert (= (and d!11877 (not c!7841)) b!60587))

(assert (= (and b!60587 c!7843) b!60594))

(assert (= (and b!60587 (not c!7843)) b!60598))

(assert (= (and b!60598 c!7840) b!60602))

(assert (= (and b!60598 (not c!7840)) b!60595))

(assert (= (or b!60602 b!60595) bm!4570))

(assert (= (or b!60594 bm!4570) bm!4568))

(assert (= (or b!60594 b!60602) bm!4574))

(assert (= (or b!60596 bm!4568) bm!4569))

(assert (= (or b!60596 bm!4574) bm!4572))

(assert (= (and d!11877 res!33476) b!60597))

(assert (= (and d!11877 c!7839) b!60583))

(assert (= (and d!11877 (not c!7839)) b!60593))

(assert (= (and d!11877 res!33483) b!60588))

(assert (= (and b!60588 res!33484) b!60591))

(assert (= (and b!60588 (not res!33478)) b!60589))

(assert (= (and b!60589 res!33480) b!60601))

(assert (= (and b!60588 res!33479) b!60590))

(assert (= (and b!60590 c!7844) b!60603))

(assert (= (and b!60590 (not c!7844)) b!60600))

(assert (= (and b!60603 res!33477) b!60584))

(assert (= (or b!60603 b!60600) bm!4573))

(assert (= (and b!60590 res!33481) b!60592))

(assert (= (and b!60592 c!7842) b!60599))

(assert (= (and b!60592 (not c!7842)) b!60585))

(assert (= (and b!60599 res!33482) b!60586))

(assert (= (or b!60599 b!60585) bm!4571))

(declare-fun b_lambda!2683 () Bool)

(assert (=> (not b_lambda!2683) (not b!60601)))

(assert (=> b!60601 t!4805))

(declare-fun b_and!3697 () Bool)

(assert (= b_and!3677 (and (=> t!4805 result!2407) b_and!3697)))

(assert (=> b!60601 t!4807))

(declare-fun b_and!3699 () Bool)

(assert (= b_and!3679 (and (=> t!4807 result!2411) b_and!3699)))

(declare-fun m!53111 () Bool)

(assert (=> b!60591 m!53111))

(assert (=> b!60591 m!53111))

(declare-fun m!53113 () Bool)

(assert (=> b!60591 m!53113))

(declare-fun m!53115 () Bool)

(assert (=> b!60601 m!53115))

(assert (=> b!60601 m!52985))

(declare-fun m!53117 () Bool)

(assert (=> b!60601 m!53117))

(assert (=> b!60601 m!53115))

(assert (=> b!60601 m!53111))

(declare-fun m!53119 () Bool)

(assert (=> b!60601 m!53119))

(assert (=> b!60601 m!53111))

(assert (=> b!60601 m!52985))

(declare-fun m!53121 () Bool)

(assert (=> b!60583 m!53121))

(declare-fun m!53123 () Bool)

(assert (=> b!60583 m!53123))

(declare-fun m!53125 () Bool)

(assert (=> b!60583 m!53125))

(declare-fun m!53127 () Bool)

(assert (=> b!60583 m!53127))

(declare-fun m!53129 () Bool)

(assert (=> b!60583 m!53129))

(declare-fun m!53131 () Bool)

(assert (=> b!60583 m!53131))

(assert (=> b!60583 m!53127))

(declare-fun m!53133 () Bool)

(assert (=> b!60583 m!53133))

(declare-fun m!53135 () Bool)

(assert (=> b!60583 m!53135))

(declare-fun m!53137 () Bool)

(assert (=> b!60583 m!53137))

(declare-fun m!53139 () Bool)

(assert (=> b!60583 m!53139))

(assert (=> b!60583 m!53111))

(assert (=> b!60583 m!53129))

(assert (=> b!60583 m!53123))

(declare-fun m!53141 () Bool)

(assert (=> b!60583 m!53141))

(declare-fun m!53143 () Bool)

(assert (=> b!60583 m!53143))

(declare-fun m!53145 () Bool)

(assert (=> b!60583 m!53145))

(assert (=> b!60583 m!53143))

(declare-fun m!53147 () Bool)

(assert (=> b!60583 m!53147))

(declare-fun m!53149 () Bool)

(assert (=> b!60583 m!53149))

(declare-fun m!53151 () Bool)

(assert (=> b!60583 m!53151))

(declare-fun m!53153 () Bool)

(assert (=> b!60586 m!53153))

(assert (=> bm!4569 m!53125))

(declare-fun m!53155 () Bool)

(assert (=> bm!4573 m!53155))

(assert (=> b!60597 m!53111))

(assert (=> b!60597 m!53111))

(assert (=> b!60597 m!53113))

(declare-fun m!53157 () Bool)

(assert (=> b!60596 m!53157))

(declare-fun m!53159 () Bool)

(assert (=> b!60584 m!53159))

(assert (=> d!11877 m!53015))

(declare-fun m!53161 () Bool)

(assert (=> bm!4571 m!53161))

(assert (=> b!60589 m!53111))

(assert (=> b!60589 m!53111))

(declare-fun m!53163 () Bool)

(assert (=> b!60589 m!53163))

(declare-fun m!53165 () Bool)

(assert (=> bm!4572 m!53165))

(assert (=> b!60418 d!11877))

(declare-fun d!11879 () Bool)

(declare-fun e!39870 () Bool)

(assert (=> d!11879 e!39870))

(declare-fun res!33487 () Bool)

(assert (=> d!11879 (=> res!33487 e!39870)))

(declare-fun lt!24841 () Bool)

(assert (=> d!11879 (= res!33487 (not lt!24841))))

(declare-fun lt!24839 () Bool)

(assert (=> d!11879 (= lt!24841 lt!24839)))

(declare-fun lt!24838 () Unit!1621)

(declare-fun e!39869 () Unit!1621)

(assert (=> d!11879 (= lt!24838 e!39869)))

(declare-fun c!7847 () Bool)

(assert (=> d!11879 (= c!7847 lt!24839)))

(declare-fun containsKey!127 (List!1443 (_ BitVec 64)) Bool)

(assert (=> d!11879 (= lt!24839 (containsKey!127 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!11879 (= (contains!687 lt!24715 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) lt!24841)))

(declare-fun b!60610 () Bool)

(declare-fun lt!24840 () Unit!1621)

(assert (=> b!60610 (= e!39869 lt!24840)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!76 (List!1443 (_ BitVec 64)) Unit!1621)

(assert (=> b!60610 (= lt!24840 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-datatypes ((Option!129 0))(
  ( (Some!128 (v!2402 V!2857)) (None!127) )
))
(declare-fun isDefined!77 (Option!129) Bool)

(declare-fun getValueByKey!123 (List!1443 (_ BitVec 64)) Option!129)

(assert (=> b!60610 (isDefined!77 (getValueByKey!123 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!60611 () Bool)

(declare-fun Unit!1630 () Unit!1621)

(assert (=> b!60611 (= e!39869 Unit!1630)))

(declare-fun b!60612 () Bool)

(assert (=> b!60612 (= e!39870 (isDefined!77 (getValueByKey!123 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(assert (= (and d!11879 c!7847) b!60610))

(assert (= (and d!11879 (not c!7847)) b!60611))

(assert (= (and d!11879 (not res!33487)) b!60612))

(assert (=> d!11879 m!52977))

(declare-fun m!53167 () Bool)

(assert (=> d!11879 m!53167))

(assert (=> b!60610 m!52977))

(declare-fun m!53169 () Bool)

(assert (=> b!60610 m!53169))

(assert (=> b!60610 m!52977))

(declare-fun m!53171 () Bool)

(assert (=> b!60610 m!53171))

(assert (=> b!60610 m!53171))

(declare-fun m!53173 () Bool)

(assert (=> b!60610 m!53173))

(assert (=> b!60612 m!52977))

(assert (=> b!60612 m!53171))

(assert (=> b!60612 m!53171))

(assert (=> b!60612 m!53173))

(assert (=> b!60412 d!11879))

(declare-fun b!60697 () Bool)

(declare-fun e!39935 () Bool)

(declare-fun e!39928 () Bool)

(assert (=> b!60697 (= e!39935 e!39928)))

(declare-fun call!4636 () ListLongMap!1361)

(declare-fun res!33523 () Bool)

(assert (=> b!60697 (= res!33523 (contains!687 call!4636 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> b!60697 (=> (not res!33523) (not e!39928))))

(declare-fun bm!4623 () Bool)

(declare-fun call!4626 () ListLongMap!1361)

(declare-fun call!4647 () ListLongMap!1361)

(assert (=> bm!4623 (= call!4626 call!4647)))

(declare-fun bm!4624 () Bool)

(declare-datatypes ((SeekEntryResult!231 0))(
  ( (MissingZero!231 (index!3048 (_ BitVec 32))) (Found!231 (index!3049 (_ BitVec 32))) (Intermediate!231 (undefined!1043 Bool) (index!3050 (_ BitVec 32)) (x!10164 (_ BitVec 32))) (Undefined!231) (MissingVacant!231 (index!3051 (_ BitVec 32))) )
))
(declare-fun call!4645 () SeekEntryResult!231)

(declare-fun call!4648 () SeekEntryResult!231)

(assert (=> bm!4624 (= call!4645 call!4648)))

(declare-fun bm!4625 () Bool)

(declare-fun call!4644 () Bool)

(declare-fun call!4633 () Bool)

(assert (=> bm!4625 (= call!4644 call!4633)))

(declare-fun b!60698 () Bool)

(declare-fun res!33519 () Bool)

(declare-fun lt!24911 () SeekEntryResult!231)

(assert (=> b!60698 (= res!33519 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3051 lt!24911)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!39920 () Bool)

(assert (=> b!60698 (=> (not res!33519) (not e!39920))))

(declare-fun b!60699 () Bool)

(declare-fun e!39924 () ListLongMap!1361)

(assert (=> b!60699 (= e!39924 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun b!60700 () Bool)

(declare-fun call!4628 () ListLongMap!1361)

(assert (=> b!60700 (= e!39928 (= call!4636 (+!82 call!4628 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!4626 () Bool)

(assert (=> bm!4626 (= call!4633 (arrayContainsKey!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!4627 () Bool)

(assert (=> bm!4627 (= call!4628 (map!1110 newMap!16))))

(declare-fun b!60701 () Bool)

(declare-fun res!33528 () Bool)

(declare-fun lt!24913 () SeekEntryResult!231)

(assert (=> b!60701 (= res!33528 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3051 lt!24913)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!39917 () Bool)

(assert (=> b!60701 (=> (not res!33528) (not e!39917))))

(declare-fun bm!4628 () Bool)

(declare-fun call!4631 () ListLongMap!1361)

(declare-fun call!4646 () ListLongMap!1361)

(assert (=> bm!4628 (= call!4631 call!4646)))

(declare-fun b!60702 () Bool)

(declare-fun e!39921 () Bool)

(assert (=> b!60702 (= e!39921 e!39920)))

(declare-fun res!33529 () Bool)

(declare-fun call!4638 () Bool)

(assert (=> b!60702 (= res!33529 call!4638)))

(assert (=> b!60702 (=> (not res!33529) (not e!39920))))

(declare-fun b!60703 () Bool)

(declare-fun lt!24910 () Unit!1621)

(declare-fun lt!24905 () Unit!1621)

(assert (=> b!60703 (= lt!24910 lt!24905)))

(declare-fun lt!24917 () SeekEntryResult!231)

(assert (=> b!60703 (contains!687 call!4646 (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917)))))

(declare-fun lt!24922 () array!3725)

(declare-fun lemmaValidKeyInArrayIsInListMap!75 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 32) Int) Unit!1621)

(assert (=> b!60703 (= lt!24905 (lemmaValidKeyInArrayIsInListMap!75 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (index!3049 lt!24917) (defaultEntry!2066 newMap!16)))))

(assert (=> b!60703 (= lt!24922 (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))))

(declare-fun lt!24901 () Unit!1621)

(declare-fun lt!24904 () Unit!1621)

(assert (=> b!60703 (= lt!24901 lt!24904)))

(declare-fun call!4632 () ListLongMap!1361)

(declare-fun call!4635 () ListLongMap!1361)

(assert (=> b!60703 (= call!4632 call!4635)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!16 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 32) (_ BitVec 64) V!2857 Int) Unit!1621)

(assert (=> b!60703 (= lt!24904 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (index!3049 lt!24917) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)))))

(declare-fun lt!24908 () Unit!1621)

(declare-fun e!39927 () Unit!1621)

(assert (=> b!60703 (= lt!24908 e!39927)))

(declare-fun c!7881 () Bool)

(declare-fun call!4629 () Bool)

(assert (=> b!60703 (= c!7881 call!4629)))

(declare-fun e!39931 () tuple2!2046)

(assert (=> b!60703 (= e!39931 (tuple2!2047 true (LongMapFixedSize!629 (defaultEntry!2066 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (_size!363 newMap!16) (_keys!3693 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (_vacant!363 newMap!16))))))

(declare-fun bm!4629 () Bool)

(declare-fun call!4643 () Unit!1621)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!16 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 64) Int) Unit!1621)

(assert (=> bm!4629 (= call!4643 (lemmaInListMapThenSeekEntryOrOpenFindsIt!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (defaultEntry!2066 newMap!16)))))

(declare-fun b!60704 () Bool)

(declare-fun e!39934 () Bool)

(assert (=> b!60704 (= e!39934 (not call!4644))))

(declare-fun b!60705 () Bool)

(declare-fun c!7884 () Bool)

(assert (=> b!60705 (= c!7884 ((_ is MissingVacant!231) lt!24917))))

(declare-fun e!39930 () tuple2!2046)

(declare-fun e!39916 () tuple2!2046)

(assert (=> b!60705 (= e!39930 e!39916)))

(declare-fun b!60706 () Bool)

(declare-fun res!33520 () Bool)

(declare-fun e!39926 () Bool)

(assert (=> b!60706 (=> (not res!33520) (not e!39926))))

(assert (=> b!60706 (= res!33520 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3048 lt!24913)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!7882 () Bool)

(declare-fun c!7887 () Bool)

(declare-fun bm!4630 () Bool)

(assert (=> bm!4630 (= call!4632 (+!82 e!39924 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!7889 () Bool)

(assert (=> bm!4630 (= c!7889 c!7887)))

(declare-fun b!60707 () Bool)

(declare-fun lt!24916 () Unit!1621)

(assert (=> b!60707 (= e!39927 lt!24916)))

(assert (=> b!60707 (= lt!24916 call!4643)))

(declare-fun lt!24919 () SeekEntryResult!231)

(assert (=> b!60707 (= lt!24919 call!4645)))

(declare-fun res!33524 () Bool)

(assert (=> b!60707 (= res!33524 ((_ is Found!231) lt!24919))))

(declare-fun e!39918 () Bool)

(assert (=> b!60707 (=> (not res!33524) (not e!39918))))

(assert (=> b!60707 e!39918))

(declare-fun b!60708 () Bool)

(declare-fun res!33527 () Bool)

(assert (=> b!60708 (=> (not res!33527) (not e!39934))))

(assert (=> b!60708 (= res!33527 call!4638)))

(declare-fun e!39925 () Bool)

(assert (=> b!60708 (= e!39925 e!39934)))

(declare-fun bm!4631 () Bool)

(declare-fun call!4649 () ListLongMap!1361)

(assert (=> bm!4631 (= call!4649 call!4632)))

(declare-fun b!60709 () Bool)

(declare-fun Unit!1631 () Unit!1621)

(assert (=> b!60709 (= e!39927 Unit!1631)))

(declare-fun lt!24899 () Unit!1621)

(declare-fun call!4637 () Unit!1621)

(assert (=> b!60709 (= lt!24899 call!4637)))

(assert (=> b!60709 (= lt!24913 call!4645)))

(declare-fun c!7888 () Bool)

(assert (=> b!60709 (= c!7888 ((_ is MissingZero!231) lt!24913))))

(declare-fun e!39932 () Bool)

(assert (=> b!60709 e!39932))

(declare-fun lt!24907 () Unit!1621)

(assert (=> b!60709 (= lt!24907 lt!24899)))

(assert (=> b!60709 false))

(declare-fun b!60710 () Bool)

(declare-fun e!39929 () ListLongMap!1361)

(assert (=> b!60710 (= e!39929 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun bm!4632 () Bool)

(declare-fun call!4634 () Bool)

(declare-fun call!4640 () Bool)

(assert (=> bm!4632 (= call!4634 call!4640)))

(declare-fun b!60711 () Bool)

(assert (=> b!60711 (= e!39935 (= call!4636 call!4628))))

(declare-fun bm!4633 () Bool)

(declare-fun call!4639 () SeekEntryResult!231)

(assert (=> bm!4633 (= call!4639 call!4648)))

(declare-fun b!60712 () Bool)

(assert (=> b!60712 (= e!39929 call!4635)))

(declare-fun b!60713 () Bool)

(declare-fun lt!24914 () Unit!1621)

(declare-fun lt!24921 () Unit!1621)

(assert (=> b!60713 (= lt!24914 lt!24921)))

(assert (=> b!60713 (= call!4649 call!4626)))

(declare-fun lt!24897 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!16 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 V!2857 Int) Unit!1621)

(assert (=> b!60713 (= lt!24921 (lemmaChangeLongMinValueKeyThenAddPairToListMap!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)))))

(assert (=> b!60713 (= lt!24897 (bvor (extraKeys!1949 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!39919 () tuple2!2046)

(assert (=> b!60713 (= e!39919 (tuple2!2047 true (LongMapFixedSize!629 (defaultEntry!2066 newMap!16) (mask!5961 newMap!16) (bvor (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!363 newMap!16) (_keys!3693 newMap!16) (_values!2049 newMap!16) (_vacant!363 newMap!16))))))

(declare-fun b!60714 () Bool)

(assert (=> b!60714 (= e!39916 e!39931)))

(declare-fun c!7883 () Bool)

(assert (=> b!60714 (= c!7883 ((_ is MissingZero!231) lt!24917))))

(declare-fun b!60715 () Bool)

(declare-fun res!33518 () Bool)

(assert (=> b!60715 (=> (not res!33518) (not e!39926))))

(declare-fun call!4641 () Bool)

(assert (=> b!60715 (= res!33518 call!4641)))

(assert (=> b!60715 (= e!39932 e!39926)))

(declare-fun b!60716 () Bool)

(declare-fun e!39933 () tuple2!2046)

(assert (=> b!60716 (= e!39933 e!39930)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3723 (_ BitVec 32)) SeekEntryResult!231)

(assert (=> b!60716 (= lt!24917 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun c!7877 () Bool)

(assert (=> b!60716 (= c!7877 ((_ is Undefined!231) lt!24917))))

(declare-fun b!60717 () Bool)

(declare-fun res!33517 () Bool)

(assert (=> b!60717 (=> (not res!33517) (not e!39934))))

(assert (=> b!60717 (= res!33517 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3048 lt!24911)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4634 () Bool)

(declare-fun lt!24902 () tuple2!2046)

(assert (=> bm!4634 (= call!4636 (map!1110 (_2!1034 lt!24902)))))

(declare-fun c!7879 () Bool)

(declare-fun lt!24900 () SeekEntryResult!231)

(declare-fun c!7886 () Bool)

(declare-fun bm!4635 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!4635 (= call!4640 (inRange!0 (ite c!7877 (ite c!7886 (index!3049 lt!24900) (ite c!7879 (index!3048 lt!24911) (index!3051 lt!24911))) (ite c!7881 (index!3049 lt!24919) (ite c!7888 (index!3048 lt!24913) (index!3051 lt!24913)))) (mask!5961 newMap!16)))))

(declare-fun b!60718 () Bool)

(assert (=> b!60718 (= e!39918 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24919)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun bm!4636 () Bool)

(declare-fun call!4630 () Bool)

(assert (=> bm!4636 (= call!4638 call!4630)))

(declare-fun bm!4637 () Bool)

(assert (=> bm!4637 (= call!4630 call!4640)))

(declare-fun b!60719 () Bool)

(declare-fun lt!24918 () tuple2!2046)

(declare-fun call!4627 () tuple2!2046)

(assert (=> b!60719 (= lt!24918 call!4627)))

(assert (=> b!60719 (= e!39931 (tuple2!2047 (_1!1034 lt!24918) (_2!1034 lt!24918)))))

(declare-fun b!60720 () Bool)

(declare-fun call!4642 () Bool)

(assert (=> b!60720 (= e!39917 (not call!4642))))

(declare-fun b!60721 () Bool)

(declare-fun e!39915 () Bool)

(assert (=> b!60721 (= e!39915 e!39935)))

(declare-fun c!7876 () Bool)

(assert (=> b!60721 (= c!7876 (_1!1034 lt!24902))))

(declare-fun d!11881 () Bool)

(assert (=> d!11881 e!39915))

(declare-fun res!33525 () Bool)

(assert (=> d!11881 (=> (not res!33525) (not e!39915))))

(assert (=> d!11881 (= res!33525 (valid!263 (_2!1034 lt!24902)))))

(assert (=> d!11881 (= lt!24902 e!39933)))

(assert (=> d!11881 (= c!7887 (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvneg (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(assert (=> d!11881 (valid!263 newMap!16)))

(assert (=> d!11881 (= (update!87 newMap!16 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!24902)))

(declare-fun bm!4638 () Bool)

(assert (=> bm!4638 (= call!4648 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun b!60722 () Bool)

(declare-fun e!39936 () Bool)

(assert (=> b!60722 (= e!39936 e!39917)))

(declare-fun res!33526 () Bool)

(assert (=> b!60722 (= res!33526 call!4641)))

(assert (=> b!60722 (=> (not res!33526) (not e!39917))))

(declare-fun bm!4639 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!16 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 64) Int) Unit!1621)

(assert (=> bm!4639 (= call!4637 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (defaultEntry!2066 newMap!16)))))

(declare-fun b!60723 () Bool)

(assert (=> b!60723 (= e!39936 ((_ is Undefined!231) lt!24913))))

(declare-fun b!60724 () Bool)

(declare-fun res!33522 () Bool)

(assert (=> b!60724 (= res!33522 call!4630)))

(declare-fun e!39923 () Bool)

(assert (=> b!60724 (=> (not res!33522) (not e!39923))))

(declare-fun b!60725 () Bool)

(assert (=> b!60725 (= e!39933 e!39919)))

(assert (=> b!60725 (= c!7882 (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60726 () Bool)

(assert (=> b!60726 (= e!39920 (not call!4644))))

(declare-fun lt!24912 () (_ BitVec 32))

(declare-fun bm!4640 () Bool)

(assert (=> bm!4640 (= call!4647 (getCurrentListMap!392 (_keys!3693 newMap!16) (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) (mask!5961 newMap!16) (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun b!60727 () Bool)

(declare-fun lt!24903 () tuple2!2046)

(assert (=> b!60727 (= e!39916 (tuple2!2047 (_1!1034 lt!24903) (_2!1034 lt!24903)))))

(assert (=> b!60727 (= lt!24903 call!4627)))

(declare-fun b!60728 () Bool)

(assert (=> b!60728 (= e!39926 (not call!4642))))

(declare-fun b!60729 () Bool)

(declare-fun c!7885 () Bool)

(assert (=> b!60729 (= c!7885 ((_ is MissingVacant!231) lt!24913))))

(assert (=> b!60729 (= e!39932 e!39936)))

(declare-fun b!60730 () Bool)

(declare-fun lt!24896 () Unit!1621)

(declare-fun lt!24920 () Unit!1621)

(assert (=> b!60730 (= lt!24896 lt!24920)))

(assert (=> b!60730 (= call!4649 call!4626)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!16 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 V!2857 Int) Unit!1621)

(assert (=> b!60730 (= lt!24920 (lemmaChangeZeroKeyThenAddPairToListMap!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) lt!24912 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) (defaultEntry!2066 newMap!16)))))

(assert (=> b!60730 (= lt!24912 (bvor (extraKeys!1949 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!60730 (= e!39919 (tuple2!2047 true (LongMapFixedSize!629 (defaultEntry!2066 newMap!16) (mask!5961 newMap!16) (bvor (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) (_size!363 newMap!16) (_keys!3693 newMap!16) (_values!2049 newMap!16) (_vacant!363 newMap!16))))))

(declare-fun b!60731 () Bool)

(declare-fun c!7880 () Bool)

(assert (=> b!60731 (= c!7880 ((_ is MissingVacant!231) lt!24911))))

(assert (=> b!60731 (= e!39925 e!39921)))

(declare-fun bm!4641 () Bool)

(assert (=> bm!4641 (= call!4641 call!4634)))

(declare-fun b!60732 () Bool)

(assert (=> b!60732 (= e!39924 call!4631)))

(declare-fun bm!4642 () Bool)

(assert (=> bm!4642 (= call!4646 (getCurrentListMap!392 (_keys!3693 newMap!16) (ite c!7887 (_values!2049 newMap!16) lt!24922) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun b!60733 () Bool)

(assert (=> b!60733 (= e!39921 ((_ is Undefined!231) lt!24911))))

(declare-fun b!60734 () Bool)

(assert (=> b!60734 (= e!39923 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24900)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun bm!4643 () Bool)

(declare-fun updateHelperNewKey!16 (LongMapFixedSize!628 (_ BitVec 64) V!2857 (_ BitVec 32)) tuple2!2046)

(assert (=> bm!4643 (= call!4627 (updateHelperNewKey!16 newMap!16 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))))))

(declare-fun bm!4644 () Bool)

(declare-fun c!7878 () Bool)

(assert (=> bm!4644 (= c!7878 c!7877)))

(assert (=> bm!4644 (= call!4629 (contains!687 e!39929 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!60735 () Bool)

(declare-fun e!39922 () Unit!1621)

(declare-fun lt!24898 () Unit!1621)

(assert (=> b!60735 (= e!39922 lt!24898)))

(assert (=> b!60735 (= lt!24898 call!4637)))

(assert (=> b!60735 (= lt!24911 call!4639)))

(assert (=> b!60735 (= c!7879 ((_ is MissingZero!231) lt!24911))))

(assert (=> b!60735 e!39925))

(declare-fun b!60736 () Bool)

(declare-fun res!33516 () Bool)

(assert (=> b!60736 (= res!33516 call!4634)))

(assert (=> b!60736 (=> (not res!33516) (not e!39918))))

(declare-fun bm!4645 () Bool)

(assert (=> bm!4645 (= call!4642 call!4633)))

(declare-fun bm!4646 () Bool)

(assert (=> bm!4646 (= call!4635 call!4647)))

(declare-fun b!60737 () Bool)

(declare-fun lt!24915 () Unit!1621)

(assert (=> b!60737 (= lt!24915 e!39922)))

(assert (=> b!60737 (= c!7886 call!4629)))

(assert (=> b!60737 (= e!39930 (tuple2!2047 false newMap!16))))

(declare-fun b!60738 () Bool)

(declare-fun Unit!1632 () Unit!1621)

(assert (=> b!60738 (= e!39922 Unit!1632)))

(declare-fun lt!24906 () Unit!1621)

(assert (=> b!60738 (= lt!24906 call!4643)))

(assert (=> b!60738 (= lt!24900 call!4639)))

(declare-fun res!33521 () Bool)

(assert (=> b!60738 (= res!33521 ((_ is Found!231) lt!24900))))

(assert (=> b!60738 (=> (not res!33521) (not e!39923))))

(assert (=> b!60738 e!39923))

(declare-fun lt!24909 () Unit!1621)

(assert (=> b!60738 (= lt!24909 lt!24906)))

(assert (=> b!60738 false))

(assert (= (and d!11881 c!7887) b!60725))

(assert (= (and d!11881 (not c!7887)) b!60716))

(assert (= (and b!60725 c!7882) b!60730))

(assert (= (and b!60725 (not c!7882)) b!60713))

(assert (= (or b!60730 b!60713) bm!4623))

(assert (= (or b!60730 b!60713) bm!4628))

(assert (= (or b!60730 b!60713) bm!4631))

(assert (= (and b!60716 c!7877) b!60737))

(assert (= (and b!60716 (not c!7877)) b!60705))

(assert (= (and b!60737 c!7886) b!60738))

(assert (= (and b!60737 (not c!7886)) b!60735))

(assert (= (and b!60738 res!33521) b!60724))

(assert (= (and b!60724 res!33522) b!60734))

(assert (= (and b!60735 c!7879) b!60708))

(assert (= (and b!60735 (not c!7879)) b!60731))

(assert (= (and b!60708 res!33527) b!60717))

(assert (= (and b!60717 res!33517) b!60704))

(assert (= (and b!60731 c!7880) b!60702))

(assert (= (and b!60731 (not c!7880)) b!60733))

(assert (= (and b!60702 res!33529) b!60698))

(assert (= (and b!60698 res!33519) b!60726))

(assert (= (or b!60708 b!60702) bm!4636))

(assert (= (or b!60704 b!60726) bm!4625))

(assert (= (or b!60724 bm!4636) bm!4637))

(assert (= (or b!60738 b!60735) bm!4633))

(assert (= (and b!60705 c!7884) b!60727))

(assert (= (and b!60705 (not c!7884)) b!60714))

(assert (= (and b!60714 c!7883) b!60719))

(assert (= (and b!60714 (not c!7883)) b!60703))

(assert (= (and b!60703 c!7881) b!60707))

(assert (= (and b!60703 (not c!7881)) b!60709))

(assert (= (and b!60707 res!33524) b!60736))

(assert (= (and b!60736 res!33516) b!60718))

(assert (= (and b!60709 c!7888) b!60715))

(assert (= (and b!60709 (not c!7888)) b!60729))

(assert (= (and b!60715 res!33518) b!60706))

(assert (= (and b!60706 res!33520) b!60728))

(assert (= (and b!60729 c!7885) b!60722))

(assert (= (and b!60729 (not c!7885)) b!60723))

(assert (= (and b!60722 res!33526) b!60701))

(assert (= (and b!60701 res!33528) b!60720))

(assert (= (or b!60715 b!60722) bm!4641))

(assert (= (or b!60728 b!60720) bm!4645))

(assert (= (or b!60736 bm!4641) bm!4632))

(assert (= (or b!60707 b!60709) bm!4624))

(assert (= (or b!60727 b!60719) bm!4643))

(assert (= (or bm!4625 bm!4645) bm!4626))

(assert (= (or bm!4633 bm!4624) bm!4638))

(assert (= (or b!60738 b!60707) bm!4629))

(assert (= (or b!60737 b!60703) bm!4646))

(assert (= (or bm!4637 bm!4632) bm!4635))

(assert (= (or b!60735 b!60709) bm!4639))

(assert (= (or b!60737 b!60703) bm!4644))

(assert (= (and bm!4644 c!7878) b!60712))

(assert (= (and bm!4644 (not c!7878)) b!60710))

(assert (= (or bm!4623 bm!4646) bm!4640))

(assert (= (or bm!4628 b!60703) bm!4642))

(assert (= (or bm!4631 b!60703) bm!4630))

(assert (= (and bm!4630 c!7889) b!60732))

(assert (= (and bm!4630 (not c!7889)) b!60699))

(assert (= (and d!11881 res!33525) b!60721))

(assert (= (and b!60721 c!7876) b!60697))

(assert (= (and b!60721 (not c!7876)) b!60711))

(assert (= (and b!60697 res!33523) b!60700))

(assert (= (or b!60700 b!60711) bm!4627))

(assert (= (or b!60697 b!60700 b!60711) bm!4634))

(assert (=> bm!4639 m!52977))

(declare-fun m!53175 () Bool)

(assert (=> bm!4639 m!53175))

(assert (=> b!60730 m!52987))

(declare-fun m!53177 () Bool)

(assert (=> b!60730 m!53177))

(declare-fun m!53179 () Bool)

(assert (=> bm!4634 m!53179))

(declare-fun m!53181 () Bool)

(assert (=> bm!4635 m!53181))

(declare-fun m!53183 () Bool)

(assert (=> b!60698 m!53183))

(assert (=> b!60710 m!53109))

(declare-fun m!53185 () Bool)

(assert (=> d!11881 m!53185))

(assert (=> d!11881 m!53013))

(declare-fun m!53187 () Bool)

(assert (=> bm!4642 m!53187))

(assert (=> bm!4626 m!52977))

(declare-fun m!53189 () Bool)

(assert (=> bm!4626 m!53189))

(declare-fun m!53191 () Bool)

(assert (=> b!60700 m!53191))

(assert (=> b!60699 m!53109))

(declare-fun m!53193 () Bool)

(assert (=> bm!4640 m!53193))

(declare-fun m!53195 () Bool)

(assert (=> bm!4640 m!53195))

(declare-fun m!53197 () Bool)

(assert (=> bm!4630 m!53197))

(declare-fun m!53199 () Bool)

(assert (=> b!60717 m!53199))

(declare-fun m!53201 () Bool)

(assert (=> b!60701 m!53201))

(declare-fun m!53203 () Bool)

(assert (=> b!60734 m!53203))

(assert (=> bm!4644 m!52977))

(declare-fun m!53205 () Bool)

(assert (=> bm!4644 m!53205))

(assert (=> b!60716 m!52977))

(declare-fun m!53207 () Bool)

(assert (=> b!60716 m!53207))

(assert (=> b!60713 m!52987))

(declare-fun m!53209 () Bool)

(assert (=> b!60713 m!53209))

(assert (=> bm!4627 m!52979))

(declare-fun m!53211 () Bool)

(assert (=> b!60706 m!53211))

(assert (=> b!60697 m!52977))

(declare-fun m!53213 () Bool)

(assert (=> b!60697 m!53213))

(assert (=> bm!4643 m!52977))

(assert (=> bm!4643 m!52987))

(declare-fun m!53215 () Bool)

(assert (=> bm!4643 m!53215))

(assert (=> bm!4638 m!52977))

(assert (=> bm!4638 m!53207))

(assert (=> bm!4629 m!52977))

(declare-fun m!53217 () Bool)

(assert (=> bm!4629 m!53217))

(declare-fun m!53219 () Bool)

(assert (=> b!60718 m!53219))

(assert (=> b!60703 m!53193))

(declare-fun m!53221 () Bool)

(assert (=> b!60703 m!53221))

(assert (=> b!60703 m!52977))

(assert (=> b!60703 m!52987))

(declare-fun m!53223 () Bool)

(assert (=> b!60703 m!53223))

(declare-fun m!53225 () Bool)

(assert (=> b!60703 m!53225))

(declare-fun m!53227 () Bool)

(assert (=> b!60703 m!53227))

(assert (=> b!60703 m!53225))

(assert (=> b!60412 d!11881))

(declare-fun d!11883 () Bool)

(declare-fun c!7892 () Bool)

(assert (=> d!11883 (= c!7892 ((_ is ValueCellFull!860) (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun e!39939 () V!2857)

(assert (=> d!11883 (= (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!39939)))

(declare-fun b!60743 () Bool)

(declare-fun get!1084 (ValueCell!860 V!2857) V!2857)

(assert (=> b!60743 (= e!39939 (get!1084 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!60744 () Bool)

(declare-fun get!1085 (ValueCell!860 V!2857) V!2857)

(assert (=> b!60744 (= e!39939 (get!1085 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11883 c!7892) b!60743))

(assert (= (and d!11883 (not c!7892)) b!60744))

(assert (=> b!60743 m!52983))

(assert (=> b!60743 m!52985))

(declare-fun m!53229 () Bool)

(assert (=> b!60743 m!53229))

(assert (=> b!60744 m!52983))

(assert (=> b!60744 m!52985))

(declare-fun m!53231 () Bool)

(assert (=> b!60744 m!53231))

(assert (=> b!60412 d!11883))

(declare-fun d!11885 () Bool)

(declare-fun res!33536 () Bool)

(declare-fun e!39942 () Bool)

(assert (=> d!11885 (=> (not res!33536) (not e!39942))))

(declare-fun simpleValid!43 (LongMapFixedSize!628) Bool)

(assert (=> d!11885 (= res!33536 (simpleValid!43 newMap!16))))

(assert (=> d!11885 (= (valid!263 newMap!16) e!39942)))

(declare-fun b!60751 () Bool)

(declare-fun res!33537 () Bool)

(assert (=> b!60751 (=> (not res!33537) (not e!39942))))

(declare-fun arrayCountValidKeys!0 (array!3723 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!60751 (= res!33537 (= (arrayCountValidKeys!0 (_keys!3693 newMap!16) #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (_size!363 newMap!16)))))

(declare-fun b!60752 () Bool)

(declare-fun res!33538 () Bool)

(assert (=> b!60752 (=> (not res!33538) (not e!39942))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3723 (_ BitVec 32)) Bool)

(assert (=> b!60752 (= res!33538 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun b!60753 () Bool)

(assert (=> b!60753 (= e!39942 (arrayNoDuplicates!0 (_keys!3693 newMap!16) #b00000000000000000000000000000000 Nil!1441))))

(assert (= (and d!11885 res!33536) b!60751))

(assert (= (and b!60751 res!33537) b!60752))

(assert (= (and b!60752 res!33538) b!60753))

(declare-fun m!53233 () Bool)

(assert (=> d!11885 m!53233))

(declare-fun m!53235 () Bool)

(assert (=> b!60751 m!53235))

(declare-fun m!53237 () Bool)

(assert (=> b!60752 m!53237))

(declare-fun m!53239 () Bool)

(assert (=> b!60753 m!53239))

(assert (=> b!60417 d!11885))

(declare-fun d!11887 () Bool)

(assert (=> d!11887 (= (valid!262 thiss!992) (valid!263 (v!2397 (underlying!227 thiss!992))))))

(declare-fun bs!2629 () Bool)

(assert (= bs!2629 d!11887))

(declare-fun m!53241 () Bool)

(assert (=> bs!2629 m!53241))

(assert (=> start!8726 d!11887))

(declare-fun d!11889 () Bool)

(assert (=> d!11889 (not (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!24925 () Unit!1621)

(declare-fun choose!68 (array!3723 (_ BitVec 32) (_ BitVec 64) List!1444) Unit!1621)

(assert (=> d!11889 (= lt!24925 (choose!68 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441)))))

(assert (=> d!11889 (bvslt (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!11889 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441)) lt!24925)))

(declare-fun bs!2630 () Bool)

(assert (= bs!2630 d!11889))

(assert (=> bs!2630 m!52977))

(assert (=> bs!2630 m!52999))

(assert (=> bs!2630 m!52977))

(declare-fun m!53243 () Bool)

(assert (=> bs!2630 m!53243))

(assert (=> b!60415 d!11889))

(declare-fun d!11891 () Bool)

(assert (=> d!11891 (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) from!355 Nil!1441)))

(declare-fun lt!24928 () Unit!1621)

(declare-fun choose!39 (array!3723 (_ BitVec 32) (_ BitVec 32)) Unit!1621)

(assert (=> d!11891 (= lt!24928 (choose!39 (_keys!3693 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!11891 (bvslt (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!11891 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000 from!355) lt!24928)))

(declare-fun bs!2631 () Bool)

(assert (= bs!2631 d!11891))

(assert (=> bs!2631 m!52995))

(declare-fun m!53245 () Bool)

(assert (=> bs!2631 m!53245))

(assert (=> b!60415 d!11891))

(declare-fun d!11893 () Bool)

(declare-fun res!33543 () Bool)

(declare-fun e!39947 () Bool)

(assert (=> d!11893 (=> res!33543 e!39947)))

(assert (=> d!11893 (= res!33543 (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!11893 (= (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!39947)))

(declare-fun b!60758 () Bool)

(declare-fun e!39948 () Bool)

(assert (=> b!60758 (= e!39947 e!39948)))

(declare-fun res!33544 () Bool)

(assert (=> b!60758 (=> (not res!33544) (not e!39948))))

(assert (=> b!60758 (= res!33544 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!60759 () Bool)

(assert (=> b!60759 (= e!39948 (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!11893 (not res!33543)) b!60758))

(assert (= (and b!60758 res!33544) b!60759))

(assert (=> d!11893 m!53111))

(assert (=> b!60759 m!52977))

(declare-fun m!53247 () Bool)

(assert (=> b!60759 m!53247))

(assert (=> b!60415 d!11893))

(declare-fun d!11895 () Bool)

(declare-fun e!39951 () Bool)

(assert (=> d!11895 e!39951))

(declare-fun c!7895 () Bool)

(assert (=> d!11895 (= c!7895 (and (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!24931 () Unit!1621)

(declare-fun choose!322 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 64) (_ BitVec 32) Int) Unit!1621)

(assert (=> d!11895 (= lt!24931 (choose!322 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))))))

(assert (=> d!11895 (validMask!0 (mask!5961 (v!2397 (underlying!227 thiss!992))))))

(assert (=> d!11895 (= (lemmaListMapContainsThenArrayContainsFrom!32 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))) lt!24931)))

(declare-fun b!60764 () Bool)

(assert (=> b!60764 (= e!39951 (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!60765 () Bool)

(assert (=> b!60765 (= e!39951 (ite (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!11895 c!7895) b!60764))

(assert (= (and d!11895 (not c!7895)) b!60765))

(assert (=> d!11895 m!52977))

(declare-fun m!53249 () Bool)

(assert (=> d!11895 m!53249))

(assert (=> d!11895 m!53015))

(assert (=> b!60764 m!52977))

(assert (=> b!60764 m!52999))

(assert (=> b!60415 d!11895))

(declare-fun b!60776 () Bool)

(declare-fun e!39962 () Bool)

(declare-fun contains!688 (List!1444 (_ BitVec 64)) Bool)

(assert (=> b!60776 (= e!39962 (contains!688 Nil!1441 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun d!11897 () Bool)

(declare-fun res!33551 () Bool)

(declare-fun e!39963 () Bool)

(assert (=> d!11897 (=> res!33551 e!39963)))

(assert (=> d!11897 (= res!33551 (bvsge from!355 (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> d!11897 (= (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) from!355 Nil!1441) e!39963)))

(declare-fun b!60777 () Bool)

(declare-fun e!39960 () Bool)

(declare-fun call!4652 () Bool)

(assert (=> b!60777 (= e!39960 call!4652)))

(declare-fun c!7898 () Bool)

(declare-fun bm!4649 () Bool)

(assert (=> bm!4649 (= call!4652 (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)))))

(declare-fun b!60778 () Bool)

(declare-fun e!39961 () Bool)

(assert (=> b!60778 (= e!39961 e!39960)))

(assert (=> b!60778 (= c!7898 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!60779 () Bool)

(assert (=> b!60779 (= e!39960 call!4652)))

(declare-fun b!60780 () Bool)

(assert (=> b!60780 (= e!39963 e!39961)))

(declare-fun res!33552 () Bool)

(assert (=> b!60780 (=> (not res!33552) (not e!39961))))

(assert (=> b!60780 (= res!33552 (not e!39962))))

(declare-fun res!33553 () Bool)

(assert (=> b!60780 (=> (not res!33553) (not e!39962))))

(assert (=> b!60780 (= res!33553 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (= (and d!11897 (not res!33551)) b!60780))

(assert (= (and b!60780 res!33553) b!60776))

(assert (= (and b!60780 res!33552) b!60778))

(assert (= (and b!60778 c!7898) b!60779))

(assert (= (and b!60778 (not c!7898)) b!60777))

(assert (= (or b!60779 b!60777) bm!4649))

(assert (=> b!60776 m!52977))

(assert (=> b!60776 m!52977))

(declare-fun m!53251 () Bool)

(assert (=> b!60776 m!53251))

(assert (=> bm!4649 m!52977))

(declare-fun m!53253 () Bool)

(assert (=> bm!4649 m!53253))

(assert (=> b!60778 m!52977))

(assert (=> b!60778 m!52977))

(declare-fun m!53255 () Bool)

(assert (=> b!60778 m!53255))

(assert (=> b!60780 m!52977))

(assert (=> b!60780 m!52977))

(assert (=> b!60780 m!53255))

(assert (=> b!60415 d!11897))

(declare-fun mapIsEmpty!2927 () Bool)

(declare-fun mapRes!2927 () Bool)

(assert (=> mapIsEmpty!2927 mapRes!2927))

(declare-fun mapNonEmpty!2927 () Bool)

(declare-fun tp!8093 () Bool)

(declare-fun e!39968 () Bool)

(assert (=> mapNonEmpty!2927 (= mapRes!2927 (and tp!8093 e!39968))))

(declare-fun mapValue!2927 () ValueCell!860)

(declare-fun mapRest!2927 () (Array (_ BitVec 32) ValueCell!860))

(declare-fun mapKey!2927 () (_ BitVec 32))

(assert (=> mapNonEmpty!2927 (= mapRest!2911 (store mapRest!2927 mapKey!2927 mapValue!2927))))

(declare-fun b!60787 () Bool)

(assert (=> b!60787 (= e!39968 tp_is_empty!2407)))

(declare-fun condMapEmpty!2927 () Bool)

(declare-fun mapDefault!2927 () ValueCell!860)

(assert (=> mapNonEmpty!2912 (= condMapEmpty!2927 (= mapRest!2911 ((as const (Array (_ BitVec 32) ValueCell!860)) mapDefault!2927)))))

(declare-fun e!39969 () Bool)

(assert (=> mapNonEmpty!2912 (= tp!8063 (and e!39969 mapRes!2927))))

(declare-fun b!60788 () Bool)

(assert (=> b!60788 (= e!39969 tp_is_empty!2407)))

(assert (= (and mapNonEmpty!2912 condMapEmpty!2927) mapIsEmpty!2927))

(assert (= (and mapNonEmpty!2912 (not condMapEmpty!2927)) mapNonEmpty!2927))

(assert (= (and mapNonEmpty!2927 ((_ is ValueCellFull!860) mapValue!2927)) b!60787))

(assert (= (and mapNonEmpty!2912 ((_ is ValueCellFull!860) mapDefault!2927)) b!60788))

(declare-fun m!53257 () Bool)

(assert (=> mapNonEmpty!2927 m!53257))

(declare-fun mapIsEmpty!2928 () Bool)

(declare-fun mapRes!2928 () Bool)

(assert (=> mapIsEmpty!2928 mapRes!2928))

(declare-fun mapNonEmpty!2928 () Bool)

(declare-fun tp!8094 () Bool)

(declare-fun e!39970 () Bool)

(assert (=> mapNonEmpty!2928 (= mapRes!2928 (and tp!8094 e!39970))))

(declare-fun mapRest!2928 () (Array (_ BitVec 32) ValueCell!860))

(declare-fun mapValue!2928 () ValueCell!860)

(declare-fun mapKey!2928 () (_ BitVec 32))

(assert (=> mapNonEmpty!2928 (= mapRest!2912 (store mapRest!2928 mapKey!2928 mapValue!2928))))

(declare-fun b!60789 () Bool)

(assert (=> b!60789 (= e!39970 tp_is_empty!2407)))

(declare-fun condMapEmpty!2928 () Bool)

(declare-fun mapDefault!2928 () ValueCell!860)

(assert (=> mapNonEmpty!2911 (= condMapEmpty!2928 (= mapRest!2912 ((as const (Array (_ BitVec 32) ValueCell!860)) mapDefault!2928)))))

(declare-fun e!39971 () Bool)

(assert (=> mapNonEmpty!2911 (= tp!8064 (and e!39971 mapRes!2928))))

(declare-fun b!60790 () Bool)

(assert (=> b!60790 (= e!39971 tp_is_empty!2407)))

(assert (= (and mapNonEmpty!2911 condMapEmpty!2928) mapIsEmpty!2928))

(assert (= (and mapNonEmpty!2911 (not condMapEmpty!2928)) mapNonEmpty!2928))

(assert (= (and mapNonEmpty!2928 ((_ is ValueCellFull!860) mapValue!2928)) b!60789))

(assert (= (and mapNonEmpty!2911 ((_ is ValueCellFull!860) mapDefault!2928)) b!60790))

(declare-fun m!53259 () Bool)

(assert (=> mapNonEmpty!2928 m!53259))

(declare-fun b_lambda!2685 () Bool)

(assert (= b_lambda!2683 (or (and b!60405 b_free!1981) (and b!60410 b_free!1983 (= (defaultEntry!2066 newMap!16) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))))) b_lambda!2685)))

(check-sat (not d!11879) (not b!60703) (not bm!4635) (not bm!4629) (not d!11877) (not d!11887) (not b!60612) (not b!60583) (not bm!4572) (not d!11881) (not b!60752) (not b!60591) (not bm!4627) (not bm!4640) (not b!60584) (not b!60753) (not d!11885) (not b!60780) (not d!11889) (not b!60610) (not b!60710) (not b!60744) (not b_next!1983) (not bm!4626) (not b!60751) (not bm!4634) (not b_lambda!2685) (not b_lambda!2681) (not d!11895) (not mapNonEmpty!2928) (not b!60589) (not b!60699) (not bm!4573) (not b!60697) (not bm!4569) b_and!3699 (not b!60743) b_and!3697 (not b!60730) (not b!60700) (not d!11891) (not bm!4642) (not bm!4630) (not b!60586) tp_is_empty!2407 (not d!11875) (not mapNonEmpty!2927) (not bm!4571) (not b!60601) (not bm!4649) (not bm!4643) (not b!60713) (not bm!4644) (not b!60759) (not b!60764) (not b!60716) (not b!60778) (not b!60596) (not bm!4639) (not bm!4638) (not b!60776) (not b!60597) (not b_next!1981))
(check-sat b_and!3697 b_and!3699 (not b_next!1981) (not b_next!1983))
(get-model)

(declare-fun b!60799 () Bool)

(declare-fun e!39977 () (_ BitVec 32))

(assert (=> b!60799 (= e!39977 #b00000000000000000000000000000000)))

(declare-fun b!60801 () Bool)

(declare-fun e!39976 () (_ BitVec 32))

(declare-fun call!4655 () (_ BitVec 32))

(assert (=> b!60801 (= e!39976 call!4655)))

(declare-fun bm!4652 () Bool)

(assert (=> bm!4652 (= call!4655 (arrayCountValidKeys!0 (_keys!3693 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!60802 () Bool)

(assert (=> b!60802 (= e!39977 e!39976)))

(declare-fun c!7903 () Bool)

(assert (=> b!60802 (= c!7903 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!11899 () Bool)

(declare-fun lt!24934 () (_ BitVec 32))

(assert (=> d!11899 (and (bvsge lt!24934 #b00000000000000000000000000000000) (bvsle lt!24934 (bvsub (size!2012 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!11899 (= lt!24934 e!39977)))

(declare-fun c!7904 () Bool)

(assert (=> d!11899 (= c!7904 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!11899 (and (bvsle #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2012 (_keys!3693 newMap!16)) (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!11899 (= (arrayCountValidKeys!0 (_keys!3693 newMap!16) #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) lt!24934)))

(declare-fun b!60800 () Bool)

(assert (=> b!60800 (= e!39976 (bvadd #b00000000000000000000000000000001 call!4655))))

(assert (= (and d!11899 c!7904) b!60799))

(assert (= (and d!11899 (not c!7904)) b!60802))

(assert (= (and b!60802 c!7903) b!60800))

(assert (= (and b!60802 (not c!7903)) b!60801))

(assert (= (or b!60800 b!60801) bm!4652))

(declare-fun m!53261 () Bool)

(assert (=> bm!4652 m!53261))

(declare-fun m!53263 () Bool)

(assert (=> b!60802 m!53263))

(assert (=> b!60802 m!53263))

(declare-fun m!53265 () Bool)

(assert (=> b!60802 m!53265))

(assert (=> b!60751 d!11899))

(declare-fun d!11901 () Bool)

(declare-fun lt!24937 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!65 (List!1444) (InoxSet (_ BitVec 64)))

(assert (=> d!11901 (= lt!24937 (select (content!65 Nil!1441) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun e!39983 () Bool)

(assert (=> d!11901 (= lt!24937 e!39983)))

(declare-fun res!33559 () Bool)

(assert (=> d!11901 (=> (not res!33559) (not e!39983))))

(assert (=> d!11901 (= res!33559 ((_ is Cons!1440) Nil!1441))))

(assert (=> d!11901 (= (contains!688 Nil!1441 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) lt!24937)))

(declare-fun b!60807 () Bool)

(declare-fun e!39982 () Bool)

(assert (=> b!60807 (= e!39983 e!39982)))

(declare-fun res!33558 () Bool)

(assert (=> b!60807 (=> res!33558 e!39982)))

(assert (=> b!60807 (= res!33558 (= (h!2022 Nil!1441) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!60808 () Bool)

(assert (=> b!60808 (= e!39982 (contains!688 (t!4809 Nil!1441) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (= (and d!11901 res!33559) b!60807))

(assert (= (and b!60807 (not res!33558)) b!60808))

(declare-fun m!53267 () Bool)

(assert (=> d!11901 m!53267))

(assert (=> d!11901 m!52977))

(declare-fun m!53269 () Bool)

(assert (=> d!11901 m!53269))

(assert (=> b!60808 m!52977))

(declare-fun m!53271 () Bool)

(assert (=> b!60808 m!53271))

(assert (=> b!60776 d!11901))

(declare-fun b!60843 () Bool)

(declare-fun e!40000 () Unit!1621)

(declare-fun Unit!1633 () Unit!1621)

(assert (=> b!60843 (= e!40000 Unit!1633)))

(declare-fun b!60844 () Bool)

(declare-fun res!33578 () Bool)

(declare-fun e!40007 () Bool)

(assert (=> b!60844 (=> (not res!33578) (not e!40007))))

(declare-fun lt!25002 () tuple2!2046)

(assert (=> b!60844 (= res!33578 (valid!263 (_2!1034 lt!25002)))))

(declare-fun d!11903 () Bool)

(assert (=> d!11903 e!40007))

(declare-fun res!33582 () Bool)

(assert (=> d!11903 (=> (not res!33582) (not e!40007))))

(assert (=> d!11903 (= res!33582 (_1!1034 lt!25002))))

(assert (=> d!11903 (= lt!25002 (tuple2!2047 true (LongMapFixedSize!629 (defaultEntry!2066 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (bvadd (_size!363 newMap!16) #b00000000000000000000000000000001) (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (_vacant!363 newMap!16))))))

(declare-fun lt!25022 () Unit!1621)

(declare-fun lt!25009 () Unit!1621)

(assert (=> d!11903 (= lt!25022 lt!25009)))

(declare-fun lt!25005 () array!3723)

(declare-fun lt!25011 () array!3725)

(assert (=> d!11903 (contains!687 (getCurrentListMap!392 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (select (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))))))

(assert (=> d!11903 (= lt!25009 (lemmaValidKeyInArrayIsInListMap!75 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (defaultEntry!2066 newMap!16)))))

(assert (=> d!11903 (= lt!25011 (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))))

(assert (=> d!11903 (= lt!25005 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun lt!25007 () Unit!1621)

(declare-fun lt!25020 () Unit!1621)

(assert (=> d!11903 (= lt!25007 lt!25020)))

(declare-fun lt!25003 () array!3723)

(assert (=> d!11903 (= (arrayCountValidKeys!0 lt!25003 (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (bvadd (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3723 (_ BitVec 32)) Unit!1621)

(assert (=> d!11903 (= lt!25020 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!25003 (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))))))

(assert (=> d!11903 (= lt!25003 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun lt!25021 () Unit!1621)

(declare-fun lt!25006 () Unit!1621)

(assert (=> d!11903 (= lt!25021 lt!25006)))

(declare-fun lt!25027 () array!3723)

(assert (=> d!11903 (arrayContainsKey!0 lt!25027 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3723 (_ BitVec 64) (_ BitVec 32)) Unit!1621)

(assert (=> d!11903 (= lt!25006 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!25027 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))))))

(assert (=> d!11903 (= lt!25027 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun lt!25001 () Unit!1621)

(declare-fun lt!25019 () Unit!1621)

(assert (=> d!11903 (= lt!25001 lt!25019)))

(assert (=> d!11903 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!392 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!6 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 32) (_ BitVec 64) V!2857 Int) Unit!1621)

(assert (=> d!11903 (= lt!25019 (lemmaAddValidKeyToArrayThenAddPairToListMap!6 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25017 () Unit!1621)

(declare-fun lt!25018 () Unit!1621)

(assert (=> d!11903 (= lt!25017 lt!25018)))

(assert (=> d!11903 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (mask!5961 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3723 (_ BitVec 32) (_ BitVec 32)) Unit!1621)

(assert (=> d!11903 (= lt!25018 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (mask!5961 newMap!16)))))

(declare-fun lt!25010 () Unit!1621)

(declare-fun lt!25016 () Unit!1621)

(assert (=> d!11903 (= lt!25010 lt!25016)))

(assert (=> d!11903 (= (arrayCountValidKeys!0 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3693 newMap!16) #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3723 (_ BitVec 32) (_ BitVec 64)) Unit!1621)

(assert (=> d!11903 (= lt!25016 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3693 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun lt!25012 () Unit!1621)

(declare-fun lt!25024 () Unit!1621)

(assert (=> d!11903 (= lt!25012 lt!25024)))

(declare-fun lt!25004 () List!1444)

(declare-fun lt!25025 () (_ BitVec 32))

(assert (=> d!11903 (arrayNoDuplicates!0 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) lt!25025 lt!25004)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3723 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1444) Unit!1621)

(assert (=> d!11903 (= lt!25024 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) lt!25025 lt!25004))))

(assert (=> d!11903 (= lt!25004 Nil!1441)))

(assert (=> d!11903 (= lt!25025 #b00000000000000000000000000000000)))

(declare-fun lt!25023 () Unit!1621)

(assert (=> d!11903 (= lt!25023 e!40000)))

(declare-fun c!7916 () Bool)

(assert (=> d!11903 (= c!7916 (arrayContainsKey!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!25014 () Unit!1621)

(declare-fun e!40004 () Unit!1621)

(assert (=> d!11903 (= lt!25014 e!40004)))

(declare-fun c!7913 () Bool)

(assert (=> d!11903 (= c!7913 (contains!687 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!11903 (valid!263 newMap!16)))

(assert (=> d!11903 (= (updateHelperNewKey!16 newMap!16 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))) lt!25002)))

(declare-fun lt!25013 () SeekEntryResult!231)

(declare-fun e!40006 () Bool)

(declare-fun b!60845 () Bool)

(assert (=> b!60845 (= e!40006 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!25013)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!60846 () Bool)

(declare-fun res!33579 () Bool)

(declare-fun e!40003 () Bool)

(assert (=> b!60846 (=> (not res!33579) (not e!40003))))

(declare-fun call!4665 () Bool)

(assert (=> b!60846 (= res!33579 call!4665)))

(declare-fun e!40001 () Bool)

(assert (=> b!60846 (= e!40001 e!40003)))

(declare-fun call!4667 () Bool)

(declare-fun bm!4661 () Bool)

(assert (=> bm!4661 (= call!4667 (arrayContainsKey!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!60847 () Bool)

(declare-fun res!33586 () Bool)

(assert (=> b!60847 (=> (not res!33586) (not e!40003))))

(declare-fun lt!25000 () SeekEntryResult!231)

(assert (=> b!60847 (= res!33586 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3048 lt!25000)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!4666 () SeekEntryResult!231)

(declare-fun bm!4662 () Bool)

(assert (=> bm!4662 (= call!4666 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun b!60848 () Bool)

(declare-fun Unit!1634 () Unit!1621)

(assert (=> b!60848 (= e!40004 Unit!1634)))

(declare-fun lt!25026 () Unit!1621)

(assert (=> b!60848 (= lt!25026 (lemmaInListMapThenSeekEntryOrOpenFindsIt!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (defaultEntry!2066 newMap!16)))))

(assert (=> b!60848 (= lt!25013 call!4666)))

(declare-fun res!33581 () Bool)

(assert (=> b!60848 (= res!33581 ((_ is Found!231) lt!25013))))

(assert (=> b!60848 (=> (not res!33581) (not e!40006))))

(assert (=> b!60848 e!40006))

(declare-fun lt!24999 () Unit!1621)

(assert (=> b!60848 (= lt!24999 lt!25026)))

(assert (=> b!60848 false))

(declare-fun b!60849 () Bool)

(declare-fun res!33580 () Bool)

(assert (=> b!60849 (= res!33580 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3051 lt!25000)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!40005 () Bool)

(assert (=> b!60849 (=> (not res!33580) (not e!40005))))

(declare-fun b!60850 () Bool)

(declare-fun res!33583 () Bool)

(declare-fun call!4664 () Bool)

(assert (=> b!60850 (= res!33583 call!4664)))

(assert (=> b!60850 (=> (not res!33583) (not e!40006))))

(declare-fun b!60851 () Bool)

(declare-fun Unit!1635 () Unit!1621)

(assert (=> b!60851 (= e!40000 Unit!1635)))

(declare-fun lt!24998 () Unit!1621)

(declare-fun lemmaArrayContainsKeyThenInListMap!6 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 64) (_ BitVec 32) Int) Unit!1621)

(assert (=> b!60851 (= lt!24998 (lemmaArrayContainsKeyThenInListMap!6 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(assert (=> b!60851 (contains!687 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))

(declare-fun lt!25015 () Unit!1621)

(assert (=> b!60851 (= lt!25015 lt!24998)))

(assert (=> b!60851 false))

(declare-fun b!60852 () Bool)

(declare-fun lt!25008 () Unit!1621)

(assert (=> b!60852 (= e!40004 lt!25008)))

(assert (=> b!60852 (= lt!25008 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (defaultEntry!2066 newMap!16)))))

(assert (=> b!60852 (= lt!25000 call!4666)))

(declare-fun c!7914 () Bool)

(assert (=> b!60852 (= c!7914 ((_ is MissingZero!231) lt!25000))))

(assert (=> b!60852 e!40001))

(declare-fun b!60853 () Bool)

(assert (=> b!60853 (= e!40005 (not call!4667))))

(declare-fun bm!4663 () Bool)

(assert (=> bm!4663 (= call!4664 (inRange!0 (ite c!7913 (index!3049 lt!25013) (ite c!7914 (index!3048 lt!25000) (index!3051 lt!25000))) (mask!5961 newMap!16)))))

(declare-fun b!60854 () Bool)

(declare-fun c!7915 () Bool)

(assert (=> b!60854 (= c!7915 ((_ is MissingVacant!231) lt!25000))))

(declare-fun e!40002 () Bool)

(assert (=> b!60854 (= e!40001 e!40002)))

(declare-fun b!60855 () Bool)

(assert (=> b!60855 (= e!40003 (not call!4667))))

(declare-fun b!60856 () Bool)

(assert (=> b!60856 (= e!40007 (= (map!1110 (_2!1034 lt!25002)) (+!82 (map!1110 newMap!16) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!60857 () Bool)

(declare-fun res!33585 () Bool)

(assert (=> b!60857 (=> (not res!33585) (not e!40007))))

(assert (=> b!60857 (= res!33585 (contains!687 (map!1110 (_2!1034 lt!25002)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun bm!4664 () Bool)

(assert (=> bm!4664 (= call!4665 call!4664)))

(declare-fun b!60858 () Bool)

(assert (=> b!60858 (= e!40002 ((_ is Undefined!231) lt!25000))))

(declare-fun b!60859 () Bool)

(assert (=> b!60859 (= e!40002 e!40005)))

(declare-fun res!33584 () Bool)

(assert (=> b!60859 (= res!33584 call!4665)))

(assert (=> b!60859 (=> (not res!33584) (not e!40005))))

(assert (= (and d!11903 c!7913) b!60848))

(assert (= (and d!11903 (not c!7913)) b!60852))

(assert (= (and b!60848 res!33581) b!60850))

(assert (= (and b!60850 res!33583) b!60845))

(assert (= (and b!60852 c!7914) b!60846))

(assert (= (and b!60852 (not c!7914)) b!60854))

(assert (= (and b!60846 res!33579) b!60847))

(assert (= (and b!60847 res!33586) b!60855))

(assert (= (and b!60854 c!7915) b!60859))

(assert (= (and b!60854 (not c!7915)) b!60858))

(assert (= (and b!60859 res!33584) b!60849))

(assert (= (and b!60849 res!33580) b!60853))

(assert (= (or b!60846 b!60859) bm!4664))

(assert (= (or b!60855 b!60853) bm!4661))

(assert (= (or b!60850 bm!4664) bm!4663))

(assert (= (or b!60848 b!60852) bm!4662))

(assert (= (and d!11903 c!7916) b!60851))

(assert (= (and d!11903 (not c!7916)) b!60843))

(assert (= (and d!11903 res!33582) b!60844))

(assert (= (and b!60844 res!33578) b!60857))

(assert (= (and b!60857 res!33585) b!60856))

(declare-fun m!53273 () Bool)

(assert (=> b!60849 m!53273))

(assert (=> b!60852 m!52977))

(assert (=> b!60852 m!53175))

(declare-fun m!53275 () Bool)

(assert (=> b!60847 m!53275))

(declare-fun m!53277 () Bool)

(assert (=> b!60857 m!53277))

(assert (=> b!60857 m!53277))

(assert (=> b!60857 m!52977))

(declare-fun m!53279 () Bool)

(assert (=> b!60857 m!53279))

(declare-fun m!53281 () Bool)

(assert (=> bm!4663 m!53281))

(assert (=> d!11903 m!52977))

(declare-fun m!53283 () Bool)

(assert (=> d!11903 m!53283))

(declare-fun m!53285 () Bool)

(assert (=> d!11903 m!53285))

(declare-fun m!53287 () Bool)

(assert (=> d!11903 m!53287))

(assert (=> d!11903 m!52977))

(declare-fun m!53289 () Bool)

(assert (=> d!11903 m!53289))

(assert (=> d!11903 m!52977))

(assert (=> d!11903 m!52987))

(declare-fun m!53291 () Bool)

(assert (=> d!11903 m!53291))

(declare-fun m!53293 () Bool)

(assert (=> d!11903 m!53293))

(assert (=> d!11903 m!53287))

(declare-fun m!53295 () Bool)

(assert (=> d!11903 m!53295))

(assert (=> d!11903 m!52977))

(declare-fun m!53297 () Bool)

(assert (=> d!11903 m!53297))

(assert (=> d!11903 m!53109))

(declare-fun m!53299 () Bool)

(assert (=> d!11903 m!53299))

(declare-fun m!53301 () Bool)

(assert (=> d!11903 m!53301))

(assert (=> d!11903 m!53109))

(assert (=> d!11903 m!52977))

(declare-fun m!53303 () Bool)

(assert (=> d!11903 m!53303))

(assert (=> d!11903 m!52977))

(declare-fun m!53305 () Bool)

(assert (=> d!11903 m!53305))

(declare-fun m!53307 () Bool)

(assert (=> d!11903 m!53307))

(assert (=> d!11903 m!53293))

(declare-fun m!53309 () Bool)

(assert (=> d!11903 m!53309))

(declare-fun m!53311 () Bool)

(assert (=> d!11903 m!53311))

(declare-fun m!53313 () Bool)

(assert (=> d!11903 m!53313))

(assert (=> d!11903 m!53013))

(declare-fun m!53315 () Bool)

(assert (=> d!11903 m!53315))

(declare-fun m!53317 () Bool)

(assert (=> d!11903 m!53317))

(assert (=> d!11903 m!52977))

(assert (=> d!11903 m!53189))

(assert (=> d!11903 m!53235))

(assert (=> d!11903 m!53109))

(declare-fun m!53319 () Bool)

(assert (=> d!11903 m!53319))

(assert (=> d!11903 m!52977))

(declare-fun m!53321 () Bool)

(assert (=> d!11903 m!53321))

(assert (=> b!60851 m!52977))

(declare-fun m!53323 () Bool)

(assert (=> b!60851 m!53323))

(assert (=> b!60851 m!53109))

(assert (=> b!60851 m!53109))

(assert (=> b!60851 m!52977))

(assert (=> b!60851 m!53303))

(declare-fun m!53325 () Bool)

(assert (=> b!60844 m!53325))

(assert (=> bm!4662 m!52977))

(assert (=> bm!4662 m!53207))

(declare-fun m!53327 () Bool)

(assert (=> b!60845 m!53327))

(assert (=> bm!4661 m!52977))

(assert (=> bm!4661 m!53189))

(assert (=> b!60856 m!53277))

(assert (=> b!60856 m!52979))

(assert (=> b!60856 m!52979))

(declare-fun m!53329 () Bool)

(assert (=> b!60856 m!53329))

(assert (=> b!60848 m!52977))

(assert (=> b!60848 m!53217))

(assert (=> bm!4643 d!11903))

(declare-fun d!11905 () Bool)

(declare-fun e!40010 () Bool)

(assert (=> d!11905 e!40010))

(declare-fun res!33591 () Bool)

(assert (=> d!11905 (=> (not res!33591) (not e!40010))))

(declare-fun lt!25038 () ListLongMap!1361)

(assert (=> d!11905 (= res!33591 (contains!687 lt!25038 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lt!25036 () List!1443)

(assert (=> d!11905 (= lt!25038 (ListLongMap!1362 lt!25036))))

(declare-fun lt!25037 () Unit!1621)

(declare-fun lt!25039 () Unit!1621)

(assert (=> d!11905 (= lt!25037 lt!25039)))

(assert (=> d!11905 (= (getValueByKey!123 lt!25036 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!43 (List!1443 (_ BitVec 64) V!2857) Unit!1621)

(assert (=> d!11905 (= lt!25039 (lemmaContainsTupThenGetReturnValue!43 lt!25036 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun insertStrictlySorted!46 (List!1443 (_ BitVec 64) V!2857) List!1443)

(assert (=> d!11905 (= lt!25036 (insertStrictlySorted!46 (toList!696 call!4575) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!11905 (= (+!82 call!4575 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!25038)))

(declare-fun b!60864 () Bool)

(declare-fun res!33592 () Bool)

(assert (=> b!60864 (=> (not res!33592) (not e!40010))))

(assert (=> b!60864 (= res!33592 (= (getValueByKey!123 (toList!696 lt!25038) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!60865 () Bool)

(declare-fun contains!689 (List!1443 tuple2!2048) Bool)

(assert (=> b!60865 (= e!40010 (contains!689 (toList!696 lt!25038) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(assert (= (and d!11905 res!33591) b!60864))

(assert (= (and b!60864 res!33592) b!60865))

(declare-fun m!53331 () Bool)

(assert (=> d!11905 m!53331))

(declare-fun m!53333 () Bool)

(assert (=> d!11905 m!53333))

(declare-fun m!53335 () Bool)

(assert (=> d!11905 m!53335))

(declare-fun m!53337 () Bool)

(assert (=> d!11905 m!53337))

(declare-fun m!53339 () Bool)

(assert (=> b!60864 m!53339))

(declare-fun m!53341 () Bool)

(assert (=> b!60865 m!53341))

(assert (=> b!60596 d!11905))

(assert (=> d!11877 d!11865))

(declare-fun b!60866 () Bool)

(declare-fun e!40013 () Bool)

(assert (=> b!60866 (= e!40013 (contains!688 Nil!1441 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!11907 () Bool)

(declare-fun res!33593 () Bool)

(declare-fun e!40014 () Bool)

(assert (=> d!11907 (=> res!33593 e!40014)))

(assert (=> d!11907 (= res!33593 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!11907 (= (arrayNoDuplicates!0 (_keys!3693 newMap!16) #b00000000000000000000000000000000 Nil!1441) e!40014)))

(declare-fun b!60867 () Bool)

(declare-fun e!40011 () Bool)

(declare-fun call!4668 () Bool)

(assert (=> b!60867 (= e!40011 call!4668)))

(declare-fun bm!4665 () Bool)

(declare-fun c!7917 () Bool)

(assert (=> bm!4665 (= call!4668 (arrayNoDuplicates!0 (_keys!3693 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!7917 (Cons!1440 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) Nil!1441) Nil!1441)))))

(declare-fun b!60868 () Bool)

(declare-fun e!40012 () Bool)

(assert (=> b!60868 (= e!40012 e!40011)))

(assert (=> b!60868 (= c!7917 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!60869 () Bool)

(assert (=> b!60869 (= e!40011 call!4668)))

(declare-fun b!60870 () Bool)

(assert (=> b!60870 (= e!40014 e!40012)))

(declare-fun res!33594 () Bool)

(assert (=> b!60870 (=> (not res!33594) (not e!40012))))

(assert (=> b!60870 (= res!33594 (not e!40013))))

(declare-fun res!33595 () Bool)

(assert (=> b!60870 (=> (not res!33595) (not e!40013))))

(assert (=> b!60870 (= res!33595 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!11907 (not res!33593)) b!60870))

(assert (= (and b!60870 res!33595) b!60866))

(assert (= (and b!60870 res!33594) b!60868))

(assert (= (and b!60868 c!7917) b!60869))

(assert (= (and b!60868 (not c!7917)) b!60867))

(assert (= (or b!60869 b!60867) bm!4665))

(assert (=> b!60866 m!53263))

(assert (=> b!60866 m!53263))

(declare-fun m!53343 () Bool)

(assert (=> b!60866 m!53343))

(assert (=> bm!4665 m!53263))

(declare-fun m!53345 () Bool)

(assert (=> bm!4665 m!53345))

(assert (=> b!60868 m!53263))

(assert (=> b!60868 m!53263))

(assert (=> b!60868 m!53265))

(assert (=> b!60870 m!53263))

(assert (=> b!60870 m!53263))

(assert (=> b!60870 m!53265))

(assert (=> b!60753 d!11907))

(declare-fun e!40017 () Bool)

(declare-fun b!60871 () Bool)

(assert (=> b!60871 (= e!40017 (contains!688 (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!11909 () Bool)

(declare-fun res!33596 () Bool)

(declare-fun e!40018 () Bool)

(assert (=> d!11909 (=> res!33596 e!40018)))

(assert (=> d!11909 (= res!33596 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> d!11909 (= (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)) e!40018)))

(declare-fun b!60872 () Bool)

(declare-fun e!40015 () Bool)

(declare-fun call!4669 () Bool)

(assert (=> b!60872 (= e!40015 call!4669)))

(declare-fun c!7918 () Bool)

(declare-fun bm!4666 () Bool)

(assert (=> bm!4666 (= call!4669 (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!7918 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441))))))

(declare-fun b!60873 () Bool)

(declare-fun e!40016 () Bool)

(assert (=> b!60873 (= e!40016 e!40015)))

(assert (=> b!60873 (= c!7918 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!60874 () Bool)

(assert (=> b!60874 (= e!40015 call!4669)))

(declare-fun b!60875 () Bool)

(assert (=> b!60875 (= e!40018 e!40016)))

(declare-fun res!33597 () Bool)

(assert (=> b!60875 (=> (not res!33597) (not e!40016))))

(assert (=> b!60875 (= res!33597 (not e!40017))))

(declare-fun res!33598 () Bool)

(assert (=> b!60875 (=> (not res!33598) (not e!40017))))

(assert (=> b!60875 (= res!33598 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!11909 (not res!33596)) b!60875))

(assert (= (and b!60875 res!33598) b!60871))

(assert (= (and b!60875 res!33597) b!60873))

(assert (= (and b!60873 c!7918) b!60874))

(assert (= (and b!60873 (not c!7918)) b!60872))

(assert (= (or b!60874 b!60872) bm!4666))

(declare-fun m!53347 () Bool)

(assert (=> b!60871 m!53347))

(assert (=> b!60871 m!53347))

(declare-fun m!53349 () Bool)

(assert (=> b!60871 m!53349))

(assert (=> bm!4666 m!53347))

(declare-fun m!53351 () Bool)

(assert (=> bm!4666 m!53351))

(assert (=> b!60873 m!53347))

(assert (=> b!60873 m!53347))

(declare-fun m!53353 () Bool)

(assert (=> b!60873 m!53353))

(assert (=> b!60875 m!53347))

(assert (=> b!60875 m!53347))

(assert (=> b!60875 m!53353))

(assert (=> bm!4649 d!11909))

(declare-fun d!11911 () Bool)

(assert (=> d!11911 (= (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!60591 d!11911))

(declare-fun d!11913 () Bool)

(assert (=> d!11913 (= (inRange!0 (ite c!7877 (ite c!7886 (index!3049 lt!24900) (ite c!7879 (index!3048 lt!24911) (index!3051 lt!24911))) (ite c!7881 (index!3049 lt!24919) (ite c!7888 (index!3048 lt!24913) (index!3051 lt!24913)))) (mask!5961 newMap!16)) (and (bvsge (ite c!7877 (ite c!7886 (index!3049 lt!24900) (ite c!7879 (index!3048 lt!24911) (index!3051 lt!24911))) (ite c!7881 (index!3049 lt!24919) (ite c!7888 (index!3048 lt!24913) (index!3051 lt!24913)))) #b00000000000000000000000000000000) (bvslt (ite c!7877 (ite c!7886 (index!3049 lt!24900) (ite c!7879 (index!3048 lt!24911) (index!3051 lt!24911))) (ite c!7881 (index!3049 lt!24919) (ite c!7888 (index!3048 lt!24913) (index!3051 lt!24913)))) (bvadd (mask!5961 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!4635 d!11913))

(declare-fun d!11915 () Bool)

(declare-fun e!40020 () Bool)

(assert (=> d!11915 e!40020))

(declare-fun res!33599 () Bool)

(assert (=> d!11915 (=> res!33599 e!40020)))

(declare-fun lt!25043 () Bool)

(assert (=> d!11915 (= res!33599 (not lt!25043))))

(declare-fun lt!25041 () Bool)

(assert (=> d!11915 (= lt!25043 lt!25041)))

(declare-fun lt!25040 () Unit!1621)

(declare-fun e!40019 () Unit!1621)

(assert (=> d!11915 (= lt!25040 e!40019)))

(declare-fun c!7919 () Bool)

(assert (=> d!11915 (= c!7919 lt!25041)))

(assert (=> d!11915 (= lt!25041 (containsKey!127 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(assert (=> d!11915 (= (contains!687 call!4646 (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))) lt!25043)))

(declare-fun b!60876 () Bool)

(declare-fun lt!25042 () Unit!1621)

(assert (=> b!60876 (= e!40019 lt!25042)))

(assert (=> b!60876 (= lt!25042 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(assert (=> b!60876 (isDefined!77 (getValueByKey!123 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(declare-fun b!60877 () Bool)

(declare-fun Unit!1636 () Unit!1621)

(assert (=> b!60877 (= e!40019 Unit!1636)))

(declare-fun b!60878 () Bool)

(assert (=> b!60878 (= e!40020 (isDefined!77 (getValueByKey!123 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917)))))))

(assert (= (and d!11915 c!7919) b!60876))

(assert (= (and d!11915 (not c!7919)) b!60877))

(assert (= (and d!11915 (not res!33599)) b!60878))

(assert (=> d!11915 m!53225))

(declare-fun m!53355 () Bool)

(assert (=> d!11915 m!53355))

(assert (=> b!60876 m!53225))

(declare-fun m!53357 () Bool)

(assert (=> b!60876 m!53357))

(assert (=> b!60876 m!53225))

(declare-fun m!53359 () Bool)

(assert (=> b!60876 m!53359))

(assert (=> b!60876 m!53359))

(declare-fun m!53361 () Bool)

(assert (=> b!60876 m!53361))

(assert (=> b!60878 m!53225))

(assert (=> b!60878 m!53359))

(assert (=> b!60878 m!53359))

(assert (=> b!60878 m!53361))

(assert (=> b!60703 d!11915))

(declare-fun d!11917 () Bool)

(declare-fun e!40023 () Bool)

(assert (=> d!11917 e!40023))

(declare-fun res!33602 () Bool)

(assert (=> d!11917 (=> (not res!33602) (not e!40023))))

(assert (=> d!11917 (= res!33602 (and (bvsge (index!3049 lt!24917) #b00000000000000000000000000000000) (bvslt (index!3049 lt!24917) (size!2012 (_keys!3693 newMap!16)))))))

(declare-fun lt!25046 () Unit!1621)

(declare-fun choose!323 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 32) Int) Unit!1621)

(assert (=> d!11917 (= lt!25046 (choose!323 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (index!3049 lt!24917) (defaultEntry!2066 newMap!16)))))

(assert (=> d!11917 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!11917 (= (lemmaValidKeyInArrayIsInListMap!75 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (index!3049 lt!24917) (defaultEntry!2066 newMap!16)) lt!25046)))

(declare-fun b!60881 () Bool)

(assert (=> b!60881 (= e!40023 (contains!687 (getCurrentListMap!392 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(assert (= (and d!11917 res!33602) b!60881))

(declare-fun m!53363 () Bool)

(assert (=> d!11917 m!53363))

(declare-fun m!53365 () Bool)

(assert (=> d!11917 m!53365))

(declare-fun m!53367 () Bool)

(assert (=> b!60881 m!53367))

(assert (=> b!60881 m!53225))

(assert (=> b!60881 m!53367))

(assert (=> b!60881 m!53225))

(declare-fun m!53369 () Bool)

(assert (=> b!60881 m!53369))

(assert (=> b!60703 d!11917))

(declare-fun d!11919 () Bool)

(declare-fun e!40026 () Bool)

(assert (=> d!11919 e!40026))

(declare-fun res!33605 () Bool)

(assert (=> d!11919 (=> (not res!33605) (not e!40026))))

(assert (=> d!11919 (= res!33605 (and (bvsge (index!3049 lt!24917) #b00000000000000000000000000000000) (bvslt (index!3049 lt!24917) (size!2013 (_values!2049 newMap!16)))))))

(declare-fun lt!25049 () Unit!1621)

(declare-fun choose!324 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 32) (_ BitVec 64) V!2857 Int) Unit!1621)

(assert (=> d!11919 (= lt!25049 (choose!324 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (index!3049 lt!24917) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)))))

(assert (=> d!11919 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!11919 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (index!3049 lt!24917) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)) lt!25049)))

(declare-fun b!60884 () Bool)

(assert (=> b!60884 (= e!40026 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!392 (_keys!3693 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))))))

(assert (= (and d!11919 res!33605) b!60884))

(assert (=> d!11919 m!52977))

(assert (=> d!11919 m!52987))

(declare-fun m!53371 () Bool)

(assert (=> d!11919 m!53371))

(assert (=> d!11919 m!53365))

(assert (=> b!60884 m!53109))

(assert (=> b!60884 m!53109))

(assert (=> b!60884 m!53299))

(assert (=> b!60884 m!53193))

(declare-fun m!53373 () Bool)

(assert (=> b!60884 m!53373))

(assert (=> b!60703 d!11919))

(declare-fun d!11921 () Bool)

(assert (=> d!11921 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25052 () Unit!1621)

(declare-fun choose!325 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 V!2857 Int) Unit!1621)

(assert (=> d!11921 (= lt!25052 (choose!325 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)))))

(assert (=> d!11921 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!11921 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)) lt!25052)))

(declare-fun bs!2632 () Bool)

(assert (= bs!2632 d!11921))

(assert (=> bs!2632 m!53109))

(declare-fun m!53375 () Bool)

(assert (=> bs!2632 m!53375))

(assert (=> bs!2632 m!53109))

(assert (=> bs!2632 m!52987))

(declare-fun m!53377 () Bool)

(assert (=> bs!2632 m!53377))

(assert (=> bs!2632 m!52987))

(declare-fun m!53379 () Bool)

(assert (=> bs!2632 m!53379))

(assert (=> bs!2632 m!53365))

(assert (=> b!60713 d!11921))

(declare-fun d!11923 () Bool)

(declare-fun e!40029 () Bool)

(assert (=> d!11923 e!40029))

(declare-fun c!7922 () Bool)

(assert (=> d!11923 (= c!7922 (and (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!11923 true))

(declare-fun _$29!69 () Unit!1621)

(assert (=> d!11923 (= (choose!322 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))) _$29!69)))

(declare-fun b!60889 () Bool)

(assert (=> b!60889 (= e!40029 (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!60890 () Bool)

(assert (=> b!60890 (= e!40029 (ite (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!11923 c!7922) b!60889))

(assert (= (and d!11923 (not c!7922)) b!60890))

(assert (=> b!60889 m!52977))

(assert (=> b!60889 m!52999))

(assert (=> d!11895 d!11923))

(assert (=> d!11895 d!11865))

(assert (=> b!60764 d!11893))

(declare-fun d!11925 () Bool)

(assert (=> d!11925 (= (get!1084 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2396 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> b!60743 d!11925))

(assert (=> bm!4627 d!11875))

(declare-fun d!11927 () Bool)

(declare-fun e!40031 () Bool)

(assert (=> d!11927 e!40031))

(declare-fun res!33606 () Bool)

(assert (=> d!11927 (=> res!33606 e!40031)))

(declare-fun lt!25056 () Bool)

(assert (=> d!11927 (= res!33606 (not lt!25056))))

(declare-fun lt!25054 () Bool)

(assert (=> d!11927 (= lt!25056 lt!25054)))

(declare-fun lt!25053 () Unit!1621)

(declare-fun e!40030 () Unit!1621)

(assert (=> d!11927 (= lt!25053 e!40030)))

(declare-fun c!7923 () Bool)

(assert (=> d!11927 (= c!7923 lt!25054)))

(assert (=> d!11927 (= lt!25054 (containsKey!127 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!11927 (= (contains!687 lt!24825 #b1000000000000000000000000000000000000000000000000000000000000000) lt!25056)))

(declare-fun b!60891 () Bool)

(declare-fun lt!25055 () Unit!1621)

(assert (=> b!60891 (= e!40030 lt!25055)))

(assert (=> b!60891 (= lt!25055 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!60891 (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60892 () Bool)

(declare-fun Unit!1637 () Unit!1621)

(assert (=> b!60892 (= e!40030 Unit!1637)))

(declare-fun b!60893 () Bool)

(assert (=> b!60893 (= e!40031 (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11927 c!7923) b!60891))

(assert (= (and d!11927 (not c!7923)) b!60892))

(assert (= (and d!11927 (not res!33606)) b!60893))

(declare-fun m!53381 () Bool)

(assert (=> d!11927 m!53381))

(declare-fun m!53383 () Bool)

(assert (=> b!60891 m!53383))

(declare-fun m!53385 () Bool)

(assert (=> b!60891 m!53385))

(assert (=> b!60891 m!53385))

(declare-fun m!53387 () Bool)

(assert (=> b!60891 m!53387))

(assert (=> b!60893 m!53385))

(assert (=> b!60893 m!53385))

(assert (=> b!60893 m!53387))

(assert (=> bm!4571 d!11927))

(declare-fun bm!4667 () Bool)

(declare-fun call!4676 () ListLongMap!1361)

(declare-fun call!4675 () ListLongMap!1361)

(assert (=> bm!4667 (= call!4676 call!4675)))

(declare-fun b!60894 () Bool)

(declare-fun e!40037 () Unit!1621)

(declare-fun lt!25057 () Unit!1621)

(assert (=> b!60894 (= e!40037 lt!25057)))

(declare-fun lt!25064 () ListLongMap!1361)

(assert (=> b!60894 (= lt!25064 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25062 () (_ BitVec 64))

(assert (=> b!60894 (= lt!25062 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25058 () (_ BitVec 64))

(assert (=> b!60894 (= lt!25058 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25071 () Unit!1621)

(assert (=> b!60894 (= lt!25071 (addStillContains!43 lt!25064 lt!25062 (zeroValue!1980 newMap!16) lt!25058))))

(assert (=> b!60894 (contains!687 (+!82 lt!25064 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16))) lt!25058)))

(declare-fun lt!25077 () Unit!1621)

(assert (=> b!60894 (= lt!25077 lt!25071)))

(declare-fun lt!25068 () ListLongMap!1361)

(assert (=> b!60894 (= lt!25068 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25072 () (_ BitVec 64))

(assert (=> b!60894 (= lt!25072 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25075 () (_ BitVec 64))

(assert (=> b!60894 (= lt!25075 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25065 () Unit!1621)

(assert (=> b!60894 (= lt!25065 (addApplyDifferent!43 lt!25068 lt!25072 (minValue!1980 newMap!16) lt!25075))))

(assert (=> b!60894 (= (apply!67 (+!82 lt!25068 (tuple2!2049 lt!25072 (minValue!1980 newMap!16))) lt!25075) (apply!67 lt!25068 lt!25075))))

(declare-fun lt!25066 () Unit!1621)

(assert (=> b!60894 (= lt!25066 lt!25065)))

(declare-fun lt!25073 () ListLongMap!1361)

(assert (=> b!60894 (= lt!25073 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25063 () (_ BitVec 64))

(assert (=> b!60894 (= lt!25063 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25078 () (_ BitVec 64))

(assert (=> b!60894 (= lt!25078 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25061 () Unit!1621)

(assert (=> b!60894 (= lt!25061 (addApplyDifferent!43 lt!25073 lt!25063 (zeroValue!1980 newMap!16) lt!25078))))

(assert (=> b!60894 (= (apply!67 (+!82 lt!25073 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16))) lt!25078) (apply!67 lt!25073 lt!25078))))

(declare-fun lt!25060 () Unit!1621)

(assert (=> b!60894 (= lt!25060 lt!25061)))

(declare-fun lt!25076 () ListLongMap!1361)

(assert (=> b!60894 (= lt!25076 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25069 () (_ BitVec 64))

(assert (=> b!60894 (= lt!25069 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25067 () (_ BitVec 64))

(assert (=> b!60894 (= lt!25067 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!60894 (= lt!25057 (addApplyDifferent!43 lt!25076 lt!25069 (minValue!1980 newMap!16) lt!25067))))

(assert (=> b!60894 (= (apply!67 (+!82 lt!25076 (tuple2!2049 lt!25069 (minValue!1980 newMap!16))) lt!25067) (apply!67 lt!25076 lt!25067))))

(declare-fun b!60895 () Bool)

(declare-fun e!40040 () Bool)

(declare-fun lt!25074 () ListLongMap!1361)

(assert (=> b!60895 (= e!40040 (= (apply!67 lt!25074 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1980 newMap!16)))))

(declare-fun b!60896 () Bool)

(declare-fun e!40042 () Bool)

(declare-fun call!4673 () Bool)

(assert (=> b!60896 (= e!40042 (not call!4673))))

(declare-fun bm!4668 () Bool)

(assert (=> bm!4668 (= call!4675 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun b!60897 () Bool)

(declare-fun e!40044 () Bool)

(assert (=> b!60897 (= e!40044 (= (apply!67 lt!25074 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1980 newMap!16)))))

(declare-fun b!60898 () Bool)

(declare-fun e!40039 () ListLongMap!1361)

(declare-fun e!40038 () ListLongMap!1361)

(assert (=> b!60898 (= e!40039 e!40038)))

(declare-fun c!7928 () Bool)

(assert (=> b!60898 (= c!7928 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4669 () Bool)

(declare-fun call!4671 () ListLongMap!1361)

(assert (=> bm!4669 (= call!4671 call!4676)))

(declare-fun b!60899 () Bool)

(declare-fun res!33610 () Bool)

(declare-fun e!40033 () Bool)

(assert (=> b!60899 (=> (not res!33610) (not e!40033))))

(declare-fun e!40035 () Bool)

(assert (=> b!60899 (= res!33610 e!40035)))

(declare-fun res!33609 () Bool)

(assert (=> b!60899 (=> res!33609 e!40035)))

(declare-fun e!40041 () Bool)

(assert (=> b!60899 (= res!33609 (not e!40041))))

(declare-fun res!33615 () Bool)

(assert (=> b!60899 (=> (not res!33615) (not e!40041))))

(assert (=> b!60899 (= res!33615 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!60900 () Bool)

(declare-fun e!40032 () Bool)

(assert (=> b!60900 (= e!40035 e!40032)))

(declare-fun res!33611 () Bool)

(assert (=> b!60900 (=> (not res!33611) (not e!40032))))

(assert (=> b!60900 (= res!33611 (contains!687 lt!25074 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!60900 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun bm!4670 () Bool)

(assert (=> bm!4670 (= call!4673 (contains!687 lt!25074 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!60901 () Bool)

(declare-fun res!33612 () Bool)

(assert (=> b!60901 (=> (not res!33612) (not e!40033))))

(declare-fun e!40043 () Bool)

(assert (=> b!60901 (= res!33612 e!40043)))

(declare-fun c!7929 () Bool)

(assert (=> b!60901 (= c!7929 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!60902 () Bool)

(assert (=> b!60902 (= e!40041 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4671 () Bool)

(declare-fun call!4674 () ListLongMap!1361)

(declare-fun c!7926 () Bool)

(assert (=> bm!4671 (= call!4674 (+!82 (ite c!7926 call!4675 (ite c!7928 call!4676 call!4671)) (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(declare-fun b!60903 () Bool)

(assert (=> b!60903 (= e!40033 e!40042)))

(declare-fun c!7927 () Bool)

(assert (=> b!60903 (= c!7927 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!60904 () Bool)

(declare-fun Unit!1638 () Unit!1621)

(assert (=> b!60904 (= e!40037 Unit!1638)))

(declare-fun b!60905 () Bool)

(declare-fun call!4672 () ListLongMap!1361)

(assert (=> b!60905 (= e!40038 call!4672)))

(declare-fun b!60906 () Bool)

(declare-fun e!40036 () ListLongMap!1361)

(assert (=> b!60906 (= e!40036 call!4671)))

(declare-fun b!60907 () Bool)

(assert (=> b!60907 (= e!40039 (+!82 call!4674 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))

(declare-fun b!60908 () Bool)

(declare-fun e!40034 () Bool)

(assert (=> b!60908 (= e!40034 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!60909 () Bool)

(declare-fun c!7925 () Bool)

(assert (=> b!60909 (= c!7925 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!60909 (= e!40038 e!40036)))

(declare-fun b!60910 () Bool)

(assert (=> b!60910 (= e!40042 e!40044)))

(declare-fun res!33613 () Bool)

(assert (=> b!60910 (= res!33613 call!4673)))

(assert (=> b!60910 (=> (not res!33613) (not e!40044))))

(declare-fun d!11929 () Bool)

(assert (=> d!11929 e!40033))

(declare-fun res!33614 () Bool)

(assert (=> d!11929 (=> (not res!33614) (not e!40033))))

(assert (=> d!11929 (= res!33614 (or (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))))

(declare-fun lt!25059 () ListLongMap!1361)

(assert (=> d!11929 (= lt!25074 lt!25059)))

(declare-fun lt!25070 () Unit!1621)

(assert (=> d!11929 (= lt!25070 e!40037)))

(declare-fun c!7924 () Bool)

(assert (=> d!11929 (= c!7924 e!40034)))

(declare-fun res!33607 () Bool)

(assert (=> d!11929 (=> (not res!33607) (not e!40034))))

(assert (=> d!11929 (= res!33607 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!11929 (= lt!25059 e!40039)))

(assert (=> d!11929 (= c!7926 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11929 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!11929 (= (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25074)))

(declare-fun b!60911 () Bool)

(declare-fun call!4670 () Bool)

(assert (=> b!60911 (= e!40043 (not call!4670))))

(declare-fun b!60912 () Bool)

(assert (=> b!60912 (= e!40032 (= (apply!67 lt!25074 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (_values!2049 newMap!16)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!60912 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (_values!2049 newMap!16))))))

(assert (=> b!60912 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!60913 () Bool)

(assert (=> b!60913 (= e!40036 call!4672)))

(declare-fun b!60914 () Bool)

(assert (=> b!60914 (= e!40043 e!40040)))

(declare-fun res!33608 () Bool)

(assert (=> b!60914 (= res!33608 call!4670)))

(assert (=> b!60914 (=> (not res!33608) (not e!40040))))

(declare-fun bm!4672 () Bool)

(assert (=> bm!4672 (= call!4670 (contains!687 lt!25074 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4673 () Bool)

(assert (=> bm!4673 (= call!4672 call!4674)))

(assert (= (and d!11929 c!7926) b!60907))

(assert (= (and d!11929 (not c!7926)) b!60898))

(assert (= (and b!60898 c!7928) b!60905))

(assert (= (and b!60898 (not c!7928)) b!60909))

(assert (= (and b!60909 c!7925) b!60913))

(assert (= (and b!60909 (not c!7925)) b!60906))

(assert (= (or b!60913 b!60906) bm!4669))

(assert (= (or b!60905 bm!4669) bm!4667))

(assert (= (or b!60905 b!60913) bm!4673))

(assert (= (or b!60907 bm!4667) bm!4668))

(assert (= (or b!60907 bm!4673) bm!4671))

(assert (= (and d!11929 res!33607) b!60908))

(assert (= (and d!11929 c!7924) b!60894))

(assert (= (and d!11929 (not c!7924)) b!60904))

(assert (= (and d!11929 res!33614) b!60899))

(assert (= (and b!60899 res!33615) b!60902))

(assert (= (and b!60899 (not res!33609)) b!60900))

(assert (= (and b!60900 res!33611) b!60912))

(assert (= (and b!60899 res!33610) b!60901))

(assert (= (and b!60901 c!7929) b!60914))

(assert (= (and b!60901 (not c!7929)) b!60911))

(assert (= (and b!60914 res!33608) b!60895))

(assert (= (or b!60914 b!60911) bm!4672))

(assert (= (and b!60901 res!33612) b!60903))

(assert (= (and b!60903 c!7927) b!60910))

(assert (= (and b!60903 (not c!7927)) b!60896))

(assert (= (and b!60910 res!33613) b!60897))

(assert (= (or b!60910 b!60896) bm!4670))

(declare-fun b_lambda!2687 () Bool)

(assert (=> (not b_lambda!2687) (not b!60912)))

(declare-fun t!4820 () Bool)

(declare-fun tb!1353 () Bool)

(assert (=> (and b!60405 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16)) t!4820) tb!1353))

(declare-fun result!2427 () Bool)

(assert (=> tb!1353 (= result!2427 tp_is_empty!2407)))

(assert (=> b!60912 t!4820))

(declare-fun b_and!3701 () Bool)

(assert (= b_and!3697 (and (=> t!4820 result!2427) b_and!3701)))

(declare-fun t!4822 () Bool)

(declare-fun tb!1355 () Bool)

(assert (=> (and b!60410 (= (defaultEntry!2066 newMap!16) (defaultEntry!2066 newMap!16)) t!4822) tb!1355))

(declare-fun result!2429 () Bool)

(assert (= result!2429 result!2427))

(assert (=> b!60912 t!4822))

(declare-fun b_and!3703 () Bool)

(assert (= b_and!3699 (and (=> t!4822 result!2429) b_and!3703)))

(assert (=> b!60902 m!53263))

(assert (=> b!60902 m!53263))

(assert (=> b!60902 m!53265))

(declare-fun m!53389 () Bool)

(assert (=> b!60912 m!53389))

(declare-fun m!53391 () Bool)

(assert (=> b!60912 m!53391))

(declare-fun m!53393 () Bool)

(assert (=> b!60912 m!53393))

(assert (=> b!60912 m!53389))

(assert (=> b!60912 m!53263))

(declare-fun m!53395 () Bool)

(assert (=> b!60912 m!53395))

(assert (=> b!60912 m!53263))

(assert (=> b!60912 m!53391))

(declare-fun m!53397 () Bool)

(assert (=> b!60894 m!53397))

(declare-fun m!53399 () Bool)

(assert (=> b!60894 m!53399))

(declare-fun m!53401 () Bool)

(assert (=> b!60894 m!53401))

(declare-fun m!53403 () Bool)

(assert (=> b!60894 m!53403))

(declare-fun m!53405 () Bool)

(assert (=> b!60894 m!53405))

(declare-fun m!53407 () Bool)

(assert (=> b!60894 m!53407))

(assert (=> b!60894 m!53403))

(declare-fun m!53409 () Bool)

(assert (=> b!60894 m!53409))

(declare-fun m!53411 () Bool)

(assert (=> b!60894 m!53411))

(declare-fun m!53413 () Bool)

(assert (=> b!60894 m!53413))

(declare-fun m!53415 () Bool)

(assert (=> b!60894 m!53415))

(assert (=> b!60894 m!53263))

(assert (=> b!60894 m!53405))

(assert (=> b!60894 m!53399))

(declare-fun m!53417 () Bool)

(assert (=> b!60894 m!53417))

(declare-fun m!53419 () Bool)

(assert (=> b!60894 m!53419))

(declare-fun m!53421 () Bool)

(assert (=> b!60894 m!53421))

(assert (=> b!60894 m!53419))

(declare-fun m!53423 () Bool)

(assert (=> b!60894 m!53423))

(declare-fun m!53425 () Bool)

(assert (=> b!60894 m!53425))

(declare-fun m!53427 () Bool)

(assert (=> b!60894 m!53427))

(declare-fun m!53429 () Bool)

(assert (=> b!60897 m!53429))

(assert (=> bm!4668 m!53401))

(declare-fun m!53431 () Bool)

(assert (=> bm!4672 m!53431))

(assert (=> b!60908 m!53263))

(assert (=> b!60908 m!53263))

(assert (=> b!60908 m!53265))

(declare-fun m!53433 () Bool)

(assert (=> b!60907 m!53433))

(declare-fun m!53435 () Bool)

(assert (=> b!60895 m!53435))

(assert (=> d!11929 m!53365))

(declare-fun m!53437 () Bool)

(assert (=> bm!4670 m!53437))

(assert (=> b!60900 m!53263))

(assert (=> b!60900 m!53263))

(declare-fun m!53439 () Bool)

(assert (=> b!60900 m!53439))

(declare-fun m!53441 () Bool)

(assert (=> bm!4671 m!53441))

(assert (=> d!11875 d!11929))

(declare-fun d!11931 () Bool)

(declare-fun e!40045 () Bool)

(assert (=> d!11931 e!40045))

(declare-fun res!33616 () Bool)

(assert (=> d!11931 (=> (not res!33616) (not e!40045))))

(declare-fun lt!25081 () ListLongMap!1361)

(assert (=> d!11931 (= res!33616 (contains!687 lt!25081 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!25079 () List!1443)

(assert (=> d!11931 (= lt!25081 (ListLongMap!1362 lt!25079))))

(declare-fun lt!25080 () Unit!1621)

(declare-fun lt!25082 () Unit!1621)

(assert (=> d!11931 (= lt!25080 lt!25082)))

(assert (=> d!11931 (= (getValueByKey!123 lt!25079 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11931 (= lt!25082 (lemmaContainsTupThenGetReturnValue!43 lt!25079 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11931 (= lt!25079 (insertStrictlySorted!46 (toList!696 call!4628) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11931 (= (+!82 call!4628 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25081)))

(declare-fun b!60915 () Bool)

(declare-fun res!33617 () Bool)

(assert (=> b!60915 (=> (not res!33617) (not e!40045))))

(assert (=> b!60915 (= res!33617 (= (getValueByKey!123 (toList!696 lt!25081) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!60916 () Bool)

(assert (=> b!60916 (= e!40045 (contains!689 (toList!696 lt!25081) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!11931 res!33616) b!60915))

(assert (= (and b!60915 res!33617) b!60916))

(declare-fun m!53443 () Bool)

(assert (=> d!11931 m!53443))

(declare-fun m!53445 () Bool)

(assert (=> d!11931 m!53445))

(declare-fun m!53447 () Bool)

(assert (=> d!11931 m!53447))

(declare-fun m!53449 () Bool)

(assert (=> d!11931 m!53449))

(declare-fun m!53451 () Bool)

(assert (=> b!60915 m!53451))

(declare-fun m!53453 () Bool)

(assert (=> b!60916 m!53453))

(assert (=> b!60700 d!11931))

(assert (=> d!11891 d!11897))

(declare-fun d!11933 () Bool)

(assert (=> d!11933 (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) from!355 Nil!1441)))

(assert (=> d!11933 true))

(declare-fun _$71!75 () Unit!1621)

(assert (=> d!11933 (= (choose!39 (_keys!3693 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!75)))

(declare-fun bs!2633 () Bool)

(assert (= bs!2633 d!11933))

(assert (=> bs!2633 m!52995))

(assert (=> d!11891 d!11933))

(declare-fun d!11935 () Bool)

(declare-fun res!33618 () Bool)

(declare-fun e!40046 () Bool)

(assert (=> d!11935 (=> (not res!33618) (not e!40046))))

(assert (=> d!11935 (= res!33618 (simpleValid!43 (_2!1034 lt!24902)))))

(assert (=> d!11935 (= (valid!263 (_2!1034 lt!24902)) e!40046)))

(declare-fun b!60917 () Bool)

(declare-fun res!33619 () Bool)

(assert (=> b!60917 (=> (not res!33619) (not e!40046))))

(assert (=> b!60917 (= res!33619 (= (arrayCountValidKeys!0 (_keys!3693 (_2!1034 lt!24902)) #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))) (_size!363 (_2!1034 lt!24902))))))

(declare-fun b!60918 () Bool)

(declare-fun res!33620 () Bool)

(assert (=> b!60918 (=> (not res!33620) (not e!40046))))

(assert (=> b!60918 (= res!33620 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3693 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902))))))

(declare-fun b!60919 () Bool)

(assert (=> b!60919 (= e!40046 (arrayNoDuplicates!0 (_keys!3693 (_2!1034 lt!24902)) #b00000000000000000000000000000000 Nil!1441))))

(assert (= (and d!11935 res!33618) b!60917))

(assert (= (and b!60917 res!33619) b!60918))

(assert (= (and b!60918 res!33620) b!60919))

(declare-fun m!53455 () Bool)

(assert (=> d!11935 m!53455))

(declare-fun m!53457 () Bool)

(assert (=> b!60917 m!53457))

(declare-fun m!53459 () Bool)

(assert (=> b!60918 m!53459))

(declare-fun m!53461 () Bool)

(assert (=> b!60919 m!53461))

(assert (=> d!11881 d!11935))

(assert (=> d!11881 d!11885))

(declare-fun b!60936 () Bool)

(declare-fun res!33630 () Bool)

(declare-fun e!40058 () Bool)

(assert (=> b!60936 (=> (not res!33630) (not e!40058))))

(declare-fun lt!25088 () SeekEntryResult!231)

(assert (=> b!60936 (= res!33630 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3051 lt!25088)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!60936 (and (bvsge (index!3051 lt!25088) #b00000000000000000000000000000000) (bvslt (index!3051 lt!25088) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!60937 () Bool)

(declare-fun res!33631 () Bool)

(assert (=> b!60937 (=> (not res!33631) (not e!40058))))

(declare-fun call!4681 () Bool)

(assert (=> b!60937 (= res!33631 call!4681)))

(declare-fun e!40057 () Bool)

(assert (=> b!60937 (= e!40057 e!40058)))

(declare-fun b!60938 () Bool)

(declare-fun e!40056 () Bool)

(assert (=> b!60938 (= e!40056 e!40057)))

(declare-fun c!7934 () Bool)

(assert (=> b!60938 (= c!7934 ((_ is MissingVacant!231) lt!25088))))

(declare-fun b!60939 () Bool)

(declare-fun e!40055 () Bool)

(assert (=> b!60939 (= e!40056 e!40055)))

(declare-fun res!33629 () Bool)

(assert (=> b!60939 (= res!33629 call!4681)))

(assert (=> b!60939 (=> (not res!33629) (not e!40055))))

(declare-fun d!11937 () Bool)

(assert (=> d!11937 e!40056))

(declare-fun c!7935 () Bool)

(assert (=> d!11937 (= c!7935 ((_ is MissingZero!231) lt!25088))))

(assert (=> d!11937 (= lt!25088 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun lt!25087 () Unit!1621)

(declare-fun choose!326 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 64) Int) Unit!1621)

(assert (=> d!11937 (= lt!25087 (choose!326 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (defaultEntry!2066 newMap!16)))))

(assert (=> d!11937 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!11937 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (defaultEntry!2066 newMap!16)) lt!25087)))

(declare-fun b!60940 () Bool)

(assert (=> b!60940 (and (bvsge (index!3048 lt!25088) #b00000000000000000000000000000000) (bvslt (index!3048 lt!25088) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun res!33632 () Bool)

(assert (=> b!60940 (= res!33632 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3048 lt!25088)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!60940 (=> (not res!33632) (not e!40055))))

(declare-fun b!60941 () Bool)

(declare-fun call!4682 () Bool)

(assert (=> b!60941 (= e!40055 (not call!4682))))

(declare-fun b!60942 () Bool)

(assert (=> b!60942 (= e!40057 ((_ is Undefined!231) lt!25088))))

(declare-fun bm!4678 () Bool)

(assert (=> bm!4678 (= call!4681 (inRange!0 (ite c!7935 (index!3048 lt!25088) (index!3051 lt!25088)) (mask!5961 newMap!16)))))

(declare-fun b!60943 () Bool)

(assert (=> b!60943 (= e!40058 (not call!4682))))

(declare-fun bm!4679 () Bool)

(assert (=> bm!4679 (= call!4682 (arrayContainsKey!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!11937 c!7935) b!60939))

(assert (= (and d!11937 (not c!7935)) b!60938))

(assert (= (and b!60939 res!33629) b!60940))

(assert (= (and b!60940 res!33632) b!60941))

(assert (= (and b!60938 c!7934) b!60937))

(assert (= (and b!60938 (not c!7934)) b!60942))

(assert (= (and b!60937 res!33631) b!60936))

(assert (= (and b!60936 res!33630) b!60943))

(assert (= (or b!60939 b!60937) bm!4678))

(assert (= (or b!60941 b!60943) bm!4679))

(assert (=> d!11937 m!52977))

(assert (=> d!11937 m!53207))

(assert (=> d!11937 m!52977))

(declare-fun m!53463 () Bool)

(assert (=> d!11937 m!53463))

(assert (=> d!11937 m!53365))

(declare-fun m!53465 () Bool)

(assert (=> b!60940 m!53465))

(declare-fun m!53467 () Bool)

(assert (=> b!60936 m!53467))

(declare-fun m!53469 () Bool)

(assert (=> bm!4678 m!53469))

(assert (=> bm!4679 m!52977))

(assert (=> bm!4679 m!53189))

(assert (=> bm!4639 d!11937))

(declare-fun d!11939 () Bool)

(declare-fun res!33633 () Bool)

(declare-fun e!40059 () Bool)

(assert (=> d!11939 (=> res!33633 e!40059)))

(assert (=> d!11939 (= res!33633 (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!11939 (= (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!40059)))

(declare-fun b!60944 () Bool)

(declare-fun e!40060 () Bool)

(assert (=> b!60944 (= e!40059 e!40060)))

(declare-fun res!33634 () Bool)

(assert (=> b!60944 (=> (not res!33634) (not e!40060))))

(assert (=> b!60944 (= res!33634 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!60945 () Bool)

(assert (=> b!60945 (= e!40060 (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!11939 (not res!33633)) b!60944))

(assert (= (and b!60944 res!33634) b!60945))

(declare-fun m!53471 () Bool)

(assert (=> d!11939 m!53471))

(assert (=> b!60945 m!52977))

(declare-fun m!53473 () Bool)

(assert (=> b!60945 m!53473))

(assert (=> b!60759 d!11939))

(declare-fun d!11941 () Bool)

(declare-fun e!40062 () Bool)

(assert (=> d!11941 e!40062))

(declare-fun res!33635 () Bool)

(assert (=> d!11941 (=> res!33635 e!40062)))

(declare-fun lt!25092 () Bool)

(assert (=> d!11941 (= res!33635 (not lt!25092))))

(declare-fun lt!25090 () Bool)

(assert (=> d!11941 (= lt!25092 lt!25090)))

(declare-fun lt!25089 () Unit!1621)

(declare-fun e!40061 () Unit!1621)

(assert (=> d!11941 (= lt!25089 e!40061)))

(declare-fun c!7936 () Bool)

(assert (=> d!11941 (= c!7936 lt!25090)))

(assert (=> d!11941 (= lt!25090 (containsKey!127 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!11941 (= (contains!687 call!4636 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) lt!25092)))

(declare-fun b!60946 () Bool)

(declare-fun lt!25091 () Unit!1621)

(assert (=> b!60946 (= e!40061 lt!25091)))

(assert (=> b!60946 (= lt!25091 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> b!60946 (isDefined!77 (getValueByKey!123 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!60947 () Bool)

(declare-fun Unit!1639 () Unit!1621)

(assert (=> b!60947 (= e!40061 Unit!1639)))

(declare-fun b!60948 () Bool)

(assert (=> b!60948 (= e!40062 (isDefined!77 (getValueByKey!123 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(assert (= (and d!11941 c!7936) b!60946))

(assert (= (and d!11941 (not c!7936)) b!60947))

(assert (= (and d!11941 (not res!33635)) b!60948))

(assert (=> d!11941 m!52977))

(declare-fun m!53475 () Bool)

(assert (=> d!11941 m!53475))

(assert (=> b!60946 m!52977))

(declare-fun m!53477 () Bool)

(assert (=> b!60946 m!53477))

(assert (=> b!60946 m!52977))

(declare-fun m!53479 () Bool)

(assert (=> b!60946 m!53479))

(assert (=> b!60946 m!53479))

(declare-fun m!53481 () Bool)

(assert (=> b!60946 m!53481))

(assert (=> b!60948 m!52977))

(assert (=> b!60948 m!53479))

(assert (=> b!60948 m!53479))

(assert (=> b!60948 m!53481))

(assert (=> b!60697 d!11941))

(declare-fun d!11943 () Bool)

(declare-fun get!1086 (Option!129) V!2857)

(assert (=> d!11943 (= (apply!67 lt!24825 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1086 (getValueByKey!123 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2634 () Bool)

(assert (= bs!2634 d!11943))

(assert (=> bs!2634 m!53111))

(declare-fun m!53483 () Bool)

(assert (=> bs!2634 m!53483))

(assert (=> bs!2634 m!53483))

(declare-fun m!53485 () Bool)

(assert (=> bs!2634 m!53485))

(assert (=> b!60601 d!11943))

(declare-fun d!11945 () Bool)

(declare-fun c!7937 () Bool)

(assert (=> d!11945 (= c!7937 ((_ is ValueCellFull!860) (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!40063 () V!2857)

(assert (=> d!11945 (= (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!40063)))

(declare-fun b!60949 () Bool)

(assert (=> b!60949 (= e!40063 (get!1084 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!60950 () Bool)

(assert (=> b!60950 (= e!40063 (get!1085 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!11945 c!7937) b!60949))

(assert (= (and d!11945 (not c!7937)) b!60950))

(assert (=> b!60949 m!53115))

(assert (=> b!60949 m!52985))

(declare-fun m!53487 () Bool)

(assert (=> b!60949 m!53487))

(assert (=> b!60950 m!53115))

(assert (=> b!60950 m!52985))

(declare-fun m!53489 () Bool)

(assert (=> b!60950 m!53489))

(assert (=> b!60601 d!11945))

(declare-fun d!11947 () Bool)

(assert (=> d!11947 (= (apply!67 lt!24825 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1086 (getValueByKey!123 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2635 () Bool)

(assert (= bs!2635 d!11947))

(declare-fun m!53491 () Bool)

(assert (=> bs!2635 m!53491))

(assert (=> bs!2635 m!53491))

(declare-fun m!53493 () Bool)

(assert (=> bs!2635 m!53493))

(assert (=> b!60584 d!11947))

(declare-fun d!11949 () Bool)

(assert (=> d!11949 (= (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (and (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!60780 d!11949))

(declare-fun b!60975 () Bool)

(declare-fun res!33644 () Bool)

(declare-fun e!40080 () Bool)

(assert (=> b!60975 (=> (not res!33644) (not e!40080))))

(declare-fun lt!25107 () ListLongMap!1361)

(assert (=> b!60975 (= res!33644 (not (contains!687 lt!25107 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!60976 () Bool)

(declare-fun e!40083 () Bool)

(declare-fun isEmpty!300 (ListLongMap!1361) Bool)

(assert (=> b!60976 (= e!40083 (isEmpty!300 lt!25107))))

(declare-fun b!60977 () Bool)

(declare-fun e!40079 () Bool)

(declare-fun e!40084 () Bool)

(assert (=> b!60977 (= e!40079 e!40084)))

(assert (=> b!60977 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun res!33645 () Bool)

(assert (=> b!60977 (= res!33645 (contains!687 lt!25107 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!60977 (=> (not res!33645) (not e!40084))))

(declare-fun d!11951 () Bool)

(assert (=> d!11951 e!40080))

(declare-fun res!33646 () Bool)

(assert (=> d!11951 (=> (not res!33646) (not e!40080))))

(assert (=> d!11951 (= res!33646 (not (contains!687 lt!25107 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!40081 () ListLongMap!1361)

(assert (=> d!11951 (= lt!25107 e!40081)))

(declare-fun c!7949 () Bool)

(assert (=> d!11951 (= c!7949 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> d!11951 (validMask!0 (mask!5961 (v!2397 (underlying!227 thiss!992))))))

(assert (=> d!11951 (= (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))) lt!25107)))

(declare-fun b!60978 () Bool)

(declare-fun lt!25109 () Unit!1621)

(declare-fun lt!25110 () Unit!1621)

(assert (=> b!60978 (= lt!25109 lt!25110)))

(declare-fun lt!25108 () (_ BitVec 64))

(declare-fun lt!25113 () V!2857)

(declare-fun lt!25111 () (_ BitVec 64))

(declare-fun lt!25112 () ListLongMap!1361)

(assert (=> b!60978 (not (contains!687 (+!82 lt!25112 (tuple2!2049 lt!25108 lt!25113)) lt!25111))))

(declare-fun addStillNotContains!17 (ListLongMap!1361 (_ BitVec 64) V!2857 (_ BitVec 64)) Unit!1621)

(assert (=> b!60978 (= lt!25110 (addStillNotContains!17 lt!25112 lt!25108 lt!25113 lt!25111))))

(assert (=> b!60978 (= lt!25111 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!60978 (= lt!25113 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!60978 (= lt!25108 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!4685 () ListLongMap!1361)

(assert (=> b!60978 (= lt!25112 call!4685)))

(declare-fun e!40082 () ListLongMap!1361)

(assert (=> b!60978 (= e!40082 (+!82 call!4685 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!4682 () Bool)

(assert (=> bm!4682 (= call!4685 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!60979 () Bool)

(declare-fun e!40078 () Bool)

(assert (=> b!60979 (= e!40078 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!60979 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!60980 () Bool)

(assert (=> b!60980 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> b!60980 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2013 (_values!2049 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> b!60980 (= e!40084 (= (apply!67 lt!25107 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!60981 () Bool)

(assert (=> b!60981 (= e!40081 e!40082)))

(declare-fun c!7948 () Bool)

(assert (=> b!60981 (= c!7948 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!60982 () Bool)

(assert (=> b!60982 (= e!40079 e!40083)))

(declare-fun c!7946 () Bool)

(assert (=> b!60982 (= c!7946 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!60983 () Bool)

(assert (=> b!60983 (= e!40080 e!40079)))

(declare-fun c!7947 () Bool)

(assert (=> b!60983 (= c!7947 e!40078)))

(declare-fun res!33647 () Bool)

(assert (=> b!60983 (=> (not res!33647) (not e!40078))))

(assert (=> b!60983 (= res!33647 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!60984 () Bool)

(assert (=> b!60984 (= e!40082 call!4685)))

(declare-fun b!60985 () Bool)

(assert (=> b!60985 (= e!40083 (= lt!25107 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!60986 () Bool)

(assert (=> b!60986 (= e!40081 (ListLongMap!1362 Nil!1440))))

(assert (= (and d!11951 c!7949) b!60986))

(assert (= (and d!11951 (not c!7949)) b!60981))

(assert (= (and b!60981 c!7948) b!60978))

(assert (= (and b!60981 (not c!7948)) b!60984))

(assert (= (or b!60978 b!60984) bm!4682))

(assert (= (and d!11951 res!33646) b!60975))

(assert (= (and b!60975 res!33644) b!60983))

(assert (= (and b!60983 res!33647) b!60979))

(assert (= (and b!60983 c!7947) b!60977))

(assert (= (and b!60983 (not c!7947)) b!60982))

(assert (= (and b!60977 res!33645) b!60980))

(assert (= (and b!60982 c!7946) b!60985))

(assert (= (and b!60982 (not c!7946)) b!60976))

(declare-fun b_lambda!2689 () Bool)

(assert (=> (not b_lambda!2689) (not b!60978)))

(assert (=> b!60978 t!4805))

(declare-fun b_and!3705 () Bool)

(assert (= b_and!3701 (and (=> t!4805 result!2407) b_and!3705)))

(assert (=> b!60978 t!4807))

(declare-fun b_and!3707 () Bool)

(assert (= b_and!3703 (and (=> t!4807 result!2411) b_and!3707)))

(declare-fun b_lambda!2691 () Bool)

(assert (=> (not b_lambda!2691) (not b!60980)))

(assert (=> b!60980 t!4805))

(declare-fun b_and!3709 () Bool)

(assert (= b_and!3705 (and (=> t!4805 result!2407) b_and!3709)))

(assert (=> b!60980 t!4807))

(declare-fun b_and!3711 () Bool)

(assert (= b_and!3707 (and (=> t!4807 result!2411) b_and!3711)))

(declare-fun m!53495 () Bool)

(assert (=> b!60975 m!53495))

(declare-fun m!53497 () Bool)

(assert (=> b!60976 m!53497))

(assert (=> b!60978 m!53115))

(assert (=> b!60978 m!52985))

(assert (=> b!60978 m!53117))

(declare-fun m!53499 () Bool)

(assert (=> b!60978 m!53499))

(declare-fun m!53501 () Bool)

(assert (=> b!60978 m!53501))

(assert (=> b!60978 m!53499))

(declare-fun m!53503 () Bool)

(assert (=> b!60978 m!53503))

(assert (=> b!60978 m!53111))

(assert (=> b!60978 m!53115))

(assert (=> b!60978 m!52985))

(declare-fun m!53505 () Bool)

(assert (=> b!60978 m!53505))

(declare-fun m!53507 () Bool)

(assert (=> b!60985 m!53507))

(assert (=> b!60977 m!53111))

(assert (=> b!60977 m!53111))

(declare-fun m!53509 () Bool)

(assert (=> b!60977 m!53509))

(assert (=> b!60980 m!53111))

(declare-fun m!53511 () Bool)

(assert (=> b!60980 m!53511))

(assert (=> b!60980 m!53115))

(assert (=> b!60980 m!52985))

(assert (=> b!60980 m!53117))

(assert (=> b!60980 m!53111))

(assert (=> b!60980 m!53115))

(assert (=> b!60980 m!52985))

(assert (=> bm!4682 m!53507))

(declare-fun m!53513 () Bool)

(assert (=> d!11951 m!53513))

(assert (=> d!11951 m!53015))

(assert (=> b!60979 m!53111))

(assert (=> b!60979 m!53111))

(assert (=> b!60979 m!53113))

(assert (=> b!60981 m!53111))

(assert (=> b!60981 m!53111))

(assert (=> b!60981 m!53113))

(assert (=> bm!4569 d!11951))

(assert (=> b!60597 d!11911))

(declare-fun d!11953 () Bool)

(declare-fun e!40086 () Bool)

(assert (=> d!11953 e!40086))

(declare-fun res!33648 () Bool)

(assert (=> d!11953 (=> res!33648 e!40086)))

(declare-fun lt!25117 () Bool)

(assert (=> d!11953 (= res!33648 (not lt!25117))))

(declare-fun lt!25115 () Bool)

(assert (=> d!11953 (= lt!25117 lt!25115)))

(declare-fun lt!25114 () Unit!1621)

(declare-fun e!40085 () Unit!1621)

(assert (=> d!11953 (= lt!25114 e!40085)))

(declare-fun c!7950 () Bool)

(assert (=> d!11953 (= c!7950 lt!25115)))

(assert (=> d!11953 (= lt!25115 (containsKey!127 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!11953 (= (contains!687 e!39929 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) lt!25117)))

(declare-fun b!60987 () Bool)

(declare-fun lt!25116 () Unit!1621)

(assert (=> b!60987 (= e!40085 lt!25116)))

(assert (=> b!60987 (= lt!25116 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> b!60987 (isDefined!77 (getValueByKey!123 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!60988 () Bool)

(declare-fun Unit!1640 () Unit!1621)

(assert (=> b!60988 (= e!40085 Unit!1640)))

(declare-fun b!60989 () Bool)

(assert (=> b!60989 (= e!40086 (isDefined!77 (getValueByKey!123 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(assert (= (and d!11953 c!7950) b!60987))

(assert (= (and d!11953 (not c!7950)) b!60988))

(assert (= (and d!11953 (not res!33648)) b!60989))

(assert (=> d!11953 m!52977))

(declare-fun m!53515 () Bool)

(assert (=> d!11953 m!53515))

(assert (=> b!60987 m!52977))

(declare-fun m!53517 () Bool)

(assert (=> b!60987 m!53517))

(assert (=> b!60987 m!52977))

(declare-fun m!53519 () Bool)

(assert (=> b!60987 m!53519))

(assert (=> b!60987 m!53519))

(declare-fun m!53521 () Bool)

(assert (=> b!60987 m!53521))

(assert (=> b!60989 m!52977))

(assert (=> b!60989 m!53519))

(assert (=> b!60989 m!53519))

(assert (=> b!60989 m!53521))

(assert (=> bm!4644 d!11953))

(declare-fun d!11955 () Bool)

(assert (=> d!11955 (isDefined!77 (getValueByKey!123 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun lt!25120 () Unit!1621)

(declare-fun choose!327 (List!1443 (_ BitVec 64)) Unit!1621)

(assert (=> d!11955 (= lt!25120 (choose!327 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun e!40089 () Bool)

(assert (=> d!11955 e!40089))

(declare-fun res!33651 () Bool)

(assert (=> d!11955 (=> (not res!33651) (not e!40089))))

(declare-fun isStrictlySorted!280 (List!1443) Bool)

(assert (=> d!11955 (= res!33651 (isStrictlySorted!280 (toList!696 lt!24715)))))

(assert (=> d!11955 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) lt!25120)))

(declare-fun b!60992 () Bool)

(assert (=> b!60992 (= e!40089 (containsKey!127 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (= (and d!11955 res!33651) b!60992))

(assert (=> d!11955 m!52977))

(assert (=> d!11955 m!53171))

(assert (=> d!11955 m!53171))

(assert (=> d!11955 m!53173))

(assert (=> d!11955 m!52977))

(declare-fun m!53523 () Bool)

(assert (=> d!11955 m!53523))

(declare-fun m!53525 () Bool)

(assert (=> d!11955 m!53525))

(assert (=> b!60992 m!52977))

(assert (=> b!60992 m!53167))

(assert (=> b!60610 d!11955))

(declare-fun d!11957 () Bool)

(declare-fun isEmpty!301 (Option!129) Bool)

(assert (=> d!11957 (= (isDefined!77 (getValueByKey!123 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))) (not (isEmpty!301 (getValueByKey!123 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))))

(declare-fun bs!2636 () Bool)

(assert (= bs!2636 d!11957))

(assert (=> bs!2636 m!53171))

(declare-fun m!53527 () Bool)

(assert (=> bs!2636 m!53527))

(assert (=> b!60610 d!11957))

(declare-fun d!11959 () Bool)

(declare-fun c!7955 () Bool)

(assert (=> d!11959 (= c!7955 (and ((_ is Cons!1439) (toList!696 lt!24715)) (= (_1!1035 (h!2021 (toList!696 lt!24715))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(declare-fun e!40094 () Option!129)

(assert (=> d!11959 (= (getValueByKey!123 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) e!40094)))

(declare-fun b!61004 () Bool)

(declare-fun e!40095 () Option!129)

(assert (=> b!61004 (= e!40095 None!127)))

(declare-fun b!61001 () Bool)

(assert (=> b!61001 (= e!40094 (Some!128 (_2!1035 (h!2021 (toList!696 lt!24715)))))))

(declare-fun b!61003 () Bool)

(assert (=> b!61003 (= e!40095 (getValueByKey!123 (t!4808 (toList!696 lt!24715)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!61002 () Bool)

(assert (=> b!61002 (= e!40094 e!40095)))

(declare-fun c!7956 () Bool)

(assert (=> b!61002 (= c!7956 (and ((_ is Cons!1439) (toList!696 lt!24715)) (not (= (_1!1035 (h!2021 (toList!696 lt!24715))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))))

(assert (= (and d!11959 c!7955) b!61001))

(assert (= (and d!11959 (not c!7955)) b!61002))

(assert (= (and b!61002 c!7956) b!61003))

(assert (= (and b!61002 (not c!7956)) b!61004))

(assert (=> b!61003 m!52977))

(declare-fun m!53529 () Bool)

(assert (=> b!61003 m!53529))

(assert (=> b!60610 d!11959))

(assert (=> d!11889 d!11893))

(declare-fun d!11961 () Bool)

(assert (=> d!11961 (not (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!11961 true))

(declare-fun _$68!34 () Unit!1621)

(assert (=> d!11961 (= (choose!68 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441)) _$68!34)))

(declare-fun bs!2637 () Bool)

(assert (= bs!2637 d!11961))

(assert (=> bs!2637 m!52977))

(assert (=> bs!2637 m!52999))

(assert (=> d!11889 d!11961))

(declare-fun b!61014 () Bool)

(declare-fun res!33661 () Bool)

(declare-fun e!40098 () Bool)

(assert (=> b!61014 (=> (not res!33661) (not e!40098))))

(declare-fun size!2018 (LongMapFixedSize!628) (_ BitVec 32))

(assert (=> b!61014 (= res!33661 (bvsge (size!2018 newMap!16) (_size!363 newMap!16)))))

(declare-fun b!61013 () Bool)

(declare-fun res!33663 () Bool)

(assert (=> b!61013 (=> (not res!33663) (not e!40098))))

(assert (=> b!61013 (= res!33663 (and (= (size!2013 (_values!2049 newMap!16)) (bvadd (mask!5961 newMap!16) #b00000000000000000000000000000001)) (= (size!2012 (_keys!3693 newMap!16)) (size!2013 (_values!2049 newMap!16))) (bvsge (_size!363 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!363 newMap!16) (bvadd (mask!5961 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!61015 () Bool)

(declare-fun res!33662 () Bool)

(assert (=> b!61015 (=> (not res!33662) (not e!40098))))

(assert (=> b!61015 (= res!33662 (= (size!2018 newMap!16) (bvadd (_size!363 newMap!16) (bvsdiv (bvadd (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!11963 () Bool)

(declare-fun res!33660 () Bool)

(assert (=> d!11963 (=> (not res!33660) (not e!40098))))

(assert (=> d!11963 (= res!33660 (validMask!0 (mask!5961 newMap!16)))))

(assert (=> d!11963 (= (simpleValid!43 newMap!16) e!40098)))

(declare-fun b!61016 () Bool)

(assert (=> b!61016 (= e!40098 (and (bvsge (extraKeys!1949 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!1949 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!363 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!11963 res!33660) b!61013))

(assert (= (and b!61013 res!33663) b!61014))

(assert (= (and b!61014 res!33661) b!61015))

(assert (= (and b!61015 res!33662) b!61016))

(declare-fun m!53531 () Bool)

(assert (=> b!61014 m!53531))

(assert (=> b!61015 m!53531))

(assert (=> d!11963 m!53365))

(assert (=> d!11885 d!11963))

(assert (=> b!60778 d!11949))

(assert (=> b!60612 d!11957))

(assert (=> b!60612 d!11959))

(declare-fun b!61029 () Bool)

(declare-fun e!40106 () SeekEntryResult!231)

(declare-fun e!40105 () SeekEntryResult!231)

(assert (=> b!61029 (= e!40106 e!40105)))

(declare-fun lt!25129 () (_ BitVec 64))

(declare-fun lt!25127 () SeekEntryResult!231)

(assert (=> b!61029 (= lt!25129 (select (arr!1780 (_keys!3693 newMap!16)) (index!3050 lt!25127)))))

(declare-fun c!7963 () Bool)

(assert (=> b!61029 (= c!7963 (= lt!25129 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!61031 () Bool)

(declare-fun e!40107 () SeekEntryResult!231)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3723 (_ BitVec 32)) SeekEntryResult!231)

(assert (=> b!61031 (= e!40107 (seekKeyOrZeroReturnVacant!0 (x!10164 lt!25127) (index!3050 lt!25127) (index!3050 lt!25127) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun b!61032 () Bool)

(assert (=> b!61032 (= e!40105 (Found!231 (index!3050 lt!25127)))))

(declare-fun b!61033 () Bool)

(declare-fun c!7964 () Bool)

(assert (=> b!61033 (= c!7964 (= lt!25129 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61033 (= e!40105 e!40107)))

(declare-fun b!61034 () Bool)

(assert (=> b!61034 (= e!40107 (MissingZero!231 (index!3050 lt!25127)))))

(declare-fun d!11965 () Bool)

(declare-fun lt!25128 () SeekEntryResult!231)

(assert (=> d!11965 (and (or ((_ is Undefined!231) lt!25128) (not ((_ is Found!231) lt!25128)) (and (bvsge (index!3049 lt!25128) #b00000000000000000000000000000000) (bvslt (index!3049 lt!25128) (size!2012 (_keys!3693 newMap!16))))) (or ((_ is Undefined!231) lt!25128) ((_ is Found!231) lt!25128) (not ((_ is MissingZero!231) lt!25128)) (and (bvsge (index!3048 lt!25128) #b00000000000000000000000000000000) (bvslt (index!3048 lt!25128) (size!2012 (_keys!3693 newMap!16))))) (or ((_ is Undefined!231) lt!25128) ((_ is Found!231) lt!25128) ((_ is MissingZero!231) lt!25128) (not ((_ is MissingVacant!231) lt!25128)) (and (bvsge (index!3051 lt!25128) #b00000000000000000000000000000000) (bvslt (index!3051 lt!25128) (size!2012 (_keys!3693 newMap!16))))) (or ((_ is Undefined!231) lt!25128) (ite ((_ is Found!231) lt!25128) (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!25128)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (ite ((_ is MissingZero!231) lt!25128) (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3048 lt!25128)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!231) lt!25128) (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3051 lt!25128)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!11965 (= lt!25128 e!40106)))

(declare-fun c!7965 () Bool)

(assert (=> d!11965 (= c!7965 (and ((_ is Intermediate!231) lt!25127) (undefined!1043 lt!25127)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3723 (_ BitVec 32)) SeekEntryResult!231)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!11965 (= lt!25127 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (mask!5961 newMap!16)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(assert (=> d!11965 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!11965 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)) lt!25128)))

(declare-fun b!61030 () Bool)

(assert (=> b!61030 (= e!40106 Undefined!231)))

(assert (= (and d!11965 c!7965) b!61030))

(assert (= (and d!11965 (not c!7965)) b!61029))

(assert (= (and b!61029 c!7963) b!61032))

(assert (= (and b!61029 (not c!7963)) b!61033))

(assert (= (and b!61033 c!7964) b!61034))

(assert (= (and b!61033 (not c!7964)) b!61031))

(declare-fun m!53533 () Bool)

(assert (=> b!61029 m!53533))

(assert (=> b!61031 m!52977))

(declare-fun m!53535 () Bool)

(assert (=> b!61031 m!53535))

(declare-fun m!53537 () Bool)

(assert (=> d!11965 m!53537))

(declare-fun m!53539 () Bool)

(assert (=> d!11965 m!53539))

(assert (=> d!11965 m!52977))

(declare-fun m!53541 () Bool)

(assert (=> d!11965 m!53541))

(declare-fun m!53543 () Bool)

(assert (=> d!11965 m!53543))

(assert (=> d!11965 m!52977))

(assert (=> d!11965 m!53539))

(assert (=> d!11965 m!53365))

(declare-fun m!53545 () Bool)

(assert (=> d!11965 m!53545))

(assert (=> bm!4638 d!11965))

(declare-fun d!11967 () Bool)

(declare-fun e!40108 () Bool)

(assert (=> d!11967 e!40108))

(declare-fun res!33664 () Bool)

(assert (=> d!11967 (=> (not res!33664) (not e!40108))))

(declare-fun lt!25132 () ListLongMap!1361)

(assert (=> d!11967 (= res!33664 (contains!687 lt!25132 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!25130 () List!1443)

(assert (=> d!11967 (= lt!25132 (ListLongMap!1362 lt!25130))))

(declare-fun lt!25131 () Unit!1621)

(declare-fun lt!25133 () Unit!1621)

(assert (=> d!11967 (= lt!25131 lt!25133)))

(assert (=> d!11967 (= (getValueByKey!123 lt!25130 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!128 (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!11967 (= lt!25133 (lemmaContainsTupThenGetReturnValue!43 lt!25130 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!11967 (= lt!25130 (insertStrictlySorted!46 (toList!696 e!39924) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!11967 (= (+!82 e!39924 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!25132)))

(declare-fun b!61035 () Bool)

(declare-fun res!33665 () Bool)

(assert (=> b!61035 (=> (not res!33665) (not e!40108))))

(assert (=> b!61035 (= res!33665 (= (getValueByKey!123 (toList!696 lt!25132) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!128 (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!61036 () Bool)

(assert (=> b!61036 (= e!40108 (contains!689 (toList!696 lt!25132) (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!11967 res!33664) b!61035))

(assert (= (and b!61035 res!33665) b!61036))

(declare-fun m!53547 () Bool)

(assert (=> d!11967 m!53547))

(declare-fun m!53549 () Bool)

(assert (=> d!11967 m!53549))

(declare-fun m!53551 () Bool)

(assert (=> d!11967 m!53551))

(declare-fun m!53553 () Bool)

(assert (=> d!11967 m!53553))

(declare-fun m!53555 () Bool)

(assert (=> b!61035 m!53555))

(declare-fun m!53557 () Bool)

(assert (=> b!61036 m!53557))

(assert (=> bm!4630 d!11967))

(declare-fun b!61045 () Bool)

(declare-fun e!40115 () Bool)

(declare-fun e!40117 () Bool)

(assert (=> b!61045 (= e!40115 e!40117)))

(declare-fun lt!25141 () (_ BitVec 64))

(assert (=> b!61045 (= lt!25141 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25140 () Unit!1621)

(assert (=> b!61045 (= lt!25140 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3693 newMap!16) lt!25141 #b00000000000000000000000000000000))))

(assert (=> b!61045 (arrayContainsKey!0 (_keys!3693 newMap!16) lt!25141 #b00000000000000000000000000000000)))

(declare-fun lt!25142 () Unit!1621)

(assert (=> b!61045 (= lt!25142 lt!25140)))

(declare-fun res!33671 () Bool)

(assert (=> b!61045 (= res!33671 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) (_keys!3693 newMap!16) (mask!5961 newMap!16)) (Found!231 #b00000000000000000000000000000000)))))

(assert (=> b!61045 (=> (not res!33671) (not e!40117))))

(declare-fun bm!4685 () Bool)

(declare-fun call!4688 () Bool)

(assert (=> bm!4685 (= call!4688 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun b!61046 () Bool)

(assert (=> b!61046 (= e!40117 call!4688)))

(declare-fun b!61047 () Bool)

(assert (=> b!61047 (= e!40115 call!4688)))

(declare-fun d!11969 () Bool)

(declare-fun res!33670 () Bool)

(declare-fun e!40116 () Bool)

(assert (=> d!11969 (=> res!33670 e!40116)))

(assert (=> d!11969 (= res!33670 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!11969 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3693 newMap!16) (mask!5961 newMap!16)) e!40116)))

(declare-fun b!61048 () Bool)

(assert (=> b!61048 (= e!40116 e!40115)))

(declare-fun c!7968 () Bool)

(assert (=> b!61048 (= c!7968 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!11969 (not res!33670)) b!61048))

(assert (= (and b!61048 c!7968) b!61045))

(assert (= (and b!61048 (not c!7968)) b!61047))

(assert (= (and b!61045 res!33671) b!61046))

(assert (= (or b!61046 b!61047) bm!4685))

(assert (=> b!61045 m!53263))

(declare-fun m!53559 () Bool)

(assert (=> b!61045 m!53559))

(declare-fun m!53561 () Bool)

(assert (=> b!61045 m!53561))

(assert (=> b!61045 m!53263))

(declare-fun m!53563 () Bool)

(assert (=> b!61045 m!53563))

(declare-fun m!53565 () Bool)

(assert (=> bm!4685 m!53565))

(assert (=> b!61048 m!53263))

(assert (=> b!61048 m!53263))

(assert (=> b!61048 m!53265))

(assert (=> b!60752 d!11969))

(declare-fun d!11971 () Bool)

(declare-fun e!40118 () Bool)

(assert (=> d!11971 e!40118))

(declare-fun res!33672 () Bool)

(assert (=> d!11971 (=> (not res!33672) (not e!40118))))

(declare-fun lt!25145 () ListLongMap!1361)

(assert (=> d!11971 (= res!33672 (contains!687 lt!25145 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun lt!25143 () List!1443)

(assert (=> d!11971 (= lt!25145 (ListLongMap!1362 lt!25143))))

(declare-fun lt!25144 () Unit!1621)

(declare-fun lt!25146 () Unit!1621)

(assert (=> d!11971 (= lt!25144 lt!25146)))

(assert (=> d!11971 (= (getValueByKey!123 lt!25143 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) (Some!128 (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> d!11971 (= lt!25146 (lemmaContainsTupThenGetReturnValue!43 lt!25143 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> d!11971 (= lt!25143 (insertStrictlySorted!46 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572))) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> d!11971 (= (+!82 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572)) (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25145)))

(declare-fun b!61049 () Bool)

(declare-fun res!33673 () Bool)

(assert (=> b!61049 (=> (not res!33673) (not e!40118))))

(assert (=> b!61049 (= res!33673 (= (getValueByKey!123 (toList!696 lt!25145) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) (Some!128 (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun b!61050 () Bool)

(assert (=> b!61050 (= e!40118 (contains!689 (toList!696 lt!25145) (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (= (and d!11971 res!33672) b!61049))

(assert (= (and b!61049 res!33673) b!61050))

(declare-fun m!53567 () Bool)

(assert (=> d!11971 m!53567))

(declare-fun m!53569 () Bool)

(assert (=> d!11971 m!53569))

(declare-fun m!53571 () Bool)

(assert (=> d!11971 m!53571))

(declare-fun m!53573 () Bool)

(assert (=> d!11971 m!53573))

(declare-fun m!53575 () Bool)

(assert (=> b!61049 m!53575))

(declare-fun m!53577 () Bool)

(assert (=> b!61050 m!53577))

(assert (=> bm!4572 d!11971))

(declare-fun d!11973 () Bool)

(assert (=> d!11973 (= (map!1110 (_2!1034 lt!24902)) (getCurrentListMap!392 (_keys!3693 (_2!1034 lt!24902)) (_values!2049 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902)) (extraKeys!1949 (_2!1034 lt!24902)) (zeroValue!1980 (_2!1034 lt!24902)) (minValue!1980 (_2!1034 lt!24902)) #b00000000000000000000000000000000 (defaultEntry!2066 (_2!1034 lt!24902))))))

(declare-fun bs!2638 () Bool)

(assert (= bs!2638 d!11973))

(declare-fun m!53579 () Bool)

(assert (=> bs!2638 m!53579))

(assert (=> bm!4634 d!11973))

(declare-fun d!11975 () Bool)

(assert (=> d!11975 (= (get!1085 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!60744 d!11975))

(assert (=> b!60716 d!11965))

(declare-fun d!11977 () Bool)

(declare-fun e!40121 () Bool)

(assert (=> d!11977 e!40121))

(declare-fun res!33679 () Bool)

(assert (=> d!11977 (=> (not res!33679) (not e!40121))))

(declare-fun lt!25151 () SeekEntryResult!231)

(assert (=> d!11977 (= res!33679 ((_ is Found!231) lt!25151))))

(assert (=> d!11977 (= lt!25151 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun lt!25152 () Unit!1621)

(declare-fun choose!328 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 64) Int) Unit!1621)

(assert (=> d!11977 (= lt!25152 (choose!328 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (defaultEntry!2066 newMap!16)))))

(assert (=> d!11977 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!11977 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (defaultEntry!2066 newMap!16)) lt!25152)))

(declare-fun b!61055 () Bool)

(declare-fun res!33678 () Bool)

(assert (=> b!61055 (=> (not res!33678) (not e!40121))))

(assert (=> b!61055 (= res!33678 (inRange!0 (index!3049 lt!25151) (mask!5961 newMap!16)))))

(declare-fun b!61056 () Bool)

(assert (=> b!61056 (= e!40121 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!25151)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> b!61056 (and (bvsge (index!3049 lt!25151) #b00000000000000000000000000000000) (bvslt (index!3049 lt!25151) (size!2012 (_keys!3693 newMap!16))))))

(assert (= (and d!11977 res!33679) b!61055))

(assert (= (and b!61055 res!33678) b!61056))

(assert (=> d!11977 m!52977))

(assert (=> d!11977 m!53207))

(assert (=> d!11977 m!52977))

(declare-fun m!53581 () Bool)

(assert (=> d!11977 m!53581))

(assert (=> d!11977 m!53365))

(declare-fun m!53583 () Bool)

(assert (=> b!61055 m!53583))

(declare-fun m!53585 () Bool)

(assert (=> b!61056 m!53585))

(assert (=> bm!4629 d!11977))

(declare-fun bm!4686 () Bool)

(declare-fun call!4695 () ListLongMap!1361)

(declare-fun call!4694 () ListLongMap!1361)

(assert (=> bm!4686 (= call!4695 call!4694)))

(declare-fun b!61057 () Bool)

(declare-fun e!40127 () Unit!1621)

(declare-fun lt!25153 () Unit!1621)

(assert (=> b!61057 (= e!40127 lt!25153)))

(declare-fun lt!25160 () ListLongMap!1361)

(assert (=> b!61057 (= lt!25160 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite c!7887 (_values!2049 newMap!16) lt!24922) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25158 () (_ BitVec 64))

(assert (=> b!61057 (= lt!25158 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25154 () (_ BitVec 64))

(assert (=> b!61057 (= lt!25154 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25167 () Unit!1621)

(assert (=> b!61057 (= lt!25167 (addStillContains!43 lt!25160 lt!25158 (zeroValue!1980 newMap!16) lt!25154))))

(assert (=> b!61057 (contains!687 (+!82 lt!25160 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16))) lt!25154)))

(declare-fun lt!25173 () Unit!1621)

(assert (=> b!61057 (= lt!25173 lt!25167)))

(declare-fun lt!25164 () ListLongMap!1361)

(assert (=> b!61057 (= lt!25164 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite c!7887 (_values!2049 newMap!16) lt!24922) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25168 () (_ BitVec 64))

(assert (=> b!61057 (= lt!25168 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25171 () (_ BitVec 64))

(assert (=> b!61057 (= lt!25171 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25161 () Unit!1621)

(assert (=> b!61057 (= lt!25161 (addApplyDifferent!43 lt!25164 lt!25168 (minValue!1980 newMap!16) lt!25171))))

(assert (=> b!61057 (= (apply!67 (+!82 lt!25164 (tuple2!2049 lt!25168 (minValue!1980 newMap!16))) lt!25171) (apply!67 lt!25164 lt!25171))))

(declare-fun lt!25162 () Unit!1621)

(assert (=> b!61057 (= lt!25162 lt!25161)))

(declare-fun lt!25169 () ListLongMap!1361)

(assert (=> b!61057 (= lt!25169 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite c!7887 (_values!2049 newMap!16) lt!24922) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25159 () (_ BitVec 64))

(assert (=> b!61057 (= lt!25159 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25174 () (_ BitVec 64))

(assert (=> b!61057 (= lt!25174 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25157 () Unit!1621)

(assert (=> b!61057 (= lt!25157 (addApplyDifferent!43 lt!25169 lt!25159 (zeroValue!1980 newMap!16) lt!25174))))

(assert (=> b!61057 (= (apply!67 (+!82 lt!25169 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16))) lt!25174) (apply!67 lt!25169 lt!25174))))

(declare-fun lt!25156 () Unit!1621)

(assert (=> b!61057 (= lt!25156 lt!25157)))

(declare-fun lt!25172 () ListLongMap!1361)

(assert (=> b!61057 (= lt!25172 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite c!7887 (_values!2049 newMap!16) lt!24922) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25165 () (_ BitVec 64))

(assert (=> b!61057 (= lt!25165 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25163 () (_ BitVec 64))

(assert (=> b!61057 (= lt!25163 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!61057 (= lt!25153 (addApplyDifferent!43 lt!25172 lt!25165 (minValue!1980 newMap!16) lt!25163))))

(assert (=> b!61057 (= (apply!67 (+!82 lt!25172 (tuple2!2049 lt!25165 (minValue!1980 newMap!16))) lt!25163) (apply!67 lt!25172 lt!25163))))

(declare-fun b!61058 () Bool)

(declare-fun e!40130 () Bool)

(declare-fun lt!25170 () ListLongMap!1361)

(assert (=> b!61058 (= e!40130 (= (apply!67 lt!25170 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1980 newMap!16)))))

(declare-fun b!61059 () Bool)

(declare-fun e!40132 () Bool)

(declare-fun call!4692 () Bool)

(assert (=> b!61059 (= e!40132 (not call!4692))))

(declare-fun bm!4687 () Bool)

(assert (=> bm!4687 (= call!4694 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite c!7887 (_values!2049 newMap!16) lt!24922) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun b!61060 () Bool)

(declare-fun e!40134 () Bool)

(assert (=> b!61060 (= e!40134 (= (apply!67 lt!25170 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1980 newMap!16)))))

(declare-fun b!61061 () Bool)

(declare-fun e!40129 () ListLongMap!1361)

(declare-fun e!40128 () ListLongMap!1361)

(assert (=> b!61061 (= e!40129 e!40128)))

(declare-fun c!7973 () Bool)

(assert (=> b!61061 (= c!7973 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4688 () Bool)

(declare-fun call!4690 () ListLongMap!1361)

(assert (=> bm!4688 (= call!4690 call!4695)))

(declare-fun b!61062 () Bool)

(declare-fun res!33683 () Bool)

(declare-fun e!40123 () Bool)

(assert (=> b!61062 (=> (not res!33683) (not e!40123))))

(declare-fun e!40125 () Bool)

(assert (=> b!61062 (= res!33683 e!40125)))

(declare-fun res!33682 () Bool)

(assert (=> b!61062 (=> res!33682 e!40125)))

(declare-fun e!40131 () Bool)

(assert (=> b!61062 (= res!33682 (not e!40131))))

(declare-fun res!33688 () Bool)

(assert (=> b!61062 (=> (not res!33688) (not e!40131))))

(assert (=> b!61062 (= res!33688 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61063 () Bool)

(declare-fun e!40122 () Bool)

(assert (=> b!61063 (= e!40125 e!40122)))

(declare-fun res!33684 () Bool)

(assert (=> b!61063 (=> (not res!33684) (not e!40122))))

(assert (=> b!61063 (= res!33684 (contains!687 lt!25170 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61063 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun bm!4689 () Bool)

(assert (=> bm!4689 (= call!4692 (contains!687 lt!25170 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61064 () Bool)

(declare-fun res!33685 () Bool)

(assert (=> b!61064 (=> (not res!33685) (not e!40123))))

(declare-fun e!40133 () Bool)

(assert (=> b!61064 (= res!33685 e!40133)))

(declare-fun c!7974 () Bool)

(assert (=> b!61064 (= c!7974 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!61065 () Bool)

(assert (=> b!61065 (= e!40131 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun c!7971 () Bool)

(declare-fun call!4693 () ListLongMap!1361)

(declare-fun bm!4690 () Bool)

(assert (=> bm!4690 (= call!4693 (+!82 (ite c!7971 call!4694 (ite c!7973 call!4695 call!4690)) (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(declare-fun b!61066 () Bool)

(assert (=> b!61066 (= e!40123 e!40132)))

(declare-fun c!7972 () Bool)

(assert (=> b!61066 (= c!7972 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!61067 () Bool)

(declare-fun Unit!1641 () Unit!1621)

(assert (=> b!61067 (= e!40127 Unit!1641)))

(declare-fun b!61068 () Bool)

(declare-fun call!4691 () ListLongMap!1361)

(assert (=> b!61068 (= e!40128 call!4691)))

(declare-fun b!61069 () Bool)

(declare-fun e!40126 () ListLongMap!1361)

(assert (=> b!61069 (= e!40126 call!4690)))

(declare-fun b!61070 () Bool)

(assert (=> b!61070 (= e!40129 (+!82 call!4693 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))

(declare-fun b!61071 () Bool)

(declare-fun e!40124 () Bool)

(assert (=> b!61071 (= e!40124 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61072 () Bool)

(declare-fun c!7970 () Bool)

(assert (=> b!61072 (= c!7970 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!61072 (= e!40128 e!40126)))

(declare-fun b!61073 () Bool)

(assert (=> b!61073 (= e!40132 e!40134)))

(declare-fun res!33686 () Bool)

(assert (=> b!61073 (= res!33686 call!4692)))

(assert (=> b!61073 (=> (not res!33686) (not e!40134))))

(declare-fun d!11979 () Bool)

(assert (=> d!11979 e!40123))

(declare-fun res!33687 () Bool)

(assert (=> d!11979 (=> (not res!33687) (not e!40123))))

(assert (=> d!11979 (= res!33687 (or (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))))

(declare-fun lt!25155 () ListLongMap!1361)

(assert (=> d!11979 (= lt!25170 lt!25155)))

(declare-fun lt!25166 () Unit!1621)

(assert (=> d!11979 (= lt!25166 e!40127)))

(declare-fun c!7969 () Bool)

(assert (=> d!11979 (= c!7969 e!40124)))

(declare-fun res!33680 () Bool)

(assert (=> d!11979 (=> (not res!33680) (not e!40124))))

(assert (=> d!11979 (= res!33680 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!11979 (= lt!25155 e!40129)))

(assert (=> d!11979 (= c!7971 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11979 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!11979 (= (getCurrentListMap!392 (_keys!3693 newMap!16) (ite c!7887 (_values!2049 newMap!16) lt!24922) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25170)))

(declare-fun b!61074 () Bool)

(declare-fun call!4689 () Bool)

(assert (=> b!61074 (= e!40133 (not call!4689))))

(declare-fun b!61075 () Bool)

(assert (=> b!61075 (= e!40122 (= (apply!67 lt!25170 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (ite c!7887 (_values!2049 newMap!16) lt!24922)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!61075 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (ite c!7887 (_values!2049 newMap!16) lt!24922))))))

(assert (=> b!61075 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61076 () Bool)

(assert (=> b!61076 (= e!40126 call!4691)))

(declare-fun b!61077 () Bool)

(assert (=> b!61077 (= e!40133 e!40130)))

(declare-fun res!33681 () Bool)

(assert (=> b!61077 (= res!33681 call!4689)))

(assert (=> b!61077 (=> (not res!33681) (not e!40130))))

(declare-fun bm!4691 () Bool)

(assert (=> bm!4691 (= call!4689 (contains!687 lt!25170 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4692 () Bool)

(assert (=> bm!4692 (= call!4691 call!4693)))

(assert (= (and d!11979 c!7971) b!61070))

(assert (= (and d!11979 (not c!7971)) b!61061))

(assert (= (and b!61061 c!7973) b!61068))

(assert (= (and b!61061 (not c!7973)) b!61072))

(assert (= (and b!61072 c!7970) b!61076))

(assert (= (and b!61072 (not c!7970)) b!61069))

(assert (= (or b!61076 b!61069) bm!4688))

(assert (= (or b!61068 bm!4688) bm!4686))

(assert (= (or b!61068 b!61076) bm!4692))

(assert (= (or b!61070 bm!4686) bm!4687))

(assert (= (or b!61070 bm!4692) bm!4690))

(assert (= (and d!11979 res!33680) b!61071))

(assert (= (and d!11979 c!7969) b!61057))

(assert (= (and d!11979 (not c!7969)) b!61067))

(assert (= (and d!11979 res!33687) b!61062))

(assert (= (and b!61062 res!33688) b!61065))

(assert (= (and b!61062 (not res!33682)) b!61063))

(assert (= (and b!61063 res!33684) b!61075))

(assert (= (and b!61062 res!33683) b!61064))

(assert (= (and b!61064 c!7974) b!61077))

(assert (= (and b!61064 (not c!7974)) b!61074))

(assert (= (and b!61077 res!33681) b!61058))

(assert (= (or b!61077 b!61074) bm!4691))

(assert (= (and b!61064 res!33685) b!61066))

(assert (= (and b!61066 c!7972) b!61073))

(assert (= (and b!61066 (not c!7972)) b!61059))

(assert (= (and b!61073 res!33686) b!61060))

(assert (= (or b!61073 b!61059) bm!4689))

(declare-fun b_lambda!2693 () Bool)

(assert (=> (not b_lambda!2693) (not b!61075)))

(assert (=> b!61075 t!4820))

(declare-fun b_and!3713 () Bool)

(assert (= b_and!3709 (and (=> t!4820 result!2427) b_and!3713)))

(assert (=> b!61075 t!4822))

(declare-fun b_and!3715 () Bool)

(assert (= b_and!3711 (and (=> t!4822 result!2429) b_and!3715)))

(assert (=> b!61065 m!53263))

(assert (=> b!61065 m!53263))

(assert (=> b!61065 m!53265))

(declare-fun m!53587 () Bool)

(assert (=> b!61075 m!53587))

(assert (=> b!61075 m!53391))

(declare-fun m!53589 () Bool)

(assert (=> b!61075 m!53589))

(assert (=> b!61075 m!53587))

(assert (=> b!61075 m!53263))

(declare-fun m!53591 () Bool)

(assert (=> b!61075 m!53591))

(assert (=> b!61075 m!53263))

(assert (=> b!61075 m!53391))

(declare-fun m!53593 () Bool)

(assert (=> b!61057 m!53593))

(declare-fun m!53595 () Bool)

(assert (=> b!61057 m!53595))

(declare-fun m!53597 () Bool)

(assert (=> b!61057 m!53597))

(declare-fun m!53599 () Bool)

(assert (=> b!61057 m!53599))

(declare-fun m!53601 () Bool)

(assert (=> b!61057 m!53601))

(declare-fun m!53603 () Bool)

(assert (=> b!61057 m!53603))

(assert (=> b!61057 m!53599))

(declare-fun m!53605 () Bool)

(assert (=> b!61057 m!53605))

(declare-fun m!53607 () Bool)

(assert (=> b!61057 m!53607))

(declare-fun m!53609 () Bool)

(assert (=> b!61057 m!53609))

(declare-fun m!53611 () Bool)

(assert (=> b!61057 m!53611))

(assert (=> b!61057 m!53263))

(assert (=> b!61057 m!53601))

(assert (=> b!61057 m!53595))

(declare-fun m!53613 () Bool)

(assert (=> b!61057 m!53613))

(declare-fun m!53615 () Bool)

(assert (=> b!61057 m!53615))

(declare-fun m!53617 () Bool)

(assert (=> b!61057 m!53617))

(assert (=> b!61057 m!53615))

(declare-fun m!53619 () Bool)

(assert (=> b!61057 m!53619))

(declare-fun m!53621 () Bool)

(assert (=> b!61057 m!53621))

(declare-fun m!53623 () Bool)

(assert (=> b!61057 m!53623))

(declare-fun m!53625 () Bool)

(assert (=> b!61060 m!53625))

(assert (=> bm!4687 m!53597))

(declare-fun m!53627 () Bool)

(assert (=> bm!4691 m!53627))

(assert (=> b!61071 m!53263))

(assert (=> b!61071 m!53263))

(assert (=> b!61071 m!53265))

(declare-fun m!53629 () Bool)

(assert (=> b!61070 m!53629))

(declare-fun m!53631 () Bool)

(assert (=> b!61058 m!53631))

(assert (=> d!11979 m!53365))

(declare-fun m!53633 () Bool)

(assert (=> bm!4689 m!53633))

(assert (=> b!61063 m!53263))

(assert (=> b!61063 m!53263))

(declare-fun m!53635 () Bool)

(assert (=> b!61063 m!53635))

(declare-fun m!53637 () Bool)

(assert (=> bm!4690 m!53637))

(assert (=> bm!4642 d!11979))

(assert (=> b!60699 d!11929))

(declare-fun bm!4693 () Bool)

(declare-fun call!4702 () ListLongMap!1361)

(declare-fun call!4701 () ListLongMap!1361)

(assert (=> bm!4693 (= call!4702 call!4701)))

(declare-fun b!61078 () Bool)

(declare-fun e!40140 () Unit!1621)

(declare-fun lt!25175 () Unit!1621)

(assert (=> b!61078 (= e!40140 lt!25175)))

(declare-fun lt!25182 () ListLongMap!1361)

(assert (=> b!61078 (= lt!25182 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) (mask!5961 newMap!16) (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25180 () (_ BitVec 64))

(assert (=> b!61078 (= lt!25180 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25176 () (_ BitVec 64))

(assert (=> b!61078 (= lt!25176 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25189 () Unit!1621)

(assert (=> b!61078 (= lt!25189 (addStillContains!43 lt!25182 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) lt!25176))))

(assert (=> b!61078 (contains!687 (+!82 lt!25182 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) lt!25176)))

(declare-fun lt!25195 () Unit!1621)

(assert (=> b!61078 (= lt!25195 lt!25189)))

(declare-fun lt!25186 () ListLongMap!1361)

(assert (=> b!61078 (= lt!25186 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) (mask!5961 newMap!16) (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25190 () (_ BitVec 64))

(assert (=> b!61078 (= lt!25190 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25193 () (_ BitVec 64))

(assert (=> b!61078 (= lt!25193 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25183 () Unit!1621)

(assert (=> b!61078 (= lt!25183 (addApplyDifferent!43 lt!25186 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) lt!25193))))

(assert (=> b!61078 (= (apply!67 (+!82 lt!25186 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) lt!25193) (apply!67 lt!25186 lt!25193))))

(declare-fun lt!25184 () Unit!1621)

(assert (=> b!61078 (= lt!25184 lt!25183)))

(declare-fun lt!25191 () ListLongMap!1361)

(assert (=> b!61078 (= lt!25191 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) (mask!5961 newMap!16) (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25181 () (_ BitVec 64))

(assert (=> b!61078 (= lt!25181 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25196 () (_ BitVec 64))

(assert (=> b!61078 (= lt!25196 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25179 () Unit!1621)

(assert (=> b!61078 (= lt!25179 (addApplyDifferent!43 lt!25191 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) lt!25196))))

(assert (=> b!61078 (= (apply!67 (+!82 lt!25191 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) lt!25196) (apply!67 lt!25191 lt!25196))))

(declare-fun lt!25178 () Unit!1621)

(assert (=> b!61078 (= lt!25178 lt!25179)))

(declare-fun lt!25194 () ListLongMap!1361)

(assert (=> b!61078 (= lt!25194 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) (mask!5961 newMap!16) (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25187 () (_ BitVec 64))

(assert (=> b!61078 (= lt!25187 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25185 () (_ BitVec 64))

(assert (=> b!61078 (= lt!25185 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!61078 (= lt!25175 (addApplyDifferent!43 lt!25194 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) lt!25185))))

(assert (=> b!61078 (= (apply!67 (+!82 lt!25194 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) lt!25185) (apply!67 lt!25194 lt!25185))))

(declare-fun e!40143 () Bool)

(declare-fun b!61079 () Bool)

(declare-fun lt!25192 () ListLongMap!1361)

(assert (=> b!61079 (= e!40143 (= (apply!67 lt!25192 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))))

(declare-fun b!61080 () Bool)

(declare-fun e!40145 () Bool)

(declare-fun call!4699 () Bool)

(assert (=> b!61080 (= e!40145 (not call!4699))))

(declare-fun bm!4694 () Bool)

(assert (=> bm!4694 (= call!4701 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) (mask!5961 newMap!16) (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun e!40147 () Bool)

(declare-fun b!61081 () Bool)

(assert (=> b!61081 (= e!40147 (= (apply!67 lt!25192 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))

(declare-fun b!61082 () Bool)

(declare-fun e!40142 () ListLongMap!1361)

(declare-fun e!40141 () ListLongMap!1361)

(assert (=> b!61082 (= e!40142 e!40141)))

(declare-fun c!7979 () Bool)

(assert (=> b!61082 (= c!7979 (and (not (= (bvand (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4695 () Bool)

(declare-fun call!4697 () ListLongMap!1361)

(assert (=> bm!4695 (= call!4697 call!4702)))

(declare-fun b!61083 () Bool)

(declare-fun res!33692 () Bool)

(declare-fun e!40136 () Bool)

(assert (=> b!61083 (=> (not res!33692) (not e!40136))))

(declare-fun e!40138 () Bool)

(assert (=> b!61083 (= res!33692 e!40138)))

(declare-fun res!33691 () Bool)

(assert (=> b!61083 (=> res!33691 e!40138)))

(declare-fun e!40144 () Bool)

(assert (=> b!61083 (= res!33691 (not e!40144))))

(declare-fun res!33697 () Bool)

(assert (=> b!61083 (=> (not res!33697) (not e!40144))))

(assert (=> b!61083 (= res!33697 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61084 () Bool)

(declare-fun e!40135 () Bool)

(assert (=> b!61084 (= e!40138 e!40135)))

(declare-fun res!33693 () Bool)

(assert (=> b!61084 (=> (not res!33693) (not e!40135))))

(assert (=> b!61084 (= res!33693 (contains!687 lt!25192 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61084 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun bm!4696 () Bool)

(assert (=> bm!4696 (= call!4699 (contains!687 lt!25192 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61085 () Bool)

(declare-fun res!33694 () Bool)

(assert (=> b!61085 (=> (not res!33694) (not e!40136))))

(declare-fun e!40146 () Bool)

(assert (=> b!61085 (= res!33694 e!40146)))

(declare-fun c!7980 () Bool)

(assert (=> b!61085 (= c!7980 (not (= (bvand (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!61086 () Bool)

(assert (=> b!61086 (= e!40144 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun call!4700 () ListLongMap!1361)

(declare-fun c!7977 () Bool)

(declare-fun bm!4697 () Bool)

(assert (=> bm!4697 (= call!4700 (+!82 (ite c!7977 call!4701 (ite c!7979 call!4702 call!4697)) (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(declare-fun b!61087 () Bool)

(assert (=> b!61087 (= e!40136 e!40145)))

(declare-fun c!7978 () Bool)

(assert (=> b!61087 (= c!7978 (not (= (bvand (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!61088 () Bool)

(declare-fun Unit!1642 () Unit!1621)

(assert (=> b!61088 (= e!40140 Unit!1642)))

(declare-fun b!61089 () Bool)

(declare-fun call!4698 () ListLongMap!1361)

(assert (=> b!61089 (= e!40141 call!4698)))

(declare-fun b!61090 () Bool)

(declare-fun e!40139 () ListLongMap!1361)

(assert (=> b!61090 (= e!40139 call!4697)))

(declare-fun b!61091 () Bool)

(assert (=> b!61091 (= e!40142 (+!82 call!4700 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))

(declare-fun b!61092 () Bool)

(declare-fun e!40137 () Bool)

(assert (=> b!61092 (= e!40137 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61093 () Bool)

(declare-fun c!7976 () Bool)

(assert (=> b!61093 (= c!7976 (and (not (= (bvand (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!61093 (= e!40141 e!40139)))

(declare-fun b!61094 () Bool)

(assert (=> b!61094 (= e!40145 e!40147)))

(declare-fun res!33695 () Bool)

(assert (=> b!61094 (= res!33695 call!4699)))

(assert (=> b!61094 (=> (not res!33695) (not e!40147))))

(declare-fun d!11981 () Bool)

(assert (=> d!11981 e!40136))

(declare-fun res!33696 () Bool)

(assert (=> d!11981 (=> (not res!33696) (not e!40136))))

(assert (=> d!11981 (= res!33696 (or (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))))

(declare-fun lt!25177 () ListLongMap!1361)

(assert (=> d!11981 (= lt!25192 lt!25177)))

(declare-fun lt!25188 () Unit!1621)

(assert (=> d!11981 (= lt!25188 e!40140)))

(declare-fun c!7975 () Bool)

(assert (=> d!11981 (= c!7975 e!40137)))

(declare-fun res!33689 () Bool)

(assert (=> d!11981 (=> (not res!33689) (not e!40137))))

(assert (=> d!11981 (= res!33689 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!11981 (= lt!25177 e!40142)))

(assert (=> d!11981 (= c!7977 (and (not (= (bvand (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!11981 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!11981 (= (getCurrentListMap!392 (_keys!3693 newMap!16) (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) (mask!5961 newMap!16) (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25192)))

(declare-fun b!61095 () Bool)

(declare-fun call!4696 () Bool)

(assert (=> b!61095 (= e!40146 (not call!4696))))

(declare-fun b!61096 () Bool)

(assert (=> b!61096 (= e!40135 (= (apply!67 lt!25192 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!61096 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))))))))

(assert (=> b!61096 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61097 () Bool)

(assert (=> b!61097 (= e!40139 call!4698)))

(declare-fun b!61098 () Bool)

(assert (=> b!61098 (= e!40146 e!40143)))

(declare-fun res!33690 () Bool)

(assert (=> b!61098 (= res!33690 call!4696)))

(assert (=> b!61098 (=> (not res!33690) (not e!40143))))

(declare-fun bm!4698 () Bool)

(assert (=> bm!4698 (= call!4696 (contains!687 lt!25192 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4699 () Bool)

(assert (=> bm!4699 (= call!4698 call!4700)))

(assert (= (and d!11981 c!7977) b!61091))

(assert (= (and d!11981 (not c!7977)) b!61082))

(assert (= (and b!61082 c!7979) b!61089))

(assert (= (and b!61082 (not c!7979)) b!61093))

(assert (= (and b!61093 c!7976) b!61097))

(assert (= (and b!61093 (not c!7976)) b!61090))

(assert (= (or b!61097 b!61090) bm!4695))

(assert (= (or b!61089 bm!4695) bm!4693))

(assert (= (or b!61089 b!61097) bm!4699))

(assert (= (or b!61091 bm!4693) bm!4694))

(assert (= (or b!61091 bm!4699) bm!4697))

(assert (= (and d!11981 res!33689) b!61092))

(assert (= (and d!11981 c!7975) b!61078))

(assert (= (and d!11981 (not c!7975)) b!61088))

(assert (= (and d!11981 res!33696) b!61083))

(assert (= (and b!61083 res!33697) b!61086))

(assert (= (and b!61083 (not res!33691)) b!61084))

(assert (= (and b!61084 res!33693) b!61096))

(assert (= (and b!61083 res!33692) b!61085))

(assert (= (and b!61085 c!7980) b!61098))

(assert (= (and b!61085 (not c!7980)) b!61095))

(assert (= (and b!61098 res!33690) b!61079))

(assert (= (or b!61098 b!61095) bm!4698))

(assert (= (and b!61085 res!33694) b!61087))

(assert (= (and b!61087 c!7978) b!61094))

(assert (= (and b!61087 (not c!7978)) b!61080))

(assert (= (and b!61094 res!33695) b!61081))

(assert (= (or b!61094 b!61080) bm!4696))

(declare-fun b_lambda!2695 () Bool)

(assert (=> (not b_lambda!2695) (not b!61096)))

(assert (=> b!61096 t!4820))

(declare-fun b_and!3717 () Bool)

(assert (= b_and!3713 (and (=> t!4820 result!2427) b_and!3717)))

(assert (=> b!61096 t!4822))

(declare-fun b_and!3719 () Bool)

(assert (= b_and!3715 (and (=> t!4822 result!2429) b_and!3719)))

(assert (=> b!61086 m!53263))

(assert (=> b!61086 m!53263))

(assert (=> b!61086 m!53265))

(declare-fun m!53639 () Bool)

(assert (=> b!61096 m!53639))

(assert (=> b!61096 m!53391))

(declare-fun m!53641 () Bool)

(assert (=> b!61096 m!53641))

(assert (=> b!61096 m!53639))

(assert (=> b!61096 m!53263))

(declare-fun m!53643 () Bool)

(assert (=> b!61096 m!53643))

(assert (=> b!61096 m!53263))

(assert (=> b!61096 m!53391))

(declare-fun m!53645 () Bool)

(assert (=> b!61078 m!53645))

(declare-fun m!53647 () Bool)

(assert (=> b!61078 m!53647))

(declare-fun m!53649 () Bool)

(assert (=> b!61078 m!53649))

(declare-fun m!53651 () Bool)

(assert (=> b!61078 m!53651))

(declare-fun m!53653 () Bool)

(assert (=> b!61078 m!53653))

(declare-fun m!53655 () Bool)

(assert (=> b!61078 m!53655))

(assert (=> b!61078 m!53651))

(declare-fun m!53657 () Bool)

(assert (=> b!61078 m!53657))

(declare-fun m!53659 () Bool)

(assert (=> b!61078 m!53659))

(declare-fun m!53661 () Bool)

(assert (=> b!61078 m!53661))

(declare-fun m!53663 () Bool)

(assert (=> b!61078 m!53663))

(assert (=> b!61078 m!53263))

(assert (=> b!61078 m!53653))

(assert (=> b!61078 m!53647))

(declare-fun m!53665 () Bool)

(assert (=> b!61078 m!53665))

(declare-fun m!53667 () Bool)

(assert (=> b!61078 m!53667))

(declare-fun m!53669 () Bool)

(assert (=> b!61078 m!53669))

(assert (=> b!61078 m!53667))

(declare-fun m!53671 () Bool)

(assert (=> b!61078 m!53671))

(declare-fun m!53673 () Bool)

(assert (=> b!61078 m!53673))

(declare-fun m!53675 () Bool)

(assert (=> b!61078 m!53675))

(declare-fun m!53677 () Bool)

(assert (=> b!61081 m!53677))

(assert (=> bm!4694 m!53649))

(declare-fun m!53679 () Bool)

(assert (=> bm!4698 m!53679))

(assert (=> b!61092 m!53263))

(assert (=> b!61092 m!53263))

(assert (=> b!61092 m!53265))

(declare-fun m!53681 () Bool)

(assert (=> b!61091 m!53681))

(declare-fun m!53683 () Bool)

(assert (=> b!61079 m!53683))

(assert (=> d!11981 m!53365))

(declare-fun m!53685 () Bool)

(assert (=> bm!4696 m!53685))

(assert (=> b!61084 m!53263))

(assert (=> b!61084 m!53263))

(declare-fun m!53687 () Bool)

(assert (=> b!61084 m!53687))

(declare-fun m!53689 () Bool)

(assert (=> bm!4697 m!53689))

(assert (=> bm!4640 d!11981))

(declare-fun d!11983 () Bool)

(assert (=> d!11983 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24912 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25199 () Unit!1621)

(declare-fun choose!329 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 V!2857 Int) Unit!1621)

(assert (=> d!11983 (= lt!25199 (choose!329 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) lt!24912 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) (defaultEntry!2066 newMap!16)))))

(assert (=> d!11983 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!11983 (= (lemmaChangeZeroKeyThenAddPairToListMap!16 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) lt!24912 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) (defaultEntry!2066 newMap!16)) lt!25199)))

(declare-fun bs!2639 () Bool)

(assert (= bs!2639 d!11983))

(assert (=> bs!2639 m!53365))

(assert (=> bs!2639 m!52987))

(declare-fun m!53691 () Bool)

(assert (=> bs!2639 m!53691))

(assert (=> bs!2639 m!52987))

(declare-fun m!53693 () Bool)

(assert (=> bs!2639 m!53693))

(assert (=> bs!2639 m!53109))

(declare-fun m!53695 () Bool)

(assert (=> bs!2639 m!53695))

(assert (=> bs!2639 m!53109))

(assert (=> b!60730 d!11983))

(declare-fun d!11985 () Bool)

(declare-fun res!33698 () Bool)

(declare-fun e!40148 () Bool)

(assert (=> d!11985 (=> (not res!33698) (not e!40148))))

(assert (=> d!11985 (= res!33698 (simpleValid!43 (v!2397 (underlying!227 thiss!992))))))

(assert (=> d!11985 (= (valid!263 (v!2397 (underlying!227 thiss!992))) e!40148)))

(declare-fun b!61099 () Bool)

(declare-fun res!33699 () Bool)

(assert (=> b!61099 (=> (not res!33699) (not e!40148))))

(assert (=> b!61099 (= res!33699 (= (arrayCountValidKeys!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000 (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))) (_size!363 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!61100 () Bool)

(declare-fun res!33700 () Bool)

(assert (=> b!61100 (=> (not res!33700) (not e!40148))))

(assert (=> b!61100 (= res!33700 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!61101 () Bool)

(assert (=> b!61101 (= e!40148 (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000 Nil!1441))))

(assert (= (and d!11985 res!33698) b!61099))

(assert (= (and b!61099 res!33699) b!61100))

(assert (= (and b!61100 res!33700) b!61101))

(declare-fun m!53697 () Bool)

(assert (=> d!11985 m!53697))

(declare-fun m!53699 () Bool)

(assert (=> b!61099 m!53699))

(declare-fun m!53701 () Bool)

(assert (=> b!61100 m!53701))

(declare-fun m!53703 () Bool)

(assert (=> b!61101 m!53703))

(assert (=> d!11887 d!11985))

(declare-fun d!11987 () Bool)

(declare-fun e!40150 () Bool)

(assert (=> d!11987 e!40150))

(declare-fun res!33701 () Bool)

(assert (=> d!11987 (=> res!33701 e!40150)))

(declare-fun lt!25203 () Bool)

(assert (=> d!11987 (= res!33701 (not lt!25203))))

(declare-fun lt!25201 () Bool)

(assert (=> d!11987 (= lt!25203 lt!25201)))

(declare-fun lt!25200 () Unit!1621)

(declare-fun e!40149 () Unit!1621)

(assert (=> d!11987 (= lt!25200 e!40149)))

(declare-fun c!7981 () Bool)

(assert (=> d!11987 (= c!7981 lt!25201)))

(assert (=> d!11987 (= lt!25201 (containsKey!127 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!11987 (= (contains!687 lt!24825 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!25203)))

(declare-fun b!61102 () Bool)

(declare-fun lt!25202 () Unit!1621)

(assert (=> b!61102 (= e!40149 lt!25202)))

(assert (=> b!61102 (= lt!25202 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!61102 (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!61103 () Bool)

(declare-fun Unit!1643 () Unit!1621)

(assert (=> b!61103 (= e!40149 Unit!1643)))

(declare-fun b!61104 () Bool)

(assert (=> b!61104 (= e!40150 (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!11987 c!7981) b!61102))

(assert (= (and d!11987 (not c!7981)) b!61103))

(assert (= (and d!11987 (not res!33701)) b!61104))

(assert (=> d!11987 m!53111))

(declare-fun m!53705 () Bool)

(assert (=> d!11987 m!53705))

(assert (=> b!61102 m!53111))

(declare-fun m!53707 () Bool)

(assert (=> b!61102 m!53707))

(assert (=> b!61102 m!53111))

(assert (=> b!61102 m!53483))

(assert (=> b!61102 m!53483))

(declare-fun m!53709 () Bool)

(assert (=> b!61102 m!53709))

(assert (=> b!61104 m!53111))

(assert (=> b!61104 m!53483))

(assert (=> b!61104 m!53483))

(assert (=> b!61104 m!53709))

(assert (=> b!60589 d!11987))

(declare-fun d!11989 () Bool)

(declare-fun res!33702 () Bool)

(declare-fun e!40151 () Bool)

(assert (=> d!11989 (=> res!33702 e!40151)))

(assert (=> d!11989 (= res!33702 (= (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!11989 (= (arrayContainsKey!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000) e!40151)))

(declare-fun b!61105 () Bool)

(declare-fun e!40152 () Bool)

(assert (=> b!61105 (= e!40151 e!40152)))

(declare-fun res!33703 () Bool)

(assert (=> b!61105 (=> (not res!33703) (not e!40152))))

(assert (=> b!61105 (= res!33703 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61106 () Bool)

(assert (=> b!61106 (= e!40152 (arrayContainsKey!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!11989 (not res!33702)) b!61105))

(assert (= (and b!61105 res!33703) b!61106))

(assert (=> d!11989 m!53263))

(assert (=> b!61106 m!52977))

(declare-fun m!53711 () Bool)

(assert (=> b!61106 m!53711))

(assert (=> bm!4626 d!11989))

(declare-fun d!11991 () Bool)

(assert (=> d!11991 (= (apply!67 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24826) (apply!67 lt!24819 lt!24826))))

(declare-fun lt!25206 () Unit!1621)

(declare-fun choose!330 (ListLongMap!1361 (_ BitVec 64) V!2857 (_ BitVec 64)) Unit!1621)

(assert (=> d!11991 (= lt!25206 (choose!330 lt!24819 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24826))))

(declare-fun e!40155 () Bool)

(assert (=> d!11991 e!40155))

(declare-fun res!33706 () Bool)

(assert (=> d!11991 (=> (not res!33706) (not e!40155))))

(assert (=> d!11991 (= res!33706 (contains!687 lt!24819 lt!24826))))

(assert (=> d!11991 (= (addApplyDifferent!43 lt!24819 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24826) lt!25206)))

(declare-fun b!61110 () Bool)

(assert (=> b!61110 (= e!40155 (not (= lt!24826 lt!24823)))))

(assert (= (and d!11991 res!33706) b!61110))

(assert (=> d!11991 m!53143))

(assert (=> d!11991 m!53135))

(declare-fun m!53713 () Bool)

(assert (=> d!11991 m!53713))

(assert (=> d!11991 m!53143))

(assert (=> d!11991 m!53147))

(declare-fun m!53715 () Bool)

(assert (=> d!11991 m!53715))

(assert (=> b!60583 d!11991))

(declare-fun d!11993 () Bool)

(assert (=> d!11993 (= (apply!67 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24826) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24826)))))

(declare-fun bs!2640 () Bool)

(assert (= bs!2640 d!11993))

(declare-fun m!53717 () Bool)

(assert (=> bs!2640 m!53717))

(assert (=> bs!2640 m!53717))

(declare-fun m!53719 () Bool)

(assert (=> bs!2640 m!53719))

(assert (=> b!60583 d!11993))

(assert (=> b!60583 d!11951))

(declare-fun d!11995 () Bool)

(assert (=> d!11995 (= (apply!67 lt!24824 lt!24829) (get!1086 (getValueByKey!123 (toList!696 lt!24824) lt!24829)))))

(declare-fun bs!2641 () Bool)

(assert (= bs!2641 d!11995))

(declare-fun m!53721 () Bool)

(assert (=> bs!2641 m!53721))

(assert (=> bs!2641 m!53721))

(declare-fun m!53723 () Bool)

(assert (=> bs!2641 m!53723))

(assert (=> b!60583 d!11995))

(declare-fun d!11997 () Bool)

(declare-fun e!40156 () Bool)

(assert (=> d!11997 e!40156))

(declare-fun res!33707 () Bool)

(assert (=> d!11997 (=> (not res!33707) (not e!40156))))

(declare-fun lt!25209 () ListLongMap!1361)

(assert (=> d!11997 (= res!33707 (contains!687 lt!25209 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lt!25207 () List!1443)

(assert (=> d!11997 (= lt!25209 (ListLongMap!1362 lt!25207))))

(declare-fun lt!25208 () Unit!1621)

(declare-fun lt!25210 () Unit!1621)

(assert (=> d!11997 (= lt!25208 lt!25210)))

(assert (=> d!11997 (= (getValueByKey!123 lt!25207 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!11997 (= lt!25210 (lemmaContainsTupThenGetReturnValue!43 lt!25207 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!11997 (= lt!25207 (insertStrictlySorted!46 (toList!696 lt!24819) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!11997 (= (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!25209)))

(declare-fun b!61111 () Bool)

(declare-fun res!33708 () Bool)

(assert (=> b!61111 (=> (not res!33708) (not e!40156))))

(assert (=> b!61111 (= res!33708 (= (getValueByKey!123 (toList!696 lt!25209) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61112 () Bool)

(assert (=> b!61112 (= e!40156 (contains!689 (toList!696 lt!25209) (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(assert (= (and d!11997 res!33707) b!61111))

(assert (= (and b!61111 res!33708) b!61112))

(declare-fun m!53725 () Bool)

(assert (=> d!11997 m!53725))

(declare-fun m!53727 () Bool)

(assert (=> d!11997 m!53727))

(declare-fun m!53729 () Bool)

(assert (=> d!11997 m!53729))

(declare-fun m!53731 () Bool)

(assert (=> d!11997 m!53731))

(declare-fun m!53733 () Bool)

(assert (=> b!61111 m!53733))

(declare-fun m!53735 () Bool)

(assert (=> b!61112 m!53735))

(assert (=> b!60583 d!11997))

(declare-fun d!11999 () Bool)

(assert (=> d!11999 (= (apply!67 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24829) (apply!67 lt!24824 lt!24829))))

(declare-fun lt!25211 () Unit!1621)

(assert (=> d!11999 (= lt!25211 (choose!330 lt!24824 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24829))))

(declare-fun e!40157 () Bool)

(assert (=> d!11999 e!40157))

(declare-fun res!33709 () Bool)

(assert (=> d!11999 (=> (not res!33709) (not e!40157))))

(assert (=> d!11999 (= res!33709 (contains!687 lt!24824 lt!24829))))

(assert (=> d!11999 (= (addApplyDifferent!43 lt!24824 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24829) lt!25211)))

(declare-fun b!61113 () Bool)

(assert (=> b!61113 (= e!40157 (not (= lt!24829 lt!24814)))))

(assert (= (and d!11999 res!33709) b!61113))

(assert (=> d!11999 m!53127))

(assert (=> d!11999 m!53145))

(declare-fun m!53737 () Bool)

(assert (=> d!11999 m!53737))

(assert (=> d!11999 m!53127))

(assert (=> d!11999 m!53133))

(declare-fun m!53739 () Bool)

(assert (=> d!11999 m!53739))

(assert (=> b!60583 d!11999))

(declare-fun d!12001 () Bool)

(assert (=> d!12001 (= (apply!67 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24818) (apply!67 lt!24827 lt!24818))))

(declare-fun lt!25212 () Unit!1621)

(assert (=> d!12001 (= lt!25212 (choose!330 lt!24827 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24818))))

(declare-fun e!40158 () Bool)

(assert (=> d!12001 e!40158))

(declare-fun res!33710 () Bool)

(assert (=> d!12001 (=> (not res!33710) (not e!40158))))

(assert (=> d!12001 (= res!33710 (contains!687 lt!24827 lt!24818))))

(assert (=> d!12001 (= (addApplyDifferent!43 lt!24827 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24818) lt!25212)))

(declare-fun b!61114 () Bool)

(assert (=> b!61114 (= e!40158 (not (= lt!24818 lt!24820)))))

(assert (= (and d!12001 res!33710) b!61114))

(assert (=> d!12001 m!53123))

(assert (=> d!12001 m!53149))

(declare-fun m!53741 () Bool)

(assert (=> d!12001 m!53741))

(assert (=> d!12001 m!53123))

(assert (=> d!12001 m!53141))

(declare-fun m!53743 () Bool)

(assert (=> d!12001 m!53743))

(assert (=> b!60583 d!12001))

(declare-fun d!12003 () Bool)

(declare-fun e!40159 () Bool)

(assert (=> d!12003 e!40159))

(declare-fun res!33711 () Bool)

(assert (=> d!12003 (=> (not res!33711) (not e!40159))))

(declare-fun lt!25215 () ListLongMap!1361)

(assert (=> d!12003 (= res!33711 (contains!687 lt!25215 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lt!25213 () List!1443)

(assert (=> d!12003 (= lt!25215 (ListLongMap!1362 lt!25213))))

(declare-fun lt!25214 () Unit!1621)

(declare-fun lt!25216 () Unit!1621)

(assert (=> d!12003 (= lt!25214 lt!25216)))

(assert (=> d!12003 (= (getValueByKey!123 lt!25213 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12003 (= lt!25216 (lemmaContainsTupThenGetReturnValue!43 lt!25213 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12003 (= lt!25213 (insertStrictlySorted!46 (toList!696 lt!24815) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12003 (= (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!25215)))

(declare-fun b!61115 () Bool)

(declare-fun res!33712 () Bool)

(assert (=> b!61115 (=> (not res!33712) (not e!40159))))

(assert (=> b!61115 (= res!33712 (= (getValueByKey!123 (toList!696 lt!25215) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61116 () Bool)

(assert (=> b!61116 (= e!40159 (contains!689 (toList!696 lt!25215) (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(assert (= (and d!12003 res!33711) b!61115))

(assert (= (and b!61115 res!33712) b!61116))

(declare-fun m!53745 () Bool)

(assert (=> d!12003 m!53745))

(declare-fun m!53747 () Bool)

(assert (=> d!12003 m!53747))

(declare-fun m!53749 () Bool)

(assert (=> d!12003 m!53749))

(declare-fun m!53751 () Bool)

(assert (=> d!12003 m!53751))

(declare-fun m!53753 () Bool)

(assert (=> b!61115 m!53753))

(declare-fun m!53755 () Bool)

(assert (=> b!61116 m!53755))

(assert (=> b!60583 d!12003))

(declare-fun d!12005 () Bool)

(assert (=> d!12005 (contains!687 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24809)))

(declare-fun lt!25219 () Unit!1621)

(declare-fun choose!331 (ListLongMap!1361 (_ BitVec 64) V!2857 (_ BitVec 64)) Unit!1621)

(assert (=> d!12005 (= lt!25219 (choose!331 lt!24815 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24809))))

(assert (=> d!12005 (contains!687 lt!24815 lt!24809)))

(assert (=> d!12005 (= (addStillContains!43 lt!24815 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24809) lt!25219)))

(declare-fun bs!2642 () Bool)

(assert (= bs!2642 d!12005))

(assert (=> bs!2642 m!53129))

(assert (=> bs!2642 m!53129))

(assert (=> bs!2642 m!53131))

(declare-fun m!53757 () Bool)

(assert (=> bs!2642 m!53757))

(declare-fun m!53759 () Bool)

(assert (=> bs!2642 m!53759))

(assert (=> b!60583 d!12005))

(declare-fun d!12007 () Bool)

(declare-fun e!40161 () Bool)

(assert (=> d!12007 e!40161))

(declare-fun res!33713 () Bool)

(assert (=> d!12007 (=> res!33713 e!40161)))

(declare-fun lt!25223 () Bool)

(assert (=> d!12007 (= res!33713 (not lt!25223))))

(declare-fun lt!25221 () Bool)

(assert (=> d!12007 (= lt!25223 lt!25221)))

(declare-fun lt!25220 () Unit!1621)

(declare-fun e!40160 () Unit!1621)

(assert (=> d!12007 (= lt!25220 e!40160)))

(declare-fun c!7982 () Bool)

(assert (=> d!12007 (= c!7982 lt!25221)))

(assert (=> d!12007 (= lt!25221 (containsKey!127 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809))))

(assert (=> d!12007 (= (contains!687 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24809) lt!25223)))

(declare-fun b!61118 () Bool)

(declare-fun lt!25222 () Unit!1621)

(assert (=> b!61118 (= e!40160 lt!25222)))

(assert (=> b!61118 (= lt!25222 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809))))

(assert (=> b!61118 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809))))

(declare-fun b!61119 () Bool)

(declare-fun Unit!1644 () Unit!1621)

(assert (=> b!61119 (= e!40160 Unit!1644)))

(declare-fun b!61120 () Bool)

(assert (=> b!61120 (= e!40161 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809)))))

(assert (= (and d!12007 c!7982) b!61118))

(assert (= (and d!12007 (not c!7982)) b!61119))

(assert (= (and d!12007 (not res!33713)) b!61120))

(declare-fun m!53761 () Bool)

(assert (=> d!12007 m!53761))

(declare-fun m!53763 () Bool)

(assert (=> b!61118 m!53763))

(declare-fun m!53765 () Bool)

(assert (=> b!61118 m!53765))

(assert (=> b!61118 m!53765))

(declare-fun m!53767 () Bool)

(assert (=> b!61118 m!53767))

(assert (=> b!61120 m!53765))

(assert (=> b!61120 m!53765))

(assert (=> b!61120 m!53767))

(assert (=> b!60583 d!12007))

(declare-fun d!12009 () Bool)

(assert (=> d!12009 (= (apply!67 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24829) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24829)))))

(declare-fun bs!2643 () Bool)

(assert (= bs!2643 d!12009))

(declare-fun m!53769 () Bool)

(assert (=> bs!2643 m!53769))

(assert (=> bs!2643 m!53769))

(declare-fun m!53771 () Bool)

(assert (=> bs!2643 m!53771))

(assert (=> b!60583 d!12009))

(declare-fun d!12011 () Bool)

(declare-fun e!40162 () Bool)

(assert (=> d!12011 e!40162))

(declare-fun res!33714 () Bool)

(assert (=> d!12011 (=> (not res!33714) (not e!40162))))

(declare-fun lt!25226 () ListLongMap!1361)

(assert (=> d!12011 (= res!33714 (contains!687 lt!25226 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lt!25224 () List!1443)

(assert (=> d!12011 (= lt!25226 (ListLongMap!1362 lt!25224))))

(declare-fun lt!25225 () Unit!1621)

(declare-fun lt!25227 () Unit!1621)

(assert (=> d!12011 (= lt!25225 lt!25227)))

(assert (=> d!12011 (= (getValueByKey!123 lt!25224 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12011 (= lt!25227 (lemmaContainsTupThenGetReturnValue!43 lt!25224 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12011 (= lt!25224 (insertStrictlySorted!46 (toList!696 lt!24827) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12011 (= (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!25226)))

(declare-fun b!61121 () Bool)

(declare-fun res!33715 () Bool)

(assert (=> b!61121 (=> (not res!33715) (not e!40162))))

(assert (=> b!61121 (= res!33715 (= (getValueByKey!123 (toList!696 lt!25226) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61122 () Bool)

(assert (=> b!61122 (= e!40162 (contains!689 (toList!696 lt!25226) (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(assert (= (and d!12011 res!33714) b!61121))

(assert (= (and b!61121 res!33715) b!61122))

(declare-fun m!53773 () Bool)

(assert (=> d!12011 m!53773))

(declare-fun m!53775 () Bool)

(assert (=> d!12011 m!53775))

(declare-fun m!53777 () Bool)

(assert (=> d!12011 m!53777))

(declare-fun m!53779 () Bool)

(assert (=> d!12011 m!53779))

(declare-fun m!53781 () Bool)

(assert (=> b!61121 m!53781))

(declare-fun m!53783 () Bool)

(assert (=> b!61122 m!53783))

(assert (=> b!60583 d!12011))

(declare-fun d!12013 () Bool)

(declare-fun e!40163 () Bool)

(assert (=> d!12013 e!40163))

(declare-fun res!33716 () Bool)

(assert (=> d!12013 (=> (not res!33716) (not e!40163))))

(declare-fun lt!25230 () ListLongMap!1361)

(assert (=> d!12013 (= res!33716 (contains!687 lt!25230 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lt!25228 () List!1443)

(assert (=> d!12013 (= lt!25230 (ListLongMap!1362 lt!25228))))

(declare-fun lt!25229 () Unit!1621)

(declare-fun lt!25231 () Unit!1621)

(assert (=> d!12013 (= lt!25229 lt!25231)))

(assert (=> d!12013 (= (getValueByKey!123 lt!25228 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12013 (= lt!25231 (lemmaContainsTupThenGetReturnValue!43 lt!25228 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12013 (= lt!25228 (insertStrictlySorted!46 (toList!696 lt!24824) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12013 (= (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!25230)))

(declare-fun b!61123 () Bool)

(declare-fun res!33717 () Bool)

(assert (=> b!61123 (=> (not res!33717) (not e!40163))))

(assert (=> b!61123 (= res!33717 (= (getValueByKey!123 (toList!696 lt!25230) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61124 () Bool)

(assert (=> b!61124 (= e!40163 (contains!689 (toList!696 lt!25230) (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(assert (= (and d!12013 res!33716) b!61123))

(assert (= (and b!61123 res!33717) b!61124))

(declare-fun m!53785 () Bool)

(assert (=> d!12013 m!53785))

(declare-fun m!53787 () Bool)

(assert (=> d!12013 m!53787))

(declare-fun m!53789 () Bool)

(assert (=> d!12013 m!53789))

(declare-fun m!53791 () Bool)

(assert (=> d!12013 m!53791))

(declare-fun m!53793 () Bool)

(assert (=> b!61123 m!53793))

(declare-fun m!53795 () Bool)

(assert (=> b!61124 m!53795))

(assert (=> b!60583 d!12013))

(declare-fun d!12015 () Bool)

(assert (=> d!12015 (= (apply!67 lt!24819 lt!24826) (get!1086 (getValueByKey!123 (toList!696 lt!24819) lt!24826)))))

(declare-fun bs!2644 () Bool)

(assert (= bs!2644 d!12015))

(declare-fun m!53797 () Bool)

(assert (=> bs!2644 m!53797))

(assert (=> bs!2644 m!53797))

(declare-fun m!53799 () Bool)

(assert (=> bs!2644 m!53799))

(assert (=> b!60583 d!12015))

(declare-fun d!12017 () Bool)

(assert (=> d!12017 (= (apply!67 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24818) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24818)))))

(declare-fun bs!2645 () Bool)

(assert (= bs!2645 d!12017))

(declare-fun m!53801 () Bool)

(assert (=> bs!2645 m!53801))

(assert (=> bs!2645 m!53801))

(declare-fun m!53803 () Bool)

(assert (=> bs!2645 m!53803))

(assert (=> b!60583 d!12017))

(declare-fun d!12019 () Bool)

(assert (=> d!12019 (= (apply!67 lt!24827 lt!24818) (get!1086 (getValueByKey!123 (toList!696 lt!24827) lt!24818)))))

(declare-fun bs!2646 () Bool)

(assert (= bs!2646 d!12019))

(declare-fun m!53805 () Bool)

(assert (=> bs!2646 m!53805))

(assert (=> bs!2646 m!53805))

(declare-fun m!53807 () Bool)

(assert (=> bs!2646 m!53807))

(assert (=> b!60583 d!12019))

(declare-fun d!12021 () Bool)

(declare-fun res!33722 () Bool)

(declare-fun e!40168 () Bool)

(assert (=> d!12021 (=> res!33722 e!40168)))

(assert (=> d!12021 (= res!33722 (and ((_ is Cons!1439) (toList!696 lt!24715)) (= (_1!1035 (h!2021 (toList!696 lt!24715))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(assert (=> d!12021 (= (containsKey!127 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) e!40168)))

(declare-fun b!61129 () Bool)

(declare-fun e!40169 () Bool)

(assert (=> b!61129 (= e!40168 e!40169)))

(declare-fun res!33723 () Bool)

(assert (=> b!61129 (=> (not res!33723) (not e!40169))))

(assert (=> b!61129 (= res!33723 (and (or (not ((_ is Cons!1439) (toList!696 lt!24715))) (bvsle (_1!1035 (h!2021 (toList!696 lt!24715))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))) ((_ is Cons!1439) (toList!696 lt!24715)) (bvslt (_1!1035 (h!2021 (toList!696 lt!24715))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(declare-fun b!61130 () Bool)

(assert (=> b!61130 (= e!40169 (containsKey!127 (t!4808 (toList!696 lt!24715)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (= (and d!12021 (not res!33722)) b!61129))

(assert (= (and b!61129 res!33723) b!61130))

(assert (=> b!61130 m!52977))

(declare-fun m!53809 () Bool)

(assert (=> b!61130 m!53809))

(assert (=> d!11879 d!12021))

(declare-fun d!12023 () Bool)

(assert (=> d!12023 (= (apply!67 lt!24825 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1086 (getValueByKey!123 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2647 () Bool)

(assert (= bs!2647 d!12023))

(assert (=> bs!2647 m!53385))

(assert (=> bs!2647 m!53385))

(declare-fun m!53811 () Bool)

(assert (=> bs!2647 m!53811))

(assert (=> b!60586 d!12023))

(declare-fun d!12025 () Bool)

(declare-fun e!40171 () Bool)

(assert (=> d!12025 e!40171))

(declare-fun res!33724 () Bool)

(assert (=> d!12025 (=> res!33724 e!40171)))

(declare-fun lt!25235 () Bool)

(assert (=> d!12025 (= res!33724 (not lt!25235))))

(declare-fun lt!25233 () Bool)

(assert (=> d!12025 (= lt!25235 lt!25233)))

(declare-fun lt!25232 () Unit!1621)

(declare-fun e!40170 () Unit!1621)

(assert (=> d!12025 (= lt!25232 e!40170)))

(declare-fun c!7983 () Bool)

(assert (=> d!12025 (= c!7983 lt!25233)))

(assert (=> d!12025 (= lt!25233 (containsKey!127 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!12025 (= (contains!687 lt!24825 #b0000000000000000000000000000000000000000000000000000000000000000) lt!25235)))

(declare-fun b!61131 () Bool)

(declare-fun lt!25234 () Unit!1621)

(assert (=> b!61131 (= e!40170 lt!25234)))

(assert (=> b!61131 (= lt!25234 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61131 (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61132 () Bool)

(declare-fun Unit!1645 () Unit!1621)

(assert (=> b!61132 (= e!40170 Unit!1645)))

(declare-fun b!61133 () Bool)

(assert (=> b!61133 (= e!40171 (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12025 c!7983) b!61131))

(assert (= (and d!12025 (not c!7983)) b!61132))

(assert (= (and d!12025 (not res!33724)) b!61133))

(declare-fun m!53813 () Bool)

(assert (=> d!12025 m!53813))

(declare-fun m!53815 () Bool)

(assert (=> b!61131 m!53815))

(assert (=> b!61131 m!53491))

(assert (=> b!61131 m!53491))

(declare-fun m!53817 () Bool)

(assert (=> b!61131 m!53817))

(assert (=> b!61133 m!53491))

(assert (=> b!61133 m!53491))

(assert (=> b!61133 m!53817))

(assert (=> bm!4573 d!12025))

(assert (=> b!60710 d!11929))

(declare-fun mapIsEmpty!2929 () Bool)

(declare-fun mapRes!2929 () Bool)

(assert (=> mapIsEmpty!2929 mapRes!2929))

(declare-fun mapNonEmpty!2929 () Bool)

(declare-fun tp!8095 () Bool)

(declare-fun e!40172 () Bool)

(assert (=> mapNonEmpty!2929 (= mapRes!2929 (and tp!8095 e!40172))))

(declare-fun mapKey!2929 () (_ BitVec 32))

(declare-fun mapValue!2929 () ValueCell!860)

(declare-fun mapRest!2929 () (Array (_ BitVec 32) ValueCell!860))

(assert (=> mapNonEmpty!2929 (= mapRest!2927 (store mapRest!2929 mapKey!2929 mapValue!2929))))

(declare-fun b!61134 () Bool)

(assert (=> b!61134 (= e!40172 tp_is_empty!2407)))

(declare-fun condMapEmpty!2929 () Bool)

(declare-fun mapDefault!2929 () ValueCell!860)

(assert (=> mapNonEmpty!2927 (= condMapEmpty!2929 (= mapRest!2927 ((as const (Array (_ BitVec 32) ValueCell!860)) mapDefault!2929)))))

(declare-fun e!40173 () Bool)

(assert (=> mapNonEmpty!2927 (= tp!8093 (and e!40173 mapRes!2929))))

(declare-fun b!61135 () Bool)

(assert (=> b!61135 (= e!40173 tp_is_empty!2407)))

(assert (= (and mapNonEmpty!2927 condMapEmpty!2929) mapIsEmpty!2929))

(assert (= (and mapNonEmpty!2927 (not condMapEmpty!2929)) mapNonEmpty!2929))

(assert (= (and mapNonEmpty!2929 ((_ is ValueCellFull!860) mapValue!2929)) b!61134))

(assert (= (and mapNonEmpty!2927 ((_ is ValueCellFull!860) mapDefault!2929)) b!61135))

(declare-fun m!53819 () Bool)

(assert (=> mapNonEmpty!2929 m!53819))

(declare-fun mapIsEmpty!2930 () Bool)

(declare-fun mapRes!2930 () Bool)

(assert (=> mapIsEmpty!2930 mapRes!2930))

(declare-fun mapNonEmpty!2930 () Bool)

(declare-fun tp!8096 () Bool)

(declare-fun e!40174 () Bool)

(assert (=> mapNonEmpty!2930 (= mapRes!2930 (and tp!8096 e!40174))))

(declare-fun mapKey!2930 () (_ BitVec 32))

(declare-fun mapRest!2930 () (Array (_ BitVec 32) ValueCell!860))

(declare-fun mapValue!2930 () ValueCell!860)

(assert (=> mapNonEmpty!2930 (= mapRest!2928 (store mapRest!2930 mapKey!2930 mapValue!2930))))

(declare-fun b!61136 () Bool)

(assert (=> b!61136 (= e!40174 tp_is_empty!2407)))

(declare-fun condMapEmpty!2930 () Bool)

(declare-fun mapDefault!2930 () ValueCell!860)

(assert (=> mapNonEmpty!2928 (= condMapEmpty!2930 (= mapRest!2928 ((as const (Array (_ BitVec 32) ValueCell!860)) mapDefault!2930)))))

(declare-fun e!40175 () Bool)

(assert (=> mapNonEmpty!2928 (= tp!8094 (and e!40175 mapRes!2930))))

(declare-fun b!61137 () Bool)

(assert (=> b!61137 (= e!40175 tp_is_empty!2407)))

(assert (= (and mapNonEmpty!2928 condMapEmpty!2930) mapIsEmpty!2930))

(assert (= (and mapNonEmpty!2928 (not condMapEmpty!2930)) mapNonEmpty!2930))

(assert (= (and mapNonEmpty!2930 ((_ is ValueCellFull!860) mapValue!2930)) b!61136))

(assert (= (and mapNonEmpty!2928 ((_ is ValueCellFull!860) mapDefault!2930)) b!61137))

(declare-fun m!53821 () Bool)

(assert (=> mapNonEmpty!2930 m!53821))

(declare-fun b_lambda!2697 () Bool)

(assert (= b_lambda!2695 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2697)))

(declare-fun b_lambda!2699 () Bool)

(assert (= b_lambda!2687 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2699)))

(declare-fun b_lambda!2701 () Bool)

(assert (= b_lambda!2691 (or (and b!60405 b_free!1981) (and b!60410 b_free!1983 (= (defaultEntry!2066 newMap!16) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))))) b_lambda!2701)))

(declare-fun b_lambda!2703 () Bool)

(assert (= b_lambda!2689 (or (and b!60405 b_free!1981) (and b!60410 b_free!1983 (= (defaultEntry!2066 newMap!16) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))))) b_lambda!2703)))

(declare-fun b_lambda!2705 () Bool)

(assert (= b_lambda!2693 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2705)))

(check-sat (not b!61133) (not b!61100) (not b!61121) (not b_lambda!2697) (not b!61130) (not bm!4672) (not b!61123) (not d!11931) (not b!60865) (not d!12013) (not d!11993) (not bm!4696) (not bm!4662) (not d!12007) (not b!60802) (not d!11957) (not b!60978) (not d!12003) (not b!60948) (not d!11965) (not b!60871) (not d!11983) (not b!60844) (not bm!4691) (not b!61091) (not b!61104) (not b!61079) (not d!11955) (not b!60907) (not b_lambda!2705) (not b!61106) (not b!61065) (not b!61099) (not d!11921) (not b!60893) (not d!12001) (not d!11951) (not d!11903) (not b!60902) (not d!12017) (not d!11915) (not bm!4679) (not b!60945) (not b!61078) (not bm!4663) (not b!60946) (not d!11973) (not d!12009) (not b!60979) (not d!11941) (not bm!4668) (not b!60870) (not d!11977) (not b_lambda!2699) (not b_next!1983) (not b!61045) (not b!60949) (not b!61049) (not bm!4697) (not d!11985) (not b!61111) (not b!60987) (not bm!4666) (not b!61118) (not d!11901) (not bm!4690) (not b!60852) (not b!60915) (not b!61120) (not b!61050) (not b!60881) (not b!61096) (not bm!4670) (not b!60876) (not d!11963) (not b_lambda!2685) (not bm!4671) (not b_lambda!2681) (not b!60989) (not d!11961) (not d!11979) (not b!60950) (not bm!4694) (not b!61092) (not b!61102) (not b!61124) (not b!61015) (not b!61071) (not d!11917) (not b!60851) (not d!11981) (not b!60912) (not b!60897) (not b!61048) (not b!60977) (not d!12005) (not d!11927) (not b!60873) (not b!60848) (not d!12019) (not d!11953) (not mapNonEmpty!2929) (not b!61063) (not b!60856) (not d!11991) (not b!60975) (not b!60875) (not d!12025) (not b!61115) (not d!12023) (not b!61075) (not bm!4687) (not d!11935) (not b!61084) (not d!11929) (not b!61131) (not b!60976) (not d!11971) (not bm!4661) tp_is_empty!2407 (not b!60889) (not b!60985) (not b!60917) (not d!11967) (not b!61057) (not b!61003) (not b_lambda!2701) (not bm!4652) (not b!61081) (not b!60891) (not d!12011) (not d!11905) (not b!60980) (not bm!4689) (not d!11937) b_and!3717 (not bm!4665) (not d!11919) (not b!60918) (not b!61101) (not b!61086) (not b!61112) (not d!11995) (not b!61055) (not b!61058) (not b!61036) (not b!60908) (not b_lambda!2703) (not d!11997) (not b!60878) (not b!60992) (not b!60868) (not b!61116) (not mapNonEmpty!2930) (not b!60895) (not b!60884) b_and!3719 (not d!11943) (not b!60900) (not b!61035) (not bm!4685) (not b!61014) (not b!61031) (not b!61070) (not b!60864) (not b!60919) (not d!11999) (not b!60981) (not d!12015) (not d!11947) (not b!60866) (not d!11933) (not bm!4682) (not b!60894) (not b!60916) (not b!61122) (not b!61060) (not b!60808) (not b_next!1981) (not bm!4678) (not bm!4698) (not d!11987) (not b!60857))
(check-sat b_and!3717 b_and!3719 (not b_next!1981) (not b_next!1983))
(get-model)

(assert (=> b!60848 d!11977))

(declare-fun d!12027 () Bool)

(assert (=> d!12027 (= (get!1086 (getValueByKey!123 (toList!696 lt!24824) lt!24829)) (v!2402 (getValueByKey!123 (toList!696 lt!24824) lt!24829)))))

(assert (=> d!11995 d!12027))

(declare-fun d!12029 () Bool)

(declare-fun c!7984 () Bool)

(assert (=> d!12029 (= c!7984 (and ((_ is Cons!1439) (toList!696 lt!24824)) (= (_1!1035 (h!2021 (toList!696 lt!24824))) lt!24829)))))

(declare-fun e!40176 () Option!129)

(assert (=> d!12029 (= (getValueByKey!123 (toList!696 lt!24824) lt!24829) e!40176)))

(declare-fun b!61141 () Bool)

(declare-fun e!40177 () Option!129)

(assert (=> b!61141 (= e!40177 None!127)))

(declare-fun b!61138 () Bool)

(assert (=> b!61138 (= e!40176 (Some!128 (_2!1035 (h!2021 (toList!696 lt!24824)))))))

(declare-fun b!61140 () Bool)

(assert (=> b!61140 (= e!40177 (getValueByKey!123 (t!4808 (toList!696 lt!24824)) lt!24829))))

(declare-fun b!61139 () Bool)

(assert (=> b!61139 (= e!40176 e!40177)))

(declare-fun c!7985 () Bool)

(assert (=> b!61139 (= c!7985 (and ((_ is Cons!1439) (toList!696 lt!24824)) (not (= (_1!1035 (h!2021 (toList!696 lt!24824))) lt!24829))))))

(assert (= (and d!12029 c!7984) b!61138))

(assert (= (and d!12029 (not c!7984)) b!61139))

(assert (= (and b!61139 c!7985) b!61140))

(assert (= (and b!61139 (not c!7985)) b!61141))

(declare-fun m!53823 () Bool)

(assert (=> b!61140 m!53823))

(assert (=> d!11995 d!12029))

(declare-fun d!12031 () Bool)

(declare-fun e!40178 () Bool)

(assert (=> d!12031 e!40178))

(declare-fun res!33725 () Bool)

(assert (=> d!12031 (=> (not res!33725) (not e!40178))))

(declare-fun lt!25238 () ListLongMap!1361)

(assert (=> d!12031 (= res!33725 (contains!687 lt!25238 (_1!1035 (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))))

(declare-fun lt!25236 () List!1443)

(assert (=> d!12031 (= lt!25238 (ListLongMap!1362 lt!25236))))

(declare-fun lt!25237 () Unit!1621)

(declare-fun lt!25239 () Unit!1621)

(assert (=> d!12031 (= lt!25237 lt!25239)))

(assert (=> d!12031 (= (getValueByKey!123 lt!25236 (_1!1035 (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))) (Some!128 (_2!1035 (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))))

(assert (=> d!12031 (= lt!25239 (lemmaContainsTupThenGetReturnValue!43 lt!25236 (_1!1035 (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))) (_2!1035 (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))))

(assert (=> d!12031 (= lt!25236 (insertStrictlySorted!46 (toList!696 (ite c!7971 call!4694 (ite c!7973 call!4695 call!4690))) (_1!1035 (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))) (_2!1035 (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))))

(assert (=> d!12031 (= (+!82 (ite c!7971 call!4694 (ite c!7973 call!4695 call!4690)) (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))) lt!25238)))

(declare-fun b!61142 () Bool)

(declare-fun res!33726 () Bool)

(assert (=> b!61142 (=> (not res!33726) (not e!40178))))

(assert (=> b!61142 (= res!33726 (= (getValueByKey!123 (toList!696 lt!25238) (_1!1035 (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))) (Some!128 (_2!1035 (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))))

(declare-fun b!61143 () Bool)

(assert (=> b!61143 (= e!40178 (contains!689 (toList!696 lt!25238) (ite (or c!7971 c!7973) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(assert (= (and d!12031 res!33725) b!61142))

(assert (= (and b!61142 res!33726) b!61143))

(declare-fun m!53825 () Bool)

(assert (=> d!12031 m!53825))

(declare-fun m!53827 () Bool)

(assert (=> d!12031 m!53827))

(declare-fun m!53829 () Bool)

(assert (=> d!12031 m!53829))

(declare-fun m!53831 () Bool)

(assert (=> d!12031 m!53831))

(declare-fun m!53833 () Bool)

(assert (=> b!61142 m!53833))

(declare-fun m!53835 () Bool)

(assert (=> b!61143 m!53835))

(assert (=> bm!4690 d!12031))

(declare-fun d!12033 () Bool)

(declare-fun isEmpty!302 (List!1443) Bool)

(assert (=> d!12033 (= (isEmpty!300 lt!25107) (isEmpty!302 (toList!696 lt!25107)))))

(declare-fun bs!2648 () Bool)

(assert (= bs!2648 d!12033))

(declare-fun m!53837 () Bool)

(assert (=> bs!2648 m!53837))

(assert (=> b!60976 d!12033))

(declare-fun d!12035 () Bool)

(assert (=> d!12035 (= (isEmpty!301 (getValueByKey!123 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))) (not ((_ is Some!128) (getValueByKey!123 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))))

(assert (=> d!11957 d!12035))

(declare-fun d!12037 () Bool)

(assert (=> d!12037 (= (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!61092 d!12037))

(assert (=> b!60979 d!11911))

(assert (=> b!60902 d!12037))

(declare-fun e!40181 () Bool)

(declare-fun b!61144 () Bool)

(assert (=> b!61144 (= e!40181 (contains!688 (ite c!7918 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!12039 () Bool)

(declare-fun res!33727 () Bool)

(declare-fun e!40182 () Bool)

(assert (=> d!12039 (=> res!33727 e!40182)))

(assert (=> d!12039 (= res!33727 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> d!12039 (= (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!7918 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441))) e!40182)))

(declare-fun b!61145 () Bool)

(declare-fun e!40179 () Bool)

(declare-fun call!4703 () Bool)

(assert (=> b!61145 (= e!40179 call!4703)))

(declare-fun c!7986 () Bool)

(declare-fun bm!4700 () Bool)

(assert (=> bm!4700 (= call!4703 (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!7986 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!7918 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441))) (ite c!7918 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)))))))

(declare-fun b!61146 () Bool)

(declare-fun e!40180 () Bool)

(assert (=> b!61146 (= e!40180 e!40179)))

(assert (=> b!61146 (= c!7986 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!61147 () Bool)

(assert (=> b!61147 (= e!40179 call!4703)))

(declare-fun b!61148 () Bool)

(assert (=> b!61148 (= e!40182 e!40180)))

(declare-fun res!33728 () Bool)

(assert (=> b!61148 (=> (not res!33728) (not e!40180))))

(assert (=> b!61148 (= res!33728 (not e!40181))))

(declare-fun res!33729 () Bool)

(assert (=> b!61148 (=> (not res!33729) (not e!40181))))

(assert (=> b!61148 (= res!33729 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!12039 (not res!33727)) b!61148))

(assert (= (and b!61148 res!33729) b!61144))

(assert (= (and b!61148 res!33728) b!61146))

(assert (= (and b!61146 c!7986) b!61147))

(assert (= (and b!61146 (not c!7986)) b!61145))

(assert (= (or b!61147 b!61145) bm!4700))

(declare-fun m!53839 () Bool)

(assert (=> b!61144 m!53839))

(assert (=> b!61144 m!53839))

(declare-fun m!53841 () Bool)

(assert (=> b!61144 m!53841))

(assert (=> bm!4700 m!53839))

(declare-fun m!53843 () Bool)

(assert (=> bm!4700 m!53843))

(assert (=> b!61146 m!53839))

(assert (=> b!61146 m!53839))

(declare-fun m!53845 () Bool)

(assert (=> b!61146 m!53845))

(assert (=> b!61148 m!53839))

(assert (=> b!61148 m!53839))

(assert (=> b!61148 m!53845))

(assert (=> bm!4666 d!12039))

(declare-fun b!61149 () Bool)

(declare-fun e!40185 () Bool)

(assert (=> b!61149 (= e!40185 (contains!688 (ite c!7917 (Cons!1440 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) Nil!1441) Nil!1441) (select (arr!1780 (_keys!3693 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!12041 () Bool)

(declare-fun res!33730 () Bool)

(declare-fun e!40186 () Bool)

(assert (=> d!12041 (=> res!33730 e!40186)))

(assert (=> d!12041 (= res!33730 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12041 (= (arrayNoDuplicates!0 (_keys!3693 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!7917 (Cons!1440 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) Nil!1441) Nil!1441)) e!40186)))

(declare-fun b!61150 () Bool)

(declare-fun e!40183 () Bool)

(declare-fun call!4704 () Bool)

(assert (=> b!61150 (= e!40183 call!4704)))

(declare-fun c!7987 () Bool)

(declare-fun bm!4701 () Bool)

(assert (=> bm!4701 (= call!4704 (arrayNoDuplicates!0 (_keys!3693 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!7987 (Cons!1440 (select (arr!1780 (_keys!3693 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!7917 (Cons!1440 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) Nil!1441) Nil!1441)) (ite c!7917 (Cons!1440 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) Nil!1441) Nil!1441))))))

(declare-fun b!61151 () Bool)

(declare-fun e!40184 () Bool)

(assert (=> b!61151 (= e!40184 e!40183)))

(assert (=> b!61151 (= c!7987 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!61152 () Bool)

(assert (=> b!61152 (= e!40183 call!4704)))

(declare-fun b!61153 () Bool)

(assert (=> b!61153 (= e!40186 e!40184)))

(declare-fun res!33731 () Bool)

(assert (=> b!61153 (=> (not res!33731) (not e!40184))))

(assert (=> b!61153 (= res!33731 (not e!40185))))

(declare-fun res!33732 () Bool)

(assert (=> b!61153 (=> (not res!33732) (not e!40185))))

(assert (=> b!61153 (= res!33732 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!12041 (not res!33730)) b!61153))

(assert (= (and b!61153 res!33732) b!61149))

(assert (= (and b!61153 res!33731) b!61151))

(assert (= (and b!61151 c!7987) b!61152))

(assert (= (and b!61151 (not c!7987)) b!61150))

(assert (= (or b!61152 b!61150) bm!4701))

(declare-fun m!53847 () Bool)

(assert (=> b!61149 m!53847))

(assert (=> b!61149 m!53847))

(declare-fun m!53849 () Bool)

(assert (=> b!61149 m!53849))

(assert (=> bm!4701 m!53847))

(declare-fun m!53851 () Bool)

(assert (=> bm!4701 m!53851))

(assert (=> b!61151 m!53847))

(assert (=> b!61151 m!53847))

(declare-fun m!53853 () Bool)

(assert (=> b!61151 m!53853))

(assert (=> b!61153 m!53847))

(assert (=> b!61153 m!53847))

(assert (=> b!61153 m!53853))

(assert (=> bm!4665 d!12041))

(declare-fun lt!25242 () Bool)

(declare-fun d!12043 () Bool)

(declare-fun content!66 (List!1443) (InoxSet tuple2!2048))

(assert (=> d!12043 (= lt!25242 (select (content!66 (toList!696 lt!25215)) (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun e!40192 () Bool)

(assert (=> d!12043 (= lt!25242 e!40192)))

(declare-fun res!33737 () Bool)

(assert (=> d!12043 (=> (not res!33737) (not e!40192))))

(assert (=> d!12043 (= res!33737 ((_ is Cons!1439) (toList!696 lt!25215)))))

(assert (=> d!12043 (= (contains!689 (toList!696 lt!25215) (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!25242)))

(declare-fun b!61158 () Bool)

(declare-fun e!40191 () Bool)

(assert (=> b!61158 (= e!40192 e!40191)))

(declare-fun res!33738 () Bool)

(assert (=> b!61158 (=> res!33738 e!40191)))

(assert (=> b!61158 (= res!33738 (= (h!2021 (toList!696 lt!25215)) (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!61159 () Bool)

(assert (=> b!61159 (= e!40191 (contains!689 (t!4808 (toList!696 lt!25215)) (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(assert (= (and d!12043 res!33737) b!61158))

(assert (= (and b!61158 (not res!33738)) b!61159))

(declare-fun m!53855 () Bool)

(assert (=> d!12043 m!53855))

(declare-fun m!53857 () Bool)

(assert (=> d!12043 m!53857))

(declare-fun m!53859 () Bool)

(assert (=> b!61159 m!53859))

(assert (=> b!61116 d!12043))

(declare-fun d!12045 () Bool)

(assert (=> d!12045 (= (validMask!0 (mask!5961 newMap!16)) (and (or (= (mask!5961 newMap!16) #b00000000000000000000000000000111) (= (mask!5961 newMap!16) #b00000000000000000000000000001111) (= (mask!5961 newMap!16) #b00000000000000000000000000011111) (= (mask!5961 newMap!16) #b00000000000000000000000000111111) (= (mask!5961 newMap!16) #b00000000000000000000000001111111) (= (mask!5961 newMap!16) #b00000000000000000000000011111111) (= (mask!5961 newMap!16) #b00000000000000000000000111111111) (= (mask!5961 newMap!16) #b00000000000000000000001111111111) (= (mask!5961 newMap!16) #b00000000000000000000011111111111) (= (mask!5961 newMap!16) #b00000000000000000000111111111111) (= (mask!5961 newMap!16) #b00000000000000000001111111111111) (= (mask!5961 newMap!16) #b00000000000000000011111111111111) (= (mask!5961 newMap!16) #b00000000000000000111111111111111) (= (mask!5961 newMap!16) #b00000000000000001111111111111111) (= (mask!5961 newMap!16) #b00000000000000011111111111111111) (= (mask!5961 newMap!16) #b00000000000000111111111111111111) (= (mask!5961 newMap!16) #b00000000000001111111111111111111) (= (mask!5961 newMap!16) #b00000000000011111111111111111111) (= (mask!5961 newMap!16) #b00000000000111111111111111111111) (= (mask!5961 newMap!16) #b00000000001111111111111111111111) (= (mask!5961 newMap!16) #b00000000011111111111111111111111) (= (mask!5961 newMap!16) #b00000000111111111111111111111111) (= (mask!5961 newMap!16) #b00000001111111111111111111111111) (= (mask!5961 newMap!16) #b00000011111111111111111111111111) (= (mask!5961 newMap!16) #b00000111111111111111111111111111) (= (mask!5961 newMap!16) #b00001111111111111111111111111111) (= (mask!5961 newMap!16) #b00011111111111111111111111111111) (= (mask!5961 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!5961 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!11979 d!12045))

(declare-fun d!12047 () Bool)

(declare-fun lt!25243 () Bool)

(assert (=> d!12047 (= lt!25243 (select (content!66 (toList!696 lt!25132)) (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!40194 () Bool)

(assert (=> d!12047 (= lt!25243 e!40194)))

(declare-fun res!33739 () Bool)

(assert (=> d!12047 (=> (not res!33739) (not e!40194))))

(assert (=> d!12047 (= res!33739 ((_ is Cons!1439) (toList!696 lt!25132)))))

(assert (=> d!12047 (= (contains!689 (toList!696 lt!25132) (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!25243)))

(declare-fun b!61160 () Bool)

(declare-fun e!40193 () Bool)

(assert (=> b!61160 (= e!40194 e!40193)))

(declare-fun res!33740 () Bool)

(assert (=> b!61160 (=> res!33740 e!40193)))

(assert (=> b!61160 (= res!33740 (= (h!2021 (toList!696 lt!25132)) (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!61161 () Bool)

(assert (=> b!61161 (= e!40193 (contains!689 (t!4808 (toList!696 lt!25132)) (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!12047 res!33739) b!61160))

(assert (= (and b!61160 (not res!33740)) b!61161))

(declare-fun m!53861 () Bool)

(assert (=> d!12047 m!53861))

(declare-fun m!53863 () Bool)

(assert (=> d!12047 m!53863))

(declare-fun m!53865 () Bool)

(assert (=> b!61161 m!53865))

(assert (=> b!61036 d!12047))

(declare-fun b!61162 () Bool)

(declare-fun res!33741 () Bool)

(declare-fun e!40197 () Bool)

(assert (=> b!61162 (=> (not res!33741) (not e!40197))))

(declare-fun lt!25244 () ListLongMap!1361)

(assert (=> b!61162 (= res!33741 (not (contains!687 lt!25244 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!61163 () Bool)

(declare-fun e!40200 () Bool)

(assert (=> b!61163 (= e!40200 (isEmpty!300 lt!25244))))

(declare-fun b!61164 () Bool)

(declare-fun e!40196 () Bool)

(declare-fun e!40201 () Bool)

(assert (=> b!61164 (= e!40196 e!40201)))

(assert (=> b!61164 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun res!33742 () Bool)

(assert (=> b!61164 (= res!33742 (contains!687 lt!25244 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61164 (=> (not res!33742) (not e!40201))))

(declare-fun d!12049 () Bool)

(assert (=> d!12049 e!40197))

(declare-fun res!33743 () Bool)

(assert (=> d!12049 (=> (not res!33743) (not e!40197))))

(assert (=> d!12049 (= res!33743 (not (contains!687 lt!25244 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!40198 () ListLongMap!1361)

(assert (=> d!12049 (= lt!25244 e!40198)))

(declare-fun c!7991 () Bool)

(assert (=> d!12049 (= c!7991 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12049 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12049 (= (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25244)))

(declare-fun b!61165 () Bool)

(declare-fun lt!25246 () Unit!1621)

(declare-fun lt!25247 () Unit!1621)

(assert (=> b!61165 (= lt!25246 lt!25247)))

(declare-fun lt!25245 () (_ BitVec 64))

(declare-fun lt!25248 () (_ BitVec 64))

(declare-fun lt!25250 () V!2857)

(declare-fun lt!25249 () ListLongMap!1361)

(assert (=> b!61165 (not (contains!687 (+!82 lt!25249 (tuple2!2049 lt!25245 lt!25250)) lt!25248))))

(assert (=> b!61165 (= lt!25247 (addStillNotContains!17 lt!25249 lt!25245 lt!25250 lt!25248))))

(assert (=> b!61165 (= lt!25248 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!61165 (= lt!25250 (get!1083 (select (arr!1781 (_values!2049 newMap!16)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!61165 (= lt!25245 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!4705 () ListLongMap!1361)

(assert (=> b!61165 (= lt!25249 call!4705)))

(declare-fun e!40199 () ListLongMap!1361)

(assert (=> b!61165 (= e!40199 (+!82 call!4705 (tuple2!2049 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) (get!1083 (select (arr!1781 (_values!2049 newMap!16)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!4702 () Bool)

(assert (=> bm!4702 (= call!4705 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2066 newMap!16)))))

(declare-fun b!61166 () Bool)

(declare-fun e!40195 () Bool)

(assert (=> b!61166 (= e!40195 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61166 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!61167 () Bool)

(assert (=> b!61167 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> b!61167 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (_values!2049 newMap!16))))))

(assert (=> b!61167 (= e!40201 (= (apply!67 lt!25244 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (_values!2049 newMap!16)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!61168 () Bool)

(assert (=> b!61168 (= e!40198 e!40199)))

(declare-fun c!7990 () Bool)

(assert (=> b!61168 (= c!7990 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61169 () Bool)

(assert (=> b!61169 (= e!40196 e!40200)))

(declare-fun c!7988 () Bool)

(assert (=> b!61169 (= c!7988 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61170 () Bool)

(assert (=> b!61170 (= e!40197 e!40196)))

(declare-fun c!7989 () Bool)

(assert (=> b!61170 (= c!7989 e!40195)))

(declare-fun res!33744 () Bool)

(assert (=> b!61170 (=> (not res!33744) (not e!40195))))

(assert (=> b!61170 (= res!33744 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61171 () Bool)

(assert (=> b!61171 (= e!40199 call!4705)))

(declare-fun b!61172 () Bool)

(assert (=> b!61172 (= e!40200 (= lt!25244 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2066 newMap!16))))))

(declare-fun b!61173 () Bool)

(assert (=> b!61173 (= e!40198 (ListLongMap!1362 Nil!1440))))

(assert (= (and d!12049 c!7991) b!61173))

(assert (= (and d!12049 (not c!7991)) b!61168))

(assert (= (and b!61168 c!7990) b!61165))

(assert (= (and b!61168 (not c!7990)) b!61171))

(assert (= (or b!61165 b!61171) bm!4702))

(assert (= (and d!12049 res!33743) b!61162))

(assert (= (and b!61162 res!33741) b!61170))

(assert (= (and b!61170 res!33744) b!61166))

(assert (= (and b!61170 c!7989) b!61164))

(assert (= (and b!61170 (not c!7989)) b!61169))

(assert (= (and b!61164 res!33742) b!61167))

(assert (= (and b!61169 c!7988) b!61172))

(assert (= (and b!61169 (not c!7988)) b!61163))

(declare-fun b_lambda!2707 () Bool)

(assert (=> (not b_lambda!2707) (not b!61165)))

(assert (=> b!61165 t!4820))

(declare-fun b_and!3721 () Bool)

(assert (= b_and!3717 (and (=> t!4820 result!2427) b_and!3721)))

(assert (=> b!61165 t!4822))

(declare-fun b_and!3723 () Bool)

(assert (= b_and!3719 (and (=> t!4822 result!2429) b_and!3723)))

(declare-fun b_lambda!2709 () Bool)

(assert (=> (not b_lambda!2709) (not b!61167)))

(assert (=> b!61167 t!4820))

(declare-fun b_and!3725 () Bool)

(assert (= b_and!3721 (and (=> t!4820 result!2427) b_and!3725)))

(assert (=> b!61167 t!4822))

(declare-fun b_and!3727 () Bool)

(assert (= b_and!3723 (and (=> t!4822 result!2429) b_and!3727)))

(declare-fun m!53867 () Bool)

(assert (=> b!61162 m!53867))

(declare-fun m!53869 () Bool)

(assert (=> b!61163 m!53869))

(assert (=> b!61165 m!53389))

(assert (=> b!61165 m!53391))

(assert (=> b!61165 m!53393))

(declare-fun m!53871 () Bool)

(assert (=> b!61165 m!53871))

(declare-fun m!53873 () Bool)

(assert (=> b!61165 m!53873))

(assert (=> b!61165 m!53871))

(declare-fun m!53875 () Bool)

(assert (=> b!61165 m!53875))

(assert (=> b!61165 m!53263))

(assert (=> b!61165 m!53389))

(assert (=> b!61165 m!53391))

(declare-fun m!53877 () Bool)

(assert (=> b!61165 m!53877))

(declare-fun m!53879 () Bool)

(assert (=> b!61172 m!53879))

(assert (=> b!61164 m!53263))

(assert (=> b!61164 m!53263))

(declare-fun m!53881 () Bool)

(assert (=> b!61164 m!53881))

(assert (=> b!61167 m!53263))

(declare-fun m!53883 () Bool)

(assert (=> b!61167 m!53883))

(assert (=> b!61167 m!53389))

(assert (=> b!61167 m!53391))

(assert (=> b!61167 m!53393))

(assert (=> b!61167 m!53263))

(assert (=> b!61167 m!53389))

(assert (=> b!61167 m!53391))

(assert (=> bm!4702 m!53879))

(declare-fun m!53885 () Bool)

(assert (=> d!12049 m!53885))

(assert (=> d!12049 m!53365))

(assert (=> b!61166 m!53263))

(assert (=> b!61166 m!53263))

(assert (=> b!61166 m!53265))

(assert (=> b!61168 m!53263))

(assert (=> b!61168 m!53263))

(assert (=> b!61168 m!53265))

(assert (=> bm!4668 d!12049))

(declare-fun d!12051 () Bool)

(assert (=> d!12051 (= (size!2018 newMap!16) (bvadd (_size!363 newMap!16) (bvsdiv (bvadd (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!61014 d!12051))

(declare-fun d!12053 () Bool)

(declare-fun e!40203 () Bool)

(assert (=> d!12053 e!40203))

(declare-fun res!33745 () Bool)

(assert (=> d!12053 (=> res!33745 e!40203)))

(declare-fun lt!25254 () Bool)

(assert (=> d!12053 (= res!33745 (not lt!25254))))

(declare-fun lt!25252 () Bool)

(assert (=> d!12053 (= lt!25254 lt!25252)))

(declare-fun lt!25251 () Unit!1621)

(declare-fun e!40202 () Unit!1621)

(assert (=> d!12053 (= lt!25251 e!40202)))

(declare-fun c!7992 () Bool)

(assert (=> d!12053 (= c!7992 lt!25252)))

(assert (=> d!12053 (= lt!25252 (containsKey!127 (toList!696 lt!25170) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!12053 (= (contains!687 lt!25170 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) lt!25254)))

(declare-fun b!61174 () Bool)

(declare-fun lt!25253 () Unit!1621)

(assert (=> b!61174 (= e!40202 lt!25253)))

(assert (=> b!61174 (= lt!25253 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25170) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61174 (isDefined!77 (getValueByKey!123 (toList!696 lt!25170) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61175 () Bool)

(declare-fun Unit!1646 () Unit!1621)

(assert (=> b!61175 (= e!40202 Unit!1646)))

(declare-fun b!61176 () Bool)

(assert (=> b!61176 (= e!40203 (isDefined!77 (getValueByKey!123 (toList!696 lt!25170) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!12053 c!7992) b!61174))

(assert (= (and d!12053 (not c!7992)) b!61175))

(assert (= (and d!12053 (not res!33745)) b!61176))

(assert (=> d!12053 m!53263))

(declare-fun m!53887 () Bool)

(assert (=> d!12053 m!53887))

(assert (=> b!61174 m!53263))

(declare-fun m!53889 () Bool)

(assert (=> b!61174 m!53889))

(assert (=> b!61174 m!53263))

(declare-fun m!53891 () Bool)

(assert (=> b!61174 m!53891))

(assert (=> b!61174 m!53891))

(declare-fun m!53893 () Bool)

(assert (=> b!61174 m!53893))

(assert (=> b!61176 m!53263))

(assert (=> b!61176 m!53891))

(assert (=> b!61176 m!53891))

(assert (=> b!61176 m!53893))

(assert (=> b!61063 d!12053))

(declare-fun d!12055 () Bool)

(assert (=> d!12055 (= (get!1086 (getValueByKey!123 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2402 (getValueByKey!123 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!12023 d!12055))

(declare-fun d!12057 () Bool)

(declare-fun c!7993 () Bool)

(assert (=> d!12057 (= c!7993 (and ((_ is Cons!1439) (toList!696 lt!24825)) (= (_1!1035 (h!2021 (toList!696 lt!24825))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!40204 () Option!129)

(assert (=> d!12057 (= (getValueByKey!123 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000) e!40204)))

(declare-fun b!61180 () Bool)

(declare-fun e!40205 () Option!129)

(assert (=> b!61180 (= e!40205 None!127)))

(declare-fun b!61177 () Bool)

(assert (=> b!61177 (= e!40204 (Some!128 (_2!1035 (h!2021 (toList!696 lt!24825)))))))

(declare-fun b!61179 () Bool)

(assert (=> b!61179 (= e!40205 (getValueByKey!123 (t!4808 (toList!696 lt!24825)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61178 () Bool)

(assert (=> b!61178 (= e!40204 e!40205)))

(declare-fun c!7994 () Bool)

(assert (=> b!61178 (= c!7994 (and ((_ is Cons!1439) (toList!696 lt!24825)) (not (= (_1!1035 (h!2021 (toList!696 lt!24825))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!12057 c!7993) b!61177))

(assert (= (and d!12057 (not c!7993)) b!61178))

(assert (= (and b!61178 c!7994) b!61179))

(assert (= (and b!61178 (not c!7994)) b!61180))

(declare-fun m!53895 () Bool)

(assert (=> b!61179 m!53895))

(assert (=> d!12023 d!12057))

(declare-fun lt!25255 () Bool)

(declare-fun d!12059 () Bool)

(assert (=> d!12059 (= lt!25255 (select (content!66 (toList!696 lt!25226)) (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun e!40207 () Bool)

(assert (=> d!12059 (= lt!25255 e!40207)))

(declare-fun res!33746 () Bool)

(assert (=> d!12059 (=> (not res!33746) (not e!40207))))

(assert (=> d!12059 (= res!33746 ((_ is Cons!1439) (toList!696 lt!25226)))))

(assert (=> d!12059 (= (contains!689 (toList!696 lt!25226) (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!25255)))

(declare-fun b!61181 () Bool)

(declare-fun e!40206 () Bool)

(assert (=> b!61181 (= e!40207 e!40206)))

(declare-fun res!33747 () Bool)

(assert (=> b!61181 (=> res!33747 e!40206)))

(assert (=> b!61181 (= res!33747 (= (h!2021 (toList!696 lt!25226)) (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!61182 () Bool)

(assert (=> b!61182 (= e!40206 (contains!689 (t!4808 (toList!696 lt!25226)) (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(assert (= (and d!12059 res!33746) b!61181))

(assert (= (and b!61181 (not res!33747)) b!61182))

(declare-fun m!53897 () Bool)

(assert (=> d!12059 m!53897))

(declare-fun m!53899 () Bool)

(assert (=> d!12059 m!53899))

(declare-fun m!53901 () Bool)

(assert (=> b!61182 m!53901))

(assert (=> b!61122 d!12059))

(declare-fun d!12061 () Bool)

(assert (=> d!12061 (= (get!1086 (getValueByKey!123 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2402 (getValueByKey!123 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!11947 d!12061))

(declare-fun d!12063 () Bool)

(declare-fun c!7995 () Bool)

(assert (=> d!12063 (= c!7995 (and ((_ is Cons!1439) (toList!696 lt!24825)) (= (_1!1035 (h!2021 (toList!696 lt!24825))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!40208 () Option!129)

(assert (=> d!12063 (= (getValueByKey!123 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000) e!40208)))

(declare-fun b!61186 () Bool)

(declare-fun e!40209 () Option!129)

(assert (=> b!61186 (= e!40209 None!127)))

(declare-fun b!61183 () Bool)

(assert (=> b!61183 (= e!40208 (Some!128 (_2!1035 (h!2021 (toList!696 lt!24825)))))))

(declare-fun b!61185 () Bool)

(assert (=> b!61185 (= e!40209 (getValueByKey!123 (t!4808 (toList!696 lt!24825)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61184 () Bool)

(assert (=> b!61184 (= e!40208 e!40209)))

(declare-fun c!7996 () Bool)

(assert (=> b!61184 (= c!7996 (and ((_ is Cons!1439) (toList!696 lt!24825)) (not (= (_1!1035 (h!2021 (toList!696 lt!24825))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!12063 c!7995) b!61183))

(assert (= (and d!12063 (not c!7995)) b!61184))

(assert (= (and b!61184 c!7996) b!61185))

(assert (= (and b!61184 (not c!7996)) b!61186))

(declare-fun m!53903 () Bool)

(assert (=> b!61185 m!53903))

(assert (=> d!11947 d!12063))

(declare-fun d!12065 () Bool)

(assert (=> d!12065 (= (get!1086 (getValueByKey!123 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2402 (getValueByKey!123 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!11943 d!12065))

(declare-fun d!12067 () Bool)

(declare-fun c!7997 () Bool)

(assert (=> d!12067 (= c!7997 (and ((_ is Cons!1439) (toList!696 lt!24825)) (= (_1!1035 (h!2021 (toList!696 lt!24825))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!40210 () Option!129)

(assert (=> d!12067 (= (getValueByKey!123 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!40210)))

(declare-fun b!61190 () Bool)

(declare-fun e!40211 () Option!129)

(assert (=> b!61190 (= e!40211 None!127)))

(declare-fun b!61187 () Bool)

(assert (=> b!61187 (= e!40210 (Some!128 (_2!1035 (h!2021 (toList!696 lt!24825)))))))

(declare-fun b!61189 () Bool)

(assert (=> b!61189 (= e!40211 (getValueByKey!123 (t!4808 (toList!696 lt!24825)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!61188 () Bool)

(assert (=> b!61188 (= e!40210 e!40211)))

(declare-fun c!7998 () Bool)

(assert (=> b!61188 (= c!7998 (and ((_ is Cons!1439) (toList!696 lt!24825)) (not (= (_1!1035 (h!2021 (toList!696 lt!24825))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!12067 c!7997) b!61187))

(assert (= (and d!12067 (not c!7997)) b!61188))

(assert (= (and b!61188 c!7998) b!61189))

(assert (= (and b!61188 (not c!7998)) b!61190))

(assert (=> b!61189 m!53111))

(declare-fun m!53905 () Bool)

(assert (=> b!61189 m!53905))

(assert (=> d!11943 d!12067))

(declare-fun d!12069 () Bool)

(declare-fun res!33748 () Bool)

(declare-fun e!40212 () Bool)

(assert (=> d!12069 (=> res!33748 e!40212)))

(assert (=> d!12069 (= res!33748 (and ((_ is Cons!1439) (toList!696 call!4636)) (= (_1!1035 (h!2021 (toList!696 call!4636))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(assert (=> d!12069 (= (containsKey!127 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) e!40212)))

(declare-fun b!61191 () Bool)

(declare-fun e!40213 () Bool)

(assert (=> b!61191 (= e!40212 e!40213)))

(declare-fun res!33749 () Bool)

(assert (=> b!61191 (=> (not res!33749) (not e!40213))))

(assert (=> b!61191 (= res!33749 (and (or (not ((_ is Cons!1439) (toList!696 call!4636))) (bvsle (_1!1035 (h!2021 (toList!696 call!4636))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))) ((_ is Cons!1439) (toList!696 call!4636)) (bvslt (_1!1035 (h!2021 (toList!696 call!4636))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(declare-fun b!61192 () Bool)

(assert (=> b!61192 (= e!40213 (containsKey!127 (t!4808 (toList!696 call!4636)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (= (and d!12069 (not res!33748)) b!61191))

(assert (= (and b!61191 res!33749) b!61192))

(assert (=> b!61192 m!52977))

(declare-fun m!53907 () Bool)

(assert (=> b!61192 m!53907))

(assert (=> d!11941 d!12069))

(declare-fun d!12071 () Bool)

(declare-fun e!40214 () Bool)

(assert (=> d!12071 e!40214))

(declare-fun res!33750 () Bool)

(assert (=> d!12071 (=> (not res!33750) (not e!40214))))

(declare-fun lt!25258 () ListLongMap!1361)

(assert (=> d!12071 (= res!33750 (contains!687 lt!25258 (_1!1035 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16)))))))

(declare-fun lt!25256 () List!1443)

(assert (=> d!12071 (= lt!25258 (ListLongMap!1362 lt!25256))))

(declare-fun lt!25257 () Unit!1621)

(declare-fun lt!25259 () Unit!1621)

(assert (=> d!12071 (= lt!25257 lt!25259)))

(assert (=> d!12071 (= (getValueByKey!123 lt!25256 (_1!1035 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12071 (= lt!25259 (lemmaContainsTupThenGetReturnValue!43 lt!25256 (_1!1035 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12071 (= lt!25256 (insertStrictlySorted!46 (toList!696 lt!25160) (_1!1035 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12071 (= (+!82 lt!25160 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16))) lt!25258)))

(declare-fun b!61193 () Bool)

(declare-fun res!33751 () Bool)

(assert (=> b!61193 (=> (not res!33751) (not e!40214))))

(assert (=> b!61193 (= res!33751 (= (getValueByKey!123 (toList!696 lt!25258) (_1!1035 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16))))))))

(declare-fun b!61194 () Bool)

(assert (=> b!61194 (= e!40214 (contains!689 (toList!696 lt!25258) (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16))))))

(assert (= (and d!12071 res!33750) b!61193))

(assert (= (and b!61193 res!33751) b!61194))

(declare-fun m!53909 () Bool)

(assert (=> d!12071 m!53909))

(declare-fun m!53911 () Bool)

(assert (=> d!12071 m!53911))

(declare-fun m!53913 () Bool)

(assert (=> d!12071 m!53913))

(declare-fun m!53915 () Bool)

(assert (=> d!12071 m!53915))

(declare-fun m!53917 () Bool)

(assert (=> b!61193 m!53917))

(declare-fun m!53919 () Bool)

(assert (=> b!61194 m!53919))

(assert (=> b!61057 d!12071))

(declare-fun d!12073 () Bool)

(assert (=> d!12073 (= (apply!67 lt!25169 lt!25174) (get!1086 (getValueByKey!123 (toList!696 lt!25169) lt!25174)))))

(declare-fun bs!2649 () Bool)

(assert (= bs!2649 d!12073))

(declare-fun m!53921 () Bool)

(assert (=> bs!2649 m!53921))

(assert (=> bs!2649 m!53921))

(declare-fun m!53923 () Bool)

(assert (=> bs!2649 m!53923))

(assert (=> b!61057 d!12073))

(declare-fun d!12075 () Bool)

(assert (=> d!12075 (= (apply!67 (+!82 lt!25169 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16))) lt!25174) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!25169 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16)))) lt!25174)))))

(declare-fun bs!2650 () Bool)

(assert (= bs!2650 d!12075))

(declare-fun m!53925 () Bool)

(assert (=> bs!2650 m!53925))

(assert (=> bs!2650 m!53925))

(declare-fun m!53927 () Bool)

(assert (=> bs!2650 m!53927))

(assert (=> b!61057 d!12075))

(declare-fun b!61195 () Bool)

(declare-fun res!33752 () Bool)

(declare-fun e!40217 () Bool)

(assert (=> b!61195 (=> (not res!33752) (not e!40217))))

(declare-fun lt!25260 () ListLongMap!1361)

(assert (=> b!61195 (= res!33752 (not (contains!687 lt!25260 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!61196 () Bool)

(declare-fun e!40220 () Bool)

(assert (=> b!61196 (= e!40220 (isEmpty!300 lt!25260))))

(declare-fun b!61197 () Bool)

(declare-fun e!40216 () Bool)

(declare-fun e!40221 () Bool)

(assert (=> b!61197 (= e!40216 e!40221)))

(assert (=> b!61197 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun res!33753 () Bool)

(assert (=> b!61197 (= res!33753 (contains!687 lt!25260 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61197 (=> (not res!33753) (not e!40221))))

(declare-fun d!12077 () Bool)

(assert (=> d!12077 e!40217))

(declare-fun res!33754 () Bool)

(assert (=> d!12077 (=> (not res!33754) (not e!40217))))

(assert (=> d!12077 (= res!33754 (not (contains!687 lt!25260 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!40218 () ListLongMap!1361)

(assert (=> d!12077 (= lt!25260 e!40218)))

(declare-fun c!8002 () Bool)

(assert (=> d!12077 (= c!8002 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12077 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12077 (= (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite c!7887 (_values!2049 newMap!16) lt!24922) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25260)))

(declare-fun b!61198 () Bool)

(declare-fun lt!25262 () Unit!1621)

(declare-fun lt!25263 () Unit!1621)

(assert (=> b!61198 (= lt!25262 lt!25263)))

(declare-fun lt!25261 () (_ BitVec 64))

(declare-fun lt!25264 () (_ BitVec 64))

(declare-fun lt!25266 () V!2857)

(declare-fun lt!25265 () ListLongMap!1361)

(assert (=> b!61198 (not (contains!687 (+!82 lt!25265 (tuple2!2049 lt!25261 lt!25266)) lt!25264))))

(assert (=> b!61198 (= lt!25263 (addStillNotContains!17 lt!25265 lt!25261 lt!25266 lt!25264))))

(assert (=> b!61198 (= lt!25264 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!61198 (= lt!25266 (get!1083 (select (arr!1781 (ite c!7887 (_values!2049 newMap!16) lt!24922)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!61198 (= lt!25261 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!4706 () ListLongMap!1361)

(assert (=> b!61198 (= lt!25265 call!4706)))

(declare-fun e!40219 () ListLongMap!1361)

(assert (=> b!61198 (= e!40219 (+!82 call!4706 (tuple2!2049 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) (get!1083 (select (arr!1781 (ite c!7887 (_values!2049 newMap!16) lt!24922)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!4703 () Bool)

(assert (=> bm!4703 (= call!4706 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite c!7887 (_values!2049 newMap!16) lt!24922) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2066 newMap!16)))))

(declare-fun b!61199 () Bool)

(declare-fun e!40215 () Bool)

(assert (=> b!61199 (= e!40215 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61199 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!61200 () Bool)

(assert (=> b!61200 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> b!61200 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (ite c!7887 (_values!2049 newMap!16) lt!24922))))))

(assert (=> b!61200 (= e!40221 (= (apply!67 lt!25260 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (ite c!7887 (_values!2049 newMap!16) lt!24922)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!61201 () Bool)

(assert (=> b!61201 (= e!40218 e!40219)))

(declare-fun c!8001 () Bool)

(assert (=> b!61201 (= c!8001 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61202 () Bool)

(assert (=> b!61202 (= e!40216 e!40220)))

(declare-fun c!7999 () Bool)

(assert (=> b!61202 (= c!7999 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61203 () Bool)

(assert (=> b!61203 (= e!40217 e!40216)))

(declare-fun c!8000 () Bool)

(assert (=> b!61203 (= c!8000 e!40215)))

(declare-fun res!33755 () Bool)

(assert (=> b!61203 (=> (not res!33755) (not e!40215))))

(assert (=> b!61203 (= res!33755 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61204 () Bool)

(assert (=> b!61204 (= e!40219 call!4706)))

(declare-fun b!61205 () Bool)

(assert (=> b!61205 (= e!40220 (= lt!25260 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite c!7887 (_values!2049 newMap!16) lt!24922) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2066 newMap!16))))))

(declare-fun b!61206 () Bool)

(assert (=> b!61206 (= e!40218 (ListLongMap!1362 Nil!1440))))

(assert (= (and d!12077 c!8002) b!61206))

(assert (= (and d!12077 (not c!8002)) b!61201))

(assert (= (and b!61201 c!8001) b!61198))

(assert (= (and b!61201 (not c!8001)) b!61204))

(assert (= (or b!61198 b!61204) bm!4703))

(assert (= (and d!12077 res!33754) b!61195))

(assert (= (and b!61195 res!33752) b!61203))

(assert (= (and b!61203 res!33755) b!61199))

(assert (= (and b!61203 c!8000) b!61197))

(assert (= (and b!61203 (not c!8000)) b!61202))

(assert (= (and b!61197 res!33753) b!61200))

(assert (= (and b!61202 c!7999) b!61205))

(assert (= (and b!61202 (not c!7999)) b!61196))

(declare-fun b_lambda!2711 () Bool)

(assert (=> (not b_lambda!2711) (not b!61198)))

(assert (=> b!61198 t!4820))

(declare-fun b_and!3729 () Bool)

(assert (= b_and!3725 (and (=> t!4820 result!2427) b_and!3729)))

(assert (=> b!61198 t!4822))

(declare-fun b_and!3731 () Bool)

(assert (= b_and!3727 (and (=> t!4822 result!2429) b_and!3731)))

(declare-fun b_lambda!2713 () Bool)

(assert (=> (not b_lambda!2713) (not b!61200)))

(assert (=> b!61200 t!4820))

(declare-fun b_and!3733 () Bool)

(assert (= b_and!3729 (and (=> t!4820 result!2427) b_and!3733)))

(assert (=> b!61200 t!4822))

(declare-fun b_and!3735 () Bool)

(assert (= b_and!3731 (and (=> t!4822 result!2429) b_and!3735)))

(declare-fun m!53929 () Bool)

(assert (=> b!61195 m!53929))

(declare-fun m!53931 () Bool)

(assert (=> b!61196 m!53931))

(assert (=> b!61198 m!53587))

(assert (=> b!61198 m!53391))

(assert (=> b!61198 m!53589))

(declare-fun m!53933 () Bool)

(assert (=> b!61198 m!53933))

(declare-fun m!53935 () Bool)

(assert (=> b!61198 m!53935))

(assert (=> b!61198 m!53933))

(declare-fun m!53937 () Bool)

(assert (=> b!61198 m!53937))

(assert (=> b!61198 m!53263))

(assert (=> b!61198 m!53587))

(assert (=> b!61198 m!53391))

(declare-fun m!53939 () Bool)

(assert (=> b!61198 m!53939))

(declare-fun m!53941 () Bool)

(assert (=> b!61205 m!53941))

(assert (=> b!61197 m!53263))

(assert (=> b!61197 m!53263))

(declare-fun m!53943 () Bool)

(assert (=> b!61197 m!53943))

(assert (=> b!61200 m!53263))

(declare-fun m!53945 () Bool)

(assert (=> b!61200 m!53945))

(assert (=> b!61200 m!53587))

(assert (=> b!61200 m!53391))

(assert (=> b!61200 m!53589))

(assert (=> b!61200 m!53263))

(assert (=> b!61200 m!53587))

(assert (=> b!61200 m!53391))

(assert (=> bm!4703 m!53941))

(declare-fun m!53947 () Bool)

(assert (=> d!12077 m!53947))

(assert (=> d!12077 m!53365))

(assert (=> b!61199 m!53263))

(assert (=> b!61199 m!53263))

(assert (=> b!61199 m!53265))

(assert (=> b!61201 m!53263))

(assert (=> b!61201 m!53263))

(assert (=> b!61201 m!53265))

(assert (=> b!61057 d!12077))

(declare-fun d!12079 () Bool)

(declare-fun e!40223 () Bool)

(assert (=> d!12079 e!40223))

(declare-fun res!33756 () Bool)

(assert (=> d!12079 (=> res!33756 e!40223)))

(declare-fun lt!25270 () Bool)

(assert (=> d!12079 (= res!33756 (not lt!25270))))

(declare-fun lt!25268 () Bool)

(assert (=> d!12079 (= lt!25270 lt!25268)))

(declare-fun lt!25267 () Unit!1621)

(declare-fun e!40222 () Unit!1621)

(assert (=> d!12079 (= lt!25267 e!40222)))

(declare-fun c!8003 () Bool)

(assert (=> d!12079 (= c!8003 lt!25268)))

(assert (=> d!12079 (= lt!25268 (containsKey!127 (toList!696 (+!82 lt!25160 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16)))) lt!25154))))

(assert (=> d!12079 (= (contains!687 (+!82 lt!25160 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16))) lt!25154) lt!25270)))

(declare-fun b!61207 () Bool)

(declare-fun lt!25269 () Unit!1621)

(assert (=> b!61207 (= e!40222 lt!25269)))

(assert (=> b!61207 (= lt!25269 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 (+!82 lt!25160 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16)))) lt!25154))))

(assert (=> b!61207 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!25160 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16)))) lt!25154))))

(declare-fun b!61208 () Bool)

(declare-fun Unit!1647 () Unit!1621)

(assert (=> b!61208 (= e!40222 Unit!1647)))

(declare-fun b!61209 () Bool)

(assert (=> b!61209 (= e!40223 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!25160 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16)))) lt!25154)))))

(assert (= (and d!12079 c!8003) b!61207))

(assert (= (and d!12079 (not c!8003)) b!61208))

(assert (= (and d!12079 (not res!33756)) b!61209))

(declare-fun m!53949 () Bool)

(assert (=> d!12079 m!53949))

(declare-fun m!53951 () Bool)

(assert (=> b!61207 m!53951))

(declare-fun m!53953 () Bool)

(assert (=> b!61207 m!53953))

(assert (=> b!61207 m!53953))

(declare-fun m!53955 () Bool)

(assert (=> b!61207 m!53955))

(assert (=> b!61209 m!53953))

(assert (=> b!61209 m!53953))

(assert (=> b!61209 m!53955))

(assert (=> b!61057 d!12079))

(declare-fun d!12081 () Bool)

(assert (=> d!12081 (= (apply!67 (+!82 lt!25164 (tuple2!2049 lt!25168 (minValue!1980 newMap!16))) lt!25171) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!25164 (tuple2!2049 lt!25168 (minValue!1980 newMap!16)))) lt!25171)))))

(declare-fun bs!2651 () Bool)

(assert (= bs!2651 d!12081))

(declare-fun m!53957 () Bool)

(assert (=> bs!2651 m!53957))

(assert (=> bs!2651 m!53957))

(declare-fun m!53959 () Bool)

(assert (=> bs!2651 m!53959))

(assert (=> b!61057 d!12081))

(declare-fun d!12083 () Bool)

(assert (=> d!12083 (= (apply!67 (+!82 lt!25169 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16))) lt!25174) (apply!67 lt!25169 lt!25174))))

(declare-fun lt!25271 () Unit!1621)

(assert (=> d!12083 (= lt!25271 (choose!330 lt!25169 lt!25159 (zeroValue!1980 newMap!16) lt!25174))))

(declare-fun e!40224 () Bool)

(assert (=> d!12083 e!40224))

(declare-fun res!33757 () Bool)

(assert (=> d!12083 (=> (not res!33757) (not e!40224))))

(assert (=> d!12083 (= res!33757 (contains!687 lt!25169 lt!25174))))

(assert (=> d!12083 (= (addApplyDifferent!43 lt!25169 lt!25159 (zeroValue!1980 newMap!16) lt!25174) lt!25271)))

(declare-fun b!61210 () Bool)

(assert (=> b!61210 (= e!40224 (not (= lt!25174 lt!25159)))))

(assert (= (and d!12083 res!33757) b!61210))

(assert (=> d!12083 m!53599))

(assert (=> d!12083 m!53617))

(declare-fun m!53961 () Bool)

(assert (=> d!12083 m!53961))

(assert (=> d!12083 m!53599))

(assert (=> d!12083 m!53605))

(declare-fun m!53963 () Bool)

(assert (=> d!12083 m!53963))

(assert (=> b!61057 d!12083))

(declare-fun d!12085 () Bool)

(declare-fun e!40225 () Bool)

(assert (=> d!12085 e!40225))

(declare-fun res!33758 () Bool)

(assert (=> d!12085 (=> (not res!33758) (not e!40225))))

(declare-fun lt!25274 () ListLongMap!1361)

(assert (=> d!12085 (= res!33758 (contains!687 lt!25274 (_1!1035 (tuple2!2049 lt!25165 (minValue!1980 newMap!16)))))))

(declare-fun lt!25272 () List!1443)

(assert (=> d!12085 (= lt!25274 (ListLongMap!1362 lt!25272))))

(declare-fun lt!25273 () Unit!1621)

(declare-fun lt!25275 () Unit!1621)

(assert (=> d!12085 (= lt!25273 lt!25275)))

(assert (=> d!12085 (= (getValueByKey!123 lt!25272 (_1!1035 (tuple2!2049 lt!25165 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25165 (minValue!1980 newMap!16)))))))

(assert (=> d!12085 (= lt!25275 (lemmaContainsTupThenGetReturnValue!43 lt!25272 (_1!1035 (tuple2!2049 lt!25165 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25165 (minValue!1980 newMap!16)))))))

(assert (=> d!12085 (= lt!25272 (insertStrictlySorted!46 (toList!696 lt!25172) (_1!1035 (tuple2!2049 lt!25165 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25165 (minValue!1980 newMap!16)))))))

(assert (=> d!12085 (= (+!82 lt!25172 (tuple2!2049 lt!25165 (minValue!1980 newMap!16))) lt!25274)))

(declare-fun b!61211 () Bool)

(declare-fun res!33759 () Bool)

(assert (=> b!61211 (=> (not res!33759) (not e!40225))))

(assert (=> b!61211 (= res!33759 (= (getValueByKey!123 (toList!696 lt!25274) (_1!1035 (tuple2!2049 lt!25165 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25165 (minValue!1980 newMap!16))))))))

(declare-fun b!61212 () Bool)

(assert (=> b!61212 (= e!40225 (contains!689 (toList!696 lt!25274) (tuple2!2049 lt!25165 (minValue!1980 newMap!16))))))

(assert (= (and d!12085 res!33758) b!61211))

(assert (= (and b!61211 res!33759) b!61212))

(declare-fun m!53965 () Bool)

(assert (=> d!12085 m!53965))

(declare-fun m!53967 () Bool)

(assert (=> d!12085 m!53967))

(declare-fun m!53969 () Bool)

(assert (=> d!12085 m!53969))

(declare-fun m!53971 () Bool)

(assert (=> d!12085 m!53971))

(declare-fun m!53973 () Bool)

(assert (=> b!61211 m!53973))

(declare-fun m!53975 () Bool)

(assert (=> b!61212 m!53975))

(assert (=> b!61057 d!12085))

(declare-fun d!12087 () Bool)

(assert (=> d!12087 (= (apply!67 lt!25164 lt!25171) (get!1086 (getValueByKey!123 (toList!696 lt!25164) lt!25171)))))

(declare-fun bs!2652 () Bool)

(assert (= bs!2652 d!12087))

(declare-fun m!53977 () Bool)

(assert (=> bs!2652 m!53977))

(assert (=> bs!2652 m!53977))

(declare-fun m!53979 () Bool)

(assert (=> bs!2652 m!53979))

(assert (=> b!61057 d!12087))

(declare-fun d!12089 () Bool)

(declare-fun e!40226 () Bool)

(assert (=> d!12089 e!40226))

(declare-fun res!33760 () Bool)

(assert (=> d!12089 (=> (not res!33760) (not e!40226))))

(declare-fun lt!25278 () ListLongMap!1361)

(assert (=> d!12089 (= res!33760 (contains!687 lt!25278 (_1!1035 (tuple2!2049 lt!25168 (minValue!1980 newMap!16)))))))

(declare-fun lt!25276 () List!1443)

(assert (=> d!12089 (= lt!25278 (ListLongMap!1362 lt!25276))))

(declare-fun lt!25277 () Unit!1621)

(declare-fun lt!25279 () Unit!1621)

(assert (=> d!12089 (= lt!25277 lt!25279)))

(assert (=> d!12089 (= (getValueByKey!123 lt!25276 (_1!1035 (tuple2!2049 lt!25168 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25168 (minValue!1980 newMap!16)))))))

(assert (=> d!12089 (= lt!25279 (lemmaContainsTupThenGetReturnValue!43 lt!25276 (_1!1035 (tuple2!2049 lt!25168 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25168 (minValue!1980 newMap!16)))))))

(assert (=> d!12089 (= lt!25276 (insertStrictlySorted!46 (toList!696 lt!25164) (_1!1035 (tuple2!2049 lt!25168 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25168 (minValue!1980 newMap!16)))))))

(assert (=> d!12089 (= (+!82 lt!25164 (tuple2!2049 lt!25168 (minValue!1980 newMap!16))) lt!25278)))

(declare-fun b!61213 () Bool)

(declare-fun res!33761 () Bool)

(assert (=> b!61213 (=> (not res!33761) (not e!40226))))

(assert (=> b!61213 (= res!33761 (= (getValueByKey!123 (toList!696 lt!25278) (_1!1035 (tuple2!2049 lt!25168 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25168 (minValue!1980 newMap!16))))))))

(declare-fun b!61214 () Bool)

(assert (=> b!61214 (= e!40226 (contains!689 (toList!696 lt!25278) (tuple2!2049 lt!25168 (minValue!1980 newMap!16))))))

(assert (= (and d!12089 res!33760) b!61213))

(assert (= (and b!61213 res!33761) b!61214))

(declare-fun m!53981 () Bool)

(assert (=> d!12089 m!53981))

(declare-fun m!53983 () Bool)

(assert (=> d!12089 m!53983))

(declare-fun m!53985 () Bool)

(assert (=> d!12089 m!53985))

(declare-fun m!53987 () Bool)

(assert (=> d!12089 m!53987))

(declare-fun m!53989 () Bool)

(assert (=> b!61213 m!53989))

(declare-fun m!53991 () Bool)

(assert (=> b!61214 m!53991))

(assert (=> b!61057 d!12089))

(declare-fun d!12091 () Bool)

(assert (=> d!12091 (= (apply!67 (+!82 lt!25172 (tuple2!2049 lt!25165 (minValue!1980 newMap!16))) lt!25163) (apply!67 lt!25172 lt!25163))))

(declare-fun lt!25280 () Unit!1621)

(assert (=> d!12091 (= lt!25280 (choose!330 lt!25172 lt!25165 (minValue!1980 newMap!16) lt!25163))))

(declare-fun e!40227 () Bool)

(assert (=> d!12091 e!40227))

(declare-fun res!33762 () Bool)

(assert (=> d!12091 (=> (not res!33762) (not e!40227))))

(assert (=> d!12091 (= res!33762 (contains!687 lt!25172 lt!25163))))

(assert (=> d!12091 (= (addApplyDifferent!43 lt!25172 lt!25165 (minValue!1980 newMap!16) lt!25163) lt!25280)))

(declare-fun b!61215 () Bool)

(assert (=> b!61215 (= e!40227 (not (= lt!25163 lt!25165)))))

(assert (= (and d!12091 res!33762) b!61215))

(assert (=> d!12091 m!53595))

(assert (=> d!12091 m!53621))

(declare-fun m!53993 () Bool)

(assert (=> d!12091 m!53993))

(assert (=> d!12091 m!53595))

(assert (=> d!12091 m!53613))

(declare-fun m!53995 () Bool)

(assert (=> d!12091 m!53995))

(assert (=> b!61057 d!12091))

(declare-fun d!12093 () Bool)

(declare-fun e!40228 () Bool)

(assert (=> d!12093 e!40228))

(declare-fun res!33763 () Bool)

(assert (=> d!12093 (=> (not res!33763) (not e!40228))))

(declare-fun lt!25283 () ListLongMap!1361)

(assert (=> d!12093 (= res!33763 (contains!687 lt!25283 (_1!1035 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16)))))))

(declare-fun lt!25281 () List!1443)

(assert (=> d!12093 (= lt!25283 (ListLongMap!1362 lt!25281))))

(declare-fun lt!25282 () Unit!1621)

(declare-fun lt!25284 () Unit!1621)

(assert (=> d!12093 (= lt!25282 lt!25284)))

(assert (=> d!12093 (= (getValueByKey!123 lt!25281 (_1!1035 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12093 (= lt!25284 (lemmaContainsTupThenGetReturnValue!43 lt!25281 (_1!1035 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12093 (= lt!25281 (insertStrictlySorted!46 (toList!696 lt!25169) (_1!1035 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12093 (= (+!82 lt!25169 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16))) lt!25283)))

(declare-fun b!61216 () Bool)

(declare-fun res!33764 () Bool)

(assert (=> b!61216 (=> (not res!33764) (not e!40228))))

(assert (=> b!61216 (= res!33764 (= (getValueByKey!123 (toList!696 lt!25283) (_1!1035 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16))))))))

(declare-fun b!61217 () Bool)

(assert (=> b!61217 (= e!40228 (contains!689 (toList!696 lt!25283) (tuple2!2049 lt!25159 (zeroValue!1980 newMap!16))))))

(assert (= (and d!12093 res!33763) b!61216))

(assert (= (and b!61216 res!33764) b!61217))

(declare-fun m!53997 () Bool)

(assert (=> d!12093 m!53997))

(declare-fun m!53999 () Bool)

(assert (=> d!12093 m!53999))

(declare-fun m!54001 () Bool)

(assert (=> d!12093 m!54001))

(declare-fun m!54003 () Bool)

(assert (=> d!12093 m!54003))

(declare-fun m!54005 () Bool)

(assert (=> b!61216 m!54005))

(declare-fun m!54007 () Bool)

(assert (=> b!61217 m!54007))

(assert (=> b!61057 d!12093))

(declare-fun d!12095 () Bool)

(assert (=> d!12095 (= (apply!67 (+!82 lt!25164 (tuple2!2049 lt!25168 (minValue!1980 newMap!16))) lt!25171) (apply!67 lt!25164 lt!25171))))

(declare-fun lt!25285 () Unit!1621)

(assert (=> d!12095 (= lt!25285 (choose!330 lt!25164 lt!25168 (minValue!1980 newMap!16) lt!25171))))

(declare-fun e!40229 () Bool)

(assert (=> d!12095 e!40229))

(declare-fun res!33765 () Bool)

(assert (=> d!12095 (=> (not res!33765) (not e!40229))))

(assert (=> d!12095 (= res!33765 (contains!687 lt!25164 lt!25171))))

(assert (=> d!12095 (= (addApplyDifferent!43 lt!25164 lt!25168 (minValue!1980 newMap!16) lt!25171) lt!25285)))

(declare-fun b!61218 () Bool)

(assert (=> b!61218 (= e!40229 (not (= lt!25171 lt!25168)))))

(assert (= (and d!12095 res!33765) b!61218))

(assert (=> d!12095 m!53615))

(assert (=> d!12095 m!53607))

(declare-fun m!54009 () Bool)

(assert (=> d!12095 m!54009))

(assert (=> d!12095 m!53615))

(assert (=> d!12095 m!53619))

(declare-fun m!54011 () Bool)

(assert (=> d!12095 m!54011))

(assert (=> b!61057 d!12095))

(declare-fun d!12097 () Bool)

(assert (=> d!12097 (= (apply!67 lt!25172 lt!25163) (get!1086 (getValueByKey!123 (toList!696 lt!25172) lt!25163)))))

(declare-fun bs!2653 () Bool)

(assert (= bs!2653 d!12097))

(declare-fun m!54013 () Bool)

(assert (=> bs!2653 m!54013))

(assert (=> bs!2653 m!54013))

(declare-fun m!54015 () Bool)

(assert (=> bs!2653 m!54015))

(assert (=> b!61057 d!12097))

(declare-fun d!12099 () Bool)

(assert (=> d!12099 (contains!687 (+!82 lt!25160 (tuple2!2049 lt!25158 (zeroValue!1980 newMap!16))) lt!25154)))

(declare-fun lt!25286 () Unit!1621)

(assert (=> d!12099 (= lt!25286 (choose!331 lt!25160 lt!25158 (zeroValue!1980 newMap!16) lt!25154))))

(assert (=> d!12099 (contains!687 lt!25160 lt!25154)))

(assert (=> d!12099 (= (addStillContains!43 lt!25160 lt!25158 (zeroValue!1980 newMap!16) lt!25154) lt!25286)))

(declare-fun bs!2654 () Bool)

(assert (= bs!2654 d!12099))

(assert (=> bs!2654 m!53601))

(assert (=> bs!2654 m!53601))

(assert (=> bs!2654 m!53603))

(declare-fun m!54017 () Bool)

(assert (=> bs!2654 m!54017))

(declare-fun m!54019 () Bool)

(assert (=> bs!2654 m!54019))

(assert (=> b!61057 d!12099))

(declare-fun d!12101 () Bool)

(assert (=> d!12101 (= (apply!67 (+!82 lt!25172 (tuple2!2049 lt!25165 (minValue!1980 newMap!16))) lt!25163) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!25172 (tuple2!2049 lt!25165 (minValue!1980 newMap!16)))) lt!25163)))))

(declare-fun bs!2655 () Bool)

(assert (= bs!2655 d!12101))

(declare-fun m!54021 () Bool)

(assert (=> bs!2655 m!54021))

(assert (=> bs!2655 m!54021))

(declare-fun m!54023 () Bool)

(assert (=> bs!2655 m!54023))

(assert (=> b!61057 d!12101))

(declare-fun d!12103 () Bool)

(assert (=> d!12103 (= (map!1110 (_2!1034 lt!25002)) (getCurrentListMap!392 (_keys!3693 (_2!1034 lt!25002)) (_values!2049 (_2!1034 lt!25002)) (mask!5961 (_2!1034 lt!25002)) (extraKeys!1949 (_2!1034 lt!25002)) (zeroValue!1980 (_2!1034 lt!25002)) (minValue!1980 (_2!1034 lt!25002)) #b00000000000000000000000000000000 (defaultEntry!2066 (_2!1034 lt!25002))))))

(declare-fun bs!2656 () Bool)

(assert (= bs!2656 d!12103))

(declare-fun m!54025 () Bool)

(assert (=> bs!2656 m!54025))

(assert (=> b!60856 d!12103))

(declare-fun d!12105 () Bool)

(declare-fun e!40230 () Bool)

(assert (=> d!12105 e!40230))

(declare-fun res!33766 () Bool)

(assert (=> d!12105 (=> (not res!33766) (not e!40230))))

(declare-fun lt!25289 () ListLongMap!1361)

(assert (=> d!12105 (= res!33766 (contains!687 lt!25289 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!25287 () List!1443)

(assert (=> d!12105 (= lt!25289 (ListLongMap!1362 lt!25287))))

(declare-fun lt!25288 () Unit!1621)

(declare-fun lt!25290 () Unit!1621)

(assert (=> d!12105 (= lt!25288 lt!25290)))

(assert (=> d!12105 (= (getValueByKey!123 lt!25287 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12105 (= lt!25290 (lemmaContainsTupThenGetReturnValue!43 lt!25287 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12105 (= lt!25287 (insertStrictlySorted!46 (toList!696 (map!1110 newMap!16)) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12105 (= (+!82 (map!1110 newMap!16) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25289)))

(declare-fun b!61219 () Bool)

(declare-fun res!33767 () Bool)

(assert (=> b!61219 (=> (not res!33767) (not e!40230))))

(assert (=> b!61219 (= res!33767 (= (getValueByKey!123 (toList!696 lt!25289) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61220 () Bool)

(assert (=> b!61220 (= e!40230 (contains!689 (toList!696 lt!25289) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!12105 res!33766) b!61219))

(assert (= (and b!61219 res!33767) b!61220))

(declare-fun m!54027 () Bool)

(assert (=> d!12105 m!54027))

(declare-fun m!54029 () Bool)

(assert (=> d!12105 m!54029))

(declare-fun m!54031 () Bool)

(assert (=> d!12105 m!54031))

(declare-fun m!54033 () Bool)

(assert (=> d!12105 m!54033))

(declare-fun m!54035 () Bool)

(assert (=> b!61219 m!54035))

(declare-fun m!54037 () Bool)

(assert (=> b!61220 m!54037))

(assert (=> b!60856 d!12105))

(assert (=> b!60856 d!11875))

(declare-fun d!12107 () Bool)

(declare-fun c!8004 () Bool)

(assert (=> d!12107 (= c!8004 (and ((_ is Cons!1439) (toList!696 lt!25081)) (= (_1!1035 (h!2021 (toList!696 lt!25081))) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!40231 () Option!129)

(assert (=> d!12107 (= (getValueByKey!123 (toList!696 lt!25081) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!40231)))

(declare-fun b!61224 () Bool)

(declare-fun e!40232 () Option!129)

(assert (=> b!61224 (= e!40232 None!127)))

(declare-fun b!61221 () Bool)

(assert (=> b!61221 (= e!40231 (Some!128 (_2!1035 (h!2021 (toList!696 lt!25081)))))))

(declare-fun b!61223 () Bool)

(assert (=> b!61223 (= e!40232 (getValueByKey!123 (t!4808 (toList!696 lt!25081)) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!61222 () Bool)

(assert (=> b!61222 (= e!40231 e!40232)))

(declare-fun c!8005 () Bool)

(assert (=> b!61222 (= c!8005 (and ((_ is Cons!1439) (toList!696 lt!25081)) (not (= (_1!1035 (h!2021 (toList!696 lt!25081))) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!12107 c!8004) b!61221))

(assert (= (and d!12107 (not c!8004)) b!61222))

(assert (= (and b!61222 c!8005) b!61223))

(assert (= (and b!61222 (not c!8005)) b!61224))

(declare-fun m!54039 () Bool)

(assert (=> b!61223 m!54039))

(assert (=> b!60915 d!12107))

(declare-fun b!61225 () Bool)

(declare-fun e!40233 () Bool)

(declare-fun e!40235 () Bool)

(assert (=> b!61225 (= e!40233 e!40235)))

(declare-fun lt!25292 () (_ BitVec 64))

(assert (=> b!61225 (= lt!25292 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!25291 () Unit!1621)

(assert (=> b!61225 (= lt!25291 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) lt!25292 #b00000000000000000000000000000000))))

(assert (=> b!61225 (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) lt!25292 #b00000000000000000000000000000000)))

(declare-fun lt!25293 () Unit!1621)

(assert (=> b!61225 (= lt!25293 lt!25291)))

(declare-fun res!33769 () Bool)

(assert (=> b!61225 (= res!33769 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000) (_keys!3693 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992)))) (Found!231 #b00000000000000000000000000000000)))))

(assert (=> b!61225 (=> (not res!33769) (not e!40235))))

(declare-fun bm!4704 () Bool)

(declare-fun call!4707 () Bool)

(assert (=> bm!4704 (= call!4707 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3693 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!61226 () Bool)

(assert (=> b!61226 (= e!40235 call!4707)))

(declare-fun b!61227 () Bool)

(assert (=> b!61227 (= e!40233 call!4707)))

(declare-fun d!12109 () Bool)

(declare-fun res!33768 () Bool)

(declare-fun e!40234 () Bool)

(assert (=> d!12109 (=> res!33768 e!40234)))

(assert (=> d!12109 (= res!33768 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> d!12109 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992)))) e!40234)))

(declare-fun b!61228 () Bool)

(assert (=> b!61228 (= e!40234 e!40233)))

(declare-fun c!8006 () Bool)

(assert (=> b!61228 (= c!8006 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!12109 (not res!33768)) b!61228))

(assert (= (and b!61228 c!8006) b!61225))

(assert (= (and b!61228 (not c!8006)) b!61227))

(assert (= (and b!61225 res!33769) b!61226))

(assert (= (or b!61226 b!61227) bm!4704))

(declare-fun m!54041 () Bool)

(assert (=> b!61225 m!54041))

(declare-fun m!54043 () Bool)

(assert (=> b!61225 m!54043))

(declare-fun m!54045 () Bool)

(assert (=> b!61225 m!54045))

(assert (=> b!61225 m!54041))

(declare-fun m!54047 () Bool)

(assert (=> b!61225 m!54047))

(declare-fun m!54049 () Bool)

(assert (=> bm!4704 m!54049))

(assert (=> b!61228 m!54041))

(assert (=> b!61228 m!54041))

(declare-fun m!54051 () Bool)

(assert (=> b!61228 m!54051))

(assert (=> b!61100 d!12109))

(declare-fun d!12111 () Bool)

(assert (=> d!12111 (= (apply!67 lt!25170 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1086 (getValueByKey!123 (toList!696 lt!25170) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2657 () Bool)

(assert (= bs!2657 d!12111))

(declare-fun m!54053 () Bool)

(assert (=> bs!2657 m!54053))

(assert (=> bs!2657 m!54053))

(declare-fun m!54055 () Bool)

(assert (=> bs!2657 m!54055))

(assert (=> b!61060 d!12111))

(declare-fun d!12113 () Bool)

(declare-fun res!33770 () Bool)

(declare-fun e!40236 () Bool)

(assert (=> d!12113 (=> res!33770 e!40236)))

(assert (=> d!12113 (= res!33770 (and ((_ is Cons!1439) (t!4808 (toList!696 lt!24715))) (= (_1!1035 (h!2021 (t!4808 (toList!696 lt!24715)))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(assert (=> d!12113 (= (containsKey!127 (t!4808 (toList!696 lt!24715)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) e!40236)))

(declare-fun b!61229 () Bool)

(declare-fun e!40237 () Bool)

(assert (=> b!61229 (= e!40236 e!40237)))

(declare-fun res!33771 () Bool)

(assert (=> b!61229 (=> (not res!33771) (not e!40237))))

(assert (=> b!61229 (= res!33771 (and (or (not ((_ is Cons!1439) (t!4808 (toList!696 lt!24715)))) (bvsle (_1!1035 (h!2021 (t!4808 (toList!696 lt!24715)))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))) ((_ is Cons!1439) (t!4808 (toList!696 lt!24715))) (bvslt (_1!1035 (h!2021 (t!4808 (toList!696 lt!24715)))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(declare-fun b!61230 () Bool)

(assert (=> b!61230 (= e!40237 (containsKey!127 (t!4808 (t!4808 (toList!696 lt!24715))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (= (and d!12113 (not res!33770)) b!61229))

(assert (= (and b!61229 res!33771) b!61230))

(assert (=> b!61230 m!52977))

(declare-fun m!54057 () Bool)

(assert (=> b!61230 m!54057))

(assert (=> b!61130 d!12113))

(declare-fun d!12115 () Bool)

(declare-fun e!40239 () Bool)

(assert (=> d!12115 e!40239))

(declare-fun res!33772 () Bool)

(assert (=> d!12115 (=> res!33772 e!40239)))

(declare-fun lt!25297 () Bool)

(assert (=> d!12115 (= res!33772 (not lt!25297))))

(declare-fun lt!25295 () Bool)

(assert (=> d!12115 (= lt!25297 lt!25295)))

(declare-fun lt!25294 () Unit!1621)

(declare-fun e!40238 () Unit!1621)

(assert (=> d!12115 (= lt!25294 e!40238)))

(declare-fun c!8007 () Bool)

(assert (=> d!12115 (= c!8007 lt!25295)))

(assert (=> d!12115 (= lt!25295 (containsKey!127 (toList!696 lt!25170) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!12115 (= (contains!687 lt!25170 #b0000000000000000000000000000000000000000000000000000000000000000) lt!25297)))

(declare-fun b!61231 () Bool)

(declare-fun lt!25296 () Unit!1621)

(assert (=> b!61231 (= e!40238 lt!25296)))

(assert (=> b!61231 (= lt!25296 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25170) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61231 (isDefined!77 (getValueByKey!123 (toList!696 lt!25170) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61232 () Bool)

(declare-fun Unit!1648 () Unit!1621)

(assert (=> b!61232 (= e!40238 Unit!1648)))

(declare-fun b!61233 () Bool)

(assert (=> b!61233 (= e!40239 (isDefined!77 (getValueByKey!123 (toList!696 lt!25170) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12115 c!8007) b!61231))

(assert (= (and d!12115 (not c!8007)) b!61232))

(assert (= (and d!12115 (not res!33772)) b!61233))

(declare-fun m!54059 () Bool)

(assert (=> d!12115 m!54059))

(declare-fun m!54061 () Bool)

(assert (=> b!61231 m!54061))

(declare-fun m!54063 () Bool)

(assert (=> b!61231 m!54063))

(assert (=> b!61231 m!54063))

(declare-fun m!54065 () Bool)

(assert (=> b!61231 m!54065))

(assert (=> b!61233 m!54063))

(assert (=> b!61233 m!54063))

(assert (=> b!61233 m!54065))

(assert (=> bm!4691 d!12115))

(declare-fun d!12117 () Bool)

(declare-fun e!40241 () Bool)

(assert (=> d!12117 e!40241))

(declare-fun res!33773 () Bool)

(assert (=> d!12117 (=> res!33773 e!40241)))

(declare-fun lt!25301 () Bool)

(assert (=> d!12117 (= res!33773 (not lt!25301))))

(declare-fun lt!25299 () Bool)

(assert (=> d!12117 (= lt!25301 lt!25299)))

(declare-fun lt!25298 () Unit!1621)

(declare-fun e!40240 () Unit!1621)

(assert (=> d!12117 (= lt!25298 e!40240)))

(declare-fun c!8008 () Bool)

(assert (=> d!12117 (= c!8008 lt!25299)))

(assert (=> d!12117 (= lt!25299 (containsKey!127 (toList!696 lt!25081) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12117 (= (contains!687 lt!25081 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!25301)))

(declare-fun b!61234 () Bool)

(declare-fun lt!25300 () Unit!1621)

(assert (=> b!61234 (= e!40240 lt!25300)))

(assert (=> b!61234 (= lt!25300 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25081) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!61234 (isDefined!77 (getValueByKey!123 (toList!696 lt!25081) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!61235 () Bool)

(declare-fun Unit!1649 () Unit!1621)

(assert (=> b!61235 (= e!40240 Unit!1649)))

(declare-fun b!61236 () Bool)

(assert (=> b!61236 (= e!40241 (isDefined!77 (getValueByKey!123 (toList!696 lt!25081) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!12117 c!8008) b!61234))

(assert (= (and d!12117 (not c!8008)) b!61235))

(assert (= (and d!12117 (not res!33773)) b!61236))

(declare-fun m!54067 () Bool)

(assert (=> d!12117 m!54067))

(declare-fun m!54069 () Bool)

(assert (=> b!61234 m!54069))

(assert (=> b!61234 m!53451))

(assert (=> b!61234 m!53451))

(declare-fun m!54071 () Bool)

(assert (=> b!61234 m!54071))

(assert (=> b!61236 m!53451))

(assert (=> b!61236 m!53451))

(assert (=> b!61236 m!54071))

(assert (=> d!11931 d!12117))

(declare-fun c!8009 () Bool)

(declare-fun d!12119 () Bool)

(assert (=> d!12119 (= c!8009 (and ((_ is Cons!1439) lt!25079) (= (_1!1035 (h!2021 lt!25079)) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!40242 () Option!129)

(assert (=> d!12119 (= (getValueByKey!123 lt!25079 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!40242)))

(declare-fun b!61240 () Bool)

(declare-fun e!40243 () Option!129)

(assert (=> b!61240 (= e!40243 None!127)))

(declare-fun b!61237 () Bool)

(assert (=> b!61237 (= e!40242 (Some!128 (_2!1035 (h!2021 lt!25079))))))

(declare-fun b!61239 () Bool)

(assert (=> b!61239 (= e!40243 (getValueByKey!123 (t!4808 lt!25079) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!61238 () Bool)

(assert (=> b!61238 (= e!40242 e!40243)))

(declare-fun c!8010 () Bool)

(assert (=> b!61238 (= c!8010 (and ((_ is Cons!1439) lt!25079) (not (= (_1!1035 (h!2021 lt!25079)) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!12119 c!8009) b!61237))

(assert (= (and d!12119 (not c!8009)) b!61238))

(assert (= (and b!61238 c!8010) b!61239))

(assert (= (and b!61238 (not c!8010)) b!61240))

(declare-fun m!54073 () Bool)

(assert (=> b!61239 m!54073))

(assert (=> d!11931 d!12119))

(declare-fun d!12121 () Bool)

(assert (=> d!12121 (= (getValueByKey!123 lt!25079 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!25304 () Unit!1621)

(declare-fun choose!332 (List!1443 (_ BitVec 64) V!2857) Unit!1621)

(assert (=> d!12121 (= lt!25304 (choose!332 lt!25079 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!40246 () Bool)

(assert (=> d!12121 e!40246))

(declare-fun res!33778 () Bool)

(assert (=> d!12121 (=> (not res!33778) (not e!40246))))

(assert (=> d!12121 (= res!33778 (isStrictlySorted!280 lt!25079))))

(assert (=> d!12121 (= (lemmaContainsTupThenGetReturnValue!43 lt!25079 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!25304)))

(declare-fun b!61245 () Bool)

(declare-fun res!33779 () Bool)

(assert (=> b!61245 (=> (not res!33779) (not e!40246))))

(assert (=> b!61245 (= res!33779 (containsKey!127 lt!25079 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!61246 () Bool)

(assert (=> b!61246 (= e!40246 (contains!689 lt!25079 (tuple2!2049 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!12121 res!33778) b!61245))

(assert (= (and b!61245 res!33779) b!61246))

(assert (=> d!12121 m!53445))

(declare-fun m!54075 () Bool)

(assert (=> d!12121 m!54075))

(declare-fun m!54077 () Bool)

(assert (=> d!12121 m!54077))

(declare-fun m!54079 () Bool)

(assert (=> b!61245 m!54079))

(declare-fun m!54081 () Bool)

(assert (=> b!61246 m!54081))

(assert (=> d!11931 d!12121))

(declare-fun b!61267 () Bool)

(declare-fun c!8022 () Bool)

(assert (=> b!61267 (= c!8022 (and ((_ is Cons!1439) (toList!696 call!4628)) (bvsgt (_1!1035 (h!2021 (toList!696 call!4628))) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!40260 () List!1443)

(declare-fun e!40258 () List!1443)

(assert (=> b!61267 (= e!40260 e!40258)))

(declare-fun bm!4711 () Bool)

(declare-fun call!4714 () List!1443)

(declare-fun call!4715 () List!1443)

(assert (=> bm!4711 (= call!4714 call!4715)))

(declare-fun b!61268 () Bool)

(declare-fun call!4716 () List!1443)

(assert (=> b!61268 (= e!40258 call!4716)))

(declare-fun b!61269 () Bool)

(declare-fun res!33784 () Bool)

(declare-fun e!40261 () Bool)

(assert (=> b!61269 (=> (not res!33784) (not e!40261))))

(declare-fun lt!25307 () List!1443)

(assert (=> b!61269 (= res!33784 (containsKey!127 lt!25307 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!8020 () Bool)

(declare-fun e!40257 () List!1443)

(declare-fun b!61270 () Bool)

(assert (=> b!61270 (= e!40257 (ite c!8020 (t!4808 (toList!696 call!4628)) (ite c!8022 (Cons!1439 (h!2021 (toList!696 call!4628)) (t!4808 (toList!696 call!4628))) Nil!1440)))))

(declare-fun d!12123 () Bool)

(assert (=> d!12123 e!40261))

(declare-fun res!33785 () Bool)

(assert (=> d!12123 (=> (not res!33785) (not e!40261))))

(assert (=> d!12123 (= res!33785 (isStrictlySorted!280 lt!25307))))

(declare-fun e!40259 () List!1443)

(assert (=> d!12123 (= lt!25307 e!40259)))

(declare-fun c!8021 () Bool)

(assert (=> d!12123 (= c!8021 (and ((_ is Cons!1439) (toList!696 call!4628)) (bvslt (_1!1035 (h!2021 (toList!696 call!4628))) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!12123 (isStrictlySorted!280 (toList!696 call!4628))))

(assert (=> d!12123 (= (insertStrictlySorted!46 (toList!696 call!4628) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!25307)))

(declare-fun b!61271 () Bool)

(assert (=> b!61271 (= e!40257 (insertStrictlySorted!46 (t!4808 (toList!696 call!4628)) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!4712 () Bool)

(assert (=> bm!4712 (= call!4716 call!4714)))

(declare-fun b!61272 () Bool)

(assert (=> b!61272 (= e!40259 call!4715)))

(declare-fun bm!4713 () Bool)

(declare-fun $colon$colon!60 (List!1443 tuple2!2048) List!1443)

(assert (=> bm!4713 (= call!4715 ($colon$colon!60 e!40257 (ite c!8021 (h!2021 (toList!696 call!4628)) (tuple2!2049 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!8019 () Bool)

(assert (=> bm!4713 (= c!8019 c!8021)))

(declare-fun b!61273 () Bool)

(assert (=> b!61273 (= e!40260 call!4714)))

(declare-fun b!61274 () Bool)

(assert (=> b!61274 (= e!40261 (contains!689 lt!25307 (tuple2!2049 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61275 () Bool)

(assert (=> b!61275 (= e!40259 e!40260)))

(assert (=> b!61275 (= c!8020 (and ((_ is Cons!1439) (toList!696 call!4628)) (= (_1!1035 (h!2021 (toList!696 call!4628))) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61276 () Bool)

(assert (=> b!61276 (= e!40258 call!4716)))

(assert (= (and d!12123 c!8021) b!61272))

(assert (= (and d!12123 (not c!8021)) b!61275))

(assert (= (and b!61275 c!8020) b!61273))

(assert (= (and b!61275 (not c!8020)) b!61267))

(assert (= (and b!61267 c!8022) b!61268))

(assert (= (and b!61267 (not c!8022)) b!61276))

(assert (= (or b!61268 b!61276) bm!4712))

(assert (= (or b!61273 bm!4712) bm!4711))

(assert (= (or b!61272 bm!4711) bm!4713))

(assert (= (and bm!4713 c!8019) b!61271))

(assert (= (and bm!4713 (not c!8019)) b!61270))

(assert (= (and d!12123 res!33785) b!61269))

(assert (= (and b!61269 res!33784) b!61274))

(declare-fun m!54083 () Bool)

(assert (=> b!61274 m!54083))

(declare-fun m!54085 () Bool)

(assert (=> b!61269 m!54085))

(declare-fun m!54087 () Bool)

(assert (=> d!12123 m!54087))

(declare-fun m!54089 () Bool)

(assert (=> d!12123 m!54089))

(declare-fun m!54091 () Bool)

(assert (=> bm!4713 m!54091))

(declare-fun m!54093 () Bool)

(assert (=> b!61271 m!54093))

(assert (=> d!11931 d!12123))

(declare-fun d!12125 () Bool)

(declare-fun e!40262 () Bool)

(assert (=> d!12125 e!40262))

(declare-fun res!33786 () Bool)

(assert (=> d!12125 (=> (not res!33786) (not e!40262))))

(declare-fun lt!25310 () ListLongMap!1361)

(assert (=> d!12125 (= res!33786 (contains!687 lt!25310 (_1!1035 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!25308 () List!1443)

(assert (=> d!12125 (= lt!25310 (ListLongMap!1362 lt!25308))))

(declare-fun lt!25309 () Unit!1621)

(declare-fun lt!25311 () Unit!1621)

(assert (=> d!12125 (= lt!25309 lt!25311)))

(assert (=> d!12125 (= (getValueByKey!123 lt!25308 (_1!1035 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12125 (= lt!25311 (lemmaContainsTupThenGetReturnValue!43 lt!25308 (_1!1035 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12125 (= lt!25308 (insertStrictlySorted!46 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (_1!1035 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12125 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25310)))

(declare-fun b!61277 () Bool)

(declare-fun res!33787 () Bool)

(assert (=> b!61277 (=> (not res!33787) (not e!40262))))

(assert (=> b!61277 (= res!33787 (= (getValueByKey!123 (toList!696 lt!25310) (_1!1035 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61278 () Bool)

(assert (=> b!61278 (= e!40262 (contains!689 (toList!696 lt!25310) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!12125 res!33786) b!61277))

(assert (= (and b!61277 res!33787) b!61278))

(declare-fun m!54095 () Bool)

(assert (=> d!12125 m!54095))

(declare-fun m!54097 () Bool)

(assert (=> d!12125 m!54097))

(declare-fun m!54099 () Bool)

(assert (=> d!12125 m!54099))

(declare-fun m!54101 () Bool)

(assert (=> d!12125 m!54101))

(declare-fun m!54103 () Bool)

(assert (=> b!61277 m!54103))

(declare-fun m!54105 () Bool)

(assert (=> b!61278 m!54105))

(assert (=> d!11983 d!12125))

(declare-fun bm!4714 () Bool)

(declare-fun call!4723 () ListLongMap!1361)

(declare-fun call!4722 () ListLongMap!1361)

(assert (=> bm!4714 (= call!4723 call!4722)))

(declare-fun b!61279 () Bool)

(declare-fun e!40268 () Unit!1621)

(declare-fun lt!25312 () Unit!1621)

(assert (=> b!61279 (= e!40268 lt!25312)))

(declare-fun lt!25319 () ListLongMap!1361)

(assert (=> b!61279 (= lt!25319 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24912 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25317 () (_ BitVec 64))

(assert (=> b!61279 (= lt!25317 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25313 () (_ BitVec 64))

(assert (=> b!61279 (= lt!25313 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25326 () Unit!1621)

(assert (=> b!61279 (= lt!25326 (addStillContains!43 lt!25319 lt!25317 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25313))))

(assert (=> b!61279 (contains!687 (+!82 lt!25319 (tuple2!2049 lt!25317 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25313)))

(declare-fun lt!25332 () Unit!1621)

(assert (=> b!61279 (= lt!25332 lt!25326)))

(declare-fun lt!25323 () ListLongMap!1361)

(assert (=> b!61279 (= lt!25323 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24912 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25327 () (_ BitVec 64))

(assert (=> b!61279 (= lt!25327 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25330 () (_ BitVec 64))

(assert (=> b!61279 (= lt!25330 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25320 () Unit!1621)

(assert (=> b!61279 (= lt!25320 (addApplyDifferent!43 lt!25323 lt!25327 (minValue!1980 newMap!16) lt!25330))))

(assert (=> b!61279 (= (apply!67 (+!82 lt!25323 (tuple2!2049 lt!25327 (minValue!1980 newMap!16))) lt!25330) (apply!67 lt!25323 lt!25330))))

(declare-fun lt!25321 () Unit!1621)

(assert (=> b!61279 (= lt!25321 lt!25320)))

(declare-fun lt!25328 () ListLongMap!1361)

(assert (=> b!61279 (= lt!25328 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24912 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25318 () (_ BitVec 64))

(assert (=> b!61279 (= lt!25318 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25333 () (_ BitVec 64))

(assert (=> b!61279 (= lt!25333 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25316 () Unit!1621)

(assert (=> b!61279 (= lt!25316 (addApplyDifferent!43 lt!25328 lt!25318 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25333))))

(assert (=> b!61279 (= (apply!67 (+!82 lt!25328 (tuple2!2049 lt!25318 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25333) (apply!67 lt!25328 lt!25333))))

(declare-fun lt!25315 () Unit!1621)

(assert (=> b!61279 (= lt!25315 lt!25316)))

(declare-fun lt!25331 () ListLongMap!1361)

(assert (=> b!61279 (= lt!25331 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24912 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25324 () (_ BitVec 64))

(assert (=> b!61279 (= lt!25324 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25322 () (_ BitVec 64))

(assert (=> b!61279 (= lt!25322 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!61279 (= lt!25312 (addApplyDifferent!43 lt!25331 lt!25324 (minValue!1980 newMap!16) lt!25322))))

(assert (=> b!61279 (= (apply!67 (+!82 lt!25331 (tuple2!2049 lt!25324 (minValue!1980 newMap!16))) lt!25322) (apply!67 lt!25331 lt!25322))))

(declare-fun b!61280 () Bool)

(declare-fun lt!25329 () ListLongMap!1361)

(declare-fun e!40271 () Bool)

(assert (=> b!61280 (= e!40271 (= (apply!67 lt!25329 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!61281 () Bool)

(declare-fun e!40273 () Bool)

(declare-fun call!4720 () Bool)

(assert (=> b!61281 (= e!40273 (not call!4720))))

(declare-fun bm!4715 () Bool)

(assert (=> bm!4715 (= call!4722 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24912 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun b!61282 () Bool)

(declare-fun e!40275 () Bool)

(assert (=> b!61282 (= e!40275 (= (apply!67 lt!25329 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1980 newMap!16)))))

(declare-fun b!61283 () Bool)

(declare-fun e!40270 () ListLongMap!1361)

(declare-fun e!40269 () ListLongMap!1361)

(assert (=> b!61283 (= e!40270 e!40269)))

(declare-fun c!8027 () Bool)

(assert (=> b!61283 (= c!8027 (and (not (= (bvand lt!24912 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!24912 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4716 () Bool)

(declare-fun call!4718 () ListLongMap!1361)

(assert (=> bm!4716 (= call!4718 call!4723)))

(declare-fun b!61284 () Bool)

(declare-fun res!33791 () Bool)

(declare-fun e!40264 () Bool)

(assert (=> b!61284 (=> (not res!33791) (not e!40264))))

(declare-fun e!40266 () Bool)

(assert (=> b!61284 (= res!33791 e!40266)))

(declare-fun res!33790 () Bool)

(assert (=> b!61284 (=> res!33790 e!40266)))

(declare-fun e!40272 () Bool)

(assert (=> b!61284 (= res!33790 (not e!40272))))

(declare-fun res!33796 () Bool)

(assert (=> b!61284 (=> (not res!33796) (not e!40272))))

(assert (=> b!61284 (= res!33796 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61285 () Bool)

(declare-fun e!40263 () Bool)

(assert (=> b!61285 (= e!40266 e!40263)))

(declare-fun res!33792 () Bool)

(assert (=> b!61285 (=> (not res!33792) (not e!40263))))

(assert (=> b!61285 (= res!33792 (contains!687 lt!25329 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61285 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun bm!4717 () Bool)

(assert (=> bm!4717 (= call!4720 (contains!687 lt!25329 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61286 () Bool)

(declare-fun res!33793 () Bool)

(assert (=> b!61286 (=> (not res!33793) (not e!40264))))

(declare-fun e!40274 () Bool)

(assert (=> b!61286 (= res!33793 e!40274)))

(declare-fun c!8028 () Bool)

(assert (=> b!61286 (= c!8028 (not (= (bvand lt!24912 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!61287 () Bool)

(assert (=> b!61287 (= e!40272 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun c!8025 () Bool)

(declare-fun bm!4718 () Bool)

(declare-fun call!4721 () ListLongMap!1361)

(assert (=> bm!4718 (= call!4721 (+!82 (ite c!8025 call!4722 (ite c!8027 call!4723 call!4718)) (ite (or c!8025 c!8027) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(declare-fun b!61288 () Bool)

(assert (=> b!61288 (= e!40264 e!40273)))

(declare-fun c!8026 () Bool)

(assert (=> b!61288 (= c!8026 (not (= (bvand lt!24912 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!61289 () Bool)

(declare-fun Unit!1650 () Unit!1621)

(assert (=> b!61289 (= e!40268 Unit!1650)))

(declare-fun b!61290 () Bool)

(declare-fun call!4719 () ListLongMap!1361)

(assert (=> b!61290 (= e!40269 call!4719)))

(declare-fun b!61291 () Bool)

(declare-fun e!40267 () ListLongMap!1361)

(assert (=> b!61291 (= e!40267 call!4718)))

(declare-fun b!61292 () Bool)

(assert (=> b!61292 (= e!40270 (+!82 call!4721 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))

(declare-fun b!61293 () Bool)

(declare-fun e!40265 () Bool)

(assert (=> b!61293 (= e!40265 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61294 () Bool)

(declare-fun c!8024 () Bool)

(assert (=> b!61294 (= c!8024 (and (not (= (bvand lt!24912 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!24912 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!61294 (= e!40269 e!40267)))

(declare-fun b!61295 () Bool)

(assert (=> b!61295 (= e!40273 e!40275)))

(declare-fun res!33794 () Bool)

(assert (=> b!61295 (= res!33794 call!4720)))

(assert (=> b!61295 (=> (not res!33794) (not e!40275))))

(declare-fun d!12127 () Bool)

(assert (=> d!12127 e!40264))

(declare-fun res!33795 () Bool)

(assert (=> d!12127 (=> (not res!33795) (not e!40264))))

(assert (=> d!12127 (= res!33795 (or (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))))

(declare-fun lt!25314 () ListLongMap!1361)

(assert (=> d!12127 (= lt!25329 lt!25314)))

(declare-fun lt!25325 () Unit!1621)

(assert (=> d!12127 (= lt!25325 e!40268)))

(declare-fun c!8023 () Bool)

(assert (=> d!12127 (= c!8023 e!40265)))

(declare-fun res!33788 () Bool)

(assert (=> d!12127 (=> (not res!33788) (not e!40265))))

(assert (=> d!12127 (= res!33788 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12127 (= lt!25314 e!40270)))

(assert (=> d!12127 (= c!8025 (and (not (= (bvand lt!24912 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!24912 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!12127 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12127 (= (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24912 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25329)))

(declare-fun b!61296 () Bool)

(declare-fun call!4717 () Bool)

(assert (=> b!61296 (= e!40274 (not call!4717))))

(declare-fun b!61297 () Bool)

(assert (=> b!61297 (= e!40263 (= (apply!67 lt!25329 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (_values!2049 newMap!16)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!61297 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (_values!2049 newMap!16))))))

(assert (=> b!61297 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61298 () Bool)

(assert (=> b!61298 (= e!40267 call!4719)))

(declare-fun b!61299 () Bool)

(assert (=> b!61299 (= e!40274 e!40271)))

(declare-fun res!33789 () Bool)

(assert (=> b!61299 (= res!33789 call!4717)))

(assert (=> b!61299 (=> (not res!33789) (not e!40271))))

(declare-fun bm!4719 () Bool)

(assert (=> bm!4719 (= call!4717 (contains!687 lt!25329 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4720 () Bool)

(assert (=> bm!4720 (= call!4719 call!4721)))

(assert (= (and d!12127 c!8025) b!61292))

(assert (= (and d!12127 (not c!8025)) b!61283))

(assert (= (and b!61283 c!8027) b!61290))

(assert (= (and b!61283 (not c!8027)) b!61294))

(assert (= (and b!61294 c!8024) b!61298))

(assert (= (and b!61294 (not c!8024)) b!61291))

(assert (= (or b!61298 b!61291) bm!4716))

(assert (= (or b!61290 bm!4716) bm!4714))

(assert (= (or b!61290 b!61298) bm!4720))

(assert (= (or b!61292 bm!4714) bm!4715))

(assert (= (or b!61292 bm!4720) bm!4718))

(assert (= (and d!12127 res!33788) b!61293))

(assert (= (and d!12127 c!8023) b!61279))

(assert (= (and d!12127 (not c!8023)) b!61289))

(assert (= (and d!12127 res!33795) b!61284))

(assert (= (and b!61284 res!33796) b!61287))

(assert (= (and b!61284 (not res!33790)) b!61285))

(assert (= (and b!61285 res!33792) b!61297))

(assert (= (and b!61284 res!33791) b!61286))

(assert (= (and b!61286 c!8028) b!61299))

(assert (= (and b!61286 (not c!8028)) b!61296))

(assert (= (and b!61299 res!33789) b!61280))

(assert (= (or b!61299 b!61296) bm!4719))

(assert (= (and b!61286 res!33793) b!61288))

(assert (= (and b!61288 c!8026) b!61295))

(assert (= (and b!61288 (not c!8026)) b!61281))

(assert (= (and b!61295 res!33794) b!61282))

(assert (= (or b!61295 b!61281) bm!4717))

(declare-fun b_lambda!2715 () Bool)

(assert (=> (not b_lambda!2715) (not b!61297)))

(assert (=> b!61297 t!4820))

(declare-fun b_and!3737 () Bool)

(assert (= b_and!3733 (and (=> t!4820 result!2427) b_and!3737)))

(assert (=> b!61297 t!4822))

(declare-fun b_and!3739 () Bool)

(assert (= b_and!3735 (and (=> t!4822 result!2429) b_and!3739)))

(assert (=> b!61287 m!53263))

(assert (=> b!61287 m!53263))

(assert (=> b!61287 m!53265))

(assert (=> b!61297 m!53389))

(assert (=> b!61297 m!53391))

(assert (=> b!61297 m!53393))

(assert (=> b!61297 m!53389))

(assert (=> b!61297 m!53263))

(declare-fun m!54107 () Bool)

(assert (=> b!61297 m!54107))

(assert (=> b!61297 m!53263))

(assert (=> b!61297 m!53391))

(assert (=> b!61279 m!52987))

(declare-fun m!54109 () Bool)

(assert (=> b!61279 m!54109))

(declare-fun m!54111 () Bool)

(assert (=> b!61279 m!54111))

(assert (=> b!61279 m!52987))

(declare-fun m!54113 () Bool)

(assert (=> b!61279 m!54113))

(declare-fun m!54115 () Bool)

(assert (=> b!61279 m!54115))

(declare-fun m!54117 () Bool)

(assert (=> b!61279 m!54117))

(declare-fun m!54119 () Bool)

(assert (=> b!61279 m!54119))

(assert (=> b!61279 m!54115))

(declare-fun m!54121 () Bool)

(assert (=> b!61279 m!54121))

(declare-fun m!54123 () Bool)

(assert (=> b!61279 m!54123))

(assert (=> b!61279 m!52987))

(declare-fun m!54125 () Bool)

(assert (=> b!61279 m!54125))

(declare-fun m!54127 () Bool)

(assert (=> b!61279 m!54127))

(assert (=> b!61279 m!53263))

(assert (=> b!61279 m!54117))

(assert (=> b!61279 m!54111))

(declare-fun m!54129 () Bool)

(assert (=> b!61279 m!54129))

(declare-fun m!54131 () Bool)

(assert (=> b!61279 m!54131))

(declare-fun m!54133 () Bool)

(assert (=> b!61279 m!54133))

(assert (=> b!61279 m!54131))

(declare-fun m!54135 () Bool)

(assert (=> b!61279 m!54135))

(declare-fun m!54137 () Bool)

(assert (=> b!61279 m!54137))

(declare-fun m!54139 () Bool)

(assert (=> b!61279 m!54139))

(declare-fun m!54141 () Bool)

(assert (=> b!61282 m!54141))

(assert (=> bm!4715 m!52987))

(assert (=> bm!4715 m!54113))

(declare-fun m!54143 () Bool)

(assert (=> bm!4719 m!54143))

(assert (=> b!61293 m!53263))

(assert (=> b!61293 m!53263))

(assert (=> b!61293 m!53265))

(declare-fun m!54145 () Bool)

(assert (=> b!61292 m!54145))

(declare-fun m!54147 () Bool)

(assert (=> b!61280 m!54147))

(assert (=> d!12127 m!53365))

(declare-fun m!54149 () Bool)

(assert (=> bm!4717 m!54149))

(assert (=> b!61285 m!53263))

(assert (=> b!61285 m!53263))

(declare-fun m!54151 () Bool)

(assert (=> b!61285 m!54151))

(declare-fun m!54153 () Bool)

(assert (=> bm!4718 m!54153))

(assert (=> d!11983 d!12127))

(assert (=> d!11983 d!11929))

(declare-fun d!12129 () Bool)

(assert (=> d!12129 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24912 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(assert (=> d!12129 true))

(declare-fun _$7!47 () Unit!1621)

(assert (=> d!12129 (= (choose!329 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) lt!24912 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!1980 newMap!16) (defaultEntry!2066 newMap!16)) _$7!47)))

(declare-fun bs!2658 () Bool)

(assert (= bs!2658 d!12129))

(assert (=> bs!2658 m!53109))

(assert (=> bs!2658 m!53109))

(assert (=> bs!2658 m!53695))

(assert (=> bs!2658 m!52987))

(assert (=> bs!2658 m!53693))

(assert (=> d!11983 d!12129))

(assert (=> d!11983 d!12045))

(declare-fun d!12131 () Bool)

(assert (=> d!12131 (= (apply!67 lt!25107 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1086 (getValueByKey!123 (toList!696 lt!25107) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!2659 () Bool)

(assert (= bs!2659 d!12131))

(assert (=> bs!2659 m!53111))

(declare-fun m!54155 () Bool)

(assert (=> bs!2659 m!54155))

(assert (=> bs!2659 m!54155))

(declare-fun m!54157 () Bool)

(assert (=> bs!2659 m!54157))

(assert (=> b!60980 d!12131))

(assert (=> b!60980 d!11945))

(declare-fun d!12133 () Bool)

(assert (=> d!12133 (= (get!1086 (getValueByKey!123 (toList!696 lt!24827) lt!24818)) (v!2402 (getValueByKey!123 (toList!696 lt!24827) lt!24818)))))

(assert (=> d!12019 d!12133))

(declare-fun d!12135 () Bool)

(declare-fun c!8029 () Bool)

(assert (=> d!12135 (= c!8029 (and ((_ is Cons!1439) (toList!696 lt!24827)) (= (_1!1035 (h!2021 (toList!696 lt!24827))) lt!24818)))))

(declare-fun e!40276 () Option!129)

(assert (=> d!12135 (= (getValueByKey!123 (toList!696 lt!24827) lt!24818) e!40276)))

(declare-fun b!61303 () Bool)

(declare-fun e!40277 () Option!129)

(assert (=> b!61303 (= e!40277 None!127)))

(declare-fun b!61300 () Bool)

(assert (=> b!61300 (= e!40276 (Some!128 (_2!1035 (h!2021 (toList!696 lt!24827)))))))

(declare-fun b!61302 () Bool)

(assert (=> b!61302 (= e!40277 (getValueByKey!123 (t!4808 (toList!696 lt!24827)) lt!24818))))

(declare-fun b!61301 () Bool)

(assert (=> b!61301 (= e!40276 e!40277)))

(declare-fun c!8030 () Bool)

(assert (=> b!61301 (= c!8030 (and ((_ is Cons!1439) (toList!696 lt!24827)) (not (= (_1!1035 (h!2021 (toList!696 lt!24827))) lt!24818))))))

(assert (= (and d!12135 c!8029) b!61300))

(assert (= (and d!12135 (not c!8029)) b!61301))

(assert (= (and b!61301 c!8030) b!61302))

(assert (= (and b!61301 (not c!8030)) b!61303))

(declare-fun m!54159 () Bool)

(assert (=> b!61302 m!54159))

(assert (=> d!12019 d!12135))

(declare-fun d!12137 () Bool)

(declare-fun e!40278 () Bool)

(assert (=> d!12137 e!40278))

(declare-fun res!33797 () Bool)

(assert (=> d!12137 (=> (not res!33797) (not e!40278))))

(declare-fun lt!25336 () ListLongMap!1361)

(assert (=> d!12137 (= res!33797 (contains!687 lt!25336 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(declare-fun lt!25334 () List!1443)

(assert (=> d!12137 (= lt!25336 (ListLongMap!1362 lt!25334))))

(declare-fun lt!25335 () Unit!1621)

(declare-fun lt!25337 () Unit!1621)

(assert (=> d!12137 (= lt!25335 lt!25337)))

(assert (=> d!12137 (= (getValueByKey!123 lt!25334 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(assert (=> d!12137 (= lt!25337 (lemmaContainsTupThenGetReturnValue!43 lt!25334 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(assert (=> d!12137 (= lt!25334 (insertStrictlySorted!46 (toList!696 call!4693) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(assert (=> d!12137 (= (+!82 call!4693 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))) lt!25336)))

(declare-fun b!61304 () Bool)

(declare-fun res!33798 () Bool)

(assert (=> b!61304 (=> (not res!33798) (not e!40278))))

(assert (=> b!61304 (= res!33798 (= (getValueByKey!123 (toList!696 lt!25336) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))))

(declare-fun b!61305 () Bool)

(assert (=> b!61305 (= e!40278 (contains!689 (toList!696 lt!25336) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))

(assert (= (and d!12137 res!33797) b!61304))

(assert (= (and b!61304 res!33798) b!61305))

(declare-fun m!54161 () Bool)

(assert (=> d!12137 m!54161))

(declare-fun m!54163 () Bool)

(assert (=> d!12137 m!54163))

(declare-fun m!54165 () Bool)

(assert (=> d!12137 m!54165))

(declare-fun m!54167 () Bool)

(assert (=> d!12137 m!54167))

(declare-fun m!54169 () Bool)

(assert (=> b!61304 m!54169))

(declare-fun m!54171 () Bool)

(assert (=> b!61305 m!54171))

(assert (=> b!61070 d!12137))

(declare-fun bm!4721 () Bool)

(declare-fun call!4730 () ListLongMap!1361)

(declare-fun call!4729 () ListLongMap!1361)

(assert (=> bm!4721 (= call!4730 call!4729)))

(declare-fun b!61306 () Bool)

(declare-fun e!40284 () Unit!1621)

(declare-fun lt!25338 () Unit!1621)

(assert (=> b!61306 (= e!40284 lt!25338)))

(declare-fun lt!25345 () ListLongMap!1361)

(assert (=> b!61306 (= lt!25345 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (_2!1034 lt!24902)) (_values!2049 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902)) (extraKeys!1949 (_2!1034 lt!24902)) (zeroValue!1980 (_2!1034 lt!24902)) (minValue!1980 (_2!1034 lt!24902)) #b00000000000000000000000000000000 (defaultEntry!2066 (_2!1034 lt!24902))))))

(declare-fun lt!25343 () (_ BitVec 64))

(assert (=> b!61306 (= lt!25343 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25339 () (_ BitVec 64))

(assert (=> b!61306 (= lt!25339 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000))))

(declare-fun lt!25352 () Unit!1621)

(assert (=> b!61306 (= lt!25352 (addStillContains!43 lt!25345 lt!25343 (zeroValue!1980 (_2!1034 lt!24902)) lt!25339))))

(assert (=> b!61306 (contains!687 (+!82 lt!25345 (tuple2!2049 lt!25343 (zeroValue!1980 (_2!1034 lt!24902)))) lt!25339)))

(declare-fun lt!25358 () Unit!1621)

(assert (=> b!61306 (= lt!25358 lt!25352)))

(declare-fun lt!25349 () ListLongMap!1361)

(assert (=> b!61306 (= lt!25349 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (_2!1034 lt!24902)) (_values!2049 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902)) (extraKeys!1949 (_2!1034 lt!24902)) (zeroValue!1980 (_2!1034 lt!24902)) (minValue!1980 (_2!1034 lt!24902)) #b00000000000000000000000000000000 (defaultEntry!2066 (_2!1034 lt!24902))))))

(declare-fun lt!25353 () (_ BitVec 64))

(assert (=> b!61306 (= lt!25353 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25356 () (_ BitVec 64))

(assert (=> b!61306 (= lt!25356 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000))))

(declare-fun lt!25346 () Unit!1621)

(assert (=> b!61306 (= lt!25346 (addApplyDifferent!43 lt!25349 lt!25353 (minValue!1980 (_2!1034 lt!24902)) lt!25356))))

(assert (=> b!61306 (= (apply!67 (+!82 lt!25349 (tuple2!2049 lt!25353 (minValue!1980 (_2!1034 lt!24902)))) lt!25356) (apply!67 lt!25349 lt!25356))))

(declare-fun lt!25347 () Unit!1621)

(assert (=> b!61306 (= lt!25347 lt!25346)))

(declare-fun lt!25354 () ListLongMap!1361)

(assert (=> b!61306 (= lt!25354 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (_2!1034 lt!24902)) (_values!2049 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902)) (extraKeys!1949 (_2!1034 lt!24902)) (zeroValue!1980 (_2!1034 lt!24902)) (minValue!1980 (_2!1034 lt!24902)) #b00000000000000000000000000000000 (defaultEntry!2066 (_2!1034 lt!24902))))))

(declare-fun lt!25344 () (_ BitVec 64))

(assert (=> b!61306 (= lt!25344 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25359 () (_ BitVec 64))

(assert (=> b!61306 (= lt!25359 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000))))

(declare-fun lt!25342 () Unit!1621)

(assert (=> b!61306 (= lt!25342 (addApplyDifferent!43 lt!25354 lt!25344 (zeroValue!1980 (_2!1034 lt!24902)) lt!25359))))

(assert (=> b!61306 (= (apply!67 (+!82 lt!25354 (tuple2!2049 lt!25344 (zeroValue!1980 (_2!1034 lt!24902)))) lt!25359) (apply!67 lt!25354 lt!25359))))

(declare-fun lt!25341 () Unit!1621)

(assert (=> b!61306 (= lt!25341 lt!25342)))

(declare-fun lt!25357 () ListLongMap!1361)

(assert (=> b!61306 (= lt!25357 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (_2!1034 lt!24902)) (_values!2049 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902)) (extraKeys!1949 (_2!1034 lt!24902)) (zeroValue!1980 (_2!1034 lt!24902)) (minValue!1980 (_2!1034 lt!24902)) #b00000000000000000000000000000000 (defaultEntry!2066 (_2!1034 lt!24902))))))

(declare-fun lt!25350 () (_ BitVec 64))

(assert (=> b!61306 (= lt!25350 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25348 () (_ BitVec 64))

(assert (=> b!61306 (= lt!25348 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000))))

(assert (=> b!61306 (= lt!25338 (addApplyDifferent!43 lt!25357 lt!25350 (minValue!1980 (_2!1034 lt!24902)) lt!25348))))

(assert (=> b!61306 (= (apply!67 (+!82 lt!25357 (tuple2!2049 lt!25350 (minValue!1980 (_2!1034 lt!24902)))) lt!25348) (apply!67 lt!25357 lt!25348))))

(declare-fun b!61307 () Bool)

(declare-fun e!40287 () Bool)

(declare-fun lt!25355 () ListLongMap!1361)

(assert (=> b!61307 (= e!40287 (= (apply!67 lt!25355 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1980 (_2!1034 lt!24902))))))

(declare-fun b!61308 () Bool)

(declare-fun e!40289 () Bool)

(declare-fun call!4727 () Bool)

(assert (=> b!61308 (= e!40289 (not call!4727))))

(declare-fun bm!4722 () Bool)

(assert (=> bm!4722 (= call!4729 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (_2!1034 lt!24902)) (_values!2049 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902)) (extraKeys!1949 (_2!1034 lt!24902)) (zeroValue!1980 (_2!1034 lt!24902)) (minValue!1980 (_2!1034 lt!24902)) #b00000000000000000000000000000000 (defaultEntry!2066 (_2!1034 lt!24902))))))

(declare-fun b!61309 () Bool)

(declare-fun e!40291 () Bool)

(assert (=> b!61309 (= e!40291 (= (apply!67 lt!25355 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1980 (_2!1034 lt!24902))))))

(declare-fun b!61310 () Bool)

(declare-fun e!40286 () ListLongMap!1361)

(declare-fun e!40285 () ListLongMap!1361)

(assert (=> b!61310 (= e!40286 e!40285)))

(declare-fun c!8035 () Bool)

(assert (=> b!61310 (= c!8035 (and (not (= (bvand (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4723 () Bool)

(declare-fun call!4725 () ListLongMap!1361)

(assert (=> bm!4723 (= call!4725 call!4730)))

(declare-fun b!61311 () Bool)

(declare-fun res!33802 () Bool)

(declare-fun e!40280 () Bool)

(assert (=> b!61311 (=> (not res!33802) (not e!40280))))

(declare-fun e!40282 () Bool)

(assert (=> b!61311 (= res!33802 e!40282)))

(declare-fun res!33801 () Bool)

(assert (=> b!61311 (=> res!33801 e!40282)))

(declare-fun e!40288 () Bool)

(assert (=> b!61311 (= res!33801 (not e!40288))))

(declare-fun res!33807 () Bool)

(assert (=> b!61311 (=> (not res!33807) (not e!40288))))

(assert (=> b!61311 (= res!33807 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))))))

(declare-fun b!61312 () Bool)

(declare-fun e!40279 () Bool)

(assert (=> b!61312 (= e!40282 e!40279)))

(declare-fun res!33803 () Bool)

(assert (=> b!61312 (=> (not res!33803) (not e!40279))))

(assert (=> b!61312 (= res!33803 (contains!687 lt!25355 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000)))))

(assert (=> b!61312 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))))))

(declare-fun bm!4724 () Bool)

(assert (=> bm!4724 (= call!4727 (contains!687 lt!25355 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61313 () Bool)

(declare-fun res!33804 () Bool)

(assert (=> b!61313 (=> (not res!33804) (not e!40280))))

(declare-fun e!40290 () Bool)

(assert (=> b!61313 (= res!33804 e!40290)))

(declare-fun c!8036 () Bool)

(assert (=> b!61313 (= c!8036 (not (= (bvand (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!61314 () Bool)

(assert (=> b!61314 (= e!40288 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000)))))

(declare-fun call!4728 () ListLongMap!1361)

(declare-fun bm!4725 () Bool)

(declare-fun c!8033 () Bool)

(assert (=> bm!4725 (= call!4728 (+!82 (ite c!8033 call!4729 (ite c!8035 call!4730 call!4725)) (ite (or c!8033 c!8035) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (_2!1034 lt!24902))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (_2!1034 lt!24902))))))))

(declare-fun b!61315 () Bool)

(assert (=> b!61315 (= e!40280 e!40289)))

(declare-fun c!8034 () Bool)

(assert (=> b!61315 (= c!8034 (not (= (bvand (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!61316 () Bool)

(declare-fun Unit!1651 () Unit!1621)

(assert (=> b!61316 (= e!40284 Unit!1651)))

(declare-fun b!61317 () Bool)

(declare-fun call!4726 () ListLongMap!1361)

(assert (=> b!61317 (= e!40285 call!4726)))

(declare-fun b!61318 () Bool)

(declare-fun e!40283 () ListLongMap!1361)

(assert (=> b!61318 (= e!40283 call!4725)))

(declare-fun b!61319 () Bool)

(assert (=> b!61319 (= e!40286 (+!82 call!4728 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (_2!1034 lt!24902)))))))

(declare-fun b!61320 () Bool)

(declare-fun e!40281 () Bool)

(assert (=> b!61320 (= e!40281 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000)))))

(declare-fun b!61321 () Bool)

(declare-fun c!8032 () Bool)

(assert (=> b!61321 (= c!8032 (and (not (= (bvand (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!61321 (= e!40285 e!40283)))

(declare-fun b!61322 () Bool)

(assert (=> b!61322 (= e!40289 e!40291)))

(declare-fun res!33805 () Bool)

(assert (=> b!61322 (= res!33805 call!4727)))

(assert (=> b!61322 (=> (not res!33805) (not e!40291))))

(declare-fun d!12139 () Bool)

(assert (=> d!12139 e!40280))

(declare-fun res!33806 () Bool)

(assert (=> d!12139 (=> (not res!33806) (not e!40280))))

(assert (=> d!12139 (= res!33806 (or (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))))))))

(declare-fun lt!25340 () ListLongMap!1361)

(assert (=> d!12139 (= lt!25355 lt!25340)))

(declare-fun lt!25351 () Unit!1621)

(assert (=> d!12139 (= lt!25351 e!40284)))

(declare-fun c!8031 () Bool)

(assert (=> d!12139 (= c!8031 e!40281)))

(declare-fun res!33799 () Bool)

(assert (=> d!12139 (=> (not res!33799) (not e!40281))))

(assert (=> d!12139 (= res!33799 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))))))

(assert (=> d!12139 (= lt!25340 e!40286)))

(assert (=> d!12139 (= c!8033 (and (not (= (bvand (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!12139 (validMask!0 (mask!5961 (_2!1034 lt!24902)))))

(assert (=> d!12139 (= (getCurrentListMap!392 (_keys!3693 (_2!1034 lt!24902)) (_values!2049 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902)) (extraKeys!1949 (_2!1034 lt!24902)) (zeroValue!1980 (_2!1034 lt!24902)) (minValue!1980 (_2!1034 lt!24902)) #b00000000000000000000000000000000 (defaultEntry!2066 (_2!1034 lt!24902))) lt!25355)))

(declare-fun b!61323 () Bool)

(declare-fun call!4724 () Bool)

(assert (=> b!61323 (= e!40290 (not call!4724))))

(declare-fun b!61324 () Bool)

(assert (=> b!61324 (= e!40279 (= (apply!67 lt!25355 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (_values!2049 (_2!1034 lt!24902))) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 (_2!1034 lt!24902)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!61324 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (_values!2049 (_2!1034 lt!24902)))))))

(assert (=> b!61324 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))))))

(declare-fun b!61325 () Bool)

(assert (=> b!61325 (= e!40283 call!4726)))

(declare-fun b!61326 () Bool)

(assert (=> b!61326 (= e!40290 e!40287)))

(declare-fun res!33800 () Bool)

(assert (=> b!61326 (= res!33800 call!4724)))

(assert (=> b!61326 (=> (not res!33800) (not e!40287))))

(declare-fun bm!4726 () Bool)

(assert (=> bm!4726 (= call!4724 (contains!687 lt!25355 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4727 () Bool)

(assert (=> bm!4727 (= call!4726 call!4728)))

(assert (= (and d!12139 c!8033) b!61319))

(assert (= (and d!12139 (not c!8033)) b!61310))

(assert (= (and b!61310 c!8035) b!61317))

(assert (= (and b!61310 (not c!8035)) b!61321))

(assert (= (and b!61321 c!8032) b!61325))

(assert (= (and b!61321 (not c!8032)) b!61318))

(assert (= (or b!61325 b!61318) bm!4723))

(assert (= (or b!61317 bm!4723) bm!4721))

(assert (= (or b!61317 b!61325) bm!4727))

(assert (= (or b!61319 bm!4721) bm!4722))

(assert (= (or b!61319 bm!4727) bm!4725))

(assert (= (and d!12139 res!33799) b!61320))

(assert (= (and d!12139 c!8031) b!61306))

(assert (= (and d!12139 (not c!8031)) b!61316))

(assert (= (and d!12139 res!33806) b!61311))

(assert (= (and b!61311 res!33807) b!61314))

(assert (= (and b!61311 (not res!33801)) b!61312))

(assert (= (and b!61312 res!33803) b!61324))

(assert (= (and b!61311 res!33802) b!61313))

(assert (= (and b!61313 c!8036) b!61326))

(assert (= (and b!61313 (not c!8036)) b!61323))

(assert (= (and b!61326 res!33800) b!61307))

(assert (= (or b!61326 b!61323) bm!4726))

(assert (= (and b!61313 res!33804) b!61315))

(assert (= (and b!61315 c!8034) b!61322))

(assert (= (and b!61315 (not c!8034)) b!61308))

(assert (= (and b!61322 res!33805) b!61309))

(assert (= (or b!61322 b!61308) bm!4724))

(declare-fun b_lambda!2717 () Bool)

(assert (=> (not b_lambda!2717) (not b!61324)))

(declare-fun tb!1357 () Bool)

(declare-fun t!4824 () Bool)

(assert (=> (and b!60405 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 (_2!1034 lt!24902))) t!4824) tb!1357))

(declare-fun result!2431 () Bool)

(assert (=> tb!1357 (= result!2431 tp_is_empty!2407)))

(assert (=> b!61324 t!4824))

(declare-fun b_and!3741 () Bool)

(assert (= b_and!3737 (and (=> t!4824 result!2431) b_and!3741)))

(declare-fun t!4826 () Bool)

(declare-fun tb!1359 () Bool)

(assert (=> (and b!60410 (= (defaultEntry!2066 newMap!16) (defaultEntry!2066 (_2!1034 lt!24902))) t!4826) tb!1359))

(declare-fun result!2433 () Bool)

(assert (= result!2433 result!2431))

(assert (=> b!61324 t!4826))

(declare-fun b_and!3743 () Bool)

(assert (= b_and!3739 (and (=> t!4826 result!2433) b_and!3743)))

(declare-fun m!54173 () Bool)

(assert (=> b!61314 m!54173))

(assert (=> b!61314 m!54173))

(declare-fun m!54175 () Bool)

(assert (=> b!61314 m!54175))

(declare-fun m!54177 () Bool)

(assert (=> b!61324 m!54177))

(declare-fun m!54179 () Bool)

(assert (=> b!61324 m!54179))

(declare-fun m!54181 () Bool)

(assert (=> b!61324 m!54181))

(assert (=> b!61324 m!54177))

(assert (=> b!61324 m!54173))

(declare-fun m!54183 () Bool)

(assert (=> b!61324 m!54183))

(assert (=> b!61324 m!54173))

(assert (=> b!61324 m!54179))

(declare-fun m!54185 () Bool)

(assert (=> b!61306 m!54185))

(declare-fun m!54187 () Bool)

(assert (=> b!61306 m!54187))

(declare-fun m!54189 () Bool)

(assert (=> b!61306 m!54189))

(declare-fun m!54191 () Bool)

(assert (=> b!61306 m!54191))

(declare-fun m!54193 () Bool)

(assert (=> b!61306 m!54193))

(declare-fun m!54195 () Bool)

(assert (=> b!61306 m!54195))

(assert (=> b!61306 m!54191))

(declare-fun m!54197 () Bool)

(assert (=> b!61306 m!54197))

(declare-fun m!54199 () Bool)

(assert (=> b!61306 m!54199))

(declare-fun m!54201 () Bool)

(assert (=> b!61306 m!54201))

(declare-fun m!54203 () Bool)

(assert (=> b!61306 m!54203))

(assert (=> b!61306 m!54173))

(assert (=> b!61306 m!54193))

(assert (=> b!61306 m!54187))

(declare-fun m!54205 () Bool)

(assert (=> b!61306 m!54205))

(declare-fun m!54207 () Bool)

(assert (=> b!61306 m!54207))

(declare-fun m!54209 () Bool)

(assert (=> b!61306 m!54209))

(assert (=> b!61306 m!54207))

(declare-fun m!54211 () Bool)

(assert (=> b!61306 m!54211))

(declare-fun m!54213 () Bool)

(assert (=> b!61306 m!54213))

(declare-fun m!54215 () Bool)

(assert (=> b!61306 m!54215))

(declare-fun m!54217 () Bool)

(assert (=> b!61309 m!54217))

(assert (=> bm!4722 m!54189))

(declare-fun m!54219 () Bool)

(assert (=> bm!4726 m!54219))

(assert (=> b!61320 m!54173))

(assert (=> b!61320 m!54173))

(assert (=> b!61320 m!54175))

(declare-fun m!54221 () Bool)

(assert (=> b!61319 m!54221))

(declare-fun m!54223 () Bool)

(assert (=> b!61307 m!54223))

(declare-fun m!54225 () Bool)

(assert (=> d!12139 m!54225))

(declare-fun m!54227 () Bool)

(assert (=> bm!4724 m!54227))

(assert (=> b!61312 m!54173))

(assert (=> b!61312 m!54173))

(declare-fun m!54229 () Bool)

(assert (=> b!61312 m!54229))

(declare-fun m!54231 () Bool)

(assert (=> bm!4725 m!54231))

(assert (=> d!11973 d!12139))

(assert (=> b!60889 d!11893))

(declare-fun d!12141 () Bool)

(declare-fun e!40293 () Bool)

(assert (=> d!12141 e!40293))

(declare-fun res!33808 () Bool)

(assert (=> d!12141 (=> res!33808 e!40293)))

(declare-fun lt!25363 () Bool)

(assert (=> d!12141 (= res!33808 (not lt!25363))))

(declare-fun lt!25361 () Bool)

(assert (=> d!12141 (= lt!25363 lt!25361)))

(declare-fun lt!25360 () Unit!1621)

(declare-fun e!40292 () Unit!1621)

(assert (=> d!12141 (= lt!25360 e!40292)))

(declare-fun c!8037 () Bool)

(assert (=> d!12141 (= c!8037 lt!25361)))

(assert (=> d!12141 (= lt!25361 (containsKey!127 (toList!696 lt!24824) lt!24829))))

(assert (=> d!12141 (= (contains!687 lt!24824 lt!24829) lt!25363)))

(declare-fun b!61327 () Bool)

(declare-fun lt!25362 () Unit!1621)

(assert (=> b!61327 (= e!40292 lt!25362)))

(assert (=> b!61327 (= lt!25362 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24824) lt!24829))))

(assert (=> b!61327 (isDefined!77 (getValueByKey!123 (toList!696 lt!24824) lt!24829))))

(declare-fun b!61328 () Bool)

(declare-fun Unit!1652 () Unit!1621)

(assert (=> b!61328 (= e!40292 Unit!1652)))

(declare-fun b!61329 () Bool)

(assert (=> b!61329 (= e!40293 (isDefined!77 (getValueByKey!123 (toList!696 lt!24824) lt!24829)))))

(assert (= (and d!12141 c!8037) b!61327))

(assert (= (and d!12141 (not c!8037)) b!61328))

(assert (= (and d!12141 (not res!33808)) b!61329))

(declare-fun m!54233 () Bool)

(assert (=> d!12141 m!54233))

(declare-fun m!54235 () Bool)

(assert (=> b!61327 m!54235))

(assert (=> b!61327 m!53721))

(assert (=> b!61327 m!53721))

(declare-fun m!54237 () Bool)

(assert (=> b!61327 m!54237))

(assert (=> b!61329 m!53721))

(assert (=> b!61329 m!53721))

(assert (=> b!61329 m!54237))

(assert (=> d!11999 d!12141))

(assert (=> d!11999 d!12009))

(assert (=> d!11999 d!12013))

(assert (=> d!11999 d!11995))

(declare-fun d!12143 () Bool)

(assert (=> d!12143 (= (apply!67 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24829) (apply!67 lt!24824 lt!24829))))

(assert (=> d!12143 true))

(declare-fun _$34!767 () Unit!1621)

(assert (=> d!12143 (= (choose!330 lt!24824 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24829) _$34!767)))

(declare-fun bs!2660 () Bool)

(assert (= bs!2660 d!12143))

(assert (=> bs!2660 m!53127))

(assert (=> bs!2660 m!53127))

(assert (=> bs!2660 m!53133))

(assert (=> bs!2660 m!53145))

(assert (=> d!11999 d!12143))

(assert (=> b!61065 d!12037))

(declare-fun d!12145 () Bool)

(assert (=> d!12145 (= (isDefined!77 (getValueByKey!123 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))) (not (isEmpty!301 (getValueByKey!123 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))))

(declare-fun bs!2661 () Bool)

(assert (= bs!2661 d!12145))

(assert (=> bs!2661 m!53479))

(declare-fun m!54239 () Bool)

(assert (=> bs!2661 m!54239))

(assert (=> b!60948 d!12145))

(declare-fun d!12147 () Bool)

(declare-fun c!8038 () Bool)

(assert (=> d!12147 (= c!8038 (and ((_ is Cons!1439) (toList!696 call!4636)) (= (_1!1035 (h!2021 (toList!696 call!4636))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(declare-fun e!40294 () Option!129)

(assert (=> d!12147 (= (getValueByKey!123 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) e!40294)))

(declare-fun b!61334 () Bool)

(declare-fun e!40295 () Option!129)

(assert (=> b!61334 (= e!40295 None!127)))

(declare-fun b!61331 () Bool)

(assert (=> b!61331 (= e!40294 (Some!128 (_2!1035 (h!2021 (toList!696 call!4636)))))))

(declare-fun b!61333 () Bool)

(assert (=> b!61333 (= e!40295 (getValueByKey!123 (t!4808 (toList!696 call!4636)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!61332 () Bool)

(assert (=> b!61332 (= e!40294 e!40295)))

(declare-fun c!8039 () Bool)

(assert (=> b!61332 (= c!8039 (and ((_ is Cons!1439) (toList!696 call!4636)) (not (= (_1!1035 (h!2021 (toList!696 call!4636))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))))

(assert (= (and d!12147 c!8038) b!61331))

(assert (= (and d!12147 (not c!8038)) b!61332))

(assert (= (and b!61332 c!8039) b!61333))

(assert (= (and b!61332 (not c!8039)) b!61334))

(assert (=> b!61333 m!52977))

(declare-fun m!54241 () Bool)

(assert (=> b!61333 m!54241))

(assert (=> b!60948 d!12147))

(declare-fun d!12149 () Bool)

(declare-fun e!40297 () Bool)

(assert (=> d!12149 e!40297))

(declare-fun res!33809 () Bool)

(assert (=> d!12149 (=> res!33809 e!40297)))

(declare-fun lt!25367 () Bool)

(assert (=> d!12149 (= res!33809 (not lt!25367))))

(declare-fun lt!25365 () Bool)

(assert (=> d!12149 (= lt!25367 lt!25365)))

(declare-fun lt!25364 () Unit!1621)

(declare-fun e!40296 () Unit!1621)

(assert (=> d!12149 (= lt!25364 e!40296)))

(declare-fun c!8040 () Bool)

(assert (=> d!12149 (= c!8040 lt!25365)))

(assert (=> d!12149 (= lt!25365 (containsKey!127 (toList!696 lt!25107) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!12149 (= (contains!687 lt!25107 #b1000000000000000000000000000000000000000000000000000000000000000) lt!25367)))

(declare-fun b!61335 () Bool)

(declare-fun lt!25366 () Unit!1621)

(assert (=> b!61335 (= e!40296 lt!25366)))

(assert (=> b!61335 (= lt!25366 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25107) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61335 (isDefined!77 (getValueByKey!123 (toList!696 lt!25107) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61336 () Bool)

(declare-fun Unit!1653 () Unit!1621)

(assert (=> b!61336 (= e!40296 Unit!1653)))

(declare-fun b!61337 () Bool)

(assert (=> b!61337 (= e!40297 (isDefined!77 (getValueByKey!123 (toList!696 lt!25107) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12149 c!8040) b!61335))

(assert (= (and d!12149 (not c!8040)) b!61336))

(assert (= (and d!12149 (not res!33809)) b!61337))

(declare-fun m!54243 () Bool)

(assert (=> d!12149 m!54243))

(declare-fun m!54245 () Bool)

(assert (=> b!61335 m!54245))

(declare-fun m!54247 () Bool)

(assert (=> b!61335 m!54247))

(assert (=> b!61335 m!54247))

(declare-fun m!54249 () Bool)

(assert (=> b!61335 m!54249))

(assert (=> b!61337 m!54247))

(assert (=> b!61337 m!54247))

(assert (=> b!61337 m!54249))

(assert (=> b!60975 d!12149))

(declare-fun d!12151 () Bool)

(declare-fun e!40298 () Bool)

(assert (=> d!12151 e!40298))

(declare-fun res!33810 () Bool)

(assert (=> d!12151 (=> (not res!33810) (not e!40298))))

(declare-fun lt!25370 () ListLongMap!1361)

(assert (=> d!12151 (= res!33810 (contains!687 lt!25370 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(declare-fun lt!25368 () List!1443)

(assert (=> d!12151 (= lt!25370 (ListLongMap!1362 lt!25368))))

(declare-fun lt!25369 () Unit!1621)

(declare-fun lt!25371 () Unit!1621)

(assert (=> d!12151 (= lt!25369 lt!25371)))

(assert (=> d!12151 (= (getValueByKey!123 lt!25368 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(assert (=> d!12151 (= lt!25371 (lemmaContainsTupThenGetReturnValue!43 lt!25368 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(assert (=> d!12151 (= lt!25368 (insertStrictlySorted!46 (toList!696 call!4700) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(assert (=> d!12151 (= (+!82 call!4700 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) lt!25370)))

(declare-fun b!61338 () Bool)

(declare-fun res!33811 () Bool)

(assert (=> b!61338 (=> (not res!33811) (not e!40298))))

(assert (=> b!61338 (= res!33811 (= (getValueByKey!123 (toList!696 lt!25370) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))))

(declare-fun b!61339 () Bool)

(assert (=> b!61339 (= e!40298 (contains!689 (toList!696 lt!25370) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))

(assert (= (and d!12151 res!33810) b!61338))

(assert (= (and b!61338 res!33811) b!61339))

(declare-fun m!54251 () Bool)

(assert (=> d!12151 m!54251))

(declare-fun m!54253 () Bool)

(assert (=> d!12151 m!54253))

(declare-fun m!54255 () Bool)

(assert (=> d!12151 m!54255))

(declare-fun m!54257 () Bool)

(assert (=> d!12151 m!54257))

(declare-fun m!54259 () Bool)

(assert (=> b!61338 m!54259))

(declare-fun m!54261 () Bool)

(assert (=> b!61339 m!54261))

(assert (=> b!61091 d!12151))

(assert (=> bm!4662 d!11965))

(declare-fun b!61340 () Bool)

(declare-fun res!33812 () Bool)

(declare-fun e!40301 () Bool)

(assert (=> b!61340 (=> (not res!33812) (not e!40301))))

(declare-fun lt!25372 () ListLongMap!1361)

(assert (=> b!61340 (= res!33812 (not (contains!687 lt!25372 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!61341 () Bool)

(declare-fun e!40304 () Bool)

(assert (=> b!61341 (= e!40304 (isEmpty!300 lt!25372))))

(declare-fun b!61342 () Bool)

(declare-fun e!40300 () Bool)

(declare-fun e!40305 () Bool)

(assert (=> b!61342 (= e!40300 e!40305)))

(assert (=> b!61342 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun res!33813 () Bool)

(assert (=> b!61342 (= res!33813 (contains!687 lt!25372 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!61342 (=> (not res!33813) (not e!40305))))

(declare-fun d!12153 () Bool)

(assert (=> d!12153 e!40301))

(declare-fun res!33814 () Bool)

(assert (=> d!12153 (=> (not res!33814) (not e!40301))))

(assert (=> d!12153 (= res!33814 (not (contains!687 lt!25372 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!40302 () ListLongMap!1361)

(assert (=> d!12153 (= lt!25372 e!40302)))

(declare-fun c!8044 () Bool)

(assert (=> d!12153 (= c!8044 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> d!12153 (validMask!0 (mask!5961 (v!2397 (underlying!227 thiss!992))))))

(assert (=> d!12153 (= (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))) lt!25372)))

(declare-fun b!61343 () Bool)

(declare-fun lt!25374 () Unit!1621)

(declare-fun lt!25375 () Unit!1621)

(assert (=> b!61343 (= lt!25374 lt!25375)))

(declare-fun lt!25378 () V!2857)

(declare-fun lt!25373 () (_ BitVec 64))

(declare-fun lt!25377 () ListLongMap!1361)

(declare-fun lt!25376 () (_ BitVec 64))

(assert (=> b!61343 (not (contains!687 (+!82 lt!25377 (tuple2!2049 lt!25373 lt!25378)) lt!25376))))

(assert (=> b!61343 (= lt!25375 (addStillNotContains!17 lt!25377 lt!25373 lt!25378 lt!25376))))

(assert (=> b!61343 (= lt!25376 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!61343 (= lt!25378 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!61343 (= lt!25373 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!4731 () ListLongMap!1361)

(assert (=> b!61343 (= lt!25377 call!4731)))

(declare-fun e!40303 () ListLongMap!1361)

(assert (=> b!61343 (= e!40303 (+!82 call!4731 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!4728 () Bool)

(assert (=> bm!4728 (= call!4731 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!61344 () Bool)

(declare-fun e!40299 () Bool)

(assert (=> b!61344 (= e!40299 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!61344 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!61345 () Bool)

(assert (=> b!61345 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> b!61345 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2013 (_values!2049 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> b!61345 (= e!40305 (= (apply!67 lt!25372 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!61346 () Bool)

(assert (=> b!61346 (= e!40302 e!40303)))

(declare-fun c!8043 () Bool)

(assert (=> b!61346 (= c!8043 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!61347 () Bool)

(assert (=> b!61347 (= e!40300 e!40304)))

(declare-fun c!8041 () Bool)

(assert (=> b!61347 (= c!8041 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!61348 () Bool)

(assert (=> b!61348 (= e!40301 e!40300)))

(declare-fun c!8042 () Bool)

(assert (=> b!61348 (= c!8042 e!40299)))

(declare-fun res!33815 () Bool)

(assert (=> b!61348 (=> (not res!33815) (not e!40299))))

(assert (=> b!61348 (= res!33815 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!61349 () Bool)

(assert (=> b!61349 (= e!40303 call!4731)))

(declare-fun b!61350 () Bool)

(assert (=> b!61350 (= e!40304 (= lt!25372 (getCurrentListMapNoExtraKeys!45 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (_values!2049 (v!2397 (underlying!227 thiss!992))) (mask!5961 (v!2397 (underlying!227 thiss!992))) (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) (minValue!1980 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!61351 () Bool)

(assert (=> b!61351 (= e!40302 (ListLongMap!1362 Nil!1440))))

(assert (= (and d!12153 c!8044) b!61351))

(assert (= (and d!12153 (not c!8044)) b!61346))

(assert (= (and b!61346 c!8043) b!61343))

(assert (= (and b!61346 (not c!8043)) b!61349))

(assert (= (or b!61343 b!61349) bm!4728))

(assert (= (and d!12153 res!33814) b!61340))

(assert (= (and b!61340 res!33812) b!61348))

(assert (= (and b!61348 res!33815) b!61344))

(assert (= (and b!61348 c!8042) b!61342))

(assert (= (and b!61348 (not c!8042)) b!61347))

(assert (= (and b!61342 res!33813) b!61345))

(assert (= (and b!61347 c!8041) b!61350))

(assert (= (and b!61347 (not c!8041)) b!61341))

(declare-fun b_lambda!2719 () Bool)

(assert (=> (not b_lambda!2719) (not b!61343)))

(assert (=> b!61343 t!4805))

(declare-fun b_and!3745 () Bool)

(assert (= b_and!3741 (and (=> t!4805 result!2407) b_and!3745)))

(assert (=> b!61343 t!4807))

(declare-fun b_and!3747 () Bool)

(assert (= b_and!3743 (and (=> t!4807 result!2411) b_and!3747)))

(declare-fun b_lambda!2721 () Bool)

(assert (=> (not b_lambda!2721) (not b!61345)))

(assert (=> b!61345 t!4805))

(declare-fun b_and!3749 () Bool)

(assert (= b_and!3745 (and (=> t!4805 result!2407) b_and!3749)))

(assert (=> b!61345 t!4807))

(declare-fun b_and!3751 () Bool)

(assert (= b_and!3747 (and (=> t!4807 result!2411) b_and!3751)))

(declare-fun m!54263 () Bool)

(assert (=> b!61340 m!54263))

(declare-fun m!54265 () Bool)

(assert (=> b!61341 m!54265))

(declare-fun m!54267 () Bool)

(assert (=> b!61343 m!54267))

(assert (=> b!61343 m!52985))

(declare-fun m!54269 () Bool)

(assert (=> b!61343 m!54269))

(declare-fun m!54271 () Bool)

(assert (=> b!61343 m!54271))

(declare-fun m!54273 () Bool)

(assert (=> b!61343 m!54273))

(assert (=> b!61343 m!54271))

(declare-fun m!54275 () Bool)

(assert (=> b!61343 m!54275))

(assert (=> b!61343 m!53471))

(assert (=> b!61343 m!54267))

(assert (=> b!61343 m!52985))

(declare-fun m!54277 () Bool)

(assert (=> b!61343 m!54277))

(declare-fun m!54279 () Bool)

(assert (=> b!61350 m!54279))

(assert (=> b!61342 m!53471))

(assert (=> b!61342 m!53471))

(declare-fun m!54281 () Bool)

(assert (=> b!61342 m!54281))

(assert (=> b!61345 m!53471))

(declare-fun m!54283 () Bool)

(assert (=> b!61345 m!54283))

(assert (=> b!61345 m!54267))

(assert (=> b!61345 m!52985))

(assert (=> b!61345 m!54269))

(assert (=> b!61345 m!53471))

(assert (=> b!61345 m!54267))

(assert (=> b!61345 m!52985))

(assert (=> bm!4728 m!54279))

(declare-fun m!54285 () Bool)

(assert (=> d!12153 m!54285))

(assert (=> d!12153 m!53015))

(assert (=> b!61344 m!53471))

(assert (=> b!61344 m!53471))

(declare-fun m!54287 () Bool)

(assert (=> b!61344 m!54287))

(assert (=> b!61346 m!53471))

(assert (=> b!61346 m!53471))

(assert (=> b!61346 m!54287))

(assert (=> bm!4682 d!12153))

(declare-fun b!61352 () Bool)

(declare-fun e!40306 () Bool)

(declare-fun e!40308 () Bool)

(assert (=> b!61352 (= e!40306 e!40308)))

(declare-fun lt!25380 () (_ BitVec 64))

(assert (=> b!61352 (= lt!25380 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000))))

(declare-fun lt!25379 () Unit!1621)

(assert (=> b!61352 (= lt!25379 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3693 (_2!1034 lt!24902)) lt!25380 #b00000000000000000000000000000000))))

(assert (=> b!61352 (arrayContainsKey!0 (_keys!3693 (_2!1034 lt!24902)) lt!25380 #b00000000000000000000000000000000)))

(declare-fun lt!25381 () Unit!1621)

(assert (=> b!61352 (= lt!25381 lt!25379)))

(declare-fun res!33817 () Bool)

(assert (=> b!61352 (= res!33817 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000) (_keys!3693 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902))) (Found!231 #b00000000000000000000000000000000)))))

(assert (=> b!61352 (=> (not res!33817) (not e!40308))))

(declare-fun bm!4729 () Bool)

(declare-fun call!4732 () Bool)

(assert (=> bm!4729 (= call!4732 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3693 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902))))))

(declare-fun b!61353 () Bool)

(assert (=> b!61353 (= e!40308 call!4732)))

(declare-fun b!61354 () Bool)

(assert (=> b!61354 (= e!40306 call!4732)))

(declare-fun d!12155 () Bool)

(declare-fun res!33816 () Bool)

(declare-fun e!40307 () Bool)

(assert (=> d!12155 (=> res!33816 e!40307)))

(assert (=> d!12155 (= res!33816 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))))))

(assert (=> d!12155 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3693 (_2!1034 lt!24902)) (mask!5961 (_2!1034 lt!24902))) e!40307)))

(declare-fun b!61355 () Bool)

(assert (=> b!61355 (= e!40307 e!40306)))

(declare-fun c!8045 () Bool)

(assert (=> b!61355 (= c!8045 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000)))))

(assert (= (and d!12155 (not res!33816)) b!61355))

(assert (= (and b!61355 c!8045) b!61352))

(assert (= (and b!61355 (not c!8045)) b!61354))

(assert (= (and b!61352 res!33817) b!61353))

(assert (= (or b!61353 b!61354) bm!4729))

(assert (=> b!61352 m!54173))

(declare-fun m!54289 () Bool)

(assert (=> b!61352 m!54289))

(declare-fun m!54291 () Bool)

(assert (=> b!61352 m!54291))

(assert (=> b!61352 m!54173))

(declare-fun m!54293 () Bool)

(assert (=> b!61352 m!54293))

(declare-fun m!54295 () Bool)

(assert (=> bm!4729 m!54295))

(assert (=> b!61355 m!54173))

(assert (=> b!61355 m!54173))

(assert (=> b!61355 m!54175))

(assert (=> b!60918 d!12155))

(declare-fun d!12157 () Bool)

(declare-fun e!40309 () Bool)

(assert (=> d!12157 e!40309))

(declare-fun res!33818 () Bool)

(assert (=> d!12157 (=> (not res!33818) (not e!40309))))

(declare-fun lt!25384 () ListLongMap!1361)

(assert (=> d!12157 (= res!33818 (contains!687 lt!25384 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!25382 () List!1443)

(assert (=> d!12157 (= lt!25384 (ListLongMap!1362 lt!25382))))

(declare-fun lt!25383 () Unit!1621)

(declare-fun lt!25385 () Unit!1621)

(assert (=> d!12157 (= lt!25383 lt!25385)))

(assert (=> d!12157 (= (getValueByKey!123 lt!25382 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12157 (= lt!25385 (lemmaContainsTupThenGetReturnValue!43 lt!25382 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12157 (= lt!25382 (insertStrictlySorted!46 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12157 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25384)))

(declare-fun b!61356 () Bool)

(declare-fun res!33819 () Bool)

(assert (=> b!61356 (=> (not res!33819) (not e!40309))))

(assert (=> b!61356 (= res!33819 (= (getValueByKey!123 (toList!696 lt!25384) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61357 () Bool)

(assert (=> b!61357 (= e!40309 (contains!689 (toList!696 lt!25384) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!12157 res!33818) b!61356))

(assert (= (and b!61356 res!33819) b!61357))

(declare-fun m!54297 () Bool)

(assert (=> d!12157 m!54297))

(declare-fun m!54299 () Bool)

(assert (=> d!12157 m!54299))

(declare-fun m!54301 () Bool)

(assert (=> d!12157 m!54301))

(declare-fun m!54303 () Bool)

(assert (=> d!12157 m!54303))

(declare-fun m!54305 () Bool)

(assert (=> b!61356 m!54305))

(declare-fun m!54307 () Bool)

(assert (=> b!61357 m!54307))

(assert (=> d!11921 d!12157))

(declare-fun bm!4730 () Bool)

(declare-fun call!4739 () ListLongMap!1361)

(declare-fun call!4738 () ListLongMap!1361)

(assert (=> bm!4730 (= call!4739 call!4738)))

(declare-fun b!61358 () Bool)

(declare-fun e!40315 () Unit!1621)

(declare-fun lt!25386 () Unit!1621)

(assert (=> b!61358 (= e!40315 lt!25386)))

(declare-fun lt!25393 () ListLongMap!1361)

(assert (=> b!61358 (= lt!25393 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25391 () (_ BitVec 64))

(assert (=> b!61358 (= lt!25391 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25387 () (_ BitVec 64))

(assert (=> b!61358 (= lt!25387 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25400 () Unit!1621)

(assert (=> b!61358 (= lt!25400 (addStillContains!43 lt!25393 lt!25391 (zeroValue!1980 newMap!16) lt!25387))))

(assert (=> b!61358 (contains!687 (+!82 lt!25393 (tuple2!2049 lt!25391 (zeroValue!1980 newMap!16))) lt!25387)))

(declare-fun lt!25406 () Unit!1621)

(assert (=> b!61358 (= lt!25406 lt!25400)))

(declare-fun lt!25397 () ListLongMap!1361)

(assert (=> b!61358 (= lt!25397 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25401 () (_ BitVec 64))

(assert (=> b!61358 (= lt!25401 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25404 () (_ BitVec 64))

(assert (=> b!61358 (= lt!25404 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25394 () Unit!1621)

(assert (=> b!61358 (= lt!25394 (addApplyDifferent!43 lt!25397 lt!25401 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25404))))

(assert (=> b!61358 (= (apply!67 (+!82 lt!25397 (tuple2!2049 lt!25401 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25404) (apply!67 lt!25397 lt!25404))))

(declare-fun lt!25395 () Unit!1621)

(assert (=> b!61358 (= lt!25395 lt!25394)))

(declare-fun lt!25402 () ListLongMap!1361)

(assert (=> b!61358 (= lt!25402 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25392 () (_ BitVec 64))

(assert (=> b!61358 (= lt!25392 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25407 () (_ BitVec 64))

(assert (=> b!61358 (= lt!25407 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25390 () Unit!1621)

(assert (=> b!61358 (= lt!25390 (addApplyDifferent!43 lt!25402 lt!25392 (zeroValue!1980 newMap!16) lt!25407))))

(assert (=> b!61358 (= (apply!67 (+!82 lt!25402 (tuple2!2049 lt!25392 (zeroValue!1980 newMap!16))) lt!25407) (apply!67 lt!25402 lt!25407))))

(declare-fun lt!25389 () Unit!1621)

(assert (=> b!61358 (= lt!25389 lt!25390)))

(declare-fun lt!25405 () ListLongMap!1361)

(assert (=> b!61358 (= lt!25405 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25398 () (_ BitVec 64))

(assert (=> b!61358 (= lt!25398 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25396 () (_ BitVec 64))

(assert (=> b!61358 (= lt!25396 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!61358 (= lt!25386 (addApplyDifferent!43 lt!25405 lt!25398 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!25396))))

(assert (=> b!61358 (= (apply!67 (+!82 lt!25405 (tuple2!2049 lt!25398 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25396) (apply!67 lt!25405 lt!25396))))

(declare-fun b!61359 () Bool)

(declare-fun e!40318 () Bool)

(declare-fun lt!25403 () ListLongMap!1361)

(assert (=> b!61359 (= e!40318 (= (apply!67 lt!25403 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1980 newMap!16)))))

(declare-fun b!61360 () Bool)

(declare-fun e!40320 () Bool)

(declare-fun call!4736 () Bool)

(assert (=> b!61360 (= e!40320 (not call!4736))))

(declare-fun bm!4731 () Bool)

(assert (=> bm!4731 (= call!4738 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun e!40322 () Bool)

(declare-fun b!61361 () Bool)

(assert (=> b!61361 (= e!40322 (= (apply!67 lt!25403 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!61362 () Bool)

(declare-fun e!40317 () ListLongMap!1361)

(declare-fun e!40316 () ListLongMap!1361)

(assert (=> b!61362 (= e!40317 e!40316)))

(declare-fun c!8050 () Bool)

(assert (=> b!61362 (= c!8050 (and (not (= (bvand lt!24897 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!24897 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4732 () Bool)

(declare-fun call!4734 () ListLongMap!1361)

(assert (=> bm!4732 (= call!4734 call!4739)))

(declare-fun b!61363 () Bool)

(declare-fun res!33823 () Bool)

(declare-fun e!40311 () Bool)

(assert (=> b!61363 (=> (not res!33823) (not e!40311))))

(declare-fun e!40313 () Bool)

(assert (=> b!61363 (= res!33823 e!40313)))

(declare-fun res!33822 () Bool)

(assert (=> b!61363 (=> res!33822 e!40313)))

(declare-fun e!40319 () Bool)

(assert (=> b!61363 (= res!33822 (not e!40319))))

(declare-fun res!33828 () Bool)

(assert (=> b!61363 (=> (not res!33828) (not e!40319))))

(assert (=> b!61363 (= res!33828 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61364 () Bool)

(declare-fun e!40310 () Bool)

(assert (=> b!61364 (= e!40313 e!40310)))

(declare-fun res!33824 () Bool)

(assert (=> b!61364 (=> (not res!33824) (not e!40310))))

(assert (=> b!61364 (= res!33824 (contains!687 lt!25403 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61364 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun bm!4733 () Bool)

(assert (=> bm!4733 (= call!4736 (contains!687 lt!25403 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61365 () Bool)

(declare-fun res!33825 () Bool)

(assert (=> b!61365 (=> (not res!33825) (not e!40311))))

(declare-fun e!40321 () Bool)

(assert (=> b!61365 (= res!33825 e!40321)))

(declare-fun c!8051 () Bool)

(assert (=> b!61365 (= c!8051 (not (= (bvand lt!24897 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!61366 () Bool)

(assert (=> b!61366 (= e!40319 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun call!4737 () ListLongMap!1361)

(declare-fun c!8048 () Bool)

(declare-fun bm!4734 () Bool)

(assert (=> bm!4734 (= call!4737 (+!82 (ite c!8048 call!4738 (ite c!8050 call!4739 call!4734)) (ite (or c!8048 c!8050) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!61367 () Bool)

(assert (=> b!61367 (= e!40311 e!40320)))

(declare-fun c!8049 () Bool)

(assert (=> b!61367 (= c!8049 (not (= (bvand lt!24897 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!61368 () Bool)

(declare-fun Unit!1654 () Unit!1621)

(assert (=> b!61368 (= e!40315 Unit!1654)))

(declare-fun b!61369 () Bool)

(declare-fun call!4735 () ListLongMap!1361)

(assert (=> b!61369 (= e!40316 call!4735)))

(declare-fun b!61370 () Bool)

(declare-fun e!40314 () ListLongMap!1361)

(assert (=> b!61370 (= e!40314 call!4734)))

(declare-fun b!61371 () Bool)

(assert (=> b!61371 (= e!40317 (+!82 call!4737 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!61372 () Bool)

(declare-fun e!40312 () Bool)

(assert (=> b!61372 (= e!40312 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61373 () Bool)

(declare-fun c!8047 () Bool)

(assert (=> b!61373 (= c!8047 (and (not (= (bvand lt!24897 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!24897 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!61373 (= e!40316 e!40314)))

(declare-fun b!61374 () Bool)

(assert (=> b!61374 (= e!40320 e!40322)))

(declare-fun res!33826 () Bool)

(assert (=> b!61374 (= res!33826 call!4736)))

(assert (=> b!61374 (=> (not res!33826) (not e!40322))))

(declare-fun d!12159 () Bool)

(assert (=> d!12159 e!40311))

(declare-fun res!33827 () Bool)

(assert (=> d!12159 (=> (not res!33827) (not e!40311))))

(assert (=> d!12159 (= res!33827 (or (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))))

(declare-fun lt!25388 () ListLongMap!1361)

(assert (=> d!12159 (= lt!25403 lt!25388)))

(declare-fun lt!25399 () Unit!1621)

(assert (=> d!12159 (= lt!25399 e!40315)))

(declare-fun c!8046 () Bool)

(assert (=> d!12159 (= c!8046 e!40312)))

(declare-fun res!33820 () Bool)

(assert (=> d!12159 (=> (not res!33820) (not e!40312))))

(assert (=> d!12159 (= res!33820 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12159 (= lt!25388 e!40317)))

(assert (=> d!12159 (= c!8048 (and (not (= (bvand lt!24897 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!24897 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!12159 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12159 (= (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25403)))

(declare-fun b!61375 () Bool)

(declare-fun call!4733 () Bool)

(assert (=> b!61375 (= e!40321 (not call!4733))))

(declare-fun b!61376 () Bool)

(assert (=> b!61376 (= e!40310 (= (apply!67 lt!25403 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (_values!2049 newMap!16)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!61376 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (_values!2049 newMap!16))))))

(assert (=> b!61376 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61377 () Bool)

(assert (=> b!61377 (= e!40314 call!4735)))

(declare-fun b!61378 () Bool)

(assert (=> b!61378 (= e!40321 e!40318)))

(declare-fun res!33821 () Bool)

(assert (=> b!61378 (= res!33821 call!4733)))

(assert (=> b!61378 (=> (not res!33821) (not e!40318))))

(declare-fun bm!4735 () Bool)

(assert (=> bm!4735 (= call!4733 (contains!687 lt!25403 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4736 () Bool)

(assert (=> bm!4736 (= call!4735 call!4737)))

(assert (= (and d!12159 c!8048) b!61371))

(assert (= (and d!12159 (not c!8048)) b!61362))

(assert (= (and b!61362 c!8050) b!61369))

(assert (= (and b!61362 (not c!8050)) b!61373))

(assert (= (and b!61373 c!8047) b!61377))

(assert (= (and b!61373 (not c!8047)) b!61370))

(assert (= (or b!61377 b!61370) bm!4732))

(assert (= (or b!61369 bm!4732) bm!4730))

(assert (= (or b!61369 b!61377) bm!4736))

(assert (= (or b!61371 bm!4730) bm!4731))

(assert (= (or b!61371 bm!4736) bm!4734))

(assert (= (and d!12159 res!33820) b!61372))

(assert (= (and d!12159 c!8046) b!61358))

(assert (= (and d!12159 (not c!8046)) b!61368))

(assert (= (and d!12159 res!33827) b!61363))

(assert (= (and b!61363 res!33828) b!61366))

(assert (= (and b!61363 (not res!33822)) b!61364))

(assert (= (and b!61364 res!33824) b!61376))

(assert (= (and b!61363 res!33823) b!61365))

(assert (= (and b!61365 c!8051) b!61378))

(assert (= (and b!61365 (not c!8051)) b!61375))

(assert (= (and b!61378 res!33821) b!61359))

(assert (= (or b!61378 b!61375) bm!4735))

(assert (= (and b!61365 res!33825) b!61367))

(assert (= (and b!61367 c!8049) b!61374))

(assert (= (and b!61367 (not c!8049)) b!61360))

(assert (= (and b!61374 res!33826) b!61361))

(assert (= (or b!61374 b!61360) bm!4733))

(declare-fun b_lambda!2723 () Bool)

(assert (=> (not b_lambda!2723) (not b!61376)))

(assert (=> b!61376 t!4820))

(declare-fun b_and!3753 () Bool)

(assert (= b_and!3749 (and (=> t!4820 result!2427) b_and!3753)))

(assert (=> b!61376 t!4822))

(declare-fun b_and!3755 () Bool)

(assert (= b_and!3751 (and (=> t!4822 result!2429) b_and!3755)))

(assert (=> b!61366 m!53263))

(assert (=> b!61366 m!53263))

(assert (=> b!61366 m!53265))

(assert (=> b!61376 m!53389))

(assert (=> b!61376 m!53391))

(assert (=> b!61376 m!53393))

(assert (=> b!61376 m!53389))

(assert (=> b!61376 m!53263))

(declare-fun m!54309 () Bool)

(assert (=> b!61376 m!54309))

(assert (=> b!61376 m!53263))

(assert (=> b!61376 m!53391))

(declare-fun m!54311 () Bool)

(assert (=> b!61358 m!54311))

(declare-fun m!54313 () Bool)

(assert (=> b!61358 m!54313))

(assert (=> b!61358 m!52987))

(declare-fun m!54315 () Bool)

(assert (=> b!61358 m!54315))

(declare-fun m!54317 () Bool)

(assert (=> b!61358 m!54317))

(declare-fun m!54319 () Bool)

(assert (=> b!61358 m!54319))

(declare-fun m!54321 () Bool)

(assert (=> b!61358 m!54321))

(assert (=> b!61358 m!54317))

(declare-fun m!54323 () Bool)

(assert (=> b!61358 m!54323))

(declare-fun m!54325 () Bool)

(assert (=> b!61358 m!54325))

(declare-fun m!54327 () Bool)

(assert (=> b!61358 m!54327))

(assert (=> b!61358 m!52987))

(declare-fun m!54329 () Bool)

(assert (=> b!61358 m!54329))

(assert (=> b!61358 m!53263))

(assert (=> b!61358 m!54319))

(assert (=> b!61358 m!54313))

(declare-fun m!54331 () Bool)

(assert (=> b!61358 m!54331))

(declare-fun m!54333 () Bool)

(assert (=> b!61358 m!54333))

(declare-fun m!54335 () Bool)

(assert (=> b!61358 m!54335))

(assert (=> b!61358 m!54333))

(declare-fun m!54337 () Bool)

(assert (=> b!61358 m!54337))

(declare-fun m!54339 () Bool)

(assert (=> b!61358 m!54339))

(assert (=> b!61358 m!52987))

(declare-fun m!54341 () Bool)

(assert (=> b!61358 m!54341))

(declare-fun m!54343 () Bool)

(assert (=> b!61361 m!54343))

(assert (=> bm!4731 m!52987))

(assert (=> bm!4731 m!54315))

(declare-fun m!54345 () Bool)

(assert (=> bm!4735 m!54345))

(assert (=> b!61372 m!53263))

(assert (=> b!61372 m!53263))

(assert (=> b!61372 m!53265))

(declare-fun m!54347 () Bool)

(assert (=> b!61371 m!54347))

(declare-fun m!54349 () Bool)

(assert (=> b!61359 m!54349))

(assert (=> d!12159 m!53365))

(declare-fun m!54351 () Bool)

(assert (=> bm!4733 m!54351))

(assert (=> b!61364 m!53263))

(assert (=> b!61364 m!53263))

(declare-fun m!54353 () Bool)

(assert (=> b!61364 m!54353))

(declare-fun m!54355 () Bool)

(assert (=> bm!4734 m!54355))

(assert (=> d!11921 d!12159))

(assert (=> d!11921 d!11929))

(declare-fun d!12161 () Bool)

(assert (=> d!12161 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(assert (=> d!12161 true))

(declare-fun _$8!49 () Unit!1621)

(assert (=> d!12161 (= (choose!325 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) lt!24897 (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)) _$8!49)))

(declare-fun bs!2662 () Bool)

(assert (= bs!2662 d!12161))

(assert (=> bs!2662 m!53109))

(assert (=> bs!2662 m!53109))

(assert (=> bs!2662 m!53375))

(assert (=> bs!2662 m!52987))

(assert (=> bs!2662 m!53377))

(assert (=> d!11921 d!12161))

(assert (=> d!11921 d!12045))

(declare-fun d!12163 () Bool)

(assert (=> d!12163 (contains!687 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))

(declare-fun lt!25410 () Unit!1621)

(declare-fun choose!333 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 64) (_ BitVec 32) Int) Unit!1621)

(assert (=> d!12163 (= lt!25410 (choose!333 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(assert (=> d!12163 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12163 (= (lemmaArrayContainsKeyThenInListMap!6 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25410)))

(declare-fun bs!2663 () Bool)

(assert (= bs!2663 d!12163))

(assert (=> bs!2663 m!53109))

(assert (=> bs!2663 m!53109))

(assert (=> bs!2663 m!52977))

(assert (=> bs!2663 m!53303))

(assert (=> bs!2663 m!52977))

(declare-fun m!54357 () Bool)

(assert (=> bs!2663 m!54357))

(assert (=> bs!2663 m!53365))

(assert (=> b!60851 d!12163))

(declare-fun d!12165 () Bool)

(declare-fun e!40324 () Bool)

(assert (=> d!12165 e!40324))

(declare-fun res!33829 () Bool)

(assert (=> d!12165 (=> res!33829 e!40324)))

(declare-fun lt!25414 () Bool)

(assert (=> d!12165 (= res!33829 (not lt!25414))))

(declare-fun lt!25412 () Bool)

(assert (=> d!12165 (= lt!25414 lt!25412)))

(declare-fun lt!25411 () Unit!1621)

(declare-fun e!40323 () Unit!1621)

(assert (=> d!12165 (= lt!25411 e!40323)))

(declare-fun c!8052 () Bool)

(assert (=> d!12165 (= c!8052 lt!25412)))

(assert (=> d!12165 (= lt!25412 (containsKey!127 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!12165 (= (contains!687 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) lt!25414)))

(declare-fun b!61379 () Bool)

(declare-fun lt!25413 () Unit!1621)

(assert (=> b!61379 (= e!40323 lt!25413)))

(assert (=> b!61379 (= lt!25413 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> b!61379 (isDefined!77 (getValueByKey!123 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!61380 () Bool)

(declare-fun Unit!1655 () Unit!1621)

(assert (=> b!61380 (= e!40323 Unit!1655)))

(declare-fun b!61381 () Bool)

(assert (=> b!61381 (= e!40324 (isDefined!77 (getValueByKey!123 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(assert (= (and d!12165 c!8052) b!61379))

(assert (= (and d!12165 (not c!8052)) b!61380))

(assert (= (and d!12165 (not res!33829)) b!61381))

(assert (=> d!12165 m!52977))

(declare-fun m!54359 () Bool)

(assert (=> d!12165 m!54359))

(assert (=> b!61379 m!52977))

(declare-fun m!54361 () Bool)

(assert (=> b!61379 m!54361))

(assert (=> b!61379 m!52977))

(declare-fun m!54363 () Bool)

(assert (=> b!61379 m!54363))

(assert (=> b!61379 m!54363))

(declare-fun m!54365 () Bool)

(assert (=> b!61379 m!54365))

(assert (=> b!61381 m!52977))

(assert (=> b!61381 m!54363))

(assert (=> b!61381 m!54363))

(assert (=> b!61381 m!54365))

(assert (=> b!60851 d!12165))

(assert (=> b!60851 d!11929))

(assert (=> d!11955 d!11957))

(assert (=> d!11955 d!11959))

(declare-fun d!12167 () Bool)

(assert (=> d!12167 (isDefined!77 (getValueByKey!123 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!12167 true))

(declare-fun _$12!308 () Unit!1621)

(assert (=> d!12167 (= (choose!327 (toList!696 lt!24715) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) _$12!308)))

(declare-fun bs!2664 () Bool)

(assert (= bs!2664 d!12167))

(assert (=> bs!2664 m!52977))

(assert (=> bs!2664 m!53171))

(assert (=> bs!2664 m!53171))

(assert (=> bs!2664 m!53173))

(assert (=> d!11955 d!12167))

(declare-fun d!12169 () Bool)

(declare-fun res!33834 () Bool)

(declare-fun e!40329 () Bool)

(assert (=> d!12169 (=> res!33834 e!40329)))

(assert (=> d!12169 (= res!33834 (or ((_ is Nil!1440) (toList!696 lt!24715)) ((_ is Nil!1440) (t!4808 (toList!696 lt!24715)))))))

(assert (=> d!12169 (= (isStrictlySorted!280 (toList!696 lt!24715)) e!40329)))

(declare-fun b!61386 () Bool)

(declare-fun e!40330 () Bool)

(assert (=> b!61386 (= e!40329 e!40330)))

(declare-fun res!33835 () Bool)

(assert (=> b!61386 (=> (not res!33835) (not e!40330))))

(assert (=> b!61386 (= res!33835 (bvslt (_1!1035 (h!2021 (toList!696 lt!24715))) (_1!1035 (h!2021 (t!4808 (toList!696 lt!24715))))))))

(declare-fun b!61387 () Bool)

(assert (=> b!61387 (= e!40330 (isStrictlySorted!280 (t!4808 (toList!696 lt!24715))))))

(assert (= (and d!12169 (not res!33834)) b!61386))

(assert (= (and b!61386 res!33835) b!61387))

(declare-fun m!54367 () Bool)

(assert (=> b!61387 m!54367))

(assert (=> d!11955 d!12169))

(declare-fun d!12171 () Bool)

(declare-fun res!33836 () Bool)

(declare-fun e!40331 () Bool)

(assert (=> d!12171 (=> res!33836 e!40331)))

(assert (=> d!12171 (= res!33836 (and ((_ is Cons!1439) (toList!696 lt!24825)) (= (_1!1035 (h!2021 (toList!696 lt!24825))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!12171 (= (containsKey!127 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!40331)))

(declare-fun b!61388 () Bool)

(declare-fun e!40332 () Bool)

(assert (=> b!61388 (= e!40331 e!40332)))

(declare-fun res!33837 () Bool)

(assert (=> b!61388 (=> (not res!33837) (not e!40332))))

(assert (=> b!61388 (= res!33837 (and (or (not ((_ is Cons!1439) (toList!696 lt!24825))) (bvsle (_1!1035 (h!2021 (toList!696 lt!24825))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1439) (toList!696 lt!24825)) (bvslt (_1!1035 (h!2021 (toList!696 lt!24825))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!61389 () Bool)

(assert (=> b!61389 (= e!40332 (containsKey!127 (t!4808 (toList!696 lt!24825)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!12171 (not res!33836)) b!61388))

(assert (= (and b!61388 res!33837) b!61389))

(assert (=> b!61389 m!53111))

(declare-fun m!54369 () Bool)

(assert (=> b!61389 m!54369))

(assert (=> d!11987 d!12171))

(declare-fun d!12173 () Bool)

(declare-fun res!33838 () Bool)

(declare-fun e!40333 () Bool)

(assert (=> d!12173 (=> res!33838 e!40333)))

(assert (=> d!12173 (= res!33838 (and ((_ is Cons!1439) (toList!696 e!39929)) (= (_1!1035 (h!2021 (toList!696 e!39929))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(assert (=> d!12173 (= (containsKey!127 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) e!40333)))

(declare-fun b!61390 () Bool)

(declare-fun e!40334 () Bool)

(assert (=> b!61390 (= e!40333 e!40334)))

(declare-fun res!33839 () Bool)

(assert (=> b!61390 (=> (not res!33839) (not e!40334))))

(assert (=> b!61390 (= res!33839 (and (or (not ((_ is Cons!1439) (toList!696 e!39929))) (bvsle (_1!1035 (h!2021 (toList!696 e!39929))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))) ((_ is Cons!1439) (toList!696 e!39929)) (bvslt (_1!1035 (h!2021 (toList!696 e!39929))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(declare-fun b!61391 () Bool)

(assert (=> b!61391 (= e!40334 (containsKey!127 (t!4808 (toList!696 e!39929)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (= (and d!12173 (not res!33838)) b!61390))

(assert (= (and b!61390 res!33839) b!61391))

(assert (=> b!61391 m!52977))

(declare-fun m!54371 () Bool)

(assert (=> b!61391 m!54371))

(assert (=> d!11953 d!12173))

(declare-fun d!12175 () Bool)

(declare-fun lt!25415 () Bool)

(assert (=> d!12175 (= lt!25415 (select (content!66 (toList!696 lt!25209)) (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun e!40336 () Bool)

(assert (=> d!12175 (= lt!25415 e!40336)))

(declare-fun res!33840 () Bool)

(assert (=> d!12175 (=> (not res!33840) (not e!40336))))

(assert (=> d!12175 (= res!33840 ((_ is Cons!1439) (toList!696 lt!25209)))))

(assert (=> d!12175 (= (contains!689 (toList!696 lt!25209) (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!25415)))

(declare-fun b!61392 () Bool)

(declare-fun e!40335 () Bool)

(assert (=> b!61392 (= e!40336 e!40335)))

(declare-fun res!33841 () Bool)

(assert (=> b!61392 (=> res!33841 e!40335)))

(assert (=> b!61392 (= res!33841 (= (h!2021 (toList!696 lt!25209)) (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!61393 () Bool)

(assert (=> b!61393 (= e!40335 (contains!689 (t!4808 (toList!696 lt!25209)) (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(assert (= (and d!12175 res!33840) b!61392))

(assert (= (and b!61392 (not res!33841)) b!61393))

(declare-fun m!54373 () Bool)

(assert (=> d!12175 m!54373))

(declare-fun m!54375 () Bool)

(assert (=> d!12175 m!54375))

(declare-fun m!54377 () Bool)

(assert (=> b!61393 m!54377))

(assert (=> b!61112 d!12175))

(declare-fun c!8053 () Bool)

(declare-fun d!12177 () Bool)

(assert (=> d!12177 (= c!8053 (and ((_ is Cons!1439) (toList!696 lt!25215)) (= (_1!1035 (h!2021 (toList!696 lt!25215))) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40337 () Option!129)

(assert (=> d!12177 (= (getValueByKey!123 (toList!696 lt!25215) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) e!40337)))

(declare-fun b!61397 () Bool)

(declare-fun e!40338 () Option!129)

(assert (=> b!61397 (= e!40338 None!127)))

(declare-fun b!61394 () Bool)

(assert (=> b!61394 (= e!40337 (Some!128 (_2!1035 (h!2021 (toList!696 lt!25215)))))))

(declare-fun b!61396 () Bool)

(assert (=> b!61396 (= e!40338 (getValueByKey!123 (t!4808 (toList!696 lt!25215)) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61395 () Bool)

(assert (=> b!61395 (= e!40337 e!40338)))

(declare-fun c!8054 () Bool)

(assert (=> b!61395 (= c!8054 (and ((_ is Cons!1439) (toList!696 lt!25215)) (not (= (_1!1035 (h!2021 (toList!696 lt!25215))) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12177 c!8053) b!61394))

(assert (= (and d!12177 (not c!8053)) b!61395))

(assert (= (and b!61395 c!8054) b!61396))

(assert (= (and b!61395 (not c!8054)) b!61397))

(declare-fun m!54379 () Bool)

(assert (=> b!61396 m!54379))

(assert (=> b!61115 d!12177))

(declare-fun lt!25416 () Bool)

(declare-fun d!12179 () Bool)

(assert (=> d!12179 (= lt!25416 (select (content!66 (toList!696 lt!25145)) (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun e!40340 () Bool)

(assert (=> d!12179 (= lt!25416 e!40340)))

(declare-fun res!33842 () Bool)

(assert (=> d!12179 (=> (not res!33842) (not e!40340))))

(assert (=> d!12179 (= res!33842 ((_ is Cons!1439) (toList!696 lt!25145)))))

(assert (=> d!12179 (= (contains!689 (toList!696 lt!25145) (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25416)))

(declare-fun b!61398 () Bool)

(declare-fun e!40339 () Bool)

(assert (=> b!61398 (= e!40340 e!40339)))

(declare-fun res!33843 () Bool)

(assert (=> b!61398 (=> res!33843 e!40339)))

(assert (=> b!61398 (= res!33843 (= (h!2021 (toList!696 lt!25145)) (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61399 () Bool)

(assert (=> b!61399 (= e!40339 (contains!689 (t!4808 (toList!696 lt!25145)) (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (= (and d!12179 res!33842) b!61398))

(assert (= (and b!61398 (not res!33843)) b!61399))

(declare-fun m!54381 () Bool)

(assert (=> d!12179 m!54381))

(declare-fun m!54383 () Bool)

(assert (=> d!12179 m!54383))

(declare-fun m!54385 () Bool)

(assert (=> b!61399 m!54385))

(assert (=> b!61050 d!12179))

(declare-fun d!12181 () Bool)

(declare-fun c!8055 () Bool)

(assert (=> d!12181 (= c!8055 (and ((_ is Cons!1439) (toList!696 lt!25132)) (= (_1!1035 (h!2021 (toList!696 lt!25132))) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!40341 () Option!129)

(assert (=> d!12181 (= (getValueByKey!123 (toList!696 lt!25132) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!40341)))

(declare-fun b!61403 () Bool)

(declare-fun e!40342 () Option!129)

(assert (=> b!61403 (= e!40342 None!127)))

(declare-fun b!61400 () Bool)

(assert (=> b!61400 (= e!40341 (Some!128 (_2!1035 (h!2021 (toList!696 lt!25132)))))))

(declare-fun b!61402 () Bool)

(assert (=> b!61402 (= e!40342 (getValueByKey!123 (t!4808 (toList!696 lt!25132)) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61401 () Bool)

(assert (=> b!61401 (= e!40341 e!40342)))

(declare-fun c!8056 () Bool)

(assert (=> b!61401 (= c!8056 (and ((_ is Cons!1439) (toList!696 lt!25132)) (not (= (_1!1035 (h!2021 (toList!696 lt!25132))) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!12181 c!8055) b!61400))

(assert (= (and d!12181 (not c!8055)) b!61401))

(assert (= (and b!61401 c!8056) b!61402))

(assert (= (and b!61401 (not c!8056)) b!61403))

(declare-fun m!54387 () Bool)

(assert (=> b!61402 m!54387))

(assert (=> b!61035 d!12181))

(assert (=> d!11977 d!11965))

(declare-fun d!12183 () Bool)

(declare-fun e!40345 () Bool)

(assert (=> d!12183 e!40345))

(declare-fun res!33849 () Bool)

(assert (=> d!12183 (=> (not res!33849) (not e!40345))))

(declare-fun lt!25419 () SeekEntryResult!231)

(assert (=> d!12183 (= res!33849 ((_ is Found!231) lt!25419))))

(assert (=> d!12183 (= lt!25419 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(assert (=> d!12183 true))

(declare-fun _$33!45 () Unit!1621)

(assert (=> d!12183 (= (choose!328 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (defaultEntry!2066 newMap!16)) _$33!45)))

(declare-fun b!61408 () Bool)

(declare-fun res!33848 () Bool)

(assert (=> b!61408 (=> (not res!33848) (not e!40345))))

(assert (=> b!61408 (= res!33848 (inRange!0 (index!3049 lt!25419) (mask!5961 newMap!16)))))

(declare-fun b!61409 () Bool)

(assert (=> b!61409 (= e!40345 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!25419)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (= (and d!12183 res!33849) b!61408))

(assert (= (and b!61408 res!33848) b!61409))

(assert (=> d!12183 m!52977))

(assert (=> d!12183 m!53207))

(declare-fun m!54389 () Bool)

(assert (=> b!61408 m!54389))

(declare-fun m!54391 () Bool)

(assert (=> b!61409 m!54391))

(assert (=> d!11977 d!12183))

(assert (=> d!11977 d!12045))

(declare-fun d!12185 () Bool)

(declare-fun lt!25420 () Bool)

(assert (=> d!12185 (= lt!25420 (select (content!66 (toList!696 lt!25038)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun e!40347 () Bool)

(assert (=> d!12185 (= lt!25420 e!40347)))

(declare-fun res!33850 () Bool)

(assert (=> d!12185 (=> (not res!33850) (not e!40347))))

(assert (=> d!12185 (= res!33850 ((_ is Cons!1439) (toList!696 lt!25038)))))

(assert (=> d!12185 (= (contains!689 (toList!696 lt!25038) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!25420)))

(declare-fun b!61410 () Bool)

(declare-fun e!40346 () Bool)

(assert (=> b!61410 (= e!40347 e!40346)))

(declare-fun res!33851 () Bool)

(assert (=> b!61410 (=> res!33851 e!40346)))

(assert (=> b!61410 (= res!33851 (= (h!2021 (toList!696 lt!25038)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!61411 () Bool)

(assert (=> b!61411 (= e!40346 (contains!689 (t!4808 (toList!696 lt!25038)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(assert (= (and d!12185 res!33850) b!61410))

(assert (= (and b!61410 (not res!33851)) b!61411))

(declare-fun m!54393 () Bool)

(assert (=> d!12185 m!54393))

(declare-fun m!54395 () Bool)

(assert (=> d!12185 m!54395))

(declare-fun m!54397 () Bool)

(assert (=> b!61411 m!54397))

(assert (=> b!60865 d!12185))

(declare-fun c!8057 () Bool)

(declare-fun d!12187 () Bool)

(assert (=> d!12187 (= c!8057 (and ((_ is Cons!1439) (toList!696 lt!25226)) (= (_1!1035 (h!2021 (toList!696 lt!25226))) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40348 () Option!129)

(assert (=> d!12187 (= (getValueByKey!123 (toList!696 lt!25226) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) e!40348)))

(declare-fun b!61415 () Bool)

(declare-fun e!40349 () Option!129)

(assert (=> b!61415 (= e!40349 None!127)))

(declare-fun b!61412 () Bool)

(assert (=> b!61412 (= e!40348 (Some!128 (_2!1035 (h!2021 (toList!696 lt!25226)))))))

(declare-fun b!61414 () Bool)

(assert (=> b!61414 (= e!40349 (getValueByKey!123 (t!4808 (toList!696 lt!25226)) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61413 () Bool)

(assert (=> b!61413 (= e!40348 e!40349)))

(declare-fun c!8058 () Bool)

(assert (=> b!61413 (= c!8058 (and ((_ is Cons!1439) (toList!696 lt!25226)) (not (= (_1!1035 (h!2021 (toList!696 lt!25226))) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12187 c!8057) b!61412))

(assert (= (and d!12187 (not c!8057)) b!61413))

(assert (= (and b!61413 c!8058) b!61414))

(assert (= (and b!61413 (not c!8058)) b!61415))

(declare-fun m!54399 () Bool)

(assert (=> b!61414 m!54399))

(assert (=> b!61121 d!12187))

(assert (=> bm!4679 d!11989))

(declare-fun d!12189 () Bool)

(assert (=> d!12189 (isDefined!77 (getValueByKey!123 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun lt!25421 () Unit!1621)

(assert (=> d!12189 (= lt!25421 (choose!327 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun e!40350 () Bool)

(assert (=> d!12189 e!40350))

(declare-fun res!33852 () Bool)

(assert (=> d!12189 (=> (not res!33852) (not e!40350))))

(assert (=> d!12189 (= res!33852 (isStrictlySorted!280 (toList!696 e!39929)))))

(assert (=> d!12189 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) lt!25421)))

(declare-fun b!61416 () Bool)

(assert (=> b!61416 (= e!40350 (containsKey!127 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (= (and d!12189 res!33852) b!61416))

(assert (=> d!12189 m!52977))

(assert (=> d!12189 m!53519))

(assert (=> d!12189 m!53519))

(assert (=> d!12189 m!53521))

(assert (=> d!12189 m!52977))

(declare-fun m!54401 () Bool)

(assert (=> d!12189 m!54401))

(declare-fun m!54403 () Bool)

(assert (=> d!12189 m!54403))

(assert (=> b!61416 m!52977))

(assert (=> b!61416 m!53515))

(assert (=> b!60987 d!12189))

(declare-fun d!12191 () Bool)

(assert (=> d!12191 (= (isDefined!77 (getValueByKey!123 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))) (not (isEmpty!301 (getValueByKey!123 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))))

(declare-fun bs!2665 () Bool)

(assert (= bs!2665 d!12191))

(assert (=> bs!2665 m!53519))

(declare-fun m!54405 () Bool)

(assert (=> bs!2665 m!54405))

(assert (=> b!60987 d!12191))

(declare-fun c!8059 () Bool)

(declare-fun d!12193 () Bool)

(assert (=> d!12193 (= c!8059 (and ((_ is Cons!1439) (toList!696 e!39929)) (= (_1!1035 (h!2021 (toList!696 e!39929))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(declare-fun e!40351 () Option!129)

(assert (=> d!12193 (= (getValueByKey!123 (toList!696 e!39929) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) e!40351)))

(declare-fun b!61420 () Bool)

(declare-fun e!40352 () Option!129)

(assert (=> b!61420 (= e!40352 None!127)))

(declare-fun b!61417 () Bool)

(assert (=> b!61417 (= e!40351 (Some!128 (_2!1035 (h!2021 (toList!696 e!39929)))))))

(declare-fun b!61419 () Bool)

(assert (=> b!61419 (= e!40352 (getValueByKey!123 (t!4808 (toList!696 e!39929)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!61418 () Bool)

(assert (=> b!61418 (= e!40351 e!40352)))

(declare-fun c!8060 () Bool)

(assert (=> b!61418 (= c!8060 (and ((_ is Cons!1439) (toList!696 e!39929)) (not (= (_1!1035 (h!2021 (toList!696 e!39929))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))))

(assert (= (and d!12193 c!8059) b!61417))

(assert (= (and d!12193 (not c!8059)) b!61418))

(assert (= (and b!61418 c!8060) b!61419))

(assert (= (and b!61418 (not c!8060)) b!61420))

(assert (=> b!61419 m!52977))

(declare-fun m!54407 () Bool)

(assert (=> b!61419 m!54407))

(assert (=> b!60987 d!12193))

(declare-fun d!12195 () Bool)

(declare-fun e!40354 () Bool)

(assert (=> d!12195 e!40354))

(declare-fun res!33853 () Bool)

(assert (=> d!12195 (=> res!33853 e!40354)))

(declare-fun lt!25425 () Bool)

(assert (=> d!12195 (= res!33853 (not lt!25425))))

(declare-fun lt!25423 () Bool)

(assert (=> d!12195 (= lt!25425 lt!25423)))

(declare-fun lt!25422 () Unit!1621)

(declare-fun e!40353 () Unit!1621)

(assert (=> d!12195 (= lt!25422 e!40353)))

(declare-fun c!8061 () Bool)

(assert (=> d!12195 (= c!8061 lt!25423)))

(assert (=> d!12195 (= lt!25423 (containsKey!127 (toList!696 lt!25226) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12195 (= (contains!687 lt!25226 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25425)))

(declare-fun b!61421 () Bool)

(declare-fun lt!25424 () Unit!1621)

(assert (=> b!61421 (= e!40353 lt!25424)))

(assert (=> b!61421 (= lt!25424 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25226) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> b!61421 (isDefined!77 (getValueByKey!123 (toList!696 lt!25226) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61422 () Bool)

(declare-fun Unit!1656 () Unit!1621)

(assert (=> b!61422 (= e!40353 Unit!1656)))

(declare-fun b!61423 () Bool)

(assert (=> b!61423 (= e!40354 (isDefined!77 (getValueByKey!123 (toList!696 lt!25226) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (= (and d!12195 c!8061) b!61421))

(assert (= (and d!12195 (not c!8061)) b!61422))

(assert (= (and d!12195 (not res!33853)) b!61423))

(declare-fun m!54409 () Bool)

(assert (=> d!12195 m!54409))

(declare-fun m!54411 () Bool)

(assert (=> b!61421 m!54411))

(assert (=> b!61421 m!53781))

(assert (=> b!61421 m!53781))

(declare-fun m!54413 () Bool)

(assert (=> b!61421 m!54413))

(assert (=> b!61423 m!53781))

(assert (=> b!61423 m!53781))

(assert (=> b!61423 m!54413))

(assert (=> d!12011 d!12195))

(declare-fun d!12197 () Bool)

(declare-fun c!8062 () Bool)

(assert (=> d!12197 (= c!8062 (and ((_ is Cons!1439) lt!25224) (= (_1!1035 (h!2021 lt!25224)) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40355 () Option!129)

(assert (=> d!12197 (= (getValueByKey!123 lt!25224 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) e!40355)))

(declare-fun b!61427 () Bool)

(declare-fun e!40356 () Option!129)

(assert (=> b!61427 (= e!40356 None!127)))

(declare-fun b!61424 () Bool)

(assert (=> b!61424 (= e!40355 (Some!128 (_2!1035 (h!2021 lt!25224))))))

(declare-fun b!61426 () Bool)

(assert (=> b!61426 (= e!40356 (getValueByKey!123 (t!4808 lt!25224) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61425 () Bool)

(assert (=> b!61425 (= e!40355 e!40356)))

(declare-fun c!8063 () Bool)

(assert (=> b!61425 (= c!8063 (and ((_ is Cons!1439) lt!25224) (not (= (_1!1035 (h!2021 lt!25224)) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12197 c!8062) b!61424))

(assert (= (and d!12197 (not c!8062)) b!61425))

(assert (= (and b!61425 c!8063) b!61426))

(assert (= (and b!61425 (not c!8063)) b!61427))

(declare-fun m!54415 () Bool)

(assert (=> b!61426 m!54415))

(assert (=> d!12011 d!12197))

(declare-fun d!12199 () Bool)

(assert (=> d!12199 (= (getValueByKey!123 lt!25224 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lt!25426 () Unit!1621)

(assert (=> d!12199 (= lt!25426 (choose!332 lt!25224 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun e!40357 () Bool)

(assert (=> d!12199 e!40357))

(declare-fun res!33854 () Bool)

(assert (=> d!12199 (=> (not res!33854) (not e!40357))))

(assert (=> d!12199 (= res!33854 (isStrictlySorted!280 lt!25224))))

(assert (=> d!12199 (= (lemmaContainsTupThenGetReturnValue!43 lt!25224 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25426)))

(declare-fun b!61428 () Bool)

(declare-fun res!33855 () Bool)

(assert (=> b!61428 (=> (not res!33855) (not e!40357))))

(assert (=> b!61428 (= res!33855 (containsKey!127 lt!25224 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61429 () Bool)

(assert (=> b!61429 (= e!40357 (contains!689 lt!25224 (tuple2!2049 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (= (and d!12199 res!33854) b!61428))

(assert (= (and b!61428 res!33855) b!61429))

(assert (=> d!12199 m!53775))

(declare-fun m!54417 () Bool)

(assert (=> d!12199 m!54417))

(declare-fun m!54419 () Bool)

(assert (=> d!12199 m!54419))

(declare-fun m!54421 () Bool)

(assert (=> b!61428 m!54421))

(declare-fun m!54423 () Bool)

(assert (=> b!61429 m!54423))

(assert (=> d!12011 d!12199))

(declare-fun c!8067 () Bool)

(declare-fun b!61430 () Bool)

(assert (=> b!61430 (= c!8067 (and ((_ is Cons!1439) (toList!696 lt!24827)) (bvsgt (_1!1035 (h!2021 (toList!696 lt!24827))) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40361 () List!1443)

(declare-fun e!40359 () List!1443)

(assert (=> b!61430 (= e!40361 e!40359)))

(declare-fun bm!4737 () Bool)

(declare-fun call!4740 () List!1443)

(declare-fun call!4741 () List!1443)

(assert (=> bm!4737 (= call!4740 call!4741)))

(declare-fun b!61431 () Bool)

(declare-fun call!4742 () List!1443)

(assert (=> b!61431 (= e!40359 call!4742)))

(declare-fun b!61432 () Bool)

(declare-fun res!33856 () Bool)

(declare-fun e!40362 () Bool)

(assert (=> b!61432 (=> (not res!33856) (not e!40362))))

(declare-fun lt!25427 () List!1443)

(assert (=> b!61432 (= res!33856 (containsKey!127 lt!25427 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun c!8065 () Bool)

(declare-fun e!40358 () List!1443)

(declare-fun b!61433 () Bool)

(assert (=> b!61433 (= e!40358 (ite c!8065 (t!4808 (toList!696 lt!24827)) (ite c!8067 (Cons!1439 (h!2021 (toList!696 lt!24827)) (t!4808 (toList!696 lt!24827))) Nil!1440)))))

(declare-fun d!12201 () Bool)

(assert (=> d!12201 e!40362))

(declare-fun res!33857 () Bool)

(assert (=> d!12201 (=> (not res!33857) (not e!40362))))

(assert (=> d!12201 (= res!33857 (isStrictlySorted!280 lt!25427))))

(declare-fun e!40360 () List!1443)

(assert (=> d!12201 (= lt!25427 e!40360)))

(declare-fun c!8066 () Bool)

(assert (=> d!12201 (= c!8066 (and ((_ is Cons!1439) (toList!696 lt!24827)) (bvslt (_1!1035 (h!2021 (toList!696 lt!24827))) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> d!12201 (isStrictlySorted!280 (toList!696 lt!24827))))

(assert (=> d!12201 (= (insertStrictlySorted!46 (toList!696 lt!24827) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25427)))

(declare-fun b!61434 () Bool)

(assert (=> b!61434 (= e!40358 (insertStrictlySorted!46 (t!4808 (toList!696 lt!24827)) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun bm!4738 () Bool)

(assert (=> bm!4738 (= call!4742 call!4740)))

(declare-fun b!61435 () Bool)

(assert (=> b!61435 (= e!40360 call!4741)))

(declare-fun bm!4739 () Bool)

(assert (=> bm!4739 (= call!4741 ($colon$colon!60 e!40358 (ite c!8066 (h!2021 (toList!696 lt!24827)) (tuple2!2049 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun c!8064 () Bool)

(assert (=> bm!4739 (= c!8064 c!8066)))

(declare-fun b!61436 () Bool)

(assert (=> b!61436 (= e!40361 call!4740)))

(declare-fun b!61437 () Bool)

(assert (=> b!61437 (= e!40362 (contains!689 lt!25427 (tuple2!2049 (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61438 () Bool)

(assert (=> b!61438 (= e!40360 e!40361)))

(assert (=> b!61438 (= c!8065 (and ((_ is Cons!1439) (toList!696 lt!24827)) (= (_1!1035 (h!2021 (toList!696 lt!24827))) (_1!1035 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61439 () Bool)

(assert (=> b!61439 (= e!40359 call!4742)))

(assert (= (and d!12201 c!8066) b!61435))

(assert (= (and d!12201 (not c!8066)) b!61438))

(assert (= (and b!61438 c!8065) b!61436))

(assert (= (and b!61438 (not c!8065)) b!61430))

(assert (= (and b!61430 c!8067) b!61431))

(assert (= (and b!61430 (not c!8067)) b!61439))

(assert (= (or b!61431 b!61439) bm!4738))

(assert (= (or b!61436 bm!4738) bm!4737))

(assert (= (or b!61435 bm!4737) bm!4739))

(assert (= (and bm!4739 c!8064) b!61434))

(assert (= (and bm!4739 (not c!8064)) b!61433))

(assert (= (and d!12201 res!33857) b!61432))

(assert (= (and b!61432 res!33856) b!61437))

(declare-fun m!54425 () Bool)

(assert (=> b!61437 m!54425))

(declare-fun m!54427 () Bool)

(assert (=> b!61432 m!54427))

(declare-fun m!54429 () Bool)

(assert (=> d!12201 m!54429))

(declare-fun m!54431 () Bool)

(assert (=> d!12201 m!54431))

(declare-fun m!54433 () Bool)

(assert (=> bm!4739 m!54433))

(declare-fun m!54435 () Bool)

(assert (=> b!61434 m!54435))

(assert (=> d!12011 d!12201))

(declare-fun d!12203 () Bool)

(assert (=> d!12203 (= (get!1086 (getValueByKey!123 (toList!696 lt!24819) lt!24826)) (v!2402 (getValueByKey!123 (toList!696 lt!24819) lt!24826)))))

(assert (=> d!12015 d!12203))

(declare-fun d!12205 () Bool)

(declare-fun c!8068 () Bool)

(assert (=> d!12205 (= c!8068 (and ((_ is Cons!1439) (toList!696 lt!24819)) (= (_1!1035 (h!2021 (toList!696 lt!24819))) lt!24826)))))

(declare-fun e!40363 () Option!129)

(assert (=> d!12205 (= (getValueByKey!123 (toList!696 lt!24819) lt!24826) e!40363)))

(declare-fun b!61443 () Bool)

(declare-fun e!40364 () Option!129)

(assert (=> b!61443 (= e!40364 None!127)))

(declare-fun b!61440 () Bool)

(assert (=> b!61440 (= e!40363 (Some!128 (_2!1035 (h!2021 (toList!696 lt!24819)))))))

(declare-fun b!61442 () Bool)

(assert (=> b!61442 (= e!40364 (getValueByKey!123 (t!4808 (toList!696 lt!24819)) lt!24826))))

(declare-fun b!61441 () Bool)

(assert (=> b!61441 (= e!40363 e!40364)))

(declare-fun c!8069 () Bool)

(assert (=> b!61441 (= c!8069 (and ((_ is Cons!1439) (toList!696 lt!24819)) (not (= (_1!1035 (h!2021 (toList!696 lt!24819))) lt!24826))))))

(assert (= (and d!12205 c!8068) b!61440))

(assert (= (and d!12205 (not c!8068)) b!61441))

(assert (= (and b!61441 c!8069) b!61442))

(assert (= (and b!61441 (not c!8069)) b!61443))

(declare-fun m!54437 () Bool)

(assert (=> b!61442 m!54437))

(assert (=> d!12015 d!12205))

(declare-fun d!12207 () Bool)

(assert (=> d!12207 (isDefined!77 (getValueByKey!123 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(declare-fun lt!25428 () Unit!1621)

(assert (=> d!12207 (= lt!25428 (choose!327 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(declare-fun e!40365 () Bool)

(assert (=> d!12207 e!40365))

(declare-fun res!33858 () Bool)

(assert (=> d!12207 (=> (not res!33858) (not e!40365))))

(assert (=> d!12207 (= res!33858 (isStrictlySorted!280 (toList!696 call!4646)))))

(assert (=> d!12207 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))) lt!25428)))

(declare-fun b!61444 () Bool)

(assert (=> b!61444 (= e!40365 (containsKey!127 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(assert (= (and d!12207 res!33858) b!61444))

(assert (=> d!12207 m!53225))

(assert (=> d!12207 m!53359))

(assert (=> d!12207 m!53359))

(assert (=> d!12207 m!53361))

(assert (=> d!12207 m!53225))

(declare-fun m!54439 () Bool)

(assert (=> d!12207 m!54439))

(declare-fun m!54441 () Bool)

(assert (=> d!12207 m!54441))

(assert (=> b!61444 m!53225))

(assert (=> b!61444 m!53355))

(assert (=> b!60876 d!12207))

(declare-fun d!12209 () Bool)

(assert (=> d!12209 (= (isDefined!77 (getValueByKey!123 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917)))) (not (isEmpty!301 (getValueByKey!123 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))))

(declare-fun bs!2666 () Bool)

(assert (= bs!2666 d!12209))

(assert (=> bs!2666 m!53359))

(declare-fun m!54443 () Bool)

(assert (=> bs!2666 m!54443))

(assert (=> b!60876 d!12209))

(declare-fun c!8070 () Bool)

(declare-fun d!12211 () Bool)

(assert (=> d!12211 (= c!8070 (and ((_ is Cons!1439) (toList!696 call!4646)) (= (_1!1035 (h!2021 (toList!696 call!4646))) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917)))))))

(declare-fun e!40366 () Option!129)

(assert (=> d!12211 (= (getValueByKey!123 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))) e!40366)))

(declare-fun b!61448 () Bool)

(declare-fun e!40367 () Option!129)

(assert (=> b!61448 (= e!40367 None!127)))

(declare-fun b!61445 () Bool)

(assert (=> b!61445 (= e!40366 (Some!128 (_2!1035 (h!2021 (toList!696 call!4646)))))))

(declare-fun b!61447 () Bool)

(assert (=> b!61447 (= e!40367 (getValueByKey!123 (t!4808 (toList!696 call!4646)) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(declare-fun b!61446 () Bool)

(assert (=> b!61446 (= e!40366 e!40367)))

(declare-fun c!8071 () Bool)

(assert (=> b!61446 (= c!8071 (and ((_ is Cons!1439) (toList!696 call!4646)) (not (= (_1!1035 (h!2021 (toList!696 call!4646))) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))))

(assert (= (and d!12211 c!8070) b!61445))

(assert (= (and d!12211 (not c!8070)) b!61446))

(assert (= (and b!61446 c!8071) b!61447))

(assert (= (and b!61446 (not c!8071)) b!61448))

(assert (=> b!61447 m!53225))

(declare-fun m!54445 () Bool)

(assert (=> b!61447 m!54445))

(assert (=> b!60876 d!12211))

(declare-fun b!61449 () Bool)

(declare-fun e!40369 () (_ BitVec 32))

(assert (=> b!61449 (= e!40369 #b00000000000000000000000000000000)))

(declare-fun b!61451 () Bool)

(declare-fun e!40368 () (_ BitVec 32))

(declare-fun call!4743 () (_ BitVec 32))

(assert (=> b!61451 (= e!40368 call!4743)))

(declare-fun bm!4740 () Bool)

(assert (=> bm!4740 (= call!4743 (arrayCountValidKeys!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!61452 () Bool)

(assert (=> b!61452 (= e!40369 e!40368)))

(declare-fun c!8072 () Bool)

(assert (=> b!61452 (= c!8072 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!12213 () Bool)

(declare-fun lt!25429 () (_ BitVec 32))

(assert (=> d!12213 (and (bvsge lt!25429 #b00000000000000000000000000000000) (bvsle lt!25429 (bvsub (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!12213 (= lt!25429 e!40369)))

(declare-fun c!8073 () Bool)

(assert (=> d!12213 (= c!8073 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> d!12213 (and (bvsle #b00000000000000000000000000000000 (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> d!12213 (= (arrayCountValidKeys!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000 (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))) lt!25429)))

(declare-fun b!61450 () Bool)

(assert (=> b!61450 (= e!40368 (bvadd #b00000000000000000000000000000001 call!4743))))

(assert (= (and d!12213 c!8073) b!61449))

(assert (= (and d!12213 (not c!8073)) b!61452))

(assert (= (and b!61452 c!8072) b!61450))

(assert (= (and b!61452 (not c!8072)) b!61451))

(assert (= (or b!61450 b!61451) bm!4740))

(declare-fun m!54447 () Bool)

(assert (=> bm!4740 m!54447))

(assert (=> b!61452 m!54041))

(assert (=> b!61452 m!54041))

(assert (=> b!61452 m!54051))

(assert (=> b!61099 d!12213))

(assert (=> bm!4687 d!12077))

(declare-fun d!12215 () Bool)

(assert (=> d!12215 (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!25430 () Unit!1621)

(assert (=> d!12215 (= lt!25430 (choose!327 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!40370 () Bool)

(assert (=> d!12215 e!40370))

(declare-fun res!33859 () Bool)

(assert (=> d!12215 (=> (not res!33859) (not e!40370))))

(assert (=> d!12215 (= res!33859 (isStrictlySorted!280 (toList!696 lt!24825)))))

(assert (=> d!12215 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!25430)))

(declare-fun b!61453 () Bool)

(assert (=> b!61453 (= e!40370 (containsKey!127 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!12215 res!33859) b!61453))

(assert (=> d!12215 m!53111))

(assert (=> d!12215 m!53483))

(assert (=> d!12215 m!53483))

(assert (=> d!12215 m!53709))

(assert (=> d!12215 m!53111))

(declare-fun m!54449 () Bool)

(assert (=> d!12215 m!54449))

(declare-fun m!54451 () Bool)

(assert (=> d!12215 m!54451))

(assert (=> b!61453 m!53111))

(assert (=> b!61453 m!53705))

(assert (=> b!61102 d!12215))

(declare-fun d!12217 () Bool)

(assert (=> d!12217 (= (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!301 (getValueByKey!123 (toList!696 lt!24825) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!2667 () Bool)

(assert (= bs!2667 d!12217))

(assert (=> bs!2667 m!53483))

(declare-fun m!54453 () Bool)

(assert (=> bs!2667 m!54453))

(assert (=> b!61102 d!12217))

(assert (=> b!61102 d!12067))

(declare-fun d!12219 () Bool)

(assert (=> d!12219 (= (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!301 (getValueByKey!123 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2668 () Bool)

(assert (= bs!2668 d!12219))

(assert (=> bs!2668 m!53491))

(declare-fun m!54455 () Bool)

(assert (=> bs!2668 m!54455))

(assert (=> b!61133 d!12219))

(assert (=> b!61133 d!12063))

(declare-fun d!12221 () Bool)

(declare-fun e!40372 () Bool)

(assert (=> d!12221 e!40372))

(declare-fun res!33860 () Bool)

(assert (=> d!12221 (=> res!33860 e!40372)))

(declare-fun lt!25434 () Bool)

(assert (=> d!12221 (= res!33860 (not lt!25434))))

(declare-fun lt!25432 () Bool)

(assert (=> d!12221 (= lt!25434 lt!25432)))

(declare-fun lt!25431 () Unit!1621)

(declare-fun e!40371 () Unit!1621)

(assert (=> d!12221 (= lt!25431 e!40371)))

(declare-fun c!8074 () Bool)

(assert (=> d!12221 (= c!8074 lt!25432)))

(assert (=> d!12221 (= lt!25432 (containsKey!127 (toList!696 lt!25192) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!12221 (= (contains!687 lt!25192 #b1000000000000000000000000000000000000000000000000000000000000000) lt!25434)))

(declare-fun b!61454 () Bool)

(declare-fun lt!25433 () Unit!1621)

(assert (=> b!61454 (= e!40371 lt!25433)))

(assert (=> b!61454 (= lt!25433 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25192) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61454 (isDefined!77 (getValueByKey!123 (toList!696 lt!25192) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61455 () Bool)

(declare-fun Unit!1657 () Unit!1621)

(assert (=> b!61455 (= e!40371 Unit!1657)))

(declare-fun b!61456 () Bool)

(assert (=> b!61456 (= e!40372 (isDefined!77 (getValueByKey!123 (toList!696 lt!25192) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12221 c!8074) b!61454))

(assert (= (and d!12221 (not c!8074)) b!61455))

(assert (= (and d!12221 (not res!33860)) b!61456))

(declare-fun m!54457 () Bool)

(assert (=> d!12221 m!54457))

(declare-fun m!54459 () Bool)

(assert (=> b!61454 m!54459))

(declare-fun m!54461 () Bool)

(assert (=> b!61454 m!54461))

(assert (=> b!61454 m!54461))

(declare-fun m!54463 () Bool)

(assert (=> b!61454 m!54463))

(assert (=> b!61456 m!54461))

(assert (=> b!61456 m!54461))

(assert (=> b!61456 m!54463))

(assert (=> bm!4696 d!12221))

(declare-fun d!12223 () Bool)

(assert (=> d!12223 (= (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809)) (not (isEmpty!301 (getValueByKey!123 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809))))))

(declare-fun bs!2669 () Bool)

(assert (= bs!2669 d!12223))

(assert (=> bs!2669 m!53765))

(declare-fun m!54465 () Bool)

(assert (=> bs!2669 m!54465))

(assert (=> b!61120 d!12223))

(declare-fun d!12225 () Bool)

(declare-fun c!8075 () Bool)

(assert (=> d!12225 (= c!8075 (and ((_ is Cons!1439) (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))) (= (_1!1035 (h!2021 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24809)))))

(declare-fun e!40373 () Option!129)

(assert (=> d!12225 (= (getValueByKey!123 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809) e!40373)))

(declare-fun b!61460 () Bool)

(declare-fun e!40374 () Option!129)

(assert (=> b!61460 (= e!40374 None!127)))

(declare-fun b!61457 () Bool)

(assert (=> b!61457 (= e!40373 (Some!128 (_2!1035 (h!2021 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))))

(declare-fun b!61459 () Bool)

(assert (=> b!61459 (= e!40374 (getValueByKey!123 (t!4808 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))) lt!24809))))

(declare-fun b!61458 () Bool)

(assert (=> b!61458 (= e!40373 e!40374)))

(declare-fun c!8076 () Bool)

(assert (=> b!61458 (= c!8076 (and ((_ is Cons!1439) (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))) (not (= (_1!1035 (h!2021 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24809))))))

(assert (= (and d!12225 c!8075) b!61457))

(assert (= (and d!12225 (not c!8075)) b!61458))

(assert (= (and b!61458 c!8076) b!61459))

(assert (= (and b!61458 (not c!8076)) b!61460))

(declare-fun m!54467 () Bool)

(assert (=> b!61459 m!54467))

(assert (=> b!61120 d!12225))

(declare-fun b!61461 () Bool)

(declare-fun e!40377 () Bool)

(assert (=> b!61461 (= e!40377 (contains!688 Nil!1441 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000)))))

(declare-fun d!12227 () Bool)

(declare-fun res!33861 () Bool)

(declare-fun e!40378 () Bool)

(assert (=> d!12227 (=> res!33861 e!40378)))

(assert (=> d!12227 (= res!33861 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))))))

(assert (=> d!12227 (= (arrayNoDuplicates!0 (_keys!3693 (_2!1034 lt!24902)) #b00000000000000000000000000000000 Nil!1441) e!40378)))

(declare-fun b!61462 () Bool)

(declare-fun e!40375 () Bool)

(declare-fun call!4744 () Bool)

(assert (=> b!61462 (= e!40375 call!4744)))

(declare-fun bm!4741 () Bool)

(declare-fun c!8077 () Bool)

(assert (=> bm!4741 (= call!4744 (arrayNoDuplicates!0 (_keys!3693 (_2!1034 lt!24902)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!8077 (Cons!1440 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000) Nil!1441) Nil!1441)))))

(declare-fun b!61463 () Bool)

(declare-fun e!40376 () Bool)

(assert (=> b!61463 (= e!40376 e!40375)))

(assert (=> b!61463 (= c!8077 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000)))))

(declare-fun b!61464 () Bool)

(assert (=> b!61464 (= e!40375 call!4744)))

(declare-fun b!61465 () Bool)

(assert (=> b!61465 (= e!40378 e!40376)))

(declare-fun res!33862 () Bool)

(assert (=> b!61465 (=> (not res!33862) (not e!40376))))

(assert (=> b!61465 (= res!33862 (not e!40377))))

(declare-fun res!33863 () Bool)

(assert (=> b!61465 (=> (not res!33863) (not e!40377))))

(assert (=> b!61465 (= res!33863 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000)))))

(assert (= (and d!12227 (not res!33861)) b!61465))

(assert (= (and b!61465 res!33863) b!61461))

(assert (= (and b!61465 res!33862) b!61463))

(assert (= (and b!61463 c!8077) b!61464))

(assert (= (and b!61463 (not c!8077)) b!61462))

(assert (= (or b!61464 b!61462) bm!4741))

(assert (=> b!61461 m!54173))

(assert (=> b!61461 m!54173))

(declare-fun m!54469 () Bool)

(assert (=> b!61461 m!54469))

(assert (=> bm!4741 m!54173))

(declare-fun m!54471 () Bool)

(assert (=> bm!4741 m!54471))

(assert (=> b!61463 m!54173))

(assert (=> b!61463 m!54173))

(assert (=> b!61463 m!54175))

(assert (=> b!61465 m!54173))

(assert (=> b!61465 m!54173))

(assert (=> b!61465 m!54175))

(assert (=> b!60919 d!12227))

(declare-fun d!12229 () Bool)

(assert (=> d!12229 (= (apply!67 lt!25192 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1086 (getValueByKey!123 (toList!696 lt!25192) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2670 () Bool)

(assert (= bs!2670 d!12229))

(declare-fun m!54473 () Bool)

(assert (=> bs!2670 m!54473))

(assert (=> bs!2670 m!54473))

(declare-fun m!54475 () Bool)

(assert (=> bs!2670 m!54475))

(assert (=> b!61079 d!12229))

(assert (=> b!60852 d!11937))

(declare-fun d!12231 () Bool)

(assert (=> d!12231 (= (apply!67 lt!25192 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1086 (getValueByKey!123 (toList!696 lt!25192) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2671 () Bool)

(assert (= bs!2671 d!12231))

(assert (=> bs!2671 m!53263))

(declare-fun m!54477 () Bool)

(assert (=> bs!2671 m!54477))

(assert (=> bs!2671 m!54477))

(declare-fun m!54479 () Bool)

(assert (=> bs!2671 m!54479))

(assert (=> b!61096 d!12231))

(declare-fun c!8078 () Bool)

(declare-fun d!12233 () Bool)

(assert (=> d!12233 (= c!8078 ((_ is ValueCellFull!860) (select (arr!1781 (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!40379 () V!2857)

(assert (=> d!12233 (= (get!1083 (select (arr!1781 (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!40379)))

(declare-fun b!61466 () Bool)

(assert (=> b!61466 (= e!40379 (get!1084 (select (arr!1781 (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!61467 () Bool)

(assert (=> b!61467 (= e!40379 (get!1085 (select (arr!1781 (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12233 c!8078) b!61466))

(assert (= (and d!12233 (not c!8078)) b!61467))

(assert (=> b!61466 m!53639))

(assert (=> b!61466 m!53391))

(declare-fun m!54481 () Bool)

(assert (=> b!61466 m!54481))

(assert (=> b!61467 m!53639))

(assert (=> b!61467 m!53391))

(declare-fun m!54483 () Bool)

(assert (=> b!61467 m!54483))

(assert (=> b!61096 d!12233))

(declare-fun d!12235 () Bool)

(assert (=> d!12235 (= (inRange!0 (index!3049 lt!25151) (mask!5961 newMap!16)) (and (bvsge (index!3049 lt!25151) #b00000000000000000000000000000000) (bvslt (index!3049 lt!25151) (bvadd (mask!5961 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!61055 d!12235))

(declare-fun d!12237 () Bool)

(declare-fun e!40381 () Bool)

(assert (=> d!12237 e!40381))

(declare-fun res!33864 () Bool)

(assert (=> d!12237 (=> res!33864 e!40381)))

(declare-fun lt!25438 () Bool)

(assert (=> d!12237 (= res!33864 (not lt!25438))))

(declare-fun lt!25436 () Bool)

(assert (=> d!12237 (= lt!25438 lt!25436)))

(declare-fun lt!25435 () Unit!1621)

(declare-fun e!40380 () Unit!1621)

(assert (=> d!12237 (= lt!25435 e!40380)))

(declare-fun c!8079 () Bool)

(assert (=> d!12237 (= c!8079 lt!25436)))

(assert (=> d!12237 (= lt!25436 (containsKey!127 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(assert (=> d!12237 (= (contains!687 (getCurrentListMap!392 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))) lt!25438)))

(declare-fun b!61468 () Bool)

(declare-fun lt!25437 () Unit!1621)

(assert (=> b!61468 (= e!40380 lt!25437)))

(assert (=> b!61468 (= lt!25437 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(assert (=> b!61468 (isDefined!77 (getValueByKey!123 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(declare-fun b!61469 () Bool)

(declare-fun Unit!1658 () Unit!1621)

(assert (=> b!61469 (= e!40380 Unit!1658)))

(declare-fun b!61470 () Bool)

(assert (=> b!61470 (= e!40381 (isDefined!77 (getValueByKey!123 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917)))))))

(assert (= (and d!12237 c!8079) b!61468))

(assert (= (and d!12237 (not c!8079)) b!61469))

(assert (= (and d!12237 (not res!33864)) b!61470))

(assert (=> d!12237 m!53225))

(declare-fun m!54485 () Bool)

(assert (=> d!12237 m!54485))

(assert (=> b!61468 m!53225))

(declare-fun m!54487 () Bool)

(assert (=> b!61468 m!54487))

(assert (=> b!61468 m!53225))

(declare-fun m!54489 () Bool)

(assert (=> b!61468 m!54489))

(assert (=> b!61468 m!54489))

(declare-fun m!54491 () Bool)

(assert (=> b!61468 m!54491))

(assert (=> b!61470 m!53225))

(assert (=> b!61470 m!54489))

(assert (=> b!61470 m!54489))

(assert (=> b!61470 m!54491))

(assert (=> b!60881 d!12237))

(declare-fun bm!4742 () Bool)

(declare-fun call!4751 () ListLongMap!1361)

(declare-fun call!4750 () ListLongMap!1361)

(assert (=> bm!4742 (= call!4751 call!4750)))

(declare-fun b!61471 () Bool)

(declare-fun e!40387 () Unit!1621)

(declare-fun lt!25439 () Unit!1621)

(assert (=> b!61471 (= e!40387 lt!25439)))

(declare-fun lt!25446 () ListLongMap!1361)

(assert (=> b!61471 (= lt!25446 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25444 () (_ BitVec 64))

(assert (=> b!61471 (= lt!25444 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25440 () (_ BitVec 64))

(assert (=> b!61471 (= lt!25440 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25453 () Unit!1621)

(assert (=> b!61471 (= lt!25453 (addStillContains!43 lt!25446 lt!25444 (zeroValue!1980 newMap!16) lt!25440))))

(assert (=> b!61471 (contains!687 (+!82 lt!25446 (tuple2!2049 lt!25444 (zeroValue!1980 newMap!16))) lt!25440)))

(declare-fun lt!25459 () Unit!1621)

(assert (=> b!61471 (= lt!25459 lt!25453)))

(declare-fun lt!25450 () ListLongMap!1361)

(assert (=> b!61471 (= lt!25450 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25454 () (_ BitVec 64))

(assert (=> b!61471 (= lt!25454 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25457 () (_ BitVec 64))

(assert (=> b!61471 (= lt!25457 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25447 () Unit!1621)

(assert (=> b!61471 (= lt!25447 (addApplyDifferent!43 lt!25450 lt!25454 (minValue!1980 newMap!16) lt!25457))))

(assert (=> b!61471 (= (apply!67 (+!82 lt!25450 (tuple2!2049 lt!25454 (minValue!1980 newMap!16))) lt!25457) (apply!67 lt!25450 lt!25457))))

(declare-fun lt!25448 () Unit!1621)

(assert (=> b!61471 (= lt!25448 lt!25447)))

(declare-fun lt!25455 () ListLongMap!1361)

(assert (=> b!61471 (= lt!25455 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25445 () (_ BitVec 64))

(assert (=> b!61471 (= lt!25445 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25460 () (_ BitVec 64))

(assert (=> b!61471 (= lt!25460 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25443 () Unit!1621)

(assert (=> b!61471 (= lt!25443 (addApplyDifferent!43 lt!25455 lt!25445 (zeroValue!1980 newMap!16) lt!25460))))

(assert (=> b!61471 (= (apply!67 (+!82 lt!25455 (tuple2!2049 lt!25445 (zeroValue!1980 newMap!16))) lt!25460) (apply!67 lt!25455 lt!25460))))

(declare-fun lt!25442 () Unit!1621)

(assert (=> b!61471 (= lt!25442 lt!25443)))

(declare-fun lt!25458 () ListLongMap!1361)

(assert (=> b!61471 (= lt!25458 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25451 () (_ BitVec 64))

(assert (=> b!61471 (= lt!25451 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25449 () (_ BitVec 64))

(assert (=> b!61471 (= lt!25449 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!61471 (= lt!25439 (addApplyDifferent!43 lt!25458 lt!25451 (minValue!1980 newMap!16) lt!25449))))

(assert (=> b!61471 (= (apply!67 (+!82 lt!25458 (tuple2!2049 lt!25451 (minValue!1980 newMap!16))) lt!25449) (apply!67 lt!25458 lt!25449))))

(declare-fun b!61472 () Bool)

(declare-fun e!40390 () Bool)

(declare-fun lt!25456 () ListLongMap!1361)

(assert (=> b!61472 (= e!40390 (= (apply!67 lt!25456 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1980 newMap!16)))))

(declare-fun b!61473 () Bool)

(declare-fun e!40392 () Bool)

(declare-fun call!4748 () Bool)

(assert (=> b!61473 (= e!40392 (not call!4748))))

(declare-fun bm!4743 () Bool)

(assert (=> bm!4743 (= call!4750 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun b!61474 () Bool)

(declare-fun e!40394 () Bool)

(assert (=> b!61474 (= e!40394 (= (apply!67 lt!25456 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1980 newMap!16)))))

(declare-fun b!61475 () Bool)

(declare-fun e!40389 () ListLongMap!1361)

(declare-fun e!40388 () ListLongMap!1361)

(assert (=> b!61475 (= e!40389 e!40388)))

(declare-fun c!8084 () Bool)

(assert (=> b!61475 (= c!8084 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4744 () Bool)

(declare-fun call!4746 () ListLongMap!1361)

(assert (=> bm!4744 (= call!4746 call!4751)))

(declare-fun b!61476 () Bool)

(declare-fun res!33868 () Bool)

(declare-fun e!40383 () Bool)

(assert (=> b!61476 (=> (not res!33868) (not e!40383))))

(declare-fun e!40385 () Bool)

(assert (=> b!61476 (= res!33868 e!40385)))

(declare-fun res!33867 () Bool)

(assert (=> b!61476 (=> res!33867 e!40385)))

(declare-fun e!40391 () Bool)

(assert (=> b!61476 (= res!33867 (not e!40391))))

(declare-fun res!33873 () Bool)

(assert (=> b!61476 (=> (not res!33873) (not e!40391))))

(assert (=> b!61476 (= res!33873 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61477 () Bool)

(declare-fun e!40382 () Bool)

(assert (=> b!61477 (= e!40385 e!40382)))

(declare-fun res!33869 () Bool)

(assert (=> b!61477 (=> (not res!33869) (not e!40382))))

(assert (=> b!61477 (= res!33869 (contains!687 lt!25456 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61477 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun bm!4745 () Bool)

(assert (=> bm!4745 (= call!4748 (contains!687 lt!25456 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61478 () Bool)

(declare-fun res!33870 () Bool)

(assert (=> b!61478 (=> (not res!33870) (not e!40383))))

(declare-fun e!40393 () Bool)

(assert (=> b!61478 (= res!33870 e!40393)))

(declare-fun c!8085 () Bool)

(assert (=> b!61478 (= c!8085 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!61479 () Bool)

(assert (=> b!61479 (= e!40391 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!4746 () Bool)

(declare-fun call!4749 () ListLongMap!1361)

(declare-fun c!8082 () Bool)

(assert (=> bm!4746 (= call!4749 (+!82 (ite c!8082 call!4750 (ite c!8084 call!4751 call!4746)) (ite (or c!8082 c!8084) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(declare-fun b!61480 () Bool)

(assert (=> b!61480 (= e!40383 e!40392)))

(declare-fun c!8083 () Bool)

(assert (=> b!61480 (= c!8083 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!61481 () Bool)

(declare-fun Unit!1659 () Unit!1621)

(assert (=> b!61481 (= e!40387 Unit!1659)))

(declare-fun b!61482 () Bool)

(declare-fun call!4747 () ListLongMap!1361)

(assert (=> b!61482 (= e!40388 call!4747)))

(declare-fun b!61483 () Bool)

(declare-fun e!40386 () ListLongMap!1361)

(assert (=> b!61483 (= e!40386 call!4746)))

(declare-fun b!61484 () Bool)

(assert (=> b!61484 (= e!40389 (+!82 call!4749 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))

(declare-fun b!61485 () Bool)

(declare-fun e!40384 () Bool)

(assert (=> b!61485 (= e!40384 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61486 () Bool)

(declare-fun c!8081 () Bool)

(assert (=> b!61486 (= c!8081 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!61486 (= e!40388 e!40386)))

(declare-fun b!61487 () Bool)

(assert (=> b!61487 (= e!40392 e!40394)))

(declare-fun res!33871 () Bool)

(assert (=> b!61487 (= res!33871 call!4748)))

(assert (=> b!61487 (=> (not res!33871) (not e!40394))))

(declare-fun d!12239 () Bool)

(assert (=> d!12239 e!40383))

(declare-fun res!33872 () Bool)

(assert (=> d!12239 (=> (not res!33872) (not e!40383))))

(assert (=> d!12239 (= res!33872 (or (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))))

(declare-fun lt!25441 () ListLongMap!1361)

(assert (=> d!12239 (= lt!25456 lt!25441)))

(declare-fun lt!25452 () Unit!1621)

(assert (=> d!12239 (= lt!25452 e!40387)))

(declare-fun c!8080 () Bool)

(assert (=> d!12239 (= c!8080 e!40384)))

(declare-fun res!33865 () Bool)

(assert (=> d!12239 (=> (not res!33865) (not e!40384))))

(assert (=> d!12239 (= res!33865 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12239 (= lt!25441 e!40389)))

(assert (=> d!12239 (= c!8082 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!12239 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12239 (= (getCurrentListMap!392 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25456)))

(declare-fun b!61488 () Bool)

(declare-fun call!4745 () Bool)

(assert (=> b!61488 (= e!40393 (not call!4745))))

(declare-fun b!61489 () Bool)

(assert (=> b!61489 (= e!40382 (= (apply!67 lt!25456 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 lt!24922) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!61489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 lt!24922)))))

(assert (=> b!61489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61490 () Bool)

(assert (=> b!61490 (= e!40386 call!4747)))

(declare-fun b!61491 () Bool)

(assert (=> b!61491 (= e!40393 e!40390)))

(declare-fun res!33866 () Bool)

(assert (=> b!61491 (= res!33866 call!4745)))

(assert (=> b!61491 (=> (not res!33866) (not e!40390))))

(declare-fun bm!4747 () Bool)

(assert (=> bm!4747 (= call!4745 (contains!687 lt!25456 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4748 () Bool)

(assert (=> bm!4748 (= call!4747 call!4749)))

(assert (= (and d!12239 c!8082) b!61484))

(assert (= (and d!12239 (not c!8082)) b!61475))

(assert (= (and b!61475 c!8084) b!61482))

(assert (= (and b!61475 (not c!8084)) b!61486))

(assert (= (and b!61486 c!8081) b!61490))

(assert (= (and b!61486 (not c!8081)) b!61483))

(assert (= (or b!61490 b!61483) bm!4744))

(assert (= (or b!61482 bm!4744) bm!4742))

(assert (= (or b!61482 b!61490) bm!4748))

(assert (= (or b!61484 bm!4742) bm!4743))

(assert (= (or b!61484 bm!4748) bm!4746))

(assert (= (and d!12239 res!33865) b!61485))

(assert (= (and d!12239 c!8080) b!61471))

(assert (= (and d!12239 (not c!8080)) b!61481))

(assert (= (and d!12239 res!33872) b!61476))

(assert (= (and b!61476 res!33873) b!61479))

(assert (= (and b!61476 (not res!33867)) b!61477))

(assert (= (and b!61477 res!33869) b!61489))

(assert (= (and b!61476 res!33868) b!61478))

(assert (= (and b!61478 c!8085) b!61491))

(assert (= (and b!61478 (not c!8085)) b!61488))

(assert (= (and b!61491 res!33866) b!61472))

(assert (= (or b!61491 b!61488) bm!4747))

(assert (= (and b!61478 res!33870) b!61480))

(assert (= (and b!61480 c!8083) b!61487))

(assert (= (and b!61480 (not c!8083)) b!61473))

(assert (= (and b!61487 res!33871) b!61474))

(assert (= (or b!61487 b!61473) bm!4745))

(declare-fun b_lambda!2725 () Bool)

(assert (=> (not b_lambda!2725) (not b!61489)))

(assert (=> b!61489 t!4820))

(declare-fun b_and!3757 () Bool)

(assert (= b_and!3753 (and (=> t!4820 result!2427) b_and!3757)))

(assert (=> b!61489 t!4822))

(declare-fun b_and!3759 () Bool)

(assert (= b_and!3755 (and (=> t!4822 result!2429) b_and!3759)))

(assert (=> b!61479 m!53263))

(assert (=> b!61479 m!53263))

(assert (=> b!61479 m!53265))

(declare-fun m!54493 () Bool)

(assert (=> b!61489 m!54493))

(assert (=> b!61489 m!53391))

(declare-fun m!54495 () Bool)

(assert (=> b!61489 m!54495))

(assert (=> b!61489 m!54493))

(assert (=> b!61489 m!53263))

(declare-fun m!54497 () Bool)

(assert (=> b!61489 m!54497))

(assert (=> b!61489 m!53263))

(assert (=> b!61489 m!53391))

(declare-fun m!54499 () Bool)

(assert (=> b!61471 m!54499))

(declare-fun m!54501 () Bool)

(assert (=> b!61471 m!54501))

(declare-fun m!54503 () Bool)

(assert (=> b!61471 m!54503))

(declare-fun m!54505 () Bool)

(assert (=> b!61471 m!54505))

(declare-fun m!54507 () Bool)

(assert (=> b!61471 m!54507))

(declare-fun m!54509 () Bool)

(assert (=> b!61471 m!54509))

(assert (=> b!61471 m!54505))

(declare-fun m!54511 () Bool)

(assert (=> b!61471 m!54511))

(declare-fun m!54513 () Bool)

(assert (=> b!61471 m!54513))

(declare-fun m!54515 () Bool)

(assert (=> b!61471 m!54515))

(declare-fun m!54517 () Bool)

(assert (=> b!61471 m!54517))

(assert (=> b!61471 m!53263))

(assert (=> b!61471 m!54507))

(assert (=> b!61471 m!54501))

(declare-fun m!54519 () Bool)

(assert (=> b!61471 m!54519))

(declare-fun m!54521 () Bool)

(assert (=> b!61471 m!54521))

(declare-fun m!54523 () Bool)

(assert (=> b!61471 m!54523))

(assert (=> b!61471 m!54521))

(declare-fun m!54525 () Bool)

(assert (=> b!61471 m!54525))

(declare-fun m!54527 () Bool)

(assert (=> b!61471 m!54527))

(declare-fun m!54529 () Bool)

(assert (=> b!61471 m!54529))

(declare-fun m!54531 () Bool)

(assert (=> b!61474 m!54531))

(assert (=> bm!4743 m!54503))

(declare-fun m!54533 () Bool)

(assert (=> bm!4747 m!54533))

(assert (=> b!61485 m!53263))

(assert (=> b!61485 m!53263))

(assert (=> b!61485 m!53265))

(declare-fun m!54535 () Bool)

(assert (=> b!61484 m!54535))

(declare-fun m!54537 () Bool)

(assert (=> b!61472 m!54537))

(assert (=> d!12239 m!53365))

(declare-fun m!54539 () Bool)

(assert (=> bm!4745 m!54539))

(assert (=> b!61477 m!53263))

(assert (=> b!61477 m!53263))

(declare-fun m!54541 () Bool)

(assert (=> b!61477 m!54541))

(declare-fun m!54543 () Bool)

(assert (=> bm!4746 m!54543))

(assert (=> b!60881 d!12239))

(declare-fun d!12241 () Bool)

(declare-fun e!40396 () Bool)

(assert (=> d!12241 e!40396))

(declare-fun res!33874 () Bool)

(assert (=> d!12241 (=> res!33874 e!40396)))

(declare-fun lt!25464 () Bool)

(assert (=> d!12241 (= res!33874 (not lt!25464))))

(declare-fun lt!25462 () Bool)

(assert (=> d!12241 (= lt!25464 lt!25462)))

(declare-fun lt!25461 () Unit!1621)

(declare-fun e!40395 () Unit!1621)

(assert (=> d!12241 (= lt!25461 e!40395)))

(declare-fun c!8086 () Bool)

(assert (=> d!12241 (= c!8086 lt!25462)))

(assert (=> d!12241 (= lt!25462 (containsKey!127 (toList!696 lt!25215) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12241 (= (contains!687 lt!25215 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25464)))

(declare-fun b!61492 () Bool)

(declare-fun lt!25463 () Unit!1621)

(assert (=> b!61492 (= e!40395 lt!25463)))

(assert (=> b!61492 (= lt!25463 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25215) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> b!61492 (isDefined!77 (getValueByKey!123 (toList!696 lt!25215) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61493 () Bool)

(declare-fun Unit!1660 () Unit!1621)

(assert (=> b!61493 (= e!40395 Unit!1660)))

(declare-fun b!61494 () Bool)

(assert (=> b!61494 (= e!40396 (isDefined!77 (getValueByKey!123 (toList!696 lt!25215) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (= (and d!12241 c!8086) b!61492))

(assert (= (and d!12241 (not c!8086)) b!61493))

(assert (= (and d!12241 (not res!33874)) b!61494))

(declare-fun m!54545 () Bool)

(assert (=> d!12241 m!54545))

(declare-fun m!54547 () Bool)

(assert (=> b!61492 m!54547))

(assert (=> b!61492 m!53753))

(assert (=> b!61492 m!53753))

(declare-fun m!54549 () Bool)

(assert (=> b!61492 m!54549))

(assert (=> b!61494 m!53753))

(assert (=> b!61494 m!53753))

(assert (=> b!61494 m!54549))

(assert (=> d!12003 d!12241))

(declare-fun c!8087 () Bool)

(declare-fun d!12243 () Bool)

(assert (=> d!12243 (= c!8087 (and ((_ is Cons!1439) lt!25213) (= (_1!1035 (h!2021 lt!25213)) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40397 () Option!129)

(assert (=> d!12243 (= (getValueByKey!123 lt!25213 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) e!40397)))

(declare-fun b!61498 () Bool)

(declare-fun e!40398 () Option!129)

(assert (=> b!61498 (= e!40398 None!127)))

(declare-fun b!61495 () Bool)

(assert (=> b!61495 (= e!40397 (Some!128 (_2!1035 (h!2021 lt!25213))))))

(declare-fun b!61497 () Bool)

(assert (=> b!61497 (= e!40398 (getValueByKey!123 (t!4808 lt!25213) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61496 () Bool)

(assert (=> b!61496 (= e!40397 e!40398)))

(declare-fun c!8088 () Bool)

(assert (=> b!61496 (= c!8088 (and ((_ is Cons!1439) lt!25213) (not (= (_1!1035 (h!2021 lt!25213)) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12243 c!8087) b!61495))

(assert (= (and d!12243 (not c!8087)) b!61496))

(assert (= (and b!61496 c!8088) b!61497))

(assert (= (and b!61496 (not c!8088)) b!61498))

(declare-fun m!54551 () Bool)

(assert (=> b!61497 m!54551))

(assert (=> d!12003 d!12243))

(declare-fun d!12245 () Bool)

(assert (=> d!12245 (= (getValueByKey!123 lt!25213 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lt!25465 () Unit!1621)

(assert (=> d!12245 (= lt!25465 (choose!332 lt!25213 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun e!40399 () Bool)

(assert (=> d!12245 e!40399))

(declare-fun res!33875 () Bool)

(assert (=> d!12245 (=> (not res!33875) (not e!40399))))

(assert (=> d!12245 (= res!33875 (isStrictlySorted!280 lt!25213))))

(assert (=> d!12245 (= (lemmaContainsTupThenGetReturnValue!43 lt!25213 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25465)))

(declare-fun b!61499 () Bool)

(declare-fun res!33876 () Bool)

(assert (=> b!61499 (=> (not res!33876) (not e!40399))))

(assert (=> b!61499 (= res!33876 (containsKey!127 lt!25213 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61500 () Bool)

(assert (=> b!61500 (= e!40399 (contains!689 lt!25213 (tuple2!2049 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (= (and d!12245 res!33875) b!61499))

(assert (= (and b!61499 res!33876) b!61500))

(assert (=> d!12245 m!53747))

(declare-fun m!54553 () Bool)

(assert (=> d!12245 m!54553))

(declare-fun m!54555 () Bool)

(assert (=> d!12245 m!54555))

(declare-fun m!54557 () Bool)

(assert (=> b!61499 m!54557))

(declare-fun m!54559 () Bool)

(assert (=> b!61500 m!54559))

(assert (=> d!12003 d!12245))

(declare-fun c!8092 () Bool)

(declare-fun b!61501 () Bool)

(assert (=> b!61501 (= c!8092 (and ((_ is Cons!1439) (toList!696 lt!24815)) (bvsgt (_1!1035 (h!2021 (toList!696 lt!24815))) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40403 () List!1443)

(declare-fun e!40401 () List!1443)

(assert (=> b!61501 (= e!40403 e!40401)))

(declare-fun bm!4749 () Bool)

(declare-fun call!4752 () List!1443)

(declare-fun call!4753 () List!1443)

(assert (=> bm!4749 (= call!4752 call!4753)))

(declare-fun b!61502 () Bool)

(declare-fun call!4754 () List!1443)

(assert (=> b!61502 (= e!40401 call!4754)))

(declare-fun b!61503 () Bool)

(declare-fun res!33877 () Bool)

(declare-fun e!40404 () Bool)

(assert (=> b!61503 (=> (not res!33877) (not e!40404))))

(declare-fun lt!25466 () List!1443)

(assert (=> b!61503 (= res!33877 (containsKey!127 lt!25466 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61504 () Bool)

(declare-fun e!40400 () List!1443)

(declare-fun c!8090 () Bool)

(assert (=> b!61504 (= e!40400 (ite c!8090 (t!4808 (toList!696 lt!24815)) (ite c!8092 (Cons!1439 (h!2021 (toList!696 lt!24815)) (t!4808 (toList!696 lt!24815))) Nil!1440)))))

(declare-fun d!12247 () Bool)

(assert (=> d!12247 e!40404))

(declare-fun res!33878 () Bool)

(assert (=> d!12247 (=> (not res!33878) (not e!40404))))

(assert (=> d!12247 (= res!33878 (isStrictlySorted!280 lt!25466))))

(declare-fun e!40402 () List!1443)

(assert (=> d!12247 (= lt!25466 e!40402)))

(declare-fun c!8091 () Bool)

(assert (=> d!12247 (= c!8091 (and ((_ is Cons!1439) (toList!696 lt!24815)) (bvslt (_1!1035 (h!2021 (toList!696 lt!24815))) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> d!12247 (isStrictlySorted!280 (toList!696 lt!24815))))

(assert (=> d!12247 (= (insertStrictlySorted!46 (toList!696 lt!24815) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25466)))

(declare-fun b!61505 () Bool)

(assert (=> b!61505 (= e!40400 (insertStrictlySorted!46 (t!4808 (toList!696 lt!24815)) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun bm!4750 () Bool)

(assert (=> bm!4750 (= call!4754 call!4752)))

(declare-fun b!61506 () Bool)

(assert (=> b!61506 (= e!40402 call!4753)))

(declare-fun bm!4751 () Bool)

(assert (=> bm!4751 (= call!4753 ($colon$colon!60 e!40400 (ite c!8091 (h!2021 (toList!696 lt!24815)) (tuple2!2049 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun c!8089 () Bool)

(assert (=> bm!4751 (= c!8089 c!8091)))

(declare-fun b!61507 () Bool)

(assert (=> b!61507 (= e!40403 call!4752)))

(declare-fun b!61508 () Bool)

(assert (=> b!61508 (= e!40404 (contains!689 lt!25466 (tuple2!2049 (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61509 () Bool)

(assert (=> b!61509 (= e!40402 e!40403)))

(assert (=> b!61509 (= c!8090 (and ((_ is Cons!1439) (toList!696 lt!24815)) (= (_1!1035 (h!2021 (toList!696 lt!24815))) (_1!1035 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61510 () Bool)

(assert (=> b!61510 (= e!40401 call!4754)))

(assert (= (and d!12247 c!8091) b!61506))

(assert (= (and d!12247 (not c!8091)) b!61509))

(assert (= (and b!61509 c!8090) b!61507))

(assert (= (and b!61509 (not c!8090)) b!61501))

(assert (= (and b!61501 c!8092) b!61502))

(assert (= (and b!61501 (not c!8092)) b!61510))

(assert (= (or b!61502 b!61510) bm!4750))

(assert (= (or b!61507 bm!4750) bm!4749))

(assert (= (or b!61506 bm!4749) bm!4751))

(assert (= (and bm!4751 c!8089) b!61505))

(assert (= (and bm!4751 (not c!8089)) b!61504))

(assert (= (and d!12247 res!33878) b!61503))

(assert (= (and b!61503 res!33877) b!61508))

(declare-fun m!54561 () Bool)

(assert (=> b!61508 m!54561))

(declare-fun m!54563 () Bool)

(assert (=> b!61503 m!54563))

(declare-fun m!54565 () Bool)

(assert (=> d!12247 m!54565))

(declare-fun m!54567 () Bool)

(assert (=> d!12247 m!54567))

(declare-fun m!54569 () Bool)

(assert (=> bm!4751 m!54569))

(declare-fun m!54571 () Bool)

(assert (=> b!61505 m!54571))

(assert (=> d!12003 d!12247))

(declare-fun d!12249 () Bool)

(assert (=> d!12249 (= (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!301 (getValueByKey!123 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!2672 () Bool)

(assert (= bs!2672 d!12249))

(assert (=> bs!2672 m!53385))

(declare-fun m!54573 () Bool)

(assert (=> bs!2672 m!54573))

(assert (=> b!60893 d!12249))

(assert (=> b!60893 d!12057))

(declare-fun d!12251 () Bool)

(declare-fun e!40406 () Bool)

(assert (=> d!12251 e!40406))

(declare-fun res!33879 () Bool)

(assert (=> d!12251 (=> res!33879 e!40406)))

(declare-fun lt!25470 () Bool)

(assert (=> d!12251 (= res!33879 (not lt!25470))))

(declare-fun lt!25468 () Bool)

(assert (=> d!12251 (= lt!25470 lt!25468)))

(declare-fun lt!25467 () Unit!1621)

(declare-fun e!40405 () Unit!1621)

(assert (=> d!12251 (= lt!25467 e!40405)))

(declare-fun c!8093 () Bool)

(assert (=> d!12251 (= c!8093 lt!25468)))

(assert (=> d!12251 (= lt!25468 (containsKey!127 (toList!696 lt!25132) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!12251 (= (contains!687 lt!25132 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!25470)))

(declare-fun b!61511 () Bool)

(declare-fun lt!25469 () Unit!1621)

(assert (=> b!61511 (= e!40405 lt!25469)))

(assert (=> b!61511 (= lt!25469 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25132) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!61511 (isDefined!77 (getValueByKey!123 (toList!696 lt!25132) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61512 () Bool)

(declare-fun Unit!1661 () Unit!1621)

(assert (=> b!61512 (= e!40405 Unit!1661)))

(declare-fun b!61513 () Bool)

(assert (=> b!61513 (= e!40406 (isDefined!77 (getValueByKey!123 (toList!696 lt!25132) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!12251 c!8093) b!61511))

(assert (= (and d!12251 (not c!8093)) b!61512))

(assert (= (and d!12251 (not res!33879)) b!61513))

(declare-fun m!54575 () Bool)

(assert (=> d!12251 m!54575))

(declare-fun m!54577 () Bool)

(assert (=> b!61511 m!54577))

(assert (=> b!61511 m!53555))

(assert (=> b!61511 m!53555))

(declare-fun m!54579 () Bool)

(assert (=> b!61511 m!54579))

(assert (=> b!61513 m!53555))

(assert (=> b!61513 m!53555))

(assert (=> b!61513 m!54579))

(assert (=> d!11967 d!12251))

(declare-fun c!8094 () Bool)

(declare-fun d!12253 () Bool)

(assert (=> d!12253 (= c!8094 (and ((_ is Cons!1439) lt!25130) (= (_1!1035 (h!2021 lt!25130)) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!40407 () Option!129)

(assert (=> d!12253 (= (getValueByKey!123 lt!25130 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!40407)))

(declare-fun b!61517 () Bool)

(declare-fun e!40408 () Option!129)

(assert (=> b!61517 (= e!40408 None!127)))

(declare-fun b!61514 () Bool)

(assert (=> b!61514 (= e!40407 (Some!128 (_2!1035 (h!2021 lt!25130))))))

(declare-fun b!61516 () Bool)

(assert (=> b!61516 (= e!40408 (getValueByKey!123 (t!4808 lt!25130) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61515 () Bool)

(assert (=> b!61515 (= e!40407 e!40408)))

(declare-fun c!8095 () Bool)

(assert (=> b!61515 (= c!8095 (and ((_ is Cons!1439) lt!25130) (not (= (_1!1035 (h!2021 lt!25130)) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(assert (= (and d!12253 c!8094) b!61514))

(assert (= (and d!12253 (not c!8094)) b!61515))

(assert (= (and b!61515 c!8095) b!61516))

(assert (= (and b!61515 (not c!8095)) b!61517))

(declare-fun m!54581 () Bool)

(assert (=> b!61516 m!54581))

(assert (=> d!11967 d!12253))

(declare-fun d!12255 () Bool)

(assert (=> d!12255 (= (getValueByKey!123 lt!25130 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!128 (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!25471 () Unit!1621)

(assert (=> d!12255 (= lt!25471 (choose!332 lt!25130 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!40409 () Bool)

(assert (=> d!12255 e!40409))

(declare-fun res!33880 () Bool)

(assert (=> d!12255 (=> (not res!33880) (not e!40409))))

(assert (=> d!12255 (= res!33880 (isStrictlySorted!280 lt!25130))))

(assert (=> d!12255 (= (lemmaContainsTupThenGetReturnValue!43 lt!25130 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!25471)))

(declare-fun b!61518 () Bool)

(declare-fun res!33881 () Bool)

(assert (=> b!61518 (=> (not res!33881) (not e!40409))))

(assert (=> b!61518 (= res!33881 (containsKey!127 lt!25130 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61519 () Bool)

(assert (=> b!61519 (= e!40409 (contains!689 lt!25130 (tuple2!2049 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!12255 res!33880) b!61518))

(assert (= (and b!61518 res!33881) b!61519))

(assert (=> d!12255 m!53549))

(declare-fun m!54583 () Bool)

(assert (=> d!12255 m!54583))

(declare-fun m!54585 () Bool)

(assert (=> d!12255 m!54585))

(declare-fun m!54587 () Bool)

(assert (=> b!61518 m!54587))

(declare-fun m!54589 () Bool)

(assert (=> b!61519 m!54589))

(assert (=> d!11967 d!12255))

(declare-fun c!8099 () Bool)

(declare-fun b!61520 () Bool)

(assert (=> b!61520 (= c!8099 (and ((_ is Cons!1439) (toList!696 e!39924)) (bvsgt (_1!1035 (h!2021 (toList!696 e!39924))) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!40413 () List!1443)

(declare-fun e!40411 () List!1443)

(assert (=> b!61520 (= e!40413 e!40411)))

(declare-fun bm!4752 () Bool)

(declare-fun call!4755 () List!1443)

(declare-fun call!4756 () List!1443)

(assert (=> bm!4752 (= call!4755 call!4756)))

(declare-fun b!61521 () Bool)

(declare-fun call!4757 () List!1443)

(assert (=> b!61521 (= e!40411 call!4757)))

(declare-fun b!61522 () Bool)

(declare-fun res!33882 () Bool)

(declare-fun e!40414 () Bool)

(assert (=> b!61522 (=> (not res!33882) (not e!40414))))

(declare-fun lt!25472 () List!1443)

(assert (=> b!61522 (= res!33882 (containsKey!127 lt!25472 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!40410 () List!1443)

(declare-fun c!8097 () Bool)

(declare-fun b!61523 () Bool)

(assert (=> b!61523 (= e!40410 (ite c!8097 (t!4808 (toList!696 e!39924)) (ite c!8099 (Cons!1439 (h!2021 (toList!696 e!39924)) (t!4808 (toList!696 e!39924))) Nil!1440)))))

(declare-fun d!12257 () Bool)

(assert (=> d!12257 e!40414))

(declare-fun res!33883 () Bool)

(assert (=> d!12257 (=> (not res!33883) (not e!40414))))

(assert (=> d!12257 (= res!33883 (isStrictlySorted!280 lt!25472))))

(declare-fun e!40412 () List!1443)

(assert (=> d!12257 (= lt!25472 e!40412)))

(declare-fun c!8098 () Bool)

(assert (=> d!12257 (= c!8098 (and ((_ is Cons!1439) (toList!696 e!39924)) (bvslt (_1!1035 (h!2021 (toList!696 e!39924))) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!12257 (isStrictlySorted!280 (toList!696 e!39924))))

(assert (=> d!12257 (= (insertStrictlySorted!46 (toList!696 e!39924) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!25472)))

(declare-fun b!61524 () Bool)

(assert (=> b!61524 (= e!40410 (insertStrictlySorted!46 (t!4808 (toList!696 e!39924)) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!4753 () Bool)

(assert (=> bm!4753 (= call!4757 call!4755)))

(declare-fun b!61525 () Bool)

(assert (=> b!61525 (= e!40412 call!4756)))

(declare-fun bm!4754 () Bool)

(assert (=> bm!4754 (= call!4756 ($colon$colon!60 e!40410 (ite c!8098 (h!2021 (toList!696 e!39924)) (tuple2!2049 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!8096 () Bool)

(assert (=> bm!4754 (= c!8096 c!8098)))

(declare-fun b!61526 () Bool)

(assert (=> b!61526 (= e!40413 call!4755)))

(declare-fun b!61527 () Bool)

(assert (=> b!61527 (= e!40414 (contains!689 lt!25472 (tuple2!2049 (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!61528 () Bool)

(assert (=> b!61528 (= e!40412 e!40413)))

(assert (=> b!61528 (= c!8097 (and ((_ is Cons!1439) (toList!696 e!39924)) (= (_1!1035 (h!2021 (toList!696 e!39924))) (_1!1035 (ite c!7887 (ite c!7882 (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!61529 () Bool)

(assert (=> b!61529 (= e!40411 call!4757)))

(assert (= (and d!12257 c!8098) b!61525))

(assert (= (and d!12257 (not c!8098)) b!61528))

(assert (= (and b!61528 c!8097) b!61526))

(assert (= (and b!61528 (not c!8097)) b!61520))

(assert (= (and b!61520 c!8099) b!61521))

(assert (= (and b!61520 (not c!8099)) b!61529))

(assert (= (or b!61521 b!61529) bm!4753))

(assert (= (or b!61526 bm!4753) bm!4752))

(assert (= (or b!61525 bm!4752) bm!4754))

(assert (= (and bm!4754 c!8096) b!61524))

(assert (= (and bm!4754 (not c!8096)) b!61523))

(assert (= (and d!12257 res!33883) b!61522))

(assert (= (and b!61522 res!33882) b!61527))

(declare-fun m!54591 () Bool)

(assert (=> b!61527 m!54591))

(declare-fun m!54593 () Bool)

(assert (=> b!61522 m!54593))

(declare-fun m!54595 () Bool)

(assert (=> d!12257 m!54595))

(declare-fun m!54597 () Bool)

(assert (=> d!12257 m!54597))

(declare-fun m!54599 () Bool)

(assert (=> bm!4754 m!54599))

(declare-fun m!54601 () Bool)

(assert (=> b!61524 m!54601))

(assert (=> d!11967 d!12257))

(declare-fun d!12259 () Bool)

(declare-fun e!40416 () Bool)

(assert (=> d!12259 e!40416))

(declare-fun res!33884 () Bool)

(assert (=> d!12259 (=> res!33884 e!40416)))

(declare-fun lt!25476 () Bool)

(assert (=> d!12259 (= res!33884 (not lt!25476))))

(declare-fun lt!25474 () Bool)

(assert (=> d!12259 (= lt!25476 lt!25474)))

(declare-fun lt!25473 () Unit!1621)

(declare-fun e!40415 () Unit!1621)

(assert (=> d!12259 (= lt!25473 e!40415)))

(declare-fun c!8100 () Bool)

(assert (=> d!12259 (= c!8100 lt!25474)))

(assert (=> d!12259 (= lt!25474 (containsKey!127 (toList!696 lt!25074) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!12259 (= (contains!687 lt!25074 #b1000000000000000000000000000000000000000000000000000000000000000) lt!25476)))

(declare-fun b!61530 () Bool)

(declare-fun lt!25475 () Unit!1621)

(assert (=> b!61530 (= e!40415 lt!25475)))

(assert (=> b!61530 (= lt!25475 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25074) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61530 (isDefined!77 (getValueByKey!123 (toList!696 lt!25074) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61531 () Bool)

(declare-fun Unit!1662 () Unit!1621)

(assert (=> b!61531 (= e!40415 Unit!1662)))

(declare-fun b!61532 () Bool)

(assert (=> b!61532 (= e!40416 (isDefined!77 (getValueByKey!123 (toList!696 lt!25074) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12259 c!8100) b!61530))

(assert (= (and d!12259 (not c!8100)) b!61531))

(assert (= (and d!12259 (not res!33884)) b!61532))

(declare-fun m!54603 () Bool)

(assert (=> d!12259 m!54603))

(declare-fun m!54605 () Bool)

(assert (=> b!61530 m!54605))

(declare-fun m!54607 () Bool)

(assert (=> b!61530 m!54607))

(assert (=> b!61530 m!54607))

(declare-fun m!54609 () Bool)

(assert (=> b!61530 m!54609))

(assert (=> b!61532 m!54607))

(assert (=> b!61532 m!54607))

(assert (=> b!61532 m!54609))

(assert (=> bm!4670 d!12259))

(declare-fun d!12261 () Bool)

(declare-fun lt!25477 () Bool)

(assert (=> d!12261 (= lt!25477 (select (content!65 (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!40418 () Bool)

(assert (=> d!12261 (= lt!25477 e!40418)))

(declare-fun res!33886 () Bool)

(assert (=> d!12261 (=> (not res!33886) (not e!40418))))

(assert (=> d!12261 (= res!33886 ((_ is Cons!1440) (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)))))

(assert (=> d!12261 (= (contains!688 (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!25477)))

(declare-fun b!61533 () Bool)

(declare-fun e!40417 () Bool)

(assert (=> b!61533 (= e!40418 e!40417)))

(declare-fun res!33885 () Bool)

(assert (=> b!61533 (=> res!33885 e!40417)))

(assert (=> b!61533 (= res!33885 (= (h!2022 (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!61534 () Bool)

(assert (=> b!61534 (= e!40417 (contains!688 (t!4809 (ite c!7898 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) Nil!1441) Nil!1441)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!12261 res!33886) b!61533))

(assert (= (and b!61533 (not res!33885)) b!61534))

(declare-fun m!54611 () Bool)

(assert (=> d!12261 m!54611))

(assert (=> d!12261 m!53347))

(declare-fun m!54613 () Bool)

(assert (=> d!12261 m!54613))

(assert (=> b!61534 m!53347))

(declare-fun m!54615 () Bool)

(assert (=> b!61534 m!54615))

(assert (=> b!60871 d!12261))

(assert (=> d!11961 d!11893))

(declare-fun d!12263 () Bool)

(declare-fun lt!25478 () Bool)

(assert (=> d!12263 (= lt!25478 (select (content!65 Nil!1441) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!40420 () Bool)

(assert (=> d!12263 (= lt!25478 e!40420)))

(declare-fun res!33888 () Bool)

(assert (=> d!12263 (=> (not res!33888) (not e!40420))))

(assert (=> d!12263 (= res!33888 ((_ is Cons!1440) Nil!1441))))

(assert (=> d!12263 (= (contains!688 Nil!1441 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) lt!25478)))

(declare-fun b!61535 () Bool)

(declare-fun e!40419 () Bool)

(assert (=> b!61535 (= e!40420 e!40419)))

(declare-fun res!33887 () Bool)

(assert (=> b!61535 (=> res!33887 e!40419)))

(assert (=> b!61535 (= res!33887 (= (h!2022 Nil!1441) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61536 () Bool)

(assert (=> b!61536 (= e!40419 (contains!688 (t!4809 Nil!1441) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!12263 res!33888) b!61535))

(assert (= (and b!61535 (not res!33887)) b!61536))

(assert (=> d!12263 m!53267))

(assert (=> d!12263 m!53263))

(declare-fun m!54617 () Bool)

(assert (=> d!12263 m!54617))

(assert (=> b!61536 m!53263))

(declare-fun m!54619 () Bool)

(assert (=> b!61536 m!54619))

(assert (=> b!60866 d!12263))

(declare-fun lt!25479 () Bool)

(declare-fun d!12265 () Bool)

(assert (=> d!12265 (= lt!25479 (select (content!66 (toList!696 lt!25230)) (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun e!40422 () Bool)

(assert (=> d!12265 (= lt!25479 e!40422)))

(declare-fun res!33889 () Bool)

(assert (=> d!12265 (=> (not res!33889) (not e!40422))))

(assert (=> d!12265 (= res!33889 ((_ is Cons!1439) (toList!696 lt!25230)))))

(assert (=> d!12265 (= (contains!689 (toList!696 lt!25230) (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!25479)))

(declare-fun b!61537 () Bool)

(declare-fun e!40421 () Bool)

(assert (=> b!61537 (= e!40422 e!40421)))

(declare-fun res!33890 () Bool)

(assert (=> b!61537 (=> res!33890 e!40421)))

(assert (=> b!61537 (= res!33890 (= (h!2021 (toList!696 lt!25230)) (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!61538 () Bool)

(assert (=> b!61538 (= e!40421 (contains!689 (t!4808 (toList!696 lt!25230)) (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))

(assert (= (and d!12265 res!33889) b!61537))

(assert (= (and b!61537 (not res!33890)) b!61538))

(declare-fun m!54621 () Bool)

(assert (=> d!12265 m!54621))

(declare-fun m!54623 () Bool)

(assert (=> d!12265 m!54623))

(declare-fun m!54625 () Bool)

(assert (=> b!61538 m!54625))

(assert (=> b!61124 d!12265))

(declare-fun d!12267 () Bool)

(assert (=> d!12267 (= (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24818)) (v!2402 (getValueByKey!123 (toList!696 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24818)))))

(assert (=> d!12017 d!12267))

(declare-fun d!12269 () Bool)

(declare-fun c!8101 () Bool)

(assert (=> d!12269 (= c!8101 (and ((_ is Cons!1439) (toList!696 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) (= (_1!1035 (h!2021 (toList!696 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24818)))))

(declare-fun e!40423 () Option!129)

(assert (=> d!12269 (= (getValueByKey!123 (toList!696 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24818) e!40423)))

(declare-fun b!61542 () Bool)

(declare-fun e!40424 () Option!129)

(assert (=> b!61542 (= e!40424 None!127)))

(declare-fun b!61539 () Bool)

(assert (=> b!61539 (= e!40423 (Some!128 (_2!1035 (h!2021 (toList!696 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))))

(declare-fun b!61541 () Bool)

(assert (=> b!61541 (= e!40424 (getValueByKey!123 (t!4808 (toList!696 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) lt!24818))))

(declare-fun b!61540 () Bool)

(assert (=> b!61540 (= e!40423 e!40424)))

(declare-fun c!8102 () Bool)

(assert (=> b!61540 (= c!8102 (and ((_ is Cons!1439) (toList!696 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) (not (= (_1!1035 (h!2021 (toList!696 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24818))))))

(assert (= (and d!12269 c!8101) b!61539))

(assert (= (and d!12269 (not c!8101)) b!61540))

(assert (= (and b!61540 c!8102) b!61541))

(assert (= (and b!61540 (not c!8102)) b!61542))

(declare-fun m!54627 () Bool)

(assert (=> b!61541 m!54627))

(assert (=> d!12017 d!12269))

(declare-fun d!12271 () Bool)

(assert (=> d!12271 (= (get!1084 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2396 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!60949 d!12271))

(assert (=> b!60978 d!11945))

(declare-fun d!12273 () Bool)

(assert (=> d!12273 (not (contains!687 (+!82 lt!25112 (tuple2!2049 lt!25108 lt!25113)) lt!25111))))

(declare-fun lt!25482 () Unit!1621)

(declare-fun choose!334 (ListLongMap!1361 (_ BitVec 64) V!2857 (_ BitVec 64)) Unit!1621)

(assert (=> d!12273 (= lt!25482 (choose!334 lt!25112 lt!25108 lt!25113 lt!25111))))

(declare-fun e!40427 () Bool)

(assert (=> d!12273 e!40427))

(declare-fun res!33893 () Bool)

(assert (=> d!12273 (=> (not res!33893) (not e!40427))))

(assert (=> d!12273 (= res!33893 (not (contains!687 lt!25112 lt!25111)))))

(assert (=> d!12273 (= (addStillNotContains!17 lt!25112 lt!25108 lt!25113 lt!25111) lt!25482)))

(declare-fun b!61546 () Bool)

(assert (=> b!61546 (= e!40427 (not (= lt!25108 lt!25111)))))

(assert (= (and d!12273 res!33893) b!61546))

(assert (=> d!12273 m!53499))

(assert (=> d!12273 m!53499))

(assert (=> d!12273 m!53501))

(declare-fun m!54629 () Bool)

(assert (=> d!12273 m!54629))

(declare-fun m!54631 () Bool)

(assert (=> d!12273 m!54631))

(assert (=> b!60978 d!12273))

(declare-fun d!12275 () Bool)

(declare-fun e!40429 () Bool)

(assert (=> d!12275 e!40429))

(declare-fun res!33894 () Bool)

(assert (=> d!12275 (=> res!33894 e!40429)))

(declare-fun lt!25486 () Bool)

(assert (=> d!12275 (= res!33894 (not lt!25486))))

(declare-fun lt!25484 () Bool)

(assert (=> d!12275 (= lt!25486 lt!25484)))

(declare-fun lt!25483 () Unit!1621)

(declare-fun e!40428 () Unit!1621)

(assert (=> d!12275 (= lt!25483 e!40428)))

(declare-fun c!8103 () Bool)

(assert (=> d!12275 (= c!8103 lt!25484)))

(assert (=> d!12275 (= lt!25484 (containsKey!127 (toList!696 (+!82 lt!25112 (tuple2!2049 lt!25108 lt!25113))) lt!25111))))

(assert (=> d!12275 (= (contains!687 (+!82 lt!25112 (tuple2!2049 lt!25108 lt!25113)) lt!25111) lt!25486)))

(declare-fun b!61547 () Bool)

(declare-fun lt!25485 () Unit!1621)

(assert (=> b!61547 (= e!40428 lt!25485)))

(assert (=> b!61547 (= lt!25485 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 (+!82 lt!25112 (tuple2!2049 lt!25108 lt!25113))) lt!25111))))

(assert (=> b!61547 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!25112 (tuple2!2049 lt!25108 lt!25113))) lt!25111))))

(declare-fun b!61548 () Bool)

(declare-fun Unit!1663 () Unit!1621)

(assert (=> b!61548 (= e!40428 Unit!1663)))

(declare-fun b!61549 () Bool)

(assert (=> b!61549 (= e!40429 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!25112 (tuple2!2049 lt!25108 lt!25113))) lt!25111)))))

(assert (= (and d!12275 c!8103) b!61547))

(assert (= (and d!12275 (not c!8103)) b!61548))

(assert (= (and d!12275 (not res!33894)) b!61549))

(declare-fun m!54633 () Bool)

(assert (=> d!12275 m!54633))

(declare-fun m!54635 () Bool)

(assert (=> b!61547 m!54635))

(declare-fun m!54637 () Bool)

(assert (=> b!61547 m!54637))

(assert (=> b!61547 m!54637))

(declare-fun m!54639 () Bool)

(assert (=> b!61547 m!54639))

(assert (=> b!61549 m!54637))

(assert (=> b!61549 m!54637))

(assert (=> b!61549 m!54639))

(assert (=> b!60978 d!12275))

(declare-fun d!12277 () Bool)

(declare-fun e!40430 () Bool)

(assert (=> d!12277 e!40430))

(declare-fun res!33895 () Bool)

(assert (=> d!12277 (=> (not res!33895) (not e!40430))))

(declare-fun lt!25489 () ListLongMap!1361)

(assert (=> d!12277 (= res!33895 (contains!687 lt!25489 (_1!1035 (tuple2!2049 lt!25108 lt!25113))))))

(declare-fun lt!25487 () List!1443)

(assert (=> d!12277 (= lt!25489 (ListLongMap!1362 lt!25487))))

(declare-fun lt!25488 () Unit!1621)

(declare-fun lt!25490 () Unit!1621)

(assert (=> d!12277 (= lt!25488 lt!25490)))

(assert (=> d!12277 (= (getValueByKey!123 lt!25487 (_1!1035 (tuple2!2049 lt!25108 lt!25113))) (Some!128 (_2!1035 (tuple2!2049 lt!25108 lt!25113))))))

(assert (=> d!12277 (= lt!25490 (lemmaContainsTupThenGetReturnValue!43 lt!25487 (_1!1035 (tuple2!2049 lt!25108 lt!25113)) (_2!1035 (tuple2!2049 lt!25108 lt!25113))))))

(assert (=> d!12277 (= lt!25487 (insertStrictlySorted!46 (toList!696 lt!25112) (_1!1035 (tuple2!2049 lt!25108 lt!25113)) (_2!1035 (tuple2!2049 lt!25108 lt!25113))))))

(assert (=> d!12277 (= (+!82 lt!25112 (tuple2!2049 lt!25108 lt!25113)) lt!25489)))

(declare-fun b!61550 () Bool)

(declare-fun res!33896 () Bool)

(assert (=> b!61550 (=> (not res!33896) (not e!40430))))

(assert (=> b!61550 (= res!33896 (= (getValueByKey!123 (toList!696 lt!25489) (_1!1035 (tuple2!2049 lt!25108 lt!25113))) (Some!128 (_2!1035 (tuple2!2049 lt!25108 lt!25113)))))))

(declare-fun b!61551 () Bool)

(assert (=> b!61551 (= e!40430 (contains!689 (toList!696 lt!25489) (tuple2!2049 lt!25108 lt!25113)))))

(assert (= (and d!12277 res!33895) b!61550))

(assert (= (and b!61550 res!33896) b!61551))

(declare-fun m!54641 () Bool)

(assert (=> d!12277 m!54641))

(declare-fun m!54643 () Bool)

(assert (=> d!12277 m!54643))

(declare-fun m!54645 () Bool)

(assert (=> d!12277 m!54645))

(declare-fun m!54647 () Bool)

(assert (=> d!12277 m!54647))

(declare-fun m!54649 () Bool)

(assert (=> b!61550 m!54649))

(declare-fun m!54651 () Bool)

(assert (=> b!61551 m!54651))

(assert (=> b!60978 d!12277))

(declare-fun d!12279 () Bool)

(declare-fun e!40431 () Bool)

(assert (=> d!12279 e!40431))

(declare-fun res!33897 () Bool)

(assert (=> d!12279 (=> (not res!33897) (not e!40431))))

(declare-fun lt!25493 () ListLongMap!1361)

(assert (=> d!12279 (= res!33897 (contains!687 lt!25493 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!25491 () List!1443)

(assert (=> d!12279 (= lt!25493 (ListLongMap!1362 lt!25491))))

(declare-fun lt!25492 () Unit!1621)

(declare-fun lt!25494 () Unit!1621)

(assert (=> d!12279 (= lt!25492 lt!25494)))

(assert (=> d!12279 (= (getValueByKey!123 lt!25491 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12279 (= lt!25494 (lemmaContainsTupThenGetReturnValue!43 lt!25491 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12279 (= lt!25491 (insertStrictlySorted!46 (toList!696 call!4685) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12279 (= (+!82 call!4685 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25493)))

(declare-fun b!61552 () Bool)

(declare-fun res!33898 () Bool)

(assert (=> b!61552 (=> (not res!33898) (not e!40431))))

(assert (=> b!61552 (= res!33898 (= (getValueByKey!123 (toList!696 lt!25493) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61553 () Bool)

(assert (=> b!61553 (= e!40431 (contains!689 (toList!696 lt!25493) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!12279 res!33897) b!61552))

(assert (= (and b!61552 res!33898) b!61553))

(declare-fun m!54653 () Bool)

(assert (=> d!12279 m!54653))

(declare-fun m!54655 () Bool)

(assert (=> d!12279 m!54655))

(declare-fun m!54657 () Bool)

(assert (=> d!12279 m!54657))

(declare-fun m!54659 () Bool)

(assert (=> d!12279 m!54659))

(declare-fun m!54661 () Bool)

(assert (=> b!61552 m!54661))

(declare-fun m!54663 () Bool)

(assert (=> b!61553 m!54663))

(assert (=> b!60978 d!12279))

(declare-fun d!12281 () Bool)

(assert (=> d!12281 (= (content!65 Nil!1441) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!11901 d!12281))

(declare-fun b!61554 () Bool)

(declare-fun e!40433 () (_ BitVec 32))

(assert (=> b!61554 (= e!40433 #b00000000000000000000000000000000)))

(declare-fun b!61556 () Bool)

(declare-fun e!40432 () (_ BitVec 32))

(declare-fun call!4758 () (_ BitVec 32))

(assert (=> b!61556 (= e!40432 call!4758)))

(declare-fun bm!4755 () Bool)

(assert (=> bm!4755 (= call!4758 (arrayCountValidKeys!0 (_keys!3693 (_2!1034 lt!24902)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (_2!1034 lt!24902)))))))

(declare-fun b!61557 () Bool)

(assert (=> b!61557 (= e!40433 e!40432)))

(declare-fun c!8104 () Bool)

(assert (=> b!61557 (= c!8104 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000)))))

(declare-fun d!12283 () Bool)

(declare-fun lt!25495 () (_ BitVec 32))

(assert (=> d!12283 (and (bvsge lt!25495 #b00000000000000000000000000000000) (bvsle lt!25495 (bvsub (size!2012 (_keys!3693 (_2!1034 lt!24902))) #b00000000000000000000000000000000)))))

(assert (=> d!12283 (= lt!25495 e!40433)))

(declare-fun c!8105 () Bool)

(assert (=> d!12283 (= c!8105 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))))))

(assert (=> d!12283 (and (bvsle #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2012 (_keys!3693 (_2!1034 lt!24902))) (size!2012 (_keys!3693 (_2!1034 lt!24902)))))))

(assert (=> d!12283 (= (arrayCountValidKeys!0 (_keys!3693 (_2!1034 lt!24902)) #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!24902)))) lt!25495)))

(declare-fun b!61555 () Bool)

(assert (=> b!61555 (= e!40432 (bvadd #b00000000000000000000000000000001 call!4758))))

(assert (= (and d!12283 c!8105) b!61554))

(assert (= (and d!12283 (not c!8105)) b!61557))

(assert (= (and b!61557 c!8104) b!61555))

(assert (= (and b!61557 (not c!8104)) b!61556))

(assert (= (or b!61555 b!61556) bm!4755))

(declare-fun m!54665 () Bool)

(assert (=> bm!4755 m!54665))

(assert (=> b!61557 m!54173))

(assert (=> b!61557 m!54173))

(assert (=> b!61557 m!54175))

(assert (=> b!60917 d!12283))

(declare-fun b!61576 () Bool)

(declare-fun e!40448 () Bool)

(declare-fun e!40445 () Bool)

(assert (=> b!61576 (= e!40448 e!40445)))

(declare-fun res!33907 () Bool)

(declare-fun lt!25500 () SeekEntryResult!231)

(assert (=> b!61576 (= res!33907 (and ((_ is Intermediate!231) lt!25500) (not (undefined!1043 lt!25500)) (bvslt (x!10164 lt!25500) #b01111111111111111111111111111110) (bvsge (x!10164 lt!25500) #b00000000000000000000000000000000) (bvsge (x!10164 lt!25500) #b00000000000000000000000000000000)))))

(assert (=> b!61576 (=> (not res!33907) (not e!40445))))

(declare-fun e!40444 () SeekEntryResult!231)

(declare-fun b!61577 () Bool)

(assert (=> b!61577 (= e!40444 (Intermediate!231 false (toIndex!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (mask!5961 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!61578 () Bool)

(declare-fun e!40446 () SeekEntryResult!231)

(assert (=> b!61578 (= e!40446 e!40444)))

(declare-fun lt!25501 () (_ BitVec 64))

(declare-fun c!8112 () Bool)

(assert (=> b!61578 (= c!8112 (or (= lt!25501 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (= (bvadd lt!25501 lt!25501) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!61579 () Bool)

(assert (=> b!61579 (= e!40448 (bvsge (x!10164 lt!25500) #b01111111111111111111111111111110))))

(declare-fun b!61580 () Bool)

(assert (=> b!61580 (and (bvsge (index!3050 lt!25500) #b00000000000000000000000000000000) (bvslt (index!3050 lt!25500) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun res!33906 () Bool)

(assert (=> b!61580 (= res!33906 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3050 lt!25500)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun e!40447 () Bool)

(assert (=> b!61580 (=> res!33906 e!40447)))

(assert (=> b!61580 (= e!40445 e!40447)))

(declare-fun b!61581 () Bool)

(assert (=> b!61581 (and (bvsge (index!3050 lt!25500) #b00000000000000000000000000000000) (bvslt (index!3050 lt!25500) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun res!33905 () Bool)

(assert (=> b!61581 (= res!33905 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3050 lt!25500)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61581 (=> res!33905 e!40447)))

(declare-fun d!12285 () Bool)

(assert (=> d!12285 e!40448))

(declare-fun c!8113 () Bool)

(assert (=> d!12285 (= c!8113 (and ((_ is Intermediate!231) lt!25500) (undefined!1043 lt!25500)))))

(assert (=> d!12285 (= lt!25500 e!40446)))

(declare-fun c!8114 () Bool)

(assert (=> d!12285 (= c!8114 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!12285 (= lt!25501 (select (arr!1780 (_keys!3693 newMap!16)) (toIndex!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (mask!5961 newMap!16))))))

(assert (=> d!12285 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12285 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (mask!5961 newMap!16)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)) lt!25500)))

(declare-fun b!61582 () Bool)

(assert (=> b!61582 (= e!40446 (Intermediate!231 true (toIndex!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (mask!5961 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!61583 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!61583 (= e!40444 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (mask!5961 newMap!16)) #b00000000000000000000000000000000 (mask!5961 newMap!16)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun b!61584 () Bool)

(assert (=> b!61584 (and (bvsge (index!3050 lt!25500) #b00000000000000000000000000000000) (bvslt (index!3050 lt!25500) (size!2012 (_keys!3693 newMap!16))))))

(assert (=> b!61584 (= e!40447 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3050 lt!25500)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!12285 c!8114) b!61582))

(assert (= (and d!12285 (not c!8114)) b!61578))

(assert (= (and b!61578 c!8112) b!61577))

(assert (= (and b!61578 (not c!8112)) b!61583))

(assert (= (and d!12285 c!8113) b!61579))

(assert (= (and d!12285 (not c!8113)) b!61576))

(assert (= (and b!61576 res!33907) b!61580))

(assert (= (and b!61580 (not res!33906)) b!61581))

(assert (= (and b!61581 (not res!33905)) b!61584))

(declare-fun m!54667 () Bool)

(assert (=> b!61580 m!54667))

(assert (=> b!61583 m!53539))

(declare-fun m!54669 () Bool)

(assert (=> b!61583 m!54669))

(assert (=> b!61583 m!54669))

(assert (=> b!61583 m!52977))

(declare-fun m!54671 () Bool)

(assert (=> b!61583 m!54671))

(assert (=> b!61581 m!54667))

(assert (=> b!61584 m!54667))

(assert (=> d!12285 m!53539))

(declare-fun m!54673 () Bool)

(assert (=> d!12285 m!54673))

(assert (=> d!12285 m!53365))

(assert (=> d!11965 d!12285))

(declare-fun d!12287 () Bool)

(declare-fun lt!25507 () (_ BitVec 32))

(declare-fun lt!25506 () (_ BitVec 32))

(assert (=> d!12287 (= lt!25507 (bvmul (bvxor lt!25506 (bvlshr lt!25506 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!12287 (= lt!25506 ((_ extract 31 0) (bvand (bvxor (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvlshr (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!12287 (and (bvsge (mask!5961 newMap!16) #b00000000000000000000000000000000) (let ((res!33908 (let ((h!2024 ((_ extract 31 0) (bvand (bvxor (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvlshr (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!10267 (bvmul (bvxor h!2024 (bvlshr h!2024 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!10267 (bvlshr x!10267 #b00000000000000000000000000001101)) (mask!5961 newMap!16)))))) (and (bvslt res!33908 (bvadd (mask!5961 newMap!16) #b00000000000000000000000000000001)) (bvsge res!33908 #b00000000000000000000000000000000))))))

(assert (=> d!12287 (= (toIndex!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (mask!5961 newMap!16)) (bvand (bvxor lt!25507 (bvlshr lt!25507 #b00000000000000000000000000001101)) (mask!5961 newMap!16)))))

(assert (=> d!11965 d!12287))

(assert (=> d!11965 d!12045))

(assert (=> b!60802 d!12037))

(declare-fun d!12289 () Bool)

(declare-fun res!33909 () Bool)

(declare-fun e!40449 () Bool)

(assert (=> d!12289 (=> (not res!33909) (not e!40449))))

(assert (=> d!12289 (= res!33909 (simpleValid!43 (_2!1034 lt!25002)))))

(assert (=> d!12289 (= (valid!263 (_2!1034 lt!25002)) e!40449)))

(declare-fun b!61585 () Bool)

(declare-fun res!33910 () Bool)

(assert (=> b!61585 (=> (not res!33910) (not e!40449))))

(assert (=> b!61585 (= res!33910 (= (arrayCountValidKeys!0 (_keys!3693 (_2!1034 lt!25002)) #b00000000000000000000000000000000 (size!2012 (_keys!3693 (_2!1034 lt!25002)))) (_size!363 (_2!1034 lt!25002))))))

(declare-fun b!61586 () Bool)

(declare-fun res!33911 () Bool)

(assert (=> b!61586 (=> (not res!33911) (not e!40449))))

(assert (=> b!61586 (= res!33911 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3693 (_2!1034 lt!25002)) (mask!5961 (_2!1034 lt!25002))))))

(declare-fun b!61587 () Bool)

(assert (=> b!61587 (= e!40449 (arrayNoDuplicates!0 (_keys!3693 (_2!1034 lt!25002)) #b00000000000000000000000000000000 Nil!1441))))

(assert (= (and d!12289 res!33909) b!61585))

(assert (= (and b!61585 res!33910) b!61586))

(assert (= (and b!61586 res!33911) b!61587))

(declare-fun m!54675 () Bool)

(assert (=> d!12289 m!54675))

(declare-fun m!54677 () Bool)

(assert (=> b!61585 m!54677))

(declare-fun m!54679 () Bool)

(assert (=> b!61586 m!54679))

(declare-fun m!54681 () Bool)

(assert (=> b!61587 m!54681))

(assert (=> b!60844 d!12289))

(assert (=> d!12001 d!12011))

(declare-fun d!12291 () Bool)

(assert (=> d!12291 (= (apply!67 (+!82 lt!24827 (tuple2!2049 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24818) (apply!67 lt!24827 lt!24818))))

(assert (=> d!12291 true))

(declare-fun _$34!768 () Unit!1621)

(assert (=> d!12291 (= (choose!330 lt!24827 lt!24820 (minValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24818) _$34!768)))

(declare-fun bs!2673 () Bool)

(assert (= bs!2673 d!12291))

(assert (=> bs!2673 m!53123))

(assert (=> bs!2673 m!53123))

(assert (=> bs!2673 m!53141))

(assert (=> bs!2673 m!53149))

(assert (=> d!12001 d!12291))

(declare-fun d!12293 () Bool)

(declare-fun e!40451 () Bool)

(assert (=> d!12293 e!40451))

(declare-fun res!33912 () Bool)

(assert (=> d!12293 (=> res!33912 e!40451)))

(declare-fun lt!25511 () Bool)

(assert (=> d!12293 (= res!33912 (not lt!25511))))

(declare-fun lt!25509 () Bool)

(assert (=> d!12293 (= lt!25511 lt!25509)))

(declare-fun lt!25508 () Unit!1621)

(declare-fun e!40450 () Unit!1621)

(assert (=> d!12293 (= lt!25508 e!40450)))

(declare-fun c!8115 () Bool)

(assert (=> d!12293 (= c!8115 lt!25509)))

(assert (=> d!12293 (= lt!25509 (containsKey!127 (toList!696 lt!24827) lt!24818))))

(assert (=> d!12293 (= (contains!687 lt!24827 lt!24818) lt!25511)))

(declare-fun b!61588 () Bool)

(declare-fun lt!25510 () Unit!1621)

(assert (=> b!61588 (= e!40450 lt!25510)))

(assert (=> b!61588 (= lt!25510 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24827) lt!24818))))

(assert (=> b!61588 (isDefined!77 (getValueByKey!123 (toList!696 lt!24827) lt!24818))))

(declare-fun b!61589 () Bool)

(declare-fun Unit!1664 () Unit!1621)

(assert (=> b!61589 (= e!40450 Unit!1664)))

(declare-fun b!61590 () Bool)

(assert (=> b!61590 (= e!40451 (isDefined!77 (getValueByKey!123 (toList!696 lt!24827) lt!24818)))))

(assert (= (and d!12293 c!8115) b!61588))

(assert (= (and d!12293 (not c!8115)) b!61589))

(assert (= (and d!12293 (not res!33912)) b!61590))

(declare-fun m!54683 () Bool)

(assert (=> d!12293 m!54683))

(declare-fun m!54685 () Bool)

(assert (=> b!61588 m!54685))

(assert (=> b!61588 m!53805))

(assert (=> b!61588 m!53805))

(declare-fun m!54687 () Bool)

(assert (=> b!61588 m!54687))

(assert (=> b!61590 m!53805))

(assert (=> b!61590 m!53805))

(assert (=> b!61590 m!54687))

(assert (=> d!12001 d!12293))

(assert (=> d!12001 d!12017))

(assert (=> d!12001 d!12019))

(assert (=> b!60992 d!12021))

(declare-fun d!12295 () Bool)

(declare-fun e!40452 () Bool)

(assert (=> d!12295 e!40452))

(declare-fun res!33913 () Bool)

(assert (=> d!12295 (=> (not res!33913) (not e!40452))))

(declare-fun lt!25514 () ListLongMap!1361)

(assert (=> d!12295 (= res!33913 (contains!687 lt!25514 (_1!1035 (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))))

(declare-fun lt!25512 () List!1443)

(assert (=> d!12295 (= lt!25514 (ListLongMap!1362 lt!25512))))

(declare-fun lt!25513 () Unit!1621)

(declare-fun lt!25515 () Unit!1621)

(assert (=> d!12295 (= lt!25513 lt!25515)))

(assert (=> d!12295 (= (getValueByKey!123 lt!25512 (_1!1035 (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))) (Some!128 (_2!1035 (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))))

(assert (=> d!12295 (= lt!25515 (lemmaContainsTupThenGetReturnValue!43 lt!25512 (_1!1035 (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) (_2!1035 (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))))

(assert (=> d!12295 (= lt!25512 (insertStrictlySorted!46 (toList!696 (ite c!7977 call!4701 (ite c!7979 call!4702 call!4697))) (_1!1035 (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) (_2!1035 (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))))

(assert (=> d!12295 (= (+!82 (ite c!7977 call!4701 (ite c!7979 call!4702 call!4697)) (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) lt!25514)))

(declare-fun b!61591 () Bool)

(declare-fun res!33914 () Bool)

(assert (=> b!61591 (=> (not res!33914) (not e!40452))))

(assert (=> b!61591 (= res!33914 (= (getValueByKey!123 (toList!696 lt!25514) (_1!1035 (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))) (Some!128 (_2!1035 (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))))

(declare-fun b!61592 () Bool)

(assert (=> b!61592 (= e!40452 (contains!689 (toList!696 lt!25514) (ite (or c!7977 c!7979) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(assert (= (and d!12295 res!33913) b!61591))

(assert (= (and b!61591 res!33914) b!61592))

(declare-fun m!54689 () Bool)

(assert (=> d!12295 m!54689))

(declare-fun m!54691 () Bool)

(assert (=> d!12295 m!54691))

(declare-fun m!54693 () Bool)

(assert (=> d!12295 m!54693))

(declare-fun m!54695 () Bool)

(assert (=> d!12295 m!54695))

(declare-fun m!54697 () Bool)

(assert (=> b!61591 m!54697))

(declare-fun m!54699 () Bool)

(assert (=> b!61592 m!54699))

(assert (=> bm!4697 d!12295))

(declare-fun d!12297 () Bool)

(declare-fun c!8116 () Bool)

(assert (=> d!12297 (= c!8116 (and ((_ is Cons!1439) (toList!696 lt!25038)) (= (_1!1035 (h!2021 (toList!696 lt!25038))) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40453 () Option!129)

(assert (=> d!12297 (= (getValueByKey!123 (toList!696 lt!25038) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) e!40453)))

(declare-fun b!61596 () Bool)

(declare-fun e!40454 () Option!129)

(assert (=> b!61596 (= e!40454 None!127)))

(declare-fun b!61593 () Bool)

(assert (=> b!61593 (= e!40453 (Some!128 (_2!1035 (h!2021 (toList!696 lt!25038)))))))

(declare-fun b!61595 () Bool)

(assert (=> b!61595 (= e!40454 (getValueByKey!123 (t!4808 (toList!696 lt!25038)) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61594 () Bool)

(assert (=> b!61594 (= e!40453 e!40454)))

(declare-fun c!8117 () Bool)

(assert (=> b!61594 (= c!8117 (and ((_ is Cons!1439) (toList!696 lt!25038)) (not (= (_1!1035 (h!2021 (toList!696 lt!25038))) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12297 c!8116) b!61593))

(assert (= (and d!12297 (not c!8116)) b!61594))

(assert (= (and b!61594 c!8117) b!61595))

(assert (= (and b!61594 (not c!8117)) b!61596))

(declare-fun m!54701 () Bool)

(assert (=> b!61595 m!54701))

(assert (=> b!60864 d!12297))

(assert (=> d!11981 d!12045))

(declare-fun d!12299 () Bool)

(assert (=> d!12299 (= (apply!67 lt!25192 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1086 (getValueByKey!123 (toList!696 lt!25192) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2674 () Bool)

(assert (= bs!2674 d!12299))

(assert (=> bs!2674 m!54461))

(assert (=> bs!2674 m!54461))

(declare-fun m!54703 () Bool)

(assert (=> bs!2674 m!54703))

(assert (=> b!61081 d!12299))

(assert (=> d!11991 d!11993))

(declare-fun d!12301 () Bool)

(declare-fun e!40456 () Bool)

(assert (=> d!12301 e!40456))

(declare-fun res!33915 () Bool)

(assert (=> d!12301 (=> res!33915 e!40456)))

(declare-fun lt!25519 () Bool)

(assert (=> d!12301 (= res!33915 (not lt!25519))))

(declare-fun lt!25517 () Bool)

(assert (=> d!12301 (= lt!25519 lt!25517)))

(declare-fun lt!25516 () Unit!1621)

(declare-fun e!40455 () Unit!1621)

(assert (=> d!12301 (= lt!25516 e!40455)))

(declare-fun c!8118 () Bool)

(assert (=> d!12301 (= c!8118 lt!25517)))

(assert (=> d!12301 (= lt!25517 (containsKey!127 (toList!696 lt!24819) lt!24826))))

(assert (=> d!12301 (= (contains!687 lt!24819 lt!24826) lt!25519)))

(declare-fun b!61597 () Bool)

(declare-fun lt!25518 () Unit!1621)

(assert (=> b!61597 (= e!40455 lt!25518)))

(assert (=> b!61597 (= lt!25518 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24819) lt!24826))))

(assert (=> b!61597 (isDefined!77 (getValueByKey!123 (toList!696 lt!24819) lt!24826))))

(declare-fun b!61598 () Bool)

(declare-fun Unit!1665 () Unit!1621)

(assert (=> b!61598 (= e!40455 Unit!1665)))

(declare-fun b!61599 () Bool)

(assert (=> b!61599 (= e!40456 (isDefined!77 (getValueByKey!123 (toList!696 lt!24819) lt!24826)))))

(assert (= (and d!12301 c!8118) b!61597))

(assert (= (and d!12301 (not c!8118)) b!61598))

(assert (= (and d!12301 (not res!33915)) b!61599))

(declare-fun m!54705 () Bool)

(assert (=> d!12301 m!54705))

(declare-fun m!54707 () Bool)

(assert (=> b!61597 m!54707))

(assert (=> b!61597 m!53797))

(assert (=> b!61597 m!53797))

(declare-fun m!54709 () Bool)

(assert (=> b!61597 m!54709))

(assert (=> b!61599 m!53797))

(assert (=> b!61599 m!53797))

(assert (=> b!61599 m!54709))

(assert (=> d!11991 d!12301))

(assert (=> d!11991 d!12015))

(declare-fun d!12303 () Bool)

(assert (=> d!12303 (= (apply!67 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24826) (apply!67 lt!24819 lt!24826))))

(assert (=> d!12303 true))

(declare-fun _$34!769 () Unit!1621)

(assert (=> d!12303 (= (choose!330 lt!24819 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24826) _$34!769)))

(declare-fun bs!2675 () Bool)

(assert (= bs!2675 d!12303))

(assert (=> bs!2675 m!53143))

(assert (=> bs!2675 m!53143))

(assert (=> bs!2675 m!53147))

(assert (=> bs!2675 m!53135))

(assert (=> d!11991 d!12303))

(assert (=> d!11991 d!11997))

(declare-fun d!12305 () Bool)

(assert (=> d!12305 (= (apply!67 lt!25074 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1086 (getValueByKey!123 (toList!696 lt!25074) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2676 () Bool)

(assert (= bs!2676 d!12305))

(declare-fun m!54711 () Bool)

(assert (=> bs!2676 m!54711))

(assert (=> bs!2676 m!54711))

(declare-fun m!54713 () Bool)

(assert (=> bs!2676 m!54713))

(assert (=> b!60895 d!12305))

(declare-fun d!12307 () Bool)

(declare-fun c!8119 () Bool)

(assert (=> d!12307 (= c!8119 (and ((_ is Cons!1439) (toList!696 lt!25209)) (= (_1!1035 (h!2021 (toList!696 lt!25209))) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40457 () Option!129)

(assert (=> d!12307 (= (getValueByKey!123 (toList!696 lt!25209) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) e!40457)))

(declare-fun b!61603 () Bool)

(declare-fun e!40458 () Option!129)

(assert (=> b!61603 (= e!40458 None!127)))

(declare-fun b!61600 () Bool)

(assert (=> b!61600 (= e!40457 (Some!128 (_2!1035 (h!2021 (toList!696 lt!25209)))))))

(declare-fun b!61602 () Bool)

(assert (=> b!61602 (= e!40458 (getValueByKey!123 (t!4808 (toList!696 lt!25209)) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61601 () Bool)

(assert (=> b!61601 (= e!40457 e!40458)))

(declare-fun c!8120 () Bool)

(assert (=> b!61601 (= c!8120 (and ((_ is Cons!1439) (toList!696 lt!25209)) (not (= (_1!1035 (h!2021 (toList!696 lt!25209))) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12307 c!8119) b!61600))

(assert (= (and d!12307 (not c!8119)) b!61601))

(assert (= (and b!61601 c!8120) b!61602))

(assert (= (and b!61601 (not c!8120)) b!61603))

(declare-fun m!54715 () Bool)

(assert (=> b!61602 m!54715))

(assert (=> b!61111 d!12307))

(declare-fun b!61604 () Bool)

(declare-fun e!40459 () Bool)

(declare-fun e!40461 () Bool)

(assert (=> b!61604 (= e!40459 e!40461)))

(declare-fun lt!25521 () (_ BitVec 64))

(assert (=> b!61604 (= lt!25521 (select (arr!1780 (_keys!3693 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!25520 () Unit!1621)

(assert (=> b!61604 (= lt!25520 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3693 newMap!16) lt!25521 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!61604 (arrayContainsKey!0 (_keys!3693 newMap!16) lt!25521 #b00000000000000000000000000000000)))

(declare-fun lt!25522 () Unit!1621)

(assert (=> b!61604 (= lt!25522 lt!25520)))

(declare-fun res!33917 () Bool)

(assert (=> b!61604 (= res!33917 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3693 newMap!16) (mask!5961 newMap!16)) (Found!231 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!61604 (=> (not res!33917) (not e!40461))))

(declare-fun bm!4756 () Bool)

(declare-fun call!4759 () Bool)

(assert (=> bm!4756 (= call!4759 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun b!61605 () Bool)

(assert (=> b!61605 (= e!40461 call!4759)))

(declare-fun b!61606 () Bool)

(assert (=> b!61606 (= e!40459 call!4759)))

(declare-fun d!12309 () Bool)

(declare-fun res!33916 () Bool)

(declare-fun e!40460 () Bool)

(assert (=> d!12309 (=> res!33916 e!40460)))

(assert (=> d!12309 (= res!33916 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12309 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3693 newMap!16) (mask!5961 newMap!16)) e!40460)))

(declare-fun b!61607 () Bool)

(assert (=> b!61607 (= e!40460 e!40459)))

(declare-fun c!8121 () Bool)

(assert (=> b!61607 (= c!8121 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!12309 (not res!33916)) b!61607))

(assert (= (and b!61607 c!8121) b!61604))

(assert (= (and b!61607 (not c!8121)) b!61606))

(assert (= (and b!61604 res!33917) b!61605))

(assert (= (or b!61605 b!61606) bm!4756))

(assert (=> b!61604 m!53847))

(declare-fun m!54717 () Bool)

(assert (=> b!61604 m!54717))

(declare-fun m!54719 () Bool)

(assert (=> b!61604 m!54719))

(assert (=> b!61604 m!53847))

(declare-fun m!54721 () Bool)

(assert (=> b!61604 m!54721))

(declare-fun m!54723 () Bool)

(assert (=> bm!4756 m!54723))

(assert (=> b!61607 m!53847))

(assert (=> b!61607 m!53847))

(assert (=> b!61607 m!53853))

(assert (=> bm!4685 d!12309))

(declare-fun c!8122 () Bool)

(declare-fun d!12311 () Bool)

(assert (=> d!12311 (= c!8122 (and ((_ is Cons!1439) (toList!696 lt!25145)) (= (_1!1035 (h!2021 (toList!696 lt!25145))) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun e!40462 () Option!129)

(assert (=> d!12311 (= (getValueByKey!123 (toList!696 lt!25145) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) e!40462)))

(declare-fun b!61611 () Bool)

(declare-fun e!40463 () Option!129)

(assert (=> b!61611 (= e!40463 None!127)))

(declare-fun b!61608 () Bool)

(assert (=> b!61608 (= e!40462 (Some!128 (_2!1035 (h!2021 (toList!696 lt!25145)))))))

(declare-fun b!61610 () Bool)

(assert (=> b!61610 (= e!40463 (getValueByKey!123 (t!4808 (toList!696 lt!25145)) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61609 () Bool)

(assert (=> b!61609 (= e!40462 e!40463)))

(declare-fun c!8123 () Bool)

(assert (=> b!61609 (= c!8123 (and ((_ is Cons!1439) (toList!696 lt!25145)) (not (= (_1!1035 (h!2021 (toList!696 lt!25145))) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))))

(assert (= (and d!12311 c!8122) b!61608))

(assert (= (and d!12311 (not c!8122)) b!61609))

(assert (= (and b!61609 c!8123) b!61610))

(assert (= (and b!61609 (not c!8123)) b!61611))

(declare-fun m!54725 () Bool)

(assert (=> b!61610 m!54725))

(assert (=> b!61049 d!12311))

(declare-fun d!12313 () Bool)

(assert (=> d!12313 (= (apply!67 lt!25074 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1086 (getValueByKey!123 (toList!696 lt!25074) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2677 () Bool)

(assert (= bs!2677 d!12313))

(assert (=> bs!2677 m!53263))

(declare-fun m!54727 () Bool)

(assert (=> bs!2677 m!54727))

(assert (=> bs!2677 m!54727))

(declare-fun m!54729 () Bool)

(assert (=> bs!2677 m!54729))

(assert (=> b!60912 d!12313))

(declare-fun d!12315 () Bool)

(declare-fun c!8124 () Bool)

(assert (=> d!12315 (= c!8124 ((_ is ValueCellFull!860) (select (arr!1781 (_values!2049 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!40464 () V!2857)

(assert (=> d!12315 (= (get!1083 (select (arr!1781 (_values!2049 newMap!16)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!40464)))

(declare-fun b!61612 () Bool)

(assert (=> b!61612 (= e!40464 (get!1084 (select (arr!1781 (_values!2049 newMap!16)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!61613 () Bool)

(assert (=> b!61613 (= e!40464 (get!1085 (select (arr!1781 (_values!2049 newMap!16)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12315 c!8124) b!61612))

(assert (= (and d!12315 (not c!8124)) b!61613))

(assert (=> b!61612 m!53389))

(assert (=> b!61612 m!53391))

(declare-fun m!54731 () Bool)

(assert (=> b!61612 m!54731))

(assert (=> b!61613 m!53389))

(assert (=> b!61613 m!53391))

(declare-fun m!54733 () Bool)

(assert (=> b!61613 m!54733))

(assert (=> b!60912 d!12315))

(declare-fun d!12317 () Bool)

(declare-fun e!40466 () Bool)

(assert (=> d!12317 e!40466))

(declare-fun res!33918 () Bool)

(assert (=> d!12317 (=> res!33918 e!40466)))

(declare-fun lt!25526 () Bool)

(assert (=> d!12317 (= res!33918 (not lt!25526))))

(declare-fun lt!25524 () Bool)

(assert (=> d!12317 (= lt!25526 lt!25524)))

(declare-fun lt!25523 () Unit!1621)

(declare-fun e!40465 () Unit!1621)

(assert (=> d!12317 (= lt!25523 e!40465)))

(declare-fun c!8125 () Bool)

(assert (=> d!12317 (= c!8125 lt!25524)))

(assert (=> d!12317 (= lt!25524 (containsKey!127 (toList!696 lt!25192) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!12317 (= (contains!687 lt!25192 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) lt!25526)))

(declare-fun b!61614 () Bool)

(declare-fun lt!25525 () Unit!1621)

(assert (=> b!61614 (= e!40465 lt!25525)))

(assert (=> b!61614 (= lt!25525 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25192) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61614 (isDefined!77 (getValueByKey!123 (toList!696 lt!25192) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61615 () Bool)

(declare-fun Unit!1666 () Unit!1621)

(assert (=> b!61615 (= e!40465 Unit!1666)))

(declare-fun b!61616 () Bool)

(assert (=> b!61616 (= e!40466 (isDefined!77 (getValueByKey!123 (toList!696 lt!25192) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!12317 c!8125) b!61614))

(assert (= (and d!12317 (not c!8125)) b!61615))

(assert (= (and d!12317 (not res!33918)) b!61616))

(assert (=> d!12317 m!53263))

(declare-fun m!54735 () Bool)

(assert (=> d!12317 m!54735))

(assert (=> b!61614 m!53263))

(declare-fun m!54737 () Bool)

(assert (=> b!61614 m!54737))

(assert (=> b!61614 m!53263))

(assert (=> b!61614 m!54477))

(assert (=> b!61614 m!54477))

(declare-fun m!54739 () Bool)

(assert (=> b!61614 m!54739))

(assert (=> b!61616 m!53263))

(assert (=> b!61616 m!54477))

(assert (=> b!61616 m!54477))

(assert (=> b!61616 m!54739))

(assert (=> b!61084 d!12317))

(declare-fun d!12319 () Bool)

(declare-fun res!33919 () Bool)

(declare-fun e!40467 () Bool)

(assert (=> d!12319 (=> res!33919 e!40467)))

(assert (=> d!12319 (= res!33919 (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!12319 (= (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!40467)))

(declare-fun b!61617 () Bool)

(declare-fun e!40468 () Bool)

(assert (=> b!61617 (= e!40467 e!40468)))

(declare-fun res!33920 () Bool)

(assert (=> b!61617 (=> (not res!33920) (not e!40468))))

(assert (=> b!61617 (= res!33920 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(declare-fun b!61618 () Bool)

(assert (=> b!61618 (= e!40468 (arrayContainsKey!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!12319 (not res!33919)) b!61617))

(assert (= (and b!61617 res!33920) b!61618))

(declare-fun m!54741 () Bool)

(assert (=> d!12319 m!54741))

(assert (=> b!61618 m!52977))

(declare-fun m!54743 () Bool)

(assert (=> b!61618 m!54743))

(assert (=> b!60945 d!12319))

(assert (=> b!60870 d!12037))

(declare-fun d!12321 () Bool)

(declare-fun e!40470 () Bool)

(assert (=> d!12321 e!40470))

(declare-fun res!33921 () Bool)

(assert (=> d!12321 (=> res!33921 e!40470)))

(declare-fun lt!25530 () Bool)

(assert (=> d!12321 (= res!33921 (not lt!25530))))

(declare-fun lt!25528 () Bool)

(assert (=> d!12321 (= lt!25530 lt!25528)))

(declare-fun lt!25527 () Unit!1621)

(declare-fun e!40469 () Unit!1621)

(assert (=> d!12321 (= lt!25527 e!40469)))

(declare-fun c!8126 () Bool)

(assert (=> d!12321 (= c!8126 lt!25528)))

(assert (=> d!12321 (= lt!25528 (containsKey!127 (toList!696 lt!25209) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12321 (= (contains!687 lt!25209 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25530)))

(declare-fun b!61619 () Bool)

(declare-fun lt!25529 () Unit!1621)

(assert (=> b!61619 (= e!40469 lt!25529)))

(assert (=> b!61619 (= lt!25529 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25209) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> b!61619 (isDefined!77 (getValueByKey!123 (toList!696 lt!25209) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61620 () Bool)

(declare-fun Unit!1667 () Unit!1621)

(assert (=> b!61620 (= e!40469 Unit!1667)))

(declare-fun b!61621 () Bool)

(assert (=> b!61621 (= e!40470 (isDefined!77 (getValueByKey!123 (toList!696 lt!25209) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (= (and d!12321 c!8126) b!61619))

(assert (= (and d!12321 (not c!8126)) b!61620))

(assert (= (and d!12321 (not res!33921)) b!61621))

(declare-fun m!54745 () Bool)

(assert (=> d!12321 m!54745))

(declare-fun m!54747 () Bool)

(assert (=> b!61619 m!54747))

(assert (=> b!61619 m!53733))

(assert (=> b!61619 m!53733))

(declare-fun m!54749 () Bool)

(assert (=> b!61619 m!54749))

(assert (=> b!61621 m!53733))

(assert (=> b!61621 m!53733))

(assert (=> b!61621 m!54749))

(assert (=> d!11997 d!12321))

(declare-fun c!8127 () Bool)

(declare-fun d!12323 () Bool)

(assert (=> d!12323 (= c!8127 (and ((_ is Cons!1439) lt!25207) (= (_1!1035 (h!2021 lt!25207)) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40471 () Option!129)

(assert (=> d!12323 (= (getValueByKey!123 lt!25207 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) e!40471)))

(declare-fun b!61625 () Bool)

(declare-fun e!40472 () Option!129)

(assert (=> b!61625 (= e!40472 None!127)))

(declare-fun b!61622 () Bool)

(assert (=> b!61622 (= e!40471 (Some!128 (_2!1035 (h!2021 lt!25207))))))

(declare-fun b!61624 () Bool)

(assert (=> b!61624 (= e!40472 (getValueByKey!123 (t!4808 lt!25207) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61623 () Bool)

(assert (=> b!61623 (= e!40471 e!40472)))

(declare-fun c!8128 () Bool)

(assert (=> b!61623 (= c!8128 (and ((_ is Cons!1439) lt!25207) (not (= (_1!1035 (h!2021 lt!25207)) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12323 c!8127) b!61622))

(assert (= (and d!12323 (not c!8127)) b!61623))

(assert (= (and b!61623 c!8128) b!61624))

(assert (= (and b!61623 (not c!8128)) b!61625))

(declare-fun m!54751 () Bool)

(assert (=> b!61624 m!54751))

(assert (=> d!11997 d!12323))

(declare-fun d!12325 () Bool)

(assert (=> d!12325 (= (getValueByKey!123 lt!25207 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lt!25531 () Unit!1621)

(assert (=> d!12325 (= lt!25531 (choose!332 lt!25207 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun e!40473 () Bool)

(assert (=> d!12325 e!40473))

(declare-fun res!33922 () Bool)

(assert (=> d!12325 (=> (not res!33922) (not e!40473))))

(assert (=> d!12325 (= res!33922 (isStrictlySorted!280 lt!25207))))

(assert (=> d!12325 (= (lemmaContainsTupThenGetReturnValue!43 lt!25207 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25531)))

(declare-fun b!61626 () Bool)

(declare-fun res!33923 () Bool)

(assert (=> b!61626 (=> (not res!33923) (not e!40473))))

(assert (=> b!61626 (= res!33923 (containsKey!127 lt!25207 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61627 () Bool)

(assert (=> b!61627 (= e!40473 (contains!689 lt!25207 (tuple2!2049 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (= (and d!12325 res!33922) b!61626))

(assert (= (and b!61626 res!33923) b!61627))

(assert (=> d!12325 m!53727))

(declare-fun m!54753 () Bool)

(assert (=> d!12325 m!54753))

(declare-fun m!54755 () Bool)

(assert (=> d!12325 m!54755))

(declare-fun m!54757 () Bool)

(assert (=> b!61626 m!54757))

(declare-fun m!54759 () Bool)

(assert (=> b!61627 m!54759))

(assert (=> d!11997 d!12325))

(declare-fun c!8132 () Bool)

(declare-fun b!61628 () Bool)

(assert (=> b!61628 (= c!8132 (and ((_ is Cons!1439) (toList!696 lt!24819)) (bvsgt (_1!1035 (h!2021 (toList!696 lt!24819))) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40477 () List!1443)

(declare-fun e!40475 () List!1443)

(assert (=> b!61628 (= e!40477 e!40475)))

(declare-fun bm!4757 () Bool)

(declare-fun call!4760 () List!1443)

(declare-fun call!4761 () List!1443)

(assert (=> bm!4757 (= call!4760 call!4761)))

(declare-fun b!61629 () Bool)

(declare-fun call!4762 () List!1443)

(assert (=> b!61629 (= e!40475 call!4762)))

(declare-fun b!61630 () Bool)

(declare-fun res!33924 () Bool)

(declare-fun e!40478 () Bool)

(assert (=> b!61630 (=> (not res!33924) (not e!40478))))

(declare-fun lt!25532 () List!1443)

(assert (=> b!61630 (= res!33924 (containsKey!127 lt!25532 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun e!40474 () List!1443)

(declare-fun b!61631 () Bool)

(declare-fun c!8130 () Bool)

(assert (=> b!61631 (= e!40474 (ite c!8130 (t!4808 (toList!696 lt!24819)) (ite c!8132 (Cons!1439 (h!2021 (toList!696 lt!24819)) (t!4808 (toList!696 lt!24819))) Nil!1440)))))

(declare-fun d!12327 () Bool)

(assert (=> d!12327 e!40478))

(declare-fun res!33925 () Bool)

(assert (=> d!12327 (=> (not res!33925) (not e!40478))))

(assert (=> d!12327 (= res!33925 (isStrictlySorted!280 lt!25532))))

(declare-fun e!40476 () List!1443)

(assert (=> d!12327 (= lt!25532 e!40476)))

(declare-fun c!8131 () Bool)

(assert (=> d!12327 (= c!8131 (and ((_ is Cons!1439) (toList!696 lt!24819)) (bvslt (_1!1035 (h!2021 (toList!696 lt!24819))) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> d!12327 (isStrictlySorted!280 (toList!696 lt!24819))))

(assert (=> d!12327 (= (insertStrictlySorted!46 (toList!696 lt!24819) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25532)))

(declare-fun b!61632 () Bool)

(assert (=> b!61632 (= e!40474 (insertStrictlySorted!46 (t!4808 (toList!696 lt!24819)) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun bm!4758 () Bool)

(assert (=> bm!4758 (= call!4762 call!4760)))

(declare-fun b!61633 () Bool)

(assert (=> b!61633 (= e!40476 call!4761)))

(declare-fun bm!4759 () Bool)

(assert (=> bm!4759 (= call!4761 ($colon$colon!60 e!40474 (ite c!8131 (h!2021 (toList!696 lt!24819)) (tuple2!2049 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun c!8129 () Bool)

(assert (=> bm!4759 (= c!8129 c!8131)))

(declare-fun b!61634 () Bool)

(assert (=> b!61634 (= e!40477 call!4760)))

(declare-fun b!61635 () Bool)

(assert (=> b!61635 (= e!40478 (contains!689 lt!25532 (tuple2!2049 (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61636 () Bool)

(assert (=> b!61636 (= e!40476 e!40477)))

(assert (=> b!61636 (= c!8130 (and ((_ is Cons!1439) (toList!696 lt!24819)) (= (_1!1035 (h!2021 (toList!696 lt!24819))) (_1!1035 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61637 () Bool)

(assert (=> b!61637 (= e!40475 call!4762)))

(assert (= (and d!12327 c!8131) b!61633))

(assert (= (and d!12327 (not c!8131)) b!61636))

(assert (= (and b!61636 c!8130) b!61634))

(assert (= (and b!61636 (not c!8130)) b!61628))

(assert (= (and b!61628 c!8132) b!61629))

(assert (= (and b!61628 (not c!8132)) b!61637))

(assert (= (or b!61629 b!61637) bm!4758))

(assert (= (or b!61634 bm!4758) bm!4757))

(assert (= (or b!61633 bm!4757) bm!4759))

(assert (= (and bm!4759 c!8129) b!61632))

(assert (= (and bm!4759 (not c!8129)) b!61631))

(assert (= (and d!12327 res!33925) b!61630))

(assert (= (and b!61630 res!33924) b!61635))

(declare-fun m!54761 () Bool)

(assert (=> b!61635 m!54761))

(declare-fun m!54763 () Bool)

(assert (=> b!61630 m!54763))

(declare-fun m!54765 () Bool)

(assert (=> d!12327 m!54765))

(declare-fun m!54767 () Bool)

(assert (=> d!12327 m!54767))

(declare-fun m!54769 () Bool)

(assert (=> bm!4759 m!54769))

(declare-fun m!54771 () Bool)

(assert (=> b!61632 m!54771))

(assert (=> d!11997 d!12327))

(declare-fun d!12329 () Bool)

(assert (=> d!12329 (contains!687 (getCurrentListMap!392 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917)))))

(assert (=> d!12329 true))

(declare-fun _$16!81 () Unit!1621)

(assert (=> d!12329 (= (choose!323 (_keys!3693 newMap!16) lt!24922 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (index!3049 lt!24917) (defaultEntry!2066 newMap!16)) _$16!81)))

(declare-fun bs!2678 () Bool)

(assert (= bs!2678 d!12329))

(assert (=> bs!2678 m!53367))

(assert (=> bs!2678 m!53225))

(assert (=> bs!2678 m!53367))

(assert (=> bs!2678 m!53225))

(assert (=> bs!2678 m!53369))

(assert (=> d!11917 d!12329))

(assert (=> d!11917 d!12045))

(declare-fun d!12331 () Bool)

(assert (=> d!12331 (= (get!1085 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!60950 d!12331))

(declare-fun d!12333 () Bool)

(declare-fun res!33926 () Bool)

(declare-fun e!40479 () Bool)

(assert (=> d!12333 (=> res!33926 e!40479)))

(assert (=> d!12333 (= res!33926 (and ((_ is Cons!1439) (toList!696 call!4646)) (= (_1!1035 (h!2021 (toList!696 call!4646))) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917)))))))

(assert (=> d!12333 (= (containsKey!127 (toList!696 call!4646) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))) e!40479)))

(declare-fun b!61638 () Bool)

(declare-fun e!40480 () Bool)

(assert (=> b!61638 (= e!40479 e!40480)))

(declare-fun res!33927 () Bool)

(assert (=> b!61638 (=> (not res!33927) (not e!40480))))

(assert (=> b!61638 (= res!33927 (and (or (not ((_ is Cons!1439) (toList!696 call!4646))) (bvsle (_1!1035 (h!2021 (toList!696 call!4646))) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917)))) ((_ is Cons!1439) (toList!696 call!4646)) (bvslt (_1!1035 (h!2021 (toList!696 call!4646))) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917)))))))

(declare-fun b!61639 () Bool)

(assert (=> b!61639 (= e!40480 (containsKey!127 (t!4808 (toList!696 call!4646)) (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!24917))))))

(assert (= (and d!12333 (not res!33926)) b!61638))

(assert (= (and b!61638 res!33927) b!61639))

(assert (=> b!61639 m!53225))

(declare-fun m!54773 () Bool)

(assert (=> b!61639 m!54773))

(assert (=> d!11915 d!12333))

(declare-fun d!12335 () Bool)

(declare-fun e!40482 () Bool)

(assert (=> d!12335 e!40482))

(declare-fun res!33928 () Bool)

(assert (=> d!12335 (=> res!33928 e!40482)))

(declare-fun lt!25536 () Bool)

(assert (=> d!12335 (= res!33928 (not lt!25536))))

(declare-fun lt!25534 () Bool)

(assert (=> d!12335 (= lt!25536 lt!25534)))

(declare-fun lt!25533 () Unit!1621)

(declare-fun e!40481 () Unit!1621)

(assert (=> d!12335 (= lt!25533 e!40481)))

(declare-fun c!8133 () Bool)

(assert (=> d!12335 (= c!8133 lt!25534)))

(assert (=> d!12335 (= lt!25534 (containsKey!127 (toList!696 lt!25145) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> d!12335 (= (contains!687 lt!25145 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) lt!25536)))

(declare-fun b!61640 () Bool)

(declare-fun lt!25535 () Unit!1621)

(assert (=> b!61640 (= e!40481 lt!25535)))

(assert (=> b!61640 (= lt!25535 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25145) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> b!61640 (isDefined!77 (getValueByKey!123 (toList!696 lt!25145) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61641 () Bool)

(declare-fun Unit!1668 () Unit!1621)

(assert (=> b!61641 (= e!40481 Unit!1668)))

(declare-fun b!61642 () Bool)

(assert (=> b!61642 (= e!40482 (isDefined!77 (getValueByKey!123 (toList!696 lt!25145) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12335 c!8133) b!61640))

(assert (= (and d!12335 (not c!8133)) b!61641))

(assert (= (and d!12335 (not res!33928)) b!61642))

(declare-fun m!54775 () Bool)

(assert (=> d!12335 m!54775))

(declare-fun m!54777 () Bool)

(assert (=> b!61640 m!54777))

(assert (=> b!61640 m!53575))

(assert (=> b!61640 m!53575))

(declare-fun m!54779 () Bool)

(assert (=> b!61640 m!54779))

(assert (=> b!61642 m!53575))

(assert (=> b!61642 m!53575))

(assert (=> b!61642 m!54779))

(assert (=> d!11971 d!12335))

(declare-fun d!12337 () Bool)

(declare-fun c!8134 () Bool)

(assert (=> d!12337 (= c!8134 (and ((_ is Cons!1439) lt!25143) (= (_1!1035 (h!2021 lt!25143)) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun e!40483 () Option!129)

(assert (=> d!12337 (= (getValueByKey!123 lt!25143 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) e!40483)))

(declare-fun b!61646 () Bool)

(declare-fun e!40484 () Option!129)

(assert (=> b!61646 (= e!40484 None!127)))

(declare-fun b!61643 () Bool)

(assert (=> b!61643 (= e!40483 (Some!128 (_2!1035 (h!2021 lt!25143))))))

(declare-fun b!61645 () Bool)

(assert (=> b!61645 (= e!40484 (getValueByKey!123 (t!4808 lt!25143) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61644 () Bool)

(assert (=> b!61644 (= e!40483 e!40484)))

(declare-fun c!8135 () Bool)

(assert (=> b!61644 (= c!8135 (and ((_ is Cons!1439) lt!25143) (not (= (_1!1035 (h!2021 lt!25143)) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))))

(assert (= (and d!12337 c!8134) b!61643))

(assert (= (and d!12337 (not c!8134)) b!61644))

(assert (= (and b!61644 c!8135) b!61645))

(assert (= (and b!61644 (not c!8135)) b!61646))

(declare-fun m!54781 () Bool)

(assert (=> b!61645 m!54781))

(assert (=> d!11971 d!12337))

(declare-fun d!12339 () Bool)

(assert (=> d!12339 (= (getValueByKey!123 lt!25143 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) (Some!128 (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun lt!25537 () Unit!1621)

(assert (=> d!12339 (= lt!25537 (choose!332 lt!25143 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40485 () Bool)

(assert (=> d!12339 e!40485))

(declare-fun res!33929 () Bool)

(assert (=> d!12339 (=> (not res!33929) (not e!40485))))

(assert (=> d!12339 (= res!33929 (isStrictlySorted!280 lt!25143))))

(assert (=> d!12339 (= (lemmaContainsTupThenGetReturnValue!43 lt!25143 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) lt!25537)))

(declare-fun b!61647 () Bool)

(declare-fun res!33930 () Bool)

(assert (=> b!61647 (=> (not res!33930) (not e!40485))))

(assert (=> b!61647 (= res!33930 (containsKey!127 lt!25143 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61648 () Bool)

(assert (=> b!61648 (= e!40485 (contains!689 lt!25143 (tuple2!2049 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12339 res!33929) b!61647))

(assert (= (and b!61647 res!33930) b!61648))

(assert (=> d!12339 m!53569))

(declare-fun m!54783 () Bool)

(assert (=> d!12339 m!54783))

(declare-fun m!54785 () Bool)

(assert (=> d!12339 m!54785))

(declare-fun m!54787 () Bool)

(assert (=> b!61647 m!54787))

(declare-fun m!54789 () Bool)

(assert (=> b!61648 m!54789))

(assert (=> d!11971 d!12339))

(declare-fun b!61649 () Bool)

(declare-fun c!8139 () Bool)

(assert (=> b!61649 (= c!8139 (and ((_ is Cons!1439) (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572)))) (bvsgt (_1!1035 (h!2021 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572))))) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun e!40489 () List!1443)

(declare-fun e!40487 () List!1443)

(assert (=> b!61649 (= e!40489 e!40487)))

(declare-fun bm!4760 () Bool)

(declare-fun call!4763 () List!1443)

(declare-fun call!4764 () List!1443)

(assert (=> bm!4760 (= call!4763 call!4764)))

(declare-fun b!61650 () Bool)

(declare-fun call!4765 () List!1443)

(assert (=> b!61650 (= e!40487 call!4765)))

(declare-fun b!61651 () Bool)

(declare-fun res!33931 () Bool)

(declare-fun e!40490 () Bool)

(assert (=> b!61651 (=> (not res!33931) (not e!40490))))

(declare-fun lt!25538 () List!1443)

(assert (=> b!61651 (= res!33931 (containsKey!127 lt!25538 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40486 () List!1443)

(declare-fun b!61652 () Bool)

(declare-fun c!8137 () Bool)

(assert (=> b!61652 (= e!40486 (ite c!8137 (t!4808 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572)))) (ite c!8139 (Cons!1439 (h!2021 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572)))) (t!4808 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572))))) Nil!1440)))))

(declare-fun d!12341 () Bool)

(assert (=> d!12341 e!40490))

(declare-fun res!33932 () Bool)

(assert (=> d!12341 (=> (not res!33932) (not e!40490))))

(assert (=> d!12341 (= res!33932 (isStrictlySorted!280 lt!25538))))

(declare-fun e!40488 () List!1443)

(assert (=> d!12341 (= lt!25538 e!40488)))

(declare-fun c!8138 () Bool)

(assert (=> d!12341 (= c!8138 (and ((_ is Cons!1439) (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572)))) (bvslt (_1!1035 (h!2021 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572))))) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (=> d!12341 (isStrictlySorted!280 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572))))))

(assert (=> d!12341 (= (insertStrictlySorted!46 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572))) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) lt!25538)))

(declare-fun b!61653 () Bool)

(assert (=> b!61653 (= e!40486 (insertStrictlySorted!46 (t!4808 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572)))) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun bm!4761 () Bool)

(assert (=> bm!4761 (= call!4765 call!4763)))

(declare-fun b!61654 () Bool)

(assert (=> b!61654 (= e!40488 call!4764)))

(declare-fun bm!4762 () Bool)

(assert (=> bm!4762 (= call!4764 ($colon$colon!60 e!40486 (ite c!8138 (h!2021 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572)))) (tuple2!2049 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))))

(declare-fun c!8136 () Bool)

(assert (=> bm!4762 (= c!8136 c!8138)))

(declare-fun b!61655 () Bool)

(assert (=> b!61655 (= e!40489 call!4763)))

(declare-fun b!61656 () Bool)

(assert (=> b!61656 (= e!40490 (contains!689 lt!25538 (tuple2!2049 (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (_2!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun b!61657 () Bool)

(assert (=> b!61657 (= e!40488 e!40489)))

(assert (=> b!61657 (= c!8137 (and ((_ is Cons!1439) (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572)))) (= (_1!1035 (h!2021 (toList!696 (ite c!7841 call!4576 (ite c!7843 call!4577 call!4572))))) (_1!1035 (ite (or c!7841 c!7843) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun b!61658 () Bool)

(assert (=> b!61658 (= e!40487 call!4765)))

(assert (= (and d!12341 c!8138) b!61654))

(assert (= (and d!12341 (not c!8138)) b!61657))

(assert (= (and b!61657 c!8137) b!61655))

(assert (= (and b!61657 (not c!8137)) b!61649))

(assert (= (and b!61649 c!8139) b!61650))

(assert (= (and b!61649 (not c!8139)) b!61658))

(assert (= (or b!61650 b!61658) bm!4761))

(assert (= (or b!61655 bm!4761) bm!4760))

(assert (= (or b!61654 bm!4760) bm!4762))

(assert (= (and bm!4762 c!8136) b!61653))

(assert (= (and bm!4762 (not c!8136)) b!61652))

(assert (= (and d!12341 res!33932) b!61651))

(assert (= (and b!61651 res!33931) b!61656))

(declare-fun m!54791 () Bool)

(assert (=> b!61656 m!54791))

(declare-fun m!54793 () Bool)

(assert (=> b!61651 m!54793))

(declare-fun m!54795 () Bool)

(assert (=> d!12341 m!54795))

(declare-fun m!54797 () Bool)

(assert (=> d!12341 m!54797))

(declare-fun m!54799 () Bool)

(assert (=> bm!4762 m!54799))

(declare-fun m!54801 () Bool)

(assert (=> b!61653 m!54801))

(assert (=> d!11971 d!12341))

(declare-fun d!12343 () Bool)

(assert (=> d!12343 (= (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!60875 d!12343))

(declare-fun d!12345 () Bool)

(assert (=> d!12345 (= (apply!67 (+!82 lt!25191 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) lt!25196) (apply!67 lt!25191 lt!25196))))

(declare-fun lt!25539 () Unit!1621)

(assert (=> d!12345 (= lt!25539 (choose!330 lt!25191 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) lt!25196))))

(declare-fun e!40491 () Bool)

(assert (=> d!12345 e!40491))

(declare-fun res!33933 () Bool)

(assert (=> d!12345 (=> (not res!33933) (not e!40491))))

(assert (=> d!12345 (= res!33933 (contains!687 lt!25191 lt!25196))))

(assert (=> d!12345 (= (addApplyDifferent!43 lt!25191 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) lt!25196) lt!25539)))

(declare-fun b!61659 () Bool)

(assert (=> b!61659 (= e!40491 (not (= lt!25196 lt!25181)))))

(assert (= (and d!12345 res!33933) b!61659))

(assert (=> d!12345 m!53651))

(assert (=> d!12345 m!53669))

(declare-fun m!54803 () Bool)

(assert (=> d!12345 m!54803))

(assert (=> d!12345 m!53651))

(assert (=> d!12345 m!53657))

(declare-fun m!54805 () Bool)

(assert (=> d!12345 m!54805))

(assert (=> b!61078 d!12345))

(declare-fun d!12347 () Bool)

(assert (=> d!12347 (contains!687 (+!82 lt!25182 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) lt!25176)))

(declare-fun lt!25540 () Unit!1621)

(assert (=> d!12347 (= lt!25540 (choose!331 lt!25182 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) lt!25176))))

(assert (=> d!12347 (contains!687 lt!25182 lt!25176)))

(assert (=> d!12347 (= (addStillContains!43 lt!25182 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) lt!25176) lt!25540)))

(declare-fun bs!2679 () Bool)

(assert (= bs!2679 d!12347))

(assert (=> bs!2679 m!53653))

(assert (=> bs!2679 m!53653))

(assert (=> bs!2679 m!53655))

(declare-fun m!54807 () Bool)

(assert (=> bs!2679 m!54807))

(declare-fun m!54809 () Bool)

(assert (=> bs!2679 m!54809))

(assert (=> b!61078 d!12347))

(declare-fun d!12349 () Bool)

(assert (=> d!12349 (= (apply!67 (+!82 lt!25194 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) lt!25185) (apply!67 lt!25194 lt!25185))))

(declare-fun lt!25541 () Unit!1621)

(assert (=> d!12349 (= lt!25541 (choose!330 lt!25194 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) lt!25185))))

(declare-fun e!40492 () Bool)

(assert (=> d!12349 e!40492))

(declare-fun res!33934 () Bool)

(assert (=> d!12349 (=> (not res!33934) (not e!40492))))

(assert (=> d!12349 (= res!33934 (contains!687 lt!25194 lt!25185))))

(assert (=> d!12349 (= (addApplyDifferent!43 lt!25194 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) lt!25185) lt!25541)))

(declare-fun b!61660 () Bool)

(assert (=> b!61660 (= e!40492 (not (= lt!25185 lt!25187)))))

(assert (= (and d!12349 res!33934) b!61660))

(assert (=> d!12349 m!53647))

(assert (=> d!12349 m!53673))

(declare-fun m!54811 () Bool)

(assert (=> d!12349 m!54811))

(assert (=> d!12349 m!53647))

(assert (=> d!12349 m!53665))

(declare-fun m!54813 () Bool)

(assert (=> d!12349 m!54813))

(assert (=> b!61078 d!12349))

(declare-fun d!12351 () Bool)

(declare-fun e!40493 () Bool)

(assert (=> d!12351 e!40493))

(declare-fun res!33935 () Bool)

(assert (=> d!12351 (=> (not res!33935) (not e!40493))))

(declare-fun lt!25544 () ListLongMap!1361)

(assert (=> d!12351 (= res!33935 (contains!687 lt!25544 (_1!1035 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))))))

(declare-fun lt!25542 () List!1443)

(assert (=> d!12351 (= lt!25544 (ListLongMap!1362 lt!25542))))

(declare-fun lt!25543 () Unit!1621)

(declare-fun lt!25545 () Unit!1621)

(assert (=> d!12351 (= lt!25543 lt!25545)))

(assert (=> d!12351 (= (getValueByKey!123 lt!25542 (_1!1035 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))) (Some!128 (_2!1035 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))))))

(assert (=> d!12351 (= lt!25545 (lemmaContainsTupThenGetReturnValue!43 lt!25542 (_1!1035 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) (_2!1035 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))))))

(assert (=> d!12351 (= lt!25542 (insertStrictlySorted!46 (toList!696 lt!25191) (_1!1035 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) (_2!1035 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))))))

(assert (=> d!12351 (= (+!82 lt!25191 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) lt!25544)))

(declare-fun b!61661 () Bool)

(declare-fun res!33936 () Bool)

(assert (=> b!61661 (=> (not res!33936) (not e!40493))))

(assert (=> b!61661 (= res!33936 (= (getValueByKey!123 (toList!696 lt!25544) (_1!1035 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))) (Some!128 (_2!1035 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))))))))

(declare-fun b!61662 () Bool)

(assert (=> b!61662 (= e!40493 (contains!689 (toList!696 lt!25544) (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))))))

(assert (= (and d!12351 res!33935) b!61661))

(assert (= (and b!61661 res!33936) b!61662))

(declare-fun m!54815 () Bool)

(assert (=> d!12351 m!54815))

(declare-fun m!54817 () Bool)

(assert (=> d!12351 m!54817))

(declare-fun m!54819 () Bool)

(assert (=> d!12351 m!54819))

(declare-fun m!54821 () Bool)

(assert (=> d!12351 m!54821))

(declare-fun m!54823 () Bool)

(assert (=> b!61661 m!54823))

(declare-fun m!54825 () Bool)

(assert (=> b!61662 m!54825))

(assert (=> b!61078 d!12351))

(declare-fun d!12353 () Bool)

(assert (=> d!12353 (= (apply!67 (+!82 lt!25194 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) lt!25185) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!25194 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) lt!25185)))))

(declare-fun bs!2680 () Bool)

(assert (= bs!2680 d!12353))

(declare-fun m!54827 () Bool)

(assert (=> bs!2680 m!54827))

(assert (=> bs!2680 m!54827))

(declare-fun m!54829 () Bool)

(assert (=> bs!2680 m!54829))

(assert (=> b!61078 d!12353))

(declare-fun d!12355 () Bool)

(declare-fun e!40494 () Bool)

(assert (=> d!12355 e!40494))

(declare-fun res!33937 () Bool)

(assert (=> d!12355 (=> (not res!33937) (not e!40494))))

(declare-fun lt!25548 () ListLongMap!1361)

(assert (=> d!12355 (= res!33937 (contains!687 lt!25548 (_1!1035 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))))))

(declare-fun lt!25546 () List!1443)

(assert (=> d!12355 (= lt!25548 (ListLongMap!1362 lt!25546))))

(declare-fun lt!25547 () Unit!1621)

(declare-fun lt!25549 () Unit!1621)

(assert (=> d!12355 (= lt!25547 lt!25549)))

(assert (=> d!12355 (= (getValueByKey!123 lt!25546 (_1!1035 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))) (Some!128 (_2!1035 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))))))

(assert (=> d!12355 (= lt!25549 (lemmaContainsTupThenGetReturnValue!43 lt!25546 (_1!1035 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) (_2!1035 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))))))

(assert (=> d!12355 (= lt!25546 (insertStrictlySorted!46 (toList!696 lt!25182) (_1!1035 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) (_2!1035 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))))))

(assert (=> d!12355 (= (+!82 lt!25182 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) lt!25548)))

(declare-fun b!61663 () Bool)

(declare-fun res!33938 () Bool)

(assert (=> b!61663 (=> (not res!33938) (not e!40494))))

(assert (=> b!61663 (= res!33938 (= (getValueByKey!123 (toList!696 lt!25548) (_1!1035 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))) (Some!128 (_2!1035 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))))))))

(declare-fun b!61664 () Bool)

(assert (=> b!61664 (= e!40494 (contains!689 (toList!696 lt!25548) (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))))))

(assert (= (and d!12355 res!33937) b!61663))

(assert (= (and b!61663 res!33938) b!61664))

(declare-fun m!54831 () Bool)

(assert (=> d!12355 m!54831))

(declare-fun m!54833 () Bool)

(assert (=> d!12355 m!54833))

(declare-fun m!54835 () Bool)

(assert (=> d!12355 m!54835))

(declare-fun m!54837 () Bool)

(assert (=> d!12355 m!54837))

(declare-fun m!54839 () Bool)

(assert (=> b!61663 m!54839))

(declare-fun m!54841 () Bool)

(assert (=> b!61664 m!54841))

(assert (=> b!61078 d!12355))

(declare-fun d!12357 () Bool)

(assert (=> d!12357 (= (apply!67 (+!82 lt!25186 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) lt!25193) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!25186 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) lt!25193)))))

(declare-fun bs!2681 () Bool)

(assert (= bs!2681 d!12357))

(declare-fun m!54843 () Bool)

(assert (=> bs!2681 m!54843))

(assert (=> bs!2681 m!54843))

(declare-fun m!54845 () Bool)

(assert (=> bs!2681 m!54845))

(assert (=> b!61078 d!12357))

(declare-fun d!12359 () Bool)

(declare-fun e!40495 () Bool)

(assert (=> d!12359 e!40495))

(declare-fun res!33939 () Bool)

(assert (=> d!12359 (=> (not res!33939) (not e!40495))))

(declare-fun lt!25552 () ListLongMap!1361)

(assert (=> d!12359 (= res!33939 (contains!687 lt!25552 (_1!1035 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(declare-fun lt!25550 () List!1443)

(assert (=> d!12359 (= lt!25552 (ListLongMap!1362 lt!25550))))

(declare-fun lt!25551 () Unit!1621)

(declare-fun lt!25553 () Unit!1621)

(assert (=> d!12359 (= lt!25551 lt!25553)))

(assert (=> d!12359 (= (getValueByKey!123 lt!25550 (_1!1035 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) (Some!128 (_2!1035 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(assert (=> d!12359 (= lt!25553 (lemmaContainsTupThenGetReturnValue!43 lt!25550 (_1!1035 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) (_2!1035 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(assert (=> d!12359 (= lt!25550 (insertStrictlySorted!46 (toList!696 lt!25186) (_1!1035 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) (_2!1035 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(assert (=> d!12359 (= (+!82 lt!25186 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) lt!25552)))

(declare-fun b!61665 () Bool)

(declare-fun res!33940 () Bool)

(assert (=> b!61665 (=> (not res!33940) (not e!40495))))

(assert (=> b!61665 (= res!33940 (= (getValueByKey!123 (toList!696 lt!25552) (_1!1035 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) (Some!128 (_2!1035 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))))

(declare-fun b!61666 () Bool)

(assert (=> b!61666 (= e!40495 (contains!689 (toList!696 lt!25552) (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))

(assert (= (and d!12359 res!33939) b!61665))

(assert (= (and b!61665 res!33940) b!61666))

(declare-fun m!54847 () Bool)

(assert (=> d!12359 m!54847))

(declare-fun m!54849 () Bool)

(assert (=> d!12359 m!54849))

(declare-fun m!54851 () Bool)

(assert (=> d!12359 m!54851))

(declare-fun m!54853 () Bool)

(assert (=> d!12359 m!54853))

(declare-fun m!54855 () Bool)

(assert (=> b!61665 m!54855))

(declare-fun m!54857 () Bool)

(assert (=> b!61666 m!54857))

(assert (=> b!61078 d!12359))

(declare-fun d!12361 () Bool)

(declare-fun e!40497 () Bool)

(assert (=> d!12361 e!40497))

(declare-fun res!33941 () Bool)

(assert (=> d!12361 (=> res!33941 e!40497)))

(declare-fun lt!25557 () Bool)

(assert (=> d!12361 (= res!33941 (not lt!25557))))

(declare-fun lt!25555 () Bool)

(assert (=> d!12361 (= lt!25557 lt!25555)))

(declare-fun lt!25554 () Unit!1621)

(declare-fun e!40496 () Unit!1621)

(assert (=> d!12361 (= lt!25554 e!40496)))

(declare-fun c!8140 () Bool)

(assert (=> d!12361 (= c!8140 lt!25555)))

(assert (=> d!12361 (= lt!25555 (containsKey!127 (toList!696 (+!82 lt!25182 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))) lt!25176))))

(assert (=> d!12361 (= (contains!687 (+!82 lt!25182 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) lt!25176) lt!25557)))

(declare-fun b!61667 () Bool)

(declare-fun lt!25556 () Unit!1621)

(assert (=> b!61667 (= e!40496 lt!25556)))

(assert (=> b!61667 (= lt!25556 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 (+!82 lt!25182 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))) lt!25176))))

(assert (=> b!61667 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!25182 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))) lt!25176))))

(declare-fun b!61668 () Bool)

(declare-fun Unit!1669 () Unit!1621)

(assert (=> b!61668 (= e!40496 Unit!1669)))

(declare-fun b!61669 () Bool)

(assert (=> b!61669 (= e!40497 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!25182 (tuple2!2049 lt!25180 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))) lt!25176)))))

(assert (= (and d!12361 c!8140) b!61667))

(assert (= (and d!12361 (not c!8140)) b!61668))

(assert (= (and d!12361 (not res!33941)) b!61669))

(declare-fun m!54859 () Bool)

(assert (=> d!12361 m!54859))

(declare-fun m!54861 () Bool)

(assert (=> b!61667 m!54861))

(declare-fun m!54863 () Bool)

(assert (=> b!61667 m!54863))

(assert (=> b!61667 m!54863))

(declare-fun m!54865 () Bool)

(assert (=> b!61667 m!54865))

(assert (=> b!61669 m!54863))

(assert (=> b!61669 m!54863))

(assert (=> b!61669 m!54865))

(assert (=> b!61078 d!12361))

(declare-fun d!12363 () Bool)

(assert (=> d!12363 (= (apply!67 lt!25194 lt!25185) (get!1086 (getValueByKey!123 (toList!696 lt!25194) lt!25185)))))

(declare-fun bs!2682 () Bool)

(assert (= bs!2682 d!12363))

(declare-fun m!54867 () Bool)

(assert (=> bs!2682 m!54867))

(assert (=> bs!2682 m!54867))

(declare-fun m!54869 () Bool)

(assert (=> bs!2682 m!54869))

(assert (=> b!61078 d!12363))

(declare-fun d!12365 () Bool)

(assert (=> d!12365 (= (apply!67 (+!82 lt!25186 (tuple2!2049 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) lt!25193) (apply!67 lt!25186 lt!25193))))

(declare-fun lt!25558 () Unit!1621)

(assert (=> d!12365 (= lt!25558 (choose!330 lt!25186 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) lt!25193))))

(declare-fun e!40498 () Bool)

(assert (=> d!12365 e!40498))

(declare-fun res!33942 () Bool)

(assert (=> d!12365 (=> (not res!33942) (not e!40498))))

(assert (=> d!12365 (= res!33942 (contains!687 lt!25186 lt!25193))))

(assert (=> d!12365 (= (addApplyDifferent!43 lt!25186 lt!25190 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) lt!25193) lt!25558)))

(declare-fun b!61670 () Bool)

(assert (=> b!61670 (= e!40498 (not (= lt!25193 lt!25190)))))

(assert (= (and d!12365 res!33942) b!61670))

(assert (=> d!12365 m!53667))

(assert (=> d!12365 m!53659))

(declare-fun m!54871 () Bool)

(assert (=> d!12365 m!54871))

(assert (=> d!12365 m!53667))

(assert (=> d!12365 m!53671))

(declare-fun m!54873 () Bool)

(assert (=> d!12365 m!54873))

(assert (=> b!61078 d!12365))

(declare-fun d!12367 () Bool)

(assert (=> d!12367 (= (apply!67 lt!25186 lt!25193) (get!1086 (getValueByKey!123 (toList!696 lt!25186) lt!25193)))))

(declare-fun bs!2683 () Bool)

(assert (= bs!2683 d!12367))

(declare-fun m!54875 () Bool)

(assert (=> bs!2683 m!54875))

(assert (=> bs!2683 m!54875))

(declare-fun m!54877 () Bool)

(assert (=> bs!2683 m!54877))

(assert (=> b!61078 d!12367))

(declare-fun d!12369 () Bool)

(assert (=> d!12369 (= (apply!67 lt!25191 lt!25196) (get!1086 (getValueByKey!123 (toList!696 lt!25191) lt!25196)))))

(declare-fun bs!2684 () Bool)

(assert (= bs!2684 d!12369))

(declare-fun m!54879 () Bool)

(assert (=> bs!2684 m!54879))

(assert (=> bs!2684 m!54879))

(declare-fun m!54881 () Bool)

(assert (=> bs!2684 m!54881))

(assert (=> b!61078 d!12369))

(declare-fun d!12371 () Bool)

(assert (=> d!12371 (= (apply!67 (+!82 lt!25191 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)))) lt!25196) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!25191 (tuple2!2049 lt!25181 (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16))))) lt!25196)))))

(declare-fun bs!2685 () Bool)

(assert (= bs!2685 d!12371))

(declare-fun m!54883 () Bool)

(assert (=> bs!2685 m!54883))

(assert (=> bs!2685 m!54883))

(declare-fun m!54885 () Bool)

(assert (=> bs!2685 m!54885))

(assert (=> b!61078 d!12371))

(declare-fun b!61671 () Bool)

(declare-fun res!33943 () Bool)

(declare-fun e!40501 () Bool)

(assert (=> b!61671 (=> (not res!33943) (not e!40501))))

(declare-fun lt!25559 () ListLongMap!1361)

(assert (=> b!61671 (= res!33943 (not (contains!687 lt!25559 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!61672 () Bool)

(declare-fun e!40504 () Bool)

(assert (=> b!61672 (= e!40504 (isEmpty!300 lt!25559))))

(declare-fun b!61673 () Bool)

(declare-fun e!40500 () Bool)

(declare-fun e!40505 () Bool)

(assert (=> b!61673 (= e!40500 e!40505)))

(assert (=> b!61673 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun res!33944 () Bool)

(assert (=> b!61673 (= res!33944 (contains!687 lt!25559 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61673 (=> (not res!33944) (not e!40505))))

(declare-fun d!12373 () Bool)

(assert (=> d!12373 e!40501))

(declare-fun res!33945 () Bool)

(assert (=> d!12373 (=> (not res!33945) (not e!40501))))

(assert (=> d!12373 (= res!33945 (not (contains!687 lt!25559 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!40502 () ListLongMap!1361)

(assert (=> d!12373 (= lt!25559 e!40502)))

(declare-fun c!8144 () Bool)

(assert (=> d!12373 (= c!8144 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12373 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12373 (= (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) (mask!5961 newMap!16) (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25559)))

(declare-fun b!61674 () Bool)

(declare-fun lt!25561 () Unit!1621)

(declare-fun lt!25562 () Unit!1621)

(assert (=> b!61674 (= lt!25561 lt!25562)))

(declare-fun lt!25564 () ListLongMap!1361)

(declare-fun lt!25565 () V!2857)

(declare-fun lt!25563 () (_ BitVec 64))

(declare-fun lt!25560 () (_ BitVec 64))

(assert (=> b!61674 (not (contains!687 (+!82 lt!25564 (tuple2!2049 lt!25560 lt!25565)) lt!25563))))

(assert (=> b!61674 (= lt!25562 (addStillNotContains!17 lt!25564 lt!25560 lt!25565 lt!25563))))

(assert (=> b!61674 (= lt!25563 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!61674 (= lt!25565 (get!1083 (select (arr!1781 (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!61674 (= lt!25560 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!4766 () ListLongMap!1361)

(assert (=> b!61674 (= lt!25564 call!4766)))

(declare-fun e!40503 () ListLongMap!1361)

(assert (=> b!61674 (= e!40503 (+!82 call!4766 (tuple2!2049 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) (get!1083 (select (arr!1781 (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!4763 () Bool)

(assert (=> bm!4763 (= call!4766 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) (mask!5961 newMap!16) (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2066 newMap!16)))))

(declare-fun b!61675 () Bool)

(declare-fun e!40499 () Bool)

(assert (=> b!61675 (= e!40499 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61675 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!61676 () Bool)

(assert (=> b!61676 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> b!61676 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))))))))

(assert (=> b!61676 (= e!40505 (= (apply!67 lt!25559 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!61677 () Bool)

(assert (=> b!61677 (= e!40502 e!40503)))

(declare-fun c!8143 () Bool)

(assert (=> b!61677 (= c!8143 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61678 () Bool)

(assert (=> b!61678 (= e!40500 e!40504)))

(declare-fun c!8141 () Bool)

(assert (=> b!61678 (= c!8141 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61679 () Bool)

(assert (=> b!61679 (= e!40501 e!40500)))

(declare-fun c!8142 () Bool)

(assert (=> b!61679 (= c!8142 e!40499)))

(declare-fun res!33946 () Bool)

(assert (=> b!61679 (=> (not res!33946) (not e!40499))))

(assert (=> b!61679 (= res!33946 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61680 () Bool)

(assert (=> b!61680 (= e!40503 call!4766)))

(declare-fun b!61681 () Bool)

(assert (=> b!61681 (= e!40504 (= lt!25559 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (ite (or c!7887 c!7877) (_values!2049 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) (mask!5961 newMap!16) (ite c!7887 (ite c!7882 lt!24912 lt!24897) (extraKeys!1949 newMap!16)) (ite (and c!7887 c!7882) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!1980 newMap!16)) (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2066 newMap!16))))))

(declare-fun b!61682 () Bool)

(assert (=> b!61682 (= e!40502 (ListLongMap!1362 Nil!1440))))

(assert (= (and d!12373 c!8144) b!61682))

(assert (= (and d!12373 (not c!8144)) b!61677))

(assert (= (and b!61677 c!8143) b!61674))

(assert (= (and b!61677 (not c!8143)) b!61680))

(assert (= (or b!61674 b!61680) bm!4763))

(assert (= (and d!12373 res!33945) b!61671))

(assert (= (and b!61671 res!33943) b!61679))

(assert (= (and b!61679 res!33946) b!61675))

(assert (= (and b!61679 c!8142) b!61673))

(assert (= (and b!61679 (not c!8142)) b!61678))

(assert (= (and b!61673 res!33944) b!61676))

(assert (= (and b!61678 c!8141) b!61681))

(assert (= (and b!61678 (not c!8141)) b!61672))

(declare-fun b_lambda!2727 () Bool)

(assert (=> (not b_lambda!2727) (not b!61674)))

(assert (=> b!61674 t!4820))

(declare-fun b_and!3761 () Bool)

(assert (= b_and!3757 (and (=> t!4820 result!2427) b_and!3761)))

(assert (=> b!61674 t!4822))

(declare-fun b_and!3763 () Bool)

(assert (= b_and!3759 (and (=> t!4822 result!2429) b_and!3763)))

(declare-fun b_lambda!2729 () Bool)

(assert (=> (not b_lambda!2729) (not b!61676)))

(assert (=> b!61676 t!4820))

(declare-fun b_and!3765 () Bool)

(assert (= b_and!3761 (and (=> t!4820 result!2427) b_and!3765)))

(assert (=> b!61676 t!4822))

(declare-fun b_and!3767 () Bool)

(assert (= b_and!3763 (and (=> t!4822 result!2429) b_and!3767)))

(declare-fun m!54887 () Bool)

(assert (=> b!61671 m!54887))

(declare-fun m!54889 () Bool)

(assert (=> b!61672 m!54889))

(assert (=> b!61674 m!53639))

(assert (=> b!61674 m!53391))

(assert (=> b!61674 m!53641))

(declare-fun m!54891 () Bool)

(assert (=> b!61674 m!54891))

(declare-fun m!54893 () Bool)

(assert (=> b!61674 m!54893))

(assert (=> b!61674 m!54891))

(declare-fun m!54895 () Bool)

(assert (=> b!61674 m!54895))

(assert (=> b!61674 m!53263))

(assert (=> b!61674 m!53639))

(assert (=> b!61674 m!53391))

(declare-fun m!54897 () Bool)

(assert (=> b!61674 m!54897))

(declare-fun m!54899 () Bool)

(assert (=> b!61681 m!54899))

(assert (=> b!61673 m!53263))

(assert (=> b!61673 m!53263))

(declare-fun m!54901 () Bool)

(assert (=> b!61673 m!54901))

(assert (=> b!61676 m!53263))

(declare-fun m!54903 () Bool)

(assert (=> b!61676 m!54903))

(assert (=> b!61676 m!53639))

(assert (=> b!61676 m!53391))

(assert (=> b!61676 m!53641))

(assert (=> b!61676 m!53263))

(assert (=> b!61676 m!53639))

(assert (=> b!61676 m!53391))

(assert (=> bm!4763 m!54899))

(declare-fun m!54905 () Bool)

(assert (=> d!12373 m!54905))

(assert (=> d!12373 m!53365))

(assert (=> b!61675 m!53263))

(assert (=> b!61675 m!53263))

(assert (=> b!61675 m!53265))

(assert (=> b!61677 m!53263))

(assert (=> b!61677 m!53263))

(assert (=> b!61677 m!53265))

(assert (=> b!61078 d!12373))

(declare-fun d!12375 () Bool)

(declare-fun e!40506 () Bool)

(assert (=> d!12375 e!40506))

(declare-fun res!33947 () Bool)

(assert (=> d!12375 (=> (not res!33947) (not e!40506))))

(declare-fun lt!25568 () ListLongMap!1361)

(assert (=> d!12375 (= res!33947 (contains!687 lt!25568 (_1!1035 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(declare-fun lt!25566 () List!1443)

(assert (=> d!12375 (= lt!25568 (ListLongMap!1362 lt!25566))))

(declare-fun lt!25567 () Unit!1621)

(declare-fun lt!25569 () Unit!1621)

(assert (=> d!12375 (= lt!25567 lt!25569)))

(assert (=> d!12375 (= (getValueByKey!123 lt!25566 (_1!1035 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) (Some!128 (_2!1035 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(assert (=> d!12375 (= lt!25569 (lemmaContainsTupThenGetReturnValue!43 lt!25566 (_1!1035 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) (_2!1035 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(assert (=> d!12375 (= lt!25566 (insertStrictlySorted!46 (toList!696 lt!25194) (_1!1035 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) (_2!1035 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))))))

(assert (=> d!12375 (= (+!82 lt!25194 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))) lt!25568)))

(declare-fun b!61683 () Bool)

(declare-fun res!33948 () Bool)

(assert (=> b!61683 (=> (not res!33948) (not e!40506))))

(assert (=> b!61683 (= res!33948 (= (getValueByKey!123 (toList!696 lt!25568) (_1!1035 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16))))) (Some!128 (_2!1035 (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))))

(declare-fun b!61684 () Bool)

(assert (=> b!61684 (= e!40506 (contains!689 (toList!696 lt!25568) (tuple2!2049 lt!25187 (ite c!7887 (ite c!7882 (minValue!1980 newMap!16) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!1980 newMap!16)))))))

(assert (= (and d!12375 res!33947) b!61683))

(assert (= (and b!61683 res!33948) b!61684))

(declare-fun m!54907 () Bool)

(assert (=> d!12375 m!54907))

(declare-fun m!54909 () Bool)

(assert (=> d!12375 m!54909))

(declare-fun m!54911 () Bool)

(assert (=> d!12375 m!54911))

(declare-fun m!54913 () Bool)

(assert (=> d!12375 m!54913))

(declare-fun m!54915 () Bool)

(assert (=> b!61683 m!54915))

(declare-fun m!54917 () Bool)

(assert (=> b!61684 m!54917))

(assert (=> b!61078 d!12375))

(declare-fun b!61686 () Bool)

(declare-fun res!33950 () Bool)

(declare-fun e!40507 () Bool)

(assert (=> b!61686 (=> (not res!33950) (not e!40507))))

(assert (=> b!61686 (= res!33950 (bvsge (size!2018 (v!2397 (underlying!227 thiss!992))) (_size!363 (v!2397 (underlying!227 thiss!992)))))))

(declare-fun b!61685 () Bool)

(declare-fun res!33952 () Bool)

(assert (=> b!61685 (=> (not res!33952) (not e!40507))))

(assert (=> b!61685 (= res!33952 (and (= (size!2013 (_values!2049 (v!2397 (underlying!227 thiss!992)))) (bvadd (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000001)) (= (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (size!2013 (_values!2049 (v!2397 (underlying!227 thiss!992))))) (bvsge (_size!363 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!363 (v!2397 (underlying!227 thiss!992))) (bvadd (mask!5961 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!61687 () Bool)

(declare-fun res!33951 () Bool)

(assert (=> b!61687 (=> (not res!33951) (not e!40507))))

(assert (=> b!61687 (= res!33951 (= (size!2018 (v!2397 (underlying!227 thiss!992))) (bvadd (_size!363 (v!2397 (underlying!227 thiss!992))) (bvsdiv (bvadd (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!12377 () Bool)

(declare-fun res!33949 () Bool)

(assert (=> d!12377 (=> (not res!33949) (not e!40507))))

(assert (=> d!12377 (= res!33949 (validMask!0 (mask!5961 (v!2397 (underlying!227 thiss!992)))))))

(assert (=> d!12377 (= (simpleValid!43 (v!2397 (underlying!227 thiss!992))) e!40507)))

(declare-fun b!61688 () Bool)

(assert (=> b!61688 (= e!40507 (and (bvsge (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!1949 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!363 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!12377 res!33949) b!61685))

(assert (= (and b!61685 res!33952) b!61686))

(assert (= (and b!61686 res!33950) b!61687))

(assert (= (and b!61687 res!33951) b!61688))

(declare-fun m!54919 () Bool)

(assert (=> b!61686 m!54919))

(assert (=> b!61687 m!54919))

(assert (=> d!12377 m!53015))

(assert (=> d!11985 d!12377))

(declare-fun d!12379 () Bool)

(declare-fun res!33953 () Bool)

(declare-fun e!40508 () Bool)

(assert (=> d!12379 (=> res!33953 e!40508)))

(assert (=> d!12379 (= res!33953 (= (select (arr!1780 (_keys!3693 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!12379 (= (arrayContainsKey!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!40508)))

(declare-fun b!61689 () Bool)

(declare-fun e!40509 () Bool)

(assert (=> b!61689 (= e!40508 e!40509)))

(declare-fun res!33954 () Bool)

(assert (=> b!61689 (=> (not res!33954) (not e!40509))))

(assert (=> b!61689 (= res!33954 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61690 () Bool)

(assert (=> b!61690 (= e!40509 (arrayContainsKey!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!12379 (not res!33953)) b!61689))

(assert (= (and b!61689 res!33954) b!61690))

(assert (=> d!12379 m!53847))

(assert (=> b!61690 m!52977))

(declare-fun m!54921 () Bool)

(assert (=> b!61690 m!54921))

(assert (=> b!61106 d!12379))

(assert (=> b!60908 d!12037))

(declare-fun d!12381 () Bool)

(declare-fun e!40511 () Bool)

(assert (=> d!12381 e!40511))

(declare-fun res!33955 () Bool)

(assert (=> d!12381 (=> res!33955 e!40511)))

(declare-fun lt!25573 () Bool)

(assert (=> d!12381 (= res!33955 (not lt!25573))))

(declare-fun lt!25571 () Bool)

(assert (=> d!12381 (= lt!25573 lt!25571)))

(declare-fun lt!25570 () Unit!1621)

(declare-fun e!40510 () Unit!1621)

(assert (=> d!12381 (= lt!25570 e!40510)))

(declare-fun c!8145 () Bool)

(assert (=> d!12381 (= c!8145 lt!25571)))

(assert (=> d!12381 (= lt!25571 (containsKey!127 (toList!696 lt!25192) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!12381 (= (contains!687 lt!25192 #b0000000000000000000000000000000000000000000000000000000000000000) lt!25573)))

(declare-fun b!61691 () Bool)

(declare-fun lt!25572 () Unit!1621)

(assert (=> b!61691 (= e!40510 lt!25572)))

(assert (=> b!61691 (= lt!25572 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25192) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61691 (isDefined!77 (getValueByKey!123 (toList!696 lt!25192) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61692 () Bool)

(declare-fun Unit!1670 () Unit!1621)

(assert (=> b!61692 (= e!40510 Unit!1670)))

(declare-fun b!61693 () Bool)

(assert (=> b!61693 (= e!40511 (isDefined!77 (getValueByKey!123 (toList!696 lt!25192) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12381 c!8145) b!61691))

(assert (= (and d!12381 (not c!8145)) b!61692))

(assert (= (and d!12381 (not res!33955)) b!61693))

(declare-fun m!54923 () Bool)

(assert (=> d!12381 m!54923))

(declare-fun m!54925 () Bool)

(assert (=> b!61691 m!54925))

(assert (=> b!61691 m!54473))

(assert (=> b!61691 m!54473))

(declare-fun m!54927 () Bool)

(assert (=> b!61691 m!54927))

(assert (=> b!61693 m!54473))

(assert (=> b!61693 m!54473))

(assert (=> b!61693 m!54927))

(assert (=> bm!4698 d!12381))

(assert (=> d!11933 d!11897))

(declare-fun d!12383 () Bool)

(declare-fun e!40513 () Bool)

(assert (=> d!12383 e!40513))

(declare-fun res!33956 () Bool)

(assert (=> d!12383 (=> res!33956 e!40513)))

(declare-fun lt!25577 () Bool)

(assert (=> d!12383 (= res!33956 (not lt!25577))))

(declare-fun lt!25575 () Bool)

(assert (=> d!12383 (= lt!25577 lt!25575)))

(declare-fun lt!25574 () Unit!1621)

(declare-fun e!40512 () Unit!1621)

(assert (=> d!12383 (= lt!25574 e!40512)))

(declare-fun c!8146 () Bool)

(assert (=> d!12383 (= c!8146 lt!25575)))

(assert (=> d!12383 (= lt!25575 (containsKey!127 (toList!696 lt!25107) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!12383 (= (contains!687 lt!25107 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!25577)))

(declare-fun b!61694 () Bool)

(declare-fun lt!25576 () Unit!1621)

(assert (=> b!61694 (= e!40512 lt!25576)))

(assert (=> b!61694 (= lt!25576 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25107) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!61694 (isDefined!77 (getValueByKey!123 (toList!696 lt!25107) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!61695 () Bool)

(declare-fun Unit!1671 () Unit!1621)

(assert (=> b!61695 (= e!40512 Unit!1671)))

(declare-fun b!61696 () Bool)

(assert (=> b!61696 (= e!40513 (isDefined!77 (getValueByKey!123 (toList!696 lt!25107) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!12383 c!8146) b!61694))

(assert (= (and d!12383 (not c!8146)) b!61695))

(assert (= (and d!12383 (not res!33956)) b!61696))

(assert (=> d!12383 m!53111))

(declare-fun m!54929 () Bool)

(assert (=> d!12383 m!54929))

(assert (=> b!61694 m!53111))

(declare-fun m!54931 () Bool)

(assert (=> b!61694 m!54931))

(assert (=> b!61694 m!53111))

(assert (=> b!61694 m!54155))

(assert (=> b!61694 m!54155))

(declare-fun m!54933 () Bool)

(assert (=> b!61694 m!54933))

(assert (=> b!61696 m!53111))

(assert (=> b!61696 m!54155))

(assert (=> b!61696 m!54155))

(assert (=> b!61696 m!54933))

(assert (=> b!60977 d!12383))

(declare-fun d!12385 () Bool)

(declare-fun res!33957 () Bool)

(declare-fun e!40514 () Bool)

(assert (=> d!12385 (=> res!33957 e!40514)))

(assert (=> d!12385 (= res!33957 (and ((_ is Cons!1439) (toList!696 lt!24825)) (= (_1!1035 (h!2021 (toList!696 lt!24825))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!12385 (= (containsKey!127 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000) e!40514)))

(declare-fun b!61697 () Bool)

(declare-fun e!40515 () Bool)

(assert (=> b!61697 (= e!40514 e!40515)))

(declare-fun res!33958 () Bool)

(assert (=> b!61697 (=> (not res!33958) (not e!40515))))

(assert (=> b!61697 (= res!33958 (and (or (not ((_ is Cons!1439) (toList!696 lt!24825))) (bvsle (_1!1035 (h!2021 (toList!696 lt!24825))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1439) (toList!696 lt!24825)) (bvslt (_1!1035 (h!2021 (toList!696 lt!24825))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!61698 () Bool)

(assert (=> b!61698 (= e!40515 (containsKey!127 (t!4808 (toList!696 lt!24825)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!12385 (not res!33957)) b!61697))

(assert (= (and b!61697 res!33958) b!61698))

(declare-fun m!54935 () Bool)

(assert (=> b!61698 m!54935))

(assert (=> d!12025 d!12385))

(declare-fun d!12387 () Bool)

(assert (=> d!12387 (isDefined!77 (getValueByKey!123 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun lt!25578 () Unit!1621)

(assert (=> d!12387 (= lt!25578 (choose!327 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun e!40516 () Bool)

(assert (=> d!12387 e!40516))

(declare-fun res!33959 () Bool)

(assert (=> d!12387 (=> (not res!33959) (not e!40516))))

(assert (=> d!12387 (= res!33959 (isStrictlySorted!280 (toList!696 call!4636)))))

(assert (=> d!12387 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) lt!25578)))

(declare-fun b!61699 () Bool)

(assert (=> b!61699 (= e!40516 (containsKey!127 (toList!696 call!4636) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (= (and d!12387 res!33959) b!61699))

(assert (=> d!12387 m!52977))

(assert (=> d!12387 m!53479))

(assert (=> d!12387 m!53479))

(assert (=> d!12387 m!53481))

(assert (=> d!12387 m!52977))

(declare-fun m!54937 () Bool)

(assert (=> d!12387 m!54937))

(declare-fun m!54939 () Bool)

(assert (=> d!12387 m!54939))

(assert (=> b!61699 m!52977))

(assert (=> b!61699 m!53475))

(assert (=> b!60946 d!12387))

(assert (=> b!60946 d!12145))

(assert (=> b!60946 d!12147))

(declare-fun d!12389 () Bool)

(declare-fun e!40518 () Bool)

(assert (=> d!12389 e!40518))

(declare-fun res!33960 () Bool)

(assert (=> d!12389 (=> res!33960 e!40518)))

(declare-fun lt!25582 () Bool)

(assert (=> d!12389 (= res!33960 (not lt!25582))))

(declare-fun lt!25580 () Bool)

(assert (=> d!12389 (= lt!25582 lt!25580)))

(declare-fun lt!25579 () Unit!1621)

(declare-fun e!40517 () Unit!1621)

(assert (=> d!12389 (= lt!25579 e!40517)))

(declare-fun c!8147 () Bool)

(assert (=> d!12389 (= c!8147 lt!25580)))

(assert (=> d!12389 (= lt!25580 (containsKey!127 (toList!696 lt!25074) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!12389 (= (contains!687 lt!25074 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) lt!25582)))

(declare-fun b!61700 () Bool)

(declare-fun lt!25581 () Unit!1621)

(assert (=> b!61700 (= e!40517 lt!25581)))

(assert (=> b!61700 (= lt!25581 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25074) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61700 (isDefined!77 (getValueByKey!123 (toList!696 lt!25074) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61701 () Bool)

(declare-fun Unit!1672 () Unit!1621)

(assert (=> b!61701 (= e!40517 Unit!1672)))

(declare-fun b!61702 () Bool)

(assert (=> b!61702 (= e!40518 (isDefined!77 (getValueByKey!123 (toList!696 lt!25074) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!12389 c!8147) b!61700))

(assert (= (and d!12389 (not c!8147)) b!61701))

(assert (= (and d!12389 (not res!33960)) b!61702))

(assert (=> d!12389 m!53263))

(declare-fun m!54941 () Bool)

(assert (=> d!12389 m!54941))

(assert (=> b!61700 m!53263))

(declare-fun m!54943 () Bool)

(assert (=> b!61700 m!54943))

(assert (=> b!61700 m!53263))

(assert (=> b!61700 m!54727))

(assert (=> b!61700 m!54727))

(declare-fun m!54945 () Bool)

(assert (=> b!61700 m!54945))

(assert (=> b!61702 m!53263))

(assert (=> b!61702 m!54727))

(assert (=> b!61702 m!54727))

(assert (=> b!61702 m!54945))

(assert (=> b!60900 d!12389))

(declare-fun d!12391 () Bool)

(declare-fun e!40519 () Bool)

(assert (=> d!12391 e!40519))

(declare-fun res!33961 () Bool)

(assert (=> d!12391 (=> (not res!33961) (not e!40519))))

(declare-fun lt!25585 () ListLongMap!1361)

(assert (=> d!12391 (= res!33961 (contains!687 lt!25585 (_1!1035 (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))))

(declare-fun lt!25583 () List!1443)

(assert (=> d!12391 (= lt!25585 (ListLongMap!1362 lt!25583))))

(declare-fun lt!25584 () Unit!1621)

(declare-fun lt!25586 () Unit!1621)

(assert (=> d!12391 (= lt!25584 lt!25586)))

(assert (=> d!12391 (= (getValueByKey!123 lt!25583 (_1!1035 (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))) (Some!128 (_2!1035 (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))))

(assert (=> d!12391 (= lt!25586 (lemmaContainsTupThenGetReturnValue!43 lt!25583 (_1!1035 (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))) (_2!1035 (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))))

(assert (=> d!12391 (= lt!25583 (insertStrictlySorted!46 (toList!696 (ite c!7926 call!4675 (ite c!7928 call!4676 call!4671))) (_1!1035 (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))) (_2!1035 (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))))

(assert (=> d!12391 (= (+!82 (ite c!7926 call!4675 (ite c!7928 call!4676 call!4671)) (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))) lt!25585)))

(declare-fun b!61703 () Bool)

(declare-fun res!33962 () Bool)

(assert (=> b!61703 (=> (not res!33962) (not e!40519))))

(assert (=> b!61703 (= res!33962 (= (getValueByKey!123 (toList!696 lt!25585) (_1!1035 (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))) (Some!128 (_2!1035 (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))))

(declare-fun b!61704 () Bool)

(assert (=> b!61704 (= e!40519 (contains!689 (toList!696 lt!25585) (ite (or c!7926 c!7928) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(assert (= (and d!12391 res!33961) b!61703))

(assert (= (and b!61703 res!33962) b!61704))

(declare-fun m!54947 () Bool)

(assert (=> d!12391 m!54947))

(declare-fun m!54949 () Bool)

(assert (=> d!12391 m!54949))

(declare-fun m!54951 () Bool)

(assert (=> d!12391 m!54951))

(declare-fun m!54953 () Bool)

(assert (=> d!12391 m!54953))

(declare-fun m!54955 () Bool)

(assert (=> b!61703 m!54955))

(declare-fun m!54957 () Bool)

(assert (=> b!61704 m!54957))

(assert (=> bm!4671 d!12391))

(assert (=> b!60873 d!12343))

(assert (=> b!60868 d!12037))

(declare-fun d!12393 () Bool)

(declare-fun res!33963 () Bool)

(declare-fun e!40520 () Bool)

(assert (=> d!12393 (=> res!33963 e!40520)))

(assert (=> d!12393 (= res!33963 (and ((_ is Cons!1439) (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))) (= (_1!1035 (h!2021 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24809)))))

(assert (=> d!12393 (= (containsKey!127 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809) e!40520)))

(declare-fun b!61705 () Bool)

(declare-fun e!40521 () Bool)

(assert (=> b!61705 (= e!40520 e!40521)))

(declare-fun res!33964 () Bool)

(assert (=> b!61705 (=> (not res!33964) (not e!40521))))

(assert (=> b!61705 (= res!33964 (and (or (not ((_ is Cons!1439) (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))) (bvsle (_1!1035 (h!2021 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24809)) ((_ is Cons!1439) (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))) (bvslt (_1!1035 (h!2021 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24809)))))

(declare-fun b!61706 () Bool)

(assert (=> b!61706 (= e!40521 (containsKey!127 (t!4808 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))) lt!24809))))

(assert (= (and d!12393 (not res!33963)) b!61705))

(assert (= (and b!61705 res!33964) b!61706))

(declare-fun m!54959 () Bool)

(assert (=> b!61706 m!54959))

(assert (=> d!12007 d!12393))

(declare-fun d!12395 () Bool)

(assert (=> d!12395 (= (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24829)) (v!2402 (getValueByKey!123 (toList!696 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24829)))))

(assert (=> d!12009 d!12395))

(declare-fun d!12397 () Bool)

(declare-fun c!8148 () Bool)

(assert (=> d!12397 (= c!8148 (and ((_ is Cons!1439) (toList!696 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))) (= (_1!1035 (h!2021 (toList!696 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24829)))))

(declare-fun e!40522 () Option!129)

(assert (=> d!12397 (= (getValueByKey!123 (toList!696 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24829) e!40522)))

(declare-fun b!61710 () Bool)

(declare-fun e!40523 () Option!129)

(assert (=> b!61710 (= e!40523 None!127)))

(declare-fun b!61707 () Bool)

(assert (=> b!61707 (= e!40522 (Some!128 (_2!1035 (h!2021 (toList!696 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))))

(declare-fun b!61709 () Bool)

(assert (=> b!61709 (= e!40523 (getValueByKey!123 (t!4808 (toList!696 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))) lt!24829))))

(declare-fun b!61708 () Bool)

(assert (=> b!61708 (= e!40522 e!40523)))

(declare-fun c!8149 () Bool)

(assert (=> b!61708 (= c!8149 (and ((_ is Cons!1439) (toList!696 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))) (not (= (_1!1035 (h!2021 (toList!696 (+!82 lt!24824 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24829))))))

(assert (= (and d!12397 c!8148) b!61707))

(assert (= (and d!12397 (not c!8148)) b!61708))

(assert (= (and b!61708 c!8149) b!61709))

(assert (= (and b!61708 (not c!8149)) b!61710))

(declare-fun m!54961 () Bool)

(assert (=> b!61709 m!54961))

(assert (=> d!12009 d!12397))

(declare-fun d!12399 () Bool)

(declare-fun e!40525 () Bool)

(assert (=> d!12399 e!40525))

(declare-fun res!33965 () Bool)

(assert (=> d!12399 (=> res!33965 e!40525)))

(declare-fun lt!25590 () Bool)

(assert (=> d!12399 (= res!33965 (not lt!25590))))

(declare-fun lt!25588 () Bool)

(assert (=> d!12399 (= lt!25590 lt!25588)))

(declare-fun lt!25587 () Unit!1621)

(declare-fun e!40524 () Unit!1621)

(assert (=> d!12399 (= lt!25587 e!40524)))

(declare-fun c!8150 () Bool)

(assert (=> d!12399 (= c!8150 lt!25588)))

(assert (=> d!12399 (= lt!25588 (containsKey!127 (toList!696 lt!25074) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!12399 (= (contains!687 lt!25074 #b0000000000000000000000000000000000000000000000000000000000000000) lt!25590)))

(declare-fun b!61711 () Bool)

(declare-fun lt!25589 () Unit!1621)

(assert (=> b!61711 (= e!40524 lt!25589)))

(assert (=> b!61711 (= lt!25589 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25074) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61711 (isDefined!77 (getValueByKey!123 (toList!696 lt!25074) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61712 () Bool)

(declare-fun Unit!1673 () Unit!1621)

(assert (=> b!61712 (= e!40524 Unit!1673)))

(declare-fun b!61713 () Bool)

(assert (=> b!61713 (= e!40525 (isDefined!77 (getValueByKey!123 (toList!696 lt!25074) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12399 c!8150) b!61711))

(assert (= (and d!12399 (not c!8150)) b!61712))

(assert (= (and d!12399 (not res!33965)) b!61713))

(declare-fun m!54963 () Bool)

(assert (=> d!12399 m!54963))

(declare-fun m!54965 () Bool)

(assert (=> b!61711 m!54965))

(assert (=> b!61711 m!54711))

(assert (=> b!61711 m!54711))

(declare-fun m!54967 () Bool)

(assert (=> b!61711 m!54967))

(assert (=> b!61713 m!54711))

(assert (=> b!61713 m!54711))

(assert (=> b!61713 m!54967))

(assert (=> bm!4672 d!12399))

(declare-fun d!12401 () Bool)

(assert (=> d!12401 (= (apply!67 lt!25074 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1086 (getValueByKey!123 (toList!696 lt!25074) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2686 () Bool)

(assert (= bs!2686 d!12401))

(assert (=> bs!2686 m!54607))

(assert (=> bs!2686 m!54607))

(declare-fun m!54969 () Bool)

(assert (=> bs!2686 m!54969))

(assert (=> b!60897 d!12401))

(declare-fun b!61714 () Bool)

(declare-fun e!40528 () Bool)

(assert (=> b!61714 (= e!40528 (contains!688 Nil!1441 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!12403 () Bool)

(declare-fun res!33966 () Bool)

(declare-fun e!40529 () Bool)

(assert (=> d!12403 (=> res!33966 e!40529)))

(assert (=> d!12403 (= res!33966 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 (v!2397 (underlying!227 thiss!992))))))))

(assert (=> d!12403 (= (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) #b00000000000000000000000000000000 Nil!1441) e!40529)))

(declare-fun b!61715 () Bool)

(declare-fun e!40526 () Bool)

(declare-fun call!4767 () Bool)

(assert (=> b!61715 (= e!40526 call!4767)))

(declare-fun bm!4764 () Bool)

(declare-fun c!8151 () Bool)

(assert (=> bm!4764 (= call!4767 (arrayNoDuplicates!0 (_keys!3693 (v!2397 (underlying!227 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!8151 (Cons!1440 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000) Nil!1441) Nil!1441)))))

(declare-fun b!61716 () Bool)

(declare-fun e!40527 () Bool)

(assert (=> b!61716 (= e!40527 e!40526)))

(assert (=> b!61716 (= c!8151 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!61717 () Bool)

(assert (=> b!61717 (= e!40526 call!4767)))

(declare-fun b!61718 () Bool)

(assert (=> b!61718 (= e!40529 e!40527)))

(declare-fun res!33967 () Bool)

(assert (=> b!61718 (=> (not res!33967) (not e!40527))))

(assert (=> b!61718 (= res!33967 (not e!40528))))

(declare-fun res!33968 () Bool)

(assert (=> b!61718 (=> (not res!33968) (not e!40528))))

(assert (=> b!61718 (= res!33968 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!12403 (not res!33966)) b!61718))

(assert (= (and b!61718 res!33968) b!61714))

(assert (= (and b!61718 res!33967) b!61716))

(assert (= (and b!61716 c!8151) b!61717))

(assert (= (and b!61716 (not c!8151)) b!61715))

(assert (= (or b!61717 b!61715) bm!4764))

(assert (=> b!61714 m!54041))

(assert (=> b!61714 m!54041))

(declare-fun m!54971 () Bool)

(assert (=> b!61714 m!54971))

(assert (=> bm!4764 m!54041))

(declare-fun m!54973 () Bool)

(assert (=> bm!4764 m!54973))

(assert (=> b!61716 m!54041))

(assert (=> b!61716 m!54041))

(assert (=> b!61716 m!54051))

(assert (=> b!61718 m!54041))

(assert (=> b!61718 m!54041))

(assert (=> b!61718 m!54051))

(assert (=> b!61101 d!12403))

(declare-fun lt!25591 () Bool)

(declare-fun d!12405 () Bool)

(assert (=> d!12405 (= lt!25591 (select (content!66 (toList!696 lt!25081)) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!40531 () Bool)

(assert (=> d!12405 (= lt!25591 e!40531)))

(declare-fun res!33969 () Bool)

(assert (=> d!12405 (=> (not res!33969) (not e!40531))))

(assert (=> d!12405 (= res!33969 ((_ is Cons!1439) (toList!696 lt!25081)))))

(assert (=> d!12405 (= (contains!689 (toList!696 lt!25081) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25591)))

(declare-fun b!61719 () Bool)

(declare-fun e!40530 () Bool)

(assert (=> b!61719 (= e!40531 e!40530)))

(declare-fun res!33970 () Bool)

(assert (=> b!61719 (=> res!33970 e!40530)))

(assert (=> b!61719 (= res!33970 (= (h!2021 (toList!696 lt!25081)) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!61720 () Bool)

(assert (=> b!61720 (= e!40530 (contains!689 (t!4808 (toList!696 lt!25081)) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!12405 res!33969) b!61719))

(assert (= (and b!61719 (not res!33970)) b!61720))

(declare-fun m!54975 () Bool)

(assert (=> d!12405 m!54975))

(declare-fun m!54977 () Bool)

(assert (=> d!12405 m!54977))

(declare-fun m!54979 () Bool)

(assert (=> b!61720 m!54979))

(assert (=> b!60916 d!12405))

(assert (=> b!61048 d!12037))

(declare-fun b!61721 () Bool)

(declare-fun e!40533 () (_ BitVec 32))

(assert (=> b!61721 (= e!40533 #b00000000000000000000000000000000)))

(declare-fun b!61723 () Bool)

(declare-fun e!40532 () (_ BitVec 32))

(declare-fun call!4768 () (_ BitVec 32))

(assert (=> b!61723 (= e!40532 call!4768)))

(declare-fun bm!4765 () Bool)

(assert (=> bm!4765 (= call!4768 (arrayCountValidKeys!0 (_keys!3693 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61724 () Bool)

(assert (=> b!61724 (= e!40533 e!40532)))

(declare-fun c!8152 () Bool)

(assert (=> b!61724 (= c!8152 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!12407 () Bool)

(declare-fun lt!25592 () (_ BitVec 32))

(assert (=> d!12407 (and (bvsge lt!25592 #b00000000000000000000000000000000) (bvsle lt!25592 (bvsub (size!2012 (_keys!3693 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!12407 (= lt!25592 e!40533)))

(declare-fun c!8153 () Bool)

(assert (=> d!12407 (= c!8153 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12407 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2012 (_keys!3693 newMap!16)) (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12407 (= (arrayCountValidKeys!0 (_keys!3693 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))) lt!25592)))

(declare-fun b!61722 () Bool)

(assert (=> b!61722 (= e!40532 (bvadd #b00000000000000000000000000000001 call!4768))))

(assert (= (and d!12407 c!8153) b!61721))

(assert (= (and d!12407 (not c!8153)) b!61724))

(assert (= (and b!61724 c!8152) b!61722))

(assert (= (and b!61724 (not c!8152)) b!61723))

(assert (= (or b!61722 b!61723) bm!4765))

(declare-fun m!54981 () Bool)

(assert (=> bm!4765 m!54981))

(assert (=> b!61724 m!53847))

(assert (=> b!61724 m!53847))

(assert (=> b!61724 m!53853))

(assert (=> bm!4652 d!12407))

(declare-fun d!12409 () Bool)

(assert (=> d!12409 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!392 (_keys!3693 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(assert (=> d!12409 true))

(declare-fun _$5!65 () Unit!1621)

(assert (=> d!12409 (= (choose!324 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (index!3049 lt!24917) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)) _$5!65)))

(declare-fun bs!2687 () Bool)

(assert (= bs!2687 d!12409))

(assert (=> bs!2687 m!53109))

(assert (=> bs!2687 m!53109))

(assert (=> bs!2687 m!53299))

(assert (=> bs!2687 m!53193))

(assert (=> bs!2687 m!53373))

(assert (=> d!11919 d!12409))

(assert (=> d!11919 d!12045))

(assert (=> b!61086 d!12037))

(assert (=> b!60878 d!12209))

(assert (=> b!60878 d!12211))

(declare-fun d!12411 () Bool)

(declare-fun c!8154 () Bool)

(assert (=> d!12411 (= c!8154 (and ((_ is Cons!1439) (t!4808 (toList!696 lt!24715))) (= (_1!1035 (h!2021 (t!4808 (toList!696 lt!24715)))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(declare-fun e!40534 () Option!129)

(assert (=> d!12411 (= (getValueByKey!123 (t!4808 (toList!696 lt!24715)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) e!40534)))

(declare-fun b!61728 () Bool)

(declare-fun e!40535 () Option!129)

(assert (=> b!61728 (= e!40535 None!127)))

(declare-fun b!61725 () Bool)

(assert (=> b!61725 (= e!40534 (Some!128 (_2!1035 (h!2021 (t!4808 (toList!696 lt!24715))))))))

(declare-fun b!61727 () Bool)

(assert (=> b!61727 (= e!40535 (getValueByKey!123 (t!4808 (t!4808 (toList!696 lt!24715))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!61726 () Bool)

(assert (=> b!61726 (= e!40534 e!40535)))

(declare-fun c!8155 () Bool)

(assert (=> b!61726 (= c!8155 (and ((_ is Cons!1439) (t!4808 (toList!696 lt!24715))) (not (= (_1!1035 (h!2021 (t!4808 (toList!696 lt!24715)))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))))

(assert (= (and d!12411 c!8154) b!61725))

(assert (= (and d!12411 (not c!8154)) b!61726))

(assert (= (and b!61726 c!8155) b!61727))

(assert (= (and b!61726 (not c!8155)) b!61728))

(assert (=> b!61727 m!52977))

(declare-fun m!54983 () Bool)

(assert (=> b!61727 m!54983))

(assert (=> b!61003 d!12411))

(declare-fun d!12413 () Bool)

(declare-fun e!40536 () Bool)

(assert (=> d!12413 e!40536))

(declare-fun res!33971 () Bool)

(assert (=> d!12413 (=> (not res!33971) (not e!40536))))

(declare-fun lt!25595 () ListLongMap!1361)

(assert (=> d!12413 (= res!33971 (contains!687 lt!25595 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!25593 () List!1443)

(assert (=> d!12413 (= lt!25595 (ListLongMap!1362 lt!25593))))

(declare-fun lt!25594 () Unit!1621)

(declare-fun lt!25596 () Unit!1621)

(assert (=> d!12413 (= lt!25594 lt!25596)))

(assert (=> d!12413 (= (getValueByKey!123 lt!25593 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12413 (= lt!25596 (lemmaContainsTupThenGetReturnValue!43 lt!25593 (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12413 (= lt!25593 (insertStrictlySorted!46 (toList!696 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12413 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!25595)))

(declare-fun b!61729 () Bool)

(declare-fun res!33972 () Bool)

(assert (=> b!61729 (=> (not res!33972) (not e!40536))))

(assert (=> b!61729 (= res!33972 (= (getValueByKey!123 (toList!696 lt!25595) (_1!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!128 (_2!1035 (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!61730 () Bool)

(assert (=> b!61730 (= e!40536 (contains!689 (toList!696 lt!25595) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!12413 res!33971) b!61729))

(assert (= (and b!61729 res!33972) b!61730))

(declare-fun m!54985 () Bool)

(assert (=> d!12413 m!54985))

(declare-fun m!54987 () Bool)

(assert (=> d!12413 m!54987))

(declare-fun m!54989 () Bool)

(assert (=> d!12413 m!54989))

(declare-fun m!54991 () Bool)

(assert (=> d!12413 m!54991))

(declare-fun m!54993 () Bool)

(assert (=> b!61729 m!54993))

(declare-fun m!54995 () Bool)

(assert (=> b!61730 m!54995))

(assert (=> b!60884 d!12413))

(assert (=> b!60884 d!11929))

(declare-fun bm!4766 () Bool)

(declare-fun call!4775 () ListLongMap!1361)

(declare-fun call!4774 () ListLongMap!1361)

(assert (=> bm!4766 (= call!4775 call!4774)))

(declare-fun b!61731 () Bool)

(declare-fun e!40542 () Unit!1621)

(declare-fun lt!25597 () Unit!1621)

(assert (=> b!61731 (= e!40542 lt!25597)))

(declare-fun lt!25604 () ListLongMap!1361)

(assert (=> b!61731 (= lt!25604 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25602 () (_ BitVec 64))

(assert (=> b!61731 (= lt!25602 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25598 () (_ BitVec 64))

(assert (=> b!61731 (= lt!25598 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25611 () Unit!1621)

(assert (=> b!61731 (= lt!25611 (addStillContains!43 lt!25604 lt!25602 (zeroValue!1980 newMap!16) lt!25598))))

(assert (=> b!61731 (contains!687 (+!82 lt!25604 (tuple2!2049 lt!25602 (zeroValue!1980 newMap!16))) lt!25598)))

(declare-fun lt!25617 () Unit!1621)

(assert (=> b!61731 (= lt!25617 lt!25611)))

(declare-fun lt!25608 () ListLongMap!1361)

(assert (=> b!61731 (= lt!25608 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25612 () (_ BitVec 64))

(assert (=> b!61731 (= lt!25612 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25615 () (_ BitVec 64))

(assert (=> b!61731 (= lt!25615 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25605 () Unit!1621)

(assert (=> b!61731 (= lt!25605 (addApplyDifferent!43 lt!25608 lt!25612 (minValue!1980 newMap!16) lt!25615))))

(assert (=> b!61731 (= (apply!67 (+!82 lt!25608 (tuple2!2049 lt!25612 (minValue!1980 newMap!16))) lt!25615) (apply!67 lt!25608 lt!25615))))

(declare-fun lt!25606 () Unit!1621)

(assert (=> b!61731 (= lt!25606 lt!25605)))

(declare-fun lt!25613 () ListLongMap!1361)

(assert (=> b!61731 (= lt!25613 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25603 () (_ BitVec 64))

(assert (=> b!61731 (= lt!25603 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25618 () (_ BitVec 64))

(assert (=> b!61731 (= lt!25618 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!25601 () Unit!1621)

(assert (=> b!61731 (= lt!25601 (addApplyDifferent!43 lt!25613 lt!25603 (zeroValue!1980 newMap!16) lt!25618))))

(assert (=> b!61731 (= (apply!67 (+!82 lt!25613 (tuple2!2049 lt!25603 (zeroValue!1980 newMap!16))) lt!25618) (apply!67 lt!25613 lt!25618))))

(declare-fun lt!25600 () Unit!1621)

(assert (=> b!61731 (= lt!25600 lt!25601)))

(declare-fun lt!25616 () ListLongMap!1361)

(assert (=> b!61731 (= lt!25616 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25609 () (_ BitVec 64))

(assert (=> b!61731 (= lt!25609 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25607 () (_ BitVec 64))

(assert (=> b!61731 (= lt!25607 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!61731 (= lt!25597 (addApplyDifferent!43 lt!25616 lt!25609 (minValue!1980 newMap!16) lt!25607))))

(assert (=> b!61731 (= (apply!67 (+!82 lt!25616 (tuple2!2049 lt!25609 (minValue!1980 newMap!16))) lt!25607) (apply!67 lt!25616 lt!25607))))

(declare-fun b!61732 () Bool)

(declare-fun e!40545 () Bool)

(declare-fun lt!25614 () ListLongMap!1361)

(assert (=> b!61732 (= e!40545 (= (apply!67 lt!25614 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1980 newMap!16)))))

(declare-fun b!61733 () Bool)

(declare-fun e!40547 () Bool)

(declare-fun call!4772 () Bool)

(assert (=> b!61733 (= e!40547 (not call!4772))))

(declare-fun bm!4767 () Bool)

(assert (=> bm!4767 (= call!4774 (getCurrentListMapNoExtraKeys!45 (_keys!3693 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun b!61734 () Bool)

(declare-fun e!40549 () Bool)

(assert (=> b!61734 (= e!40549 (= (apply!67 lt!25614 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1980 newMap!16)))))

(declare-fun b!61735 () Bool)

(declare-fun e!40544 () ListLongMap!1361)

(declare-fun e!40543 () ListLongMap!1361)

(assert (=> b!61735 (= e!40544 e!40543)))

(declare-fun c!8160 () Bool)

(assert (=> b!61735 (= c!8160 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4768 () Bool)

(declare-fun call!4770 () ListLongMap!1361)

(assert (=> bm!4768 (= call!4770 call!4775)))

(declare-fun b!61736 () Bool)

(declare-fun res!33976 () Bool)

(declare-fun e!40538 () Bool)

(assert (=> b!61736 (=> (not res!33976) (not e!40538))))

(declare-fun e!40540 () Bool)

(assert (=> b!61736 (= res!33976 e!40540)))

(declare-fun res!33975 () Bool)

(assert (=> b!61736 (=> res!33975 e!40540)))

(declare-fun e!40546 () Bool)

(assert (=> b!61736 (= res!33975 (not e!40546))))

(declare-fun res!33981 () Bool)

(assert (=> b!61736 (=> (not res!33981) (not e!40546))))

(assert (=> b!61736 (= res!33981 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61737 () Bool)

(declare-fun e!40537 () Bool)

(assert (=> b!61737 (= e!40540 e!40537)))

(declare-fun res!33977 () Bool)

(assert (=> b!61737 (=> (not res!33977) (not e!40537))))

(assert (=> b!61737 (= res!33977 (contains!687 lt!25614 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!61737 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun bm!4769 () Bool)

(assert (=> bm!4769 (= call!4772 (contains!687 lt!25614 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61738 () Bool)

(declare-fun res!33978 () Bool)

(assert (=> b!61738 (=> (not res!33978) (not e!40538))))

(declare-fun e!40548 () Bool)

(assert (=> b!61738 (= res!33978 e!40548)))

(declare-fun c!8161 () Bool)

(assert (=> b!61738 (= c!8161 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!61739 () Bool)

(assert (=> b!61739 (= e!40546 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun c!8158 () Bool)

(declare-fun call!4773 () ListLongMap!1361)

(declare-fun bm!4770 () Bool)

(assert (=> bm!4770 (= call!4773 (+!82 (ite c!8158 call!4774 (ite c!8160 call!4775 call!4770)) (ite (or c!8158 c!8160) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(declare-fun b!61740 () Bool)

(assert (=> b!61740 (= e!40538 e!40547)))

(declare-fun c!8159 () Bool)

(assert (=> b!61740 (= c!8159 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!61741 () Bool)

(declare-fun Unit!1674 () Unit!1621)

(assert (=> b!61741 (= e!40542 Unit!1674)))

(declare-fun b!61742 () Bool)

(declare-fun call!4771 () ListLongMap!1361)

(assert (=> b!61742 (= e!40543 call!4771)))

(declare-fun b!61743 () Bool)

(declare-fun e!40541 () ListLongMap!1361)

(assert (=> b!61743 (= e!40541 call!4770)))

(declare-fun b!61744 () Bool)

(assert (=> b!61744 (= e!40544 (+!82 call!4773 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))

(declare-fun b!61745 () Bool)

(declare-fun e!40539 () Bool)

(assert (=> b!61745 (= e!40539 (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61746 () Bool)

(declare-fun c!8157 () Bool)

(assert (=> b!61746 (= c!8157 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!61746 (= e!40543 e!40541)))

(declare-fun b!61747 () Bool)

(assert (=> b!61747 (= e!40547 e!40549)))

(declare-fun res!33979 () Bool)

(assert (=> b!61747 (= res!33979 call!4772)))

(assert (=> b!61747 (=> (not res!33979) (not e!40549))))

(declare-fun d!12415 () Bool)

(assert (=> d!12415 e!40538))

(declare-fun res!33980 () Bool)

(assert (=> d!12415 (=> (not res!33980) (not e!40538))))

(assert (=> d!12415 (= res!33980 (or (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))))

(declare-fun lt!25599 () ListLongMap!1361)

(assert (=> d!12415 (= lt!25614 lt!25599)))

(declare-fun lt!25610 () Unit!1621)

(assert (=> d!12415 (= lt!25610 e!40542)))

(declare-fun c!8156 () Bool)

(assert (=> d!12415 (= c!8156 e!40539)))

(declare-fun res!33973 () Bool)

(assert (=> d!12415 (=> (not res!33973) (not e!40539))))

(assert (=> d!12415 (= res!33973 (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12415 (= lt!25599 e!40544)))

(assert (=> d!12415 (= c!8158 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!12415 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12415 (= (getCurrentListMap!392 (_keys!3693 newMap!16) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25614)))

(declare-fun b!61748 () Bool)

(declare-fun call!4769 () Bool)

(assert (=> b!61748 (= e!40548 (not call!4769))))

(declare-fun b!61749 () Bool)

(assert (=> b!61749 (= e!40537 (= (apply!67 lt!25614 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!61749 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (index!3049 lt!24917) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))))))

(assert (=> b!61749 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61750 () Bool)

(assert (=> b!61750 (= e!40541 call!4771)))

(declare-fun b!61751 () Bool)

(assert (=> b!61751 (= e!40548 e!40545)))

(declare-fun res!33974 () Bool)

(assert (=> b!61751 (= res!33974 call!4769)))

(assert (=> b!61751 (=> (not res!33974) (not e!40545))))

(declare-fun bm!4771 () Bool)

(assert (=> bm!4771 (= call!4769 (contains!687 lt!25614 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4772 () Bool)

(assert (=> bm!4772 (= call!4771 call!4773)))

(assert (= (and d!12415 c!8158) b!61744))

(assert (= (and d!12415 (not c!8158)) b!61735))

(assert (= (and b!61735 c!8160) b!61742))

(assert (= (and b!61735 (not c!8160)) b!61746))

(assert (= (and b!61746 c!8157) b!61750))

(assert (= (and b!61746 (not c!8157)) b!61743))

(assert (= (or b!61750 b!61743) bm!4768))

(assert (= (or b!61742 bm!4768) bm!4766))

(assert (= (or b!61742 b!61750) bm!4772))

(assert (= (or b!61744 bm!4766) bm!4767))

(assert (= (or b!61744 bm!4772) bm!4770))

(assert (= (and d!12415 res!33973) b!61745))

(assert (= (and d!12415 c!8156) b!61731))

(assert (= (and d!12415 (not c!8156)) b!61741))

(assert (= (and d!12415 res!33980) b!61736))

(assert (= (and b!61736 res!33981) b!61739))

(assert (= (and b!61736 (not res!33975)) b!61737))

(assert (= (and b!61737 res!33977) b!61749))

(assert (= (and b!61736 res!33976) b!61738))

(assert (= (and b!61738 c!8161) b!61751))

(assert (= (and b!61738 (not c!8161)) b!61748))

(assert (= (and b!61751 res!33974) b!61732))

(assert (= (or b!61751 b!61748) bm!4771))

(assert (= (and b!61738 res!33978) b!61740))

(assert (= (and b!61740 c!8159) b!61747))

(assert (= (and b!61740 (not c!8159)) b!61733))

(assert (= (and b!61747 res!33979) b!61734))

(assert (= (or b!61747 b!61733) bm!4769))

(declare-fun b_lambda!2731 () Bool)

(assert (=> (not b_lambda!2731) (not b!61749)))

(assert (=> b!61749 t!4820))

(declare-fun b_and!3769 () Bool)

(assert (= b_and!3765 (and (=> t!4820 result!2427) b_and!3769)))

(assert (=> b!61749 t!4822))

(declare-fun b_and!3771 () Bool)

(assert (= b_and!3767 (and (=> t!4822 result!2429) b_and!3771)))

(assert (=> b!61739 m!53263))

(assert (=> b!61739 m!53263))

(assert (=> b!61739 m!53265))

(declare-fun m!54997 () Bool)

(assert (=> b!61749 m!54997))

(assert (=> b!61749 m!53391))

(declare-fun m!54999 () Bool)

(assert (=> b!61749 m!54999))

(assert (=> b!61749 m!54997))

(assert (=> b!61749 m!53263))

(declare-fun m!55001 () Bool)

(assert (=> b!61749 m!55001))

(assert (=> b!61749 m!53263))

(assert (=> b!61749 m!53391))

(declare-fun m!55003 () Bool)

(assert (=> b!61731 m!55003))

(declare-fun m!55005 () Bool)

(assert (=> b!61731 m!55005))

(declare-fun m!55007 () Bool)

(assert (=> b!61731 m!55007))

(declare-fun m!55009 () Bool)

(assert (=> b!61731 m!55009))

(declare-fun m!55011 () Bool)

(assert (=> b!61731 m!55011))

(declare-fun m!55013 () Bool)

(assert (=> b!61731 m!55013))

(assert (=> b!61731 m!55009))

(declare-fun m!55015 () Bool)

(assert (=> b!61731 m!55015))

(declare-fun m!55017 () Bool)

(assert (=> b!61731 m!55017))

(declare-fun m!55019 () Bool)

(assert (=> b!61731 m!55019))

(declare-fun m!55021 () Bool)

(assert (=> b!61731 m!55021))

(assert (=> b!61731 m!53263))

(assert (=> b!61731 m!55011))

(assert (=> b!61731 m!55005))

(declare-fun m!55023 () Bool)

(assert (=> b!61731 m!55023))

(declare-fun m!55025 () Bool)

(assert (=> b!61731 m!55025))

(declare-fun m!55027 () Bool)

(assert (=> b!61731 m!55027))

(assert (=> b!61731 m!55025))

(declare-fun m!55029 () Bool)

(assert (=> b!61731 m!55029))

(declare-fun m!55031 () Bool)

(assert (=> b!61731 m!55031))

(declare-fun m!55033 () Bool)

(assert (=> b!61731 m!55033))

(declare-fun m!55035 () Bool)

(assert (=> b!61734 m!55035))

(assert (=> bm!4767 m!55007))

(declare-fun m!55037 () Bool)

(assert (=> bm!4771 m!55037))

(assert (=> b!61745 m!53263))

(assert (=> b!61745 m!53263))

(assert (=> b!61745 m!53265))

(declare-fun m!55039 () Bool)

(assert (=> b!61744 m!55039))

(declare-fun m!55041 () Bool)

(assert (=> b!61732 m!55041))

(assert (=> d!12415 m!53365))

(declare-fun m!55043 () Bool)

(assert (=> bm!4769 m!55043))

(assert (=> b!61737 m!53263))

(assert (=> b!61737 m!53263))

(declare-fun m!55045 () Bool)

(assert (=> b!61737 m!55045))

(declare-fun m!55047 () Bool)

(assert (=> bm!4770 m!55047))

(assert (=> b!60884 d!12415))

(assert (=> bm!4661 d!11989))

(declare-fun d!12417 () Bool)

(declare-fun e!40551 () Bool)

(assert (=> d!12417 e!40551))

(declare-fun res!33982 () Bool)

(assert (=> d!12417 (=> res!33982 e!40551)))

(declare-fun lt!25622 () Bool)

(assert (=> d!12417 (= res!33982 (not lt!25622))))

(declare-fun lt!25620 () Bool)

(assert (=> d!12417 (= lt!25622 lt!25620)))

(declare-fun lt!25619 () Unit!1621)

(declare-fun e!40550 () Unit!1621)

(assert (=> d!12417 (= lt!25619 e!40550)))

(declare-fun c!8162 () Bool)

(assert (=> d!12417 (= c!8162 lt!25620)))

(assert (=> d!12417 (= lt!25620 (containsKey!127 (toList!696 lt!25107) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!12417 (= (contains!687 lt!25107 #b0000000000000000000000000000000000000000000000000000000000000000) lt!25622)))

(declare-fun b!61752 () Bool)

(declare-fun lt!25621 () Unit!1621)

(assert (=> b!61752 (= e!40550 lt!25621)))

(assert (=> b!61752 (= lt!25621 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25107) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61752 (isDefined!77 (getValueByKey!123 (toList!696 lt!25107) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61753 () Bool)

(declare-fun Unit!1675 () Unit!1621)

(assert (=> b!61753 (= e!40550 Unit!1675)))

(declare-fun b!61754 () Bool)

(assert (=> b!61754 (= e!40551 (isDefined!77 (getValueByKey!123 (toList!696 lt!25107) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12417 c!8162) b!61752))

(assert (= (and d!12417 (not c!8162)) b!61753))

(assert (= (and d!12417 (not res!33982)) b!61754))

(declare-fun m!55049 () Bool)

(assert (=> d!12417 m!55049))

(declare-fun m!55051 () Bool)

(assert (=> b!61752 m!55051))

(declare-fun m!55053 () Bool)

(assert (=> b!61752 m!55053))

(assert (=> b!61752 m!55053))

(declare-fun m!55055 () Bool)

(assert (=> b!61752 m!55055))

(assert (=> b!61754 m!55053))

(assert (=> b!61754 m!55053))

(assert (=> b!61754 m!55055))

(assert (=> d!11951 d!12417))

(assert (=> d!11951 d!11865))

(assert (=> d!11929 d!12045))

(declare-fun d!12419 () Bool)

(declare-fun res!33983 () Bool)

(declare-fun e!40552 () Bool)

(assert (=> d!12419 (=> res!33983 e!40552)))

(assert (=> d!12419 (= res!33983 (and ((_ is Cons!1439) (toList!696 lt!24825)) (= (_1!1035 (h!2021 (toList!696 lt!24825))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!12419 (= (containsKey!127 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000) e!40552)))

(declare-fun b!61755 () Bool)

(declare-fun e!40553 () Bool)

(assert (=> b!61755 (= e!40552 e!40553)))

(declare-fun res!33984 () Bool)

(assert (=> b!61755 (=> (not res!33984) (not e!40553))))

(assert (=> b!61755 (= res!33984 (and (or (not ((_ is Cons!1439) (toList!696 lt!24825))) (bvsle (_1!1035 (h!2021 (toList!696 lt!24825))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1439) (toList!696 lt!24825)) (bvslt (_1!1035 (h!2021 (toList!696 lt!24825))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!61756 () Bool)

(assert (=> b!61756 (= e!40553 (containsKey!127 (t!4808 (toList!696 lt!24825)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!12419 (not res!33983)) b!61755))

(assert (= (and b!61755 res!33984) b!61756))

(declare-fun m!55057 () Bool)

(assert (=> b!61756 m!55057))

(assert (=> d!11927 d!12419))

(declare-fun c!8163 () Bool)

(declare-fun d!12421 () Bool)

(assert (=> d!12421 (= c!8163 (and ((_ is Cons!1439) (toList!696 lt!25230)) (= (_1!1035 (h!2021 (toList!696 lt!25230))) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40554 () Option!129)

(assert (=> d!12421 (= (getValueByKey!123 (toList!696 lt!25230) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) e!40554)))

(declare-fun b!61760 () Bool)

(declare-fun e!40555 () Option!129)

(assert (=> b!61760 (= e!40555 None!127)))

(declare-fun b!61757 () Bool)

(assert (=> b!61757 (= e!40554 (Some!128 (_2!1035 (h!2021 (toList!696 lt!25230)))))))

(declare-fun b!61759 () Bool)

(assert (=> b!61759 (= e!40555 (getValueByKey!123 (t!4808 (toList!696 lt!25230)) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61758 () Bool)

(assert (=> b!61758 (= e!40554 e!40555)))

(declare-fun c!8164 () Bool)

(assert (=> b!61758 (= c!8164 (and ((_ is Cons!1439) (toList!696 lt!25230)) (not (= (_1!1035 (h!2021 (toList!696 lt!25230))) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12421 c!8163) b!61757))

(assert (= (and d!12421 (not c!8163)) b!61758))

(assert (= (and b!61758 c!8164) b!61759))

(assert (= (and b!61758 (not c!8164)) b!61760))

(declare-fun m!55059 () Bool)

(assert (=> b!61759 m!55059))

(assert (=> b!61123 d!12421))

(assert (=> b!61015 d!12051))

(declare-fun b!61762 () Bool)

(declare-fun res!33986 () Bool)

(declare-fun e!40556 () Bool)

(assert (=> b!61762 (=> (not res!33986) (not e!40556))))

(assert (=> b!61762 (= res!33986 (bvsge (size!2018 (_2!1034 lt!24902)) (_size!363 (_2!1034 lt!24902))))))

(declare-fun b!61761 () Bool)

(declare-fun res!33988 () Bool)

(assert (=> b!61761 (=> (not res!33988) (not e!40556))))

(assert (=> b!61761 (= res!33988 (and (= (size!2013 (_values!2049 (_2!1034 lt!24902))) (bvadd (mask!5961 (_2!1034 lt!24902)) #b00000000000000000000000000000001)) (= (size!2012 (_keys!3693 (_2!1034 lt!24902))) (size!2013 (_values!2049 (_2!1034 lt!24902)))) (bvsge (_size!363 (_2!1034 lt!24902)) #b00000000000000000000000000000000) (bvsle (_size!363 (_2!1034 lt!24902)) (bvadd (mask!5961 (_2!1034 lt!24902)) #b00000000000000000000000000000001))))))

(declare-fun b!61763 () Bool)

(declare-fun res!33987 () Bool)

(assert (=> b!61763 (=> (not res!33987) (not e!40556))))

(assert (=> b!61763 (= res!33987 (= (size!2018 (_2!1034 lt!24902)) (bvadd (_size!363 (_2!1034 lt!24902)) (bvsdiv (bvadd (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!12423 () Bool)

(declare-fun res!33985 () Bool)

(assert (=> d!12423 (=> (not res!33985) (not e!40556))))

(assert (=> d!12423 (= res!33985 (validMask!0 (mask!5961 (_2!1034 lt!24902))))))

(assert (=> d!12423 (= (simpleValid!43 (_2!1034 lt!24902)) e!40556)))

(declare-fun b!61764 () Bool)

(assert (=> b!61764 (= e!40556 (and (bvsge (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000000) (bvsle (extraKeys!1949 (_2!1034 lt!24902)) #b00000000000000000000000000000011) (bvsge (_vacant!363 (_2!1034 lt!24902)) #b00000000000000000000000000000000)))))

(assert (= (and d!12423 res!33985) b!61761))

(assert (= (and b!61761 res!33988) b!61762))

(assert (= (and b!61762 res!33986) b!61763))

(assert (= (and b!61763 res!33987) b!61764))

(declare-fun m!55061 () Bool)

(assert (=> b!61762 m!55061))

(assert (=> b!61763 m!55061))

(assert (=> d!12423 m!54225))

(assert (=> d!11935 d!12423))

(declare-fun d!12425 () Bool)

(declare-fun e!40558 () Bool)

(assert (=> d!12425 e!40558))

(declare-fun res!33989 () Bool)

(assert (=> d!12425 (=> res!33989 e!40558)))

(declare-fun lt!25626 () Bool)

(assert (=> d!12425 (= res!33989 (not lt!25626))))

(declare-fun lt!25624 () Bool)

(assert (=> d!12425 (= lt!25626 lt!25624)))

(declare-fun lt!25623 () Unit!1621)

(declare-fun e!40557 () Unit!1621)

(assert (=> d!12425 (= lt!25623 e!40557)))

(declare-fun c!8165 () Bool)

(assert (=> d!12425 (= c!8165 lt!25624)))

(assert (=> d!12425 (= lt!25624 (containsKey!127 (toList!696 lt!25170) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!12425 (= (contains!687 lt!25170 #b1000000000000000000000000000000000000000000000000000000000000000) lt!25626)))

(declare-fun b!61765 () Bool)

(declare-fun lt!25625 () Unit!1621)

(assert (=> b!61765 (= e!40557 lt!25625)))

(assert (=> b!61765 (= lt!25625 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25170) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61765 (isDefined!77 (getValueByKey!123 (toList!696 lt!25170) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61766 () Bool)

(declare-fun Unit!1676 () Unit!1621)

(assert (=> b!61766 (= e!40557 Unit!1676)))

(declare-fun b!61767 () Bool)

(assert (=> b!61767 (= e!40558 (isDefined!77 (getValueByKey!123 (toList!696 lt!25170) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12425 c!8165) b!61765))

(assert (= (and d!12425 (not c!8165)) b!61766))

(assert (= (and d!12425 (not res!33989)) b!61767))

(declare-fun m!55063 () Bool)

(assert (=> d!12425 m!55063))

(declare-fun m!55065 () Bool)

(assert (=> b!61765 m!55065))

(assert (=> b!61765 m!54053))

(assert (=> b!61765 m!54053))

(declare-fun m!55067 () Bool)

(assert (=> b!61765 m!55067))

(assert (=> b!61767 m!54053))

(assert (=> b!61767 m!54053))

(assert (=> b!61767 m!55067))

(assert (=> bm!4689 d!12425))

(declare-fun d!12427 () Bool)

(assert (=> d!12427 (= (apply!67 lt!25170 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (get!1086 (getValueByKey!123 (toList!696 lt!25170) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!2688 () Bool)

(assert (= bs!2688 d!12427))

(assert (=> bs!2688 m!53263))

(assert (=> bs!2688 m!53891))

(assert (=> bs!2688 m!53891))

(declare-fun m!55069 () Bool)

(assert (=> bs!2688 m!55069))

(assert (=> b!61075 d!12427))

(declare-fun d!12429 () Bool)

(declare-fun c!8166 () Bool)

(assert (=> d!12429 (= c!8166 ((_ is ValueCellFull!860) (select (arr!1781 (ite c!7887 (_values!2049 newMap!16) lt!24922)) #b00000000000000000000000000000000)))))

(declare-fun e!40559 () V!2857)

(assert (=> d!12429 (= (get!1083 (select (arr!1781 (ite c!7887 (_values!2049 newMap!16) lt!24922)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!40559)))

(declare-fun b!61768 () Bool)

(assert (=> b!61768 (= e!40559 (get!1084 (select (arr!1781 (ite c!7887 (_values!2049 newMap!16) lt!24922)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!61769 () Bool)

(assert (=> b!61769 (= e!40559 (get!1085 (select (arr!1781 (ite c!7887 (_values!2049 newMap!16) lt!24922)) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!12429 c!8166) b!61768))

(assert (= (and d!12429 (not c!8166)) b!61769))

(assert (=> b!61768 m!53587))

(assert (=> b!61768 m!53391))

(declare-fun m!55071 () Bool)

(assert (=> b!61768 m!55071))

(assert (=> b!61769 m!53587))

(assert (=> b!61769 m!53391))

(declare-fun m!55073 () Bool)

(assert (=> b!61769 m!55073))

(assert (=> b!61075 d!12429))

(declare-fun b!61782 () Bool)

(declare-fun c!8173 () Bool)

(declare-fun lt!25632 () (_ BitVec 64))

(assert (=> b!61782 (= c!8173 (= lt!25632 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!40568 () SeekEntryResult!231)

(declare-fun e!40566 () SeekEntryResult!231)

(assert (=> b!61782 (= e!40568 e!40566)))

(declare-fun lt!25631 () SeekEntryResult!231)

(declare-fun d!12431 () Bool)

(assert (=> d!12431 (and (or ((_ is Undefined!231) lt!25631) (not ((_ is Found!231) lt!25631)) (and (bvsge (index!3049 lt!25631) #b00000000000000000000000000000000) (bvslt (index!3049 lt!25631) (size!2012 (_keys!3693 newMap!16))))) (or ((_ is Undefined!231) lt!25631) ((_ is Found!231) lt!25631) (not ((_ is MissingVacant!231) lt!25631)) (not (= (index!3051 lt!25631) (index!3050 lt!25127))) (and (bvsge (index!3051 lt!25631) #b00000000000000000000000000000000) (bvslt (index!3051 lt!25631) (size!2012 (_keys!3693 newMap!16))))) (or ((_ is Undefined!231) lt!25631) (ite ((_ is Found!231) lt!25631) (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!25631)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (and ((_ is MissingVacant!231) lt!25631) (= (index!3051 lt!25631) (index!3050 lt!25127)) (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3051 lt!25631)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!40567 () SeekEntryResult!231)

(assert (=> d!12431 (= lt!25631 e!40567)))

(declare-fun c!8174 () Bool)

(assert (=> d!12431 (= c!8174 (bvsge (x!10164 lt!25127) #b01111111111111111111111111111110))))

(assert (=> d!12431 (= lt!25632 (select (arr!1780 (_keys!3693 newMap!16)) (index!3050 lt!25127)))))

(assert (=> d!12431 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12431 (= (seekKeyOrZeroReturnVacant!0 (x!10164 lt!25127) (index!3050 lt!25127) (index!3050 lt!25127) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)) lt!25631)))

(declare-fun b!61783 () Bool)

(assert (=> b!61783 (= e!40566 (seekKeyOrZeroReturnVacant!0 (bvadd (x!10164 lt!25127) #b00000000000000000000000000000001) (nextIndex!0 (index!3050 lt!25127) (x!10164 lt!25127) (mask!5961 newMap!16)) (index!3050 lt!25127) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun b!61784 () Bool)

(assert (=> b!61784 (= e!40567 Undefined!231)))

(declare-fun b!61785 () Bool)

(assert (=> b!61785 (= e!40568 (Found!231 (index!3050 lt!25127)))))

(declare-fun b!61786 () Bool)

(assert (=> b!61786 (= e!40567 e!40568)))

(declare-fun c!8175 () Bool)

(assert (=> b!61786 (= c!8175 (= lt!25632 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!61787 () Bool)

(assert (=> b!61787 (= e!40566 (MissingVacant!231 (index!3050 lt!25127)))))

(assert (= (and d!12431 c!8174) b!61784))

(assert (= (and d!12431 (not c!8174)) b!61786))

(assert (= (and b!61786 c!8175) b!61785))

(assert (= (and b!61786 (not c!8175)) b!61782))

(assert (= (and b!61782 c!8173) b!61787))

(assert (= (and b!61782 (not c!8173)) b!61783))

(declare-fun m!55075 () Bool)

(assert (=> d!12431 m!55075))

(declare-fun m!55077 () Bool)

(assert (=> d!12431 m!55077))

(assert (=> d!12431 m!53533))

(assert (=> d!12431 m!53365))

(declare-fun m!55079 () Bool)

(assert (=> b!61783 m!55079))

(assert (=> b!61783 m!55079))

(assert (=> b!61783 m!52977))

(declare-fun m!55081 () Bool)

(assert (=> b!61783 m!55081))

(assert (=> b!61031 d!12431))

(declare-fun d!12433 () Bool)

(assert (=> d!12433 (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!25633 () Unit!1621)

(assert (=> d!12433 (= lt!25633 (choose!327 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!40569 () Bool)

(assert (=> d!12433 e!40569))

(declare-fun res!33990 () Bool)

(assert (=> d!12433 (=> (not res!33990) (not e!40569))))

(assert (=> d!12433 (= res!33990 (isStrictlySorted!280 (toList!696 lt!24825)))))

(assert (=> d!12433 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000) lt!25633)))

(declare-fun b!61788 () Bool)

(assert (=> b!61788 (= e!40569 (containsKey!127 (toList!696 lt!24825) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!12433 res!33990) b!61788))

(assert (=> d!12433 m!53491))

(assert (=> d!12433 m!53491))

(assert (=> d!12433 m!53817))

(declare-fun m!55083 () Bool)

(assert (=> d!12433 m!55083))

(assert (=> d!12433 m!54451))

(assert (=> b!61788 m!53813))

(assert (=> b!61131 d!12433))

(assert (=> b!61131 d!12219))

(assert (=> b!61131 d!12063))

(declare-fun d!12435 () Bool)

(declare-fun e!40571 () Bool)

(assert (=> d!12435 e!40571))

(declare-fun res!33991 () Bool)

(assert (=> d!12435 (=> res!33991 e!40571)))

(declare-fun lt!25637 () Bool)

(assert (=> d!12435 (= res!33991 (not lt!25637))))

(declare-fun lt!25635 () Bool)

(assert (=> d!12435 (= lt!25637 lt!25635)))

(declare-fun lt!25634 () Unit!1621)

(declare-fun e!40570 () Unit!1621)

(assert (=> d!12435 (= lt!25634 e!40570)))

(declare-fun c!8176 () Bool)

(assert (=> d!12435 (= c!8176 lt!25635)))

(assert (=> d!12435 (= lt!25635 (containsKey!127 (toList!696 lt!25038) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12435 (= (contains!687 lt!25038 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25637)))

(declare-fun b!61789 () Bool)

(declare-fun lt!25636 () Unit!1621)

(assert (=> b!61789 (= e!40570 lt!25636)))

(assert (=> b!61789 (= lt!25636 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25038) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> b!61789 (isDefined!77 (getValueByKey!123 (toList!696 lt!25038) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61790 () Bool)

(declare-fun Unit!1677 () Unit!1621)

(assert (=> b!61790 (= e!40570 Unit!1677)))

(declare-fun b!61791 () Bool)

(assert (=> b!61791 (= e!40571 (isDefined!77 (getValueByKey!123 (toList!696 lt!25038) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (= (and d!12435 c!8176) b!61789))

(assert (= (and d!12435 (not c!8176)) b!61790))

(assert (= (and d!12435 (not res!33991)) b!61791))

(declare-fun m!55085 () Bool)

(assert (=> d!12435 m!55085))

(declare-fun m!55087 () Bool)

(assert (=> b!61789 m!55087))

(assert (=> b!61789 m!53339))

(assert (=> b!61789 m!53339))

(declare-fun m!55089 () Bool)

(assert (=> b!61789 m!55089))

(assert (=> b!61791 m!53339))

(assert (=> b!61791 m!53339))

(assert (=> b!61791 m!55089))

(assert (=> d!11905 d!12435))

(declare-fun d!12437 () Bool)

(declare-fun c!8177 () Bool)

(assert (=> d!12437 (= c!8177 (and ((_ is Cons!1439) lt!25036) (= (_1!1035 (h!2021 lt!25036)) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40572 () Option!129)

(assert (=> d!12437 (= (getValueByKey!123 lt!25036 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) e!40572)))

(declare-fun b!61795 () Bool)

(declare-fun e!40573 () Option!129)

(assert (=> b!61795 (= e!40573 None!127)))

(declare-fun b!61792 () Bool)

(assert (=> b!61792 (= e!40572 (Some!128 (_2!1035 (h!2021 lt!25036))))))

(declare-fun b!61794 () Bool)

(assert (=> b!61794 (= e!40573 (getValueByKey!123 (t!4808 lt!25036) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61793 () Bool)

(assert (=> b!61793 (= e!40572 e!40573)))

(declare-fun c!8178 () Bool)

(assert (=> b!61793 (= c!8178 (and ((_ is Cons!1439) lt!25036) (not (= (_1!1035 (h!2021 lt!25036)) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12437 c!8177) b!61792))

(assert (= (and d!12437 (not c!8177)) b!61793))

(assert (= (and b!61793 c!8178) b!61794))

(assert (= (and b!61793 (not c!8178)) b!61795))

(declare-fun m!55091 () Bool)

(assert (=> b!61794 m!55091))

(assert (=> d!11905 d!12437))

(declare-fun d!12439 () Bool)

(assert (=> d!12439 (= (getValueByKey!123 lt!25036 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lt!25638 () Unit!1621)

(assert (=> d!12439 (= lt!25638 (choose!332 lt!25036 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun e!40574 () Bool)

(assert (=> d!12439 e!40574))

(declare-fun res!33992 () Bool)

(assert (=> d!12439 (=> (not res!33992) (not e!40574))))

(assert (=> d!12439 (= res!33992 (isStrictlySorted!280 lt!25036))))

(assert (=> d!12439 (= (lemmaContainsTupThenGetReturnValue!43 lt!25036 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25638)))

(declare-fun b!61796 () Bool)

(declare-fun res!33993 () Bool)

(assert (=> b!61796 (=> (not res!33993) (not e!40574))))

(assert (=> b!61796 (= res!33993 (containsKey!127 lt!25036 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61797 () Bool)

(assert (=> b!61797 (= e!40574 (contains!689 lt!25036 (tuple2!2049 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (= (and d!12439 res!33992) b!61796))

(assert (= (and b!61796 res!33993) b!61797))

(assert (=> d!12439 m!53333))

(declare-fun m!55093 () Bool)

(assert (=> d!12439 m!55093))

(declare-fun m!55095 () Bool)

(assert (=> d!12439 m!55095))

(declare-fun m!55097 () Bool)

(assert (=> b!61796 m!55097))

(declare-fun m!55099 () Bool)

(assert (=> b!61797 m!55099))

(assert (=> d!11905 d!12439))

(declare-fun b!61798 () Bool)

(declare-fun c!8182 () Bool)

(assert (=> b!61798 (= c!8182 (and ((_ is Cons!1439) (toList!696 call!4575)) (bvsgt (_1!1035 (h!2021 (toList!696 call!4575))) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40578 () List!1443)

(declare-fun e!40576 () List!1443)

(assert (=> b!61798 (= e!40578 e!40576)))

(declare-fun bm!4773 () Bool)

(declare-fun call!4776 () List!1443)

(declare-fun call!4777 () List!1443)

(assert (=> bm!4773 (= call!4776 call!4777)))

(declare-fun b!61799 () Bool)

(declare-fun call!4778 () List!1443)

(assert (=> b!61799 (= e!40576 call!4778)))

(declare-fun b!61800 () Bool)

(declare-fun res!33994 () Bool)

(declare-fun e!40579 () Bool)

(assert (=> b!61800 (=> (not res!33994) (not e!40579))))

(declare-fun lt!25639 () List!1443)

(assert (=> b!61800 (= res!33994 (containsKey!127 lt!25639 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun c!8180 () Bool)

(declare-fun b!61801 () Bool)

(declare-fun e!40575 () List!1443)

(assert (=> b!61801 (= e!40575 (ite c!8180 (t!4808 (toList!696 call!4575)) (ite c!8182 (Cons!1439 (h!2021 (toList!696 call!4575)) (t!4808 (toList!696 call!4575))) Nil!1440)))))

(declare-fun d!12441 () Bool)

(assert (=> d!12441 e!40579))

(declare-fun res!33995 () Bool)

(assert (=> d!12441 (=> (not res!33995) (not e!40579))))

(assert (=> d!12441 (= res!33995 (isStrictlySorted!280 lt!25639))))

(declare-fun e!40577 () List!1443)

(assert (=> d!12441 (= lt!25639 e!40577)))

(declare-fun c!8181 () Bool)

(assert (=> d!12441 (= c!8181 (and ((_ is Cons!1439) (toList!696 call!4575)) (bvslt (_1!1035 (h!2021 (toList!696 call!4575))) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> d!12441 (isStrictlySorted!280 (toList!696 call!4575))))

(assert (=> d!12441 (= (insertStrictlySorted!46 (toList!696 call!4575) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25639)))

(declare-fun b!61802 () Bool)

(assert (=> b!61802 (= e!40575 (insertStrictlySorted!46 (t!4808 (toList!696 call!4575)) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun bm!4774 () Bool)

(assert (=> bm!4774 (= call!4778 call!4776)))

(declare-fun b!61803 () Bool)

(assert (=> b!61803 (= e!40577 call!4777)))

(declare-fun bm!4775 () Bool)

(assert (=> bm!4775 (= call!4777 ($colon$colon!60 e!40575 (ite c!8181 (h!2021 (toList!696 call!4575)) (tuple2!2049 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun c!8179 () Bool)

(assert (=> bm!4775 (= c!8179 c!8181)))

(declare-fun b!61804 () Bool)

(assert (=> b!61804 (= e!40578 call!4776)))

(declare-fun b!61805 () Bool)

(assert (=> b!61805 (= e!40579 (contains!689 lt!25639 (tuple2!2049 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61806 () Bool)

(assert (=> b!61806 (= e!40577 e!40578)))

(assert (=> b!61806 (= c!8180 (and ((_ is Cons!1439) (toList!696 call!4575)) (= (_1!1035 (h!2021 (toList!696 call!4575))) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61807 () Bool)

(assert (=> b!61807 (= e!40576 call!4778)))

(assert (= (and d!12441 c!8181) b!61803))

(assert (= (and d!12441 (not c!8181)) b!61806))

(assert (= (and b!61806 c!8180) b!61804))

(assert (= (and b!61806 (not c!8180)) b!61798))

(assert (= (and b!61798 c!8182) b!61799))

(assert (= (and b!61798 (not c!8182)) b!61807))

(assert (= (or b!61799 b!61807) bm!4774))

(assert (= (or b!61804 bm!4774) bm!4773))

(assert (= (or b!61803 bm!4773) bm!4775))

(assert (= (and bm!4775 c!8179) b!61802))

(assert (= (and bm!4775 (not c!8179)) b!61801))

(assert (= (and d!12441 res!33995) b!61800))

(assert (= (and b!61800 res!33994) b!61805))

(declare-fun m!55101 () Bool)

(assert (=> b!61805 m!55101))

(declare-fun m!55103 () Bool)

(assert (=> b!61800 m!55103))

(declare-fun m!55105 () Bool)

(assert (=> d!12441 m!55105))

(declare-fun m!55107 () Bool)

(assert (=> d!12441 m!55107))

(declare-fun m!55109 () Bool)

(assert (=> bm!4775 m!55109))

(declare-fun m!55111 () Bool)

(assert (=> b!61802 m!55111))

(assert (=> d!11905 d!12441))

(assert (=> d!11963 d!12045))

(assert (=> b!60985 d!12153))

(declare-fun d!12443 () Bool)

(declare-fun e!40581 () Bool)

(assert (=> d!12443 e!40581))

(declare-fun res!33996 () Bool)

(assert (=> d!12443 (=> res!33996 e!40581)))

(declare-fun lt!25643 () Bool)

(assert (=> d!12443 (= res!33996 (not lt!25643))))

(declare-fun lt!25641 () Bool)

(assert (=> d!12443 (= lt!25643 lt!25641)))

(declare-fun lt!25640 () Unit!1621)

(declare-fun e!40580 () Unit!1621)

(assert (=> d!12443 (= lt!25640 e!40580)))

(declare-fun c!8183 () Bool)

(assert (=> d!12443 (= c!8183 lt!25641)))

(assert (=> d!12443 (= lt!25641 (containsKey!127 (toList!696 lt!25230) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> d!12443 (= (contains!687 lt!25230 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25643)))

(declare-fun b!61808 () Bool)

(declare-fun lt!25642 () Unit!1621)

(assert (=> b!61808 (= e!40580 lt!25642)))

(assert (=> b!61808 (= lt!25642 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!25230) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(assert (=> b!61808 (isDefined!77 (getValueByKey!123 (toList!696 lt!25230) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61809 () Bool)

(declare-fun Unit!1678 () Unit!1621)

(assert (=> b!61809 (= e!40580 Unit!1678)))

(declare-fun b!61810 () Bool)

(assert (=> b!61810 (= e!40581 (isDefined!77 (getValueByKey!123 (toList!696 lt!25230) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (= (and d!12443 c!8183) b!61808))

(assert (= (and d!12443 (not c!8183)) b!61809))

(assert (= (and d!12443 (not res!33996)) b!61810))

(declare-fun m!55113 () Bool)

(assert (=> d!12443 m!55113))

(declare-fun m!55115 () Bool)

(assert (=> b!61808 m!55115))

(assert (=> b!61808 m!53793))

(assert (=> b!61808 m!53793))

(declare-fun m!55117 () Bool)

(assert (=> b!61808 m!55117))

(assert (=> b!61810 m!53793))

(assert (=> b!61810 m!53793))

(assert (=> b!61810 m!55117))

(assert (=> d!12013 d!12443))

(declare-fun d!12445 () Bool)

(declare-fun c!8184 () Bool)

(assert (=> d!12445 (= c!8184 (and ((_ is Cons!1439) lt!25228) (= (_1!1035 (h!2021 lt!25228)) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40582 () Option!129)

(assert (=> d!12445 (= (getValueByKey!123 lt!25228 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) e!40582)))

(declare-fun b!61814 () Bool)

(declare-fun e!40583 () Option!129)

(assert (=> b!61814 (= e!40583 None!127)))

(declare-fun b!61811 () Bool)

(assert (=> b!61811 (= e!40582 (Some!128 (_2!1035 (h!2021 lt!25228))))))

(declare-fun b!61813 () Bool)

(assert (=> b!61813 (= e!40583 (getValueByKey!123 (t!4808 lt!25228) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61812 () Bool)

(assert (=> b!61812 (= e!40582 e!40583)))

(declare-fun c!8185 () Bool)

(assert (=> b!61812 (= c!8185 (and ((_ is Cons!1439) lt!25228) (not (= (_1!1035 (h!2021 lt!25228)) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(assert (= (and d!12445 c!8184) b!61811))

(assert (= (and d!12445 (not c!8184)) b!61812))

(assert (= (and b!61812 c!8185) b!61813))

(assert (= (and b!61812 (not c!8185)) b!61814))

(declare-fun m!55119 () Bool)

(assert (=> b!61813 m!55119))

(assert (=> d!12013 d!12445))

(declare-fun d!12447 () Bool)

(assert (=> d!12447 (= (getValueByKey!123 lt!25228 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) (Some!128 (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun lt!25644 () Unit!1621)

(assert (=> d!12447 (= lt!25644 (choose!332 lt!25228 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun e!40584 () Bool)

(assert (=> d!12447 e!40584))

(declare-fun res!33997 () Bool)

(assert (=> d!12447 (=> (not res!33997) (not e!40584))))

(assert (=> d!12447 (= res!33997 (isStrictlySorted!280 lt!25228))))

(assert (=> d!12447 (= (lemmaContainsTupThenGetReturnValue!43 lt!25228 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25644)))

(declare-fun b!61815 () Bool)

(declare-fun res!33998 () Bool)

(assert (=> b!61815 (=> (not res!33998) (not e!40584))))

(assert (=> b!61815 (= res!33998 (containsKey!127 lt!25228 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun b!61816 () Bool)

(assert (=> b!61816 (= e!40584 (contains!689 lt!25228 (tuple2!2049 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (= (and d!12447 res!33997) b!61815))

(assert (= (and b!61815 res!33998) b!61816))

(assert (=> d!12447 m!53787))

(declare-fun m!55121 () Bool)

(assert (=> d!12447 m!55121))

(declare-fun m!55123 () Bool)

(assert (=> d!12447 m!55123))

(declare-fun m!55125 () Bool)

(assert (=> b!61815 m!55125))

(declare-fun m!55127 () Bool)

(assert (=> b!61816 m!55127))

(assert (=> d!12013 d!12447))

(declare-fun b!61817 () Bool)

(declare-fun c!8189 () Bool)

(assert (=> b!61817 (= c!8189 (and ((_ is Cons!1439) (toList!696 lt!24824)) (bvsgt (_1!1035 (h!2021 (toList!696 lt!24824))) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun e!40588 () List!1443)

(declare-fun e!40586 () List!1443)

(assert (=> b!61817 (= e!40588 e!40586)))

(declare-fun bm!4776 () Bool)

(declare-fun call!4779 () List!1443)

(declare-fun call!4780 () List!1443)

(assert (=> bm!4776 (= call!4779 call!4780)))

(declare-fun b!61818 () Bool)

(declare-fun call!4781 () List!1443)

(assert (=> b!61818 (= e!40586 call!4781)))

(declare-fun b!61819 () Bool)

(declare-fun res!33999 () Bool)

(declare-fun e!40589 () Bool)

(assert (=> b!61819 (=> (not res!33999) (not e!40589))))

(declare-fun lt!25645 () List!1443)

(assert (=> b!61819 (= res!33999 (containsKey!127 lt!25645 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun e!40585 () List!1443)

(declare-fun b!61820 () Bool)

(declare-fun c!8187 () Bool)

(assert (=> b!61820 (= e!40585 (ite c!8187 (t!4808 (toList!696 lt!24824)) (ite c!8189 (Cons!1439 (h!2021 (toList!696 lt!24824)) (t!4808 (toList!696 lt!24824))) Nil!1440)))))

(declare-fun d!12449 () Bool)

(assert (=> d!12449 e!40589))

(declare-fun res!34000 () Bool)

(assert (=> d!12449 (=> (not res!34000) (not e!40589))))

(assert (=> d!12449 (= res!34000 (isStrictlySorted!280 lt!25645))))

(declare-fun e!40587 () List!1443)

(assert (=> d!12449 (= lt!25645 e!40587)))

(declare-fun c!8188 () Bool)

(assert (=> d!12449 (= c!8188 (and ((_ is Cons!1439) (toList!696 lt!24824)) (bvslt (_1!1035 (h!2021 (toList!696 lt!24824))) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> d!12449 (isStrictlySorted!280 (toList!696 lt!24824))))

(assert (=> d!12449 (= (insertStrictlySorted!46 (toList!696 lt!24824) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!25645)))

(declare-fun b!61821 () Bool)

(assert (=> b!61821 (= e!40585 (insertStrictlySorted!46 (t!4808 (toList!696 lt!24824)) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))

(declare-fun bm!4777 () Bool)

(assert (=> bm!4777 (= call!4781 call!4779)))

(declare-fun b!61822 () Bool)

(assert (=> b!61822 (= e!40587 call!4780)))

(declare-fun bm!4778 () Bool)

(assert (=> bm!4778 (= call!4780 ($colon$colon!60 e!40585 (ite c!8188 (h!2021 (toList!696 lt!24824)) (tuple2!2049 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))))))))

(declare-fun c!8186 () Bool)

(assert (=> bm!4778 (= c!8186 c!8188)))

(declare-fun b!61823 () Bool)

(assert (=> b!61823 (= e!40588 call!4779)))

(declare-fun b!61824 () Bool)

(assert (=> b!61824 (= e!40589 (contains!689 lt!25645 (tuple2!2049 (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) (_2!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61825 () Bool)

(assert (=> b!61825 (= e!40587 e!40588)))

(assert (=> b!61825 (= c!8187 (and ((_ is Cons!1439) (toList!696 lt!24824)) (= (_1!1035 (h!2021 (toList!696 lt!24824))) (_1!1035 (tuple2!2049 lt!24814 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(declare-fun b!61826 () Bool)

(assert (=> b!61826 (= e!40586 call!4781)))

(assert (= (and d!12449 c!8188) b!61822))

(assert (= (and d!12449 (not c!8188)) b!61825))

(assert (= (and b!61825 c!8187) b!61823))

(assert (= (and b!61825 (not c!8187)) b!61817))

(assert (= (and b!61817 c!8189) b!61818))

(assert (= (and b!61817 (not c!8189)) b!61826))

(assert (= (or b!61818 b!61826) bm!4777))

(assert (= (or b!61823 bm!4777) bm!4776))

(assert (= (or b!61822 bm!4776) bm!4778))

(assert (= (and bm!4778 c!8186) b!61821))

(assert (= (and bm!4778 (not c!8186)) b!61820))

(assert (= (and d!12449 res!34000) b!61819))

(assert (= (and b!61819 res!33999) b!61824))

(declare-fun m!55129 () Bool)

(assert (=> b!61824 m!55129))

(declare-fun m!55131 () Bool)

(assert (=> b!61819 m!55131))

(declare-fun m!55133 () Bool)

(assert (=> d!12449 m!55133))

(declare-fun m!55135 () Bool)

(assert (=> d!12449 m!55135))

(declare-fun m!55137 () Bool)

(assert (=> bm!4778 m!55137))

(declare-fun m!55139 () Bool)

(assert (=> b!61821 m!55139))

(assert (=> d!12013 d!12449))

(declare-fun d!12451 () Bool)

(declare-fun e!40591 () Bool)

(assert (=> d!12451 e!40591))

(declare-fun res!34001 () Bool)

(assert (=> d!12451 (=> res!34001 e!40591)))

(declare-fun lt!25649 () Bool)

(assert (=> d!12451 (= res!34001 (not lt!25649))))

(declare-fun lt!25647 () Bool)

(assert (=> d!12451 (= lt!25649 lt!25647)))

(declare-fun lt!25646 () Unit!1621)

(declare-fun e!40590 () Unit!1621)

(assert (=> d!12451 (= lt!25646 e!40590)))

(declare-fun c!8190 () Bool)

(assert (=> d!12451 (= c!8190 lt!25647)))

(assert (=> d!12451 (= lt!25647 (containsKey!127 (toList!696 (map!1110 (_2!1034 lt!25002))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!12451 (= (contains!687 (map!1110 (_2!1034 lt!25002)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) lt!25649)))

(declare-fun b!61827 () Bool)

(declare-fun lt!25648 () Unit!1621)

(assert (=> b!61827 (= e!40590 lt!25648)))

(assert (=> b!61827 (= lt!25648 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 (map!1110 (_2!1034 lt!25002))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> b!61827 (isDefined!77 (getValueByKey!123 (toList!696 (map!1110 (_2!1034 lt!25002))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun b!61828 () Bool)

(declare-fun Unit!1679 () Unit!1621)

(assert (=> b!61828 (= e!40590 Unit!1679)))

(declare-fun b!61829 () Bool)

(assert (=> b!61829 (= e!40591 (isDefined!77 (getValueByKey!123 (toList!696 (map!1110 (_2!1034 lt!25002))) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355))))))

(assert (= (and d!12451 c!8190) b!61827))

(assert (= (and d!12451 (not c!8190)) b!61828))

(assert (= (and d!12451 (not res!34001)) b!61829))

(assert (=> d!12451 m!52977))

(declare-fun m!55141 () Bool)

(assert (=> d!12451 m!55141))

(assert (=> b!61827 m!52977))

(declare-fun m!55143 () Bool)

(assert (=> b!61827 m!55143))

(assert (=> b!61827 m!52977))

(declare-fun m!55145 () Bool)

(assert (=> b!61827 m!55145))

(assert (=> b!61827 m!55145))

(declare-fun m!55147 () Bool)

(assert (=> b!61827 m!55147))

(assert (=> b!61829 m!52977))

(assert (=> b!61829 m!55145))

(assert (=> b!61829 m!55145))

(assert (=> b!61829 m!55147))

(assert (=> b!60857 d!12451))

(assert (=> b!60857 d!12103))

(declare-fun d!12453 () Bool)

(assert (=> d!12453 (= (apply!67 lt!25170 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1086 (getValueByKey!123 (toList!696 lt!25170) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!2689 () Bool)

(assert (= bs!2689 d!12453))

(assert (=> bs!2689 m!54063))

(assert (=> bs!2689 m!54063))

(declare-fun m!55149 () Bool)

(assert (=> bs!2689 m!55149))

(assert (=> b!61058 d!12453))

(declare-fun d!12455 () Bool)

(assert (=> d!12455 (arrayContainsKey!0 (_keys!3693 newMap!16) lt!25141 #b00000000000000000000000000000000)))

(declare-fun lt!25652 () Unit!1621)

(declare-fun choose!13 (array!3723 (_ BitVec 64) (_ BitVec 32)) Unit!1621)

(assert (=> d!12455 (= lt!25652 (choose!13 (_keys!3693 newMap!16) lt!25141 #b00000000000000000000000000000000))))

(assert (=> d!12455 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!12455 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3693 newMap!16) lt!25141 #b00000000000000000000000000000000) lt!25652)))

(declare-fun bs!2690 () Bool)

(assert (= bs!2690 d!12455))

(assert (=> bs!2690 m!53561))

(declare-fun m!55151 () Bool)

(assert (=> bs!2690 m!55151))

(assert (=> b!61045 d!12455))

(declare-fun d!12457 () Bool)

(declare-fun res!34002 () Bool)

(declare-fun e!40592 () Bool)

(assert (=> d!12457 (=> res!34002 e!40592)))

(assert (=> d!12457 (= res!34002 (= (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) lt!25141))))

(assert (=> d!12457 (= (arrayContainsKey!0 (_keys!3693 newMap!16) lt!25141 #b00000000000000000000000000000000) e!40592)))

(declare-fun b!61830 () Bool)

(declare-fun e!40593 () Bool)

(assert (=> b!61830 (= e!40592 e!40593)))

(declare-fun res!34003 () Bool)

(assert (=> b!61830 (=> (not res!34003) (not e!40593))))

(assert (=> b!61830 (= res!34003 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61831 () Bool)

(assert (=> b!61831 (= e!40593 (arrayContainsKey!0 (_keys!3693 newMap!16) lt!25141 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!12457 (not res!34002)) b!61830))

(assert (= (and b!61830 res!34003) b!61831))

(assert (=> d!12457 m!53263))

(declare-fun m!55153 () Bool)

(assert (=> b!61831 m!55153))

(assert (=> b!61045 d!12457))

(declare-fun b!61832 () Bool)

(declare-fun e!40595 () SeekEntryResult!231)

(declare-fun e!40594 () SeekEntryResult!231)

(assert (=> b!61832 (= e!40595 e!40594)))

(declare-fun lt!25655 () (_ BitVec 64))

(declare-fun lt!25653 () SeekEntryResult!231)

(assert (=> b!61832 (= lt!25655 (select (arr!1780 (_keys!3693 newMap!16)) (index!3050 lt!25653)))))

(declare-fun c!8191 () Bool)

(assert (=> b!61832 (= c!8191 (= lt!25655 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!61834 () Bool)

(declare-fun e!40596 () SeekEntryResult!231)

(assert (=> b!61834 (= e!40596 (seekKeyOrZeroReturnVacant!0 (x!10164 lt!25653) (index!3050 lt!25653) (index!3050 lt!25653) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(declare-fun b!61835 () Bool)

(assert (=> b!61835 (= e!40594 (Found!231 (index!3050 lt!25653)))))

(declare-fun b!61836 () Bool)

(declare-fun c!8192 () Bool)

(assert (=> b!61836 (= c!8192 (= lt!25655 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61836 (= e!40594 e!40596)))

(declare-fun b!61837 () Bool)

(assert (=> b!61837 (= e!40596 (MissingZero!231 (index!3050 lt!25653)))))

(declare-fun d!12459 () Bool)

(declare-fun lt!25654 () SeekEntryResult!231)

(assert (=> d!12459 (and (or ((_ is Undefined!231) lt!25654) (not ((_ is Found!231) lt!25654)) (and (bvsge (index!3049 lt!25654) #b00000000000000000000000000000000) (bvslt (index!3049 lt!25654) (size!2012 (_keys!3693 newMap!16))))) (or ((_ is Undefined!231) lt!25654) ((_ is Found!231) lt!25654) (not ((_ is MissingZero!231) lt!25654)) (and (bvsge (index!3048 lt!25654) #b00000000000000000000000000000000) (bvslt (index!3048 lt!25654) (size!2012 (_keys!3693 newMap!16))))) (or ((_ is Undefined!231) lt!25654) ((_ is Found!231) lt!25654) ((_ is MissingZero!231) lt!25654) (not ((_ is MissingVacant!231) lt!25654)) (and (bvsge (index!3051 lt!25654) #b00000000000000000000000000000000) (bvslt (index!3051 lt!25654) (size!2012 (_keys!3693 newMap!16))))) (or ((_ is Undefined!231) lt!25654) (ite ((_ is Found!231) lt!25654) (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3049 lt!25654)) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!231) lt!25654) (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3048 lt!25654)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!231) lt!25654) (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3051 lt!25654)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!12459 (= lt!25654 e!40595)))

(declare-fun c!8193 () Bool)

(assert (=> d!12459 (= c!8193 (and ((_ is Intermediate!231) lt!25653) (undefined!1043 lt!25653)))))

(assert (=> d!12459 (= lt!25653 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) (mask!5961 newMap!16)) (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(assert (=> d!12459 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12459 (= (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 newMap!16)) #b00000000000000000000000000000000) (_keys!3693 newMap!16) (mask!5961 newMap!16)) lt!25654)))

(declare-fun b!61833 () Bool)

(assert (=> b!61833 (= e!40595 Undefined!231)))

(assert (= (and d!12459 c!8193) b!61833))

(assert (= (and d!12459 (not c!8193)) b!61832))

(assert (= (and b!61832 c!8191) b!61835))

(assert (= (and b!61832 (not c!8191)) b!61836))

(assert (= (and b!61836 c!8192) b!61837))

(assert (= (and b!61836 (not c!8192)) b!61834))

(declare-fun m!55155 () Bool)

(assert (=> b!61832 m!55155))

(assert (=> b!61834 m!53263))

(declare-fun m!55157 () Bool)

(assert (=> b!61834 m!55157))

(declare-fun m!55159 () Bool)

(assert (=> d!12459 m!55159))

(declare-fun m!55161 () Bool)

(assert (=> d!12459 m!55161))

(assert (=> d!12459 m!53263))

(declare-fun m!55163 () Bool)

(assert (=> d!12459 m!55163))

(declare-fun m!55165 () Bool)

(assert (=> d!12459 m!55165))

(assert (=> d!12459 m!53263))

(assert (=> d!12459 m!55161))

(assert (=> d!12459 m!53365))

(declare-fun m!55167 () Bool)

(assert (=> d!12459 m!55167))

(assert (=> b!61045 d!12459))

(assert (=> d!11937 d!11965))

(declare-fun b!61854 () Bool)

(declare-fun e!40608 () Bool)

(declare-fun call!4787 () Bool)

(assert (=> b!61854 (= e!40608 (not call!4787))))

(declare-fun bm!4783 () Bool)

(assert (=> bm!4783 (= call!4787 (arrayContainsKey!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!61856 () Bool)

(declare-fun res!34013 () Bool)

(assert (=> b!61856 (=> (not res!34013) (not e!40608))))

(declare-fun lt!25658 () SeekEntryResult!231)

(assert (=> b!61856 (= res!34013 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3051 lt!25658)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61857 () Bool)

(declare-fun e!40606 () Bool)

(assert (=> b!61857 (= e!40606 (not call!4787))))

(declare-fun b!61858 () Bool)

(declare-fun res!34014 () Bool)

(assert (=> b!61858 (= res!34014 (= (select (arr!1780 (_keys!3693 newMap!16)) (index!3048 lt!25658)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!61858 (=> (not res!34014) (not e!40606))))

(declare-fun bm!4784 () Bool)

(declare-fun call!4786 () Bool)

(declare-fun c!8199 () Bool)

(assert (=> bm!4784 (= call!4786 (inRange!0 (ite c!8199 (index!3048 lt!25658) (index!3051 lt!25658)) (mask!5961 newMap!16)))))

(declare-fun b!61859 () Bool)

(declare-fun e!40607 () Bool)

(assert (=> b!61859 (= e!40607 e!40606)))

(declare-fun res!34012 () Bool)

(assert (=> b!61859 (= res!34012 call!4786)))

(assert (=> b!61859 (=> (not res!34012) (not e!40606))))

(declare-fun b!61860 () Bool)

(declare-fun e!40605 () Bool)

(assert (=> b!61860 (= e!40605 ((_ is Undefined!231) lt!25658))))

(declare-fun b!61861 () Bool)

(assert (=> b!61861 (= e!40607 e!40605)))

(declare-fun c!8198 () Bool)

(assert (=> b!61861 (= c!8198 ((_ is MissingVacant!231) lt!25658))))

(declare-fun b!61855 () Bool)

(declare-fun res!34015 () Bool)

(assert (=> b!61855 (=> (not res!34015) (not e!40608))))

(assert (=> b!61855 (= res!34015 call!4786)))

(assert (=> b!61855 (= e!40605 e!40608)))

(declare-fun d!12461 () Bool)

(assert (=> d!12461 e!40607))

(assert (=> d!12461 (= c!8199 ((_ is MissingZero!231) lt!25658))))

(assert (=> d!12461 (= lt!25658 (seekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (mask!5961 newMap!16)))))

(assert (=> d!12461 true))

(declare-fun _$34!772 () Unit!1621)

(assert (=> d!12461 (= (choose!326 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (defaultEntry!2066 newMap!16)) _$34!772)))

(assert (= (and d!12461 c!8199) b!61859))

(assert (= (and d!12461 (not c!8199)) b!61861))

(assert (= (and b!61859 res!34012) b!61858))

(assert (= (and b!61858 res!34014) b!61857))

(assert (= (and b!61861 c!8198) b!61855))

(assert (= (and b!61861 (not c!8198)) b!61860))

(assert (= (and b!61855 res!34015) b!61856))

(assert (= (and b!61856 res!34013) b!61854))

(assert (= (or b!61859 b!61855) bm!4784))

(assert (= (or b!61857 b!61854) bm!4783))

(assert (=> d!12461 m!52977))

(assert (=> d!12461 m!53207))

(declare-fun m!55169 () Bool)

(assert (=> b!61858 m!55169))

(assert (=> bm!4783 m!52977))

(assert (=> bm!4783 m!53189))

(declare-fun m!55171 () Bool)

(assert (=> b!61856 m!55171))

(declare-fun m!55173 () Bool)

(assert (=> bm!4784 m!55173))

(assert (=> d!11937 d!12461))

(assert (=> d!11937 d!12045))

(assert (=> d!11903 d!12413))

(declare-fun d!12463 () Bool)

(declare-fun e!40610 () Bool)

(assert (=> d!12463 e!40610))

(declare-fun res!34016 () Bool)

(assert (=> d!12463 (=> res!34016 e!40610)))

(declare-fun lt!25662 () Bool)

(assert (=> d!12463 (= res!34016 (not lt!25662))))

(declare-fun lt!25660 () Bool)

(assert (=> d!12463 (= lt!25662 lt!25660)))

(declare-fun lt!25659 () Unit!1621)

(declare-fun e!40609 () Unit!1621)

(assert (=> d!12463 (= lt!25659 e!40609)))

(declare-fun c!8200 () Bool)

(assert (=> d!12463 (= c!8200 lt!25660)))

(assert (=> d!12463 (= lt!25660 (containsKey!127 (toList!696 (getCurrentListMap!392 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)))))))

(assert (=> d!12463 (= (contains!687 (getCurrentListMap!392 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (select (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)))) lt!25662)))

(declare-fun b!61862 () Bool)

(declare-fun lt!25661 () Unit!1621)

(assert (=> b!61862 (= e!40609 lt!25661)))

(assert (=> b!61862 (= lt!25661 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 (getCurrentListMap!392 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)))))))

(assert (=> b!61862 (isDefined!77 (getValueByKey!123 (toList!696 (getCurrentListMap!392 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)))))))

(declare-fun b!61863 () Bool)

(declare-fun Unit!1680 () Unit!1621)

(assert (=> b!61863 (= e!40609 Unit!1680)))

(declare-fun b!61864 () Bool)

(assert (=> b!61864 (= e!40610 (isDefined!77 (getValueByKey!123 (toList!696 (getCurrentListMap!392 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))) (select (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))))))))

(assert (= (and d!12463 c!8200) b!61862))

(assert (= (and d!12463 (not c!8200)) b!61863))

(assert (= (and d!12463 (not res!34016)) b!61864))

(assert (=> d!12463 m!53287))

(declare-fun m!55175 () Bool)

(assert (=> d!12463 m!55175))

(assert (=> b!61862 m!53287))

(declare-fun m!55177 () Bool)

(assert (=> b!61862 m!55177))

(assert (=> b!61862 m!53287))

(declare-fun m!55179 () Bool)

(assert (=> b!61862 m!55179))

(assert (=> b!61862 m!55179))

(declare-fun m!55181 () Bool)

(assert (=> b!61862 m!55181))

(assert (=> b!61864 m!53287))

(assert (=> b!61864 m!55179))

(assert (=> b!61864 m!55179))

(assert (=> b!61864 m!55181))

(assert (=> d!11903 d!12463))

(declare-fun d!12465 () Bool)

(declare-fun e!40613 () Bool)

(assert (=> d!12465 e!40613))

(declare-fun res!34019 () Bool)

(assert (=> d!12465 (=> (not res!34019) (not e!40613))))

(assert (=> d!12465 (= res!34019 (and (bvsge (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000000) (bvslt (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (size!2012 (_keys!3693 newMap!16)))))))

(declare-fun lt!25665 () Unit!1621)

(declare-fun choose!41 (array!3723 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1444) Unit!1621)

(assert (=> d!12465 (= lt!25665 (choose!41 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) lt!25025 lt!25004))))

(assert (=> d!12465 (bvslt (size!2012 (_keys!3693 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!12465 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3693 newMap!16) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) lt!25025 lt!25004) lt!25665)))

(declare-fun b!61867 () Bool)

(assert (=> b!61867 (= e!40613 (arrayNoDuplicates!0 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) lt!25025 lt!25004))))

(assert (= (and d!12465 res!34019) b!61867))

(assert (=> d!12465 m!52977))

(declare-fun m!55183 () Bool)

(assert (=> d!12465 m!55183))

(assert (=> b!61867 m!53309))

(assert (=> b!61867 m!53307))

(assert (=> d!11903 d!12465))

(assert (=> d!11903 d!12165))

(assert (=> d!11903 d!11929))

(assert (=> d!11903 d!11885))

(assert (=> d!11903 d!11899))

(declare-fun bm!4785 () Bool)

(declare-fun call!4794 () ListLongMap!1361)

(declare-fun call!4793 () ListLongMap!1361)

(assert (=> bm!4785 (= call!4794 call!4793)))

(declare-fun b!61868 () Bool)

(declare-fun e!40619 () Unit!1621)

(declare-fun lt!25666 () Unit!1621)

(assert (=> b!61868 (= e!40619 lt!25666)))

(declare-fun lt!25673 () ListLongMap!1361)

(assert (=> b!61868 (= lt!25673 (getCurrentListMapNoExtraKeys!45 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25671 () (_ BitVec 64))

(assert (=> b!61868 (= lt!25671 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25667 () (_ BitVec 64))

(assert (=> b!61868 (= lt!25667 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!25680 () Unit!1621)

(assert (=> b!61868 (= lt!25680 (addStillContains!43 lt!25673 lt!25671 (zeroValue!1980 newMap!16) lt!25667))))

(assert (=> b!61868 (contains!687 (+!82 lt!25673 (tuple2!2049 lt!25671 (zeroValue!1980 newMap!16))) lt!25667)))

(declare-fun lt!25686 () Unit!1621)

(assert (=> b!61868 (= lt!25686 lt!25680)))

(declare-fun lt!25677 () ListLongMap!1361)

(assert (=> b!61868 (= lt!25677 (getCurrentListMapNoExtraKeys!45 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25681 () (_ BitVec 64))

(assert (=> b!61868 (= lt!25681 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25684 () (_ BitVec 64))

(assert (=> b!61868 (= lt!25684 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!25674 () Unit!1621)

(assert (=> b!61868 (= lt!25674 (addApplyDifferent!43 lt!25677 lt!25681 (minValue!1980 newMap!16) lt!25684))))

(assert (=> b!61868 (= (apply!67 (+!82 lt!25677 (tuple2!2049 lt!25681 (minValue!1980 newMap!16))) lt!25684) (apply!67 lt!25677 lt!25684))))

(declare-fun lt!25675 () Unit!1621)

(assert (=> b!61868 (= lt!25675 lt!25674)))

(declare-fun lt!25682 () ListLongMap!1361)

(assert (=> b!61868 (= lt!25682 (getCurrentListMapNoExtraKeys!45 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25672 () (_ BitVec 64))

(assert (=> b!61868 (= lt!25672 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25687 () (_ BitVec 64))

(assert (=> b!61868 (= lt!25687 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!25670 () Unit!1621)

(assert (=> b!61868 (= lt!25670 (addApplyDifferent!43 lt!25682 lt!25672 (zeroValue!1980 newMap!16) lt!25687))))

(assert (=> b!61868 (= (apply!67 (+!82 lt!25682 (tuple2!2049 lt!25672 (zeroValue!1980 newMap!16))) lt!25687) (apply!67 lt!25682 lt!25687))))

(declare-fun lt!25669 () Unit!1621)

(assert (=> b!61868 (= lt!25669 lt!25670)))

(declare-fun lt!25685 () ListLongMap!1361)

(assert (=> b!61868 (= lt!25685 (getCurrentListMapNoExtraKeys!45 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25678 () (_ BitVec 64))

(assert (=> b!61868 (= lt!25678 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25676 () (_ BitVec 64))

(assert (=> b!61868 (= lt!25676 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!61868 (= lt!25666 (addApplyDifferent!43 lt!25685 lt!25678 (minValue!1980 newMap!16) lt!25676))))

(assert (=> b!61868 (= (apply!67 (+!82 lt!25685 (tuple2!2049 lt!25678 (minValue!1980 newMap!16))) lt!25676) (apply!67 lt!25685 lt!25676))))

(declare-fun b!61869 () Bool)

(declare-fun e!40622 () Bool)

(declare-fun lt!25683 () ListLongMap!1361)

(assert (=> b!61869 (= e!40622 (= (apply!67 lt!25683 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1980 newMap!16)))))

(declare-fun b!61870 () Bool)

(declare-fun e!40624 () Bool)

(declare-fun call!4791 () Bool)

(assert (=> b!61870 (= e!40624 (not call!4791))))

(declare-fun bm!4786 () Bool)

(assert (=> bm!4786 (= call!4793 (getCurrentListMapNoExtraKeys!45 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun b!61871 () Bool)

(declare-fun e!40626 () Bool)

(assert (=> b!61871 (= e!40626 (= (apply!67 lt!25683 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1980 newMap!16)))))

(declare-fun b!61872 () Bool)

(declare-fun e!40621 () ListLongMap!1361)

(declare-fun e!40620 () ListLongMap!1361)

(assert (=> b!61872 (= e!40621 e!40620)))

(declare-fun c!8205 () Bool)

(assert (=> b!61872 (= c!8205 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4787 () Bool)

(declare-fun call!4789 () ListLongMap!1361)

(assert (=> bm!4787 (= call!4789 call!4794)))

(declare-fun b!61873 () Bool)

(declare-fun res!34023 () Bool)

(declare-fun e!40615 () Bool)

(assert (=> b!61873 (=> (not res!34023) (not e!40615))))

(declare-fun e!40617 () Bool)

(assert (=> b!61873 (= res!34023 e!40617)))

(declare-fun res!34022 () Bool)

(assert (=> b!61873 (=> res!34022 e!40617)))

(declare-fun e!40623 () Bool)

(assert (=> b!61873 (= res!34022 (not e!40623))))

(declare-fun res!34028 () Bool)

(assert (=> b!61873 (=> (not res!34028) (not e!40623))))

(assert (=> b!61873 (= res!34028 (bvslt #b00000000000000000000000000000000 (size!2012 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))))

(declare-fun b!61874 () Bool)

(declare-fun e!40614 () Bool)

(assert (=> b!61874 (= e!40617 e!40614)))

(declare-fun res!34024 () Bool)

(assert (=> b!61874 (=> (not res!34024) (not e!40614))))

(assert (=> b!61874 (= res!34024 (contains!687 lt!25683 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!61874 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))))

(declare-fun bm!4788 () Bool)

(assert (=> bm!4788 (= call!4791 (contains!687 lt!25683 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61875 () Bool)

(declare-fun res!34025 () Bool)

(assert (=> b!61875 (=> (not res!34025) (not e!40615))))

(declare-fun e!40625 () Bool)

(assert (=> b!61875 (= res!34025 e!40625)))

(declare-fun c!8206 () Bool)

(assert (=> b!61875 (= c!8206 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!61876 () Bool)

(assert (=> b!61876 (= e!40623 (validKeyInArray!0 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun c!8203 () Bool)

(declare-fun bm!4789 () Bool)

(declare-fun call!4792 () ListLongMap!1361)

(assert (=> bm!4789 (= call!4792 (+!82 (ite c!8203 call!4793 (ite c!8205 call!4794 call!4789)) (ite (or c!8203 c!8205) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(declare-fun b!61877 () Bool)

(assert (=> b!61877 (= e!40615 e!40624)))

(declare-fun c!8204 () Bool)

(assert (=> b!61877 (= c!8204 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!61878 () Bool)

(declare-fun Unit!1681 () Unit!1621)

(assert (=> b!61878 (= e!40619 Unit!1681)))

(declare-fun b!61879 () Bool)

(declare-fun call!4790 () ListLongMap!1361)

(assert (=> b!61879 (= e!40620 call!4790)))

(declare-fun b!61880 () Bool)

(declare-fun e!40618 () ListLongMap!1361)

(assert (=> b!61880 (= e!40618 call!4789)))

(declare-fun b!61881 () Bool)

(assert (=> b!61881 (= e!40621 (+!82 call!4792 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))

(declare-fun e!40616 () Bool)

(declare-fun b!61882 () Bool)

(assert (=> b!61882 (= e!40616 (validKeyInArray!0 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!61883 () Bool)

(declare-fun c!8202 () Bool)

(assert (=> b!61883 (= c!8202 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!61883 (= e!40620 e!40618)))

(declare-fun b!61884 () Bool)

(assert (=> b!61884 (= e!40624 e!40626)))

(declare-fun res!34026 () Bool)

(assert (=> b!61884 (= res!34026 call!4791)))

(assert (=> b!61884 (=> (not res!34026) (not e!40626))))

(declare-fun d!12467 () Bool)

(assert (=> d!12467 e!40615))

(declare-fun res!34027 () Bool)

(assert (=> d!12467 (=> (not res!34027) (not e!40615))))

(assert (=> d!12467 (= res!34027 (or (bvsge #b00000000000000000000000000000000 (size!2012 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))))))

(declare-fun lt!25668 () ListLongMap!1361)

(assert (=> d!12467 (= lt!25683 lt!25668)))

(declare-fun lt!25679 () Unit!1621)

(assert (=> d!12467 (= lt!25679 e!40619)))

(declare-fun c!8201 () Bool)

(assert (=> d!12467 (= c!8201 e!40616)))

(declare-fun res!34020 () Bool)

(assert (=> d!12467 (=> (not res!34020) (not e!40616))))

(assert (=> d!12467 (= res!34020 (bvslt #b00000000000000000000000000000000 (size!2012 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))))

(assert (=> d!12467 (= lt!25668 e!40621)))

(assert (=> d!12467 (= c!8203 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!12467 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12467 (= (getCurrentListMap!392 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25683)))

(declare-fun b!61885 () Bool)

(declare-fun call!4788 () Bool)

(assert (=> b!61885 (= e!40625 (not call!4788))))

(declare-fun b!61886 () Bool)

(assert (=> b!61886 (= e!40614 (= (apply!67 lt!25683 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!61886 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))))))))

(assert (=> b!61886 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))))

(declare-fun b!61887 () Bool)

(assert (=> b!61887 (= e!40618 call!4790)))

(declare-fun b!61888 () Bool)

(assert (=> b!61888 (= e!40625 e!40622)))

(declare-fun res!34021 () Bool)

(assert (=> b!61888 (= res!34021 call!4788)))

(assert (=> b!61888 (=> (not res!34021) (not e!40622))))

(declare-fun bm!4790 () Bool)

(assert (=> bm!4790 (= call!4788 (contains!687 lt!25683 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4791 () Bool)

(assert (=> bm!4791 (= call!4790 call!4792)))

(assert (= (and d!12467 c!8203) b!61881))

(assert (= (and d!12467 (not c!8203)) b!61872))

(assert (= (and b!61872 c!8205) b!61879))

(assert (= (and b!61872 (not c!8205)) b!61883))

(assert (= (and b!61883 c!8202) b!61887))

(assert (= (and b!61883 (not c!8202)) b!61880))

(assert (= (or b!61887 b!61880) bm!4787))

(assert (= (or b!61879 bm!4787) bm!4785))

(assert (= (or b!61879 b!61887) bm!4791))

(assert (= (or b!61881 bm!4785) bm!4786))

(assert (= (or b!61881 bm!4791) bm!4789))

(assert (= (and d!12467 res!34020) b!61882))

(assert (= (and d!12467 c!8201) b!61868))

(assert (= (and d!12467 (not c!8201)) b!61878))

(assert (= (and d!12467 res!34027) b!61873))

(assert (= (and b!61873 res!34028) b!61876))

(assert (= (and b!61873 (not res!34022)) b!61874))

(assert (= (and b!61874 res!34024) b!61886))

(assert (= (and b!61873 res!34023) b!61875))

(assert (= (and b!61875 c!8206) b!61888))

(assert (= (and b!61875 (not c!8206)) b!61885))

(assert (= (and b!61888 res!34021) b!61869))

(assert (= (or b!61888 b!61885) bm!4790))

(assert (= (and b!61875 res!34025) b!61877))

(assert (= (and b!61877 c!8204) b!61884))

(assert (= (and b!61877 (not c!8204)) b!61870))

(assert (= (and b!61884 res!34026) b!61871))

(assert (= (or b!61884 b!61870) bm!4788))

(declare-fun b_lambda!2733 () Bool)

(assert (=> (not b_lambda!2733) (not b!61886)))

(assert (=> b!61886 t!4820))

(declare-fun b_and!3773 () Bool)

(assert (= b_and!3769 (and (=> t!4820 result!2427) b_and!3773)))

(assert (=> b!61886 t!4822))

(declare-fun b_and!3775 () Bool)

(assert (= b_and!3771 (and (=> t!4822 result!2429) b_and!3775)))

(declare-fun m!55185 () Bool)

(assert (=> b!61876 m!55185))

(assert (=> b!61876 m!55185))

(declare-fun m!55187 () Bool)

(assert (=> b!61876 m!55187))

(declare-fun m!55189 () Bool)

(assert (=> b!61886 m!55189))

(assert (=> b!61886 m!53391))

(declare-fun m!55191 () Bool)

(assert (=> b!61886 m!55191))

(assert (=> b!61886 m!55189))

(assert (=> b!61886 m!55185))

(declare-fun m!55193 () Bool)

(assert (=> b!61886 m!55193))

(assert (=> b!61886 m!55185))

(assert (=> b!61886 m!53391))

(declare-fun m!55195 () Bool)

(assert (=> b!61868 m!55195))

(declare-fun m!55197 () Bool)

(assert (=> b!61868 m!55197))

(declare-fun m!55199 () Bool)

(assert (=> b!61868 m!55199))

(declare-fun m!55201 () Bool)

(assert (=> b!61868 m!55201))

(declare-fun m!55203 () Bool)

(assert (=> b!61868 m!55203))

(declare-fun m!55205 () Bool)

(assert (=> b!61868 m!55205))

(assert (=> b!61868 m!55201))

(declare-fun m!55207 () Bool)

(assert (=> b!61868 m!55207))

(declare-fun m!55209 () Bool)

(assert (=> b!61868 m!55209))

(declare-fun m!55211 () Bool)

(assert (=> b!61868 m!55211))

(declare-fun m!55213 () Bool)

(assert (=> b!61868 m!55213))

(assert (=> b!61868 m!55185))

(assert (=> b!61868 m!55203))

(assert (=> b!61868 m!55197))

(declare-fun m!55215 () Bool)

(assert (=> b!61868 m!55215))

(declare-fun m!55217 () Bool)

(assert (=> b!61868 m!55217))

(declare-fun m!55219 () Bool)

(assert (=> b!61868 m!55219))

(assert (=> b!61868 m!55217))

(declare-fun m!55221 () Bool)

(assert (=> b!61868 m!55221))

(declare-fun m!55223 () Bool)

(assert (=> b!61868 m!55223))

(declare-fun m!55225 () Bool)

(assert (=> b!61868 m!55225))

(declare-fun m!55227 () Bool)

(assert (=> b!61871 m!55227))

(assert (=> bm!4786 m!55199))

(declare-fun m!55229 () Bool)

(assert (=> bm!4790 m!55229))

(assert (=> b!61882 m!55185))

(assert (=> b!61882 m!55185))

(assert (=> b!61882 m!55187))

(declare-fun m!55231 () Bool)

(assert (=> b!61881 m!55231))

(declare-fun m!55233 () Bool)

(assert (=> b!61869 m!55233))

(assert (=> d!12467 m!53365))

(declare-fun m!55235 () Bool)

(assert (=> bm!4788 m!55235))

(assert (=> b!61874 m!55185))

(assert (=> b!61874 m!55185))

(declare-fun m!55237 () Bool)

(assert (=> b!61874 m!55237))

(declare-fun m!55239 () Bool)

(assert (=> bm!4789 m!55239))

(assert (=> d!11903 d!12467))

(declare-fun b!61889 () Bool)

(declare-fun e!40628 () (_ BitVec 32))

(assert (=> b!61889 (= e!40628 #b00000000000000000000000000000000)))

(declare-fun b!61891 () Bool)

(declare-fun e!40627 () (_ BitVec 32))

(declare-fun call!4795 () (_ BitVec 32))

(assert (=> b!61891 (= e!40627 call!4795)))

(declare-fun bm!4792 () Bool)

(assert (=> bm!4792 (= call!4795 (arrayCountValidKeys!0 lt!25003 (bvadd (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000001) (bvadd (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000001)))))

(declare-fun b!61892 () Bool)

(assert (=> b!61892 (= e!40628 e!40627)))

(declare-fun c!8207 () Bool)

(assert (=> b!61892 (= c!8207 (validKeyInArray!0 (select (arr!1780 lt!25003) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)))))))

(declare-fun d!12469 () Bool)

(declare-fun lt!25688 () (_ BitVec 32))

(assert (=> d!12469 (and (bvsge lt!25688 #b00000000000000000000000000000000) (bvsle lt!25688 (bvsub (size!2012 lt!25003) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)))))))

(assert (=> d!12469 (= lt!25688 e!40628)))

(declare-fun c!8208 () Bool)

(assert (=> d!12469 (= c!8208 (bvsge (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (bvadd (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000001)))))

(assert (=> d!12469 (and (bvsle (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (bvadd (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000001)) (bvsge (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000001) (size!2012 lt!25003)))))

(assert (=> d!12469 (= (arrayCountValidKeys!0 lt!25003 (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (bvadd (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000001)) lt!25688)))

(declare-fun b!61890 () Bool)

(assert (=> b!61890 (= e!40627 (bvadd #b00000000000000000000000000000001 call!4795))))

(assert (= (and d!12469 c!8208) b!61889))

(assert (= (and d!12469 (not c!8208)) b!61892))

(assert (= (and b!61892 c!8207) b!61890))

(assert (= (and b!61892 (not c!8207)) b!61891))

(assert (= (or b!61890 b!61891) bm!4792))

(declare-fun m!55241 () Bool)

(assert (=> bm!4792 m!55241))

(declare-fun m!55243 () Bool)

(assert (=> b!61892 m!55243))

(assert (=> b!61892 m!55243))

(declare-fun m!55245 () Bool)

(assert (=> b!61892 m!55245))

(assert (=> d!11903 d!12469))

(declare-fun d!12471 () Bool)

(assert (=> d!12471 (arrayContainsKey!0 lt!25027 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!25689 () Unit!1621)

(assert (=> d!12471 (= lt!25689 (choose!13 lt!25027 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))))))

(assert (=> d!12471 (bvsge (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000000)))

(assert (=> d!12471 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!25027 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))) lt!25689)))

(declare-fun bs!2691 () Bool)

(assert (= bs!2691 d!12471))

(assert (=> bs!2691 m!52977))

(assert (=> bs!2691 m!53297))

(assert (=> bs!2691 m!52977))

(declare-fun m!55247 () Bool)

(assert (=> bs!2691 m!55247))

(assert (=> d!11903 d!12471))

(declare-fun b!61893 () Bool)

(declare-fun e!40629 () Bool)

(declare-fun e!40631 () Bool)

(assert (=> b!61893 (= e!40629 e!40631)))

(declare-fun lt!25691 () (_ BitVec 64))

(assert (=> b!61893 (= lt!25691 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!25690 () Unit!1621)

(assert (=> b!61893 (= lt!25690 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) lt!25691 #b00000000000000000000000000000000))))

(assert (=> b!61893 (arrayContainsKey!0 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) lt!25691 #b00000000000000000000000000000000)))

(declare-fun lt!25692 () Unit!1621)

(assert (=> b!61893 (= lt!25692 lt!25690)))

(declare-fun res!34030 () Bool)

(assert (=> b!61893 (= res!34030 (= (seekEntryOrOpen!0 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000) (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (mask!5961 newMap!16)) (Found!231 #b00000000000000000000000000000000)))))

(assert (=> b!61893 (=> (not res!34030) (not e!40631))))

(declare-fun call!4796 () Bool)

(declare-fun bm!4793 () Bool)

(assert (=> bm!4793 (= call!4796 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (mask!5961 newMap!16)))))

(declare-fun b!61894 () Bool)

(assert (=> b!61894 (= e!40631 call!4796)))

(declare-fun b!61895 () Bool)

(assert (=> b!61895 (= e!40629 call!4796)))

(declare-fun d!12473 () Bool)

(declare-fun res!34029 () Bool)

(declare-fun e!40630 () Bool)

(assert (=> d!12473 (=> res!34029 e!40630)))

(assert (=> d!12473 (= res!34029 (bvsge #b00000000000000000000000000000000 (size!2012 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))))

(assert (=> d!12473 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (mask!5961 newMap!16)) e!40630)))

(declare-fun b!61896 () Bool)

(assert (=> b!61896 (= e!40630 e!40629)))

(declare-fun c!8209 () Bool)

(assert (=> b!61896 (= c!8209 (validKeyInArray!0 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!12473 (not res!34029)) b!61896))

(assert (= (and b!61896 c!8209) b!61893))

(assert (= (and b!61896 (not c!8209)) b!61895))

(assert (= (and b!61893 res!34030) b!61894))

(assert (= (or b!61894 b!61895) bm!4793))

(assert (=> b!61893 m!55185))

(declare-fun m!55249 () Bool)

(assert (=> b!61893 m!55249))

(declare-fun m!55251 () Bool)

(assert (=> b!61893 m!55251))

(assert (=> b!61893 m!55185))

(declare-fun m!55253 () Bool)

(assert (=> b!61893 m!55253))

(declare-fun m!55255 () Bool)

(assert (=> bm!4793 m!55255))

(assert (=> b!61896 m!55185))

(assert (=> b!61896 m!55185))

(assert (=> b!61896 m!55187))

(assert (=> d!11903 d!12473))

(declare-fun d!12475 () Bool)

(declare-fun e!40634 () Bool)

(assert (=> d!12475 e!40634))

(declare-fun res!34033 () Bool)

(assert (=> d!12475 (=> (not res!34033) (not e!40634))))

(assert (=> d!12475 (= res!34033 (and (bvsge (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000000) (bvslt (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (size!2012 (_keys!3693 newMap!16))) (bvslt (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (size!2013 (_values!2049 newMap!16)))))))

(declare-fun lt!25695 () Unit!1621)

(declare-fun choose!335 (array!3723 array!3725 (_ BitVec 32) (_ BitVec 32) V!2857 V!2857 (_ BitVec 32) (_ BitVec 64) V!2857 Int) Unit!1621)

(assert (=> d!12475 (= lt!25695 (choose!335 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)))))

(assert (=> d!12475 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12475 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!6 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2066 newMap!16)) lt!25695)))

(declare-fun b!61899 () Bool)

(assert (=> b!61899 (= e!40634 (= (+!82 (getCurrentListMap!392 (_keys!3693 newMap!16) (_values!2049 newMap!16) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (tuple2!2049 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!392 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (array!3726 (store (arr!1781 (_values!2049 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (ValueCellFull!860 (get!1083 (select (arr!1781 (_values!2049 (v!2397 (underlying!227 thiss!992)))) from!355) (dynLambda!311 (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2013 (_values!2049 newMap!16))) (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16))))))

(assert (= (and d!12475 res!34033) b!61899))

(assert (=> d!12475 m!52977))

(assert (=> d!12475 m!52987))

(declare-fun m!55257 () Bool)

(assert (=> d!12475 m!55257))

(assert (=> d!12475 m!53365))

(assert (=> b!61899 m!53109))

(assert (=> b!61899 m!53299))

(assert (=> b!61899 m!53109))

(assert (=> b!61899 m!53309))

(assert (=> b!61899 m!53313))

(assert (=> b!61899 m!53301))

(assert (=> d!11903 d!12475))

(assert (=> d!11903 d!11989))

(declare-fun d!12477 () Bool)

(declare-fun e!40635 () Bool)

(assert (=> d!12477 e!40635))

(declare-fun res!34034 () Bool)

(assert (=> d!12477 (=> (not res!34034) (not e!40635))))

(assert (=> d!12477 (= res!34034 (and (bvsge (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000000) (bvslt (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (size!2012 lt!25005))))))

(declare-fun lt!25696 () Unit!1621)

(assert (=> d!12477 (= lt!25696 (choose!323 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (defaultEntry!2066 newMap!16)))))

(assert (=> d!12477 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12477 (= (lemmaValidKeyInArrayIsInListMap!75 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (defaultEntry!2066 newMap!16)) lt!25696)))

(declare-fun b!61900 () Bool)

(assert (=> b!61900 (= e!40635 (contains!687 (getCurrentListMap!392 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) (select (arr!1780 lt!25005) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)))))))

(assert (= (and d!12477 res!34034) b!61900))

(declare-fun m!55259 () Bool)

(assert (=> d!12477 m!55259))

(assert (=> d!12477 m!53365))

(assert (=> b!61900 m!53293))

(declare-fun m!55261 () Bool)

(assert (=> b!61900 m!55261))

(assert (=> b!61900 m!53293))

(assert (=> b!61900 m!55261))

(declare-fun m!55263 () Bool)

(assert (=> b!61900 m!55263))

(assert (=> d!11903 d!12477))

(declare-fun d!12479 () Bool)

(declare-fun res!34035 () Bool)

(declare-fun e!40636 () Bool)

(assert (=> d!12479 (=> res!34035 e!40636)))

(assert (=> d!12479 (= res!34035 (= (select (arr!1780 lt!25027) #b00000000000000000000000000000000) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!12479 (= (arrayContainsKey!0 lt!25027 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) #b00000000000000000000000000000000) e!40636)))

(declare-fun b!61901 () Bool)

(declare-fun e!40637 () Bool)

(assert (=> b!61901 (= e!40636 e!40637)))

(declare-fun res!34036 () Bool)

(assert (=> b!61901 (=> (not res!34036) (not e!40637))))

(assert (=> b!61901 (= res!34036 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 lt!25027)))))

(declare-fun b!61902 () Bool)

(assert (=> b!61902 (= e!40637 (arrayContainsKey!0 lt!25027 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!12479 (not res!34035)) b!61901))

(assert (= (and b!61901 res!34036) b!61902))

(declare-fun m!55265 () Bool)

(assert (=> d!12479 m!55265))

(assert (=> b!61902 m!52977))

(declare-fun m!55267 () Bool)

(assert (=> b!61902 m!55267))

(assert (=> d!11903 d!12479))

(declare-fun e!40640 () Bool)

(declare-fun b!61903 () Bool)

(assert (=> b!61903 (= e!40640 (contains!688 lt!25004 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) lt!25025)))))

(declare-fun d!12481 () Bool)

(declare-fun res!34037 () Bool)

(declare-fun e!40641 () Bool)

(assert (=> d!12481 (=> res!34037 e!40641)))

(assert (=> d!12481 (= res!34037 (bvsge lt!25025 (size!2012 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))))

(assert (=> d!12481 (= (arrayNoDuplicates!0 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) lt!25025 lt!25004) e!40641)))

(declare-fun b!61904 () Bool)

(declare-fun e!40638 () Bool)

(declare-fun call!4797 () Bool)

(assert (=> b!61904 (= e!40638 call!4797)))

(declare-fun bm!4794 () Bool)

(declare-fun c!8210 () Bool)

(assert (=> bm!4794 (= call!4797 (arrayNoDuplicates!0 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (bvadd lt!25025 #b00000000000000000000000000000001) (ite c!8210 (Cons!1440 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) lt!25025) lt!25004) lt!25004)))))

(declare-fun b!61905 () Bool)

(declare-fun e!40639 () Bool)

(assert (=> b!61905 (= e!40639 e!40638)))

(assert (=> b!61905 (= c!8210 (validKeyInArray!0 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) lt!25025)))))

(declare-fun b!61906 () Bool)

(assert (=> b!61906 (= e!40638 call!4797)))

(declare-fun b!61907 () Bool)

(assert (=> b!61907 (= e!40641 e!40639)))

(declare-fun res!34038 () Bool)

(assert (=> b!61907 (=> (not res!34038) (not e!40639))))

(assert (=> b!61907 (= res!34038 (not e!40640))))

(declare-fun res!34039 () Bool)

(assert (=> b!61907 (=> (not res!34039) (not e!40640))))

(assert (=> b!61907 (= res!34039 (validKeyInArray!0 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) lt!25025)))))

(assert (= (and d!12481 (not res!34037)) b!61907))

(assert (= (and b!61907 res!34039) b!61903))

(assert (= (and b!61907 res!34038) b!61905))

(assert (= (and b!61905 c!8210) b!61906))

(assert (= (and b!61905 (not c!8210)) b!61904))

(assert (= (or b!61906 b!61904) bm!4794))

(declare-fun m!55269 () Bool)

(assert (=> b!61903 m!55269))

(assert (=> b!61903 m!55269))

(declare-fun m!55271 () Bool)

(assert (=> b!61903 m!55271))

(assert (=> bm!4794 m!55269))

(declare-fun m!55273 () Bool)

(assert (=> bm!4794 m!55273))

(assert (=> b!61905 m!55269))

(assert (=> b!61905 m!55269))

(declare-fun m!55275 () Bool)

(assert (=> b!61905 m!55275))

(assert (=> b!61907 m!55269))

(assert (=> b!61907 m!55269))

(assert (=> b!61907 m!55275))

(assert (=> d!11903 d!12481))

(declare-fun bm!4795 () Bool)

(declare-fun call!4804 () ListLongMap!1361)

(declare-fun call!4803 () ListLongMap!1361)

(assert (=> bm!4795 (= call!4804 call!4803)))

(declare-fun b!61908 () Bool)

(declare-fun e!40647 () Unit!1621)

(declare-fun lt!25697 () Unit!1621)

(assert (=> b!61908 (= e!40647 lt!25697)))

(declare-fun lt!25704 () ListLongMap!1361)

(assert (=> b!61908 (= lt!25704 (getCurrentListMapNoExtraKeys!45 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25702 () (_ BitVec 64))

(assert (=> b!61908 (= lt!25702 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25698 () (_ BitVec 64))

(assert (=> b!61908 (= lt!25698 (select (arr!1780 lt!25005) #b00000000000000000000000000000000))))

(declare-fun lt!25711 () Unit!1621)

(assert (=> b!61908 (= lt!25711 (addStillContains!43 lt!25704 lt!25702 (zeroValue!1980 newMap!16) lt!25698))))

(assert (=> b!61908 (contains!687 (+!82 lt!25704 (tuple2!2049 lt!25702 (zeroValue!1980 newMap!16))) lt!25698)))

(declare-fun lt!25717 () Unit!1621)

(assert (=> b!61908 (= lt!25717 lt!25711)))

(declare-fun lt!25708 () ListLongMap!1361)

(assert (=> b!61908 (= lt!25708 (getCurrentListMapNoExtraKeys!45 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25712 () (_ BitVec 64))

(assert (=> b!61908 (= lt!25712 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25715 () (_ BitVec 64))

(assert (=> b!61908 (= lt!25715 (select (arr!1780 lt!25005) #b00000000000000000000000000000000))))

(declare-fun lt!25705 () Unit!1621)

(assert (=> b!61908 (= lt!25705 (addApplyDifferent!43 lt!25708 lt!25712 (minValue!1980 newMap!16) lt!25715))))

(assert (=> b!61908 (= (apply!67 (+!82 lt!25708 (tuple2!2049 lt!25712 (minValue!1980 newMap!16))) lt!25715) (apply!67 lt!25708 lt!25715))))

(declare-fun lt!25706 () Unit!1621)

(assert (=> b!61908 (= lt!25706 lt!25705)))

(declare-fun lt!25713 () ListLongMap!1361)

(assert (=> b!61908 (= lt!25713 (getCurrentListMapNoExtraKeys!45 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25703 () (_ BitVec 64))

(assert (=> b!61908 (= lt!25703 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25718 () (_ BitVec 64))

(assert (=> b!61908 (= lt!25718 (select (arr!1780 lt!25005) #b00000000000000000000000000000000))))

(declare-fun lt!25701 () Unit!1621)

(assert (=> b!61908 (= lt!25701 (addApplyDifferent!43 lt!25713 lt!25703 (zeroValue!1980 newMap!16) lt!25718))))

(assert (=> b!61908 (= (apply!67 (+!82 lt!25713 (tuple2!2049 lt!25703 (zeroValue!1980 newMap!16))) lt!25718) (apply!67 lt!25713 lt!25718))))

(declare-fun lt!25700 () Unit!1621)

(assert (=> b!61908 (= lt!25700 lt!25701)))

(declare-fun lt!25716 () ListLongMap!1361)

(assert (=> b!61908 (= lt!25716 (getCurrentListMapNoExtraKeys!45 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun lt!25709 () (_ BitVec 64))

(assert (=> b!61908 (= lt!25709 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!25707 () (_ BitVec 64))

(assert (=> b!61908 (= lt!25707 (select (arr!1780 lt!25005) #b00000000000000000000000000000000))))

(assert (=> b!61908 (= lt!25697 (addApplyDifferent!43 lt!25716 lt!25709 (minValue!1980 newMap!16) lt!25707))))

(assert (=> b!61908 (= (apply!67 (+!82 lt!25716 (tuple2!2049 lt!25709 (minValue!1980 newMap!16))) lt!25707) (apply!67 lt!25716 lt!25707))))

(declare-fun b!61909 () Bool)

(declare-fun e!40650 () Bool)

(declare-fun lt!25714 () ListLongMap!1361)

(assert (=> b!61909 (= e!40650 (= (apply!67 lt!25714 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!1980 newMap!16)))))

(declare-fun b!61910 () Bool)

(declare-fun e!40652 () Bool)

(declare-fun call!4801 () Bool)

(assert (=> b!61910 (= e!40652 (not call!4801))))

(declare-fun bm!4796 () Bool)

(assert (=> bm!4796 (= call!4803 (getCurrentListMapNoExtraKeys!45 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)))))

(declare-fun b!61911 () Bool)

(declare-fun e!40654 () Bool)

(assert (=> b!61911 (= e!40654 (= (apply!67 lt!25714 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!1980 newMap!16)))))

(declare-fun b!61912 () Bool)

(declare-fun e!40649 () ListLongMap!1361)

(declare-fun e!40648 () ListLongMap!1361)

(assert (=> b!61912 (= e!40649 e!40648)))

(declare-fun c!8215 () Bool)

(assert (=> b!61912 (= c!8215 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!4797 () Bool)

(declare-fun call!4799 () ListLongMap!1361)

(assert (=> bm!4797 (= call!4799 call!4804)))

(declare-fun b!61913 () Bool)

(declare-fun res!34043 () Bool)

(declare-fun e!40643 () Bool)

(assert (=> b!61913 (=> (not res!34043) (not e!40643))))

(declare-fun e!40645 () Bool)

(assert (=> b!61913 (= res!34043 e!40645)))

(declare-fun res!34042 () Bool)

(assert (=> b!61913 (=> res!34042 e!40645)))

(declare-fun e!40651 () Bool)

(assert (=> b!61913 (= res!34042 (not e!40651))))

(declare-fun res!34048 () Bool)

(assert (=> b!61913 (=> (not res!34048) (not e!40651))))

(assert (=> b!61913 (= res!34048 (bvslt #b00000000000000000000000000000000 (size!2012 lt!25005)))))

(declare-fun b!61914 () Bool)

(declare-fun e!40642 () Bool)

(assert (=> b!61914 (= e!40645 e!40642)))

(declare-fun res!34044 () Bool)

(assert (=> b!61914 (=> (not res!34044) (not e!40642))))

(assert (=> b!61914 (= res!34044 (contains!687 lt!25714 (select (arr!1780 lt!25005) #b00000000000000000000000000000000)))))

(assert (=> b!61914 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 lt!25005)))))

(declare-fun bm!4798 () Bool)

(assert (=> bm!4798 (= call!4801 (contains!687 lt!25714 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!61915 () Bool)

(declare-fun res!34045 () Bool)

(assert (=> b!61915 (=> (not res!34045) (not e!40643))))

(declare-fun e!40653 () Bool)

(assert (=> b!61915 (= res!34045 e!40653)))

(declare-fun c!8216 () Bool)

(assert (=> b!61915 (= c!8216 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!61916 () Bool)

(assert (=> b!61916 (= e!40651 (validKeyInArray!0 (select (arr!1780 lt!25005) #b00000000000000000000000000000000)))))

(declare-fun c!8213 () Bool)

(declare-fun bm!4799 () Bool)

(declare-fun call!4802 () ListLongMap!1361)

(assert (=> bm!4799 (= call!4802 (+!82 (ite c!8213 call!4803 (ite c!8215 call!4804 call!4799)) (ite (or c!8213 c!8215) (tuple2!2049 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!1980 newMap!16)) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(declare-fun b!61917 () Bool)

(assert (=> b!61917 (= e!40643 e!40652)))

(declare-fun c!8214 () Bool)

(assert (=> b!61917 (= c!8214 (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!61918 () Bool)

(declare-fun Unit!1682 () Unit!1621)

(assert (=> b!61918 (= e!40647 Unit!1682)))

(declare-fun b!61919 () Bool)

(declare-fun call!4800 () ListLongMap!1361)

(assert (=> b!61919 (= e!40648 call!4800)))

(declare-fun b!61920 () Bool)

(declare-fun e!40646 () ListLongMap!1361)

(assert (=> b!61920 (= e!40646 call!4799)))

(declare-fun b!61921 () Bool)

(assert (=> b!61921 (= e!40649 (+!82 call!4802 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))

(declare-fun b!61922 () Bool)

(declare-fun e!40644 () Bool)

(assert (=> b!61922 (= e!40644 (validKeyInArray!0 (select (arr!1780 lt!25005) #b00000000000000000000000000000000)))))

(declare-fun b!61923 () Bool)

(declare-fun c!8212 () Bool)

(assert (=> b!61923 (= c!8212 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!61923 (= e!40648 e!40646)))

(declare-fun b!61924 () Bool)

(assert (=> b!61924 (= e!40652 e!40654)))

(declare-fun res!34046 () Bool)

(assert (=> b!61924 (= res!34046 call!4801)))

(assert (=> b!61924 (=> (not res!34046) (not e!40654))))

(declare-fun d!12483 () Bool)

(assert (=> d!12483 e!40643))

(declare-fun res!34047 () Bool)

(assert (=> d!12483 (=> (not res!34047) (not e!40643))))

(assert (=> d!12483 (= res!34047 (or (bvsge #b00000000000000000000000000000000 (size!2012 lt!25005)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 lt!25005)))))))

(declare-fun lt!25699 () ListLongMap!1361)

(assert (=> d!12483 (= lt!25714 lt!25699)))

(declare-fun lt!25710 () Unit!1621)

(assert (=> d!12483 (= lt!25710 e!40647)))

(declare-fun c!8211 () Bool)

(assert (=> d!12483 (= c!8211 e!40644)))

(declare-fun res!34040 () Bool)

(assert (=> d!12483 (=> (not res!34040) (not e!40644))))

(assert (=> d!12483 (= res!34040 (bvslt #b00000000000000000000000000000000 (size!2012 lt!25005)))))

(assert (=> d!12483 (= lt!25699 e!40649)))

(assert (=> d!12483 (= c!8213 (and (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!1949 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!12483 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12483 (= (getCurrentListMap!392 lt!25005 lt!25011 (mask!5961 newMap!16) (extraKeys!1949 newMap!16) (zeroValue!1980 newMap!16) (minValue!1980 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2066 newMap!16)) lt!25714)))

(declare-fun b!61925 () Bool)

(declare-fun call!4798 () Bool)

(assert (=> b!61925 (= e!40653 (not call!4798))))

(declare-fun b!61926 () Bool)

(assert (=> b!61926 (= e!40642 (= (apply!67 lt!25714 (select (arr!1780 lt!25005) #b00000000000000000000000000000000)) (get!1083 (select (arr!1781 lt!25011) #b00000000000000000000000000000000) (dynLambda!311 (defaultEntry!2066 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!61926 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2013 lt!25011)))))

(assert (=> b!61926 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2012 lt!25005)))))

(declare-fun b!61927 () Bool)

(assert (=> b!61927 (= e!40646 call!4800)))

(declare-fun b!61928 () Bool)

(assert (=> b!61928 (= e!40653 e!40650)))

(declare-fun res!34041 () Bool)

(assert (=> b!61928 (= res!34041 call!4798)))

(assert (=> b!61928 (=> (not res!34041) (not e!40650))))

(declare-fun bm!4800 () Bool)

(assert (=> bm!4800 (= call!4798 (contains!687 lt!25714 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!4801 () Bool)

(assert (=> bm!4801 (= call!4800 call!4802)))

(assert (= (and d!12483 c!8213) b!61921))

(assert (= (and d!12483 (not c!8213)) b!61912))

(assert (= (and b!61912 c!8215) b!61919))

(assert (= (and b!61912 (not c!8215)) b!61923))

(assert (= (and b!61923 c!8212) b!61927))

(assert (= (and b!61923 (not c!8212)) b!61920))

(assert (= (or b!61927 b!61920) bm!4797))

(assert (= (or b!61919 bm!4797) bm!4795))

(assert (= (or b!61919 b!61927) bm!4801))

(assert (= (or b!61921 bm!4795) bm!4796))

(assert (= (or b!61921 bm!4801) bm!4799))

(assert (= (and d!12483 res!34040) b!61922))

(assert (= (and d!12483 c!8211) b!61908))

(assert (= (and d!12483 (not c!8211)) b!61918))

(assert (= (and d!12483 res!34047) b!61913))

(assert (= (and b!61913 res!34048) b!61916))

(assert (= (and b!61913 (not res!34042)) b!61914))

(assert (= (and b!61914 res!34044) b!61926))

(assert (= (and b!61913 res!34043) b!61915))

(assert (= (and b!61915 c!8216) b!61928))

(assert (= (and b!61915 (not c!8216)) b!61925))

(assert (= (and b!61928 res!34041) b!61909))

(assert (= (or b!61928 b!61925) bm!4800))

(assert (= (and b!61915 res!34045) b!61917))

(assert (= (and b!61917 c!8214) b!61924))

(assert (= (and b!61917 (not c!8214)) b!61910))

(assert (= (and b!61924 res!34046) b!61911))

(assert (= (or b!61924 b!61910) bm!4798))

(declare-fun b_lambda!2735 () Bool)

(assert (=> (not b_lambda!2735) (not b!61926)))

(assert (=> b!61926 t!4820))

(declare-fun b_and!3777 () Bool)

(assert (= b_and!3773 (and (=> t!4820 result!2427) b_and!3777)))

(assert (=> b!61926 t!4822))

(declare-fun b_and!3779 () Bool)

(assert (= b_and!3775 (and (=> t!4822 result!2429) b_and!3779)))

(declare-fun m!55277 () Bool)

(assert (=> b!61916 m!55277))

(assert (=> b!61916 m!55277))

(declare-fun m!55279 () Bool)

(assert (=> b!61916 m!55279))

(declare-fun m!55281 () Bool)

(assert (=> b!61926 m!55281))

(assert (=> b!61926 m!53391))

(declare-fun m!55283 () Bool)

(assert (=> b!61926 m!55283))

(assert (=> b!61926 m!55281))

(assert (=> b!61926 m!55277))

(declare-fun m!55285 () Bool)

(assert (=> b!61926 m!55285))

(assert (=> b!61926 m!55277))

(assert (=> b!61926 m!53391))

(declare-fun m!55287 () Bool)

(assert (=> b!61908 m!55287))

(declare-fun m!55289 () Bool)

(assert (=> b!61908 m!55289))

(declare-fun m!55291 () Bool)

(assert (=> b!61908 m!55291))

(declare-fun m!55293 () Bool)

(assert (=> b!61908 m!55293))

(declare-fun m!55295 () Bool)

(assert (=> b!61908 m!55295))

(declare-fun m!55297 () Bool)

(assert (=> b!61908 m!55297))

(assert (=> b!61908 m!55293))

(declare-fun m!55299 () Bool)

(assert (=> b!61908 m!55299))

(declare-fun m!55301 () Bool)

(assert (=> b!61908 m!55301))

(declare-fun m!55303 () Bool)

(assert (=> b!61908 m!55303))

(declare-fun m!55305 () Bool)

(assert (=> b!61908 m!55305))

(assert (=> b!61908 m!55277))

(assert (=> b!61908 m!55295))

(assert (=> b!61908 m!55289))

(declare-fun m!55307 () Bool)

(assert (=> b!61908 m!55307))

(declare-fun m!55309 () Bool)

(assert (=> b!61908 m!55309))

(declare-fun m!55311 () Bool)

(assert (=> b!61908 m!55311))

(assert (=> b!61908 m!55309))

(declare-fun m!55313 () Bool)

(assert (=> b!61908 m!55313))

(declare-fun m!55315 () Bool)

(assert (=> b!61908 m!55315))

(declare-fun m!55317 () Bool)

(assert (=> b!61908 m!55317))

(declare-fun m!55319 () Bool)

(assert (=> b!61911 m!55319))

(assert (=> bm!4796 m!55291))

(declare-fun m!55321 () Bool)

(assert (=> bm!4800 m!55321))

(assert (=> b!61922 m!55277))

(assert (=> b!61922 m!55277))

(assert (=> b!61922 m!55279))

(declare-fun m!55323 () Bool)

(assert (=> b!61921 m!55323))

(declare-fun m!55325 () Bool)

(assert (=> b!61909 m!55325))

(assert (=> d!12483 m!53365))

(declare-fun m!55327 () Bool)

(assert (=> bm!4798 m!55327))

(assert (=> b!61914 m!55277))

(assert (=> b!61914 m!55277))

(declare-fun m!55329 () Bool)

(assert (=> b!61914 m!55329))

(declare-fun m!55331 () Bool)

(assert (=> bm!4799 m!55331))

(assert (=> d!11903 d!12483))

(declare-fun b!61929 () Bool)

(declare-fun e!40656 () (_ BitVec 32))

(assert (=> b!61929 (= e!40656 #b00000000000000000000000000000000)))

(declare-fun b!61931 () Bool)

(declare-fun e!40655 () (_ BitVec 32))

(declare-fun call!4805 () (_ BitVec 32))

(assert (=> b!61931 (= e!40655 call!4805)))

(declare-fun bm!4802 () Bool)

(assert (=> bm!4802 (= call!4805 (arrayCountValidKeys!0 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2012 (_keys!3693 newMap!16))))))

(declare-fun b!61932 () Bool)

(assert (=> b!61932 (= e!40656 e!40655)))

(declare-fun c!8217 () Bool)

(assert (=> b!61932 (= c!8217 (validKeyInArray!0 (select (arr!1780 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!12485 () Bool)

(declare-fun lt!25719 () (_ BitVec 32))

(assert (=> d!12485 (and (bvsge lt!25719 #b00000000000000000000000000000000) (bvsle lt!25719 (bvsub (size!2012 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!12485 (= lt!25719 e!40656)))

(declare-fun c!8218 () Bool)

(assert (=> d!12485 (= c!8218 (bvsge #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))))))

(assert (=> d!12485 (and (bvsle #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2012 (_keys!3693 newMap!16)) (size!2012 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))))))))

(assert (=> d!12485 (= (arrayCountValidKeys!0 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) lt!25719)))

(declare-fun b!61930 () Bool)

(assert (=> b!61930 (= e!40655 (bvadd #b00000000000000000000000000000001 call!4805))))

(assert (= (and d!12485 c!8218) b!61929))

(assert (= (and d!12485 (not c!8218)) b!61932))

(assert (= (and b!61932 c!8217) b!61930))

(assert (= (and b!61932 (not c!8217)) b!61931))

(assert (= (or b!61930 b!61931) bm!4802))

(declare-fun m!55333 () Bool)

(assert (=> bm!4802 m!55333))

(assert (=> b!61932 m!55185))

(assert (=> b!61932 m!55185))

(assert (=> b!61932 m!55187))

(assert (=> d!11903 d!12485))

(declare-fun b!61943 () Bool)

(declare-fun e!40662 () Bool)

(assert (=> b!61943 (= e!40662 (bvslt (size!2012 (_keys!3693 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!61942 () Bool)

(declare-fun res!34060 () Bool)

(assert (=> b!61942 (=> (not res!34060) (not e!40662))))

(assert (=> b!61942 (= res!34060 (validKeyInArray!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(declare-fun d!12487 () Bool)

(declare-fun e!40661 () Bool)

(assert (=> d!12487 e!40661))

(declare-fun res!34059 () Bool)

(assert (=> d!12487 (=> (not res!34059) (not e!40661))))

(assert (=> d!12487 (= res!34059 (and (bvsge (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000000) (bvslt (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (size!2012 (_keys!3693 newMap!16)))))))

(declare-fun lt!25722 () Unit!1621)

(declare-fun choose!1 (array!3723 (_ BitVec 32) (_ BitVec 64)) Unit!1621)

(assert (=> d!12487 (= lt!25722 (choose!1 (_keys!3693 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)))))

(assert (=> d!12487 e!40662))

(declare-fun res!34057 () Bool)

(assert (=> d!12487 (=> (not res!34057) (not e!40662))))

(assert (=> d!12487 (= res!34057 (and (bvsge (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000000) (bvslt (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (size!2012 (_keys!3693 newMap!16)))))))

(assert (=> d!12487 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3693 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) lt!25722)))

(declare-fun b!61941 () Bool)

(declare-fun res!34058 () Bool)

(assert (=> b!61941 (=> (not res!34058) (not e!40662))))

(assert (=> b!61941 (= res!34058 (not (validKeyInArray!0 (select (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))))))))

(declare-fun b!61944 () Bool)

(assert (=> b!61944 (= e!40661 (= (arrayCountValidKeys!0 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3693 newMap!16) #b00000000000000000000000000000000 (size!2012 (_keys!3693 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!12487 res!34057) b!61941))

(assert (= (and b!61941 res!34058) b!61942))

(assert (= (and b!61942 res!34060) b!61943))

(assert (= (and d!12487 res!34059) b!61944))

(assert (=> b!61942 m!52977))

(assert (=> b!61942 m!53255))

(assert (=> d!12487 m!52977))

(declare-fun m!55335 () Bool)

(assert (=> d!12487 m!55335))

(declare-fun m!55337 () Bool)

(assert (=> b!61941 m!55337))

(assert (=> b!61941 m!55337))

(declare-fun m!55339 () Bool)

(assert (=> b!61941 m!55339))

(assert (=> b!61944 m!53309))

(assert (=> b!61944 m!53285))

(assert (=> b!61944 m!53235))

(assert (=> d!11903 d!12487))

(declare-fun d!12489 () Bool)

(assert (=> d!12489 (= (arrayCountValidKeys!0 lt!25003 (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (bvadd (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!25725 () Unit!1621)

(declare-fun choose!2 (array!3723 (_ BitVec 32)) Unit!1621)

(assert (=> d!12489 (= lt!25725 (choose!2 lt!25003 (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))))))

(declare-fun e!40665 () Bool)

(assert (=> d!12489 e!40665))

(declare-fun res!34065 () Bool)

(assert (=> d!12489 (=> (not res!34065) (not e!40665))))

(assert (=> d!12489 (= res!34065 (and (bvsge (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000000) (bvslt (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (size!2012 lt!25003))))))

(assert (=> d!12489 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!25003 (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917))) lt!25725)))

(declare-fun b!61949 () Bool)

(declare-fun res!34066 () Bool)

(assert (=> b!61949 (=> (not res!34066) (not e!40665))))

(assert (=> b!61949 (= res!34066 (validKeyInArray!0 (select (arr!1780 lt!25003) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)))))))

(declare-fun b!61950 () Bool)

(assert (=> b!61950 (= e!40665 (bvslt (size!2012 lt!25003) #b01111111111111111111111111111111))))

(assert (= (and d!12489 res!34065) b!61949))

(assert (= (and b!61949 res!34066) b!61950))

(assert (=> d!12489 m!53311))

(declare-fun m!55341 () Bool)

(assert (=> d!12489 m!55341))

(assert (=> b!61949 m!55243))

(assert (=> b!61949 m!55243))

(assert (=> b!61949 m!55245))

(assert (=> d!11903 d!12489))

(declare-fun d!12491 () Bool)

(declare-fun e!40668 () Bool)

(assert (=> d!12491 e!40668))

(declare-fun res!34069 () Bool)

(assert (=> d!12491 (=> (not res!34069) (not e!40668))))

(assert (=> d!12491 (= res!34069 (and (bvsge (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) #b00000000000000000000000000000000) (bvslt (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (size!2012 (_keys!3693 newMap!16)))))))

(declare-fun lt!25728 () Unit!1621)

(declare-fun choose!102 ((_ BitVec 64) array!3723 (_ BitVec 32) (_ BitVec 32)) Unit!1621)

(assert (=> d!12491 (= lt!25728 (choose!102 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (mask!5961 newMap!16)))))

(assert (=> d!12491 (validMask!0 (mask!5961 newMap!16))))

(assert (=> d!12491 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355) (_keys!3693 newMap!16) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (mask!5961 newMap!16)) lt!25728)))

(declare-fun b!61953 () Bool)

(assert (=> b!61953 (= e!40668 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3724 (store (arr!1780 (_keys!3693 newMap!16)) (ite c!7884 (index!3051 lt!24917) (index!3048 lt!24917)) (select (arr!1780 (_keys!3693 (v!2397 (underlying!227 thiss!992)))) from!355)) (size!2012 (_keys!3693 newMap!16))) (mask!5961 newMap!16)))))

(assert (= (and d!12491 res!34069) b!61953))

(assert (=> d!12491 m!52977))

(declare-fun m!55343 () Bool)

(assert (=> d!12491 m!55343))

(assert (=> d!12491 m!53365))

(assert (=> b!61953 m!53309))

(assert (=> b!61953 m!53315))

(assert (=> d!11903 d!12491))

(declare-fun d!12493 () Bool)

(assert (=> d!12493 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809))))

(declare-fun lt!25729 () Unit!1621)

(assert (=> d!12493 (= lt!25729 (choose!327 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809))))

(declare-fun e!40669 () Bool)

(assert (=> d!12493 e!40669))

(declare-fun res!34070 () Bool)

(assert (=> d!12493 (=> (not res!34070) (not e!40669))))

(assert (=> d!12493 (= res!34070 (isStrictlySorted!280 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))))))))

(assert (=> d!12493 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809) lt!25729)))

(declare-fun b!61954 () Bool)

(assert (=> b!61954 (= e!40669 (containsKey!127 (toList!696 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24809))))

(assert (= (and d!12493 res!34070) b!61954))

(assert (=> d!12493 m!53765))

(assert (=> d!12493 m!53765))

(assert (=> d!12493 m!53767))

(declare-fun m!55345 () Bool)

(assert (=> d!12493 m!55345))

(declare-fun m!55347 () Bool)

(assert (=> d!12493 m!55347))

(assert (=> b!61954 m!53761))

(assert (=> b!61118 d!12493))

(assert (=> b!61118 d!12223))

(assert (=> b!61118 d!12225))

(assert (=> b!61104 d!12217))

(assert (=> b!61104 d!12067))

(declare-fun d!12495 () Bool)

(assert (=> d!12495 (= (apply!67 (+!82 lt!25068 (tuple2!2049 lt!25072 (minValue!1980 newMap!16))) lt!25075) (apply!67 lt!25068 lt!25075))))

(declare-fun lt!25730 () Unit!1621)

(assert (=> d!12495 (= lt!25730 (choose!330 lt!25068 lt!25072 (minValue!1980 newMap!16) lt!25075))))

(declare-fun e!40670 () Bool)

(assert (=> d!12495 e!40670))

(declare-fun res!34071 () Bool)

(assert (=> d!12495 (=> (not res!34071) (not e!40670))))

(assert (=> d!12495 (= res!34071 (contains!687 lt!25068 lt!25075))))

(assert (=> d!12495 (= (addApplyDifferent!43 lt!25068 lt!25072 (minValue!1980 newMap!16) lt!25075) lt!25730)))

(declare-fun b!61955 () Bool)

(assert (=> b!61955 (= e!40670 (not (= lt!25075 lt!25072)))))

(assert (= (and d!12495 res!34071) b!61955))

(assert (=> d!12495 m!53419))

(assert (=> d!12495 m!53411))

(declare-fun m!55349 () Bool)

(assert (=> d!12495 m!55349))

(assert (=> d!12495 m!53419))

(assert (=> d!12495 m!53423))

(declare-fun m!55351 () Bool)

(assert (=> d!12495 m!55351))

(assert (=> b!60894 d!12495))

(declare-fun d!12497 () Bool)

(declare-fun e!40671 () Bool)

(assert (=> d!12497 e!40671))

(declare-fun res!34072 () Bool)

(assert (=> d!12497 (=> (not res!34072) (not e!40671))))

(declare-fun lt!25733 () ListLongMap!1361)

(assert (=> d!12497 (= res!34072 (contains!687 lt!25733 (_1!1035 (tuple2!2049 lt!25069 (minValue!1980 newMap!16)))))))

(declare-fun lt!25731 () List!1443)

(assert (=> d!12497 (= lt!25733 (ListLongMap!1362 lt!25731))))

(declare-fun lt!25732 () Unit!1621)

(declare-fun lt!25734 () Unit!1621)

(assert (=> d!12497 (= lt!25732 lt!25734)))

(assert (=> d!12497 (= (getValueByKey!123 lt!25731 (_1!1035 (tuple2!2049 lt!25069 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25069 (minValue!1980 newMap!16)))))))

(assert (=> d!12497 (= lt!25734 (lemmaContainsTupThenGetReturnValue!43 lt!25731 (_1!1035 (tuple2!2049 lt!25069 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25069 (minValue!1980 newMap!16)))))))

(assert (=> d!12497 (= lt!25731 (insertStrictlySorted!46 (toList!696 lt!25076) (_1!1035 (tuple2!2049 lt!25069 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25069 (minValue!1980 newMap!16)))))))

(assert (=> d!12497 (= (+!82 lt!25076 (tuple2!2049 lt!25069 (minValue!1980 newMap!16))) lt!25733)))

(declare-fun b!61956 () Bool)

(declare-fun res!34073 () Bool)

(assert (=> b!61956 (=> (not res!34073) (not e!40671))))

(assert (=> b!61956 (= res!34073 (= (getValueByKey!123 (toList!696 lt!25733) (_1!1035 (tuple2!2049 lt!25069 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25069 (minValue!1980 newMap!16))))))))

(declare-fun b!61957 () Bool)

(assert (=> b!61957 (= e!40671 (contains!689 (toList!696 lt!25733) (tuple2!2049 lt!25069 (minValue!1980 newMap!16))))))

(assert (= (and d!12497 res!34072) b!61956))

(assert (= (and b!61956 res!34073) b!61957))

(declare-fun m!55353 () Bool)

(assert (=> d!12497 m!55353))

(declare-fun m!55355 () Bool)

(assert (=> d!12497 m!55355))

(declare-fun m!55357 () Bool)

(assert (=> d!12497 m!55357))

(declare-fun m!55359 () Bool)

(assert (=> d!12497 m!55359))

(declare-fun m!55361 () Bool)

(assert (=> b!61956 m!55361))

(declare-fun m!55363 () Bool)

(assert (=> b!61957 m!55363))

(assert (=> b!60894 d!12497))

(declare-fun d!12499 () Bool)

(declare-fun e!40673 () Bool)

(assert (=> d!12499 e!40673))

(declare-fun res!34074 () Bool)

(assert (=> d!12499 (=> res!34074 e!40673)))

(declare-fun lt!25738 () Bool)

(assert (=> d!12499 (= res!34074 (not lt!25738))))

(declare-fun lt!25736 () Bool)

(assert (=> d!12499 (= lt!25738 lt!25736)))

(declare-fun lt!25735 () Unit!1621)

(declare-fun e!40672 () Unit!1621)

(assert (=> d!12499 (= lt!25735 e!40672)))

(declare-fun c!8219 () Bool)

(assert (=> d!12499 (= c!8219 lt!25736)))

(assert (=> d!12499 (= lt!25736 (containsKey!127 (toList!696 (+!82 lt!25064 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16)))) lt!25058))))

(assert (=> d!12499 (= (contains!687 (+!82 lt!25064 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16))) lt!25058) lt!25738)))

(declare-fun b!61958 () Bool)

(declare-fun lt!25737 () Unit!1621)

(assert (=> b!61958 (= e!40672 lt!25737)))

(assert (=> b!61958 (= lt!25737 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 (+!82 lt!25064 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16)))) lt!25058))))

(assert (=> b!61958 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!25064 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16)))) lt!25058))))

(declare-fun b!61959 () Bool)

(declare-fun Unit!1683 () Unit!1621)

(assert (=> b!61959 (= e!40672 Unit!1683)))

(declare-fun b!61960 () Bool)

(assert (=> b!61960 (= e!40673 (isDefined!77 (getValueByKey!123 (toList!696 (+!82 lt!25064 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16)))) lt!25058)))))

(assert (= (and d!12499 c!8219) b!61958))

(assert (= (and d!12499 (not c!8219)) b!61959))

(assert (= (and d!12499 (not res!34074)) b!61960))

(declare-fun m!55365 () Bool)

(assert (=> d!12499 m!55365))

(declare-fun m!55367 () Bool)

(assert (=> b!61958 m!55367))

(declare-fun m!55369 () Bool)

(assert (=> b!61958 m!55369))

(assert (=> b!61958 m!55369))

(declare-fun m!55371 () Bool)

(assert (=> b!61958 m!55371))

(assert (=> b!61960 m!55369))

(assert (=> b!61960 m!55369))

(assert (=> b!61960 m!55371))

(assert (=> b!60894 d!12499))

(declare-fun d!12501 () Bool)

(declare-fun e!40674 () Bool)

(assert (=> d!12501 e!40674))

(declare-fun res!34075 () Bool)

(assert (=> d!12501 (=> (not res!34075) (not e!40674))))

(declare-fun lt!25741 () ListLongMap!1361)

(assert (=> d!12501 (= res!34075 (contains!687 lt!25741 (_1!1035 (tuple2!2049 lt!25072 (minValue!1980 newMap!16)))))))

(declare-fun lt!25739 () List!1443)

(assert (=> d!12501 (= lt!25741 (ListLongMap!1362 lt!25739))))

(declare-fun lt!25740 () Unit!1621)

(declare-fun lt!25742 () Unit!1621)

(assert (=> d!12501 (= lt!25740 lt!25742)))

(assert (=> d!12501 (= (getValueByKey!123 lt!25739 (_1!1035 (tuple2!2049 lt!25072 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25072 (minValue!1980 newMap!16)))))))

(assert (=> d!12501 (= lt!25742 (lemmaContainsTupThenGetReturnValue!43 lt!25739 (_1!1035 (tuple2!2049 lt!25072 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25072 (minValue!1980 newMap!16)))))))

(assert (=> d!12501 (= lt!25739 (insertStrictlySorted!46 (toList!696 lt!25068) (_1!1035 (tuple2!2049 lt!25072 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25072 (minValue!1980 newMap!16)))))))

(assert (=> d!12501 (= (+!82 lt!25068 (tuple2!2049 lt!25072 (minValue!1980 newMap!16))) lt!25741)))

(declare-fun b!61961 () Bool)

(declare-fun res!34076 () Bool)

(assert (=> b!61961 (=> (not res!34076) (not e!40674))))

(assert (=> b!61961 (= res!34076 (= (getValueByKey!123 (toList!696 lt!25741) (_1!1035 (tuple2!2049 lt!25072 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25072 (minValue!1980 newMap!16))))))))

(declare-fun b!61962 () Bool)

(assert (=> b!61962 (= e!40674 (contains!689 (toList!696 lt!25741) (tuple2!2049 lt!25072 (minValue!1980 newMap!16))))))

(assert (= (and d!12501 res!34075) b!61961))

(assert (= (and b!61961 res!34076) b!61962))

(declare-fun m!55373 () Bool)

(assert (=> d!12501 m!55373))

(declare-fun m!55375 () Bool)

(assert (=> d!12501 m!55375))

(declare-fun m!55377 () Bool)

(assert (=> d!12501 m!55377))

(declare-fun m!55379 () Bool)

(assert (=> d!12501 m!55379))

(declare-fun m!55381 () Bool)

(assert (=> b!61961 m!55381))

(declare-fun m!55383 () Bool)

(assert (=> b!61962 m!55383))

(assert (=> b!60894 d!12501))

(declare-fun d!12503 () Bool)

(declare-fun e!40675 () Bool)

(assert (=> d!12503 e!40675))

(declare-fun res!34077 () Bool)

(assert (=> d!12503 (=> (not res!34077) (not e!40675))))

(declare-fun lt!25745 () ListLongMap!1361)

(assert (=> d!12503 (= res!34077 (contains!687 lt!25745 (_1!1035 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16)))))))

(declare-fun lt!25743 () List!1443)

(assert (=> d!12503 (= lt!25745 (ListLongMap!1362 lt!25743))))

(declare-fun lt!25744 () Unit!1621)

(declare-fun lt!25746 () Unit!1621)

(assert (=> d!12503 (= lt!25744 lt!25746)))

(assert (=> d!12503 (= (getValueByKey!123 lt!25743 (_1!1035 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12503 (= lt!25746 (lemmaContainsTupThenGetReturnValue!43 lt!25743 (_1!1035 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12503 (= lt!25743 (insertStrictlySorted!46 (toList!696 lt!25064) (_1!1035 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12503 (= (+!82 lt!25064 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16))) lt!25745)))

(declare-fun b!61963 () Bool)

(declare-fun res!34078 () Bool)

(assert (=> b!61963 (=> (not res!34078) (not e!40675))))

(assert (=> b!61963 (= res!34078 (= (getValueByKey!123 (toList!696 lt!25745) (_1!1035 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16))))))))

(declare-fun b!61964 () Bool)

(assert (=> b!61964 (= e!40675 (contains!689 (toList!696 lt!25745) (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16))))))

(assert (= (and d!12503 res!34077) b!61963))

(assert (= (and b!61963 res!34078) b!61964))

(declare-fun m!55385 () Bool)

(assert (=> d!12503 m!55385))

(declare-fun m!55387 () Bool)

(assert (=> d!12503 m!55387))

(declare-fun m!55389 () Bool)

(assert (=> d!12503 m!55389))

(declare-fun m!55391 () Bool)

(assert (=> d!12503 m!55391))

(declare-fun m!55393 () Bool)

(assert (=> b!61963 m!55393))

(declare-fun m!55395 () Bool)

(assert (=> b!61964 m!55395))

(assert (=> b!60894 d!12503))

(declare-fun d!12505 () Bool)

(assert (=> d!12505 (contains!687 (+!82 lt!25064 (tuple2!2049 lt!25062 (zeroValue!1980 newMap!16))) lt!25058)))

(declare-fun lt!25747 () Unit!1621)

(assert (=> d!12505 (= lt!25747 (choose!331 lt!25064 lt!25062 (zeroValue!1980 newMap!16) lt!25058))))

(assert (=> d!12505 (contains!687 lt!25064 lt!25058)))

(assert (=> d!12505 (= (addStillContains!43 lt!25064 lt!25062 (zeroValue!1980 newMap!16) lt!25058) lt!25747)))

(declare-fun bs!2692 () Bool)

(assert (= bs!2692 d!12505))

(assert (=> bs!2692 m!53405))

(assert (=> bs!2692 m!53405))

(assert (=> bs!2692 m!53407))

(declare-fun m!55397 () Bool)

(assert (=> bs!2692 m!55397))

(declare-fun m!55399 () Bool)

(assert (=> bs!2692 m!55399))

(assert (=> b!60894 d!12505))

(declare-fun d!12507 () Bool)

(assert (=> d!12507 (= (apply!67 (+!82 lt!25073 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16))) lt!25078) (apply!67 lt!25073 lt!25078))))

(declare-fun lt!25748 () Unit!1621)

(assert (=> d!12507 (= lt!25748 (choose!330 lt!25073 lt!25063 (zeroValue!1980 newMap!16) lt!25078))))

(declare-fun e!40676 () Bool)

(assert (=> d!12507 e!40676))

(declare-fun res!34079 () Bool)

(assert (=> d!12507 (=> (not res!34079) (not e!40676))))

(assert (=> d!12507 (= res!34079 (contains!687 lt!25073 lt!25078))))

(assert (=> d!12507 (= (addApplyDifferent!43 lt!25073 lt!25063 (zeroValue!1980 newMap!16) lt!25078) lt!25748)))

(declare-fun b!61965 () Bool)

(assert (=> b!61965 (= e!40676 (not (= lt!25078 lt!25063)))))

(assert (= (and d!12507 res!34079) b!61965))

(assert (=> d!12507 m!53403))

(assert (=> d!12507 m!53421))

(declare-fun m!55401 () Bool)

(assert (=> d!12507 m!55401))

(assert (=> d!12507 m!53403))

(assert (=> d!12507 m!53409))

(declare-fun m!55403 () Bool)

(assert (=> d!12507 m!55403))

(assert (=> b!60894 d!12507))

(declare-fun d!12509 () Bool)

(assert (=> d!12509 (= (apply!67 (+!82 lt!25076 (tuple2!2049 lt!25069 (minValue!1980 newMap!16))) lt!25067) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!25076 (tuple2!2049 lt!25069 (minValue!1980 newMap!16)))) lt!25067)))))

(declare-fun bs!2693 () Bool)

(assert (= bs!2693 d!12509))

(declare-fun m!55405 () Bool)

(assert (=> bs!2693 m!55405))

(assert (=> bs!2693 m!55405))

(declare-fun m!55407 () Bool)

(assert (=> bs!2693 m!55407))

(assert (=> b!60894 d!12509))

(declare-fun d!12511 () Bool)

(declare-fun e!40677 () Bool)

(assert (=> d!12511 e!40677))

(declare-fun res!34080 () Bool)

(assert (=> d!12511 (=> (not res!34080) (not e!40677))))

(declare-fun lt!25751 () ListLongMap!1361)

(assert (=> d!12511 (= res!34080 (contains!687 lt!25751 (_1!1035 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16)))))))

(declare-fun lt!25749 () List!1443)

(assert (=> d!12511 (= lt!25751 (ListLongMap!1362 lt!25749))))

(declare-fun lt!25750 () Unit!1621)

(declare-fun lt!25752 () Unit!1621)

(assert (=> d!12511 (= lt!25750 lt!25752)))

(assert (=> d!12511 (= (getValueByKey!123 lt!25749 (_1!1035 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12511 (= lt!25752 (lemmaContainsTupThenGetReturnValue!43 lt!25749 (_1!1035 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12511 (= lt!25749 (insertStrictlySorted!46 (toList!696 lt!25073) (_1!1035 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16))) (_2!1035 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16)))))))

(assert (=> d!12511 (= (+!82 lt!25073 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16))) lt!25751)))

(declare-fun b!61966 () Bool)

(declare-fun res!34081 () Bool)

(assert (=> b!61966 (=> (not res!34081) (not e!40677))))

(assert (=> b!61966 (= res!34081 (= (getValueByKey!123 (toList!696 lt!25751) (_1!1035 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16))))))))

(declare-fun b!61967 () Bool)

(assert (=> b!61967 (= e!40677 (contains!689 (toList!696 lt!25751) (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16))))))

(assert (= (and d!12511 res!34080) b!61966))

(assert (= (and b!61966 res!34081) b!61967))

(declare-fun m!55409 () Bool)

(assert (=> d!12511 m!55409))

(declare-fun m!55411 () Bool)

(assert (=> d!12511 m!55411))

(declare-fun m!55413 () Bool)

(assert (=> d!12511 m!55413))

(declare-fun m!55415 () Bool)

(assert (=> d!12511 m!55415))

(declare-fun m!55417 () Bool)

(assert (=> b!61966 m!55417))

(declare-fun m!55419 () Bool)

(assert (=> b!61967 m!55419))

(assert (=> b!60894 d!12511))

(declare-fun d!12513 () Bool)

(assert (=> d!12513 (= (apply!67 (+!82 lt!25068 (tuple2!2049 lt!25072 (minValue!1980 newMap!16))) lt!25075) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!25068 (tuple2!2049 lt!25072 (minValue!1980 newMap!16)))) lt!25075)))))

(declare-fun bs!2694 () Bool)

(assert (= bs!2694 d!12513))

(declare-fun m!55421 () Bool)

(assert (=> bs!2694 m!55421))

(assert (=> bs!2694 m!55421))

(declare-fun m!55423 () Bool)

(assert (=> bs!2694 m!55423))

(assert (=> b!60894 d!12513))

(declare-fun d!12515 () Bool)

(assert (=> d!12515 (= (apply!67 (+!82 lt!25073 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16))) lt!25078) (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!25073 (tuple2!2049 lt!25063 (zeroValue!1980 newMap!16)))) lt!25078)))))

(declare-fun bs!2695 () Bool)

(assert (= bs!2695 d!12515))

(declare-fun m!55425 () Bool)

(assert (=> bs!2695 m!55425))

(assert (=> bs!2695 m!55425))

(declare-fun m!55427 () Bool)

(assert (=> bs!2695 m!55427))

(assert (=> b!60894 d!12515))

(assert (=> b!60894 d!12049))

(declare-fun d!12517 () Bool)

(assert (=> d!12517 (= (apply!67 lt!25073 lt!25078) (get!1086 (getValueByKey!123 (toList!696 lt!25073) lt!25078)))))

(declare-fun bs!2696 () Bool)

(assert (= bs!2696 d!12517))

(declare-fun m!55429 () Bool)

(assert (=> bs!2696 m!55429))

(assert (=> bs!2696 m!55429))

(declare-fun m!55431 () Bool)

(assert (=> bs!2696 m!55431))

(assert (=> b!60894 d!12517))

(declare-fun d!12519 () Bool)

(assert (=> d!12519 (= (apply!67 lt!25068 lt!25075) (get!1086 (getValueByKey!123 (toList!696 lt!25068) lt!25075)))))

(declare-fun bs!2697 () Bool)

(assert (= bs!2697 d!12519))

(declare-fun m!55433 () Bool)

(assert (=> bs!2697 m!55433))

(assert (=> bs!2697 m!55433))

(declare-fun m!55435 () Bool)

(assert (=> bs!2697 m!55435))

(assert (=> b!60894 d!12519))

(declare-fun d!12521 () Bool)

(assert (=> d!12521 (= (apply!67 (+!82 lt!25076 (tuple2!2049 lt!25069 (minValue!1980 newMap!16))) lt!25067) (apply!67 lt!25076 lt!25067))))

(declare-fun lt!25753 () Unit!1621)

(assert (=> d!12521 (= lt!25753 (choose!330 lt!25076 lt!25069 (minValue!1980 newMap!16) lt!25067))))

(declare-fun e!40678 () Bool)

(assert (=> d!12521 e!40678))

(declare-fun res!34082 () Bool)

(assert (=> d!12521 (=> (not res!34082) (not e!40678))))

(assert (=> d!12521 (= res!34082 (contains!687 lt!25076 lt!25067))))

(assert (=> d!12521 (= (addApplyDifferent!43 lt!25076 lt!25069 (minValue!1980 newMap!16) lt!25067) lt!25753)))

(declare-fun b!61968 () Bool)

(assert (=> b!61968 (= e!40678 (not (= lt!25067 lt!25069)))))

(assert (= (and d!12521 res!34082) b!61968))

(assert (=> d!12521 m!53399))

(assert (=> d!12521 m!53425))

(declare-fun m!55437 () Bool)

(assert (=> d!12521 m!55437))

(assert (=> d!12521 m!53399))

(assert (=> d!12521 m!53417))

(declare-fun m!55439 () Bool)

(assert (=> d!12521 m!55439))

(assert (=> b!60894 d!12521))

(declare-fun d!12523 () Bool)

(assert (=> d!12523 (= (apply!67 lt!25076 lt!25067) (get!1086 (getValueByKey!123 (toList!696 lt!25076) lt!25067)))))

(declare-fun bs!2698 () Bool)

(assert (= bs!2698 d!12523))

(declare-fun m!55441 () Bool)

(assert (=> bs!2698 m!55441))

(assert (=> bs!2698 m!55441))

(declare-fun m!55443 () Bool)

(assert (=> bs!2698 m!55443))

(assert (=> b!60894 d!12523))

(declare-fun d!12525 () Bool)

(assert (=> d!12525 (= (get!1086 (getValueByKey!123 (toList!696 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24826)) (v!2402 (getValueByKey!123 (toList!696 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24826)))))

(assert (=> d!11993 d!12525))

(declare-fun d!12527 () Bool)

(declare-fun c!8220 () Bool)

(assert (=> d!12527 (= c!8220 (and ((_ is Cons!1439) (toList!696 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) (= (_1!1035 (h!2021 (toList!696 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24826)))))

(declare-fun e!40679 () Option!129)

(assert (=> d!12527 (= (getValueByKey!123 (toList!696 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))) lt!24826) e!40679)))

(declare-fun b!61972 () Bool)

(declare-fun e!40680 () Option!129)

(assert (=> b!61972 (= e!40680 None!127)))

(declare-fun b!61969 () Bool)

(assert (=> b!61969 (= e!40679 (Some!128 (_2!1035 (h!2021 (toList!696 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))))))))

(declare-fun b!61971 () Bool)

(assert (=> b!61971 (= e!40680 (getValueByKey!123 (t!4808 (toList!696 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) lt!24826))))

(declare-fun b!61970 () Bool)

(assert (=> b!61970 (= e!40679 e!40680)))

(declare-fun c!8221 () Bool)

(assert (=> b!61970 (= c!8221 (and ((_ is Cons!1439) (toList!696 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992))))))) (not (= (_1!1035 (h!2021 (toList!696 (+!82 lt!24819 (tuple2!2049 lt!24823 (minValue!1980 (v!2397 (underlying!227 thiss!992)))))))) lt!24826))))))

(assert (= (and d!12527 c!8220) b!61969))

(assert (= (and d!12527 (not c!8220)) b!61970))

(assert (= (and b!61970 c!8221) b!61971))

(assert (= (and b!61970 (not c!8221)) b!61972))

(declare-fun m!55445 () Bool)

(assert (=> b!61971 m!55445))

(assert (=> d!11993 d!12527))

(assert (=> b!60989 d!12191))

(assert (=> b!60989 d!12193))

(declare-fun d!12529 () Bool)

(assert (=> d!12529 (isDefined!77 (getValueByKey!123 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!25754 () Unit!1621)

(assert (=> d!12529 (= lt!25754 (choose!327 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!40681 () Bool)

(assert (=> d!12529 e!40681))

(declare-fun res!34083 () Bool)

(assert (=> d!12529 (=> (not res!34083) (not e!40681))))

(assert (=> d!12529 (= res!34083 (isStrictlySorted!280 (toList!696 lt!24825)))))

(assert (=> d!12529 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000) lt!25754)))

(declare-fun b!61973 () Bool)

(assert (=> b!61973 (= e!40681 (containsKey!127 (toList!696 lt!24825) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!12529 res!34083) b!61973))

(assert (=> d!12529 m!53385))

(assert (=> d!12529 m!53385))

(assert (=> d!12529 m!53387))

(declare-fun m!55447 () Bool)

(assert (=> d!12529 m!55447))

(assert (=> d!12529 m!54451))

(assert (=> b!61973 m!53381))

(assert (=> b!60891 d!12529))

(assert (=> b!60891 d!12249))

(assert (=> b!60891 d!12057))

(assert (=> b!60981 d!11911))

(declare-fun d!12531 () Bool)

(assert (not d!12531))

(assert (=> b!60808 d!12531))

(declare-fun d!12533 () Bool)

(assert (=> d!12533 (= (inRange!0 (ite c!7913 (index!3049 lt!25013) (ite c!7914 (index!3048 lt!25000) (index!3051 lt!25000))) (mask!5961 newMap!16)) (and (bvsge (ite c!7913 (index!3049 lt!25013) (ite c!7914 (index!3048 lt!25000) (index!3051 lt!25000))) #b00000000000000000000000000000000) (bvslt (ite c!7913 (index!3049 lt!25013) (ite c!7914 (index!3048 lt!25000) (index!3051 lt!25000))) (bvadd (mask!5961 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!4663 d!12533))

(assert (=> b!61071 d!12037))

(declare-fun d!12535 () Bool)

(declare-fun e!40682 () Bool)

(assert (=> d!12535 e!40682))

(declare-fun res!34084 () Bool)

(assert (=> d!12535 (=> (not res!34084) (not e!40682))))

(declare-fun lt!25757 () ListLongMap!1361)

(assert (=> d!12535 (= res!34084 (contains!687 lt!25757 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(declare-fun lt!25755 () List!1443)

(assert (=> d!12535 (= lt!25757 (ListLongMap!1362 lt!25755))))

(declare-fun lt!25756 () Unit!1621)

(declare-fun lt!25758 () Unit!1621)

(assert (=> d!12535 (= lt!25756 lt!25758)))

(assert (=> d!12535 (= (getValueByKey!123 lt!25755 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(assert (=> d!12535 (= lt!25758 (lemmaContainsTupThenGetReturnValue!43 lt!25755 (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(assert (=> d!12535 (= lt!25755 (insertStrictlySorted!46 (toList!696 call!4674) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))) (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))))))

(assert (=> d!12535 (= (+!82 call!4674 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))) lt!25757)))

(declare-fun b!61974 () Bool)

(declare-fun res!34085 () Bool)

(assert (=> b!61974 (=> (not res!34085) (not e!40682))))

(assert (=> b!61974 (= res!34085 (= (getValueByKey!123 (toList!696 lt!25757) (_1!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16)))) (Some!128 (_2!1035 (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))))

(declare-fun b!61975 () Bool)

(assert (=> b!61975 (= e!40682 (contains!689 (toList!696 lt!25757) (tuple2!2049 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!1980 newMap!16))))))

(assert (= (and d!12535 res!34084) b!61974))

(assert (= (and b!61974 res!34085) b!61975))

(declare-fun m!55449 () Bool)

(assert (=> d!12535 m!55449))

(declare-fun m!55451 () Bool)

(assert (=> d!12535 m!55451))

(declare-fun m!55453 () Bool)

(assert (=> d!12535 m!55453))

(declare-fun m!55455 () Bool)

(assert (=> d!12535 m!55455))

(declare-fun m!55457 () Bool)

(assert (=> b!61974 m!55457))

(declare-fun m!55459 () Bool)

(assert (=> b!61975 m!55459))

(assert (=> b!60907 d!12535))

(declare-fun d!12537 () Bool)

(assert (=> d!12537 (= (inRange!0 (ite c!7935 (index!3048 lt!25088) (index!3051 lt!25088)) (mask!5961 newMap!16)) (and (bvsge (ite c!7935 (index!3048 lt!25088) (index!3051 lt!25088)) #b00000000000000000000000000000000) (bvslt (ite c!7935 (index!3048 lt!25088) (index!3051 lt!25088)) (bvadd (mask!5961 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!4678 d!12537))

(assert (=> d!12005 d!12007))

(assert (=> d!12005 d!12003))

(declare-fun d!12539 () Bool)

(assert (=> d!12539 (contains!687 (+!82 lt!24815 (tuple2!2049 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))))) lt!24809)))

(assert (=> d!12539 true))

(declare-fun _$35!303 () Unit!1621)

(assert (=> d!12539 (= (choose!331 lt!24815 lt!24813 (zeroValue!1980 (v!2397 (underlying!227 thiss!992))) lt!24809) _$35!303)))

(declare-fun bs!2699 () Bool)

(assert (= bs!2699 d!12539))

(assert (=> bs!2699 m!53129))

(assert (=> bs!2699 m!53129))

(assert (=> bs!2699 m!53131))

(assert (=> d!12005 d!12539))

(declare-fun d!12541 () Bool)

(declare-fun e!40684 () Bool)

(assert (=> d!12541 e!40684))

(declare-fun res!34086 () Bool)

(assert (=> d!12541 (=> res!34086 e!40684)))

(declare-fun lt!25762 () Bool)

(assert (=> d!12541 (= res!34086 (not lt!25762))))

(declare-fun lt!25760 () Bool)

(assert (=> d!12541 (= lt!25762 lt!25760)))

(declare-fun lt!25759 () Unit!1621)

(declare-fun e!40683 () Unit!1621)

(assert (=> d!12541 (= lt!25759 e!40683)))

(declare-fun c!8222 () Bool)

(assert (=> d!12541 (= c!8222 lt!25760)))

(assert (=> d!12541 (= lt!25760 (containsKey!127 (toList!696 lt!24815) lt!24809))))

(assert (=> d!12541 (= (contains!687 lt!24815 lt!24809) lt!25762)))

(declare-fun b!61977 () Bool)

(declare-fun lt!25761 () Unit!1621)

(assert (=> b!61977 (= e!40683 lt!25761)))

(assert (=> b!61977 (= lt!25761 (lemmaContainsKeyImpliesGetValueByKeyDefined!76 (toList!696 lt!24815) lt!24809))))

(assert (=> b!61977 (isDefined!77 (getValueByKey!123 (toList!696 lt!24815) lt!24809))))

(declare-fun b!61978 () Bool)

(declare-fun Unit!1684 () Unit!1621)

(assert (=> b!61978 (= e!40683 Unit!1684)))

(declare-fun b!61979 () Bool)

(assert (=> b!61979 (= e!40684 (isDefined!77 (getValueByKey!123 (toList!696 lt!24815) lt!24809)))))

(assert (= (and d!12541 c!8222) b!61977))

(assert (= (and d!12541 (not c!8222)) b!61978))

(assert (= (and d!12541 (not res!34086)) b!61979))

(declare-fun m!55461 () Bool)

(assert (=> d!12541 m!55461))

(declare-fun m!55463 () Bool)

(assert (=> b!61977 m!55463))

(declare-fun m!55465 () Bool)

(assert (=> b!61977 m!55465))

(assert (=> b!61977 m!55465))

(declare-fun m!55467 () Bool)

(assert (=> b!61977 m!55467))

(assert (=> b!61979 m!55465))

(assert (=> b!61979 m!55465))

(assert (=> b!61979 m!55467))

(assert (=> d!12005 d!12541))

(assert (=> bm!4694 d!12373))

(declare-fun mapIsEmpty!2931 () Bool)

(declare-fun mapRes!2931 () Bool)

(assert (=> mapIsEmpty!2931 mapRes!2931))

(declare-fun mapNonEmpty!2931 () Bool)

(declare-fun tp!8097 () Bool)

(declare-fun e!40685 () Bool)

(assert (=> mapNonEmpty!2931 (= mapRes!2931 (and tp!8097 e!40685))))

(declare-fun mapRest!2931 () (Array (_ BitVec 32) ValueCell!860))

(declare-fun mapValue!2931 () ValueCell!860)

(declare-fun mapKey!2931 () (_ BitVec 32))

(assert (=> mapNonEmpty!2931 (= mapRest!2929 (store mapRest!2931 mapKey!2931 mapValue!2931))))

(declare-fun b!61980 () Bool)

(assert (=> b!61980 (= e!40685 tp_is_empty!2407)))

(declare-fun condMapEmpty!2931 () Bool)

(declare-fun mapDefault!2931 () ValueCell!860)

(assert (=> mapNonEmpty!2929 (= condMapEmpty!2931 (= mapRest!2929 ((as const (Array (_ BitVec 32) ValueCell!860)) mapDefault!2931)))))

(declare-fun e!40686 () Bool)

(assert (=> mapNonEmpty!2929 (= tp!8095 (and e!40686 mapRes!2931))))

(declare-fun b!61981 () Bool)

(assert (=> b!61981 (= e!40686 tp_is_empty!2407)))

(assert (= (and mapNonEmpty!2929 condMapEmpty!2931) mapIsEmpty!2931))

(assert (= (and mapNonEmpty!2929 (not condMapEmpty!2931)) mapNonEmpty!2931))

(assert (= (and mapNonEmpty!2931 ((_ is ValueCellFull!860) mapValue!2931)) b!61980))

(assert (= (and mapNonEmpty!2929 ((_ is ValueCellFull!860) mapDefault!2931)) b!61981))

(declare-fun m!55469 () Bool)

(assert (=> mapNonEmpty!2931 m!55469))

(declare-fun mapIsEmpty!2932 () Bool)

(declare-fun mapRes!2932 () Bool)

(assert (=> mapIsEmpty!2932 mapRes!2932))

(declare-fun mapNonEmpty!2932 () Bool)

(declare-fun tp!8098 () Bool)

(declare-fun e!40687 () Bool)

(assert (=> mapNonEmpty!2932 (= mapRes!2932 (and tp!8098 e!40687))))

(declare-fun mapKey!2932 () (_ BitVec 32))

(declare-fun mapRest!2932 () (Array (_ BitVec 32) ValueCell!860))

(declare-fun mapValue!2932 () ValueCell!860)

(assert (=> mapNonEmpty!2932 (= mapRest!2930 (store mapRest!2932 mapKey!2932 mapValue!2932))))

(declare-fun b!61982 () Bool)

(assert (=> b!61982 (= e!40687 tp_is_empty!2407)))

(declare-fun condMapEmpty!2932 () Bool)

(declare-fun mapDefault!2932 () ValueCell!860)

(assert (=> mapNonEmpty!2930 (= condMapEmpty!2932 (= mapRest!2930 ((as const (Array (_ BitVec 32) ValueCell!860)) mapDefault!2932)))))

(declare-fun e!40688 () Bool)

(assert (=> mapNonEmpty!2930 (= tp!8096 (and e!40688 mapRes!2932))))

(declare-fun b!61983 () Bool)

(assert (=> b!61983 (= e!40688 tp_is_empty!2407)))

(assert (= (and mapNonEmpty!2930 condMapEmpty!2932) mapIsEmpty!2932))

(assert (= (and mapNonEmpty!2930 (not condMapEmpty!2932)) mapNonEmpty!2932))

(assert (= (and mapNonEmpty!2932 ((_ is ValueCellFull!860) mapValue!2932)) b!61982))

(assert (= (and mapNonEmpty!2930 ((_ is ValueCellFull!860) mapDefault!2932)) b!61983))

(declare-fun m!55471 () Bool)

(assert (=> mapNonEmpty!2932 m!55471))

(declare-fun b_lambda!2737 () Bool)

(assert (= b_lambda!2709 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2737)))

(declare-fun b_lambda!2739 () Bool)

(assert (= b_lambda!2725 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2739)))

(declare-fun b_lambda!2741 () Bool)

(assert (= b_lambda!2719 (or (and b!60405 b_free!1981) (and b!60410 b_free!1983 (= (defaultEntry!2066 newMap!16) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))))) b_lambda!2741)))

(declare-fun b_lambda!2743 () Bool)

(assert (= b_lambda!2707 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2743)))

(declare-fun b_lambda!2745 () Bool)

(assert (= b_lambda!2731 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2745)))

(declare-fun b_lambda!2747 () Bool)

(assert (= b_lambda!2721 (or (and b!60405 b_free!1981) (and b!60410 b_free!1983 (= (defaultEntry!2066 newMap!16) (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))))) b_lambda!2747)))

(declare-fun b_lambda!2749 () Bool)

(assert (= b_lambda!2713 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2749)))

(declare-fun b_lambda!2751 () Bool)

(assert (= b_lambda!2729 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2751)))

(declare-fun b_lambda!2753 () Bool)

(assert (= b_lambda!2715 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2753)))

(declare-fun b_lambda!2755 () Bool)

(assert (= b_lambda!2735 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2755)))

(declare-fun b_lambda!2757 () Bool)

(assert (= b_lambda!2723 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2757)))

(declare-fun b_lambda!2759 () Bool)

(assert (= b_lambda!2727 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2759)))

(declare-fun b_lambda!2761 () Bool)

(assert (= b_lambda!2733 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2761)))

(declare-fun b_lambda!2763 () Bool)

(assert (= b_lambda!2711 (or (and b!60405 b_free!1981 (= (defaultEntry!2066 (v!2397 (underlying!227 thiss!992))) (defaultEntry!2066 newMap!16))) (and b!60410 b_free!1983) b_lambda!2763)))

(check-sat (not b!61805) (not bm!4790) (not d!12499) (not b!61711) (not b!61941) (not b!61335) (not d!12357) (not b!61192) (not d!12095) (not b_lambda!2697) (not b!61789) (not b!61681) (not d!12111) (not bm!4767) (not bm!4783) (not d!12291) (not b!61834) (not b!61185) (not d!12083) (not b!61280) (not d!12467) (not b!61653) (not d!12539) (not bm!4725) (not b!61536) (not b!61732) (not b!61956) (not d!12257) (not b!61979) (not d!12141) (not bm!4784) (not b!61419) (not b!61391) (not b!61908) (not d!12391) (not bm!4745) (not b!61691) (not d!12093) (not bm!4701) (not d!12223) (not d!12089) (not b!61179) (not b!61683) (not b!61621) (not b!61220) (not b!61534) (not d!12301) (not b!61763) (not b!61612) (not b!61364) (not bm!4722) (not d!12417) (not bm!4734) (not bm!4788) (not d!12157) (not d!12241) (not d!12049) (not b!61769) (not d!12453) (not d!12153) (not b!61337) (not b!61489) (not bm!4792) (not b!61583) (not b!61408) (not bm!4794) (not b!61754) (not d!12165) (not d!12081) (not b!61687) (not b!61381) (not bm!4724) (not b!61911) (not b!61630) (not d!12489) (not b!61597) (not b!61588) (not b!61342) (not b!61673) (not d!12071) (not d!12073) (not d!12167) (not b!61163) (not d!12487) (not b!61647) (not d!12519) (not b!61358) (not d!12475) (not d!12491) (not b!61892) (not b!61338) (not b!61627) (not d!12313) (not b!61497) (not b_lambda!2705) (not b!61590) (not bm!4717) (not b!61595) (not d!12413) (not b!61306) (not b!61876) (not b!61312) (not b!61168) (not b!61957) (not b!61720) (not b!61344) (not d!12059) (not b!61389) (not d!12033) (not bm!4719) (not d!12387) (not b!61954) (not d!12447) (not b!61527) (not b!61518) (not d!12355) (not d!12431) (not bm!4703) (not b!61216) (not d!12503) (not b!61287) (not b!61340) (not b_lambda!2737) (not d!12513) (not d!12053) (not b!61211) (not b!61477) (not b!61366) (not b!61437) (not b!61874) (not b!61921) (not d!12495) (not d!12321) (not b!61167) (not b!61434) (not b!61619) (not b!61626) (not b!61538) (not bm!4739) (not bm!4799) (not b!61333) (not b!61977) (not d!12191) (not b!61868) (not b!61656) (not b!61783) (not d!12139) (not d!12511) (not b!61474) (not b!61684) (not b!61645) (not b!61675) (not b!61966) (not b!61414) (not bm!4765) (not bm!4754) (not b!61149) (not bm!4751) (not b!61713) (not b!61245) (not b!61182) (not b!61962) (not d!12261) (not d!12529) (not b!61614) (not b!61914) (not b!61553) (not bm!4740) (not d!12317) (not b!61341) (not b!61759) (not b!61217) (not d!12425) (not b!61709) (not b!61197) (not b!61905) (not b!61642) (not b_lambda!2753) (not b!61963) (not b_lambda!2699) (not d!12101) (not d!12277) (not d!12217) (not b!61143) (not bm!4743) (not b_next!1983) (not b_lambda!2743) (not b!61893) (not b!61802) (not b!61867) (not d!12299) (not b!61524) (not b!61824) (not b!61788) (not d!12145) (not d!12183) (not b!61236) (not d!12125) (not b!61974) (not b!61213) (not b!61428) (not b!61613) (not bm!4704) (not b!61714) (not b!61327) (not bm!4731) (not b!61958) (not b!61967) (not b!61522) (not d!12515) (not b!61466) (not d!12349) (not b!61953) (not b!61815) (not b!61586) (not b!61667) (not b!61591) (not d!12501) (not d!12507) (not d!12137) (not b!61610) (not b!61239) (not b_lambda!2739) (not b!61663) (not b!61813) (not b_lambda!2763) (not bm!4798) (not b!61463) (not d!12365) (not b_lambda!2741) (not b!61821) (not b!61932) (not b!61651) (not b!61271) (not bm!4741) (not b!61762) (not d!12351) (not b!61165) (not b_lambda!2761) (not b!61756) (not b!61485) (not b!61231) (not bm!4746) (not d!12375) (not d!12237) (not d!12449) (not b!61672) (not b!61305) (not b_lambda!2685) (not b!61693) (not b!61896) (not b_lambda!2681) (not d!12259) (not b!61279) (not d!12401) (not b!61730) (not d!12303) (not b!61530) (not d!12373) (not b!61862) (not b!61618) (not b!61393) (not b!61277) (not b!61829) (not bm!4763) (not d!12369) (not b!61484) (not b!61926) (not b!61944) (not d!12339) (not d!12293) (not b!61724) (not b!61669) (not b!61161) (not b!61459) (not b!61768) (not b!61511) (not b!61907) (not d!12483) (not b!61949) (not d!12463) (not d!12345) (not b!61189) (not d!12221) (not d!12199) (not b!61700) (not b!61745) (not b!61869) b_and!3777 (not b!61549) (not d!12305) (not d!12347) (not b!61599) (not b!61752) (not b!61886) (not d!12427) (not b!61166) (not bm!4771) (not d!12285) (not b!61153) (not b!61371) (not b!61882) (not d!12415) (not b!61729) (not b!61214) (not d!12249) (not b!61699) (not b!61744) (not b!61234) (not b!61345) (not b!61421) (not d!12123) (not b!61282) (not d!12245) (not b!61900) (not b!61500) (not b!61319) (not d!12471) (not d!12361) (not b!61767) (not d!12047) (not b!61200) (not d!12405) (not bm!4778) (not d!12523) (not b!61864) (not b!61694) (not b!61902) (not b!61677) (not d!12273) (not b!61513) (not b!61293) (not d!12459) (not bm!4728) (not b!61696) (not b!61172) (not b!61176) (not b!61639) (not b!61749) (not b!61452) (not b!61372) (not b!61734) (not b!61899) (not b!61827) (not bm!4789) (not d!12381) (not b!61140) (not b!61194) (not d!12521) (not d!12329) (not b!61223) (not b!61585) (not b!61975) (not b_lambda!2755) (not bm!4770) (not d!12353) (not b!61671) (not d!12079) (not b!61339) (not b!61703) (not b!61557) (not b!61796) (not d!12435) (not b!61706) (not d!12239) (not b!61350) (not d!12493) (not bm!4729) (not d!12441) (not d!12099) (not d!12129) (not d!12091) (not b!61718) (not b!61472) (not b!61541) (not b!61635) (not b!61359) (not b!61228) (not b!61971) (not b!61479) (not b!61423) (not b!61592) (not d!12409) (not b!61648) (not d!12439) (not d!12263) (not b!61402) (not b!61196) (not b!61903) (not b!61162) (not b!61356) (not d!12097) (not b!61871) (not b!61357) (not d!12327) (not b!61461) (not d!12207) (not d!12185) (not b!61492) (not b!61604) (not b!61151) (not d!12383) (not b!61201) (not b!61269) (not d!12229) (not b_lambda!2747) (not b!61816) (not b!61225) (not b!61587) (not d!12251) (not b!61376) (not d!12195) (not d!12509) (not b!61432) (not b!61274) (not b!61379) tp_is_empty!2407 (not b!61159) (not b!61550) (not b!61964) (not b!61212) (not bm!4702) (not b!61665) (not b!61831) (not b!61765) (not bm!4802) (not bm!4735) (not b!61346) (not b!61664) (not b!61309) (not d!12541) (not bm!4733) (not b!61674) (not b_lambda!2701) (not b!61552) (not b!61230) (not bm!4764) (not d!12535) (not d!12215) (not b!61205) (not d!12433) (not bm!4759) (not d!12423) (not d!12455) (not b!61922) (not b!61551) (not b!61470) (not b!61519) (not b!61193) (not d!12371) (not d!12115) (not d!12517) (not bm!4700) (not b!61686) (not b!61810) (not b!61973) (not d!12209) (not b!61144) (not b!61607) (not b!61343) (not b!61207) (not bm!4796) (not b!61304) (not b!61453) (not d!12163) (not bm!4800) (not b!61219) (not b!61661) (not bm!4747) (not b!61739) (not b!61676) (not b!61794) (not d!12255) (not b!61797) (not b!61302) (not d!12247) (not b!61690) (not b!61447) (not b!61426) (not b!61499) (not b!61547) (not d!12117) (not bm!4718) (not b!61494) (not d!12219) (not b!61960) (not d!12265) (not b!61233) (not b!61456) (not bm!4756) (not bm!4713) (not b!61503) (not b!61666) (not b!61198) (not b!61292) (not b!61698) (not bm!4755) (not b_lambda!2745) (not b!61505) (not d!12159) (not b!61800) (not d!12175) (not b!61174) (not d!12149) (not b!61411) (not b_lambda!2751) (not b!61142) (not b!61942) (not b_lambda!2703) (not b!61329) (not bm!4793) (not bm!4726) (not b!61791) (not d!12275) (not b!61704) (not d!12151) (not b!61616) (not b!61508) (not d!12103) (not d!12443) (not b!61468) (not d!12075) (not bm!4762) (not b!61285) (not d!12389) (not b!61454) (not b!61399) (not b!61148) (not b!61199) (not d!12143) (not b!61361) (not d!12077) (not b!61467) (not d!12179) (not d!12201) (not d!12451) (not b!61702) (not b!61278) (not b!61314) b_and!3779 (not d!12043) (not d!12335) (not bm!4769) (not b!61307) (not b!61352) (not b_lambda!2759) (not d!12505) (not mapNonEmpty!2931) (not b!61532) (not b!61444) (not b!61737) (not d!12497) (not b!61465) (not b!61716) (not b!61195) (not b!61632) (not b!61387) (not d!12367) (not b!61624) (not bm!4786) (not d!12359) (not d!12377) (not b!61320) (not d!12031) (not d!12231) (not d!12189) (not b!61416) (not b!61324) (not b!61516) (not d!12465) (not d!12127) (not b!61471) (not b!61602) (not b!61731) (not b!61442) (not d!12121) (not d!12085) (not b!61881) (not b!61961) (not b!61909) (not b!61640) (not d!12477) (not b!61396) (not d!12461) (not b_lambda!2717) (not d!12295) (not d!12325) (not d!12087) (not b!61146) (not b!61727) (not b!61808) (not b_next!1981) (not bm!4715) (not d!12161) (not b_lambda!2757) (not d!12105) (not mapNonEmpty!2932) (not d!12131) (not b!61209) (not b!61355) (not b!61164) (not b!61916) (not d!12363) (not b!61246) (not b_lambda!2749) (not b!61662) (not d!12341) (not d!12399) (not d!12289) (not d!12279) (not b!61297) (not bm!4775) (not b!61429) (not b!61819))
(check-sat b_and!3777 b_and!3779 (not b_next!1981) (not b_next!1983))
