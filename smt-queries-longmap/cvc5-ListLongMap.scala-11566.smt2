; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!135166 () Bool)

(assert start!135166)

(declare-fun res!1074651 () Bool)

(declare-fun e!877843 () Bool)

(assert (=> start!135166 (=> (not res!1074651) (not e!877843))))

(declare-fun mask!889 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!135166 (= res!1074651 (validMask!0 mask!889))))

(assert (=> start!135166 e!877843))

(assert (=> start!135166 true))

(declare-datatypes ((array!105015 0))(
  ( (array!105016 (arr!50673 (Array (_ BitVec 32) (_ BitVec 64))) (size!51224 (_ BitVec 32))) )
))
(declare-fun _keys!600 () array!105015)

(declare-fun array_inv!39628 (array!105015) Bool)

(assert (=> start!135166 (array_inv!39628 _keys!600)))

(declare-fun b!1574116 () Bool)

(declare-fun res!1074653 () Bool)

(assert (=> b!1574116 (=> (not res!1074653) (not e!877843))))

(assert (=> b!1574116 (= res!1074653 (= (size!51224 _keys!600) (bvadd #b00000000000000000000000000000001 mask!889)))))

(declare-fun b!1574117 () Bool)

(declare-fun res!1074652 () Bool)

(assert (=> b!1574117 (=> (not res!1074652) (not e!877843))))

(declare-fun k!754 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1574117 (= res!1074652 (validKeyInArray!0 k!754))))

(declare-fun b!1574118 () Bool)

(assert (=> b!1574118 (= e!877843 (bvslt mask!889 #b00000000000000000000000000000000))))

(declare-fun lt!674577 () (_ BitVec 32))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1574118 (= lt!674577 (toIndex!0 k!754 mask!889))))

(assert (= (and start!135166 res!1074651) b!1574116))

(assert (= (and b!1574116 res!1074653) b!1574117))

(assert (= (and b!1574117 res!1074652) b!1574118))

(declare-fun m!1447825 () Bool)

(assert (=> start!135166 m!1447825))

(declare-fun m!1447827 () Bool)

(assert (=> start!135166 m!1447827))

(declare-fun m!1447829 () Bool)

(assert (=> b!1574117 m!1447829))

(declare-fun m!1447831 () Bool)

(assert (=> b!1574118 m!1447831))

(push 1)

(assert (not start!135166))

(assert (not b!1574118))

(assert (not b!1574117))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!165313 () Bool)

(assert (=> d!165313 (= (validMask!0 mask!889) (and (or (= mask!889 #b00000000000000000000000000000111) (= mask!889 #b00000000000000000000000000001111) (= mask!889 #b00000000000000000000000000011111) (= mask!889 #b00000000000000000000000000111111) (= mask!889 #b00000000000000000000000001111111) (= mask!889 #b00000000000000000000000011111111) (= mask!889 #b00000000000000000000000111111111) (= mask!889 #b00000000000000000000001111111111) (= mask!889 #b00000000000000000000011111111111) (= mask!889 #b00000000000000000000111111111111) (= mask!889 #b00000000000000000001111111111111) (= mask!889 #b00000000000000000011111111111111) (= mask!889 #b00000000000000000111111111111111) (= mask!889 #b00000000000000001111111111111111) (= mask!889 #b00000000000000011111111111111111) (= mask!889 #b00000000000000111111111111111111) (= mask!889 #b00000000000001111111111111111111) (= mask!889 #b00000000000011111111111111111111) (= mask!889 #b00000000000111111111111111111111) (= mask!889 #b00000000001111111111111111111111) (= mask!889 #b00000000011111111111111111111111) (= mask!889 #b00000000111111111111111111111111) (= mask!889 #b00000001111111111111111111111111) (= mask!889 #b00000011111111111111111111111111) (= mask!889 #b00000111111111111111111111111111) (= mask!889 #b00001111111111111111111111111111) (= mask!889 #b00011111111111111111111111111111) (= mask!889 #b00111111111111111111111111111111)) (bvsle mask!889 #b00111111111111111111111111111111)))))

(assert (=> start!135166 d!165313))

(declare-fun d!165323 () Bool)

(assert (=> d!165323 (= (array_inv!39628 _keys!600) (bvsge (size!51224 _keys!600) #b00000000000000000000000000000000))))

(assert (=> start!135166 d!165323))

(declare-fun d!165325 () Bool)

(declare-fun lt!674589 () (_ BitVec 32))

(declare-fun lt!674588 () (_ BitVec 32))

(assert (=> d!165325 (= lt!674589 (bvmul (bvxor lt!674588 (bvlshr lt!674588 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!165325 (= lt!674588 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!165325 (and (bvsge mask!889 #b00000000000000000000000000000000) (let ((res!1074655 (let ((h!38255 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141303 (bvmul (bvxor h!38255 (bvlshr h!38255 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141303 (bvlshr x!141303 #b00000000000000000000000000001101)) mask!889))))) (and (bvslt res!1074655 (bvadd mask!889 #b00000000000000000000000000000001)) (bvsge res!1074655 #b00000000000000000000000000000000))))))

(assert (=> d!165325 (= (toIndex!0 k!754 mask!889) (bvand (bvxor lt!674589 (bvlshr lt!674589 #b00000000000000000000000000001101)) mask!889))))

(assert (=> b!1574118 d!165325))

(declare-fun d!165331 () Bool)

(assert (=> d!165331 (= (validKeyInArray!0 k!754) (and (not (= k!754 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k!754 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1574117 d!165331))

(push 1)

(check-sat)

(pop 1)

