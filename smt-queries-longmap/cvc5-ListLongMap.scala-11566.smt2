; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!134750 () Bool)

(assert start!134750)

(declare-fun res!1073774 () Bool)

(declare-fun e!876322 () Bool)

(assert (=> start!134750 (=> (not res!1073774) (not e!876322))))

(declare-fun mask!889 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!134750 (= res!1073774 (validMask!0 mask!889))))

(assert (=> start!134750 e!876322))

(assert (=> start!134750 true))

(declare-datatypes ((array!104889 0))(
  ( (array!104890 (arr!50617 (Array (_ BitVec 32) (_ BitVec 64))) (size!51167 (_ BitVec 32))) )
))
(declare-fun _keys!600 () array!104889)

(declare-fun array_inv!39344 (array!104889) Bool)

(assert (=> start!134750 (array_inv!39344 _keys!600)))

(declare-fun b!1571662 () Bool)

(declare-fun res!1073773 () Bool)

(assert (=> b!1571662 (=> (not res!1073773) (not e!876322))))

(assert (=> b!1571662 (= res!1073773 (= (size!51167 _keys!600) (bvadd #b00000000000000000000000000000001 mask!889)))))

(declare-fun b!1571663 () Bool)

(declare-fun res!1073775 () Bool)

(assert (=> b!1571663 (=> (not res!1073775) (not e!876322))))

(declare-fun k!754 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1571663 (= res!1073775 (validKeyInArray!0 k!754))))

(declare-fun b!1571664 () Bool)

(assert (=> b!1571664 (= e!876322 (bvslt mask!889 #b00000000000000000000000000000000))))

(declare-fun lt!673663 () (_ BitVec 32))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1571664 (= lt!673663 (toIndex!0 k!754 mask!889))))

(assert (= (and start!134750 res!1073774) b!1571662))

(assert (= (and b!1571662 res!1073773) b!1571663))

(assert (= (and b!1571663 res!1073775) b!1571664))

(declare-fun m!1445551 () Bool)

(assert (=> start!134750 m!1445551))

(declare-fun m!1445553 () Bool)

(assert (=> start!134750 m!1445553))

(declare-fun m!1445555 () Bool)

(assert (=> b!1571663 m!1445555))

(declare-fun m!1445557 () Bool)

(assert (=> b!1571664 m!1445557))

(push 1)

(assert (not start!134750))

(assert (not b!1571663))

(assert (not b!1571664))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!164609 () Bool)

(assert (=> d!164609 (= (validMask!0 mask!889) (and (or (= mask!889 #b00000000000000000000000000000111) (= mask!889 #b00000000000000000000000000001111) (= mask!889 #b00000000000000000000000000011111) (= mask!889 #b00000000000000000000000000111111) (= mask!889 #b00000000000000000000000001111111) (= mask!889 #b00000000000000000000000011111111) (= mask!889 #b00000000000000000000000111111111) (= mask!889 #b00000000000000000000001111111111) (= mask!889 #b00000000000000000000011111111111) (= mask!889 #b00000000000000000000111111111111) (= mask!889 #b00000000000000000001111111111111) (= mask!889 #b00000000000000000011111111111111) (= mask!889 #b00000000000000000111111111111111) (= mask!889 #b00000000000000001111111111111111) (= mask!889 #b00000000000000011111111111111111) (= mask!889 #b00000000000000111111111111111111) (= mask!889 #b00000000000001111111111111111111) (= mask!889 #b00000000000011111111111111111111) (= mask!889 #b00000000000111111111111111111111) (= mask!889 #b00000000001111111111111111111111) (= mask!889 #b00000000011111111111111111111111) (= mask!889 #b00000000111111111111111111111111) (= mask!889 #b00000001111111111111111111111111) (= mask!889 #b00000011111111111111111111111111) (= mask!889 #b00000111111111111111111111111111) (= mask!889 #b00001111111111111111111111111111) (= mask!889 #b00011111111111111111111111111111) (= mask!889 #b00111111111111111111111111111111)) (bvsle mask!889 #b00111111111111111111111111111111)))))

(assert (=> start!134750 d!164609))

(declare-fun d!164617 () Bool)

(assert (=> d!164617 (= (array_inv!39344 _keys!600) (bvsge (size!51167 _keys!600) #b00000000000000000000000000000000))))

(assert (=> start!134750 d!164617))

(declare-fun d!164619 () Bool)

(assert (=> d!164619 (= (validKeyInArray!0 k!754) (and (not (= k!754 #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= k!754 #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!1571663 d!164619))

(declare-fun d!164621 () Bool)

(declare-fun lt!673687 () (_ BitVec 32))

(declare-fun lt!673686 () (_ BitVec 32))

(assert (=> d!164621 (= lt!673687 (bvmul (bvxor lt!673686 (bvlshr lt!673686 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!164621 (= lt!673686 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!164621 (and (bvsge mask!889 #b00000000000000000000000000000000) (let ((res!1073796 (let ((h!38206 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141305 (bvmul (bvxor h!38206 (bvlshr h!38206 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141305 (bvlshr x!141305 #b00000000000000000000000000001101)) mask!889))))) (and (bvslt res!1073796 (bvadd mask!889 #b00000000000000000000000000000001)) (bvsge res!1073796 #b00000000000000000000000000000000))))))

(assert (=> d!164621 (= (toIndex!0 k!754 mask!889) (bvand (bvxor lt!673687 (bvlshr lt!673687 #b00000000000000000000000000001101)) mask!889))))

(assert (=> b!1571664 d!164621))

(push 1)

(check-sat)

(pop 1)

