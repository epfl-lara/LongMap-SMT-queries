; Options: -q --produce-models --incremental --print-success --lang smt2.6
(declare-fun start!134754 () Bool)

(assert start!134754)

(declare-fun res!1073793 () Bool)

(declare-fun e!876334 () Bool)

(assert (=> start!134754 (=> (not res!1073793) (not e!876334))))

(declare-fun mask!889 () (_ BitVec 32))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> start!134754 (= res!1073793 (validMask!0 mask!889))))

(assert (=> start!134754 e!876334))

(assert (=> start!134754 true))

(declare-datatypes ((array!104893 0))(
  ( (array!104894 (arr!50619 (Array (_ BitVec 32) (_ BitVec 64))) (size!51169 (_ BitVec 32))) )
))
(declare-fun _keys!600 () array!104893)

(declare-fun array_inv!39346 (array!104893) Bool)

(assert (=> start!134754 (array_inv!39346 _keys!600)))

(declare-fun b!1571680 () Bool)

(declare-fun res!1073792 () Bool)

(assert (=> b!1571680 (=> (not res!1073792) (not e!876334))))

(assert (=> b!1571680 (= res!1073792 (= (size!51169 _keys!600) (bvadd #b00000000000000000000000000000001 mask!889)))))

(declare-fun b!1571681 () Bool)

(declare-fun res!1073791 () Bool)

(assert (=> b!1571681 (=> (not res!1073791) (not e!876334))))

(declare-fun k!754 () (_ BitVec 64))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!1571681 (= res!1073791 (validKeyInArray!0 k!754))))

(declare-fun b!1571682 () Bool)

(assert (=> b!1571682 (= e!876334 (bvslt mask!889 #b00000000000000000000000000000000))))

(declare-fun lt!673669 () (_ BitVec 32))

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!1571682 (= lt!673669 (toIndex!0 k!754 mask!889))))

(assert (= (and start!134754 res!1073793) b!1571680))

(assert (= (and b!1571680 res!1073792) b!1571681))

(assert (= (and b!1571681 res!1073791) b!1571682))

(declare-fun m!1445567 () Bool)

(assert (=> start!134754 m!1445567))

(declare-fun m!1445569 () Bool)

(assert (=> start!134754 m!1445569))

(declare-fun m!1445571 () Bool)

(assert (=> b!1571681 m!1445571))

(declare-fun m!1445573 () Bool)

(assert (=> b!1571682 m!1445573))

(push 1)

(assert (not b!1571682))

(assert (not start!134754))

(assert (not b!1571681))

(check-sat)

(pop 1)

(push 1)

(check-sat)

(get-model)

(pop 1)

(declare-fun d!164611 () Bool)

(declare-fun lt!673681 () (_ BitVec 32))

(declare-fun lt!673680 () (_ BitVec 32))

(assert (=> d!164611 (= lt!673681 (bvmul (bvxor lt!673680 (bvlshr lt!673680 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!164611 (= lt!673680 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!164611 (and (bvsge mask!889 #b00000000000000000000000000000000) (let ((res!1073795 (let ((h!38205 ((_ extract 31 0) (bvand (bvxor k!754 (bvlshr k!754 #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!141304 (bvmul (bvxor h!38205 (bvlshr h!38205 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!141304 (bvlshr x!141304 #b00000000000000000000000000001101)) mask!889))))) (and (bvslt res!1073795 (bvadd mask!889 #b00000000000000000000000000000001)) (bvsge res!1073795 #b00000000000000000000000000000000))))))

(assert (=> d!164611 (= (toIndex!0 k!754 mask!889) (bvand (bvxor lt!673681 (bvlshr lt!673681 #b00000000000000000000000000001101)) mask!889))))

(assert (=> b!1571682 d!164611))

(declare-fun d!164615 () Bool)

(assert (=> d!164615 (= (validMask!0 mask!889) (and (or (= mask!889 #b00000000000000000000000000000111) (= mask!889 #b00000000000000000000000000001111) (= mask!889 #b00000000000000000000000000011111) (= mask!889 #b00000000000000000000000000111111) (= mask!889 #b00000000000000000000000001111111) (= mask!889 #b00000000000000000000000011111111) (= mask!889 #b00000000000000000000000111111111) (= mask!889 #b00000000000000000000001111111111) (= mask!889 #b00000000000000000000011111111111) (= mask!889 #b00000000000000000000111111111111) (= mask!889 #b00000000000000000001111111111111) (= mask!889 #b00000000000000000011111111111111) (= mask!889 #b00000000000000000111111111111111) (= mask!889 #b00000000000000001111111111111111) (= mask!889 #b00000000000000011111111111111111) (= mask!889 #b00000000000000111111111111111111) (= mask!889 #b00000000000001111111111111111111) (= mask!889 #b00000000000011111111111111111111) (= mask!889 #b00000000000111111111111111111111) (= mask!889 #b00000000001111111111111111111111) (= mask!889 #b00000000011111111111111111111111) (= mask!889 #b00000000111111111111111111111111) (= mask!889 #b00000001111111111111111111111111) (= mask!889 #b00000011111111111111111111111111) (= mask!889 #b00000111111111111111111111111111) (= mask!889 #b00001111111111111111111111111111) (= mask!889 #b00011111111111111111111111111111) (= mask!889 #b00111111111111111111111111111111)) (bvsle mask!889 #b00111111111111111111111111111111)))))

(assert (=> start!134754 d!164615))

(declare-fun d!164627 () Bool)

(assert (=> d!164627 (= (array_inv!39346 _keys!600) (bvsge (size!51169 _keys!600) #b00000000000000000000000000000000))))

(assert (=> start!134754 d!164627))

(declare-fun d!164629 () Bool)

(assert (=> d!164629 (= (validKeyInArray!0 k!754) (and (not (= k!754 