; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9594 () Bool)

(assert start!9594)

(declare-fun b!70696 () Bool)

(declare-fun b_free!2101 () Bool)

(declare-fun b_next!2101 () Bool)

(assert (=> b!70696 (= b_free!2101 (not b_next!2101))))

(declare-fun tp!8474 () Bool)

(declare-fun b_and!4353 () Bool)

(assert (=> b!70696 (= tp!8474 b_and!4353)))

(declare-fun b!70685 () Bool)

(declare-fun b_free!2103 () Bool)

(declare-fun b_next!2103 () Bool)

(assert (=> b!70685 (= b_free!2103 (not b_next!2103))))

(declare-fun tp!8473 () Bool)

(declare-fun b_and!4355 () Bool)

(assert (=> b!70685 (= tp!8473 b_and!4355)))

(declare-fun mapNonEmpty!3139 () Bool)

(declare-fun mapRes!3140 () Bool)

(declare-fun tp!8472 () Bool)

(declare-fun e!46286 () Bool)

(assert (=> mapNonEmpty!3139 (= mapRes!3140 (and tp!8472 e!46286))))

(declare-datatypes ((V!2937 0))(
  ( (V!2938 (val!1278 Int)) )
))
(declare-datatypes ((array!3863 0))(
  ( (array!3864 (arr!1844 (Array (_ BitVec 32) (_ BitVec 64))) (size!2081 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!890 0))(
  ( (ValueCellFull!890 (v!2515 V!2937)) (EmptyCell!890) )
))
(declare-datatypes ((array!3865 0))(
  ( (array!3866 (arr!1845 (Array (_ BitVec 32) ValueCell!890)) (size!2082 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!688 0))(
  ( (LongMapFixedSize!689 (defaultEntry!2191 Int) (mask!6148 (_ BitVec 32)) (extraKeys!2054 (_ BitVec 32)) (zeroValue!2095 V!2937) (minValue!2095 V!2937) (_size!393 (_ BitVec 32)) (_keys!3839 array!3863) (_values!2174 array!3865) (_vacant!393 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!496 0))(
  ( (Cell!497 (v!2516 LongMapFixedSize!688)) )
))
(declare-datatypes ((LongMap!496 0))(
  ( (LongMap!497 (underlying!259 Cell!496)) )
))
(declare-fun thiss!992 () LongMap!496)

(declare-fun mapRest!3140 () (Array (_ BitVec 32) ValueCell!890))

(declare-fun mapValue!3139 () ValueCell!890)

(declare-fun mapKey!3139 () (_ BitVec 32))

(assert (=> mapNonEmpty!3139 (= (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (store mapRest!3140 mapKey!3139 mapValue!3139))))

(declare-fun b!70679 () Bool)

(declare-fun e!46290 () Bool)

(declare-fun e!46292 () Bool)

(assert (=> b!70679 (= e!46290 e!46292)))

(declare-fun res!37773 () Bool)

(assert (=> b!70679 (=> (not res!37773) (not e!46292))))

(declare-datatypes ((tuple2!2108 0))(
  ( (tuple2!2109 (_1!1065 Bool) (_2!1065 LongMapFixedSize!688)) )
))
(declare-fun lt!31225 () tuple2!2108)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!70679 (= res!37773 (and (_1!1065 lt!31225) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!1996 0))(
  ( (Unit!1997) )
))
(declare-fun lt!31222 () Unit!1996)

(declare-fun e!46299 () Unit!1996)

(assert (=> b!70679 (= lt!31222 e!46299)))

(declare-fun c!10231 () Bool)

(declare-datatypes ((tuple2!2110 0))(
  ( (tuple2!2111 (_1!1066 (_ BitVec 64)) (_2!1066 V!2937)) )
))
(declare-datatypes ((List!1467 0))(
  ( (Nil!1464) (Cons!1463 (h!2049 tuple2!2110) (t!4995 List!1467)) )
))
(declare-datatypes ((ListLongMap!1395 0))(
  ( (ListLongMap!1396 (toList!713 List!1467)) )
))
(declare-fun lt!31227 () ListLongMap!1395)

(declare-fun contains!715 (ListLongMap!1395 (_ BitVec 64)) Bool)

(assert (=> b!70679 (= c!10231 (contains!715 lt!31227 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun lt!31220 () V!2937)

(declare-fun newMap!16 () LongMapFixedSize!688)

(declare-fun update!107 (LongMapFixedSize!688 (_ BitVec 64) V!2937) tuple2!2108)

(assert (=> b!70679 (= lt!31225 (update!107 newMap!16 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))

(declare-fun b!70680 () Bool)

(declare-fun res!37772 () Bool)

(declare-fun e!46296 () Bool)

(assert (=> b!70680 (=> (not res!37772) (not e!46296))))

(assert (=> b!70680 (= res!37772 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!70681 () Bool)

(declare-fun e!46291 () Bool)

(declare-fun tp_is_empty!2467 () Bool)

(assert (=> b!70681 (= e!46291 tp_is_empty!2467)))

(declare-fun b!70682 () Bool)

(declare-fun e!46294 () Bool)

(assert (=> b!70682 (= e!46294 tp_is_empty!2467)))

(declare-fun b!70683 () Bool)

(declare-fun e!46298 () Bool)

(assert (=> b!70683 (= e!46298 (or (not (= (size!2082 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6148 (v!2516 (underlying!259 thiss!992)))))) (not (= (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (size!2082 (_values!2174 (v!2516 (underlying!259 thiss!992)))))) (bvslt (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!70684 () Bool)

(declare-fun Unit!1998 () Unit!1996)

(assert (=> b!70684 (= e!46299 Unit!1998)))

(declare-fun e!46289 () Bool)

(declare-fun e!46284 () Bool)

(declare-fun array_inv!1133 (array!3863) Bool)

(declare-fun array_inv!1134 (array!3865) Bool)

(assert (=> b!70685 (= e!46289 (and tp!8473 tp_is_empty!2467 (array_inv!1133 (_keys!3839 newMap!16)) (array_inv!1134 (_values!2174 newMap!16)) e!46284))))

(declare-fun b!70686 () Bool)

(declare-fun e!46295 () Bool)

(declare-fun mapRes!3139 () Bool)

(assert (=> b!70686 (= e!46284 (and e!46295 mapRes!3139))))

(declare-fun condMapEmpty!3140 () Bool)

(declare-fun mapDefault!3139 () ValueCell!890)

(assert (=> b!70686 (= condMapEmpty!3140 (= (arr!1845 (_values!2174 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3139)))))

(declare-fun b!70687 () Bool)

(assert (=> b!70687 (= e!46295 tp_is_empty!2467)))

(declare-fun b!70688 () Bool)

(assert (=> b!70688 (= e!46286 tp_is_empty!2467)))

(declare-fun b!70689 () Bool)

(declare-fun res!37774 () Bool)

(assert (=> b!70689 (=> (not res!37774) (not e!46296))))

(assert (=> b!70689 (= res!37774 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6148 newMap!16)) (_size!393 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!70690 () Bool)

(declare-fun e!46283 () Bool)

(assert (=> b!70690 (= e!46283 e!46290)))

(declare-fun res!37775 () Bool)

(assert (=> b!70690 (=> (not res!37775) (not e!46290))))

(assert (=> b!70690 (= res!37775 (and (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1141 (ValueCell!890 V!2937) V!2937)

(declare-fun dynLambda!326 (Int (_ BitVec 64)) V!2937)

(assert (=> b!70690 (= lt!31220 (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) from!355) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70691 () Bool)

(declare-fun e!46297 () Bool)

(assert (=> b!70691 (= e!46297 (and e!46294 mapRes!3140))))

(declare-fun condMapEmpty!3139 () Bool)

(declare-fun mapDefault!3140 () ValueCell!890)

(assert (=> b!70691 (= condMapEmpty!3139 (= (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3140)))))

(declare-fun b!70678 () Bool)

(assert (=> b!70678 (= e!46292 (not e!46298))))

(declare-fun res!37778 () Bool)

(assert (=> b!70678 (=> res!37778 e!46298)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!70678 (= res!37778 (not (validMask!0 (mask!6148 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun lt!31219 () ListLongMap!1395)

(declare-fun lt!31228 () tuple2!2110)

(declare-fun lt!31223 () tuple2!2110)

(declare-fun +!91 (ListLongMap!1395 tuple2!2110) ListLongMap!1395)

(assert (=> b!70678 (= (+!91 (+!91 lt!31219 lt!31228) lt!31223) (+!91 (+!91 lt!31219 lt!31223) lt!31228))))

(assert (=> b!70678 (= lt!31223 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))

(assert (=> b!70678 (= lt!31228 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))

(declare-fun lt!31217 () Unit!1996)

(declare-fun addCommutativeForDiffKeys!11 (ListLongMap!1395 (_ BitVec 64) V!2937 (_ BitVec 64) V!2937) Unit!1996)

(assert (=> b!70678 (= lt!31217 (addCommutativeForDiffKeys!11 lt!31219 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!56 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) Int) ListLongMap!1395)

(assert (=> b!70678 (= lt!31219 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun res!37777 () Bool)

(assert (=> start!9594 (=> (not res!37777) (not e!46296))))

(declare-fun valid!300 (LongMap!496) Bool)

(assert (=> start!9594 (= res!37777 (valid!300 thiss!992))))

(assert (=> start!9594 e!46296))

(declare-fun e!46287 () Bool)

(assert (=> start!9594 e!46287))

(assert (=> start!9594 true))

(assert (=> start!9594 e!46289))

(declare-fun mapIsEmpty!3139 () Bool)

(assert (=> mapIsEmpty!3139 mapRes!3140))

(declare-fun b!70692 () Bool)

(declare-fun e!46282 () Bool)

(declare-fun e!46288 () Bool)

(assert (=> b!70692 (= e!46282 e!46288)))

(declare-fun b!70693 () Bool)

(assert (=> b!70693 (= e!46296 e!46283)))

(declare-fun res!37776 () Bool)

(assert (=> b!70693 (=> (not res!37776) (not e!46283))))

(declare-fun lt!31221 () ListLongMap!1395)

(assert (=> b!70693 (= res!37776 (= lt!31221 lt!31227))))

(declare-fun map!1155 (LongMapFixedSize!688) ListLongMap!1395)

(assert (=> b!70693 (= lt!31227 (map!1155 newMap!16))))

(declare-fun getCurrentListMap!411 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) Int) ListLongMap!1395)

(assert (=> b!70693 (= lt!31221 (getCurrentListMap!411 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!70694 () Bool)

(declare-fun res!37771 () Bool)

(assert (=> b!70694 (=> (not res!37771) (not e!46296))))

(declare-fun valid!301 (LongMapFixedSize!688) Bool)

(assert (=> b!70694 (= res!37771 (valid!301 newMap!16))))

(declare-fun b!70695 () Bool)

(declare-fun Unit!1999 () Unit!1996)

(assert (=> b!70695 (= e!46299 Unit!1999)))

(declare-fun lt!31226 () Unit!1996)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!41 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) (_ BitVec 32) Int) Unit!1996)

(assert (=> b!70695 (= lt!31226 (lemmaListMapContainsThenArrayContainsFrom!41 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3863 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!70695 (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!31218 () Unit!1996)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3863 (_ BitVec 32) (_ BitVec 32)) Unit!1996)

(assert (=> b!70695 (= lt!31218 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1468 0))(
  ( (Nil!1465) (Cons!1464 (h!2050 (_ BitVec 64)) (t!4996 List!1468)) )
))
(declare-fun arrayNoDuplicates!0 (array!3863 (_ BitVec 32) List!1468) Bool)

(assert (=> b!70695 (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) from!355 Nil!1465)))

(declare-fun lt!31224 () Unit!1996)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3863 (_ BitVec 32) (_ BitVec 64) List!1468) Unit!1996)

(assert (=> b!70695 (= lt!31224 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465)))))

(assert (=> b!70695 false))

(declare-fun mapIsEmpty!3140 () Bool)

(assert (=> mapIsEmpty!3140 mapRes!3139))

(assert (=> b!70696 (= e!46288 (and tp!8474 tp_is_empty!2467 (array_inv!1133 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (array_inv!1134 (_values!2174 (v!2516 (underlying!259 thiss!992)))) e!46297))))

(declare-fun mapNonEmpty!3140 () Bool)

(declare-fun tp!8471 () Bool)

(assert (=> mapNonEmpty!3140 (= mapRes!3139 (and tp!8471 e!46291))))

(declare-fun mapValue!3140 () ValueCell!890)

(declare-fun mapRest!3139 () (Array (_ BitVec 32) ValueCell!890))

(declare-fun mapKey!3140 () (_ BitVec 32))

(assert (=> mapNonEmpty!3140 (= (arr!1845 (_values!2174 newMap!16)) (store mapRest!3139 mapKey!3140 mapValue!3140))))

(declare-fun b!70697 () Bool)

(assert (=> b!70697 (= e!46287 e!46282)))

(assert (= (and start!9594 res!37777) b!70680))

(assert (= (and b!70680 res!37772) b!70694))

(assert (= (and b!70694 res!37771) b!70689))

(assert (= (and b!70689 res!37774) b!70693))

(assert (= (and b!70693 res!37776) b!70690))

(assert (= (and b!70690 res!37775) b!70679))

(assert (= (and b!70679 c!10231) b!70695))

(assert (= (and b!70679 (not c!10231)) b!70684))

(assert (= (and b!70679 res!37773) b!70678))

(assert (= (and b!70678 (not res!37778)) b!70683))

(assert (= (and b!70691 condMapEmpty!3139) mapIsEmpty!3139))

(assert (= (and b!70691 (not condMapEmpty!3139)) mapNonEmpty!3139))

(get-info :version)

(assert (= (and mapNonEmpty!3139 ((_ is ValueCellFull!890) mapValue!3139)) b!70688))

(assert (= (and b!70691 ((_ is ValueCellFull!890) mapDefault!3140)) b!70682))

(assert (= b!70696 b!70691))

(assert (= b!70692 b!70696))

(assert (= b!70697 b!70692))

(assert (= start!9594 b!70697))

(assert (= (and b!70686 condMapEmpty!3140) mapIsEmpty!3140))

(assert (= (and b!70686 (not condMapEmpty!3140)) mapNonEmpty!3140))

(assert (= (and mapNonEmpty!3140 ((_ is ValueCellFull!890) mapValue!3140)) b!70681))

(assert (= (and b!70686 ((_ is ValueCellFull!890) mapDefault!3139)) b!70687))

(assert (= b!70685 b!70686))

(assert (= start!9594 b!70685))

(declare-fun b_lambda!3181 () Bool)

(assert (=> (not b_lambda!3181) (not b!70690)))

(declare-fun t!4992 () Bool)

(declare-fun tb!1501 () Bool)

(assert (=> (and b!70696 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))) t!4992) tb!1501))

(declare-fun result!2641 () Bool)

(assert (=> tb!1501 (= result!2641 tp_is_empty!2467)))

(assert (=> b!70690 t!4992))

(declare-fun b_and!4357 () Bool)

(assert (= b_and!4353 (and (=> t!4992 result!2641) b_and!4357)))

(declare-fun tb!1503 () Bool)

(declare-fun t!4994 () Bool)

(assert (=> (and b!70685 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))) t!4994) tb!1503))

(declare-fun result!2645 () Bool)

(assert (= result!2645 result!2641))

(assert (=> b!70690 t!4994))

(declare-fun b_and!4359 () Bool)

(assert (= b_and!4355 (and (=> t!4994 result!2645) b_and!4359)))

(declare-fun m!67819 () Bool)

(assert (=> b!70690 m!67819))

(declare-fun m!67821 () Bool)

(assert (=> b!70690 m!67821))

(declare-fun m!67823 () Bool)

(assert (=> b!70690 m!67823))

(assert (=> b!70690 m!67821))

(assert (=> b!70690 m!67823))

(declare-fun m!67825 () Bool)

(assert (=> b!70690 m!67825))

(declare-fun m!67827 () Bool)

(assert (=> b!70693 m!67827))

(declare-fun m!67829 () Bool)

(assert (=> b!70693 m!67829))

(declare-fun m!67831 () Bool)

(assert (=> mapNonEmpty!3140 m!67831))

(declare-fun m!67833 () Bool)

(assert (=> b!70696 m!67833))

(declare-fun m!67835 () Bool)

(assert (=> b!70696 m!67835))

(declare-fun m!67837 () Bool)

(assert (=> b!70694 m!67837))

(declare-fun m!67839 () Bool)

(assert (=> mapNonEmpty!3139 m!67839))

(assert (=> b!70679 m!67819))

(assert (=> b!70679 m!67819))

(declare-fun m!67841 () Bool)

(assert (=> b!70679 m!67841))

(assert (=> b!70679 m!67819))

(declare-fun m!67843 () Bool)

(assert (=> b!70679 m!67843))

(declare-fun m!67845 () Bool)

(assert (=> b!70678 m!67845))

(assert (=> b!70678 m!67819))

(declare-fun m!67847 () Bool)

(assert (=> b!70678 m!67847))

(declare-fun m!67849 () Bool)

(assert (=> b!70678 m!67849))

(assert (=> b!70678 m!67819))

(declare-fun m!67851 () Bool)

(assert (=> b!70678 m!67851))

(assert (=> b!70678 m!67847))

(declare-fun m!67853 () Bool)

(assert (=> b!70678 m!67853))

(assert (=> b!70678 m!67853))

(declare-fun m!67855 () Bool)

(assert (=> b!70678 m!67855))

(declare-fun m!67857 () Bool)

(assert (=> b!70678 m!67857))

(declare-fun m!67859 () Bool)

(assert (=> start!9594 m!67859))

(declare-fun m!67861 () Bool)

(assert (=> b!70695 m!67861))

(declare-fun m!67863 () Bool)

(assert (=> b!70695 m!67863))

(assert (=> b!70695 m!67819))

(declare-fun m!67865 () Bool)

(assert (=> b!70695 m!67865))

(assert (=> b!70695 m!67819))

(assert (=> b!70695 m!67819))

(declare-fun m!67867 () Bool)

(assert (=> b!70695 m!67867))

(assert (=> b!70695 m!67819))

(declare-fun m!67869 () Bool)

(assert (=> b!70695 m!67869))

(declare-fun m!67871 () Bool)

(assert (=> b!70685 m!67871))

(declare-fun m!67873 () Bool)

(assert (=> b!70685 m!67873))

(check-sat (not mapNonEmpty!3140) (not b_lambda!3181) (not b!70685) (not b_next!2101) (not b!70694) (not b!70693) (not start!9594) (not mapNonEmpty!3139) (not b!70690) (not b!70679) (not b!70695) (not b!70696) b_and!4357 (not b_next!2103) b_and!4359 tp_is_empty!2467 (not b!70678))
(check-sat b_and!4357 b_and!4359 (not b_next!2101) (not b_next!2103))
(get-model)

(declare-fun b_lambda!3187 () Bool)

(assert (= b_lambda!3181 (or (and b!70696 b_free!2101) (and b!70685 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))) b_lambda!3187)))

(check-sat (not mapNonEmpty!3140) (not b!70685) (not b_next!2101) (not b!70694) (not b!70693) (not start!9594) (not mapNonEmpty!3139) (not b!70690) (not b!70679) (not b!70695) (not b_lambda!3187) (not b!70696) b_and!4357 (not b_next!2103) b_and!4359 tp_is_empty!2467 (not b!70678))
(check-sat b_and!4357 b_and!4359 (not b_next!2101) (not b_next!2103))
(get-model)

(declare-fun d!15827 () Bool)

(assert (=> d!15827 (= (map!1155 newMap!16) (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun bs!3058 () Bool)

(assert (= bs!3058 d!15827))

(declare-fun m!67987 () Bool)

(assert (=> bs!3058 m!67987))

(assert (=> b!70693 d!15827))

(declare-fun bm!6051 () Bool)

(declare-fun call!6056 () ListLongMap!1395)

(declare-fun call!6054 () ListLongMap!1395)

(assert (=> bm!6051 (= call!6056 call!6054)))

(declare-fun b!70866 () Bool)

(declare-fun e!46439 () ListLongMap!1395)

(assert (=> b!70866 (= e!46439 call!6056)))

(declare-fun b!70867 () Bool)

(declare-fun e!46436 () ListLongMap!1395)

(assert (=> b!70867 (= e!46436 (+!91 call!6054 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!70868 () Bool)

(declare-fun res!37845 () Bool)

(declare-fun e!46440 () Bool)

(assert (=> b!70868 (=> (not res!37845) (not e!46440))))

(declare-fun e!46444 () Bool)

(assert (=> b!70868 (= res!37845 e!46444)))

(declare-fun c!10252 () Bool)

(assert (=> b!70868 (= c!10252 (not (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6052 () Bool)

(declare-fun call!6059 () Bool)

(declare-fun lt!31365 () ListLongMap!1395)

(assert (=> bm!6052 (= call!6059 (contains!715 lt!31365 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6053 () Bool)

(declare-fun call!6060 () Bool)

(assert (=> bm!6053 (= call!6060 (contains!715 lt!31365 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6054 () Bool)

(declare-fun call!6057 () ListLongMap!1395)

(assert (=> bm!6054 (= call!6057 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!70869 () Bool)

(declare-fun res!37853 () Bool)

(assert (=> b!70869 (=> (not res!37853) (not e!46440))))

(declare-fun e!46443 () Bool)

(assert (=> b!70869 (= res!37853 e!46443)))

(declare-fun res!37850 () Bool)

(assert (=> b!70869 (=> res!37850 e!46443)))

(declare-fun e!46441 () Bool)

(assert (=> b!70869 (= res!37850 (not e!46441))))

(declare-fun res!37846 () Bool)

(assert (=> b!70869 (=> (not res!37846) (not e!46441))))

(assert (=> b!70869 (= res!37846 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!70870 () Bool)

(declare-fun e!46435 () Bool)

(assert (=> b!70870 (= e!46440 e!46435)))

(declare-fun c!10250 () Bool)

(assert (=> b!70870 (= c!10250 (not (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70871 () Bool)

(declare-fun e!46445 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!70871 (= e!46445 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!70872 () Bool)

(declare-fun c!10255 () Bool)

(assert (=> b!70872 (= c!10255 (and (not (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46446 () ListLongMap!1395)

(assert (=> b!70872 (= e!46439 e!46446)))

(declare-fun b!70873 () Bool)

(declare-fun e!46437 () Unit!1996)

(declare-fun lt!31347 () Unit!1996)

(assert (=> b!70873 (= e!46437 lt!31347)))

(declare-fun lt!31358 () ListLongMap!1395)

(assert (=> b!70873 (= lt!31358 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun lt!31364 () (_ BitVec 64))

(assert (=> b!70873 (= lt!31364 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31361 () (_ BitVec 64))

(assert (=> b!70873 (= lt!31361 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31362 () Unit!1996)

(declare-fun addStillContains!50 (ListLongMap!1395 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1996)

(assert (=> b!70873 (= lt!31362 (addStillContains!50 lt!31358 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31361))))

(assert (=> b!70873 (contains!715 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31361)))

(declare-fun lt!31356 () Unit!1996)

(assert (=> b!70873 (= lt!31356 lt!31362)))

(declare-fun lt!31359 () ListLongMap!1395)

(assert (=> b!70873 (= lt!31359 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun lt!31351 () (_ BitVec 64))

(assert (=> b!70873 (= lt!31351 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31363 () (_ BitVec 64))

(assert (=> b!70873 (= lt!31363 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31366 () Unit!1996)

(declare-fun addApplyDifferent!50 (ListLongMap!1395 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1996)

(assert (=> b!70873 (= lt!31366 (addApplyDifferent!50 lt!31359 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31363))))

(declare-fun apply!74 (ListLongMap!1395 (_ BitVec 64)) V!2937)

(assert (=> b!70873 (= (apply!74 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31363) (apply!74 lt!31359 lt!31363))))

(declare-fun lt!31352 () Unit!1996)

(assert (=> b!70873 (= lt!31352 lt!31366)))

(declare-fun lt!31348 () ListLongMap!1395)

(assert (=> b!70873 (= lt!31348 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun lt!31354 () (_ BitVec 64))

(assert (=> b!70873 (= lt!31354 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31346 () (_ BitVec 64))

(assert (=> b!70873 (= lt!31346 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31349 () Unit!1996)

(assert (=> b!70873 (= lt!31349 (addApplyDifferent!50 lt!31348 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31346))))

(assert (=> b!70873 (= (apply!74 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31346) (apply!74 lt!31348 lt!31346))))

(declare-fun lt!31353 () Unit!1996)

(assert (=> b!70873 (= lt!31353 lt!31349)))

(declare-fun lt!31357 () ListLongMap!1395)

(assert (=> b!70873 (= lt!31357 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun lt!31350 () (_ BitVec 64))

(assert (=> b!70873 (= lt!31350 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31355 () (_ BitVec 64))

(assert (=> b!70873 (= lt!31355 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!70873 (= lt!31347 (addApplyDifferent!50 lt!31357 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31355))))

(assert (=> b!70873 (= (apply!74 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31355) (apply!74 lt!31357 lt!31355))))

(declare-fun b!70874 () Bool)

(declare-fun call!6058 () ListLongMap!1395)

(assert (=> b!70874 (= e!46446 call!6058)))

(declare-fun call!6055 () ListLongMap!1395)

(declare-fun c!10253 () Bool)

(declare-fun bm!6055 () Bool)

(declare-fun c!10254 () Bool)

(assert (=> bm!6055 (= call!6054 (+!91 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058)) (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!70875 () Bool)

(declare-fun e!46438 () Bool)

(assert (=> b!70875 (= e!46435 e!46438)))

(declare-fun res!37848 () Bool)

(assert (=> b!70875 (= res!37848 call!6059)))

(assert (=> b!70875 (=> (not res!37848) (not e!46438))))

(declare-fun b!70876 () Bool)

(assert (=> b!70876 (= e!46438 (= (apply!74 lt!31365 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun bm!6056 () Bool)

(assert (=> bm!6056 (= call!6058 call!6055)))

(declare-fun b!70877 () Bool)

(assert (=> b!70877 (= e!46436 e!46439)))

(assert (=> b!70877 (= c!10254 (and (not (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70878 () Bool)

(declare-fun e!46434 () Bool)

(assert (=> b!70878 (= e!46444 e!46434)))

(declare-fun res!37849 () Bool)

(assert (=> b!70878 (= res!37849 call!6060)))

(assert (=> b!70878 (=> (not res!37849) (not e!46434))))

(declare-fun bm!6057 () Bool)

(assert (=> bm!6057 (= call!6055 call!6057)))

(declare-fun e!46442 () Bool)

(declare-fun b!70879 () Bool)

(assert (=> b!70879 (= e!46442 (= (apply!74 lt!31365 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70879 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2082 (_values!2174 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> b!70879 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun d!15829 () Bool)

(assert (=> d!15829 e!46440))

(declare-fun res!37851 () Bool)

(assert (=> d!15829 (=> (not res!37851) (not e!46440))))

(assert (=> d!15829 (= res!37851 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun lt!31345 () ListLongMap!1395)

(assert (=> d!15829 (= lt!31365 lt!31345)))

(declare-fun lt!31360 () Unit!1996)

(assert (=> d!15829 (= lt!31360 e!46437)))

(declare-fun c!10251 () Bool)

(assert (=> d!15829 (= c!10251 e!46445)))

(declare-fun res!37847 () Bool)

(assert (=> d!15829 (=> (not res!37847) (not e!46445))))

(assert (=> d!15829 (= res!37847 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!15829 (= lt!31345 e!46436)))

(assert (=> d!15829 (= c!10253 (and (not (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15829 (validMask!0 (mask!6148 (v!2516 (underlying!259 thiss!992))))))

(assert (=> d!15829 (= (getCurrentListMap!411 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))) lt!31365)))

(declare-fun b!70880 () Bool)

(declare-fun Unit!2006 () Unit!1996)

(assert (=> b!70880 (= e!46437 Unit!2006)))

(declare-fun b!70881 () Bool)

(assert (=> b!70881 (= e!46434 (= (apply!74 lt!31365 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!70882 () Bool)

(assert (=> b!70882 (= e!46441 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!70883 () Bool)

(assert (=> b!70883 (= e!46435 (not call!6059))))

(declare-fun b!70884 () Bool)

(assert (=> b!70884 (= e!46444 (not call!6060))))

(declare-fun b!70885 () Bool)

(assert (=> b!70885 (= e!46443 e!46442)))

(declare-fun res!37852 () Bool)

(assert (=> b!70885 (=> (not res!37852) (not e!46442))))

(assert (=> b!70885 (= res!37852 (contains!715 lt!31365 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!70885 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!70886 () Bool)

(assert (=> b!70886 (= e!46446 call!6056)))

(assert (= (and d!15829 c!10253) b!70867))

(assert (= (and d!15829 (not c!10253)) b!70877))

(assert (= (and b!70877 c!10254) b!70866))

(assert (= (and b!70877 (not c!10254)) b!70872))

(assert (= (and b!70872 c!10255) b!70886))

(assert (= (and b!70872 (not c!10255)) b!70874))

(assert (= (or b!70886 b!70874) bm!6056))

(assert (= (or b!70866 bm!6056) bm!6057))

(assert (= (or b!70866 b!70886) bm!6051))

(assert (= (or b!70867 bm!6057) bm!6054))

(assert (= (or b!70867 bm!6051) bm!6055))

(assert (= (and d!15829 res!37847) b!70871))

(assert (= (and d!15829 c!10251) b!70873))

(assert (= (and d!15829 (not c!10251)) b!70880))

(assert (= (and d!15829 res!37851) b!70869))

(assert (= (and b!70869 res!37846) b!70882))

(assert (= (and b!70869 (not res!37850)) b!70885))

(assert (= (and b!70885 res!37852) b!70879))

(assert (= (and b!70869 res!37853) b!70868))

(assert (= (and b!70868 c!10252) b!70878))

(assert (= (and b!70868 (not c!10252)) b!70884))

(assert (= (and b!70878 res!37849) b!70881))

(assert (= (or b!70878 b!70884) bm!6053))

(assert (= (and b!70868 res!37845) b!70870))

(assert (= (and b!70870 c!10250) b!70875))

(assert (= (and b!70870 (not c!10250)) b!70883))

(assert (= (and b!70875 res!37848) b!70876))

(assert (= (or b!70875 b!70883) bm!6052))

(declare-fun b_lambda!3189 () Bool)

(assert (=> (not b_lambda!3189) (not b!70879)))

(assert (=> b!70879 t!4992))

(declare-fun b_and!4377 () Bool)

(assert (= b_and!4357 (and (=> t!4992 result!2641) b_and!4377)))

(assert (=> b!70879 t!4994))

(declare-fun b_and!4379 () Bool)

(assert (= b_and!4359 (and (=> t!4994 result!2645) b_and!4379)))

(declare-fun m!67989 () Bool)

(assert (=> b!70881 m!67989))

(declare-fun m!67991 () Bool)

(assert (=> b!70876 m!67991))

(assert (=> d!15829 m!67845))

(declare-fun m!67993 () Bool)

(assert (=> bm!6052 m!67993))

(declare-fun m!67995 () Bool)

(assert (=> b!70882 m!67995))

(assert (=> b!70882 m!67995))

(declare-fun m!67997 () Bool)

(assert (=> b!70882 m!67997))

(declare-fun m!67999 () Bool)

(assert (=> bm!6053 m!67999))

(assert (=> b!70885 m!67995))

(assert (=> b!70885 m!67995))

(declare-fun m!68001 () Bool)

(assert (=> b!70885 m!68001))

(assert (=> b!70871 m!67995))

(assert (=> b!70871 m!67995))

(assert (=> b!70871 m!67997))

(declare-fun m!68003 () Bool)

(assert (=> bm!6055 m!68003))

(assert (=> bm!6054 m!67857))

(declare-fun m!68005 () Bool)

(assert (=> b!70867 m!68005))

(declare-fun m!68007 () Bool)

(assert (=> b!70873 m!68007))

(declare-fun m!68009 () Bool)

(assert (=> b!70873 m!68009))

(declare-fun m!68011 () Bool)

(assert (=> b!70873 m!68011))

(declare-fun m!68013 () Bool)

(assert (=> b!70873 m!68013))

(declare-fun m!68015 () Bool)

(assert (=> b!70873 m!68015))

(declare-fun m!68017 () Bool)

(assert (=> b!70873 m!68017))

(declare-fun m!68019 () Bool)

(assert (=> b!70873 m!68019))

(declare-fun m!68021 () Bool)

(assert (=> b!70873 m!68021))

(assert (=> b!70873 m!67995))

(assert (=> b!70873 m!68015))

(declare-fun m!68023 () Bool)

(assert (=> b!70873 m!68023))

(assert (=> b!70873 m!68011))

(declare-fun m!68025 () Bool)

(assert (=> b!70873 m!68025))

(declare-fun m!68027 () Bool)

(assert (=> b!70873 m!68027))

(declare-fun m!68029 () Bool)

(assert (=> b!70873 m!68029))

(declare-fun m!68031 () Bool)

(assert (=> b!70873 m!68031))

(assert (=> b!70873 m!67857))

(assert (=> b!70873 m!68025))

(declare-fun m!68033 () Bool)

(assert (=> b!70873 m!68033))

(declare-fun m!68035 () Bool)

(assert (=> b!70873 m!68035))

(assert (=> b!70873 m!68019))

(assert (=> b!70879 m!67823))

(assert (=> b!70879 m!67995))

(declare-fun m!68037 () Bool)

(assert (=> b!70879 m!68037))

(declare-fun m!68039 () Bool)

(assert (=> b!70879 m!68039))

(assert (=> b!70879 m!67823))

(declare-fun m!68041 () Bool)

(assert (=> b!70879 m!68041))

(assert (=> b!70879 m!68039))

(assert (=> b!70879 m!67995))

(assert (=> b!70693 d!15829))

(declare-fun d!15831 () Bool)

(assert (=> d!15831 (= (array_inv!1133 (_keys!3839 newMap!16)) (bvsge (size!2081 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70685 d!15831))

(declare-fun d!15833 () Bool)

(assert (=> d!15833 (= (array_inv!1134 (_values!2174 newMap!16)) (bvsge (size!2082 (_values!2174 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70685 d!15833))

(declare-fun d!15835 () Bool)

(assert (=> d!15835 (= (valid!300 thiss!992) (valid!301 (v!2516 (underlying!259 thiss!992))))))

(declare-fun bs!3059 () Bool)

(assert (= bs!3059 d!15835))

(declare-fun m!68043 () Bool)

(assert (=> bs!3059 m!68043))

(assert (=> start!9594 d!15835))

(declare-fun d!15837 () Bool)

(declare-fun c!10258 () Bool)

(assert (=> d!15837 (= c!10258 ((_ is ValueCellFull!890) (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun e!46449 () V!2937)

(assert (=> d!15837 (= (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) from!355) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46449)))

(declare-fun b!70891 () Bool)

(declare-fun get!1144 (ValueCell!890 V!2937) V!2937)

(assert (=> b!70891 (= e!46449 (get!1144 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) from!355) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70892 () Bool)

(declare-fun get!1145 (ValueCell!890 V!2937) V!2937)

(assert (=> b!70892 (= e!46449 (get!1145 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) from!355) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15837 c!10258) b!70891))

(assert (= (and d!15837 (not c!10258)) b!70892))

(assert (=> b!70891 m!67821))

(assert (=> b!70891 m!67823))

(declare-fun m!68045 () Bool)

(assert (=> b!70891 m!68045))

(assert (=> b!70892 m!67821))

(assert (=> b!70892 m!67823))

(declare-fun m!68047 () Bool)

(assert (=> b!70892 m!68047))

(assert (=> b!70690 d!15837))

(declare-fun d!15839 () Bool)

(declare-fun e!46455 () Bool)

(assert (=> d!15839 e!46455))

(declare-fun res!37856 () Bool)

(assert (=> d!15839 (=> res!37856 e!46455)))

(declare-fun lt!31378 () Bool)

(assert (=> d!15839 (= res!37856 (not lt!31378))))

(declare-fun lt!31377 () Bool)

(assert (=> d!15839 (= lt!31378 lt!31377)))

(declare-fun lt!31376 () Unit!1996)

(declare-fun e!46454 () Unit!1996)

(assert (=> d!15839 (= lt!31376 e!46454)))

(declare-fun c!10261 () Bool)

(assert (=> d!15839 (= c!10261 lt!31377)))

(declare-fun containsKey!136 (List!1467 (_ BitVec 64)) Bool)

(assert (=> d!15839 (= lt!31377 (containsKey!136 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!15839 (= (contains!715 lt!31227 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) lt!31378)))

(declare-fun b!70899 () Bool)

(declare-fun lt!31375 () Unit!1996)

(assert (=> b!70899 (= e!46454 lt!31375)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!84 (List!1467 (_ BitVec 64)) Unit!1996)

(assert (=> b!70899 (= lt!31375 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-datatypes ((Option!139 0))(
  ( (Some!138 (v!2522 V!2937)) (None!137) )
))
(declare-fun isDefined!85 (Option!139) Bool)

(declare-fun getValueByKey!133 (List!1467 (_ BitVec 64)) Option!139)

(assert (=> b!70899 (isDefined!85 (getValueByKey!133 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!70900 () Bool)

(declare-fun Unit!2007 () Unit!1996)

(assert (=> b!70900 (= e!46454 Unit!2007)))

(declare-fun b!70901 () Bool)

(assert (=> b!70901 (= e!46455 (isDefined!85 (getValueByKey!133 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (= (and d!15839 c!10261) b!70899))

(assert (= (and d!15839 (not c!10261)) b!70900))

(assert (= (and d!15839 (not res!37856)) b!70901))

(assert (=> d!15839 m!67819))

(declare-fun m!68049 () Bool)

(assert (=> d!15839 m!68049))

(assert (=> b!70899 m!67819))

(declare-fun m!68051 () Bool)

(assert (=> b!70899 m!68051))

(assert (=> b!70899 m!67819))

(declare-fun m!68053 () Bool)

(assert (=> b!70899 m!68053))

(assert (=> b!70899 m!68053))

(declare-fun m!68055 () Bool)

(assert (=> b!70899 m!68055))

(assert (=> b!70901 m!67819))

(assert (=> b!70901 m!68053))

(assert (=> b!70901 m!68053))

(assert (=> b!70901 m!68055))

(assert (=> b!70679 d!15839))

(declare-fun bm!6106 () Bool)

(declare-fun call!6127 () ListLongMap!1395)

(declare-fun call!6116 () ListLongMap!1395)

(assert (=> bm!6106 (= call!6127 call!6116)))

(declare-fun bm!6107 () Bool)

(declare-fun call!6119 () ListLongMap!1395)

(declare-fun lt!31440 () tuple2!2108)

(assert (=> bm!6107 (= call!6119 (map!1155 (_2!1065 lt!31440)))))

(declare-fun b!70987 () Bool)

(declare-fun e!46505 () ListLongMap!1395)

(assert (=> b!70987 (= e!46505 call!6127)))

(declare-fun b!70988 () Bool)

(declare-fun lt!31455 () Unit!1996)

(declare-fun lt!31442 () Unit!1996)

(assert (=> b!70988 (= lt!31455 lt!31442)))

(declare-fun call!6117 () ListLongMap!1395)

(declare-fun call!6111 () ListLongMap!1395)

(assert (=> b!70988 (= call!6117 call!6111)))

(declare-fun lt!31453 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 V!2937 Int) Unit!1996)

(assert (=> b!70988 (= lt!31442 (lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) lt!31453 (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) lt!31220 (defaultEntry!2191 newMap!16)))))

(assert (=> b!70988 (= lt!31453 (bvor (extraKeys!2054 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!46508 () tuple2!2108)

(assert (=> b!70988 (= e!46508 (tuple2!2109 true (LongMapFixedSize!689 (defaultEntry!2191 newMap!16) (mask!6148 newMap!16) (bvor (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) (zeroValue!2095 newMap!16) lt!31220 (_size!393 newMap!16) (_keys!3839 newMap!16) (_values!2174 newMap!16) (_vacant!393 newMap!16))))))

(declare-fun bm!6108 () Bool)

(declare-fun call!6126 () Bool)

(declare-fun call!6109 () Bool)

(assert (=> bm!6108 (= call!6126 call!6109)))

(declare-fun b!70989 () Bool)

(declare-datatypes ((SeekEntryResult!229 0))(
  ( (MissingZero!229 (index!3046 (_ BitVec 32))) (Found!229 (index!3047 (_ BitVec 32))) (Intermediate!229 (undefined!1041 Bool) (index!3048 (_ BitVec 32)) (x!11001 (_ BitVec 32))) (Undefined!229) (MissingVacant!229 (index!3049 (_ BitVec 32))) )
))
(declare-fun lt!31439 () SeekEntryResult!229)

(declare-fun e!46502 () Bool)

(assert (=> b!70989 (= e!46502 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31439)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!70990 () Bool)

(declare-fun lt!31445 () tuple2!2108)

(declare-fun call!6113 () tuple2!2108)

(assert (=> b!70990 (= lt!31445 call!6113)))

(declare-fun e!46516 () tuple2!2108)

(assert (=> b!70990 (= e!46516 (tuple2!2109 (_1!1065 lt!31445) (_2!1065 lt!31445)))))

(declare-fun b!70991 () Bool)

(assert (=> b!70991 (= e!46505 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!70992 () Bool)

(declare-fun c!10300 () Bool)

(declare-fun lt!31452 () SeekEntryResult!229)

(assert (=> b!70992 (= c!10300 ((_ is MissingVacant!229) lt!31452))))

(declare-fun e!46519 () tuple2!2108)

(declare-fun e!46520 () tuple2!2108)

(assert (=> b!70992 (= e!46519 e!46520)))

(declare-fun b!70993 () Bool)

(declare-fun e!46518 () Bool)

(declare-fun call!6118 () Bool)

(assert (=> b!70993 (= e!46518 (not call!6118))))

(declare-fun d!15841 () Bool)

(declare-fun e!46501 () Bool)

(assert (=> d!15841 e!46501))

(declare-fun res!37888 () Bool)

(assert (=> d!15841 (=> (not res!37888) (not e!46501))))

(assert (=> d!15841 (= res!37888 (valid!301 (_2!1065 lt!31440)))))

(declare-fun e!46513 () tuple2!2108)

(assert (=> d!15841 (= lt!31440 e!46513)))

(declare-fun c!10293 () Bool)

(assert (=> d!15841 (= c!10293 (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvneg (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (=> d!15841 (valid!301 newMap!16)))

(assert (=> d!15841 (= (update!107 newMap!16 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220) lt!31440)))

(declare-fun b!70986 () Bool)

(declare-fun e!46504 () Unit!1996)

(declare-fun lt!31434 () Unit!1996)

(assert (=> b!70986 (= e!46504 lt!31434)))

(declare-fun call!6130 () Unit!1996)

(assert (=> b!70986 (= lt!31434 call!6130)))

(declare-fun call!6121 () SeekEntryResult!229)

(assert (=> b!70986 (= lt!31439 call!6121)))

(declare-fun res!37898 () Bool)

(assert (=> b!70986 (= res!37898 ((_ is Found!229) lt!31439))))

(assert (=> b!70986 (=> (not res!37898) (not e!46502))))

(assert (=> b!70986 e!46502))

(declare-fun bm!6109 () Bool)

(declare-fun call!6123 () Bool)

(declare-fun call!6132 () Bool)

(assert (=> bm!6109 (= call!6123 call!6132)))

(declare-fun b!70994 () Bool)

(assert (=> b!70994 (= e!46513 e!46508)))

(declare-fun c!10301 () Bool)

(assert (=> b!70994 (= c!10301 (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70995 () Bool)

(declare-fun e!46512 () Bool)

(declare-fun lt!31459 () SeekEntryResult!229)

(assert (=> b!70995 (= e!46512 ((_ is Undefined!229) lt!31459))))

(declare-fun b!70996 () Bool)

(declare-fun e!46509 () Bool)

(declare-fun e!46506 () Bool)

(assert (=> b!70996 (= e!46509 e!46506)))

(declare-fun res!37896 () Bool)

(assert (=> b!70996 (= res!37896 (contains!715 call!6119 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> b!70996 (=> (not res!37896) (not e!46506))))

(declare-fun b!70997 () Bool)

(assert (=> b!70997 (= e!46501 e!46509)))

(declare-fun c!10298 () Bool)

(assert (=> b!70997 (= c!10298 (_1!1065 lt!31440))))

(declare-fun b!70998 () Bool)

(declare-fun e!46511 () Unit!1996)

(declare-fun Unit!2008 () Unit!1996)

(assert (=> b!70998 (= e!46511 Unit!2008)))

(declare-fun lt!31456 () Unit!1996)

(assert (=> b!70998 (= lt!31456 call!6130)))

(declare-fun lt!31435 () SeekEntryResult!229)

(declare-fun call!6128 () SeekEntryResult!229)

(assert (=> b!70998 (= lt!31435 call!6128)))

(declare-fun res!37894 () Bool)

(assert (=> b!70998 (= res!37894 ((_ is Found!229) lt!31435))))

(declare-fun e!46517 () Bool)

(assert (=> b!70998 (=> (not res!37894) (not e!46517))))

(assert (=> b!70998 e!46517))

(declare-fun lt!31448 () Unit!1996)

(assert (=> b!70998 (= lt!31448 lt!31456)))

(assert (=> b!70998 false))

(declare-fun b!70999 () Bool)

(declare-fun c!10299 () Bool)

(assert (=> b!70999 (= c!10299 ((_ is MissingVacant!229) lt!31459))))

(declare-fun e!46507 () Bool)

(assert (=> b!70999 (= e!46507 e!46512)))

(declare-fun bm!6110 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) Int) Unit!1996)

(assert (=> bm!6110 (= call!6130 (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(declare-fun bm!6111 () Bool)

(declare-fun call!6115 () Bool)

(declare-fun call!6125 () Bool)

(assert (=> bm!6111 (= call!6115 call!6125)))

(declare-fun b!71000 () Bool)

(declare-fun lt!31438 () Unit!1996)

(declare-fun lt!31443 () Unit!1996)

(assert (=> b!71000 (= lt!31438 lt!31443)))

(declare-fun call!6114 () Bool)

(assert (=> b!71000 call!6114))

(declare-fun lt!31437 () array!3865)

(declare-fun lemmaValidKeyInArrayIsInListMap!83 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) Int) Unit!1996)

(assert (=> b!71000 (= lt!31443 (lemmaValidKeyInArrayIsInListMap!83 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3047 lt!31452) (defaultEntry!2191 newMap!16)))))

(assert (=> b!71000 (= lt!31437 (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))))

(declare-fun lt!31457 () Unit!1996)

(declare-fun lt!31446 () Unit!1996)

(assert (=> b!71000 (= lt!31457 lt!31446)))

(declare-fun call!6122 () ListLongMap!1395)

(declare-fun call!6129 () ListLongMap!1395)

(assert (=> b!71000 (= call!6122 call!6129)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) (_ BitVec 64) V!2937 Int) Unit!1996)

(assert (=> b!71000 (= lt!31446 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3047 lt!31452) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31450 () Unit!1996)

(assert (=> b!71000 (= lt!31450 e!46504)))

(declare-fun c!10291 () Bool)

(assert (=> b!71000 (= c!10291 (contains!715 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> b!71000 (= e!46516 (tuple2!2109 true (LongMapFixedSize!689 (defaultEntry!2191 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (_size!393 newMap!16) (_keys!3839 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (_vacant!393 newMap!16))))))

(declare-fun bm!6112 () Bool)

(declare-fun call!6112 () ListLongMap!1395)

(assert (=> bm!6112 (= call!6111 call!6112)))

(declare-fun b!71001 () Bool)

(declare-fun res!37885 () Bool)

(assert (=> b!71001 (=> (not res!37885) (not e!46518))))

(assert (=> b!71001 (= res!37885 call!6126)))

(declare-fun e!46515 () Bool)

(assert (=> b!71001 (= e!46515 e!46518)))

(declare-fun b!71002 () Bool)

(declare-fun e!46503 () Bool)

(assert (=> b!71002 (= e!46503 (not call!6115))))

(declare-fun bm!6113 () Bool)

(declare-fun call!6120 () SeekEntryResult!229)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3863 (_ BitVec 32)) SeekEntryResult!229)

(assert (=> bm!6113 (= call!6120 (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(declare-fun b!71003 () Bool)

(declare-fun e!46500 () ListLongMap!1395)

(assert (=> b!71003 (= e!46500 call!6129)))

(declare-fun b!71004 () Bool)

(declare-fun c!10294 () Bool)

(declare-fun lt!31458 () SeekEntryResult!229)

(assert (=> b!71004 (= c!10294 ((_ is MissingVacant!229) lt!31458))))

(declare-fun e!46521 () Bool)

(assert (=> b!71004 (= e!46515 e!46521)))

(declare-fun b!71005 () Bool)

(assert (=> b!71005 (= e!46500 call!6112)))

(declare-fun b!71006 () Bool)

(declare-fun res!37892 () Bool)

(assert (=> b!71006 (= res!37892 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3049 lt!31458)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46514 () Bool)

(assert (=> b!71006 (=> (not res!37892) (not e!46514))))

(declare-fun bm!6114 () Bool)

(declare-fun updateHelperNewKey!23 (LongMapFixedSize!688 (_ BitVec 64) V!2937 (_ BitVec 32)) tuple2!2108)

(assert (=> bm!6114 (= call!6113 (updateHelperNewKey!23 newMap!16 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))))))

(declare-fun bm!6115 () Bool)

(declare-fun call!6131 () Bool)

(assert (=> bm!6115 (= call!6131 call!6123)))

(declare-fun c!10297 () Bool)

(declare-fun bm!6116 () Bool)

(assert (=> bm!6116 (= call!6116 (getCurrentListMap!411 (_keys!3839 newMap!16) (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71007 () Bool)

(declare-fun lt!31444 () Unit!1996)

(declare-fun lt!31454 () Unit!1996)

(assert (=> b!71007 (= lt!31444 lt!31454)))

(assert (=> b!71007 (= call!6117 call!6111)))

(declare-fun lt!31441 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!23 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 V!2937 Int) Unit!1996)

(assert (=> b!71007 (= lt!31454 (lemmaChangeZeroKeyThenAddPairToListMap!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) lt!31441 (zeroValue!2095 newMap!16) lt!31220 (minValue!2095 newMap!16) (defaultEntry!2191 newMap!16)))))

(assert (=> b!71007 (= lt!31441 (bvor (extraKeys!2054 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!71007 (= e!46508 (tuple2!2109 true (LongMapFixedSize!689 (defaultEntry!2191 newMap!16) (mask!6148 newMap!16) (bvor (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) lt!31220 (minValue!2095 newMap!16) (_size!393 newMap!16) (_keys!3839 newMap!16) (_values!2174 newMap!16) (_vacant!393 newMap!16))))))

(declare-fun b!71008 () Bool)

(declare-fun Unit!2009 () Unit!1996)

(assert (=> b!71008 (= e!46504 Unit!2009)))

(declare-fun lt!31436 () Unit!1996)

(declare-fun call!6124 () Unit!1996)

(assert (=> b!71008 (= lt!31436 call!6124)))

(assert (=> b!71008 (= lt!31458 call!6121)))

(declare-fun c!10290 () Bool)

(assert (=> b!71008 (= c!10290 ((_ is MissingZero!229) lt!31458))))

(assert (=> b!71008 e!46515))

(declare-fun lt!31447 () Unit!1996)

(assert (=> b!71008 (= lt!31447 lt!31436)))

(assert (=> b!71008 false))

(declare-fun b!71009 () Bool)

(declare-fun res!37887 () Bool)

(assert (=> b!71009 (= res!37887 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3049 lt!31459)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46510 () Bool)

(assert (=> b!71009 (=> (not res!37887) (not e!46510))))

(declare-fun bm!6117 () Bool)

(declare-fun c!10296 () Bool)

(declare-fun c!10295 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!6117 (= call!6132 (inRange!0 (ite c!10297 (ite c!10295 (index!3047 lt!31435) (ite c!10296 (index!3046 lt!31459) (index!3049 lt!31459))) (ite c!10291 (index!3047 lt!31439) (ite c!10290 (index!3046 lt!31458) (index!3049 lt!31458)))) (mask!6148 newMap!16)))))

(declare-fun b!71010 () Bool)

(declare-fun res!37895 () Bool)

(assert (=> b!71010 (= res!37895 call!6109)))

(assert (=> b!71010 (=> (not res!37895) (not e!46502))))

(declare-fun b!71011 () Bool)

(assert (=> b!71011 (= e!46517 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31435)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!71012 () Bool)

(declare-fun lt!31451 () tuple2!2108)

(assert (=> b!71012 (= e!46520 (tuple2!2109 (_1!1065 lt!31451) (_2!1065 lt!31451)))))

(assert (=> b!71012 (= lt!31451 call!6113)))

(declare-fun b!71013 () Bool)

(assert (=> b!71013 (= e!46520 e!46516)))

(declare-fun c!10292 () Bool)

(assert (=> b!71013 (= c!10292 ((_ is MissingZero!229) lt!31452))))

(declare-fun bm!6118 () Bool)

(assert (=> bm!6118 (= call!6112 (getCurrentListMap!411 (_keys!3839 newMap!16) (ite c!10293 (_values!2174 newMap!16) lt!31437) (mask!6148 newMap!16) (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71014 () Bool)

(declare-fun lt!31449 () Unit!1996)

(assert (=> b!71014 (= lt!31449 e!46511)))

(assert (=> b!71014 (= c!10295 call!6114)))

(assert (=> b!71014 (= e!46519 (tuple2!2109 false newMap!16))))

(declare-fun b!71015 () Bool)

(assert (=> b!71015 (= e!46510 (not call!6115))))

(declare-fun bm!6119 () Bool)

(declare-fun c!10303 () Bool)

(assert (=> bm!6119 (= c!10303 c!10297)))

(assert (=> bm!6119 (= call!6114 (contains!715 e!46500 (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))

(declare-fun b!71016 () Bool)

(assert (=> b!71016 (= e!46521 ((_ is Undefined!229) lt!31458))))

(declare-fun bm!6120 () Bool)

(assert (=> bm!6120 (= call!6129 call!6116)))

(declare-fun bm!6121 () Bool)

(assert (=> bm!6121 (= call!6117 call!6122)))

(declare-fun b!71017 () Bool)

(assert (=> b!71017 (= e!46514 (not call!6118))))

(declare-fun bm!6122 () Bool)

(assert (=> bm!6122 (= call!6128 call!6120)))

(declare-fun b!71018 () Bool)

(declare-fun res!37891 () Bool)

(assert (=> b!71018 (= res!37891 call!6123)))

(assert (=> b!71018 (=> (not res!37891) (not e!46517))))

(declare-fun bm!6123 () Bool)

(assert (=> bm!6123 (= call!6109 call!6132)))

(declare-fun bm!6124 () Bool)

(assert (=> bm!6124 (= call!6122 (+!91 e!46505 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun c!10302 () Bool)

(assert (=> bm!6124 (= c!10302 c!10293)))

(declare-fun b!71019 () Bool)

(declare-fun res!37889 () Bool)

(assert (=> b!71019 (=> (not res!37889) (not e!46503))))

(assert (=> b!71019 (= res!37889 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3046 lt!31459)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6125 () Bool)

(declare-fun call!6110 () ListLongMap!1395)

(assert (=> bm!6125 (= call!6110 (map!1155 newMap!16))))

(declare-fun bm!6126 () Bool)

(assert (=> bm!6126 (= call!6118 call!6125)))

(declare-fun bm!6127 () Bool)

(assert (=> bm!6127 (= call!6125 (arrayContainsKey!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!6128 () Bool)

(assert (=> bm!6128 (= call!6121 call!6120)))

(declare-fun b!71020 () Bool)

(declare-fun res!37893 () Bool)

(assert (=> b!71020 (=> (not res!37893) (not e!46503))))

(assert (=> b!71020 (= res!37893 call!6131)))

(assert (=> b!71020 (= e!46507 e!46503)))

(declare-fun bm!6129 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) Int) Unit!1996)

(assert (=> bm!6129 (= call!6124 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(declare-fun b!71021 () Bool)

(declare-fun res!37897 () Bool)

(assert (=> b!71021 (=> (not res!37897) (not e!46518))))

(assert (=> b!71021 (= res!37897 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3046 lt!31458)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71022 () Bool)

(assert (=> b!71022 (= e!46513 e!46519)))

(assert (=> b!71022 (= lt!31452 (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(assert (=> b!71022 (= c!10297 ((_ is Undefined!229) lt!31452))))

(declare-fun b!71023 () Bool)

(assert (=> b!71023 (= e!46506 (= call!6119 (+!91 call!6110 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!71024 () Bool)

(assert (=> b!71024 (= e!46512 e!46510)))

(declare-fun res!37890 () Bool)

(assert (=> b!71024 (= res!37890 call!6131)))

(assert (=> b!71024 (=> (not res!37890) (not e!46510))))

(declare-fun b!71025 () Bool)

(assert (=> b!71025 (= e!46509 (= call!6119 call!6110))))

(declare-fun b!71026 () Bool)

(assert (=> b!71026 (= e!46521 e!46514)))

(declare-fun res!37886 () Bool)

(assert (=> b!71026 (= res!37886 call!6126)))

(assert (=> b!71026 (=> (not res!37886) (not e!46514))))

(declare-fun b!71027 () Bool)

(declare-fun lt!31433 () Unit!1996)

(assert (=> b!71027 (= e!46511 lt!31433)))

(assert (=> b!71027 (= lt!31433 call!6124)))

(assert (=> b!71027 (= lt!31459 call!6128)))

(assert (=> b!71027 (= c!10296 ((_ is MissingZero!229) lt!31459))))

(assert (=> b!71027 e!46507))

(assert (= (and d!15841 c!10293) b!70994))

(assert (= (and d!15841 (not c!10293)) b!71022))

(assert (= (and b!70994 c!10301) b!71007))

(assert (= (and b!70994 (not c!10301)) b!70988))

(assert (= (or b!71007 b!70988) bm!6112))

(assert (= (or b!71007 b!70988) bm!6106))

(assert (= (or b!71007 b!70988) bm!6121))

(assert (= (and b!71022 c!10297) b!71014))

(assert (= (and b!71022 (not c!10297)) b!70992))

(assert (= (and b!71014 c!10295) b!70998))

(assert (= (and b!71014 (not c!10295)) b!71027))

(assert (= (and b!70998 res!37894) b!71018))

(assert (= (and b!71018 res!37891) b!71011))

(assert (= (and b!71027 c!10296) b!71020))

(assert (= (and b!71027 (not c!10296)) b!70999))

(assert (= (and b!71020 res!37893) b!71019))

(assert (= (and b!71019 res!37889) b!71002))

(assert (= (and b!70999 c!10299) b!71024))

(assert (= (and b!70999 (not c!10299)) b!70995))

(assert (= (and b!71024 res!37890) b!71009))

(assert (= (and b!71009 res!37887) b!71015))

(assert (= (or b!71020 b!71024) bm!6115))

(assert (= (or b!71002 b!71015) bm!6111))

(assert (= (or b!71018 bm!6115) bm!6109))

(assert (= (or b!70998 b!71027) bm!6122))

(assert (= (and b!70992 c!10300) b!71012))

(assert (= (and b!70992 (not c!10300)) b!71013))

(assert (= (and b!71013 c!10292) b!70990))

(assert (= (and b!71013 (not c!10292)) b!71000))

(assert (= (and b!71000 c!10291) b!70986))

(assert (= (and b!71000 (not c!10291)) b!71008))

(assert (= (and b!70986 res!37898) b!71010))

(assert (= (and b!71010 res!37895) b!70989))

(assert (= (and b!71008 c!10290) b!71001))

(assert (= (and b!71008 (not c!10290)) b!71004))

(assert (= (and b!71001 res!37885) b!71021))

(assert (= (and b!71021 res!37897) b!70993))

(assert (= (and b!71004 c!10294) b!71026))

(assert (= (and b!71004 (not c!10294)) b!71016))

(assert (= (and b!71026 res!37886) b!71006))

(assert (= (and b!71006 res!37892) b!71017))

(assert (= (or b!71001 b!71026) bm!6108))

(assert (= (or b!70993 b!71017) bm!6126))

(assert (= (or b!71010 bm!6108) bm!6123))

(assert (= (or b!70986 b!71008) bm!6128))

(assert (= (or b!71012 b!70990) bm!6114))

(assert (= (or bm!6111 bm!6126) bm!6127))

(assert (= (or bm!6122 bm!6128) bm!6113))

(assert (= (or b!71027 b!71008) bm!6129))

(assert (= (or b!71014 b!71000) bm!6120))

(assert (= (or bm!6109 bm!6123) bm!6117))

(assert (= (or b!70998 b!70986) bm!6110))

(assert (= (or b!71014 b!71000) bm!6119))

(assert (= (and bm!6119 c!10303) b!71003))

(assert (= (and bm!6119 (not c!10303)) b!71005))

(assert (= (or bm!6106 bm!6120) bm!6116))

(assert (= (or bm!6112 b!71005) bm!6118))

(assert (= (or bm!6121 b!71000) bm!6124))

(assert (= (and bm!6124 c!10302) b!70987))

(assert (= (and bm!6124 (not c!10302)) b!70991))

(assert (= (and d!15841 res!37888) b!70997))

(assert (= (and b!70997 c!10298) b!70996))

(assert (= (and b!70997 (not c!10298)) b!71025))

(assert (= (and b!70996 res!37896) b!71023))

(assert (= (or b!71023 b!71025) bm!6125))

(assert (= (or b!70996 b!71023 b!71025) bm!6107))

(declare-fun m!68057 () Bool)

(assert (=> bm!6117 m!68057))

(declare-fun m!68059 () Bool)

(assert (=> b!70989 m!68059))

(assert (=> b!71022 m!67819))

(declare-fun m!68061 () Bool)

(assert (=> b!71022 m!68061))

(declare-fun m!68063 () Bool)

(assert (=> b!71019 m!68063))

(declare-fun m!68065 () Bool)

(assert (=> b!70988 m!68065))

(declare-fun m!68067 () Bool)

(assert (=> bm!6124 m!68067))

(assert (=> b!70991 m!67987))

(declare-fun m!68069 () Bool)

(assert (=> b!71011 m!68069))

(declare-fun m!68071 () Bool)

(assert (=> bm!6116 m!68071))

(declare-fun m!68073 () Bool)

(assert (=> bm!6116 m!68073))

(assert (=> bm!6110 m!67819))

(declare-fun m!68075 () Bool)

(assert (=> bm!6110 m!68075))

(declare-fun m!68077 () Bool)

(assert (=> bm!6107 m!68077))

(declare-fun m!68079 () Bool)

(assert (=> b!71009 m!68079))

(declare-fun m!68081 () Bool)

(assert (=> b!71021 m!68081))

(declare-fun m!68083 () Bool)

(assert (=> d!15841 m!68083))

(assert (=> d!15841 m!67837))

(assert (=> bm!6114 m!67819))

(declare-fun m!68085 () Bool)

(assert (=> bm!6114 m!68085))

(declare-fun m!68087 () Bool)

(assert (=> b!71006 m!68087))

(declare-fun m!68089 () Bool)

(assert (=> b!71007 m!68089))

(declare-fun m!68091 () Bool)

(assert (=> b!71000 m!68091))

(assert (=> b!71000 m!67987))

(assert (=> b!71000 m!67819))

(declare-fun m!68093 () Bool)

(assert (=> b!71000 m!68093))

(assert (=> b!71000 m!67987))

(assert (=> b!71000 m!68071))

(assert (=> b!71000 m!67819))

(declare-fun m!68095 () Bool)

(assert (=> b!71000 m!68095))

(assert (=> bm!6113 m!67819))

(assert (=> bm!6113 m!68061))

(declare-fun m!68097 () Bool)

(assert (=> bm!6119 m!68097))

(declare-fun m!68099 () Bool)

(assert (=> bm!6119 m!68099))

(assert (=> b!70996 m!67819))

(declare-fun m!68101 () Bool)

(assert (=> b!70996 m!68101))

(declare-fun m!68103 () Bool)

(assert (=> bm!6118 m!68103))

(declare-fun m!68105 () Bool)

(assert (=> b!71023 m!68105))

(assert (=> bm!6125 m!67827))

(assert (=> bm!6129 m!67819))

(declare-fun m!68107 () Bool)

(assert (=> bm!6129 m!68107))

(assert (=> bm!6127 m!67819))

(declare-fun m!68109 () Bool)

(assert (=> bm!6127 m!68109))

(assert (=> b!70679 d!15841))

(declare-fun d!15843 () Bool)

(declare-fun res!37905 () Bool)

(declare-fun e!46524 () Bool)

(assert (=> d!15843 (=> (not res!37905) (not e!46524))))

(declare-fun simpleValid!50 (LongMapFixedSize!688) Bool)

(assert (=> d!15843 (= res!37905 (simpleValid!50 newMap!16))))

(assert (=> d!15843 (= (valid!301 newMap!16) e!46524)))

(declare-fun b!71034 () Bool)

(declare-fun res!37906 () Bool)

(assert (=> b!71034 (=> (not res!37906) (not e!46524))))

(declare-fun arrayCountValidKeys!0 (array!3863 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!71034 (= res!37906 (= (arrayCountValidKeys!0 (_keys!3839 newMap!16) #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (_size!393 newMap!16)))))

(declare-fun b!71035 () Bool)

(declare-fun res!37907 () Bool)

(assert (=> b!71035 (=> (not res!37907) (not e!46524))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3863 (_ BitVec 32)) Bool)

(assert (=> b!71035 (= res!37907 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(declare-fun b!71036 () Bool)

(assert (=> b!71036 (= e!46524 (arrayNoDuplicates!0 (_keys!3839 newMap!16) #b00000000000000000000000000000000 Nil!1465))))

(assert (= (and d!15843 res!37905) b!71034))

(assert (= (and b!71034 res!37906) b!71035))

(assert (= (and b!71035 res!37907) b!71036))

(declare-fun m!68111 () Bool)

(assert (=> d!15843 m!68111))

(declare-fun m!68113 () Bool)

(assert (=> b!71034 m!68113))

(declare-fun m!68115 () Bool)

(assert (=> b!71035 m!68115))

(declare-fun m!68117 () Bool)

(assert (=> b!71036 m!68117))

(assert (=> b!70694 d!15843))

(declare-fun d!15845 () Bool)

(assert (=> d!15845 (not (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31462 () Unit!1996)

(declare-fun choose!68 (array!3863 (_ BitVec 32) (_ BitVec 64) List!1468) Unit!1996)

(assert (=> d!15845 (= lt!31462 (choose!68 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465)))))

(assert (=> d!15845 (bvslt (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!15845 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465)) lt!31462)))

(declare-fun bs!3060 () Bool)

(assert (= bs!3060 d!15845))

(assert (=> bs!3060 m!67819))

(assert (=> bs!3060 m!67867))

(assert (=> bs!3060 m!67819))

(declare-fun m!68119 () Bool)

(assert (=> bs!3060 m!68119))

(assert (=> b!70695 d!15845))

(declare-fun d!15847 () Bool)

(assert (=> d!15847 (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) from!355 Nil!1465)))

(declare-fun lt!31465 () Unit!1996)

(declare-fun choose!39 (array!3863 (_ BitVec 32) (_ BitVec 32)) Unit!1996)

(assert (=> d!15847 (= lt!31465 (choose!39 (_keys!3839 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!15847 (bvslt (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!15847 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000 from!355) lt!31465)))

(declare-fun bs!3061 () Bool)

(assert (= bs!3061 d!15847))

(assert (=> bs!3061 m!67863))

(declare-fun m!68121 () Bool)

(assert (=> bs!3061 m!68121))

(assert (=> b!70695 d!15847))

(declare-fun d!15849 () Bool)

(declare-fun res!37912 () Bool)

(declare-fun e!46529 () Bool)

(assert (=> d!15849 (=> res!37912 e!46529)))

(assert (=> d!15849 (= res!37912 (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!15849 (= (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!46529)))

(declare-fun b!71041 () Bool)

(declare-fun e!46530 () Bool)

(assert (=> b!71041 (= e!46529 e!46530)))

(declare-fun res!37913 () Bool)

(assert (=> b!71041 (=> (not res!37913) (not e!46530))))

(assert (=> b!71041 (= res!37913 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!71042 () Bool)

(assert (=> b!71042 (= e!46530 (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!15849 (not res!37912)) b!71041))

(assert (= (and b!71041 res!37913) b!71042))

(assert (=> d!15849 m!67995))

(assert (=> b!71042 m!67819))

(declare-fun m!68123 () Bool)

(assert (=> b!71042 m!68123))

(assert (=> b!70695 d!15849))

(declare-fun d!15851 () Bool)

(declare-fun e!46533 () Bool)

(assert (=> d!15851 e!46533))

(declare-fun c!10306 () Bool)

(assert (=> d!15851 (= c!10306 (and (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!31468 () Unit!1996)

(declare-fun choose!402 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) (_ BitVec 32) Int) Unit!1996)

(assert (=> d!15851 (= lt!31468 (choose!402 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(assert (=> d!15851 (validMask!0 (mask!6148 (v!2516 (underlying!259 thiss!992))))))

(assert (=> d!15851 (= (lemmaListMapContainsThenArrayContainsFrom!41 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))) lt!31468)))

(declare-fun b!71047 () Bool)

(assert (=> b!71047 (= e!46533 (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!71048 () Bool)

(assert (=> b!71048 (= e!46533 (ite (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!15851 c!10306) b!71047))

(assert (= (and d!15851 (not c!10306)) b!71048))

(assert (=> d!15851 m!67819))

(declare-fun m!68125 () Bool)

(assert (=> d!15851 m!68125))

(assert (=> d!15851 m!67845))

(assert (=> b!71047 m!67819))

(assert (=> b!71047 m!67867))

(assert (=> b!70695 d!15851))

(declare-fun call!6135 () Bool)

(declare-fun bm!6132 () Bool)

(declare-fun c!10309 () Bool)

(assert (=> bm!6132 (= call!6135 (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)))))

(declare-fun b!71059 () Bool)

(declare-fun e!46542 () Bool)

(declare-fun contains!718 (List!1468 (_ BitVec 64)) Bool)

(assert (=> b!71059 (= e!46542 (contains!718 Nil!1465 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!71060 () Bool)

(declare-fun e!46545 () Bool)

(declare-fun e!46543 () Bool)

(assert (=> b!71060 (= e!46545 e!46543)))

(assert (=> b!71060 (= c!10309 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!71061 () Bool)

(declare-fun e!46544 () Bool)

(assert (=> b!71061 (= e!46544 e!46545)))

(declare-fun res!37921 () Bool)

(assert (=> b!71061 (=> (not res!37921) (not e!46545))))

(assert (=> b!71061 (= res!37921 (not e!46542))))

(declare-fun res!37922 () Bool)

(assert (=> b!71061 (=> (not res!37922) (not e!46542))))

(assert (=> b!71061 (= res!37922 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun d!15853 () Bool)

(declare-fun res!37920 () Bool)

(assert (=> d!15853 (=> res!37920 e!46544)))

(assert (=> d!15853 (= res!37920 (bvsge from!355 (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!15853 (= (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) from!355 Nil!1465) e!46544)))

(declare-fun b!71062 () Bool)

(assert (=> b!71062 (= e!46543 call!6135)))

(declare-fun b!71063 () Bool)

(assert (=> b!71063 (= e!46543 call!6135)))

(assert (= (and d!15853 (not res!37920)) b!71061))

(assert (= (and b!71061 res!37922) b!71059))

(assert (= (and b!71061 res!37921) b!71060))

(assert (= (and b!71060 c!10309) b!71063))

(assert (= (and b!71060 (not c!10309)) b!71062))

(assert (= (or b!71063 b!71062) bm!6132))

(assert (=> bm!6132 m!67819))

(declare-fun m!68127 () Bool)

(assert (=> bm!6132 m!68127))

(assert (=> b!71059 m!67819))

(assert (=> b!71059 m!67819))

(declare-fun m!68129 () Bool)

(assert (=> b!71059 m!68129))

(assert (=> b!71060 m!67819))

(assert (=> b!71060 m!67819))

(declare-fun m!68131 () Bool)

(assert (=> b!71060 m!68131))

(assert (=> b!71061 m!67819))

(assert (=> b!71061 m!67819))

(assert (=> b!71061 m!68131))

(assert (=> b!70695 d!15853))

(declare-fun d!15855 () Bool)

(declare-fun e!46548 () Bool)

(assert (=> d!15855 e!46548))

(declare-fun res!37927 () Bool)

(assert (=> d!15855 (=> (not res!37927) (not e!46548))))

(declare-fun lt!31480 () ListLongMap!1395)

(assert (=> d!15855 (= res!37927 (contains!715 lt!31480 (_1!1066 lt!31223)))))

(declare-fun lt!31478 () List!1467)

(assert (=> d!15855 (= lt!31480 (ListLongMap!1396 lt!31478))))

(declare-fun lt!31479 () Unit!1996)

(declare-fun lt!31477 () Unit!1996)

(assert (=> d!15855 (= lt!31479 lt!31477)))

(assert (=> d!15855 (= (getValueByKey!133 lt!31478 (_1!1066 lt!31223)) (Some!138 (_2!1066 lt!31223)))))

(declare-fun lemmaContainsTupThenGetReturnValue!50 (List!1467 (_ BitVec 64) V!2937) Unit!1996)

(assert (=> d!15855 (= lt!31477 (lemmaContainsTupThenGetReturnValue!50 lt!31478 (_1!1066 lt!31223) (_2!1066 lt!31223)))))

(declare-fun insertStrictlySorted!53 (List!1467 (_ BitVec 64) V!2937) List!1467)

(assert (=> d!15855 (= lt!31478 (insertStrictlySorted!53 (toList!713 lt!31219) (_1!1066 lt!31223) (_2!1066 lt!31223)))))

(assert (=> d!15855 (= (+!91 lt!31219 lt!31223) lt!31480)))

(declare-fun b!71068 () Bool)

(declare-fun res!37928 () Bool)

(assert (=> b!71068 (=> (not res!37928) (not e!46548))))

(assert (=> b!71068 (= res!37928 (= (getValueByKey!133 (toList!713 lt!31480) (_1!1066 lt!31223)) (Some!138 (_2!1066 lt!31223))))))

(declare-fun b!71069 () Bool)

(declare-fun contains!719 (List!1467 tuple2!2110) Bool)

(assert (=> b!71069 (= e!46548 (contains!719 (toList!713 lt!31480) lt!31223))))

(assert (= (and d!15855 res!37927) b!71068))

(assert (= (and b!71068 res!37928) b!71069))

(declare-fun m!68133 () Bool)

(assert (=> d!15855 m!68133))

(declare-fun m!68135 () Bool)

(assert (=> d!15855 m!68135))

(declare-fun m!68137 () Bool)

(assert (=> d!15855 m!68137))

(declare-fun m!68139 () Bool)

(assert (=> d!15855 m!68139))

(declare-fun m!68141 () Bool)

(assert (=> b!71068 m!68141))

(declare-fun m!68143 () Bool)

(assert (=> b!71069 m!68143))

(assert (=> b!70678 d!15855))

(declare-fun b!71094 () Bool)

(declare-fun res!37938 () Bool)

(declare-fun e!46564 () Bool)

(assert (=> b!71094 (=> (not res!37938) (not e!46564))))

(declare-fun lt!31501 () ListLongMap!1395)

(assert (=> b!71094 (= res!37938 (not (contains!715 lt!31501 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71095 () Bool)

(declare-fun e!46566 () Bool)

(declare-fun isEmpty!319 (ListLongMap!1395) Bool)

(assert (=> b!71095 (= e!46566 (isEmpty!319 lt!31501))))

(declare-fun b!71096 () Bool)

(assert (=> b!71096 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> b!71096 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2082 (_values!2174 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun e!46568 () Bool)

(assert (=> b!71096 (= e!46568 (= (apply!74 lt!31501 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!6135 () Bool)

(declare-fun call!6138 () ListLongMap!1395)

(assert (=> bm!6135 (= call!6138 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!71097 () Bool)

(declare-fun lt!31499 () Unit!1996)

(declare-fun lt!31496 () Unit!1996)

(assert (=> b!71097 (= lt!31499 lt!31496)))

(declare-fun lt!31500 () (_ BitVec 64))

(declare-fun lt!31495 () (_ BitVec 64))

(declare-fun lt!31497 () V!2937)

(declare-fun lt!31498 () ListLongMap!1395)

(assert (=> b!71097 (not (contains!715 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)) lt!31500))))

(declare-fun addStillNotContains!25 (ListLongMap!1395 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1996)

(assert (=> b!71097 (= lt!31496 (addStillNotContains!25 lt!31498 lt!31495 lt!31497 lt!31500))))

(assert (=> b!71097 (= lt!31500 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71097 (= lt!31497 (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71097 (= lt!31495 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!71097 (= lt!31498 call!6138)))

(declare-fun e!46569 () ListLongMap!1395)

(assert (=> b!71097 (= e!46569 (+!91 call!6138 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71098 () Bool)

(declare-fun e!46565 () Bool)

(assert (=> b!71098 (= e!46564 e!46565)))

(declare-fun c!10318 () Bool)

(declare-fun e!46563 () Bool)

(assert (=> b!71098 (= c!10318 e!46563)))

(declare-fun res!37937 () Bool)

(assert (=> b!71098 (=> (not res!37937) (not e!46563))))

(assert (=> b!71098 (= res!37937 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!71099 () Bool)

(assert (=> b!71099 (= e!46563 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71099 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!71100 () Bool)

(assert (=> b!71100 (= e!46565 e!46568)))

(assert (=> b!71100 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun res!37939 () Bool)

(assert (=> b!71100 (= res!37939 (contains!715 lt!31501 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71100 (=> (not res!37939) (not e!46568))))

(declare-fun b!71101 () Bool)

(assert (=> b!71101 (= e!46565 e!46566)))

(declare-fun c!10321 () Bool)

(assert (=> b!71101 (= c!10321 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!71102 () Bool)

(declare-fun e!46567 () ListLongMap!1395)

(assert (=> b!71102 (= e!46567 e!46569)))

(declare-fun c!10320 () Bool)

(assert (=> b!71102 (= c!10320 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71103 () Bool)

(assert (=> b!71103 (= e!46566 (= lt!31501 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun d!15857 () Bool)

(assert (=> d!15857 e!46564))

(declare-fun res!37940 () Bool)

(assert (=> d!15857 (=> (not res!37940) (not e!46564))))

(assert (=> d!15857 (= res!37940 (not (contains!715 lt!31501 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15857 (= lt!31501 e!46567)))

(declare-fun c!10319 () Bool)

(assert (=> d!15857 (= c!10319 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!15857 (validMask!0 (mask!6148 (v!2516 (underlying!259 thiss!992))))))

(assert (=> d!15857 (= (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))) lt!31501)))

(declare-fun b!71104 () Bool)

(assert (=> b!71104 (= e!46569 call!6138)))

(declare-fun b!71105 () Bool)

(assert (=> b!71105 (= e!46567 (ListLongMap!1396 Nil!1464))))

(assert (= (and d!15857 c!10319) b!71105))

(assert (= (and d!15857 (not c!10319)) b!71102))

(assert (= (and b!71102 c!10320) b!71097))

(assert (= (and b!71102 (not c!10320)) b!71104))

(assert (= (or b!71097 b!71104) bm!6135))

(assert (= (and d!15857 res!37940) b!71094))

(assert (= (and b!71094 res!37938) b!71098))

(assert (= (and b!71098 res!37937) b!71099))

(assert (= (and b!71098 c!10318) b!71100))

(assert (= (and b!71098 (not c!10318)) b!71101))

(assert (= (and b!71100 res!37939) b!71096))

(assert (= (and b!71101 c!10321) b!71103))

(assert (= (and b!71101 (not c!10321)) b!71095))

(declare-fun b_lambda!3191 () Bool)

(assert (=> (not b_lambda!3191) (not b!71096)))

(assert (=> b!71096 t!4992))

(declare-fun b_and!4381 () Bool)

(assert (= b_and!4377 (and (=> t!4992 result!2641) b_and!4381)))

(assert (=> b!71096 t!4994))

(declare-fun b_and!4383 () Bool)

(assert (= b_and!4379 (and (=> t!4994 result!2645) b_and!4383)))

(declare-fun b_lambda!3193 () Bool)

(assert (=> (not b_lambda!3193) (not b!71097)))

(assert (=> b!71097 t!4992))

(declare-fun b_and!4385 () Bool)

(assert (= b_and!4381 (and (=> t!4992 result!2641) b_and!4385)))

(assert (=> b!71097 t!4994))

(declare-fun b_and!4387 () Bool)

(assert (= b_and!4383 (and (=> t!4994 result!2645) b_and!4387)))

(declare-fun m!68145 () Bool)

(assert (=> d!15857 m!68145))

(assert (=> d!15857 m!67845))

(assert (=> b!71099 m!67995))

(assert (=> b!71099 m!67995))

(assert (=> b!71099 m!67997))

(declare-fun m!68147 () Bool)

(assert (=> b!71095 m!68147))

(assert (=> b!71100 m!67995))

(assert (=> b!71100 m!67995))

(declare-fun m!68149 () Bool)

(assert (=> b!71100 m!68149))

(declare-fun m!68151 () Bool)

(assert (=> b!71103 m!68151))

(assert (=> bm!6135 m!68151))

(assert (=> b!71096 m!67995))

(declare-fun m!68153 () Bool)

(assert (=> b!71096 m!68153))

(assert (=> b!71096 m!68039))

(assert (=> b!71096 m!68039))

(assert (=> b!71096 m!67823))

(assert (=> b!71096 m!68041))

(assert (=> b!71096 m!67823))

(assert (=> b!71096 m!67995))

(declare-fun m!68155 () Bool)

(assert (=> b!71094 m!68155))

(assert (=> b!71102 m!67995))

(assert (=> b!71102 m!67995))

(assert (=> b!71102 m!67997))

(declare-fun m!68157 () Bool)

(assert (=> b!71097 m!68157))

(declare-fun m!68159 () Bool)

(assert (=> b!71097 m!68159))

(declare-fun m!68161 () Bool)

(assert (=> b!71097 m!68161))

(assert (=> b!71097 m!68039))

(assert (=> b!71097 m!68039))

(assert (=> b!71097 m!67823))

(assert (=> b!71097 m!68041))

(assert (=> b!71097 m!68159))

(assert (=> b!71097 m!67995))

(assert (=> b!71097 m!67823))

(declare-fun m!68163 () Bool)

(assert (=> b!71097 m!68163))

(assert (=> b!70678 d!15857))

(declare-fun d!15859 () Bool)

(declare-fun e!46570 () Bool)

(assert (=> d!15859 e!46570))

(declare-fun res!37941 () Bool)

(assert (=> d!15859 (=> (not res!37941) (not e!46570))))

(declare-fun lt!31505 () ListLongMap!1395)

(assert (=> d!15859 (= res!37941 (contains!715 lt!31505 (_1!1066 lt!31228)))))

(declare-fun lt!31503 () List!1467)

(assert (=> d!15859 (= lt!31505 (ListLongMap!1396 lt!31503))))

(declare-fun lt!31504 () Unit!1996)

(declare-fun lt!31502 () Unit!1996)

(assert (=> d!15859 (= lt!31504 lt!31502)))

(assert (=> d!15859 (= (getValueByKey!133 lt!31503 (_1!1066 lt!31228)) (Some!138 (_2!1066 lt!31228)))))

(assert (=> d!15859 (= lt!31502 (lemmaContainsTupThenGetReturnValue!50 lt!31503 (_1!1066 lt!31228) (_2!1066 lt!31228)))))

(assert (=> d!15859 (= lt!31503 (insertStrictlySorted!53 (toList!713 (+!91 lt!31219 lt!31223)) (_1!1066 lt!31228) (_2!1066 lt!31228)))))

(assert (=> d!15859 (= (+!91 (+!91 lt!31219 lt!31223) lt!31228) lt!31505)))

(declare-fun b!71106 () Bool)

(declare-fun res!37942 () Bool)

(assert (=> b!71106 (=> (not res!37942) (not e!46570))))

(assert (=> b!71106 (= res!37942 (= (getValueByKey!133 (toList!713 lt!31505) (_1!1066 lt!31228)) (Some!138 (_2!1066 lt!31228))))))

(declare-fun b!71107 () Bool)

(assert (=> b!71107 (= e!46570 (contains!719 (toList!713 lt!31505) lt!31228))))

(assert (= (and d!15859 res!37941) b!71106))

(assert (= (and b!71106 res!37942) b!71107))

(declare-fun m!68165 () Bool)

(assert (=> d!15859 m!68165))

(declare-fun m!68167 () Bool)

(assert (=> d!15859 m!68167))

(declare-fun m!68169 () Bool)

(assert (=> d!15859 m!68169))

(declare-fun m!68171 () Bool)

(assert (=> d!15859 m!68171))

(declare-fun m!68173 () Bool)

(assert (=> b!71106 m!68173))

(declare-fun m!68175 () Bool)

(assert (=> b!71107 m!68175))

(assert (=> b!70678 d!15859))

(declare-fun d!15861 () Bool)

(assert (=> d!15861 (= (+!91 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (+!91 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(declare-fun lt!31508 () Unit!1996)

(declare-fun choose!403 (ListLongMap!1395 (_ BitVec 64) V!2937 (_ BitVec 64) V!2937) Unit!1996)

(assert (=> d!15861 (= lt!31508 (choose!403 lt!31219 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))

(assert (=> d!15861 (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15861 (= (addCommutativeForDiffKeys!11 lt!31219 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) lt!31508)))

(declare-fun bs!3062 () Bool)

(assert (= bs!3062 d!15861))

(assert (=> bs!3062 m!67819))

(declare-fun m!68177 () Bool)

(assert (=> bs!3062 m!68177))

(declare-fun m!68179 () Bool)

(assert (=> bs!3062 m!68179))

(assert (=> bs!3062 m!68179))

(declare-fun m!68181 () Bool)

(assert (=> bs!3062 m!68181))

(declare-fun m!68183 () Bool)

(assert (=> bs!3062 m!68183))

(declare-fun m!68185 () Bool)

(assert (=> bs!3062 m!68185))

(assert (=> bs!3062 m!68183))

(assert (=> b!70678 d!15861))

(declare-fun d!15863 () Bool)

(declare-fun e!46571 () Bool)

(assert (=> d!15863 e!46571))

(declare-fun res!37943 () Bool)

(assert (=> d!15863 (=> (not res!37943) (not e!46571))))

(declare-fun lt!31512 () ListLongMap!1395)

(assert (=> d!15863 (= res!37943 (contains!715 lt!31512 (_1!1066 lt!31223)))))

(declare-fun lt!31510 () List!1467)

(assert (=> d!15863 (= lt!31512 (ListLongMap!1396 lt!31510))))

(declare-fun lt!31511 () Unit!1996)

(declare-fun lt!31509 () Unit!1996)

(assert (=> d!15863 (= lt!31511 lt!31509)))

(assert (=> d!15863 (= (getValueByKey!133 lt!31510 (_1!1066 lt!31223)) (Some!138 (_2!1066 lt!31223)))))

(assert (=> d!15863 (= lt!31509 (lemmaContainsTupThenGetReturnValue!50 lt!31510 (_1!1066 lt!31223) (_2!1066 lt!31223)))))

(assert (=> d!15863 (= lt!31510 (insertStrictlySorted!53 (toList!713 (+!91 lt!31219 lt!31228)) (_1!1066 lt!31223) (_2!1066 lt!31223)))))

(assert (=> d!15863 (= (+!91 (+!91 lt!31219 lt!31228) lt!31223) lt!31512)))

(declare-fun b!71108 () Bool)

(declare-fun res!37944 () Bool)

(assert (=> b!71108 (=> (not res!37944) (not e!46571))))

(assert (=> b!71108 (= res!37944 (= (getValueByKey!133 (toList!713 lt!31512) (_1!1066 lt!31223)) (Some!138 (_2!1066 lt!31223))))))

(declare-fun b!71109 () Bool)

(assert (=> b!71109 (= e!46571 (contains!719 (toList!713 lt!31512) lt!31223))))

(assert (= (and d!15863 res!37943) b!71108))

(assert (= (and b!71108 res!37944) b!71109))

(declare-fun m!68187 () Bool)

(assert (=> d!15863 m!68187))

(declare-fun m!68189 () Bool)

(assert (=> d!15863 m!68189))

(declare-fun m!68191 () Bool)

(assert (=> d!15863 m!68191))

(declare-fun m!68193 () Bool)

(assert (=> d!15863 m!68193))

(declare-fun m!68195 () Bool)

(assert (=> b!71108 m!68195))

(declare-fun m!68197 () Bool)

(assert (=> b!71109 m!68197))

(assert (=> b!70678 d!15863))

(declare-fun d!15865 () Bool)

(declare-fun e!46572 () Bool)

(assert (=> d!15865 e!46572))

(declare-fun res!37945 () Bool)

(assert (=> d!15865 (=> (not res!37945) (not e!46572))))

(declare-fun lt!31516 () ListLongMap!1395)

(assert (=> d!15865 (= res!37945 (contains!715 lt!31516 (_1!1066 lt!31228)))))

(declare-fun lt!31514 () List!1467)

(assert (=> d!15865 (= lt!31516 (ListLongMap!1396 lt!31514))))

(declare-fun lt!31515 () Unit!1996)

(declare-fun lt!31513 () Unit!1996)

(assert (=> d!15865 (= lt!31515 lt!31513)))

(assert (=> d!15865 (= (getValueByKey!133 lt!31514 (_1!1066 lt!31228)) (Some!138 (_2!1066 lt!31228)))))

(assert (=> d!15865 (= lt!31513 (lemmaContainsTupThenGetReturnValue!50 lt!31514 (_1!1066 lt!31228) (_2!1066 lt!31228)))))

(assert (=> d!15865 (= lt!31514 (insertStrictlySorted!53 (toList!713 lt!31219) (_1!1066 lt!31228) (_2!1066 lt!31228)))))

(assert (=> d!15865 (= (+!91 lt!31219 lt!31228) lt!31516)))

(declare-fun b!71110 () Bool)

(declare-fun res!37946 () Bool)

(assert (=> b!71110 (=> (not res!37946) (not e!46572))))

(assert (=> b!71110 (= res!37946 (= (getValueByKey!133 (toList!713 lt!31516) (_1!1066 lt!31228)) (Some!138 (_2!1066 lt!31228))))))

(declare-fun b!71111 () Bool)

(assert (=> b!71111 (= e!46572 (contains!719 (toList!713 lt!31516) lt!31228))))

(assert (= (and d!15865 res!37945) b!71110))

(assert (= (and b!71110 res!37946) b!71111))

(declare-fun m!68199 () Bool)

(assert (=> d!15865 m!68199))

(declare-fun m!68201 () Bool)

(assert (=> d!15865 m!68201))

(declare-fun m!68203 () Bool)

(assert (=> d!15865 m!68203))

(declare-fun m!68205 () Bool)

(assert (=> d!15865 m!68205))

(declare-fun m!68207 () Bool)

(assert (=> b!71110 m!68207))

(declare-fun m!68209 () Bool)

(assert (=> b!71111 m!68209))

(assert (=> b!70678 d!15865))

(declare-fun d!15867 () Bool)

(assert (=> d!15867 (= (validMask!0 (mask!6148 (v!2516 (underlying!259 thiss!992)))) (and (or (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000001111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000011111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000001111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000011111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000001111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000011111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000001111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000011111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000001111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000011111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000001111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000011111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000111111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000001111111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000011111111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000111111111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000001111111111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000011111111111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000111111111111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00001111111111111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00011111111111111111111111111111) (= (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!70678 d!15867))

(declare-fun d!15869 () Bool)

(assert (=> d!15869 (= (array_inv!1133 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvsge (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!70696 d!15869))

(declare-fun d!15871 () Bool)

(assert (=> d!15871 (= (array_inv!1134 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvsge (size!2082 (_values!2174 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!70696 d!15871))

(declare-fun mapNonEmpty!3155 () Bool)

(declare-fun mapRes!3155 () Bool)

(declare-fun tp!8501 () Bool)

(declare-fun e!46577 () Bool)

(assert (=> mapNonEmpty!3155 (= mapRes!3155 (and tp!8501 e!46577))))

(declare-fun mapKey!3155 () (_ BitVec 32))

(declare-fun mapRest!3155 () (Array (_ BitVec 32) ValueCell!890))

(declare-fun mapValue!3155 () ValueCell!890)

(assert (=> mapNonEmpty!3155 (= mapRest!3140 (store mapRest!3155 mapKey!3155 mapValue!3155))))

(declare-fun mapIsEmpty!3155 () Bool)

(assert (=> mapIsEmpty!3155 mapRes!3155))

(declare-fun condMapEmpty!3155 () Bool)

(declare-fun mapDefault!3155 () ValueCell!890)

(assert (=> mapNonEmpty!3139 (= condMapEmpty!3155 (= mapRest!3140 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3155)))))

(declare-fun e!46578 () Bool)

(assert (=> mapNonEmpty!3139 (= tp!8472 (and e!46578 mapRes!3155))))

(declare-fun b!71119 () Bool)

(assert (=> b!71119 (= e!46578 tp_is_empty!2467)))

(declare-fun b!71118 () Bool)

(assert (=> b!71118 (= e!46577 tp_is_empty!2467)))

(assert (= (and mapNonEmpty!3139 condMapEmpty!3155) mapIsEmpty!3155))

(assert (= (and mapNonEmpty!3139 (not condMapEmpty!3155)) mapNonEmpty!3155))

(assert (= (and mapNonEmpty!3155 ((_ is ValueCellFull!890) mapValue!3155)) b!71118))

(assert (= (and mapNonEmpty!3139 ((_ is ValueCellFull!890) mapDefault!3155)) b!71119))

(declare-fun m!68211 () Bool)

(assert (=> mapNonEmpty!3155 m!68211))

(declare-fun mapNonEmpty!3156 () Bool)

(declare-fun mapRes!3156 () Bool)

(declare-fun tp!8502 () Bool)

(declare-fun e!46579 () Bool)

(assert (=> mapNonEmpty!3156 (= mapRes!3156 (and tp!8502 e!46579))))

(declare-fun mapKey!3156 () (_ BitVec 32))

(declare-fun mapValue!3156 () ValueCell!890)

(declare-fun mapRest!3156 () (Array (_ BitVec 32) ValueCell!890))

(assert (=> mapNonEmpty!3156 (= mapRest!3139 (store mapRest!3156 mapKey!3156 mapValue!3156))))

(declare-fun mapIsEmpty!3156 () Bool)

(assert (=> mapIsEmpty!3156 mapRes!3156))

(declare-fun condMapEmpty!3156 () Bool)

(declare-fun mapDefault!3156 () ValueCell!890)

(assert (=> mapNonEmpty!3140 (= condMapEmpty!3156 (= mapRest!3139 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3156)))))

(declare-fun e!46580 () Bool)

(assert (=> mapNonEmpty!3140 (= tp!8471 (and e!46580 mapRes!3156))))

(declare-fun b!71121 () Bool)

(assert (=> b!71121 (= e!46580 tp_is_empty!2467)))

(declare-fun b!71120 () Bool)

(assert (=> b!71120 (= e!46579 tp_is_empty!2467)))

(assert (= (and mapNonEmpty!3140 condMapEmpty!3156) mapIsEmpty!3156))

(assert (= (and mapNonEmpty!3140 (not condMapEmpty!3156)) mapNonEmpty!3156))

(assert (= (and mapNonEmpty!3156 ((_ is ValueCellFull!890) mapValue!3156)) b!71120))

(assert (= (and mapNonEmpty!3140 ((_ is ValueCellFull!890) mapDefault!3156)) b!71121))

(declare-fun m!68213 () Bool)

(assert (=> mapNonEmpty!3156 m!68213))

(declare-fun b_lambda!3195 () Bool)

(assert (= b_lambda!3193 (or (and b!70696 b_free!2101) (and b!70685 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))) b_lambda!3195)))

(declare-fun b_lambda!3197 () Bool)

(assert (= b_lambda!3191 (or (and b!70696 b_free!2101) (and b!70685 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))) b_lambda!3197)))

(declare-fun b_lambda!3199 () Bool)

(assert (= b_lambda!3189 (or (and b!70696 b_free!2101) (and b!70685 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))) b_lambda!3199)))

(check-sat (not b!70871) (not b_next!2101) (not mapNonEmpty!3156) (not b_next!2103) (not b!71059) (not b!71103) (not b!70881) (not b!71096) (not b!70867) (not b_lambda!3195) (not d!15845) (not b!70988) b_and!4387 (not d!15847) (not bm!6125) (not b!71108) (not b_lambda!3187) (not b!71099) (not d!15835) (not b!70882) (not bm!6132) (not d!15861) (not b!71100) (not bm!6116) (not bm!6052) (not b!70899) (not b!71107) (not mapNonEmpty!3155) (not b!71000) (not b_lambda!3197) (not bm!6055) (not bm!6054) (not b!70876) (not d!15839) (not d!15857) (not b!71022) (not b!71023) (not b!70879) (not b_lambda!3199) (not b!71060) (not b!70892) (not d!15843) (not b!70901) (not b!71095) (not bm!6053) (not b!71036) (not b!71109) (not d!15863) (not b!71034) (not d!15865) (not bm!6135) (not bm!6117) (not bm!6129) (not bm!6118) (not d!15829) (not bm!6113) (not bm!6114) (not bm!6110) (not b!71068) (not b!70996) (not d!15855) (not b!71007) (not b!71097) (not d!15859) (not b!71102) (not b!71106) (not bm!6119) (not b!70885) (not b!71047) (not d!15827) (not d!15851) (not bm!6127) (not b!71111) (not b!71094) (not b!70991) b_and!4385 (not b!71069) (not b!71042) (not bm!6124) (not b!70873) (not b!70891) tp_is_empty!2467 (not bm!6107) (not b!71035) (not b!71061) (not b!71110) (not d!15841))
(check-sat b_and!4385 b_and!4387 (not b_next!2101) (not b_next!2103))
(get-model)

(declare-fun d!15873 () Bool)

(declare-fun e!46582 () Bool)

(assert (=> d!15873 e!46582))

(declare-fun res!37947 () Bool)

(assert (=> d!15873 (=> res!37947 e!46582)))

(declare-fun lt!31520 () Bool)

(assert (=> d!15873 (= res!37947 (not lt!31520))))

(declare-fun lt!31519 () Bool)

(assert (=> d!15873 (= lt!31520 lt!31519)))

(declare-fun lt!31518 () Unit!1996)

(declare-fun e!46581 () Unit!1996)

(assert (=> d!15873 (= lt!31518 e!46581)))

(declare-fun c!10322 () Bool)

(assert (=> d!15873 (= c!10322 lt!31519)))

(assert (=> d!15873 (= lt!31519 (containsKey!136 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15873 (= (contains!715 lt!31365 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31520)))

(declare-fun b!71122 () Bool)

(declare-fun lt!31517 () Unit!1996)

(assert (=> b!71122 (= e!46581 lt!31517)))

(assert (=> b!71122 (= lt!31517 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71122 (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71123 () Bool)

(declare-fun Unit!2010 () Unit!1996)

(assert (=> b!71123 (= e!46581 Unit!2010)))

(declare-fun b!71124 () Bool)

(assert (=> b!71124 (= e!46582 (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15873 c!10322) b!71122))

(assert (= (and d!15873 (not c!10322)) b!71123))

(assert (= (and d!15873 (not res!37947)) b!71124))

(declare-fun m!68215 () Bool)

(assert (=> d!15873 m!68215))

(declare-fun m!68217 () Bool)

(assert (=> b!71122 m!68217))

(declare-fun m!68219 () Bool)

(assert (=> b!71122 m!68219))

(assert (=> b!71122 m!68219))

(declare-fun m!68221 () Bool)

(assert (=> b!71122 m!68221))

(assert (=> b!71124 m!68219))

(assert (=> b!71124 m!68219))

(assert (=> b!71124 m!68221))

(assert (=> bm!6052 d!15873))

(declare-fun d!15875 () Bool)

(declare-fun e!46584 () Bool)

(assert (=> d!15875 e!46584))

(declare-fun res!37948 () Bool)

(assert (=> d!15875 (=> res!37948 e!46584)))

(declare-fun lt!31524 () Bool)

(assert (=> d!15875 (= res!37948 (not lt!31524))))

(declare-fun lt!31523 () Bool)

(assert (=> d!15875 (= lt!31524 lt!31523)))

(declare-fun lt!31522 () Unit!1996)

(declare-fun e!46583 () Unit!1996)

(assert (=> d!15875 (= lt!31522 e!46583)))

(declare-fun c!10323 () Bool)

(assert (=> d!15875 (= c!10323 lt!31523)))

(assert (=> d!15875 (= lt!31523 (containsKey!136 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500))))

(assert (=> d!15875 (= (contains!715 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)) lt!31500) lt!31524)))

(declare-fun b!71125 () Bool)

(declare-fun lt!31521 () Unit!1996)

(assert (=> b!71125 (= e!46583 lt!31521)))

(assert (=> b!71125 (= lt!31521 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500))))

(assert (=> b!71125 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500))))

(declare-fun b!71126 () Bool)

(declare-fun Unit!2011 () Unit!1996)

(assert (=> b!71126 (= e!46583 Unit!2011)))

(declare-fun b!71127 () Bool)

(assert (=> b!71127 (= e!46584 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500)))))

(assert (= (and d!15875 c!10323) b!71125))

(assert (= (and d!15875 (not c!10323)) b!71126))

(assert (= (and d!15875 (not res!37948)) b!71127))

(declare-fun m!68223 () Bool)

(assert (=> d!15875 m!68223))

(declare-fun m!68225 () Bool)

(assert (=> b!71125 m!68225))

(declare-fun m!68227 () Bool)

(assert (=> b!71125 m!68227))

(assert (=> b!71125 m!68227))

(declare-fun m!68229 () Bool)

(assert (=> b!71125 m!68229))

(assert (=> b!71127 m!68227))

(assert (=> b!71127 m!68227))

(assert (=> b!71127 m!68229))

(assert (=> b!71097 d!15875))

(declare-fun d!15877 () Bool)

(declare-fun c!10324 () Bool)

(assert (=> d!15877 (= c!10324 ((_ is ValueCellFull!890) (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!46585 () V!2937)

(assert (=> d!15877 (= (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46585)))

(declare-fun b!71128 () Bool)

(assert (=> b!71128 (= e!46585 (get!1144 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71129 () Bool)

(assert (=> b!71129 (= e!46585 (get!1145 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15877 c!10324) b!71128))

(assert (= (and d!15877 (not c!10324)) b!71129))

(assert (=> b!71128 m!68039))

(assert (=> b!71128 m!67823))

(declare-fun m!68231 () Bool)

(assert (=> b!71128 m!68231))

(assert (=> b!71129 m!68039))

(assert (=> b!71129 m!67823))

(declare-fun m!68233 () Bool)

(assert (=> b!71129 m!68233))

(assert (=> b!71097 d!15877))

(declare-fun d!15879 () Bool)

(declare-fun e!46586 () Bool)

(assert (=> d!15879 e!46586))

(declare-fun res!37949 () Bool)

(assert (=> d!15879 (=> (not res!37949) (not e!46586))))

(declare-fun lt!31528 () ListLongMap!1395)

(assert (=> d!15879 (= res!37949 (contains!715 lt!31528 (_1!1066 (tuple2!2111 lt!31495 lt!31497))))))

(declare-fun lt!31526 () List!1467)

(assert (=> d!15879 (= lt!31528 (ListLongMap!1396 lt!31526))))

(declare-fun lt!31527 () Unit!1996)

(declare-fun lt!31525 () Unit!1996)

(assert (=> d!15879 (= lt!31527 lt!31525)))

(assert (=> d!15879 (= (getValueByKey!133 lt!31526 (_1!1066 (tuple2!2111 lt!31495 lt!31497))) (Some!138 (_2!1066 (tuple2!2111 lt!31495 lt!31497))))))

(assert (=> d!15879 (= lt!31525 (lemmaContainsTupThenGetReturnValue!50 lt!31526 (_1!1066 (tuple2!2111 lt!31495 lt!31497)) (_2!1066 (tuple2!2111 lt!31495 lt!31497))))))

(assert (=> d!15879 (= lt!31526 (insertStrictlySorted!53 (toList!713 lt!31498) (_1!1066 (tuple2!2111 lt!31495 lt!31497)) (_2!1066 (tuple2!2111 lt!31495 lt!31497))))))

(assert (=> d!15879 (= (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)) lt!31528)))

(declare-fun b!71130 () Bool)

(declare-fun res!37950 () Bool)

(assert (=> b!71130 (=> (not res!37950) (not e!46586))))

(assert (=> b!71130 (= res!37950 (= (getValueByKey!133 (toList!713 lt!31528) (_1!1066 (tuple2!2111 lt!31495 lt!31497))) (Some!138 (_2!1066 (tuple2!2111 lt!31495 lt!31497)))))))

(declare-fun b!71131 () Bool)

(assert (=> b!71131 (= e!46586 (contains!719 (toList!713 lt!31528) (tuple2!2111 lt!31495 lt!31497)))))

(assert (= (and d!15879 res!37949) b!71130))

(assert (= (and b!71130 res!37950) b!71131))

(declare-fun m!68235 () Bool)

(assert (=> d!15879 m!68235))

(declare-fun m!68237 () Bool)

(assert (=> d!15879 m!68237))

(declare-fun m!68239 () Bool)

(assert (=> d!15879 m!68239))

(declare-fun m!68241 () Bool)

(assert (=> d!15879 m!68241))

(declare-fun m!68243 () Bool)

(assert (=> b!71130 m!68243))

(declare-fun m!68245 () Bool)

(assert (=> b!71131 m!68245))

(assert (=> b!71097 d!15879))

(declare-fun d!15881 () Bool)

(assert (=> d!15881 (not (contains!715 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)) lt!31500))))

(declare-fun lt!31531 () Unit!1996)

(declare-fun choose!404 (ListLongMap!1395 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1996)

(assert (=> d!15881 (= lt!31531 (choose!404 lt!31498 lt!31495 lt!31497 lt!31500))))

(declare-fun e!46589 () Bool)

(assert (=> d!15881 e!46589))

(declare-fun res!37953 () Bool)

(assert (=> d!15881 (=> (not res!37953) (not e!46589))))

(assert (=> d!15881 (= res!37953 (not (contains!715 lt!31498 lt!31500)))))

(assert (=> d!15881 (= (addStillNotContains!25 lt!31498 lt!31495 lt!31497 lt!31500) lt!31531)))

(declare-fun b!71135 () Bool)

(assert (=> b!71135 (= e!46589 (not (= lt!31495 lt!31500)))))

(assert (= (and d!15881 res!37953) b!71135))

(assert (=> d!15881 m!68159))

(assert (=> d!15881 m!68159))

(assert (=> d!15881 m!68161))

(declare-fun m!68247 () Bool)

(assert (=> d!15881 m!68247))

(declare-fun m!68249 () Bool)

(assert (=> d!15881 m!68249))

(assert (=> b!71097 d!15881))

(declare-fun d!15883 () Bool)

(declare-fun e!46590 () Bool)

(assert (=> d!15883 e!46590))

(declare-fun res!37954 () Bool)

(assert (=> d!15883 (=> (not res!37954) (not e!46590))))

(declare-fun lt!31535 () ListLongMap!1395)

(assert (=> d!15883 (= res!37954 (contains!715 lt!31535 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!31533 () List!1467)

(assert (=> d!15883 (= lt!31535 (ListLongMap!1396 lt!31533))))

(declare-fun lt!31534 () Unit!1996)

(declare-fun lt!31532 () Unit!1996)

(assert (=> d!15883 (= lt!31534 lt!31532)))

(assert (=> d!15883 (= (getValueByKey!133 lt!31533 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15883 (= lt!31532 (lemmaContainsTupThenGetReturnValue!50 lt!31533 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15883 (= lt!31533 (insertStrictlySorted!53 (toList!713 call!6138) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15883 (= (+!91 call!6138 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!31535)))

(declare-fun b!71136 () Bool)

(declare-fun res!37955 () Bool)

(assert (=> b!71136 (=> (not res!37955) (not e!46590))))

(assert (=> b!71136 (= res!37955 (= (getValueByKey!133 (toList!713 lt!31535) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!71137 () Bool)

(assert (=> b!71137 (= e!46590 (contains!719 (toList!713 lt!31535) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15883 res!37954) b!71136))

(assert (= (and b!71136 res!37955) b!71137))

(declare-fun m!68251 () Bool)

(assert (=> d!15883 m!68251))

(declare-fun m!68253 () Bool)

(assert (=> d!15883 m!68253))

(declare-fun m!68255 () Bool)

(assert (=> d!15883 m!68255))

(declare-fun m!68257 () Bool)

(assert (=> d!15883 m!68257))

(declare-fun m!68259 () Bool)

(assert (=> b!71136 m!68259))

(declare-fun m!68261 () Bool)

(assert (=> b!71137 m!68261))

(assert (=> b!71097 d!15883))

(declare-fun d!15885 () Bool)

(declare-fun e!46591 () Bool)

(assert (=> d!15885 e!46591))

(declare-fun res!37956 () Bool)

(assert (=> d!15885 (=> (not res!37956) (not e!46591))))

(declare-fun lt!31539 () ListLongMap!1395)

(assert (=> d!15885 (= res!37956 (contains!715 lt!31539 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun lt!31537 () List!1467)

(assert (=> d!15885 (= lt!31539 (ListLongMap!1396 lt!31537))))

(declare-fun lt!31538 () Unit!1996)

(declare-fun lt!31536 () Unit!1996)

(assert (=> d!15885 (= lt!31538 lt!31536)))

(assert (=> d!15885 (= (getValueByKey!133 lt!31537 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!15885 (= lt!31536 (lemmaContainsTupThenGetReturnValue!50 lt!31537 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!15885 (= lt!31537 (insertStrictlySorted!53 (toList!713 lt!31219) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!15885 (= (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) lt!31539)))

(declare-fun b!71138 () Bool)

(declare-fun res!37957 () Bool)

(assert (=> b!71138 (=> (not res!37957) (not e!46591))))

(assert (=> b!71138 (= res!37957 (= (getValueByKey!133 (toList!713 lt!31539) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun b!71139 () Bool)

(assert (=> b!71139 (= e!46591 (contains!719 (toList!713 lt!31539) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(assert (= (and d!15885 res!37956) b!71138))

(assert (= (and b!71138 res!37957) b!71139))

(declare-fun m!68263 () Bool)

(assert (=> d!15885 m!68263))

(declare-fun m!68265 () Bool)

(assert (=> d!15885 m!68265))

(declare-fun m!68267 () Bool)

(assert (=> d!15885 m!68267))

(declare-fun m!68269 () Bool)

(assert (=> d!15885 m!68269))

(declare-fun m!68271 () Bool)

(assert (=> b!71138 m!68271))

(declare-fun m!68273 () Bool)

(assert (=> b!71139 m!68273))

(assert (=> d!15861 d!15885))

(declare-fun d!15887 () Bool)

(declare-fun e!46592 () Bool)

(assert (=> d!15887 e!46592))

(declare-fun res!37958 () Bool)

(assert (=> d!15887 (=> (not res!37958) (not e!46592))))

(declare-fun lt!31543 () ListLongMap!1395)

(assert (=> d!15887 (= res!37958 (contains!715 lt!31543 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!31541 () List!1467)

(assert (=> d!15887 (= lt!31543 (ListLongMap!1396 lt!31541))))

(declare-fun lt!31542 () Unit!1996)

(declare-fun lt!31540 () Unit!1996)

(assert (=> d!15887 (= lt!31542 lt!31540)))

(assert (=> d!15887 (= (getValueByKey!133 lt!31541 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15887 (= lt!31540 (lemmaContainsTupThenGetReturnValue!50 lt!31541 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15887 (= lt!31541 (insertStrictlySorted!53 (toList!713 lt!31219) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15887 (= (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31543)))

(declare-fun b!71140 () Bool)

(declare-fun res!37959 () Bool)

(assert (=> b!71140 (=> (not res!37959) (not e!46592))))

(assert (=> b!71140 (= res!37959 (= (getValueByKey!133 (toList!713 lt!31543) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun b!71141 () Bool)

(assert (=> b!71141 (= e!46592 (contains!719 (toList!713 lt!31543) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!15887 res!37958) b!71140))

(assert (= (and b!71140 res!37959) b!71141))

(declare-fun m!68275 () Bool)

(assert (=> d!15887 m!68275))

(declare-fun m!68277 () Bool)

(assert (=> d!15887 m!68277))

(declare-fun m!68279 () Bool)

(assert (=> d!15887 m!68279))

(declare-fun m!68281 () Bool)

(assert (=> d!15887 m!68281))

(declare-fun m!68283 () Bool)

(assert (=> b!71140 m!68283))

(declare-fun m!68285 () Bool)

(assert (=> b!71141 m!68285))

(assert (=> d!15861 d!15887))

(declare-fun d!15889 () Bool)

(assert (=> d!15889 (= (+!91 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (+!91 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(assert (=> d!15889 true))

(declare-fun _$28!118 () Unit!1996)

(assert (=> d!15889 (= (choose!403 lt!31219 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) _$28!118)))

(declare-fun bs!3063 () Bool)

(assert (= bs!3063 d!15889))

(assert (=> bs!3063 m!68179))

(assert (=> bs!3063 m!68179))

(assert (=> bs!3063 m!68181))

(assert (=> bs!3063 m!68183))

(assert (=> bs!3063 m!68183))

(assert (=> bs!3063 m!68185))

(assert (=> d!15861 d!15889))

(declare-fun d!15891 () Bool)

(declare-fun e!46593 () Bool)

(assert (=> d!15891 e!46593))

(declare-fun res!37960 () Bool)

(assert (=> d!15891 (=> (not res!37960) (not e!46593))))

(declare-fun lt!31547 () ListLongMap!1395)

(assert (=> d!15891 (= res!37960 (contains!715 lt!31547 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun lt!31545 () List!1467)

(assert (=> d!15891 (= lt!31547 (ListLongMap!1396 lt!31545))))

(declare-fun lt!31546 () Unit!1996)

(declare-fun lt!31544 () Unit!1996)

(assert (=> d!15891 (= lt!31546 lt!31544)))

(assert (=> d!15891 (= (getValueByKey!133 lt!31545 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!15891 (= lt!31544 (lemmaContainsTupThenGetReturnValue!50 lt!31545 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!15891 (= lt!31545 (insertStrictlySorted!53 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!15891 (= (+!91 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) lt!31547)))

(declare-fun b!71142 () Bool)

(declare-fun res!37961 () Bool)

(assert (=> b!71142 (=> (not res!37961) (not e!46593))))

(assert (=> b!71142 (= res!37961 (= (getValueByKey!133 (toList!713 lt!31547) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun b!71143 () Bool)

(assert (=> b!71143 (= e!46593 (contains!719 (toList!713 lt!31547) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(assert (= (and d!15891 res!37960) b!71142))

(assert (= (and b!71142 res!37961) b!71143))

(declare-fun m!68287 () Bool)

(assert (=> d!15891 m!68287))

(declare-fun m!68289 () Bool)

(assert (=> d!15891 m!68289))

(declare-fun m!68291 () Bool)

(assert (=> d!15891 m!68291))

(declare-fun m!68293 () Bool)

(assert (=> d!15891 m!68293))

(declare-fun m!68295 () Bool)

(assert (=> b!71142 m!68295))

(declare-fun m!68297 () Bool)

(assert (=> b!71143 m!68297))

(assert (=> d!15861 d!15891))

(declare-fun d!15893 () Bool)

(declare-fun e!46594 () Bool)

(assert (=> d!15893 e!46594))

(declare-fun res!37962 () Bool)

(assert (=> d!15893 (=> (not res!37962) (not e!46594))))

(declare-fun lt!31551 () ListLongMap!1395)

(assert (=> d!15893 (= res!37962 (contains!715 lt!31551 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!31549 () List!1467)

(assert (=> d!15893 (= lt!31551 (ListLongMap!1396 lt!31549))))

(declare-fun lt!31550 () Unit!1996)

(declare-fun lt!31548 () Unit!1996)

(assert (=> d!15893 (= lt!31550 lt!31548)))

(assert (=> d!15893 (= (getValueByKey!133 lt!31549 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15893 (= lt!31548 (lemmaContainsTupThenGetReturnValue!50 lt!31549 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15893 (= lt!31549 (insertStrictlySorted!53 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15893 (= (+!91 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31551)))

(declare-fun b!71144 () Bool)

(declare-fun res!37963 () Bool)

(assert (=> b!71144 (=> (not res!37963) (not e!46594))))

(assert (=> b!71144 (= res!37963 (= (getValueByKey!133 (toList!713 lt!31551) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun b!71145 () Bool)

(assert (=> b!71145 (= e!46594 (contains!719 (toList!713 lt!31551) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!15893 res!37962) b!71144))

(assert (= (and b!71144 res!37963) b!71145))

(declare-fun m!68299 () Bool)

(assert (=> d!15893 m!68299))

(declare-fun m!68301 () Bool)

(assert (=> d!15893 m!68301))

(declare-fun m!68303 () Bool)

(assert (=> d!15893 m!68303))

(declare-fun m!68305 () Bool)

(assert (=> d!15893 m!68305))

(declare-fun m!68307 () Bool)

(assert (=> b!71144 m!68307))

(declare-fun m!68309 () Bool)

(assert (=> b!71145 m!68309))

(assert (=> d!15861 d!15893))

(assert (=> d!15845 d!15849))

(declare-fun d!15895 () Bool)

(assert (=> d!15895 (not (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!15895 true))

(declare-fun _$68!52 () Unit!1996)

(assert (=> d!15895 (= (choose!68 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465)) _$68!52)))

(declare-fun bs!3064 () Bool)

(assert (= bs!3064 d!15895))

(assert (=> bs!3064 m!67819))

(assert (=> bs!3064 m!67867))

(assert (=> d!15845 d!15895))

(declare-fun d!15897 () Bool)

(declare-fun res!37964 () Bool)

(declare-fun e!46595 () Bool)

(assert (=> d!15897 (=> (not res!37964) (not e!46595))))

(assert (=> d!15897 (= res!37964 (simpleValid!50 (_2!1065 lt!31440)))))

(assert (=> d!15897 (= (valid!301 (_2!1065 lt!31440)) e!46595)))

(declare-fun b!71146 () Bool)

(declare-fun res!37965 () Bool)

(assert (=> b!71146 (=> (not res!37965) (not e!46595))))

(assert (=> b!71146 (= res!37965 (= (arrayCountValidKeys!0 (_keys!3839 (_2!1065 lt!31440)) #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))) (_size!393 (_2!1065 lt!31440))))))

(declare-fun b!71147 () Bool)

(declare-fun res!37966 () Bool)

(assert (=> b!71147 (=> (not res!37966) (not e!46595))))

(assert (=> b!71147 (= res!37966 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3839 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440))))))

(declare-fun b!71148 () Bool)

(assert (=> b!71148 (= e!46595 (arrayNoDuplicates!0 (_keys!3839 (_2!1065 lt!31440)) #b00000000000000000000000000000000 Nil!1465))))

(assert (= (and d!15897 res!37964) b!71146))

(assert (= (and b!71146 res!37965) b!71147))

(assert (= (and b!71147 res!37966) b!71148))

(declare-fun m!68311 () Bool)

(assert (=> d!15897 m!68311))

(declare-fun m!68313 () Bool)

(assert (=> b!71146 m!68313))

(declare-fun m!68315 () Bool)

(assert (=> b!71147 m!68315))

(declare-fun m!68317 () Bool)

(assert (=> b!71148 m!68317))

(assert (=> d!15841 d!15897))

(assert (=> d!15841 d!15843))

(declare-fun d!15899 () Bool)

(assert (=> d!15899 (= (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71099 d!15899))

(declare-fun b!71158 () Bool)

(declare-fun e!46600 () Option!139)

(declare-fun e!46601 () Option!139)

(assert (=> b!71158 (= e!46600 e!46601)))

(declare-fun c!10330 () Bool)

(assert (=> b!71158 (= c!10330 (and ((_ is Cons!1463) (toList!713 lt!31480)) (not (= (_1!1066 (h!2049 (toList!713 lt!31480))) (_1!1066 lt!31223)))))))

(declare-fun b!71160 () Bool)

(assert (=> b!71160 (= e!46601 None!137)))

(declare-fun b!71159 () Bool)

(assert (=> b!71159 (= e!46601 (getValueByKey!133 (t!4995 (toList!713 lt!31480)) (_1!1066 lt!31223)))))

(declare-fun d!15901 () Bool)

(declare-fun c!10329 () Bool)

(assert (=> d!15901 (= c!10329 (and ((_ is Cons!1463) (toList!713 lt!31480)) (= (_1!1066 (h!2049 (toList!713 lt!31480))) (_1!1066 lt!31223))))))

(assert (=> d!15901 (= (getValueByKey!133 (toList!713 lt!31480) (_1!1066 lt!31223)) e!46600)))

(declare-fun b!71157 () Bool)

(assert (=> b!71157 (= e!46600 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31480)))))))

(assert (= (and d!15901 c!10329) b!71157))

(assert (= (and d!15901 (not c!10329)) b!71158))

(assert (= (and b!71158 c!10330) b!71159))

(assert (= (and b!71158 (not c!10330)) b!71160))

(declare-fun m!68319 () Bool)

(assert (=> b!71159 m!68319))

(assert (=> b!71068 d!15901))

(assert (=> b!70882 d!15899))

(declare-fun d!15903 () Bool)

(declare-fun get!1146 (Option!139) V!2937)

(assert (=> d!15903 (= (apply!74 lt!31501 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1146 (getValueByKey!133 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3065 () Bool)

(assert (= bs!3065 d!15903))

(assert (=> bs!3065 m!67995))

(declare-fun m!68321 () Bool)

(assert (=> bs!3065 m!68321))

(assert (=> bs!3065 m!68321))

(declare-fun m!68323 () Bool)

(assert (=> bs!3065 m!68323))

(assert (=> b!71096 d!15903))

(assert (=> b!71096 d!15877))

(declare-fun d!15905 () Bool)

(assert (=> d!15905 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31453 (zeroValue!2095 newMap!16) lt!31220 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31554 () Unit!1996)

(declare-fun choose!405 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 V!2937 Int) Unit!1996)

(assert (=> d!15905 (= lt!31554 (choose!405 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) lt!31453 (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) lt!31220 (defaultEntry!2191 newMap!16)))))

(assert (=> d!15905 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!15905 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) lt!31453 (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) lt!31220 (defaultEntry!2191 newMap!16)) lt!31554)))

(declare-fun bs!3066 () Bool)

(assert (= bs!3066 d!15905))

(declare-fun m!68325 () Bool)

(assert (=> bs!3066 m!68325))

(assert (=> bs!3066 m!67987))

(declare-fun m!68327 () Bool)

(assert (=> bs!3066 m!68327))

(declare-fun m!68329 () Bool)

(assert (=> bs!3066 m!68329))

(assert (=> bs!3066 m!67987))

(declare-fun m!68331 () Bool)

(assert (=> bs!3066 m!68331))

(assert (=> b!70988 d!15905))

(declare-fun d!15907 () Bool)

(declare-fun e!46602 () Bool)

(assert (=> d!15907 e!46602))

(declare-fun res!37967 () Bool)

(assert (=> d!15907 (=> (not res!37967) (not e!46602))))

(declare-fun lt!31558 () ListLongMap!1395)

(assert (=> d!15907 (= res!37967 (contains!715 lt!31558 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!31556 () List!1467)

(assert (=> d!15907 (= lt!31558 (ListLongMap!1396 lt!31556))))

(declare-fun lt!31557 () Unit!1996)

(declare-fun lt!31555 () Unit!1996)

(assert (=> d!15907 (= lt!31557 lt!31555)))

(assert (=> d!15907 (= (getValueByKey!133 lt!31556 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15907 (= lt!31555 (lemmaContainsTupThenGetReturnValue!50 lt!31556 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15907 (= lt!31556 (insertStrictlySorted!53 (toList!713 call!6054) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15907 (= (+!91 call!6054 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31558)))

(declare-fun b!71161 () Bool)

(declare-fun res!37968 () Bool)

(assert (=> b!71161 (=> (not res!37968) (not e!46602))))

(assert (=> b!71161 (= res!37968 (= (getValueByKey!133 (toList!713 lt!31558) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun b!71162 () Bool)

(assert (=> b!71162 (= e!46602 (contains!719 (toList!713 lt!31558) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!15907 res!37967) b!71161))

(assert (= (and b!71161 res!37968) b!71162))

(declare-fun m!68333 () Bool)

(assert (=> d!15907 m!68333))

(declare-fun m!68335 () Bool)

(assert (=> d!15907 m!68335))

(declare-fun m!68337 () Bool)

(assert (=> d!15907 m!68337))

(declare-fun m!68339 () Bool)

(assert (=> d!15907 m!68339))

(declare-fun m!68341 () Bool)

(assert (=> b!71161 m!68341))

(declare-fun m!68343 () Bool)

(assert (=> b!71162 m!68343))

(assert (=> b!70867 d!15907))

(declare-fun d!15909 () Bool)

(declare-fun e!46604 () Bool)

(assert (=> d!15909 e!46604))

(declare-fun res!37969 () Bool)

(assert (=> d!15909 (=> res!37969 e!46604)))

(declare-fun lt!31562 () Bool)

(assert (=> d!15909 (= res!37969 (not lt!31562))))

(declare-fun lt!31561 () Bool)

(assert (=> d!15909 (= lt!31562 lt!31561)))

(declare-fun lt!31560 () Unit!1996)

(declare-fun e!46603 () Unit!1996)

(assert (=> d!15909 (= lt!31560 e!46603)))

(declare-fun c!10331 () Bool)

(assert (=> d!15909 (= c!10331 lt!31561)))

(assert (=> d!15909 (= lt!31561 (containsKey!136 (toList!713 lt!31505) (_1!1066 lt!31228)))))

(assert (=> d!15909 (= (contains!715 lt!31505 (_1!1066 lt!31228)) lt!31562)))

(declare-fun b!71163 () Bool)

(declare-fun lt!31559 () Unit!1996)

(assert (=> b!71163 (= e!46603 lt!31559)))

(assert (=> b!71163 (= lt!31559 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31505) (_1!1066 lt!31228)))))

(assert (=> b!71163 (isDefined!85 (getValueByKey!133 (toList!713 lt!31505) (_1!1066 lt!31228)))))

(declare-fun b!71164 () Bool)

(declare-fun Unit!2012 () Unit!1996)

(assert (=> b!71164 (= e!46603 Unit!2012)))

(declare-fun b!71165 () Bool)

(assert (=> b!71165 (= e!46604 (isDefined!85 (getValueByKey!133 (toList!713 lt!31505) (_1!1066 lt!31228))))))

(assert (= (and d!15909 c!10331) b!71163))

(assert (= (and d!15909 (not c!10331)) b!71164))

(assert (= (and d!15909 (not res!37969)) b!71165))

(declare-fun m!68345 () Bool)

(assert (=> d!15909 m!68345))

(declare-fun m!68347 () Bool)

(assert (=> b!71163 m!68347))

(assert (=> b!71163 m!68173))

(assert (=> b!71163 m!68173))

(declare-fun m!68349 () Bool)

(assert (=> b!71163 m!68349))

(assert (=> b!71165 m!68173))

(assert (=> b!71165 m!68173))

(assert (=> b!71165 m!68349))

(assert (=> d!15859 d!15909))

(declare-fun b!71167 () Bool)

(declare-fun e!46605 () Option!139)

(declare-fun e!46606 () Option!139)

(assert (=> b!71167 (= e!46605 e!46606)))

(declare-fun c!10333 () Bool)

(assert (=> b!71167 (= c!10333 (and ((_ is Cons!1463) lt!31503) (not (= (_1!1066 (h!2049 lt!31503)) (_1!1066 lt!31228)))))))

(declare-fun b!71169 () Bool)

(assert (=> b!71169 (= e!46606 None!137)))

(declare-fun b!71168 () Bool)

(assert (=> b!71168 (= e!46606 (getValueByKey!133 (t!4995 lt!31503) (_1!1066 lt!31228)))))

(declare-fun d!15911 () Bool)

(declare-fun c!10332 () Bool)

(assert (=> d!15911 (= c!10332 (and ((_ is Cons!1463) lt!31503) (= (_1!1066 (h!2049 lt!31503)) (_1!1066 lt!31228))))))

(assert (=> d!15911 (= (getValueByKey!133 lt!31503 (_1!1066 lt!31228)) e!46605)))

(declare-fun b!71166 () Bool)

(assert (=> b!71166 (= e!46605 (Some!138 (_2!1066 (h!2049 lt!31503))))))

(assert (= (and d!15911 c!10332) b!71166))

(assert (= (and d!15911 (not c!10332)) b!71167))

(assert (= (and b!71167 c!10333) b!71168))

(assert (= (and b!71167 (not c!10333)) b!71169))

(declare-fun m!68351 () Bool)

(assert (=> b!71168 m!68351))

(assert (=> d!15859 d!15911))

(declare-fun d!15913 () Bool)

(assert (=> d!15913 (= (getValueByKey!133 lt!31503 (_1!1066 lt!31228)) (Some!138 (_2!1066 lt!31228)))))

(declare-fun lt!31565 () Unit!1996)

(declare-fun choose!406 (List!1467 (_ BitVec 64) V!2937) Unit!1996)

(assert (=> d!15913 (= lt!31565 (choose!406 lt!31503 (_1!1066 lt!31228) (_2!1066 lt!31228)))))

(declare-fun e!46609 () Bool)

(assert (=> d!15913 e!46609))

(declare-fun res!37974 () Bool)

(assert (=> d!15913 (=> (not res!37974) (not e!46609))))

(declare-fun isStrictlySorted!278 (List!1467) Bool)

(assert (=> d!15913 (= res!37974 (isStrictlySorted!278 lt!31503))))

(assert (=> d!15913 (= (lemmaContainsTupThenGetReturnValue!50 lt!31503 (_1!1066 lt!31228) (_2!1066 lt!31228)) lt!31565)))

(declare-fun b!71174 () Bool)

(declare-fun res!37975 () Bool)

(assert (=> b!71174 (=> (not res!37975) (not e!46609))))

(assert (=> b!71174 (= res!37975 (containsKey!136 lt!31503 (_1!1066 lt!31228)))))

(declare-fun b!71175 () Bool)

(assert (=> b!71175 (= e!46609 (contains!719 lt!31503 (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(assert (= (and d!15913 res!37974) b!71174))

(assert (= (and b!71174 res!37975) b!71175))

(assert (=> d!15913 m!68167))

(declare-fun m!68353 () Bool)

(assert (=> d!15913 m!68353))

(declare-fun m!68355 () Bool)

(assert (=> d!15913 m!68355))

(declare-fun m!68357 () Bool)

(assert (=> b!71174 m!68357))

(declare-fun m!68359 () Bool)

(assert (=> b!71175 m!68359))

(assert (=> d!15859 d!15913))

(declare-fun b!71196 () Bool)

(declare-fun e!46624 () List!1467)

(declare-fun call!6147 () List!1467)

(assert (=> b!71196 (= e!46624 call!6147)))

(declare-fun bm!6142 () Bool)

(declare-fun e!46623 () List!1467)

(declare-fun c!10345 () Bool)

(declare-fun $colon$colon!64 (List!1467 tuple2!2110) List!1467)

(assert (=> bm!6142 (= call!6147 ($colon$colon!64 e!46623 (ite c!10345 (h!2049 (toList!713 (+!91 lt!31219 lt!31223))) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228)))))))

(declare-fun c!10344 () Bool)

(assert (=> bm!6142 (= c!10344 c!10345)))

(declare-fun d!15915 () Bool)

(declare-fun e!46622 () Bool)

(assert (=> d!15915 e!46622))

(declare-fun res!37981 () Bool)

(assert (=> d!15915 (=> (not res!37981) (not e!46622))))

(declare-fun lt!31568 () List!1467)

(assert (=> d!15915 (= res!37981 (isStrictlySorted!278 lt!31568))))

(assert (=> d!15915 (= lt!31568 e!46624)))

(assert (=> d!15915 (= c!10345 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 lt!31223))) (bvslt (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 lt!31223)))) (_1!1066 lt!31228))))))

(assert (=> d!15915 (isStrictlySorted!278 (toList!713 (+!91 lt!31219 lt!31223)))))

(assert (=> d!15915 (= (insertStrictlySorted!53 (toList!713 (+!91 lt!31219 lt!31223)) (_1!1066 lt!31228) (_2!1066 lt!31228)) lt!31568)))

(declare-fun b!71197 () Bool)

(declare-fun e!46620 () List!1467)

(declare-fun call!6145 () List!1467)

(assert (=> b!71197 (= e!46620 call!6145)))

(declare-fun b!71198 () Bool)

(declare-fun c!10342 () Bool)

(assert (=> b!71198 (= c!10342 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 lt!31223))) (bvsgt (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 lt!31223)))) (_1!1066 lt!31228))))))

(declare-fun e!46621 () List!1467)

(assert (=> b!71198 (= e!46620 e!46621)))

(declare-fun b!71199 () Bool)

(declare-fun call!6146 () List!1467)

(assert (=> b!71199 (= e!46621 call!6146)))

(declare-fun b!71200 () Bool)

(assert (=> b!71200 (= e!46621 call!6146)))

(declare-fun b!71201 () Bool)

(declare-fun res!37980 () Bool)

(assert (=> b!71201 (=> (not res!37980) (not e!46622))))

(assert (=> b!71201 (= res!37980 (containsKey!136 lt!31568 (_1!1066 lt!31228)))))

(declare-fun b!71202 () Bool)

(declare-fun c!10343 () Bool)

(assert (=> b!71202 (= e!46623 (ite c!10343 (t!4995 (toList!713 (+!91 lt!31219 lt!31223))) (ite c!10342 (Cons!1463 (h!2049 (toList!713 (+!91 lt!31219 lt!31223))) (t!4995 (toList!713 (+!91 lt!31219 lt!31223)))) Nil!1464)))))

(declare-fun bm!6143 () Bool)

(assert (=> bm!6143 (= call!6145 call!6147)))

(declare-fun b!71203 () Bool)

(assert (=> b!71203 (= e!46624 e!46620)))

(assert (=> b!71203 (= c!10343 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 lt!31223))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 lt!31223)))) (_1!1066 lt!31228))))))

(declare-fun bm!6144 () Bool)

(assert (=> bm!6144 (= call!6146 call!6145)))

(declare-fun b!71204 () Bool)

(assert (=> b!71204 (= e!46623 (insertStrictlySorted!53 (t!4995 (toList!713 (+!91 lt!31219 lt!31223))) (_1!1066 lt!31228) (_2!1066 lt!31228)))))

(declare-fun b!71205 () Bool)

(assert (=> b!71205 (= e!46622 (contains!719 lt!31568 (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(assert (= (and d!15915 c!10345) b!71196))

(assert (= (and d!15915 (not c!10345)) b!71203))

(assert (= (and b!71203 c!10343) b!71197))

(assert (= (and b!71203 (not c!10343)) b!71198))

(assert (= (and b!71198 c!10342) b!71199))

(assert (= (and b!71198 (not c!10342)) b!71200))

(assert (= (or b!71199 b!71200) bm!6144))

(assert (= (or b!71197 bm!6144) bm!6143))

(assert (= (or b!71196 bm!6143) bm!6142))

(assert (= (and bm!6142 c!10344) b!71204))

(assert (= (and bm!6142 (not c!10344)) b!71202))

(assert (= (and d!15915 res!37981) b!71201))

(assert (= (and b!71201 res!37980) b!71205))

(declare-fun m!68361 () Bool)

(assert (=> b!71201 m!68361))

(declare-fun m!68363 () Bool)

(assert (=> b!71205 m!68363))

(declare-fun m!68365 () Bool)

(assert (=> bm!6142 m!68365))

(declare-fun m!68367 () Bool)

(assert (=> d!15915 m!68367))

(declare-fun m!68369 () Bool)

(assert (=> d!15915 m!68369))

(declare-fun m!68371 () Bool)

(assert (=> b!71204 m!68371))

(assert (=> d!15859 d!15915))

(declare-fun d!15917 () Bool)

(declare-fun e!46626 () Bool)

(assert (=> d!15917 e!46626))

(declare-fun res!37982 () Bool)

(assert (=> d!15917 (=> res!37982 e!46626)))

(declare-fun lt!31572 () Bool)

(assert (=> d!15917 (= res!37982 (not lt!31572))))

(declare-fun lt!31571 () Bool)

(assert (=> d!15917 (= lt!31572 lt!31571)))

(declare-fun lt!31570 () Unit!1996)

(declare-fun e!46625 () Unit!1996)

(assert (=> d!15917 (= lt!31570 e!46625)))

(declare-fun c!10346 () Bool)

(assert (=> d!15917 (= c!10346 lt!31571)))

(assert (=> d!15917 (= lt!31571 (containsKey!136 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15917 (= (contains!715 lt!31501 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31572)))

(declare-fun b!71206 () Bool)

(declare-fun lt!31569 () Unit!1996)

(assert (=> b!71206 (= e!46625 lt!31569)))

(assert (=> b!71206 (= lt!31569 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71206 (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71207 () Bool)

(declare-fun Unit!2013 () Unit!1996)

(assert (=> b!71207 (= e!46625 Unit!2013)))

(declare-fun b!71208 () Bool)

(assert (=> b!71208 (= e!46626 (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15917 c!10346) b!71206))

(assert (= (and d!15917 (not c!10346)) b!71207))

(assert (= (and d!15917 (not res!37982)) b!71208))

(declare-fun m!68373 () Bool)

(assert (=> d!15917 m!68373))

(declare-fun m!68375 () Bool)

(assert (=> b!71206 m!68375))

(declare-fun m!68377 () Bool)

(assert (=> b!71206 m!68377))

(assert (=> b!71206 m!68377))

(declare-fun m!68379 () Bool)

(assert (=> b!71206 m!68379))

(assert (=> b!71208 m!68377))

(assert (=> b!71208 m!68377))

(assert (=> b!71208 m!68379))

(assert (=> d!15857 d!15917))

(assert (=> d!15857 d!15867))

(declare-fun d!15919 () Bool)

(declare-fun e!46628 () Bool)

(assert (=> d!15919 e!46628))

(declare-fun res!37983 () Bool)

(assert (=> d!15919 (=> res!37983 e!46628)))

(declare-fun lt!31576 () Bool)

(assert (=> d!15919 (= res!37983 (not lt!31576))))

(declare-fun lt!31575 () Bool)

(assert (=> d!15919 (= lt!31576 lt!31575)))

(declare-fun lt!31574 () Unit!1996)

(declare-fun e!46627 () Unit!1996)

(assert (=> d!15919 (= lt!31574 e!46627)))

(declare-fun c!10347 () Bool)

(assert (=> d!15919 (= c!10347 lt!31575)))

(assert (=> d!15919 (= lt!31575 (containsKey!136 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15919 (= (contains!715 lt!31501 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31576)))

(declare-fun b!71209 () Bool)

(declare-fun lt!31573 () Unit!1996)

(assert (=> b!71209 (= e!46627 lt!31573)))

(assert (=> b!71209 (= lt!31573 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71209 (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71210 () Bool)

(declare-fun Unit!2014 () Unit!1996)

(assert (=> b!71210 (= e!46627 Unit!2014)))

(declare-fun b!71211 () Bool)

(assert (=> b!71211 (= e!46628 (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15919 c!10347) b!71209))

(assert (= (and d!15919 (not c!10347)) b!71210))

(assert (= (and d!15919 (not res!37983)) b!71211))

(declare-fun m!68381 () Bool)

(assert (=> d!15919 m!68381))

(declare-fun m!68383 () Bool)

(assert (=> b!71209 m!68383))

(declare-fun m!68385 () Bool)

(assert (=> b!71209 m!68385))

(assert (=> b!71209 m!68385))

(declare-fun m!68387 () Bool)

(assert (=> b!71209 m!68387))

(assert (=> b!71211 m!68385))

(assert (=> b!71211 m!68385))

(assert (=> b!71211 m!68387))

(assert (=> b!71094 d!15919))

(declare-fun d!15921 () Bool)

(assert (=> d!15921 (= (map!1155 (_2!1065 lt!31440)) (getCurrentListMap!411 (_keys!3839 (_2!1065 lt!31440)) (_values!2174 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440)) (extraKeys!2054 (_2!1065 lt!31440)) (zeroValue!2095 (_2!1065 lt!31440)) (minValue!2095 (_2!1065 lt!31440)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1065 lt!31440))))))

(declare-fun bs!3067 () Bool)

(assert (= bs!3067 d!15921))

(declare-fun m!68389 () Bool)

(assert (=> bs!3067 m!68389))

(assert (=> bm!6107 d!15921))

(declare-fun bm!6145 () Bool)

(declare-fun call!6150 () ListLongMap!1395)

(declare-fun call!6148 () ListLongMap!1395)

(assert (=> bm!6145 (= call!6150 call!6148)))

(declare-fun b!71212 () Bool)

(declare-fun e!46634 () ListLongMap!1395)

(assert (=> b!71212 (= e!46634 call!6150)))

(declare-fun e!46631 () ListLongMap!1395)

(declare-fun b!71213 () Bool)

(assert (=> b!71213 (= e!46631 (+!91 call!6148 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))

(declare-fun b!71214 () Bool)

(declare-fun res!37984 () Bool)

(declare-fun e!46635 () Bool)

(assert (=> b!71214 (=> (not res!37984) (not e!46635))))

(declare-fun e!46639 () Bool)

(assert (=> b!71214 (= res!37984 e!46639)))

(declare-fun c!10350 () Bool)

(assert (=> b!71214 (= c!10350 (not (= (bvand (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6146 () Bool)

(declare-fun call!6153 () Bool)

(declare-fun lt!31597 () ListLongMap!1395)

(assert (=> bm!6146 (= call!6153 (contains!715 lt!31597 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6147 () Bool)

(declare-fun call!6154 () Bool)

(assert (=> bm!6147 (= call!6154 (contains!715 lt!31597 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6148 () Bool)

(declare-fun call!6151 () ListLongMap!1395)

(assert (=> bm!6148 (= call!6151 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite c!10293 (_values!2174 newMap!16) lt!31437) (mask!6148 newMap!16) (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71215 () Bool)

(declare-fun res!37992 () Bool)

(assert (=> b!71215 (=> (not res!37992) (not e!46635))))

(declare-fun e!46638 () Bool)

(assert (=> b!71215 (= res!37992 e!46638)))

(declare-fun res!37989 () Bool)

(assert (=> b!71215 (=> res!37989 e!46638)))

(declare-fun e!46636 () Bool)

(assert (=> b!71215 (= res!37989 (not e!46636))))

(declare-fun res!37985 () Bool)

(assert (=> b!71215 (=> (not res!37985) (not e!46636))))

(assert (=> b!71215 (= res!37985 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71216 () Bool)

(declare-fun e!46630 () Bool)

(assert (=> b!71216 (= e!46635 e!46630)))

(declare-fun c!10348 () Bool)

(assert (=> b!71216 (= c!10348 (not (= (bvand (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71217 () Bool)

(declare-fun e!46640 () Bool)

(assert (=> b!71217 (= e!46640 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun c!10353 () Bool)

(declare-fun b!71218 () Bool)

(assert (=> b!71218 (= c!10353 (and (not (= (bvand (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46641 () ListLongMap!1395)

(assert (=> b!71218 (= e!46634 e!46641)))

(declare-fun b!71219 () Bool)

(declare-fun e!46632 () Unit!1996)

(declare-fun lt!31579 () Unit!1996)

(assert (=> b!71219 (= e!46632 lt!31579)))

(declare-fun lt!31590 () ListLongMap!1395)

(assert (=> b!71219 (= lt!31590 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite c!10293 (_values!2174 newMap!16) lt!31437) (mask!6148 newMap!16) (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31596 () (_ BitVec 64))

(assert (=> b!71219 (= lt!31596 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31593 () (_ BitVec 64))

(assert (=> b!71219 (= lt!31593 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31594 () Unit!1996)

(assert (=> b!71219 (= lt!31594 (addStillContains!50 lt!31590 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) lt!31593))))

(assert (=> b!71219 (contains!715 (+!91 lt!31590 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) lt!31593)))

(declare-fun lt!31588 () Unit!1996)

(assert (=> b!71219 (= lt!31588 lt!31594)))

(declare-fun lt!31591 () ListLongMap!1395)

(assert (=> b!71219 (= lt!31591 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite c!10293 (_values!2174 newMap!16) lt!31437) (mask!6148 newMap!16) (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31583 () (_ BitVec 64))

(assert (=> b!71219 (= lt!31583 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31595 () (_ BitVec 64))

(assert (=> b!71219 (= lt!31595 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31598 () Unit!1996)

(assert (=> b!71219 (= lt!31598 (addApplyDifferent!50 lt!31591 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) lt!31595))))

(assert (=> b!71219 (= (apply!74 (+!91 lt!31591 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) lt!31595) (apply!74 lt!31591 lt!31595))))

(declare-fun lt!31584 () Unit!1996)

(assert (=> b!71219 (= lt!31584 lt!31598)))

(declare-fun lt!31580 () ListLongMap!1395)

(assert (=> b!71219 (= lt!31580 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite c!10293 (_values!2174 newMap!16) lt!31437) (mask!6148 newMap!16) (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31586 () (_ BitVec 64))

(assert (=> b!71219 (= lt!31586 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31578 () (_ BitVec 64))

(assert (=> b!71219 (= lt!31578 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31581 () Unit!1996)

(assert (=> b!71219 (= lt!31581 (addApplyDifferent!50 lt!31580 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) lt!31578))))

(assert (=> b!71219 (= (apply!74 (+!91 lt!31580 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) lt!31578) (apply!74 lt!31580 lt!31578))))

(declare-fun lt!31585 () Unit!1996)

(assert (=> b!71219 (= lt!31585 lt!31581)))

(declare-fun lt!31589 () ListLongMap!1395)

(assert (=> b!71219 (= lt!31589 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite c!10293 (_values!2174 newMap!16) lt!31437) (mask!6148 newMap!16) (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31582 () (_ BitVec 64))

(assert (=> b!71219 (= lt!31582 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31587 () (_ BitVec 64))

(assert (=> b!71219 (= lt!31587 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71219 (= lt!31579 (addApplyDifferent!50 lt!31589 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) lt!31587))))

(assert (=> b!71219 (= (apply!74 (+!91 lt!31589 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) lt!31587) (apply!74 lt!31589 lt!31587))))

(declare-fun b!71220 () Bool)

(declare-fun call!6152 () ListLongMap!1395)

(assert (=> b!71220 (= e!46641 call!6152)))

(declare-fun call!6149 () ListLongMap!1395)

(declare-fun bm!6149 () Bool)

(declare-fun c!10351 () Bool)

(declare-fun c!10352 () Bool)

(assert (=> bm!6149 (= call!6148 (+!91 (ite c!10351 call!6151 (ite c!10352 call!6149 call!6152)) (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(declare-fun b!71221 () Bool)

(declare-fun e!46633 () Bool)

(assert (=> b!71221 (= e!46630 e!46633)))

(declare-fun res!37987 () Bool)

(assert (=> b!71221 (= res!37987 call!6153)))

(assert (=> b!71221 (=> (not res!37987) (not e!46633))))

(declare-fun b!71222 () Bool)

(assert (=> b!71222 (= e!46633 (= (apply!74 lt!31597 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))

(declare-fun bm!6150 () Bool)

(assert (=> bm!6150 (= call!6152 call!6149)))

(declare-fun b!71223 () Bool)

(assert (=> b!71223 (= e!46631 e!46634)))

(assert (=> b!71223 (= c!10352 (and (not (= (bvand (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71224 () Bool)

(declare-fun e!46629 () Bool)

(assert (=> b!71224 (= e!46639 e!46629)))

(declare-fun res!37988 () Bool)

(assert (=> b!71224 (= res!37988 call!6154)))

(assert (=> b!71224 (=> (not res!37988) (not e!46629))))

(declare-fun bm!6151 () Bool)

(assert (=> bm!6151 (= call!6149 call!6151)))

(declare-fun e!46637 () Bool)

(declare-fun b!71225 () Bool)

(assert (=> b!71225 (= e!46637 (= (apply!74 lt!31597 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (ite c!10293 (_values!2174 newMap!16) lt!31437)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71225 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (ite c!10293 (_values!2174 newMap!16) lt!31437))))))

(assert (=> b!71225 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun d!15923 () Bool)

(assert (=> d!15923 e!46635))

(declare-fun res!37990 () Bool)

(assert (=> d!15923 (=> (not res!37990) (not e!46635))))

(assert (=> d!15923 (= res!37990 (or (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))))

(declare-fun lt!31577 () ListLongMap!1395)

(assert (=> d!15923 (= lt!31597 lt!31577)))

(declare-fun lt!31592 () Unit!1996)

(assert (=> d!15923 (= lt!31592 e!46632)))

(declare-fun c!10349 () Bool)

(assert (=> d!15923 (= c!10349 e!46640)))

(declare-fun res!37986 () Bool)

(assert (=> d!15923 (=> (not res!37986) (not e!46640))))

(assert (=> d!15923 (= res!37986 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!15923 (= lt!31577 e!46631)))

(assert (=> d!15923 (= c!10351 (and (not (= (bvand (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15923 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!15923 (= (getCurrentListMap!411 (_keys!3839 newMap!16) (ite c!10293 (_values!2174 newMap!16) lt!31437) (mask!6148 newMap!16) (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31597)))

(declare-fun b!71226 () Bool)

(declare-fun Unit!2015 () Unit!1996)

(assert (=> b!71226 (= e!46632 Unit!2015)))

(declare-fun b!71227 () Bool)

(assert (=> b!71227 (= e!46629 (= (apply!74 lt!31597 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))))

(declare-fun b!71228 () Bool)

(assert (=> b!71228 (= e!46636 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71229 () Bool)

(assert (=> b!71229 (= e!46630 (not call!6153))))

(declare-fun b!71230 () Bool)

(assert (=> b!71230 (= e!46639 (not call!6154))))

(declare-fun b!71231 () Bool)

(assert (=> b!71231 (= e!46638 e!46637)))

(declare-fun res!37991 () Bool)

(assert (=> b!71231 (=> (not res!37991) (not e!46637))))

(assert (=> b!71231 (= res!37991 (contains!715 lt!31597 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71231 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71232 () Bool)

(assert (=> b!71232 (= e!46641 call!6150)))

(assert (= (and d!15923 c!10351) b!71213))

(assert (= (and d!15923 (not c!10351)) b!71223))

(assert (= (and b!71223 c!10352) b!71212))

(assert (= (and b!71223 (not c!10352)) b!71218))

(assert (= (and b!71218 c!10353) b!71232))

(assert (= (and b!71218 (not c!10353)) b!71220))

(assert (= (or b!71232 b!71220) bm!6150))

(assert (= (or b!71212 bm!6150) bm!6151))

(assert (= (or b!71212 b!71232) bm!6145))

(assert (= (or b!71213 bm!6151) bm!6148))

(assert (= (or b!71213 bm!6145) bm!6149))

(assert (= (and d!15923 res!37986) b!71217))

(assert (= (and d!15923 c!10349) b!71219))

(assert (= (and d!15923 (not c!10349)) b!71226))

(assert (= (and d!15923 res!37990) b!71215))

(assert (= (and b!71215 res!37985) b!71228))

(assert (= (and b!71215 (not res!37989)) b!71231))

(assert (= (and b!71231 res!37991) b!71225))

(assert (= (and b!71215 res!37992) b!71214))

(assert (= (and b!71214 c!10350) b!71224))

(assert (= (and b!71214 (not c!10350)) b!71230))

(assert (= (and b!71224 res!37988) b!71227))

(assert (= (or b!71224 b!71230) bm!6147))

(assert (= (and b!71214 res!37984) b!71216))

(assert (= (and b!71216 c!10348) b!71221))

(assert (= (and b!71216 (not c!10348)) b!71229))

(assert (= (and b!71221 res!37987) b!71222))

(assert (= (or b!71221 b!71229) bm!6146))

(declare-fun b_lambda!3201 () Bool)

(assert (=> (not b_lambda!3201) (not b!71225)))

(declare-fun tb!1513 () Bool)

(declare-fun t!5010 () Bool)

(assert (=> (and b!70696 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16)) t!5010) tb!1513))

(declare-fun result!2661 () Bool)

(assert (=> tb!1513 (= result!2661 tp_is_empty!2467)))

(assert (=> b!71225 t!5010))

(declare-fun b_and!4389 () Bool)

(assert (= b_and!4385 (and (=> t!5010 result!2661) b_and!4389)))

(declare-fun t!5012 () Bool)

(declare-fun tb!1515 () Bool)

(assert (=> (and b!70685 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 newMap!16)) t!5012) tb!1515))

(declare-fun result!2663 () Bool)

(assert (= result!2663 result!2661))

(assert (=> b!71225 t!5012))

(declare-fun b_and!4391 () Bool)

(assert (= b_and!4387 (and (=> t!5012 result!2663) b_and!4391)))

(declare-fun m!68391 () Bool)

(assert (=> b!71227 m!68391))

(declare-fun m!68393 () Bool)

(assert (=> b!71222 m!68393))

(assert (=> d!15923 m!68327))

(declare-fun m!68395 () Bool)

(assert (=> bm!6146 m!68395))

(declare-fun m!68397 () Bool)

(assert (=> b!71228 m!68397))

(assert (=> b!71228 m!68397))

(declare-fun m!68399 () Bool)

(assert (=> b!71228 m!68399))

(declare-fun m!68401 () Bool)

(assert (=> bm!6147 m!68401))

(assert (=> b!71231 m!68397))

(assert (=> b!71231 m!68397))

(declare-fun m!68403 () Bool)

(assert (=> b!71231 m!68403))

(assert (=> b!71217 m!68397))

(assert (=> b!71217 m!68397))

(assert (=> b!71217 m!68399))

(declare-fun m!68405 () Bool)

(assert (=> bm!6149 m!68405))

(declare-fun m!68407 () Bool)

(assert (=> bm!6148 m!68407))

(declare-fun m!68409 () Bool)

(assert (=> b!71213 m!68409))

(declare-fun m!68411 () Bool)

(assert (=> b!71219 m!68411))

(declare-fun m!68413 () Bool)

(assert (=> b!71219 m!68413))

(declare-fun m!68415 () Bool)

(assert (=> b!71219 m!68415))

(declare-fun m!68417 () Bool)

(assert (=> b!71219 m!68417))

(declare-fun m!68419 () Bool)

(assert (=> b!71219 m!68419))

(declare-fun m!68421 () Bool)

(assert (=> b!71219 m!68421))

(declare-fun m!68423 () Bool)

(assert (=> b!71219 m!68423))

(declare-fun m!68425 () Bool)

(assert (=> b!71219 m!68425))

(assert (=> b!71219 m!68397))

(assert (=> b!71219 m!68419))

(declare-fun m!68427 () Bool)

(assert (=> b!71219 m!68427))

(assert (=> b!71219 m!68415))

(declare-fun m!68429 () Bool)

(assert (=> b!71219 m!68429))

(declare-fun m!68431 () Bool)

(assert (=> b!71219 m!68431))

(declare-fun m!68433 () Bool)

(assert (=> b!71219 m!68433))

(declare-fun m!68435 () Bool)

(assert (=> b!71219 m!68435))

(assert (=> b!71219 m!68407))

(assert (=> b!71219 m!68429))

(declare-fun m!68437 () Bool)

(assert (=> b!71219 m!68437))

(declare-fun m!68439 () Bool)

(assert (=> b!71219 m!68439))

(assert (=> b!71219 m!68423))

(declare-fun m!68441 () Bool)

(assert (=> b!71225 m!68441))

(assert (=> b!71225 m!68397))

(declare-fun m!68443 () Bool)

(assert (=> b!71225 m!68443))

(declare-fun m!68445 () Bool)

(assert (=> b!71225 m!68445))

(assert (=> b!71225 m!68441))

(declare-fun m!68447 () Bool)

(assert (=> b!71225 m!68447))

(assert (=> b!71225 m!68445))

(assert (=> b!71225 m!68397))

(assert (=> bm!6118 d!15923))

(declare-fun d!15925 () Bool)

(declare-fun lt!31601 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!76 (List!1467) (InoxSet tuple2!2110))

(assert (=> d!15925 (= lt!31601 (select (content!76 (toList!713 lt!31516)) lt!31228))))

(declare-fun e!46647 () Bool)

(assert (=> d!15925 (= lt!31601 e!46647)))

(declare-fun res!37998 () Bool)

(assert (=> d!15925 (=> (not res!37998) (not e!46647))))

(assert (=> d!15925 (= res!37998 ((_ is Cons!1463) (toList!713 lt!31516)))))

(assert (=> d!15925 (= (contains!719 (toList!713 lt!31516) lt!31228) lt!31601)))

(declare-fun b!71237 () Bool)

(declare-fun e!46646 () Bool)

(assert (=> b!71237 (= e!46647 e!46646)))

(declare-fun res!37997 () Bool)

(assert (=> b!71237 (=> res!37997 e!46646)))

(assert (=> b!71237 (= res!37997 (= (h!2049 (toList!713 lt!31516)) lt!31228))))

(declare-fun b!71238 () Bool)

(assert (=> b!71238 (= e!46646 (contains!719 (t!4995 (toList!713 lt!31516)) lt!31228))))

(assert (= (and d!15925 res!37998) b!71237))

(assert (= (and b!71237 (not res!37997)) b!71238))

(declare-fun m!68449 () Bool)

(assert (=> d!15925 m!68449))

(declare-fun m!68451 () Bool)

(assert (=> d!15925 m!68451))

(declare-fun m!68453 () Bool)

(assert (=> b!71238 m!68453))

(assert (=> b!71111 d!15925))

(declare-fun d!15927 () Bool)

(declare-fun e!46648 () Bool)

(assert (=> d!15927 e!46648))

(declare-fun res!37999 () Bool)

(assert (=> d!15927 (=> (not res!37999) (not e!46648))))

(declare-fun lt!31605 () ListLongMap!1395)

(assert (=> d!15927 (= res!37999 (contains!715 lt!31605 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun lt!31603 () List!1467)

(assert (=> d!15927 (= lt!31605 (ListLongMap!1396 lt!31603))))

(declare-fun lt!31604 () Unit!1996)

(declare-fun lt!31602 () Unit!1996)

(assert (=> d!15927 (= lt!31604 lt!31602)))

(assert (=> d!15927 (= (getValueByKey!133 lt!31603 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!15927 (= lt!31602 (lemmaContainsTupThenGetReturnValue!50 lt!31603 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!15927 (= lt!31603 (insertStrictlySorted!53 (toList!713 call!6110) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!15927 (= (+!91 call!6110 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) lt!31605)))

(declare-fun b!71239 () Bool)

(declare-fun res!38000 () Bool)

(assert (=> b!71239 (=> (not res!38000) (not e!46648))))

(assert (=> b!71239 (= res!38000 (= (getValueByKey!133 (toList!713 lt!31605) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun b!71240 () Bool)

(assert (=> b!71240 (= e!46648 (contains!719 (toList!713 lt!31605) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(assert (= (and d!15927 res!37999) b!71239))

(assert (= (and b!71239 res!38000) b!71240))

(declare-fun m!68455 () Bool)

(assert (=> d!15927 m!68455))

(declare-fun m!68457 () Bool)

(assert (=> d!15927 m!68457))

(declare-fun m!68459 () Bool)

(assert (=> d!15927 m!68459))

(declare-fun m!68461 () Bool)

(assert (=> d!15927 m!68461))

(declare-fun m!68463 () Bool)

(assert (=> b!71239 m!68463))

(declare-fun m!68465 () Bool)

(assert (=> b!71240 m!68465))

(assert (=> b!71023 d!15927))

(declare-fun d!15929 () Bool)

(declare-fun isEmpty!320 (Option!139) Bool)

(assert (=> d!15929 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))))

(declare-fun bs!3068 () Bool)

(assert (= bs!3068 d!15929))

(assert (=> bs!3068 m!68053))

(declare-fun m!68467 () Bool)

(assert (=> bs!3068 m!68467))

(assert (=> b!70901 d!15929))

(declare-fun b!71242 () Bool)

(declare-fun e!46649 () Option!139)

(declare-fun e!46650 () Option!139)

(assert (=> b!71242 (= e!46649 e!46650)))

(declare-fun c!10355 () Bool)

(assert (=> b!71242 (= c!10355 (and ((_ is Cons!1463) (toList!713 lt!31227)) (not (= (_1!1066 (h!2049 (toList!713 lt!31227))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))))

(declare-fun b!71244 () Bool)

(assert (=> b!71244 (= e!46650 None!137)))

(declare-fun b!71243 () Bool)

(assert (=> b!71243 (= e!46650 (getValueByKey!133 (t!4995 (toList!713 lt!31227)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun d!15931 () Bool)

(declare-fun c!10354 () Bool)

(assert (=> d!15931 (= c!10354 (and ((_ is Cons!1463) (toList!713 lt!31227)) (= (_1!1066 (h!2049 (toList!713 lt!31227))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (=> d!15931 (= (getValueByKey!133 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) e!46649)))

(declare-fun b!71241 () Bool)

(assert (=> b!71241 (= e!46649 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31227)))))))

(assert (= (and d!15931 c!10354) b!71241))

(assert (= (and d!15931 (not c!10354)) b!71242))

(assert (= (and b!71242 c!10355) b!71243))

(assert (= (and b!71242 (not c!10355)) b!71244))

(assert (=> b!71243 m!67819))

(declare-fun m!68469 () Bool)

(assert (=> b!71243 m!68469))

(assert (=> b!70901 d!15931))

(declare-fun d!15933 () Bool)

(assert (=> d!15933 (isDefined!85 (getValueByKey!133 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun lt!31608 () Unit!1996)

(declare-fun choose!407 (List!1467 (_ BitVec 64)) Unit!1996)

(assert (=> d!15933 (= lt!31608 (choose!407 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun e!46653 () Bool)

(assert (=> d!15933 e!46653))

(declare-fun res!38003 () Bool)

(assert (=> d!15933 (=> (not res!38003) (not e!46653))))

(assert (=> d!15933 (= res!38003 (isStrictlySorted!278 (toList!713 lt!31227)))))

(assert (=> d!15933 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) lt!31608)))

(declare-fun b!71247 () Bool)

(assert (=> b!71247 (= e!46653 (containsKey!136 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (= (and d!15933 res!38003) b!71247))

(assert (=> d!15933 m!67819))

(assert (=> d!15933 m!68053))

(assert (=> d!15933 m!68053))

(assert (=> d!15933 m!68055))

(assert (=> d!15933 m!67819))

(declare-fun m!68471 () Bool)

(assert (=> d!15933 m!68471))

(declare-fun m!68473 () Bool)

(assert (=> d!15933 m!68473))

(assert (=> b!71247 m!67819))

(assert (=> b!71247 m!68049))

(assert (=> b!70899 d!15933))

(assert (=> b!70899 d!15929))

(assert (=> b!70899 d!15931))

(declare-fun d!15935 () Bool)

(assert (=> d!15935 (= (apply!74 lt!31365 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1146 (getValueByKey!133 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3069 () Bool)

(assert (= bs!3069 d!15935))

(assert (=> bs!3069 m!68219))

(assert (=> bs!3069 m!68219))

(declare-fun m!68475 () Bool)

(assert (=> bs!3069 m!68475))

(assert (=> b!70876 d!15935))

(declare-fun d!15937 () Bool)

(declare-fun lt!31609 () Bool)

(assert (=> d!15937 (= lt!31609 (select (content!76 (toList!713 lt!31512)) lt!31223))))

(declare-fun e!46655 () Bool)

(assert (=> d!15937 (= lt!31609 e!46655)))

(declare-fun res!38005 () Bool)

(assert (=> d!15937 (=> (not res!38005) (not e!46655))))

(assert (=> d!15937 (= res!38005 ((_ is Cons!1463) (toList!713 lt!31512)))))

(assert (=> d!15937 (= (contains!719 (toList!713 lt!31512) lt!31223) lt!31609)))

(declare-fun b!71248 () Bool)

(declare-fun e!46654 () Bool)

(assert (=> b!71248 (= e!46655 e!46654)))

(declare-fun res!38004 () Bool)

(assert (=> b!71248 (=> res!38004 e!46654)))

(assert (=> b!71248 (= res!38004 (= (h!2049 (toList!713 lt!31512)) lt!31223))))

(declare-fun b!71249 () Bool)

(assert (=> b!71249 (= e!46654 (contains!719 (t!4995 (toList!713 lt!31512)) lt!31223))))

(assert (= (and d!15937 res!38005) b!71248))

(assert (= (and b!71248 (not res!38004)) b!71249))

(declare-fun m!68477 () Bool)

(assert (=> d!15937 m!68477))

(declare-fun m!68479 () Bool)

(assert (=> d!15937 m!68479))

(declare-fun m!68481 () Bool)

(assert (=> b!71249 m!68481))

(assert (=> b!71109 d!15937))

(declare-fun bm!6152 () Bool)

(declare-fun call!6155 () Bool)

(declare-fun c!10356 () Bool)

(assert (=> bm!6152 (= call!6155 (arrayNoDuplicates!0 (_keys!3839 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10356 (Cons!1464 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) Nil!1465) Nil!1465)))))

(declare-fun b!71250 () Bool)

(declare-fun e!46656 () Bool)

(assert (=> b!71250 (= e!46656 (contains!718 Nil!1465 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71251 () Bool)

(declare-fun e!46659 () Bool)

(declare-fun e!46657 () Bool)

(assert (=> b!71251 (= e!46659 e!46657)))

(assert (=> b!71251 (= c!10356 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71252 () Bool)

(declare-fun e!46658 () Bool)

(assert (=> b!71252 (= e!46658 e!46659)))

(declare-fun res!38007 () Bool)

(assert (=> b!71252 (=> (not res!38007) (not e!46659))))

(assert (=> b!71252 (= res!38007 (not e!46656))))

(declare-fun res!38008 () Bool)

(assert (=> b!71252 (=> (not res!38008) (not e!46656))))

(assert (=> b!71252 (= res!38008 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!15939 () Bool)

(declare-fun res!38006 () Bool)

(assert (=> d!15939 (=> res!38006 e!46658)))

(assert (=> d!15939 (= res!38006 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!15939 (= (arrayNoDuplicates!0 (_keys!3839 newMap!16) #b00000000000000000000000000000000 Nil!1465) e!46658)))

(declare-fun b!71253 () Bool)

(assert (=> b!71253 (= e!46657 call!6155)))

(declare-fun b!71254 () Bool)

(assert (=> b!71254 (= e!46657 call!6155)))

(assert (= (and d!15939 (not res!38006)) b!71252))

(assert (= (and b!71252 res!38008) b!71250))

(assert (= (and b!71252 res!38007) b!71251))

(assert (= (and b!71251 c!10356) b!71254))

(assert (= (and b!71251 (not c!10356)) b!71253))

(assert (= (or b!71254 b!71253) bm!6152))

(assert (=> bm!6152 m!68397))

(declare-fun m!68483 () Bool)

(assert (=> bm!6152 m!68483))

(assert (=> b!71250 m!68397))

(assert (=> b!71250 m!68397))

(declare-fun m!68485 () Bool)

(assert (=> b!71250 m!68485))

(assert (=> b!71251 m!68397))

(assert (=> b!71251 m!68397))

(assert (=> b!71251 m!68399))

(assert (=> b!71252 m!68397))

(assert (=> b!71252 m!68397))

(assert (=> b!71252 m!68399))

(assert (=> b!71036 d!15939))

(declare-fun d!15941 () Bool)

(assert (=> d!15941 (= (get!1144 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) from!355) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2515 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> b!70891 d!15941))

(declare-fun d!15943 () Bool)

(declare-fun lt!31610 () Bool)

(assert (=> d!15943 (= lt!31610 (select (content!76 (toList!713 lt!31505)) lt!31228))))

(declare-fun e!46661 () Bool)

(assert (=> d!15943 (= lt!31610 e!46661)))

(declare-fun res!38010 () Bool)

(assert (=> d!15943 (=> (not res!38010) (not e!46661))))

(assert (=> d!15943 (= res!38010 ((_ is Cons!1463) (toList!713 lt!31505)))))

(assert (=> d!15943 (= (contains!719 (toList!713 lt!31505) lt!31228) lt!31610)))

(declare-fun b!71255 () Bool)

(declare-fun e!46660 () Bool)

(assert (=> b!71255 (= e!46661 e!46660)))

(declare-fun res!38009 () Bool)

(assert (=> b!71255 (=> res!38009 e!46660)))

(assert (=> b!71255 (= res!38009 (= (h!2049 (toList!713 lt!31505)) lt!31228))))

(declare-fun b!71256 () Bool)

(assert (=> b!71256 (= e!46660 (contains!719 (t!4995 (toList!713 lt!31505)) lt!31228))))

(assert (= (and d!15943 res!38010) b!71255))

(assert (= (and b!71255 (not res!38009)) b!71256))

(declare-fun m!68487 () Bool)

(assert (=> d!15943 m!68487))

(declare-fun m!68489 () Bool)

(assert (=> d!15943 m!68489))

(declare-fun m!68491 () Bool)

(assert (=> b!71256 m!68491))

(assert (=> b!71107 d!15943))

(declare-fun d!15945 () Bool)

(declare-fun res!38011 () Bool)

(declare-fun e!46662 () Bool)

(assert (=> d!15945 (=> (not res!38011) (not e!46662))))

(assert (=> d!15945 (= res!38011 (simpleValid!50 (v!2516 (underlying!259 thiss!992))))))

(assert (=> d!15945 (= (valid!301 (v!2516 (underlying!259 thiss!992))) e!46662)))

(declare-fun b!71257 () Bool)

(declare-fun res!38012 () Bool)

(assert (=> b!71257 (=> (not res!38012) (not e!46662))))

(assert (=> b!71257 (= res!38012 (= (arrayCountValidKeys!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000 (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))) (_size!393 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!71258 () Bool)

(declare-fun res!38013 () Bool)

(assert (=> b!71258 (=> (not res!38013) (not e!46662))))

(assert (=> b!71258 (= res!38013 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!71259 () Bool)

(assert (=> b!71259 (= e!46662 (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000 Nil!1465))))

(assert (= (and d!15945 res!38011) b!71257))

(assert (= (and b!71257 res!38012) b!71258))

(assert (= (and b!71258 res!38013) b!71259))

(declare-fun m!68493 () Bool)

(assert (=> d!15945 m!68493))

(declare-fun m!68495 () Bool)

(assert (=> b!71257 m!68495))

(declare-fun m!68497 () Bool)

(assert (=> b!71258 m!68497))

(declare-fun m!68499 () Bool)

(assert (=> b!71259 m!68499))

(assert (=> d!15835 d!15945))

(declare-fun d!15947 () Bool)

(declare-fun e!46663 () Bool)

(assert (=> d!15947 e!46663))

(declare-fun res!38014 () Bool)

(assert (=> d!15947 (=> (not res!38014) (not e!46663))))

(declare-fun lt!31614 () ListLongMap!1395)

(assert (=> d!15947 (= res!38014 (contains!715 lt!31614 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun lt!31612 () List!1467)

(assert (=> d!15947 (= lt!31614 (ListLongMap!1396 lt!31612))))

(declare-fun lt!31613 () Unit!1996)

(declare-fun lt!31611 () Unit!1996)

(assert (=> d!15947 (= lt!31613 lt!31611)))

(assert (=> d!15947 (= (getValueByKey!133 lt!31612 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) (Some!138 (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!15947 (= lt!31611 (lemmaContainsTupThenGetReturnValue!50 lt!31612 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!15947 (= lt!31612 (insertStrictlySorted!53 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058))) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!15947 (= (+!91 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058)) (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31614)))

(declare-fun b!71260 () Bool)

(declare-fun res!38015 () Bool)

(assert (=> b!71260 (=> (not res!38015) (not e!46663))))

(assert (=> b!71260 (= res!38015 (= (getValueByKey!133 (toList!713 lt!31614) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) (Some!138 (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!71261 () Bool)

(assert (=> b!71261 (= e!46663 (contains!719 (toList!713 lt!31614) (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (= (and d!15947 res!38014) b!71260))

(assert (= (and b!71260 res!38015) b!71261))

(declare-fun m!68501 () Bool)

(assert (=> d!15947 m!68501))

(declare-fun m!68503 () Bool)

(assert (=> d!15947 m!68503))

(declare-fun m!68505 () Bool)

(assert (=> d!15947 m!68505))

(declare-fun m!68507 () Bool)

(assert (=> d!15947 m!68507))

(declare-fun m!68509 () Bool)

(assert (=> b!71260 m!68509))

(declare-fun m!68511 () Bool)

(assert (=> b!71261 m!68511))

(assert (=> bm!6055 d!15947))

(declare-fun bm!6155 () Bool)

(declare-fun call!6158 () (_ BitVec 32))

(assert (=> bm!6155 (= call!6158 (arrayCountValidKeys!0 (_keys!3839 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71270 () Bool)

(declare-fun e!46669 () (_ BitVec 32))

(assert (=> b!71270 (= e!46669 #b00000000000000000000000000000000)))

(declare-fun b!71271 () Bool)

(declare-fun e!46668 () (_ BitVec 32))

(assert (=> b!71271 (= e!46668 call!6158)))

(declare-fun b!71272 () Bool)

(assert (=> b!71272 (= e!46668 (bvadd #b00000000000000000000000000000001 call!6158))))

(declare-fun d!15949 () Bool)

(declare-fun lt!31617 () (_ BitVec 32))

(assert (=> d!15949 (and (bvsge lt!31617 #b00000000000000000000000000000000) (bvsle lt!31617 (bvsub (size!2081 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15949 (= lt!31617 e!46669)))

(declare-fun c!10361 () Bool)

(assert (=> d!15949 (= c!10361 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!15949 (and (bvsle #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2081 (_keys!3839 newMap!16)) (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!15949 (= (arrayCountValidKeys!0 (_keys!3839 newMap!16) #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) lt!31617)))

(declare-fun b!71273 () Bool)

(assert (=> b!71273 (= e!46669 e!46668)))

(declare-fun c!10362 () Bool)

(assert (=> b!71273 (= c!10362 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!15949 c!10361) b!71270))

(assert (= (and d!15949 (not c!10361)) b!71273))

(assert (= (and b!71273 c!10362) b!71272))

(assert (= (and b!71273 (not c!10362)) b!71271))

(assert (= (or b!71272 b!71271) bm!6155))

(declare-fun m!68513 () Bool)

(assert (=> bm!6155 m!68513))

(assert (=> b!71273 m!68397))

(assert (=> b!71273 m!68397))

(assert (=> b!71273 m!68399))

(assert (=> b!71034 d!15949))

(declare-fun d!15951 () Bool)

(assert (=> d!15951 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31441 lt!31220 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31620 () Unit!1996)

(declare-fun choose!408 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 V!2937 Int) Unit!1996)

(assert (=> d!15951 (= lt!31620 (choose!408 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) lt!31441 (zeroValue!2095 newMap!16) lt!31220 (minValue!2095 newMap!16) (defaultEntry!2191 newMap!16)))))

(assert (=> d!15951 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!15951 (= (lemmaChangeZeroKeyThenAddPairToListMap!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) lt!31441 (zeroValue!2095 newMap!16) lt!31220 (minValue!2095 newMap!16) (defaultEntry!2191 newMap!16)) lt!31620)))

(declare-fun bs!3070 () Bool)

(assert (= bs!3070 d!15951))

(assert (=> bs!3070 m!67987))

(declare-fun m!68515 () Bool)

(assert (=> bs!3070 m!68515))

(declare-fun m!68517 () Bool)

(assert (=> bs!3070 m!68517))

(declare-fun m!68519 () Bool)

(assert (=> bs!3070 m!68519))

(assert (=> bs!3070 m!68327))

(assert (=> bs!3070 m!67987))

(assert (=> b!71007 d!15951))

(assert (=> bm!6125 d!15827))

(assert (=> b!70871 d!15899))

(declare-fun d!15953 () Bool)

(assert (=> d!15953 (= (apply!74 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31346) (apply!74 lt!31348 lt!31346))))

(declare-fun lt!31623 () Unit!1996)

(declare-fun choose!409 (ListLongMap!1395 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1996)

(assert (=> d!15953 (= lt!31623 (choose!409 lt!31348 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31346))))

(declare-fun e!46672 () Bool)

(assert (=> d!15953 e!46672))

(declare-fun res!38018 () Bool)

(assert (=> d!15953 (=> (not res!38018) (not e!46672))))

(assert (=> d!15953 (= res!38018 (contains!715 lt!31348 lt!31346))))

(assert (=> d!15953 (= (addApplyDifferent!50 lt!31348 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31346) lt!31623)))

(declare-fun b!71277 () Bool)

(assert (=> b!71277 (= e!46672 (not (= lt!31346 lt!31354)))))

(assert (= (and d!15953 res!38018) b!71277))

(assert (=> d!15953 m!68027))

(declare-fun m!68521 () Bool)

(assert (=> d!15953 m!68521))

(assert (=> d!15953 m!68015))

(assert (=> d!15953 m!68017))

(assert (=> d!15953 m!68015))

(declare-fun m!68523 () Bool)

(assert (=> d!15953 m!68523))

(assert (=> b!70873 d!15953))

(declare-fun d!15955 () Bool)

(declare-fun e!46673 () Bool)

(assert (=> d!15955 e!46673))

(declare-fun res!38019 () Bool)

(assert (=> d!15955 (=> (not res!38019) (not e!46673))))

(declare-fun lt!31627 () ListLongMap!1395)

(assert (=> d!15955 (= res!38019 (contains!715 lt!31627 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!31625 () List!1467)

(assert (=> d!15955 (= lt!31627 (ListLongMap!1396 lt!31625))))

(declare-fun lt!31626 () Unit!1996)

(declare-fun lt!31624 () Unit!1996)

(assert (=> d!15955 (= lt!31626 lt!31624)))

(assert (=> d!15955 (= (getValueByKey!133 lt!31625 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15955 (= lt!31624 (lemmaContainsTupThenGetReturnValue!50 lt!31625 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15955 (= lt!31625 (insertStrictlySorted!53 (toList!713 lt!31359) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15955 (= (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31627)))

(declare-fun b!71278 () Bool)

(declare-fun res!38020 () Bool)

(assert (=> b!71278 (=> (not res!38020) (not e!46673))))

(assert (=> b!71278 (= res!38020 (= (getValueByKey!133 (toList!713 lt!31627) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun b!71279 () Bool)

(assert (=> b!71279 (= e!46673 (contains!719 (toList!713 lt!31627) (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!15955 res!38019) b!71278))

(assert (= (and b!71278 res!38020) b!71279))

(declare-fun m!68525 () Bool)

(assert (=> d!15955 m!68525))

(declare-fun m!68527 () Bool)

(assert (=> d!15955 m!68527))

(declare-fun m!68529 () Bool)

(assert (=> d!15955 m!68529))

(declare-fun m!68531 () Bool)

(assert (=> d!15955 m!68531))

(declare-fun m!68533 () Bool)

(assert (=> b!71278 m!68533))

(declare-fun m!68535 () Bool)

(assert (=> b!71279 m!68535))

(assert (=> b!70873 d!15955))

(declare-fun d!15957 () Bool)

(assert (=> d!15957 (= (apply!74 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31363) (apply!74 lt!31359 lt!31363))))

(declare-fun lt!31628 () Unit!1996)

(assert (=> d!15957 (= lt!31628 (choose!409 lt!31359 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31363))))

(declare-fun e!46674 () Bool)

(assert (=> d!15957 e!46674))

(declare-fun res!38021 () Bool)

(assert (=> d!15957 (=> (not res!38021) (not e!46674))))

(assert (=> d!15957 (= res!38021 (contains!715 lt!31359 lt!31363))))

(assert (=> d!15957 (= (addApplyDifferent!50 lt!31359 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31363) lt!31628)))

(declare-fun b!71280 () Bool)

(assert (=> b!71280 (= e!46674 (not (= lt!31363 lt!31351)))))

(assert (= (and d!15957 res!38021) b!71280))

(assert (=> d!15957 m!68007))

(declare-fun m!68537 () Bool)

(assert (=> d!15957 m!68537))

(assert (=> d!15957 m!68019))

(assert (=> d!15957 m!68021))

(assert (=> d!15957 m!68019))

(declare-fun m!68539 () Bool)

(assert (=> d!15957 m!68539))

(assert (=> b!70873 d!15957))

(assert (=> b!70873 d!15857))

(declare-fun d!15959 () Bool)

(declare-fun e!46675 () Bool)

(assert (=> d!15959 e!46675))

(declare-fun res!38022 () Bool)

(assert (=> d!15959 (=> (not res!38022) (not e!46675))))

(declare-fun lt!31632 () ListLongMap!1395)

(assert (=> d!15959 (= res!38022 (contains!715 lt!31632 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!31630 () List!1467)

(assert (=> d!15959 (= lt!31632 (ListLongMap!1396 lt!31630))))

(declare-fun lt!31631 () Unit!1996)

(declare-fun lt!31629 () Unit!1996)

(assert (=> d!15959 (= lt!31631 lt!31629)))

(assert (=> d!15959 (= (getValueByKey!133 lt!31630 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15959 (= lt!31629 (lemmaContainsTupThenGetReturnValue!50 lt!31630 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15959 (= lt!31630 (insertStrictlySorted!53 (toList!713 lt!31358) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15959 (= (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31632)))

(declare-fun b!71281 () Bool)

(declare-fun res!38023 () Bool)

(assert (=> b!71281 (=> (not res!38023) (not e!46675))))

(assert (=> b!71281 (= res!38023 (= (getValueByKey!133 (toList!713 lt!31632) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun b!71282 () Bool)

(assert (=> b!71282 (= e!46675 (contains!719 (toList!713 lt!31632) (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!15959 res!38022) b!71281))

(assert (= (and b!71281 res!38023) b!71282))

(declare-fun m!68541 () Bool)

(assert (=> d!15959 m!68541))

(declare-fun m!68543 () Bool)

(assert (=> d!15959 m!68543))

(declare-fun m!68545 () Bool)

(assert (=> d!15959 m!68545))

(declare-fun m!68547 () Bool)

(assert (=> d!15959 m!68547))

(declare-fun m!68549 () Bool)

(assert (=> b!71281 m!68549))

(declare-fun m!68551 () Bool)

(assert (=> b!71282 m!68551))

(assert (=> b!70873 d!15959))

(declare-fun d!15961 () Bool)

(assert (=> d!15961 (= (apply!74 lt!31357 lt!31355) (get!1146 (getValueByKey!133 (toList!713 lt!31357) lt!31355)))))

(declare-fun bs!3071 () Bool)

(assert (= bs!3071 d!15961))

(declare-fun m!68553 () Bool)

(assert (=> bs!3071 m!68553))

(assert (=> bs!3071 m!68553))

(declare-fun m!68555 () Bool)

(assert (=> bs!3071 m!68555))

(assert (=> b!70873 d!15961))

(declare-fun d!15963 () Bool)

(assert (=> d!15963 (= (apply!74 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31363) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31363)))))

(declare-fun bs!3072 () Bool)

(assert (= bs!3072 d!15963))

(declare-fun m!68557 () Bool)

(assert (=> bs!3072 m!68557))

(assert (=> bs!3072 m!68557))

(declare-fun m!68559 () Bool)

(assert (=> bs!3072 m!68559))

(assert (=> b!70873 d!15963))

(declare-fun d!15965 () Bool)

(declare-fun e!46676 () Bool)

(assert (=> d!15965 e!46676))

(declare-fun res!38024 () Bool)

(assert (=> d!15965 (=> (not res!38024) (not e!46676))))

(declare-fun lt!31636 () ListLongMap!1395)

(assert (=> d!15965 (= res!38024 (contains!715 lt!31636 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!31634 () List!1467)

(assert (=> d!15965 (= lt!31636 (ListLongMap!1396 lt!31634))))

(declare-fun lt!31635 () Unit!1996)

(declare-fun lt!31633 () Unit!1996)

(assert (=> d!15965 (= lt!31635 lt!31633)))

(assert (=> d!15965 (= (getValueByKey!133 lt!31634 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15965 (= lt!31633 (lemmaContainsTupThenGetReturnValue!50 lt!31634 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15965 (= lt!31634 (insertStrictlySorted!53 (toList!713 lt!31348) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15965 (= (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31636)))

(declare-fun b!71283 () Bool)

(declare-fun res!38025 () Bool)

(assert (=> b!71283 (=> (not res!38025) (not e!46676))))

(assert (=> b!71283 (= res!38025 (= (getValueByKey!133 (toList!713 lt!31636) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun b!71284 () Bool)

(assert (=> b!71284 (= e!46676 (contains!719 (toList!713 lt!31636) (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!15965 res!38024) b!71283))

(assert (= (and b!71283 res!38025) b!71284))

(declare-fun m!68561 () Bool)

(assert (=> d!15965 m!68561))

(declare-fun m!68563 () Bool)

(assert (=> d!15965 m!68563))

(declare-fun m!68565 () Bool)

(assert (=> d!15965 m!68565))

(declare-fun m!68567 () Bool)

(assert (=> d!15965 m!68567))

(declare-fun m!68569 () Bool)

(assert (=> b!71283 m!68569))

(declare-fun m!68571 () Bool)

(assert (=> b!71284 m!68571))

(assert (=> b!70873 d!15965))

(declare-fun d!15967 () Bool)

(assert (=> d!15967 (= (apply!74 lt!31348 lt!31346) (get!1146 (getValueByKey!133 (toList!713 lt!31348) lt!31346)))))

(declare-fun bs!3073 () Bool)

(assert (= bs!3073 d!15967))

(declare-fun m!68573 () Bool)

(assert (=> bs!3073 m!68573))

(assert (=> bs!3073 m!68573))

(declare-fun m!68575 () Bool)

(assert (=> bs!3073 m!68575))

(assert (=> b!70873 d!15967))

(declare-fun d!15969 () Bool)

(assert (=> d!15969 (= (apply!74 lt!31359 lt!31363) (get!1146 (getValueByKey!133 (toList!713 lt!31359) lt!31363)))))

(declare-fun bs!3074 () Bool)

(assert (= bs!3074 d!15969))

(declare-fun m!68577 () Bool)

(assert (=> bs!3074 m!68577))

(assert (=> bs!3074 m!68577))

(declare-fun m!68579 () Bool)

(assert (=> bs!3074 m!68579))

(assert (=> b!70873 d!15969))

(declare-fun d!15971 () Bool)

(declare-fun e!46678 () Bool)

(assert (=> d!15971 e!46678))

(declare-fun res!38026 () Bool)

(assert (=> d!15971 (=> res!38026 e!46678)))

(declare-fun lt!31640 () Bool)

(assert (=> d!15971 (= res!38026 (not lt!31640))))

(declare-fun lt!31639 () Bool)

(assert (=> d!15971 (= lt!31640 lt!31639)))

(declare-fun lt!31638 () Unit!1996)

(declare-fun e!46677 () Unit!1996)

(assert (=> d!15971 (= lt!31638 e!46677)))

(declare-fun c!10363 () Bool)

(assert (=> d!15971 (= c!10363 lt!31639)))

(assert (=> d!15971 (= lt!31639 (containsKey!136 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361))))

(assert (=> d!15971 (= (contains!715 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31361) lt!31640)))

(declare-fun b!71285 () Bool)

(declare-fun lt!31637 () Unit!1996)

(assert (=> b!71285 (= e!46677 lt!31637)))

(assert (=> b!71285 (= lt!31637 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361))))

(assert (=> b!71285 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361))))

(declare-fun b!71286 () Bool)

(declare-fun Unit!2016 () Unit!1996)

(assert (=> b!71286 (= e!46677 Unit!2016)))

(declare-fun b!71287 () Bool)

(assert (=> b!71287 (= e!46678 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361)))))

(assert (= (and d!15971 c!10363) b!71285))

(assert (= (and d!15971 (not c!10363)) b!71286))

(assert (= (and d!15971 (not res!38026)) b!71287))

(declare-fun m!68581 () Bool)

(assert (=> d!15971 m!68581))

(declare-fun m!68583 () Bool)

(assert (=> b!71285 m!68583))

(declare-fun m!68585 () Bool)

(assert (=> b!71285 m!68585))

(assert (=> b!71285 m!68585))

(declare-fun m!68587 () Bool)

(assert (=> b!71285 m!68587))

(assert (=> b!71287 m!68585))

(assert (=> b!71287 m!68585))

(assert (=> b!71287 m!68587))

(assert (=> b!70873 d!15971))

(declare-fun d!15973 () Bool)

(assert (=> d!15973 (= (apply!74 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31355) (apply!74 lt!31357 lt!31355))))

(declare-fun lt!31641 () Unit!1996)

(assert (=> d!15973 (= lt!31641 (choose!409 lt!31357 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31355))))

(declare-fun e!46679 () Bool)

(assert (=> d!15973 e!46679))

(declare-fun res!38027 () Bool)

(assert (=> d!15973 (=> (not res!38027) (not e!46679))))

(assert (=> d!15973 (= res!38027 (contains!715 lt!31357 lt!31355))))

(assert (=> d!15973 (= (addApplyDifferent!50 lt!31357 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31355) lt!31641)))

(declare-fun b!71288 () Bool)

(assert (=> b!71288 (= e!46679 (not (= lt!31355 lt!31350)))))

(assert (= (and d!15973 res!38027) b!71288))

(assert (=> d!15973 m!68009))

(declare-fun m!68589 () Bool)

(assert (=> d!15973 m!68589))

(assert (=> d!15973 m!68011))

(assert (=> d!15973 m!68013))

(assert (=> d!15973 m!68011))

(declare-fun m!68591 () Bool)

(assert (=> d!15973 m!68591))

(assert (=> b!70873 d!15973))

(declare-fun d!15975 () Bool)

(assert (=> d!15975 (contains!715 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31361)))

(declare-fun lt!31644 () Unit!1996)

(declare-fun choose!410 (ListLongMap!1395 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1996)

(assert (=> d!15975 (= lt!31644 (choose!410 lt!31358 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31361))))

(assert (=> d!15975 (contains!715 lt!31358 lt!31361)))

(assert (=> d!15975 (= (addStillContains!50 lt!31358 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31361) lt!31644)))

(declare-fun bs!3075 () Bool)

(assert (= bs!3075 d!15975))

(assert (=> bs!3075 m!68025))

(assert (=> bs!3075 m!68025))

(assert (=> bs!3075 m!68033))

(declare-fun m!68593 () Bool)

(assert (=> bs!3075 m!68593))

(declare-fun m!68595 () Bool)

(assert (=> bs!3075 m!68595))

(assert (=> b!70873 d!15975))

(declare-fun d!15977 () Bool)

(assert (=> d!15977 (= (apply!74 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31346) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31346)))))

(declare-fun bs!3076 () Bool)

(assert (= bs!3076 d!15977))

(declare-fun m!68597 () Bool)

(assert (=> bs!3076 m!68597))

(assert (=> bs!3076 m!68597))

(declare-fun m!68599 () Bool)

(assert (=> bs!3076 m!68599))

(assert (=> b!70873 d!15977))

(declare-fun d!15979 () Bool)

(declare-fun e!46680 () Bool)

(assert (=> d!15979 e!46680))

(declare-fun res!38028 () Bool)

(assert (=> d!15979 (=> (not res!38028) (not e!46680))))

(declare-fun lt!31648 () ListLongMap!1395)

(assert (=> d!15979 (= res!38028 (contains!715 lt!31648 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!31646 () List!1467)

(assert (=> d!15979 (= lt!31648 (ListLongMap!1396 lt!31646))))

(declare-fun lt!31647 () Unit!1996)

(declare-fun lt!31645 () Unit!1996)

(assert (=> d!15979 (= lt!31647 lt!31645)))

(assert (=> d!15979 (= (getValueByKey!133 lt!31646 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15979 (= lt!31645 (lemmaContainsTupThenGetReturnValue!50 lt!31646 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15979 (= lt!31646 (insertStrictlySorted!53 (toList!713 lt!31357) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!15979 (= (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31648)))

(declare-fun b!71290 () Bool)

(declare-fun res!38029 () Bool)

(assert (=> b!71290 (=> (not res!38029) (not e!46680))))

(assert (=> b!71290 (= res!38029 (= (getValueByKey!133 (toList!713 lt!31648) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun b!71291 () Bool)

(assert (=> b!71291 (= e!46680 (contains!719 (toList!713 lt!31648) (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!15979 res!38028) b!71290))

(assert (= (and b!71290 res!38029) b!71291))

(declare-fun m!68601 () Bool)

(assert (=> d!15979 m!68601))

(declare-fun m!68603 () Bool)

(assert (=> d!15979 m!68603))

(declare-fun m!68605 () Bool)

(assert (=> d!15979 m!68605))

(declare-fun m!68607 () Bool)

(assert (=> d!15979 m!68607))

(declare-fun m!68609 () Bool)

(assert (=> b!71290 m!68609))

(declare-fun m!68611 () Bool)

(assert (=> b!71291 m!68611))

(assert (=> b!70873 d!15979))

(declare-fun d!15981 () Bool)

(assert (=> d!15981 (= (apply!74 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31355) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31355)))))

(declare-fun bs!3077 () Bool)

(assert (= bs!3077 d!15981))

(declare-fun m!68613 () Bool)

(assert (=> bs!3077 m!68613))

(assert (=> bs!3077 m!68613))

(declare-fun m!68615 () Bool)

(assert (=> bs!3077 m!68615))

(assert (=> b!70873 d!15981))

(declare-fun d!15983 () Bool)

(declare-fun res!38030 () Bool)

(declare-fun e!46681 () Bool)

(assert (=> d!15983 (=> res!38030 e!46681)))

(assert (=> d!15983 (= res!38030 (= (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!15983 (= (arrayContainsKey!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000) e!46681)))

(declare-fun b!71292 () Bool)

(declare-fun e!46682 () Bool)

(assert (=> b!71292 (= e!46681 e!46682)))

(declare-fun res!38031 () Bool)

(assert (=> b!71292 (=> (not res!38031) (not e!46682))))

(assert (=> b!71292 (= res!38031 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71293 () Bool)

(assert (=> b!71293 (= e!46682 (arrayContainsKey!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!15983 (not res!38030)) b!71292))

(assert (= (and b!71292 res!38031) b!71293))

(assert (=> d!15983 m!68397))

(assert (=> b!71293 m!67819))

(declare-fun m!68617 () Bool)

(assert (=> b!71293 m!68617))

(assert (=> bm!6127 d!15983))

(declare-fun d!15985 () Bool)

(declare-fun e!46684 () Bool)

(assert (=> d!15985 e!46684))

(declare-fun res!38032 () Bool)

(assert (=> d!15985 (=> res!38032 e!46684)))

(declare-fun lt!31652 () Bool)

(assert (=> d!15985 (= res!38032 (not lt!31652))))

(declare-fun lt!31651 () Bool)

(assert (=> d!15985 (= lt!31652 lt!31651)))

(declare-fun lt!31650 () Unit!1996)

(declare-fun e!46683 () Unit!1996)

(assert (=> d!15985 (= lt!31650 e!46683)))

(declare-fun c!10364 () Bool)

(assert (=> d!15985 (= c!10364 lt!31651)))

(assert (=> d!15985 (= lt!31651 (containsKey!136 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!15985 (= (contains!715 lt!31501 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!31652)))

(declare-fun b!71294 () Bool)

(declare-fun lt!31649 () Unit!1996)

(assert (=> b!71294 (= e!46683 lt!31649)))

(assert (=> b!71294 (= lt!31649 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71294 (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71295 () Bool)

(declare-fun Unit!2017 () Unit!1996)

(assert (=> b!71295 (= e!46683 Unit!2017)))

(declare-fun b!71296 () Bool)

(assert (=> b!71296 (= e!46684 (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!15985 c!10364) b!71294))

(assert (= (and d!15985 (not c!10364)) b!71295))

(assert (= (and d!15985 (not res!38032)) b!71296))

(assert (=> d!15985 m!67995))

(declare-fun m!68619 () Bool)

(assert (=> d!15985 m!68619))

(assert (=> b!71294 m!67995))

(declare-fun m!68621 () Bool)

(assert (=> b!71294 m!68621))

(assert (=> b!71294 m!67995))

(assert (=> b!71294 m!68321))

(assert (=> b!71294 m!68321))

(declare-fun m!68623 () Bool)

(assert (=> b!71294 m!68623))

(assert (=> b!71296 m!67995))

(assert (=> b!71296 m!68321))

(assert (=> b!71296 m!68321))

(assert (=> b!71296 m!68623))

(assert (=> b!71100 d!15985))

(declare-fun d!15987 () Bool)

(declare-fun lt!31653 () Bool)

(assert (=> d!15987 (= lt!31653 (select (content!76 (toList!713 lt!31480)) lt!31223))))

(declare-fun e!46686 () Bool)

(assert (=> d!15987 (= lt!31653 e!46686)))

(declare-fun res!38034 () Bool)

(assert (=> d!15987 (=> (not res!38034) (not e!46686))))

(assert (=> d!15987 (= res!38034 ((_ is Cons!1463) (toList!713 lt!31480)))))

(assert (=> d!15987 (= (contains!719 (toList!713 lt!31480) lt!31223) lt!31653)))

(declare-fun b!71297 () Bool)

(declare-fun e!46685 () Bool)

(assert (=> b!71297 (= e!46686 e!46685)))

(declare-fun res!38033 () Bool)

(assert (=> b!71297 (=> res!38033 e!46685)))

(assert (=> b!71297 (= res!38033 (= (h!2049 (toList!713 lt!31480)) lt!31223))))

(declare-fun b!71298 () Bool)

(assert (=> b!71298 (= e!46685 (contains!719 (t!4995 (toList!713 lt!31480)) lt!31223))))

(assert (= (and d!15987 res!38034) b!71297))

(assert (= (and b!71297 (not res!38033)) b!71298))

(declare-fun m!68625 () Bool)

(assert (=> d!15987 m!68625))

(declare-fun m!68627 () Bool)

(assert (=> d!15987 m!68627))

(declare-fun m!68629 () Bool)

(assert (=> b!71298 m!68629))

(assert (=> b!71069 d!15987))

(declare-fun d!15989 () Bool)

(assert (=> d!15989 (= (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (and (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71060 d!15989))

(declare-fun d!15991 () Bool)

(declare-fun e!46687 () Bool)

(assert (=> d!15991 e!46687))

(declare-fun res!38035 () Bool)

(assert (=> d!15991 (=> (not res!38035) (not e!46687))))

(declare-fun lt!31657 () ListLongMap!1395)

(assert (=> d!15991 (= res!38035 (contains!715 lt!31657 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun lt!31655 () List!1467)

(assert (=> d!15991 (= lt!31657 (ListLongMap!1396 lt!31655))))

(declare-fun lt!31656 () Unit!1996)

(declare-fun lt!31654 () Unit!1996)

(assert (=> d!15991 (= lt!31656 lt!31654)))

(assert (=> d!15991 (= (getValueByKey!133 lt!31655 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) (Some!138 (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!15991 (= lt!31654 (lemmaContainsTupThenGetReturnValue!50 lt!31655 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!15991 (= lt!31655 (insertStrictlySorted!53 (toList!713 e!46505) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!15991 (= (+!91 e!46505 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!31657)))

(declare-fun b!71299 () Bool)

(declare-fun res!38036 () Bool)

(assert (=> b!71299 (=> (not res!38036) (not e!46687))))

(assert (=> b!71299 (= res!38036 (= (getValueByKey!133 (toList!713 lt!31657) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) (Some!138 (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun b!71300 () Bool)

(assert (=> b!71300 (= e!46687 (contains!719 (toList!713 lt!31657) (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (= (and d!15991 res!38035) b!71299))

(assert (= (and b!71299 res!38036) b!71300))

(declare-fun m!68631 () Bool)

(assert (=> d!15991 m!68631))

(declare-fun m!68633 () Bool)

(assert (=> d!15991 m!68633))

(declare-fun m!68635 () Bool)

(assert (=> d!15991 m!68635))

(declare-fun m!68637 () Bool)

(assert (=> d!15991 m!68637))

(declare-fun m!68639 () Bool)

(assert (=> b!71299 m!68639))

(declare-fun m!68641 () Bool)

(assert (=> b!71300 m!68641))

(assert (=> bm!6124 d!15991))

(assert (=> b!71102 d!15899))

(declare-fun call!6159 () Bool)

(declare-fun c!10365 () Bool)

(declare-fun bm!6156 () Bool)

(assert (=> bm!6156 (= call!6159 (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10365 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465))))))

(declare-fun b!71301 () Bool)

(declare-fun e!46688 () Bool)

(assert (=> b!71301 (= e!46688 (contains!718 (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71302 () Bool)

(declare-fun e!46691 () Bool)

(declare-fun e!46689 () Bool)

(assert (=> b!71302 (= e!46691 e!46689)))

(assert (=> b!71302 (= c!10365 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71303 () Bool)

(declare-fun e!46690 () Bool)

(assert (=> b!71303 (= e!46690 e!46691)))

(declare-fun res!38038 () Bool)

(assert (=> b!71303 (=> (not res!38038) (not e!46691))))

(assert (=> b!71303 (= res!38038 (not e!46688))))

(declare-fun res!38039 () Bool)

(assert (=> b!71303 (=> (not res!38039) (not e!46688))))

(assert (=> b!71303 (= res!38039 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!15993 () Bool)

(declare-fun res!38037 () Bool)

(assert (=> d!15993 (=> res!38037 e!46690)))

(assert (=> d!15993 (= res!38037 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!15993 (= (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)) e!46690)))

(declare-fun b!71304 () Bool)

(assert (=> b!71304 (= e!46689 call!6159)))

(declare-fun b!71305 () Bool)

(assert (=> b!71305 (= e!46689 call!6159)))

(assert (= (and d!15993 (not res!38037)) b!71303))

(assert (= (and b!71303 res!38039) b!71301))

(assert (= (and b!71303 res!38038) b!71302))

(assert (= (and b!71302 c!10365) b!71305))

(assert (= (and b!71302 (not c!10365)) b!71304))

(assert (= (or b!71305 b!71304) bm!6156))

(declare-fun m!68643 () Bool)

(assert (=> bm!6156 m!68643))

(declare-fun m!68645 () Bool)

(assert (=> bm!6156 m!68645))

(assert (=> b!71301 m!68643))

(assert (=> b!71301 m!68643))

(declare-fun m!68647 () Bool)

(assert (=> b!71301 m!68647))

(assert (=> b!71302 m!68643))

(assert (=> b!71302 m!68643))

(declare-fun m!68649 () Bool)

(assert (=> b!71302 m!68649))

(assert (=> b!71303 m!68643))

(assert (=> b!71303 m!68643))

(assert (=> b!71303 m!68649))

(assert (=> bm!6132 d!15993))

(declare-fun d!15995 () Bool)

(declare-fun e!46693 () Bool)

(assert (=> d!15995 e!46693))

(declare-fun res!38040 () Bool)

(assert (=> d!15995 (=> res!38040 e!46693)))

(declare-fun lt!31661 () Bool)

(assert (=> d!15995 (= res!38040 (not lt!31661))))

(declare-fun lt!31660 () Bool)

(assert (=> d!15995 (= lt!31661 lt!31660)))

(declare-fun lt!31659 () Unit!1996)

(declare-fun e!46692 () Unit!1996)

(assert (=> d!15995 (= lt!31659 e!46692)))

(declare-fun c!10366 () Bool)

(assert (=> d!15995 (= c!10366 lt!31660)))

(assert (=> d!15995 (= lt!31660 (containsKey!136 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!15995 (= (contains!715 lt!31365 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!31661)))

(declare-fun b!71306 () Bool)

(declare-fun lt!31658 () Unit!1996)

(assert (=> b!71306 (= e!46692 lt!31658)))

(assert (=> b!71306 (= lt!31658 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71306 (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71307 () Bool)

(declare-fun Unit!2018 () Unit!1996)

(assert (=> b!71307 (= e!46692 Unit!2018)))

(declare-fun b!71308 () Bool)

(assert (=> b!71308 (= e!46693 (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!15995 c!10366) b!71306))

(assert (= (and d!15995 (not c!10366)) b!71307))

(assert (= (and d!15995 (not res!38040)) b!71308))

(assert (=> d!15995 m!67995))

(declare-fun m!68651 () Bool)

(assert (=> d!15995 m!68651))

(assert (=> b!71306 m!67995))

(declare-fun m!68653 () Bool)

(assert (=> b!71306 m!68653))

(assert (=> b!71306 m!67995))

(declare-fun m!68655 () Bool)

(assert (=> b!71306 m!68655))

(assert (=> b!71306 m!68655))

(declare-fun m!68657 () Bool)

(assert (=> b!71306 m!68657))

(assert (=> b!71308 m!67995))

(assert (=> b!71308 m!68655))

(assert (=> b!71308 m!68655))

(assert (=> b!71308 m!68657))

(assert (=> b!70885 d!15995))

(declare-fun d!15997 () Bool)

(declare-fun e!46695 () Bool)

(assert (=> d!15997 e!46695))

(declare-fun res!38041 () Bool)

(assert (=> d!15997 (=> res!38041 e!46695)))

(declare-fun lt!31665 () Bool)

(assert (=> d!15997 (= res!38041 (not lt!31665))))

(declare-fun lt!31664 () Bool)

(assert (=> d!15997 (= lt!31665 lt!31664)))

(declare-fun lt!31663 () Unit!1996)

(declare-fun e!46694 () Unit!1996)

(assert (=> d!15997 (= lt!31663 e!46694)))

(declare-fun c!10367 () Bool)

(assert (=> d!15997 (= c!10367 lt!31664)))

(assert (=> d!15997 (= lt!31664 (containsKey!136 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15997 (= (contains!715 lt!31365 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31665)))

(declare-fun b!71309 () Bool)

(declare-fun lt!31662 () Unit!1996)

(assert (=> b!71309 (= e!46694 lt!31662)))

(assert (=> b!71309 (= lt!31662 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71309 (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71310 () Bool)

(declare-fun Unit!2019 () Unit!1996)

(assert (=> b!71310 (= e!46694 Unit!2019)))

(declare-fun b!71311 () Bool)

(assert (=> b!71311 (= e!46695 (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15997 c!10367) b!71309))

(assert (= (and d!15997 (not c!10367)) b!71310))

(assert (= (and d!15997 (not res!38041)) b!71311))

(declare-fun m!68659 () Bool)

(assert (=> d!15997 m!68659))

(declare-fun m!68661 () Bool)

(assert (=> b!71309 m!68661))

(declare-fun m!68663 () Bool)

(assert (=> b!71309 m!68663))

(assert (=> b!71309 m!68663))

(declare-fun m!68665 () Bool)

(assert (=> b!71309 m!68665))

(assert (=> b!71311 m!68663))

(assert (=> b!71311 m!68663))

(assert (=> b!71311 m!68665))

(assert (=> bm!6053 d!15997))

(declare-fun lt!31672 () SeekEntryResult!229)

(declare-fun b!71325 () Bool)

(declare-fun e!46704 () SeekEntryResult!229)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3863 (_ BitVec 32)) SeekEntryResult!229)

(assert (=> b!71325 (= e!46704 (seekKeyOrZeroReturnVacant!0 (x!11001 lt!31672) (index!3048 lt!31672) (index!3048 lt!31672) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(declare-fun b!71326 () Bool)

(assert (=> b!71326 (= e!46704 (MissingZero!229 (index!3048 lt!31672)))))

(declare-fun b!71327 () Bool)

(declare-fun e!46702 () SeekEntryResult!229)

(declare-fun e!46703 () SeekEntryResult!229)

(assert (=> b!71327 (= e!46702 e!46703)))

(declare-fun lt!31674 () (_ BitVec 64))

(assert (=> b!71327 (= lt!31674 (select (arr!1844 (_keys!3839 newMap!16)) (index!3048 lt!31672)))))

(declare-fun c!10374 () Bool)

(assert (=> b!71327 (= c!10374 (= lt!31674 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!71328 () Bool)

(assert (=> b!71328 (= e!46702 Undefined!229)))

(declare-fun b!71329 () Bool)

(assert (=> b!71329 (= e!46703 (Found!229 (index!3048 lt!31672)))))

(declare-fun b!71324 () Bool)

(declare-fun c!10376 () Bool)

(assert (=> b!71324 (= c!10376 (= lt!31674 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71324 (= e!46703 e!46704)))

(declare-fun lt!31673 () SeekEntryResult!229)

(declare-fun d!15999 () Bool)

(assert (=> d!15999 (and (or ((_ is Undefined!229) lt!31673) (not ((_ is Found!229) lt!31673)) (and (bvsge (index!3047 lt!31673) #b00000000000000000000000000000000) (bvslt (index!3047 lt!31673) (size!2081 (_keys!3839 newMap!16))))) (or ((_ is Undefined!229) lt!31673) ((_ is Found!229) lt!31673) (not ((_ is MissingZero!229) lt!31673)) (and (bvsge (index!3046 lt!31673) #b00000000000000000000000000000000) (bvslt (index!3046 lt!31673) (size!2081 (_keys!3839 newMap!16))))) (or ((_ is Undefined!229) lt!31673) ((_ is Found!229) lt!31673) ((_ is MissingZero!229) lt!31673) (not ((_ is MissingVacant!229) lt!31673)) (and (bvsge (index!3049 lt!31673) #b00000000000000000000000000000000) (bvslt (index!3049 lt!31673) (size!2081 (_keys!3839 newMap!16))))) (or ((_ is Undefined!229) lt!31673) (ite ((_ is Found!229) lt!31673) (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31673)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (ite ((_ is MissingZero!229) lt!31673) (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3046 lt!31673)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!229) lt!31673) (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3049 lt!31673)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15999 (= lt!31673 e!46702)))

(declare-fun c!10375 () Bool)

(assert (=> d!15999 (= c!10375 (and ((_ is Intermediate!229) lt!31672) (undefined!1041 lt!31672)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3863 (_ BitVec 32)) SeekEntryResult!229)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!15999 (= lt!31672 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (mask!6148 newMap!16)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(assert (=> d!15999 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!15999 (= (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)) lt!31673)))

(assert (= (and d!15999 c!10375) b!71328))

(assert (= (and d!15999 (not c!10375)) b!71327))

(assert (= (and b!71327 c!10374) b!71329))

(assert (= (and b!71327 (not c!10374)) b!71324))

(assert (= (and b!71324 c!10376) b!71326))

(assert (= (and b!71324 (not c!10376)) b!71325))

(assert (=> b!71325 m!67819))

(declare-fun m!68667 () Bool)

(assert (=> b!71325 m!68667))

(declare-fun m!68669 () Bool)

(assert (=> b!71327 m!68669))

(declare-fun m!68671 () Bool)

(assert (=> d!15999 m!68671))

(declare-fun m!68673 () Bool)

(assert (=> d!15999 m!68673))

(assert (=> d!15999 m!67819))

(declare-fun m!68675 () Bool)

(assert (=> d!15999 m!68675))

(assert (=> d!15999 m!68327))

(assert (=> d!15999 m!67819))

(assert (=> d!15999 m!68673))

(declare-fun m!68677 () Bool)

(assert (=> d!15999 m!68677))

(declare-fun m!68679 () Bool)

(assert (=> d!15999 m!68679))

(assert (=> bm!6113 d!15999))

(declare-fun d!16001 () Bool)

(assert (=> d!16001 (= (apply!74 lt!31365 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1146 (getValueByKey!133 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3078 () Bool)

(assert (= bs!3078 d!16001))

(assert (=> bs!3078 m!68663))

(assert (=> bs!3078 m!68663))

(declare-fun m!68681 () Bool)

(assert (=> bs!3078 m!68681))

(assert (=> b!70881 d!16001))

(declare-fun d!16003 () Bool)

(declare-fun res!38046 () Bool)

(declare-fun e!46709 () Bool)

(assert (=> d!16003 (=> res!38046 e!46709)))

(assert (=> d!16003 (= res!38046 (and ((_ is Cons!1463) (toList!713 lt!31227)) (= (_1!1066 (h!2049 (toList!713 lt!31227))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (=> d!16003 (= (containsKey!136 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) e!46709)))

(declare-fun b!71334 () Bool)

(declare-fun e!46710 () Bool)

(assert (=> b!71334 (= e!46709 e!46710)))

(declare-fun res!38047 () Bool)

(assert (=> b!71334 (=> (not res!38047) (not e!46710))))

(assert (=> b!71334 (= res!38047 (and (or (not ((_ is Cons!1463) (toList!713 lt!31227))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31227))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))) ((_ is Cons!1463) (toList!713 lt!31227)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31227))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(declare-fun b!71335 () Bool)

(assert (=> b!71335 (= e!46710 (containsKey!136 (t!4995 (toList!713 lt!31227)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (= (and d!16003 (not res!38046)) b!71334))

(assert (= (and b!71334 res!38047) b!71335))

(assert (=> b!71335 m!67819))

(declare-fun m!68683 () Bool)

(assert (=> b!71335 m!68683))

(assert (=> d!15839 d!16003))

(declare-fun b!71336 () Bool)

(declare-fun res!38049 () Bool)

(declare-fun e!46712 () Bool)

(assert (=> b!71336 (=> (not res!38049) (not e!46712))))

(declare-fun lt!31681 () ListLongMap!1395)

(assert (=> b!71336 (= res!38049 (not (contains!715 lt!31681 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71337 () Bool)

(declare-fun e!46714 () Bool)

(assert (=> b!71337 (= e!46714 (isEmpty!319 lt!31681))))

(declare-fun b!71338 () Bool)

(assert (=> b!71338 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> b!71338 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2082 (_values!2174 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun e!46716 () Bool)

(assert (=> b!71338 (= e!46716 (= (apply!74 lt!31681 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!6157 () Bool)

(declare-fun call!6160 () ListLongMap!1395)

(assert (=> bm!6157 (= call!6160 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!71339 () Bool)

(declare-fun lt!31679 () Unit!1996)

(declare-fun lt!31676 () Unit!1996)

(assert (=> b!71339 (= lt!31679 lt!31676)))

(declare-fun lt!31677 () V!2937)

(declare-fun lt!31680 () (_ BitVec 64))

(declare-fun lt!31675 () (_ BitVec 64))

(declare-fun lt!31678 () ListLongMap!1395)

(assert (=> b!71339 (not (contains!715 (+!91 lt!31678 (tuple2!2111 lt!31675 lt!31677)) lt!31680))))

(assert (=> b!71339 (= lt!31676 (addStillNotContains!25 lt!31678 lt!31675 lt!31677 lt!31680))))

(assert (=> b!71339 (= lt!31680 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71339 (= lt!31677 (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71339 (= lt!31675 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!71339 (= lt!31678 call!6160)))

(declare-fun e!46717 () ListLongMap!1395)

(assert (=> b!71339 (= e!46717 (+!91 call!6160 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71340 () Bool)

(declare-fun e!46713 () Bool)

(assert (=> b!71340 (= e!46712 e!46713)))

(declare-fun c!10377 () Bool)

(declare-fun e!46711 () Bool)

(assert (=> b!71340 (= c!10377 e!46711)))

(declare-fun res!38048 () Bool)

(assert (=> b!71340 (=> (not res!38048) (not e!46711))))

(assert (=> b!71340 (= res!38048 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!71341 () Bool)

(assert (=> b!71341 (= e!46711 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!71341 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!71342 () Bool)

(assert (=> b!71342 (= e!46713 e!46716)))

(assert (=> b!71342 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun res!38050 () Bool)

(assert (=> b!71342 (= res!38050 (contains!715 lt!31681 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!71342 (=> (not res!38050) (not e!46716))))

(declare-fun b!71343 () Bool)

(assert (=> b!71343 (= e!46713 e!46714)))

(declare-fun c!10380 () Bool)

(assert (=> b!71343 (= c!10380 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!71344 () Bool)

(declare-fun e!46715 () ListLongMap!1395)

(assert (=> b!71344 (= e!46715 e!46717)))

(declare-fun c!10379 () Bool)

(assert (=> b!71344 (= c!10379 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71345 () Bool)

(assert (=> b!71345 (= e!46714 (= lt!31681 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun d!16005 () Bool)

(assert (=> d!16005 e!46712))

(declare-fun res!38051 () Bool)

(assert (=> d!16005 (=> (not res!38051) (not e!46712))))

(assert (=> d!16005 (= res!38051 (not (contains!715 lt!31681 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16005 (= lt!31681 e!46715)))

(declare-fun c!10378 () Bool)

(assert (=> d!16005 (= c!10378 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!16005 (validMask!0 (mask!6148 (v!2516 (underlying!259 thiss!992))))))

(assert (=> d!16005 (= (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))) lt!31681)))

(declare-fun b!71346 () Bool)

(assert (=> b!71346 (= e!46717 call!6160)))

(declare-fun b!71347 () Bool)

(assert (=> b!71347 (= e!46715 (ListLongMap!1396 Nil!1464))))

(assert (= (and d!16005 c!10378) b!71347))

(assert (= (and d!16005 (not c!10378)) b!71344))

(assert (= (and b!71344 c!10379) b!71339))

(assert (= (and b!71344 (not c!10379)) b!71346))

(assert (= (or b!71339 b!71346) bm!6157))

(assert (= (and d!16005 res!38051) b!71336))

(assert (= (and b!71336 res!38049) b!71340))

(assert (= (and b!71340 res!38048) b!71341))

(assert (= (and b!71340 c!10377) b!71342))

(assert (= (and b!71340 (not c!10377)) b!71343))

(assert (= (and b!71342 res!38050) b!71338))

(assert (= (and b!71343 c!10380) b!71345))

(assert (= (and b!71343 (not c!10380)) b!71337))

(declare-fun b_lambda!3203 () Bool)

(assert (=> (not b_lambda!3203) (not b!71338)))

(assert (=> b!71338 t!4992))

(declare-fun b_and!4393 () Bool)

(assert (= b_and!4389 (and (=> t!4992 result!2641) b_and!4393)))

(assert (=> b!71338 t!4994))

(declare-fun b_and!4395 () Bool)

(assert (= b_and!4391 (and (=> t!4994 result!2645) b_and!4395)))

(declare-fun b_lambda!3205 () Bool)

(assert (=> (not b_lambda!3205) (not b!71339)))

(assert (=> b!71339 t!4992))

(declare-fun b_and!4397 () Bool)

(assert (= b_and!4393 (and (=> t!4992 result!2641) b_and!4397)))

(assert (=> b!71339 t!4994))

(declare-fun b_and!4399 () Bool)

(assert (= b_and!4395 (and (=> t!4994 result!2645) b_and!4399)))

(declare-fun m!68685 () Bool)

(assert (=> d!16005 m!68685))

(assert (=> d!16005 m!67845))

(declare-fun m!68687 () Bool)

(assert (=> b!71341 m!68687))

(assert (=> b!71341 m!68687))

(declare-fun m!68689 () Bool)

(assert (=> b!71341 m!68689))

(declare-fun m!68691 () Bool)

(assert (=> b!71337 m!68691))

(assert (=> b!71342 m!68687))

(assert (=> b!71342 m!68687))

(declare-fun m!68693 () Bool)

(assert (=> b!71342 m!68693))

(declare-fun m!68695 () Bool)

(assert (=> b!71345 m!68695))

(assert (=> bm!6157 m!68695))

(assert (=> b!71338 m!68687))

(declare-fun m!68697 () Bool)

(assert (=> b!71338 m!68697))

(declare-fun m!68699 () Bool)

(assert (=> b!71338 m!68699))

(assert (=> b!71338 m!68699))

(assert (=> b!71338 m!67823))

(declare-fun m!68701 () Bool)

(assert (=> b!71338 m!68701))

(assert (=> b!71338 m!67823))

(assert (=> b!71338 m!68687))

(declare-fun m!68703 () Bool)

(assert (=> b!71336 m!68703))

(assert (=> b!71344 m!68687))

(assert (=> b!71344 m!68687))

(assert (=> b!71344 m!68689))

(declare-fun m!68705 () Bool)

(assert (=> b!71339 m!68705))

(declare-fun m!68707 () Bool)

(assert (=> b!71339 m!68707))

(declare-fun m!68709 () Bool)

(assert (=> b!71339 m!68709))

(assert (=> b!71339 m!68699))

(assert (=> b!71339 m!68699))

(assert (=> b!71339 m!67823))

(assert (=> b!71339 m!68701))

(assert (=> b!71339 m!68707))

(assert (=> b!71339 m!68687))

(assert (=> b!71339 m!67823))

(declare-fun m!68711 () Bool)

(assert (=> b!71339 m!68711))

(assert (=> bm!6135 d!16005))

(declare-fun d!16007 () Bool)

(assert (=> d!16007 (= (apply!74 lt!31365 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1146 (getValueByKey!133 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3079 () Bool)

(assert (= bs!3079 d!16007))

(assert (=> bs!3079 m!67995))

(assert (=> bs!3079 m!68655))

(assert (=> bs!3079 m!68655))

(declare-fun m!68713 () Bool)

(assert (=> bs!3079 m!68713))

(assert (=> b!70879 d!16007))

(assert (=> b!70879 d!15877))

(declare-fun d!16009 () Bool)

(declare-fun e!46719 () Bool)

(assert (=> d!16009 e!46719))

(declare-fun res!38052 () Bool)

(assert (=> d!16009 (=> res!38052 e!46719)))

(declare-fun lt!31685 () Bool)

(assert (=> d!16009 (= res!38052 (not lt!31685))))

(declare-fun lt!31684 () Bool)

(assert (=> d!16009 (= lt!31685 lt!31684)))

(declare-fun lt!31683 () Unit!1996)

(declare-fun e!46718 () Unit!1996)

(assert (=> d!16009 (= lt!31683 e!46718)))

(declare-fun c!10381 () Bool)

(assert (=> d!16009 (= c!10381 lt!31684)))

(assert (=> d!16009 (= lt!31684 (containsKey!136 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))

(assert (=> d!16009 (= (contains!715 e!46500 (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))) lt!31685)))

(declare-fun b!71348 () Bool)

(declare-fun lt!31682 () Unit!1996)

(assert (=> b!71348 (= e!46718 lt!31682)))

(assert (=> b!71348 (= lt!31682 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))

(assert (=> b!71348 (isDefined!85 (getValueByKey!133 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))

(declare-fun b!71349 () Bool)

(declare-fun Unit!2020 () Unit!1996)

(assert (=> b!71349 (= e!46718 Unit!2020)))

(declare-fun b!71350 () Bool)

(assert (=> b!71350 (= e!46719 (isDefined!85 (getValueByKey!133 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))))))))

(assert (= (and d!16009 c!10381) b!71348))

(assert (= (and d!16009 (not c!10381)) b!71349))

(assert (= (and d!16009 (not res!38052)) b!71350))

(declare-fun m!68715 () Bool)

(assert (=> d!16009 m!68715))

(declare-fun m!68717 () Bool)

(assert (=> b!71348 m!68717))

(declare-fun m!68719 () Bool)

(assert (=> b!71348 m!68719))

(assert (=> b!71348 m!68719))

(declare-fun m!68721 () Bool)

(assert (=> b!71348 m!68721))

(assert (=> b!71350 m!68719))

(assert (=> b!71350 m!68719))

(assert (=> b!71350 m!68721))

(assert (=> bm!6119 d!16009))

(declare-fun d!16011 () Bool)

(declare-fun isEmpty!321 (List!1467) Bool)

(assert (=> d!16011 (= (isEmpty!319 lt!31501) (isEmpty!321 (toList!713 lt!31501)))))

(declare-fun bs!3080 () Bool)

(assert (= bs!3080 d!16011))

(declare-fun m!68723 () Bool)

(assert (=> bs!3080 m!68723))

(assert (=> b!71095 d!16011))

(declare-fun d!16013 () Bool)

(declare-fun e!46722 () Bool)

(assert (=> d!16013 e!46722))

(declare-fun res!38055 () Bool)

(assert (=> d!16013 (=> (not res!38055) (not e!46722))))

(assert (=> d!16013 (= res!38055 (and (bvsge (index!3047 lt!31452) #b00000000000000000000000000000000) (bvslt (index!3047 lt!31452) (size!2081 (_keys!3839 newMap!16)))))))

(declare-fun lt!31688 () Unit!1996)

(declare-fun choose!411 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) Int) Unit!1996)

(assert (=> d!16013 (= lt!31688 (choose!411 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3047 lt!31452) (defaultEntry!2191 newMap!16)))))

(assert (=> d!16013 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16013 (= (lemmaValidKeyInArrayIsInListMap!83 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3047 lt!31452) (defaultEntry!2191 newMap!16)) lt!31688)))

(declare-fun b!71353 () Bool)

(assert (=> b!71353 (= e!46722 (contains!715 (getCurrentListMap!411 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))))))

(assert (= (and d!16013 res!38055) b!71353))

(declare-fun m!68725 () Bool)

(assert (=> d!16013 m!68725))

(assert (=> d!16013 m!68327))

(declare-fun m!68727 () Bool)

(assert (=> b!71353 m!68727))

(assert (=> b!71353 m!68097))

(assert (=> b!71353 m!68727))

(assert (=> b!71353 m!68097))

(declare-fun m!68729 () Bool)

(assert (=> b!71353 m!68729))

(assert (=> b!71000 d!16013))

(declare-fun d!16015 () Bool)

(declare-fun e!46725 () Bool)

(assert (=> d!16015 e!46725))

(declare-fun res!38058 () Bool)

(assert (=> d!16015 (=> (not res!38058) (not e!46725))))

(assert (=> d!16015 (= res!38058 (and (bvsge (index!3047 lt!31452) #b00000000000000000000000000000000) (bvslt (index!3047 lt!31452) (size!2082 (_values!2174 newMap!16)))))))

(declare-fun lt!31691 () Unit!1996)

(declare-fun choose!412 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) (_ BitVec 64) V!2937 Int) Unit!1996)

(assert (=> d!16015 (= lt!31691 (choose!412 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3047 lt!31452) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16015 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16015 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3047 lt!31452) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 (defaultEntry!2191 newMap!16)) lt!31691)))

(declare-fun b!71356 () Bool)

(assert (=> b!71356 (= e!46725 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (getCurrentListMap!411 (_keys!3839 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))))))

(assert (= (and d!16015 res!38058) b!71356))

(assert (=> d!16015 m!67819))

(declare-fun m!68731 () Bool)

(assert (=> d!16015 m!68731))

(assert (=> d!16015 m!68327))

(assert (=> b!71356 m!67987))

(assert (=> b!71356 m!67987))

(declare-fun m!68733 () Bool)

(assert (=> b!71356 m!68733))

(assert (=> b!71356 m!68071))

(declare-fun m!68735 () Bool)

(assert (=> b!71356 m!68735))

(assert (=> b!71000 d!16015))

(declare-fun d!16017 () Bool)

(declare-fun e!46727 () Bool)

(assert (=> d!16017 e!46727))

(declare-fun res!38059 () Bool)

(assert (=> d!16017 (=> res!38059 e!46727)))

(declare-fun lt!31695 () Bool)

(assert (=> d!16017 (= res!38059 (not lt!31695))))

(declare-fun lt!31694 () Bool)

(assert (=> d!16017 (= lt!31695 lt!31694)))

(declare-fun lt!31693 () Unit!1996)

(declare-fun e!46726 () Unit!1996)

(assert (=> d!16017 (= lt!31693 e!46726)))

(declare-fun c!10382 () Bool)

(assert (=> d!16017 (= c!10382 lt!31694)))

(assert (=> d!16017 (= lt!31694 (containsKey!136 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!16017 (= (contains!715 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) lt!31695)))

(declare-fun b!71357 () Bool)

(declare-fun lt!31692 () Unit!1996)

(assert (=> b!71357 (= e!46726 lt!31692)))

(assert (=> b!71357 (= lt!31692 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> b!71357 (isDefined!85 (getValueByKey!133 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!71358 () Bool)

(declare-fun Unit!2021 () Unit!1996)

(assert (=> b!71358 (= e!46726 Unit!2021)))

(declare-fun b!71359 () Bool)

(assert (=> b!71359 (= e!46727 (isDefined!85 (getValueByKey!133 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (= (and d!16017 c!10382) b!71357))

(assert (= (and d!16017 (not c!10382)) b!71358))

(assert (= (and d!16017 (not res!38059)) b!71359))

(assert (=> d!16017 m!67819))

(declare-fun m!68737 () Bool)

(assert (=> d!16017 m!68737))

(assert (=> b!71357 m!67819))

(declare-fun m!68739 () Bool)

(assert (=> b!71357 m!68739))

(assert (=> b!71357 m!67819))

(declare-fun m!68741 () Bool)

(assert (=> b!71357 m!68741))

(assert (=> b!71357 m!68741))

(declare-fun m!68743 () Bool)

(assert (=> b!71357 m!68743))

(assert (=> b!71359 m!67819))

(assert (=> b!71359 m!68741))

(assert (=> b!71359 m!68741))

(assert (=> b!71359 m!68743))

(assert (=> b!71000 d!16017))

(declare-fun bm!6158 () Bool)

(declare-fun call!6163 () ListLongMap!1395)

(declare-fun call!6161 () ListLongMap!1395)

(assert (=> bm!6158 (= call!6163 call!6161)))

(declare-fun b!71360 () Bool)

(declare-fun e!46733 () ListLongMap!1395)

(assert (=> b!71360 (= e!46733 call!6163)))

(declare-fun b!71361 () Bool)

(declare-fun e!46730 () ListLongMap!1395)

(assert (=> b!71361 (= e!46730 (+!91 call!6161 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun b!71362 () Bool)

(declare-fun res!38060 () Bool)

(declare-fun e!46734 () Bool)

(assert (=> b!71362 (=> (not res!38060) (not e!46734))))

(declare-fun e!46738 () Bool)

(assert (=> b!71362 (= res!38060 e!46738)))

(declare-fun c!10385 () Bool)

(assert (=> b!71362 (= c!10385 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6159 () Bool)

(declare-fun call!6166 () Bool)

(declare-fun lt!31716 () ListLongMap!1395)

(assert (=> bm!6159 (= call!6166 (contains!715 lt!31716 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6160 () Bool)

(declare-fun call!6167 () Bool)

(assert (=> bm!6160 (= call!6167 (contains!715 lt!31716 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6161 () Bool)

(declare-fun call!6164 () ListLongMap!1395)

(assert (=> bm!6161 (= call!6164 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71363 () Bool)

(declare-fun res!38068 () Bool)

(assert (=> b!71363 (=> (not res!38068) (not e!46734))))

(declare-fun e!46737 () Bool)

(assert (=> b!71363 (= res!38068 e!46737)))

(declare-fun res!38065 () Bool)

(assert (=> b!71363 (=> res!38065 e!46737)))

(declare-fun e!46735 () Bool)

(assert (=> b!71363 (= res!38065 (not e!46735))))

(declare-fun res!38061 () Bool)

(assert (=> b!71363 (=> (not res!38061) (not e!46735))))

(assert (=> b!71363 (= res!38061 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71364 () Bool)

(declare-fun e!46729 () Bool)

(assert (=> b!71364 (= e!46734 e!46729)))

(declare-fun c!10383 () Bool)

(assert (=> b!71364 (= c!10383 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71365 () Bool)

(declare-fun e!46739 () Bool)

(assert (=> b!71365 (= e!46739 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71366 () Bool)

(declare-fun c!10388 () Bool)

(assert (=> b!71366 (= c!10388 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46740 () ListLongMap!1395)

(assert (=> b!71366 (= e!46733 e!46740)))

(declare-fun b!71367 () Bool)

(declare-fun e!46731 () Unit!1996)

(declare-fun lt!31698 () Unit!1996)

(assert (=> b!71367 (= e!46731 lt!31698)))

(declare-fun lt!31709 () ListLongMap!1395)

(assert (=> b!71367 (= lt!31709 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31715 () (_ BitVec 64))

(assert (=> b!71367 (= lt!31715 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31712 () (_ BitVec 64))

(assert (=> b!71367 (= lt!31712 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31713 () Unit!1996)

(assert (=> b!71367 (= lt!31713 (addStillContains!50 lt!31709 lt!31715 (zeroValue!2095 newMap!16) lt!31712))))

(assert (=> b!71367 (contains!715 (+!91 lt!31709 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16))) lt!31712)))

(declare-fun lt!31707 () Unit!1996)

(assert (=> b!71367 (= lt!31707 lt!31713)))

(declare-fun lt!31710 () ListLongMap!1395)

(assert (=> b!71367 (= lt!31710 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31702 () (_ BitVec 64))

(assert (=> b!71367 (= lt!31702 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31714 () (_ BitVec 64))

(assert (=> b!71367 (= lt!31714 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31717 () Unit!1996)

(assert (=> b!71367 (= lt!31717 (addApplyDifferent!50 lt!31710 lt!31702 (minValue!2095 newMap!16) lt!31714))))

(assert (=> b!71367 (= (apply!74 (+!91 lt!31710 (tuple2!2111 lt!31702 (minValue!2095 newMap!16))) lt!31714) (apply!74 lt!31710 lt!31714))))

(declare-fun lt!31703 () Unit!1996)

(assert (=> b!71367 (= lt!31703 lt!31717)))

(declare-fun lt!31699 () ListLongMap!1395)

(assert (=> b!71367 (= lt!31699 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31705 () (_ BitVec 64))

(assert (=> b!71367 (= lt!31705 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31697 () (_ BitVec 64))

(assert (=> b!71367 (= lt!31697 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31700 () Unit!1996)

(assert (=> b!71367 (= lt!31700 (addApplyDifferent!50 lt!31699 lt!31705 (zeroValue!2095 newMap!16) lt!31697))))

(assert (=> b!71367 (= (apply!74 (+!91 lt!31699 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16))) lt!31697) (apply!74 lt!31699 lt!31697))))

(declare-fun lt!31704 () Unit!1996)

(assert (=> b!71367 (= lt!31704 lt!31700)))

(declare-fun lt!31708 () ListLongMap!1395)

(assert (=> b!71367 (= lt!31708 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31701 () (_ BitVec 64))

(assert (=> b!71367 (= lt!31701 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31706 () (_ BitVec 64))

(assert (=> b!71367 (= lt!31706 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71367 (= lt!31698 (addApplyDifferent!50 lt!31708 lt!31701 (minValue!2095 newMap!16) lt!31706))))

(assert (=> b!71367 (= (apply!74 (+!91 lt!31708 (tuple2!2111 lt!31701 (minValue!2095 newMap!16))) lt!31706) (apply!74 lt!31708 lt!31706))))

(declare-fun b!71368 () Bool)

(declare-fun call!6165 () ListLongMap!1395)

(assert (=> b!71368 (= e!46740 call!6165)))

(declare-fun bm!6162 () Bool)

(declare-fun c!10387 () Bool)

(declare-fun call!6162 () ListLongMap!1395)

(declare-fun c!10386 () Bool)

(assert (=> bm!6162 (= call!6161 (+!91 (ite c!10386 call!6164 (ite c!10387 call!6162 call!6165)) (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun b!71369 () Bool)

(declare-fun e!46732 () Bool)

(assert (=> b!71369 (= e!46729 e!46732)))

(declare-fun res!38063 () Bool)

(assert (=> b!71369 (= res!38063 call!6166)))

(assert (=> b!71369 (=> (not res!38063) (not e!46732))))

(declare-fun b!71370 () Bool)

(assert (=> b!71370 (= e!46732 (= (apply!74 lt!31716 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun bm!6163 () Bool)

(assert (=> bm!6163 (= call!6165 call!6162)))

(declare-fun b!71371 () Bool)

(assert (=> b!71371 (= e!46730 e!46733)))

(assert (=> b!71371 (= c!10387 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71372 () Bool)

(declare-fun e!46728 () Bool)

(assert (=> b!71372 (= e!46738 e!46728)))

(declare-fun res!38064 () Bool)

(assert (=> b!71372 (= res!38064 call!6167)))

(assert (=> b!71372 (=> (not res!38064) (not e!46728))))

(declare-fun bm!6164 () Bool)

(assert (=> bm!6164 (= call!6162 call!6164)))

(declare-fun b!71373 () Bool)

(declare-fun e!46736 () Bool)

(assert (=> b!71373 (= e!46736 (= (apply!74 lt!31716 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71373 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (_values!2174 newMap!16))))))

(assert (=> b!71373 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun d!16019 () Bool)

(assert (=> d!16019 e!46734))

(declare-fun res!38066 () Bool)

(assert (=> d!16019 (=> (not res!38066) (not e!46734))))

(assert (=> d!16019 (= res!38066 (or (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))))

(declare-fun lt!31696 () ListLongMap!1395)

(assert (=> d!16019 (= lt!31716 lt!31696)))

(declare-fun lt!31711 () Unit!1996)

(assert (=> d!16019 (= lt!31711 e!46731)))

(declare-fun c!10384 () Bool)

(assert (=> d!16019 (= c!10384 e!46739)))

(declare-fun res!38062 () Bool)

(assert (=> d!16019 (=> (not res!38062) (not e!46739))))

(assert (=> d!16019 (= res!38062 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16019 (= lt!31696 e!46730)))

(assert (=> d!16019 (= c!10386 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16019 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16019 (= (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31716)))

(declare-fun b!71374 () Bool)

(declare-fun Unit!2022 () Unit!1996)

(assert (=> b!71374 (= e!46731 Unit!2022)))

(declare-fun b!71375 () Bool)

(assert (=> b!71375 (= e!46728 (= (apply!74 lt!31716 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!71376 () Bool)

(assert (=> b!71376 (= e!46735 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71377 () Bool)

(assert (=> b!71377 (= e!46729 (not call!6166))))

(declare-fun b!71378 () Bool)

(assert (=> b!71378 (= e!46738 (not call!6167))))

(declare-fun b!71379 () Bool)

(assert (=> b!71379 (= e!46737 e!46736)))

(declare-fun res!38067 () Bool)

(assert (=> b!71379 (=> (not res!38067) (not e!46736))))

(assert (=> b!71379 (= res!38067 (contains!715 lt!31716 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71379 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71380 () Bool)

(assert (=> b!71380 (= e!46740 call!6163)))

(assert (= (and d!16019 c!10386) b!71361))

(assert (= (and d!16019 (not c!10386)) b!71371))

(assert (= (and b!71371 c!10387) b!71360))

(assert (= (and b!71371 (not c!10387)) b!71366))

(assert (= (and b!71366 c!10388) b!71380))

(assert (= (and b!71366 (not c!10388)) b!71368))

(assert (= (or b!71380 b!71368) bm!6163))

(assert (= (or b!71360 bm!6163) bm!6164))

(assert (= (or b!71360 b!71380) bm!6158))

(assert (= (or b!71361 bm!6164) bm!6161))

(assert (= (or b!71361 bm!6158) bm!6162))

(assert (= (and d!16019 res!38062) b!71365))

(assert (= (and d!16019 c!10384) b!71367))

(assert (= (and d!16019 (not c!10384)) b!71374))

(assert (= (and d!16019 res!38066) b!71363))

(assert (= (and b!71363 res!38061) b!71376))

(assert (= (and b!71363 (not res!38065)) b!71379))

(assert (= (and b!71379 res!38067) b!71373))

(assert (= (and b!71363 res!38068) b!71362))

(assert (= (and b!71362 c!10385) b!71372))

(assert (= (and b!71362 (not c!10385)) b!71378))

(assert (= (and b!71372 res!38064) b!71375))

(assert (= (or b!71372 b!71378) bm!6160))

(assert (= (and b!71362 res!38060) b!71364))

(assert (= (and b!71364 c!10383) b!71369))

(assert (= (and b!71364 (not c!10383)) b!71377))

(assert (= (and b!71369 res!38063) b!71370))

(assert (= (or b!71369 b!71377) bm!6159))

(declare-fun b_lambda!3207 () Bool)

(assert (=> (not b_lambda!3207) (not b!71373)))

(assert (=> b!71373 t!5010))

(declare-fun b_and!4401 () Bool)

(assert (= b_and!4397 (and (=> t!5010 result!2661) b_and!4401)))

(assert (=> b!71373 t!5012))

(declare-fun b_and!4403 () Bool)

(assert (= b_and!4399 (and (=> t!5012 result!2663) b_and!4403)))

(declare-fun m!68745 () Bool)

(assert (=> b!71375 m!68745))

(declare-fun m!68747 () Bool)

(assert (=> b!71370 m!68747))

(assert (=> d!16019 m!68327))

(declare-fun m!68749 () Bool)

(assert (=> bm!6159 m!68749))

(assert (=> b!71376 m!68397))

(assert (=> b!71376 m!68397))

(assert (=> b!71376 m!68399))

(declare-fun m!68751 () Bool)

(assert (=> bm!6160 m!68751))

(assert (=> b!71379 m!68397))

(assert (=> b!71379 m!68397))

(declare-fun m!68753 () Bool)

(assert (=> b!71379 m!68753))

(assert (=> b!71365 m!68397))

(assert (=> b!71365 m!68397))

(assert (=> b!71365 m!68399))

(declare-fun m!68755 () Bool)

(assert (=> bm!6162 m!68755))

(declare-fun m!68757 () Bool)

(assert (=> bm!6161 m!68757))

(declare-fun m!68759 () Bool)

(assert (=> b!71361 m!68759))

(declare-fun m!68761 () Bool)

(assert (=> b!71367 m!68761))

(declare-fun m!68763 () Bool)

(assert (=> b!71367 m!68763))

(declare-fun m!68765 () Bool)

(assert (=> b!71367 m!68765))

(declare-fun m!68767 () Bool)

(assert (=> b!71367 m!68767))

(declare-fun m!68769 () Bool)

(assert (=> b!71367 m!68769))

(declare-fun m!68771 () Bool)

(assert (=> b!71367 m!68771))

(declare-fun m!68773 () Bool)

(assert (=> b!71367 m!68773))

(declare-fun m!68775 () Bool)

(assert (=> b!71367 m!68775))

(assert (=> b!71367 m!68397))

(assert (=> b!71367 m!68769))

(declare-fun m!68777 () Bool)

(assert (=> b!71367 m!68777))

(assert (=> b!71367 m!68765))

(declare-fun m!68779 () Bool)

(assert (=> b!71367 m!68779))

(declare-fun m!68781 () Bool)

(assert (=> b!71367 m!68781))

(declare-fun m!68783 () Bool)

(assert (=> b!71367 m!68783))

(declare-fun m!68785 () Bool)

(assert (=> b!71367 m!68785))

(assert (=> b!71367 m!68757))

(assert (=> b!71367 m!68779))

(declare-fun m!68787 () Bool)

(assert (=> b!71367 m!68787))

(declare-fun m!68789 () Bool)

(assert (=> b!71367 m!68789))

(assert (=> b!71367 m!68773))

(assert (=> b!71373 m!68441))

(assert (=> b!71373 m!68397))

(declare-fun m!68791 () Bool)

(assert (=> b!71373 m!68791))

(declare-fun m!68793 () Bool)

(assert (=> b!71373 m!68793))

(assert (=> b!71373 m!68441))

(declare-fun m!68795 () Bool)

(assert (=> b!71373 m!68795))

(assert (=> b!71373 m!68793))

(assert (=> b!71373 m!68397))

(assert (=> b!71000 d!16019))

(declare-fun d!16021 () Bool)

(declare-fun e!46742 () Bool)

(assert (=> d!16021 e!46742))

(declare-fun res!38069 () Bool)

(assert (=> d!16021 (=> res!38069 e!46742)))

(declare-fun lt!31721 () Bool)

(assert (=> d!16021 (= res!38069 (not lt!31721))))

(declare-fun lt!31720 () Bool)

(assert (=> d!16021 (= lt!31721 lt!31720)))

(declare-fun lt!31719 () Unit!1996)

(declare-fun e!46741 () Unit!1996)

(assert (=> d!16021 (= lt!31719 e!46741)))

(declare-fun c!10389 () Bool)

(assert (=> d!16021 (= c!10389 lt!31720)))

(assert (=> d!16021 (= lt!31720 (containsKey!136 (toList!713 lt!31480) (_1!1066 lt!31223)))))

(assert (=> d!16021 (= (contains!715 lt!31480 (_1!1066 lt!31223)) lt!31721)))

(declare-fun b!71381 () Bool)

(declare-fun lt!31718 () Unit!1996)

(assert (=> b!71381 (= e!46741 lt!31718)))

(assert (=> b!71381 (= lt!31718 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31480) (_1!1066 lt!31223)))))

(assert (=> b!71381 (isDefined!85 (getValueByKey!133 (toList!713 lt!31480) (_1!1066 lt!31223)))))

(declare-fun b!71382 () Bool)

(declare-fun Unit!2023 () Unit!1996)

(assert (=> b!71382 (= e!46741 Unit!2023)))

(declare-fun b!71383 () Bool)

(assert (=> b!71383 (= e!46742 (isDefined!85 (getValueByKey!133 (toList!713 lt!31480) (_1!1066 lt!31223))))))

(assert (= (and d!16021 c!10389) b!71381))

(assert (= (and d!16021 (not c!10389)) b!71382))

(assert (= (and d!16021 (not res!38069)) b!71383))

(declare-fun m!68797 () Bool)

(assert (=> d!16021 m!68797))

(declare-fun m!68799 () Bool)

(assert (=> b!71381 m!68799))

(assert (=> b!71381 m!68141))

(assert (=> b!71381 m!68141))

(declare-fun m!68801 () Bool)

(assert (=> b!71381 m!68801))

(assert (=> b!71383 m!68141))

(assert (=> b!71383 m!68141))

(assert (=> b!71383 m!68801))

(assert (=> d!15855 d!16021))

(declare-fun b!71385 () Bool)

(declare-fun e!46743 () Option!139)

(declare-fun e!46744 () Option!139)

(assert (=> b!71385 (= e!46743 e!46744)))

(declare-fun c!10391 () Bool)

(assert (=> b!71385 (= c!10391 (and ((_ is Cons!1463) lt!31478) (not (= (_1!1066 (h!2049 lt!31478)) (_1!1066 lt!31223)))))))

(declare-fun b!71387 () Bool)

(assert (=> b!71387 (= e!46744 None!137)))

(declare-fun b!71386 () Bool)

(assert (=> b!71386 (= e!46744 (getValueByKey!133 (t!4995 lt!31478) (_1!1066 lt!31223)))))

(declare-fun d!16023 () Bool)

(declare-fun c!10390 () Bool)

(assert (=> d!16023 (= c!10390 (and ((_ is Cons!1463) lt!31478) (= (_1!1066 (h!2049 lt!31478)) (_1!1066 lt!31223))))))

(assert (=> d!16023 (= (getValueByKey!133 lt!31478 (_1!1066 lt!31223)) e!46743)))

(declare-fun b!71384 () Bool)

(assert (=> b!71384 (= e!46743 (Some!138 (_2!1066 (h!2049 lt!31478))))))

(assert (= (and d!16023 c!10390) b!71384))

(assert (= (and d!16023 (not c!10390)) b!71385))

(assert (= (and b!71385 c!10391) b!71386))

(assert (= (and b!71385 (not c!10391)) b!71387))

(declare-fun m!68803 () Bool)

(assert (=> b!71386 m!68803))

(assert (=> d!15855 d!16023))

(declare-fun d!16025 () Bool)

(assert (=> d!16025 (= (getValueByKey!133 lt!31478 (_1!1066 lt!31223)) (Some!138 (_2!1066 lt!31223)))))

(declare-fun lt!31722 () Unit!1996)

(assert (=> d!16025 (= lt!31722 (choose!406 lt!31478 (_1!1066 lt!31223) (_2!1066 lt!31223)))))

(declare-fun e!46745 () Bool)

(assert (=> d!16025 e!46745))

(declare-fun res!38070 () Bool)

(assert (=> d!16025 (=> (not res!38070) (not e!46745))))

(assert (=> d!16025 (= res!38070 (isStrictlySorted!278 lt!31478))))

(assert (=> d!16025 (= (lemmaContainsTupThenGetReturnValue!50 lt!31478 (_1!1066 lt!31223) (_2!1066 lt!31223)) lt!31722)))

(declare-fun b!71388 () Bool)

(declare-fun res!38071 () Bool)

(assert (=> b!71388 (=> (not res!38071) (not e!46745))))

(assert (=> b!71388 (= res!38071 (containsKey!136 lt!31478 (_1!1066 lt!31223)))))

(declare-fun b!71389 () Bool)

(assert (=> b!71389 (= e!46745 (contains!719 lt!31478 (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(assert (= (and d!16025 res!38070) b!71388))

(assert (= (and b!71388 res!38071) b!71389))

(assert (=> d!16025 m!68135))

(declare-fun m!68805 () Bool)

(assert (=> d!16025 m!68805))

(declare-fun m!68807 () Bool)

(assert (=> d!16025 m!68807))

(declare-fun m!68809 () Bool)

(assert (=> b!71388 m!68809))

(declare-fun m!68811 () Bool)

(assert (=> b!71389 m!68811))

(assert (=> d!15855 d!16025))

(declare-fun b!71390 () Bool)

(declare-fun e!46750 () List!1467)

(declare-fun call!6170 () List!1467)

(assert (=> b!71390 (= e!46750 call!6170)))

(declare-fun c!10395 () Bool)

(declare-fun e!46749 () List!1467)

(declare-fun bm!6165 () Bool)

(assert (=> bm!6165 (= call!6170 ($colon$colon!64 e!46749 (ite c!10395 (h!2049 (toList!713 lt!31219)) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223)))))))

(declare-fun c!10394 () Bool)

(assert (=> bm!6165 (= c!10394 c!10395)))

(declare-fun d!16027 () Bool)

(declare-fun e!46748 () Bool)

(assert (=> d!16027 e!46748))

(declare-fun res!38073 () Bool)

(assert (=> d!16027 (=> (not res!38073) (not e!46748))))

(declare-fun lt!31723 () List!1467)

(assert (=> d!16027 (= res!38073 (isStrictlySorted!278 lt!31723))))

(assert (=> d!16027 (= lt!31723 e!46750)))

(assert (=> d!16027 (= c!10395 (and ((_ is Cons!1463) (toList!713 lt!31219)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 lt!31223))))))

(assert (=> d!16027 (isStrictlySorted!278 (toList!713 lt!31219))))

(assert (=> d!16027 (= (insertStrictlySorted!53 (toList!713 lt!31219) (_1!1066 lt!31223) (_2!1066 lt!31223)) lt!31723)))

(declare-fun b!71391 () Bool)

(declare-fun e!46746 () List!1467)

(declare-fun call!6168 () List!1467)

(assert (=> b!71391 (= e!46746 call!6168)))

(declare-fun b!71392 () Bool)

(declare-fun c!10392 () Bool)

(assert (=> b!71392 (= c!10392 (and ((_ is Cons!1463) (toList!713 lt!31219)) (bvsgt (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 lt!31223))))))

(declare-fun e!46747 () List!1467)

(assert (=> b!71392 (= e!46746 e!46747)))

(declare-fun b!71393 () Bool)

(declare-fun call!6169 () List!1467)

(assert (=> b!71393 (= e!46747 call!6169)))

(declare-fun b!71394 () Bool)

(assert (=> b!71394 (= e!46747 call!6169)))

(declare-fun b!71395 () Bool)

(declare-fun res!38072 () Bool)

(assert (=> b!71395 (=> (not res!38072) (not e!46748))))

(assert (=> b!71395 (= res!38072 (containsKey!136 lt!31723 (_1!1066 lt!31223)))))

(declare-fun b!71396 () Bool)

(declare-fun c!10393 () Bool)

(assert (=> b!71396 (= e!46749 (ite c!10393 (t!4995 (toList!713 lt!31219)) (ite c!10392 (Cons!1463 (h!2049 (toList!713 lt!31219)) (t!4995 (toList!713 lt!31219))) Nil!1464)))))

(declare-fun bm!6166 () Bool)

(assert (=> bm!6166 (= call!6168 call!6170)))

(declare-fun b!71397 () Bool)

(assert (=> b!71397 (= e!46750 e!46746)))

(assert (=> b!71397 (= c!10393 (and ((_ is Cons!1463) (toList!713 lt!31219)) (= (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 lt!31223))))))

(declare-fun bm!6167 () Bool)

(assert (=> bm!6167 (= call!6169 call!6168)))

(declare-fun b!71398 () Bool)

(assert (=> b!71398 (= e!46749 (insertStrictlySorted!53 (t!4995 (toList!713 lt!31219)) (_1!1066 lt!31223) (_2!1066 lt!31223)))))

(declare-fun b!71399 () Bool)

(assert (=> b!71399 (= e!46748 (contains!719 lt!31723 (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(assert (= (and d!16027 c!10395) b!71390))

(assert (= (and d!16027 (not c!10395)) b!71397))

(assert (= (and b!71397 c!10393) b!71391))

(assert (= (and b!71397 (not c!10393)) b!71392))

(assert (= (and b!71392 c!10392) b!71393))

(assert (= (and b!71392 (not c!10392)) b!71394))

(assert (= (or b!71393 b!71394) bm!6167))

(assert (= (or b!71391 bm!6167) bm!6166))

(assert (= (or b!71390 bm!6166) bm!6165))

(assert (= (and bm!6165 c!10394) b!71398))

(assert (= (and bm!6165 (not c!10394)) b!71396))

(assert (= (and d!16027 res!38073) b!71395))

(assert (= (and b!71395 res!38072) b!71399))

(declare-fun m!68813 () Bool)

(assert (=> b!71395 m!68813))

(declare-fun m!68815 () Bool)

(assert (=> b!71399 m!68815))

(declare-fun m!68817 () Bool)

(assert (=> bm!6165 m!68817))

(declare-fun m!68819 () Bool)

(assert (=> d!16027 m!68819))

(declare-fun m!68821 () Bool)

(assert (=> d!16027 m!68821))

(declare-fun m!68823 () Bool)

(assert (=> b!71398 m!68823))

(assert (=> d!15855 d!16027))

(assert (=> d!15847 d!15853))

(declare-fun d!16029 () Bool)

(assert (=> d!16029 (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) from!355 Nil!1465)))

(assert (=> d!16029 true))

(declare-fun _$71!93 () Unit!1996)

(assert (=> d!16029 (= (choose!39 (_keys!3839 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!93)))

(declare-fun bs!3081 () Bool)

(assert (= bs!3081 d!16029))

(assert (=> bs!3081 m!67863))

(assert (=> d!15847 d!16029))

(assert (=> d!15829 d!15867))

(assert (=> b!71047 d!15849))

(declare-fun bm!6170 () Bool)

(declare-fun call!6173 () Bool)

(assert (=> bm!6170 (= call!6173 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(declare-fun b!71408 () Bool)

(declare-fun e!46757 () Bool)

(declare-fun e!46759 () Bool)

(assert (=> b!71408 (= e!46757 e!46759)))

(declare-fun lt!31732 () (_ BitVec 64))

(assert (=> b!71408 (= lt!31732 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31731 () Unit!1996)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3863 (_ BitVec 64) (_ BitVec 32)) Unit!1996)

(assert (=> b!71408 (= lt!31731 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3839 newMap!16) lt!31732 #b00000000000000000000000000000000))))

(assert (=> b!71408 (arrayContainsKey!0 (_keys!3839 newMap!16) lt!31732 #b00000000000000000000000000000000)))

(declare-fun lt!31730 () Unit!1996)

(assert (=> b!71408 (= lt!31730 lt!31731)))

(declare-fun res!38079 () Bool)

(assert (=> b!71408 (= res!38079 (= (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) (_keys!3839 newMap!16) (mask!6148 newMap!16)) (Found!229 #b00000000000000000000000000000000)))))

(assert (=> b!71408 (=> (not res!38079) (not e!46759))))

(declare-fun d!16031 () Bool)

(declare-fun res!38078 () Bool)

(declare-fun e!46758 () Bool)

(assert (=> d!16031 (=> res!38078 e!46758)))

(assert (=> d!16031 (= res!38078 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16031 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3839 newMap!16) (mask!6148 newMap!16)) e!46758)))

(declare-fun b!71409 () Bool)

(assert (=> b!71409 (= e!46758 e!46757)))

(declare-fun c!10398 () Bool)

(assert (=> b!71409 (= c!10398 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71410 () Bool)

(assert (=> b!71410 (= e!46757 call!6173)))

(declare-fun b!71411 () Bool)

(assert (=> b!71411 (= e!46759 call!6173)))

(assert (= (and d!16031 (not res!38078)) b!71409))

(assert (= (and b!71409 c!10398) b!71408))

(assert (= (and b!71409 (not c!10398)) b!71410))

(assert (= (and b!71408 res!38079) b!71411))

(assert (= (or b!71411 b!71410) bm!6170))

(declare-fun m!68825 () Bool)

(assert (=> bm!6170 m!68825))

(assert (=> b!71408 m!68397))

(declare-fun m!68827 () Bool)

(assert (=> b!71408 m!68827))

(declare-fun m!68829 () Bool)

(assert (=> b!71408 m!68829))

(assert (=> b!71408 m!68397))

(declare-fun m!68831 () Bool)

(assert (=> b!71408 m!68831))

(assert (=> b!71409 m!68397))

(assert (=> b!71409 m!68397))

(assert (=> b!71409 m!68399))

(assert (=> b!71035 d!16031))

(declare-fun b!71413 () Bool)

(declare-fun e!46760 () Option!139)

(declare-fun e!46761 () Option!139)

(assert (=> b!71413 (= e!46760 e!46761)))

(declare-fun c!10400 () Bool)

(assert (=> b!71413 (= c!10400 (and ((_ is Cons!1463) (toList!713 lt!31512)) (not (= (_1!1066 (h!2049 (toList!713 lt!31512))) (_1!1066 lt!31223)))))))

(declare-fun b!71415 () Bool)

(assert (=> b!71415 (= e!46761 None!137)))

(declare-fun b!71414 () Bool)

(assert (=> b!71414 (= e!46761 (getValueByKey!133 (t!4995 (toList!713 lt!31512)) (_1!1066 lt!31223)))))

(declare-fun d!16033 () Bool)

(declare-fun c!10399 () Bool)

(assert (=> d!16033 (= c!10399 (and ((_ is Cons!1463) (toList!713 lt!31512)) (= (_1!1066 (h!2049 (toList!713 lt!31512))) (_1!1066 lt!31223))))))

(assert (=> d!16033 (= (getValueByKey!133 (toList!713 lt!31512) (_1!1066 lt!31223)) e!46760)))

(declare-fun b!71412 () Bool)

(assert (=> b!71412 (= e!46760 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31512)))))))

(assert (= (and d!16033 c!10399) b!71412))

(assert (= (and d!16033 (not c!10399)) b!71413))

(assert (= (and b!71413 c!10400) b!71414))

(assert (= (and b!71413 (not c!10400)) b!71415))

(declare-fun m!68833 () Bool)

(assert (=> b!71414 m!68833))

(assert (=> b!71108 d!16033))

(declare-fun b!71417 () Bool)

(declare-fun e!46762 () Option!139)

(declare-fun e!46763 () Option!139)

(assert (=> b!71417 (= e!46762 e!46763)))

(declare-fun c!10402 () Bool)

(assert (=> b!71417 (= c!10402 (and ((_ is Cons!1463) (toList!713 lt!31516)) (not (= (_1!1066 (h!2049 (toList!713 lt!31516))) (_1!1066 lt!31228)))))))

(declare-fun b!71419 () Bool)

(assert (=> b!71419 (= e!46763 None!137)))

(declare-fun b!71418 () Bool)

(assert (=> b!71418 (= e!46763 (getValueByKey!133 (t!4995 (toList!713 lt!31516)) (_1!1066 lt!31228)))))

(declare-fun d!16035 () Bool)

(declare-fun c!10401 () Bool)

(assert (=> d!16035 (= c!10401 (and ((_ is Cons!1463) (toList!713 lt!31516)) (= (_1!1066 (h!2049 (toList!713 lt!31516))) (_1!1066 lt!31228))))))

(assert (=> d!16035 (= (getValueByKey!133 (toList!713 lt!31516) (_1!1066 lt!31228)) e!46762)))

(declare-fun b!71416 () Bool)

(assert (=> b!71416 (= e!46762 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31516)))))))

(assert (= (and d!16035 c!10401) b!71416))

(assert (= (and d!16035 (not c!10401)) b!71417))

(assert (= (and b!71417 c!10402) b!71418))

(assert (= (and b!71417 (not c!10402)) b!71419))

(declare-fun m!68835 () Bool)

(assert (=> b!71418 m!68835))

(assert (=> b!71110 d!16035))

(assert (=> b!71022 d!15999))

(declare-fun d!16037 () Bool)

(assert (=> d!16037 (= (get!1145 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) from!355) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70892 d!16037))

(declare-fun d!16039 () Bool)

(declare-fun e!46766 () Bool)

(assert (=> d!16039 e!46766))

(declare-fun c!10405 () Bool)

(assert (=> d!16039 (= c!10405 (and (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!16039 true))

(declare-fun _$29!87 () Unit!1996)

(assert (=> d!16039 (= (choose!402 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))) _$29!87)))

(declare-fun b!71424 () Bool)

(assert (=> b!71424 (= e!46766 (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!71425 () Bool)

(assert (=> b!71425 (= e!46766 (ite (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!16039 c!10405) b!71424))

(assert (= (and d!16039 (not c!10405)) b!71425))

(assert (=> b!71424 m!67819))

(assert (=> b!71424 m!67867))

(assert (=> d!15851 d!16039))

(assert (=> d!15851 d!15867))

(declare-fun d!16041 () Bool)

(declare-fun e!46769 () Bool)

(assert (=> d!16041 e!46769))

(declare-fun res!38085 () Bool)

(assert (=> d!16041 (=> (not res!38085) (not e!46769))))

(declare-fun lt!31737 () SeekEntryResult!229)

(assert (=> d!16041 (= res!38085 ((_ is Found!229) lt!31737))))

(assert (=> d!16041 (= lt!31737 (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(declare-fun lt!31738 () Unit!1996)

(declare-fun choose!413 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) Int) Unit!1996)

(assert (=> d!16041 (= lt!31738 (choose!413 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(assert (=> d!16041 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16041 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)) lt!31738)))

(declare-fun b!71430 () Bool)

(declare-fun res!38084 () Bool)

(assert (=> b!71430 (=> (not res!38084) (not e!46769))))

(assert (=> b!71430 (= res!38084 (inRange!0 (index!3047 lt!31737) (mask!6148 newMap!16)))))

(declare-fun b!71431 () Bool)

(assert (=> b!71431 (= e!46769 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31737)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> b!71431 (and (bvsge (index!3047 lt!31737) #b00000000000000000000000000000000) (bvslt (index!3047 lt!31737) (size!2081 (_keys!3839 newMap!16))))))

(assert (= (and d!16041 res!38085) b!71430))

(assert (= (and b!71430 res!38084) b!71431))

(assert (=> d!16041 m!67819))

(assert (=> d!16041 m!68061))

(assert (=> d!16041 m!67819))

(declare-fun m!68837 () Bool)

(assert (=> d!16041 m!68837))

(assert (=> d!16041 m!68327))

(declare-fun m!68839 () Bool)

(assert (=> b!71430 m!68839))

(declare-fun m!68841 () Bool)

(assert (=> b!71431 m!68841))

(assert (=> bm!6110 d!16041))

(declare-fun d!16043 () Bool)

(declare-fun res!38086 () Bool)

(declare-fun e!46770 () Bool)

(assert (=> d!16043 (=> res!38086 e!46770)))

(assert (=> d!16043 (= res!38086 (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!16043 (= (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!46770)))

(declare-fun b!71432 () Bool)

(declare-fun e!46771 () Bool)

(assert (=> b!71432 (= e!46770 e!46771)))

(declare-fun res!38087 () Bool)

(assert (=> b!71432 (=> (not res!38087) (not e!46771))))

(assert (=> b!71432 (= res!38087 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!71433 () Bool)

(assert (=> b!71433 (= e!46771 (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16043 (not res!38086)) b!71432))

(assert (= (and b!71432 res!38087) b!71433))

(assert (=> d!16043 m!68687))

(assert (=> b!71433 m!67819))

(declare-fun m!68843 () Bool)

(assert (=> b!71433 m!68843))

(assert (=> b!71042 d!16043))

(declare-fun d!16045 () Bool)

(declare-fun e!46773 () Bool)

(assert (=> d!16045 e!46773))

(declare-fun res!38088 () Bool)

(assert (=> d!16045 (=> res!38088 e!46773)))

(declare-fun lt!31742 () Bool)

(assert (=> d!16045 (= res!38088 (not lt!31742))))

(declare-fun lt!31741 () Bool)

(assert (=> d!16045 (= lt!31742 lt!31741)))

(declare-fun lt!31740 () Unit!1996)

(declare-fun e!46772 () Unit!1996)

(assert (=> d!16045 (= lt!31740 e!46772)))

(declare-fun c!10406 () Bool)

(assert (=> d!16045 (= c!10406 lt!31741)))

(assert (=> d!16045 (= lt!31741 (containsKey!136 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!16045 (= (contains!715 call!6119 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) lt!31742)))

(declare-fun b!71434 () Bool)

(declare-fun lt!31739 () Unit!1996)

(assert (=> b!71434 (= e!46772 lt!31739)))

(assert (=> b!71434 (= lt!31739 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> b!71434 (isDefined!85 (getValueByKey!133 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!71435 () Bool)

(declare-fun Unit!2024 () Unit!1996)

(assert (=> b!71435 (= e!46772 Unit!2024)))

(declare-fun b!71436 () Bool)

(assert (=> b!71436 (= e!46773 (isDefined!85 (getValueByKey!133 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (= (and d!16045 c!10406) b!71434))

(assert (= (and d!16045 (not c!10406)) b!71435))

(assert (= (and d!16045 (not res!38088)) b!71436))

(assert (=> d!16045 m!67819))

(declare-fun m!68845 () Bool)

(assert (=> d!16045 m!68845))

(assert (=> b!71434 m!67819))

(declare-fun m!68847 () Bool)

(assert (=> b!71434 m!68847))

(assert (=> b!71434 m!67819))

(declare-fun m!68849 () Bool)

(assert (=> b!71434 m!68849))

(assert (=> b!71434 m!68849))

(declare-fun m!68851 () Bool)

(assert (=> b!71434 m!68851))

(assert (=> b!71436 m!67819))

(assert (=> b!71436 m!68849))

(assert (=> b!71436 m!68849))

(assert (=> b!71436 m!68851))

(assert (=> b!70996 d!16045))

(declare-fun d!16047 () Bool)

(assert (=> d!16047 (= (inRange!0 (ite c!10297 (ite c!10295 (index!3047 lt!31435) (ite c!10296 (index!3046 lt!31459) (index!3049 lt!31459))) (ite c!10291 (index!3047 lt!31439) (ite c!10290 (index!3046 lt!31458) (index!3049 lt!31458)))) (mask!6148 newMap!16)) (and (bvsge (ite c!10297 (ite c!10295 (index!3047 lt!31435) (ite c!10296 (index!3046 lt!31459) (index!3049 lt!31459))) (ite c!10291 (index!3047 lt!31439) (ite c!10290 (index!3046 lt!31458) (index!3049 lt!31458)))) #b00000000000000000000000000000000) (bvslt (ite c!10297 (ite c!10295 (index!3047 lt!31435) (ite c!10296 (index!3046 lt!31459) (index!3049 lt!31459))) (ite c!10291 (index!3047 lt!31439) (ite c!10290 (index!3046 lt!31458) (index!3049 lt!31458)))) (bvadd (mask!6148 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6117 d!16047))

(declare-fun b!71446 () Bool)

(declare-fun res!38097 () Bool)

(declare-fun e!46776 () Bool)

(assert (=> b!71446 (=> (not res!38097) (not e!46776))))

(declare-fun size!2087 (LongMapFixedSize!688) (_ BitVec 32))

(assert (=> b!71446 (= res!38097 (bvsge (size!2087 newMap!16) (_size!393 newMap!16)))))

(declare-fun b!71448 () Bool)

(assert (=> b!71448 (= e!46776 (and (bvsge (extraKeys!2054 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2054 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!393 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!71447 () Bool)

(declare-fun res!38099 () Bool)

(assert (=> b!71447 (=> (not res!38099) (not e!46776))))

(assert (=> b!71447 (= res!38099 (= (size!2087 newMap!16) (bvadd (_size!393 newMap!16) (bvsdiv (bvadd (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!16049 () Bool)

(declare-fun res!38100 () Bool)

(assert (=> d!16049 (=> (not res!38100) (not e!46776))))

(assert (=> d!16049 (= res!38100 (validMask!0 (mask!6148 newMap!16)))))

(assert (=> d!16049 (= (simpleValid!50 newMap!16) e!46776)))

(declare-fun b!71445 () Bool)

(declare-fun res!38098 () Bool)

(assert (=> b!71445 (=> (not res!38098) (not e!46776))))

(assert (=> b!71445 (= res!38098 (and (= (size!2082 (_values!2174 newMap!16)) (bvadd (mask!6148 newMap!16) #b00000000000000000000000000000001)) (= (size!2081 (_keys!3839 newMap!16)) (size!2082 (_values!2174 newMap!16))) (bvsge (_size!393 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!393 newMap!16) (bvadd (mask!6148 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!16049 res!38100) b!71445))

(assert (= (and b!71445 res!38098) b!71446))

(assert (= (and b!71446 res!38097) b!71447))

(assert (= (and b!71447 res!38099) b!71448))

(declare-fun m!68853 () Bool)

(assert (=> b!71446 m!68853))

(assert (=> b!71447 m!68853))

(assert (=> d!16049 m!68327))

(assert (=> d!15843 d!16049))

(declare-fun b!71465 () Bool)

(declare-fun res!38112 () Bool)

(declare-fun e!46788 () Bool)

(assert (=> b!71465 (=> (not res!38112) (not e!46788))))

(declare-fun lt!31748 () SeekEntryResult!229)

(assert (=> b!71465 (= res!38112 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3049 lt!31748)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71465 (and (bvsge (index!3049 lt!31748) #b00000000000000000000000000000000) (bvslt (index!3049 lt!31748) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71466 () Bool)

(declare-fun call!6178 () Bool)

(assert (=> b!71466 (= e!46788 (not call!6178))))

(declare-fun bm!6175 () Bool)

(declare-fun call!6179 () Bool)

(declare-fun c!10412 () Bool)

(assert (=> bm!6175 (= call!6179 (inRange!0 (ite c!10412 (index!3046 lt!31748) (index!3049 lt!31748)) (mask!6148 newMap!16)))))

(declare-fun b!71467 () Bool)

(assert (=> b!71467 (and (bvsge (index!3046 lt!31748) #b00000000000000000000000000000000) (bvslt (index!3046 lt!31748) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun res!38109 () Bool)

(assert (=> b!71467 (= res!38109 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3046 lt!31748)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46787 () Bool)

(assert (=> b!71467 (=> (not res!38109) (not e!46787))))

(declare-fun b!71468 () Bool)

(declare-fun e!46786 () Bool)

(assert (=> b!71468 (= e!46786 e!46787)))

(declare-fun res!38110 () Bool)

(assert (=> b!71468 (= res!38110 call!6179)))

(assert (=> b!71468 (=> (not res!38110) (not e!46787))))

(declare-fun d!16051 () Bool)

(assert (=> d!16051 e!46786))

(assert (=> d!16051 (= c!10412 ((_ is MissingZero!229) lt!31748))))

(assert (=> d!16051 (= lt!31748 (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(declare-fun lt!31747 () Unit!1996)

(declare-fun choose!414 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) Int) Unit!1996)

(assert (=> d!16051 (= lt!31747 (choose!414 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(assert (=> d!16051 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16051 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)) lt!31747)))

(declare-fun b!71469 () Bool)

(declare-fun res!38111 () Bool)

(assert (=> b!71469 (=> (not res!38111) (not e!46788))))

(assert (=> b!71469 (= res!38111 call!6179)))

(declare-fun e!46785 () Bool)

(assert (=> b!71469 (= e!46785 e!46788)))

(declare-fun b!71470 () Bool)

(assert (=> b!71470 (= e!46786 e!46785)))

(declare-fun c!10411 () Bool)

(assert (=> b!71470 (= c!10411 ((_ is MissingVacant!229) lt!31748))))

(declare-fun b!71471 () Bool)

(assert (=> b!71471 (= e!46787 (not call!6178))))

(declare-fun bm!6176 () Bool)

(assert (=> bm!6176 (= call!6178 (arrayContainsKey!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!71472 () Bool)

(assert (=> b!71472 (= e!46785 ((_ is Undefined!229) lt!31748))))

(assert (= (and d!16051 c!10412) b!71468))

(assert (= (and d!16051 (not c!10412)) b!71470))

(assert (= (and b!71468 res!38110) b!71467))

(assert (= (and b!71467 res!38109) b!71471))

(assert (= (and b!71470 c!10411) b!71469))

(assert (= (and b!71470 (not c!10411)) b!71472))

(assert (= (and b!71469 res!38111) b!71465))

(assert (= (and b!71465 res!38112) b!71466))

(assert (= (or b!71468 b!71469) bm!6175))

(assert (= (or b!71471 b!71466) bm!6176))

(assert (=> d!16051 m!67819))

(assert (=> d!16051 m!68061))

(assert (=> d!16051 m!67819))

(declare-fun m!68855 () Bool)

(assert (=> d!16051 m!68855))

(assert (=> d!16051 m!68327))

(declare-fun m!68857 () Bool)

(assert (=> b!71467 m!68857))

(declare-fun m!68859 () Bool)

(assert (=> bm!6175 m!68859))

(assert (=> bm!6176 m!67819))

(assert (=> bm!6176 m!68109))

(declare-fun m!68861 () Bool)

(assert (=> b!71465 m!68861))

(assert (=> bm!6129 d!16051))

(assert (=> b!71103 d!16005))

(assert (=> d!15827 d!16019))

(declare-fun b!71474 () Bool)

(declare-fun e!46789 () Option!139)

(declare-fun e!46790 () Option!139)

(assert (=> b!71474 (= e!46789 e!46790)))

(declare-fun c!10414 () Bool)

(assert (=> b!71474 (= c!10414 (and ((_ is Cons!1463) (toList!713 lt!31505)) (not (= (_1!1066 (h!2049 (toList!713 lt!31505))) (_1!1066 lt!31228)))))))

(declare-fun b!71476 () Bool)

(assert (=> b!71476 (= e!46790 None!137)))

(declare-fun b!71475 () Bool)

(assert (=> b!71475 (= e!46790 (getValueByKey!133 (t!4995 (toList!713 lt!31505)) (_1!1066 lt!31228)))))

(declare-fun d!16053 () Bool)

(declare-fun c!10413 () Bool)

(assert (=> d!16053 (= c!10413 (and ((_ is Cons!1463) (toList!713 lt!31505)) (= (_1!1066 (h!2049 (toList!713 lt!31505))) (_1!1066 lt!31228))))))

(assert (=> d!16053 (= (getValueByKey!133 (toList!713 lt!31505) (_1!1066 lt!31228)) e!46789)))

(declare-fun b!71473 () Bool)

(assert (=> b!71473 (= e!46789 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31505)))))))

(assert (= (and d!16053 c!10413) b!71473))

(assert (= (and d!16053 (not c!10413)) b!71474))

(assert (= (and b!71474 c!10414) b!71475))

(assert (= (and b!71474 (not c!10414)) b!71476))

(declare-fun m!68863 () Bool)

(assert (=> b!71475 m!68863))

(assert (=> b!71106 d!16053))

(assert (=> b!70991 d!16019))

(declare-fun d!16055 () Bool)

(declare-fun e!46792 () Bool)

(assert (=> d!16055 e!46792))

(declare-fun res!38113 () Bool)

(assert (=> d!16055 (=> res!38113 e!46792)))

(declare-fun lt!31752 () Bool)

(assert (=> d!16055 (= res!38113 (not lt!31752))))

(declare-fun lt!31751 () Bool)

(assert (=> d!16055 (= lt!31752 lt!31751)))

(declare-fun lt!31750 () Unit!1996)

(declare-fun e!46791 () Unit!1996)

(assert (=> d!16055 (= lt!31750 e!46791)))

(declare-fun c!10415 () Bool)

(assert (=> d!16055 (= c!10415 lt!31751)))

(assert (=> d!16055 (= lt!31751 (containsKey!136 (toList!713 lt!31512) (_1!1066 lt!31223)))))

(assert (=> d!16055 (= (contains!715 lt!31512 (_1!1066 lt!31223)) lt!31752)))

(declare-fun b!71477 () Bool)

(declare-fun lt!31749 () Unit!1996)

(assert (=> b!71477 (= e!46791 lt!31749)))

(assert (=> b!71477 (= lt!31749 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31512) (_1!1066 lt!31223)))))

(assert (=> b!71477 (isDefined!85 (getValueByKey!133 (toList!713 lt!31512) (_1!1066 lt!31223)))))

(declare-fun b!71478 () Bool)

(declare-fun Unit!2025 () Unit!1996)

(assert (=> b!71478 (= e!46791 Unit!2025)))

(declare-fun b!71479 () Bool)

(assert (=> b!71479 (= e!46792 (isDefined!85 (getValueByKey!133 (toList!713 lt!31512) (_1!1066 lt!31223))))))

(assert (= (and d!16055 c!10415) b!71477))

(assert (= (and d!16055 (not c!10415)) b!71478))

(assert (= (and d!16055 (not res!38113)) b!71479))

(declare-fun m!68865 () Bool)

(assert (=> d!16055 m!68865))

(declare-fun m!68867 () Bool)

(assert (=> b!71477 m!68867))

(assert (=> b!71477 m!68195))

(assert (=> b!71477 m!68195))

(declare-fun m!68869 () Bool)

(assert (=> b!71477 m!68869))

(assert (=> b!71479 m!68195))

(assert (=> b!71479 m!68195))

(assert (=> b!71479 m!68869))

(assert (=> d!15863 d!16055))

(declare-fun b!71481 () Bool)

(declare-fun e!46793 () Option!139)

(declare-fun e!46794 () Option!139)

(assert (=> b!71481 (= e!46793 e!46794)))

(declare-fun c!10417 () Bool)

(assert (=> b!71481 (= c!10417 (and ((_ is Cons!1463) lt!31510) (not (= (_1!1066 (h!2049 lt!31510)) (_1!1066 lt!31223)))))))

(declare-fun b!71483 () Bool)

(assert (=> b!71483 (= e!46794 None!137)))

(declare-fun b!71482 () Bool)

(assert (=> b!71482 (= e!46794 (getValueByKey!133 (t!4995 lt!31510) (_1!1066 lt!31223)))))

(declare-fun d!16057 () Bool)

(declare-fun c!10416 () Bool)

(assert (=> d!16057 (= c!10416 (and ((_ is Cons!1463) lt!31510) (= (_1!1066 (h!2049 lt!31510)) (_1!1066 lt!31223))))))

(assert (=> d!16057 (= (getValueByKey!133 lt!31510 (_1!1066 lt!31223)) e!46793)))

(declare-fun b!71480 () Bool)

(assert (=> b!71480 (= e!46793 (Some!138 (_2!1066 (h!2049 lt!31510))))))

(assert (= (and d!16057 c!10416) b!71480))

(assert (= (and d!16057 (not c!10416)) b!71481))

(assert (= (and b!71481 c!10417) b!71482))

(assert (= (and b!71481 (not c!10417)) b!71483))

(declare-fun m!68871 () Bool)

(assert (=> b!71482 m!68871))

(assert (=> d!15863 d!16057))

(declare-fun d!16059 () Bool)

(assert (=> d!16059 (= (getValueByKey!133 lt!31510 (_1!1066 lt!31223)) (Some!138 (_2!1066 lt!31223)))))

(declare-fun lt!31753 () Unit!1996)

(assert (=> d!16059 (= lt!31753 (choose!406 lt!31510 (_1!1066 lt!31223) (_2!1066 lt!31223)))))

(declare-fun e!46795 () Bool)

(assert (=> d!16059 e!46795))

(declare-fun res!38114 () Bool)

(assert (=> d!16059 (=> (not res!38114) (not e!46795))))

(assert (=> d!16059 (= res!38114 (isStrictlySorted!278 lt!31510))))

(assert (=> d!16059 (= (lemmaContainsTupThenGetReturnValue!50 lt!31510 (_1!1066 lt!31223) (_2!1066 lt!31223)) lt!31753)))

(declare-fun b!71484 () Bool)

(declare-fun res!38115 () Bool)

(assert (=> b!71484 (=> (not res!38115) (not e!46795))))

(assert (=> b!71484 (= res!38115 (containsKey!136 lt!31510 (_1!1066 lt!31223)))))

(declare-fun b!71485 () Bool)

(assert (=> b!71485 (= e!46795 (contains!719 lt!31510 (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(assert (= (and d!16059 res!38114) b!71484))

(assert (= (and b!71484 res!38115) b!71485))

(assert (=> d!16059 m!68189))

(declare-fun m!68873 () Bool)

(assert (=> d!16059 m!68873))

(declare-fun m!68875 () Bool)

(assert (=> d!16059 m!68875))

(declare-fun m!68877 () Bool)

(assert (=> b!71484 m!68877))

(declare-fun m!68879 () Bool)

(assert (=> b!71485 m!68879))

(assert (=> d!15863 d!16059))

(declare-fun b!71486 () Bool)

(declare-fun e!46800 () List!1467)

(declare-fun call!6182 () List!1467)

(assert (=> b!71486 (= e!46800 call!6182)))

(declare-fun e!46799 () List!1467)

(declare-fun c!10421 () Bool)

(declare-fun bm!6177 () Bool)

(assert (=> bm!6177 (= call!6182 ($colon$colon!64 e!46799 (ite c!10421 (h!2049 (toList!713 (+!91 lt!31219 lt!31228))) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223)))))))

(declare-fun c!10420 () Bool)

(assert (=> bm!6177 (= c!10420 c!10421)))

(declare-fun d!16061 () Bool)

(declare-fun e!46798 () Bool)

(assert (=> d!16061 e!46798))

(declare-fun res!38117 () Bool)

(assert (=> d!16061 (=> (not res!38117) (not e!46798))))

(declare-fun lt!31754 () List!1467)

(assert (=> d!16061 (= res!38117 (isStrictlySorted!278 lt!31754))))

(assert (=> d!16061 (= lt!31754 e!46800)))

(assert (=> d!16061 (= c!10421 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 lt!31228))) (bvslt (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 lt!31228)))) (_1!1066 lt!31223))))))

(assert (=> d!16061 (isStrictlySorted!278 (toList!713 (+!91 lt!31219 lt!31228)))))

(assert (=> d!16061 (= (insertStrictlySorted!53 (toList!713 (+!91 lt!31219 lt!31228)) (_1!1066 lt!31223) (_2!1066 lt!31223)) lt!31754)))

(declare-fun b!71487 () Bool)

(declare-fun e!46796 () List!1467)

(declare-fun call!6180 () List!1467)

(assert (=> b!71487 (= e!46796 call!6180)))

(declare-fun b!71488 () Bool)

(declare-fun c!10418 () Bool)

(assert (=> b!71488 (= c!10418 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 lt!31228))) (bvsgt (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 lt!31228)))) (_1!1066 lt!31223))))))

(declare-fun e!46797 () List!1467)

(assert (=> b!71488 (= e!46796 e!46797)))

(declare-fun b!71489 () Bool)

(declare-fun call!6181 () List!1467)

(assert (=> b!71489 (= e!46797 call!6181)))

(declare-fun b!71490 () Bool)

(assert (=> b!71490 (= e!46797 call!6181)))

(declare-fun b!71491 () Bool)

(declare-fun res!38116 () Bool)

(assert (=> b!71491 (=> (not res!38116) (not e!46798))))

(assert (=> b!71491 (= res!38116 (containsKey!136 lt!31754 (_1!1066 lt!31223)))))

(declare-fun c!10419 () Bool)

(declare-fun b!71492 () Bool)

(assert (=> b!71492 (= e!46799 (ite c!10419 (t!4995 (toList!713 (+!91 lt!31219 lt!31228))) (ite c!10418 (Cons!1463 (h!2049 (toList!713 (+!91 lt!31219 lt!31228))) (t!4995 (toList!713 (+!91 lt!31219 lt!31228)))) Nil!1464)))))

(declare-fun bm!6178 () Bool)

(assert (=> bm!6178 (= call!6180 call!6182)))

(declare-fun b!71493 () Bool)

(assert (=> b!71493 (= e!46800 e!46796)))

(assert (=> b!71493 (= c!10419 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 lt!31228))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 lt!31228)))) (_1!1066 lt!31223))))))

(declare-fun bm!6179 () Bool)

(assert (=> bm!6179 (= call!6181 call!6180)))

(declare-fun b!71494 () Bool)

(assert (=> b!71494 (= e!46799 (insertStrictlySorted!53 (t!4995 (toList!713 (+!91 lt!31219 lt!31228))) (_1!1066 lt!31223) (_2!1066 lt!31223)))))

(declare-fun b!71495 () Bool)

(assert (=> b!71495 (= e!46798 (contains!719 lt!31754 (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(assert (= (and d!16061 c!10421) b!71486))

(assert (= (and d!16061 (not c!10421)) b!71493))

(assert (= (and b!71493 c!10419) b!71487))

(assert (= (and b!71493 (not c!10419)) b!71488))

(assert (= (and b!71488 c!10418) b!71489))

(assert (= (and b!71488 (not c!10418)) b!71490))

(assert (= (or b!71489 b!71490) bm!6179))

(assert (= (or b!71487 bm!6179) bm!6178))

(assert (= (or b!71486 bm!6178) bm!6177))

(assert (= (and bm!6177 c!10420) b!71494))

(assert (= (and bm!6177 (not c!10420)) b!71492))

(assert (= (and d!16061 res!38117) b!71491))

(assert (= (and b!71491 res!38116) b!71495))

(declare-fun m!68881 () Bool)

(assert (=> b!71491 m!68881))

(declare-fun m!68883 () Bool)

(assert (=> b!71495 m!68883))

(declare-fun m!68885 () Bool)

(assert (=> bm!6177 m!68885))

(declare-fun m!68887 () Bool)

(assert (=> d!16061 m!68887))

(declare-fun m!68889 () Bool)

(assert (=> d!16061 m!68889))

(declare-fun m!68891 () Bool)

(assert (=> b!71494 m!68891))

(assert (=> d!15863 d!16061))

(declare-fun d!16063 () Bool)

(declare-fun lt!31757 () Bool)

(declare-fun content!77 (List!1468) (InoxSet (_ BitVec 64)))

(assert (=> d!16063 (= lt!31757 (select (content!77 Nil!1465) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun e!46806 () Bool)

(assert (=> d!16063 (= lt!31757 e!46806)))

(declare-fun res!38122 () Bool)

(assert (=> d!16063 (=> (not res!38122) (not e!46806))))

(assert (=> d!16063 (= res!38122 ((_ is Cons!1464) Nil!1465))))

(assert (=> d!16063 (= (contains!718 Nil!1465 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) lt!31757)))

(declare-fun b!71500 () Bool)

(declare-fun e!46805 () Bool)

(assert (=> b!71500 (= e!46806 e!46805)))

(declare-fun res!38123 () Bool)

(assert (=> b!71500 (=> res!38123 e!46805)))

(assert (=> b!71500 (= res!38123 (= (h!2050 Nil!1465) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!71501 () Bool)

(assert (=> b!71501 (= e!46805 (contains!718 (t!4996 Nil!1465) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (= (and d!16063 res!38122) b!71500))

(assert (= (and b!71500 (not res!38123)) b!71501))

(declare-fun m!68893 () Bool)

(assert (=> d!16063 m!68893))

(assert (=> d!16063 m!67819))

(declare-fun m!68895 () Bool)

(assert (=> d!16063 m!68895))

(assert (=> b!71501 m!67819))

(declare-fun m!68897 () Bool)

(assert (=> b!71501 m!68897))

(assert (=> b!71059 d!16063))

(declare-fun b!71536 () Bool)

(declare-fun res!38143 () Bool)

(declare-fun e!46829 () Bool)

(assert (=> b!71536 (=> (not res!38143) (not e!46829))))

(declare-fun lt!31839 () tuple2!2108)

(assert (=> b!71536 (= res!38143 (valid!301 (_2!1065 lt!31839)))))

(declare-fun b!71537 () Bool)

(declare-fun res!38145 () Bool)

(declare-fun e!46823 () Bool)

(assert (=> b!71537 (=> (not res!38145) (not e!46823))))

(declare-fun call!6193 () Bool)

(assert (=> b!71537 (= res!38145 call!6193)))

(declare-fun e!46828 () Bool)

(assert (=> b!71537 (= e!46828 e!46823)))

(declare-fun b!71538 () Bool)

(declare-fun e!46830 () Unit!1996)

(declare-fun Unit!2026 () Unit!1996)

(assert (=> b!71538 (= e!46830 Unit!2026)))

(declare-fun lt!31832 () Unit!1996)

(assert (=> b!71538 (= lt!31832 (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31846 () SeekEntryResult!229)

(declare-fun call!6194 () SeekEntryResult!229)

(assert (=> b!71538 (= lt!31846 call!6194)))

(declare-fun res!38142 () Bool)

(assert (=> b!71538 (= res!38142 ((_ is Found!229) lt!31846))))

(declare-fun e!46827 () Bool)

(assert (=> b!71538 (=> (not res!38142) (not e!46827))))

(assert (=> b!71538 e!46827))

(declare-fun lt!31844 () Unit!1996)

(assert (=> b!71538 (= lt!31844 lt!31832)))

(assert (=> b!71538 false))

(declare-fun b!71539 () Bool)

(declare-fun e!46825 () Bool)

(declare-fun call!6191 () Bool)

(assert (=> b!71539 (= e!46825 (not call!6191))))

(declare-fun b!71540 () Bool)

(declare-fun lt!31818 () Unit!1996)

(assert (=> b!71540 (= e!46830 lt!31818)))

(assert (=> b!71540 (= lt!31818 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31828 () SeekEntryResult!229)

(assert (=> b!71540 (= lt!31828 call!6194)))

(declare-fun c!10430 () Bool)

(assert (=> b!71540 (= c!10430 ((_ is MissingZero!229) lt!31828))))

(assert (=> b!71540 e!46828))

(declare-fun b!71541 () Bool)

(assert (=> b!71541 (= e!46829 (= (map!1155 (_2!1065 lt!31839)) (+!91 (map!1155 newMap!16) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun bm!6188 () Bool)

(assert (=> bm!6188 (= call!6194 (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(declare-fun b!71542 () Bool)

(declare-fun res!38150 () Bool)

(assert (=> b!71542 (=> (not res!38150) (not e!46829))))

(assert (=> b!71542 (= res!38150 (contains!715 (map!1155 (_2!1065 lt!31839)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun bm!6190 () Bool)

(assert (=> bm!6190 (= call!6191 (arrayContainsKey!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!71543 () Bool)

(declare-fun res!38147 () Bool)

(declare-fun call!6192 () Bool)

(assert (=> b!71543 (= res!38147 call!6192)))

(assert (=> b!71543 (=> (not res!38147) (not e!46827))))

(declare-fun b!71544 () Bool)

(declare-fun c!10433 () Bool)

(assert (=> b!71544 (= c!10433 ((_ is MissingVacant!229) lt!31828))))

(declare-fun e!46824 () Bool)

(assert (=> b!71544 (= e!46828 e!46824)))

(declare-fun b!71545 () Bool)

(assert (=> b!71545 (= e!46824 e!46825)))

(declare-fun res!38148 () Bool)

(assert (=> b!71545 (= res!38148 call!6193)))

(assert (=> b!71545 (=> (not res!38148) (not e!46825))))

(declare-fun b!71546 () Bool)

(declare-fun res!38149 () Bool)

(assert (=> b!71546 (= res!38149 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3049 lt!31828)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71546 (=> (not res!38149) (not e!46825))))

(declare-fun b!71547 () Bool)

(declare-fun e!46826 () Unit!1996)

(declare-fun Unit!2027 () Unit!1996)

(assert (=> b!71547 (= e!46826 Unit!2027)))

(declare-fun lt!31837 () Unit!1996)

(declare-fun lemmaArrayContainsKeyThenInListMap!12 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) (_ BitVec 32) Int) Unit!1996)

(assert (=> b!71547 (= lt!31837 (lemmaArrayContainsKeyThenInListMap!12 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (=> b!71547 (contains!715 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))

(declare-fun lt!31824 () Unit!1996)

(assert (=> b!71547 (= lt!31824 lt!31837)))

(assert (=> b!71547 false))

(declare-fun b!71548 () Bool)

(declare-fun Unit!2028 () Unit!1996)

(assert (=> b!71548 (= e!46826 Unit!2028)))

(declare-fun b!71549 () Bool)

(assert (=> b!71549 (= e!46823 (not call!6191))))

(declare-fun b!71550 () Bool)

(declare-fun res!38144 () Bool)

(assert (=> b!71550 (=> (not res!38144) (not e!46823))))

(assert (=> b!71550 (= res!38144 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3046 lt!31828)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71551 () Bool)

(assert (=> b!71551 (= e!46827 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31846)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!71552 () Bool)

(assert (=> b!71552 (= e!46824 ((_ is Undefined!229) lt!31828))))

(declare-fun bm!6191 () Bool)

(declare-fun c!10432 () Bool)

(assert (=> bm!6191 (= call!6192 (inRange!0 (ite c!10432 (index!3047 lt!31846) (ite c!10430 (index!3046 lt!31828) (index!3049 lt!31828))) (mask!6148 newMap!16)))))

(declare-fun bm!6189 () Bool)

(assert (=> bm!6189 (= call!6193 call!6192)))

(declare-fun d!16065 () Bool)

(assert (=> d!16065 e!46829))

(declare-fun res!38146 () Bool)

(assert (=> d!16065 (=> (not res!38146) (not e!46829))))

(assert (=> d!16065 (= res!38146 (_1!1065 lt!31839))))

(assert (=> d!16065 (= lt!31839 (tuple2!2109 true (LongMapFixedSize!689 (defaultEntry!2191 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (bvadd (_size!393 newMap!16) #b00000000000000000000000000000001) (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (_vacant!393 newMap!16))))))

(declare-fun lt!31831 () Unit!1996)

(declare-fun lt!31833 () Unit!1996)

(assert (=> d!16065 (= lt!31831 lt!31833)))

(declare-fun lt!31822 () array!3865)

(declare-fun lt!31845 () array!3863)

(assert (=> d!16065 (contains!715 (getCurrentListMap!411 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))))))

(assert (=> d!16065 (= lt!31833 (lemmaValidKeyInArrayIsInListMap!83 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (defaultEntry!2191 newMap!16)))))

(assert (=> d!16065 (= lt!31822 (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))))

(assert (=> d!16065 (= lt!31845 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun lt!31836 () Unit!1996)

(declare-fun lt!31826 () Unit!1996)

(assert (=> d!16065 (= lt!31836 lt!31826)))

(declare-fun lt!31827 () array!3863)

(assert (=> d!16065 (= (arrayCountValidKeys!0 lt!31827 (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (bvadd (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3863 (_ BitVec 32)) Unit!1996)

(assert (=> d!16065 (= lt!31826 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!31827 (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))))))

(assert (=> d!16065 (= lt!31827 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun lt!31847 () Unit!1996)

(declare-fun lt!31843 () Unit!1996)

(assert (=> d!16065 (= lt!31847 lt!31843)))

(declare-fun lt!31823 () array!3863)

(assert (=> d!16065 (arrayContainsKey!0 lt!31823 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!16065 (= lt!31843 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!31823 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))))))

(assert (=> d!16065 (= lt!31823 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun lt!31825 () Unit!1996)

(declare-fun lt!31842 () Unit!1996)

(assert (=> d!16065 (= lt!31825 lt!31842)))

(assert (=> d!16065 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (getCurrentListMap!411 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!12 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) (_ BitVec 64) V!2937 Int) Unit!1996)

(assert (=> d!16065 (= lt!31842 (lemmaAddValidKeyToArrayThenAddPairToListMap!12 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31819 () Unit!1996)

(declare-fun lt!31821 () Unit!1996)

(assert (=> d!16065 (= lt!31819 lt!31821)))

(assert (=> d!16065 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (mask!6148 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3863 (_ BitVec 32) (_ BitVec 32)) Unit!1996)

(assert (=> d!16065 (= lt!31821 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (mask!6148 newMap!16)))))

(declare-fun lt!31829 () Unit!1996)

(declare-fun lt!31841 () Unit!1996)

(assert (=> d!16065 (= lt!31829 lt!31841)))

(assert (=> d!16065 (= (arrayCountValidKeys!0 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3839 newMap!16) #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3863 (_ BitVec 32) (_ BitVec 64)) Unit!1996)

(assert (=> d!16065 (= lt!31841 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3839 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun lt!31820 () Unit!1996)

(declare-fun lt!31840 () Unit!1996)

(assert (=> d!16065 (= lt!31820 lt!31840)))

(declare-fun lt!31834 () (_ BitVec 32))

(declare-fun lt!31838 () List!1468)

(assert (=> d!16065 (arrayNoDuplicates!0 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) lt!31834 lt!31838)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3863 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1468) Unit!1996)

(assert (=> d!16065 (= lt!31840 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) lt!31834 lt!31838))))

(assert (=> d!16065 (= lt!31838 Nil!1465)))

(assert (=> d!16065 (= lt!31834 #b00000000000000000000000000000000)))

(declare-fun lt!31835 () Unit!1996)

(assert (=> d!16065 (= lt!31835 e!46826)))

(declare-fun c!10431 () Bool)

(assert (=> d!16065 (= c!10431 (arrayContainsKey!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!31830 () Unit!1996)

(assert (=> d!16065 (= lt!31830 e!46830)))

(assert (=> d!16065 (= c!10432 (contains!715 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!16065 (valid!301 newMap!16)))

(assert (=> d!16065 (= (updateHelperNewKey!23 newMap!16 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))) lt!31839)))

(assert (= (and d!16065 c!10432) b!71538))

(assert (= (and d!16065 (not c!10432)) b!71540))

(assert (= (and b!71538 res!38142) b!71543))

(assert (= (and b!71543 res!38147) b!71551))

(assert (= (and b!71540 c!10430) b!71537))

(assert (= (and b!71540 (not c!10430)) b!71544))

(assert (= (and b!71537 res!38145) b!71550))

(assert (= (and b!71550 res!38144) b!71549))

(assert (= (and b!71544 c!10433) b!71545))

(assert (= (and b!71544 (not c!10433)) b!71552))

(assert (= (and b!71545 res!38148) b!71546))

(assert (= (and b!71546 res!38149) b!71539))

(assert (= (or b!71537 b!71545) bm!6189))

(assert (= (or b!71549 b!71539) bm!6190))

(assert (= (or b!71543 bm!6189) bm!6191))

(assert (= (or b!71538 b!71540) bm!6188))

(assert (= (and d!16065 c!10431) b!71547))

(assert (= (and d!16065 (not c!10431)) b!71548))

(assert (= (and d!16065 res!38146) b!71536))

(assert (= (and b!71536 res!38143) b!71542))

(assert (= (and b!71542 res!38150) b!71541))

(declare-fun m!68899 () Bool)

(assert (=> b!71536 m!68899))

(assert (=> b!71540 m!67819))

(assert (=> b!71540 m!68107))

(assert (=> d!16065 m!67819))

(declare-fun m!68901 () Bool)

(assert (=> d!16065 m!68901))

(assert (=> d!16065 m!67987))

(assert (=> d!16065 m!67819))

(assert (=> d!16065 m!68093))

(declare-fun m!68903 () Bool)

(assert (=> d!16065 m!68903))

(declare-fun m!68905 () Bool)

(assert (=> d!16065 m!68905))

(declare-fun m!68907 () Bool)

(assert (=> d!16065 m!68907))

(assert (=> d!16065 m!67819))

(assert (=> d!16065 m!68109))

(assert (=> d!16065 m!67987))

(declare-fun m!68909 () Bool)

(assert (=> d!16065 m!68909))

(assert (=> d!16065 m!67819))

(declare-fun m!68911 () Bool)

(assert (=> d!16065 m!68911))

(declare-fun m!68913 () Bool)

(assert (=> d!16065 m!68913))

(assert (=> d!16065 m!68113))

(declare-fun m!68915 () Bool)

(assert (=> d!16065 m!68915))

(declare-fun m!68917 () Bool)

(assert (=> d!16065 m!68917))

(declare-fun m!68919 () Bool)

(assert (=> d!16065 m!68919))

(assert (=> d!16065 m!67987))

(assert (=> d!16065 m!68733))

(assert (=> d!16065 m!67819))

(declare-fun m!68921 () Bool)

(assert (=> d!16065 m!68921))

(declare-fun m!68923 () Bool)

(assert (=> d!16065 m!68923))

(assert (=> d!16065 m!67819))

(declare-fun m!68925 () Bool)

(assert (=> d!16065 m!68925))

(assert (=> d!16065 m!68919))

(assert (=> d!16065 m!68907))

(declare-fun m!68927 () Bool)

(assert (=> d!16065 m!68927))

(assert (=> d!16065 m!67819))

(declare-fun m!68929 () Bool)

(assert (=> d!16065 m!68929))

(declare-fun m!68931 () Bool)

(assert (=> d!16065 m!68931))

(declare-fun m!68933 () Bool)

(assert (=> d!16065 m!68933))

(assert (=> d!16065 m!67837))

(assert (=> d!16065 m!67819))

(declare-fun m!68935 () Bool)

(assert (=> d!16065 m!68935))

(declare-fun m!68937 () Bool)

(assert (=> b!71546 m!68937))

(declare-fun m!68939 () Bool)

(assert (=> b!71541 m!68939))

(assert (=> b!71541 m!67827))

(assert (=> b!71541 m!67827))

(declare-fun m!68941 () Bool)

(assert (=> b!71541 m!68941))

(assert (=> b!71542 m!68939))

(assert (=> b!71542 m!68939))

(assert (=> b!71542 m!67819))

(declare-fun m!68943 () Bool)

(assert (=> b!71542 m!68943))

(declare-fun m!68945 () Bool)

(assert (=> bm!6191 m!68945))

(declare-fun m!68947 () Bool)

(assert (=> b!71550 m!68947))

(assert (=> bm!6188 m!67819))

(assert (=> bm!6188 m!68061))

(assert (=> b!71547 m!67819))

(declare-fun m!68949 () Bool)

(assert (=> b!71547 m!68949))

(assert (=> b!71547 m!67987))

(assert (=> b!71547 m!67987))

(assert (=> b!71547 m!67819))

(assert (=> b!71547 m!68093))

(assert (=> b!71538 m!67819))

(assert (=> b!71538 m!68075))

(assert (=> bm!6190 m!67819))

(assert (=> bm!6190 m!68109))

(declare-fun m!68951 () Bool)

(assert (=> b!71551 m!68951))

(assert (=> bm!6114 d!16065))

(assert (=> bm!6054 d!15857))

(declare-fun d!16067 () Bool)

(declare-fun e!46832 () Bool)

(assert (=> d!16067 e!46832))

(declare-fun res!38151 () Bool)

(assert (=> d!16067 (=> res!38151 e!46832)))

(declare-fun lt!31851 () Bool)

(assert (=> d!16067 (= res!38151 (not lt!31851))))

(declare-fun lt!31850 () Bool)

(assert (=> d!16067 (= lt!31851 lt!31850)))

(declare-fun lt!31849 () Unit!1996)

(declare-fun e!46831 () Unit!1996)

(assert (=> d!16067 (= lt!31849 e!46831)))

(declare-fun c!10434 () Bool)

(assert (=> d!16067 (= c!10434 lt!31850)))

(assert (=> d!16067 (= lt!31850 (containsKey!136 (toList!713 lt!31516) (_1!1066 lt!31228)))))

(assert (=> d!16067 (= (contains!715 lt!31516 (_1!1066 lt!31228)) lt!31851)))

(declare-fun b!71553 () Bool)

(declare-fun lt!31848 () Unit!1996)

(assert (=> b!71553 (= e!46831 lt!31848)))

(assert (=> b!71553 (= lt!31848 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31516) (_1!1066 lt!31228)))))

(assert (=> b!71553 (isDefined!85 (getValueByKey!133 (toList!713 lt!31516) (_1!1066 lt!31228)))))

(declare-fun b!71554 () Bool)

(declare-fun Unit!2029 () Unit!1996)

(assert (=> b!71554 (= e!46831 Unit!2029)))

(declare-fun b!71555 () Bool)

(assert (=> b!71555 (= e!46832 (isDefined!85 (getValueByKey!133 (toList!713 lt!31516) (_1!1066 lt!31228))))))

(assert (= (and d!16067 c!10434) b!71553))

(assert (= (and d!16067 (not c!10434)) b!71554))

(assert (= (and d!16067 (not res!38151)) b!71555))

(declare-fun m!68953 () Bool)

(assert (=> d!16067 m!68953))

(declare-fun m!68955 () Bool)

(assert (=> b!71553 m!68955))

(assert (=> b!71553 m!68207))

(assert (=> b!71553 m!68207))

(declare-fun m!68957 () Bool)

(assert (=> b!71553 m!68957))

(assert (=> b!71555 m!68207))

(assert (=> b!71555 m!68207))

(assert (=> b!71555 m!68957))

(assert (=> d!15865 d!16067))

(declare-fun b!71557 () Bool)

(declare-fun e!46833 () Option!139)

(declare-fun e!46834 () Option!139)

(assert (=> b!71557 (= e!46833 e!46834)))

(declare-fun c!10436 () Bool)

(assert (=> b!71557 (= c!10436 (and ((_ is Cons!1463) lt!31514) (not (= (_1!1066 (h!2049 lt!31514)) (_1!1066 lt!31228)))))))

(declare-fun b!71559 () Bool)

(assert (=> b!71559 (= e!46834 None!137)))

(declare-fun b!71558 () Bool)

(assert (=> b!71558 (= e!46834 (getValueByKey!133 (t!4995 lt!31514) (_1!1066 lt!31228)))))

(declare-fun d!16069 () Bool)

(declare-fun c!10435 () Bool)

(assert (=> d!16069 (= c!10435 (and ((_ is Cons!1463) lt!31514) (= (_1!1066 (h!2049 lt!31514)) (_1!1066 lt!31228))))))

(assert (=> d!16069 (= (getValueByKey!133 lt!31514 (_1!1066 lt!31228)) e!46833)))

(declare-fun b!71556 () Bool)

(assert (=> b!71556 (= e!46833 (Some!138 (_2!1066 (h!2049 lt!31514))))))

(assert (= (and d!16069 c!10435) b!71556))

(assert (= (and d!16069 (not c!10435)) b!71557))

(assert (= (and b!71557 c!10436) b!71558))

(assert (= (and b!71557 (not c!10436)) b!71559))

(declare-fun m!68959 () Bool)

(assert (=> b!71558 m!68959))

(assert (=> d!15865 d!16069))

(declare-fun d!16071 () Bool)

(assert (=> d!16071 (= (getValueByKey!133 lt!31514 (_1!1066 lt!31228)) (Some!138 (_2!1066 lt!31228)))))

(declare-fun lt!31852 () Unit!1996)

(assert (=> d!16071 (= lt!31852 (choose!406 lt!31514 (_1!1066 lt!31228) (_2!1066 lt!31228)))))

(declare-fun e!46835 () Bool)

(assert (=> d!16071 e!46835))

(declare-fun res!38152 () Bool)

(assert (=> d!16071 (=> (not res!38152) (not e!46835))))

(assert (=> d!16071 (= res!38152 (isStrictlySorted!278 lt!31514))))

(assert (=> d!16071 (= (lemmaContainsTupThenGetReturnValue!50 lt!31514 (_1!1066 lt!31228) (_2!1066 lt!31228)) lt!31852)))

(declare-fun b!71560 () Bool)

(declare-fun res!38153 () Bool)

(assert (=> b!71560 (=> (not res!38153) (not e!46835))))

(assert (=> b!71560 (= res!38153 (containsKey!136 lt!31514 (_1!1066 lt!31228)))))

(declare-fun b!71561 () Bool)

(assert (=> b!71561 (= e!46835 (contains!719 lt!31514 (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(assert (= (and d!16071 res!38152) b!71560))

(assert (= (and b!71560 res!38153) b!71561))

(assert (=> d!16071 m!68201))

(declare-fun m!68961 () Bool)

(assert (=> d!16071 m!68961))

(declare-fun m!68963 () Bool)

(assert (=> d!16071 m!68963))

(declare-fun m!68965 () Bool)

(assert (=> b!71560 m!68965))

(declare-fun m!68967 () Bool)

(assert (=> b!71561 m!68967))

(assert (=> d!15865 d!16071))

(declare-fun b!71562 () Bool)

(declare-fun e!46840 () List!1467)

(declare-fun call!6197 () List!1467)

(assert (=> b!71562 (= e!46840 call!6197)))

(declare-fun bm!6192 () Bool)

(declare-fun c!10440 () Bool)

(declare-fun e!46839 () List!1467)

(assert (=> bm!6192 (= call!6197 ($colon$colon!64 e!46839 (ite c!10440 (h!2049 (toList!713 lt!31219)) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228)))))))

(declare-fun c!10439 () Bool)

(assert (=> bm!6192 (= c!10439 c!10440)))

(declare-fun d!16073 () Bool)

(declare-fun e!46838 () Bool)

(assert (=> d!16073 e!46838))

(declare-fun res!38155 () Bool)

(assert (=> d!16073 (=> (not res!38155) (not e!46838))))

(declare-fun lt!31853 () List!1467)

(assert (=> d!16073 (= res!38155 (isStrictlySorted!278 lt!31853))))

(assert (=> d!16073 (= lt!31853 e!46840)))

(assert (=> d!16073 (= c!10440 (and ((_ is Cons!1463) (toList!713 lt!31219)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 lt!31228))))))

(assert (=> d!16073 (isStrictlySorted!278 (toList!713 lt!31219))))

(assert (=> d!16073 (= (insertStrictlySorted!53 (toList!713 lt!31219) (_1!1066 lt!31228) (_2!1066 lt!31228)) lt!31853)))

(declare-fun b!71563 () Bool)

(declare-fun e!46836 () List!1467)

(declare-fun call!6195 () List!1467)

(assert (=> b!71563 (= e!46836 call!6195)))

(declare-fun b!71564 () Bool)

(declare-fun c!10437 () Bool)

(assert (=> b!71564 (= c!10437 (and ((_ is Cons!1463) (toList!713 lt!31219)) (bvsgt (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 lt!31228))))))

(declare-fun e!46837 () List!1467)

(assert (=> b!71564 (= e!46836 e!46837)))

(declare-fun b!71565 () Bool)

(declare-fun call!6196 () List!1467)

(assert (=> b!71565 (= e!46837 call!6196)))

(declare-fun b!71566 () Bool)

(assert (=> b!71566 (= e!46837 call!6196)))

(declare-fun b!71567 () Bool)

(declare-fun res!38154 () Bool)

(assert (=> b!71567 (=> (not res!38154) (not e!46838))))

(assert (=> b!71567 (= res!38154 (containsKey!136 lt!31853 (_1!1066 lt!31228)))))

(declare-fun b!71568 () Bool)

(declare-fun c!10438 () Bool)

(assert (=> b!71568 (= e!46839 (ite c!10438 (t!4995 (toList!713 lt!31219)) (ite c!10437 (Cons!1463 (h!2049 (toList!713 lt!31219)) (t!4995 (toList!713 lt!31219))) Nil!1464)))))

(declare-fun bm!6193 () Bool)

(assert (=> bm!6193 (= call!6195 call!6197)))

(declare-fun b!71569 () Bool)

(assert (=> b!71569 (= e!46840 e!46836)))

(assert (=> b!71569 (= c!10438 (and ((_ is Cons!1463) (toList!713 lt!31219)) (= (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 lt!31228))))))

(declare-fun bm!6194 () Bool)

(assert (=> bm!6194 (= call!6196 call!6195)))

(declare-fun b!71570 () Bool)

(assert (=> b!71570 (= e!46839 (insertStrictlySorted!53 (t!4995 (toList!713 lt!31219)) (_1!1066 lt!31228) (_2!1066 lt!31228)))))

(declare-fun b!71571 () Bool)

(assert (=> b!71571 (= e!46838 (contains!719 lt!31853 (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(assert (= (and d!16073 c!10440) b!71562))

(assert (= (and d!16073 (not c!10440)) b!71569))

(assert (= (and b!71569 c!10438) b!71563))

(assert (= (and b!71569 (not c!10438)) b!71564))

(assert (= (and b!71564 c!10437) b!71565))

(assert (= (and b!71564 (not c!10437)) b!71566))

(assert (= (or b!71565 b!71566) bm!6194))

(assert (= (or b!71563 bm!6194) bm!6193))

(assert (= (or b!71562 bm!6193) bm!6192))

(assert (= (and bm!6192 c!10439) b!71570))

(assert (= (and bm!6192 (not c!10439)) b!71568))

(assert (= (and d!16073 res!38155) b!71567))

(assert (= (and b!71567 res!38154) b!71571))

(declare-fun m!68969 () Bool)

(assert (=> b!71567 m!68969))

(declare-fun m!68971 () Bool)

(assert (=> b!71571 m!68971))

(declare-fun m!68973 () Bool)

(assert (=> bm!6192 m!68973))

(declare-fun m!68975 () Bool)

(assert (=> d!16073 m!68975))

(assert (=> d!16073 m!68821))

(declare-fun m!68977 () Bool)

(assert (=> b!71570 m!68977))

(assert (=> d!15865 d!16073))

(assert (=> b!71061 d!15989))

(declare-fun bm!6195 () Bool)

(declare-fun call!6200 () ListLongMap!1395)

(declare-fun call!6198 () ListLongMap!1395)

(assert (=> bm!6195 (= call!6200 call!6198)))

(declare-fun b!71572 () Bool)

(declare-fun e!46846 () ListLongMap!1395)

(assert (=> b!71572 (= e!46846 call!6200)))

(declare-fun b!71573 () Bool)

(declare-fun e!46843 () ListLongMap!1395)

(assert (=> b!71573 (= e!46843 (+!91 call!6198 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun b!71574 () Bool)

(declare-fun res!38156 () Bool)

(declare-fun e!46847 () Bool)

(assert (=> b!71574 (=> (not res!38156) (not e!46847))))

(declare-fun e!46851 () Bool)

(assert (=> b!71574 (= res!38156 e!46851)))

(declare-fun c!10443 () Bool)

(assert (=> b!71574 (= c!10443 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6196 () Bool)

(declare-fun call!6203 () Bool)

(declare-fun lt!31874 () ListLongMap!1395)

(assert (=> bm!6196 (= call!6203 (contains!715 lt!31874 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6197 () Bool)

(declare-fun call!6204 () Bool)

(assert (=> bm!6197 (= call!6204 (contains!715 lt!31874 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6198 () Bool)

(declare-fun call!6201 () ListLongMap!1395)

(assert (=> bm!6198 (= call!6201 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71575 () Bool)

(declare-fun res!38164 () Bool)

(assert (=> b!71575 (=> (not res!38164) (not e!46847))))

(declare-fun e!46850 () Bool)

(assert (=> b!71575 (= res!38164 e!46850)))

(declare-fun res!38161 () Bool)

(assert (=> b!71575 (=> res!38161 e!46850)))

(declare-fun e!46848 () Bool)

(assert (=> b!71575 (= res!38161 (not e!46848))))

(declare-fun res!38157 () Bool)

(assert (=> b!71575 (=> (not res!38157) (not e!46848))))

(assert (=> b!71575 (= res!38157 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71576 () Bool)

(declare-fun e!46842 () Bool)

(assert (=> b!71576 (= e!46847 e!46842)))

(declare-fun c!10441 () Bool)

(assert (=> b!71576 (= c!10441 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71577 () Bool)

(declare-fun e!46852 () Bool)

(assert (=> b!71577 (= e!46852 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71578 () Bool)

(declare-fun c!10446 () Bool)

(assert (=> b!71578 (= c!10446 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46853 () ListLongMap!1395)

(assert (=> b!71578 (= e!46846 e!46853)))

(declare-fun b!71579 () Bool)

(declare-fun e!46844 () Unit!1996)

(declare-fun lt!31856 () Unit!1996)

(assert (=> b!71579 (= e!46844 lt!31856)))

(declare-fun lt!31867 () ListLongMap!1395)

(assert (=> b!71579 (= lt!31867 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31873 () (_ BitVec 64))

(assert (=> b!71579 (= lt!31873 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31870 () (_ BitVec 64))

(assert (=> b!71579 (= lt!31870 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31871 () Unit!1996)

(assert (=> b!71579 (= lt!31871 (addStillContains!50 lt!31867 lt!31873 (zeroValue!2095 newMap!16) lt!31870))))

(assert (=> b!71579 (contains!715 (+!91 lt!31867 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16))) lt!31870)))

(declare-fun lt!31865 () Unit!1996)

(assert (=> b!71579 (= lt!31865 lt!31871)))

(declare-fun lt!31868 () ListLongMap!1395)

(assert (=> b!71579 (= lt!31868 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31860 () (_ BitVec 64))

(assert (=> b!71579 (= lt!31860 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31872 () (_ BitVec 64))

(assert (=> b!71579 (= lt!31872 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31875 () Unit!1996)

(assert (=> b!71579 (= lt!31875 (addApplyDifferent!50 lt!31868 lt!31860 (minValue!2095 newMap!16) lt!31872))))

(assert (=> b!71579 (= (apply!74 (+!91 lt!31868 (tuple2!2111 lt!31860 (minValue!2095 newMap!16))) lt!31872) (apply!74 lt!31868 lt!31872))))

(declare-fun lt!31861 () Unit!1996)

(assert (=> b!71579 (= lt!31861 lt!31875)))

(declare-fun lt!31857 () ListLongMap!1395)

(assert (=> b!71579 (= lt!31857 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31863 () (_ BitVec 64))

(assert (=> b!71579 (= lt!31863 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31855 () (_ BitVec 64))

(assert (=> b!71579 (= lt!31855 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31858 () Unit!1996)

(assert (=> b!71579 (= lt!31858 (addApplyDifferent!50 lt!31857 lt!31863 (zeroValue!2095 newMap!16) lt!31855))))

(assert (=> b!71579 (= (apply!74 (+!91 lt!31857 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16))) lt!31855) (apply!74 lt!31857 lt!31855))))

(declare-fun lt!31862 () Unit!1996)

(assert (=> b!71579 (= lt!31862 lt!31858)))

(declare-fun lt!31866 () ListLongMap!1395)

(assert (=> b!71579 (= lt!31866 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31859 () (_ BitVec 64))

(assert (=> b!71579 (= lt!31859 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31864 () (_ BitVec 64))

(assert (=> b!71579 (= lt!31864 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71579 (= lt!31856 (addApplyDifferent!50 lt!31866 lt!31859 (minValue!2095 newMap!16) lt!31864))))

(assert (=> b!71579 (= (apply!74 (+!91 lt!31866 (tuple2!2111 lt!31859 (minValue!2095 newMap!16))) lt!31864) (apply!74 lt!31866 lt!31864))))

(declare-fun b!71580 () Bool)

(declare-fun call!6202 () ListLongMap!1395)

(assert (=> b!71580 (= e!46853 call!6202)))

(declare-fun bm!6199 () Bool)

(declare-fun c!10444 () Bool)

(declare-fun c!10445 () Bool)

(declare-fun call!6199 () ListLongMap!1395)

(assert (=> bm!6199 (= call!6198 (+!91 (ite c!10444 call!6201 (ite c!10445 call!6199 call!6202)) (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun b!71581 () Bool)

(declare-fun e!46845 () Bool)

(assert (=> b!71581 (= e!46842 e!46845)))

(declare-fun res!38159 () Bool)

(assert (=> b!71581 (= res!38159 call!6203)))

(assert (=> b!71581 (=> (not res!38159) (not e!46845))))

(declare-fun b!71582 () Bool)

(assert (=> b!71582 (= e!46845 (= (apply!74 lt!31874 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun bm!6200 () Bool)

(assert (=> bm!6200 (= call!6202 call!6199)))

(declare-fun b!71583 () Bool)

(assert (=> b!71583 (= e!46843 e!46846)))

(assert (=> b!71583 (= c!10445 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71584 () Bool)

(declare-fun e!46841 () Bool)

(assert (=> b!71584 (= e!46851 e!46841)))

(declare-fun res!38160 () Bool)

(assert (=> b!71584 (= res!38160 call!6204)))

(assert (=> b!71584 (=> (not res!38160) (not e!46841))))

(declare-fun bm!6201 () Bool)

(assert (=> bm!6201 (= call!6199 call!6201)))

(declare-fun b!71585 () Bool)

(declare-fun e!46849 () Bool)

(assert (=> b!71585 (= e!46849 (= (apply!74 lt!31874 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71585 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))))))))

(assert (=> b!71585 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun d!16075 () Bool)

(assert (=> d!16075 e!46847))

(declare-fun res!38162 () Bool)

(assert (=> d!16075 (=> (not res!38162) (not e!46847))))

(assert (=> d!16075 (= res!38162 (or (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))))

(declare-fun lt!31854 () ListLongMap!1395)

(assert (=> d!16075 (= lt!31874 lt!31854)))

(declare-fun lt!31869 () Unit!1996)

(assert (=> d!16075 (= lt!31869 e!46844)))

(declare-fun c!10442 () Bool)

(assert (=> d!16075 (= c!10442 e!46852)))

(declare-fun res!38158 () Bool)

(assert (=> d!16075 (=> (not res!38158) (not e!46852))))

(assert (=> d!16075 (= res!38158 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16075 (= lt!31854 e!46843)))

(assert (=> d!16075 (= c!10444 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16075 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16075 (= (getCurrentListMap!411 (_keys!3839 newMap!16) (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31874)))

(declare-fun b!71586 () Bool)

(declare-fun Unit!2030 () Unit!1996)

(assert (=> b!71586 (= e!46844 Unit!2030)))

(declare-fun b!71587 () Bool)

(assert (=> b!71587 (= e!46841 (= (apply!74 lt!31874 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!71588 () Bool)

(assert (=> b!71588 (= e!46848 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71589 () Bool)

(assert (=> b!71589 (= e!46842 (not call!6203))))

(declare-fun b!71590 () Bool)

(assert (=> b!71590 (= e!46851 (not call!6204))))

(declare-fun b!71591 () Bool)

(assert (=> b!71591 (= e!46850 e!46849)))

(declare-fun res!38163 () Bool)

(assert (=> b!71591 (=> (not res!38163) (not e!46849))))

(assert (=> b!71591 (= res!38163 (contains!715 lt!31874 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71591 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71592 () Bool)

(assert (=> b!71592 (= e!46853 call!6200)))

(assert (= (and d!16075 c!10444) b!71573))

(assert (= (and d!16075 (not c!10444)) b!71583))

(assert (= (and b!71583 c!10445) b!71572))

(assert (= (and b!71583 (not c!10445)) b!71578))

(assert (= (and b!71578 c!10446) b!71592))

(assert (= (and b!71578 (not c!10446)) b!71580))

(assert (= (or b!71592 b!71580) bm!6200))

(assert (= (or b!71572 bm!6200) bm!6201))

(assert (= (or b!71572 b!71592) bm!6195))

(assert (= (or b!71573 bm!6201) bm!6198))

(assert (= (or b!71573 bm!6195) bm!6199))

(assert (= (and d!16075 res!38158) b!71577))

(assert (= (and d!16075 c!10442) b!71579))

(assert (= (and d!16075 (not c!10442)) b!71586))

(assert (= (and d!16075 res!38162) b!71575))

(assert (= (and b!71575 res!38157) b!71588))

(assert (= (and b!71575 (not res!38161)) b!71591))

(assert (= (and b!71591 res!38163) b!71585))

(assert (= (and b!71575 res!38164) b!71574))

(assert (= (and b!71574 c!10443) b!71584))

(assert (= (and b!71574 (not c!10443)) b!71590))

(assert (= (and b!71584 res!38160) b!71587))

(assert (= (or b!71584 b!71590) bm!6197))

(assert (= (and b!71574 res!38156) b!71576))

(assert (= (and b!71576 c!10441) b!71581))

(assert (= (and b!71576 (not c!10441)) b!71589))

(assert (= (and b!71581 res!38159) b!71582))

(assert (= (or b!71581 b!71589) bm!6196))

(declare-fun b_lambda!3209 () Bool)

(assert (=> (not b_lambda!3209) (not b!71585)))

(assert (=> b!71585 t!5010))

(declare-fun b_and!4405 () Bool)

(assert (= b_and!4401 (and (=> t!5010 result!2661) b_and!4405)))

(assert (=> b!71585 t!5012))

(declare-fun b_and!4407 () Bool)

(assert (= b_and!4403 (and (=> t!5012 result!2663) b_and!4407)))

(declare-fun m!68979 () Bool)

(assert (=> b!71587 m!68979))

(declare-fun m!68981 () Bool)

(assert (=> b!71582 m!68981))

(assert (=> d!16075 m!68327))

(declare-fun m!68983 () Bool)

(assert (=> bm!6196 m!68983))

(assert (=> b!71588 m!68397))

(assert (=> b!71588 m!68397))

(assert (=> b!71588 m!68399))

(declare-fun m!68985 () Bool)

(assert (=> bm!6197 m!68985))

(assert (=> b!71591 m!68397))

(assert (=> b!71591 m!68397))

(declare-fun m!68987 () Bool)

(assert (=> b!71591 m!68987))

(assert (=> b!71577 m!68397))

(assert (=> b!71577 m!68397))

(assert (=> b!71577 m!68399))

(declare-fun m!68989 () Bool)

(assert (=> bm!6199 m!68989))

(declare-fun m!68991 () Bool)

(assert (=> bm!6198 m!68991))

(declare-fun m!68993 () Bool)

(assert (=> b!71573 m!68993))

(declare-fun m!68995 () Bool)

(assert (=> b!71579 m!68995))

(declare-fun m!68997 () Bool)

(assert (=> b!71579 m!68997))

(declare-fun m!68999 () Bool)

(assert (=> b!71579 m!68999))

(declare-fun m!69001 () Bool)

(assert (=> b!71579 m!69001))

(declare-fun m!69003 () Bool)

(assert (=> b!71579 m!69003))

(declare-fun m!69005 () Bool)

(assert (=> b!71579 m!69005))

(declare-fun m!69007 () Bool)

(assert (=> b!71579 m!69007))

(declare-fun m!69009 () Bool)

(assert (=> b!71579 m!69009))

(assert (=> b!71579 m!68397))

(assert (=> b!71579 m!69003))

(declare-fun m!69011 () Bool)

(assert (=> b!71579 m!69011))

(assert (=> b!71579 m!68999))

(declare-fun m!69013 () Bool)

(assert (=> b!71579 m!69013))

(declare-fun m!69015 () Bool)

(assert (=> b!71579 m!69015))

(declare-fun m!69017 () Bool)

(assert (=> b!71579 m!69017))

(declare-fun m!69019 () Bool)

(assert (=> b!71579 m!69019))

(assert (=> b!71579 m!68991))

(assert (=> b!71579 m!69013))

(declare-fun m!69021 () Bool)

(assert (=> b!71579 m!69021))

(declare-fun m!69023 () Bool)

(assert (=> b!71579 m!69023))

(assert (=> b!71579 m!69007))

(assert (=> b!71585 m!68441))

(assert (=> b!71585 m!68397))

(declare-fun m!69025 () Bool)

(assert (=> b!71585 m!69025))

(declare-fun m!69027 () Bool)

(assert (=> b!71585 m!69027))

(assert (=> b!71585 m!68441))

(declare-fun m!69029 () Bool)

(assert (=> b!71585 m!69029))

(assert (=> b!71585 m!69027))

(assert (=> b!71585 m!68397))

(assert (=> bm!6116 d!16075))

(declare-fun mapNonEmpty!3157 () Bool)

(declare-fun mapRes!3157 () Bool)

(declare-fun tp!8503 () Bool)

(declare-fun e!46854 () Bool)

(assert (=> mapNonEmpty!3157 (= mapRes!3157 (and tp!8503 e!46854))))

(declare-fun mapValue!3157 () ValueCell!890)

(declare-fun mapKey!3157 () (_ BitVec 32))

(declare-fun mapRest!3157 () (Array (_ BitVec 32) ValueCell!890))

(assert (=> mapNonEmpty!3157 (= mapRest!3156 (store mapRest!3157 mapKey!3157 mapValue!3157))))

(declare-fun mapIsEmpty!3157 () Bool)

(assert (=> mapIsEmpty!3157 mapRes!3157))

(declare-fun condMapEmpty!3157 () Bool)

(declare-fun mapDefault!3157 () ValueCell!890)

(assert (=> mapNonEmpty!3156 (= condMapEmpty!3157 (= mapRest!3156 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3157)))))

(declare-fun e!46855 () Bool)

(assert (=> mapNonEmpty!3156 (= tp!8502 (and e!46855 mapRes!3157))))

(declare-fun b!71594 () Bool)

(assert (=> b!71594 (= e!46855 tp_is_empty!2467)))

(declare-fun b!71593 () Bool)

(assert (=> b!71593 (= e!46854 tp_is_empty!2467)))

(assert (= (and mapNonEmpty!3156 condMapEmpty!3157) mapIsEmpty!3157))

(assert (= (and mapNonEmpty!3156 (not condMapEmpty!3157)) mapNonEmpty!3157))

(assert (= (and mapNonEmpty!3157 ((_ is ValueCellFull!890) mapValue!3157)) b!71593))

(assert (= (and mapNonEmpty!3156 ((_ is ValueCellFull!890) mapDefault!3157)) b!71594))

(declare-fun m!69031 () Bool)

(assert (=> mapNonEmpty!3157 m!69031))

(declare-fun mapNonEmpty!3158 () Bool)

(declare-fun mapRes!3158 () Bool)

(declare-fun tp!8504 () Bool)

(declare-fun e!46856 () Bool)

(assert (=> mapNonEmpty!3158 (= mapRes!3158 (and tp!8504 e!46856))))

(declare-fun mapValue!3158 () ValueCell!890)

(declare-fun mapKey!3158 () (_ BitVec 32))

(declare-fun mapRest!3158 () (Array (_ BitVec 32) ValueCell!890))

(assert (=> mapNonEmpty!3158 (= mapRest!3155 (store mapRest!3158 mapKey!3158 mapValue!3158))))

(declare-fun mapIsEmpty!3158 () Bool)

(assert (=> mapIsEmpty!3158 mapRes!3158))

(declare-fun condMapEmpty!3158 () Bool)

(declare-fun mapDefault!3158 () ValueCell!890)

(assert (=> mapNonEmpty!3155 (= condMapEmpty!3158 (= mapRest!3155 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3158)))))

(declare-fun e!46857 () Bool)

(assert (=> mapNonEmpty!3155 (= tp!8501 (and e!46857 mapRes!3158))))

(declare-fun b!71596 () Bool)

(assert (=> b!71596 (= e!46857 tp_is_empty!2467)))

(declare-fun b!71595 () Bool)

(assert (=> b!71595 (= e!46856 tp_is_empty!2467)))

(assert (= (and mapNonEmpty!3155 condMapEmpty!3158) mapIsEmpty!3158))

(assert (= (and mapNonEmpty!3155 (not condMapEmpty!3158)) mapNonEmpty!3158))

(assert (= (and mapNonEmpty!3158 ((_ is ValueCellFull!890) mapValue!3158)) b!71595))

(assert (= (and mapNonEmpty!3155 ((_ is ValueCellFull!890) mapDefault!3158)) b!71596))

(declare-fun m!69033 () Bool)

(assert (=> mapNonEmpty!3158 m!69033))

(declare-fun b_lambda!3211 () Bool)

(assert (= b_lambda!3209 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3211)))

(declare-fun b_lambda!3213 () Bool)

(assert (= b_lambda!3207 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3213)))

(declare-fun b_lambda!3215 () Bool)

(assert (= b_lambda!3205 (or (and b!70696 b_free!2101) (and b!70685 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))) b_lambda!3215)))

(declare-fun b_lambda!3217 () Bool)

(assert (= b_lambda!3203 (or (and b!70696 b_free!2101) (and b!70685 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))) b_lambda!3217)))

(declare-fun b_lambda!3219 () Bool)

(assert (= b_lambda!3201 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3219)))

(check-sat (not d!15997) (not b!71370) (not b!71373) (not d!16025) (not d!15991) (not b!71353) (not d!15967) (not b!71475) (not d!15981) (not b!71259) (not b!71540) (not bm!6188) (not b!71414) (not bm!6162) (not b!71146) (not d!15929) (not b_lambda!3195) (not b!71409) (not d!15897) (not b!71379) (not b!71228) (not bm!6175) (not b!71542) (not b!71300) (not b!71227) (not d!15965) (not bm!6199) (not b!71260) (not b!71418) (not bm!6157) (not d!15905) (not b!71587) (not b!71299) (not b_lambda!3215) (not d!16055) (not d!16009) (not d!15985) (not d!15921) (not b_lambda!3187) (not b!71159) (not b!71128) (not d!16045) (not bm!6152) (not b!71588) (not b!71495) (not d!16015) (not b!71249) (not b!71161) (not d!15979) (not d!15917) (not bm!6155) (not b!71293) (not b!71306) (not b!71283) (not d!15883) (not d!16019) (not b!71201) (not bm!6147) (not b!71258) (not b!71494) (not d!15935) (not b!71136) (not b!71148) (not d!15937) (not b!71138) (not b!71298) (not b!71168) (not d!16013) (not b!71359) (not bm!6176) (not b!71446) (not bm!6177) (not b!71142) (not b!71582) (not b!71285) (not d!15959) (not b_lambda!3197) (not b!71555) (not b_lambda!3219) (not b!71278) (not d!15909) (not b!71573) (not b!71219) (not bm!6196) (not b!71395) (not d!15875) (not b!71560) (not b!71541) (not d!16061) (not b_next!2101) (not b!71339) (not d!15963) (not b!71141) (not b!71205) (not d!15907) (not d!15999) (not d!16017) (not b!71296) (not b!71140) (not b!71482) (not b!71337) (not b!71125) (not b!71485) (not b!71217) (not b!71273) (not bm!6148) (not b!71247) (not b!71213) (not d!16071) (not b!71204) (not mapNonEmpty!3158) (not b!71398) (not d!15933) (not b!71424) (not b!71250) (not bm!6146) (not b!71375) (not b!71389) (not d!15957) (not b!71361) (not b!71376) (not b!71341) (not b!71303) (not b!71570) (not b!71430) (not b!71479) (not b!71383) (not b!71447) (not b!71206) (not b!71484) (not d!15987) (not d!15887) (not d!15995) (not b!71367) (not bm!6198) (not bm!6159) (not b_lambda!3199) (not b!71477) (not d!15873) (not d!15961) (not d!15977) (not b!71143) (not b!71239) (not bm!6161) (not d!15891) (not d!16063) (not bm!6165) (not b!71344) (not b!71209) (not b!71261) (not d!15903) (not d!16011) (not d!15955) (not b!71284) (not b!71553) (not b!71579) (not d!15919) (not b!71381) (not b!71591) (not bm!6156) (not b!71388) (not b!71325) (not b!71434) (not b!71122) (not d!15879) (not b!71240) (not d!15947) (not b!71408) (not b!71256) (not d!15953) (not d!16041) (not d!15889) (not d!15943) (not b!71308) (not bm!6191) (not bm!6197) (not bm!6190) (not b!71139) (not b!71243) (not b!71127) (not b_next!2103) (not b!71130) (not b!71165) (not d!16073) (not b_lambda!3213) (not d!15973) (not bm!6142) (not b!71129) (not d!15885) (not b!71211) (not d!15927) (not b!71309) (not b!71561) (not d!15881) (not b!71131) (not d!16029) (not d!15969) (not d!15913) (not b!71577) (not b!71433) (not b!71336) (not b!71399) (not b!71252) (not d!15915) (not b!71291) (not d!15895) (not b!71163) (not b!71281) (not b!71222) (not b!71547) (not b!71342) (not bm!6160) (not b!71282) (not b!71144) (not d!15951) (not d!16049) (not b!71174) (not d!15923) (not mapNonEmpty!3157) (not d!16075) (not d!15893) (not b!71301) (not b!71257) (not bm!6192) (not d!16051) (not b!71147) (not d!16021) (not b!71145) (not b!71124) (not b!71225) (not b!71571) (not b!71175) (not b!71567) (not b!71279) (not b!71585) (not d!16005) (not b!71386) (not b!71365) (not d!15925) (not b!71231) (not bm!6149) (not b!71162) (not b!71350) (not d!16059) (not b!71311) (not b!71335) (not b!71345) (not b!71294) (not b!71287) (not b!71436) (not d!16065) (not b!71238) (not b!71302) (not bm!6170) (not d!16027) (not b!71348) (not b!71290) (not b!71338) (not d!16007) (not b_lambda!3211) (not b!71501) (not d!16001) (not b!71208) (not b!71538) b_and!4405 (not b!71356) (not b!71357) (not d!16067) (not b!71251) (not b!71491) tp_is_empty!2467 (not d!15975) (not b!71558) b_and!4407 (not b_lambda!3217) (not b!71137) (not d!15971) (not b!71536) (not d!15945))
(check-sat b_and!4405 b_and!4407 (not b_next!2101) (not b_next!2103))
(get-model)

(declare-fun d!16077 () Bool)

(declare-fun e!46858 () Bool)

(assert (=> d!16077 e!46858))

(declare-fun res!38165 () Bool)

(assert (=> d!16077 (=> (not res!38165) (not e!46858))))

(declare-fun lt!31879 () ListLongMap!1395)

(assert (=> d!16077 (= res!38165 (contains!715 lt!31879 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun lt!31877 () List!1467)

(assert (=> d!16077 (= lt!31879 (ListLongMap!1396 lt!31877))))

(declare-fun lt!31878 () Unit!1996)

(declare-fun lt!31876 () Unit!1996)

(assert (=> d!16077 (= lt!31878 lt!31876)))

(assert (=> d!16077 (= (getValueByKey!133 lt!31877 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!16077 (= lt!31876 (lemmaContainsTupThenGetReturnValue!50 lt!31877 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!16077 (= lt!31877 (insertStrictlySorted!53 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!16077 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) lt!31879)))

(declare-fun b!71597 () Bool)

(declare-fun res!38166 () Bool)

(assert (=> b!71597 (=> (not res!38166) (not e!46858))))

(assert (=> b!71597 (= res!38166 (= (getValueByKey!133 (toList!713 lt!31879) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun b!71598 () Bool)

(assert (=> b!71598 (= e!46858 (contains!719 (toList!713 lt!31879) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(assert (= (and d!16077 res!38165) b!71597))

(assert (= (and b!71597 res!38166) b!71598))

(declare-fun m!69035 () Bool)

(assert (=> d!16077 m!69035))

(declare-fun m!69037 () Bool)

(assert (=> d!16077 m!69037))

(declare-fun m!69039 () Bool)

(assert (=> d!16077 m!69039))

(declare-fun m!69041 () Bool)

(assert (=> d!16077 m!69041))

(declare-fun m!69043 () Bool)

(assert (=> b!71597 m!69043))

(declare-fun m!69045 () Bool)

(assert (=> b!71598 m!69045))

(assert (=> b!71356 d!16077))

(assert (=> b!71356 d!16019))

(declare-fun bm!6202 () Bool)

(declare-fun call!6207 () ListLongMap!1395)

(declare-fun call!6205 () ListLongMap!1395)

(assert (=> bm!6202 (= call!6207 call!6205)))

(declare-fun b!71599 () Bool)

(declare-fun e!46864 () ListLongMap!1395)

(assert (=> b!71599 (= e!46864 call!6207)))

(declare-fun b!71600 () Bool)

(declare-fun e!46861 () ListLongMap!1395)

(assert (=> b!71600 (= e!46861 (+!91 call!6205 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun b!71601 () Bool)

(declare-fun res!38167 () Bool)

(declare-fun e!46865 () Bool)

(assert (=> b!71601 (=> (not res!38167) (not e!46865))))

(declare-fun e!46869 () Bool)

(assert (=> b!71601 (= res!38167 e!46869)))

(declare-fun c!10449 () Bool)

(assert (=> b!71601 (= c!10449 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6203 () Bool)

(declare-fun call!6210 () Bool)

(declare-fun lt!31900 () ListLongMap!1395)

(assert (=> bm!6203 (= call!6210 (contains!715 lt!31900 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6204 () Bool)

(declare-fun call!6211 () Bool)

(assert (=> bm!6204 (= call!6211 (contains!715 lt!31900 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6205 () Bool)

(declare-fun call!6208 () ListLongMap!1395)

(assert (=> bm!6205 (= call!6208 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71602 () Bool)

(declare-fun res!38175 () Bool)

(assert (=> b!71602 (=> (not res!38175) (not e!46865))))

(declare-fun e!46868 () Bool)

(assert (=> b!71602 (= res!38175 e!46868)))

(declare-fun res!38172 () Bool)

(assert (=> b!71602 (=> res!38172 e!46868)))

(declare-fun e!46866 () Bool)

(assert (=> b!71602 (= res!38172 (not e!46866))))

(declare-fun res!38168 () Bool)

(assert (=> b!71602 (=> (not res!38168) (not e!46866))))

(assert (=> b!71602 (= res!38168 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71603 () Bool)

(declare-fun e!46860 () Bool)

(assert (=> b!71603 (= e!46865 e!46860)))

(declare-fun c!10447 () Bool)

(assert (=> b!71603 (= c!10447 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71604 () Bool)

(declare-fun e!46870 () Bool)

(assert (=> b!71604 (= e!46870 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71605 () Bool)

(declare-fun c!10452 () Bool)

(assert (=> b!71605 (= c!10452 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46871 () ListLongMap!1395)

(assert (=> b!71605 (= e!46864 e!46871)))

(declare-fun b!71606 () Bool)

(declare-fun e!46862 () Unit!1996)

(declare-fun lt!31882 () Unit!1996)

(assert (=> b!71606 (= e!46862 lt!31882)))

(declare-fun lt!31893 () ListLongMap!1395)

(assert (=> b!71606 (= lt!31893 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31899 () (_ BitVec 64))

(assert (=> b!71606 (= lt!31899 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31896 () (_ BitVec 64))

(assert (=> b!71606 (= lt!31896 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31897 () Unit!1996)

(assert (=> b!71606 (= lt!31897 (addStillContains!50 lt!31893 lt!31899 (zeroValue!2095 newMap!16) lt!31896))))

(assert (=> b!71606 (contains!715 (+!91 lt!31893 (tuple2!2111 lt!31899 (zeroValue!2095 newMap!16))) lt!31896)))

(declare-fun lt!31891 () Unit!1996)

(assert (=> b!71606 (= lt!31891 lt!31897)))

(declare-fun lt!31894 () ListLongMap!1395)

(assert (=> b!71606 (= lt!31894 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31886 () (_ BitVec 64))

(assert (=> b!71606 (= lt!31886 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31898 () (_ BitVec 64))

(assert (=> b!71606 (= lt!31898 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31901 () Unit!1996)

(assert (=> b!71606 (= lt!31901 (addApplyDifferent!50 lt!31894 lt!31886 (minValue!2095 newMap!16) lt!31898))))

(assert (=> b!71606 (= (apply!74 (+!91 lt!31894 (tuple2!2111 lt!31886 (minValue!2095 newMap!16))) lt!31898) (apply!74 lt!31894 lt!31898))))

(declare-fun lt!31887 () Unit!1996)

(assert (=> b!71606 (= lt!31887 lt!31901)))

(declare-fun lt!31883 () ListLongMap!1395)

(assert (=> b!71606 (= lt!31883 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31889 () (_ BitVec 64))

(assert (=> b!71606 (= lt!31889 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31881 () (_ BitVec 64))

(assert (=> b!71606 (= lt!31881 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31884 () Unit!1996)

(assert (=> b!71606 (= lt!31884 (addApplyDifferent!50 lt!31883 lt!31889 (zeroValue!2095 newMap!16) lt!31881))))

(assert (=> b!71606 (= (apply!74 (+!91 lt!31883 (tuple2!2111 lt!31889 (zeroValue!2095 newMap!16))) lt!31881) (apply!74 lt!31883 lt!31881))))

(declare-fun lt!31888 () Unit!1996)

(assert (=> b!71606 (= lt!31888 lt!31884)))

(declare-fun lt!31892 () ListLongMap!1395)

(assert (=> b!71606 (= lt!31892 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31885 () (_ BitVec 64))

(assert (=> b!71606 (= lt!31885 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31890 () (_ BitVec 64))

(assert (=> b!71606 (= lt!31890 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71606 (= lt!31882 (addApplyDifferent!50 lt!31892 lt!31885 (minValue!2095 newMap!16) lt!31890))))

(assert (=> b!71606 (= (apply!74 (+!91 lt!31892 (tuple2!2111 lt!31885 (minValue!2095 newMap!16))) lt!31890) (apply!74 lt!31892 lt!31890))))

(declare-fun b!71607 () Bool)

(declare-fun call!6209 () ListLongMap!1395)

(assert (=> b!71607 (= e!46871 call!6209)))

(declare-fun call!6206 () ListLongMap!1395)

(declare-fun bm!6206 () Bool)

(declare-fun c!10450 () Bool)

(declare-fun c!10451 () Bool)

(assert (=> bm!6206 (= call!6205 (+!91 (ite c!10450 call!6208 (ite c!10451 call!6206 call!6209)) (ite (or c!10450 c!10451) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun b!71608 () Bool)

(declare-fun e!46863 () Bool)

(assert (=> b!71608 (= e!46860 e!46863)))

(declare-fun res!38170 () Bool)

(assert (=> b!71608 (= res!38170 call!6210)))

(assert (=> b!71608 (=> (not res!38170) (not e!46863))))

(declare-fun b!71609 () Bool)

(assert (=> b!71609 (= e!46863 (= (apply!74 lt!31900 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun bm!6207 () Bool)

(assert (=> bm!6207 (= call!6209 call!6206)))

(declare-fun b!71610 () Bool)

(assert (=> b!71610 (= e!46861 e!46864)))

(assert (=> b!71610 (= c!10451 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71611 () Bool)

(declare-fun e!46859 () Bool)

(assert (=> b!71611 (= e!46869 e!46859)))

(declare-fun res!38171 () Bool)

(assert (=> b!71611 (= res!38171 call!6211)))

(assert (=> b!71611 (=> (not res!38171) (not e!46859))))

(declare-fun bm!6208 () Bool)

(assert (=> bm!6208 (= call!6206 call!6208)))

(declare-fun e!46867 () Bool)

(declare-fun b!71612 () Bool)

(assert (=> b!71612 (= e!46867 (= (apply!74 lt!31900 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71612 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))))))

(assert (=> b!71612 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun d!16079 () Bool)

(assert (=> d!16079 e!46865))

(declare-fun res!38173 () Bool)

(assert (=> d!16079 (=> (not res!38173) (not e!46865))))

(assert (=> d!16079 (= res!38173 (or (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))))

(declare-fun lt!31880 () ListLongMap!1395)

(assert (=> d!16079 (= lt!31900 lt!31880)))

(declare-fun lt!31895 () Unit!1996)

(assert (=> d!16079 (= lt!31895 e!46862)))

(declare-fun c!10448 () Bool)

(assert (=> d!16079 (= c!10448 e!46870)))

(declare-fun res!38169 () Bool)

(assert (=> d!16079 (=> (not res!38169) (not e!46870))))

(assert (=> d!16079 (= res!38169 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16079 (= lt!31880 e!46861)))

(assert (=> d!16079 (= c!10450 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16079 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16079 (= (getCurrentListMap!411 (_keys!3839 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31900)))

(declare-fun b!71613 () Bool)

(declare-fun Unit!2031 () Unit!1996)

(assert (=> b!71613 (= e!46862 Unit!2031)))

(declare-fun b!71614 () Bool)

(assert (=> b!71614 (= e!46859 (= (apply!74 lt!31900 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!71615 () Bool)

(assert (=> b!71615 (= e!46866 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71616 () Bool)

(assert (=> b!71616 (= e!46860 (not call!6210))))

(declare-fun b!71617 () Bool)

(assert (=> b!71617 (= e!46869 (not call!6211))))

(declare-fun b!71618 () Bool)

(assert (=> b!71618 (= e!46868 e!46867)))

(declare-fun res!38174 () Bool)

(assert (=> b!71618 (=> (not res!38174) (not e!46867))))

(assert (=> b!71618 (= res!38174 (contains!715 lt!31900 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71618 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71619 () Bool)

(assert (=> b!71619 (= e!46871 call!6207)))

(assert (= (and d!16079 c!10450) b!71600))

(assert (= (and d!16079 (not c!10450)) b!71610))

(assert (= (and b!71610 c!10451) b!71599))

(assert (= (and b!71610 (not c!10451)) b!71605))

(assert (= (and b!71605 c!10452) b!71619))

(assert (= (and b!71605 (not c!10452)) b!71607))

(assert (= (or b!71619 b!71607) bm!6207))

(assert (= (or b!71599 bm!6207) bm!6208))

(assert (= (or b!71599 b!71619) bm!6202))

(assert (= (or b!71600 bm!6208) bm!6205))

(assert (= (or b!71600 bm!6202) bm!6206))

(assert (= (and d!16079 res!38169) b!71604))

(assert (= (and d!16079 c!10448) b!71606))

(assert (= (and d!16079 (not c!10448)) b!71613))

(assert (= (and d!16079 res!38173) b!71602))

(assert (= (and b!71602 res!38168) b!71615))

(assert (= (and b!71602 (not res!38172)) b!71618))

(assert (= (and b!71618 res!38174) b!71612))

(assert (= (and b!71602 res!38175) b!71601))

(assert (= (and b!71601 c!10449) b!71611))

(assert (= (and b!71601 (not c!10449)) b!71617))

(assert (= (and b!71611 res!38171) b!71614))

(assert (= (or b!71611 b!71617) bm!6204))

(assert (= (and b!71601 res!38167) b!71603))

(assert (= (and b!71603 c!10447) b!71608))

(assert (= (and b!71603 (not c!10447)) b!71616))

(assert (= (and b!71608 res!38170) b!71609))

(assert (= (or b!71608 b!71616) bm!6203))

(declare-fun b_lambda!3221 () Bool)

(assert (=> (not b_lambda!3221) (not b!71612)))

(assert (=> b!71612 t!5010))

(declare-fun b_and!4409 () Bool)

(assert (= b_and!4405 (and (=> t!5010 result!2661) b_and!4409)))

(assert (=> b!71612 t!5012))

(declare-fun b_and!4411 () Bool)

(assert (= b_and!4407 (and (=> t!5012 result!2663) b_and!4411)))

(declare-fun m!69047 () Bool)

(assert (=> b!71614 m!69047))

(declare-fun m!69049 () Bool)

(assert (=> b!71609 m!69049))

(assert (=> d!16079 m!68327))

(declare-fun m!69051 () Bool)

(assert (=> bm!6203 m!69051))

(assert (=> b!71615 m!68397))

(assert (=> b!71615 m!68397))

(assert (=> b!71615 m!68399))

(declare-fun m!69053 () Bool)

(assert (=> bm!6204 m!69053))

(assert (=> b!71618 m!68397))

(assert (=> b!71618 m!68397))

(declare-fun m!69055 () Bool)

(assert (=> b!71618 m!69055))

(assert (=> b!71604 m!68397))

(assert (=> b!71604 m!68397))

(assert (=> b!71604 m!68399))

(declare-fun m!69057 () Bool)

(assert (=> bm!6206 m!69057))

(declare-fun m!69059 () Bool)

(assert (=> bm!6205 m!69059))

(declare-fun m!69061 () Bool)

(assert (=> b!71600 m!69061))

(declare-fun m!69063 () Bool)

(assert (=> b!71606 m!69063))

(declare-fun m!69065 () Bool)

(assert (=> b!71606 m!69065))

(declare-fun m!69067 () Bool)

(assert (=> b!71606 m!69067))

(declare-fun m!69069 () Bool)

(assert (=> b!71606 m!69069))

(declare-fun m!69071 () Bool)

(assert (=> b!71606 m!69071))

(declare-fun m!69073 () Bool)

(assert (=> b!71606 m!69073))

(declare-fun m!69075 () Bool)

(assert (=> b!71606 m!69075))

(declare-fun m!69077 () Bool)

(assert (=> b!71606 m!69077))

(assert (=> b!71606 m!68397))

(assert (=> b!71606 m!69071))

(declare-fun m!69079 () Bool)

(assert (=> b!71606 m!69079))

(assert (=> b!71606 m!69067))

(declare-fun m!69081 () Bool)

(assert (=> b!71606 m!69081))

(declare-fun m!69083 () Bool)

(assert (=> b!71606 m!69083))

(declare-fun m!69085 () Bool)

(assert (=> b!71606 m!69085))

(declare-fun m!69087 () Bool)

(assert (=> b!71606 m!69087))

(assert (=> b!71606 m!69059))

(assert (=> b!71606 m!69081))

(declare-fun m!69089 () Bool)

(assert (=> b!71606 m!69089))

(declare-fun m!69091 () Bool)

(assert (=> b!71606 m!69091))

(assert (=> b!71606 m!69075))

(assert (=> b!71612 m!68441))

(assert (=> b!71612 m!68397))

(declare-fun m!69093 () Bool)

(assert (=> b!71612 m!69093))

(declare-fun m!69095 () Bool)

(assert (=> b!71612 m!69095))

(assert (=> b!71612 m!68441))

(declare-fun m!69097 () Bool)

(assert (=> b!71612 m!69097))

(assert (=> b!71612 m!69095))

(assert (=> b!71612 m!68397))

(assert (=> b!71356 d!16079))

(declare-fun b!71620 () Bool)

(declare-fun e!46876 () List!1467)

(declare-fun call!6214 () List!1467)

(assert (=> b!71620 (= e!46876 call!6214)))

(declare-fun bm!6209 () Bool)

(declare-fun c!10456 () Bool)

(declare-fun e!46875 () List!1467)

(assert (=> bm!6209 (= call!6214 ($colon$colon!64 e!46875 (ite c!10456 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31223)))) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228)))))))

(declare-fun c!10455 () Bool)

(assert (=> bm!6209 (= c!10455 c!10456)))

(declare-fun d!16081 () Bool)

(declare-fun e!46874 () Bool)

(assert (=> d!16081 e!46874))

(declare-fun res!38177 () Bool)

(assert (=> d!16081 (=> (not res!38177) (not e!46874))))

(declare-fun lt!31902 () List!1467)

(assert (=> d!16081 (= res!38177 (isStrictlySorted!278 lt!31902))))

(assert (=> d!16081 (= lt!31902 e!46876)))

(assert (=> d!16081 (= c!10456 (and ((_ is Cons!1463) (t!4995 (toList!713 (+!91 lt!31219 lt!31223)))) (bvslt (_1!1066 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31223))))) (_1!1066 lt!31228))))))

(assert (=> d!16081 (isStrictlySorted!278 (t!4995 (toList!713 (+!91 lt!31219 lt!31223))))))

(assert (=> d!16081 (= (insertStrictlySorted!53 (t!4995 (toList!713 (+!91 lt!31219 lt!31223))) (_1!1066 lt!31228) (_2!1066 lt!31228)) lt!31902)))

(declare-fun b!71621 () Bool)

(declare-fun e!46872 () List!1467)

(declare-fun call!6212 () List!1467)

(assert (=> b!71621 (= e!46872 call!6212)))

(declare-fun c!10453 () Bool)

(declare-fun b!71622 () Bool)

(assert (=> b!71622 (= c!10453 (and ((_ is Cons!1463) (t!4995 (toList!713 (+!91 lt!31219 lt!31223)))) (bvsgt (_1!1066 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31223))))) (_1!1066 lt!31228))))))

(declare-fun e!46873 () List!1467)

(assert (=> b!71622 (= e!46872 e!46873)))

(declare-fun b!71623 () Bool)

(declare-fun call!6213 () List!1467)

(assert (=> b!71623 (= e!46873 call!6213)))

(declare-fun b!71624 () Bool)

(assert (=> b!71624 (= e!46873 call!6213)))

(declare-fun b!71625 () Bool)

(declare-fun res!38176 () Bool)

(assert (=> b!71625 (=> (not res!38176) (not e!46874))))

(assert (=> b!71625 (= res!38176 (containsKey!136 lt!31902 (_1!1066 lt!31228)))))

(declare-fun b!71626 () Bool)

(declare-fun c!10454 () Bool)

(assert (=> b!71626 (= e!46875 (ite c!10454 (t!4995 (t!4995 (toList!713 (+!91 lt!31219 lt!31223)))) (ite c!10453 (Cons!1463 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31223)))) (t!4995 (t!4995 (toList!713 (+!91 lt!31219 lt!31223))))) Nil!1464)))))

(declare-fun bm!6210 () Bool)

(assert (=> bm!6210 (= call!6212 call!6214)))

(declare-fun b!71627 () Bool)

(assert (=> b!71627 (= e!46876 e!46872)))

(assert (=> b!71627 (= c!10454 (and ((_ is Cons!1463) (t!4995 (toList!713 (+!91 lt!31219 lt!31223)))) (= (_1!1066 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31223))))) (_1!1066 lt!31228))))))

(declare-fun bm!6211 () Bool)

(assert (=> bm!6211 (= call!6213 call!6212)))

(declare-fun b!71628 () Bool)

(assert (=> b!71628 (= e!46875 (insertStrictlySorted!53 (t!4995 (t!4995 (toList!713 (+!91 lt!31219 lt!31223)))) (_1!1066 lt!31228) (_2!1066 lt!31228)))))

(declare-fun b!71629 () Bool)

(assert (=> b!71629 (= e!46874 (contains!719 lt!31902 (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(assert (= (and d!16081 c!10456) b!71620))

(assert (= (and d!16081 (not c!10456)) b!71627))

(assert (= (and b!71627 c!10454) b!71621))

(assert (= (and b!71627 (not c!10454)) b!71622))

(assert (= (and b!71622 c!10453) b!71623))

(assert (= (and b!71622 (not c!10453)) b!71624))

(assert (= (or b!71623 b!71624) bm!6211))

(assert (= (or b!71621 bm!6211) bm!6210))

(assert (= (or b!71620 bm!6210) bm!6209))

(assert (= (and bm!6209 c!10455) b!71628))

(assert (= (and bm!6209 (not c!10455)) b!71626))

(assert (= (and d!16081 res!38177) b!71625))

(assert (= (and b!71625 res!38176) b!71629))

(declare-fun m!69099 () Bool)

(assert (=> b!71625 m!69099))

(declare-fun m!69101 () Bool)

(assert (=> b!71629 m!69101))

(declare-fun m!69103 () Bool)

(assert (=> bm!6209 m!69103))

(declare-fun m!69105 () Bool)

(assert (=> d!16081 m!69105))

(declare-fun m!69107 () Bool)

(assert (=> d!16081 m!69107))

(declare-fun m!69109 () Bool)

(assert (=> b!71628 m!69109))

(assert (=> b!71204 d!16081))

(assert (=> d!15895 d!15849))

(declare-fun d!16083 () Bool)

(assert (=> d!16083 (= (apply!74 lt!31716 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1146 (getValueByKey!133 (toList!713 lt!31716) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3082 () Bool)

(assert (= bs!3082 d!16083))

(declare-fun m!69111 () Bool)

(assert (=> bs!3082 m!69111))

(assert (=> bs!3082 m!69111))

(declare-fun m!69113 () Bool)

(assert (=> bs!3082 m!69113))

(assert (=> b!71375 d!16083))

(declare-fun d!16085 () Bool)

(declare-fun res!38178 () Bool)

(declare-fun e!46877 () Bool)

(assert (=> d!16085 (=> res!38178 e!46877)))

(assert (=> d!16085 (= res!38178 (and ((_ is Cons!1463) (toList!713 e!46500)) (= (_1!1066 (h!2049 (toList!713 e!46500))) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))))))))

(assert (=> d!16085 (= (containsKey!136 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))) e!46877)))

(declare-fun b!71630 () Bool)

(declare-fun e!46878 () Bool)

(assert (=> b!71630 (= e!46877 e!46878)))

(declare-fun res!38179 () Bool)

(assert (=> b!71630 (=> (not res!38179) (not e!46878))))

(assert (=> b!71630 (= res!38179 (and (or (not ((_ is Cons!1463) (toList!713 e!46500))) (bvsle (_1!1066 (h!2049 (toList!713 e!46500))) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))))) ((_ is Cons!1463) (toList!713 e!46500)) (bvslt (_1!1066 (h!2049 (toList!713 e!46500))) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))))))))

(declare-fun b!71631 () Bool)

(assert (=> b!71631 (= e!46878 (containsKey!136 (t!4995 (toList!713 e!46500)) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))

(assert (= (and d!16085 (not res!38178)) b!71630))

(assert (= (and b!71630 res!38179) b!71631))

(declare-fun m!69115 () Bool)

(assert (=> b!71631 m!69115))

(assert (=> d!16009 d!16085))

(declare-fun b!71632 () Bool)

(declare-fun res!38181 () Bool)

(declare-fun e!46880 () Bool)

(assert (=> b!71632 (=> (not res!38181) (not e!46880))))

(declare-fun lt!31909 () ListLongMap!1395)

(assert (=> b!71632 (= res!38181 (not (contains!715 lt!31909 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71633 () Bool)

(declare-fun e!46882 () Bool)

(assert (=> b!71633 (= e!46882 (isEmpty!319 lt!31909))))

(declare-fun b!71634 () Bool)

(assert (=> b!71634 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> b!71634 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (ite c!10293 (_values!2174 newMap!16) lt!31437))))))

(declare-fun e!46884 () Bool)

(assert (=> b!71634 (= e!46884 (= (apply!74 lt!31909 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (ite c!10293 (_values!2174 newMap!16) lt!31437)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!6215 () ListLongMap!1395)

(declare-fun bm!6212 () Bool)

(assert (=> bm!6212 (= call!6215 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite c!10293 (_values!2174 newMap!16) lt!31437) (mask!6148 newMap!16) (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16)))))

(declare-fun b!71635 () Bool)

(declare-fun lt!31907 () Unit!1996)

(declare-fun lt!31904 () Unit!1996)

(assert (=> b!71635 (= lt!31907 lt!31904)))

(declare-fun lt!31908 () (_ BitVec 64))

(declare-fun lt!31905 () V!2937)

(declare-fun lt!31906 () ListLongMap!1395)

(declare-fun lt!31903 () (_ BitVec 64))

(assert (=> b!71635 (not (contains!715 (+!91 lt!31906 (tuple2!2111 lt!31903 lt!31905)) lt!31908))))

(assert (=> b!71635 (= lt!31904 (addStillNotContains!25 lt!31906 lt!31903 lt!31905 lt!31908))))

(assert (=> b!71635 (= lt!31908 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71635 (= lt!31905 (get!1141 (select (arr!1845 (ite c!10293 (_values!2174 newMap!16) lt!31437)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71635 (= lt!31903 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71635 (= lt!31906 call!6215)))

(declare-fun e!46885 () ListLongMap!1395)

(assert (=> b!71635 (= e!46885 (+!91 call!6215 (tuple2!2111 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) (get!1141 (select (arr!1845 (ite c!10293 (_values!2174 newMap!16) lt!31437)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71636 () Bool)

(declare-fun e!46881 () Bool)

(assert (=> b!71636 (= e!46880 e!46881)))

(declare-fun c!10457 () Bool)

(declare-fun e!46879 () Bool)

(assert (=> b!71636 (= c!10457 e!46879)))

(declare-fun res!38180 () Bool)

(assert (=> b!71636 (=> (not res!38180) (not e!46879))))

(assert (=> b!71636 (= res!38180 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71637 () Bool)

(assert (=> b!71637 (= e!46879 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71637 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!71638 () Bool)

(assert (=> b!71638 (= e!46881 e!46884)))

(assert (=> b!71638 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun res!38182 () Bool)

(assert (=> b!71638 (= res!38182 (contains!715 lt!31909 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71638 (=> (not res!38182) (not e!46884))))

(declare-fun b!71639 () Bool)

(assert (=> b!71639 (= e!46881 e!46882)))

(declare-fun c!10460 () Bool)

(assert (=> b!71639 (= c!10460 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71640 () Bool)

(declare-fun e!46883 () ListLongMap!1395)

(assert (=> b!71640 (= e!46883 e!46885)))

(declare-fun c!10459 () Bool)

(assert (=> b!71640 (= c!10459 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71641 () Bool)

(assert (=> b!71641 (= e!46882 (= lt!31909 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite c!10293 (_values!2174 newMap!16) lt!31437) (mask!6148 newMap!16) (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16))))))

(declare-fun d!16087 () Bool)

(assert (=> d!16087 e!46880))

(declare-fun res!38183 () Bool)

(assert (=> d!16087 (=> (not res!38183) (not e!46880))))

(assert (=> d!16087 (= res!38183 (not (contains!715 lt!31909 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16087 (= lt!31909 e!46883)))

(declare-fun c!10458 () Bool)

(assert (=> d!16087 (= c!10458 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16087 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16087 (= (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite c!10293 (_values!2174 newMap!16) lt!31437) (mask!6148 newMap!16) (ite c!10293 (ite c!10301 lt!31441 lt!31453) (extraKeys!2054 newMap!16)) (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31909)))

(declare-fun b!71642 () Bool)

(assert (=> b!71642 (= e!46885 call!6215)))

(declare-fun b!71643 () Bool)

(assert (=> b!71643 (= e!46883 (ListLongMap!1396 Nil!1464))))

(assert (= (and d!16087 c!10458) b!71643))

(assert (= (and d!16087 (not c!10458)) b!71640))

(assert (= (and b!71640 c!10459) b!71635))

(assert (= (and b!71640 (not c!10459)) b!71642))

(assert (= (or b!71635 b!71642) bm!6212))

(assert (= (and d!16087 res!38183) b!71632))

(assert (= (and b!71632 res!38181) b!71636))

(assert (= (and b!71636 res!38180) b!71637))

(assert (= (and b!71636 c!10457) b!71638))

(assert (= (and b!71636 (not c!10457)) b!71639))

(assert (= (and b!71638 res!38182) b!71634))

(assert (= (and b!71639 c!10460) b!71641))

(assert (= (and b!71639 (not c!10460)) b!71633))

(declare-fun b_lambda!3223 () Bool)

(assert (=> (not b_lambda!3223) (not b!71634)))

(assert (=> b!71634 t!5010))

(declare-fun b_and!4413 () Bool)

(assert (= b_and!4409 (and (=> t!5010 result!2661) b_and!4413)))

(assert (=> b!71634 t!5012))

(declare-fun b_and!4415 () Bool)

(assert (= b_and!4411 (and (=> t!5012 result!2663) b_and!4415)))

(declare-fun b_lambda!3225 () Bool)

(assert (=> (not b_lambda!3225) (not b!71635)))

(assert (=> b!71635 t!5010))

(declare-fun b_and!4417 () Bool)

(assert (= b_and!4413 (and (=> t!5010 result!2661) b_and!4417)))

(assert (=> b!71635 t!5012))

(declare-fun b_and!4419 () Bool)

(assert (= b_and!4415 (and (=> t!5012 result!2663) b_and!4419)))

(declare-fun m!69117 () Bool)

(assert (=> d!16087 m!69117))

(assert (=> d!16087 m!68327))

(assert (=> b!71637 m!68397))

(assert (=> b!71637 m!68397))

(assert (=> b!71637 m!68399))

(declare-fun m!69119 () Bool)

(assert (=> b!71633 m!69119))

(assert (=> b!71638 m!68397))

(assert (=> b!71638 m!68397))

(declare-fun m!69121 () Bool)

(assert (=> b!71638 m!69121))

(declare-fun m!69123 () Bool)

(assert (=> b!71641 m!69123))

(assert (=> bm!6212 m!69123))

(assert (=> b!71634 m!68397))

(declare-fun m!69125 () Bool)

(assert (=> b!71634 m!69125))

(assert (=> b!71634 m!68445))

(assert (=> b!71634 m!68445))

(assert (=> b!71634 m!68441))

(assert (=> b!71634 m!68447))

(assert (=> b!71634 m!68441))

(assert (=> b!71634 m!68397))

(declare-fun m!69127 () Bool)

(assert (=> b!71632 m!69127))

(assert (=> b!71640 m!68397))

(assert (=> b!71640 m!68397))

(assert (=> b!71640 m!68399))

(declare-fun m!69129 () Bool)

(assert (=> b!71635 m!69129))

(declare-fun m!69131 () Bool)

(assert (=> b!71635 m!69131))

(declare-fun m!69133 () Bool)

(assert (=> b!71635 m!69133))

(assert (=> b!71635 m!68445))

(assert (=> b!71635 m!68445))

(assert (=> b!71635 m!68441))

(assert (=> b!71635 m!68447))

(assert (=> b!71635 m!69131))

(assert (=> b!71635 m!68397))

(assert (=> b!71635 m!68441))

(declare-fun m!69135 () Bool)

(assert (=> b!71635 m!69135))

(assert (=> bm!6148 d!16087))

(declare-fun d!16089 () Bool)

(assert (=> d!16089 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3083 () Bool)

(assert (= bs!3083 d!16089))

(assert (=> bs!3083 m!68663))

(declare-fun m!69137 () Bool)

(assert (=> bs!3083 m!69137))

(assert (=> b!71311 d!16089))

(declare-fun b!71645 () Bool)

(declare-fun e!46886 () Option!139)

(declare-fun e!46887 () Option!139)

(assert (=> b!71645 (= e!46886 e!46887)))

(declare-fun c!10462 () Bool)

(assert (=> b!71645 (= c!10462 (and ((_ is Cons!1463) (toList!713 lt!31365)) (not (= (_1!1066 (h!2049 (toList!713 lt!31365))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71647 () Bool)

(assert (=> b!71647 (= e!46887 None!137)))

(declare-fun b!71646 () Bool)

(assert (=> b!71646 (= e!46887 (getValueByKey!133 (t!4995 (toList!713 lt!31365)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16091 () Bool)

(declare-fun c!10461 () Bool)

(assert (=> d!16091 (= c!10461 (and ((_ is Cons!1463) (toList!713 lt!31365)) (= (_1!1066 (h!2049 (toList!713 lt!31365))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16091 (= (getValueByKey!133 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000) e!46886)))

(declare-fun b!71644 () Bool)

(assert (=> b!71644 (= e!46886 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31365)))))))

(assert (= (and d!16091 c!10461) b!71644))

(assert (= (and d!16091 (not c!10461)) b!71645))

(assert (= (and b!71645 c!10462) b!71646))

(assert (= (and b!71645 (not c!10462)) b!71647))

(declare-fun m!69139 () Bool)

(assert (=> b!71646 m!69139))

(assert (=> b!71311 d!16091))

(declare-fun d!16093 () Bool)

(assert (=> d!16093 (= (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71228 d!16093))

(declare-fun d!16095 () Bool)

(assert (=> d!16095 (= (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71344 d!16095))

(declare-fun d!16097 () Bool)

(declare-fun e!46889 () Bool)

(assert (=> d!16097 e!46889))

(declare-fun res!38184 () Bool)

(assert (=> d!16097 (=> res!38184 e!46889)))

(declare-fun lt!31913 () Bool)

(assert (=> d!16097 (= res!38184 (not lt!31913))))

(declare-fun lt!31912 () Bool)

(assert (=> d!16097 (= lt!31913 lt!31912)))

(declare-fun lt!31911 () Unit!1996)

(declare-fun e!46888 () Unit!1996)

(assert (=> d!16097 (= lt!31911 e!46888)))

(declare-fun c!10463 () Bool)

(assert (=> d!16097 (= c!10463 lt!31912)))

(assert (=> d!16097 (= lt!31912 (containsKey!136 (toList!713 lt!31874) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16097 (= (contains!715 lt!31874 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31913)))

(declare-fun b!71648 () Bool)

(declare-fun lt!31910 () Unit!1996)

(assert (=> b!71648 (= e!46888 lt!31910)))

(assert (=> b!71648 (= lt!31910 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31874) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71648 (isDefined!85 (getValueByKey!133 (toList!713 lt!31874) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71649 () Bool)

(declare-fun Unit!2032 () Unit!1996)

(assert (=> b!71649 (= e!46888 Unit!2032)))

(declare-fun b!71650 () Bool)

(assert (=> b!71650 (= e!46889 (isDefined!85 (getValueByKey!133 (toList!713 lt!31874) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16097 c!10463) b!71648))

(assert (= (and d!16097 (not c!10463)) b!71649))

(assert (= (and d!16097 (not res!38184)) b!71650))

(declare-fun m!69141 () Bool)

(assert (=> d!16097 m!69141))

(declare-fun m!69143 () Bool)

(assert (=> b!71648 m!69143))

(declare-fun m!69145 () Bool)

(assert (=> b!71648 m!69145))

(assert (=> b!71648 m!69145))

(declare-fun m!69147 () Bool)

(assert (=> b!71648 m!69147))

(assert (=> b!71650 m!69145))

(assert (=> b!71650 m!69145))

(assert (=> b!71650 m!69147))

(assert (=> bm!6196 d!16097))

(declare-fun d!16099 () Bool)

(assert (=> d!16099 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31480) (_1!1066 lt!31223))) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31480) (_1!1066 lt!31223)))))))

(declare-fun bs!3084 () Bool)

(assert (= bs!3084 d!16099))

(assert (=> bs!3084 m!68141))

(declare-fun m!69149 () Bool)

(assert (=> bs!3084 m!69149))

(assert (=> b!71383 d!16099))

(assert (=> b!71383 d!15901))

(declare-fun d!16101 () Bool)

(assert (=> d!16101 (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!31914 () Unit!1996)

(assert (=> d!16101 (= lt!31914 (choose!407 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46890 () Bool)

(assert (=> d!16101 e!46890))

(declare-fun res!38185 () Bool)

(assert (=> d!16101 (=> (not res!38185) (not e!46890))))

(assert (=> d!16101 (= res!38185 (isStrictlySorted!278 (toList!713 lt!31365)))))

(assert (=> d!16101 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000) lt!31914)))

(declare-fun b!71651 () Bool)

(assert (=> b!71651 (= e!46890 (containsKey!136 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16101 res!38185) b!71651))

(assert (=> d!16101 m!68219))

(assert (=> d!16101 m!68219))

(assert (=> d!16101 m!68221))

(declare-fun m!69151 () Bool)

(assert (=> d!16101 m!69151))

(declare-fun m!69153 () Bool)

(assert (=> d!16101 m!69153))

(assert (=> b!71651 m!68215))

(assert (=> b!71122 d!16101))

(declare-fun d!16103 () Bool)

(assert (=> d!16103 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3085 () Bool)

(assert (= bs!3085 d!16103))

(assert (=> bs!3085 m!68219))

(declare-fun m!69155 () Bool)

(assert (=> bs!3085 m!69155))

(assert (=> b!71122 d!16103))

(declare-fun b!71653 () Bool)

(declare-fun e!46891 () Option!139)

(declare-fun e!46892 () Option!139)

(assert (=> b!71653 (= e!46891 e!46892)))

(declare-fun c!10465 () Bool)

(assert (=> b!71653 (= c!10465 (and ((_ is Cons!1463) (toList!713 lt!31365)) (not (= (_1!1066 (h!2049 (toList!713 lt!31365))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71655 () Bool)

(assert (=> b!71655 (= e!46892 None!137)))

(declare-fun b!71654 () Bool)

(assert (=> b!71654 (= e!46892 (getValueByKey!133 (t!4995 (toList!713 lt!31365)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16105 () Bool)

(declare-fun c!10464 () Bool)

(assert (=> d!16105 (= c!10464 (and ((_ is Cons!1463) (toList!713 lt!31365)) (= (_1!1066 (h!2049 (toList!713 lt!31365))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16105 (= (getValueByKey!133 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000) e!46891)))

(declare-fun b!71652 () Bool)

(assert (=> b!71652 (= e!46891 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31365)))))))

(assert (= (and d!16105 c!10464) b!71652))

(assert (= (and d!16105 (not c!10464)) b!71653))

(assert (= (and b!71653 c!10465) b!71654))

(assert (= (and b!71653 (not c!10465)) b!71655))

(declare-fun m!69157 () Bool)

(assert (=> b!71654 m!69157))

(assert (=> b!71122 d!16105))

(declare-fun bm!6213 () Bool)

(declare-fun call!6216 () (_ BitVec 32))

(assert (=> bm!6213 (= call!6216 (arrayCountValidKeys!0 (_keys!3839 (_2!1065 lt!31440)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (_2!1065 lt!31440)))))))

(declare-fun b!71656 () Bool)

(declare-fun e!46894 () (_ BitVec 32))

(assert (=> b!71656 (= e!46894 #b00000000000000000000000000000000)))

(declare-fun b!71657 () Bool)

(declare-fun e!46893 () (_ BitVec 32))

(assert (=> b!71657 (= e!46893 call!6216)))

(declare-fun b!71658 () Bool)

(assert (=> b!71658 (= e!46893 (bvadd #b00000000000000000000000000000001 call!6216))))

(declare-fun d!16107 () Bool)

(declare-fun lt!31915 () (_ BitVec 32))

(assert (=> d!16107 (and (bvsge lt!31915 #b00000000000000000000000000000000) (bvsle lt!31915 (bvsub (size!2081 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000)))))

(assert (=> d!16107 (= lt!31915 e!46894)))

(declare-fun c!10466 () Bool)

(assert (=> d!16107 (= c!10466 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))))))

(assert (=> d!16107 (and (bvsle #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2081 (_keys!3839 (_2!1065 lt!31440))) (size!2081 (_keys!3839 (_2!1065 lt!31440)))))))

(assert (=> d!16107 (= (arrayCountValidKeys!0 (_keys!3839 (_2!1065 lt!31440)) #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))) lt!31915)))

(declare-fun b!71659 () Bool)

(assert (=> b!71659 (= e!46894 e!46893)))

(declare-fun c!10467 () Bool)

(assert (=> b!71659 (= c!10467 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000)))))

(assert (= (and d!16107 c!10466) b!71656))

(assert (= (and d!16107 (not c!10466)) b!71659))

(assert (= (and b!71659 c!10467) b!71658))

(assert (= (and b!71659 (not c!10467)) b!71657))

(assert (= (or b!71658 b!71657) bm!6213))

(declare-fun m!69159 () Bool)

(assert (=> bm!6213 m!69159))

(declare-fun m!69161 () Bool)

(assert (=> b!71659 m!69161))

(assert (=> b!71659 m!69161))

(declare-fun m!69163 () Bool)

(assert (=> b!71659 m!69163))

(assert (=> b!71146 d!16107))

(declare-fun b!71660 () Bool)

(declare-fun e!46899 () List!1467)

(declare-fun call!6219 () List!1467)

(assert (=> b!71660 (= e!46899 call!6219)))

(declare-fun bm!6214 () Bool)

(declare-fun e!46898 () List!1467)

(declare-fun c!10471 () Bool)

(assert (=> bm!6214 (= call!6219 ($colon$colon!64 e!46898 (ite c!10471 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31228)))) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223)))))))

(declare-fun c!10470 () Bool)

(assert (=> bm!6214 (= c!10470 c!10471)))

(declare-fun d!16109 () Bool)

(declare-fun e!46897 () Bool)

(assert (=> d!16109 e!46897))

(declare-fun res!38187 () Bool)

(assert (=> d!16109 (=> (not res!38187) (not e!46897))))

(declare-fun lt!31916 () List!1467)

(assert (=> d!16109 (= res!38187 (isStrictlySorted!278 lt!31916))))

(assert (=> d!16109 (= lt!31916 e!46899)))

(assert (=> d!16109 (= c!10471 (and ((_ is Cons!1463) (t!4995 (toList!713 (+!91 lt!31219 lt!31228)))) (bvslt (_1!1066 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31228))))) (_1!1066 lt!31223))))))

(assert (=> d!16109 (isStrictlySorted!278 (t!4995 (toList!713 (+!91 lt!31219 lt!31228))))))

(assert (=> d!16109 (= (insertStrictlySorted!53 (t!4995 (toList!713 (+!91 lt!31219 lt!31228))) (_1!1066 lt!31223) (_2!1066 lt!31223)) lt!31916)))

(declare-fun b!71661 () Bool)

(declare-fun e!46895 () List!1467)

(declare-fun call!6217 () List!1467)

(assert (=> b!71661 (= e!46895 call!6217)))

(declare-fun c!10468 () Bool)

(declare-fun b!71662 () Bool)

(assert (=> b!71662 (= c!10468 (and ((_ is Cons!1463) (t!4995 (toList!713 (+!91 lt!31219 lt!31228)))) (bvsgt (_1!1066 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31228))))) (_1!1066 lt!31223))))))

(declare-fun e!46896 () List!1467)

(assert (=> b!71662 (= e!46895 e!46896)))

(declare-fun b!71663 () Bool)

(declare-fun call!6218 () List!1467)

(assert (=> b!71663 (= e!46896 call!6218)))

(declare-fun b!71664 () Bool)

(assert (=> b!71664 (= e!46896 call!6218)))

(declare-fun b!71665 () Bool)

(declare-fun res!38186 () Bool)

(assert (=> b!71665 (=> (not res!38186) (not e!46897))))

(assert (=> b!71665 (= res!38186 (containsKey!136 lt!31916 (_1!1066 lt!31223)))))

(declare-fun c!10469 () Bool)

(declare-fun b!71666 () Bool)

(assert (=> b!71666 (= e!46898 (ite c!10469 (t!4995 (t!4995 (toList!713 (+!91 lt!31219 lt!31228)))) (ite c!10468 (Cons!1463 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31228)))) (t!4995 (t!4995 (toList!713 (+!91 lt!31219 lt!31228))))) Nil!1464)))))

(declare-fun bm!6215 () Bool)

(assert (=> bm!6215 (= call!6217 call!6219)))

(declare-fun b!71667 () Bool)

(assert (=> b!71667 (= e!46899 e!46895)))

(assert (=> b!71667 (= c!10469 (and ((_ is Cons!1463) (t!4995 (toList!713 (+!91 lt!31219 lt!31228)))) (= (_1!1066 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31228))))) (_1!1066 lt!31223))))))

(declare-fun bm!6216 () Bool)

(assert (=> bm!6216 (= call!6218 call!6217)))

(declare-fun b!71668 () Bool)

(assert (=> b!71668 (= e!46898 (insertStrictlySorted!53 (t!4995 (t!4995 (toList!713 (+!91 lt!31219 lt!31228)))) (_1!1066 lt!31223) (_2!1066 lt!31223)))))

(declare-fun b!71669 () Bool)

(assert (=> b!71669 (= e!46897 (contains!719 lt!31916 (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(assert (= (and d!16109 c!10471) b!71660))

(assert (= (and d!16109 (not c!10471)) b!71667))

(assert (= (and b!71667 c!10469) b!71661))

(assert (= (and b!71667 (not c!10469)) b!71662))

(assert (= (and b!71662 c!10468) b!71663))

(assert (= (and b!71662 (not c!10468)) b!71664))

(assert (= (or b!71663 b!71664) bm!6216))

(assert (= (or b!71661 bm!6216) bm!6215))

(assert (= (or b!71660 bm!6215) bm!6214))

(assert (= (and bm!6214 c!10470) b!71668))

(assert (= (and bm!6214 (not c!10470)) b!71666))

(assert (= (and d!16109 res!38187) b!71665))

(assert (= (and b!71665 res!38186) b!71669))

(declare-fun m!69165 () Bool)

(assert (=> b!71665 m!69165))

(declare-fun m!69167 () Bool)

(assert (=> b!71669 m!69167))

(declare-fun m!69169 () Bool)

(assert (=> bm!6214 m!69169))

(declare-fun m!69171 () Bool)

(assert (=> d!16109 m!69171))

(declare-fun m!69173 () Bool)

(assert (=> d!16109 m!69173))

(declare-fun m!69175 () Bool)

(assert (=> b!71668 m!69175))

(assert (=> b!71494 d!16109))

(declare-fun d!16111 () Bool)

(declare-fun res!38188 () Bool)

(declare-fun e!46900 () Bool)

(assert (=> d!16111 (=> res!38188 e!46900)))

(assert (=> d!16111 (= res!38188 (and ((_ is Cons!1463) lt!31478) (= (_1!1066 (h!2049 lt!31478)) (_1!1066 lt!31223))))))

(assert (=> d!16111 (= (containsKey!136 lt!31478 (_1!1066 lt!31223)) e!46900)))

(declare-fun b!71670 () Bool)

(declare-fun e!46901 () Bool)

(assert (=> b!71670 (= e!46900 e!46901)))

(declare-fun res!38189 () Bool)

(assert (=> b!71670 (=> (not res!38189) (not e!46901))))

(assert (=> b!71670 (= res!38189 (and (or (not ((_ is Cons!1463) lt!31478)) (bvsle (_1!1066 (h!2049 lt!31478)) (_1!1066 lt!31223))) ((_ is Cons!1463) lt!31478) (bvslt (_1!1066 (h!2049 lt!31478)) (_1!1066 lt!31223))))))

(declare-fun b!71671 () Bool)

(assert (=> b!71671 (= e!46901 (containsKey!136 (t!4995 lt!31478) (_1!1066 lt!31223)))))

(assert (= (and d!16111 (not res!38188)) b!71670))

(assert (= (and b!71670 res!38189) b!71671))

(declare-fun m!69177 () Bool)

(assert (=> b!71671 m!69177))

(assert (=> b!71388 d!16111))

(declare-fun d!16113 () Bool)

(assert (=> d!16113 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (getCurrentListMap!411 (_keys!3839 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16113 true))

(declare-fun _$5!77 () Unit!1996)

(assert (=> d!16113 (= (choose!412 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3047 lt!31452) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 (defaultEntry!2191 newMap!16)) _$5!77)))

(declare-fun bs!3086 () Bool)

(assert (= bs!3086 d!16113))

(assert (=> bs!3086 m!67987))

(assert (=> bs!3086 m!67987))

(assert (=> bs!3086 m!68733))

(assert (=> bs!3086 m!68071))

(assert (=> bs!3086 m!68735))

(assert (=> d!16015 d!16113))

(declare-fun d!16115 () Bool)

(assert (=> d!16115 (= (validMask!0 (mask!6148 newMap!16)) (and (or (= (mask!6148 newMap!16) #b00000000000000000000000000000111) (= (mask!6148 newMap!16) #b00000000000000000000000000001111) (= (mask!6148 newMap!16) #b00000000000000000000000000011111) (= (mask!6148 newMap!16) #b00000000000000000000000000111111) (= (mask!6148 newMap!16) #b00000000000000000000000001111111) (= (mask!6148 newMap!16) #b00000000000000000000000011111111) (= (mask!6148 newMap!16) #b00000000000000000000000111111111) (= (mask!6148 newMap!16) #b00000000000000000000001111111111) (= (mask!6148 newMap!16) #b00000000000000000000011111111111) (= (mask!6148 newMap!16) #b00000000000000000000111111111111) (= (mask!6148 newMap!16) #b00000000000000000001111111111111) (= (mask!6148 newMap!16) #b00000000000000000011111111111111) (= (mask!6148 newMap!16) #b00000000000000000111111111111111) (= (mask!6148 newMap!16) #b00000000000000001111111111111111) (= (mask!6148 newMap!16) #b00000000000000011111111111111111) (= (mask!6148 newMap!16) #b00000000000000111111111111111111) (= (mask!6148 newMap!16) #b00000000000001111111111111111111) (= (mask!6148 newMap!16) #b00000000000011111111111111111111) (= (mask!6148 newMap!16) #b00000000000111111111111111111111) (= (mask!6148 newMap!16) #b00000000001111111111111111111111) (= (mask!6148 newMap!16) #b00000000011111111111111111111111) (= (mask!6148 newMap!16) #b00000000111111111111111111111111) (= (mask!6148 newMap!16) #b00000001111111111111111111111111) (= (mask!6148 newMap!16) #b00000011111111111111111111111111) (= (mask!6148 newMap!16) #b00000111111111111111111111111111) (= (mask!6148 newMap!16) #b00001111111111111111111111111111) (= (mask!6148 newMap!16) #b00011111111111111111111111111111) (= (mask!6148 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6148 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!16015 d!16115))

(declare-fun d!16117 () Bool)

(assert (=> d!16117 (isDefined!85 (getValueByKey!133 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun lt!31917 () Unit!1996)

(assert (=> d!16117 (= lt!31917 (choose!407 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun e!46902 () Bool)

(assert (=> d!16117 e!46902))

(declare-fun res!38190 () Bool)

(assert (=> d!16117 (=> (not res!38190) (not e!46902))))

(assert (=> d!16117 (= res!38190 (isStrictlySorted!278 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))))

(assert (=> d!16117 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) lt!31917)))

(declare-fun b!71672 () Bool)

(assert (=> b!71672 (= e!46902 (containsKey!136 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (= (and d!16117 res!38190) b!71672))

(assert (=> d!16117 m!67819))

(assert (=> d!16117 m!68741))

(assert (=> d!16117 m!68741))

(assert (=> d!16117 m!68743))

(assert (=> d!16117 m!67819))

(declare-fun m!69179 () Bool)

(assert (=> d!16117 m!69179))

(declare-fun m!69181 () Bool)

(assert (=> d!16117 m!69181))

(assert (=> b!71672 m!67819))

(assert (=> b!71672 m!68737))

(assert (=> b!71357 d!16117))

(declare-fun d!16119 () Bool)

(assert (=> d!16119 (= (isDefined!85 (getValueByKey!133 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))) (not (isEmpty!320 (getValueByKey!133 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))))

(declare-fun bs!3087 () Bool)

(assert (= bs!3087 d!16119))

(assert (=> bs!3087 m!68741))

(declare-fun m!69183 () Bool)

(assert (=> bs!3087 m!69183))

(assert (=> b!71357 d!16119))

(declare-fun b!71674 () Bool)

(declare-fun e!46903 () Option!139)

(declare-fun e!46904 () Option!139)

(assert (=> b!71674 (= e!46903 e!46904)))

(declare-fun c!10473 () Bool)

(assert (=> b!71674 (= c!10473 (and ((_ is Cons!1463) (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))) (not (= (_1!1066 (h!2049 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))))

(declare-fun b!71676 () Bool)

(assert (=> b!71676 (= e!46904 None!137)))

(declare-fun b!71675 () Bool)

(assert (=> b!71675 (= e!46904 (getValueByKey!133 (t!4995 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun d!16121 () Bool)

(declare-fun c!10472 () Bool)

(assert (=> d!16121 (= c!10472 (and ((_ is Cons!1463) (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))) (= (_1!1066 (h!2049 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (=> d!16121 (= (getValueByKey!133 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) e!46903)))

(declare-fun b!71673 () Bool)

(assert (=> b!71673 (= e!46903 (Some!138 (_2!1066 (h!2049 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))))))

(assert (= (and d!16121 c!10472) b!71673))

(assert (= (and d!16121 (not c!10472)) b!71674))

(assert (= (and b!71674 c!10473) b!71675))

(assert (= (and b!71674 (not c!10473)) b!71676))

(assert (=> b!71675 m!67819))

(declare-fun m!69185 () Bool)

(assert (=> b!71675 m!69185))

(assert (=> b!71357 d!16121))

(declare-fun b!71689 () Bool)

(declare-fun c!10480 () Bool)

(declare-fun lt!31922 () (_ BitVec 64))

(assert (=> b!71689 (= c!10480 (= lt!31922 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46911 () SeekEntryResult!229)

(declare-fun e!46912 () SeekEntryResult!229)

(assert (=> b!71689 (= e!46911 e!46912)))

(declare-fun b!71690 () Bool)

(assert (=> b!71690 (= e!46911 (Found!229 (index!3048 lt!31672)))))

(declare-fun d!16123 () Bool)

(declare-fun lt!31923 () SeekEntryResult!229)

(assert (=> d!16123 (and (or ((_ is Undefined!229) lt!31923) (not ((_ is Found!229) lt!31923)) (and (bvsge (index!3047 lt!31923) #b00000000000000000000000000000000) (bvslt (index!3047 lt!31923) (size!2081 (_keys!3839 newMap!16))))) (or ((_ is Undefined!229) lt!31923) ((_ is Found!229) lt!31923) (not ((_ is MissingVacant!229) lt!31923)) (not (= (index!3049 lt!31923) (index!3048 lt!31672))) (and (bvsge (index!3049 lt!31923) #b00000000000000000000000000000000) (bvslt (index!3049 lt!31923) (size!2081 (_keys!3839 newMap!16))))) (or ((_ is Undefined!229) lt!31923) (ite ((_ is Found!229) lt!31923) (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31923)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (and ((_ is MissingVacant!229) lt!31923) (= (index!3049 lt!31923) (index!3048 lt!31672)) (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3049 lt!31923)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!46913 () SeekEntryResult!229)

(assert (=> d!16123 (= lt!31923 e!46913)))

(declare-fun c!10482 () Bool)

(assert (=> d!16123 (= c!10482 (bvsge (x!11001 lt!31672) #b01111111111111111111111111111110))))

(assert (=> d!16123 (= lt!31922 (select (arr!1844 (_keys!3839 newMap!16)) (index!3048 lt!31672)))))

(assert (=> d!16123 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16123 (= (seekKeyOrZeroReturnVacant!0 (x!11001 lt!31672) (index!3048 lt!31672) (index!3048 lt!31672) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)) lt!31923)))

(declare-fun b!71691 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!71691 (= e!46912 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11001 lt!31672) #b00000000000000000000000000000001) (nextIndex!0 (index!3048 lt!31672) (bvadd (x!11001 lt!31672) #b00000000000000000000000000000001) (mask!6148 newMap!16)) (index!3048 lt!31672) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(declare-fun b!71692 () Bool)

(assert (=> b!71692 (= e!46912 (MissingVacant!229 (index!3048 lt!31672)))))

(declare-fun b!71693 () Bool)

(assert (=> b!71693 (= e!46913 Undefined!229)))

(declare-fun b!71694 () Bool)

(assert (=> b!71694 (= e!46913 e!46911)))

(declare-fun c!10481 () Bool)

(assert (=> b!71694 (= c!10481 (= lt!31922 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (= (and d!16123 c!10482) b!71693))

(assert (= (and d!16123 (not c!10482)) b!71694))

(assert (= (and b!71694 c!10481) b!71690))

(assert (= (and b!71694 (not c!10481)) b!71689))

(assert (= (and b!71689 c!10480) b!71692))

(assert (= (and b!71689 (not c!10480)) b!71691))

(declare-fun m!69187 () Bool)

(assert (=> d!16123 m!69187))

(declare-fun m!69189 () Bool)

(assert (=> d!16123 m!69189))

(assert (=> d!16123 m!68669))

(assert (=> d!16123 m!68327))

(declare-fun m!69191 () Bool)

(assert (=> b!71691 m!69191))

(assert (=> b!71691 m!69191))

(assert (=> b!71691 m!67819))

(declare-fun m!69193 () Bool)

(assert (=> b!71691 m!69193))

(assert (=> b!71325 d!16123))

(declare-fun d!16125 () Bool)

(declare-fun e!46915 () Bool)

(assert (=> d!16125 e!46915))

(declare-fun res!38191 () Bool)

(assert (=> d!16125 (=> res!38191 e!46915)))

(declare-fun lt!31927 () Bool)

(assert (=> d!16125 (= res!38191 (not lt!31927))))

(declare-fun lt!31926 () Bool)

(assert (=> d!16125 (= lt!31927 lt!31926)))

(declare-fun lt!31925 () Unit!1996)

(declare-fun e!46914 () Unit!1996)

(assert (=> d!16125 (= lt!31925 e!46914)))

(declare-fun c!10483 () Bool)

(assert (=> d!16125 (= c!10483 lt!31926)))

(assert (=> d!16125 (= lt!31926 (containsKey!136 (toList!713 (map!1155 (_2!1065 lt!31839))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!16125 (= (contains!715 (map!1155 (_2!1065 lt!31839)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) lt!31927)))

(declare-fun b!71695 () Bool)

(declare-fun lt!31924 () Unit!1996)

(assert (=> b!71695 (= e!46914 lt!31924)))

(assert (=> b!71695 (= lt!31924 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (map!1155 (_2!1065 lt!31839))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> b!71695 (isDefined!85 (getValueByKey!133 (toList!713 (map!1155 (_2!1065 lt!31839))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun b!71696 () Bool)

(declare-fun Unit!2033 () Unit!1996)

(assert (=> b!71696 (= e!46914 Unit!2033)))

(declare-fun b!71697 () Bool)

(assert (=> b!71697 (= e!46915 (isDefined!85 (getValueByKey!133 (toList!713 (map!1155 (_2!1065 lt!31839))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (= (and d!16125 c!10483) b!71695))

(assert (= (and d!16125 (not c!10483)) b!71696))

(assert (= (and d!16125 (not res!38191)) b!71697))

(assert (=> d!16125 m!67819))

(declare-fun m!69195 () Bool)

(assert (=> d!16125 m!69195))

(assert (=> b!71695 m!67819))

(declare-fun m!69197 () Bool)

(assert (=> b!71695 m!69197))

(assert (=> b!71695 m!67819))

(declare-fun m!69199 () Bool)

(assert (=> b!71695 m!69199))

(assert (=> b!71695 m!69199))

(declare-fun m!69201 () Bool)

(assert (=> b!71695 m!69201))

(assert (=> b!71697 m!67819))

(assert (=> b!71697 m!69199))

(assert (=> b!71697 m!69199))

(assert (=> b!71697 m!69201))

(assert (=> b!71542 d!16125))

(declare-fun d!16127 () Bool)

(assert (=> d!16127 (= (map!1155 (_2!1065 lt!31839)) (getCurrentListMap!411 (_keys!3839 (_2!1065 lt!31839)) (_values!2174 (_2!1065 lt!31839)) (mask!6148 (_2!1065 lt!31839)) (extraKeys!2054 (_2!1065 lt!31839)) (zeroValue!2095 (_2!1065 lt!31839)) (minValue!2095 (_2!1065 lt!31839)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1065 lt!31839))))))

(declare-fun bs!3088 () Bool)

(assert (= bs!3088 d!16127))

(declare-fun m!69203 () Bool)

(assert (=> bs!3088 m!69203))

(assert (=> b!71542 d!16127))

(declare-fun d!16129 () Bool)

(declare-fun res!38192 () Bool)

(declare-fun e!46916 () Bool)

(assert (=> d!16129 (=> res!38192 e!46916)))

(assert (=> d!16129 (= res!38192 (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!16129 (= (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!46916)))

(declare-fun b!71698 () Bool)

(declare-fun e!46917 () Bool)

(assert (=> b!71698 (= e!46916 e!46917)))

(declare-fun res!38193 () Bool)

(assert (=> b!71698 (=> (not res!38193) (not e!46917))))

(assert (=> b!71698 (= res!38193 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!71699 () Bool)

(assert (=> b!71699 (= e!46917 (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16129 (not res!38192)) b!71698))

(assert (= (and b!71698 res!38193) b!71699))

(declare-fun m!69205 () Bool)

(assert (=> d!16129 m!69205))

(assert (=> b!71699 m!67819))

(declare-fun m!69207 () Bool)

(assert (=> b!71699 m!69207))

(assert (=> b!71433 d!16129))

(declare-fun d!16131 () Bool)

(assert (=> d!16131 (isDefined!85 (getValueByKey!133 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))

(declare-fun lt!31928 () Unit!1996)

(assert (=> d!16131 (= lt!31928 (choose!407 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))

(declare-fun e!46918 () Bool)

(assert (=> d!16131 e!46918))

(declare-fun res!38194 () Bool)

(assert (=> d!16131 (=> (not res!38194) (not e!46918))))

(assert (=> d!16131 (= res!38194 (isStrictlySorted!278 (toList!713 e!46500)))))

(assert (=> d!16131 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))) lt!31928)))

(declare-fun b!71700 () Bool)

(assert (=> b!71700 (= e!46918 (containsKey!136 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))

(assert (= (and d!16131 res!38194) b!71700))

(assert (=> d!16131 m!68719))

(assert (=> d!16131 m!68719))

(assert (=> d!16131 m!68721))

(declare-fun m!69209 () Bool)

(assert (=> d!16131 m!69209))

(declare-fun m!69211 () Bool)

(assert (=> d!16131 m!69211))

(assert (=> b!71700 m!68715))

(assert (=> b!71348 d!16131))

(declare-fun d!16133 () Bool)

(assert (=> d!16133 (= (isDefined!85 (getValueByKey!133 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))))) (not (isEmpty!320 (getValueByKey!133 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))))

(declare-fun bs!3089 () Bool)

(assert (= bs!3089 d!16133))

(assert (=> bs!3089 m!68719))

(declare-fun m!69213 () Bool)

(assert (=> bs!3089 m!69213))

(assert (=> b!71348 d!16133))

(declare-fun b!71702 () Bool)

(declare-fun e!46919 () Option!139)

(declare-fun e!46920 () Option!139)

(assert (=> b!71702 (= e!46919 e!46920)))

(declare-fun c!10485 () Bool)

(assert (=> b!71702 (= c!10485 (and ((_ is Cons!1463) (toList!713 e!46500)) (not (= (_1!1066 (h!2049 (toList!713 e!46500))) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))))

(declare-fun b!71704 () Bool)

(assert (=> b!71704 (= e!46920 None!137)))

(declare-fun b!71703 () Bool)

(assert (=> b!71703 (= e!46920 (getValueByKey!133 (t!4995 (toList!713 e!46500)) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))

(declare-fun c!10484 () Bool)

(declare-fun d!16135 () Bool)

(assert (=> d!16135 (= c!10484 (and ((_ is Cons!1463) (toList!713 e!46500)) (= (_1!1066 (h!2049 (toList!713 e!46500))) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))))))))

(assert (=> d!16135 (= (getValueByKey!133 (toList!713 e!46500) (ite c!10297 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))) e!46919)))

(declare-fun b!71701 () Bool)

(assert (=> b!71701 (= e!46919 (Some!138 (_2!1066 (h!2049 (toList!713 e!46500)))))))

(assert (= (and d!16135 c!10484) b!71701))

(assert (= (and d!16135 (not c!10484)) b!71702))

(assert (= (and b!71702 c!10485) b!71703))

(assert (= (and b!71702 (not c!10485)) b!71704))

(declare-fun m!69215 () Bool)

(assert (=> b!71703 m!69215))

(assert (=> b!71348 d!16135))

(declare-fun d!16137 () Bool)

(declare-fun e!46922 () Bool)

(assert (=> d!16137 e!46922))

(declare-fun res!38195 () Bool)

(assert (=> d!16137 (=> res!38195 e!46922)))

(declare-fun lt!31932 () Bool)

(assert (=> d!16137 (= res!38195 (not lt!31932))))

(declare-fun lt!31931 () Bool)

(assert (=> d!16137 (= lt!31932 lt!31931)))

(declare-fun lt!31930 () Unit!1996)

(declare-fun e!46921 () Unit!1996)

(assert (=> d!16137 (= lt!31930 e!46921)))

(declare-fun c!10486 () Bool)

(assert (=> d!16137 (= c!10486 lt!31931)))

(assert (=> d!16137 (= lt!31931 (containsKey!136 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))))))

(assert (=> d!16137 (= (contains!715 (getCurrentListMap!411 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))) lt!31932)))

(declare-fun b!71705 () Bool)

(declare-fun lt!31929 () Unit!1996)

(assert (=> b!71705 (= e!46921 lt!31929)))

(assert (=> b!71705 (= lt!31929 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))))))

(assert (=> b!71705 (isDefined!85 (getValueByKey!133 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452))))))

(declare-fun b!71706 () Bool)

(declare-fun Unit!2034 () Unit!1996)

(assert (=> b!71706 (= e!46921 Unit!2034)))

(declare-fun b!71707 () Bool)

(assert (=> b!71707 (= e!46922 (isDefined!85 (getValueByKey!133 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))))

(assert (= (and d!16137 c!10486) b!71705))

(assert (= (and d!16137 (not c!10486)) b!71706))

(assert (= (and d!16137 (not res!38195)) b!71707))

(assert (=> d!16137 m!68097))

(declare-fun m!69217 () Bool)

(assert (=> d!16137 m!69217))

(assert (=> b!71705 m!68097))

(declare-fun m!69219 () Bool)

(assert (=> b!71705 m!69219))

(assert (=> b!71705 m!68097))

(declare-fun m!69221 () Bool)

(assert (=> b!71705 m!69221))

(assert (=> b!71705 m!69221))

(declare-fun m!69223 () Bool)

(assert (=> b!71705 m!69223))

(assert (=> b!71707 m!68097))

(assert (=> b!71707 m!69221))

(assert (=> b!71707 m!69221))

(assert (=> b!71707 m!69223))

(assert (=> b!71353 d!16137))

(declare-fun bm!6217 () Bool)

(declare-fun call!6222 () ListLongMap!1395)

(declare-fun call!6220 () ListLongMap!1395)

(assert (=> bm!6217 (= call!6222 call!6220)))

(declare-fun b!71708 () Bool)

(declare-fun e!46928 () ListLongMap!1395)

(assert (=> b!71708 (= e!46928 call!6222)))

(declare-fun b!71709 () Bool)

(declare-fun e!46925 () ListLongMap!1395)

(assert (=> b!71709 (= e!46925 (+!91 call!6220 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun b!71710 () Bool)

(declare-fun res!38196 () Bool)

(declare-fun e!46929 () Bool)

(assert (=> b!71710 (=> (not res!38196) (not e!46929))))

(declare-fun e!46933 () Bool)

(assert (=> b!71710 (= res!38196 e!46933)))

(declare-fun c!10489 () Bool)

(assert (=> b!71710 (= c!10489 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6218 () Bool)

(declare-fun call!6225 () Bool)

(declare-fun lt!31953 () ListLongMap!1395)

(assert (=> bm!6218 (= call!6225 (contains!715 lt!31953 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6219 () Bool)

(declare-fun call!6226 () Bool)

(assert (=> bm!6219 (= call!6226 (contains!715 lt!31953 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6220 () Bool)

(declare-fun call!6223 () ListLongMap!1395)

(assert (=> bm!6220 (= call!6223 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71711 () Bool)

(declare-fun res!38204 () Bool)

(assert (=> b!71711 (=> (not res!38204) (not e!46929))))

(declare-fun e!46932 () Bool)

(assert (=> b!71711 (= res!38204 e!46932)))

(declare-fun res!38201 () Bool)

(assert (=> b!71711 (=> res!38201 e!46932)))

(declare-fun e!46930 () Bool)

(assert (=> b!71711 (= res!38201 (not e!46930))))

(declare-fun res!38197 () Bool)

(assert (=> b!71711 (=> (not res!38197) (not e!46930))))

(assert (=> b!71711 (= res!38197 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71712 () Bool)

(declare-fun e!46924 () Bool)

(assert (=> b!71712 (= e!46929 e!46924)))

(declare-fun c!10487 () Bool)

(assert (=> b!71712 (= c!10487 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71713 () Bool)

(declare-fun e!46934 () Bool)

(assert (=> b!71713 (= e!46934 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71714 () Bool)

(declare-fun c!10492 () Bool)

(assert (=> b!71714 (= c!10492 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46935 () ListLongMap!1395)

(assert (=> b!71714 (= e!46928 e!46935)))

(declare-fun b!71715 () Bool)

(declare-fun e!46926 () Unit!1996)

(declare-fun lt!31935 () Unit!1996)

(assert (=> b!71715 (= e!46926 lt!31935)))

(declare-fun lt!31946 () ListLongMap!1395)

(assert (=> b!71715 (= lt!31946 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31952 () (_ BitVec 64))

(assert (=> b!71715 (= lt!31952 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31949 () (_ BitVec 64))

(assert (=> b!71715 (= lt!31949 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31950 () Unit!1996)

(assert (=> b!71715 (= lt!31950 (addStillContains!50 lt!31946 lt!31952 (zeroValue!2095 newMap!16) lt!31949))))

(assert (=> b!71715 (contains!715 (+!91 lt!31946 (tuple2!2111 lt!31952 (zeroValue!2095 newMap!16))) lt!31949)))

(declare-fun lt!31944 () Unit!1996)

(assert (=> b!71715 (= lt!31944 lt!31950)))

(declare-fun lt!31947 () ListLongMap!1395)

(assert (=> b!71715 (= lt!31947 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31939 () (_ BitVec 64))

(assert (=> b!71715 (= lt!31939 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31951 () (_ BitVec 64))

(assert (=> b!71715 (= lt!31951 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31954 () Unit!1996)

(assert (=> b!71715 (= lt!31954 (addApplyDifferent!50 lt!31947 lt!31939 (minValue!2095 newMap!16) lt!31951))))

(assert (=> b!71715 (= (apply!74 (+!91 lt!31947 (tuple2!2111 lt!31939 (minValue!2095 newMap!16))) lt!31951) (apply!74 lt!31947 lt!31951))))

(declare-fun lt!31940 () Unit!1996)

(assert (=> b!71715 (= lt!31940 lt!31954)))

(declare-fun lt!31936 () ListLongMap!1395)

(assert (=> b!71715 (= lt!31936 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31942 () (_ BitVec 64))

(assert (=> b!71715 (= lt!31942 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31934 () (_ BitVec 64))

(assert (=> b!71715 (= lt!31934 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31937 () Unit!1996)

(assert (=> b!71715 (= lt!31937 (addApplyDifferent!50 lt!31936 lt!31942 (zeroValue!2095 newMap!16) lt!31934))))

(assert (=> b!71715 (= (apply!74 (+!91 lt!31936 (tuple2!2111 lt!31942 (zeroValue!2095 newMap!16))) lt!31934) (apply!74 lt!31936 lt!31934))))

(declare-fun lt!31941 () Unit!1996)

(assert (=> b!71715 (= lt!31941 lt!31937)))

(declare-fun lt!31945 () ListLongMap!1395)

(assert (=> b!71715 (= lt!31945 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31938 () (_ BitVec 64))

(assert (=> b!71715 (= lt!31938 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31943 () (_ BitVec 64))

(assert (=> b!71715 (= lt!31943 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71715 (= lt!31935 (addApplyDifferent!50 lt!31945 lt!31938 (minValue!2095 newMap!16) lt!31943))))

(assert (=> b!71715 (= (apply!74 (+!91 lt!31945 (tuple2!2111 lt!31938 (minValue!2095 newMap!16))) lt!31943) (apply!74 lt!31945 lt!31943))))

(declare-fun b!71716 () Bool)

(declare-fun call!6224 () ListLongMap!1395)

(assert (=> b!71716 (= e!46935 call!6224)))

(declare-fun c!10490 () Bool)

(declare-fun call!6221 () ListLongMap!1395)

(declare-fun bm!6221 () Bool)

(declare-fun c!10491 () Bool)

(assert (=> bm!6221 (= call!6220 (+!91 (ite c!10490 call!6223 (ite c!10491 call!6221 call!6224)) (ite (or c!10490 c!10491) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun b!71717 () Bool)

(declare-fun e!46927 () Bool)

(assert (=> b!71717 (= e!46924 e!46927)))

(declare-fun res!38199 () Bool)

(assert (=> b!71717 (= res!38199 call!6225)))

(assert (=> b!71717 (=> (not res!38199) (not e!46927))))

(declare-fun b!71718 () Bool)

(assert (=> b!71718 (= e!46927 (= (apply!74 lt!31953 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun bm!6222 () Bool)

(assert (=> bm!6222 (= call!6224 call!6221)))

(declare-fun b!71719 () Bool)

(assert (=> b!71719 (= e!46925 e!46928)))

(assert (=> b!71719 (= c!10491 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71720 () Bool)

(declare-fun e!46923 () Bool)

(assert (=> b!71720 (= e!46933 e!46923)))

(declare-fun res!38200 () Bool)

(assert (=> b!71720 (= res!38200 call!6226)))

(assert (=> b!71720 (=> (not res!38200) (not e!46923))))

(declare-fun bm!6223 () Bool)

(assert (=> bm!6223 (= call!6221 call!6223)))

(declare-fun e!46931 () Bool)

(declare-fun b!71721 () Bool)

(assert (=> b!71721 (= e!46931 (= (apply!74 lt!31953 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 lt!31437) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71721 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 lt!31437)))))

(assert (=> b!71721 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun d!16139 () Bool)

(assert (=> d!16139 e!46929))

(declare-fun res!38202 () Bool)

(assert (=> d!16139 (=> (not res!38202) (not e!46929))))

(assert (=> d!16139 (= res!38202 (or (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))))

(declare-fun lt!31933 () ListLongMap!1395)

(assert (=> d!16139 (= lt!31953 lt!31933)))

(declare-fun lt!31948 () Unit!1996)

(assert (=> d!16139 (= lt!31948 e!46926)))

(declare-fun c!10488 () Bool)

(assert (=> d!16139 (= c!10488 e!46934)))

(declare-fun res!38198 () Bool)

(assert (=> d!16139 (=> (not res!38198) (not e!46934))))

(assert (=> d!16139 (= res!38198 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16139 (= lt!31933 e!46925)))

(assert (=> d!16139 (= c!10490 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16139 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16139 (= (getCurrentListMap!411 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31953)))

(declare-fun b!71722 () Bool)

(declare-fun Unit!2035 () Unit!1996)

(assert (=> b!71722 (= e!46926 Unit!2035)))

(declare-fun b!71723 () Bool)

(assert (=> b!71723 (= e!46923 (= (apply!74 lt!31953 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!71724 () Bool)

(assert (=> b!71724 (= e!46930 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71725 () Bool)

(assert (=> b!71725 (= e!46924 (not call!6225))))

(declare-fun b!71726 () Bool)

(assert (=> b!71726 (= e!46933 (not call!6226))))

(declare-fun b!71727 () Bool)

(assert (=> b!71727 (= e!46932 e!46931)))

(declare-fun res!38203 () Bool)

(assert (=> b!71727 (=> (not res!38203) (not e!46931))))

(assert (=> b!71727 (= res!38203 (contains!715 lt!31953 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71727 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71728 () Bool)

(assert (=> b!71728 (= e!46935 call!6222)))

(assert (= (and d!16139 c!10490) b!71709))

(assert (= (and d!16139 (not c!10490)) b!71719))

(assert (= (and b!71719 c!10491) b!71708))

(assert (= (and b!71719 (not c!10491)) b!71714))

(assert (= (and b!71714 c!10492) b!71728))

(assert (= (and b!71714 (not c!10492)) b!71716))

(assert (= (or b!71728 b!71716) bm!6222))

(assert (= (or b!71708 bm!6222) bm!6223))

(assert (= (or b!71708 b!71728) bm!6217))

(assert (= (or b!71709 bm!6223) bm!6220))

(assert (= (or b!71709 bm!6217) bm!6221))

(assert (= (and d!16139 res!38198) b!71713))

(assert (= (and d!16139 c!10488) b!71715))

(assert (= (and d!16139 (not c!10488)) b!71722))

(assert (= (and d!16139 res!38202) b!71711))

(assert (= (and b!71711 res!38197) b!71724))

(assert (= (and b!71711 (not res!38201)) b!71727))

(assert (= (and b!71727 res!38203) b!71721))

(assert (= (and b!71711 res!38204) b!71710))

(assert (= (and b!71710 c!10489) b!71720))

(assert (= (and b!71710 (not c!10489)) b!71726))

(assert (= (and b!71720 res!38200) b!71723))

(assert (= (or b!71720 b!71726) bm!6219))

(assert (= (and b!71710 res!38196) b!71712))

(assert (= (and b!71712 c!10487) b!71717))

(assert (= (and b!71712 (not c!10487)) b!71725))

(assert (= (and b!71717 res!38199) b!71718))

(assert (= (or b!71717 b!71725) bm!6218))

(declare-fun b_lambda!3227 () Bool)

(assert (=> (not b_lambda!3227) (not b!71721)))

(assert (=> b!71721 t!5010))

(declare-fun b_and!4421 () Bool)

(assert (= b_and!4417 (and (=> t!5010 result!2661) b_and!4421)))

(assert (=> b!71721 t!5012))

(declare-fun b_and!4423 () Bool)

(assert (= b_and!4419 (and (=> t!5012 result!2663) b_and!4423)))

(declare-fun m!69225 () Bool)

(assert (=> b!71723 m!69225))

(declare-fun m!69227 () Bool)

(assert (=> b!71718 m!69227))

(assert (=> d!16139 m!68327))

(declare-fun m!69229 () Bool)

(assert (=> bm!6218 m!69229))

(assert (=> b!71724 m!68397))

(assert (=> b!71724 m!68397))

(assert (=> b!71724 m!68399))

(declare-fun m!69231 () Bool)

(assert (=> bm!6219 m!69231))

(assert (=> b!71727 m!68397))

(assert (=> b!71727 m!68397))

(declare-fun m!69233 () Bool)

(assert (=> b!71727 m!69233))

(assert (=> b!71713 m!68397))

(assert (=> b!71713 m!68397))

(assert (=> b!71713 m!68399))

(declare-fun m!69235 () Bool)

(assert (=> bm!6221 m!69235))

(declare-fun m!69237 () Bool)

(assert (=> bm!6220 m!69237))

(declare-fun m!69239 () Bool)

(assert (=> b!71709 m!69239))

(declare-fun m!69241 () Bool)

(assert (=> b!71715 m!69241))

(declare-fun m!69243 () Bool)

(assert (=> b!71715 m!69243))

(declare-fun m!69245 () Bool)

(assert (=> b!71715 m!69245))

(declare-fun m!69247 () Bool)

(assert (=> b!71715 m!69247))

(declare-fun m!69249 () Bool)

(assert (=> b!71715 m!69249))

(declare-fun m!69251 () Bool)

(assert (=> b!71715 m!69251))

(declare-fun m!69253 () Bool)

(assert (=> b!71715 m!69253))

(declare-fun m!69255 () Bool)

(assert (=> b!71715 m!69255))

(assert (=> b!71715 m!68397))

(assert (=> b!71715 m!69249))

(declare-fun m!69257 () Bool)

(assert (=> b!71715 m!69257))

(assert (=> b!71715 m!69245))

(declare-fun m!69259 () Bool)

(assert (=> b!71715 m!69259))

(declare-fun m!69261 () Bool)

(assert (=> b!71715 m!69261))

(declare-fun m!69263 () Bool)

(assert (=> b!71715 m!69263))

(declare-fun m!69265 () Bool)

(assert (=> b!71715 m!69265))

(assert (=> b!71715 m!69237))

(assert (=> b!71715 m!69259))

(declare-fun m!69267 () Bool)

(assert (=> b!71715 m!69267))

(declare-fun m!69269 () Bool)

(assert (=> b!71715 m!69269))

(assert (=> b!71715 m!69253))

(assert (=> b!71721 m!68441))

(assert (=> b!71721 m!68397))

(declare-fun m!69271 () Bool)

(assert (=> b!71721 m!69271))

(declare-fun m!69273 () Bool)

(assert (=> b!71721 m!69273))

(assert (=> b!71721 m!68441))

(declare-fun m!69275 () Bool)

(assert (=> b!71721 m!69275))

(assert (=> b!71721 m!69273))

(assert (=> b!71721 m!68397))

(assert (=> b!71353 d!16139))

(declare-fun d!16141 () Bool)

(assert (=> d!16141 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361))))

(declare-fun lt!31955 () Unit!1996)

(assert (=> d!16141 (= lt!31955 (choose!407 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361))))

(declare-fun e!46936 () Bool)

(assert (=> d!16141 e!46936))

(declare-fun res!38205 () Bool)

(assert (=> d!16141 (=> (not res!38205) (not e!46936))))

(assert (=> d!16141 (= res!38205 (isStrictlySorted!278 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16141 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361) lt!31955)))

(declare-fun b!71729 () Bool)

(assert (=> b!71729 (= e!46936 (containsKey!136 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361))))

(assert (= (and d!16141 res!38205) b!71729))

(assert (=> d!16141 m!68585))

(assert (=> d!16141 m!68585))

(assert (=> d!16141 m!68587))

(declare-fun m!69277 () Bool)

(assert (=> d!16141 m!69277))

(declare-fun m!69279 () Bool)

(assert (=> d!16141 m!69279))

(assert (=> b!71729 m!68581))

(assert (=> b!71285 d!16141))

(declare-fun d!16143 () Bool)

(assert (=> d!16143 (= (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361)) (not (isEmpty!320 (getValueByKey!133 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361))))))

(declare-fun bs!3090 () Bool)

(assert (= bs!3090 d!16143))

(assert (=> bs!3090 m!68585))

(declare-fun m!69281 () Bool)

(assert (=> bs!3090 m!69281))

(assert (=> b!71285 d!16143))

(declare-fun b!71731 () Bool)

(declare-fun e!46937 () Option!139)

(declare-fun e!46938 () Option!139)

(assert (=> b!71731 (= e!46937 e!46938)))

(declare-fun c!10494 () Bool)

(assert (=> b!71731 (= c!10494 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (not (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31361))))))

(declare-fun b!71733 () Bool)

(assert (=> b!71733 (= e!46938 None!137)))

(declare-fun b!71732 () Bool)

(assert (=> b!71732 (= e!46938 (getValueByKey!133 (t!4995 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) lt!31361))))

(declare-fun d!16145 () Bool)

(declare-fun c!10493 () Bool)

(assert (=> d!16145 (= c!10493 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31361)))))

(assert (=> d!16145 (= (getValueByKey!133 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361) e!46937)))

(declare-fun b!71730 () Bool)

(assert (=> b!71730 (= e!46937 (Some!138 (_2!1066 (h!2049 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))))

(assert (= (and d!16145 c!10493) b!71730))

(assert (= (and d!16145 (not c!10493)) b!71731))

(assert (= (and b!71731 c!10494) b!71732))

(assert (= (and b!71731 (not c!10494)) b!71733))

(declare-fun m!69283 () Bool)

(assert (=> b!71732 m!69283))

(assert (=> b!71285 d!16145))

(declare-fun bm!6224 () Bool)

(declare-fun c!10495 () Bool)

(declare-fun call!6227 () Bool)

(assert (=> bm!6224 (= call!6227 (arrayNoDuplicates!0 (_keys!3839 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10495 (Cons!1464 (select (arr!1844 (_keys!3839 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!10356 (Cons!1464 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) Nil!1465) Nil!1465)) (ite c!10356 (Cons!1464 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) Nil!1465) Nil!1465))))))

(declare-fun b!71734 () Bool)

(declare-fun e!46939 () Bool)

(assert (=> b!71734 (= e!46939 (contains!718 (ite c!10356 (Cons!1464 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) Nil!1465) Nil!1465) (select (arr!1844 (_keys!3839 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!71735 () Bool)

(declare-fun e!46942 () Bool)

(declare-fun e!46940 () Bool)

(assert (=> b!71735 (= e!46942 e!46940)))

(assert (=> b!71735 (= c!10495 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!71736 () Bool)

(declare-fun e!46941 () Bool)

(assert (=> b!71736 (= e!46941 e!46942)))

(declare-fun res!38207 () Bool)

(assert (=> b!71736 (=> (not res!38207) (not e!46942))))

(assert (=> b!71736 (= res!38207 (not e!46939))))

(declare-fun res!38208 () Bool)

(assert (=> b!71736 (=> (not res!38208) (not e!46939))))

(assert (=> b!71736 (= res!38208 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!16147 () Bool)

(declare-fun res!38206 () Bool)

(assert (=> d!16147 (=> res!38206 e!46941)))

(assert (=> d!16147 (= res!38206 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16147 (= (arrayNoDuplicates!0 (_keys!3839 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10356 (Cons!1464 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) Nil!1465) Nil!1465)) e!46941)))

(declare-fun b!71737 () Bool)

(assert (=> b!71737 (= e!46940 call!6227)))

(declare-fun b!71738 () Bool)

(assert (=> b!71738 (= e!46940 call!6227)))

(assert (= (and d!16147 (not res!38206)) b!71736))

(assert (= (and b!71736 res!38208) b!71734))

(assert (= (and b!71736 res!38207) b!71735))

(assert (= (and b!71735 c!10495) b!71738))

(assert (= (and b!71735 (not c!10495)) b!71737))

(assert (= (or b!71738 b!71737) bm!6224))

(declare-fun m!69285 () Bool)

(assert (=> bm!6224 m!69285))

(declare-fun m!69287 () Bool)

(assert (=> bm!6224 m!69287))

(assert (=> b!71734 m!69285))

(assert (=> b!71734 m!69285))

(declare-fun m!69289 () Bool)

(assert (=> b!71734 m!69289))

(assert (=> b!71735 m!69285))

(assert (=> b!71735 m!69285))

(declare-fun m!69291 () Bool)

(assert (=> b!71735 m!69291))

(assert (=> b!71736 m!69285))

(assert (=> b!71736 m!69285))

(assert (=> b!71736 m!69291))

(assert (=> bm!6152 d!16147))

(declare-fun d!16149 () Bool)

(assert (=> d!16149 (= (apply!74 lt!31597 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1146 (getValueByKey!133 (toList!713 lt!31597) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3091 () Bool)

(assert (= bs!3091 d!16149))

(declare-fun m!69293 () Bool)

(assert (=> bs!3091 m!69293))

(assert (=> bs!3091 m!69293))

(declare-fun m!69295 () Bool)

(assert (=> bs!3091 m!69295))

(assert (=> b!71222 d!16149))

(declare-fun d!16151 () Bool)

(declare-fun c!10498 () Bool)

(assert (=> d!16151 (= c!10498 ((_ is Nil!1464) (toList!713 lt!31505)))))

(declare-fun e!46945 () (InoxSet tuple2!2110))

(assert (=> d!16151 (= (content!76 (toList!713 lt!31505)) e!46945)))

(declare-fun b!71743 () Bool)

(assert (=> b!71743 (= e!46945 ((as const (Array tuple2!2110 Bool)) false))))

(declare-fun b!71744 () Bool)

(assert (=> b!71744 (= e!46945 ((_ map or) (store ((as const (Array tuple2!2110 Bool)) false) (h!2049 (toList!713 lt!31505)) true) (content!76 (t!4995 (toList!713 lt!31505)))))))

(assert (= (and d!16151 c!10498) b!71743))

(assert (= (and d!16151 (not c!10498)) b!71744))

(declare-fun m!69297 () Bool)

(assert (=> b!71744 m!69297))

(declare-fun m!69299 () Bool)

(assert (=> b!71744 m!69299))

(assert (=> d!15943 d!16151))

(declare-fun d!16153 () Bool)

(declare-fun c!10499 () Bool)

(assert (=> d!16153 (= c!10499 ((_ is Nil!1464) (toList!713 lt!31512)))))

(declare-fun e!46946 () (InoxSet tuple2!2110))

(assert (=> d!16153 (= (content!76 (toList!713 lt!31512)) e!46946)))

(declare-fun b!71745 () Bool)

(assert (=> b!71745 (= e!46946 ((as const (Array tuple2!2110 Bool)) false))))

(declare-fun b!71746 () Bool)

(assert (=> b!71746 (= e!46946 ((_ map or) (store ((as const (Array tuple2!2110 Bool)) false) (h!2049 (toList!713 lt!31512)) true) (content!76 (t!4995 (toList!713 lt!31512)))))))

(assert (= (and d!16153 c!10499) b!71745))

(assert (= (and d!16153 (not c!10499)) b!71746))

(declare-fun m!69301 () Bool)

(assert (=> b!71746 m!69301))

(declare-fun m!69303 () Bool)

(assert (=> b!71746 m!69303))

(assert (=> d!15937 d!16153))

(declare-fun b!71748 () Bool)

(declare-fun e!46947 () Option!139)

(declare-fun e!46948 () Option!139)

(assert (=> b!71748 (= e!46947 e!46948)))

(declare-fun c!10501 () Bool)

(assert (=> b!71748 (= c!10501 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31516))) (not (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31516)))) (_1!1066 lt!31228)))))))

(declare-fun b!71750 () Bool)

(assert (=> b!71750 (= e!46948 None!137)))

(declare-fun b!71749 () Bool)

(assert (=> b!71749 (= e!46948 (getValueByKey!133 (t!4995 (t!4995 (toList!713 lt!31516))) (_1!1066 lt!31228)))))

(declare-fun d!16155 () Bool)

(declare-fun c!10500 () Bool)

(assert (=> d!16155 (= c!10500 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31516))) (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31516)))) (_1!1066 lt!31228))))))

(assert (=> d!16155 (= (getValueByKey!133 (t!4995 (toList!713 lt!31516)) (_1!1066 lt!31228)) e!46947)))

(declare-fun b!71747 () Bool)

(assert (=> b!71747 (= e!46947 (Some!138 (_2!1066 (h!2049 (t!4995 (toList!713 lt!31516))))))))

(assert (= (and d!16155 c!10500) b!71747))

(assert (= (and d!16155 (not c!10500)) b!71748))

(assert (= (and b!71748 c!10501) b!71749))

(assert (= (and b!71748 (not c!10501)) b!71750))

(declare-fun m!69305 () Bool)

(assert (=> b!71749 m!69305))

(assert (=> b!71418 d!16155))

(declare-fun d!16157 () Bool)

(assert (=> d!16157 (= (size!2087 newMap!16) (bvadd (_size!393 newMap!16) (bvsdiv (bvadd (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!71446 d!16157))

(declare-fun d!16159 () Bool)

(assert (=> d!16159 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3092 () Bool)

(assert (= bs!3092 d!16159))

(assert (=> bs!3092 m!68377))

(declare-fun m!69307 () Bool)

(assert (=> bs!3092 m!69307))

(assert (=> b!71208 d!16159))

(declare-fun b!71752 () Bool)

(declare-fun e!46949 () Option!139)

(declare-fun e!46950 () Option!139)

(assert (=> b!71752 (= e!46949 e!46950)))

(declare-fun c!10503 () Bool)

(assert (=> b!71752 (= c!10503 (and ((_ is Cons!1463) (toList!713 lt!31501)) (not (= (_1!1066 (h!2049 (toList!713 lt!31501))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71754 () Bool)

(assert (=> b!71754 (= e!46950 None!137)))

(declare-fun b!71753 () Bool)

(assert (=> b!71753 (= e!46950 (getValueByKey!133 (t!4995 (toList!713 lt!31501)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16161 () Bool)

(declare-fun c!10502 () Bool)

(assert (=> d!16161 (= c!10502 (and ((_ is Cons!1463) (toList!713 lt!31501)) (= (_1!1066 (h!2049 (toList!713 lt!31501))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16161 (= (getValueByKey!133 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000) e!46949)))

(declare-fun b!71751 () Bool)

(assert (=> b!71751 (= e!46949 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31501)))))))

(assert (= (and d!16161 c!10502) b!71751))

(assert (= (and d!16161 (not c!10502)) b!71752))

(assert (= (and b!71752 c!10503) b!71753))

(assert (= (and b!71752 (not c!10503)) b!71754))

(declare-fun m!69309 () Bool)

(assert (=> b!71753 m!69309))

(assert (=> b!71208 d!16161))

(declare-fun d!16163 () Bool)

(declare-fun e!46952 () Bool)

(assert (=> d!16163 e!46952))

(declare-fun res!38209 () Bool)

(assert (=> d!16163 (=> res!38209 e!46952)))

(declare-fun lt!31959 () Bool)

(assert (=> d!16163 (= res!38209 (not lt!31959))))

(declare-fun lt!31958 () Bool)

(assert (=> d!16163 (= lt!31959 lt!31958)))

(declare-fun lt!31957 () Unit!1996)

(declare-fun e!46951 () Unit!1996)

(assert (=> d!16163 (= lt!31957 e!46951)))

(declare-fun c!10504 () Bool)

(assert (=> d!16163 (= c!10504 lt!31958)))

(assert (=> d!16163 (= lt!31958 (containsKey!136 (toList!713 lt!31681) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16163 (= (contains!715 lt!31681 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31959)))

(declare-fun b!71755 () Bool)

(declare-fun lt!31956 () Unit!1996)

(assert (=> b!71755 (= e!46951 lt!31956)))

(assert (=> b!71755 (= lt!31956 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31681) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71755 (isDefined!85 (getValueByKey!133 (toList!713 lt!31681) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71756 () Bool)

(declare-fun Unit!2036 () Unit!1996)

(assert (=> b!71756 (= e!46951 Unit!2036)))

(declare-fun b!71757 () Bool)

(assert (=> b!71757 (= e!46952 (isDefined!85 (getValueByKey!133 (toList!713 lt!31681) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16163 c!10504) b!71755))

(assert (= (and d!16163 (not c!10504)) b!71756))

(assert (= (and d!16163 (not res!38209)) b!71757))

(declare-fun m!69311 () Bool)

(assert (=> d!16163 m!69311))

(declare-fun m!69313 () Bool)

(assert (=> b!71755 m!69313))

(declare-fun m!69315 () Bool)

(assert (=> b!71755 m!69315))

(assert (=> b!71755 m!69315))

(declare-fun m!69317 () Bool)

(assert (=> b!71755 m!69317))

(assert (=> b!71757 m!69315))

(assert (=> b!71757 m!69315))

(assert (=> b!71757 m!69317))

(assert (=> d!16005 d!16163))

(assert (=> d!16005 d!15867))

(declare-fun b!71758 () Bool)

(declare-fun e!46957 () List!1467)

(declare-fun call!6230 () List!1467)

(assert (=> b!71758 (= e!46957 call!6230)))

(declare-fun e!46956 () List!1467)

(declare-fun c!10508 () Bool)

(declare-fun bm!6225 () Bool)

(assert (=> bm!6225 (= call!6230 ($colon$colon!64 e!46956 (ite c!10508 (h!2049 (t!4995 (toList!713 lt!31219))) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228)))))))

(declare-fun c!10507 () Bool)

(assert (=> bm!6225 (= c!10507 c!10508)))

(declare-fun d!16165 () Bool)

(declare-fun e!46955 () Bool)

(assert (=> d!16165 e!46955))

(declare-fun res!38211 () Bool)

(assert (=> d!16165 (=> (not res!38211) (not e!46955))))

(declare-fun lt!31960 () List!1467)

(assert (=> d!16165 (= res!38211 (isStrictlySorted!278 lt!31960))))

(assert (=> d!16165 (= lt!31960 e!46957)))

(assert (=> d!16165 (= c!10508 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31219))) (bvslt (_1!1066 (h!2049 (t!4995 (toList!713 lt!31219)))) (_1!1066 lt!31228))))))

(assert (=> d!16165 (isStrictlySorted!278 (t!4995 (toList!713 lt!31219)))))

(assert (=> d!16165 (= (insertStrictlySorted!53 (t!4995 (toList!713 lt!31219)) (_1!1066 lt!31228) (_2!1066 lt!31228)) lt!31960)))

(declare-fun b!71759 () Bool)

(declare-fun e!46953 () List!1467)

(declare-fun call!6228 () List!1467)

(assert (=> b!71759 (= e!46953 call!6228)))

(declare-fun b!71760 () Bool)

(declare-fun c!10505 () Bool)

(assert (=> b!71760 (= c!10505 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31219))) (bvsgt (_1!1066 (h!2049 (t!4995 (toList!713 lt!31219)))) (_1!1066 lt!31228))))))

(declare-fun e!46954 () List!1467)

(assert (=> b!71760 (= e!46953 e!46954)))

(declare-fun b!71761 () Bool)

(declare-fun call!6229 () List!1467)

(assert (=> b!71761 (= e!46954 call!6229)))

(declare-fun b!71762 () Bool)

(assert (=> b!71762 (= e!46954 call!6229)))

(declare-fun b!71763 () Bool)

(declare-fun res!38210 () Bool)

(assert (=> b!71763 (=> (not res!38210) (not e!46955))))

(assert (=> b!71763 (= res!38210 (containsKey!136 lt!31960 (_1!1066 lt!31228)))))

(declare-fun c!10506 () Bool)

(declare-fun b!71764 () Bool)

(assert (=> b!71764 (= e!46956 (ite c!10506 (t!4995 (t!4995 (toList!713 lt!31219))) (ite c!10505 (Cons!1463 (h!2049 (t!4995 (toList!713 lt!31219))) (t!4995 (t!4995 (toList!713 lt!31219)))) Nil!1464)))))

(declare-fun bm!6226 () Bool)

(assert (=> bm!6226 (= call!6228 call!6230)))

(declare-fun b!71765 () Bool)

(assert (=> b!71765 (= e!46957 e!46953)))

(assert (=> b!71765 (= c!10506 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31219))) (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31219)))) (_1!1066 lt!31228))))))

(declare-fun bm!6227 () Bool)

(assert (=> bm!6227 (= call!6229 call!6228)))

(declare-fun b!71766 () Bool)

(assert (=> b!71766 (= e!46956 (insertStrictlySorted!53 (t!4995 (t!4995 (toList!713 lt!31219))) (_1!1066 lt!31228) (_2!1066 lt!31228)))))

(declare-fun b!71767 () Bool)

(assert (=> b!71767 (= e!46955 (contains!719 lt!31960 (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(assert (= (and d!16165 c!10508) b!71758))

(assert (= (and d!16165 (not c!10508)) b!71765))

(assert (= (and b!71765 c!10506) b!71759))

(assert (= (and b!71765 (not c!10506)) b!71760))

(assert (= (and b!71760 c!10505) b!71761))

(assert (= (and b!71760 (not c!10505)) b!71762))

(assert (= (or b!71761 b!71762) bm!6227))

(assert (= (or b!71759 bm!6227) bm!6226))

(assert (= (or b!71758 bm!6226) bm!6225))

(assert (= (and bm!6225 c!10507) b!71766))

(assert (= (and bm!6225 (not c!10507)) b!71764))

(assert (= (and d!16165 res!38211) b!71763))

(assert (= (and b!71763 res!38210) b!71767))

(declare-fun m!69319 () Bool)

(assert (=> b!71763 m!69319))

(declare-fun m!69321 () Bool)

(assert (=> b!71767 m!69321))

(declare-fun m!69323 () Bool)

(assert (=> bm!6225 m!69323))

(declare-fun m!69325 () Bool)

(assert (=> d!16165 m!69325))

(declare-fun m!69327 () Bool)

(assert (=> d!16165 m!69327))

(declare-fun m!69329 () Bool)

(assert (=> b!71766 m!69329))

(assert (=> b!71570 d!16165))

(assert (=> b!71376 d!16093))

(declare-fun b!71768 () Bool)

(declare-fun res!38213 () Bool)

(declare-fun e!46959 () Bool)

(assert (=> b!71768 (=> (not res!38213) (not e!46959))))

(declare-fun lt!31967 () ListLongMap!1395)

(assert (=> b!71768 (= res!38213 (not (contains!715 lt!31967 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71769 () Bool)

(declare-fun e!46961 () Bool)

(assert (=> b!71769 (= e!46961 (isEmpty!319 lt!31967))))

(declare-fun b!71770 () Bool)

(assert (=> b!71770 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> b!71770 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (_values!2174 newMap!16))))))

(declare-fun e!46963 () Bool)

(assert (=> b!71770 (= e!46963 (= (apply!74 lt!31967 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!6228 () Bool)

(declare-fun call!6231 () ListLongMap!1395)

(assert (=> bm!6228 (= call!6231 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16)))))

(declare-fun b!71771 () Bool)

(declare-fun lt!31965 () Unit!1996)

(declare-fun lt!31962 () Unit!1996)

(assert (=> b!71771 (= lt!31965 lt!31962)))

(declare-fun lt!31964 () ListLongMap!1395)

(declare-fun lt!31961 () (_ BitVec 64))

(declare-fun lt!31963 () V!2937)

(declare-fun lt!31966 () (_ BitVec 64))

(assert (=> b!71771 (not (contains!715 (+!91 lt!31964 (tuple2!2111 lt!31961 lt!31963)) lt!31966))))

(assert (=> b!71771 (= lt!31962 (addStillNotContains!25 lt!31964 lt!31961 lt!31963 lt!31966))))

(assert (=> b!71771 (= lt!31966 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71771 (= lt!31963 (get!1141 (select (arr!1845 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71771 (= lt!31961 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71771 (= lt!31964 call!6231)))

(declare-fun e!46964 () ListLongMap!1395)

(assert (=> b!71771 (= e!46964 (+!91 call!6231 (tuple2!2111 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) (get!1141 (select (arr!1845 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71772 () Bool)

(declare-fun e!46960 () Bool)

(assert (=> b!71772 (= e!46959 e!46960)))

(declare-fun c!10509 () Bool)

(declare-fun e!46958 () Bool)

(assert (=> b!71772 (= c!10509 e!46958)))

(declare-fun res!38212 () Bool)

(assert (=> b!71772 (=> (not res!38212) (not e!46958))))

(assert (=> b!71772 (= res!38212 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71773 () Bool)

(assert (=> b!71773 (= e!46958 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71773 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!71774 () Bool)

(assert (=> b!71774 (= e!46960 e!46963)))

(assert (=> b!71774 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun res!38214 () Bool)

(assert (=> b!71774 (= res!38214 (contains!715 lt!31967 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71774 (=> (not res!38214) (not e!46963))))

(declare-fun b!71775 () Bool)

(assert (=> b!71775 (= e!46960 e!46961)))

(declare-fun c!10512 () Bool)

(assert (=> b!71775 (= c!10512 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71776 () Bool)

(declare-fun e!46962 () ListLongMap!1395)

(assert (=> b!71776 (= e!46962 e!46964)))

(declare-fun c!10511 () Bool)

(assert (=> b!71776 (= c!10511 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71777 () Bool)

(assert (=> b!71777 (= e!46961 (= lt!31967 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16))))))

(declare-fun d!16167 () Bool)

(assert (=> d!16167 e!46959))

(declare-fun res!38215 () Bool)

(assert (=> d!16167 (=> (not res!38215) (not e!46959))))

(assert (=> d!16167 (= res!38215 (not (contains!715 lt!31967 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16167 (= lt!31967 e!46962)))

(declare-fun c!10510 () Bool)

(assert (=> d!16167 (= c!10510 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16167 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16167 (= (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31967)))

(declare-fun b!71778 () Bool)

(assert (=> b!71778 (= e!46964 call!6231)))

(declare-fun b!71779 () Bool)

(assert (=> b!71779 (= e!46962 (ListLongMap!1396 Nil!1464))))

(assert (= (and d!16167 c!10510) b!71779))

(assert (= (and d!16167 (not c!10510)) b!71776))

(assert (= (and b!71776 c!10511) b!71771))

(assert (= (and b!71776 (not c!10511)) b!71778))

(assert (= (or b!71771 b!71778) bm!6228))

(assert (= (and d!16167 res!38215) b!71768))

(assert (= (and b!71768 res!38213) b!71772))

(assert (= (and b!71772 res!38212) b!71773))

(assert (= (and b!71772 c!10509) b!71774))

(assert (= (and b!71772 (not c!10509)) b!71775))

(assert (= (and b!71774 res!38214) b!71770))

(assert (= (and b!71775 c!10512) b!71777))

(assert (= (and b!71775 (not c!10512)) b!71769))

(declare-fun b_lambda!3229 () Bool)

(assert (=> (not b_lambda!3229) (not b!71770)))

(assert (=> b!71770 t!5010))

(declare-fun b_and!4425 () Bool)

(assert (= b_and!4421 (and (=> t!5010 result!2661) b_and!4425)))

(assert (=> b!71770 t!5012))

(declare-fun b_and!4427 () Bool)

(assert (= b_and!4423 (and (=> t!5012 result!2663) b_and!4427)))

(declare-fun b_lambda!3231 () Bool)

(assert (=> (not b_lambda!3231) (not b!71771)))

(assert (=> b!71771 t!5010))

(declare-fun b_and!4429 () Bool)

(assert (= b_and!4425 (and (=> t!5010 result!2661) b_and!4429)))

(assert (=> b!71771 t!5012))

(declare-fun b_and!4431 () Bool)

(assert (= b_and!4427 (and (=> t!5012 result!2663) b_and!4431)))

(declare-fun m!69331 () Bool)

(assert (=> d!16167 m!69331))

(assert (=> d!16167 m!68327))

(assert (=> b!71773 m!68397))

(assert (=> b!71773 m!68397))

(assert (=> b!71773 m!68399))

(declare-fun m!69333 () Bool)

(assert (=> b!71769 m!69333))

(assert (=> b!71774 m!68397))

(assert (=> b!71774 m!68397))

(declare-fun m!69335 () Bool)

(assert (=> b!71774 m!69335))

(declare-fun m!69337 () Bool)

(assert (=> b!71777 m!69337))

(assert (=> bm!6228 m!69337))

(assert (=> b!71770 m!68397))

(declare-fun m!69339 () Bool)

(assert (=> b!71770 m!69339))

(assert (=> b!71770 m!68793))

(assert (=> b!71770 m!68793))

(assert (=> b!71770 m!68441))

(assert (=> b!71770 m!68795))

(assert (=> b!71770 m!68441))

(assert (=> b!71770 m!68397))

(declare-fun m!69341 () Bool)

(assert (=> b!71768 m!69341))

(assert (=> b!71776 m!68397))

(assert (=> b!71776 m!68397))

(assert (=> b!71776 m!68399))

(declare-fun m!69343 () Bool)

(assert (=> b!71771 m!69343))

(declare-fun m!69345 () Bool)

(assert (=> b!71771 m!69345))

(declare-fun m!69347 () Bool)

(assert (=> b!71771 m!69347))

(assert (=> b!71771 m!68793))

(assert (=> b!71771 m!68793))

(assert (=> b!71771 m!68441))

(assert (=> b!71771 m!68795))

(assert (=> b!71771 m!69345))

(assert (=> b!71771 m!68397))

(assert (=> b!71771 m!68441))

(declare-fun m!69349 () Bool)

(assert (=> b!71771 m!69349))

(assert (=> bm!6161 d!16167))

(declare-fun d!16169 () Bool)

(assert (=> d!16169 (= (isEmpty!319 lt!31681) (isEmpty!321 (toList!713 lt!31681)))))

(declare-fun bs!3093 () Bool)

(assert (= bs!3093 d!16169))

(declare-fun m!69351 () Bool)

(assert (=> bs!3093 m!69351))

(assert (=> b!71337 d!16169))

(declare-fun b!71781 () Bool)

(declare-fun e!46965 () Option!139)

(declare-fun e!46966 () Option!139)

(assert (=> b!71781 (= e!46965 e!46966)))

(declare-fun c!10514 () Bool)

(assert (=> b!71781 (= c!10514 (and ((_ is Cons!1463) (toList!713 lt!31528)) (not (= (_1!1066 (h!2049 (toList!713 lt!31528))) (_1!1066 (tuple2!2111 lt!31495 lt!31497))))))))

(declare-fun b!71783 () Bool)

(assert (=> b!71783 (= e!46966 None!137)))

(declare-fun b!71782 () Bool)

(assert (=> b!71782 (= e!46966 (getValueByKey!133 (t!4995 (toList!713 lt!31528)) (_1!1066 (tuple2!2111 lt!31495 lt!31497))))))

(declare-fun c!10513 () Bool)

(declare-fun d!16171 () Bool)

(assert (=> d!16171 (= c!10513 (and ((_ is Cons!1463) (toList!713 lt!31528)) (= (_1!1066 (h!2049 (toList!713 lt!31528))) (_1!1066 (tuple2!2111 lt!31495 lt!31497)))))))

(assert (=> d!16171 (= (getValueByKey!133 (toList!713 lt!31528) (_1!1066 (tuple2!2111 lt!31495 lt!31497))) e!46965)))

(declare-fun b!71780 () Bool)

(assert (=> b!71780 (= e!46965 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31528)))))))

(assert (= (and d!16171 c!10513) b!71780))

(assert (= (and d!16171 (not c!10513)) b!71781))

(assert (= (and b!71781 c!10514) b!71782))

(assert (= (and b!71781 (not c!10514)) b!71783))

(declare-fun m!69353 () Bool)

(assert (=> b!71782 m!69353))

(assert (=> b!71130 d!16171))

(declare-fun b!71785 () Bool)

(declare-fun e!46967 () Option!139)

(declare-fun e!46968 () Option!139)

(assert (=> b!71785 (= e!46967 e!46968)))

(declare-fun c!10516 () Bool)

(assert (=> b!71785 (= c!10516 (and ((_ is Cons!1463) (toList!713 lt!31558)) (not (= (_1!1066 (h!2049 (toList!713 lt!31558))) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!71787 () Bool)

(assert (=> b!71787 (= e!46968 None!137)))

(declare-fun b!71786 () Bool)

(assert (=> b!71786 (= e!46968 (getValueByKey!133 (t!4995 (toList!713 lt!31558)) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun d!16173 () Bool)

(declare-fun c!10515 () Bool)

(assert (=> d!16173 (= c!10515 (and ((_ is Cons!1463) (toList!713 lt!31558)) (= (_1!1066 (h!2049 (toList!713 lt!31558))) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16173 (= (getValueByKey!133 (toList!713 lt!31558) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!46967)))

(declare-fun b!71784 () Bool)

(assert (=> b!71784 (= e!46967 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31558)))))))

(assert (= (and d!16173 c!10515) b!71784))

(assert (= (and d!16173 (not c!10515)) b!71785))

(assert (= (and b!71785 c!10516) b!71786))

(assert (= (and b!71785 (not c!10516)) b!71787))

(declare-fun m!69355 () Bool)

(assert (=> b!71786 m!69355))

(assert (=> b!71161 d!16173))

(declare-fun bm!6229 () Bool)

(declare-fun call!6232 () Bool)

(assert (=> bm!6229 (= call!6232 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(declare-fun b!71788 () Bool)

(declare-fun e!46969 () Bool)

(declare-fun e!46971 () Bool)

(assert (=> b!71788 (= e!46969 e!46971)))

(declare-fun lt!31970 () (_ BitVec 64))

(assert (=> b!71788 (= lt!31970 (select (arr!1844 (_keys!3839 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!31969 () Unit!1996)

(assert (=> b!71788 (= lt!31969 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3839 newMap!16) lt!31970 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!71788 (arrayContainsKey!0 (_keys!3839 newMap!16) lt!31970 #b00000000000000000000000000000000)))

(declare-fun lt!31968 () Unit!1996)

(assert (=> b!71788 (= lt!31968 lt!31969)))

(declare-fun res!38217 () Bool)

(assert (=> b!71788 (= res!38217 (= (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3839 newMap!16) (mask!6148 newMap!16)) (Found!229 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!71788 (=> (not res!38217) (not e!46971))))

(declare-fun d!16175 () Bool)

(declare-fun res!38216 () Bool)

(declare-fun e!46970 () Bool)

(assert (=> d!16175 (=> res!38216 e!46970)))

(assert (=> d!16175 (= res!38216 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16175 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3839 newMap!16) (mask!6148 newMap!16)) e!46970)))

(declare-fun b!71789 () Bool)

(assert (=> b!71789 (= e!46970 e!46969)))

(declare-fun c!10517 () Bool)

(assert (=> b!71789 (= c!10517 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!71790 () Bool)

(assert (=> b!71790 (= e!46969 call!6232)))

(declare-fun b!71791 () Bool)

(assert (=> b!71791 (= e!46971 call!6232)))

(assert (= (and d!16175 (not res!38216)) b!71789))

(assert (= (and b!71789 c!10517) b!71788))

(assert (= (and b!71789 (not c!10517)) b!71790))

(assert (= (and b!71788 res!38217) b!71791))

(assert (= (or b!71791 b!71790) bm!6229))

(declare-fun m!69357 () Bool)

(assert (=> bm!6229 m!69357))

(assert (=> b!71788 m!69285))

(declare-fun m!69359 () Bool)

(assert (=> b!71788 m!69359))

(declare-fun m!69361 () Bool)

(assert (=> b!71788 m!69361))

(assert (=> b!71788 m!69285))

(declare-fun m!69363 () Bool)

(assert (=> b!71788 m!69363))

(assert (=> b!71789 m!69285))

(assert (=> b!71789 m!69285))

(assert (=> b!71789 m!69291))

(assert (=> bm!6170 d!16175))

(declare-fun b!71793 () Bool)

(declare-fun e!46972 () Option!139)

(declare-fun e!46973 () Option!139)

(assert (=> b!71793 (= e!46972 e!46973)))

(declare-fun c!10519 () Bool)

(assert (=> b!71793 (= c!10519 (and ((_ is Cons!1463) (toList!713 lt!31632)) (not (= (_1!1066 (h!2049 (toList!713 lt!31632))) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!71795 () Bool)

(assert (=> b!71795 (= e!46973 None!137)))

(declare-fun b!71794 () Bool)

(assert (=> b!71794 (= e!46973 (getValueByKey!133 (t!4995 (toList!713 lt!31632)) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun c!10518 () Bool)

(declare-fun d!16177 () Bool)

(assert (=> d!16177 (= c!10518 (and ((_ is Cons!1463) (toList!713 lt!31632)) (= (_1!1066 (h!2049 (toList!713 lt!31632))) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16177 (= (getValueByKey!133 (toList!713 lt!31632) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!46972)))

(declare-fun b!71792 () Bool)

(assert (=> b!71792 (= e!46972 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31632)))))))

(assert (= (and d!16177 c!10518) b!71792))

(assert (= (and d!16177 (not c!10518)) b!71793))

(assert (= (and b!71793 c!10519) b!71794))

(assert (= (and b!71793 (not c!10519)) b!71795))

(declare-fun m!69365 () Bool)

(assert (=> b!71794 m!69365))

(assert (=> b!71281 d!16177))

(declare-fun d!16179 () Bool)

(declare-fun lt!31971 () Bool)

(assert (=> d!16179 (= lt!31971 (select (content!76 lt!31754) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(declare-fun e!46975 () Bool)

(assert (=> d!16179 (= lt!31971 e!46975)))

(declare-fun res!38219 () Bool)

(assert (=> d!16179 (=> (not res!38219) (not e!46975))))

(assert (=> d!16179 (= res!38219 ((_ is Cons!1463) lt!31754))))

(assert (=> d!16179 (= (contains!719 lt!31754 (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))) lt!31971)))

(declare-fun b!71796 () Bool)

(declare-fun e!46974 () Bool)

(assert (=> b!71796 (= e!46975 e!46974)))

(declare-fun res!38218 () Bool)

(assert (=> b!71796 (=> res!38218 e!46974)))

(assert (=> b!71796 (= res!38218 (= (h!2049 lt!31754) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(declare-fun b!71797 () Bool)

(assert (=> b!71797 (= e!46974 (contains!719 (t!4995 lt!31754) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(assert (= (and d!16179 res!38219) b!71796))

(assert (= (and b!71796 (not res!38218)) b!71797))

(declare-fun m!69367 () Bool)

(assert (=> d!16179 m!69367))

(declare-fun m!69369 () Bool)

(assert (=> d!16179 m!69369))

(declare-fun m!69371 () Bool)

(assert (=> b!71797 m!69371))

(assert (=> b!71495 d!16179))

(declare-fun d!16181 () Bool)

(declare-fun lt!31972 () Bool)

(assert (=> d!16181 (= lt!31972 (select (content!76 lt!31568) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(declare-fun e!46977 () Bool)

(assert (=> d!16181 (= lt!31972 e!46977)))

(declare-fun res!38221 () Bool)

(assert (=> d!16181 (=> (not res!38221) (not e!46977))))

(assert (=> d!16181 (= res!38221 ((_ is Cons!1463) lt!31568))))

(assert (=> d!16181 (= (contains!719 lt!31568 (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))) lt!31972)))

(declare-fun b!71798 () Bool)

(declare-fun e!46976 () Bool)

(assert (=> b!71798 (= e!46977 e!46976)))

(declare-fun res!38220 () Bool)

(assert (=> b!71798 (=> res!38220 e!46976)))

(assert (=> b!71798 (= res!38220 (= (h!2049 lt!31568) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(declare-fun b!71799 () Bool)

(assert (=> b!71799 (= e!46976 (contains!719 (t!4995 lt!31568) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(assert (= (and d!16181 res!38221) b!71798))

(assert (= (and b!71798 (not res!38220)) b!71799))

(declare-fun m!69373 () Bool)

(assert (=> d!16181 m!69373))

(declare-fun m!69375 () Bool)

(assert (=> d!16181 m!69375))

(declare-fun m!69377 () Bool)

(assert (=> b!71799 m!69377))

(assert (=> b!71205 d!16181))

(declare-fun d!16183 () Bool)

(declare-fun lt!31973 () Bool)

(assert (=> d!16183 (= lt!31973 (select (content!76 lt!31478) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(declare-fun e!46979 () Bool)

(assert (=> d!16183 (= lt!31973 e!46979)))

(declare-fun res!38223 () Bool)

(assert (=> d!16183 (=> (not res!38223) (not e!46979))))

(assert (=> d!16183 (= res!38223 ((_ is Cons!1463) lt!31478))))

(assert (=> d!16183 (= (contains!719 lt!31478 (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))) lt!31973)))

(declare-fun b!71800 () Bool)

(declare-fun e!46978 () Bool)

(assert (=> b!71800 (= e!46979 e!46978)))

(declare-fun res!38222 () Bool)

(assert (=> b!71800 (=> res!38222 e!46978)))

(assert (=> b!71800 (= res!38222 (= (h!2049 lt!31478) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(declare-fun b!71801 () Bool)

(assert (=> b!71801 (= e!46978 (contains!719 (t!4995 lt!31478) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(assert (= (and d!16183 res!38223) b!71800))

(assert (= (and b!71800 (not res!38222)) b!71801))

(declare-fun m!69379 () Bool)

(assert (=> d!16183 m!69379))

(declare-fun m!69381 () Bool)

(assert (=> d!16183 m!69381))

(declare-fun m!69383 () Bool)

(assert (=> b!71801 m!69383))

(assert (=> b!71389 d!16183))

(declare-fun d!16185 () Bool)

(declare-fun e!46980 () Bool)

(assert (=> d!16185 e!46980))

(declare-fun res!38224 () Bool)

(assert (=> d!16185 (=> (not res!38224) (not e!46980))))

(declare-fun lt!31977 () ListLongMap!1395)

(assert (=> d!16185 (= res!38224 (contains!715 lt!31977 (_1!1066 (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(declare-fun lt!31975 () List!1467)

(assert (=> d!16185 (= lt!31977 (ListLongMap!1396 lt!31975))))

(declare-fun lt!31976 () Unit!1996)

(declare-fun lt!31974 () Unit!1996)

(assert (=> d!16185 (= lt!31976 lt!31974)))

(assert (=> d!16185 (= (getValueByKey!133 lt!31975 (_1!1066 (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))) (Some!138 (_2!1066 (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16185 (= lt!31974 (lemmaContainsTupThenGetReturnValue!50 lt!31975 (_1!1066 (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (_2!1066 (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16185 (= lt!31975 (insertStrictlySorted!53 (toList!713 (ite c!10444 call!6201 (ite c!10445 call!6199 call!6202))) (_1!1066 (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (_2!1066 (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16185 (= (+!91 (ite c!10444 call!6201 (ite c!10445 call!6199 call!6202)) (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) lt!31977)))

(declare-fun b!71802 () Bool)

(declare-fun res!38225 () Bool)

(assert (=> b!71802 (=> (not res!38225) (not e!46980))))

(assert (=> b!71802 (= res!38225 (= (getValueByKey!133 (toList!713 lt!31977) (_1!1066 (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))) (Some!138 (_2!1066 (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))))

(declare-fun b!71803 () Bool)

(assert (=> b!71803 (= e!46980 (contains!719 (toList!713 lt!31977) (ite (or c!10444 c!10445) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (= (and d!16185 res!38224) b!71802))

(assert (= (and b!71802 res!38225) b!71803))

(declare-fun m!69385 () Bool)

(assert (=> d!16185 m!69385))

(declare-fun m!69387 () Bool)

(assert (=> d!16185 m!69387))

(declare-fun m!69389 () Bool)

(assert (=> d!16185 m!69389))

(declare-fun m!69391 () Bool)

(assert (=> d!16185 m!69391))

(declare-fun m!69393 () Bool)

(assert (=> b!71802 m!69393))

(declare-fun m!69395 () Bool)

(assert (=> b!71803 m!69395))

(assert (=> bm!6199 d!16185))

(declare-fun bm!6230 () Bool)

(declare-fun call!6233 () Bool)

(assert (=> bm!6230 (= call!6233 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3839 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440))))))

(declare-fun b!71804 () Bool)

(declare-fun e!46981 () Bool)

(declare-fun e!46983 () Bool)

(assert (=> b!71804 (= e!46981 e!46983)))

(declare-fun lt!31980 () (_ BitVec 64))

(assert (=> b!71804 (= lt!31980 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000))))

(declare-fun lt!31979 () Unit!1996)

(assert (=> b!71804 (= lt!31979 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3839 (_2!1065 lt!31440)) lt!31980 #b00000000000000000000000000000000))))

(assert (=> b!71804 (arrayContainsKey!0 (_keys!3839 (_2!1065 lt!31440)) lt!31980 #b00000000000000000000000000000000)))

(declare-fun lt!31978 () Unit!1996)

(assert (=> b!71804 (= lt!31978 lt!31979)))

(declare-fun res!38227 () Bool)

(assert (=> b!71804 (= res!38227 (= (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000) (_keys!3839 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440))) (Found!229 #b00000000000000000000000000000000)))))

(assert (=> b!71804 (=> (not res!38227) (not e!46983))))

(declare-fun d!16187 () Bool)

(declare-fun res!38226 () Bool)

(declare-fun e!46982 () Bool)

(assert (=> d!16187 (=> res!38226 e!46982)))

(assert (=> d!16187 (= res!38226 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))))))

(assert (=> d!16187 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3839 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440))) e!46982)))

(declare-fun b!71805 () Bool)

(assert (=> b!71805 (= e!46982 e!46981)))

(declare-fun c!10520 () Bool)

(assert (=> b!71805 (= c!10520 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000)))))

(declare-fun b!71806 () Bool)

(assert (=> b!71806 (= e!46981 call!6233)))

(declare-fun b!71807 () Bool)

(assert (=> b!71807 (= e!46983 call!6233)))

(assert (= (and d!16187 (not res!38226)) b!71805))

(assert (= (and b!71805 c!10520) b!71804))

(assert (= (and b!71805 (not c!10520)) b!71806))

(assert (= (and b!71804 res!38227) b!71807))

(assert (= (or b!71807 b!71806) bm!6230))

(declare-fun m!69397 () Bool)

(assert (=> bm!6230 m!69397))

(assert (=> b!71804 m!69161))

(declare-fun m!69399 () Bool)

(assert (=> b!71804 m!69399))

(declare-fun m!69401 () Bool)

(assert (=> b!71804 m!69401))

(assert (=> b!71804 m!69161))

(declare-fun m!69403 () Bool)

(assert (=> b!71804 m!69403))

(assert (=> b!71805 m!69161))

(assert (=> b!71805 m!69161))

(assert (=> b!71805 m!69163))

(assert (=> b!71147 d!16187))

(assert (=> b!71273 d!16093))

(declare-fun d!16189 () Bool)

(declare-fun e!46985 () Bool)

(assert (=> d!16189 e!46985))

(declare-fun res!38228 () Bool)

(assert (=> d!16189 (=> res!38228 e!46985)))

(declare-fun lt!31984 () Bool)

(assert (=> d!16189 (= res!38228 (not lt!31984))))

(declare-fun lt!31983 () Bool)

(assert (=> d!16189 (= lt!31984 lt!31983)))

(declare-fun lt!31982 () Unit!1996)

(declare-fun e!46984 () Unit!1996)

(assert (=> d!16189 (= lt!31982 e!46984)))

(declare-fun c!10521 () Bool)

(assert (=> d!16189 (= c!10521 lt!31983)))

(assert (=> d!16189 (= lt!31983 (containsKey!136 (toList!713 lt!31874) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16189 (= (contains!715 lt!31874 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31984)))

(declare-fun b!71808 () Bool)

(declare-fun lt!31981 () Unit!1996)

(assert (=> b!71808 (= e!46984 lt!31981)))

(assert (=> b!71808 (= lt!31981 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31874) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71808 (isDefined!85 (getValueByKey!133 (toList!713 lt!31874) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71809 () Bool)

(declare-fun Unit!2037 () Unit!1996)

(assert (=> b!71809 (= e!46984 Unit!2037)))

(declare-fun b!71810 () Bool)

(assert (=> b!71810 (= e!46985 (isDefined!85 (getValueByKey!133 (toList!713 lt!31874) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16189 c!10521) b!71808))

(assert (= (and d!16189 (not c!10521)) b!71809))

(assert (= (and d!16189 (not res!38228)) b!71810))

(declare-fun m!69405 () Bool)

(assert (=> d!16189 m!69405))

(declare-fun m!69407 () Bool)

(assert (=> b!71808 m!69407))

(declare-fun m!69409 () Bool)

(assert (=> b!71808 m!69409))

(assert (=> b!71808 m!69409))

(declare-fun m!69411 () Bool)

(assert (=> b!71808 m!69411))

(assert (=> b!71810 m!69409))

(assert (=> b!71810 m!69409))

(assert (=> b!71810 m!69411))

(assert (=> bm!6197 d!16189))

(declare-fun d!16191 () Bool)

(assert (=> d!16191 (= (get!1146 (getValueByKey!133 (toList!713 lt!31359) lt!31363)) (v!2522 (getValueByKey!133 (toList!713 lt!31359) lt!31363)))))

(assert (=> d!15969 d!16191))

(declare-fun b!71812 () Bool)

(declare-fun e!46986 () Option!139)

(declare-fun e!46987 () Option!139)

(assert (=> b!71812 (= e!46986 e!46987)))

(declare-fun c!10523 () Bool)

(assert (=> b!71812 (= c!10523 (and ((_ is Cons!1463) (toList!713 lt!31359)) (not (= (_1!1066 (h!2049 (toList!713 lt!31359))) lt!31363))))))

(declare-fun b!71814 () Bool)

(assert (=> b!71814 (= e!46987 None!137)))

(declare-fun b!71813 () Bool)

(assert (=> b!71813 (= e!46987 (getValueByKey!133 (t!4995 (toList!713 lt!31359)) lt!31363))))

(declare-fun d!16193 () Bool)

(declare-fun c!10522 () Bool)

(assert (=> d!16193 (= c!10522 (and ((_ is Cons!1463) (toList!713 lt!31359)) (= (_1!1066 (h!2049 (toList!713 lt!31359))) lt!31363)))))

(assert (=> d!16193 (= (getValueByKey!133 (toList!713 lt!31359) lt!31363) e!46986)))

(declare-fun b!71811 () Bool)

(assert (=> b!71811 (= e!46986 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31359)))))))

(assert (= (and d!16193 c!10522) b!71811))

(assert (= (and d!16193 (not c!10522)) b!71812))

(assert (= (and b!71812 c!10523) b!71813))

(assert (= (and b!71812 (not c!10523)) b!71814))

(declare-fun m!69413 () Bool)

(assert (=> b!71813 m!69413))

(assert (=> d!15969 d!16193))

(declare-fun d!16195 () Bool)

(declare-fun e!46989 () Bool)

(assert (=> d!16195 e!46989))

(declare-fun res!38229 () Bool)

(assert (=> d!16195 (=> res!38229 e!46989)))

(declare-fun lt!31988 () Bool)

(assert (=> d!16195 (= res!38229 (not lt!31988))))

(declare-fun lt!31987 () Bool)

(assert (=> d!16195 (= lt!31988 lt!31987)))

(declare-fun lt!31986 () Unit!1996)

(declare-fun e!46988 () Unit!1996)

(assert (=> d!16195 (= lt!31986 e!46988)))

(declare-fun c!10524 () Bool)

(assert (=> d!16195 (= c!10524 lt!31987)))

(assert (=> d!16195 (= lt!31987 (containsKey!136 (toList!713 lt!31528) (_1!1066 (tuple2!2111 lt!31495 lt!31497))))))

(assert (=> d!16195 (= (contains!715 lt!31528 (_1!1066 (tuple2!2111 lt!31495 lt!31497))) lt!31988)))

(declare-fun b!71815 () Bool)

(declare-fun lt!31985 () Unit!1996)

(assert (=> b!71815 (= e!46988 lt!31985)))

(assert (=> b!71815 (= lt!31985 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31528) (_1!1066 (tuple2!2111 lt!31495 lt!31497))))))

(assert (=> b!71815 (isDefined!85 (getValueByKey!133 (toList!713 lt!31528) (_1!1066 (tuple2!2111 lt!31495 lt!31497))))))

(declare-fun b!71816 () Bool)

(declare-fun Unit!2038 () Unit!1996)

(assert (=> b!71816 (= e!46988 Unit!2038)))

(declare-fun b!71817 () Bool)

(assert (=> b!71817 (= e!46989 (isDefined!85 (getValueByKey!133 (toList!713 lt!31528) (_1!1066 (tuple2!2111 lt!31495 lt!31497)))))))

(assert (= (and d!16195 c!10524) b!71815))

(assert (= (and d!16195 (not c!10524)) b!71816))

(assert (= (and d!16195 (not res!38229)) b!71817))

(declare-fun m!69415 () Bool)

(assert (=> d!16195 m!69415))

(declare-fun m!69417 () Bool)

(assert (=> b!71815 m!69417))

(assert (=> b!71815 m!68243))

(assert (=> b!71815 m!68243))

(declare-fun m!69419 () Bool)

(assert (=> b!71815 m!69419))

(assert (=> b!71817 m!68243))

(assert (=> b!71817 m!68243))

(assert (=> b!71817 m!69419))

(assert (=> d!15879 d!16195))

(declare-fun b!71819 () Bool)

(declare-fun e!46990 () Option!139)

(declare-fun e!46991 () Option!139)

(assert (=> b!71819 (= e!46990 e!46991)))

(declare-fun c!10526 () Bool)

(assert (=> b!71819 (= c!10526 (and ((_ is Cons!1463) lt!31526) (not (= (_1!1066 (h!2049 lt!31526)) (_1!1066 (tuple2!2111 lt!31495 lt!31497))))))))

(declare-fun b!71821 () Bool)

(assert (=> b!71821 (= e!46991 None!137)))

(declare-fun b!71820 () Bool)

(assert (=> b!71820 (= e!46991 (getValueByKey!133 (t!4995 lt!31526) (_1!1066 (tuple2!2111 lt!31495 lt!31497))))))

(declare-fun d!16197 () Bool)

(declare-fun c!10525 () Bool)

(assert (=> d!16197 (= c!10525 (and ((_ is Cons!1463) lt!31526) (= (_1!1066 (h!2049 lt!31526)) (_1!1066 (tuple2!2111 lt!31495 lt!31497)))))))

(assert (=> d!16197 (= (getValueByKey!133 lt!31526 (_1!1066 (tuple2!2111 lt!31495 lt!31497))) e!46990)))

(declare-fun b!71818 () Bool)

(assert (=> b!71818 (= e!46990 (Some!138 (_2!1066 (h!2049 lt!31526))))))

(assert (= (and d!16197 c!10525) b!71818))

(assert (= (and d!16197 (not c!10525)) b!71819))

(assert (= (and b!71819 c!10526) b!71820))

(assert (= (and b!71819 (not c!10526)) b!71821))

(declare-fun m!69421 () Bool)

(assert (=> b!71820 m!69421))

(assert (=> d!15879 d!16197))

(declare-fun d!16199 () Bool)

(assert (=> d!16199 (= (getValueByKey!133 lt!31526 (_1!1066 (tuple2!2111 lt!31495 lt!31497))) (Some!138 (_2!1066 (tuple2!2111 lt!31495 lt!31497))))))

(declare-fun lt!31989 () Unit!1996)

(assert (=> d!16199 (= lt!31989 (choose!406 lt!31526 (_1!1066 (tuple2!2111 lt!31495 lt!31497)) (_2!1066 (tuple2!2111 lt!31495 lt!31497))))))

(declare-fun e!46992 () Bool)

(assert (=> d!16199 e!46992))

(declare-fun res!38230 () Bool)

(assert (=> d!16199 (=> (not res!38230) (not e!46992))))

(assert (=> d!16199 (= res!38230 (isStrictlySorted!278 lt!31526))))

(assert (=> d!16199 (= (lemmaContainsTupThenGetReturnValue!50 lt!31526 (_1!1066 (tuple2!2111 lt!31495 lt!31497)) (_2!1066 (tuple2!2111 lt!31495 lt!31497))) lt!31989)))

(declare-fun b!71822 () Bool)

(declare-fun res!38231 () Bool)

(assert (=> b!71822 (=> (not res!38231) (not e!46992))))

(assert (=> b!71822 (= res!38231 (containsKey!136 lt!31526 (_1!1066 (tuple2!2111 lt!31495 lt!31497))))))

(declare-fun b!71823 () Bool)

(assert (=> b!71823 (= e!46992 (contains!719 lt!31526 (tuple2!2111 (_1!1066 (tuple2!2111 lt!31495 lt!31497)) (_2!1066 (tuple2!2111 lt!31495 lt!31497)))))))

(assert (= (and d!16199 res!38230) b!71822))

(assert (= (and b!71822 res!38231) b!71823))

(assert (=> d!16199 m!68237))

(declare-fun m!69423 () Bool)

(assert (=> d!16199 m!69423))

(declare-fun m!69425 () Bool)

(assert (=> d!16199 m!69425))

(declare-fun m!69427 () Bool)

(assert (=> b!71822 m!69427))

(declare-fun m!69429 () Bool)

(assert (=> b!71823 m!69429))

(assert (=> d!15879 d!16199))

(declare-fun b!71824 () Bool)

(declare-fun e!46997 () List!1467)

(declare-fun call!6236 () List!1467)

(assert (=> b!71824 (= e!46997 call!6236)))

(declare-fun bm!6231 () Bool)

(declare-fun e!46996 () List!1467)

(declare-fun c!10530 () Bool)

(assert (=> bm!6231 (= call!6236 ($colon$colon!64 e!46996 (ite c!10530 (h!2049 (toList!713 lt!31498)) (tuple2!2111 (_1!1066 (tuple2!2111 lt!31495 lt!31497)) (_2!1066 (tuple2!2111 lt!31495 lt!31497))))))))

(declare-fun c!10529 () Bool)

(assert (=> bm!6231 (= c!10529 c!10530)))

(declare-fun d!16201 () Bool)

(declare-fun e!46995 () Bool)

(assert (=> d!16201 e!46995))

(declare-fun res!38233 () Bool)

(assert (=> d!16201 (=> (not res!38233) (not e!46995))))

(declare-fun lt!31990 () List!1467)

(assert (=> d!16201 (= res!38233 (isStrictlySorted!278 lt!31990))))

(assert (=> d!16201 (= lt!31990 e!46997)))

(assert (=> d!16201 (= c!10530 (and ((_ is Cons!1463) (toList!713 lt!31498)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31498))) (_1!1066 (tuple2!2111 lt!31495 lt!31497)))))))

(assert (=> d!16201 (isStrictlySorted!278 (toList!713 lt!31498))))

(assert (=> d!16201 (= (insertStrictlySorted!53 (toList!713 lt!31498) (_1!1066 (tuple2!2111 lt!31495 lt!31497)) (_2!1066 (tuple2!2111 lt!31495 lt!31497))) lt!31990)))

(declare-fun b!71825 () Bool)

(declare-fun e!46993 () List!1467)

(declare-fun call!6234 () List!1467)

(assert (=> b!71825 (= e!46993 call!6234)))

(declare-fun b!71826 () Bool)

(declare-fun c!10527 () Bool)

(assert (=> b!71826 (= c!10527 (and ((_ is Cons!1463) (toList!713 lt!31498)) (bvsgt (_1!1066 (h!2049 (toList!713 lt!31498))) (_1!1066 (tuple2!2111 lt!31495 lt!31497)))))))

(declare-fun e!46994 () List!1467)

(assert (=> b!71826 (= e!46993 e!46994)))

(declare-fun b!71827 () Bool)

(declare-fun call!6235 () List!1467)

(assert (=> b!71827 (= e!46994 call!6235)))

(declare-fun b!71828 () Bool)

(assert (=> b!71828 (= e!46994 call!6235)))

(declare-fun b!71829 () Bool)

(declare-fun res!38232 () Bool)

(assert (=> b!71829 (=> (not res!38232) (not e!46995))))

(assert (=> b!71829 (= res!38232 (containsKey!136 lt!31990 (_1!1066 (tuple2!2111 lt!31495 lt!31497))))))

(declare-fun b!71830 () Bool)

(declare-fun c!10528 () Bool)

(assert (=> b!71830 (= e!46996 (ite c!10528 (t!4995 (toList!713 lt!31498)) (ite c!10527 (Cons!1463 (h!2049 (toList!713 lt!31498)) (t!4995 (toList!713 lt!31498))) Nil!1464)))))

(declare-fun bm!6232 () Bool)

(assert (=> bm!6232 (= call!6234 call!6236)))

(declare-fun b!71831 () Bool)

(assert (=> b!71831 (= e!46997 e!46993)))

(assert (=> b!71831 (= c!10528 (and ((_ is Cons!1463) (toList!713 lt!31498)) (= (_1!1066 (h!2049 (toList!713 lt!31498))) (_1!1066 (tuple2!2111 lt!31495 lt!31497)))))))

(declare-fun bm!6233 () Bool)

(assert (=> bm!6233 (= call!6235 call!6234)))

(declare-fun b!71832 () Bool)

(assert (=> b!71832 (= e!46996 (insertStrictlySorted!53 (t!4995 (toList!713 lt!31498)) (_1!1066 (tuple2!2111 lt!31495 lt!31497)) (_2!1066 (tuple2!2111 lt!31495 lt!31497))))))

(declare-fun b!71833 () Bool)

(assert (=> b!71833 (= e!46995 (contains!719 lt!31990 (tuple2!2111 (_1!1066 (tuple2!2111 lt!31495 lt!31497)) (_2!1066 (tuple2!2111 lt!31495 lt!31497)))))))

(assert (= (and d!16201 c!10530) b!71824))

(assert (= (and d!16201 (not c!10530)) b!71831))

(assert (= (and b!71831 c!10528) b!71825))

(assert (= (and b!71831 (not c!10528)) b!71826))

(assert (= (and b!71826 c!10527) b!71827))

(assert (= (and b!71826 (not c!10527)) b!71828))

(assert (= (or b!71827 b!71828) bm!6233))

(assert (= (or b!71825 bm!6233) bm!6232))

(assert (= (or b!71824 bm!6232) bm!6231))

(assert (= (and bm!6231 c!10529) b!71832))

(assert (= (and bm!6231 (not c!10529)) b!71830))

(assert (= (and d!16201 res!38233) b!71829))

(assert (= (and b!71829 res!38232) b!71833))

(declare-fun m!69431 () Bool)

(assert (=> b!71829 m!69431))

(declare-fun m!69433 () Bool)

(assert (=> b!71833 m!69433))

(declare-fun m!69435 () Bool)

(assert (=> bm!6231 m!69435))

(declare-fun m!69437 () Bool)

(assert (=> d!16201 m!69437))

(declare-fun m!69439 () Bool)

(assert (=> d!16201 m!69439))

(declare-fun m!69441 () Bool)

(assert (=> b!71832 m!69441))

(assert (=> d!15879 d!16201))

(declare-fun d!16203 () Bool)

(declare-fun e!46999 () Bool)

(assert (=> d!16203 e!46999))

(declare-fun res!38234 () Bool)

(assert (=> d!16203 (=> res!38234 e!46999)))

(declare-fun lt!31994 () Bool)

(assert (=> d!16203 (= res!38234 (not lt!31994))))

(declare-fun lt!31993 () Bool)

(assert (=> d!16203 (= lt!31994 lt!31993)))

(declare-fun lt!31992 () Unit!1996)

(declare-fun e!46998 () Unit!1996)

(assert (=> d!16203 (= lt!31992 e!46998)))

(declare-fun c!10531 () Bool)

(assert (=> d!16203 (= c!10531 lt!31993)))

(assert (=> d!16203 (= lt!31993 (containsKey!136 (toList!713 lt!31558) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!16203 (= (contains!715 lt!31558 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31994)))

(declare-fun b!71834 () Bool)

(declare-fun lt!31991 () Unit!1996)

(assert (=> b!71834 (= e!46998 lt!31991)))

(assert (=> b!71834 (= lt!31991 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31558) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> b!71834 (isDefined!85 (getValueByKey!133 (toList!713 lt!31558) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71835 () Bool)

(declare-fun Unit!2039 () Unit!1996)

(assert (=> b!71835 (= e!46998 Unit!2039)))

(declare-fun b!71836 () Bool)

(assert (=> b!71836 (= e!46999 (isDefined!85 (getValueByKey!133 (toList!713 lt!31558) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16203 c!10531) b!71834))

(assert (= (and d!16203 (not c!10531)) b!71835))

(assert (= (and d!16203 (not res!38234)) b!71836))

(declare-fun m!69443 () Bool)

(assert (=> d!16203 m!69443))

(declare-fun m!69445 () Bool)

(assert (=> b!71834 m!69445))

(assert (=> b!71834 m!68341))

(assert (=> b!71834 m!68341))

(declare-fun m!69447 () Bool)

(assert (=> b!71834 m!69447))

(assert (=> b!71836 m!68341))

(assert (=> b!71836 m!68341))

(assert (=> b!71836 m!69447))

(assert (=> d!15907 d!16203))

(declare-fun b!71838 () Bool)

(declare-fun e!47000 () Option!139)

(declare-fun e!47001 () Option!139)

(assert (=> b!71838 (= e!47000 e!47001)))

(declare-fun c!10533 () Bool)

(assert (=> b!71838 (= c!10533 (and ((_ is Cons!1463) lt!31556) (not (= (_1!1066 (h!2049 lt!31556)) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!71840 () Bool)

(assert (=> b!71840 (= e!47001 None!137)))

(declare-fun b!71839 () Bool)

(assert (=> b!71839 (= e!47001 (getValueByKey!133 (t!4995 lt!31556) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun d!16205 () Bool)

(declare-fun c!10532 () Bool)

(assert (=> d!16205 (= c!10532 (and ((_ is Cons!1463) lt!31556) (= (_1!1066 (h!2049 lt!31556)) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16205 (= (getValueByKey!133 lt!31556 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47000)))

(declare-fun b!71837 () Bool)

(assert (=> b!71837 (= e!47000 (Some!138 (_2!1066 (h!2049 lt!31556))))))

(assert (= (and d!16205 c!10532) b!71837))

(assert (= (and d!16205 (not c!10532)) b!71838))

(assert (= (and b!71838 c!10533) b!71839))

(assert (= (and b!71838 (not c!10533)) b!71840))

(declare-fun m!69449 () Bool)

(assert (=> b!71839 m!69449))

(assert (=> d!15907 d!16205))

(declare-fun d!16207 () Bool)

(assert (=> d!16207 (= (getValueByKey!133 lt!31556 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!31995 () Unit!1996)

(assert (=> d!16207 (= lt!31995 (choose!406 lt!31556 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun e!47002 () Bool)

(assert (=> d!16207 e!47002))

(declare-fun res!38235 () Bool)

(assert (=> d!16207 (=> (not res!38235) (not e!47002))))

(assert (=> d!16207 (= res!38235 (isStrictlySorted!278 lt!31556))))

(assert (=> d!16207 (= (lemmaContainsTupThenGetReturnValue!50 lt!31556 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31995)))

(declare-fun b!71841 () Bool)

(declare-fun res!38236 () Bool)

(assert (=> b!71841 (=> (not res!38236) (not e!47002))))

(assert (=> b!71841 (= res!38236 (containsKey!136 lt!31556 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71842 () Bool)

(assert (=> b!71842 (= e!47002 (contains!719 lt!31556 (tuple2!2111 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16207 res!38235) b!71841))

(assert (= (and b!71841 res!38236) b!71842))

(assert (=> d!16207 m!68335))

(declare-fun m!69451 () Bool)

(assert (=> d!16207 m!69451))

(declare-fun m!69453 () Bool)

(assert (=> d!16207 m!69453))

(declare-fun m!69455 () Bool)

(assert (=> b!71841 m!69455))

(declare-fun m!69457 () Bool)

(assert (=> b!71842 m!69457))

(assert (=> d!15907 d!16207))

(declare-fun b!71843 () Bool)

(declare-fun e!47007 () List!1467)

(declare-fun call!6239 () List!1467)

(assert (=> b!71843 (= e!47007 call!6239)))

(declare-fun bm!6234 () Bool)

(declare-fun c!10537 () Bool)

(declare-fun e!47006 () List!1467)

(assert (=> bm!6234 (= call!6239 ($colon$colon!64 e!47006 (ite c!10537 (h!2049 (toList!713 call!6054)) (tuple2!2111 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun c!10536 () Bool)

(assert (=> bm!6234 (= c!10536 c!10537)))

(declare-fun d!16209 () Bool)

(declare-fun e!47005 () Bool)

(assert (=> d!16209 e!47005))

(declare-fun res!38238 () Bool)

(assert (=> d!16209 (=> (not res!38238) (not e!47005))))

(declare-fun lt!31996 () List!1467)

(assert (=> d!16209 (= res!38238 (isStrictlySorted!278 lt!31996))))

(assert (=> d!16209 (= lt!31996 e!47007)))

(assert (=> d!16209 (= c!10537 (and ((_ is Cons!1463) (toList!713 call!6054)) (bvslt (_1!1066 (h!2049 (toList!713 call!6054))) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16209 (isStrictlySorted!278 (toList!713 call!6054))))

(assert (=> d!16209 (= (insertStrictlySorted!53 (toList!713 call!6054) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31996)))

(declare-fun b!71844 () Bool)

(declare-fun e!47003 () List!1467)

(declare-fun call!6237 () List!1467)

(assert (=> b!71844 (= e!47003 call!6237)))

(declare-fun b!71845 () Bool)

(declare-fun c!10534 () Bool)

(assert (=> b!71845 (= c!10534 (and ((_ is Cons!1463) (toList!713 call!6054)) (bvsgt (_1!1066 (h!2049 (toList!713 call!6054))) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun e!47004 () List!1467)

(assert (=> b!71845 (= e!47003 e!47004)))

(declare-fun b!71846 () Bool)

(declare-fun call!6238 () List!1467)

(assert (=> b!71846 (= e!47004 call!6238)))

(declare-fun b!71847 () Bool)

(assert (=> b!71847 (= e!47004 call!6238)))

(declare-fun b!71848 () Bool)

(declare-fun res!38237 () Bool)

(assert (=> b!71848 (=> (not res!38237) (not e!47005))))

(assert (=> b!71848 (= res!38237 (containsKey!136 lt!31996 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun c!10535 () Bool)

(declare-fun b!71849 () Bool)

(assert (=> b!71849 (= e!47006 (ite c!10535 (t!4995 (toList!713 call!6054)) (ite c!10534 (Cons!1463 (h!2049 (toList!713 call!6054)) (t!4995 (toList!713 call!6054))) Nil!1464)))))

(declare-fun bm!6235 () Bool)

(assert (=> bm!6235 (= call!6237 call!6239)))

(declare-fun b!71850 () Bool)

(assert (=> b!71850 (= e!47007 e!47003)))

(assert (=> b!71850 (= c!10535 (and ((_ is Cons!1463) (toList!713 call!6054)) (= (_1!1066 (h!2049 (toList!713 call!6054))) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun bm!6236 () Bool)

(assert (=> bm!6236 (= call!6238 call!6237)))

(declare-fun b!71851 () Bool)

(assert (=> b!71851 (= e!47006 (insertStrictlySorted!53 (t!4995 (toList!713 call!6054)) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71852 () Bool)

(assert (=> b!71852 (= e!47005 (contains!719 lt!31996 (tuple2!2111 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16209 c!10537) b!71843))

(assert (= (and d!16209 (not c!10537)) b!71850))

(assert (= (and b!71850 c!10535) b!71844))

(assert (= (and b!71850 (not c!10535)) b!71845))

(assert (= (and b!71845 c!10534) b!71846))

(assert (= (and b!71845 (not c!10534)) b!71847))

(assert (= (or b!71846 b!71847) bm!6236))

(assert (= (or b!71844 bm!6236) bm!6235))

(assert (= (or b!71843 bm!6235) bm!6234))

(assert (= (and bm!6234 c!10536) b!71851))

(assert (= (and bm!6234 (not c!10536)) b!71849))

(assert (= (and d!16209 res!38238) b!71848))

(assert (= (and b!71848 res!38237) b!71852))

(declare-fun m!69459 () Bool)

(assert (=> b!71848 m!69459))

(declare-fun m!69461 () Bool)

(assert (=> b!71852 m!69461))

(declare-fun m!69463 () Bool)

(assert (=> bm!6234 m!69463))

(declare-fun m!69465 () Bool)

(assert (=> d!16209 m!69465))

(declare-fun m!69467 () Bool)

(assert (=> d!16209 m!69467))

(declare-fun m!69469 () Bool)

(assert (=> b!71851 m!69469))

(assert (=> d!15907 d!16209))

(declare-fun d!16211 () Bool)

(declare-fun lt!31997 () Bool)

(assert (=> d!16211 (= lt!31997 (select (content!77 Nil!1465) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!47009 () Bool)

(assert (=> d!16211 (= lt!31997 e!47009)))

(declare-fun res!38239 () Bool)

(assert (=> d!16211 (=> (not res!38239) (not e!47009))))

(assert (=> d!16211 (= res!38239 ((_ is Cons!1464) Nil!1465))))

(assert (=> d!16211 (= (contains!718 Nil!1465 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) lt!31997)))

(declare-fun b!71853 () Bool)

(declare-fun e!47008 () Bool)

(assert (=> b!71853 (= e!47009 e!47008)))

(declare-fun res!38240 () Bool)

(assert (=> b!71853 (=> res!38240 e!47008)))

(assert (=> b!71853 (= res!38240 (= (h!2050 Nil!1465) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71854 () Bool)

(assert (=> b!71854 (= e!47008 (contains!718 (t!4996 Nil!1465) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!16211 res!38239) b!71853))

(assert (= (and b!71853 (not res!38240)) b!71854))

(assert (=> d!16211 m!68893))

(assert (=> d!16211 m!68397))

(declare-fun m!69471 () Bool)

(assert (=> d!16211 m!69471))

(assert (=> b!71854 m!68397))

(declare-fun m!69473 () Bool)

(assert (=> b!71854 m!69473))

(assert (=> b!71250 d!16211))

(declare-fun d!16213 () Bool)

(assert (=> d!16213 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31453 (zeroValue!2095 newMap!16) lt!31220 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16213 true))

(declare-fun _$8!61 () Unit!1996)

(assert (=> d!16213 (= (choose!405 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) lt!31453 (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) lt!31220 (defaultEntry!2191 newMap!16)) _$8!61)))

(declare-fun bs!3094 () Bool)

(assert (= bs!3094 d!16213))

(assert (=> bs!3094 m!67987))

(assert (=> bs!3094 m!67987))

(assert (=> bs!3094 m!68331))

(assert (=> bs!3094 m!68325))

(assert (=> d!15905 d!16213))

(declare-fun d!16215 () Bool)

(declare-fun e!47010 () Bool)

(assert (=> d!16215 e!47010))

(declare-fun res!38241 () Bool)

(assert (=> d!16215 (=> (not res!38241) (not e!47010))))

(declare-fun lt!32001 () ListLongMap!1395)

(assert (=> d!16215 (= res!38241 (contains!715 lt!32001 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220))))))

(declare-fun lt!31999 () List!1467)

(assert (=> d!16215 (= lt!32001 (ListLongMap!1396 lt!31999))))

(declare-fun lt!32000 () Unit!1996)

(declare-fun lt!31998 () Unit!1996)

(assert (=> d!16215 (= lt!32000 lt!31998)))

(assert (=> d!16215 (= (getValueByKey!133 lt!31999 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220))))))

(assert (=> d!16215 (= lt!31998 (lemmaContainsTupThenGetReturnValue!50 lt!31999 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220))))))

(assert (=> d!16215 (= lt!31999 (insertStrictlySorted!53 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220))))))

(assert (=> d!16215 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) lt!32001)))

(declare-fun b!71855 () Bool)

(declare-fun res!38242 () Bool)

(assert (=> b!71855 (=> (not res!38242) (not e!47010))))

(assert (=> b!71855 (= res!38242 (= (getValueByKey!133 (toList!713 lt!32001) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)))))))

(declare-fun b!71856 () Bool)

(assert (=> b!71856 (= e!47010 (contains!719 (toList!713 lt!32001) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)))))

(assert (= (and d!16215 res!38241) b!71855))

(assert (= (and b!71855 res!38242) b!71856))

(declare-fun m!69475 () Bool)

(assert (=> d!16215 m!69475))

(declare-fun m!69477 () Bool)

(assert (=> d!16215 m!69477))

(declare-fun m!69479 () Bool)

(assert (=> d!16215 m!69479))

(declare-fun m!69481 () Bool)

(assert (=> d!16215 m!69481))

(declare-fun m!69483 () Bool)

(assert (=> b!71855 m!69483))

(declare-fun m!69485 () Bool)

(assert (=> b!71856 m!69485))

(assert (=> d!15905 d!16215))

(assert (=> d!15905 d!16019))

(declare-fun bm!6237 () Bool)

(declare-fun call!6242 () ListLongMap!1395)

(declare-fun call!6240 () ListLongMap!1395)

(assert (=> bm!6237 (= call!6242 call!6240)))

(declare-fun b!71857 () Bool)

(declare-fun e!47016 () ListLongMap!1395)

(assert (=> b!71857 (= e!47016 call!6242)))

(declare-fun b!71858 () Bool)

(declare-fun e!47013 () ListLongMap!1395)

(assert (=> b!71858 (= e!47013 (+!91 call!6240 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)))))

(declare-fun b!71859 () Bool)

(declare-fun res!38243 () Bool)

(declare-fun e!47017 () Bool)

(assert (=> b!71859 (=> (not res!38243) (not e!47017))))

(declare-fun e!47021 () Bool)

(assert (=> b!71859 (= res!38243 e!47021)))

(declare-fun c!10540 () Bool)

(assert (=> b!71859 (= c!10540 (not (= (bvand lt!31453 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6238 () Bool)

(declare-fun call!6245 () Bool)

(declare-fun lt!32022 () ListLongMap!1395)

(assert (=> bm!6238 (= call!6245 (contains!715 lt!32022 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6239 () Bool)

(declare-fun call!6246 () Bool)

(assert (=> bm!6239 (= call!6246 (contains!715 lt!32022 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6240 () Bool)

(declare-fun call!6243 () ListLongMap!1395)

(assert (=> bm!6240 (= call!6243 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31453 (zeroValue!2095 newMap!16) lt!31220 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71860 () Bool)

(declare-fun res!38251 () Bool)

(assert (=> b!71860 (=> (not res!38251) (not e!47017))))

(declare-fun e!47020 () Bool)

(assert (=> b!71860 (= res!38251 e!47020)))

(declare-fun res!38248 () Bool)

(assert (=> b!71860 (=> res!38248 e!47020)))

(declare-fun e!47018 () Bool)

(assert (=> b!71860 (= res!38248 (not e!47018))))

(declare-fun res!38244 () Bool)

(assert (=> b!71860 (=> (not res!38244) (not e!47018))))

(assert (=> b!71860 (= res!38244 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71861 () Bool)

(declare-fun e!47012 () Bool)

(assert (=> b!71861 (= e!47017 e!47012)))

(declare-fun c!10538 () Bool)

(assert (=> b!71861 (= c!10538 (not (= (bvand lt!31453 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71862 () Bool)

(declare-fun e!47022 () Bool)

(assert (=> b!71862 (= e!47022 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71863 () Bool)

(declare-fun c!10543 () Bool)

(assert (=> b!71863 (= c!10543 (and (not (= (bvand lt!31453 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!31453 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47023 () ListLongMap!1395)

(assert (=> b!71863 (= e!47016 e!47023)))

(declare-fun b!71864 () Bool)

(declare-fun e!47014 () Unit!1996)

(declare-fun lt!32004 () Unit!1996)

(assert (=> b!71864 (= e!47014 lt!32004)))

(declare-fun lt!32015 () ListLongMap!1395)

(assert (=> b!71864 (= lt!32015 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31453 (zeroValue!2095 newMap!16) lt!31220 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32021 () (_ BitVec 64))

(assert (=> b!71864 (= lt!32021 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32018 () (_ BitVec 64))

(assert (=> b!71864 (= lt!32018 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32019 () Unit!1996)

(assert (=> b!71864 (= lt!32019 (addStillContains!50 lt!32015 lt!32021 (zeroValue!2095 newMap!16) lt!32018))))

(assert (=> b!71864 (contains!715 (+!91 lt!32015 (tuple2!2111 lt!32021 (zeroValue!2095 newMap!16))) lt!32018)))

(declare-fun lt!32013 () Unit!1996)

(assert (=> b!71864 (= lt!32013 lt!32019)))

(declare-fun lt!32016 () ListLongMap!1395)

(assert (=> b!71864 (= lt!32016 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31453 (zeroValue!2095 newMap!16) lt!31220 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32008 () (_ BitVec 64))

(assert (=> b!71864 (= lt!32008 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32020 () (_ BitVec 64))

(assert (=> b!71864 (= lt!32020 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32023 () Unit!1996)

(assert (=> b!71864 (= lt!32023 (addApplyDifferent!50 lt!32016 lt!32008 lt!31220 lt!32020))))

(assert (=> b!71864 (= (apply!74 (+!91 lt!32016 (tuple2!2111 lt!32008 lt!31220)) lt!32020) (apply!74 lt!32016 lt!32020))))

(declare-fun lt!32009 () Unit!1996)

(assert (=> b!71864 (= lt!32009 lt!32023)))

(declare-fun lt!32005 () ListLongMap!1395)

(assert (=> b!71864 (= lt!32005 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31453 (zeroValue!2095 newMap!16) lt!31220 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32011 () (_ BitVec 64))

(assert (=> b!71864 (= lt!32011 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32003 () (_ BitVec 64))

(assert (=> b!71864 (= lt!32003 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32006 () Unit!1996)

(assert (=> b!71864 (= lt!32006 (addApplyDifferent!50 lt!32005 lt!32011 (zeroValue!2095 newMap!16) lt!32003))))

(assert (=> b!71864 (= (apply!74 (+!91 lt!32005 (tuple2!2111 lt!32011 (zeroValue!2095 newMap!16))) lt!32003) (apply!74 lt!32005 lt!32003))))

(declare-fun lt!32010 () Unit!1996)

(assert (=> b!71864 (= lt!32010 lt!32006)))

(declare-fun lt!32014 () ListLongMap!1395)

(assert (=> b!71864 (= lt!32014 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31453 (zeroValue!2095 newMap!16) lt!31220 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32007 () (_ BitVec 64))

(assert (=> b!71864 (= lt!32007 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32012 () (_ BitVec 64))

(assert (=> b!71864 (= lt!32012 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71864 (= lt!32004 (addApplyDifferent!50 lt!32014 lt!32007 lt!31220 lt!32012))))

(assert (=> b!71864 (= (apply!74 (+!91 lt!32014 (tuple2!2111 lt!32007 lt!31220)) lt!32012) (apply!74 lt!32014 lt!32012))))

(declare-fun b!71865 () Bool)

(declare-fun call!6244 () ListLongMap!1395)

(assert (=> b!71865 (= e!47023 call!6244)))

(declare-fun c!10541 () Bool)

(declare-fun c!10542 () Bool)

(declare-fun call!6241 () ListLongMap!1395)

(declare-fun bm!6241 () Bool)

(assert (=> bm!6241 (= call!6240 (+!91 (ite c!10541 call!6243 (ite c!10542 call!6241 call!6244)) (ite (or c!10541 c!10542) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220))))))

(declare-fun b!71866 () Bool)

(declare-fun e!47015 () Bool)

(assert (=> b!71866 (= e!47012 e!47015)))

(declare-fun res!38246 () Bool)

(assert (=> b!71866 (= res!38246 call!6245)))

(assert (=> b!71866 (=> (not res!38246) (not e!47015))))

(declare-fun b!71867 () Bool)

(assert (=> b!71867 (= e!47015 (= (apply!74 lt!32022 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31220))))

(declare-fun bm!6242 () Bool)

(assert (=> bm!6242 (= call!6244 call!6241)))

(declare-fun b!71868 () Bool)

(assert (=> b!71868 (= e!47013 e!47016)))

(assert (=> b!71868 (= c!10542 (and (not (= (bvand lt!31453 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!31453 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71869 () Bool)

(declare-fun e!47011 () Bool)

(assert (=> b!71869 (= e!47021 e!47011)))

(declare-fun res!38247 () Bool)

(assert (=> b!71869 (= res!38247 call!6246)))

(assert (=> b!71869 (=> (not res!38247) (not e!47011))))

(declare-fun bm!6243 () Bool)

(assert (=> bm!6243 (= call!6241 call!6243)))

(declare-fun b!71870 () Bool)

(declare-fun e!47019 () Bool)

(assert (=> b!71870 (= e!47019 (= (apply!74 lt!32022 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71870 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (_values!2174 newMap!16))))))

(assert (=> b!71870 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun d!16217 () Bool)

(assert (=> d!16217 e!47017))

(declare-fun res!38249 () Bool)

(assert (=> d!16217 (=> (not res!38249) (not e!47017))))

(assert (=> d!16217 (= res!38249 (or (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))))

(declare-fun lt!32002 () ListLongMap!1395)

(assert (=> d!16217 (= lt!32022 lt!32002)))

(declare-fun lt!32017 () Unit!1996)

(assert (=> d!16217 (= lt!32017 e!47014)))

(declare-fun c!10539 () Bool)

(assert (=> d!16217 (= c!10539 e!47022)))

(declare-fun res!38245 () Bool)

(assert (=> d!16217 (=> (not res!38245) (not e!47022))))

(assert (=> d!16217 (= res!38245 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16217 (= lt!32002 e!47013)))

(assert (=> d!16217 (= c!10541 (and (not (= (bvand lt!31453 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!31453 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16217 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16217 (= (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31453 (zeroValue!2095 newMap!16) lt!31220 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32022)))

(declare-fun b!71871 () Bool)

(declare-fun Unit!2040 () Unit!1996)

(assert (=> b!71871 (= e!47014 Unit!2040)))

(declare-fun b!71872 () Bool)

(assert (=> b!71872 (= e!47011 (= (apply!74 lt!32022 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!71873 () Bool)

(assert (=> b!71873 (= e!47018 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71874 () Bool)

(assert (=> b!71874 (= e!47012 (not call!6245))))

(declare-fun b!71875 () Bool)

(assert (=> b!71875 (= e!47021 (not call!6246))))

(declare-fun b!71876 () Bool)

(assert (=> b!71876 (= e!47020 e!47019)))

(declare-fun res!38250 () Bool)

(assert (=> b!71876 (=> (not res!38250) (not e!47019))))

(assert (=> b!71876 (= res!38250 (contains!715 lt!32022 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71876 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!71877 () Bool)

(assert (=> b!71877 (= e!47023 call!6242)))

(assert (= (and d!16217 c!10541) b!71858))

(assert (= (and d!16217 (not c!10541)) b!71868))

(assert (= (and b!71868 c!10542) b!71857))

(assert (= (and b!71868 (not c!10542)) b!71863))

(assert (= (and b!71863 c!10543) b!71877))

(assert (= (and b!71863 (not c!10543)) b!71865))

(assert (= (or b!71877 b!71865) bm!6242))

(assert (= (or b!71857 bm!6242) bm!6243))

(assert (= (or b!71857 b!71877) bm!6237))

(assert (= (or b!71858 bm!6243) bm!6240))

(assert (= (or b!71858 bm!6237) bm!6241))

(assert (= (and d!16217 res!38245) b!71862))

(assert (= (and d!16217 c!10539) b!71864))

(assert (= (and d!16217 (not c!10539)) b!71871))

(assert (= (and d!16217 res!38249) b!71860))

(assert (= (and b!71860 res!38244) b!71873))

(assert (= (and b!71860 (not res!38248)) b!71876))

(assert (= (and b!71876 res!38250) b!71870))

(assert (= (and b!71860 res!38251) b!71859))

(assert (= (and b!71859 c!10540) b!71869))

(assert (= (and b!71859 (not c!10540)) b!71875))

(assert (= (and b!71869 res!38247) b!71872))

(assert (= (or b!71869 b!71875) bm!6239))

(assert (= (and b!71859 res!38243) b!71861))

(assert (= (and b!71861 c!10538) b!71866))

(assert (= (and b!71861 (not c!10538)) b!71874))

(assert (= (and b!71866 res!38246) b!71867))

(assert (= (or b!71866 b!71874) bm!6238))

(declare-fun b_lambda!3233 () Bool)

(assert (=> (not b_lambda!3233) (not b!71870)))

(assert (=> b!71870 t!5010))

(declare-fun b_and!4433 () Bool)

(assert (= b_and!4429 (and (=> t!5010 result!2661) b_and!4433)))

(assert (=> b!71870 t!5012))

(declare-fun b_and!4435 () Bool)

(assert (= b_and!4431 (and (=> t!5012 result!2663) b_and!4435)))

(declare-fun m!69487 () Bool)

(assert (=> b!71872 m!69487))

(declare-fun m!69489 () Bool)

(assert (=> b!71867 m!69489))

(assert (=> d!16217 m!68327))

(declare-fun m!69491 () Bool)

(assert (=> bm!6238 m!69491))

(assert (=> b!71873 m!68397))

(assert (=> b!71873 m!68397))

(assert (=> b!71873 m!68399))

(declare-fun m!69493 () Bool)

(assert (=> bm!6239 m!69493))

(assert (=> b!71876 m!68397))

(assert (=> b!71876 m!68397))

(declare-fun m!69495 () Bool)

(assert (=> b!71876 m!69495))

(assert (=> b!71862 m!68397))

(assert (=> b!71862 m!68397))

(assert (=> b!71862 m!68399))

(declare-fun m!69497 () Bool)

(assert (=> bm!6241 m!69497))

(declare-fun m!69499 () Bool)

(assert (=> bm!6240 m!69499))

(declare-fun m!69501 () Bool)

(assert (=> b!71858 m!69501))

(declare-fun m!69503 () Bool)

(assert (=> b!71864 m!69503))

(declare-fun m!69505 () Bool)

(assert (=> b!71864 m!69505))

(declare-fun m!69507 () Bool)

(assert (=> b!71864 m!69507))

(declare-fun m!69509 () Bool)

(assert (=> b!71864 m!69509))

(declare-fun m!69511 () Bool)

(assert (=> b!71864 m!69511))

(declare-fun m!69513 () Bool)

(assert (=> b!71864 m!69513))

(declare-fun m!69515 () Bool)

(assert (=> b!71864 m!69515))

(declare-fun m!69517 () Bool)

(assert (=> b!71864 m!69517))

(assert (=> b!71864 m!68397))

(assert (=> b!71864 m!69511))

(declare-fun m!69519 () Bool)

(assert (=> b!71864 m!69519))

(assert (=> b!71864 m!69507))

(declare-fun m!69521 () Bool)

(assert (=> b!71864 m!69521))

(declare-fun m!69523 () Bool)

(assert (=> b!71864 m!69523))

(declare-fun m!69525 () Bool)

(assert (=> b!71864 m!69525))

(declare-fun m!69527 () Bool)

(assert (=> b!71864 m!69527))

(assert (=> b!71864 m!69499))

(assert (=> b!71864 m!69521))

(declare-fun m!69529 () Bool)

(assert (=> b!71864 m!69529))

(declare-fun m!69531 () Bool)

(assert (=> b!71864 m!69531))

(assert (=> b!71864 m!69515))

(assert (=> b!71870 m!68441))

(assert (=> b!71870 m!68397))

(declare-fun m!69533 () Bool)

(assert (=> b!71870 m!69533))

(assert (=> b!71870 m!68793))

(assert (=> b!71870 m!68441))

(assert (=> b!71870 m!68795))

(assert (=> b!71870 m!68793))

(assert (=> b!71870 m!68397))

(assert (=> d!15905 d!16217))

(assert (=> d!15905 d!16115))

(declare-fun d!16219 () Bool)

(declare-fun e!47025 () Bool)

(assert (=> d!16219 e!47025))

(declare-fun res!38252 () Bool)

(assert (=> d!16219 (=> res!38252 e!47025)))

(declare-fun lt!32027 () Bool)

(assert (=> d!16219 (= res!38252 (not lt!32027))))

(declare-fun lt!32026 () Bool)

(assert (=> d!16219 (= lt!32027 lt!32026)))

(declare-fun lt!32025 () Unit!1996)

(declare-fun e!47024 () Unit!1996)

(assert (=> d!16219 (= lt!32025 e!47024)))

(declare-fun c!10544 () Bool)

(assert (=> d!16219 (= c!10544 lt!32026)))

(assert (=> d!16219 (= lt!32026 (containsKey!136 (toList!713 lt!31632) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!16219 (= (contains!715 lt!31632 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32027)))

(declare-fun b!71878 () Bool)

(declare-fun lt!32024 () Unit!1996)

(assert (=> b!71878 (= e!47024 lt!32024)))

(assert (=> b!71878 (= lt!32024 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31632) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> b!71878 (isDefined!85 (getValueByKey!133 (toList!713 lt!31632) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71879 () Bool)

(declare-fun Unit!2041 () Unit!1996)

(assert (=> b!71879 (= e!47024 Unit!2041)))

(declare-fun b!71880 () Bool)

(assert (=> b!71880 (= e!47025 (isDefined!85 (getValueByKey!133 (toList!713 lt!31632) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16219 c!10544) b!71878))

(assert (= (and d!16219 (not c!10544)) b!71879))

(assert (= (and d!16219 (not res!38252)) b!71880))

(declare-fun m!69535 () Bool)

(assert (=> d!16219 m!69535))

(declare-fun m!69537 () Bool)

(assert (=> b!71878 m!69537))

(assert (=> b!71878 m!68549))

(assert (=> b!71878 m!68549))

(declare-fun m!69539 () Bool)

(assert (=> b!71878 m!69539))

(assert (=> b!71880 m!68549))

(assert (=> b!71880 m!68549))

(assert (=> b!71880 m!69539))

(assert (=> d!15959 d!16219))

(declare-fun b!71882 () Bool)

(declare-fun e!47026 () Option!139)

(declare-fun e!47027 () Option!139)

(assert (=> b!71882 (= e!47026 e!47027)))

(declare-fun c!10546 () Bool)

(assert (=> b!71882 (= c!10546 (and ((_ is Cons!1463) lt!31630) (not (= (_1!1066 (h!2049 lt!31630)) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!71884 () Bool)

(assert (=> b!71884 (= e!47027 None!137)))

(declare-fun b!71883 () Bool)

(assert (=> b!71883 (= e!47027 (getValueByKey!133 (t!4995 lt!31630) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun c!10545 () Bool)

(declare-fun d!16221 () Bool)

(assert (=> d!16221 (= c!10545 (and ((_ is Cons!1463) lt!31630) (= (_1!1066 (h!2049 lt!31630)) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16221 (= (getValueByKey!133 lt!31630 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47026)))

(declare-fun b!71881 () Bool)

(assert (=> b!71881 (= e!47026 (Some!138 (_2!1066 (h!2049 lt!31630))))))

(assert (= (and d!16221 c!10545) b!71881))

(assert (= (and d!16221 (not c!10545)) b!71882))

(assert (= (and b!71882 c!10546) b!71883))

(assert (= (and b!71882 (not c!10546)) b!71884))

(declare-fun m!69541 () Bool)

(assert (=> b!71883 m!69541))

(assert (=> d!15959 d!16221))

(declare-fun d!16223 () Bool)

(assert (=> d!16223 (= (getValueByKey!133 lt!31630 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!32028 () Unit!1996)

(assert (=> d!16223 (= lt!32028 (choose!406 lt!31630 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun e!47028 () Bool)

(assert (=> d!16223 e!47028))

(declare-fun res!38253 () Bool)

(assert (=> d!16223 (=> (not res!38253) (not e!47028))))

(assert (=> d!16223 (= res!38253 (isStrictlySorted!278 lt!31630))))

(assert (=> d!16223 (= (lemmaContainsTupThenGetReturnValue!50 lt!31630 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32028)))

(declare-fun b!71885 () Bool)

(declare-fun res!38254 () Bool)

(assert (=> b!71885 (=> (not res!38254) (not e!47028))))

(assert (=> b!71885 (= res!38254 (containsKey!136 lt!31630 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71886 () Bool)

(assert (=> b!71886 (= e!47028 (contains!719 lt!31630 (tuple2!2111 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16223 res!38253) b!71885))

(assert (= (and b!71885 res!38254) b!71886))

(assert (=> d!16223 m!68543))

(declare-fun m!69543 () Bool)

(assert (=> d!16223 m!69543))

(declare-fun m!69545 () Bool)

(assert (=> d!16223 m!69545))

(declare-fun m!69547 () Bool)

(assert (=> b!71885 m!69547))

(declare-fun m!69549 () Bool)

(assert (=> b!71886 m!69549))

(assert (=> d!15959 d!16223))

(declare-fun b!71887 () Bool)

(declare-fun e!47033 () List!1467)

(declare-fun call!6249 () List!1467)

(assert (=> b!71887 (= e!47033 call!6249)))

(declare-fun e!47032 () List!1467)

(declare-fun bm!6244 () Bool)

(declare-fun c!10550 () Bool)

(assert (=> bm!6244 (= call!6249 ($colon$colon!64 e!47032 (ite c!10550 (h!2049 (toList!713 lt!31358)) (tuple2!2111 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun c!10549 () Bool)

(assert (=> bm!6244 (= c!10549 c!10550)))

(declare-fun d!16225 () Bool)

(declare-fun e!47031 () Bool)

(assert (=> d!16225 e!47031))

(declare-fun res!38256 () Bool)

(assert (=> d!16225 (=> (not res!38256) (not e!47031))))

(declare-fun lt!32029 () List!1467)

(assert (=> d!16225 (= res!38256 (isStrictlySorted!278 lt!32029))))

(assert (=> d!16225 (= lt!32029 e!47033)))

(assert (=> d!16225 (= c!10550 (and ((_ is Cons!1463) (toList!713 lt!31358)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31358))) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16225 (isStrictlySorted!278 (toList!713 lt!31358))))

(assert (=> d!16225 (= (insertStrictlySorted!53 (toList!713 lt!31358) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32029)))

(declare-fun b!71888 () Bool)

(declare-fun e!47029 () List!1467)

(declare-fun call!6247 () List!1467)

(assert (=> b!71888 (= e!47029 call!6247)))

(declare-fun c!10547 () Bool)

(declare-fun b!71889 () Bool)

(assert (=> b!71889 (= c!10547 (and ((_ is Cons!1463) (toList!713 lt!31358)) (bvsgt (_1!1066 (h!2049 (toList!713 lt!31358))) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun e!47030 () List!1467)

(assert (=> b!71889 (= e!47029 e!47030)))

(declare-fun b!71890 () Bool)

(declare-fun call!6248 () List!1467)

(assert (=> b!71890 (= e!47030 call!6248)))

(declare-fun b!71891 () Bool)

(assert (=> b!71891 (= e!47030 call!6248)))

(declare-fun b!71892 () Bool)

(declare-fun res!38255 () Bool)

(assert (=> b!71892 (=> (not res!38255) (not e!47031))))

(assert (=> b!71892 (= res!38255 (containsKey!136 lt!32029 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun c!10548 () Bool)

(declare-fun b!71893 () Bool)

(assert (=> b!71893 (= e!47032 (ite c!10548 (t!4995 (toList!713 lt!31358)) (ite c!10547 (Cons!1463 (h!2049 (toList!713 lt!31358)) (t!4995 (toList!713 lt!31358))) Nil!1464)))))

(declare-fun bm!6245 () Bool)

(assert (=> bm!6245 (= call!6247 call!6249)))

(declare-fun b!71894 () Bool)

(assert (=> b!71894 (= e!47033 e!47029)))

(assert (=> b!71894 (= c!10548 (and ((_ is Cons!1463) (toList!713 lt!31358)) (= (_1!1066 (h!2049 (toList!713 lt!31358))) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun bm!6246 () Bool)

(assert (=> bm!6246 (= call!6248 call!6247)))

(declare-fun b!71895 () Bool)

(assert (=> b!71895 (= e!47032 (insertStrictlySorted!53 (t!4995 (toList!713 lt!31358)) (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71896 () Bool)

(assert (=> b!71896 (= e!47031 (contains!719 lt!32029 (tuple2!2111 (_1!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16225 c!10550) b!71887))

(assert (= (and d!16225 (not c!10550)) b!71894))

(assert (= (and b!71894 c!10548) b!71888))

(assert (= (and b!71894 (not c!10548)) b!71889))

(assert (= (and b!71889 c!10547) b!71890))

(assert (= (and b!71889 (not c!10547)) b!71891))

(assert (= (or b!71890 b!71891) bm!6246))

(assert (= (or b!71888 bm!6246) bm!6245))

(assert (= (or b!71887 bm!6245) bm!6244))

(assert (= (and bm!6244 c!10549) b!71895))

(assert (= (and bm!6244 (not c!10549)) b!71893))

(assert (= (and d!16225 res!38256) b!71892))

(assert (= (and b!71892 res!38255) b!71896))

(declare-fun m!69551 () Bool)

(assert (=> b!71892 m!69551))

(declare-fun m!69553 () Bool)

(assert (=> b!71896 m!69553))

(declare-fun m!69555 () Bool)

(assert (=> bm!6244 m!69555))

(declare-fun m!69557 () Bool)

(assert (=> d!16225 m!69557))

(declare-fun m!69559 () Bool)

(assert (=> d!16225 m!69559))

(declare-fun m!69561 () Bool)

(assert (=> b!71895 m!69561))

(assert (=> d!15959 d!16225))

(declare-fun d!16227 () Bool)

(assert (=> d!16227 (= (apply!74 lt!31716 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1146 (getValueByKey!133 (toList!713 lt!31716) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3095 () Bool)

(assert (= bs!3095 d!16227))

(declare-fun m!69563 () Bool)

(assert (=> bs!3095 m!69563))

(assert (=> bs!3095 m!69563))

(declare-fun m!69565 () Bool)

(assert (=> bs!3095 m!69565))

(assert (=> b!71370 d!16227))

(declare-fun d!16229 () Bool)

(assert (=> d!16229 (= (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31355)) (v!2522 (getValueByKey!133 (toList!713 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31355)))))

(assert (=> d!15981 d!16229))

(declare-fun b!71898 () Bool)

(declare-fun e!47034 () Option!139)

(declare-fun e!47035 () Option!139)

(assert (=> b!71898 (= e!47034 e!47035)))

(declare-fun c!10552 () Bool)

(assert (=> b!71898 (= c!10552 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) (not (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31355))))))

(declare-fun b!71900 () Bool)

(assert (=> b!71900 (= e!47035 None!137)))

(declare-fun b!71899 () Bool)

(assert (=> b!71899 (= e!47035 (getValueByKey!133 (t!4995 (toList!713 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) lt!31355))))

(declare-fun c!10551 () Bool)

(declare-fun d!16231 () Bool)

(assert (=> d!16231 (= c!10551 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31355)))))

(assert (=> d!16231 (= (getValueByKey!133 (toList!713 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31355) e!47034)))

(declare-fun b!71897 () Bool)

(assert (=> b!71897 (= e!47034 (Some!138 (_2!1066 (h!2049 (toList!713 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))))

(assert (= (and d!16231 c!10551) b!71897))

(assert (= (and d!16231 (not c!10551)) b!71898))

(assert (= (and b!71898 c!10552) b!71899))

(assert (= (and b!71898 (not c!10552)) b!71900))

(declare-fun m!69567 () Bool)

(assert (=> b!71899 m!69567))

(assert (=> d!15981 d!16231))

(declare-fun b!71901 () Bool)

(declare-fun res!38258 () Bool)

(declare-fun e!47037 () Bool)

(assert (=> b!71901 (=> (not res!38258) (not e!47037))))

(declare-fun lt!32036 () ListLongMap!1395)

(assert (=> b!71901 (= res!38258 (not (contains!715 lt!32036 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71902 () Bool)

(declare-fun e!47039 () Bool)

(assert (=> b!71902 (= e!47039 (isEmpty!319 lt!32036))))

(declare-fun b!71903 () Bool)

(assert (=> b!71903 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> b!71903 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2082 (_values!2174 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun e!47041 () Bool)

(assert (=> b!71903 (= e!47041 (= (apply!74 lt!32036 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!6247 () Bool)

(declare-fun call!6250 () ListLongMap!1395)

(assert (=> bm!6247 (= call!6250 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!71904 () Bool)

(declare-fun lt!32034 () Unit!1996)

(declare-fun lt!32031 () Unit!1996)

(assert (=> b!71904 (= lt!32034 lt!32031)))

(declare-fun lt!32033 () ListLongMap!1395)

(declare-fun lt!32032 () V!2937)

(declare-fun lt!32035 () (_ BitVec 64))

(declare-fun lt!32030 () (_ BitVec 64))

(assert (=> b!71904 (not (contains!715 (+!91 lt!32033 (tuple2!2111 lt!32030 lt!32032)) lt!32035))))

(assert (=> b!71904 (= lt!32031 (addStillNotContains!25 lt!32033 lt!32030 lt!32032 lt!32035))))

(assert (=> b!71904 (= lt!32035 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71904 (= lt!32032 (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71904 (= lt!32030 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!71904 (= lt!32033 call!6250)))

(declare-fun e!47042 () ListLongMap!1395)

(assert (=> b!71904 (= e!47042 (+!91 call!6250 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71905 () Bool)

(declare-fun e!47038 () Bool)

(assert (=> b!71905 (= e!47037 e!47038)))

(declare-fun c!10553 () Bool)

(declare-fun e!47036 () Bool)

(assert (=> b!71905 (= c!10553 e!47036)))

(declare-fun res!38257 () Bool)

(assert (=> b!71905 (=> (not res!38257) (not e!47036))))

(assert (=> b!71905 (= res!38257 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!71906 () Bool)

(assert (=> b!71906 (= e!47036 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!71906 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!71907 () Bool)

(assert (=> b!71907 (= e!47038 e!47041)))

(assert (=> b!71907 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun res!38259 () Bool)

(assert (=> b!71907 (= res!38259 (contains!715 lt!32036 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!71907 (=> (not res!38259) (not e!47041))))

(declare-fun b!71908 () Bool)

(assert (=> b!71908 (= e!47038 e!47039)))

(declare-fun c!10556 () Bool)

(assert (=> b!71908 (= c!10556 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!71909 () Bool)

(declare-fun e!47040 () ListLongMap!1395)

(assert (=> b!71909 (= e!47040 e!47042)))

(declare-fun c!10555 () Bool)

(assert (=> b!71909 (= c!10555 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!71910 () Bool)

(assert (=> b!71910 (= e!47039 (= lt!32036 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun d!16233 () Bool)

(assert (=> d!16233 e!47037))

(declare-fun res!38260 () Bool)

(assert (=> d!16233 (=> (not res!38260) (not e!47037))))

(assert (=> d!16233 (= res!38260 (not (contains!715 lt!32036 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16233 (= lt!32036 e!47040)))

(declare-fun c!10554 () Bool)

(assert (=> d!16233 (= c!10554 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!16233 (validMask!0 (mask!6148 (v!2516 (underlying!259 thiss!992))))))

(assert (=> d!16233 (= (getCurrentListMapNoExtraKeys!56 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (_values!2174 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992))) (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) (minValue!2095 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992)))) lt!32036)))

(declare-fun b!71911 () Bool)

(assert (=> b!71911 (= e!47042 call!6250)))

(declare-fun b!71912 () Bool)

(assert (=> b!71912 (= e!47040 (ListLongMap!1396 Nil!1464))))

(assert (= (and d!16233 c!10554) b!71912))

(assert (= (and d!16233 (not c!10554)) b!71909))

(assert (= (and b!71909 c!10555) b!71904))

(assert (= (and b!71909 (not c!10555)) b!71911))

(assert (= (or b!71904 b!71911) bm!6247))

(assert (= (and d!16233 res!38260) b!71901))

(assert (= (and b!71901 res!38258) b!71905))

(assert (= (and b!71905 res!38257) b!71906))

(assert (= (and b!71905 c!10553) b!71907))

(assert (= (and b!71905 (not c!10553)) b!71908))

(assert (= (and b!71907 res!38259) b!71903))

(assert (= (and b!71908 c!10556) b!71910))

(assert (= (and b!71908 (not c!10556)) b!71902))

(declare-fun b_lambda!3235 () Bool)

(assert (=> (not b_lambda!3235) (not b!71903)))

(assert (=> b!71903 t!4992))

(declare-fun b_and!4437 () Bool)

(assert (= b_and!4433 (and (=> t!4992 result!2641) b_and!4437)))

(assert (=> b!71903 t!4994))

(declare-fun b_and!4439 () Bool)

(assert (= b_and!4435 (and (=> t!4994 result!2645) b_and!4439)))

(declare-fun b_lambda!3237 () Bool)

(assert (=> (not b_lambda!3237) (not b!71904)))

(assert (=> b!71904 t!4992))

(declare-fun b_and!4441 () Bool)

(assert (= b_and!4437 (and (=> t!4992 result!2641) b_and!4441)))

(assert (=> b!71904 t!4994))

(declare-fun b_and!4443 () Bool)

(assert (= b_and!4439 (and (=> t!4994 result!2645) b_and!4443)))

(declare-fun m!69569 () Bool)

(assert (=> d!16233 m!69569))

(assert (=> d!16233 m!67845))

(assert (=> b!71906 m!69205))

(assert (=> b!71906 m!69205))

(declare-fun m!69571 () Bool)

(assert (=> b!71906 m!69571))

(declare-fun m!69573 () Bool)

(assert (=> b!71902 m!69573))

(assert (=> b!71907 m!69205))

(assert (=> b!71907 m!69205))

(declare-fun m!69575 () Bool)

(assert (=> b!71907 m!69575))

(declare-fun m!69577 () Bool)

(assert (=> b!71910 m!69577))

(assert (=> bm!6247 m!69577))

(assert (=> b!71903 m!69205))

(declare-fun m!69579 () Bool)

(assert (=> b!71903 m!69579))

(declare-fun m!69581 () Bool)

(assert (=> b!71903 m!69581))

(assert (=> b!71903 m!69581))

(assert (=> b!71903 m!67823))

(declare-fun m!69583 () Bool)

(assert (=> b!71903 m!69583))

(assert (=> b!71903 m!67823))

(assert (=> b!71903 m!69205))

(declare-fun m!69585 () Bool)

(assert (=> b!71901 m!69585))

(assert (=> b!71909 m!69205))

(assert (=> b!71909 m!69205))

(assert (=> b!71909 m!69571))

(declare-fun m!69587 () Bool)

(assert (=> b!71904 m!69587))

(declare-fun m!69589 () Bool)

(assert (=> b!71904 m!69589))

(declare-fun m!69591 () Bool)

(assert (=> b!71904 m!69591))

(assert (=> b!71904 m!69581))

(assert (=> b!71904 m!69581))

(assert (=> b!71904 m!67823))

(assert (=> b!71904 m!69583))

(assert (=> b!71904 m!69589))

(assert (=> b!71904 m!69205))

(assert (=> b!71904 m!67823))

(declare-fun m!69593 () Bool)

(assert (=> b!71904 m!69593))

(assert (=> b!71345 d!16233))

(declare-fun b!71914 () Bool)

(declare-fun e!47043 () Option!139)

(declare-fun e!47044 () Option!139)

(assert (=> b!71914 (= e!47043 e!47044)))

(declare-fun c!10558 () Bool)

(assert (=> b!71914 (= c!10558 (and ((_ is Cons!1463) (toList!713 lt!31627)) (not (= (_1!1066 (h!2049 (toList!713 lt!31627))) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!71916 () Bool)

(assert (=> b!71916 (= e!47044 None!137)))

(declare-fun b!71915 () Bool)

(assert (=> b!71915 (= e!47044 (getValueByKey!133 (t!4995 (toList!713 lt!31627)) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun c!10557 () Bool)

(declare-fun d!16235 () Bool)

(assert (=> d!16235 (= c!10557 (and ((_ is Cons!1463) (toList!713 lt!31627)) (= (_1!1066 (h!2049 (toList!713 lt!31627))) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16235 (= (getValueByKey!133 (toList!713 lt!31627) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47043)))

(declare-fun b!71913 () Bool)

(assert (=> b!71913 (= e!47043 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31627)))))))

(assert (= (and d!16235 c!10557) b!71913))

(assert (= (and d!16235 (not c!10557)) b!71914))

(assert (= (and b!71914 c!10558) b!71915))

(assert (= (and b!71914 (not c!10558)) b!71916))

(declare-fun m!69595 () Bool)

(assert (=> b!71915 m!69595))

(assert (=> b!71278 d!16235))

(declare-fun b!71935 () Bool)

(declare-fun e!47055 () SeekEntryResult!229)

(assert (=> b!71935 (= e!47055 (Intermediate!229 true (toIndex!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (mask!6148 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!16237 () Bool)

(declare-fun e!47057 () Bool)

(assert (=> d!16237 e!47057))

(declare-fun c!10566 () Bool)

(declare-fun lt!32042 () SeekEntryResult!229)

(assert (=> d!16237 (= c!10566 (and ((_ is Intermediate!229) lt!32042) (undefined!1041 lt!32042)))))

(assert (=> d!16237 (= lt!32042 e!47055)))

(declare-fun c!10567 () Bool)

(assert (=> d!16237 (= c!10567 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!32041 () (_ BitVec 64))

(assert (=> d!16237 (= lt!32041 (select (arr!1844 (_keys!3839 newMap!16)) (toIndex!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (mask!6148 newMap!16))))))

(assert (=> d!16237 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16237 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (mask!6148 newMap!16)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)) lt!32042)))

(declare-fun b!71936 () Bool)

(declare-fun e!47059 () Bool)

(assert (=> b!71936 (= e!47057 e!47059)))

(declare-fun res!38267 () Bool)

(assert (=> b!71936 (= res!38267 (and ((_ is Intermediate!229) lt!32042) (not (undefined!1041 lt!32042)) (bvslt (x!11001 lt!32042) #b01111111111111111111111111111110) (bvsge (x!11001 lt!32042) #b00000000000000000000000000000000) (bvsge (x!11001 lt!32042) #b00000000000000000000000000000000)))))

(assert (=> b!71936 (=> (not res!38267) (not e!47059))))

(declare-fun b!71937 () Bool)

(assert (=> b!71937 (= e!47057 (bvsge (x!11001 lt!32042) #b01111111111111111111111111111110))))

(declare-fun b!71938 () Bool)

(assert (=> b!71938 (and (bvsge (index!3048 lt!32042) #b00000000000000000000000000000000) (bvslt (index!3048 lt!32042) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun res!38268 () Bool)

(assert (=> b!71938 (= res!38268 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3048 lt!32042)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47058 () Bool)

(assert (=> b!71938 (=> res!38268 e!47058)))

(declare-fun b!71939 () Bool)

(assert (=> b!71939 (and (bvsge (index!3048 lt!32042) #b00000000000000000000000000000000) (bvslt (index!3048 lt!32042) (size!2081 (_keys!3839 newMap!16))))))

(assert (=> b!71939 (= e!47058 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3048 lt!32042)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71940 () Bool)

(assert (=> b!71940 (and (bvsge (index!3048 lt!32042) #b00000000000000000000000000000000) (bvslt (index!3048 lt!32042) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun res!38269 () Bool)

(assert (=> b!71940 (= res!38269 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3048 lt!32042)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> b!71940 (=> res!38269 e!47058)))

(assert (=> b!71940 (= e!47059 e!47058)))

(declare-fun b!71941 () Bool)

(declare-fun e!47056 () SeekEntryResult!229)

(assert (=> b!71941 (= e!47055 e!47056)))

(declare-fun c!10565 () Bool)

(assert (=> b!71941 (= c!10565 (or (= lt!32041 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (= (bvadd lt!32041 lt!32041) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71942 () Bool)

(assert (=> b!71942 (= e!47056 (Intermediate!229 false (toIndex!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (mask!6148 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!71943 () Bool)

(assert (=> b!71943 (= e!47056 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (mask!6148 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6148 newMap!16)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(assert (= (and d!16237 c!10567) b!71935))

(assert (= (and d!16237 (not c!10567)) b!71941))

(assert (= (and b!71941 c!10565) b!71942))

(assert (= (and b!71941 (not c!10565)) b!71943))

(assert (= (and d!16237 c!10566) b!71937))

(assert (= (and d!16237 (not c!10566)) b!71936))

(assert (= (and b!71936 res!38267) b!71940))

(assert (= (and b!71940 (not res!38269)) b!71938))

(assert (= (and b!71938 (not res!38268)) b!71939))

(assert (=> b!71943 m!68673))

(declare-fun m!69597 () Bool)

(assert (=> b!71943 m!69597))

(assert (=> b!71943 m!69597))

(assert (=> b!71943 m!67819))

(declare-fun m!69599 () Bool)

(assert (=> b!71943 m!69599))

(declare-fun m!69601 () Bool)

(assert (=> b!71939 m!69601))

(assert (=> b!71938 m!69601))

(assert (=> b!71940 m!69601))

(assert (=> d!16237 m!68673))

(declare-fun m!69603 () Bool)

(assert (=> d!16237 m!69603))

(assert (=> d!16237 m!68327))

(assert (=> d!15999 d!16237))

(declare-fun d!16239 () Bool)

(declare-fun lt!32048 () (_ BitVec 32))

(declare-fun lt!32047 () (_ BitVec 32))

(assert (=> d!16239 (= lt!32048 (bvmul (bvxor lt!32047 (bvlshr lt!32047 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!16239 (= lt!32047 ((_ extract 31 0) (bvand (bvxor (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvlshr (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!16239 (and (bvsge (mask!6148 newMap!16) #b00000000000000000000000000000000) (let ((res!38270 (let ((h!2055 ((_ extract 31 0) (bvand (bvxor (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvlshr (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11104 (bvmul (bvxor h!2055 (bvlshr h!2055 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11104 (bvlshr x!11104 #b00000000000000000000000000001101)) (mask!6148 newMap!16)))))) (and (bvslt res!38270 (bvadd (mask!6148 newMap!16) #b00000000000000000000000000000001)) (bvsge res!38270 #b00000000000000000000000000000000))))))

(assert (=> d!16239 (= (toIndex!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (mask!6148 newMap!16)) (bvand (bvxor lt!32048 (bvlshr lt!32048 #b00000000000000000000000000001101)) (mask!6148 newMap!16)))))

(assert (=> d!15999 d!16239))

(assert (=> d!15999 d!16115))

(declare-fun b!71945 () Bool)

(declare-fun e!47060 () Option!139)

(declare-fun e!47061 () Option!139)

(assert (=> b!71945 (= e!47060 e!47061)))

(declare-fun c!10569 () Bool)

(assert (=> b!71945 (= c!10569 (and ((_ is Cons!1463) (toList!713 lt!31543)) (not (= (_1!1066 (h!2049 (toList!713 lt!31543))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!71947 () Bool)

(assert (=> b!71947 (= e!47061 None!137)))

(declare-fun b!71946 () Bool)

(assert (=> b!71946 (= e!47061 (getValueByKey!133 (t!4995 (toList!713 lt!31543)) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun d!16241 () Bool)

(declare-fun c!10568 () Bool)

(assert (=> d!16241 (= c!10568 (and ((_ is Cons!1463) (toList!713 lt!31543)) (= (_1!1066 (h!2049 (toList!713 lt!31543))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16241 (= (getValueByKey!133 (toList!713 lt!31543) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47060)))

(declare-fun b!71944 () Bool)

(assert (=> b!71944 (= e!47060 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31543)))))))

(assert (= (and d!16241 c!10568) b!71944))

(assert (= (and d!16241 (not c!10568)) b!71945))

(assert (= (and b!71945 c!10569) b!71946))

(assert (= (and b!71945 (not c!10569)) b!71947))

(declare-fun m!69605 () Bool)

(assert (=> b!71946 m!69605))

(assert (=> b!71140 d!16241))

(declare-fun d!16243 () Bool)

(assert (=> d!16243 (= (apply!74 lt!31681 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1146 (getValueByKey!133 (toList!713 lt!31681) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3096 () Bool)

(assert (= bs!3096 d!16243))

(assert (=> bs!3096 m!68687))

(declare-fun m!69607 () Bool)

(assert (=> bs!3096 m!69607))

(assert (=> bs!3096 m!69607))

(declare-fun m!69609 () Bool)

(assert (=> bs!3096 m!69609))

(assert (=> b!71338 d!16243))

(declare-fun d!16245 () Bool)

(declare-fun c!10570 () Bool)

(assert (=> d!16245 (= c!10570 ((_ is ValueCellFull!890) (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!47062 () V!2937)

(assert (=> d!16245 (= (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47062)))

(declare-fun b!71948 () Bool)

(assert (=> b!71948 (= e!47062 (get!1144 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71949 () Bool)

(assert (=> b!71949 (= e!47062 (get!1145 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16245 c!10570) b!71948))

(assert (= (and d!16245 (not c!10570)) b!71949))

(assert (=> b!71948 m!68699))

(assert (=> b!71948 m!67823))

(declare-fun m!69611 () Bool)

(assert (=> b!71948 m!69611))

(assert (=> b!71949 m!68699))

(assert (=> b!71949 m!67823))

(declare-fun m!69613 () Bool)

(assert (=> b!71949 m!69613))

(assert (=> b!71338 d!16245))

(declare-fun d!16247 () Bool)

(declare-fun res!38271 () Bool)

(declare-fun e!47063 () Bool)

(assert (=> d!16247 (=> res!38271 e!47063)))

(assert (=> d!16247 (= res!38271 (and ((_ is Cons!1463) (toList!713 lt!31512)) (= (_1!1066 (h!2049 (toList!713 lt!31512))) (_1!1066 lt!31223))))))

(assert (=> d!16247 (= (containsKey!136 (toList!713 lt!31512) (_1!1066 lt!31223)) e!47063)))

(declare-fun b!71950 () Bool)

(declare-fun e!47064 () Bool)

(assert (=> b!71950 (= e!47063 e!47064)))

(declare-fun res!38272 () Bool)

(assert (=> b!71950 (=> (not res!38272) (not e!47064))))

(assert (=> b!71950 (= res!38272 (and (or (not ((_ is Cons!1463) (toList!713 lt!31512))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31512))) (_1!1066 lt!31223))) ((_ is Cons!1463) (toList!713 lt!31512)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31512))) (_1!1066 lt!31223))))))

(declare-fun b!71951 () Bool)

(assert (=> b!71951 (= e!47064 (containsKey!136 (t!4995 (toList!713 lt!31512)) (_1!1066 lt!31223)))))

(assert (= (and d!16247 (not res!38271)) b!71950))

(assert (= (and b!71950 res!38272) b!71951))

(declare-fun m!69615 () Bool)

(assert (=> b!71951 m!69615))

(assert (=> d!16055 d!16247))

(declare-fun d!16249 () Bool)

(declare-fun res!38273 () Bool)

(declare-fun e!47065 () Bool)

(assert (=> d!16249 (=> res!38273 e!47065)))

(assert (=> d!16249 (= res!38273 (and ((_ is Cons!1463) lt!31503) (= (_1!1066 (h!2049 lt!31503)) (_1!1066 lt!31228))))))

(assert (=> d!16249 (= (containsKey!136 lt!31503 (_1!1066 lt!31228)) e!47065)))

(declare-fun b!71952 () Bool)

(declare-fun e!47066 () Bool)

(assert (=> b!71952 (= e!47065 e!47066)))

(declare-fun res!38274 () Bool)

(assert (=> b!71952 (=> (not res!38274) (not e!47066))))

(assert (=> b!71952 (= res!38274 (and (or (not ((_ is Cons!1463) lt!31503)) (bvsle (_1!1066 (h!2049 lt!31503)) (_1!1066 lt!31228))) ((_ is Cons!1463) lt!31503) (bvslt (_1!1066 (h!2049 lt!31503)) (_1!1066 lt!31228))))))

(declare-fun b!71953 () Bool)

(assert (=> b!71953 (= e!47066 (containsKey!136 (t!4995 lt!31503) (_1!1066 lt!31228)))))

(assert (= (and d!16249 (not res!38273)) b!71952))

(assert (= (and b!71952 res!38274) b!71953))

(declare-fun m!69617 () Bool)

(assert (=> b!71953 m!69617))

(assert (=> b!71174 d!16249))

(declare-fun d!16251 () Bool)

(declare-fun res!38275 () Bool)

(declare-fun e!47067 () Bool)

(assert (=> d!16251 (=> res!38275 e!47067)))

(assert (=> d!16251 (= res!38275 (and ((_ is Cons!1463) (toList!713 lt!31501)) (= (_1!1066 (h!2049 (toList!713 lt!31501))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16251 (= (containsKey!136 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47067)))

(declare-fun b!71954 () Bool)

(declare-fun e!47068 () Bool)

(assert (=> b!71954 (= e!47067 e!47068)))

(declare-fun res!38276 () Bool)

(assert (=> b!71954 (=> (not res!38276) (not e!47068))))

(assert (=> b!71954 (= res!38276 (and (or (not ((_ is Cons!1463) (toList!713 lt!31501))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31501))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1463) (toList!713 lt!31501)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31501))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!71955 () Bool)

(assert (=> b!71955 (= e!47068 (containsKey!136 (t!4995 (toList!713 lt!31501)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16251 (not res!38275)) b!71954))

(assert (= (and b!71954 res!38276) b!71955))

(assert (=> b!71955 m!67995))

(declare-fun m!69619 () Bool)

(assert (=> b!71955 m!69619))

(assert (=> d!15985 d!16251))

(declare-fun d!16253 () Bool)

(assert (=> d!16253 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31505) (_1!1066 lt!31228))) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31505) (_1!1066 lt!31228)))))))

(declare-fun bs!3097 () Bool)

(assert (= bs!3097 d!16253))

(assert (=> bs!3097 m!68173))

(declare-fun m!69621 () Bool)

(assert (=> bs!3097 m!69621))

(assert (=> b!71165 d!16253))

(assert (=> b!71165 d!16053))

(declare-fun d!16255 () Bool)

(assert (=> d!16255 (= (apply!74 lt!31874 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1146 (getValueByKey!133 (toList!713 lt!31874) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3098 () Bool)

(assert (= bs!3098 d!16255))

(assert (=> bs!3098 m!69409))

(assert (=> bs!3098 m!69409))

(declare-fun m!69623 () Bool)

(assert (=> bs!3098 m!69623))

(assert (=> b!71587 d!16255))

(declare-fun d!16257 () Bool)

(declare-fun res!38277 () Bool)

(declare-fun e!47069 () Bool)

(assert (=> d!16257 (=> res!38277 e!47069)))

(assert (=> d!16257 (= res!38277 (and ((_ is Cons!1463) (toList!713 lt!31365)) (= (_1!1066 (h!2049 (toList!713 lt!31365))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16257 (= (containsKey!136 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47069)))

(declare-fun b!71956 () Bool)

(declare-fun e!47070 () Bool)

(assert (=> b!71956 (= e!47069 e!47070)))

(declare-fun res!38278 () Bool)

(assert (=> b!71956 (=> (not res!38278) (not e!47070))))

(assert (=> b!71956 (= res!38278 (and (or (not ((_ is Cons!1463) (toList!713 lt!31365))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31365))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1463) (toList!713 lt!31365)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31365))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!71957 () Bool)

(assert (=> b!71957 (= e!47070 (containsKey!136 (t!4995 (toList!713 lt!31365)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16257 (not res!38277)) b!71956))

(assert (= (and b!71956 res!38278) b!71957))

(assert (=> b!71957 m!67995))

(declare-fun m!69625 () Bool)

(assert (=> b!71957 m!69625))

(assert (=> d!15995 d!16257))

(declare-fun d!16259 () Bool)

(declare-fun lt!32049 () Bool)

(assert (=> d!16259 (= lt!32049 (select (content!76 lt!31853) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(declare-fun e!47072 () Bool)

(assert (=> d!16259 (= lt!32049 e!47072)))

(declare-fun res!38280 () Bool)

(assert (=> d!16259 (=> (not res!38280) (not e!47072))))

(assert (=> d!16259 (= res!38280 ((_ is Cons!1463) lt!31853))))

(assert (=> d!16259 (= (contains!719 lt!31853 (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))) lt!32049)))

(declare-fun b!71958 () Bool)

(declare-fun e!47071 () Bool)

(assert (=> b!71958 (= e!47072 e!47071)))

(declare-fun res!38279 () Bool)

(assert (=> b!71958 (=> res!38279 e!47071)))

(assert (=> b!71958 (= res!38279 (= (h!2049 lt!31853) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(declare-fun b!71959 () Bool)

(assert (=> b!71959 (= e!47071 (contains!719 (t!4995 lt!31853) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(assert (= (and d!16259 res!38280) b!71958))

(assert (= (and b!71958 (not res!38279)) b!71959))

(declare-fun m!69627 () Bool)

(assert (=> d!16259 m!69627))

(declare-fun m!69629 () Bool)

(assert (=> d!16259 m!69629))

(declare-fun m!69631 () Bool)

(assert (=> b!71959 m!69631))

(assert (=> b!71571 d!16259))

(declare-fun d!16261 () Bool)

(declare-fun lt!32050 () Bool)

(assert (=> d!16261 (= lt!32050 (select (content!76 (toList!713 lt!31558)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun e!47074 () Bool)

(assert (=> d!16261 (= lt!32050 e!47074)))

(declare-fun res!38282 () Bool)

(assert (=> d!16261 (=> (not res!38282) (not e!47074))))

(assert (=> d!16261 (= res!38282 ((_ is Cons!1463) (toList!713 lt!31558)))))

(assert (=> d!16261 (= (contains!719 (toList!713 lt!31558) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!32050)))

(declare-fun b!71960 () Bool)

(declare-fun e!47073 () Bool)

(assert (=> b!71960 (= e!47074 e!47073)))

(declare-fun res!38281 () Bool)

(assert (=> b!71960 (=> res!38281 e!47073)))

(assert (=> b!71960 (= res!38281 (= (h!2049 (toList!713 lt!31558)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!71961 () Bool)

(assert (=> b!71961 (= e!47073 (contains!719 (t!4995 (toList!713 lt!31558)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!16261 res!38282) b!71960))

(assert (= (and b!71960 (not res!38281)) b!71961))

(declare-fun m!69633 () Bool)

(assert (=> d!16261 m!69633))

(declare-fun m!69635 () Bool)

(assert (=> d!16261 m!69635))

(declare-fun m!69637 () Bool)

(assert (=> b!71961 m!69637))

(assert (=> b!71162 d!16261))

(declare-fun d!16263 () Bool)

(declare-fun lt!32051 () Bool)

(assert (=> d!16263 (= lt!32051 (select (content!76 (toList!713 lt!31528)) (tuple2!2111 lt!31495 lt!31497)))))

(declare-fun e!47076 () Bool)

(assert (=> d!16263 (= lt!32051 e!47076)))

(declare-fun res!38284 () Bool)

(assert (=> d!16263 (=> (not res!38284) (not e!47076))))

(assert (=> d!16263 (= res!38284 ((_ is Cons!1463) (toList!713 lt!31528)))))

(assert (=> d!16263 (= (contains!719 (toList!713 lt!31528) (tuple2!2111 lt!31495 lt!31497)) lt!32051)))

(declare-fun b!71962 () Bool)

(declare-fun e!47075 () Bool)

(assert (=> b!71962 (= e!47076 e!47075)))

(declare-fun res!38283 () Bool)

(assert (=> b!71962 (=> res!38283 e!47075)))

(assert (=> b!71962 (= res!38283 (= (h!2049 (toList!713 lt!31528)) (tuple2!2111 lt!31495 lt!31497)))))

(declare-fun b!71963 () Bool)

(assert (=> b!71963 (= e!47075 (contains!719 (t!4995 (toList!713 lt!31528)) (tuple2!2111 lt!31495 lt!31497)))))

(assert (= (and d!16263 res!38284) b!71962))

(assert (= (and b!71962 (not res!38283)) b!71963))

(declare-fun m!69639 () Bool)

(assert (=> d!16263 m!69639))

(declare-fun m!69641 () Bool)

(assert (=> d!16263 m!69641))

(declare-fun m!69643 () Bool)

(assert (=> b!71963 m!69643))

(assert (=> b!71131 d!16263))

(declare-fun b!71965 () Bool)

(declare-fun e!47077 () Option!139)

(declare-fun e!47078 () Option!139)

(assert (=> b!71965 (= e!47077 e!47078)))

(declare-fun c!10572 () Bool)

(assert (=> b!71965 (= c!10572 (and ((_ is Cons!1463) (toList!713 lt!31551)) (not (= (_1!1066 (h!2049 (toList!713 lt!31551))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!71967 () Bool)

(assert (=> b!71967 (= e!47078 None!137)))

(declare-fun b!71966 () Bool)

(assert (=> b!71966 (= e!47078 (getValueByKey!133 (t!4995 (toList!713 lt!31551)) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun d!16265 () Bool)

(declare-fun c!10571 () Bool)

(assert (=> d!16265 (= c!10571 (and ((_ is Cons!1463) (toList!713 lt!31551)) (= (_1!1066 (h!2049 (toList!713 lt!31551))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16265 (= (getValueByKey!133 (toList!713 lt!31551) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47077)))

(declare-fun b!71964 () Bool)

(assert (=> b!71964 (= e!47077 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31551)))))))

(assert (= (and d!16265 c!10571) b!71964))

(assert (= (and d!16265 (not c!10571)) b!71965))

(assert (= (and b!71965 c!10572) b!71966))

(assert (= (and b!71965 (not c!10572)) b!71967))

(declare-fun m!69645 () Bool)

(assert (=> b!71966 m!69645))

(assert (=> b!71144 d!16265))

(declare-fun d!16267 () Bool)

(declare-fun res!38285 () Bool)

(declare-fun e!47079 () Bool)

(assert (=> d!16267 (=> (not res!38285) (not e!47079))))

(assert (=> d!16267 (= res!38285 (simpleValid!50 (_2!1065 lt!31839)))))

(assert (=> d!16267 (= (valid!301 (_2!1065 lt!31839)) e!47079)))

(declare-fun b!71968 () Bool)

(declare-fun res!38286 () Bool)

(assert (=> b!71968 (=> (not res!38286) (not e!47079))))

(assert (=> b!71968 (= res!38286 (= (arrayCountValidKeys!0 (_keys!3839 (_2!1065 lt!31839)) #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31839)))) (_size!393 (_2!1065 lt!31839))))))

(declare-fun b!71969 () Bool)

(declare-fun res!38287 () Bool)

(assert (=> b!71969 (=> (not res!38287) (not e!47079))))

(assert (=> b!71969 (= res!38287 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3839 (_2!1065 lt!31839)) (mask!6148 (_2!1065 lt!31839))))))

(declare-fun b!71970 () Bool)

(assert (=> b!71970 (= e!47079 (arrayNoDuplicates!0 (_keys!3839 (_2!1065 lt!31839)) #b00000000000000000000000000000000 Nil!1465))))

(assert (= (and d!16267 res!38285) b!71968))

(assert (= (and b!71968 res!38286) b!71969))

(assert (= (and b!71969 res!38287) b!71970))

(declare-fun m!69647 () Bool)

(assert (=> d!16267 m!69647))

(declare-fun m!69649 () Bool)

(assert (=> b!71968 m!69649))

(declare-fun m!69651 () Bool)

(assert (=> b!71969 m!69651))

(declare-fun m!69653 () Bool)

(assert (=> b!71970 m!69653))

(assert (=> b!71536 d!16267))

(declare-fun d!16269 () Bool)

(declare-fun e!47081 () Bool)

(assert (=> d!16269 e!47081))

(declare-fun res!38288 () Bool)

(assert (=> d!16269 (=> res!38288 e!47081)))

(declare-fun lt!32055 () Bool)

(assert (=> d!16269 (= res!38288 (not lt!32055))))

(declare-fun lt!32054 () Bool)

(assert (=> d!16269 (= lt!32055 lt!32054)))

(declare-fun lt!32053 () Unit!1996)

(declare-fun e!47080 () Unit!1996)

(assert (=> d!16269 (= lt!32053 e!47080)))

(declare-fun c!10573 () Bool)

(assert (=> d!16269 (= c!10573 lt!32054)))

(assert (=> d!16269 (= lt!32054 (containsKey!136 (toList!713 lt!31627) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!16269 (= (contains!715 lt!31627 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32055)))

(declare-fun b!71971 () Bool)

(declare-fun lt!32052 () Unit!1996)

(assert (=> b!71971 (= e!47080 lt!32052)))

(assert (=> b!71971 (= lt!32052 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31627) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> b!71971 (isDefined!85 (getValueByKey!133 (toList!713 lt!31627) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71972 () Bool)

(declare-fun Unit!2042 () Unit!1996)

(assert (=> b!71972 (= e!47080 Unit!2042)))

(declare-fun b!71973 () Bool)

(assert (=> b!71973 (= e!47081 (isDefined!85 (getValueByKey!133 (toList!713 lt!31627) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16269 c!10573) b!71971))

(assert (= (and d!16269 (not c!10573)) b!71972))

(assert (= (and d!16269 (not res!38288)) b!71973))

(declare-fun m!69655 () Bool)

(assert (=> d!16269 m!69655))

(declare-fun m!69657 () Bool)

(assert (=> b!71971 m!69657))

(assert (=> b!71971 m!68533))

(assert (=> b!71971 m!68533))

(declare-fun m!69659 () Bool)

(assert (=> b!71971 m!69659))

(assert (=> b!71973 m!68533))

(assert (=> b!71973 m!68533))

(assert (=> b!71973 m!69659))

(assert (=> d!15955 d!16269))

(declare-fun b!71975 () Bool)

(declare-fun e!47082 () Option!139)

(declare-fun e!47083 () Option!139)

(assert (=> b!71975 (= e!47082 e!47083)))

(declare-fun c!10575 () Bool)

(assert (=> b!71975 (= c!10575 (and ((_ is Cons!1463) lt!31625) (not (= (_1!1066 (h!2049 lt!31625)) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!71977 () Bool)

(assert (=> b!71977 (= e!47083 None!137)))

(declare-fun b!71976 () Bool)

(assert (=> b!71976 (= e!47083 (getValueByKey!133 (t!4995 lt!31625) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun c!10574 () Bool)

(declare-fun d!16271 () Bool)

(assert (=> d!16271 (= c!10574 (and ((_ is Cons!1463) lt!31625) (= (_1!1066 (h!2049 lt!31625)) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16271 (= (getValueByKey!133 lt!31625 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47082)))

(declare-fun b!71974 () Bool)

(assert (=> b!71974 (= e!47082 (Some!138 (_2!1066 (h!2049 lt!31625))))))

(assert (= (and d!16271 c!10574) b!71974))

(assert (= (and d!16271 (not c!10574)) b!71975))

(assert (= (and b!71975 c!10575) b!71976))

(assert (= (and b!71975 (not c!10575)) b!71977))

(declare-fun m!69661 () Bool)

(assert (=> b!71976 m!69661))

(assert (=> d!15955 d!16271))

(declare-fun d!16273 () Bool)

(assert (=> d!16273 (= (getValueByKey!133 lt!31625 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!32056 () Unit!1996)

(assert (=> d!16273 (= lt!32056 (choose!406 lt!31625 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun e!47084 () Bool)

(assert (=> d!16273 e!47084))

(declare-fun res!38289 () Bool)

(assert (=> d!16273 (=> (not res!38289) (not e!47084))))

(assert (=> d!16273 (= res!38289 (isStrictlySorted!278 lt!31625))))

(assert (=> d!16273 (= (lemmaContainsTupThenGetReturnValue!50 lt!31625 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32056)))

(declare-fun b!71978 () Bool)

(declare-fun res!38290 () Bool)

(assert (=> b!71978 (=> (not res!38290) (not e!47084))))

(assert (=> b!71978 (= res!38290 (containsKey!136 lt!31625 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71979 () Bool)

(assert (=> b!71979 (= e!47084 (contains!719 lt!31625 (tuple2!2111 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16273 res!38289) b!71978))

(assert (= (and b!71978 res!38290) b!71979))

(assert (=> d!16273 m!68527))

(declare-fun m!69663 () Bool)

(assert (=> d!16273 m!69663))

(declare-fun m!69665 () Bool)

(assert (=> d!16273 m!69665))

(declare-fun m!69667 () Bool)

(assert (=> b!71978 m!69667))

(declare-fun m!69669 () Bool)

(assert (=> b!71979 m!69669))

(assert (=> d!15955 d!16273))

(declare-fun b!71980 () Bool)

(declare-fun e!47089 () List!1467)

(declare-fun call!6253 () List!1467)

(assert (=> b!71980 (= e!47089 call!6253)))

(declare-fun bm!6248 () Bool)

(declare-fun e!47088 () List!1467)

(declare-fun c!10579 () Bool)

(assert (=> bm!6248 (= call!6253 ($colon$colon!64 e!47088 (ite c!10579 (h!2049 (toList!713 lt!31359)) (tuple2!2111 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun c!10578 () Bool)

(assert (=> bm!6248 (= c!10578 c!10579)))

(declare-fun d!16275 () Bool)

(declare-fun e!47087 () Bool)

(assert (=> d!16275 e!47087))

(declare-fun res!38292 () Bool)

(assert (=> d!16275 (=> (not res!38292) (not e!47087))))

(declare-fun lt!32057 () List!1467)

(assert (=> d!16275 (= res!38292 (isStrictlySorted!278 lt!32057))))

(assert (=> d!16275 (= lt!32057 e!47089)))

(assert (=> d!16275 (= c!10579 (and ((_ is Cons!1463) (toList!713 lt!31359)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31359))) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16275 (isStrictlySorted!278 (toList!713 lt!31359))))

(assert (=> d!16275 (= (insertStrictlySorted!53 (toList!713 lt!31359) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32057)))

(declare-fun b!71981 () Bool)

(declare-fun e!47085 () List!1467)

(declare-fun call!6251 () List!1467)

(assert (=> b!71981 (= e!47085 call!6251)))

(declare-fun b!71982 () Bool)

(declare-fun c!10576 () Bool)

(assert (=> b!71982 (= c!10576 (and ((_ is Cons!1463) (toList!713 lt!31359)) (bvsgt (_1!1066 (h!2049 (toList!713 lt!31359))) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun e!47086 () List!1467)

(assert (=> b!71982 (= e!47085 e!47086)))

(declare-fun b!71983 () Bool)

(declare-fun call!6252 () List!1467)

(assert (=> b!71983 (= e!47086 call!6252)))

(declare-fun b!71984 () Bool)

(assert (=> b!71984 (= e!47086 call!6252)))

(declare-fun b!71985 () Bool)

(declare-fun res!38291 () Bool)

(assert (=> b!71985 (=> (not res!38291) (not e!47087))))

(assert (=> b!71985 (= res!38291 (containsKey!136 lt!32057 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun c!10577 () Bool)

(declare-fun b!71986 () Bool)

(assert (=> b!71986 (= e!47088 (ite c!10577 (t!4995 (toList!713 lt!31359)) (ite c!10576 (Cons!1463 (h!2049 (toList!713 lt!31359)) (t!4995 (toList!713 lt!31359))) Nil!1464)))))

(declare-fun bm!6249 () Bool)

(assert (=> bm!6249 (= call!6251 call!6253)))

(declare-fun b!71987 () Bool)

(assert (=> b!71987 (= e!47089 e!47085)))

(assert (=> b!71987 (= c!10577 (and ((_ is Cons!1463) (toList!713 lt!31359)) (= (_1!1066 (h!2049 (toList!713 lt!31359))) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun bm!6250 () Bool)

(assert (=> bm!6250 (= call!6252 call!6251)))

(declare-fun b!71988 () Bool)

(assert (=> b!71988 (= e!47088 (insertStrictlySorted!53 (t!4995 (toList!713 lt!31359)) (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71989 () Bool)

(assert (=> b!71989 (= e!47087 (contains!719 lt!32057 (tuple2!2111 (_1!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16275 c!10579) b!71980))

(assert (= (and d!16275 (not c!10579)) b!71987))

(assert (= (and b!71987 c!10577) b!71981))

(assert (= (and b!71987 (not c!10577)) b!71982))

(assert (= (and b!71982 c!10576) b!71983))

(assert (= (and b!71982 (not c!10576)) b!71984))

(assert (= (or b!71983 b!71984) bm!6250))

(assert (= (or b!71981 bm!6250) bm!6249))

(assert (= (or b!71980 bm!6249) bm!6248))

(assert (= (and bm!6248 c!10578) b!71988))

(assert (= (and bm!6248 (not c!10578)) b!71986))

(assert (= (and d!16275 res!38292) b!71985))

(assert (= (and b!71985 res!38291) b!71989))

(declare-fun m!69671 () Bool)

(assert (=> b!71985 m!69671))

(declare-fun m!69673 () Bool)

(assert (=> b!71989 m!69673))

(declare-fun m!69675 () Bool)

(assert (=> bm!6248 m!69675))

(declare-fun m!69677 () Bool)

(assert (=> d!16275 m!69677))

(declare-fun m!69679 () Bool)

(assert (=> d!16275 m!69679))

(declare-fun m!69681 () Bool)

(assert (=> b!71988 m!69681))

(assert (=> d!15955 d!16275))

(assert (=> b!71447 d!16157))

(declare-fun d!16277 () Bool)

(declare-fun e!47091 () Bool)

(assert (=> d!16277 e!47091))

(declare-fun res!38293 () Bool)

(assert (=> d!16277 (=> res!38293 e!47091)))

(declare-fun lt!32061 () Bool)

(assert (=> d!16277 (= res!38293 (not lt!32061))))

(declare-fun lt!32060 () Bool)

(assert (=> d!16277 (= lt!32061 lt!32060)))

(declare-fun lt!32059 () Unit!1996)

(declare-fun e!47090 () Unit!1996)

(assert (=> d!16277 (= lt!32059 e!47090)))

(declare-fun c!10580 () Bool)

(assert (=> d!16277 (= c!10580 lt!32060)))

(assert (=> d!16277 (= lt!32060 (containsKey!136 (toList!713 lt!31543) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!16277 (= (contains!715 lt!31543 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32061)))

(declare-fun b!71990 () Bool)

(declare-fun lt!32058 () Unit!1996)

(assert (=> b!71990 (= e!47090 lt!32058)))

(assert (=> b!71990 (= lt!32058 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31543) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> b!71990 (isDefined!85 (getValueByKey!133 (toList!713 lt!31543) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71991 () Bool)

(declare-fun Unit!2043 () Unit!1996)

(assert (=> b!71991 (= e!47090 Unit!2043)))

(declare-fun b!71992 () Bool)

(assert (=> b!71992 (= e!47091 (isDefined!85 (getValueByKey!133 (toList!713 lt!31543) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16277 c!10580) b!71990))

(assert (= (and d!16277 (not c!10580)) b!71991))

(assert (= (and d!16277 (not res!38293)) b!71992))

(declare-fun m!69683 () Bool)

(assert (=> d!16277 m!69683))

(declare-fun m!69685 () Bool)

(assert (=> b!71990 m!69685))

(assert (=> b!71990 m!68283))

(assert (=> b!71990 m!68283))

(declare-fun m!69687 () Bool)

(assert (=> b!71990 m!69687))

(assert (=> b!71992 m!68283))

(assert (=> b!71992 m!68283))

(assert (=> b!71992 m!69687))

(assert (=> d!15887 d!16277))

(declare-fun b!71994 () Bool)

(declare-fun e!47092 () Option!139)

(declare-fun e!47093 () Option!139)

(assert (=> b!71994 (= e!47092 e!47093)))

(declare-fun c!10582 () Bool)

(assert (=> b!71994 (= c!10582 (and ((_ is Cons!1463) lt!31541) (not (= (_1!1066 (h!2049 lt!31541)) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!71996 () Bool)

(assert (=> b!71996 (= e!47093 None!137)))

(declare-fun b!71995 () Bool)

(assert (=> b!71995 (= e!47093 (getValueByKey!133 (t!4995 lt!31541) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun d!16279 () Bool)

(declare-fun c!10581 () Bool)

(assert (=> d!16279 (= c!10581 (and ((_ is Cons!1463) lt!31541) (= (_1!1066 (h!2049 lt!31541)) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16279 (= (getValueByKey!133 lt!31541 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47092)))

(declare-fun b!71993 () Bool)

(assert (=> b!71993 (= e!47092 (Some!138 (_2!1066 (h!2049 lt!31541))))))

(assert (= (and d!16279 c!10581) b!71993))

(assert (= (and d!16279 (not c!10581)) b!71994))

(assert (= (and b!71994 c!10582) b!71995))

(assert (= (and b!71994 (not c!10582)) b!71996))

(declare-fun m!69689 () Bool)

(assert (=> b!71995 m!69689))

(assert (=> d!15887 d!16279))

(declare-fun d!16281 () Bool)

(assert (=> d!16281 (= (getValueByKey!133 lt!31541 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!32062 () Unit!1996)

(assert (=> d!16281 (= lt!32062 (choose!406 lt!31541 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun e!47094 () Bool)

(assert (=> d!16281 e!47094))

(declare-fun res!38294 () Bool)

(assert (=> d!16281 (=> (not res!38294) (not e!47094))))

(assert (=> d!16281 (= res!38294 (isStrictlySorted!278 lt!31541))))

(assert (=> d!16281 (= (lemmaContainsTupThenGetReturnValue!50 lt!31541 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32062)))

(declare-fun b!71997 () Bool)

(declare-fun res!38295 () Bool)

(assert (=> b!71997 (=> (not res!38295) (not e!47094))))

(assert (=> b!71997 (= res!38295 (containsKey!136 lt!31541 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!71998 () Bool)

(assert (=> b!71998 (= e!47094 (contains!719 lt!31541 (tuple2!2111 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16281 res!38294) b!71997))

(assert (= (and b!71997 res!38295) b!71998))

(assert (=> d!16281 m!68277))

(declare-fun m!69691 () Bool)

(assert (=> d!16281 m!69691))

(declare-fun m!69693 () Bool)

(assert (=> d!16281 m!69693))

(declare-fun m!69695 () Bool)

(assert (=> b!71997 m!69695))

(declare-fun m!69697 () Bool)

(assert (=> b!71998 m!69697))

(assert (=> d!15887 d!16281))

(declare-fun b!71999 () Bool)

(declare-fun e!47099 () List!1467)

(declare-fun call!6256 () List!1467)

(assert (=> b!71999 (= e!47099 call!6256)))

(declare-fun bm!6251 () Bool)

(declare-fun c!10586 () Bool)

(declare-fun e!47098 () List!1467)

(assert (=> bm!6251 (= call!6256 ($colon$colon!64 e!47098 (ite c!10586 (h!2049 (toList!713 lt!31219)) (tuple2!2111 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun c!10585 () Bool)

(assert (=> bm!6251 (= c!10585 c!10586)))

(declare-fun d!16283 () Bool)

(declare-fun e!47097 () Bool)

(assert (=> d!16283 e!47097))

(declare-fun res!38297 () Bool)

(assert (=> d!16283 (=> (not res!38297) (not e!47097))))

(declare-fun lt!32063 () List!1467)

(assert (=> d!16283 (= res!38297 (isStrictlySorted!278 lt!32063))))

(assert (=> d!16283 (= lt!32063 e!47099)))

(assert (=> d!16283 (= c!10586 (and ((_ is Cons!1463) (toList!713 lt!31219)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16283 (isStrictlySorted!278 (toList!713 lt!31219))))

(assert (=> d!16283 (= (insertStrictlySorted!53 (toList!713 lt!31219) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32063)))

(declare-fun b!72000 () Bool)

(declare-fun e!47095 () List!1467)

(declare-fun call!6254 () List!1467)

(assert (=> b!72000 (= e!47095 call!6254)))

(declare-fun b!72001 () Bool)

(declare-fun c!10583 () Bool)

(assert (=> b!72001 (= c!10583 (and ((_ is Cons!1463) (toList!713 lt!31219)) (bvsgt (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun e!47096 () List!1467)

(assert (=> b!72001 (= e!47095 e!47096)))

(declare-fun b!72002 () Bool)

(declare-fun call!6255 () List!1467)

(assert (=> b!72002 (= e!47096 call!6255)))

(declare-fun b!72003 () Bool)

(assert (=> b!72003 (= e!47096 call!6255)))

(declare-fun b!72004 () Bool)

(declare-fun res!38296 () Bool)

(assert (=> b!72004 (=> (not res!38296) (not e!47097))))

(assert (=> b!72004 (= res!38296 (containsKey!136 lt!32063 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72005 () Bool)

(declare-fun c!10584 () Bool)

(assert (=> b!72005 (= e!47098 (ite c!10584 (t!4995 (toList!713 lt!31219)) (ite c!10583 (Cons!1463 (h!2049 (toList!713 lt!31219)) (t!4995 (toList!713 lt!31219))) Nil!1464)))))

(declare-fun bm!6252 () Bool)

(assert (=> bm!6252 (= call!6254 call!6256)))

(declare-fun b!72006 () Bool)

(assert (=> b!72006 (= e!47099 e!47095)))

(assert (=> b!72006 (= c!10584 (and ((_ is Cons!1463) (toList!713 lt!31219)) (= (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun bm!6253 () Bool)

(assert (=> bm!6253 (= call!6255 call!6254)))

(declare-fun b!72007 () Bool)

(assert (=> b!72007 (= e!47098 (insertStrictlySorted!53 (t!4995 (toList!713 lt!31219)) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72008 () Bool)

(assert (=> b!72008 (= e!47097 (contains!719 lt!32063 (tuple2!2111 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16283 c!10586) b!71999))

(assert (= (and d!16283 (not c!10586)) b!72006))

(assert (= (and b!72006 c!10584) b!72000))

(assert (= (and b!72006 (not c!10584)) b!72001))

(assert (= (and b!72001 c!10583) b!72002))

(assert (= (and b!72001 (not c!10583)) b!72003))

(assert (= (or b!72002 b!72003) bm!6253))

(assert (= (or b!72000 bm!6253) bm!6252))

(assert (= (or b!71999 bm!6252) bm!6251))

(assert (= (and bm!6251 c!10585) b!72007))

(assert (= (and bm!6251 (not c!10585)) b!72005))

(assert (= (and d!16283 res!38297) b!72004))

(assert (= (and b!72004 res!38296) b!72008))

(declare-fun m!69699 () Bool)

(assert (=> b!72004 m!69699))

(declare-fun m!69701 () Bool)

(assert (=> b!72008 m!69701))

(declare-fun m!69703 () Bool)

(assert (=> bm!6251 m!69703))

(declare-fun m!69705 () Bool)

(assert (=> d!16283 m!69705))

(assert (=> d!16283 m!68821))

(declare-fun m!69707 () Bool)

(assert (=> b!72007 m!69707))

(assert (=> d!15887 d!16283))

(declare-fun d!16285 () Bool)

(assert (=> d!16285 (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!32064 () Unit!1996)

(assert (=> d!16285 (= lt!32064 (choose!407 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47100 () Bool)

(assert (=> d!16285 e!47100))

(declare-fun res!38298 () Bool)

(assert (=> d!16285 (=> (not res!38298) (not e!47100))))

(assert (=> d!16285 (= res!38298 (isStrictlySorted!278 (toList!713 lt!31501)))))

(assert (=> d!16285 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32064)))

(declare-fun b!72009 () Bool)

(assert (=> b!72009 (= e!47100 (containsKey!136 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16285 res!38298) b!72009))

(assert (=> d!16285 m!67995))

(assert (=> d!16285 m!68321))

(assert (=> d!16285 m!68321))

(assert (=> d!16285 m!68623))

(assert (=> d!16285 m!67995))

(declare-fun m!69709 () Bool)

(assert (=> d!16285 m!69709))

(declare-fun m!69711 () Bool)

(assert (=> d!16285 m!69711))

(assert (=> b!72009 m!67995))

(assert (=> b!72009 m!68619))

(assert (=> b!71294 d!16285))

(declare-fun d!16287 () Bool)

(assert (=> d!16287 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3099 () Bool)

(assert (= bs!3099 d!16287))

(assert (=> bs!3099 m!68321))

(declare-fun m!69713 () Bool)

(assert (=> bs!3099 m!69713))

(assert (=> b!71294 d!16287))

(declare-fun b!72011 () Bool)

(declare-fun e!47101 () Option!139)

(declare-fun e!47102 () Option!139)

(assert (=> b!72011 (= e!47101 e!47102)))

(declare-fun c!10588 () Bool)

(assert (=> b!72011 (= c!10588 (and ((_ is Cons!1463) (toList!713 lt!31501)) (not (= (_1!1066 (h!2049 (toList!713 lt!31501))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!72013 () Bool)

(assert (=> b!72013 (= e!47102 None!137)))

(declare-fun b!72012 () Bool)

(assert (=> b!72012 (= e!47102 (getValueByKey!133 (t!4995 (toList!713 lt!31501)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!10587 () Bool)

(declare-fun d!16289 () Bool)

(assert (=> d!16289 (= c!10587 (and ((_ is Cons!1463) (toList!713 lt!31501)) (= (_1!1066 (h!2049 (toList!713 lt!31501))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16289 (= (getValueByKey!133 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47101)))

(declare-fun b!72010 () Bool)

(assert (=> b!72010 (= e!47101 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31501)))))))

(assert (= (and d!16289 c!10587) b!72010))

(assert (= (and d!16289 (not c!10587)) b!72011))

(assert (= (and b!72011 c!10588) b!72012))

(assert (= (and b!72011 (not c!10588)) b!72013))

(assert (=> b!72012 m!67995))

(declare-fun m!69715 () Bool)

(assert (=> b!72012 m!69715))

(assert (=> b!71294 d!16289))

(declare-fun d!16291 () Bool)

(assert (=> d!16291 (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!32065 () Unit!1996)

(assert (=> d!16291 (= lt!32065 (choose!407 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47103 () Bool)

(assert (=> d!16291 e!47103))

(declare-fun res!38299 () Bool)

(assert (=> d!16291 (=> (not res!38299) (not e!47103))))

(assert (=> d!16291 (= res!38299 (isStrictlySorted!278 (toList!713 lt!31365)))))

(assert (=> d!16291 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32065)))

(declare-fun b!72014 () Bool)

(assert (=> b!72014 (= e!47103 (containsKey!136 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16291 res!38299) b!72014))

(assert (=> d!16291 m!67995))

(assert (=> d!16291 m!68655))

(assert (=> d!16291 m!68655))

(assert (=> d!16291 m!68657))

(assert (=> d!16291 m!67995))

(declare-fun m!69717 () Bool)

(assert (=> d!16291 m!69717))

(assert (=> d!16291 m!69153))

(assert (=> b!72014 m!67995))

(assert (=> b!72014 m!68651))

(assert (=> b!71306 d!16291))

(declare-fun d!16293 () Bool)

(assert (=> d!16293 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3100 () Bool)

(assert (= bs!3100 d!16293))

(assert (=> bs!3100 m!68655))

(declare-fun m!69719 () Bool)

(assert (=> bs!3100 m!69719))

(assert (=> b!71306 d!16293))

(declare-fun b!72016 () Bool)

(declare-fun e!47104 () Option!139)

(declare-fun e!47105 () Option!139)

(assert (=> b!72016 (= e!47104 e!47105)))

(declare-fun c!10590 () Bool)

(assert (=> b!72016 (= c!10590 (and ((_ is Cons!1463) (toList!713 lt!31365)) (not (= (_1!1066 (h!2049 (toList!713 lt!31365))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!72018 () Bool)

(assert (=> b!72018 (= e!47105 None!137)))

(declare-fun b!72017 () Bool)

(assert (=> b!72017 (= e!47105 (getValueByKey!133 (t!4995 (toList!713 lt!31365)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun c!10589 () Bool)

(declare-fun d!16295 () Bool)

(assert (=> d!16295 (= c!10589 (and ((_ is Cons!1463) (toList!713 lt!31365)) (= (_1!1066 (h!2049 (toList!713 lt!31365))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16295 (= (getValueByKey!133 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47104)))

(declare-fun b!72015 () Bool)

(assert (=> b!72015 (= e!47104 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31365)))))))

(assert (= (and d!16295 c!10589) b!72015))

(assert (= (and d!16295 (not c!10589)) b!72016))

(assert (= (and b!72016 c!10590) b!72017))

(assert (= (and b!72016 (not c!10590)) b!72018))

(assert (=> b!72017 m!67995))

(declare-fun m!69721 () Bool)

(assert (=> b!72017 m!69721))

(assert (=> b!71306 d!16295))

(declare-fun d!16297 () Bool)

(declare-fun lt!32066 () Bool)

(assert (=> d!16297 (= lt!32066 (select (content!76 (toList!713 lt!31632)) (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun e!47107 () Bool)

(assert (=> d!16297 (= lt!32066 e!47107)))

(declare-fun res!38301 () Bool)

(assert (=> d!16297 (=> (not res!38301) (not e!47107))))

(assert (=> d!16297 (= res!38301 ((_ is Cons!1463) (toList!713 lt!31632)))))

(assert (=> d!16297 (= (contains!719 (toList!713 lt!31632) (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!32066)))

(declare-fun b!72019 () Bool)

(declare-fun e!47106 () Bool)

(assert (=> b!72019 (= e!47107 e!47106)))

(declare-fun res!38300 () Bool)

(assert (=> b!72019 (=> res!38300 e!47106)))

(assert (=> b!72019 (= res!38300 (= (h!2049 (toList!713 lt!31632)) (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!72020 () Bool)

(assert (=> b!72020 (= e!47106 (contains!719 (t!4995 (toList!713 lt!31632)) (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!16297 res!38301) b!72019))

(assert (= (and b!72019 (not res!38300)) b!72020))

(declare-fun m!69723 () Bool)

(assert (=> d!16297 m!69723))

(declare-fun m!69725 () Bool)

(assert (=> d!16297 m!69725))

(declare-fun m!69727 () Bool)

(assert (=> b!72020 m!69727))

(assert (=> b!71282 d!16297))

(assert (=> b!71359 d!16119))

(assert (=> b!71359 d!16121))

(declare-fun b!72022 () Bool)

(declare-fun e!47108 () Option!139)

(declare-fun e!47109 () Option!139)

(assert (=> b!72022 (= e!47108 e!47109)))

(declare-fun c!10592 () Bool)

(assert (=> b!72022 (= c!10592 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31227))) (not (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31227)))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))))

(declare-fun b!72024 () Bool)

(assert (=> b!72024 (= e!47109 None!137)))

(declare-fun b!72023 () Bool)

(assert (=> b!72023 (= e!47109 (getValueByKey!133 (t!4995 (t!4995 (toList!713 lt!31227))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun c!10591 () Bool)

(declare-fun d!16299 () Bool)

(assert (=> d!16299 (= c!10591 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31227))) (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31227)))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (=> d!16299 (= (getValueByKey!133 (t!4995 (toList!713 lt!31227)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) e!47108)))

(declare-fun b!72021 () Bool)

(assert (=> b!72021 (= e!47108 (Some!138 (_2!1066 (h!2049 (t!4995 (toList!713 lt!31227))))))))

(assert (= (and d!16299 c!10591) b!72021))

(assert (= (and d!16299 (not c!10591)) b!72022))

(assert (= (and b!72022 c!10592) b!72023))

(assert (= (and b!72022 (not c!10592)) b!72024))

(assert (=> b!72023 m!67819))

(declare-fun m!69729 () Bool)

(assert (=> b!72023 m!69729))

(assert (=> b!71243 d!16299))

(declare-fun b!72026 () Bool)

(declare-fun e!47110 () Option!139)

(declare-fun e!47111 () Option!139)

(assert (=> b!72026 (= e!47110 e!47111)))

(declare-fun c!10594 () Bool)

(assert (=> b!72026 (= c!10594 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31480))) (not (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31480)))) (_1!1066 lt!31223)))))))

(declare-fun b!72028 () Bool)

(assert (=> b!72028 (= e!47111 None!137)))

(declare-fun b!72027 () Bool)

(assert (=> b!72027 (= e!47111 (getValueByKey!133 (t!4995 (t!4995 (toList!713 lt!31480))) (_1!1066 lt!31223)))))

(declare-fun d!16301 () Bool)

(declare-fun c!10593 () Bool)

(assert (=> d!16301 (= c!10593 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31480))) (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31480)))) (_1!1066 lt!31223))))))

(assert (=> d!16301 (= (getValueByKey!133 (t!4995 (toList!713 lt!31480)) (_1!1066 lt!31223)) e!47110)))

(declare-fun b!72025 () Bool)

(assert (=> b!72025 (= e!47110 (Some!138 (_2!1066 (h!2049 (t!4995 (toList!713 lt!31480))))))))

(assert (= (and d!16301 c!10593) b!72025))

(assert (= (and d!16301 (not c!10593)) b!72026))

(assert (= (and b!72026 c!10594) b!72027))

(assert (= (and b!72026 (not c!10594)) b!72028))

(declare-fun m!69731 () Bool)

(assert (=> b!72027 m!69731))

(assert (=> b!71159 d!16301))

(assert (=> b!71124 d!16103))

(assert (=> b!71124 d!16105))

(declare-fun bm!6254 () Bool)

(declare-fun call!6257 () Bool)

(declare-fun c!10595 () Bool)

(assert (=> bm!6254 (= call!6257 (arrayNoDuplicates!0 (_keys!3839 (_2!1065 lt!31440)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10595 (Cons!1464 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000) Nil!1465) Nil!1465)))))

(declare-fun b!72029 () Bool)

(declare-fun e!47112 () Bool)

(assert (=> b!72029 (= e!47112 (contains!718 Nil!1465 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000)))))

(declare-fun b!72030 () Bool)

(declare-fun e!47115 () Bool)

(declare-fun e!47113 () Bool)

(assert (=> b!72030 (= e!47115 e!47113)))

(assert (=> b!72030 (= c!10595 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000)))))

(declare-fun b!72031 () Bool)

(declare-fun e!47114 () Bool)

(assert (=> b!72031 (= e!47114 e!47115)))

(declare-fun res!38303 () Bool)

(assert (=> b!72031 (=> (not res!38303) (not e!47115))))

(assert (=> b!72031 (= res!38303 (not e!47112))))

(declare-fun res!38304 () Bool)

(assert (=> b!72031 (=> (not res!38304) (not e!47112))))

(assert (=> b!72031 (= res!38304 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000)))))

(declare-fun d!16303 () Bool)

(declare-fun res!38302 () Bool)

(assert (=> d!16303 (=> res!38302 e!47114)))

(assert (=> d!16303 (= res!38302 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))))))

(assert (=> d!16303 (= (arrayNoDuplicates!0 (_keys!3839 (_2!1065 lt!31440)) #b00000000000000000000000000000000 Nil!1465) e!47114)))

(declare-fun b!72032 () Bool)

(assert (=> b!72032 (= e!47113 call!6257)))

(declare-fun b!72033 () Bool)

(assert (=> b!72033 (= e!47113 call!6257)))

(assert (= (and d!16303 (not res!38302)) b!72031))

(assert (= (and b!72031 res!38304) b!72029))

(assert (= (and b!72031 res!38303) b!72030))

(assert (= (and b!72030 c!10595) b!72033))

(assert (= (and b!72030 (not c!10595)) b!72032))

(assert (= (or b!72033 b!72032) bm!6254))

(assert (=> bm!6254 m!69161))

(declare-fun m!69733 () Bool)

(assert (=> bm!6254 m!69733))

(assert (=> b!72029 m!69161))

(assert (=> b!72029 m!69161))

(declare-fun m!69735 () Bool)

(assert (=> b!72029 m!69735))

(assert (=> b!72030 m!69161))

(assert (=> b!72030 m!69161))

(assert (=> b!72030 m!69163))

(assert (=> b!72031 m!69161))

(assert (=> b!72031 m!69161))

(assert (=> b!72031 m!69163))

(assert (=> b!71148 d!16303))

(declare-fun d!16305 () Bool)

(assert (=> d!16305 (arrayContainsKey!0 (_keys!3839 newMap!16) lt!31732 #b00000000000000000000000000000000)))

(declare-fun lt!32069 () Unit!1996)

(declare-fun choose!13 (array!3863 (_ BitVec 64) (_ BitVec 32)) Unit!1996)

(assert (=> d!16305 (= lt!32069 (choose!13 (_keys!3839 newMap!16) lt!31732 #b00000000000000000000000000000000))))

(assert (=> d!16305 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!16305 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3839 newMap!16) lt!31732 #b00000000000000000000000000000000) lt!32069)))

(declare-fun bs!3101 () Bool)

(assert (= bs!3101 d!16305))

(assert (=> bs!3101 m!68829))

(declare-fun m!69737 () Bool)

(assert (=> bs!3101 m!69737))

(assert (=> b!71408 d!16305))

(declare-fun d!16307 () Bool)

(declare-fun res!38305 () Bool)

(declare-fun e!47116 () Bool)

(assert (=> d!16307 (=> res!38305 e!47116)))

(assert (=> d!16307 (= res!38305 (= (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) lt!31732))))

(assert (=> d!16307 (= (arrayContainsKey!0 (_keys!3839 newMap!16) lt!31732 #b00000000000000000000000000000000) e!47116)))

(declare-fun b!72034 () Bool)

(declare-fun e!47117 () Bool)

(assert (=> b!72034 (= e!47116 e!47117)))

(declare-fun res!38306 () Bool)

(assert (=> b!72034 (=> (not res!38306) (not e!47117))))

(assert (=> b!72034 (= res!38306 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!72035 () Bool)

(assert (=> b!72035 (= e!47117 (arrayContainsKey!0 (_keys!3839 newMap!16) lt!31732 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16307 (not res!38305)) b!72034))

(assert (= (and b!72034 res!38306) b!72035))

(assert (=> d!16307 m!68397))

(declare-fun m!69739 () Bool)

(assert (=> b!72035 m!69739))

(assert (=> b!71408 d!16307))

(declare-fun b!72037 () Bool)

(declare-fun e!47120 () SeekEntryResult!229)

(declare-fun lt!32070 () SeekEntryResult!229)

(assert (=> b!72037 (= e!47120 (seekKeyOrZeroReturnVacant!0 (x!11001 lt!32070) (index!3048 lt!32070) (index!3048 lt!32070) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(declare-fun b!72038 () Bool)

(assert (=> b!72038 (= e!47120 (MissingZero!229 (index!3048 lt!32070)))))

(declare-fun b!72039 () Bool)

(declare-fun e!47118 () SeekEntryResult!229)

(declare-fun e!47119 () SeekEntryResult!229)

(assert (=> b!72039 (= e!47118 e!47119)))

(declare-fun lt!32072 () (_ BitVec 64))

(assert (=> b!72039 (= lt!32072 (select (arr!1844 (_keys!3839 newMap!16)) (index!3048 lt!32070)))))

(declare-fun c!10596 () Bool)

(assert (=> b!72039 (= c!10596 (= lt!32072 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72040 () Bool)

(assert (=> b!72040 (= e!47118 Undefined!229)))

(declare-fun b!72041 () Bool)

(assert (=> b!72041 (= e!47119 (Found!229 (index!3048 lt!32070)))))

(declare-fun b!72036 () Bool)

(declare-fun c!10598 () Bool)

(assert (=> b!72036 (= c!10598 (= lt!32072 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72036 (= e!47119 e!47120)))

(declare-fun d!16309 () Bool)

(declare-fun lt!32071 () SeekEntryResult!229)

(assert (=> d!16309 (and (or ((_ is Undefined!229) lt!32071) (not ((_ is Found!229) lt!32071)) (and (bvsge (index!3047 lt!32071) #b00000000000000000000000000000000) (bvslt (index!3047 lt!32071) (size!2081 (_keys!3839 newMap!16))))) (or ((_ is Undefined!229) lt!32071) ((_ is Found!229) lt!32071) (not ((_ is MissingZero!229) lt!32071)) (and (bvsge (index!3046 lt!32071) #b00000000000000000000000000000000) (bvslt (index!3046 lt!32071) (size!2081 (_keys!3839 newMap!16))))) (or ((_ is Undefined!229) lt!32071) ((_ is Found!229) lt!32071) ((_ is MissingZero!229) lt!32071) (not ((_ is MissingVacant!229) lt!32071)) (and (bvsge (index!3049 lt!32071) #b00000000000000000000000000000000) (bvslt (index!3049 lt!32071) (size!2081 (_keys!3839 newMap!16))))) (or ((_ is Undefined!229) lt!32071) (ite ((_ is Found!229) lt!32071) (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!32071)) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!229) lt!32071) (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3046 lt!32071)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!229) lt!32071) (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3049 lt!32071)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16309 (= lt!32071 e!47118)))

(declare-fun c!10597 () Bool)

(assert (=> d!16309 (= c!10597 (and ((_ is Intermediate!229) lt!32070) (undefined!1041 lt!32070)))))

(assert (=> d!16309 (= lt!32070 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) (mask!6148 newMap!16)) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(assert (=> d!16309 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16309 (= (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) (_keys!3839 newMap!16) (mask!6148 newMap!16)) lt!32071)))

(assert (= (and d!16309 c!10597) b!72040))

(assert (= (and d!16309 (not c!10597)) b!72039))

(assert (= (and b!72039 c!10596) b!72041))

(assert (= (and b!72039 (not c!10596)) b!72036))

(assert (= (and b!72036 c!10598) b!72038))

(assert (= (and b!72036 (not c!10598)) b!72037))

(assert (=> b!72037 m!68397))

(declare-fun m!69741 () Bool)

(assert (=> b!72037 m!69741))

(declare-fun m!69743 () Bool)

(assert (=> b!72039 m!69743))

(declare-fun m!69745 () Bool)

(assert (=> d!16309 m!69745))

(declare-fun m!69747 () Bool)

(assert (=> d!16309 m!69747))

(assert (=> d!16309 m!68397))

(declare-fun m!69749 () Bool)

(assert (=> d!16309 m!69749))

(assert (=> d!16309 m!68327))

(assert (=> d!16309 m!68397))

(assert (=> d!16309 m!69747))

(declare-fun m!69751 () Bool)

(assert (=> d!16309 m!69751))

(declare-fun m!69753 () Bool)

(assert (=> d!16309 m!69753))

(assert (=> b!71408 d!16309))

(declare-fun d!16311 () Bool)

(declare-fun e!47122 () Bool)

(assert (=> d!16311 e!47122))

(declare-fun res!38307 () Bool)

(assert (=> d!16311 (=> res!38307 e!47122)))

(declare-fun lt!32076 () Bool)

(assert (=> d!16311 (= res!38307 (not lt!32076))))

(declare-fun lt!32075 () Bool)

(assert (=> d!16311 (= lt!32076 lt!32075)))

(declare-fun lt!32074 () Unit!1996)

(declare-fun e!47121 () Unit!1996)

(assert (=> d!16311 (= lt!32074 e!47121)))

(declare-fun c!10599 () Bool)

(assert (=> d!16311 (= c!10599 lt!32075)))

(assert (=> d!16311 (= lt!32075 (containsKey!136 (toList!713 lt!31551) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!16311 (= (contains!715 lt!31551 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32076)))

(declare-fun b!72042 () Bool)

(declare-fun lt!32073 () Unit!1996)

(assert (=> b!72042 (= e!47121 lt!32073)))

(assert (=> b!72042 (= lt!32073 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31551) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> b!72042 (isDefined!85 (getValueByKey!133 (toList!713 lt!31551) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72043 () Bool)

(declare-fun Unit!2044 () Unit!1996)

(assert (=> b!72043 (= e!47121 Unit!2044)))

(declare-fun b!72044 () Bool)

(assert (=> b!72044 (= e!47122 (isDefined!85 (getValueByKey!133 (toList!713 lt!31551) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16311 c!10599) b!72042))

(assert (= (and d!16311 (not c!10599)) b!72043))

(assert (= (and d!16311 (not res!38307)) b!72044))

(declare-fun m!69755 () Bool)

(assert (=> d!16311 m!69755))

(declare-fun m!69757 () Bool)

(assert (=> b!72042 m!69757))

(assert (=> b!72042 m!68307))

(assert (=> b!72042 m!68307))

(declare-fun m!69759 () Bool)

(assert (=> b!72042 m!69759))

(assert (=> b!72044 m!68307))

(assert (=> b!72044 m!68307))

(assert (=> b!72044 m!69759))

(assert (=> d!15893 d!16311))

(declare-fun b!72046 () Bool)

(declare-fun e!47123 () Option!139)

(declare-fun e!47124 () Option!139)

(assert (=> b!72046 (= e!47123 e!47124)))

(declare-fun c!10601 () Bool)

(assert (=> b!72046 (= c!10601 (and ((_ is Cons!1463) lt!31549) (not (= (_1!1066 (h!2049 lt!31549)) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!72048 () Bool)

(assert (=> b!72048 (= e!47124 None!137)))

(declare-fun b!72047 () Bool)

(assert (=> b!72047 (= e!47124 (getValueByKey!133 (t!4995 lt!31549) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun d!16313 () Bool)

(declare-fun c!10600 () Bool)

(assert (=> d!16313 (= c!10600 (and ((_ is Cons!1463) lt!31549) (= (_1!1066 (h!2049 lt!31549)) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16313 (= (getValueByKey!133 lt!31549 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47123)))

(declare-fun b!72045 () Bool)

(assert (=> b!72045 (= e!47123 (Some!138 (_2!1066 (h!2049 lt!31549))))))

(assert (= (and d!16313 c!10600) b!72045))

(assert (= (and d!16313 (not c!10600)) b!72046))

(assert (= (and b!72046 c!10601) b!72047))

(assert (= (and b!72046 (not c!10601)) b!72048))

(declare-fun m!69761 () Bool)

(assert (=> b!72047 m!69761))

(assert (=> d!15893 d!16313))

(declare-fun d!16315 () Bool)

(assert (=> d!16315 (= (getValueByKey!133 lt!31549 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!32077 () Unit!1996)

(assert (=> d!16315 (= lt!32077 (choose!406 lt!31549 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun e!47125 () Bool)

(assert (=> d!16315 e!47125))

(declare-fun res!38308 () Bool)

(assert (=> d!16315 (=> (not res!38308) (not e!47125))))

(assert (=> d!16315 (= res!38308 (isStrictlySorted!278 lt!31549))))

(assert (=> d!16315 (= (lemmaContainsTupThenGetReturnValue!50 lt!31549 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32077)))

(declare-fun b!72049 () Bool)

(declare-fun res!38309 () Bool)

(assert (=> b!72049 (=> (not res!38309) (not e!47125))))

(assert (=> b!72049 (= res!38309 (containsKey!136 lt!31549 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72050 () Bool)

(assert (=> b!72050 (= e!47125 (contains!719 lt!31549 (tuple2!2111 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16315 res!38308) b!72049))

(assert (= (and b!72049 res!38309) b!72050))

(assert (=> d!16315 m!68301))

(declare-fun m!69763 () Bool)

(assert (=> d!16315 m!69763))

(declare-fun m!69765 () Bool)

(assert (=> d!16315 m!69765))

(declare-fun m!69767 () Bool)

(assert (=> b!72049 m!69767))

(declare-fun m!69769 () Bool)

(assert (=> b!72050 m!69769))

(assert (=> d!15893 d!16315))

(declare-fun b!72051 () Bool)

(declare-fun e!47130 () List!1467)

(declare-fun call!6260 () List!1467)

(assert (=> b!72051 (= e!47130 call!6260)))

(declare-fun c!10605 () Bool)

(declare-fun bm!6255 () Bool)

(declare-fun e!47129 () List!1467)

(assert (=> bm!6255 (= call!6260 ($colon$colon!64 e!47129 (ite c!10605 (h!2049 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) (tuple2!2111 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun c!10604 () Bool)

(assert (=> bm!6255 (= c!10604 c!10605)))

(declare-fun d!16317 () Bool)

(declare-fun e!47128 () Bool)

(assert (=> d!16317 e!47128))

(declare-fun res!38311 () Bool)

(assert (=> d!16317 (=> (not res!38311) (not e!47128))))

(declare-fun lt!32078 () List!1467)

(assert (=> d!16317 (= res!38311 (isStrictlySorted!278 lt!32078))))

(assert (=> d!16317 (= lt!32078 e!47130)))

(assert (=> d!16317 (= c!10605 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) (bvslt (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16317 (isStrictlySorted!278 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!16317 (= (insertStrictlySorted!53 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32078)))

(declare-fun b!72052 () Bool)

(declare-fun e!47126 () List!1467)

(declare-fun call!6258 () List!1467)

(assert (=> b!72052 (= e!47126 call!6258)))

(declare-fun b!72053 () Bool)

(declare-fun c!10602 () Bool)

(assert (=> b!72053 (= c!10602 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) (bvsgt (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun e!47127 () List!1467)

(assert (=> b!72053 (= e!47126 e!47127)))

(declare-fun b!72054 () Bool)

(declare-fun call!6259 () List!1467)

(assert (=> b!72054 (= e!47127 call!6259)))

(declare-fun b!72055 () Bool)

(assert (=> b!72055 (= e!47127 call!6259)))

(declare-fun b!72056 () Bool)

(declare-fun res!38310 () Bool)

(assert (=> b!72056 (=> (not res!38310) (not e!47128))))

(assert (=> b!72056 (= res!38310 (containsKey!136 lt!32078 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun c!10603 () Bool)

(declare-fun b!72057 () Bool)

(assert (=> b!72057 (= e!47129 (ite c!10603 (t!4995 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) (ite c!10602 (Cons!1463 (h!2049 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) (t!4995 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))) Nil!1464)))))

(declare-fun bm!6256 () Bool)

(assert (=> bm!6256 (= call!6258 call!6260)))

(declare-fun b!72058 () Bool)

(assert (=> b!72058 (= e!47130 e!47126)))

(assert (=> b!72058 (= c!10603 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun bm!6257 () Bool)

(assert (=> bm!6257 (= call!6259 call!6258)))

(declare-fun b!72059 () Bool)

(assert (=> b!72059 (= e!47129 (insertStrictlySorted!53 (t!4995 (toList!713 (+!91 lt!31219 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72060 () Bool)

(assert (=> b!72060 (= e!47128 (contains!719 lt!32078 (tuple2!2111 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16317 c!10605) b!72051))

(assert (= (and d!16317 (not c!10605)) b!72058))

(assert (= (and b!72058 c!10603) b!72052))

(assert (= (and b!72058 (not c!10603)) b!72053))

(assert (= (and b!72053 c!10602) b!72054))

(assert (= (and b!72053 (not c!10602)) b!72055))

(assert (= (or b!72054 b!72055) bm!6257))

(assert (= (or b!72052 bm!6257) bm!6256))

(assert (= (or b!72051 bm!6256) bm!6255))

(assert (= (and bm!6255 c!10604) b!72059))

(assert (= (and bm!6255 (not c!10604)) b!72057))

(assert (= (and d!16317 res!38311) b!72056))

(assert (= (and b!72056 res!38310) b!72060))

(declare-fun m!69771 () Bool)

(assert (=> b!72056 m!69771))

(declare-fun m!69773 () Bool)

(assert (=> b!72060 m!69773))

(declare-fun m!69775 () Bool)

(assert (=> bm!6255 m!69775))

(declare-fun m!69777 () Bool)

(assert (=> d!16317 m!69777))

(declare-fun m!69779 () Bool)

(assert (=> d!16317 m!69779))

(declare-fun m!69781 () Bool)

(assert (=> b!72059 m!69781))

(assert (=> d!15893 d!16317))

(declare-fun d!16319 () Bool)

(declare-fun res!38312 () Bool)

(declare-fun e!47131 () Bool)

(assert (=> d!16319 (=> res!38312 e!47131)))

(assert (=> d!16319 (= res!38312 (and ((_ is Cons!1463) (toList!713 lt!31516)) (= (_1!1066 (h!2049 (toList!713 lt!31516))) (_1!1066 lt!31228))))))

(assert (=> d!16319 (= (containsKey!136 (toList!713 lt!31516) (_1!1066 lt!31228)) e!47131)))

(declare-fun b!72061 () Bool)

(declare-fun e!47132 () Bool)

(assert (=> b!72061 (= e!47131 e!47132)))

(declare-fun res!38313 () Bool)

(assert (=> b!72061 (=> (not res!38313) (not e!47132))))

(assert (=> b!72061 (= res!38313 (and (or (not ((_ is Cons!1463) (toList!713 lt!31516))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31516))) (_1!1066 lt!31228))) ((_ is Cons!1463) (toList!713 lt!31516)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31516))) (_1!1066 lt!31228))))))

(declare-fun b!72062 () Bool)

(assert (=> b!72062 (= e!47132 (containsKey!136 (t!4995 (toList!713 lt!31516)) (_1!1066 lt!31228)))))

(assert (= (and d!16319 (not res!38312)) b!72061))

(assert (= (and b!72061 res!38313) b!72062))

(declare-fun m!69783 () Bool)

(assert (=> b!72062 m!69783))

(assert (=> d!16067 d!16319))

(declare-fun d!16321 () Bool)

(declare-fun lt!32079 () Bool)

(assert (=> d!16321 (= lt!32079 (select (content!76 (toList!713 lt!31543)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun e!47134 () Bool)

(assert (=> d!16321 (= lt!32079 e!47134)))

(declare-fun res!38315 () Bool)

(assert (=> d!16321 (=> (not res!38315) (not e!47134))))

(assert (=> d!16321 (= res!38315 ((_ is Cons!1463) (toList!713 lt!31543)))))

(assert (=> d!16321 (= (contains!719 (toList!713 lt!31543) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!32079)))

(declare-fun b!72063 () Bool)

(declare-fun e!47133 () Bool)

(assert (=> b!72063 (= e!47134 e!47133)))

(declare-fun res!38314 () Bool)

(assert (=> b!72063 (=> res!38314 e!47133)))

(assert (=> b!72063 (= res!38314 (= (h!2049 (toList!713 lt!31543)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!72064 () Bool)

(assert (=> b!72064 (= e!47133 (contains!719 (t!4995 (toList!713 lt!31543)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!16321 res!38315) b!72063))

(assert (= (and b!72063 (not res!38314)) b!72064))

(declare-fun m!69785 () Bool)

(assert (=> d!16321 m!69785))

(declare-fun m!69787 () Bool)

(assert (=> d!16321 m!69787))

(declare-fun m!69789 () Bool)

(assert (=> b!72064 m!69789))

(assert (=> b!71141 d!16321))

(declare-fun d!16323 () Bool)

(assert (=> d!16323 (isDefined!85 (getValueByKey!133 (toList!713 lt!31512) (_1!1066 lt!31223)))))

(declare-fun lt!32080 () Unit!1996)

(assert (=> d!16323 (= lt!32080 (choose!407 (toList!713 lt!31512) (_1!1066 lt!31223)))))

(declare-fun e!47135 () Bool)

(assert (=> d!16323 e!47135))

(declare-fun res!38316 () Bool)

(assert (=> d!16323 (=> (not res!38316) (not e!47135))))

(assert (=> d!16323 (= res!38316 (isStrictlySorted!278 (toList!713 lt!31512)))))

(assert (=> d!16323 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31512) (_1!1066 lt!31223)) lt!32080)))

(declare-fun b!72065 () Bool)

(assert (=> b!72065 (= e!47135 (containsKey!136 (toList!713 lt!31512) (_1!1066 lt!31223)))))

(assert (= (and d!16323 res!38316) b!72065))

(assert (=> d!16323 m!68195))

(assert (=> d!16323 m!68195))

(assert (=> d!16323 m!68869))

(declare-fun m!69791 () Bool)

(assert (=> d!16323 m!69791))

(declare-fun m!69793 () Bool)

(assert (=> d!16323 m!69793))

(assert (=> b!72065 m!68865))

(assert (=> b!71477 d!16323))

(declare-fun d!16325 () Bool)

(assert (=> d!16325 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31512) (_1!1066 lt!31223))) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31512) (_1!1066 lt!31223)))))))

(declare-fun bs!3102 () Bool)

(assert (= bs!3102 d!16325))

(assert (=> bs!3102 m!68195))

(declare-fun m!69795 () Bool)

(assert (=> bs!3102 m!69795))

(assert (=> b!71477 d!16325))

(assert (=> b!71477 d!16033))

(assert (=> b!71287 d!16143))

(assert (=> b!71287 d!16145))

(assert (=> b!71251 d!16093))

(declare-fun b!72066 () Bool)

(declare-fun res!38318 () Bool)

(declare-fun e!47137 () Bool)

(assert (=> b!72066 (=> (not res!38318) (not e!47137))))

(declare-fun lt!32087 () ListLongMap!1395)

(assert (=> b!72066 (= res!38318 (not (contains!715 lt!32087 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72067 () Bool)

(declare-fun e!47139 () Bool)

(assert (=> b!72067 (= e!47139 (isEmpty!319 lt!32087))))

(declare-fun b!72068 () Bool)

(assert (=> b!72068 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> b!72068 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))))))))

(declare-fun e!47141 () Bool)

(assert (=> b!72068 (= e!47141 (= (apply!74 lt!32087 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun call!6261 () ListLongMap!1395)

(declare-fun bm!6258 () Bool)

(assert (=> bm!6258 (= call!6261 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16)))))

(declare-fun b!72069 () Bool)

(declare-fun lt!32085 () Unit!1996)

(declare-fun lt!32082 () Unit!1996)

(assert (=> b!72069 (= lt!32085 lt!32082)))

(declare-fun lt!32086 () (_ BitVec 64))

(declare-fun lt!32084 () ListLongMap!1395)

(declare-fun lt!32081 () (_ BitVec 64))

(declare-fun lt!32083 () V!2937)

(assert (=> b!72069 (not (contains!715 (+!91 lt!32084 (tuple2!2111 lt!32081 lt!32083)) lt!32086))))

(assert (=> b!72069 (= lt!32082 (addStillNotContains!25 lt!32084 lt!32081 lt!32083 lt!32086))))

(assert (=> b!72069 (= lt!32086 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!72069 (= lt!32083 (get!1141 (select (arr!1845 (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!72069 (= lt!32081 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72069 (= lt!32084 call!6261)))

(declare-fun e!47142 () ListLongMap!1395)

(assert (=> b!72069 (= e!47142 (+!91 call!6261 (tuple2!2111 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000) (get!1141 (select (arr!1845 (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!72070 () Bool)

(declare-fun e!47138 () Bool)

(assert (=> b!72070 (= e!47137 e!47138)))

(declare-fun c!10606 () Bool)

(declare-fun e!47136 () Bool)

(assert (=> b!72070 (= c!10606 e!47136)))

(declare-fun res!38317 () Bool)

(assert (=> b!72070 (=> (not res!38317) (not e!47136))))

(assert (=> b!72070 (= res!38317 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!72071 () Bool)

(assert (=> b!72071 (= e!47136 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72071 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!72072 () Bool)

(assert (=> b!72072 (= e!47138 e!47141)))

(assert (=> b!72072 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun res!38319 () Bool)

(assert (=> b!72072 (= res!38319 (contains!715 lt!32087 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72072 (=> (not res!38319) (not e!47141))))

(declare-fun b!72073 () Bool)

(assert (=> b!72073 (= e!47138 e!47139)))

(declare-fun c!10609 () Bool)

(assert (=> b!72073 (= c!10609 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!72074 () Bool)

(declare-fun e!47140 () ListLongMap!1395)

(assert (=> b!72074 (= e!47140 e!47142)))

(declare-fun c!10608 () Bool)

(assert (=> b!72074 (= c!10608 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72075 () Bool)

(assert (=> b!72075 (= e!47139 (= lt!32087 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16))))))

(declare-fun d!16327 () Bool)

(assert (=> d!16327 e!47137))

(declare-fun res!38320 () Bool)

(assert (=> d!16327 (=> (not res!38320) (not e!47137))))

(assert (=> d!16327 (= res!38320 (not (contains!715 lt!32087 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16327 (= lt!32087 e!47140)))

(declare-fun c!10607 () Bool)

(assert (=> d!16327 (= c!10607 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16327 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16327 (= (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32087)))

(declare-fun b!72076 () Bool)

(assert (=> b!72076 (= e!47142 call!6261)))

(declare-fun b!72077 () Bool)

(assert (=> b!72077 (= e!47140 (ListLongMap!1396 Nil!1464))))

(assert (= (and d!16327 c!10607) b!72077))

(assert (= (and d!16327 (not c!10607)) b!72074))

(assert (= (and b!72074 c!10608) b!72069))

(assert (= (and b!72074 (not c!10608)) b!72076))

(assert (= (or b!72069 b!72076) bm!6258))

(assert (= (and d!16327 res!38320) b!72066))

(assert (= (and b!72066 res!38318) b!72070))

(assert (= (and b!72070 res!38317) b!72071))

(assert (= (and b!72070 c!10606) b!72072))

(assert (= (and b!72070 (not c!10606)) b!72073))

(assert (= (and b!72072 res!38319) b!72068))

(assert (= (and b!72073 c!10609) b!72075))

(assert (= (and b!72073 (not c!10609)) b!72067))

(declare-fun b_lambda!3239 () Bool)

(assert (=> (not b_lambda!3239) (not b!72068)))

(assert (=> b!72068 t!5010))

(declare-fun b_and!4445 () Bool)

(assert (= b_and!4441 (and (=> t!5010 result!2661) b_and!4445)))

(assert (=> b!72068 t!5012))

(declare-fun b_and!4447 () Bool)

(assert (= b_and!4443 (and (=> t!5012 result!2663) b_and!4447)))

(declare-fun b_lambda!3241 () Bool)

(assert (=> (not b_lambda!3241) (not b!72069)))

(assert (=> b!72069 t!5010))

(declare-fun b_and!4449 () Bool)

(assert (= b_and!4445 (and (=> t!5010 result!2661) b_and!4449)))

(assert (=> b!72069 t!5012))

(declare-fun b_and!4451 () Bool)

(assert (= b_and!4447 (and (=> t!5012 result!2663) b_and!4451)))

(declare-fun m!69797 () Bool)

(assert (=> d!16327 m!69797))

(assert (=> d!16327 m!68327))

(assert (=> b!72071 m!68397))

(assert (=> b!72071 m!68397))

(assert (=> b!72071 m!68399))

(declare-fun m!69799 () Bool)

(assert (=> b!72067 m!69799))

(assert (=> b!72072 m!68397))

(assert (=> b!72072 m!68397))

(declare-fun m!69801 () Bool)

(assert (=> b!72072 m!69801))

(declare-fun m!69803 () Bool)

(assert (=> b!72075 m!69803))

(assert (=> bm!6258 m!69803))

(assert (=> b!72068 m!68397))

(declare-fun m!69805 () Bool)

(assert (=> b!72068 m!69805))

(assert (=> b!72068 m!69027))

(assert (=> b!72068 m!69027))

(assert (=> b!72068 m!68441))

(assert (=> b!72068 m!69029))

(assert (=> b!72068 m!68441))

(assert (=> b!72068 m!68397))

(declare-fun m!69807 () Bool)

(assert (=> b!72066 m!69807))

(assert (=> b!72074 m!68397))

(assert (=> b!72074 m!68397))

(assert (=> b!72074 m!68399))

(declare-fun m!69809 () Bool)

(assert (=> b!72069 m!69809))

(declare-fun m!69811 () Bool)

(assert (=> b!72069 m!69811))

(declare-fun m!69813 () Bool)

(assert (=> b!72069 m!69813))

(assert (=> b!72069 m!69027))

(assert (=> b!72069 m!69027))

(assert (=> b!72069 m!68441))

(assert (=> b!72069 m!69029))

(assert (=> b!72069 m!69811))

(assert (=> b!72069 m!68397))

(assert (=> b!72069 m!68441))

(declare-fun m!69815 () Bool)

(assert (=> b!72069 m!69815))

(assert (=> bm!6198 d!16327))

(declare-fun d!16329 () Bool)

(declare-fun lt!32088 () Bool)

(assert (=> d!16329 (= lt!32088 (select (content!76 (t!4995 (toList!713 lt!31480))) lt!31223))))

(declare-fun e!47144 () Bool)

(assert (=> d!16329 (= lt!32088 e!47144)))

(declare-fun res!38322 () Bool)

(assert (=> d!16329 (=> (not res!38322) (not e!47144))))

(assert (=> d!16329 (= res!38322 ((_ is Cons!1463) (t!4995 (toList!713 lt!31480))))))

(assert (=> d!16329 (= (contains!719 (t!4995 (toList!713 lt!31480)) lt!31223) lt!32088)))

(declare-fun b!72078 () Bool)

(declare-fun e!47143 () Bool)

(assert (=> b!72078 (= e!47144 e!47143)))

(declare-fun res!38321 () Bool)

(assert (=> b!72078 (=> res!38321 e!47143)))

(assert (=> b!72078 (= res!38321 (= (h!2049 (t!4995 (toList!713 lt!31480))) lt!31223))))

(declare-fun b!72079 () Bool)

(assert (=> b!72079 (= e!47143 (contains!719 (t!4995 (t!4995 (toList!713 lt!31480))) lt!31223))))

(assert (= (and d!16329 res!38322) b!72078))

(assert (= (and b!72078 (not res!38321)) b!72079))

(declare-fun m!69817 () Bool)

(assert (=> d!16329 m!69817))

(declare-fun m!69819 () Bool)

(assert (=> d!16329 m!69819))

(declare-fun m!69821 () Bool)

(assert (=> b!72079 m!69821))

(assert (=> b!71298 d!16329))

(declare-fun d!16331 () Bool)

(assert (=> d!16331 (= (inRange!0 (index!3047 lt!31737) (mask!6148 newMap!16)) (and (bvsge (index!3047 lt!31737) #b00000000000000000000000000000000) (bvslt (index!3047 lt!31737) (bvadd (mask!6148 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!71430 d!16331))

(declare-fun d!16333 () Bool)

(declare-fun res!38323 () Bool)

(declare-fun e!47145 () Bool)

(assert (=> d!16333 (=> res!38323 e!47145)))

(assert (=> d!16333 (= res!38323 (and ((_ is Cons!1463) (toList!713 lt!31501)) (= (_1!1066 (h!2049 (toList!713 lt!31501))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16333 (= (containsKey!136 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000) e!47145)))

(declare-fun b!72080 () Bool)

(declare-fun e!47146 () Bool)

(assert (=> b!72080 (= e!47145 e!47146)))

(declare-fun res!38324 () Bool)

(assert (=> b!72080 (=> (not res!38324) (not e!47146))))

(assert (=> b!72080 (= res!38324 (and (or (not ((_ is Cons!1463) (toList!713 lt!31501))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31501))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1463) (toList!713 lt!31501)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31501))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72081 () Bool)

(assert (=> b!72081 (= e!47146 (containsKey!136 (t!4995 (toList!713 lt!31501)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16333 (not res!38323)) b!72080))

(assert (= (and b!72080 res!38324) b!72081))

(declare-fun m!69823 () Bool)

(assert (=> b!72081 m!69823))

(assert (=> d!15919 d!16333))

(declare-fun d!16335 () Bool)

(assert (=> d!16335 (= (get!1146 (getValueByKey!133 (toList!713 lt!31348) lt!31346)) (v!2522 (getValueByKey!133 (toList!713 lt!31348) lt!31346)))))

(assert (=> d!15967 d!16335))

(declare-fun b!72083 () Bool)

(declare-fun e!47147 () Option!139)

(declare-fun e!47148 () Option!139)

(assert (=> b!72083 (= e!47147 e!47148)))

(declare-fun c!10611 () Bool)

(assert (=> b!72083 (= c!10611 (and ((_ is Cons!1463) (toList!713 lt!31348)) (not (= (_1!1066 (h!2049 (toList!713 lt!31348))) lt!31346))))))

(declare-fun b!72085 () Bool)

(assert (=> b!72085 (= e!47148 None!137)))

(declare-fun b!72084 () Bool)

(assert (=> b!72084 (= e!47148 (getValueByKey!133 (t!4995 (toList!713 lt!31348)) lt!31346))))

(declare-fun d!16337 () Bool)

(declare-fun c!10610 () Bool)

(assert (=> d!16337 (= c!10610 (and ((_ is Cons!1463) (toList!713 lt!31348)) (= (_1!1066 (h!2049 (toList!713 lt!31348))) lt!31346)))))

(assert (=> d!16337 (= (getValueByKey!133 (toList!713 lt!31348) lt!31346) e!47147)))

(declare-fun b!72082 () Bool)

(assert (=> b!72082 (= e!47147 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31348)))))))

(assert (= (and d!16337 c!10610) b!72082))

(assert (= (and d!16337 (not c!10610)) b!72083))

(assert (= (and b!72083 c!10611) b!72084))

(assert (= (and b!72083 (not c!10611)) b!72085))

(declare-fun m!69825 () Bool)

(assert (=> b!72084 m!69825))

(assert (=> d!15967 d!16337))

(declare-fun d!16339 () Bool)

(assert (=> d!16339 (= (get!1144 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2515 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71128 d!16339))

(declare-fun d!16341 () Bool)

(declare-fun lt!32089 () Bool)

(assert (=> d!16341 (= lt!32089 (select (content!76 (toList!713 lt!31627)) (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun e!47150 () Bool)

(assert (=> d!16341 (= lt!32089 e!47150)))

(declare-fun res!38326 () Bool)

(assert (=> d!16341 (=> (not res!38326) (not e!47150))))

(assert (=> d!16341 (= res!38326 ((_ is Cons!1463) (toList!713 lt!31627)))))

(assert (=> d!16341 (= (contains!719 (toList!713 lt!31627) (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!32089)))

(declare-fun b!72086 () Bool)

(declare-fun e!47149 () Bool)

(assert (=> b!72086 (= e!47150 e!47149)))

(declare-fun res!38325 () Bool)

(assert (=> b!72086 (=> res!38325 e!47149)))

(assert (=> b!72086 (= res!38325 (= (h!2049 (toList!713 lt!31627)) (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!72087 () Bool)

(assert (=> b!72087 (= e!47149 (contains!719 (t!4995 (toList!713 lt!31627)) (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!16341 res!38326) b!72086))

(assert (= (and b!72086 (not res!38325)) b!72087))

(declare-fun m!69827 () Bool)

(assert (=> d!16341 m!69827))

(declare-fun m!69829 () Bool)

(assert (=> d!16341 m!69829))

(declare-fun m!69831 () Bool)

(assert (=> b!72087 m!69831))

(assert (=> b!71279 d!16341))

(assert (=> bm!6157 d!16233))

(declare-fun b!72089 () Bool)

(declare-fun e!47151 () Option!139)

(declare-fun e!47152 () Option!139)

(assert (=> b!72089 (= e!47151 e!47152)))

(declare-fun c!10613 () Bool)

(assert (=> b!72089 (= c!10613 (and ((_ is Cons!1463) (t!4995 lt!31510)) (not (= (_1!1066 (h!2049 (t!4995 lt!31510))) (_1!1066 lt!31223)))))))

(declare-fun b!72091 () Bool)

(assert (=> b!72091 (= e!47152 None!137)))

(declare-fun b!72090 () Bool)

(assert (=> b!72090 (= e!47152 (getValueByKey!133 (t!4995 (t!4995 lt!31510)) (_1!1066 lt!31223)))))

(declare-fun d!16343 () Bool)

(declare-fun c!10612 () Bool)

(assert (=> d!16343 (= c!10612 (and ((_ is Cons!1463) (t!4995 lt!31510)) (= (_1!1066 (h!2049 (t!4995 lt!31510))) (_1!1066 lt!31223))))))

(assert (=> d!16343 (= (getValueByKey!133 (t!4995 lt!31510) (_1!1066 lt!31223)) e!47151)))

(declare-fun b!72088 () Bool)

(assert (=> b!72088 (= e!47151 (Some!138 (_2!1066 (h!2049 (t!4995 lt!31510)))))))

(assert (= (and d!16343 c!10612) b!72088))

(assert (= (and d!16343 (not c!10612)) b!72089))

(assert (= (and b!72089 c!10613) b!72090))

(assert (= (and b!72089 (not c!10613)) b!72091))

(declare-fun m!69833 () Bool)

(assert (=> b!72090 m!69833))

(assert (=> b!71482 d!16343))

(declare-fun d!16345 () Bool)

(declare-fun lt!32090 () Bool)

(assert (=> d!16345 (= lt!32090 (select (content!76 (toList!713 lt!31551)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun e!47154 () Bool)

(assert (=> d!16345 (= lt!32090 e!47154)))

(declare-fun res!38328 () Bool)

(assert (=> d!16345 (=> (not res!38328) (not e!47154))))

(assert (=> d!16345 (= res!38328 ((_ is Cons!1463) (toList!713 lt!31551)))))

(assert (=> d!16345 (= (contains!719 (toList!713 lt!31551) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!32090)))

(declare-fun b!72092 () Bool)

(declare-fun e!47153 () Bool)

(assert (=> b!72092 (= e!47154 e!47153)))

(declare-fun res!38327 () Bool)

(assert (=> b!72092 (=> res!38327 e!47153)))

(assert (=> b!72092 (= res!38327 (= (h!2049 (toList!713 lt!31551)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!72093 () Bool)

(assert (=> b!72093 (= e!47153 (contains!719 (t!4995 (toList!713 lt!31551)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!16345 res!38328) b!72092))

(assert (= (and b!72092 (not res!38327)) b!72093))

(declare-fun m!69835 () Bool)

(assert (=> d!16345 m!69835))

(declare-fun m!69837 () Bool)

(assert (=> d!16345 m!69837))

(declare-fun m!69839 () Bool)

(assert (=> b!72093 m!69839))

(assert (=> b!71145 d!16345))

(assert (=> bm!6190 d!15983))

(assert (=> b!71350 d!16133))

(assert (=> b!71350 d!16135))

(assert (=> b!71588 d!16093))

(declare-fun d!16347 () Bool)

(declare-fun lt!32091 () Bool)

(assert (=> d!16347 (= lt!32091 (select (content!76 lt!31503) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(declare-fun e!47156 () Bool)

(assert (=> d!16347 (= lt!32091 e!47156)))

(declare-fun res!38330 () Bool)

(assert (=> d!16347 (=> (not res!38330) (not e!47156))))

(assert (=> d!16347 (= res!38330 ((_ is Cons!1463) lt!31503))))

(assert (=> d!16347 (= (contains!719 lt!31503 (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))) lt!32091)))

(declare-fun b!72094 () Bool)

(declare-fun e!47155 () Bool)

(assert (=> b!72094 (= e!47156 e!47155)))

(declare-fun res!38329 () Bool)

(assert (=> b!72094 (=> res!38329 e!47155)))

(assert (=> b!72094 (= res!38329 (= (h!2049 lt!31503) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(declare-fun b!72095 () Bool)

(assert (=> b!72095 (= e!47155 (contains!719 (t!4995 lt!31503) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(assert (= (and d!16347 res!38330) b!72094))

(assert (= (and b!72094 (not res!38329)) b!72095))

(declare-fun m!69841 () Bool)

(assert (=> d!16347 m!69841))

(declare-fun m!69843 () Bool)

(assert (=> d!16347 m!69843))

(declare-fun m!69845 () Bool)

(assert (=> b!72095 m!69845))

(assert (=> b!71175 d!16347))

(assert (=> b!71424 d!15849))

(declare-fun d!16349 () Bool)

(assert (=> d!16349 (= (apply!74 lt!31874 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1146 (getValueByKey!133 (toList!713 lt!31874) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3103 () Bool)

(assert (= bs!3103 d!16349))

(assert (=> bs!3103 m!69145))

(assert (=> bs!3103 m!69145))

(declare-fun m!69847 () Bool)

(assert (=> bs!3103 m!69847))

(assert (=> b!71582 d!16349))

(declare-fun d!16351 () Bool)

(assert (=> d!16351 (= ($colon$colon!64 e!46749 (ite c!10395 (h!2049 (toList!713 lt!31219)) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223)))) (Cons!1463 (ite c!10395 (h!2049 (toList!713 lt!31219)) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))) e!46749))))

(assert (=> bm!6165 d!16351))

(declare-fun d!16353 () Bool)

(assert (=> d!16353 (isDefined!85 (getValueByKey!133 (toList!713 lt!31516) (_1!1066 lt!31228)))))

(declare-fun lt!32092 () Unit!1996)

(assert (=> d!16353 (= lt!32092 (choose!407 (toList!713 lt!31516) (_1!1066 lt!31228)))))

(declare-fun e!47157 () Bool)

(assert (=> d!16353 e!47157))

(declare-fun res!38331 () Bool)

(assert (=> d!16353 (=> (not res!38331) (not e!47157))))

(assert (=> d!16353 (= res!38331 (isStrictlySorted!278 (toList!713 lt!31516)))))

(assert (=> d!16353 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31516) (_1!1066 lt!31228)) lt!32092)))

(declare-fun b!72096 () Bool)

(assert (=> b!72096 (= e!47157 (containsKey!136 (toList!713 lt!31516) (_1!1066 lt!31228)))))

(assert (= (and d!16353 res!38331) b!72096))

(assert (=> d!16353 m!68207))

(assert (=> d!16353 m!68207))

(assert (=> d!16353 m!68957))

(declare-fun m!69849 () Bool)

(assert (=> d!16353 m!69849))

(declare-fun m!69851 () Bool)

(assert (=> d!16353 m!69851))

(assert (=> b!72096 m!68953))

(assert (=> b!71553 d!16353))

(declare-fun d!16355 () Bool)

(assert (=> d!16355 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31516) (_1!1066 lt!31228))) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31516) (_1!1066 lt!31228)))))))

(declare-fun bs!3104 () Bool)

(assert (= bs!3104 d!16355))

(assert (=> bs!3104 m!68207))

(declare-fun m!69853 () Bool)

(assert (=> bs!3104 m!69853))

(assert (=> b!71553 d!16355))

(assert (=> b!71553 d!16035))

(declare-fun d!16357 () Bool)

(declare-fun res!38336 () Bool)

(declare-fun e!47162 () Bool)

(assert (=> d!16357 (=> res!38336 e!47162)))

(assert (=> d!16357 (= res!38336 (or ((_ is Nil!1464) lt!31723) ((_ is Nil!1464) (t!4995 lt!31723))))))

(assert (=> d!16357 (= (isStrictlySorted!278 lt!31723) e!47162)))

(declare-fun b!72101 () Bool)

(declare-fun e!47163 () Bool)

(assert (=> b!72101 (= e!47162 e!47163)))

(declare-fun res!38337 () Bool)

(assert (=> b!72101 (=> (not res!38337) (not e!47163))))

(assert (=> b!72101 (= res!38337 (bvslt (_1!1066 (h!2049 lt!31723)) (_1!1066 (h!2049 (t!4995 lt!31723)))))))

(declare-fun b!72102 () Bool)

(assert (=> b!72102 (= e!47163 (isStrictlySorted!278 (t!4995 lt!31723)))))

(assert (= (and d!16357 (not res!38336)) b!72101))

(assert (= (and b!72101 res!38337) b!72102))

(declare-fun m!69855 () Bool)

(assert (=> b!72102 m!69855))

(assert (=> d!16027 d!16357))

(declare-fun d!16359 () Bool)

(declare-fun res!38338 () Bool)

(declare-fun e!47164 () Bool)

(assert (=> d!16359 (=> res!38338 e!47164)))

(assert (=> d!16359 (= res!38338 (or ((_ is Nil!1464) (toList!713 lt!31219)) ((_ is Nil!1464) (t!4995 (toList!713 lt!31219)))))))

(assert (=> d!16359 (= (isStrictlySorted!278 (toList!713 lt!31219)) e!47164)))

(declare-fun b!72103 () Bool)

(declare-fun e!47165 () Bool)

(assert (=> b!72103 (= e!47164 e!47165)))

(declare-fun res!38339 () Bool)

(assert (=> b!72103 (=> (not res!38339) (not e!47165))))

(assert (=> b!72103 (= res!38339 (bvslt (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 (h!2049 (t!4995 (toList!713 lt!31219))))))))

(declare-fun b!72104 () Bool)

(assert (=> b!72104 (= e!47165 (isStrictlySorted!278 (t!4995 (toList!713 lt!31219))))))

(assert (= (and d!16359 (not res!38338)) b!72103))

(assert (= (and b!72103 res!38339) b!72104))

(assert (=> b!72104 m!69327))

(assert (=> d!16027 d!16359))

(declare-fun d!16361 () Bool)

(assert (=> d!16361 (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32093 () Unit!1996)

(assert (=> d!16361 (= lt!32093 (choose!407 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47166 () Bool)

(assert (=> d!16361 e!47166))

(declare-fun res!38340 () Bool)

(assert (=> d!16361 (=> (not res!38340) (not e!47166))))

(assert (=> d!16361 (= res!38340 (isStrictlySorted!278 (toList!713 lt!31501)))))

(assert (=> d!16361 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000) lt!32093)))

(declare-fun b!72105 () Bool)

(assert (=> b!72105 (= e!47166 (containsKey!136 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16361 res!38340) b!72105))

(assert (=> d!16361 m!68385))

(assert (=> d!16361 m!68385))

(assert (=> d!16361 m!68387))

(declare-fun m!69857 () Bool)

(assert (=> d!16361 m!69857))

(assert (=> d!16361 m!69711))

(assert (=> b!72105 m!68381))

(assert (=> b!71209 d!16361))

(declare-fun d!16363 () Bool)

(assert (=> d!16363 (= (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!320 (getValueByKey!133 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3105 () Bool)

(assert (= bs!3105 d!16363))

(assert (=> bs!3105 m!68385))

(declare-fun m!69859 () Bool)

(assert (=> bs!3105 m!69859))

(assert (=> b!71209 d!16363))

(declare-fun b!72107 () Bool)

(declare-fun e!47167 () Option!139)

(declare-fun e!47168 () Option!139)

(assert (=> b!72107 (= e!47167 e!47168)))

(declare-fun c!10615 () Bool)

(assert (=> b!72107 (= c!10615 (and ((_ is Cons!1463) (toList!713 lt!31501)) (not (= (_1!1066 (h!2049 (toList!713 lt!31501))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!72109 () Bool)

(assert (=> b!72109 (= e!47168 None!137)))

(declare-fun b!72108 () Bool)

(assert (=> b!72108 (= e!47168 (getValueByKey!133 (t!4995 (toList!713 lt!31501)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16365 () Bool)

(declare-fun c!10614 () Bool)

(assert (=> d!16365 (= c!10614 (and ((_ is Cons!1463) (toList!713 lt!31501)) (= (_1!1066 (h!2049 (toList!713 lt!31501))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16365 (= (getValueByKey!133 (toList!713 lt!31501) #b1000000000000000000000000000000000000000000000000000000000000000) e!47167)))

(declare-fun b!72106 () Bool)

(assert (=> b!72106 (= e!47167 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31501)))))))

(assert (= (and d!16365 c!10614) b!72106))

(assert (= (and d!16365 (not c!10614)) b!72107))

(assert (= (and b!72107 c!10615) b!72108))

(assert (= (and b!72107 (not c!10615)) b!72109))

(declare-fun m!69861 () Bool)

(assert (=> b!72108 m!69861))

(assert (=> b!71209 d!16365))

(assert (=> d!16029 d!15853))

(declare-fun d!16367 () Bool)

(declare-fun e!47170 () Bool)

(assert (=> d!16367 e!47170))

(declare-fun res!38341 () Bool)

(assert (=> d!16367 (=> res!38341 e!47170)))

(declare-fun lt!32097 () Bool)

(assert (=> d!16367 (= res!38341 (not lt!32097))))

(declare-fun lt!32096 () Bool)

(assert (=> d!16367 (= lt!32097 lt!32096)))

(declare-fun lt!32095 () Unit!1996)

(declare-fun e!47169 () Unit!1996)

(assert (=> d!16367 (= lt!32095 e!47169)))

(declare-fun c!10616 () Bool)

(assert (=> d!16367 (= c!10616 lt!32096)))

(assert (=> d!16367 (= lt!32096 (containsKey!136 (toList!713 lt!31348) lt!31346))))

(assert (=> d!16367 (= (contains!715 lt!31348 lt!31346) lt!32097)))

(declare-fun b!72110 () Bool)

(declare-fun lt!32094 () Unit!1996)

(assert (=> b!72110 (= e!47169 lt!32094)))

(assert (=> b!72110 (= lt!32094 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31348) lt!31346))))

(assert (=> b!72110 (isDefined!85 (getValueByKey!133 (toList!713 lt!31348) lt!31346))))

(declare-fun b!72111 () Bool)

(declare-fun Unit!2045 () Unit!1996)

(assert (=> b!72111 (= e!47169 Unit!2045)))

(declare-fun b!72112 () Bool)

(assert (=> b!72112 (= e!47170 (isDefined!85 (getValueByKey!133 (toList!713 lt!31348) lt!31346)))))

(assert (= (and d!16367 c!10616) b!72110))

(assert (= (and d!16367 (not c!10616)) b!72111))

(assert (= (and d!16367 (not res!38341)) b!72112))

(declare-fun m!69863 () Bool)

(assert (=> d!16367 m!69863))

(declare-fun m!69865 () Bool)

(assert (=> b!72110 m!69865))

(assert (=> b!72110 m!68573))

(assert (=> b!72110 m!68573))

(declare-fun m!69867 () Bool)

(assert (=> b!72110 m!69867))

(assert (=> b!72112 m!68573))

(assert (=> b!72112 m!68573))

(assert (=> b!72112 m!69867))

(assert (=> d!15953 d!16367))

(assert (=> d!15953 d!15965))

(assert (=> d!15953 d!15967))

(assert (=> d!15953 d!15977))

(declare-fun d!16369 () Bool)

(assert (=> d!16369 (= (apply!74 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31346) (apply!74 lt!31348 lt!31346))))

(assert (=> d!16369 true))

(declare-fun _$34!799 () Unit!1996)

(assert (=> d!16369 (= (choose!409 lt!31348 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31346) _$34!799)))

(declare-fun bs!3106 () Bool)

(assert (= bs!3106 d!16369))

(assert (=> bs!3106 m!68015))

(assert (=> bs!3106 m!68015))

(assert (=> bs!3106 m!68017))

(assert (=> bs!3106 m!68027))

(assert (=> d!15953 d!16369))

(declare-fun b!72115 () Bool)

(declare-fun e!47171 () Option!139)

(declare-fun e!47172 () Option!139)

(assert (=> b!72115 (= e!47171 e!47172)))

(declare-fun c!10618 () Bool)

(assert (=> b!72115 (= c!10618 (and ((_ is Cons!1463) (t!4995 lt!31514)) (not (= (_1!1066 (h!2049 (t!4995 lt!31514))) (_1!1066 lt!31228)))))))

(declare-fun b!72117 () Bool)

(assert (=> b!72117 (= e!47172 None!137)))

(declare-fun b!72116 () Bool)

(assert (=> b!72116 (= e!47172 (getValueByKey!133 (t!4995 (t!4995 lt!31514)) (_1!1066 lt!31228)))))

(declare-fun d!16371 () Bool)

(declare-fun c!10617 () Bool)

(assert (=> d!16371 (= c!10617 (and ((_ is Cons!1463) (t!4995 lt!31514)) (= (_1!1066 (h!2049 (t!4995 lt!31514))) (_1!1066 lt!31228))))))

(assert (=> d!16371 (= (getValueByKey!133 (t!4995 lt!31514) (_1!1066 lt!31228)) e!47171)))

(declare-fun b!72114 () Bool)

(assert (=> b!72114 (= e!47171 (Some!138 (_2!1066 (h!2049 (t!4995 lt!31514)))))))

(assert (= (and d!16371 c!10617) b!72114))

(assert (= (and d!16371 (not c!10617)) b!72115))

(assert (= (and b!72115 c!10618) b!72116))

(assert (= (and b!72115 (not c!10618)) b!72117))

(declare-fun m!69869 () Bool)

(assert (=> b!72116 m!69869))

(assert (=> b!71558 d!16371))

(assert (=> b!71217 d!16093))

(declare-fun d!16373 () Bool)

(declare-fun e!47174 () Bool)

(assert (=> d!16373 e!47174))

(declare-fun res!38342 () Bool)

(assert (=> d!16373 (=> res!38342 e!47174)))

(declare-fun lt!32101 () Bool)

(assert (=> d!16373 (= res!38342 (not lt!32101))))

(declare-fun lt!32100 () Bool)

(assert (=> d!16373 (= lt!32101 lt!32100)))

(declare-fun lt!32099 () Unit!1996)

(declare-fun e!47173 () Unit!1996)

(assert (=> d!16373 (= lt!32099 e!47173)))

(declare-fun c!10619 () Bool)

(assert (=> d!16373 (= c!10619 lt!32100)))

(assert (=> d!16373 (= lt!32100 (containsKey!136 (toList!713 lt!31597) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16373 (= (contains!715 lt!31597 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) lt!32101)))

(declare-fun b!72118 () Bool)

(declare-fun lt!32098 () Unit!1996)

(assert (=> b!72118 (= e!47173 lt!32098)))

(assert (=> b!72118 (= lt!32098 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31597) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72118 (isDefined!85 (getValueByKey!133 (toList!713 lt!31597) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72119 () Bool)

(declare-fun Unit!2046 () Unit!1996)

(assert (=> b!72119 (= e!47173 Unit!2046)))

(declare-fun b!72120 () Bool)

(assert (=> b!72120 (= e!47174 (isDefined!85 (getValueByKey!133 (toList!713 lt!31597) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16373 c!10619) b!72118))

(assert (= (and d!16373 (not c!10619)) b!72119))

(assert (= (and d!16373 (not res!38342)) b!72120))

(assert (=> d!16373 m!68397))

(declare-fun m!69871 () Bool)

(assert (=> d!16373 m!69871))

(assert (=> b!72118 m!68397))

(declare-fun m!69873 () Bool)

(assert (=> b!72118 m!69873))

(assert (=> b!72118 m!68397))

(declare-fun m!69875 () Bool)

(assert (=> b!72118 m!69875))

(assert (=> b!72118 m!69875))

(declare-fun m!69877 () Bool)

(assert (=> b!72118 m!69877))

(assert (=> b!72120 m!68397))

(assert (=> b!72120 m!69875))

(assert (=> b!72120 m!69875))

(assert (=> b!72120 m!69877))

(assert (=> b!71231 d!16373))

(assert (=> b!71409 d!16093))

(declare-fun b!72122 () Bool)

(declare-fun e!47175 () Option!139)

(declare-fun e!47176 () Option!139)

(assert (=> b!72122 (= e!47175 e!47176)))

(declare-fun c!10621 () Bool)

(assert (=> b!72122 (= c!10621 (and ((_ is Cons!1463) (toList!713 lt!31648)) (not (= (_1!1066 (h!2049 (toList!713 lt!31648))) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!72124 () Bool)

(assert (=> b!72124 (= e!47176 None!137)))

(declare-fun b!72123 () Bool)

(assert (=> b!72123 (= e!47176 (getValueByKey!133 (t!4995 (toList!713 lt!31648)) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun d!16375 () Bool)

(declare-fun c!10620 () Bool)

(assert (=> d!16375 (= c!10620 (and ((_ is Cons!1463) (toList!713 lt!31648)) (= (_1!1066 (h!2049 (toList!713 lt!31648))) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16375 (= (getValueByKey!133 (toList!713 lt!31648) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47175)))

(declare-fun b!72121 () Bool)

(assert (=> b!72121 (= e!47175 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31648)))))))

(assert (= (and d!16375 c!10620) b!72121))

(assert (= (and d!16375 (not c!10620)) b!72122))

(assert (= (and b!72122 c!10621) b!72123))

(assert (= (and b!72122 (not c!10621)) b!72124))

(declare-fun m!69879 () Bool)

(assert (=> b!72123 m!69879))

(assert (=> b!71290 d!16375))

(assert (=> d!15923 d!16115))

(declare-fun d!16377 () Bool)

(assert (=> d!16377 (= (get!1146 (getValueByKey!133 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2522 (getValueByKey!133 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16001 d!16377))

(assert (=> d!16001 d!16091))

(declare-fun d!16379 () Bool)

(declare-fun e!47178 () Bool)

(assert (=> d!16379 e!47178))

(declare-fun res!38343 () Bool)

(assert (=> d!16379 (=> res!38343 e!47178)))

(declare-fun lt!32105 () Bool)

(assert (=> d!16379 (= res!38343 (not lt!32105))))

(declare-fun lt!32104 () Bool)

(assert (=> d!16379 (= lt!32105 lt!32104)))

(declare-fun lt!32103 () Unit!1996)

(declare-fun e!47177 () Unit!1996)

(assert (=> d!16379 (= lt!32103 e!47177)))

(declare-fun c!10622 () Bool)

(assert (=> d!16379 (= c!10622 lt!32104)))

(assert (=> d!16379 (= lt!32104 (containsKey!136 (toList!713 lt!31648) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!16379 (= (contains!715 lt!31648 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32105)))

(declare-fun b!72125 () Bool)

(declare-fun lt!32102 () Unit!1996)

(assert (=> b!72125 (= e!47177 lt!32102)))

(assert (=> b!72125 (= lt!32102 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31648) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> b!72125 (isDefined!85 (getValueByKey!133 (toList!713 lt!31648) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72126 () Bool)

(declare-fun Unit!2047 () Unit!1996)

(assert (=> b!72126 (= e!47177 Unit!2047)))

(declare-fun b!72127 () Bool)

(assert (=> b!72127 (= e!47178 (isDefined!85 (getValueByKey!133 (toList!713 lt!31648) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16379 c!10622) b!72125))

(assert (= (and d!16379 (not c!10622)) b!72126))

(assert (= (and d!16379 (not res!38343)) b!72127))

(declare-fun m!69881 () Bool)

(assert (=> d!16379 m!69881))

(declare-fun m!69883 () Bool)

(assert (=> b!72125 m!69883))

(assert (=> b!72125 m!68609))

(assert (=> b!72125 m!68609))

(declare-fun m!69885 () Bool)

(assert (=> b!72125 m!69885))

(assert (=> b!72127 m!68609))

(assert (=> b!72127 m!68609))

(assert (=> b!72127 m!69885))

(assert (=> d!15979 d!16379))

(declare-fun b!72129 () Bool)

(declare-fun e!47179 () Option!139)

(declare-fun e!47180 () Option!139)

(assert (=> b!72129 (= e!47179 e!47180)))

(declare-fun c!10624 () Bool)

(assert (=> b!72129 (= c!10624 (and ((_ is Cons!1463) lt!31646) (not (= (_1!1066 (h!2049 lt!31646)) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!72131 () Bool)

(assert (=> b!72131 (= e!47180 None!137)))

(declare-fun b!72130 () Bool)

(assert (=> b!72130 (= e!47180 (getValueByKey!133 (t!4995 lt!31646) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun c!10623 () Bool)

(declare-fun d!16381 () Bool)

(assert (=> d!16381 (= c!10623 (and ((_ is Cons!1463) lt!31646) (= (_1!1066 (h!2049 lt!31646)) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16381 (= (getValueByKey!133 lt!31646 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47179)))

(declare-fun b!72128 () Bool)

(assert (=> b!72128 (= e!47179 (Some!138 (_2!1066 (h!2049 lt!31646))))))

(assert (= (and d!16381 c!10623) b!72128))

(assert (= (and d!16381 (not c!10623)) b!72129))

(assert (= (and b!72129 c!10624) b!72130))

(assert (= (and b!72129 (not c!10624)) b!72131))

(declare-fun m!69887 () Bool)

(assert (=> b!72130 m!69887))

(assert (=> d!15979 d!16381))

(declare-fun d!16383 () Bool)

(assert (=> d!16383 (= (getValueByKey!133 lt!31646 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!32106 () Unit!1996)

(assert (=> d!16383 (= lt!32106 (choose!406 lt!31646 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun e!47181 () Bool)

(assert (=> d!16383 e!47181))

(declare-fun res!38344 () Bool)

(assert (=> d!16383 (=> (not res!38344) (not e!47181))))

(assert (=> d!16383 (= res!38344 (isStrictlySorted!278 lt!31646))))

(assert (=> d!16383 (= (lemmaContainsTupThenGetReturnValue!50 lt!31646 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32106)))

(declare-fun b!72132 () Bool)

(declare-fun res!38345 () Bool)

(assert (=> b!72132 (=> (not res!38345) (not e!47181))))

(assert (=> b!72132 (= res!38345 (containsKey!136 lt!31646 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72133 () Bool)

(assert (=> b!72133 (= e!47181 (contains!719 lt!31646 (tuple2!2111 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16383 res!38344) b!72132))

(assert (= (and b!72132 res!38345) b!72133))

(assert (=> d!16383 m!68603))

(declare-fun m!69889 () Bool)

(assert (=> d!16383 m!69889))

(declare-fun m!69891 () Bool)

(assert (=> d!16383 m!69891))

(declare-fun m!69893 () Bool)

(assert (=> b!72132 m!69893))

(declare-fun m!69895 () Bool)

(assert (=> b!72133 m!69895))

(assert (=> d!15979 d!16383))

(declare-fun b!72134 () Bool)

(declare-fun e!47186 () List!1467)

(declare-fun call!6264 () List!1467)

(assert (=> b!72134 (= e!47186 call!6264)))

(declare-fun c!10628 () Bool)

(declare-fun e!47185 () List!1467)

(declare-fun bm!6259 () Bool)

(assert (=> bm!6259 (= call!6264 ($colon$colon!64 e!47185 (ite c!10628 (h!2049 (toList!713 lt!31357)) (tuple2!2111 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun c!10627 () Bool)

(assert (=> bm!6259 (= c!10627 c!10628)))

(declare-fun d!16385 () Bool)

(declare-fun e!47184 () Bool)

(assert (=> d!16385 e!47184))

(declare-fun res!38347 () Bool)

(assert (=> d!16385 (=> (not res!38347) (not e!47184))))

(declare-fun lt!32107 () List!1467)

(assert (=> d!16385 (= res!38347 (isStrictlySorted!278 lt!32107))))

(assert (=> d!16385 (= lt!32107 e!47186)))

(assert (=> d!16385 (= c!10628 (and ((_ is Cons!1463) (toList!713 lt!31357)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31357))) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16385 (isStrictlySorted!278 (toList!713 lt!31357))))

(assert (=> d!16385 (= (insertStrictlySorted!53 (toList!713 lt!31357) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32107)))

(declare-fun b!72135 () Bool)

(declare-fun e!47182 () List!1467)

(declare-fun call!6262 () List!1467)

(assert (=> b!72135 (= e!47182 call!6262)))

(declare-fun b!72136 () Bool)

(declare-fun c!10625 () Bool)

(assert (=> b!72136 (= c!10625 (and ((_ is Cons!1463) (toList!713 lt!31357)) (bvsgt (_1!1066 (h!2049 (toList!713 lt!31357))) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun e!47183 () List!1467)

(assert (=> b!72136 (= e!47182 e!47183)))

(declare-fun b!72137 () Bool)

(declare-fun call!6263 () List!1467)

(assert (=> b!72137 (= e!47183 call!6263)))

(declare-fun b!72138 () Bool)

(assert (=> b!72138 (= e!47183 call!6263)))

(declare-fun b!72139 () Bool)

(declare-fun res!38346 () Bool)

(assert (=> b!72139 (=> (not res!38346) (not e!47184))))

(assert (=> b!72139 (= res!38346 (containsKey!136 lt!32107 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72140 () Bool)

(declare-fun c!10626 () Bool)

(assert (=> b!72140 (= e!47185 (ite c!10626 (t!4995 (toList!713 lt!31357)) (ite c!10625 (Cons!1463 (h!2049 (toList!713 lt!31357)) (t!4995 (toList!713 lt!31357))) Nil!1464)))))

(declare-fun bm!6260 () Bool)

(assert (=> bm!6260 (= call!6262 call!6264)))

(declare-fun b!72141 () Bool)

(assert (=> b!72141 (= e!47186 e!47182)))

(assert (=> b!72141 (= c!10626 (and ((_ is Cons!1463) (toList!713 lt!31357)) (= (_1!1066 (h!2049 (toList!713 lt!31357))) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun bm!6261 () Bool)

(assert (=> bm!6261 (= call!6263 call!6262)))

(declare-fun b!72142 () Bool)

(assert (=> b!72142 (= e!47185 (insertStrictlySorted!53 (t!4995 (toList!713 lt!31357)) (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72143 () Bool)

(assert (=> b!72143 (= e!47184 (contains!719 lt!32107 (tuple2!2111 (_1!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16385 c!10628) b!72134))

(assert (= (and d!16385 (not c!10628)) b!72141))

(assert (= (and b!72141 c!10626) b!72135))

(assert (= (and b!72141 (not c!10626)) b!72136))

(assert (= (and b!72136 c!10625) b!72137))

(assert (= (and b!72136 (not c!10625)) b!72138))

(assert (= (or b!72137 b!72138) bm!6261))

(assert (= (or b!72135 bm!6261) bm!6260))

(assert (= (or b!72134 bm!6260) bm!6259))

(assert (= (and bm!6259 c!10627) b!72142))

(assert (= (and bm!6259 (not c!10627)) b!72140))

(assert (= (and d!16385 res!38347) b!72139))

(assert (= (and b!72139 res!38346) b!72143))

(declare-fun m!69897 () Bool)

(assert (=> b!72139 m!69897))

(declare-fun m!69899 () Bool)

(assert (=> b!72143 m!69899))

(declare-fun m!69901 () Bool)

(assert (=> bm!6259 m!69901))

(declare-fun m!69903 () Bool)

(assert (=> d!16385 m!69903))

(declare-fun m!69905 () Bool)

(assert (=> d!16385 m!69905))

(declare-fun m!69907 () Bool)

(assert (=> b!72142 m!69907))

(assert (=> d!15979 d!16385))

(declare-fun d!16387 () Bool)

(declare-fun res!38348 () Bool)

(declare-fun e!47187 () Bool)

(assert (=> d!16387 (=> res!38348 e!47187)))

(assert (=> d!16387 (= res!38348 (and ((_ is Cons!1463) lt!31568) (= (_1!1066 (h!2049 lt!31568)) (_1!1066 lt!31228))))))

(assert (=> d!16387 (= (containsKey!136 lt!31568 (_1!1066 lt!31228)) e!47187)))

(declare-fun b!72144 () Bool)

(declare-fun e!47188 () Bool)

(assert (=> b!72144 (= e!47187 e!47188)))

(declare-fun res!38349 () Bool)

(assert (=> b!72144 (=> (not res!38349) (not e!47188))))

(assert (=> b!72144 (= res!38349 (and (or (not ((_ is Cons!1463) lt!31568)) (bvsle (_1!1066 (h!2049 lt!31568)) (_1!1066 lt!31228))) ((_ is Cons!1463) lt!31568) (bvslt (_1!1066 (h!2049 lt!31568)) (_1!1066 lt!31228))))))

(declare-fun b!72145 () Bool)

(assert (=> b!72145 (= e!47188 (containsKey!136 (t!4995 lt!31568) (_1!1066 lt!31228)))))

(assert (= (and d!16387 (not res!38348)) b!72144))

(assert (= (and b!72144 res!38349) b!72145))

(declare-fun m!69909 () Bool)

(assert (=> b!72145 m!69909))

(assert (=> b!71201 d!16387))

(declare-fun d!16389 () Bool)

(declare-fun res!38350 () Bool)

(declare-fun e!47189 () Bool)

(assert (=> d!16389 (=> res!38350 e!47189)))

(assert (=> d!16389 (= res!38350 (and ((_ is Cons!1463) lt!31754) (= (_1!1066 (h!2049 lt!31754)) (_1!1066 lt!31223))))))

(assert (=> d!16389 (= (containsKey!136 lt!31754 (_1!1066 lt!31223)) e!47189)))

(declare-fun b!72146 () Bool)

(declare-fun e!47190 () Bool)

(assert (=> b!72146 (= e!47189 e!47190)))

(declare-fun res!38351 () Bool)

(assert (=> b!72146 (=> (not res!38351) (not e!47190))))

(assert (=> b!72146 (= res!38351 (and (or (not ((_ is Cons!1463) lt!31754)) (bvsle (_1!1066 (h!2049 lt!31754)) (_1!1066 lt!31223))) ((_ is Cons!1463) lt!31754) (bvslt (_1!1066 (h!2049 lt!31754)) (_1!1066 lt!31223))))))

(declare-fun b!72147 () Bool)

(assert (=> b!72147 (= e!47190 (containsKey!136 (t!4995 lt!31754) (_1!1066 lt!31223)))))

(assert (= (and d!16389 (not res!38350)) b!72146))

(assert (= (and b!72146 res!38351) b!72147))

(declare-fun m!69911 () Bool)

(assert (=> b!72147 m!69911))

(assert (=> b!71491 d!16389))

(declare-fun b!72149 () Bool)

(declare-fun e!47191 () Option!139)

(declare-fun e!47192 () Option!139)

(assert (=> b!72149 (= e!47191 e!47192)))

(declare-fun c!10630 () Bool)

(assert (=> b!72149 (= c!10630 (and ((_ is Cons!1463) (toList!713 lt!31657)) (not (= (_1!1066 (h!2049 (toList!713 lt!31657))) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))))

(declare-fun b!72151 () Bool)

(assert (=> b!72151 (= e!47192 None!137)))

(declare-fun b!72150 () Bool)

(assert (=> b!72150 (= e!47192 (getValueByKey!133 (t!4995 (toList!713 lt!31657)) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun c!10629 () Bool)

(declare-fun d!16391 () Bool)

(assert (=> d!16391 (= c!10629 (and ((_ is Cons!1463) (toList!713 lt!31657)) (= (_1!1066 (h!2049 (toList!713 lt!31657))) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(assert (=> d!16391 (= (getValueByKey!133 (toList!713 lt!31657) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) e!47191)))

(declare-fun b!72148 () Bool)

(assert (=> b!72148 (= e!47191 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31657)))))))

(assert (= (and d!16391 c!10629) b!72148))

(assert (= (and d!16391 (not c!10629)) b!72149))

(assert (= (and b!72149 c!10630) b!72150))

(assert (= (and b!72149 (not c!10630)) b!72151))

(declare-fun m!69913 () Bool)

(assert (=> b!72150 m!69913))

(assert (=> b!71299 d!16391))

(declare-fun b!72153 () Bool)

(declare-fun res!38352 () Bool)

(declare-fun e!47193 () Bool)

(assert (=> b!72153 (=> (not res!38352) (not e!47193))))

(assert (=> b!72153 (= res!38352 (bvsge (size!2087 (_2!1065 lt!31440)) (_size!393 (_2!1065 lt!31440))))))

(declare-fun b!72155 () Bool)

(assert (=> b!72155 (= e!47193 (and (bvsge (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000000) (bvsle (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000011) (bvsge (_vacant!393 (_2!1065 lt!31440)) #b00000000000000000000000000000000)))))

(declare-fun b!72154 () Bool)

(declare-fun res!38354 () Bool)

(assert (=> b!72154 (=> (not res!38354) (not e!47193))))

(assert (=> b!72154 (= res!38354 (= (size!2087 (_2!1065 lt!31440)) (bvadd (_size!393 (_2!1065 lt!31440)) (bvsdiv (bvadd (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!16393 () Bool)

(declare-fun res!38355 () Bool)

(assert (=> d!16393 (=> (not res!38355) (not e!47193))))

(assert (=> d!16393 (= res!38355 (validMask!0 (mask!6148 (_2!1065 lt!31440))))))

(assert (=> d!16393 (= (simpleValid!50 (_2!1065 lt!31440)) e!47193)))

(declare-fun b!72152 () Bool)

(declare-fun res!38353 () Bool)

(assert (=> b!72152 (=> (not res!38353) (not e!47193))))

(assert (=> b!72152 (= res!38353 (and (= (size!2082 (_values!2174 (_2!1065 lt!31440))) (bvadd (mask!6148 (_2!1065 lt!31440)) #b00000000000000000000000000000001)) (= (size!2081 (_keys!3839 (_2!1065 lt!31440))) (size!2082 (_values!2174 (_2!1065 lt!31440)))) (bvsge (_size!393 (_2!1065 lt!31440)) #b00000000000000000000000000000000) (bvsle (_size!393 (_2!1065 lt!31440)) (bvadd (mask!6148 (_2!1065 lt!31440)) #b00000000000000000000000000000001))))))

(assert (= (and d!16393 res!38355) b!72152))

(assert (= (and b!72152 res!38353) b!72153))

(assert (= (and b!72153 res!38352) b!72154))

(assert (= (and b!72154 res!38354) b!72155))

(declare-fun m!69915 () Bool)

(assert (=> b!72153 m!69915))

(assert (=> b!72154 m!69915))

(declare-fun m!69917 () Bool)

(assert (=> d!16393 m!69917))

(assert (=> d!15897 d!16393))

(declare-fun d!16395 () Bool)

(assert (=> d!16395 (= (get!1146 (getValueByKey!133 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2522 (getValueByKey!133 (toList!713 lt!31365) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16007 d!16395))

(assert (=> d!16007 d!16295))

(declare-fun bm!6262 () Bool)

(declare-fun call!6265 () Bool)

(declare-fun c!10631 () Bool)

(assert (=> bm!6262 (= call!6265 (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10631 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!10365 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465))) (ite c!10365 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)))))))

(declare-fun e!47194 () Bool)

(declare-fun b!72156 () Bool)

(assert (=> b!72156 (= e!47194 (contains!718 (ite c!10365 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!72157 () Bool)

(declare-fun e!47197 () Bool)

(declare-fun e!47195 () Bool)

(assert (=> b!72157 (= e!47197 e!47195)))

(assert (=> b!72157 (= c!10631 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!72158 () Bool)

(declare-fun e!47196 () Bool)

(assert (=> b!72158 (= e!47196 e!47197)))

(declare-fun res!38357 () Bool)

(assert (=> b!72158 (=> (not res!38357) (not e!47197))))

(assert (=> b!72158 (= res!38357 (not e!47194))))

(declare-fun res!38358 () Bool)

(assert (=> b!72158 (=> (not res!38358) (not e!47194))))

(assert (=> b!72158 (= res!38358 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!16397 () Bool)

(declare-fun res!38356 () Bool)

(assert (=> d!16397 (=> res!38356 e!47196)))

(assert (=> d!16397 (= res!38356 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!16397 (= (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10365 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465))) e!47196)))

(declare-fun b!72159 () Bool)

(assert (=> b!72159 (= e!47195 call!6265)))

(declare-fun b!72160 () Bool)

(assert (=> b!72160 (= e!47195 call!6265)))

(assert (= (and d!16397 (not res!38356)) b!72158))

(assert (= (and b!72158 res!38358) b!72156))

(assert (= (and b!72158 res!38357) b!72157))

(assert (= (and b!72157 c!10631) b!72160))

(assert (= (and b!72157 (not c!10631)) b!72159))

(assert (= (or b!72160 b!72159) bm!6262))

(declare-fun m!69919 () Bool)

(assert (=> bm!6262 m!69919))

(declare-fun m!69921 () Bool)

(assert (=> bm!6262 m!69921))

(assert (=> b!72156 m!69919))

(assert (=> b!72156 m!69919))

(declare-fun m!69923 () Bool)

(assert (=> b!72156 m!69923))

(assert (=> b!72157 m!69919))

(assert (=> b!72157 m!69919))

(declare-fun m!69925 () Bool)

(assert (=> b!72157 m!69925))

(assert (=> b!72158 m!69919))

(assert (=> b!72158 m!69919))

(assert (=> b!72158 m!69925))

(assert (=> bm!6156 d!16397))

(assert (=> b!71252 d!16093))

(assert (=> b!71365 d!16093))

(declare-fun b!72162 () Bool)

(declare-fun e!47198 () Option!139)

(declare-fun e!47199 () Option!139)

(assert (=> b!72162 (= e!47198 e!47199)))

(declare-fun c!10633 () Bool)

(assert (=> b!72162 (= c!10633 (and ((_ is Cons!1463) (toList!713 lt!31539)) (not (= (_1!1066 (h!2049 (toList!713 lt!31539))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun b!72164 () Bool)

(assert (=> b!72164 (= e!47199 None!137)))

(declare-fun b!72163 () Bool)

(assert (=> b!72163 (= e!47199 (getValueByKey!133 (t!4995 (toList!713 lt!31539)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun d!16399 () Bool)

(declare-fun c!10632 () Bool)

(assert (=> d!16399 (= c!10632 (and ((_ is Cons!1463) (toList!713 lt!31539)) (= (_1!1066 (h!2049 (toList!713 lt!31539))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!16399 (= (getValueByKey!133 (toList!713 lt!31539) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) e!47198)))

(declare-fun b!72161 () Bool)

(assert (=> b!72161 (= e!47198 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31539)))))))

(assert (= (and d!16399 c!10632) b!72161))

(assert (= (and d!16399 (not c!10632)) b!72162))

(assert (= (and b!72162 c!10633) b!72163))

(assert (= (and b!72162 (not c!10633)) b!72164))

(declare-fun m!69927 () Bool)

(assert (=> b!72163 m!69927))

(assert (=> b!71138 d!16399))

(declare-fun d!16401 () Bool)

(declare-fun e!47201 () Bool)

(assert (=> d!16401 e!47201))

(declare-fun res!38359 () Bool)

(assert (=> d!16401 (=> res!38359 e!47201)))

(declare-fun lt!32111 () Bool)

(assert (=> d!16401 (= res!38359 (not lt!32111))))

(declare-fun lt!32110 () Bool)

(assert (=> d!16401 (= lt!32111 lt!32110)))

(declare-fun lt!32109 () Unit!1996)

(declare-fun e!47200 () Unit!1996)

(assert (=> d!16401 (= lt!32109 e!47200)))

(declare-fun c!10634 () Bool)

(assert (=> d!16401 (= c!10634 lt!32110)))

(assert (=> d!16401 (= lt!32110 (containsKey!136 (toList!713 (+!91 lt!31678 (tuple2!2111 lt!31675 lt!31677))) lt!31680))))

(assert (=> d!16401 (= (contains!715 (+!91 lt!31678 (tuple2!2111 lt!31675 lt!31677)) lt!31680) lt!32111)))

(declare-fun b!72165 () Bool)

(declare-fun lt!32108 () Unit!1996)

(assert (=> b!72165 (= e!47200 lt!32108)))

(assert (=> b!72165 (= lt!32108 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (+!91 lt!31678 (tuple2!2111 lt!31675 lt!31677))) lt!31680))))

(assert (=> b!72165 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31678 (tuple2!2111 lt!31675 lt!31677))) lt!31680))))

(declare-fun b!72166 () Bool)

(declare-fun Unit!2048 () Unit!1996)

(assert (=> b!72166 (= e!47200 Unit!2048)))

(declare-fun b!72167 () Bool)

(assert (=> b!72167 (= e!47201 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31678 (tuple2!2111 lt!31675 lt!31677))) lt!31680)))))

(assert (= (and d!16401 c!10634) b!72165))

(assert (= (and d!16401 (not c!10634)) b!72166))

(assert (= (and d!16401 (not res!38359)) b!72167))

(declare-fun m!69929 () Bool)

(assert (=> d!16401 m!69929))

(declare-fun m!69931 () Bool)

(assert (=> b!72165 m!69931))

(declare-fun m!69933 () Bool)

(assert (=> b!72165 m!69933))

(assert (=> b!72165 m!69933))

(declare-fun m!69935 () Bool)

(assert (=> b!72165 m!69935))

(assert (=> b!72167 m!69933))

(assert (=> b!72167 m!69933))

(assert (=> b!72167 m!69935))

(assert (=> b!71339 d!16401))

(assert (=> b!71339 d!16245))

(declare-fun d!16403 () Bool)

(declare-fun e!47202 () Bool)

(assert (=> d!16403 e!47202))

(declare-fun res!38360 () Bool)

(assert (=> d!16403 (=> (not res!38360) (not e!47202))))

(declare-fun lt!32115 () ListLongMap!1395)

(assert (=> d!16403 (= res!38360 (contains!715 lt!32115 (_1!1066 (tuple2!2111 lt!31675 lt!31677))))))

(declare-fun lt!32113 () List!1467)

(assert (=> d!16403 (= lt!32115 (ListLongMap!1396 lt!32113))))

(declare-fun lt!32114 () Unit!1996)

(declare-fun lt!32112 () Unit!1996)

(assert (=> d!16403 (= lt!32114 lt!32112)))

(assert (=> d!16403 (= (getValueByKey!133 lt!32113 (_1!1066 (tuple2!2111 lt!31675 lt!31677))) (Some!138 (_2!1066 (tuple2!2111 lt!31675 lt!31677))))))

(assert (=> d!16403 (= lt!32112 (lemmaContainsTupThenGetReturnValue!50 lt!32113 (_1!1066 (tuple2!2111 lt!31675 lt!31677)) (_2!1066 (tuple2!2111 lt!31675 lt!31677))))))

(assert (=> d!16403 (= lt!32113 (insertStrictlySorted!53 (toList!713 lt!31678) (_1!1066 (tuple2!2111 lt!31675 lt!31677)) (_2!1066 (tuple2!2111 lt!31675 lt!31677))))))

(assert (=> d!16403 (= (+!91 lt!31678 (tuple2!2111 lt!31675 lt!31677)) lt!32115)))

(declare-fun b!72168 () Bool)

(declare-fun res!38361 () Bool)

(assert (=> b!72168 (=> (not res!38361) (not e!47202))))

(assert (=> b!72168 (= res!38361 (= (getValueByKey!133 (toList!713 lt!32115) (_1!1066 (tuple2!2111 lt!31675 lt!31677))) (Some!138 (_2!1066 (tuple2!2111 lt!31675 lt!31677)))))))

(declare-fun b!72169 () Bool)

(assert (=> b!72169 (= e!47202 (contains!719 (toList!713 lt!32115) (tuple2!2111 lt!31675 lt!31677)))))

(assert (= (and d!16403 res!38360) b!72168))

(assert (= (and b!72168 res!38361) b!72169))

(declare-fun m!69937 () Bool)

(assert (=> d!16403 m!69937))

(declare-fun m!69939 () Bool)

(assert (=> d!16403 m!69939))

(declare-fun m!69941 () Bool)

(assert (=> d!16403 m!69941))

(declare-fun m!69943 () Bool)

(assert (=> d!16403 m!69943))

(declare-fun m!69945 () Bool)

(assert (=> b!72168 m!69945))

(declare-fun m!69947 () Bool)

(assert (=> b!72169 m!69947))

(assert (=> b!71339 d!16403))

(declare-fun d!16405 () Bool)

(declare-fun e!47203 () Bool)

(assert (=> d!16405 e!47203))

(declare-fun res!38362 () Bool)

(assert (=> d!16405 (=> (not res!38362) (not e!47203))))

(declare-fun lt!32119 () ListLongMap!1395)

(assert (=> d!16405 (= res!38362 (contains!715 lt!32119 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!32117 () List!1467)

(assert (=> d!16405 (= lt!32119 (ListLongMap!1396 lt!32117))))

(declare-fun lt!32118 () Unit!1996)

(declare-fun lt!32116 () Unit!1996)

(assert (=> d!16405 (= lt!32118 lt!32116)))

(assert (=> d!16405 (= (getValueByKey!133 lt!32117 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16405 (= lt!32116 (lemmaContainsTupThenGetReturnValue!50 lt!32117 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16405 (= lt!32117 (insertStrictlySorted!53 (toList!713 call!6160) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16405 (= (+!91 call!6160 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!32119)))

(declare-fun b!72170 () Bool)

(declare-fun res!38363 () Bool)

(assert (=> b!72170 (=> (not res!38363) (not e!47203))))

(assert (=> b!72170 (= res!38363 (= (getValueByKey!133 (toList!713 lt!32119) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!72171 () Bool)

(assert (=> b!72171 (= e!47203 (contains!719 (toList!713 lt!32119) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16405 res!38362) b!72170))

(assert (= (and b!72170 res!38363) b!72171))

(declare-fun m!69949 () Bool)

(assert (=> d!16405 m!69949))

(declare-fun m!69951 () Bool)

(assert (=> d!16405 m!69951))

(declare-fun m!69953 () Bool)

(assert (=> d!16405 m!69953))

(declare-fun m!69955 () Bool)

(assert (=> d!16405 m!69955))

(declare-fun m!69957 () Bool)

(assert (=> b!72170 m!69957))

(declare-fun m!69959 () Bool)

(assert (=> b!72171 m!69959))

(assert (=> b!71339 d!16405))

(declare-fun d!16407 () Bool)

(assert (=> d!16407 (not (contains!715 (+!91 lt!31678 (tuple2!2111 lt!31675 lt!31677)) lt!31680))))

(declare-fun lt!32120 () Unit!1996)

(assert (=> d!16407 (= lt!32120 (choose!404 lt!31678 lt!31675 lt!31677 lt!31680))))

(declare-fun e!47204 () Bool)

(assert (=> d!16407 e!47204))

(declare-fun res!38364 () Bool)

(assert (=> d!16407 (=> (not res!38364) (not e!47204))))

(assert (=> d!16407 (= res!38364 (not (contains!715 lt!31678 lt!31680)))))

(assert (=> d!16407 (= (addStillNotContains!25 lt!31678 lt!31675 lt!31677 lt!31680) lt!32120)))

(declare-fun b!72172 () Bool)

(assert (=> b!72172 (= e!47204 (not (= lt!31675 lt!31680)))))

(assert (= (and d!16407 res!38364) b!72172))

(assert (=> d!16407 m!68707))

(assert (=> d!16407 m!68707))

(assert (=> d!16407 m!68709))

(declare-fun m!69961 () Bool)

(assert (=> d!16407 m!69961))

(declare-fun m!69963 () Bool)

(assert (=> d!16407 m!69963))

(assert (=> b!71339 d!16407))

(declare-fun d!16409 () Bool)

(declare-fun c!10635 () Bool)

(assert (=> d!16409 (= c!10635 ((_ is Nil!1464) (toList!713 lt!31480)))))

(declare-fun e!47205 () (InoxSet tuple2!2110))

(assert (=> d!16409 (= (content!76 (toList!713 lt!31480)) e!47205)))

(declare-fun b!72173 () Bool)

(assert (=> b!72173 (= e!47205 ((as const (Array tuple2!2110 Bool)) false))))

(declare-fun b!72174 () Bool)

(assert (=> b!72174 (= e!47205 ((_ map or) (store ((as const (Array tuple2!2110 Bool)) false) (h!2049 (toList!713 lt!31480)) true) (content!76 (t!4995 (toList!713 lt!31480)))))))

(assert (= (and d!16409 c!10635) b!72173))

(assert (= (and d!16409 (not c!10635)) b!72174))

(declare-fun m!69965 () Bool)

(assert (=> b!72174 m!69965))

(assert (=> b!72174 m!69817))

(assert (=> d!15987 d!16409))

(declare-fun d!16411 () Bool)

(assert (=> d!16411 (= (get!1145 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71129 d!16411))

(declare-fun d!16413 () Bool)

(assert (=> d!16413 (contains!715 (getCurrentListMap!411 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!31452)))))

(assert (=> d!16413 true))

(declare-fun _$16!93 () Unit!1996)

(assert (=> d!16413 (= (choose!411 (_keys!3839 newMap!16) lt!31437 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3047 lt!31452) (defaultEntry!2191 newMap!16)) _$16!93)))

(declare-fun bs!3107 () Bool)

(assert (= bs!3107 d!16413))

(assert (=> bs!3107 m!68727))

(assert (=> bs!3107 m!68097))

(assert (=> bs!3107 m!68727))

(assert (=> bs!3107 m!68097))

(assert (=> bs!3107 m!68729))

(assert (=> d!16013 d!16413))

(assert (=> d!16013 d!16115))

(assert (=> d!16025 d!16023))

(declare-fun d!16415 () Bool)

(assert (=> d!16415 (= (getValueByKey!133 lt!31478 (_1!1066 lt!31223)) (Some!138 (_2!1066 lt!31223)))))

(assert (=> d!16415 true))

(declare-fun _$22!379 () Unit!1996)

(assert (=> d!16415 (= (choose!406 lt!31478 (_1!1066 lt!31223) (_2!1066 lt!31223)) _$22!379)))

(declare-fun bs!3108 () Bool)

(assert (= bs!3108 d!16415))

(assert (=> bs!3108 m!68135))

(assert (=> d!16025 d!16415))

(declare-fun d!16417 () Bool)

(declare-fun res!38365 () Bool)

(declare-fun e!47206 () Bool)

(assert (=> d!16417 (=> res!38365 e!47206)))

(assert (=> d!16417 (= res!38365 (or ((_ is Nil!1464) lt!31478) ((_ is Nil!1464) (t!4995 lt!31478))))))

(assert (=> d!16417 (= (isStrictlySorted!278 lt!31478) e!47206)))

(declare-fun b!72175 () Bool)

(declare-fun e!47207 () Bool)

(assert (=> b!72175 (= e!47206 e!47207)))

(declare-fun res!38366 () Bool)

(assert (=> b!72175 (=> (not res!38366) (not e!47207))))

(assert (=> b!72175 (= res!38366 (bvslt (_1!1066 (h!2049 lt!31478)) (_1!1066 (h!2049 (t!4995 lt!31478)))))))

(declare-fun b!72176 () Bool)

(assert (=> b!72176 (= e!47207 (isStrictlySorted!278 (t!4995 lt!31478)))))

(assert (= (and d!16417 (not res!38365)) b!72175))

(assert (= (and b!72175 res!38366) b!72176))

(declare-fun m!69967 () Bool)

(assert (=> b!72176 m!69967))

(assert (=> d!16025 d!16417))

(declare-fun d!16419 () Bool)

(declare-fun res!38367 () Bool)

(declare-fun e!47208 () Bool)

(assert (=> d!16419 (=> res!38367 e!47208)))

(assert (=> d!16419 (= res!38367 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))))) lt!31500)))))

(assert (=> d!16419 (= (containsKey!136 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500) e!47208)))

(declare-fun b!72177 () Bool)

(declare-fun e!47209 () Bool)

(assert (=> b!72177 (= e!47208 e!47209)))

(declare-fun res!38368 () Bool)

(assert (=> b!72177 (=> (not res!38368) (not e!47209))))

(assert (=> b!72177 (= res!38368 (and (or (not ((_ is Cons!1463) (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))))) (bvsle (_1!1066 (h!2049 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))))) lt!31500)) ((_ is Cons!1463) (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)))) (bvslt (_1!1066 (h!2049 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))))) lt!31500)))))

(declare-fun b!72178 () Bool)

(assert (=> b!72178 (= e!47209 (containsKey!136 (t!4995 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)))) lt!31500))))

(assert (= (and d!16419 (not res!38367)) b!72177))

(assert (= (and b!72177 res!38368) b!72178))

(declare-fun m!69969 () Bool)

(assert (=> b!72178 m!69969))

(assert (=> d!15875 d!16419))

(assert (=> b!71538 d!16041))

(declare-fun b!72180 () Bool)

(declare-fun e!47210 () Option!139)

(declare-fun e!47211 () Option!139)

(assert (=> b!72180 (= e!47210 e!47211)))

(declare-fun c!10637 () Bool)

(assert (=> b!72180 (= c!10637 (and ((_ is Cons!1463) (toList!713 lt!31547)) (not (= (_1!1066 (h!2049 (toList!713 lt!31547))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun b!72182 () Bool)

(assert (=> b!72182 (= e!47211 None!137)))

(declare-fun b!72181 () Bool)

(assert (=> b!72181 (= e!47211 (getValueByKey!133 (t!4995 (toList!713 lt!31547)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun d!16421 () Bool)

(declare-fun c!10636 () Bool)

(assert (=> d!16421 (= c!10636 (and ((_ is Cons!1463) (toList!713 lt!31547)) (= (_1!1066 (h!2049 (toList!713 lt!31547))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!16421 (= (getValueByKey!133 (toList!713 lt!31547) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) e!47210)))

(declare-fun b!72179 () Bool)

(assert (=> b!72179 (= e!47210 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31547)))))))

(assert (= (and d!16421 c!10636) b!72179))

(assert (= (and d!16421 (not c!10636)) b!72180))

(assert (= (and b!72180 c!10637) b!72181))

(assert (= (and b!72180 (not c!10637)) b!72182))

(declare-fun m!69971 () Bool)

(assert (=> b!72181 m!69971))

(assert (=> b!71142 d!16421))

(declare-fun bm!6263 () Bool)

(declare-fun call!6266 () (_ BitVec 32))

(assert (=> bm!6263 (= call!6266 (arrayCountValidKeys!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!72183 () Bool)

(declare-fun e!47213 () (_ BitVec 32))

(assert (=> b!72183 (= e!47213 #b00000000000000000000000000000000)))

(declare-fun b!72184 () Bool)

(declare-fun e!47212 () (_ BitVec 32))

(assert (=> b!72184 (= e!47212 call!6266)))

(declare-fun b!72185 () Bool)

(assert (=> b!72185 (= e!47212 (bvadd #b00000000000000000000000000000001 call!6266))))

(declare-fun d!16423 () Bool)

(declare-fun lt!32121 () (_ BitVec 32))

(assert (=> d!16423 (and (bvsge lt!32121 #b00000000000000000000000000000000) (bvsle lt!32121 (bvsub (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!16423 (= lt!32121 e!47213)))

(declare-fun c!10638 () Bool)

(assert (=> d!16423 (= c!10638 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!16423 (and (bvsle #b00000000000000000000000000000000 (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!16423 (= (arrayCountValidKeys!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000 (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))) lt!32121)))

(declare-fun b!72186 () Bool)

(assert (=> b!72186 (= e!47213 e!47212)))

(declare-fun c!10639 () Bool)

(assert (=> b!72186 (= c!10639 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!16423 c!10638) b!72183))

(assert (= (and d!16423 (not c!10638)) b!72186))

(assert (= (and b!72186 c!10639) b!72185))

(assert (= (and b!72186 (not c!10639)) b!72184))

(assert (= (or b!72185 b!72184) bm!6263))

(declare-fun m!69973 () Bool)

(assert (=> bm!6263 m!69973))

(declare-fun m!69975 () Bool)

(assert (=> b!72186 m!69975))

(assert (=> b!72186 m!69975))

(declare-fun m!69977 () Bool)

(assert (=> b!72186 m!69977))

(assert (=> b!71257 d!16423))

(declare-fun d!16425 () Bool)

(assert (=> d!16425 (= (apply!74 (+!91 lt!31357 (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31355) (apply!74 lt!31357 lt!31355))))

(assert (=> d!16425 true))

(declare-fun _$34!800 () Unit!1996)

(assert (=> d!16425 (= (choose!409 lt!31357 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31355) _$34!800)))

(declare-fun bs!3109 () Bool)

(assert (= bs!3109 d!16425))

(assert (=> bs!3109 m!68011))

(assert (=> bs!3109 m!68011))

(assert (=> bs!3109 m!68013))

(assert (=> bs!3109 m!68009))

(assert (=> d!15973 d!16425))

(declare-fun d!16427 () Bool)

(declare-fun e!47215 () Bool)

(assert (=> d!16427 e!47215))

(declare-fun res!38369 () Bool)

(assert (=> d!16427 (=> res!38369 e!47215)))

(declare-fun lt!32125 () Bool)

(assert (=> d!16427 (= res!38369 (not lt!32125))))

(declare-fun lt!32124 () Bool)

(assert (=> d!16427 (= lt!32125 lt!32124)))

(declare-fun lt!32123 () Unit!1996)

(declare-fun e!47214 () Unit!1996)

(assert (=> d!16427 (= lt!32123 e!47214)))

(declare-fun c!10640 () Bool)

(assert (=> d!16427 (= c!10640 lt!32124)))

(assert (=> d!16427 (= lt!32124 (containsKey!136 (toList!713 lt!31357) lt!31355))))

(assert (=> d!16427 (= (contains!715 lt!31357 lt!31355) lt!32125)))

(declare-fun b!72187 () Bool)

(declare-fun lt!32122 () Unit!1996)

(assert (=> b!72187 (= e!47214 lt!32122)))

(assert (=> b!72187 (= lt!32122 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31357) lt!31355))))

(assert (=> b!72187 (isDefined!85 (getValueByKey!133 (toList!713 lt!31357) lt!31355))))

(declare-fun b!72188 () Bool)

(declare-fun Unit!2049 () Unit!1996)

(assert (=> b!72188 (= e!47214 Unit!2049)))

(declare-fun b!72189 () Bool)

(assert (=> b!72189 (= e!47215 (isDefined!85 (getValueByKey!133 (toList!713 lt!31357) lt!31355)))))

(assert (= (and d!16427 c!10640) b!72187))

(assert (= (and d!16427 (not c!10640)) b!72188))

(assert (= (and d!16427 (not res!38369)) b!72189))

(declare-fun m!69979 () Bool)

(assert (=> d!16427 m!69979))

(declare-fun m!69981 () Bool)

(assert (=> b!72187 m!69981))

(assert (=> b!72187 m!68553))

(assert (=> b!72187 m!68553))

(declare-fun m!69983 () Bool)

(assert (=> b!72187 m!69983))

(assert (=> b!72189 m!68553))

(assert (=> b!72189 m!68553))

(assert (=> b!72189 m!69983))

(assert (=> d!15973 d!16427))

(assert (=> d!15973 d!15961))

(assert (=> d!15973 d!15979))

(assert (=> d!15973 d!15981))

(declare-fun d!16429 () Bool)

(declare-fun e!47217 () Bool)

(assert (=> d!16429 e!47217))

(declare-fun res!38370 () Bool)

(assert (=> d!16429 (=> res!38370 e!47217)))

(declare-fun lt!32129 () Bool)

(assert (=> d!16429 (= res!38370 (not lt!32129))))

(declare-fun lt!32128 () Bool)

(assert (=> d!16429 (= lt!32129 lt!32128)))

(declare-fun lt!32127 () Unit!1996)

(declare-fun e!47216 () Unit!1996)

(assert (=> d!16429 (= lt!32127 e!47216)))

(declare-fun c!10641 () Bool)

(assert (=> d!16429 (= c!10641 lt!32128)))

(assert (=> d!16429 (= lt!32128 (containsKey!136 (toList!713 lt!31539) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!16429 (= (contains!715 lt!31539 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!32129)))

(declare-fun b!72190 () Bool)

(declare-fun lt!32126 () Unit!1996)

(assert (=> b!72190 (= e!47216 lt!32126)))

(assert (=> b!72190 (= lt!32126 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31539) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> b!72190 (isDefined!85 (getValueByKey!133 (toList!713 lt!31539) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72191 () Bool)

(declare-fun Unit!2050 () Unit!1996)

(assert (=> b!72191 (= e!47216 Unit!2050)))

(declare-fun b!72192 () Bool)

(assert (=> b!72192 (= e!47217 (isDefined!85 (getValueByKey!133 (toList!713 lt!31539) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (= (and d!16429 c!10641) b!72190))

(assert (= (and d!16429 (not c!10641)) b!72191))

(assert (= (and d!16429 (not res!38370)) b!72192))

(declare-fun m!69985 () Bool)

(assert (=> d!16429 m!69985))

(declare-fun m!69987 () Bool)

(assert (=> b!72190 m!69987))

(assert (=> b!72190 m!68271))

(assert (=> b!72190 m!68271))

(declare-fun m!69989 () Bool)

(assert (=> b!72190 m!69989))

(assert (=> b!72192 m!68271))

(assert (=> b!72192 m!68271))

(assert (=> b!72192 m!69989))

(assert (=> d!15885 d!16429))

(declare-fun b!72194 () Bool)

(declare-fun e!47218 () Option!139)

(declare-fun e!47219 () Option!139)

(assert (=> b!72194 (= e!47218 e!47219)))

(declare-fun c!10643 () Bool)

(assert (=> b!72194 (= c!10643 (and ((_ is Cons!1463) lt!31537) (not (= (_1!1066 (h!2049 lt!31537)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun b!72196 () Bool)

(assert (=> b!72196 (= e!47219 None!137)))

(declare-fun b!72195 () Bool)

(assert (=> b!72195 (= e!47219 (getValueByKey!133 (t!4995 lt!31537) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun d!16431 () Bool)

(declare-fun c!10642 () Bool)

(assert (=> d!16431 (= c!10642 (and ((_ is Cons!1463) lt!31537) (= (_1!1066 (h!2049 lt!31537)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!16431 (= (getValueByKey!133 lt!31537 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) e!47218)))

(declare-fun b!72193 () Bool)

(assert (=> b!72193 (= e!47218 (Some!138 (_2!1066 (h!2049 lt!31537))))))

(assert (= (and d!16431 c!10642) b!72193))

(assert (= (and d!16431 (not c!10642)) b!72194))

(assert (= (and b!72194 c!10643) b!72195))

(assert (= (and b!72194 (not c!10643)) b!72196))

(declare-fun m!69991 () Bool)

(assert (=> b!72195 m!69991))

(assert (=> d!15885 d!16431))

(declare-fun d!16433 () Bool)

(assert (=> d!16433 (= (getValueByKey!133 lt!31537 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun lt!32130 () Unit!1996)

(assert (=> d!16433 (= lt!32130 (choose!406 lt!31537 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun e!47220 () Bool)

(assert (=> d!16433 e!47220))

(declare-fun res!38371 () Bool)

(assert (=> d!16433 (=> (not res!38371) (not e!47220))))

(assert (=> d!16433 (= res!38371 (isStrictlySorted!278 lt!31537))))

(assert (=> d!16433 (= (lemmaContainsTupThenGetReturnValue!50 lt!31537 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!32130)))

(declare-fun b!72197 () Bool)

(declare-fun res!38372 () Bool)

(assert (=> b!72197 (=> (not res!38372) (not e!47220))))

(assert (=> b!72197 (= res!38372 (containsKey!136 lt!31537 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72198 () Bool)

(assert (=> b!72198 (= e!47220 (contains!719 lt!31537 (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (= (and d!16433 res!38371) b!72197))

(assert (= (and b!72197 res!38372) b!72198))

(assert (=> d!16433 m!68265))

(declare-fun m!69993 () Bool)

(assert (=> d!16433 m!69993))

(declare-fun m!69995 () Bool)

(assert (=> d!16433 m!69995))

(declare-fun m!69997 () Bool)

(assert (=> b!72197 m!69997))

(declare-fun m!69999 () Bool)

(assert (=> b!72198 m!69999))

(assert (=> d!15885 d!16433))

(declare-fun b!72199 () Bool)

(declare-fun e!47225 () List!1467)

(declare-fun call!6269 () List!1467)

(assert (=> b!72199 (= e!47225 call!6269)))

(declare-fun e!47224 () List!1467)

(declare-fun bm!6264 () Bool)

(declare-fun c!10647 () Bool)

(assert (=> bm!6264 (= call!6269 ($colon$colon!64 e!47224 (ite c!10647 (h!2049 (toList!713 lt!31219)) (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun c!10646 () Bool)

(assert (=> bm!6264 (= c!10646 c!10647)))

(declare-fun d!16435 () Bool)

(declare-fun e!47223 () Bool)

(assert (=> d!16435 e!47223))

(declare-fun res!38374 () Bool)

(assert (=> d!16435 (=> (not res!38374) (not e!47223))))

(declare-fun lt!32131 () List!1467)

(assert (=> d!16435 (= res!38374 (isStrictlySorted!278 lt!32131))))

(assert (=> d!16435 (= lt!32131 e!47225)))

(assert (=> d!16435 (= c!10647 (and ((_ is Cons!1463) (toList!713 lt!31219)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!16435 (isStrictlySorted!278 (toList!713 lt!31219))))

(assert (=> d!16435 (= (insertStrictlySorted!53 (toList!713 lt!31219) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!32131)))

(declare-fun b!72200 () Bool)

(declare-fun e!47221 () List!1467)

(declare-fun call!6267 () List!1467)

(assert (=> b!72200 (= e!47221 call!6267)))

(declare-fun b!72201 () Bool)

(declare-fun c!10644 () Bool)

(assert (=> b!72201 (= c!10644 (and ((_ is Cons!1463) (toList!713 lt!31219)) (bvsgt (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun e!47222 () List!1467)

(assert (=> b!72201 (= e!47221 e!47222)))

(declare-fun b!72202 () Bool)

(declare-fun call!6268 () List!1467)

(assert (=> b!72202 (= e!47222 call!6268)))

(declare-fun b!72203 () Bool)

(assert (=> b!72203 (= e!47222 call!6268)))

(declare-fun b!72204 () Bool)

(declare-fun res!38373 () Bool)

(assert (=> b!72204 (=> (not res!38373) (not e!47223))))

(assert (=> b!72204 (= res!38373 (containsKey!136 lt!32131 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun c!10645 () Bool)

(declare-fun b!72205 () Bool)

(assert (=> b!72205 (= e!47224 (ite c!10645 (t!4995 (toList!713 lt!31219)) (ite c!10644 (Cons!1463 (h!2049 (toList!713 lt!31219)) (t!4995 (toList!713 lt!31219))) Nil!1464)))))

(declare-fun bm!6265 () Bool)

(assert (=> bm!6265 (= call!6267 call!6269)))

(declare-fun b!72206 () Bool)

(assert (=> b!72206 (= e!47225 e!47221)))

(assert (=> b!72206 (= c!10645 (and ((_ is Cons!1463) (toList!713 lt!31219)) (= (_1!1066 (h!2049 (toList!713 lt!31219))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun bm!6266 () Bool)

(assert (=> bm!6266 (= call!6268 call!6267)))

(declare-fun b!72207 () Bool)

(assert (=> b!72207 (= e!47224 (insertStrictlySorted!53 (t!4995 (toList!713 lt!31219)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72208 () Bool)

(assert (=> b!72208 (= e!47223 (contains!719 lt!32131 (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (= (and d!16435 c!10647) b!72199))

(assert (= (and d!16435 (not c!10647)) b!72206))

(assert (= (and b!72206 c!10645) b!72200))

(assert (= (and b!72206 (not c!10645)) b!72201))

(assert (= (and b!72201 c!10644) b!72202))

(assert (= (and b!72201 (not c!10644)) b!72203))

(assert (= (or b!72202 b!72203) bm!6266))

(assert (= (or b!72200 bm!6266) bm!6265))

(assert (= (or b!72199 bm!6265) bm!6264))

(assert (= (and bm!6264 c!10646) b!72207))

(assert (= (and bm!6264 (not c!10646)) b!72205))

(assert (= (and d!16435 res!38374) b!72204))

(assert (= (and b!72204 res!38373) b!72208))

(declare-fun m!70001 () Bool)

(assert (=> b!72204 m!70001))

(declare-fun m!70003 () Bool)

(assert (=> b!72208 m!70003))

(declare-fun m!70005 () Bool)

(assert (=> bm!6264 m!70005))

(declare-fun m!70007 () Bool)

(assert (=> d!16435 m!70007))

(assert (=> d!16435 m!68821))

(declare-fun m!70009 () Bool)

(assert (=> b!72207 m!70009))

(assert (=> d!15885 d!16435))

(assert (=> d!16019 d!16115))

(assert (=> bm!6176 d!15983))

(declare-fun d!16437 () Bool)

(assert (=> d!16437 (= (get!1146 (getValueByKey!133 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2522 (getValueByKey!133 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15935 d!16437))

(assert (=> d!15935 d!16105))

(declare-fun d!16439 () Bool)

(declare-fun e!47227 () Bool)

(assert (=> d!16439 e!47227))

(declare-fun res!38375 () Bool)

(assert (=> d!16439 (=> res!38375 e!47227)))

(declare-fun lt!32135 () Bool)

(assert (=> d!16439 (= res!38375 (not lt!32135))))

(declare-fun lt!32134 () Bool)

(assert (=> d!16439 (= lt!32135 lt!32134)))

(declare-fun lt!32133 () Unit!1996)

(declare-fun e!47226 () Unit!1996)

(assert (=> d!16439 (= lt!32133 e!47226)))

(declare-fun c!10648 () Bool)

(assert (=> d!16439 (= c!10648 lt!32134)))

(assert (=> d!16439 (= lt!32134 (containsKey!136 (toList!713 lt!31716) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16439 (= (contains!715 lt!31716 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) lt!32135)))

(declare-fun b!72209 () Bool)

(declare-fun lt!32132 () Unit!1996)

(assert (=> b!72209 (= e!47226 lt!32132)))

(assert (=> b!72209 (= lt!32132 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31716) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72209 (isDefined!85 (getValueByKey!133 (toList!713 lt!31716) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72210 () Bool)

(declare-fun Unit!2051 () Unit!1996)

(assert (=> b!72210 (= e!47226 Unit!2051)))

(declare-fun b!72211 () Bool)

(assert (=> b!72211 (= e!47227 (isDefined!85 (getValueByKey!133 (toList!713 lt!31716) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16439 c!10648) b!72209))

(assert (= (and d!16439 (not c!10648)) b!72210))

(assert (= (and d!16439 (not res!38375)) b!72211))

(assert (=> d!16439 m!68397))

(declare-fun m!70011 () Bool)

(assert (=> d!16439 m!70011))

(assert (=> b!72209 m!68397))

(declare-fun m!70013 () Bool)

(assert (=> b!72209 m!70013))

(assert (=> b!72209 m!68397))

(declare-fun m!70015 () Bool)

(assert (=> b!72209 m!70015))

(assert (=> b!72209 m!70015))

(declare-fun m!70017 () Bool)

(assert (=> b!72209 m!70017))

(assert (=> b!72211 m!68397))

(assert (=> b!72211 m!70015))

(assert (=> b!72211 m!70015))

(assert (=> b!72211 m!70017))

(assert (=> b!71379 d!16439))

(declare-fun d!16441 () Bool)

(assert (=> d!16441 (= (isEmpty!320 (getValueByKey!133 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))) (not ((_ is Some!138) (getValueByKey!133 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))))

(assert (=> d!15929 d!16441))

(declare-fun d!16443 () Bool)

(declare-fun e!47229 () Bool)

(assert (=> d!16443 e!47229))

(declare-fun res!38376 () Bool)

(assert (=> d!16443 (=> res!38376 e!47229)))

(declare-fun lt!32139 () Bool)

(assert (=> d!16443 (= res!38376 (not lt!32139))))

(declare-fun lt!32138 () Bool)

(assert (=> d!16443 (= lt!32139 lt!32138)))

(declare-fun lt!32137 () Unit!1996)

(declare-fun e!47228 () Unit!1996)

(assert (=> d!16443 (= lt!32137 e!47228)))

(declare-fun c!10649 () Bool)

(assert (=> d!16443 (= c!10649 lt!32138)))

(assert (=> d!16443 (= lt!32138 (containsKey!136 (toList!713 lt!31657) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!16443 (= (contains!715 lt!31657 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) lt!32139)))

(declare-fun b!72212 () Bool)

(declare-fun lt!32136 () Unit!1996)

(assert (=> b!72212 (= e!47228 lt!32136)))

(assert (=> b!72212 (= lt!32136 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31657) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> b!72212 (isDefined!85 (getValueByKey!133 (toList!713 lt!31657) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun b!72213 () Bool)

(declare-fun Unit!2052 () Unit!1996)

(assert (=> b!72213 (= e!47228 Unit!2052)))

(declare-fun b!72214 () Bool)

(assert (=> b!72214 (= e!47229 (isDefined!85 (getValueByKey!133 (toList!713 lt!31657) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(assert (= (and d!16443 c!10649) b!72212))

(assert (= (and d!16443 (not c!10649)) b!72213))

(assert (= (and d!16443 (not res!38376)) b!72214))

(declare-fun m!70019 () Bool)

(assert (=> d!16443 m!70019))

(declare-fun m!70021 () Bool)

(assert (=> b!72212 m!70021))

(assert (=> b!72212 m!68639))

(assert (=> b!72212 m!68639))

(declare-fun m!70023 () Bool)

(assert (=> b!72212 m!70023))

(assert (=> b!72214 m!68639))

(assert (=> b!72214 m!68639))

(assert (=> b!72214 m!70023))

(assert (=> d!15991 d!16443))

(declare-fun b!72216 () Bool)

(declare-fun e!47230 () Option!139)

(declare-fun e!47231 () Option!139)

(assert (=> b!72216 (= e!47230 e!47231)))

(declare-fun c!10651 () Bool)

(assert (=> b!72216 (= c!10651 (and ((_ is Cons!1463) lt!31655) (not (= (_1!1066 (h!2049 lt!31655)) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))))

(declare-fun b!72218 () Bool)

(assert (=> b!72218 (= e!47231 None!137)))

(declare-fun b!72217 () Bool)

(assert (=> b!72217 (= e!47231 (getValueByKey!133 (t!4995 lt!31655) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun d!16445 () Bool)

(declare-fun c!10650 () Bool)

(assert (=> d!16445 (= c!10650 (and ((_ is Cons!1463) lt!31655) (= (_1!1066 (h!2049 lt!31655)) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(assert (=> d!16445 (= (getValueByKey!133 lt!31655 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) e!47230)))

(declare-fun b!72215 () Bool)

(assert (=> b!72215 (= e!47230 (Some!138 (_2!1066 (h!2049 lt!31655))))))

(assert (= (and d!16445 c!10650) b!72215))

(assert (= (and d!16445 (not c!10650)) b!72216))

(assert (= (and b!72216 c!10651) b!72217))

(assert (= (and b!72216 (not c!10651)) b!72218))

(declare-fun m!70025 () Bool)

(assert (=> b!72217 m!70025))

(assert (=> d!15991 d!16445))

(declare-fun d!16447 () Bool)

(assert (=> d!16447 (= (getValueByKey!133 lt!31655 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) (Some!138 (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun lt!32140 () Unit!1996)

(assert (=> d!16447 (= lt!32140 (choose!406 lt!31655 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun e!47232 () Bool)

(assert (=> d!16447 e!47232))

(declare-fun res!38377 () Bool)

(assert (=> d!16447 (=> (not res!38377) (not e!47232))))

(assert (=> d!16447 (= res!38377 (isStrictlySorted!278 lt!31655))))

(assert (=> d!16447 (= (lemmaContainsTupThenGetReturnValue!50 lt!31655 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) lt!32140)))

(declare-fun b!72219 () Bool)

(declare-fun res!38378 () Bool)

(assert (=> b!72219 (=> (not res!38378) (not e!47232))))

(assert (=> b!72219 (= res!38378 (containsKey!136 lt!31655 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun b!72220 () Bool)

(assert (=> b!72220 (= e!47232 (contains!719 lt!31655 (tuple2!2111 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(assert (= (and d!16447 res!38377) b!72219))

(assert (= (and b!72219 res!38378) b!72220))

(assert (=> d!16447 m!68633))

(declare-fun m!70027 () Bool)

(assert (=> d!16447 m!70027))

(declare-fun m!70029 () Bool)

(assert (=> d!16447 m!70029))

(declare-fun m!70031 () Bool)

(assert (=> b!72219 m!70031))

(declare-fun m!70033 () Bool)

(assert (=> b!72220 m!70033))

(assert (=> d!15991 d!16447))

(declare-fun b!72221 () Bool)

(declare-fun e!47237 () List!1467)

(declare-fun call!6272 () List!1467)

(assert (=> b!72221 (= e!47237 call!6272)))

(declare-fun e!47236 () List!1467)

(declare-fun bm!6267 () Bool)

(declare-fun c!10655 () Bool)

(assert (=> bm!6267 (= call!6272 ($colon$colon!64 e!47236 (ite c!10655 (h!2049 (toList!713 e!46505)) (tuple2!2111 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))))

(declare-fun c!10654 () Bool)

(assert (=> bm!6267 (= c!10654 c!10655)))

(declare-fun d!16449 () Bool)

(declare-fun e!47235 () Bool)

(assert (=> d!16449 e!47235))

(declare-fun res!38380 () Bool)

(assert (=> d!16449 (=> (not res!38380) (not e!47235))))

(declare-fun lt!32141 () List!1467)

(assert (=> d!16449 (= res!38380 (isStrictlySorted!278 lt!32141))))

(assert (=> d!16449 (= lt!32141 e!47237)))

(assert (=> d!16449 (= c!10655 (and ((_ is Cons!1463) (toList!713 e!46505)) (bvslt (_1!1066 (h!2049 (toList!713 e!46505))) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(assert (=> d!16449 (isStrictlySorted!278 (toList!713 e!46505))))

(assert (=> d!16449 (= (insertStrictlySorted!53 (toList!713 e!46505) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))) lt!32141)))

(declare-fun b!72222 () Bool)

(declare-fun e!47233 () List!1467)

(declare-fun call!6270 () List!1467)

(assert (=> b!72222 (= e!47233 call!6270)))

(declare-fun c!10652 () Bool)

(declare-fun b!72223 () Bool)

(assert (=> b!72223 (= c!10652 (and ((_ is Cons!1463) (toList!713 e!46505)) (bvsgt (_1!1066 (h!2049 (toList!713 e!46505))) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun e!47234 () List!1467)

(assert (=> b!72223 (= e!47233 e!47234)))

(declare-fun b!72224 () Bool)

(declare-fun call!6271 () List!1467)

(assert (=> b!72224 (= e!47234 call!6271)))

(declare-fun b!72225 () Bool)

(assert (=> b!72225 (= e!47234 call!6271)))

(declare-fun b!72226 () Bool)

(declare-fun res!38379 () Bool)

(assert (=> b!72226 (=> (not res!38379) (not e!47235))))

(assert (=> b!72226 (= res!38379 (containsKey!136 lt!32141 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun b!72227 () Bool)

(declare-fun c!10653 () Bool)

(assert (=> b!72227 (= e!47236 (ite c!10653 (t!4995 (toList!713 e!46505)) (ite c!10652 (Cons!1463 (h!2049 (toList!713 e!46505)) (t!4995 (toList!713 e!46505))) Nil!1464)))))

(declare-fun bm!6268 () Bool)

(assert (=> bm!6268 (= call!6270 call!6272)))

(declare-fun b!72228 () Bool)

(assert (=> b!72228 (= e!47237 e!47233)))

(assert (=> b!72228 (= c!10653 (and ((_ is Cons!1463) (toList!713 e!46505)) (= (_1!1066 (h!2049 (toList!713 e!46505))) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun bm!6269 () Bool)

(assert (=> bm!6269 (= call!6271 call!6270)))

(declare-fun b!72229 () Bool)

(assert (=> b!72229 (= e!47236 (insertStrictlySorted!53 (t!4995 (toList!713 e!46505)) (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun b!72230 () Bool)

(assert (=> b!72230 (= e!47235 (contains!719 lt!32141 (tuple2!2111 (_1!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (_2!1066 (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(assert (= (and d!16449 c!10655) b!72221))

(assert (= (and d!16449 (not c!10655)) b!72228))

(assert (= (and b!72228 c!10653) b!72222))

(assert (= (and b!72228 (not c!10653)) b!72223))

(assert (= (and b!72223 c!10652) b!72224))

(assert (= (and b!72223 (not c!10652)) b!72225))

(assert (= (or b!72224 b!72225) bm!6269))

(assert (= (or b!72222 bm!6269) bm!6268))

(assert (= (or b!72221 bm!6268) bm!6267))

(assert (= (and bm!6267 c!10654) b!72229))

(assert (= (and bm!6267 (not c!10654)) b!72227))

(assert (= (and d!16449 res!38380) b!72226))

(assert (= (and b!72226 res!38379) b!72230))

(declare-fun m!70035 () Bool)

(assert (=> b!72226 m!70035))

(declare-fun m!70037 () Bool)

(assert (=> b!72230 m!70037))

(declare-fun m!70039 () Bool)

(assert (=> bm!6267 m!70039))

(declare-fun m!70041 () Bool)

(assert (=> d!16449 m!70041))

(declare-fun m!70043 () Bool)

(assert (=> d!16449 m!70043))

(declare-fun m!70045 () Bool)

(assert (=> b!72229 m!70045))

(assert (=> d!15991 d!16449))

(declare-fun d!16451 () Bool)

(declare-fun res!38381 () Bool)

(declare-fun e!47238 () Bool)

(assert (=> d!16451 (=> res!38381 e!47238)))

(assert (=> d!16451 (= res!38381 (and ((_ is Cons!1463) lt!31853) (= (_1!1066 (h!2049 lt!31853)) (_1!1066 lt!31228))))))

(assert (=> d!16451 (= (containsKey!136 lt!31853 (_1!1066 lt!31228)) e!47238)))

(declare-fun b!72231 () Bool)

(declare-fun e!47239 () Bool)

(assert (=> b!72231 (= e!47238 e!47239)))

(declare-fun res!38382 () Bool)

(assert (=> b!72231 (=> (not res!38382) (not e!47239))))

(assert (=> b!72231 (= res!38382 (and (or (not ((_ is Cons!1463) lt!31853)) (bvsle (_1!1066 (h!2049 lt!31853)) (_1!1066 lt!31228))) ((_ is Cons!1463) lt!31853) (bvslt (_1!1066 (h!2049 lt!31853)) (_1!1066 lt!31228))))))

(declare-fun b!72232 () Bool)

(assert (=> b!72232 (= e!47239 (containsKey!136 (t!4995 lt!31853) (_1!1066 lt!31228)))))

(assert (= (and d!16451 (not res!38381)) b!72231))

(assert (= (and b!72231 res!38382) b!72232))

(declare-fun m!70047 () Bool)

(assert (=> b!72232 m!70047))

(assert (=> b!71567 d!16451))

(assert (=> b!71479 d!16325))

(assert (=> b!71479 d!16033))

(declare-fun lt!32142 () Bool)

(declare-fun d!16453 () Bool)

(assert (=> d!16453 (= lt!32142 (select (content!76 (toList!713 lt!31648)) (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun e!47241 () Bool)

(assert (=> d!16453 (= lt!32142 e!47241)))

(declare-fun res!38384 () Bool)

(assert (=> d!16453 (=> (not res!38384) (not e!47241))))

(assert (=> d!16453 (= res!38384 ((_ is Cons!1463) (toList!713 lt!31648)))))

(assert (=> d!16453 (= (contains!719 (toList!713 lt!31648) (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!32142)))

(declare-fun b!72233 () Bool)

(declare-fun e!47240 () Bool)

(assert (=> b!72233 (= e!47241 e!47240)))

(declare-fun res!38383 () Bool)

(assert (=> b!72233 (=> res!38383 e!47240)))

(assert (=> b!72233 (= res!38383 (= (h!2049 (toList!713 lt!31648)) (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!72234 () Bool)

(assert (=> b!72234 (= e!47240 (contains!719 (t!4995 (toList!713 lt!31648)) (tuple2!2111 lt!31350 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!16453 res!38384) b!72233))

(assert (= (and b!72233 (not res!38383)) b!72234))

(declare-fun m!70049 () Bool)

(assert (=> d!16453 m!70049))

(declare-fun m!70051 () Bool)

(assert (=> d!16453 m!70051))

(declare-fun m!70053 () Bool)

(assert (=> b!72234 m!70053))

(assert (=> b!71291 d!16453))

(declare-fun d!16455 () Bool)

(declare-fun e!47243 () Bool)

(assert (=> d!16455 e!47243))

(declare-fun res!38385 () Bool)

(assert (=> d!16455 (=> res!38385 e!47243)))

(declare-fun lt!32146 () Bool)

(assert (=> d!16455 (= res!38385 (not lt!32146))))

(declare-fun lt!32145 () Bool)

(assert (=> d!16455 (= lt!32146 lt!32145)))

(declare-fun lt!32144 () Unit!1996)

(declare-fun e!47242 () Unit!1996)

(assert (=> d!16455 (= lt!32144 e!47242)))

(declare-fun c!10656 () Bool)

(assert (=> d!16455 (= c!10656 lt!32145)))

(assert (=> d!16455 (= lt!32145 (containsKey!136 (toList!713 lt!31547) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!16455 (= (contains!715 lt!31547 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!32146)))

(declare-fun b!72235 () Bool)

(declare-fun lt!32143 () Unit!1996)

(assert (=> b!72235 (= e!47242 lt!32143)))

(assert (=> b!72235 (= lt!32143 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31547) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> b!72235 (isDefined!85 (getValueByKey!133 (toList!713 lt!31547) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72236 () Bool)

(declare-fun Unit!2053 () Unit!1996)

(assert (=> b!72236 (= e!47242 Unit!2053)))

(declare-fun b!72237 () Bool)

(assert (=> b!72237 (= e!47243 (isDefined!85 (getValueByKey!133 (toList!713 lt!31547) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (= (and d!16455 c!10656) b!72235))

(assert (= (and d!16455 (not c!10656)) b!72236))

(assert (= (and d!16455 (not res!38385)) b!72237))

(declare-fun m!70055 () Bool)

(assert (=> d!16455 m!70055))

(declare-fun m!70057 () Bool)

(assert (=> b!72235 m!70057))

(assert (=> b!72235 m!68295))

(assert (=> b!72235 m!68295))

(declare-fun m!70059 () Bool)

(assert (=> b!72235 m!70059))

(assert (=> b!72237 m!68295))

(assert (=> b!72237 m!68295))

(assert (=> b!72237 m!70059))

(assert (=> d!15891 d!16455))

(declare-fun b!72239 () Bool)

(declare-fun e!47244 () Option!139)

(declare-fun e!47245 () Option!139)

(assert (=> b!72239 (= e!47244 e!47245)))

(declare-fun c!10658 () Bool)

(assert (=> b!72239 (= c!10658 (and ((_ is Cons!1463) lt!31545) (not (= (_1!1066 (h!2049 lt!31545)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun b!72241 () Bool)

(assert (=> b!72241 (= e!47245 None!137)))

(declare-fun b!72240 () Bool)

(assert (=> b!72240 (= e!47245 (getValueByKey!133 (t!4995 lt!31545) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun d!16457 () Bool)

(declare-fun c!10657 () Bool)

(assert (=> d!16457 (= c!10657 (and ((_ is Cons!1463) lt!31545) (= (_1!1066 (h!2049 lt!31545)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!16457 (= (getValueByKey!133 lt!31545 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) e!47244)))

(declare-fun b!72238 () Bool)

(assert (=> b!72238 (= e!47244 (Some!138 (_2!1066 (h!2049 lt!31545))))))

(assert (= (and d!16457 c!10657) b!72238))

(assert (= (and d!16457 (not c!10657)) b!72239))

(assert (= (and b!72239 c!10658) b!72240))

(assert (= (and b!72239 (not c!10658)) b!72241))

(declare-fun m!70061 () Bool)

(assert (=> b!72240 m!70061))

(assert (=> d!15891 d!16457))

(declare-fun d!16459 () Bool)

(assert (=> d!16459 (= (getValueByKey!133 lt!31545 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun lt!32147 () Unit!1996)

(assert (=> d!16459 (= lt!32147 (choose!406 lt!31545 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun e!47246 () Bool)

(assert (=> d!16459 e!47246))

(declare-fun res!38386 () Bool)

(assert (=> d!16459 (=> (not res!38386) (not e!47246))))

(assert (=> d!16459 (= res!38386 (isStrictlySorted!278 lt!31545))))

(assert (=> d!16459 (= (lemmaContainsTupThenGetReturnValue!50 lt!31545 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!32147)))

(declare-fun b!72242 () Bool)

(declare-fun res!38387 () Bool)

(assert (=> b!72242 (=> (not res!38387) (not e!47246))))

(assert (=> b!72242 (= res!38387 (containsKey!136 lt!31545 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72243 () Bool)

(assert (=> b!72243 (= e!47246 (contains!719 lt!31545 (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (= (and d!16459 res!38386) b!72242))

(assert (= (and b!72242 res!38387) b!72243))

(assert (=> d!16459 m!68289))

(declare-fun m!70063 () Bool)

(assert (=> d!16459 m!70063))

(declare-fun m!70065 () Bool)

(assert (=> d!16459 m!70065))

(declare-fun m!70067 () Bool)

(assert (=> b!72242 m!70067))

(declare-fun m!70069 () Bool)

(assert (=> b!72243 m!70069))

(assert (=> d!15891 d!16459))

(declare-fun b!72244 () Bool)

(declare-fun e!47251 () List!1467)

(declare-fun call!6275 () List!1467)

(assert (=> b!72244 (= e!47251 call!6275)))

(declare-fun e!47250 () List!1467)

(declare-fun c!10662 () Bool)

(declare-fun bm!6270 () Bool)

(assert (=> bm!6270 (= call!6275 ($colon$colon!64 e!47250 (ite c!10662 (h!2049 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun c!10661 () Bool)

(assert (=> bm!6270 (= c!10661 c!10662)))

(declare-fun d!16461 () Bool)

(declare-fun e!47249 () Bool)

(assert (=> d!16461 e!47249))

(declare-fun res!38389 () Bool)

(assert (=> d!16461 (=> (not res!38389) (not e!47249))))

(declare-fun lt!32148 () List!1467)

(assert (=> d!16461 (= res!38389 (isStrictlySorted!278 lt!32148))))

(assert (=> d!16461 (= lt!32148 e!47251)))

(assert (=> d!16461 (= c!10662 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (bvslt (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!16461 (isStrictlySorted!278 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!16461 (= (insertStrictlySorted!53 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!32148)))

(declare-fun b!72245 () Bool)

(declare-fun e!47247 () List!1467)

(declare-fun call!6273 () List!1467)

(assert (=> b!72245 (= e!47247 call!6273)))

(declare-fun c!10659 () Bool)

(declare-fun b!72246 () Bool)

(assert (=> b!72246 (= c!10659 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (bvsgt (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun e!47248 () List!1467)

(assert (=> b!72246 (= e!47247 e!47248)))

(declare-fun b!72247 () Bool)

(declare-fun call!6274 () List!1467)

(assert (=> b!72247 (= e!47248 call!6274)))

(declare-fun b!72248 () Bool)

(assert (=> b!72248 (= e!47248 call!6274)))

(declare-fun b!72249 () Bool)

(declare-fun res!38388 () Bool)

(assert (=> b!72249 (=> (not res!38388) (not e!47249))))

(assert (=> b!72249 (= res!38388 (containsKey!136 lt!32148 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72250 () Bool)

(declare-fun c!10660 () Bool)

(assert (=> b!72250 (= e!47250 (ite c!10660 (t!4995 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (ite c!10659 (Cons!1463 (h!2049 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (t!4995 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) Nil!1464)))))

(declare-fun bm!6271 () Bool)

(assert (=> bm!6271 (= call!6273 call!6275)))

(declare-fun b!72251 () Bool)

(assert (=> b!72251 (= e!47251 e!47247)))

(assert (=> b!72251 (= c!10660 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun bm!6272 () Bool)

(assert (=> bm!6272 (= call!6274 call!6273)))

(declare-fun b!72252 () Bool)

(assert (=> b!72252 (= e!47250 (insertStrictlySorted!53 (t!4995 (toList!713 (+!91 lt!31219 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72253 () Bool)

(assert (=> b!72253 (= e!47249 (contains!719 lt!32148 (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (= (and d!16461 c!10662) b!72244))

(assert (= (and d!16461 (not c!10662)) b!72251))

(assert (= (and b!72251 c!10660) b!72245))

(assert (= (and b!72251 (not c!10660)) b!72246))

(assert (= (and b!72246 c!10659) b!72247))

(assert (= (and b!72246 (not c!10659)) b!72248))

(assert (= (or b!72247 b!72248) bm!6272))

(assert (= (or b!72245 bm!6272) bm!6271))

(assert (= (or b!72244 bm!6271) bm!6270))

(assert (= (and bm!6270 c!10661) b!72252))

(assert (= (and bm!6270 (not c!10661)) b!72250))

(assert (= (and d!16461 res!38389) b!72249))

(assert (= (and b!72249 res!38388) b!72253))

(declare-fun m!70071 () Bool)

(assert (=> b!72249 m!70071))

(declare-fun m!70073 () Bool)

(assert (=> b!72253 m!70073))

(declare-fun m!70075 () Bool)

(assert (=> bm!6270 m!70075))

(declare-fun m!70077 () Bool)

(assert (=> d!16461 m!70077))

(declare-fun m!70079 () Bool)

(assert (=> d!16461 m!70079))

(declare-fun m!70081 () Bool)

(assert (=> b!72252 m!70081))

(assert (=> d!15891 d!16461))

(assert (=> b!71296 d!16287))

(assert (=> b!71296 d!16289))

(declare-fun d!16463 () Bool)

(declare-fun res!38390 () Bool)

(declare-fun e!47252 () Bool)

(assert (=> d!16463 (=> res!38390 e!47252)))

(assert (=> d!16463 (= res!38390 (or ((_ is Nil!1464) lt!31568) ((_ is Nil!1464) (t!4995 lt!31568))))))

(assert (=> d!16463 (= (isStrictlySorted!278 lt!31568) e!47252)))

(declare-fun b!72254 () Bool)

(declare-fun e!47253 () Bool)

(assert (=> b!72254 (= e!47252 e!47253)))

(declare-fun res!38391 () Bool)

(assert (=> b!72254 (=> (not res!38391) (not e!47253))))

(assert (=> b!72254 (= res!38391 (bvslt (_1!1066 (h!2049 lt!31568)) (_1!1066 (h!2049 (t!4995 lt!31568)))))))

(declare-fun b!72255 () Bool)

(assert (=> b!72255 (= e!47253 (isStrictlySorted!278 (t!4995 lt!31568)))))

(assert (= (and d!16463 (not res!38390)) b!72254))

(assert (= (and b!72254 res!38391) b!72255))

(declare-fun m!70083 () Bool)

(assert (=> b!72255 m!70083))

(assert (=> d!15915 d!16463))

(declare-fun d!16465 () Bool)

(declare-fun res!38392 () Bool)

(declare-fun e!47254 () Bool)

(assert (=> d!16465 (=> res!38392 e!47254)))

(assert (=> d!16465 (= res!38392 (or ((_ is Nil!1464) (toList!713 (+!91 lt!31219 lt!31223))) ((_ is Nil!1464) (t!4995 (toList!713 (+!91 lt!31219 lt!31223))))))))

(assert (=> d!16465 (= (isStrictlySorted!278 (toList!713 (+!91 lt!31219 lt!31223))) e!47254)))

(declare-fun b!72256 () Bool)

(declare-fun e!47255 () Bool)

(assert (=> b!72256 (= e!47254 e!47255)))

(declare-fun res!38393 () Bool)

(assert (=> b!72256 (=> (not res!38393) (not e!47255))))

(assert (=> b!72256 (= res!38393 (bvslt (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 lt!31223)))) (_1!1066 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31223)))))))))

(declare-fun b!72257 () Bool)

(assert (=> b!72257 (= e!47255 (isStrictlySorted!278 (t!4995 (toList!713 (+!91 lt!31219 lt!31223)))))))

(assert (= (and d!16465 (not res!38392)) b!72256))

(assert (= (and b!72256 res!38393) b!72257))

(assert (=> b!72257 m!69107))

(assert (=> d!15915 d!16465))

(declare-fun d!16467 () Bool)

(declare-fun res!38394 () Bool)

(declare-fun e!47256 () Bool)

(assert (=> d!16467 (=> res!38394 e!47256)))

(assert (=> d!16467 (= res!38394 (and ((_ is Cons!1463) lt!31510) (= (_1!1066 (h!2049 lt!31510)) (_1!1066 lt!31223))))))

(assert (=> d!16467 (= (containsKey!136 lt!31510 (_1!1066 lt!31223)) e!47256)))

(declare-fun b!72258 () Bool)

(declare-fun e!47257 () Bool)

(assert (=> b!72258 (= e!47256 e!47257)))

(declare-fun res!38395 () Bool)

(assert (=> b!72258 (=> (not res!38395) (not e!47257))))

(assert (=> b!72258 (= res!38395 (and (or (not ((_ is Cons!1463) lt!31510)) (bvsle (_1!1066 (h!2049 lt!31510)) (_1!1066 lt!31223))) ((_ is Cons!1463) lt!31510) (bvslt (_1!1066 (h!2049 lt!31510)) (_1!1066 lt!31223))))))

(declare-fun b!72259 () Bool)

(assert (=> b!72259 (= e!47257 (containsKey!136 (t!4995 lt!31510) (_1!1066 lt!31223)))))

(assert (= (and d!16467 (not res!38394)) b!72258))

(assert (= (and b!72258 res!38395) b!72259))

(declare-fun m!70085 () Bool)

(assert (=> b!72259 m!70085))

(assert (=> b!71484 d!16467))

(declare-fun d!16469 () Bool)

(assert (=> d!16469 (= (isEmpty!321 (toList!713 lt!31501)) ((_ is Nil!1464) (toList!713 lt!31501)))))

(assert (=> d!16011 d!16469))

(assert (=> b!71308 d!16293))

(assert (=> b!71308 d!16295))

(declare-fun d!16471 () Bool)

(declare-fun e!47258 () Bool)

(assert (=> d!16471 e!47258))

(declare-fun res!38396 () Bool)

(assert (=> d!16471 (=> (not res!38396) (not e!47258))))

(declare-fun lt!32152 () ListLongMap!1395)

(assert (=> d!16471 (= res!38396 (contains!715 lt!32152 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(declare-fun lt!32150 () List!1467)

(assert (=> d!16471 (= lt!32152 (ListLongMap!1396 lt!32150))))

(declare-fun lt!32151 () Unit!1996)

(declare-fun lt!32149 () Unit!1996)

(assert (=> d!16471 (= lt!32151 lt!32149)))

(assert (=> d!16471 (= (getValueByKey!133 lt!32150 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(assert (=> d!16471 (= lt!32149 (lemmaContainsTupThenGetReturnValue!50 lt!32150 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(assert (=> d!16471 (= lt!32150 (insertStrictlySorted!53 (toList!713 call!6148) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(assert (=> d!16471 (= (+!91 call!6148 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) lt!32152)))

(declare-fun b!72260 () Bool)

(declare-fun res!38397 () Bool)

(assert (=> b!72260 (=> (not res!38397) (not e!47258))))

(assert (=> b!72260 (= res!38397 (= (getValueByKey!133 (toList!713 lt!32152) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))))

(declare-fun b!72261 () Bool)

(assert (=> b!72261 (= e!47258 (contains!719 (toList!713 lt!32152) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))

(assert (= (and d!16471 res!38396) b!72260))

(assert (= (and b!72260 res!38397) b!72261))

(declare-fun m!70087 () Bool)

(assert (=> d!16471 m!70087))

(declare-fun m!70089 () Bool)

(assert (=> d!16471 m!70089))

(declare-fun m!70091 () Bool)

(assert (=> d!16471 m!70091))

(declare-fun m!70093 () Bool)

(assert (=> d!16471 m!70093))

(declare-fun m!70095 () Bool)

(assert (=> b!72260 m!70095))

(declare-fun m!70097 () Bool)

(assert (=> b!72261 m!70097))

(assert (=> b!71213 d!16471))

(declare-fun b!72263 () Bool)

(declare-fun e!47259 () Option!139)

(declare-fun e!47260 () Option!139)

(assert (=> b!72263 (= e!47259 e!47260)))

(declare-fun c!10664 () Bool)

(assert (=> b!72263 (= c!10664 (and ((_ is Cons!1463) (toList!713 lt!31636)) (not (= (_1!1066 (h!2049 (toList!713 lt!31636))) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!72265 () Bool)

(assert (=> b!72265 (= e!47260 None!137)))

(declare-fun b!72264 () Bool)

(assert (=> b!72264 (= e!47260 (getValueByKey!133 (t!4995 (toList!713 lt!31636)) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun d!16473 () Bool)

(declare-fun c!10663 () Bool)

(assert (=> d!16473 (= c!10663 (and ((_ is Cons!1463) (toList!713 lt!31636)) (= (_1!1066 (h!2049 (toList!713 lt!31636))) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16473 (= (getValueByKey!133 (toList!713 lt!31636) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47259)))

(declare-fun b!72262 () Bool)

(assert (=> b!72262 (= e!47259 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31636)))))))

(assert (= (and d!16473 c!10663) b!72262))

(assert (= (and d!16473 (not c!10663)) b!72263))

(assert (= (and b!72263 c!10664) b!72264))

(assert (= (and b!72263 (not c!10664)) b!72265))

(declare-fun m!70099 () Bool)

(assert (=> b!72264 m!70099))

(assert (=> b!71283 d!16473))

(declare-fun d!16475 () Bool)

(assert (=> d!16475 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500))))

(declare-fun lt!32153 () Unit!1996)

(assert (=> d!16475 (= lt!32153 (choose!407 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500))))

(declare-fun e!47261 () Bool)

(assert (=> d!16475 e!47261))

(declare-fun res!38398 () Bool)

(assert (=> d!16475 (=> (not res!38398) (not e!47261))))

(assert (=> d!16475 (= res!38398 (isStrictlySorted!278 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)))))))

(assert (=> d!16475 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500) lt!32153)))

(declare-fun b!72266 () Bool)

(assert (=> b!72266 (= e!47261 (containsKey!136 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500))))

(assert (= (and d!16475 res!38398) b!72266))

(assert (=> d!16475 m!68227))

(assert (=> d!16475 m!68227))

(assert (=> d!16475 m!68229))

(declare-fun m!70101 () Bool)

(assert (=> d!16475 m!70101))

(declare-fun m!70103 () Bool)

(assert (=> d!16475 m!70103))

(assert (=> b!72266 m!68223))

(assert (=> b!71125 d!16475))

(declare-fun d!16477 () Bool)

(assert (=> d!16477 (= (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500)) (not (isEmpty!320 (getValueByKey!133 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500))))))

(declare-fun bs!3110 () Bool)

(assert (= bs!3110 d!16477))

(assert (=> bs!3110 m!68227))

(declare-fun m!70105 () Bool)

(assert (=> bs!3110 m!70105))

(assert (=> b!71125 d!16477))

(declare-fun b!72268 () Bool)

(declare-fun e!47262 () Option!139)

(declare-fun e!47263 () Option!139)

(assert (=> b!72268 (= e!47262 e!47263)))

(declare-fun c!10666 () Bool)

(assert (=> b!72268 (= c!10666 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)))) (not (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))))) lt!31500))))))

(declare-fun b!72270 () Bool)

(assert (=> b!72270 (= e!47263 None!137)))

(declare-fun b!72269 () Bool)

(assert (=> b!72269 (= e!47263 (getValueByKey!133 (t!4995 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)))) lt!31500))))

(declare-fun d!16479 () Bool)

(declare-fun c!10665 () Bool)

(assert (=> d!16479 (= c!10665 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))))) lt!31500)))))

(assert (=> d!16479 (= (getValueByKey!133 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497))) lt!31500) e!47262)))

(declare-fun b!72267 () Bool)

(assert (=> b!72267 (= e!47262 (Some!138 (_2!1066 (h!2049 (toList!713 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)))))))))

(assert (= (and d!16479 c!10665) b!72267))

(assert (= (and d!16479 (not c!10665)) b!72268))

(assert (= (and b!72268 c!10666) b!72269))

(assert (= (and b!72268 (not c!10666)) b!72270))

(declare-fun m!70107 () Bool)

(assert (=> b!72269 m!70107))

(assert (=> b!71125 d!16479))

(declare-fun d!16481 () Bool)

(declare-fun lt!32154 () Bool)

(assert (=> d!16481 (= lt!32154 (select (content!76 (toList!713 lt!31657)) (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun e!47265 () Bool)

(assert (=> d!16481 (= lt!32154 e!47265)))

(declare-fun res!38400 () Bool)

(assert (=> d!16481 (=> (not res!38400) (not e!47265))))

(assert (=> d!16481 (= res!38400 ((_ is Cons!1463) (toList!713 lt!31657)))))

(assert (=> d!16481 (= (contains!719 (toList!713 lt!31657) (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!32154)))

(declare-fun b!72271 () Bool)

(declare-fun e!47264 () Bool)

(assert (=> b!72271 (= e!47265 e!47264)))

(declare-fun res!38399 () Bool)

(assert (=> b!72271 (=> res!38399 e!47264)))

(assert (=> b!72271 (= res!38399 (= (h!2049 (toList!713 lt!31657)) (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72272 () Bool)

(assert (=> b!72272 (= e!47264 (contains!719 (t!4995 (toList!713 lt!31657)) (ite c!10293 (ite c!10301 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (= (and d!16481 res!38400) b!72271))

(assert (= (and b!72271 (not res!38399)) b!72272))

(declare-fun m!70109 () Bool)

(assert (=> d!16481 m!70109))

(declare-fun m!70111 () Bool)

(assert (=> d!16481 m!70111))

(declare-fun m!70113 () Bool)

(assert (=> b!72272 m!70113))

(assert (=> b!71300 d!16481))

(declare-fun d!16483 () Bool)

(declare-fun res!38401 () Bool)

(declare-fun e!47266 () Bool)

(assert (=> d!16483 (=> res!38401 e!47266)))

(assert (=> d!16483 (= res!38401 (and ((_ is Cons!1463) (toList!713 call!6119)) (= (_1!1066 (h!2049 (toList!713 call!6119))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (=> d!16483 (= (containsKey!136 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) e!47266)))

(declare-fun b!72273 () Bool)

(declare-fun e!47267 () Bool)

(assert (=> b!72273 (= e!47266 e!47267)))

(declare-fun res!38402 () Bool)

(assert (=> b!72273 (=> (not res!38402) (not e!47267))))

(assert (=> b!72273 (= res!38402 (and (or (not ((_ is Cons!1463) (toList!713 call!6119))) (bvsle (_1!1066 (h!2049 (toList!713 call!6119))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))) ((_ is Cons!1463) (toList!713 call!6119)) (bvslt (_1!1066 (h!2049 (toList!713 call!6119))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(declare-fun b!72274 () Bool)

(assert (=> b!72274 (= e!47267 (containsKey!136 (t!4995 (toList!713 call!6119)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (= (and d!16483 (not res!38401)) b!72273))

(assert (= (and b!72273 res!38402) b!72274))

(assert (=> b!72274 m!67819))

(declare-fun m!70115 () Bool)

(assert (=> b!72274 m!70115))

(assert (=> d!16045 d!16483))

(declare-fun d!16485 () Bool)

(declare-fun lt!32155 () Bool)

(assert (=> d!16485 (= lt!32155 (select (content!77 (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!47269 () Bool)

(assert (=> d!16485 (= lt!32155 e!47269)))

(declare-fun res!38403 () Bool)

(assert (=> d!16485 (=> (not res!38403) (not e!47269))))

(assert (=> d!16485 (= res!38403 ((_ is Cons!1464) (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)))))

(assert (=> d!16485 (= (contains!718 (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!32155)))

(declare-fun b!72275 () Bool)

(declare-fun e!47268 () Bool)

(assert (=> b!72275 (= e!47269 e!47268)))

(declare-fun res!38404 () Bool)

(assert (=> b!72275 (=> res!38404 e!47268)))

(assert (=> b!72275 (= res!38404 (= (h!2050 (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!72276 () Bool)

(assert (=> b!72276 (= e!47268 (contains!718 (t!4996 (ite c!10309 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) Nil!1465) Nil!1465)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!16485 res!38403) b!72275))

(assert (= (and b!72275 (not res!38404)) b!72276))

(declare-fun m!70117 () Bool)

(assert (=> d!16485 m!70117))

(assert (=> d!16485 m!68643))

(declare-fun m!70119 () Bool)

(assert (=> d!16485 m!70119))

(assert (=> b!72276 m!68643))

(declare-fun m!70121 () Bool)

(assert (=> b!72276 m!70121))

(assert (=> b!71301 d!16485))

(declare-fun lt!32156 () Bool)

(declare-fun d!16487 () Bool)

(assert (=> d!16487 (= lt!32156 (select (content!76 (toList!713 lt!31539)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(declare-fun e!47271 () Bool)

(assert (=> d!16487 (= lt!32156 e!47271)))

(declare-fun res!38406 () Bool)

(assert (=> d!16487 (=> (not res!38406) (not e!47271))))

(assert (=> d!16487 (= res!38406 ((_ is Cons!1463) (toList!713 lt!31539)))))

(assert (=> d!16487 (= (contains!719 (toList!713 lt!31539) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) lt!32156)))

(declare-fun b!72277 () Bool)

(declare-fun e!47270 () Bool)

(assert (=> b!72277 (= e!47271 e!47270)))

(declare-fun res!38405 () Bool)

(assert (=> b!72277 (=> res!38405 e!47270)))

(assert (=> b!72277 (= res!38405 (= (h!2049 (toList!713 lt!31539)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(declare-fun b!72278 () Bool)

(assert (=> b!72278 (= e!47270 (contains!719 (t!4995 (toList!713 lt!31539)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(assert (= (and d!16487 res!38406) b!72277))

(assert (= (and b!72277 (not res!38405)) b!72278))

(declare-fun m!70123 () Bool)

(assert (=> d!16487 m!70123))

(declare-fun m!70125 () Bool)

(assert (=> d!16487 m!70125))

(declare-fun m!70127 () Bool)

(assert (=> b!72278 m!70127))

(assert (=> b!71139 d!16487))

(declare-fun d!16489 () Bool)

(declare-fun res!38407 () Bool)

(declare-fun e!47272 () Bool)

(assert (=> d!16489 (=> res!38407 e!47272)))

(assert (=> d!16489 (= res!38407 (and ((_ is Cons!1463) lt!31514) (= (_1!1066 (h!2049 lt!31514)) (_1!1066 lt!31228))))))

(assert (=> d!16489 (= (containsKey!136 lt!31514 (_1!1066 lt!31228)) e!47272)))

(declare-fun b!72279 () Bool)

(declare-fun e!47273 () Bool)

(assert (=> b!72279 (= e!47272 e!47273)))

(declare-fun res!38408 () Bool)

(assert (=> b!72279 (=> (not res!38408) (not e!47273))))

(assert (=> b!72279 (= res!38408 (and (or (not ((_ is Cons!1463) lt!31514)) (bvsle (_1!1066 (h!2049 lt!31514)) (_1!1066 lt!31228))) ((_ is Cons!1463) lt!31514) (bvslt (_1!1066 (h!2049 lt!31514)) (_1!1066 lt!31228))))))

(declare-fun b!72280 () Bool)

(assert (=> b!72280 (= e!47273 (containsKey!136 (t!4995 lt!31514) (_1!1066 lt!31228)))))

(assert (= (and d!16489 (not res!38407)) b!72279))

(assert (= (and b!72279 res!38408) b!72280))

(declare-fun m!70129 () Bool)

(assert (=> b!72280 m!70129))

(assert (=> b!71560 d!16489))

(declare-fun bm!6273 () Bool)

(declare-fun call!6276 () Bool)

(assert (=> bm!6273 (= call!6276 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3839 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!72281 () Bool)

(declare-fun e!47274 () Bool)

(declare-fun e!47276 () Bool)

(assert (=> b!72281 (= e!47274 e!47276)))

(declare-fun lt!32159 () (_ BitVec 64))

(assert (=> b!72281 (= lt!32159 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!32158 () Unit!1996)

(assert (=> b!72281 (= lt!32158 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) lt!32159 #b00000000000000000000000000000000))))

(assert (=> b!72281 (arrayContainsKey!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) lt!32159 #b00000000000000000000000000000000)))

(declare-fun lt!32157 () Unit!1996)

(assert (=> b!72281 (= lt!32157 lt!32158)))

(declare-fun res!38410 () Bool)

(assert (=> b!72281 (= res!38410 (= (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000) (_keys!3839 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992)))) (Found!229 #b00000000000000000000000000000000)))))

(assert (=> b!72281 (=> (not res!38410) (not e!47276))))

(declare-fun d!16491 () Bool)

(declare-fun res!38409 () Bool)

(declare-fun e!47275 () Bool)

(assert (=> d!16491 (=> res!38409 e!47275)))

(assert (=> d!16491 (= res!38409 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!16491 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (mask!6148 (v!2516 (underlying!259 thiss!992)))) e!47275)))

(declare-fun b!72282 () Bool)

(assert (=> b!72282 (= e!47275 e!47274)))

(declare-fun c!10667 () Bool)

(assert (=> b!72282 (= c!10667 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!72283 () Bool)

(assert (=> b!72283 (= e!47274 call!6276)))

(declare-fun b!72284 () Bool)

(assert (=> b!72284 (= e!47276 call!6276)))

(assert (= (and d!16491 (not res!38409)) b!72282))

(assert (= (and b!72282 c!10667) b!72281))

(assert (= (and b!72282 (not c!10667)) b!72283))

(assert (= (and b!72281 res!38410) b!72284))

(assert (= (or b!72284 b!72283) bm!6273))

(declare-fun m!70131 () Bool)

(assert (=> bm!6273 m!70131))

(assert (=> b!72281 m!69975))

(declare-fun m!70133 () Bool)

(assert (=> b!72281 m!70133))

(declare-fun m!70135 () Bool)

(assert (=> b!72281 m!70135))

(assert (=> b!72281 m!69975))

(declare-fun m!70137 () Bool)

(assert (=> b!72281 m!70137))

(assert (=> b!72282 m!69975))

(assert (=> b!72282 m!69975))

(assert (=> b!72282 m!69977))

(assert (=> b!71258 d!16491))

(assert (=> d!15913 d!15911))

(declare-fun d!16493 () Bool)

(assert (=> d!16493 (= (getValueByKey!133 lt!31503 (_1!1066 lt!31228)) (Some!138 (_2!1066 lt!31228)))))

(assert (=> d!16493 true))

(declare-fun _$22!380 () Unit!1996)

(assert (=> d!16493 (= (choose!406 lt!31503 (_1!1066 lt!31228) (_2!1066 lt!31228)) _$22!380)))

(declare-fun bs!3111 () Bool)

(assert (= bs!3111 d!16493))

(assert (=> bs!3111 m!68167))

(assert (=> d!15913 d!16493))

(declare-fun d!16495 () Bool)

(declare-fun res!38411 () Bool)

(declare-fun e!47277 () Bool)

(assert (=> d!16495 (=> res!38411 e!47277)))

(assert (=> d!16495 (= res!38411 (or ((_ is Nil!1464) lt!31503) ((_ is Nil!1464) (t!4995 lt!31503))))))

(assert (=> d!16495 (= (isStrictlySorted!278 lt!31503) e!47277)))

(declare-fun b!72285 () Bool)

(declare-fun e!47278 () Bool)

(assert (=> b!72285 (= e!47277 e!47278)))

(declare-fun res!38412 () Bool)

(assert (=> b!72285 (=> (not res!38412) (not e!47278))))

(assert (=> b!72285 (= res!38412 (bvslt (_1!1066 (h!2049 lt!31503)) (_1!1066 (h!2049 (t!4995 lt!31503)))))))

(declare-fun b!72286 () Bool)

(assert (=> b!72286 (= e!47278 (isStrictlySorted!278 (t!4995 lt!31503)))))

(assert (= (and d!16495 (not res!38411)) b!72285))

(assert (= (and b!72285 res!38412) b!72286))

(declare-fun m!70139 () Bool)

(assert (=> b!72286 m!70139))

(assert (=> d!15913 d!16495))

(declare-fun b!72287 () Bool)

(declare-fun e!47283 () List!1467)

(declare-fun call!6279 () List!1467)

(assert (=> b!72287 (= e!47283 call!6279)))

(declare-fun e!47282 () List!1467)

(declare-fun c!10671 () Bool)

(declare-fun bm!6274 () Bool)

(assert (=> bm!6274 (= call!6279 ($colon$colon!64 e!47282 (ite c!10671 (h!2049 (t!4995 (toList!713 lt!31219))) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223)))))))

(declare-fun c!10670 () Bool)

(assert (=> bm!6274 (= c!10670 c!10671)))

(declare-fun d!16497 () Bool)

(declare-fun e!47281 () Bool)

(assert (=> d!16497 e!47281))

(declare-fun res!38414 () Bool)

(assert (=> d!16497 (=> (not res!38414) (not e!47281))))

(declare-fun lt!32160 () List!1467)

(assert (=> d!16497 (= res!38414 (isStrictlySorted!278 lt!32160))))

(assert (=> d!16497 (= lt!32160 e!47283)))

(assert (=> d!16497 (= c!10671 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31219))) (bvslt (_1!1066 (h!2049 (t!4995 (toList!713 lt!31219)))) (_1!1066 lt!31223))))))

(assert (=> d!16497 (isStrictlySorted!278 (t!4995 (toList!713 lt!31219)))))

(assert (=> d!16497 (= (insertStrictlySorted!53 (t!4995 (toList!713 lt!31219)) (_1!1066 lt!31223) (_2!1066 lt!31223)) lt!32160)))

(declare-fun b!72288 () Bool)

(declare-fun e!47279 () List!1467)

(declare-fun call!6277 () List!1467)

(assert (=> b!72288 (= e!47279 call!6277)))

(declare-fun b!72289 () Bool)

(declare-fun c!10668 () Bool)

(assert (=> b!72289 (= c!10668 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31219))) (bvsgt (_1!1066 (h!2049 (t!4995 (toList!713 lt!31219)))) (_1!1066 lt!31223))))))

(declare-fun e!47280 () List!1467)

(assert (=> b!72289 (= e!47279 e!47280)))

(declare-fun b!72290 () Bool)

(declare-fun call!6278 () List!1467)

(assert (=> b!72290 (= e!47280 call!6278)))

(declare-fun b!72291 () Bool)

(assert (=> b!72291 (= e!47280 call!6278)))

(declare-fun b!72292 () Bool)

(declare-fun res!38413 () Bool)

(assert (=> b!72292 (=> (not res!38413) (not e!47281))))

(assert (=> b!72292 (= res!38413 (containsKey!136 lt!32160 (_1!1066 lt!31223)))))

(declare-fun c!10669 () Bool)

(declare-fun b!72293 () Bool)

(assert (=> b!72293 (= e!47282 (ite c!10669 (t!4995 (t!4995 (toList!713 lt!31219))) (ite c!10668 (Cons!1463 (h!2049 (t!4995 (toList!713 lt!31219))) (t!4995 (t!4995 (toList!713 lt!31219)))) Nil!1464)))))

(declare-fun bm!6275 () Bool)

(assert (=> bm!6275 (= call!6277 call!6279)))

(declare-fun b!72294 () Bool)

(assert (=> b!72294 (= e!47283 e!47279)))

(assert (=> b!72294 (= c!10669 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31219))) (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31219)))) (_1!1066 lt!31223))))))

(declare-fun bm!6276 () Bool)

(assert (=> bm!6276 (= call!6278 call!6277)))

(declare-fun b!72295 () Bool)

(assert (=> b!72295 (= e!47282 (insertStrictlySorted!53 (t!4995 (t!4995 (toList!713 lt!31219))) (_1!1066 lt!31223) (_2!1066 lt!31223)))))

(declare-fun b!72296 () Bool)

(assert (=> b!72296 (= e!47281 (contains!719 lt!32160 (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(assert (= (and d!16497 c!10671) b!72287))

(assert (= (and d!16497 (not c!10671)) b!72294))

(assert (= (and b!72294 c!10669) b!72288))

(assert (= (and b!72294 (not c!10669)) b!72289))

(assert (= (and b!72289 c!10668) b!72290))

(assert (= (and b!72289 (not c!10668)) b!72291))

(assert (= (or b!72290 b!72291) bm!6276))

(assert (= (or b!72288 bm!6276) bm!6275))

(assert (= (or b!72287 bm!6275) bm!6274))

(assert (= (and bm!6274 c!10670) b!72295))

(assert (= (and bm!6274 (not c!10670)) b!72293))

(assert (= (and d!16497 res!38414) b!72292))

(assert (= (and b!72292 res!38413) b!72296))

(declare-fun m!70141 () Bool)

(assert (=> b!72292 m!70141))

(declare-fun m!70143 () Bool)

(assert (=> b!72296 m!70143))

(declare-fun m!70145 () Bool)

(assert (=> bm!6274 m!70145))

(declare-fun m!70147 () Bool)

(assert (=> d!16497 m!70147))

(assert (=> d!16497 m!69327))

(declare-fun m!70149 () Bool)

(assert (=> b!72295 m!70149))

(assert (=> b!71398 d!16497))

(declare-fun d!16499 () Bool)

(declare-fun e!47285 () Bool)

(assert (=> d!16499 e!47285))

(declare-fun res!38415 () Bool)

(assert (=> d!16499 (=> res!38415 e!47285)))

(declare-fun lt!32164 () Bool)

(assert (=> d!16499 (= res!38415 (not lt!32164))))

(declare-fun lt!32163 () Bool)

(assert (=> d!16499 (= lt!32164 lt!32163)))

(declare-fun lt!32162 () Unit!1996)

(declare-fun e!47284 () Unit!1996)

(assert (=> d!16499 (= lt!32162 e!47284)))

(declare-fun c!10672 () Bool)

(assert (=> d!16499 (= c!10672 lt!32163)))

(assert (=> d!16499 (= lt!32163 (containsKey!136 (toList!713 lt!31636) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> d!16499 (= (contains!715 lt!31636 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32164)))

(declare-fun b!72297 () Bool)

(declare-fun lt!32161 () Unit!1996)

(assert (=> b!72297 (= e!47284 lt!32161)))

(assert (=> b!72297 (= lt!32161 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31636) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (=> b!72297 (isDefined!85 (getValueByKey!133 (toList!713 lt!31636) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72298 () Bool)

(declare-fun Unit!2054 () Unit!1996)

(assert (=> b!72298 (= e!47284 Unit!2054)))

(declare-fun b!72299 () Bool)

(assert (=> b!72299 (= e!47285 (isDefined!85 (getValueByKey!133 (toList!713 lt!31636) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16499 c!10672) b!72297))

(assert (= (and d!16499 (not c!10672)) b!72298))

(assert (= (and d!16499 (not res!38415)) b!72299))

(declare-fun m!70151 () Bool)

(assert (=> d!16499 m!70151))

(declare-fun m!70153 () Bool)

(assert (=> b!72297 m!70153))

(assert (=> b!72297 m!68569))

(assert (=> b!72297 m!68569))

(declare-fun m!70155 () Bool)

(assert (=> b!72297 m!70155))

(assert (=> b!72299 m!68569))

(assert (=> b!72299 m!68569))

(assert (=> b!72299 m!70155))

(assert (=> d!15965 d!16499))

(declare-fun b!72301 () Bool)

(declare-fun e!47286 () Option!139)

(declare-fun e!47287 () Option!139)

(assert (=> b!72301 (= e!47286 e!47287)))

(declare-fun c!10674 () Bool)

(assert (=> b!72301 (= c!10674 (and ((_ is Cons!1463) lt!31634) (not (= (_1!1066 (h!2049 lt!31634)) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun b!72303 () Bool)

(assert (=> b!72303 (= e!47287 None!137)))

(declare-fun b!72302 () Bool)

(assert (=> b!72302 (= e!47287 (getValueByKey!133 (t!4995 lt!31634) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun c!10673 () Bool)

(declare-fun d!16501 () Bool)

(assert (=> d!16501 (= c!10673 (and ((_ is Cons!1463) lt!31634) (= (_1!1066 (h!2049 lt!31634)) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16501 (= (getValueByKey!133 lt!31634 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) e!47286)))

(declare-fun b!72300 () Bool)

(assert (=> b!72300 (= e!47286 (Some!138 (_2!1066 (h!2049 lt!31634))))))

(assert (= (and d!16501 c!10673) b!72300))

(assert (= (and d!16501 (not c!10673)) b!72301))

(assert (= (and b!72301 c!10674) b!72302))

(assert (= (and b!72301 (not c!10674)) b!72303))

(declare-fun m!70157 () Bool)

(assert (=> b!72302 m!70157))

(assert (=> d!15965 d!16501))

(declare-fun d!16503 () Bool)

(assert (=> d!16503 (= (getValueByKey!133 lt!31634 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) (Some!138 (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun lt!32165 () Unit!1996)

(assert (=> d!16503 (= lt!32165 (choose!406 lt!31634 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun e!47288 () Bool)

(assert (=> d!16503 e!47288))

(declare-fun res!38416 () Bool)

(assert (=> d!16503 (=> (not res!38416) (not e!47288))))

(assert (=> d!16503 (= res!38416 (isStrictlySorted!278 lt!31634))))

(assert (=> d!16503 (= (lemmaContainsTupThenGetReturnValue!50 lt!31634 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32165)))

(declare-fun b!72304 () Bool)

(declare-fun res!38417 () Bool)

(assert (=> b!72304 (=> (not res!38417) (not e!47288))))

(assert (=> b!72304 (= res!38417 (containsKey!136 lt!31634 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72305 () Bool)

(assert (=> b!72305 (= e!47288 (contains!719 lt!31634 (tuple2!2111 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16503 res!38416) b!72304))

(assert (= (and b!72304 res!38417) b!72305))

(assert (=> d!16503 m!68563))

(declare-fun m!70159 () Bool)

(assert (=> d!16503 m!70159))

(declare-fun m!70161 () Bool)

(assert (=> d!16503 m!70161))

(declare-fun m!70163 () Bool)

(assert (=> b!72304 m!70163))

(declare-fun m!70165 () Bool)

(assert (=> b!72305 m!70165))

(assert (=> d!15965 d!16503))

(declare-fun b!72306 () Bool)

(declare-fun e!47293 () List!1467)

(declare-fun call!6282 () List!1467)

(assert (=> b!72306 (= e!47293 call!6282)))

(declare-fun c!10678 () Bool)

(declare-fun e!47292 () List!1467)

(declare-fun bm!6277 () Bool)

(assert (=> bm!6277 (= call!6282 ($colon$colon!64 e!47292 (ite c!10678 (h!2049 (toList!713 lt!31348)) (tuple2!2111 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun c!10677 () Bool)

(assert (=> bm!6277 (= c!10677 c!10678)))

(declare-fun d!16505 () Bool)

(declare-fun e!47291 () Bool)

(assert (=> d!16505 e!47291))

(declare-fun res!38419 () Bool)

(assert (=> d!16505 (=> (not res!38419) (not e!47291))))

(declare-fun lt!32166 () List!1467)

(assert (=> d!16505 (= res!38419 (isStrictlySorted!278 lt!32166))))

(assert (=> d!16505 (= lt!32166 e!47293)))

(assert (=> d!16505 (= c!10678 (and ((_ is Cons!1463) (toList!713 lt!31348)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31348))) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16505 (isStrictlySorted!278 (toList!713 lt!31348))))

(assert (=> d!16505 (= (insertStrictlySorted!53 (toList!713 lt!31348) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32166)))

(declare-fun b!72307 () Bool)

(declare-fun e!47289 () List!1467)

(declare-fun call!6280 () List!1467)

(assert (=> b!72307 (= e!47289 call!6280)))

(declare-fun c!10675 () Bool)

(declare-fun b!72308 () Bool)

(assert (=> b!72308 (= c!10675 (and ((_ is Cons!1463) (toList!713 lt!31348)) (bvsgt (_1!1066 (h!2049 (toList!713 lt!31348))) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun e!47290 () List!1467)

(assert (=> b!72308 (= e!47289 e!47290)))

(declare-fun b!72309 () Bool)

(declare-fun call!6281 () List!1467)

(assert (=> b!72309 (= e!47290 call!6281)))

(declare-fun b!72310 () Bool)

(assert (=> b!72310 (= e!47290 call!6281)))

(declare-fun b!72311 () Bool)

(declare-fun res!38418 () Bool)

(assert (=> b!72311 (=> (not res!38418) (not e!47291))))

(assert (=> b!72311 (= res!38418 (containsKey!136 lt!32166 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72312 () Bool)

(declare-fun c!10676 () Bool)

(assert (=> b!72312 (= e!47292 (ite c!10676 (t!4995 (toList!713 lt!31348)) (ite c!10675 (Cons!1463 (h!2049 (toList!713 lt!31348)) (t!4995 (toList!713 lt!31348))) Nil!1464)))))

(declare-fun bm!6278 () Bool)

(assert (=> bm!6278 (= call!6280 call!6282)))

(declare-fun b!72313 () Bool)

(assert (=> b!72313 (= e!47293 e!47289)))

(assert (=> b!72313 (= c!10676 (and ((_ is Cons!1463) (toList!713 lt!31348)) (= (_1!1066 (h!2049 (toList!713 lt!31348))) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun bm!6279 () Bool)

(assert (=> bm!6279 (= call!6281 call!6280)))

(declare-fun b!72314 () Bool)

(assert (=> b!72314 (= e!47292 (insertStrictlySorted!53 (t!4995 (toList!713 lt!31348)) (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72315 () Bool)

(assert (=> b!72315 (= e!47291 (contains!719 lt!32166 (tuple2!2111 (_1!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) (_2!1066 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (= (and d!16505 c!10678) b!72306))

(assert (= (and d!16505 (not c!10678)) b!72313))

(assert (= (and b!72313 c!10676) b!72307))

(assert (= (and b!72313 (not c!10676)) b!72308))

(assert (= (and b!72308 c!10675) b!72309))

(assert (= (and b!72308 (not c!10675)) b!72310))

(assert (= (or b!72309 b!72310) bm!6279))

(assert (= (or b!72307 bm!6279) bm!6278))

(assert (= (or b!72306 bm!6278) bm!6277))

(assert (= (and bm!6277 c!10677) b!72314))

(assert (= (and bm!6277 (not c!10677)) b!72312))

(assert (= (and d!16505 res!38419) b!72311))

(assert (= (and b!72311 res!38418) b!72315))

(declare-fun m!70167 () Bool)

(assert (=> b!72311 m!70167))

(declare-fun m!70169 () Bool)

(assert (=> b!72315 m!70169))

(declare-fun m!70171 () Bool)

(assert (=> bm!6277 m!70171))

(declare-fun m!70173 () Bool)

(assert (=> d!16505 m!70173))

(declare-fun m!70175 () Bool)

(assert (=> d!16505 m!70175))

(declare-fun m!70177 () Bool)

(assert (=> b!72314 m!70177))

(assert (=> d!15965 d!16505))

(assert (=> b!71211 d!16363))

(assert (=> b!71211 d!16365))

(assert (=> b!71555 d!16355))

(assert (=> b!71555 d!16035))

(declare-fun lt!32167 () Bool)

(declare-fun d!16507 () Bool)

(assert (=> d!16507 (= lt!32167 (select (content!76 (toList!713 lt!31547)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(declare-fun e!47295 () Bool)

(assert (=> d!16507 (= lt!32167 e!47295)))

(declare-fun res!38421 () Bool)

(assert (=> d!16507 (=> (not res!38421) (not e!47295))))

(assert (=> d!16507 (= res!38421 ((_ is Cons!1463) (toList!713 lt!31547)))))

(assert (=> d!16507 (= (contains!719 (toList!713 lt!31547) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) lt!32167)))

(declare-fun b!72316 () Bool)

(declare-fun e!47294 () Bool)

(assert (=> b!72316 (= e!47295 e!47294)))

(declare-fun res!38420 () Bool)

(assert (=> b!72316 (=> res!38420 e!47294)))

(assert (=> b!72316 (= res!38420 (= (h!2049 (toList!713 lt!31547)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(declare-fun b!72317 () Bool)

(assert (=> b!72317 (= e!47294 (contains!719 (t!4995 (toList!713 lt!31547)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(assert (= (and d!16507 res!38421) b!72316))

(assert (= (and b!72316 (not res!38420)) b!72317))

(declare-fun m!70179 () Bool)

(assert (=> d!16507 m!70179))

(declare-fun m!70181 () Bool)

(assert (=> d!16507 m!70181))

(declare-fun m!70183 () Bool)

(assert (=> b!72317 m!70183))

(assert (=> b!71143 d!16507))

(declare-fun b!72319 () Bool)

(declare-fun e!47296 () Option!139)

(declare-fun e!47297 () Option!139)

(assert (=> b!72319 (= e!47296 e!47297)))

(declare-fun c!10680 () Bool)

(assert (=> b!72319 (= c!10680 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31505))) (not (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31505)))) (_1!1066 lt!31228)))))))

(declare-fun b!72321 () Bool)

(assert (=> b!72321 (= e!47297 None!137)))

(declare-fun b!72320 () Bool)

(assert (=> b!72320 (= e!47297 (getValueByKey!133 (t!4995 (t!4995 (toList!713 lt!31505))) (_1!1066 lt!31228)))))

(declare-fun d!16509 () Bool)

(declare-fun c!10679 () Bool)

(assert (=> d!16509 (= c!10679 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31505))) (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31505)))) (_1!1066 lt!31228))))))

(assert (=> d!16509 (= (getValueByKey!133 (t!4995 (toList!713 lt!31505)) (_1!1066 lt!31228)) e!47296)))

(declare-fun b!72318 () Bool)

(assert (=> b!72318 (= e!47296 (Some!138 (_2!1066 (h!2049 (t!4995 (toList!713 lt!31505))))))))

(assert (= (and d!16509 c!10679) b!72318))

(assert (= (and d!16509 (not c!10679)) b!72319))

(assert (= (and b!72319 c!10680) b!72320))

(assert (= (and b!72319 (not c!10680)) b!72321))

(declare-fun m!70185 () Bool)

(assert (=> b!72320 m!70185))

(assert (=> b!71475 d!16509))

(declare-fun d!16511 () Bool)

(declare-fun e!47298 () Bool)

(assert (=> d!16511 e!47298))

(declare-fun res!38422 () Bool)

(assert (=> d!16511 (=> (not res!38422) (not e!47298))))

(declare-fun lt!32171 () ListLongMap!1395)

(assert (=> d!16511 (= res!38422 (contains!715 lt!32171 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun lt!32169 () List!1467)

(assert (=> d!16511 (= lt!32171 (ListLongMap!1396 lt!32169))))

(declare-fun lt!32170 () Unit!1996)

(declare-fun lt!32168 () Unit!1996)

(assert (=> d!16511 (= lt!32170 lt!32168)))

(assert (=> d!16511 (= (getValueByKey!133 lt!32169 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16511 (= lt!32168 (lemmaContainsTupThenGetReturnValue!50 lt!32169 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16511 (= lt!32169 (insertStrictlySorted!53 (toList!713 call!6161) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16511 (= (+!91 call!6161 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) lt!32171)))

(declare-fun b!72322 () Bool)

(declare-fun res!38423 () Bool)

(assert (=> b!72322 (=> (not res!38423) (not e!47298))))

(assert (=> b!72322 (= res!38423 (= (getValueByKey!133 (toList!713 lt!32171) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(declare-fun b!72323 () Bool)

(assert (=> b!72323 (= e!47298 (contains!719 (toList!713 lt!32171) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(assert (= (and d!16511 res!38422) b!72322))

(assert (= (and b!72322 res!38423) b!72323))

(declare-fun m!70187 () Bool)

(assert (=> d!16511 m!70187))

(declare-fun m!70189 () Bool)

(assert (=> d!16511 m!70189))

(declare-fun m!70191 () Bool)

(assert (=> d!16511 m!70191))

(declare-fun m!70193 () Bool)

(assert (=> d!16511 m!70193))

(declare-fun m!70195 () Bool)

(assert (=> b!72322 m!70195))

(declare-fun m!70197 () Bool)

(assert (=> b!72323 m!70197))

(assert (=> b!71361 d!16511))

(declare-fun d!16513 () Bool)

(declare-fun lt!32172 () Bool)

(assert (=> d!16513 (= lt!32172 (select (content!76 lt!31510) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(declare-fun e!47300 () Bool)

(assert (=> d!16513 (= lt!32172 e!47300)))

(declare-fun res!38425 () Bool)

(assert (=> d!16513 (=> (not res!38425) (not e!47300))))

(assert (=> d!16513 (= res!38425 ((_ is Cons!1463) lt!31510))))

(assert (=> d!16513 (= (contains!719 lt!31510 (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))) lt!32172)))

(declare-fun b!72324 () Bool)

(declare-fun e!47299 () Bool)

(assert (=> b!72324 (= e!47300 e!47299)))

(declare-fun res!38424 () Bool)

(assert (=> b!72324 (=> res!38424 e!47299)))

(assert (=> b!72324 (= res!38424 (= (h!2049 lt!31510) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(declare-fun b!72325 () Bool)

(assert (=> b!72325 (= e!47299 (contains!719 (t!4995 lt!31510) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(assert (= (and d!16513 res!38425) b!72324))

(assert (= (and b!72324 (not res!38424)) b!72325))

(declare-fun m!70199 () Bool)

(assert (=> d!16513 m!70199))

(declare-fun m!70201 () Bool)

(assert (=> d!16513 m!70201))

(declare-fun m!70203 () Bool)

(assert (=> b!72325 m!70203))

(assert (=> b!71485 d!16513))

(declare-fun d!16515 () Bool)

(assert (=> d!16515 (= (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31346)) (v!2522 (getValueByKey!133 (toList!713 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31346)))))

(assert (=> d!15977 d!16515))

(declare-fun b!72327 () Bool)

(declare-fun e!47301 () Option!139)

(declare-fun e!47302 () Option!139)

(assert (=> b!72327 (= e!47301 e!47302)))

(declare-fun c!10682 () Bool)

(assert (=> b!72327 (= c!10682 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (not (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31346))))))

(declare-fun b!72329 () Bool)

(assert (=> b!72329 (= e!47302 None!137)))

(declare-fun b!72328 () Bool)

(assert (=> b!72328 (= e!47302 (getValueByKey!133 (t!4995 (toList!713 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) lt!31346))))

(declare-fun d!16517 () Bool)

(declare-fun c!10681 () Bool)

(assert (=> d!16517 (= c!10681 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31346)))))

(assert (=> d!16517 (= (getValueByKey!133 (toList!713 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31346) e!47301)))

(declare-fun b!72326 () Bool)

(assert (=> b!72326 (= e!47301 (Some!138 (_2!1066 (h!2049 (toList!713 (+!91 lt!31348 (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))))))

(assert (= (and d!16517 c!10681) b!72326))

(assert (= (and d!16517 (not c!10681)) b!72327))

(assert (= (and b!72327 c!10682) b!72328))

(assert (= (and b!72327 (not c!10682)) b!72329))

(declare-fun m!70205 () Bool)

(assert (=> b!72328 m!70205))

(assert (=> d!15977 d!16517))

(assert (=> b!71219 d!16087))

(declare-fun d!16519 () Bool)

(assert (=> d!16519 (= (apply!74 (+!91 lt!31580 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) lt!31578) (apply!74 lt!31580 lt!31578))))

(declare-fun lt!32173 () Unit!1996)

(assert (=> d!16519 (= lt!32173 (choose!409 lt!31580 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) lt!31578))))

(declare-fun e!47303 () Bool)

(assert (=> d!16519 e!47303))

(declare-fun res!38426 () Bool)

(assert (=> d!16519 (=> (not res!38426) (not e!47303))))

(assert (=> d!16519 (= res!38426 (contains!715 lt!31580 lt!31578))))

(assert (=> d!16519 (= (addApplyDifferent!50 lt!31580 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) lt!31578) lt!32173)))

(declare-fun b!72330 () Bool)

(assert (=> b!72330 (= e!47303 (not (= lt!31578 lt!31586)))))

(assert (= (and d!16519 res!38426) b!72330))

(assert (=> d!16519 m!68431))

(declare-fun m!70207 () Bool)

(assert (=> d!16519 m!70207))

(assert (=> d!16519 m!68419))

(assert (=> d!16519 m!68421))

(assert (=> d!16519 m!68419))

(declare-fun m!70209 () Bool)

(assert (=> d!16519 m!70209))

(assert (=> b!71219 d!16519))

(declare-fun d!16521 () Bool)

(declare-fun e!47304 () Bool)

(assert (=> d!16521 e!47304))

(declare-fun res!38427 () Bool)

(assert (=> d!16521 (=> (not res!38427) (not e!47304))))

(declare-fun lt!32177 () ListLongMap!1395)

(assert (=> d!16521 (= res!38427 (contains!715 lt!32177 (_1!1066 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))))))

(declare-fun lt!32175 () List!1467)

(assert (=> d!16521 (= lt!32177 (ListLongMap!1396 lt!32175))))

(declare-fun lt!32176 () Unit!1996)

(declare-fun lt!32174 () Unit!1996)

(assert (=> d!16521 (= lt!32176 lt!32174)))

(assert (=> d!16521 (= (getValueByKey!133 lt!32175 (_1!1066 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))) (Some!138 (_2!1066 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16521 (= lt!32174 (lemmaContainsTupThenGetReturnValue!50 lt!32175 (_1!1066 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) (_2!1066 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16521 (= lt!32175 (insertStrictlySorted!53 (toList!713 lt!31580) (_1!1066 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) (_2!1066 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16521 (= (+!91 lt!31580 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) lt!32177)))

(declare-fun b!72331 () Bool)

(declare-fun res!38428 () Bool)

(assert (=> b!72331 (=> (not res!38428) (not e!47304))))

(assert (=> b!72331 (= res!38428 (= (getValueByKey!133 (toList!713 lt!32177) (_1!1066 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))) (Some!138 (_2!1066 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))))))))

(declare-fun b!72332 () Bool)

(assert (=> b!72332 (= e!47304 (contains!719 (toList!713 lt!32177) (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))))))

(assert (= (and d!16521 res!38427) b!72331))

(assert (= (and b!72331 res!38428) b!72332))

(declare-fun m!70211 () Bool)

(assert (=> d!16521 m!70211))

(declare-fun m!70213 () Bool)

(assert (=> d!16521 m!70213))

(declare-fun m!70215 () Bool)

(assert (=> d!16521 m!70215))

(declare-fun m!70217 () Bool)

(assert (=> d!16521 m!70217))

(declare-fun m!70219 () Bool)

(assert (=> b!72331 m!70219))

(declare-fun m!70221 () Bool)

(assert (=> b!72332 m!70221))

(assert (=> b!71219 d!16521))

(declare-fun d!16523 () Bool)

(assert (=> d!16523 (= (apply!74 (+!91 lt!31591 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) lt!31595) (apply!74 lt!31591 lt!31595))))

(declare-fun lt!32178 () Unit!1996)

(assert (=> d!16523 (= lt!32178 (choose!409 lt!31591 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) lt!31595))))

(declare-fun e!47305 () Bool)

(assert (=> d!16523 e!47305))

(declare-fun res!38429 () Bool)

(assert (=> d!16523 (=> (not res!38429) (not e!47305))))

(assert (=> d!16523 (= res!38429 (contains!715 lt!31591 lt!31595))))

(assert (=> d!16523 (= (addApplyDifferent!50 lt!31591 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) lt!31595) lt!32178)))

(declare-fun b!72333 () Bool)

(assert (=> b!72333 (= e!47305 (not (= lt!31595 lt!31583)))))

(assert (= (and d!16523 res!38429) b!72333))

(assert (=> d!16523 m!68411))

(declare-fun m!70223 () Bool)

(assert (=> d!16523 m!70223))

(assert (=> d!16523 m!68423))

(assert (=> d!16523 m!68425))

(assert (=> d!16523 m!68423))

(declare-fun m!70225 () Bool)

(assert (=> d!16523 m!70225))

(assert (=> b!71219 d!16523))

(declare-fun d!16525 () Bool)

(assert (=> d!16525 (= (apply!74 (+!91 lt!31589 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) lt!31587) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31589 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) lt!31587)))))

(declare-fun bs!3112 () Bool)

(assert (= bs!3112 d!16525))

(declare-fun m!70227 () Bool)

(assert (=> bs!3112 m!70227))

(assert (=> bs!3112 m!70227))

(declare-fun m!70229 () Bool)

(assert (=> bs!3112 m!70229))

(assert (=> b!71219 d!16525))

(declare-fun d!16527 () Bool)

(assert (=> d!16527 (= (apply!74 (+!91 lt!31580 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) lt!31578) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31580 (tuple2!2111 lt!31586 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))) lt!31578)))))

(declare-fun bs!3113 () Bool)

(assert (= bs!3113 d!16527))

(declare-fun m!70231 () Bool)

(assert (=> bs!3113 m!70231))

(assert (=> bs!3113 m!70231))

(declare-fun m!70233 () Bool)

(assert (=> bs!3113 m!70233))

(assert (=> b!71219 d!16527))

(declare-fun d!16529 () Bool)

(assert (=> d!16529 (= (apply!74 lt!31591 lt!31595) (get!1146 (getValueByKey!133 (toList!713 lt!31591) lt!31595)))))

(declare-fun bs!3114 () Bool)

(assert (= bs!3114 d!16529))

(declare-fun m!70235 () Bool)

(assert (=> bs!3114 m!70235))

(assert (=> bs!3114 m!70235))

(declare-fun m!70237 () Bool)

(assert (=> bs!3114 m!70237))

(assert (=> b!71219 d!16529))

(declare-fun d!16531 () Bool)

(declare-fun e!47306 () Bool)

(assert (=> d!16531 e!47306))

(declare-fun res!38430 () Bool)

(assert (=> d!16531 (=> (not res!38430) (not e!47306))))

(declare-fun lt!32182 () ListLongMap!1395)

(assert (=> d!16531 (= res!38430 (contains!715 lt!32182 (_1!1066 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))))))

(declare-fun lt!32180 () List!1467)

(assert (=> d!16531 (= lt!32182 (ListLongMap!1396 lt!32180))))

(declare-fun lt!32181 () Unit!1996)

(declare-fun lt!32179 () Unit!1996)

(assert (=> d!16531 (= lt!32181 lt!32179)))

(assert (=> d!16531 (= (getValueByKey!133 lt!32180 (_1!1066 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))) (Some!138 (_2!1066 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16531 (= lt!32179 (lemmaContainsTupThenGetReturnValue!50 lt!32180 (_1!1066 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) (_2!1066 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16531 (= lt!32180 (insertStrictlySorted!53 (toList!713 lt!31590) (_1!1066 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) (_2!1066 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16531 (= (+!91 lt!31590 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) lt!32182)))

(declare-fun b!72334 () Bool)

(declare-fun res!38431 () Bool)

(assert (=> b!72334 (=> (not res!38431) (not e!47306))))

(assert (=> b!72334 (= res!38431 (= (getValueByKey!133 (toList!713 lt!32182) (_1!1066 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))) (Some!138 (_2!1066 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))))))))

(declare-fun b!72335 () Bool)

(assert (=> b!72335 (= e!47306 (contains!719 (toList!713 lt!32182) (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))))))

(assert (= (and d!16531 res!38430) b!72334))

(assert (= (and b!72334 res!38431) b!72335))

(declare-fun m!70239 () Bool)

(assert (=> d!16531 m!70239))

(declare-fun m!70241 () Bool)

(assert (=> d!16531 m!70241))

(declare-fun m!70243 () Bool)

(assert (=> d!16531 m!70243))

(declare-fun m!70245 () Bool)

(assert (=> d!16531 m!70245))

(declare-fun m!70247 () Bool)

(assert (=> b!72334 m!70247))

(declare-fun m!70249 () Bool)

(assert (=> b!72335 m!70249))

(assert (=> b!71219 d!16531))

(declare-fun d!16533 () Bool)

(assert (=> d!16533 (= (apply!74 (+!91 lt!31591 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) lt!31595) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31591 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) lt!31595)))))

(declare-fun bs!3115 () Bool)

(assert (= bs!3115 d!16533))

(declare-fun m!70251 () Bool)

(assert (=> bs!3115 m!70251))

(assert (=> bs!3115 m!70251))

(declare-fun m!70253 () Bool)

(assert (=> bs!3115 m!70253))

(assert (=> b!71219 d!16533))

(declare-fun d!16535 () Bool)

(declare-fun e!47307 () Bool)

(assert (=> d!16535 e!47307))

(declare-fun res!38432 () Bool)

(assert (=> d!16535 (=> (not res!38432) (not e!47307))))

(declare-fun lt!32186 () ListLongMap!1395)

(assert (=> d!16535 (= res!38432 (contains!715 lt!32186 (_1!1066 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(declare-fun lt!32184 () List!1467)

(assert (=> d!16535 (= lt!32186 (ListLongMap!1396 lt!32184))))

(declare-fun lt!32185 () Unit!1996)

(declare-fun lt!32183 () Unit!1996)

(assert (=> d!16535 (= lt!32185 lt!32183)))

(assert (=> d!16535 (= (getValueByKey!133 lt!32184 (_1!1066 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) (Some!138 (_2!1066 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(assert (=> d!16535 (= lt!32183 (lemmaContainsTupThenGetReturnValue!50 lt!32184 (_1!1066 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) (_2!1066 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(assert (=> d!16535 (= lt!32184 (insertStrictlySorted!53 (toList!713 lt!31591) (_1!1066 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) (_2!1066 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(assert (=> d!16535 (= (+!91 lt!31591 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) lt!32186)))

(declare-fun b!72336 () Bool)

(declare-fun res!38433 () Bool)

(assert (=> b!72336 (=> (not res!38433) (not e!47307))))

(assert (=> b!72336 (= res!38433 (= (getValueByKey!133 (toList!713 lt!32186) (_1!1066 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) (Some!138 (_2!1066 (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))))

(declare-fun b!72337 () Bool)

(assert (=> b!72337 (= e!47307 (contains!719 (toList!713 lt!32186) (tuple2!2111 lt!31583 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))

(assert (= (and d!16535 res!38432) b!72336))

(assert (= (and b!72336 res!38433) b!72337))

(declare-fun m!70255 () Bool)

(assert (=> d!16535 m!70255))

(declare-fun m!70257 () Bool)

(assert (=> d!16535 m!70257))

(declare-fun m!70259 () Bool)

(assert (=> d!16535 m!70259))

(declare-fun m!70261 () Bool)

(assert (=> d!16535 m!70261))

(declare-fun m!70263 () Bool)

(assert (=> b!72336 m!70263))

(declare-fun m!70265 () Bool)

(assert (=> b!72337 m!70265))

(assert (=> b!71219 d!16535))

(declare-fun d!16537 () Bool)

(assert (=> d!16537 (= (apply!74 lt!31589 lt!31587) (get!1146 (getValueByKey!133 (toList!713 lt!31589) lt!31587)))))

(declare-fun bs!3116 () Bool)

(assert (= bs!3116 d!16537))

(declare-fun m!70267 () Bool)

(assert (=> bs!3116 m!70267))

(assert (=> bs!3116 m!70267))

(declare-fun m!70269 () Bool)

(assert (=> bs!3116 m!70269))

(assert (=> b!71219 d!16537))

(declare-fun d!16539 () Bool)

(declare-fun e!47308 () Bool)

(assert (=> d!16539 e!47308))

(declare-fun res!38434 () Bool)

(assert (=> d!16539 (=> (not res!38434) (not e!47308))))

(declare-fun lt!32190 () ListLongMap!1395)

(assert (=> d!16539 (= res!38434 (contains!715 lt!32190 (_1!1066 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(declare-fun lt!32188 () List!1467)

(assert (=> d!16539 (= lt!32190 (ListLongMap!1396 lt!32188))))

(declare-fun lt!32189 () Unit!1996)

(declare-fun lt!32187 () Unit!1996)

(assert (=> d!16539 (= lt!32189 lt!32187)))

(assert (=> d!16539 (= (getValueByKey!133 lt!32188 (_1!1066 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) (Some!138 (_2!1066 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(assert (=> d!16539 (= lt!32187 (lemmaContainsTupThenGetReturnValue!50 lt!32188 (_1!1066 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) (_2!1066 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(assert (=> d!16539 (= lt!32188 (insertStrictlySorted!53 (toList!713 lt!31589) (_1!1066 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) (_2!1066 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(assert (=> d!16539 (= (+!91 lt!31589 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) lt!32190)))

(declare-fun b!72338 () Bool)

(declare-fun res!38435 () Bool)

(assert (=> b!72338 (=> (not res!38435) (not e!47308))))

(assert (=> b!72338 (= res!38435 (= (getValueByKey!133 (toList!713 lt!32190) (_1!1066 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) (Some!138 (_2!1066 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))))

(declare-fun b!72339 () Bool)

(assert (=> b!72339 (= e!47308 (contains!719 (toList!713 lt!32190) (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))

(assert (= (and d!16539 res!38434) b!72338))

(assert (= (and b!72338 res!38435) b!72339))

(declare-fun m!70271 () Bool)

(assert (=> d!16539 m!70271))

(declare-fun m!70273 () Bool)

(assert (=> d!16539 m!70273))

(declare-fun m!70275 () Bool)

(assert (=> d!16539 m!70275))

(declare-fun m!70277 () Bool)

(assert (=> d!16539 m!70277))

(declare-fun m!70279 () Bool)

(assert (=> b!72338 m!70279))

(declare-fun m!70281 () Bool)

(assert (=> b!72339 m!70281))

(assert (=> b!71219 d!16539))

(declare-fun d!16541 () Bool)

(declare-fun e!47310 () Bool)

(assert (=> d!16541 e!47310))

(declare-fun res!38436 () Bool)

(assert (=> d!16541 (=> res!38436 e!47310)))

(declare-fun lt!32194 () Bool)

(assert (=> d!16541 (= res!38436 (not lt!32194))))

(declare-fun lt!32193 () Bool)

(assert (=> d!16541 (= lt!32194 lt!32193)))

(declare-fun lt!32192 () Unit!1996)

(declare-fun e!47309 () Unit!1996)

(assert (=> d!16541 (= lt!32192 e!47309)))

(declare-fun c!10683 () Bool)

(assert (=> d!16541 (= c!10683 lt!32193)))

(assert (=> d!16541 (= lt!32193 (containsKey!136 (toList!713 (+!91 lt!31590 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))) lt!31593))))

(assert (=> d!16541 (= (contains!715 (+!91 lt!31590 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) lt!31593) lt!32194)))

(declare-fun b!72340 () Bool)

(declare-fun lt!32191 () Unit!1996)

(assert (=> b!72340 (= e!47309 lt!32191)))

(assert (=> b!72340 (= lt!32191 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (+!91 lt!31590 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))) lt!31593))))

(assert (=> b!72340 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31590 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))) lt!31593))))

(declare-fun b!72341 () Bool)

(declare-fun Unit!2055 () Unit!1996)

(assert (=> b!72341 (= e!47309 Unit!2055)))

(declare-fun b!72342 () Bool)

(assert (=> b!72342 (= e!47310 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31590 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))))) lt!31593)))))

(assert (= (and d!16541 c!10683) b!72340))

(assert (= (and d!16541 (not c!10683)) b!72341))

(assert (= (and d!16541 (not res!38436)) b!72342))

(declare-fun m!70283 () Bool)

(assert (=> d!16541 m!70283))

(declare-fun m!70285 () Bool)

(assert (=> b!72340 m!70285))

(declare-fun m!70287 () Bool)

(assert (=> b!72340 m!70287))

(assert (=> b!72340 m!70287))

(declare-fun m!70289 () Bool)

(assert (=> b!72340 m!70289))

(assert (=> b!72342 m!70287))

(assert (=> b!72342 m!70287))

(assert (=> b!72342 m!70289))

(assert (=> b!71219 d!16541))

(declare-fun d!16543 () Bool)

(assert (=> d!16543 (contains!715 (+!91 lt!31590 (tuple2!2111 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)))) lt!31593)))

(declare-fun lt!32195 () Unit!1996)

(assert (=> d!16543 (= lt!32195 (choose!410 lt!31590 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) lt!31593))))

(assert (=> d!16543 (contains!715 lt!31590 lt!31593)))

(assert (=> d!16543 (= (addStillContains!50 lt!31590 lt!31596 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16)) lt!31593) lt!32195)))

(declare-fun bs!3117 () Bool)

(assert (= bs!3117 d!16543))

(assert (=> bs!3117 m!68429))

(assert (=> bs!3117 m!68429))

(assert (=> bs!3117 m!68437))

(declare-fun m!70291 () Bool)

(assert (=> bs!3117 m!70291))

(declare-fun m!70293 () Bool)

(assert (=> bs!3117 m!70293))

(assert (=> b!71219 d!16543))

(declare-fun d!16545 () Bool)

(assert (=> d!16545 (= (apply!74 lt!31580 lt!31578) (get!1146 (getValueByKey!133 (toList!713 lt!31580) lt!31578)))))

(declare-fun bs!3118 () Bool)

(assert (= bs!3118 d!16545))

(declare-fun m!70295 () Bool)

(assert (=> bs!3118 m!70295))

(assert (=> bs!3118 m!70295))

(declare-fun m!70297 () Bool)

(assert (=> bs!3118 m!70297))

(assert (=> b!71219 d!16545))

(declare-fun d!16547 () Bool)

(assert (=> d!16547 (= (apply!74 (+!91 lt!31589 (tuple2!2111 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))) lt!31587) (apply!74 lt!31589 lt!31587))))

(declare-fun lt!32196 () Unit!1996)

(assert (=> d!16547 (= lt!32196 (choose!409 lt!31589 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) lt!31587))))

(declare-fun e!47311 () Bool)

(assert (=> d!16547 e!47311))

(declare-fun res!38437 () Bool)

(assert (=> d!16547 (=> (not res!38437) (not e!47311))))

(assert (=> d!16547 (= res!38437 (contains!715 lt!31589 lt!31587))))

(assert (=> d!16547 (= (addApplyDifferent!50 lt!31589 lt!31582 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)) lt!31587) lt!32196)))

(declare-fun b!72343 () Bool)

(assert (=> b!72343 (= e!47311 (not (= lt!31587 lt!31582)))))

(assert (= (and d!16547 res!38437) b!72343))

(assert (=> d!16547 m!68413))

(declare-fun m!70299 () Bool)

(assert (=> d!16547 m!70299))

(assert (=> d!16547 m!68415))

(assert (=> d!16547 m!68417))

(assert (=> d!16547 m!68415))

(declare-fun m!70301 () Bool)

(assert (=> d!16547 m!70301))

(assert (=> b!71219 d!16547))

(declare-fun b!72345 () Bool)

(declare-fun e!47312 () Option!139)

(declare-fun e!47313 () Option!139)

(assert (=> b!72345 (= e!47312 e!47313)))

(declare-fun c!10685 () Bool)

(assert (=> b!72345 (= c!10685 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31512))) (not (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31512)))) (_1!1066 lt!31223)))))))

(declare-fun b!72347 () Bool)

(assert (=> b!72347 (= e!47313 None!137)))

(declare-fun b!72346 () Bool)

(assert (=> b!72346 (= e!47313 (getValueByKey!133 (t!4995 (t!4995 (toList!713 lt!31512))) (_1!1066 lt!31223)))))

(declare-fun d!16549 () Bool)

(declare-fun c!10684 () Bool)

(assert (=> d!16549 (= c!10684 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31512))) (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31512)))) (_1!1066 lt!31223))))))

(assert (=> d!16549 (= (getValueByKey!133 (t!4995 (toList!713 lt!31512)) (_1!1066 lt!31223)) e!47312)))

(declare-fun b!72344 () Bool)

(assert (=> b!72344 (= e!47312 (Some!138 (_2!1066 (h!2049 (t!4995 (toList!713 lt!31512))))))))

(assert (= (and d!16549 c!10684) b!72344))

(assert (= (and d!16549 (not c!10684)) b!72345))

(assert (= (and b!72345 c!10685) b!72346))

(assert (= (and b!72345 (not c!10685)) b!72347))

(declare-fun m!70303 () Bool)

(assert (=> b!72346 m!70303))

(assert (=> b!71414 d!16549))

(declare-fun d!16551 () Bool)

(declare-fun res!38438 () Bool)

(declare-fun e!47314 () Bool)

(assert (=> d!16551 (=> res!38438 e!47314)))

(assert (=> d!16551 (= res!38438 (and ((_ is Cons!1463) (t!4995 (toList!713 lt!31227))) (= (_1!1066 (h!2049 (t!4995 (toList!713 lt!31227)))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (=> d!16551 (= (containsKey!136 (t!4995 (toList!713 lt!31227)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) e!47314)))

(declare-fun b!72348 () Bool)

(declare-fun e!47315 () Bool)

(assert (=> b!72348 (= e!47314 e!47315)))

(declare-fun res!38439 () Bool)

(assert (=> b!72348 (=> (not res!38439) (not e!47315))))

(assert (=> b!72348 (= res!38439 (and (or (not ((_ is Cons!1463) (t!4995 (toList!713 lt!31227)))) (bvsle (_1!1066 (h!2049 (t!4995 (toList!713 lt!31227)))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))) ((_ is Cons!1463) (t!4995 (toList!713 lt!31227))) (bvslt (_1!1066 (h!2049 (t!4995 (toList!713 lt!31227)))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(declare-fun b!72349 () Bool)

(assert (=> b!72349 (= e!47315 (containsKey!136 (t!4995 (t!4995 (toList!713 lt!31227))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (= (and d!16551 (not res!38438)) b!72348))

(assert (= (and b!72348 res!38439) b!72349))

(assert (=> b!72349 m!67819))

(declare-fun m!70305 () Bool)

(assert (=> b!72349 m!70305))

(assert (=> b!71335 d!16551))

(assert (=> b!71577 d!16093))

(declare-fun d!16553 () Bool)

(assert (=> d!16553 (= (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71302 d!16553))

(declare-fun d!16555 () Bool)

(assert (=> d!16555 (isDefined!85 (getValueByKey!133 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun lt!32197 () Unit!1996)

(assert (=> d!16555 (= lt!32197 (choose!407 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun e!47316 () Bool)

(assert (=> d!16555 e!47316))

(declare-fun res!38440 () Bool)

(assert (=> d!16555 (=> (not res!38440) (not e!47316))))

(assert (=> d!16555 (= res!38440 (isStrictlySorted!278 (toList!713 call!6119)))))

(assert (=> d!16555 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) lt!32197)))

(declare-fun b!72350 () Bool)

(assert (=> b!72350 (= e!47316 (containsKey!136 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (= (and d!16555 res!38440) b!72350))

(assert (=> d!16555 m!67819))

(assert (=> d!16555 m!68849))

(assert (=> d!16555 m!68849))

(assert (=> d!16555 m!68851))

(assert (=> d!16555 m!67819))

(declare-fun m!70307 () Bool)

(assert (=> d!16555 m!70307))

(declare-fun m!70309 () Bool)

(assert (=> d!16555 m!70309))

(assert (=> b!72350 m!67819))

(assert (=> b!72350 m!68845))

(assert (=> b!71434 d!16555))

(declare-fun d!16557 () Bool)

(assert (=> d!16557 (= (isDefined!85 (getValueByKey!133 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))) (not (isEmpty!320 (getValueByKey!133 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))))

(declare-fun bs!3119 () Bool)

(assert (= bs!3119 d!16557))

(assert (=> bs!3119 m!68849))

(declare-fun m!70311 () Bool)

(assert (=> bs!3119 m!70311))

(assert (=> b!71434 d!16557))

(declare-fun b!72352 () Bool)

(declare-fun e!47317 () Option!139)

(declare-fun e!47318 () Option!139)

(assert (=> b!72352 (= e!47317 e!47318)))

(declare-fun c!10687 () Bool)

(assert (=> b!72352 (= c!10687 (and ((_ is Cons!1463) (toList!713 call!6119)) (not (= (_1!1066 (h!2049 (toList!713 call!6119))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))))

(declare-fun b!72354 () Bool)

(assert (=> b!72354 (= e!47318 None!137)))

(declare-fun b!72353 () Bool)

(assert (=> b!72353 (= e!47318 (getValueByKey!133 (t!4995 (toList!713 call!6119)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun c!10686 () Bool)

(declare-fun d!16559 () Bool)

(assert (=> d!16559 (= c!10686 (and ((_ is Cons!1463) (toList!713 call!6119)) (= (_1!1066 (h!2049 (toList!713 call!6119))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (=> d!16559 (= (getValueByKey!133 (toList!713 call!6119) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) e!47317)))

(declare-fun b!72351 () Bool)

(assert (=> b!72351 (= e!47317 (Some!138 (_2!1066 (h!2049 (toList!713 call!6119)))))))

(assert (= (and d!16559 c!10686) b!72351))

(assert (= (and d!16559 (not c!10686)) b!72352))

(assert (= (and b!72352 c!10687) b!72353))

(assert (= (and b!72352 (not c!10687)) b!72354))

(assert (=> b!72353 m!67819))

(declare-fun m!70313 () Bool)

(assert (=> b!72353 m!70313))

(assert (=> b!71434 d!16559))

(declare-fun d!16561 () Bool)

(assert (=> d!16561 (= (inRange!0 (ite c!10432 (index!3047 lt!31846) (ite c!10430 (index!3046 lt!31828) (index!3049 lt!31828))) (mask!6148 newMap!16)) (and (bvsge (ite c!10432 (index!3047 lt!31846) (ite c!10430 (index!3046 lt!31828) (index!3049 lt!31828))) #b00000000000000000000000000000000) (bvslt (ite c!10432 (index!3047 lt!31846) (ite c!10430 (index!3046 lt!31828) (index!3049 lt!31828))) (bvadd (mask!6148 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6191 d!16561))

(declare-fun d!16563 () Bool)

(assert (=> d!16563 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31441 lt!31220 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16563 true))

(declare-fun _$7!59 () Unit!1996)

(assert (=> d!16563 (= (choose!408 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) lt!31441 (zeroValue!2095 newMap!16) lt!31220 (minValue!2095 newMap!16) (defaultEntry!2191 newMap!16)) _$7!59)))

(declare-fun bs!3120 () Bool)

(assert (= bs!3120 d!16563))

(assert (=> bs!3120 m!67987))

(assert (=> bs!3120 m!67987))

(assert (=> bs!3120 m!68515))

(assert (=> bs!3120 m!68517))

(assert (=> d!15951 d!16563))

(declare-fun bm!6280 () Bool)

(declare-fun call!6285 () ListLongMap!1395)

(declare-fun call!6283 () ListLongMap!1395)

(assert (=> bm!6280 (= call!6285 call!6283)))

(declare-fun b!72355 () Bool)

(declare-fun e!47324 () ListLongMap!1395)

(assert (=> b!72355 (= e!47324 call!6285)))

(declare-fun b!72356 () Bool)

(declare-fun e!47321 () ListLongMap!1395)

(assert (=> b!72356 (= e!47321 (+!91 call!6283 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun b!72357 () Bool)

(declare-fun res!38441 () Bool)

(declare-fun e!47325 () Bool)

(assert (=> b!72357 (=> (not res!38441) (not e!47325))))

(declare-fun e!47329 () Bool)

(assert (=> b!72357 (= res!38441 e!47329)))

(declare-fun c!10690 () Bool)

(assert (=> b!72357 (= c!10690 (not (= (bvand lt!31441 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6281 () Bool)

(declare-fun call!6288 () Bool)

(declare-fun lt!32218 () ListLongMap!1395)

(assert (=> bm!6281 (= call!6288 (contains!715 lt!32218 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6282 () Bool)

(declare-fun call!6289 () Bool)

(assert (=> bm!6282 (= call!6289 (contains!715 lt!32218 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6283 () Bool)

(declare-fun call!6286 () ListLongMap!1395)

(assert (=> bm!6283 (= call!6286 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31441 lt!31220 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!72358 () Bool)

(declare-fun res!38449 () Bool)

(assert (=> b!72358 (=> (not res!38449) (not e!47325))))

(declare-fun e!47328 () Bool)

(assert (=> b!72358 (= res!38449 e!47328)))

(declare-fun res!38446 () Bool)

(assert (=> b!72358 (=> res!38446 e!47328)))

(declare-fun e!47326 () Bool)

(assert (=> b!72358 (= res!38446 (not e!47326))))

(declare-fun res!38442 () Bool)

(assert (=> b!72358 (=> (not res!38442) (not e!47326))))

(assert (=> b!72358 (= res!38442 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!72359 () Bool)

(declare-fun e!47320 () Bool)

(assert (=> b!72359 (= e!47325 e!47320)))

(declare-fun c!10688 () Bool)

(assert (=> b!72359 (= c!10688 (not (= (bvand lt!31441 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72360 () Bool)

(declare-fun e!47330 () Bool)

(assert (=> b!72360 (= e!47330 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72361 () Bool)

(declare-fun c!10693 () Bool)

(assert (=> b!72361 (= c!10693 (and (not (= (bvand lt!31441 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!31441 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47331 () ListLongMap!1395)

(assert (=> b!72361 (= e!47324 e!47331)))

(declare-fun b!72362 () Bool)

(declare-fun e!47322 () Unit!1996)

(declare-fun lt!32200 () Unit!1996)

(assert (=> b!72362 (= e!47322 lt!32200)))

(declare-fun lt!32211 () ListLongMap!1395)

(assert (=> b!72362 (= lt!32211 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31441 lt!31220 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32217 () (_ BitVec 64))

(assert (=> b!72362 (= lt!32217 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32214 () (_ BitVec 64))

(assert (=> b!72362 (= lt!32214 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32215 () Unit!1996)

(assert (=> b!72362 (= lt!32215 (addStillContains!50 lt!32211 lt!32217 lt!31220 lt!32214))))

(assert (=> b!72362 (contains!715 (+!91 lt!32211 (tuple2!2111 lt!32217 lt!31220)) lt!32214)))

(declare-fun lt!32209 () Unit!1996)

(assert (=> b!72362 (= lt!32209 lt!32215)))

(declare-fun lt!32212 () ListLongMap!1395)

(assert (=> b!72362 (= lt!32212 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31441 lt!31220 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32204 () (_ BitVec 64))

(assert (=> b!72362 (= lt!32204 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32216 () (_ BitVec 64))

(assert (=> b!72362 (= lt!32216 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32219 () Unit!1996)

(assert (=> b!72362 (= lt!32219 (addApplyDifferent!50 lt!32212 lt!32204 (minValue!2095 newMap!16) lt!32216))))

(assert (=> b!72362 (= (apply!74 (+!91 lt!32212 (tuple2!2111 lt!32204 (minValue!2095 newMap!16))) lt!32216) (apply!74 lt!32212 lt!32216))))

(declare-fun lt!32205 () Unit!1996)

(assert (=> b!72362 (= lt!32205 lt!32219)))

(declare-fun lt!32201 () ListLongMap!1395)

(assert (=> b!72362 (= lt!32201 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31441 lt!31220 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32207 () (_ BitVec 64))

(assert (=> b!72362 (= lt!32207 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32199 () (_ BitVec 64))

(assert (=> b!72362 (= lt!32199 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32202 () Unit!1996)

(assert (=> b!72362 (= lt!32202 (addApplyDifferent!50 lt!32201 lt!32207 lt!31220 lt!32199))))

(assert (=> b!72362 (= (apply!74 (+!91 lt!32201 (tuple2!2111 lt!32207 lt!31220)) lt!32199) (apply!74 lt!32201 lt!32199))))

(declare-fun lt!32206 () Unit!1996)

(assert (=> b!72362 (= lt!32206 lt!32202)))

(declare-fun lt!32210 () ListLongMap!1395)

(assert (=> b!72362 (= lt!32210 (getCurrentListMapNoExtraKeys!56 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31441 lt!31220 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32203 () (_ BitVec 64))

(assert (=> b!72362 (= lt!32203 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32208 () (_ BitVec 64))

(assert (=> b!72362 (= lt!32208 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72362 (= lt!32200 (addApplyDifferent!50 lt!32210 lt!32203 (minValue!2095 newMap!16) lt!32208))))

(assert (=> b!72362 (= (apply!74 (+!91 lt!32210 (tuple2!2111 lt!32203 (minValue!2095 newMap!16))) lt!32208) (apply!74 lt!32210 lt!32208))))

(declare-fun b!72363 () Bool)

(declare-fun call!6287 () ListLongMap!1395)

(assert (=> b!72363 (= e!47331 call!6287)))

(declare-fun call!6284 () ListLongMap!1395)

(declare-fun c!10691 () Bool)

(declare-fun bm!6284 () Bool)

(declare-fun c!10692 () Bool)

(assert (=> bm!6284 (= call!6283 (+!91 (ite c!10691 call!6286 (ite c!10692 call!6284 call!6287)) (ite (or c!10691 c!10692) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun b!72364 () Bool)

(declare-fun e!47323 () Bool)

(assert (=> b!72364 (= e!47320 e!47323)))

(declare-fun res!38444 () Bool)

(assert (=> b!72364 (= res!38444 call!6288)))

(assert (=> b!72364 (=> (not res!38444) (not e!47323))))

(declare-fun b!72365 () Bool)

(assert (=> b!72365 (= e!47323 (= (apply!74 lt!32218 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun bm!6285 () Bool)

(assert (=> bm!6285 (= call!6287 call!6284)))

(declare-fun b!72366 () Bool)

(assert (=> b!72366 (= e!47321 e!47324)))

(assert (=> b!72366 (= c!10692 (and (not (= (bvand lt!31441 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!31441 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72367 () Bool)

(declare-fun e!47319 () Bool)

(assert (=> b!72367 (= e!47329 e!47319)))

(declare-fun res!38445 () Bool)

(assert (=> b!72367 (= res!38445 call!6289)))

(assert (=> b!72367 (=> (not res!38445) (not e!47319))))

(declare-fun bm!6286 () Bool)

(assert (=> bm!6286 (= call!6284 call!6286)))

(declare-fun b!72368 () Bool)

(declare-fun e!47327 () Bool)

(assert (=> b!72368 (= e!47327 (= (apply!74 lt!32218 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72368 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (_values!2174 newMap!16))))))

(assert (=> b!72368 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun d!16565 () Bool)

(assert (=> d!16565 e!47325))

(declare-fun res!38447 () Bool)

(assert (=> d!16565 (=> (not res!38447) (not e!47325))))

(assert (=> d!16565 (= res!38447 (or (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))))

(declare-fun lt!32198 () ListLongMap!1395)

(assert (=> d!16565 (= lt!32218 lt!32198)))

(declare-fun lt!32213 () Unit!1996)

(assert (=> d!16565 (= lt!32213 e!47322)))

(declare-fun c!10689 () Bool)

(assert (=> d!16565 (= c!10689 e!47330)))

(declare-fun res!38443 () Bool)

(assert (=> d!16565 (=> (not res!38443) (not e!47330))))

(assert (=> d!16565 (= res!38443 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16565 (= lt!32198 e!47321)))

(assert (=> d!16565 (= c!10691 (and (not (= (bvand lt!31441 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!31441 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16565 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16565 (= (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) lt!31441 lt!31220 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32218)))

(declare-fun b!72369 () Bool)

(declare-fun Unit!2056 () Unit!1996)

(assert (=> b!72369 (= e!47322 Unit!2056)))

(declare-fun b!72370 () Bool)

(assert (=> b!72370 (= e!47319 (= (apply!74 lt!32218 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31220))))

(declare-fun b!72371 () Bool)

(assert (=> b!72371 (= e!47326 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72372 () Bool)

(assert (=> b!72372 (= e!47320 (not call!6288))))

(declare-fun b!72373 () Bool)

(assert (=> b!72373 (= e!47329 (not call!6289))))

(declare-fun b!72374 () Bool)

(assert (=> b!72374 (= e!47328 e!47327)))

(declare-fun res!38448 () Bool)

(assert (=> b!72374 (=> (not res!38448) (not e!47327))))

(assert (=> b!72374 (= res!38448 (contains!715 lt!32218 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72374 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!72375 () Bool)

(assert (=> b!72375 (= e!47331 call!6285)))

(assert (= (and d!16565 c!10691) b!72356))

(assert (= (and d!16565 (not c!10691)) b!72366))

(assert (= (and b!72366 c!10692) b!72355))

(assert (= (and b!72366 (not c!10692)) b!72361))

(assert (= (and b!72361 c!10693) b!72375))

(assert (= (and b!72361 (not c!10693)) b!72363))

(assert (= (or b!72375 b!72363) bm!6285))

(assert (= (or b!72355 bm!6285) bm!6286))

(assert (= (or b!72355 b!72375) bm!6280))

(assert (= (or b!72356 bm!6286) bm!6283))

(assert (= (or b!72356 bm!6280) bm!6284))

(assert (= (and d!16565 res!38443) b!72360))

(assert (= (and d!16565 c!10689) b!72362))

(assert (= (and d!16565 (not c!10689)) b!72369))

(assert (= (and d!16565 res!38447) b!72358))

(assert (= (and b!72358 res!38442) b!72371))

(assert (= (and b!72358 (not res!38446)) b!72374))

(assert (= (and b!72374 res!38448) b!72368))

(assert (= (and b!72358 res!38449) b!72357))

(assert (= (and b!72357 c!10690) b!72367))

(assert (= (and b!72357 (not c!10690)) b!72373))

(assert (= (and b!72367 res!38445) b!72370))

(assert (= (or b!72367 b!72373) bm!6282))

(assert (= (and b!72357 res!38441) b!72359))

(assert (= (and b!72359 c!10688) b!72364))

(assert (= (and b!72359 (not c!10688)) b!72372))

(assert (= (and b!72364 res!38444) b!72365))

(assert (= (or b!72364 b!72372) bm!6281))

(declare-fun b_lambda!3243 () Bool)

(assert (=> (not b_lambda!3243) (not b!72368)))

(assert (=> b!72368 t!5010))

(declare-fun b_and!4453 () Bool)

(assert (= b_and!4449 (and (=> t!5010 result!2661) b_and!4453)))

(assert (=> b!72368 t!5012))

(declare-fun b_and!4455 () Bool)

(assert (= b_and!4451 (and (=> t!5012 result!2663) b_and!4455)))

(declare-fun m!70315 () Bool)

(assert (=> b!72370 m!70315))

(declare-fun m!70317 () Bool)

(assert (=> b!72365 m!70317))

(assert (=> d!16565 m!68327))

(declare-fun m!70319 () Bool)

(assert (=> bm!6281 m!70319))

(assert (=> b!72371 m!68397))

(assert (=> b!72371 m!68397))

(assert (=> b!72371 m!68399))

(declare-fun m!70321 () Bool)

(assert (=> bm!6282 m!70321))

(assert (=> b!72374 m!68397))

(assert (=> b!72374 m!68397))

(declare-fun m!70323 () Bool)

(assert (=> b!72374 m!70323))

(assert (=> b!72360 m!68397))

(assert (=> b!72360 m!68397))

(assert (=> b!72360 m!68399))

(declare-fun m!70325 () Bool)

(assert (=> bm!6284 m!70325))

(declare-fun m!70327 () Bool)

(assert (=> bm!6283 m!70327))

(declare-fun m!70329 () Bool)

(assert (=> b!72356 m!70329))

(declare-fun m!70331 () Bool)

(assert (=> b!72362 m!70331))

(declare-fun m!70333 () Bool)

(assert (=> b!72362 m!70333))

(declare-fun m!70335 () Bool)

(assert (=> b!72362 m!70335))

(declare-fun m!70337 () Bool)

(assert (=> b!72362 m!70337))

(declare-fun m!70339 () Bool)

(assert (=> b!72362 m!70339))

(declare-fun m!70341 () Bool)

(assert (=> b!72362 m!70341))

(declare-fun m!70343 () Bool)

(assert (=> b!72362 m!70343))

(declare-fun m!70345 () Bool)

(assert (=> b!72362 m!70345))

(assert (=> b!72362 m!68397))

(assert (=> b!72362 m!70339))

(declare-fun m!70347 () Bool)

(assert (=> b!72362 m!70347))

(assert (=> b!72362 m!70335))

(declare-fun m!70349 () Bool)

(assert (=> b!72362 m!70349))

(declare-fun m!70351 () Bool)

(assert (=> b!72362 m!70351))

(declare-fun m!70353 () Bool)

(assert (=> b!72362 m!70353))

(declare-fun m!70355 () Bool)

(assert (=> b!72362 m!70355))

(assert (=> b!72362 m!70327))

(assert (=> b!72362 m!70349))

(declare-fun m!70357 () Bool)

(assert (=> b!72362 m!70357))

(declare-fun m!70359 () Bool)

(assert (=> b!72362 m!70359))

(assert (=> b!72362 m!70343))

(assert (=> b!72368 m!68441))

(assert (=> b!72368 m!68397))

(declare-fun m!70361 () Bool)

(assert (=> b!72368 m!70361))

(assert (=> b!72368 m!68793))

(assert (=> b!72368 m!68441))

(assert (=> b!72368 m!68795))

(assert (=> b!72368 m!68793))

(assert (=> b!72368 m!68397))

(assert (=> d!15951 d!16565))

(assert (=> d!15951 d!16019))

(declare-fun d!16567 () Bool)

(declare-fun e!47332 () Bool)

(assert (=> d!16567 e!47332))

(declare-fun res!38450 () Bool)

(assert (=> d!16567 (=> (not res!38450) (not e!47332))))

(declare-fun lt!32223 () ListLongMap!1395)

(assert (=> d!16567 (= res!38450 (contains!715 lt!32223 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220))))))

(declare-fun lt!32221 () List!1467)

(assert (=> d!16567 (= lt!32223 (ListLongMap!1396 lt!32221))))

(declare-fun lt!32222 () Unit!1996)

(declare-fun lt!32220 () Unit!1996)

(assert (=> d!16567 (= lt!32222 lt!32220)))

(assert (=> d!16567 (= (getValueByKey!133 lt!32221 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220))) (Some!138 (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220))))))

(assert (=> d!16567 (= lt!32220 (lemmaContainsTupThenGetReturnValue!50 lt!32221 (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220))))))

(assert (=> d!16567 (= lt!32221 (insertStrictlySorted!53 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220)) (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220))))))

(assert (=> d!16567 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220)) lt!32223)))

(declare-fun b!72376 () Bool)

(declare-fun res!38451 () Bool)

(assert (=> b!72376 (=> (not res!38451) (not e!47332))))

(assert (=> b!72376 (= res!38451 (= (getValueByKey!133 (toList!713 lt!32223) (_1!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220))) (Some!138 (_2!1066 (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220)))))))

(declare-fun b!72377 () Bool)

(assert (=> b!72377 (= e!47332 (contains!719 (toList!713 lt!32223) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31220)))))

(assert (= (and d!16567 res!38450) b!72376))

(assert (= (and b!72376 res!38451) b!72377))

(declare-fun m!70363 () Bool)

(assert (=> d!16567 m!70363))

(declare-fun m!70365 () Bool)

(assert (=> d!16567 m!70365))

(declare-fun m!70367 () Bool)

(assert (=> d!16567 m!70367))

(declare-fun m!70369 () Bool)

(assert (=> d!16567 m!70369))

(declare-fun m!70371 () Bool)

(assert (=> b!72376 m!70371))

(declare-fun m!70373 () Bool)

(assert (=> b!72377 m!70373))

(assert (=> d!15951 d!16567))

(assert (=> d!15951 d!16115))

(declare-fun d!16569 () Bool)

(declare-fun e!47334 () Bool)

(assert (=> d!16569 e!47334))

(declare-fun res!38452 () Bool)

(assert (=> d!16569 (=> res!38452 e!47334)))

(declare-fun lt!32227 () Bool)

(assert (=> d!16569 (= res!38452 (not lt!32227))))

(declare-fun lt!32226 () Bool)

(assert (=> d!16569 (= lt!32227 lt!32226)))

(declare-fun lt!32225 () Unit!1996)

(declare-fun e!47333 () Unit!1996)

(assert (=> d!16569 (= lt!32225 e!47333)))

(declare-fun c!10694 () Bool)

(assert (=> d!16569 (= c!10694 lt!32226)))

(assert (=> d!16569 (= lt!32226 (containsKey!136 (toList!713 lt!31874) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16569 (= (contains!715 lt!31874 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) lt!32227)))

(declare-fun b!72378 () Bool)

(declare-fun lt!32224 () Unit!1996)

(assert (=> b!72378 (= e!47333 lt!32224)))

(assert (=> b!72378 (= lt!32224 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31874) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72378 (isDefined!85 (getValueByKey!133 (toList!713 lt!31874) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72379 () Bool)

(declare-fun Unit!2057 () Unit!1996)

(assert (=> b!72379 (= e!47333 Unit!2057)))

(declare-fun b!72380 () Bool)

(assert (=> b!72380 (= e!47334 (isDefined!85 (getValueByKey!133 (toList!713 lt!31874) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16569 c!10694) b!72378))

(assert (= (and d!16569 (not c!10694)) b!72379))

(assert (= (and d!16569 (not res!38452)) b!72380))

(assert (=> d!16569 m!68397))

(declare-fun m!70375 () Bool)

(assert (=> d!16569 m!70375))

(assert (=> b!72378 m!68397))

(declare-fun m!70377 () Bool)

(assert (=> b!72378 m!70377))

(assert (=> b!72378 m!68397))

(declare-fun m!70379 () Bool)

(assert (=> b!72378 m!70379))

(assert (=> b!72378 m!70379))

(declare-fun m!70381 () Bool)

(assert (=> b!72378 m!70381))

(assert (=> b!72380 m!68397))

(assert (=> b!72380 m!70379))

(assert (=> b!72380 m!70379))

(assert (=> b!72380 m!70381))

(assert (=> b!71591 d!16569))

(declare-fun d!16571 () Bool)

(declare-fun lt!32228 () Bool)

(assert (=> d!16571 (= lt!32228 (select (content!76 lt!31723) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(declare-fun e!47336 () Bool)

(assert (=> d!16571 (= lt!32228 e!47336)))

(declare-fun res!38454 () Bool)

(assert (=> d!16571 (=> (not res!38454) (not e!47336))))

(assert (=> d!16571 (= res!38454 ((_ is Cons!1463) lt!31723))))

(assert (=> d!16571 (= (contains!719 lt!31723 (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))) lt!32228)))

(declare-fun b!72381 () Bool)

(declare-fun e!47335 () Bool)

(assert (=> b!72381 (= e!47336 e!47335)))

(declare-fun res!38453 () Bool)

(assert (=> b!72381 (=> res!38453 e!47335)))

(assert (=> b!72381 (= res!38453 (= (h!2049 lt!31723) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(declare-fun b!72382 () Bool)

(assert (=> b!72382 (= e!47335 (contains!719 (t!4995 lt!31723) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))))))

(assert (= (and d!16571 res!38454) b!72381))

(assert (= (and b!72381 (not res!38453)) b!72382))

(declare-fun m!70383 () Bool)

(assert (=> d!16571 m!70383))

(declare-fun m!70385 () Bool)

(assert (=> d!16571 m!70385))

(declare-fun m!70387 () Bool)

(assert (=> b!72382 m!70387))

(assert (=> b!71399 d!16571))

(declare-fun lt!32229 () Bool)

(declare-fun d!16573 () Bool)

(assert (=> d!16573 (= lt!32229 (select (content!76 (toList!713 lt!31636)) (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun e!47338 () Bool)

(assert (=> d!16573 (= lt!32229 e!47338)))

(declare-fun res!38456 () Bool)

(assert (=> d!16573 (=> (not res!38456) (not e!47338))))

(assert (=> d!16573 (= res!38456 ((_ is Cons!1463) (toList!713 lt!31636)))))

(assert (=> d!16573 (= (contains!719 (toList!713 lt!31636) (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!32229)))

(declare-fun b!72383 () Bool)

(declare-fun e!47337 () Bool)

(assert (=> b!72383 (= e!47338 e!47337)))

(declare-fun res!38455 () Bool)

(assert (=> b!72383 (=> res!38455 e!47337)))

(assert (=> b!72383 (= res!38455 (= (h!2049 (toList!713 lt!31636)) (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(declare-fun b!72384 () Bool)

(assert (=> b!72384 (= e!47337 (contains!719 (t!4995 (toList!713 lt!31636)) (tuple2!2111 lt!31354 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))))

(assert (= (and d!16573 res!38456) b!72383))

(assert (= (and b!72383 (not res!38455)) b!72384))

(declare-fun m!70389 () Bool)

(assert (=> d!16573 m!70389))

(declare-fun m!70391 () Bool)

(assert (=> d!16573 m!70391))

(declare-fun m!70393 () Bool)

(assert (=> b!72384 m!70393))

(assert (=> b!71284 d!16573))

(assert (=> d!16075 d!16115))

(declare-fun d!16575 () Bool)

(declare-fun res!38457 () Bool)

(declare-fun e!47339 () Bool)

(assert (=> d!16575 (=> res!38457 e!47339)))

(assert (=> d!16575 (= res!38457 (and ((_ is Cons!1463) (toList!713 lt!31365)) (= (_1!1066 (h!2049 (toList!713 lt!31365))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16575 (= (containsKey!136 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000) e!47339)))

(declare-fun b!72385 () Bool)

(declare-fun e!47340 () Bool)

(assert (=> b!72385 (= e!47339 e!47340)))

(declare-fun res!38458 () Bool)

(assert (=> b!72385 (=> (not res!38458) (not e!47340))))

(assert (=> b!72385 (= res!38458 (and (or (not ((_ is Cons!1463) (toList!713 lt!31365))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31365))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1463) (toList!713 lt!31365)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31365))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72386 () Bool)

(assert (=> b!72386 (= e!47340 (containsKey!136 (t!4995 (toList!713 lt!31365)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16575 (not res!38457)) b!72385))

(assert (= (and b!72385 res!38458) b!72386))

(declare-fun m!70395 () Bool)

(assert (=> b!72386 m!70395))

(assert (=> d!15997 d!16575))

(declare-fun b!72388 () Bool)

(declare-fun e!47341 () Option!139)

(declare-fun e!47342 () Option!139)

(assert (=> b!72388 (= e!47341 e!47342)))

(declare-fun c!10696 () Bool)

(assert (=> b!72388 (= c!10696 (and ((_ is Cons!1463) (toList!713 lt!31605)) (not (= (_1!1066 (h!2049 (toList!713 lt!31605))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun b!72390 () Bool)

(assert (=> b!72390 (= e!47342 None!137)))

(declare-fun b!72389 () Bool)

(assert (=> b!72389 (= e!47342 (getValueByKey!133 (t!4995 (toList!713 lt!31605)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun c!10695 () Bool)

(declare-fun d!16577 () Bool)

(assert (=> d!16577 (= c!10695 (and ((_ is Cons!1463) (toList!713 lt!31605)) (= (_1!1066 (h!2049 (toList!713 lt!31605))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!16577 (= (getValueByKey!133 (toList!713 lt!31605) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) e!47341)))

(declare-fun b!72387 () Bool)

(assert (=> b!72387 (= e!47341 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31605)))))))

(assert (= (and d!16577 c!10695) b!72387))

(assert (= (and d!16577 (not c!10695)) b!72388))

(assert (= (and b!72388 c!10696) b!72389))

(assert (= (and b!72388 (not c!10696)) b!72390))

(declare-fun m!70397 () Bool)

(assert (=> b!72389 m!70397))

(assert (=> b!71239 d!16577))

(declare-fun d!16579 () Bool)

(declare-fun lt!32230 () Bool)

(assert (=> d!16579 (= lt!32230 (select (content!76 lt!31514) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(declare-fun e!47344 () Bool)

(assert (=> d!16579 (= lt!32230 e!47344)))

(declare-fun res!38460 () Bool)

(assert (=> d!16579 (=> (not res!38460) (not e!47344))))

(assert (=> d!16579 (= res!38460 ((_ is Cons!1463) lt!31514))))

(assert (=> d!16579 (= (contains!719 lt!31514 (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))) lt!32230)))

(declare-fun b!72391 () Bool)

(declare-fun e!47343 () Bool)

(assert (=> b!72391 (= e!47344 e!47343)))

(declare-fun res!38459 () Bool)

(assert (=> b!72391 (=> res!38459 e!47343)))

(assert (=> b!72391 (= res!38459 (= (h!2049 lt!31514) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(declare-fun b!72392 () Bool)

(assert (=> b!72392 (= e!47343 (contains!719 (t!4995 lt!31514) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))))))

(assert (= (and d!16579 res!38460) b!72391))

(assert (= (and b!72391 (not res!38459)) b!72392))

(declare-fun m!70399 () Bool)

(assert (=> d!16579 m!70399))

(declare-fun m!70401 () Bool)

(assert (=> d!16579 m!70401))

(declare-fun m!70403 () Bool)

(assert (=> b!72392 m!70403))

(assert (=> b!71561 d!16579))

(declare-fun bm!6287 () Bool)

(declare-fun call!6290 () (_ BitVec 32))

(assert (=> bm!6287 (= call!6290 (arrayCountValidKeys!0 (_keys!3839 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!72393 () Bool)

(declare-fun e!47346 () (_ BitVec 32))

(assert (=> b!72393 (= e!47346 #b00000000000000000000000000000000)))

(declare-fun b!72394 () Bool)

(declare-fun e!47345 () (_ BitVec 32))

(assert (=> b!72394 (= e!47345 call!6290)))

(declare-fun b!72395 () Bool)

(assert (=> b!72395 (= e!47345 (bvadd #b00000000000000000000000000000001 call!6290))))

(declare-fun d!16581 () Bool)

(declare-fun lt!32231 () (_ BitVec 32))

(assert (=> d!16581 (and (bvsge lt!32231 #b00000000000000000000000000000000) (bvsle lt!32231 (bvsub (size!2081 (_keys!3839 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!16581 (= lt!32231 e!47346)))

(declare-fun c!10697 () Bool)

(assert (=> d!16581 (= c!10697 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16581 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2081 (_keys!3839 newMap!16)) (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16581 (= (arrayCountValidKeys!0 (_keys!3839 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))) lt!32231)))

(declare-fun b!72396 () Bool)

(assert (=> b!72396 (= e!47346 e!47345)))

(declare-fun c!10698 () Bool)

(assert (=> b!72396 (= c!10698 (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!16581 c!10697) b!72393))

(assert (= (and d!16581 (not c!10697)) b!72396))

(assert (= (and b!72396 c!10698) b!72395))

(assert (= (and b!72396 (not c!10698)) b!72394))

(assert (= (or b!72395 b!72394) bm!6287))

(declare-fun m!70405 () Bool)

(assert (=> bm!6287 m!70405))

(assert (=> b!72396 m!69285))

(assert (=> b!72396 m!69285))

(assert (=> b!72396 m!69291))

(assert (=> bm!6155 d!16581))

(declare-fun d!16583 () Bool)

(assert (=> d!16583 (= (apply!74 lt!31597 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (getValueByKey!133 (toList!713 lt!31597) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3121 () Bool)

(assert (= bs!3121 d!16583))

(assert (=> bs!3121 m!68397))

(assert (=> bs!3121 m!69875))

(assert (=> bs!3121 m!69875))

(declare-fun m!70407 () Bool)

(assert (=> bs!3121 m!70407))

(assert (=> b!71225 d!16583))

(declare-fun d!16585 () Bool)

(declare-fun c!10699 () Bool)

(assert (=> d!16585 (= c!10699 ((_ is ValueCellFull!890) (select (arr!1845 (ite c!10293 (_values!2174 newMap!16) lt!31437)) #b00000000000000000000000000000000)))))

(declare-fun e!47347 () V!2937)

(assert (=> d!16585 (= (get!1141 (select (arr!1845 (ite c!10293 (_values!2174 newMap!16) lt!31437)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47347)))

(declare-fun b!72397 () Bool)

(assert (=> b!72397 (= e!47347 (get!1144 (select (arr!1845 (ite c!10293 (_values!2174 newMap!16) lt!31437)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72398 () Bool)

(assert (=> b!72398 (= e!47347 (get!1145 (select (arr!1845 (ite c!10293 (_values!2174 newMap!16) lt!31437)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16585 c!10699) b!72397))

(assert (= (and d!16585 (not c!10699)) b!72398))

(assert (=> b!72397 m!68445))

(assert (=> b!72397 m!68441))

(declare-fun m!70409 () Bool)

(assert (=> b!72397 m!70409))

(assert (=> b!72398 m!68445))

(assert (=> b!72398 m!68441))

(declare-fun m!70411 () Bool)

(assert (=> b!72398 m!70411))

(assert (=> b!71225 d!16585))

(declare-fun d!16587 () Bool)

(declare-fun res!38461 () Bool)

(declare-fun e!47348 () Bool)

(assert (=> d!16587 (=> res!38461 e!47348)))

(assert (=> d!16587 (= res!38461 (= (select (arr!1844 (_keys!3839 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!16587 (= (arrayContainsKey!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!47348)))

(declare-fun b!72399 () Bool)

(declare-fun e!47349 () Bool)

(assert (=> b!72399 (= e!47348 e!47349)))

(declare-fun res!38462 () Bool)

(assert (=> b!72399 (=> (not res!38462) (not e!47349))))

(assert (=> b!72399 (= res!38462 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!72400 () Bool)

(assert (=> b!72400 (= e!47349 (arrayContainsKey!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16587 (not res!38461)) b!72399))

(assert (= (and b!72399 res!38462) b!72400))

(assert (=> d!16587 m!69285))

(assert (=> b!72400 m!67819))

(declare-fun m!70413 () Bool)

(assert (=> b!72400 m!70413))

(assert (=> b!71293 d!16587))

(assert (=> d!15975 d!15971))

(assert (=> d!15975 d!15959))

(declare-fun d!16589 () Bool)

(assert (=> d!16589 (contains!715 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31361)))

(assert (=> d!16589 true))

(declare-fun _$35!315 () Unit!1996)

(assert (=> d!16589 (= (choose!410 lt!31358 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31361) _$35!315)))

(declare-fun bs!3122 () Bool)

(assert (= bs!3122 d!16589))

(assert (=> bs!3122 m!68025))

(assert (=> bs!3122 m!68025))

(assert (=> bs!3122 m!68033))

(assert (=> d!15975 d!16589))

(declare-fun d!16591 () Bool)

(declare-fun e!47351 () Bool)

(assert (=> d!16591 e!47351))

(declare-fun res!38463 () Bool)

(assert (=> d!16591 (=> res!38463 e!47351)))

(declare-fun lt!32235 () Bool)

(assert (=> d!16591 (= res!38463 (not lt!32235))))

(declare-fun lt!32234 () Bool)

(assert (=> d!16591 (= lt!32235 lt!32234)))

(declare-fun lt!32233 () Unit!1996)

(declare-fun e!47350 () Unit!1996)

(assert (=> d!16591 (= lt!32233 e!47350)))

(declare-fun c!10700 () Bool)

(assert (=> d!16591 (= c!10700 lt!32234)))

(assert (=> d!16591 (= lt!32234 (containsKey!136 (toList!713 lt!31358) lt!31361))))

(assert (=> d!16591 (= (contains!715 lt!31358 lt!31361) lt!32235)))

(declare-fun b!72402 () Bool)

(declare-fun lt!32232 () Unit!1996)

(assert (=> b!72402 (= e!47350 lt!32232)))

(assert (=> b!72402 (= lt!32232 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31358) lt!31361))))

(assert (=> b!72402 (isDefined!85 (getValueByKey!133 (toList!713 lt!31358) lt!31361))))

(declare-fun b!72403 () Bool)

(declare-fun Unit!2058 () Unit!1996)

(assert (=> b!72403 (= e!47350 Unit!2058)))

(declare-fun b!72404 () Bool)

(assert (=> b!72404 (= e!47351 (isDefined!85 (getValueByKey!133 (toList!713 lt!31358) lt!31361)))))

(assert (= (and d!16591 c!10700) b!72402))

(assert (= (and d!16591 (not c!10700)) b!72403))

(assert (= (and d!16591 (not res!38463)) b!72404))

(declare-fun m!70415 () Bool)

(assert (=> d!16591 m!70415))

(declare-fun m!70417 () Bool)

(assert (=> b!72402 m!70417))

(declare-fun m!70419 () Bool)

(assert (=> b!72402 m!70419))

(assert (=> b!72402 m!70419))

(declare-fun m!70421 () Bool)

(assert (=> b!72402 m!70421))

(assert (=> b!72404 m!70419))

(assert (=> b!72404 m!70419))

(assert (=> b!72404 m!70421))

(assert (=> d!15975 d!16591))

(declare-fun d!16593 () Bool)

(declare-fun e!47352 () Bool)

(assert (=> d!16593 e!47352))

(declare-fun res!38464 () Bool)

(assert (=> d!16593 (=> (not res!38464) (not e!47352))))

(declare-fun lt!32239 () ListLongMap!1395)

(assert (=> d!16593 (= res!38464 (contains!715 lt!32239 (_1!1066 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16)))))))

(declare-fun lt!32237 () List!1467)

(assert (=> d!16593 (= lt!32239 (ListLongMap!1396 lt!32237))))

(declare-fun lt!32238 () Unit!1996)

(declare-fun lt!32236 () Unit!1996)

(assert (=> d!16593 (= lt!32238 lt!32236)))

(assert (=> d!16593 (= (getValueByKey!133 lt!32237 (_1!1066 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16593 (= lt!32236 (lemmaContainsTupThenGetReturnValue!50 lt!32237 (_1!1066 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16593 (= lt!32237 (insertStrictlySorted!53 (toList!713 lt!31709) (_1!1066 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16593 (= (+!91 lt!31709 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16))) lt!32239)))

(declare-fun b!72405 () Bool)

(declare-fun res!38465 () Bool)

(assert (=> b!72405 (=> (not res!38465) (not e!47352))))

(assert (=> b!72405 (= res!38465 (= (getValueByKey!133 (toList!713 lt!32239) (_1!1066 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16))))))))

(declare-fun b!72406 () Bool)

(assert (=> b!72406 (= e!47352 (contains!719 (toList!713 lt!32239) (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16))))))

(assert (= (and d!16593 res!38464) b!72405))

(assert (= (and b!72405 res!38465) b!72406))

(declare-fun m!70423 () Bool)

(assert (=> d!16593 m!70423))

(declare-fun m!70425 () Bool)

(assert (=> d!16593 m!70425))

(declare-fun m!70427 () Bool)

(assert (=> d!16593 m!70427))

(declare-fun m!70429 () Bool)

(assert (=> d!16593 m!70429))

(declare-fun m!70431 () Bool)

(assert (=> b!72405 m!70431))

(declare-fun m!70433 () Bool)

(assert (=> b!72406 m!70433))

(assert (=> b!71367 d!16593))

(declare-fun d!16595 () Bool)

(assert (=> d!16595 (= (apply!74 lt!31708 lt!31706) (get!1146 (getValueByKey!133 (toList!713 lt!31708) lt!31706)))))

(declare-fun bs!3123 () Bool)

(assert (= bs!3123 d!16595))

(declare-fun m!70435 () Bool)

(assert (=> bs!3123 m!70435))

(assert (=> bs!3123 m!70435))

(declare-fun m!70437 () Bool)

(assert (=> bs!3123 m!70437))

(assert (=> b!71367 d!16595))

(declare-fun d!16597 () Bool)

(assert (=> d!16597 (= (apply!74 lt!31699 lt!31697) (get!1146 (getValueByKey!133 (toList!713 lt!31699) lt!31697)))))

(declare-fun bs!3124 () Bool)

(assert (= bs!3124 d!16597))

(declare-fun m!70439 () Bool)

(assert (=> bs!3124 m!70439))

(assert (=> bs!3124 m!70439))

(declare-fun m!70441 () Bool)

(assert (=> bs!3124 m!70441))

(assert (=> b!71367 d!16597))

(declare-fun d!16599 () Bool)

(assert (=> d!16599 (= (apply!74 lt!31710 lt!31714) (get!1146 (getValueByKey!133 (toList!713 lt!31710) lt!31714)))))

(declare-fun bs!3125 () Bool)

(assert (= bs!3125 d!16599))

(declare-fun m!70443 () Bool)

(assert (=> bs!3125 m!70443))

(assert (=> bs!3125 m!70443))

(declare-fun m!70445 () Bool)

(assert (=> bs!3125 m!70445))

(assert (=> b!71367 d!16599))

(declare-fun d!16601 () Bool)

(declare-fun e!47354 () Bool)

(assert (=> d!16601 e!47354))

(declare-fun res!38466 () Bool)

(assert (=> d!16601 (=> res!38466 e!47354)))

(declare-fun lt!32243 () Bool)

(assert (=> d!16601 (= res!38466 (not lt!32243))))

(declare-fun lt!32242 () Bool)

(assert (=> d!16601 (= lt!32243 lt!32242)))

(declare-fun lt!32241 () Unit!1996)

(declare-fun e!47353 () Unit!1996)

(assert (=> d!16601 (= lt!32241 e!47353)))

(declare-fun c!10701 () Bool)

(assert (=> d!16601 (= c!10701 lt!32242)))

(assert (=> d!16601 (= lt!32242 (containsKey!136 (toList!713 (+!91 lt!31709 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16)))) lt!31712))))

(assert (=> d!16601 (= (contains!715 (+!91 lt!31709 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16))) lt!31712) lt!32243)))

(declare-fun b!72407 () Bool)

(declare-fun lt!32240 () Unit!1996)

(assert (=> b!72407 (= e!47353 lt!32240)))

(assert (=> b!72407 (= lt!32240 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (+!91 lt!31709 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16)))) lt!31712))))

(assert (=> b!72407 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31709 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16)))) lt!31712))))

(declare-fun b!72408 () Bool)

(declare-fun Unit!2059 () Unit!1996)

(assert (=> b!72408 (= e!47353 Unit!2059)))

(declare-fun b!72409 () Bool)

(assert (=> b!72409 (= e!47354 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31709 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16)))) lt!31712)))))

(assert (= (and d!16601 c!10701) b!72407))

(assert (= (and d!16601 (not c!10701)) b!72408))

(assert (= (and d!16601 (not res!38466)) b!72409))

(declare-fun m!70447 () Bool)

(assert (=> d!16601 m!70447))

(declare-fun m!70449 () Bool)

(assert (=> b!72407 m!70449))

(declare-fun m!70451 () Bool)

(assert (=> b!72407 m!70451))

(assert (=> b!72407 m!70451))

(declare-fun m!70453 () Bool)

(assert (=> b!72407 m!70453))

(assert (=> b!72409 m!70451))

(assert (=> b!72409 m!70451))

(assert (=> b!72409 m!70453))

(assert (=> b!71367 d!16601))

(declare-fun d!16603 () Bool)

(assert (=> d!16603 (= (apply!74 (+!91 lt!31710 (tuple2!2111 lt!31702 (minValue!2095 newMap!16))) lt!31714) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31710 (tuple2!2111 lt!31702 (minValue!2095 newMap!16)))) lt!31714)))))

(declare-fun bs!3126 () Bool)

(assert (= bs!3126 d!16603))

(declare-fun m!70455 () Bool)

(assert (=> bs!3126 m!70455))

(assert (=> bs!3126 m!70455))

(declare-fun m!70457 () Bool)

(assert (=> bs!3126 m!70457))

(assert (=> b!71367 d!16603))

(declare-fun d!16605 () Bool)

(assert (=> d!16605 (= (apply!74 (+!91 lt!31710 (tuple2!2111 lt!31702 (minValue!2095 newMap!16))) lt!31714) (apply!74 lt!31710 lt!31714))))

(declare-fun lt!32244 () Unit!1996)

(assert (=> d!16605 (= lt!32244 (choose!409 lt!31710 lt!31702 (minValue!2095 newMap!16) lt!31714))))

(declare-fun e!47355 () Bool)

(assert (=> d!16605 e!47355))

(declare-fun res!38467 () Bool)

(assert (=> d!16605 (=> (not res!38467) (not e!47355))))

(assert (=> d!16605 (= res!38467 (contains!715 lt!31710 lt!31714))))

(assert (=> d!16605 (= (addApplyDifferent!50 lt!31710 lt!31702 (minValue!2095 newMap!16) lt!31714) lt!32244)))

(declare-fun b!72410 () Bool)

(assert (=> b!72410 (= e!47355 (not (= lt!31714 lt!31702)))))

(assert (= (and d!16605 res!38467) b!72410))

(assert (=> d!16605 m!68761))

(declare-fun m!70459 () Bool)

(assert (=> d!16605 m!70459))

(assert (=> d!16605 m!68773))

(assert (=> d!16605 m!68775))

(assert (=> d!16605 m!68773))

(declare-fun m!70461 () Bool)

(assert (=> d!16605 m!70461))

(assert (=> b!71367 d!16605))

(declare-fun d!16607 () Bool)

(declare-fun e!47356 () Bool)

(assert (=> d!16607 e!47356))

(declare-fun res!38468 () Bool)

(assert (=> d!16607 (=> (not res!38468) (not e!47356))))

(declare-fun lt!32248 () ListLongMap!1395)

(assert (=> d!16607 (= res!38468 (contains!715 lt!32248 (_1!1066 (tuple2!2111 lt!31702 (minValue!2095 newMap!16)))))))

(declare-fun lt!32246 () List!1467)

(assert (=> d!16607 (= lt!32248 (ListLongMap!1396 lt!32246))))

(declare-fun lt!32247 () Unit!1996)

(declare-fun lt!32245 () Unit!1996)

(assert (=> d!16607 (= lt!32247 lt!32245)))

(assert (=> d!16607 (= (getValueByKey!133 lt!32246 (_1!1066 (tuple2!2111 lt!31702 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31702 (minValue!2095 newMap!16)))))))

(assert (=> d!16607 (= lt!32245 (lemmaContainsTupThenGetReturnValue!50 lt!32246 (_1!1066 (tuple2!2111 lt!31702 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31702 (minValue!2095 newMap!16)))))))

(assert (=> d!16607 (= lt!32246 (insertStrictlySorted!53 (toList!713 lt!31710) (_1!1066 (tuple2!2111 lt!31702 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31702 (minValue!2095 newMap!16)))))))

(assert (=> d!16607 (= (+!91 lt!31710 (tuple2!2111 lt!31702 (minValue!2095 newMap!16))) lt!32248)))

(declare-fun b!72411 () Bool)

(declare-fun res!38469 () Bool)

(assert (=> b!72411 (=> (not res!38469) (not e!47356))))

(assert (=> b!72411 (= res!38469 (= (getValueByKey!133 (toList!713 lt!32248) (_1!1066 (tuple2!2111 lt!31702 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31702 (minValue!2095 newMap!16))))))))

(declare-fun b!72412 () Bool)

(assert (=> b!72412 (= e!47356 (contains!719 (toList!713 lt!32248) (tuple2!2111 lt!31702 (minValue!2095 newMap!16))))))

(assert (= (and d!16607 res!38468) b!72411))

(assert (= (and b!72411 res!38469) b!72412))

(declare-fun m!70463 () Bool)

(assert (=> d!16607 m!70463))

(declare-fun m!70465 () Bool)

(assert (=> d!16607 m!70465))

(declare-fun m!70467 () Bool)

(assert (=> d!16607 m!70467))

(declare-fun m!70469 () Bool)

(assert (=> d!16607 m!70469))

(declare-fun m!70471 () Bool)

(assert (=> b!72411 m!70471))

(declare-fun m!70473 () Bool)

(assert (=> b!72412 m!70473))

(assert (=> b!71367 d!16607))

(declare-fun d!16609 () Bool)

(assert (=> d!16609 (= (apply!74 (+!91 lt!31708 (tuple2!2111 lt!31701 (minValue!2095 newMap!16))) lt!31706) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31708 (tuple2!2111 lt!31701 (minValue!2095 newMap!16)))) lt!31706)))))

(declare-fun bs!3127 () Bool)

(assert (= bs!3127 d!16609))

(declare-fun m!70475 () Bool)

(assert (=> bs!3127 m!70475))

(assert (=> bs!3127 m!70475))

(declare-fun m!70477 () Bool)

(assert (=> bs!3127 m!70477))

(assert (=> b!71367 d!16609))

(declare-fun d!16611 () Bool)

(declare-fun e!47357 () Bool)

(assert (=> d!16611 e!47357))

(declare-fun res!38470 () Bool)

(assert (=> d!16611 (=> (not res!38470) (not e!47357))))

(declare-fun lt!32252 () ListLongMap!1395)

(assert (=> d!16611 (= res!38470 (contains!715 lt!32252 (_1!1066 (tuple2!2111 lt!31701 (minValue!2095 newMap!16)))))))

(declare-fun lt!32250 () List!1467)

(assert (=> d!16611 (= lt!32252 (ListLongMap!1396 lt!32250))))

(declare-fun lt!32251 () Unit!1996)

(declare-fun lt!32249 () Unit!1996)

(assert (=> d!16611 (= lt!32251 lt!32249)))

(assert (=> d!16611 (= (getValueByKey!133 lt!32250 (_1!1066 (tuple2!2111 lt!31701 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31701 (minValue!2095 newMap!16)))))))

(assert (=> d!16611 (= lt!32249 (lemmaContainsTupThenGetReturnValue!50 lt!32250 (_1!1066 (tuple2!2111 lt!31701 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31701 (minValue!2095 newMap!16)))))))

(assert (=> d!16611 (= lt!32250 (insertStrictlySorted!53 (toList!713 lt!31708) (_1!1066 (tuple2!2111 lt!31701 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31701 (minValue!2095 newMap!16)))))))

(assert (=> d!16611 (= (+!91 lt!31708 (tuple2!2111 lt!31701 (minValue!2095 newMap!16))) lt!32252)))

(declare-fun b!72413 () Bool)

(declare-fun res!38471 () Bool)

(assert (=> b!72413 (=> (not res!38471) (not e!47357))))

(assert (=> b!72413 (= res!38471 (= (getValueByKey!133 (toList!713 lt!32252) (_1!1066 (tuple2!2111 lt!31701 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31701 (minValue!2095 newMap!16))))))))

(declare-fun b!72414 () Bool)

(assert (=> b!72414 (= e!47357 (contains!719 (toList!713 lt!32252) (tuple2!2111 lt!31701 (minValue!2095 newMap!16))))))

(assert (= (and d!16611 res!38470) b!72413))

(assert (= (and b!72413 res!38471) b!72414))

(declare-fun m!70479 () Bool)

(assert (=> d!16611 m!70479))

(declare-fun m!70481 () Bool)

(assert (=> d!16611 m!70481))

(declare-fun m!70483 () Bool)

(assert (=> d!16611 m!70483))

(declare-fun m!70485 () Bool)

(assert (=> d!16611 m!70485))

(declare-fun m!70487 () Bool)

(assert (=> b!72413 m!70487))

(declare-fun m!70489 () Bool)

(assert (=> b!72414 m!70489))

(assert (=> b!71367 d!16611))

(declare-fun d!16613 () Bool)

(assert (=> d!16613 (= (apply!74 (+!91 lt!31699 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16))) lt!31697) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31699 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16)))) lt!31697)))))

(declare-fun bs!3128 () Bool)

(assert (= bs!3128 d!16613))

(declare-fun m!70491 () Bool)

(assert (=> bs!3128 m!70491))

(assert (=> bs!3128 m!70491))

(declare-fun m!70493 () Bool)

(assert (=> bs!3128 m!70493))

(assert (=> b!71367 d!16613))

(declare-fun d!16615 () Bool)

(assert (=> d!16615 (= (apply!74 (+!91 lt!31699 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16))) lt!31697) (apply!74 lt!31699 lt!31697))))

(declare-fun lt!32253 () Unit!1996)

(assert (=> d!16615 (= lt!32253 (choose!409 lt!31699 lt!31705 (zeroValue!2095 newMap!16) lt!31697))))

(declare-fun e!47358 () Bool)

(assert (=> d!16615 e!47358))

(declare-fun res!38472 () Bool)

(assert (=> d!16615 (=> (not res!38472) (not e!47358))))

(assert (=> d!16615 (= res!38472 (contains!715 lt!31699 lt!31697))))

(assert (=> d!16615 (= (addApplyDifferent!50 lt!31699 lt!31705 (zeroValue!2095 newMap!16) lt!31697) lt!32253)))

(declare-fun b!72415 () Bool)

(assert (=> b!72415 (= e!47358 (not (= lt!31697 lt!31705)))))

(assert (= (and d!16615 res!38472) b!72415))

(assert (=> d!16615 m!68781))

(declare-fun m!70495 () Bool)

(assert (=> d!16615 m!70495))

(assert (=> d!16615 m!68769))

(assert (=> d!16615 m!68771))

(assert (=> d!16615 m!68769))

(declare-fun m!70497 () Bool)

(assert (=> d!16615 m!70497))

(assert (=> b!71367 d!16615))

(declare-fun d!16617 () Bool)

(assert (=> d!16617 (contains!715 (+!91 lt!31709 (tuple2!2111 lt!31715 (zeroValue!2095 newMap!16))) lt!31712)))

(declare-fun lt!32254 () Unit!1996)

(assert (=> d!16617 (= lt!32254 (choose!410 lt!31709 lt!31715 (zeroValue!2095 newMap!16) lt!31712))))

(assert (=> d!16617 (contains!715 lt!31709 lt!31712)))

(assert (=> d!16617 (= (addStillContains!50 lt!31709 lt!31715 (zeroValue!2095 newMap!16) lt!31712) lt!32254)))

(declare-fun bs!3129 () Bool)

(assert (= bs!3129 d!16617))

(assert (=> bs!3129 m!68779))

(assert (=> bs!3129 m!68779))

(assert (=> bs!3129 m!68787))

(declare-fun m!70499 () Bool)

(assert (=> bs!3129 m!70499))

(declare-fun m!70501 () Bool)

(assert (=> bs!3129 m!70501))

(assert (=> b!71367 d!16617))

(declare-fun d!16619 () Bool)

(assert (=> d!16619 (= (apply!74 (+!91 lt!31708 (tuple2!2111 lt!31701 (minValue!2095 newMap!16))) lt!31706) (apply!74 lt!31708 lt!31706))))

(declare-fun lt!32255 () Unit!1996)

(assert (=> d!16619 (= lt!32255 (choose!409 lt!31708 lt!31701 (minValue!2095 newMap!16) lt!31706))))

(declare-fun e!47359 () Bool)

(assert (=> d!16619 e!47359))

(declare-fun res!38473 () Bool)

(assert (=> d!16619 (=> (not res!38473) (not e!47359))))

(assert (=> d!16619 (= res!38473 (contains!715 lt!31708 lt!31706))))

(assert (=> d!16619 (= (addApplyDifferent!50 lt!31708 lt!31701 (minValue!2095 newMap!16) lt!31706) lt!32255)))

(declare-fun b!72416 () Bool)

(assert (=> b!72416 (= e!47359 (not (= lt!31706 lt!31701)))))

(assert (= (and d!16619 res!38473) b!72416))

(assert (=> d!16619 m!68763))

(declare-fun m!70503 () Bool)

(assert (=> d!16619 m!70503))

(assert (=> d!16619 m!68765))

(assert (=> d!16619 m!68767))

(assert (=> d!16619 m!68765))

(declare-fun m!70505 () Bool)

(assert (=> d!16619 m!70505))

(assert (=> b!71367 d!16619))

(declare-fun d!16621 () Bool)

(declare-fun e!47360 () Bool)

(assert (=> d!16621 e!47360))

(declare-fun res!38474 () Bool)

(assert (=> d!16621 (=> (not res!38474) (not e!47360))))

(declare-fun lt!32259 () ListLongMap!1395)

(assert (=> d!16621 (= res!38474 (contains!715 lt!32259 (_1!1066 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16)))))))

(declare-fun lt!32257 () List!1467)

(assert (=> d!16621 (= lt!32259 (ListLongMap!1396 lt!32257))))

(declare-fun lt!32258 () Unit!1996)

(declare-fun lt!32256 () Unit!1996)

(assert (=> d!16621 (= lt!32258 lt!32256)))

(assert (=> d!16621 (= (getValueByKey!133 lt!32257 (_1!1066 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16621 (= lt!32256 (lemmaContainsTupThenGetReturnValue!50 lt!32257 (_1!1066 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16621 (= lt!32257 (insertStrictlySorted!53 (toList!713 lt!31699) (_1!1066 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16621 (= (+!91 lt!31699 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16))) lt!32259)))

(declare-fun b!72417 () Bool)

(declare-fun res!38475 () Bool)

(assert (=> b!72417 (=> (not res!38475) (not e!47360))))

(assert (=> b!72417 (= res!38475 (= (getValueByKey!133 (toList!713 lt!32259) (_1!1066 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16))))))))

(declare-fun b!72418 () Bool)

(assert (=> b!72418 (= e!47360 (contains!719 (toList!713 lt!32259) (tuple2!2111 lt!31705 (zeroValue!2095 newMap!16))))))

(assert (= (and d!16621 res!38474) b!72417))

(assert (= (and b!72417 res!38475) b!72418))

(declare-fun m!70507 () Bool)

(assert (=> d!16621 m!70507))

(declare-fun m!70509 () Bool)

(assert (=> d!16621 m!70509))

(declare-fun m!70511 () Bool)

(assert (=> d!16621 m!70511))

(declare-fun m!70513 () Bool)

(assert (=> d!16621 m!70513))

(declare-fun m!70515 () Bool)

(assert (=> b!72417 m!70515))

(declare-fun m!70517 () Bool)

(assert (=> b!72418 m!70517))

(assert (=> b!71367 d!16621))

(assert (=> b!71367 d!16167))

(declare-fun bm!6288 () Bool)

(declare-fun call!6291 () Bool)

(declare-fun c!10702 () Bool)

(assert (=> bm!6288 (= call!6291 (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10702 (Cons!1464 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000) Nil!1465) Nil!1465)))))

(declare-fun b!72419 () Bool)

(declare-fun e!47361 () Bool)

(assert (=> b!72419 (= e!47361 (contains!718 Nil!1465 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!72420 () Bool)

(declare-fun e!47364 () Bool)

(declare-fun e!47362 () Bool)

(assert (=> b!72420 (= e!47364 e!47362)))

(assert (=> b!72420 (= c!10702 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!72421 () Bool)

(declare-fun e!47363 () Bool)

(assert (=> b!72421 (= e!47363 e!47364)))

(declare-fun res!38477 () Bool)

(assert (=> b!72421 (=> (not res!38477) (not e!47364))))

(assert (=> b!72421 (= res!38477 (not e!47361))))

(declare-fun res!38478 () Bool)

(assert (=> b!72421 (=> (not res!38478) (not e!47361))))

(assert (=> b!72421 (= res!38478 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!16623 () Bool)

(declare-fun res!38476 () Bool)

(assert (=> d!16623 (=> res!38476 e!47363)))

(assert (=> d!16623 (= res!38476 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992))))))))

(assert (=> d!16623 (= (arrayNoDuplicates!0 (_keys!3839 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000 Nil!1465) e!47363)))

(declare-fun b!72422 () Bool)

(assert (=> b!72422 (= e!47362 call!6291)))

(declare-fun b!72423 () Bool)

(assert (=> b!72423 (= e!47362 call!6291)))

(assert (= (and d!16623 (not res!38476)) b!72421))

(assert (= (and b!72421 res!38478) b!72419))

(assert (= (and b!72421 res!38477) b!72420))

(assert (= (and b!72420 c!10702) b!72423))

(assert (= (and b!72420 (not c!10702)) b!72422))

(assert (= (or b!72423 b!72422) bm!6288))

(assert (=> bm!6288 m!69975))

(declare-fun m!70519 () Bool)

(assert (=> bm!6288 m!70519))

(assert (=> b!72419 m!69975))

(assert (=> b!72419 m!69975))

(declare-fun m!70521 () Bool)

(assert (=> b!72419 m!70521))

(assert (=> b!72420 m!69975))

(assert (=> b!72420 m!69975))

(assert (=> b!72420 m!69977))

(assert (=> b!72421 m!69975))

(assert (=> b!72421 m!69975))

(assert (=> b!72421 m!69977))

(assert (=> b!71259 d!16623))

(assert (=> b!71341 d!16095))

(declare-fun b!72425 () Bool)

(declare-fun e!47365 () Option!139)

(declare-fun e!47366 () Option!139)

(assert (=> b!72425 (= e!47365 e!47366)))

(declare-fun c!10704 () Bool)

(assert (=> b!72425 (= c!10704 (and ((_ is Cons!1463) (toList!713 lt!31535)) (not (= (_1!1066 (h!2049 (toList!713 lt!31535))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!72427 () Bool)

(assert (=> b!72427 (= e!47366 None!137)))

(declare-fun b!72426 () Bool)

(assert (=> b!72426 (= e!47366 (getValueByKey!133 (t!4995 (toList!713 lt!31535)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!10703 () Bool)

(declare-fun d!16625 () Bool)

(assert (=> d!16625 (= c!10703 (and ((_ is Cons!1463) (toList!713 lt!31535)) (= (_1!1066 (h!2049 (toList!713 lt!31535))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!16625 (= (getValueByKey!133 (toList!713 lt!31535) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!47365)))

(declare-fun b!72424 () Bool)

(assert (=> b!72424 (= e!47365 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31535)))))))

(assert (= (and d!16625 c!10703) b!72424))

(assert (= (and d!16625 (not c!10703)) b!72425))

(assert (= (and b!72425 c!10704) b!72426))

(assert (= (and b!72425 (not c!10704)) b!72427))

(declare-fun m!70523 () Bool)

(assert (=> b!72426 m!70523))

(assert (=> b!71136 d!16625))

(declare-fun d!16627 () Bool)

(declare-fun res!38479 () Bool)

(declare-fun e!47367 () Bool)

(assert (=> d!16627 (=> res!38479 e!47367)))

(assert (=> d!16627 (= res!38479 (and ((_ is Cons!1463) (toList!713 lt!31480)) (= (_1!1066 (h!2049 (toList!713 lt!31480))) (_1!1066 lt!31223))))))

(assert (=> d!16627 (= (containsKey!136 (toList!713 lt!31480) (_1!1066 lt!31223)) e!47367)))

(declare-fun b!72428 () Bool)

(declare-fun e!47368 () Bool)

(assert (=> b!72428 (= e!47367 e!47368)))

(declare-fun res!38480 () Bool)

(assert (=> b!72428 (=> (not res!38480) (not e!47368))))

(assert (=> b!72428 (= res!38480 (and (or (not ((_ is Cons!1463) (toList!713 lt!31480))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31480))) (_1!1066 lt!31223))) ((_ is Cons!1463) (toList!713 lt!31480)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31480))) (_1!1066 lt!31223))))))

(declare-fun b!72429 () Bool)

(assert (=> b!72429 (= e!47368 (containsKey!136 (t!4995 (toList!713 lt!31480)) (_1!1066 lt!31223)))))

(assert (= (and d!16627 (not res!38479)) b!72428))

(assert (= (and b!72428 res!38480) b!72429))

(declare-fun m!70525 () Bool)

(assert (=> b!72429 m!70525))

(assert (=> d!16021 d!16627))

(assert (=> d!16041 d!15999))

(declare-fun d!16629 () Bool)

(declare-fun e!47371 () Bool)

(assert (=> d!16629 e!47371))

(declare-fun res!38485 () Bool)

(assert (=> d!16629 (=> (not res!38485) (not e!47371))))

(declare-fun lt!32262 () SeekEntryResult!229)

(assert (=> d!16629 (= res!38485 ((_ is Found!229) lt!32262))))

(assert (=> d!16629 (= lt!32262 (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(assert (=> d!16629 true))

(declare-fun _$33!57 () Unit!1996)

(assert (=> d!16629 (= (choose!413 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)) _$33!57)))

(declare-fun b!72434 () Bool)

(declare-fun res!38486 () Bool)

(assert (=> b!72434 (=> (not res!38486) (not e!47371))))

(assert (=> b!72434 (= res!38486 (inRange!0 (index!3047 lt!32262) (mask!6148 newMap!16)))))

(declare-fun b!72435 () Bool)

(assert (=> b!72435 (= e!47371 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3047 lt!32262)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (= (and d!16629 res!38485) b!72434))

(assert (= (and b!72434 res!38486) b!72435))

(assert (=> d!16629 m!67819))

(assert (=> d!16629 m!68061))

(declare-fun m!70527 () Bool)

(assert (=> b!72434 m!70527))

(declare-fun m!70529 () Bool)

(assert (=> b!72435 m!70529))

(assert (=> d!16041 d!16629))

(assert (=> d!16041 d!16115))

(declare-fun d!16631 () Bool)

(declare-fun e!47373 () Bool)

(assert (=> d!16631 e!47373))

(declare-fun res!38487 () Bool)

(assert (=> d!16631 (=> res!38487 e!47373)))

(declare-fun lt!32266 () Bool)

(assert (=> d!16631 (= res!38487 (not lt!32266))))

(declare-fun lt!32265 () Bool)

(assert (=> d!16631 (= lt!32266 lt!32265)))

(declare-fun lt!32264 () Unit!1996)

(declare-fun e!47372 () Unit!1996)

(assert (=> d!16631 (= lt!32264 e!47372)))

(declare-fun c!10705 () Bool)

(assert (=> d!16631 (= c!10705 lt!32265)))

(assert (=> d!16631 (= lt!32265 (containsKey!136 (toList!713 lt!31605) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!16631 (= (contains!715 lt!31605 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!32266)))

(declare-fun b!72436 () Bool)

(declare-fun lt!32263 () Unit!1996)

(assert (=> b!72436 (= e!47372 lt!32263)))

(assert (=> b!72436 (= lt!32263 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31605) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> b!72436 (isDefined!85 (getValueByKey!133 (toList!713 lt!31605) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72437 () Bool)

(declare-fun Unit!2060 () Unit!1996)

(assert (=> b!72437 (= e!47372 Unit!2060)))

(declare-fun b!72438 () Bool)

(assert (=> b!72438 (= e!47373 (isDefined!85 (getValueByKey!133 (toList!713 lt!31605) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (= (and d!16631 c!10705) b!72436))

(assert (= (and d!16631 (not c!10705)) b!72437))

(assert (= (and d!16631 (not res!38487)) b!72438))

(declare-fun m!70531 () Bool)

(assert (=> d!16631 m!70531))

(declare-fun m!70533 () Bool)

(assert (=> b!72436 m!70533))

(assert (=> b!72436 m!68463))

(assert (=> b!72436 m!68463))

(declare-fun m!70535 () Bool)

(assert (=> b!72436 m!70535))

(assert (=> b!72438 m!68463))

(assert (=> b!72438 m!68463))

(assert (=> b!72438 m!70535))

(assert (=> d!15927 d!16631))

(declare-fun b!72440 () Bool)

(declare-fun e!47374 () Option!139)

(declare-fun e!47375 () Option!139)

(assert (=> b!72440 (= e!47374 e!47375)))

(declare-fun c!10707 () Bool)

(assert (=> b!72440 (= c!10707 (and ((_ is Cons!1463) lt!31603) (not (= (_1!1066 (h!2049 lt!31603)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun b!72442 () Bool)

(assert (=> b!72442 (= e!47375 None!137)))

(declare-fun b!72441 () Bool)

(assert (=> b!72441 (= e!47375 (getValueByKey!133 (t!4995 lt!31603) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun c!10706 () Bool)

(declare-fun d!16633 () Bool)

(assert (=> d!16633 (= c!10706 (and ((_ is Cons!1463) lt!31603) (= (_1!1066 (h!2049 lt!31603)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!16633 (= (getValueByKey!133 lt!31603 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) e!47374)))

(declare-fun b!72439 () Bool)

(assert (=> b!72439 (= e!47374 (Some!138 (_2!1066 (h!2049 lt!31603))))))

(assert (= (and d!16633 c!10706) b!72439))

(assert (= (and d!16633 (not c!10706)) b!72440))

(assert (= (and b!72440 c!10707) b!72441))

(assert (= (and b!72440 (not c!10707)) b!72442))

(declare-fun m!70537 () Bool)

(assert (=> b!72441 m!70537))

(assert (=> d!15927 d!16633))

(declare-fun d!16635 () Bool)

(assert (=> d!16635 (= (getValueByKey!133 lt!31603 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun lt!32267 () Unit!1996)

(assert (=> d!16635 (= lt!32267 (choose!406 lt!31603 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun e!47376 () Bool)

(assert (=> d!16635 e!47376))

(declare-fun res!38488 () Bool)

(assert (=> d!16635 (=> (not res!38488) (not e!47376))))

(assert (=> d!16635 (= res!38488 (isStrictlySorted!278 lt!31603))))

(assert (=> d!16635 (= (lemmaContainsTupThenGetReturnValue!50 lt!31603 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!32267)))

(declare-fun b!72443 () Bool)

(declare-fun res!38489 () Bool)

(assert (=> b!72443 (=> (not res!38489) (not e!47376))))

(assert (=> b!72443 (= res!38489 (containsKey!136 lt!31603 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72444 () Bool)

(assert (=> b!72444 (= e!47376 (contains!719 lt!31603 (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (= (and d!16635 res!38488) b!72443))

(assert (= (and b!72443 res!38489) b!72444))

(assert (=> d!16635 m!68457))

(declare-fun m!70539 () Bool)

(assert (=> d!16635 m!70539))

(declare-fun m!70541 () Bool)

(assert (=> d!16635 m!70541))

(declare-fun m!70543 () Bool)

(assert (=> b!72443 m!70543))

(declare-fun m!70545 () Bool)

(assert (=> b!72444 m!70545))

(assert (=> d!15927 d!16635))

(declare-fun b!72445 () Bool)

(declare-fun e!47381 () List!1467)

(declare-fun call!6294 () List!1467)

(assert (=> b!72445 (= e!47381 call!6294)))

(declare-fun c!10711 () Bool)

(declare-fun bm!6289 () Bool)

(declare-fun e!47380 () List!1467)

(assert (=> bm!6289 (= call!6294 ($colon$colon!64 e!47380 (ite c!10711 (h!2049 (toList!713 call!6110)) (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))))

(declare-fun c!10710 () Bool)

(assert (=> bm!6289 (= c!10710 c!10711)))

(declare-fun d!16637 () Bool)

(declare-fun e!47379 () Bool)

(assert (=> d!16637 e!47379))

(declare-fun res!38491 () Bool)

(assert (=> d!16637 (=> (not res!38491) (not e!47379))))

(declare-fun lt!32268 () List!1467)

(assert (=> d!16637 (= res!38491 (isStrictlySorted!278 lt!32268))))

(assert (=> d!16637 (= lt!32268 e!47381)))

(assert (=> d!16637 (= c!10711 (and ((_ is Cons!1463) (toList!713 call!6110)) (bvslt (_1!1066 (h!2049 (toList!713 call!6110))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (=> d!16637 (isStrictlySorted!278 (toList!713 call!6110))))

(assert (=> d!16637 (= (insertStrictlySorted!53 (toList!713 call!6110) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) lt!32268)))

(declare-fun b!72446 () Bool)

(declare-fun e!47377 () List!1467)

(declare-fun call!6292 () List!1467)

(assert (=> b!72446 (= e!47377 call!6292)))

(declare-fun b!72447 () Bool)

(declare-fun c!10708 () Bool)

(assert (=> b!72447 (= c!10708 (and ((_ is Cons!1463) (toList!713 call!6110)) (bvsgt (_1!1066 (h!2049 (toList!713 call!6110))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun e!47378 () List!1467)

(assert (=> b!72447 (= e!47377 e!47378)))

(declare-fun b!72448 () Bool)

(declare-fun call!6293 () List!1467)

(assert (=> b!72448 (= e!47378 call!6293)))

(declare-fun b!72449 () Bool)

(assert (=> b!72449 (= e!47378 call!6293)))

(declare-fun b!72450 () Bool)

(declare-fun res!38490 () Bool)

(assert (=> b!72450 (=> (not res!38490) (not e!47379))))

(assert (=> b!72450 (= res!38490 (containsKey!136 lt!32268 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun c!10709 () Bool)

(declare-fun b!72451 () Bool)

(assert (=> b!72451 (= e!47380 (ite c!10709 (t!4995 (toList!713 call!6110)) (ite c!10708 (Cons!1463 (h!2049 (toList!713 call!6110)) (t!4995 (toList!713 call!6110))) Nil!1464)))))

(declare-fun bm!6290 () Bool)

(assert (=> bm!6290 (= call!6292 call!6294)))

(declare-fun b!72452 () Bool)

(assert (=> b!72452 (= e!47381 e!47377)))

(assert (=> b!72452 (= c!10709 (and ((_ is Cons!1463) (toList!713 call!6110)) (= (_1!1066 (h!2049 (toList!713 call!6110))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun bm!6291 () Bool)

(assert (=> bm!6291 (= call!6293 call!6292)))

(declare-fun b!72453 () Bool)

(assert (=> b!72453 (= e!47380 (insertStrictlySorted!53 (t!4995 (toList!713 call!6110)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun b!72454 () Bool)

(assert (=> b!72454 (= e!47379 (contains!719 lt!32268 (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(assert (= (and d!16637 c!10711) b!72445))

(assert (= (and d!16637 (not c!10711)) b!72452))

(assert (= (and b!72452 c!10709) b!72446))

(assert (= (and b!72452 (not c!10709)) b!72447))

(assert (= (and b!72447 c!10708) b!72448))

(assert (= (and b!72447 (not c!10708)) b!72449))

(assert (= (or b!72448 b!72449) bm!6291))

(assert (= (or b!72446 bm!6291) bm!6290))

(assert (= (or b!72445 bm!6290) bm!6289))

(assert (= (and bm!6289 c!10710) b!72453))

(assert (= (and bm!6289 (not c!10710)) b!72451))

(assert (= (and d!16637 res!38491) b!72450))

(assert (= (and b!72450 res!38490) b!72454))

(declare-fun m!70547 () Bool)

(assert (=> b!72450 m!70547))

(declare-fun m!70549 () Bool)

(assert (=> b!72454 m!70549))

(declare-fun m!70551 () Bool)

(assert (=> bm!6289 m!70551))

(declare-fun m!70553 () Bool)

(assert (=> d!16637 m!70553))

(declare-fun m!70555 () Bool)

(assert (=> d!16637 m!70555))

(declare-fun m!70557 () Bool)

(assert (=> b!72453 m!70557))

(assert (=> d!15927 d!16637))

(assert (=> b!71540 d!16051))

(assert (=> b!71303 d!16553))

(declare-fun d!16639 () Bool)

(declare-fun e!47383 () Bool)

(assert (=> d!16639 e!47383))

(declare-fun res!38492 () Bool)

(assert (=> d!16639 (=> res!38492 e!47383)))

(declare-fun lt!32272 () Bool)

(assert (=> d!16639 (= res!38492 (not lt!32272))))

(declare-fun lt!32271 () Bool)

(assert (=> d!16639 (= lt!32272 lt!32271)))

(declare-fun lt!32270 () Unit!1996)

(declare-fun e!47382 () Unit!1996)

(assert (=> d!16639 (= lt!32270 e!47382)))

(declare-fun c!10712 () Bool)

(assert (=> d!16639 (= c!10712 lt!32271)))

(assert (=> d!16639 (= lt!32271 (containsKey!136 (toList!713 lt!31535) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16639 (= (contains!715 lt!31535 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!32272)))

(declare-fun b!72455 () Bool)

(declare-fun lt!32269 () Unit!1996)

(assert (=> b!72455 (= e!47382 lt!32269)))

(assert (=> b!72455 (= lt!32269 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31535) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!72455 (isDefined!85 (getValueByKey!133 (toList!713 lt!31535) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!72456 () Bool)

(declare-fun Unit!2061 () Unit!1996)

(assert (=> b!72456 (= e!47382 Unit!2061)))

(declare-fun b!72457 () Bool)

(assert (=> b!72457 (= e!47383 (isDefined!85 (getValueByKey!133 (toList!713 lt!31535) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!16639 c!10712) b!72455))

(assert (= (and d!16639 (not c!10712)) b!72456))

(assert (= (and d!16639 (not res!38492)) b!72457))

(declare-fun m!70559 () Bool)

(assert (=> d!16639 m!70559))

(declare-fun m!70561 () Bool)

(assert (=> b!72455 m!70561))

(assert (=> b!72455 m!68259))

(assert (=> b!72455 m!68259))

(declare-fun m!70563 () Bool)

(assert (=> b!72455 m!70563))

(assert (=> b!72457 m!68259))

(assert (=> b!72457 m!68259))

(assert (=> b!72457 m!70563))

(assert (=> d!15883 d!16639))

(declare-fun b!72459 () Bool)

(declare-fun e!47384 () Option!139)

(declare-fun e!47385 () Option!139)

(assert (=> b!72459 (= e!47384 e!47385)))

(declare-fun c!10714 () Bool)

(assert (=> b!72459 (= c!10714 (and ((_ is Cons!1463) lt!31533) (not (= (_1!1066 (h!2049 lt!31533)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!72461 () Bool)

(assert (=> b!72461 (= e!47385 None!137)))

(declare-fun b!72460 () Bool)

(assert (=> b!72460 (= e!47385 (getValueByKey!133 (t!4995 lt!31533) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!10713 () Bool)

(declare-fun d!16641 () Bool)

(assert (=> d!16641 (= c!10713 (and ((_ is Cons!1463) lt!31533) (= (_1!1066 (h!2049 lt!31533)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!16641 (= (getValueByKey!133 lt!31533 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!47384)))

(declare-fun b!72458 () Bool)

(assert (=> b!72458 (= e!47384 (Some!138 (_2!1066 (h!2049 lt!31533))))))

(assert (= (and d!16641 c!10713) b!72458))

(assert (= (and d!16641 (not c!10713)) b!72459))

(assert (= (and b!72459 c!10714) b!72460))

(assert (= (and b!72459 (not c!10714)) b!72461))

(declare-fun m!70565 () Bool)

(assert (=> b!72460 m!70565))

(assert (=> d!15883 d!16641))

(declare-fun d!16643 () Bool)

(assert (=> d!16643 (= (getValueByKey!133 lt!31533 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!32273 () Unit!1996)

(assert (=> d!16643 (= lt!32273 (choose!406 lt!31533 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!47386 () Bool)

(assert (=> d!16643 e!47386))

(declare-fun res!38493 () Bool)

(assert (=> d!16643 (=> (not res!38493) (not e!47386))))

(assert (=> d!16643 (= res!38493 (isStrictlySorted!278 lt!31533))))

(assert (=> d!16643 (= (lemmaContainsTupThenGetReturnValue!50 lt!31533 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!32273)))

(declare-fun b!72462 () Bool)

(declare-fun res!38494 () Bool)

(assert (=> b!72462 (=> (not res!38494) (not e!47386))))

(assert (=> b!72462 (= res!38494 (containsKey!136 lt!31533 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!72463 () Bool)

(assert (=> b!72463 (= e!47386 (contains!719 lt!31533 (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!16643 res!38493) b!72462))

(assert (= (and b!72462 res!38494) b!72463))

(assert (=> d!16643 m!68253))

(declare-fun m!70567 () Bool)

(assert (=> d!16643 m!70567))

(declare-fun m!70569 () Bool)

(assert (=> d!16643 m!70569))

(declare-fun m!70571 () Bool)

(assert (=> b!72462 m!70571))

(declare-fun m!70573 () Bool)

(assert (=> b!72463 m!70573))

(assert (=> d!15883 d!16643))

(declare-fun b!72464 () Bool)

(declare-fun e!47391 () List!1467)

(declare-fun call!6297 () List!1467)

(assert (=> b!72464 (= e!47391 call!6297)))

(declare-fun bm!6292 () Bool)

(declare-fun e!47390 () List!1467)

(declare-fun c!10718 () Bool)

(assert (=> bm!6292 (= call!6297 ($colon$colon!64 e!47390 (ite c!10718 (h!2049 (toList!713 call!6138)) (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!10717 () Bool)

(assert (=> bm!6292 (= c!10717 c!10718)))

(declare-fun d!16645 () Bool)

(declare-fun e!47389 () Bool)

(assert (=> d!16645 e!47389))

(declare-fun res!38496 () Bool)

(assert (=> d!16645 (=> (not res!38496) (not e!47389))))

(declare-fun lt!32274 () List!1467)

(assert (=> d!16645 (= res!38496 (isStrictlySorted!278 lt!32274))))

(assert (=> d!16645 (= lt!32274 e!47391)))

(assert (=> d!16645 (= c!10718 (and ((_ is Cons!1463) (toList!713 call!6138)) (bvslt (_1!1066 (h!2049 (toList!713 call!6138))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!16645 (isStrictlySorted!278 (toList!713 call!6138))))

(assert (=> d!16645 (= (insertStrictlySorted!53 (toList!713 call!6138) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!32274)))

(declare-fun b!72465 () Bool)

(declare-fun e!47387 () List!1467)

(declare-fun call!6295 () List!1467)

(assert (=> b!72465 (= e!47387 call!6295)))

(declare-fun c!10715 () Bool)

(declare-fun b!72466 () Bool)

(assert (=> b!72466 (= c!10715 (and ((_ is Cons!1463) (toList!713 call!6138)) (bvsgt (_1!1066 (h!2049 (toList!713 call!6138))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!47388 () List!1467)

(assert (=> b!72466 (= e!47387 e!47388)))

(declare-fun b!72467 () Bool)

(declare-fun call!6296 () List!1467)

(assert (=> b!72467 (= e!47388 call!6296)))

(declare-fun b!72468 () Bool)

(assert (=> b!72468 (= e!47388 call!6296)))

(declare-fun b!72469 () Bool)

(declare-fun res!38495 () Bool)

(assert (=> b!72469 (=> (not res!38495) (not e!47389))))

(assert (=> b!72469 (= res!38495 (containsKey!136 lt!32274 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!10716 () Bool)

(declare-fun b!72470 () Bool)

(assert (=> b!72470 (= e!47390 (ite c!10716 (t!4995 (toList!713 call!6138)) (ite c!10715 (Cons!1463 (h!2049 (toList!713 call!6138)) (t!4995 (toList!713 call!6138))) Nil!1464)))))

(declare-fun bm!6293 () Bool)

(assert (=> bm!6293 (= call!6295 call!6297)))

(declare-fun b!72471 () Bool)

(assert (=> b!72471 (= e!47391 e!47387)))

(assert (=> b!72471 (= c!10716 (and ((_ is Cons!1463) (toList!713 call!6138)) (= (_1!1066 (h!2049 (toList!713 call!6138))) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!6294 () Bool)

(assert (=> bm!6294 (= call!6296 call!6295)))

(declare-fun b!72472 () Bool)

(assert (=> b!72472 (= e!47390 (insertStrictlySorted!53 (t!4995 (toList!713 call!6138)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!72473 () Bool)

(assert (=> b!72473 (= e!47389 (contains!719 lt!32274 (tuple2!2111 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!16645 c!10718) b!72464))

(assert (= (and d!16645 (not c!10718)) b!72471))

(assert (= (and b!72471 c!10716) b!72465))

(assert (= (and b!72471 (not c!10716)) b!72466))

(assert (= (and b!72466 c!10715) b!72467))

(assert (= (and b!72466 (not c!10715)) b!72468))

(assert (= (or b!72467 b!72468) bm!6294))

(assert (= (or b!72465 bm!6294) bm!6293))

(assert (= (or b!72464 bm!6293) bm!6292))

(assert (= (and bm!6292 c!10717) b!72472))

(assert (= (and bm!6292 (not c!10717)) b!72470))

(assert (= (and d!16645 res!38496) b!72469))

(assert (= (and b!72469 res!38495) b!72473))

(declare-fun m!70575 () Bool)

(assert (=> b!72469 m!70575))

(declare-fun m!70577 () Bool)

(assert (=> b!72473 m!70577))

(declare-fun m!70579 () Bool)

(assert (=> bm!6292 m!70579))

(declare-fun m!70581 () Bool)

(assert (=> d!16645 m!70581))

(declare-fun m!70583 () Bool)

(assert (=> d!16645 m!70583))

(declare-fun m!70585 () Bool)

(assert (=> b!72472 m!70585))

(assert (=> d!15883 d!16645))

(assert (=> d!16049 d!16115))

(declare-fun d!16647 () Bool)

(assert (=> d!16647 (isDefined!85 (getValueByKey!133 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32275 () Unit!1996)

(assert (=> d!16647 (= lt!32275 (choose!407 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47392 () Bool)

(assert (=> d!16647 e!47392))

(declare-fun res!38497 () Bool)

(assert (=> d!16647 (=> (not res!38497) (not e!47392))))

(assert (=> d!16647 (= res!38497 (isStrictlySorted!278 (toList!713 lt!31365)))))

(assert (=> d!16647 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000) lt!32275)))

(declare-fun b!72474 () Bool)

(assert (=> b!72474 (= e!47392 (containsKey!136 (toList!713 lt!31365) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16647 res!38497) b!72474))

(assert (=> d!16647 m!68663))

(assert (=> d!16647 m!68663))

(assert (=> d!16647 m!68665))

(declare-fun m!70587 () Bool)

(assert (=> d!16647 m!70587))

(assert (=> d!16647 m!69153))

(assert (=> b!72474 m!68659))

(assert (=> b!71309 d!16647))

(assert (=> b!71309 d!16089))

(assert (=> b!71309 d!16091))

(declare-fun d!16649 () Bool)

(assert (=> d!16649 (= (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31363)) (v!2522 (getValueByKey!133 (toList!713 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31363)))))

(assert (=> d!15963 d!16649))

(declare-fun b!72476 () Bool)

(declare-fun e!47393 () Option!139)

(declare-fun e!47394 () Option!139)

(assert (=> b!72476 (= e!47393 e!47394)))

(declare-fun c!10720 () Bool)

(assert (=> b!72476 (= c!10720 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) (not (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31363))))))

(declare-fun b!72478 () Bool)

(assert (=> b!72478 (= e!47394 None!137)))

(declare-fun b!72477 () Bool)

(assert (=> b!72477 (= e!47394 (getValueByKey!133 (t!4995 (toList!713 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) lt!31363))))

(declare-fun d!16651 () Bool)

(declare-fun c!10719 () Bool)

(assert (=> d!16651 (= c!10719 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31363)))))

(assert (=> d!16651 (= (getValueByKey!133 (toList!713 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31363) e!47393)))

(declare-fun b!72475 () Bool)

(assert (=> b!72475 (= e!47393 (Some!138 (_2!1066 (h!2049 (toList!713 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))))

(assert (= (and d!16651 c!10719) b!72475))

(assert (= (and d!16651 (not c!10719)) b!72476))

(assert (= (and b!72476 c!10720) b!72477))

(assert (= (and b!72476 (not c!10720)) b!72478))

(declare-fun m!70589 () Bool)

(assert (=> b!72477 m!70589))

(assert (=> d!15963 d!16651))

(declare-fun bm!6295 () Bool)

(declare-fun call!6298 () (_ BitVec 32))

(assert (=> bm!6295 (= call!6298 (arrayCountValidKeys!0 lt!31827 (bvadd (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000001) (bvadd (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000001)))))

(declare-fun b!72479 () Bool)

(declare-fun e!47396 () (_ BitVec 32))

(assert (=> b!72479 (= e!47396 #b00000000000000000000000000000000)))

(declare-fun b!72480 () Bool)

(declare-fun e!47395 () (_ BitVec 32))

(assert (=> b!72480 (= e!47395 call!6298)))

(declare-fun b!72481 () Bool)

(assert (=> b!72481 (= e!47395 (bvadd #b00000000000000000000000000000001 call!6298))))

(declare-fun lt!32276 () (_ BitVec 32))

(declare-fun d!16653 () Bool)

(assert (=> d!16653 (and (bvsge lt!32276 #b00000000000000000000000000000000) (bvsle lt!32276 (bvsub (size!2081 lt!31827) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)))))))

(assert (=> d!16653 (= lt!32276 e!47396)))

(declare-fun c!10721 () Bool)

(assert (=> d!16653 (= c!10721 (bvsge (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (bvadd (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000001)))))

(assert (=> d!16653 (and (bvsle (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (bvadd (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000001)) (bvsge (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000001) (size!2081 lt!31827)))))

(assert (=> d!16653 (= (arrayCountValidKeys!0 lt!31827 (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (bvadd (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000001)) lt!32276)))

(declare-fun b!72482 () Bool)

(assert (=> b!72482 (= e!47396 e!47395)))

(declare-fun c!10722 () Bool)

(assert (=> b!72482 (= c!10722 (validKeyInArray!0 (select (arr!1844 lt!31827) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)))))))

(assert (= (and d!16653 c!10721) b!72479))

(assert (= (and d!16653 (not c!10721)) b!72482))

(assert (= (and b!72482 c!10722) b!72481))

(assert (= (and b!72482 (not c!10722)) b!72480))

(assert (= (or b!72481 b!72480) bm!6295))

(declare-fun m!70591 () Bool)

(assert (=> bm!6295 m!70591))

(declare-fun m!70593 () Bool)

(assert (=> b!72482 m!70593))

(assert (=> b!72482 m!70593))

(declare-fun m!70595 () Bool)

(assert (=> b!72482 m!70595))

(assert (=> d!16065 d!16653))

(declare-fun d!16655 () Bool)

(declare-fun e!47399 () Bool)

(assert (=> d!16655 e!47399))

(declare-fun res!38500 () Bool)

(assert (=> d!16655 (=> (not res!38500) (not e!47399))))

(assert (=> d!16655 (= res!38500 (and (bvsge (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000000) (bvslt (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (size!2081 (_keys!3839 newMap!16)))))))

(declare-fun lt!32279 () Unit!1996)

(declare-fun choose!102 ((_ BitVec 64) array!3863 (_ BitVec 32) (_ BitVec 32)) Unit!1996)

(assert (=> d!16655 (= lt!32279 (choose!102 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (mask!6148 newMap!16)))))

(assert (=> d!16655 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16655 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (mask!6148 newMap!16)) lt!32279)))

(declare-fun b!72485 () Bool)

(assert (=> b!72485 (= e!47399 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (mask!6148 newMap!16)))))

(assert (= (and d!16655 res!38500) b!72485))

(assert (=> d!16655 m!67819))

(declare-fun m!70597 () Bool)

(assert (=> d!16655 m!70597))

(assert (=> d!16655 m!68327))

(assert (=> b!72485 m!68913))

(assert (=> b!72485 m!68931))

(assert (=> d!16065 d!16655))

(declare-fun d!16657 () Bool)

(declare-fun e!47401 () Bool)

(assert (=> d!16657 e!47401))

(declare-fun res!38501 () Bool)

(assert (=> d!16657 (=> res!38501 e!47401)))

(declare-fun lt!32283 () Bool)

(assert (=> d!16657 (= res!38501 (not lt!32283))))

(declare-fun lt!32282 () Bool)

(assert (=> d!16657 (= lt!32283 lt!32282)))

(declare-fun lt!32281 () Unit!1996)

(declare-fun e!47400 () Unit!1996)

(assert (=> d!16657 (= lt!32281 e!47400)))

(declare-fun c!10723 () Bool)

(assert (=> d!16657 (= c!10723 lt!32282)))

(assert (=> d!16657 (= lt!32282 (containsKey!136 (toList!713 (getCurrentListMap!411 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)))))))

(assert (=> d!16657 (= (contains!715 (getCurrentListMap!411 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)))) lt!32283)))

(declare-fun b!72486 () Bool)

(declare-fun lt!32280 () Unit!1996)

(assert (=> b!72486 (= e!47400 lt!32280)))

(assert (=> b!72486 (= lt!32280 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (getCurrentListMap!411 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)))))))

(assert (=> b!72486 (isDefined!85 (getValueByKey!133 (toList!713 (getCurrentListMap!411 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)))))))

(declare-fun b!72487 () Bool)

(declare-fun Unit!2062 () Unit!1996)

(assert (=> b!72487 (= e!47400 Unit!2062)))

(declare-fun b!72488 () Bool)

(assert (=> b!72488 (= e!47401 (isDefined!85 (getValueByKey!133 (toList!713 (getCurrentListMap!411 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))))))))

(assert (= (and d!16657 c!10723) b!72486))

(assert (= (and d!16657 (not c!10723)) b!72487))

(assert (= (and d!16657 (not res!38501)) b!72488))

(assert (=> d!16657 m!68907))

(declare-fun m!70599 () Bool)

(assert (=> d!16657 m!70599))

(assert (=> b!72486 m!68907))

(declare-fun m!70601 () Bool)

(assert (=> b!72486 m!70601))

(assert (=> b!72486 m!68907))

(declare-fun m!70603 () Bool)

(assert (=> b!72486 m!70603))

(assert (=> b!72486 m!70603))

(declare-fun m!70605 () Bool)

(assert (=> b!72486 m!70605))

(assert (=> b!72488 m!68907))

(assert (=> b!72488 m!70603))

(assert (=> b!72488 m!70603))

(assert (=> b!72488 m!70605))

(assert (=> d!16065 d!16657))

(assert (=> d!16065 d!16017))

(declare-fun d!16659 () Bool)

(declare-fun e!47404 () Bool)

(assert (=> d!16659 e!47404))

(declare-fun res!38504 () Bool)

(assert (=> d!16659 (=> (not res!38504) (not e!47404))))

(assert (=> d!16659 (= res!38504 (and (bvsge (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000000) (bvslt (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (size!2081 (_keys!3839 newMap!16)))))))

(declare-fun lt!32286 () Unit!1996)

(declare-fun choose!41 (array!3863 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1468) Unit!1996)

(assert (=> d!16659 (= lt!32286 (choose!41 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) lt!31834 lt!31838))))

(assert (=> d!16659 (bvslt (size!2081 (_keys!3839 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!16659 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) lt!31834 lt!31838) lt!32286)))

(declare-fun b!72491 () Bool)

(assert (=> b!72491 (= e!47404 (arrayNoDuplicates!0 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) lt!31834 lt!31838))))

(assert (= (and d!16659 res!38504) b!72491))

(assert (=> d!16659 m!67819))

(declare-fun m!70607 () Bool)

(assert (=> d!16659 m!70607))

(assert (=> b!72491 m!68913))

(assert (=> b!72491 m!68903))

(assert (=> d!16065 d!16659))

(assert (=> d!16065 d!15949))

(declare-fun e!47410 () Bool)

(declare-fun b!72503 () Bool)

(assert (=> b!72503 (= e!47410 (= (arrayCountValidKeys!0 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3839 newMap!16) #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!72501 () Bool)

(declare-fun res!38514 () Bool)

(declare-fun e!47409 () Bool)

(assert (=> b!72501 (=> (not res!38514) (not e!47409))))

(assert (=> b!72501 (= res!38514 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(declare-fun d!16661 () Bool)

(assert (=> d!16661 e!47410))

(declare-fun res!38515 () Bool)

(assert (=> d!16661 (=> (not res!38515) (not e!47410))))

(assert (=> d!16661 (= res!38515 (and (bvsge (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000000) (bvslt (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (size!2081 (_keys!3839 newMap!16)))))))

(declare-fun lt!32289 () Unit!1996)

(declare-fun choose!1 (array!3863 (_ BitVec 32) (_ BitVec 64)) Unit!1996)

(assert (=> d!16661 (= lt!32289 (choose!1 (_keys!3839 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!16661 e!47409))

(declare-fun res!38513 () Bool)

(assert (=> d!16661 (=> (not res!38513) (not e!47409))))

(assert (=> d!16661 (= res!38513 (and (bvsge (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000000) (bvslt (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (size!2081 (_keys!3839 newMap!16)))))))

(assert (=> d!16661 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3839 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) lt!32289)))

(declare-fun b!72502 () Bool)

(assert (=> b!72502 (= e!47409 (bvslt (size!2081 (_keys!3839 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!72500 () Bool)

(declare-fun res!38516 () Bool)

(assert (=> b!72500 (=> (not res!38516) (not e!47409))))

(assert (=> b!72500 (= res!38516 (not (validKeyInArray!0 (select (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))))))))

(assert (= (and d!16661 res!38513) b!72500))

(assert (= (and b!72500 res!38516) b!72501))

(assert (= (and b!72501 res!38514) b!72502))

(assert (= (and d!16661 res!38515) b!72503))

(assert (=> b!72503 m!68913))

(assert (=> b!72503 m!68905))

(assert (=> b!72503 m!68113))

(assert (=> b!72501 m!67819))

(assert (=> b!72501 m!68131))

(assert (=> d!16661 m!67819))

(declare-fun m!70609 () Bool)

(assert (=> d!16661 m!70609))

(declare-fun m!70611 () Bool)

(assert (=> b!72500 m!70611))

(assert (=> b!72500 m!70611))

(declare-fun m!70613 () Bool)

(assert (=> b!72500 m!70613))

(assert (=> d!16065 d!16661))

(declare-fun bm!6296 () Bool)

(declare-fun c!10724 () Bool)

(declare-fun call!6299 () Bool)

(assert (=> bm!6296 (= call!6299 (arrayNoDuplicates!0 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (bvadd lt!31834 #b00000000000000000000000000000001) (ite c!10724 (Cons!1464 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) lt!31834) lt!31838) lt!31838)))))

(declare-fun b!72504 () Bool)

(declare-fun e!47411 () Bool)

(assert (=> b!72504 (= e!47411 (contains!718 lt!31838 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) lt!31834)))))

(declare-fun b!72505 () Bool)

(declare-fun e!47414 () Bool)

(declare-fun e!47412 () Bool)

(assert (=> b!72505 (= e!47414 e!47412)))

(assert (=> b!72505 (= c!10724 (validKeyInArray!0 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) lt!31834)))))

(declare-fun b!72506 () Bool)

(declare-fun e!47413 () Bool)

(assert (=> b!72506 (= e!47413 e!47414)))

(declare-fun res!38518 () Bool)

(assert (=> b!72506 (=> (not res!38518) (not e!47414))))

(assert (=> b!72506 (= res!38518 (not e!47411))))

(declare-fun res!38519 () Bool)

(assert (=> b!72506 (=> (not res!38519) (not e!47411))))

(assert (=> b!72506 (= res!38519 (validKeyInArray!0 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) lt!31834)))))

(declare-fun d!16663 () Bool)

(declare-fun res!38517 () Bool)

(assert (=> d!16663 (=> res!38517 e!47413)))

(assert (=> d!16663 (= res!38517 (bvsge lt!31834 (size!2081 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))))

(assert (=> d!16663 (= (arrayNoDuplicates!0 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) lt!31834 lt!31838) e!47413)))

(declare-fun b!72507 () Bool)

(assert (=> b!72507 (= e!47412 call!6299)))

(declare-fun b!72508 () Bool)

(assert (=> b!72508 (= e!47412 call!6299)))

(assert (= (and d!16663 (not res!38517)) b!72506))

(assert (= (and b!72506 res!38519) b!72504))

(assert (= (and b!72506 res!38518) b!72505))

(assert (= (and b!72505 c!10724) b!72508))

(assert (= (and b!72505 (not c!10724)) b!72507))

(assert (= (or b!72508 b!72507) bm!6296))

(declare-fun m!70615 () Bool)

(assert (=> bm!6296 m!70615))

(declare-fun m!70617 () Bool)

(assert (=> bm!6296 m!70617))

(assert (=> b!72504 m!70615))

(assert (=> b!72504 m!70615))

(declare-fun m!70619 () Bool)

(assert (=> b!72504 m!70619))

(assert (=> b!72505 m!70615))

(assert (=> b!72505 m!70615))

(declare-fun m!70621 () Bool)

(assert (=> b!72505 m!70621))

(assert (=> b!72506 m!70615))

(assert (=> b!72506 m!70615))

(assert (=> b!72506 m!70621))

(assert (=> d!16065 d!16663))

(declare-fun d!16665 () Bool)

(declare-fun e!47415 () Bool)

(assert (=> d!16665 e!47415))

(declare-fun res!38520 () Bool)

(assert (=> d!16665 (=> (not res!38520) (not e!47415))))

(assert (=> d!16665 (= res!38520 (and (bvsge (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000000) (bvslt (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (size!2081 lt!31845))))))

(declare-fun lt!32290 () Unit!1996)

(assert (=> d!16665 (= lt!32290 (choose!411 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (defaultEntry!2191 newMap!16)))))

(assert (=> d!16665 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16665 (= (lemmaValidKeyInArrayIsInListMap!83 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (defaultEntry!2191 newMap!16)) lt!32290)))

(declare-fun b!72509 () Bool)

(assert (=> b!72509 (= e!47415 (contains!715 (getCurrentListMap!411 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1844 lt!31845) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)))))))

(assert (= (and d!16665 res!38520) b!72509))

(declare-fun m!70623 () Bool)

(assert (=> d!16665 m!70623))

(assert (=> d!16665 m!68327))

(assert (=> b!72509 m!68919))

(declare-fun m!70625 () Bool)

(assert (=> b!72509 m!70625))

(assert (=> b!72509 m!68919))

(assert (=> b!72509 m!70625))

(declare-fun m!70627 () Bool)

(assert (=> b!72509 m!70627))

(assert (=> d!16065 d!16665))

(declare-fun d!16667 () Bool)

(declare-fun res!38521 () Bool)

(declare-fun e!47416 () Bool)

(assert (=> d!16667 (=> res!38521 e!47416)))

(assert (=> d!16667 (= res!38521 (= (select (arr!1844 lt!31823) #b00000000000000000000000000000000) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!16667 (= (arrayContainsKey!0 lt!31823 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000) e!47416)))

(declare-fun b!72510 () Bool)

(declare-fun e!47417 () Bool)

(assert (=> b!72510 (= e!47416 e!47417)))

(declare-fun res!38522 () Bool)

(assert (=> b!72510 (=> (not res!38522) (not e!47417))))

(assert (=> b!72510 (= res!38522 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 lt!31823)))))

(declare-fun b!72511 () Bool)

(assert (=> b!72511 (= e!47417 (arrayContainsKey!0 lt!31823 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16667 (not res!38521)) b!72510))

(assert (= (and b!72510 res!38522) b!72511))

(declare-fun m!70629 () Bool)

(assert (=> d!16667 m!70629))

(assert (=> b!72511 m!67819))

(declare-fun m!70631 () Bool)

(assert (=> b!72511 m!70631))

(assert (=> d!16065 d!16667))

(declare-fun d!16669 () Bool)

(assert (=> d!16669 (= (arrayCountValidKeys!0 lt!31827 (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (bvadd (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!32293 () Unit!1996)

(declare-fun choose!2 (array!3863 (_ BitVec 32)) Unit!1996)

(assert (=> d!16669 (= lt!32293 (choose!2 lt!31827 (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))))))

(declare-fun e!47420 () Bool)

(assert (=> d!16669 e!47420))

(declare-fun res!38527 () Bool)

(assert (=> d!16669 (=> (not res!38527) (not e!47420))))

(assert (=> d!16669 (= res!38527 (and (bvsge (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000000) (bvslt (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (size!2081 lt!31827))))))

(assert (=> d!16669 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!31827 (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))) lt!32293)))

(declare-fun b!72516 () Bool)

(declare-fun res!38528 () Bool)

(assert (=> b!72516 (=> (not res!38528) (not e!47420))))

(assert (=> b!72516 (= res!38528 (validKeyInArray!0 (select (arr!1844 lt!31827) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)))))))

(declare-fun b!72517 () Bool)

(assert (=> b!72517 (= e!47420 (bvslt (size!2081 lt!31827) #b01111111111111111111111111111111))))

(assert (= (and d!16669 res!38527) b!72516))

(assert (= (and b!72516 res!38528) b!72517))

(assert (=> d!16669 m!68915))

(declare-fun m!70633 () Bool)

(assert (=> d!16669 m!70633))

(assert (=> b!72516 m!70593))

(assert (=> b!72516 m!70593))

(assert (=> b!72516 m!70595))

(assert (=> d!16065 d!16669))

(declare-fun call!6300 () (_ BitVec 32))

(declare-fun bm!6297 () Bool)

(assert (=> bm!6297 (= call!6300 (arrayCountValidKeys!0 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2081 (_keys!3839 newMap!16))))))

(declare-fun b!72518 () Bool)

(declare-fun e!47422 () (_ BitVec 32))

(assert (=> b!72518 (= e!47422 #b00000000000000000000000000000000)))

(declare-fun b!72519 () Bool)

(declare-fun e!47421 () (_ BitVec 32))

(assert (=> b!72519 (= e!47421 call!6300)))

(declare-fun b!72520 () Bool)

(assert (=> b!72520 (= e!47421 (bvadd #b00000000000000000000000000000001 call!6300))))

(declare-fun d!16671 () Bool)

(declare-fun lt!32294 () (_ BitVec 32))

(assert (=> d!16671 (and (bvsge lt!32294 #b00000000000000000000000000000000) (bvsle lt!32294 (bvsub (size!2081 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!16671 (= lt!32294 e!47422)))

(declare-fun c!10725 () Bool)

(assert (=> d!16671 (= c!10725 (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))))))

(assert (=> d!16671 (and (bvsle #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2081 (_keys!3839 newMap!16)) (size!2081 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))))

(assert (=> d!16671 (= (arrayCountValidKeys!0 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) #b00000000000000000000000000000000 (size!2081 (_keys!3839 newMap!16))) lt!32294)))

(declare-fun b!72521 () Bool)

(assert (=> b!72521 (= e!47422 e!47421)))

(declare-fun c!10726 () Bool)

(assert (=> b!72521 (= c!10726 (validKeyInArray!0 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!16671 c!10725) b!72518))

(assert (= (and d!16671 (not c!10725)) b!72521))

(assert (= (and b!72521 c!10726) b!72520))

(assert (= (and b!72521 (not c!10726)) b!72519))

(assert (= (or b!72520 b!72519) bm!6297))

(declare-fun m!70635 () Bool)

(assert (=> bm!6297 m!70635))

(declare-fun m!70637 () Bool)

(assert (=> b!72521 m!70637))

(assert (=> b!72521 m!70637))

(declare-fun m!70639 () Bool)

(assert (=> b!72521 m!70639))

(assert (=> d!16065 d!16671))

(declare-fun bm!6298 () Bool)

(declare-fun call!6303 () ListLongMap!1395)

(declare-fun call!6301 () ListLongMap!1395)

(assert (=> bm!6298 (= call!6303 call!6301)))

(declare-fun b!72522 () Bool)

(declare-fun e!47428 () ListLongMap!1395)

(assert (=> b!72522 (= e!47428 call!6303)))

(declare-fun b!72523 () Bool)

(declare-fun e!47425 () ListLongMap!1395)

(assert (=> b!72523 (= e!47425 (+!91 call!6301 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun b!72524 () Bool)

(declare-fun res!38529 () Bool)

(declare-fun e!47429 () Bool)

(assert (=> b!72524 (=> (not res!38529) (not e!47429))))

(declare-fun e!47433 () Bool)

(assert (=> b!72524 (= res!38529 e!47433)))

(declare-fun c!10729 () Bool)

(assert (=> b!72524 (= c!10729 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6299 () Bool)

(declare-fun call!6306 () Bool)

(declare-fun lt!32315 () ListLongMap!1395)

(assert (=> bm!6299 (= call!6306 (contains!715 lt!32315 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6300 () Bool)

(declare-fun call!6307 () Bool)

(assert (=> bm!6300 (= call!6307 (contains!715 lt!32315 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6301 () Bool)

(declare-fun call!6304 () ListLongMap!1395)

(assert (=> bm!6301 (= call!6304 (getCurrentListMapNoExtraKeys!56 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!72525 () Bool)

(declare-fun res!38537 () Bool)

(assert (=> b!72525 (=> (not res!38537) (not e!47429))))

(declare-fun e!47432 () Bool)

(assert (=> b!72525 (= res!38537 e!47432)))

(declare-fun res!38534 () Bool)

(assert (=> b!72525 (=> res!38534 e!47432)))

(declare-fun e!47430 () Bool)

(assert (=> b!72525 (= res!38534 (not e!47430))))

(declare-fun res!38530 () Bool)

(assert (=> b!72525 (=> (not res!38530) (not e!47430))))

(assert (=> b!72525 (= res!38530 (bvslt #b00000000000000000000000000000000 (size!2081 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))))

(declare-fun b!72526 () Bool)

(declare-fun e!47424 () Bool)

(assert (=> b!72526 (= e!47429 e!47424)))

(declare-fun c!10727 () Bool)

(assert (=> b!72526 (= c!10727 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72527 () Bool)

(declare-fun e!47434 () Bool)

(assert (=> b!72527 (= e!47434 (validKeyInArray!0 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!72528 () Bool)

(declare-fun c!10732 () Bool)

(assert (=> b!72528 (= c!10732 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47435 () ListLongMap!1395)

(assert (=> b!72528 (= e!47428 e!47435)))

(declare-fun b!72529 () Bool)

(declare-fun e!47426 () Unit!1996)

(declare-fun lt!32297 () Unit!1996)

(assert (=> b!72529 (= e!47426 lt!32297)))

(declare-fun lt!32308 () ListLongMap!1395)

(assert (=> b!72529 (= lt!32308 (getCurrentListMapNoExtraKeys!56 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32314 () (_ BitVec 64))

(assert (=> b!72529 (= lt!32314 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32311 () (_ BitVec 64))

(assert (=> b!72529 (= lt!32311 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32312 () Unit!1996)

(assert (=> b!72529 (= lt!32312 (addStillContains!50 lt!32308 lt!32314 (zeroValue!2095 newMap!16) lt!32311))))

(assert (=> b!72529 (contains!715 (+!91 lt!32308 (tuple2!2111 lt!32314 (zeroValue!2095 newMap!16))) lt!32311)))

(declare-fun lt!32306 () Unit!1996)

(assert (=> b!72529 (= lt!32306 lt!32312)))

(declare-fun lt!32309 () ListLongMap!1395)

(assert (=> b!72529 (= lt!32309 (getCurrentListMapNoExtraKeys!56 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32301 () (_ BitVec 64))

(assert (=> b!72529 (= lt!32301 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32313 () (_ BitVec 64))

(assert (=> b!72529 (= lt!32313 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32316 () Unit!1996)

(assert (=> b!72529 (= lt!32316 (addApplyDifferent!50 lt!32309 lt!32301 (minValue!2095 newMap!16) lt!32313))))

(assert (=> b!72529 (= (apply!74 (+!91 lt!32309 (tuple2!2111 lt!32301 (minValue!2095 newMap!16))) lt!32313) (apply!74 lt!32309 lt!32313))))

(declare-fun lt!32302 () Unit!1996)

(assert (=> b!72529 (= lt!32302 lt!32316)))

(declare-fun lt!32298 () ListLongMap!1395)

(assert (=> b!72529 (= lt!32298 (getCurrentListMapNoExtraKeys!56 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32304 () (_ BitVec 64))

(assert (=> b!72529 (= lt!32304 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32296 () (_ BitVec 64))

(assert (=> b!72529 (= lt!32296 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32299 () Unit!1996)

(assert (=> b!72529 (= lt!32299 (addApplyDifferent!50 lt!32298 lt!32304 (zeroValue!2095 newMap!16) lt!32296))))

(assert (=> b!72529 (= (apply!74 (+!91 lt!32298 (tuple2!2111 lt!32304 (zeroValue!2095 newMap!16))) lt!32296) (apply!74 lt!32298 lt!32296))))

(declare-fun lt!32303 () Unit!1996)

(assert (=> b!72529 (= lt!32303 lt!32299)))

(declare-fun lt!32307 () ListLongMap!1395)

(assert (=> b!72529 (= lt!32307 (getCurrentListMapNoExtraKeys!56 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32300 () (_ BitVec 64))

(assert (=> b!72529 (= lt!32300 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32305 () (_ BitVec 64))

(assert (=> b!72529 (= lt!32305 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!72529 (= lt!32297 (addApplyDifferent!50 lt!32307 lt!32300 (minValue!2095 newMap!16) lt!32305))))

(assert (=> b!72529 (= (apply!74 (+!91 lt!32307 (tuple2!2111 lt!32300 (minValue!2095 newMap!16))) lt!32305) (apply!74 lt!32307 lt!32305))))

(declare-fun b!72530 () Bool)

(declare-fun call!6305 () ListLongMap!1395)

(assert (=> b!72530 (= e!47435 call!6305)))

(declare-fun c!10731 () Bool)

(declare-fun bm!6302 () Bool)

(declare-fun c!10730 () Bool)

(declare-fun call!6302 () ListLongMap!1395)

(assert (=> bm!6302 (= call!6301 (+!91 (ite c!10730 call!6304 (ite c!10731 call!6302 call!6305)) (ite (or c!10730 c!10731) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun b!72531 () Bool)

(declare-fun e!47427 () Bool)

(assert (=> b!72531 (= e!47424 e!47427)))

(declare-fun res!38532 () Bool)

(assert (=> b!72531 (= res!38532 call!6306)))

(assert (=> b!72531 (=> (not res!38532) (not e!47427))))

(declare-fun b!72532 () Bool)

(assert (=> b!72532 (= e!47427 (= (apply!74 lt!32315 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun bm!6303 () Bool)

(assert (=> bm!6303 (= call!6305 call!6302)))

(declare-fun b!72533 () Bool)

(assert (=> b!72533 (= e!47425 e!47428)))

(assert (=> b!72533 (= c!10731 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72534 () Bool)

(declare-fun e!47423 () Bool)

(assert (=> b!72534 (= e!47433 e!47423)))

(declare-fun res!38533 () Bool)

(assert (=> b!72534 (= res!38533 call!6307)))

(assert (=> b!72534 (=> (not res!38533) (not e!47423))))

(declare-fun bm!6304 () Bool)

(assert (=> bm!6304 (= call!6302 call!6304)))

(declare-fun b!72535 () Bool)

(declare-fun e!47431 () Bool)

(assert (=> b!72535 (= e!47431 (= (apply!74 lt!32315 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72535 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))))))

(assert (=> b!72535 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))))

(declare-fun d!16673 () Bool)

(assert (=> d!16673 e!47429))

(declare-fun res!38535 () Bool)

(assert (=> d!16673 (=> (not res!38535) (not e!47429))))

(assert (=> d!16673 (= res!38535 (or (bvsge #b00000000000000000000000000000000 (size!2081 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))))))

(declare-fun lt!32295 () ListLongMap!1395)

(assert (=> d!16673 (= lt!32315 lt!32295)))

(declare-fun lt!32310 () Unit!1996)

(assert (=> d!16673 (= lt!32310 e!47426)))

(declare-fun c!10728 () Bool)

(assert (=> d!16673 (= c!10728 e!47434)))

(declare-fun res!38531 () Bool)

(assert (=> d!16673 (=> (not res!38531) (not e!47434))))

(assert (=> d!16673 (= res!38531 (bvslt #b00000000000000000000000000000000 (size!2081 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))))

(assert (=> d!16673 (= lt!32295 e!47425)))

(assert (=> d!16673 (= c!10730 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16673 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16673 (= (getCurrentListMap!411 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32315)))

(declare-fun b!72536 () Bool)

(declare-fun Unit!2063 () Unit!1996)

(assert (=> b!72536 (= e!47426 Unit!2063)))

(declare-fun b!72537 () Bool)

(assert (=> b!72537 (= e!47423 (= (apply!74 lt!32315 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!72538 () Bool)

(assert (=> b!72538 (= e!47430 (validKeyInArray!0 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!72539 () Bool)

(assert (=> b!72539 (= e!47424 (not call!6306))))

(declare-fun b!72540 () Bool)

(assert (=> b!72540 (= e!47433 (not call!6307))))

(declare-fun b!72541 () Bool)

(assert (=> b!72541 (= e!47432 e!47431)))

(declare-fun res!38536 () Bool)

(assert (=> b!72541 (=> (not res!38536) (not e!47431))))

(assert (=> b!72541 (= res!38536 (contains!715 lt!32315 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!72541 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))))

(declare-fun b!72542 () Bool)

(assert (=> b!72542 (= e!47435 call!6303)))

(assert (= (and d!16673 c!10730) b!72523))

(assert (= (and d!16673 (not c!10730)) b!72533))

(assert (= (and b!72533 c!10731) b!72522))

(assert (= (and b!72533 (not c!10731)) b!72528))

(assert (= (and b!72528 c!10732) b!72542))

(assert (= (and b!72528 (not c!10732)) b!72530))

(assert (= (or b!72542 b!72530) bm!6303))

(assert (= (or b!72522 bm!6303) bm!6304))

(assert (= (or b!72522 b!72542) bm!6298))

(assert (= (or b!72523 bm!6304) bm!6301))

(assert (= (or b!72523 bm!6298) bm!6302))

(assert (= (and d!16673 res!38531) b!72527))

(assert (= (and d!16673 c!10728) b!72529))

(assert (= (and d!16673 (not c!10728)) b!72536))

(assert (= (and d!16673 res!38535) b!72525))

(assert (= (and b!72525 res!38530) b!72538))

(assert (= (and b!72525 (not res!38534)) b!72541))

(assert (= (and b!72541 res!38536) b!72535))

(assert (= (and b!72525 res!38537) b!72524))

(assert (= (and b!72524 c!10729) b!72534))

(assert (= (and b!72524 (not c!10729)) b!72540))

(assert (= (and b!72534 res!38533) b!72537))

(assert (= (or b!72534 b!72540) bm!6300))

(assert (= (and b!72524 res!38529) b!72526))

(assert (= (and b!72526 c!10727) b!72531))

(assert (= (and b!72526 (not c!10727)) b!72539))

(assert (= (and b!72531 res!38532) b!72532))

(assert (= (or b!72531 b!72539) bm!6299))

(declare-fun b_lambda!3245 () Bool)

(assert (=> (not b_lambda!3245) (not b!72535)))

(assert (=> b!72535 t!5010))

(declare-fun b_and!4457 () Bool)

(assert (= b_and!4453 (and (=> t!5010 result!2661) b_and!4457)))

(assert (=> b!72535 t!5012))

(declare-fun b_and!4459 () Bool)

(assert (= b_and!4455 (and (=> t!5012 result!2663) b_and!4459)))

(declare-fun m!70641 () Bool)

(assert (=> b!72537 m!70641))

(declare-fun m!70643 () Bool)

(assert (=> b!72532 m!70643))

(assert (=> d!16673 m!68327))

(declare-fun m!70645 () Bool)

(assert (=> bm!6299 m!70645))

(assert (=> b!72538 m!70637))

(assert (=> b!72538 m!70637))

(assert (=> b!72538 m!70639))

(declare-fun m!70647 () Bool)

(assert (=> bm!6300 m!70647))

(assert (=> b!72541 m!70637))

(assert (=> b!72541 m!70637))

(declare-fun m!70649 () Bool)

(assert (=> b!72541 m!70649))

(assert (=> b!72527 m!70637))

(assert (=> b!72527 m!70637))

(assert (=> b!72527 m!70639))

(declare-fun m!70651 () Bool)

(assert (=> bm!6302 m!70651))

(declare-fun m!70653 () Bool)

(assert (=> bm!6301 m!70653))

(declare-fun m!70655 () Bool)

(assert (=> b!72523 m!70655))

(declare-fun m!70657 () Bool)

(assert (=> b!72529 m!70657))

(declare-fun m!70659 () Bool)

(assert (=> b!72529 m!70659))

(declare-fun m!70661 () Bool)

(assert (=> b!72529 m!70661))

(declare-fun m!70663 () Bool)

(assert (=> b!72529 m!70663))

(declare-fun m!70665 () Bool)

(assert (=> b!72529 m!70665))

(declare-fun m!70667 () Bool)

(assert (=> b!72529 m!70667))

(declare-fun m!70669 () Bool)

(assert (=> b!72529 m!70669))

(declare-fun m!70671 () Bool)

(assert (=> b!72529 m!70671))

(assert (=> b!72529 m!70637))

(assert (=> b!72529 m!70665))

(declare-fun m!70673 () Bool)

(assert (=> b!72529 m!70673))

(assert (=> b!72529 m!70661))

(declare-fun m!70675 () Bool)

(assert (=> b!72529 m!70675))

(declare-fun m!70677 () Bool)

(assert (=> b!72529 m!70677))

(declare-fun m!70679 () Bool)

(assert (=> b!72529 m!70679))

(declare-fun m!70681 () Bool)

(assert (=> b!72529 m!70681))

(assert (=> b!72529 m!70653))

(assert (=> b!72529 m!70675))

(declare-fun m!70683 () Bool)

(assert (=> b!72529 m!70683))

(declare-fun m!70685 () Bool)

(assert (=> b!72529 m!70685))

(assert (=> b!72529 m!70669))

(assert (=> b!72535 m!68441))

(assert (=> b!72535 m!70637))

(declare-fun m!70687 () Bool)

(assert (=> b!72535 m!70687))

(declare-fun m!70689 () Bool)

(assert (=> b!72535 m!70689))

(assert (=> b!72535 m!68441))

(declare-fun m!70691 () Bool)

(assert (=> b!72535 m!70691))

(assert (=> b!72535 m!70689))

(assert (=> b!72535 m!70637))

(assert (=> d!16065 d!16673))

(declare-fun d!16675 () Bool)

(declare-fun e!47438 () Bool)

(assert (=> d!16675 e!47438))

(declare-fun res!38540 () Bool)

(assert (=> d!16675 (=> (not res!38540) (not e!47438))))

(assert (=> d!16675 (= res!38540 (and (bvsge (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000000) (bvslt (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (size!2081 (_keys!3839 newMap!16))) (bvslt (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (size!2082 (_values!2174 newMap!16)))))))

(declare-fun lt!32319 () Unit!1996)

(declare-fun choose!415 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) (_ BitVec 64) V!2937 Int) Unit!1996)

(assert (=> d!16675 (= lt!32319 (choose!415 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16675 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16675 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!12 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220 (defaultEntry!2191 newMap!16)) lt!32319)))

(declare-fun b!72545 () Bool)

(assert (=> b!72545 (= e!47438 (= (+!91 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (getCurrentListMap!411 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))))))

(assert (= (and d!16675 res!38540) b!72545))

(assert (=> d!16675 m!67819))

(declare-fun m!70693 () Bool)

(assert (=> d!16675 m!70693))

(assert (=> d!16675 m!68327))

(assert (=> b!72545 m!68933))

(assert (=> b!72545 m!68913))

(assert (=> b!72545 m!67987))

(assert (=> b!72545 m!67987))

(assert (=> b!72545 m!68733))

(assert (=> b!72545 m!68917))

(assert (=> d!16065 d!16675))

(declare-fun bm!6305 () Bool)

(declare-fun call!6308 () Bool)

(assert (=> bm!6305 (= call!6308 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (mask!6148 newMap!16)))))

(declare-fun b!72546 () Bool)

(declare-fun e!47439 () Bool)

(declare-fun e!47441 () Bool)

(assert (=> b!72546 (= e!47439 e!47441)))

(declare-fun lt!32322 () (_ BitVec 64))

(assert (=> b!72546 (= lt!32322 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32321 () Unit!1996)

(assert (=> b!72546 (= lt!32321 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) lt!32322 #b00000000000000000000000000000000))))

(assert (=> b!72546 (arrayContainsKey!0 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) lt!32322 #b00000000000000000000000000000000)))

(declare-fun lt!32320 () Unit!1996)

(assert (=> b!72546 (= lt!32320 lt!32321)))

(declare-fun res!38542 () Bool)

(assert (=> b!72546 (= res!38542 (= (seekEntryOrOpen!0 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000) (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (mask!6148 newMap!16)) (Found!229 #b00000000000000000000000000000000)))))

(assert (=> b!72546 (=> (not res!38542) (not e!47441))))

(declare-fun d!16677 () Bool)

(declare-fun res!38541 () Bool)

(declare-fun e!47440 () Bool)

(assert (=> d!16677 (=> res!38541 e!47440)))

(assert (=> d!16677 (= res!38541 (bvsge #b00000000000000000000000000000000 (size!2081 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))))))))

(assert (=> d!16677 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16))) (mask!6148 newMap!16)) e!47440)))

(declare-fun b!72547 () Bool)

(assert (=> b!72547 (= e!47440 e!47439)))

(declare-fun c!10733 () Bool)

(assert (=> b!72547 (= c!10733 (validKeyInArray!0 (select (arr!1844 (array!3864 (store (arr!1844 (_keys!3839 newMap!16)) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) (size!2081 (_keys!3839 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!72548 () Bool)

(assert (=> b!72548 (= e!47439 call!6308)))

(declare-fun b!72549 () Bool)

(assert (=> b!72549 (= e!47441 call!6308)))

(assert (= (and d!16677 (not res!38541)) b!72547))

(assert (= (and b!72547 c!10733) b!72546))

(assert (= (and b!72547 (not c!10733)) b!72548))

(assert (= (and b!72546 res!38542) b!72549))

(assert (= (or b!72549 b!72548) bm!6305))

(declare-fun m!70695 () Bool)

(assert (=> bm!6305 m!70695))

(assert (=> b!72546 m!70637))

(declare-fun m!70697 () Bool)

(assert (=> b!72546 m!70697))

(declare-fun m!70699 () Bool)

(assert (=> b!72546 m!70699))

(assert (=> b!72546 m!70637))

(declare-fun m!70701 () Bool)

(assert (=> b!72546 m!70701))

(assert (=> b!72547 m!70637))

(assert (=> b!72547 m!70637))

(assert (=> b!72547 m!70639))

(assert (=> d!16065 d!16677))

(assert (=> d!16065 d!16019))

(assert (=> d!16065 d!16077))

(declare-fun bm!6306 () Bool)

(declare-fun call!6311 () ListLongMap!1395)

(declare-fun call!6309 () ListLongMap!1395)

(assert (=> bm!6306 (= call!6311 call!6309)))

(declare-fun b!72550 () Bool)

(declare-fun e!47447 () ListLongMap!1395)

(assert (=> b!72550 (= e!47447 call!6311)))

(declare-fun b!72551 () Bool)

(declare-fun e!47444 () ListLongMap!1395)

(assert (=> b!72551 (= e!47444 (+!91 call!6309 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun b!72552 () Bool)

(declare-fun res!38543 () Bool)

(declare-fun e!47448 () Bool)

(assert (=> b!72552 (=> (not res!38543) (not e!47448))))

(declare-fun e!47452 () Bool)

(assert (=> b!72552 (= res!38543 e!47452)))

(declare-fun c!10736 () Bool)

(assert (=> b!72552 (= c!10736 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6307 () Bool)

(declare-fun call!6314 () Bool)

(declare-fun lt!32343 () ListLongMap!1395)

(assert (=> bm!6307 (= call!6314 (contains!715 lt!32343 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6308 () Bool)

(declare-fun call!6315 () Bool)

(assert (=> bm!6308 (= call!6315 (contains!715 lt!32343 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6309 () Bool)

(declare-fun call!6312 () ListLongMap!1395)

(assert (=> bm!6309 (= call!6312 (getCurrentListMapNoExtraKeys!56 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!72553 () Bool)

(declare-fun res!38551 () Bool)

(assert (=> b!72553 (=> (not res!38551) (not e!47448))))

(declare-fun e!47451 () Bool)

(assert (=> b!72553 (= res!38551 e!47451)))

(declare-fun res!38548 () Bool)

(assert (=> b!72553 (=> res!38548 e!47451)))

(declare-fun e!47449 () Bool)

(assert (=> b!72553 (= res!38548 (not e!47449))))

(declare-fun res!38544 () Bool)

(assert (=> b!72553 (=> (not res!38544) (not e!47449))))

(assert (=> b!72553 (= res!38544 (bvslt #b00000000000000000000000000000000 (size!2081 lt!31845)))))

(declare-fun b!72554 () Bool)

(declare-fun e!47443 () Bool)

(assert (=> b!72554 (= e!47448 e!47443)))

(declare-fun c!10734 () Bool)

(assert (=> b!72554 (= c!10734 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72555 () Bool)

(declare-fun e!47453 () Bool)

(assert (=> b!72555 (= e!47453 (validKeyInArray!0 (select (arr!1844 lt!31845) #b00000000000000000000000000000000)))))

(declare-fun b!72556 () Bool)

(declare-fun c!10739 () Bool)

(assert (=> b!72556 (= c!10739 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47454 () ListLongMap!1395)

(assert (=> b!72556 (= e!47447 e!47454)))

(declare-fun b!72557 () Bool)

(declare-fun e!47445 () Unit!1996)

(declare-fun lt!32325 () Unit!1996)

(assert (=> b!72557 (= e!47445 lt!32325)))

(declare-fun lt!32336 () ListLongMap!1395)

(assert (=> b!72557 (= lt!32336 (getCurrentListMapNoExtraKeys!56 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32342 () (_ BitVec 64))

(assert (=> b!72557 (= lt!32342 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32339 () (_ BitVec 64))

(assert (=> b!72557 (= lt!32339 (select (arr!1844 lt!31845) #b00000000000000000000000000000000))))

(declare-fun lt!32340 () Unit!1996)

(assert (=> b!72557 (= lt!32340 (addStillContains!50 lt!32336 lt!32342 (zeroValue!2095 newMap!16) lt!32339))))

(assert (=> b!72557 (contains!715 (+!91 lt!32336 (tuple2!2111 lt!32342 (zeroValue!2095 newMap!16))) lt!32339)))

(declare-fun lt!32334 () Unit!1996)

(assert (=> b!72557 (= lt!32334 lt!32340)))

(declare-fun lt!32337 () ListLongMap!1395)

(assert (=> b!72557 (= lt!32337 (getCurrentListMapNoExtraKeys!56 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32329 () (_ BitVec 64))

(assert (=> b!72557 (= lt!32329 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32341 () (_ BitVec 64))

(assert (=> b!72557 (= lt!32341 (select (arr!1844 lt!31845) #b00000000000000000000000000000000))))

(declare-fun lt!32344 () Unit!1996)

(assert (=> b!72557 (= lt!32344 (addApplyDifferent!50 lt!32337 lt!32329 (minValue!2095 newMap!16) lt!32341))))

(assert (=> b!72557 (= (apply!74 (+!91 lt!32337 (tuple2!2111 lt!32329 (minValue!2095 newMap!16))) lt!32341) (apply!74 lt!32337 lt!32341))))

(declare-fun lt!32330 () Unit!1996)

(assert (=> b!72557 (= lt!32330 lt!32344)))

(declare-fun lt!32326 () ListLongMap!1395)

(assert (=> b!72557 (= lt!32326 (getCurrentListMapNoExtraKeys!56 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32332 () (_ BitVec 64))

(assert (=> b!72557 (= lt!32332 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32324 () (_ BitVec 64))

(assert (=> b!72557 (= lt!32324 (select (arr!1844 lt!31845) #b00000000000000000000000000000000))))

(declare-fun lt!32327 () Unit!1996)

(assert (=> b!72557 (= lt!32327 (addApplyDifferent!50 lt!32326 lt!32332 (zeroValue!2095 newMap!16) lt!32324))))

(assert (=> b!72557 (= (apply!74 (+!91 lt!32326 (tuple2!2111 lt!32332 (zeroValue!2095 newMap!16))) lt!32324) (apply!74 lt!32326 lt!32324))))

(declare-fun lt!32331 () Unit!1996)

(assert (=> b!72557 (= lt!32331 lt!32327)))

(declare-fun lt!32335 () ListLongMap!1395)

(assert (=> b!72557 (= lt!32335 (getCurrentListMapNoExtraKeys!56 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32328 () (_ BitVec 64))

(assert (=> b!72557 (= lt!32328 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32333 () (_ BitVec 64))

(assert (=> b!72557 (= lt!32333 (select (arr!1844 lt!31845) #b00000000000000000000000000000000))))

(assert (=> b!72557 (= lt!32325 (addApplyDifferent!50 lt!32335 lt!32328 (minValue!2095 newMap!16) lt!32333))))

(assert (=> b!72557 (= (apply!74 (+!91 lt!32335 (tuple2!2111 lt!32328 (minValue!2095 newMap!16))) lt!32333) (apply!74 lt!32335 lt!32333))))

(declare-fun b!72558 () Bool)

(declare-fun call!6313 () ListLongMap!1395)

(assert (=> b!72558 (= e!47454 call!6313)))

(declare-fun call!6310 () ListLongMap!1395)

(declare-fun bm!6310 () Bool)

(declare-fun c!10738 () Bool)

(declare-fun c!10737 () Bool)

(assert (=> bm!6310 (= call!6309 (+!91 (ite c!10737 call!6312 (ite c!10738 call!6310 call!6313)) (ite (or c!10737 c!10738) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun b!72559 () Bool)

(declare-fun e!47446 () Bool)

(assert (=> b!72559 (= e!47443 e!47446)))

(declare-fun res!38546 () Bool)

(assert (=> b!72559 (= res!38546 call!6314)))

(assert (=> b!72559 (=> (not res!38546) (not e!47446))))

(declare-fun b!72560 () Bool)

(assert (=> b!72560 (= e!47446 (= (apply!74 lt!32343 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun bm!6311 () Bool)

(assert (=> bm!6311 (= call!6313 call!6310)))

(declare-fun b!72561 () Bool)

(assert (=> b!72561 (= e!47444 e!47447)))

(assert (=> b!72561 (= c!10738 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72562 () Bool)

(declare-fun e!47442 () Bool)

(assert (=> b!72562 (= e!47452 e!47442)))

(declare-fun res!38547 () Bool)

(assert (=> b!72562 (= res!38547 call!6315)))

(assert (=> b!72562 (=> (not res!38547) (not e!47442))))

(declare-fun bm!6312 () Bool)

(assert (=> bm!6312 (= call!6310 call!6312)))

(declare-fun b!72563 () Bool)

(declare-fun e!47450 () Bool)

(assert (=> b!72563 (= e!47450 (= (apply!74 lt!32343 (select (arr!1844 lt!31845) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 lt!31822) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72563 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 lt!31822)))))

(assert (=> b!72563 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 lt!31845)))))

(declare-fun d!16679 () Bool)

(assert (=> d!16679 e!47448))

(declare-fun res!38549 () Bool)

(assert (=> d!16679 (=> (not res!38549) (not e!47448))))

(assert (=> d!16679 (= res!38549 (or (bvsge #b00000000000000000000000000000000 (size!2081 lt!31845)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 lt!31845)))))))

(declare-fun lt!32323 () ListLongMap!1395)

(assert (=> d!16679 (= lt!32343 lt!32323)))

(declare-fun lt!32338 () Unit!1996)

(assert (=> d!16679 (= lt!32338 e!47445)))

(declare-fun c!10735 () Bool)

(assert (=> d!16679 (= c!10735 e!47453)))

(declare-fun res!38545 () Bool)

(assert (=> d!16679 (=> (not res!38545) (not e!47453))))

(assert (=> d!16679 (= res!38545 (bvslt #b00000000000000000000000000000000 (size!2081 lt!31845)))))

(assert (=> d!16679 (= lt!32323 e!47444)))

(assert (=> d!16679 (= c!10737 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16679 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16679 (= (getCurrentListMap!411 lt!31845 lt!31822 (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32343)))

(declare-fun b!72564 () Bool)

(declare-fun Unit!2064 () Unit!1996)

(assert (=> b!72564 (= e!47445 Unit!2064)))

(declare-fun b!72565 () Bool)

(assert (=> b!72565 (= e!47442 (= (apply!74 lt!32343 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!72566 () Bool)

(assert (=> b!72566 (= e!47449 (validKeyInArray!0 (select (arr!1844 lt!31845) #b00000000000000000000000000000000)))))

(declare-fun b!72567 () Bool)

(assert (=> b!72567 (= e!47443 (not call!6314))))

(declare-fun b!72568 () Bool)

(assert (=> b!72568 (= e!47452 (not call!6315))))

(declare-fun b!72569 () Bool)

(assert (=> b!72569 (= e!47451 e!47450)))

(declare-fun res!38550 () Bool)

(assert (=> b!72569 (=> (not res!38550) (not e!47450))))

(assert (=> b!72569 (= res!38550 (contains!715 lt!32343 (select (arr!1844 lt!31845) #b00000000000000000000000000000000)))))

(assert (=> b!72569 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 lt!31845)))))

(declare-fun b!72570 () Bool)

(assert (=> b!72570 (= e!47454 call!6311)))

(assert (= (and d!16679 c!10737) b!72551))

(assert (= (and d!16679 (not c!10737)) b!72561))

(assert (= (and b!72561 c!10738) b!72550))

(assert (= (and b!72561 (not c!10738)) b!72556))

(assert (= (and b!72556 c!10739) b!72570))

(assert (= (and b!72556 (not c!10739)) b!72558))

(assert (= (or b!72570 b!72558) bm!6311))

(assert (= (or b!72550 bm!6311) bm!6312))

(assert (= (or b!72550 b!72570) bm!6306))

(assert (= (or b!72551 bm!6312) bm!6309))

(assert (= (or b!72551 bm!6306) bm!6310))

(assert (= (and d!16679 res!38545) b!72555))

(assert (= (and d!16679 c!10735) b!72557))

(assert (= (and d!16679 (not c!10735)) b!72564))

(assert (= (and d!16679 res!38549) b!72553))

(assert (= (and b!72553 res!38544) b!72566))

(assert (= (and b!72553 (not res!38548)) b!72569))

(assert (= (and b!72569 res!38550) b!72563))

(assert (= (and b!72553 res!38551) b!72552))

(assert (= (and b!72552 c!10736) b!72562))

(assert (= (and b!72552 (not c!10736)) b!72568))

(assert (= (and b!72562 res!38547) b!72565))

(assert (= (or b!72562 b!72568) bm!6308))

(assert (= (and b!72552 res!38543) b!72554))

(assert (= (and b!72554 c!10734) b!72559))

(assert (= (and b!72554 (not c!10734)) b!72567))

(assert (= (and b!72559 res!38546) b!72560))

(assert (= (or b!72559 b!72567) bm!6307))

(declare-fun b_lambda!3247 () Bool)

(assert (=> (not b_lambda!3247) (not b!72563)))

(assert (=> b!72563 t!5010))

(declare-fun b_and!4461 () Bool)

(assert (= b_and!4457 (and (=> t!5010 result!2661) b_and!4461)))

(assert (=> b!72563 t!5012))

(declare-fun b_and!4463 () Bool)

(assert (= b_and!4459 (and (=> t!5012 result!2663) b_and!4463)))

(declare-fun m!70703 () Bool)

(assert (=> b!72565 m!70703))

(declare-fun m!70705 () Bool)

(assert (=> b!72560 m!70705))

(assert (=> d!16679 m!68327))

(declare-fun m!70707 () Bool)

(assert (=> bm!6307 m!70707))

(declare-fun m!70709 () Bool)

(assert (=> b!72566 m!70709))

(assert (=> b!72566 m!70709))

(declare-fun m!70711 () Bool)

(assert (=> b!72566 m!70711))

(declare-fun m!70713 () Bool)

(assert (=> bm!6308 m!70713))

(assert (=> b!72569 m!70709))

(assert (=> b!72569 m!70709))

(declare-fun m!70715 () Bool)

(assert (=> b!72569 m!70715))

(assert (=> b!72555 m!70709))

(assert (=> b!72555 m!70709))

(assert (=> b!72555 m!70711))

(declare-fun m!70717 () Bool)

(assert (=> bm!6310 m!70717))

(declare-fun m!70719 () Bool)

(assert (=> bm!6309 m!70719))

(declare-fun m!70721 () Bool)

(assert (=> b!72551 m!70721))

(declare-fun m!70723 () Bool)

(assert (=> b!72557 m!70723))

(declare-fun m!70725 () Bool)

(assert (=> b!72557 m!70725))

(declare-fun m!70727 () Bool)

(assert (=> b!72557 m!70727))

(declare-fun m!70729 () Bool)

(assert (=> b!72557 m!70729))

(declare-fun m!70731 () Bool)

(assert (=> b!72557 m!70731))

(declare-fun m!70733 () Bool)

(assert (=> b!72557 m!70733))

(declare-fun m!70735 () Bool)

(assert (=> b!72557 m!70735))

(declare-fun m!70737 () Bool)

(assert (=> b!72557 m!70737))

(assert (=> b!72557 m!70709))

(assert (=> b!72557 m!70731))

(declare-fun m!70739 () Bool)

(assert (=> b!72557 m!70739))

(assert (=> b!72557 m!70727))

(declare-fun m!70741 () Bool)

(assert (=> b!72557 m!70741))

(declare-fun m!70743 () Bool)

(assert (=> b!72557 m!70743))

(declare-fun m!70745 () Bool)

(assert (=> b!72557 m!70745))

(declare-fun m!70747 () Bool)

(assert (=> b!72557 m!70747))

(assert (=> b!72557 m!70719))

(assert (=> b!72557 m!70741))

(declare-fun m!70749 () Bool)

(assert (=> b!72557 m!70749))

(declare-fun m!70751 () Bool)

(assert (=> b!72557 m!70751))

(assert (=> b!72557 m!70735))

(assert (=> b!72563 m!68441))

(assert (=> b!72563 m!70709))

(declare-fun m!70753 () Bool)

(assert (=> b!72563 m!70753))

(declare-fun m!70755 () Bool)

(assert (=> b!72563 m!70755))

(assert (=> b!72563 m!68441))

(declare-fun m!70757 () Bool)

(assert (=> b!72563 m!70757))

(assert (=> b!72563 m!70755))

(assert (=> b!72563 m!70709))

(assert (=> d!16065 d!16679))

(assert (=> d!16065 d!15843))

(assert (=> d!16065 d!15983))

(declare-fun d!16681 () Bool)

(assert (=> d!16681 (arrayContainsKey!0 lt!31823 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!32345 () Unit!1996)

(assert (=> d!16681 (= lt!32345 (choose!13 lt!31823 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))))))

(assert (=> d!16681 (bvsge (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452)) #b00000000000000000000000000000000)))

(assert (=> d!16681 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!31823 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (ite c!10300 (index!3049 lt!31452) (index!3046 lt!31452))) lt!32345)))

(declare-fun bs!3130 () Bool)

(assert (= bs!3130 d!16681))

(assert (=> bs!3130 m!67819))

(assert (=> bs!3130 m!68921))

(assert (=> bs!3130 m!67819))

(declare-fun m!70759 () Bool)

(assert (=> bs!3130 m!70759))

(assert (=> d!16065 d!16681))

(assert (=> b!71127 d!16477))

(assert (=> b!71127 d!16479))

(assert (=> b!71247 d!16003))

(declare-fun d!16683 () Bool)

(assert (=> d!16683 (= (inRange!0 (ite c!10412 (index!3046 lt!31748) (index!3049 lt!31748)) (mask!6148 newMap!16)) (and (bvsge (ite c!10412 (index!3046 lt!31748) (index!3049 lt!31748)) #b00000000000000000000000000000000) (bvslt (ite c!10412 (index!3046 lt!31748) (index!3049 lt!31748)) (bvadd (mask!6148 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6175 d!16683))

(declare-fun d!16685 () Bool)

(assert (=> d!16685 (= (apply!74 lt!31716 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (getValueByKey!133 (toList!713 lt!31716) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3131 () Bool)

(assert (= bs!3131 d!16685))

(assert (=> bs!3131 m!68397))

(assert (=> bs!3131 m!70015))

(assert (=> bs!3131 m!70015))

(declare-fun m!70761 () Bool)

(assert (=> bs!3131 m!70761))

(assert (=> b!71373 d!16685))

(declare-fun d!16687 () Bool)

(declare-fun c!10740 () Bool)

(assert (=> d!16687 (= c!10740 ((_ is ValueCellFull!890) (select (arr!1845 (_values!2174 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!47455 () V!2937)

(assert (=> d!16687 (= (get!1141 (select (arr!1845 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47455)))

(declare-fun b!72571 () Bool)

(assert (=> b!72571 (= e!47455 (get!1144 (select (arr!1845 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72572 () Bool)

(assert (=> b!72572 (= e!47455 (get!1145 (select (arr!1845 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16687 c!10740) b!72571))

(assert (= (and d!16687 (not c!10740)) b!72572))

(assert (=> b!72571 m!68793))

(assert (=> b!72571 m!68441))

(declare-fun m!70763 () Bool)

(assert (=> b!72571 m!70763))

(assert (=> b!72572 m!68793))

(assert (=> b!72572 m!68441))

(declare-fun m!70765 () Bool)

(assert (=> b!72572 m!70765))

(assert (=> b!71373 d!16687))

(declare-fun d!16689 () Bool)

(declare-fun res!38552 () Bool)

(declare-fun e!47456 () Bool)

(assert (=> d!16689 (=> res!38552 e!47456)))

(assert (=> d!16689 (= res!38552 (and ((_ is Cons!1463) (toList!713 lt!31501)) (= (_1!1066 (h!2049 (toList!713 lt!31501))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16689 (= (containsKey!136 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000) e!47456)))

(declare-fun b!72573 () Bool)

(declare-fun e!47457 () Bool)

(assert (=> b!72573 (= e!47456 e!47457)))

(declare-fun res!38553 () Bool)

(assert (=> b!72573 (=> (not res!38553) (not e!47457))))

(assert (=> b!72573 (= res!38553 (and (or (not ((_ is Cons!1463) (toList!713 lt!31501))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31501))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1463) (toList!713 lt!31501)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31501))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72574 () Bool)

(assert (=> b!72574 (= e!47457 (containsKey!136 (t!4995 (toList!713 lt!31501)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16689 (not res!38552)) b!72573))

(assert (= (and b!72573 res!38553) b!72574))

(declare-fun m!70767 () Bool)

(assert (=> b!72574 m!70767))

(assert (=> d!15917 d!16689))

(declare-fun d!16691 () Bool)

(declare-fun lt!32346 () Bool)

(assert (=> d!16691 (= lt!32346 (select (content!76 (t!4995 (toList!713 lt!31516))) lt!31228))))

(declare-fun e!47459 () Bool)

(assert (=> d!16691 (= lt!32346 e!47459)))

(declare-fun res!38555 () Bool)

(assert (=> d!16691 (=> (not res!38555) (not e!47459))))

(assert (=> d!16691 (= res!38555 ((_ is Cons!1463) (t!4995 (toList!713 lt!31516))))))

(assert (=> d!16691 (= (contains!719 (t!4995 (toList!713 lt!31516)) lt!31228) lt!32346)))

(declare-fun b!72575 () Bool)

(declare-fun e!47458 () Bool)

(assert (=> b!72575 (= e!47459 e!47458)))

(declare-fun res!38554 () Bool)

(assert (=> b!72575 (=> res!38554 e!47458)))

(assert (=> b!72575 (= res!38554 (= (h!2049 (t!4995 (toList!713 lt!31516))) lt!31228))))

(declare-fun b!72576 () Bool)

(assert (=> b!72576 (= e!47458 (contains!719 (t!4995 (t!4995 (toList!713 lt!31516))) lt!31228))))

(assert (= (and d!16691 res!38555) b!72575))

(assert (= (and b!72575 (not res!38554)) b!72576))

(declare-fun m!70769 () Bool)

(assert (=> d!16691 m!70769))

(declare-fun m!70771 () Bool)

(assert (=> d!16691 m!70771))

(declare-fun m!70773 () Bool)

(assert (=> b!72576 m!70773))

(assert (=> b!71238 d!16691))

(declare-fun d!16693 () Bool)

(assert (not d!16693))

(assert (=> b!71501 d!16693))

(declare-fun d!16695 () Bool)

(declare-fun e!47461 () Bool)

(assert (=> d!16695 e!47461))

(declare-fun res!38556 () Bool)

(assert (=> d!16695 (=> res!38556 e!47461)))

(declare-fun lt!32350 () Bool)

(assert (=> d!16695 (= res!38556 (not lt!32350))))

(declare-fun lt!32349 () Bool)

(assert (=> d!16695 (= lt!32350 lt!32349)))

(declare-fun lt!32348 () Unit!1996)

(declare-fun e!47460 () Unit!1996)

(assert (=> d!16695 (= lt!32348 e!47460)))

(declare-fun c!10741 () Bool)

(assert (=> d!16695 (= c!10741 lt!32349)))

(assert (=> d!16695 (= lt!32349 (containsKey!136 (toList!713 lt!31597) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16695 (= (contains!715 lt!31597 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32350)))

(declare-fun b!72577 () Bool)

(declare-fun lt!32347 () Unit!1996)

(assert (=> b!72577 (= e!47460 lt!32347)))

(assert (=> b!72577 (= lt!32347 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31597) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72577 (isDefined!85 (getValueByKey!133 (toList!713 lt!31597) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72578 () Bool)

(declare-fun Unit!2065 () Unit!1996)

(assert (=> b!72578 (= e!47460 Unit!2065)))

(declare-fun b!72579 () Bool)

(assert (=> b!72579 (= e!47461 (isDefined!85 (getValueByKey!133 (toList!713 lt!31597) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16695 c!10741) b!72577))

(assert (= (and d!16695 (not c!10741)) b!72578))

(assert (= (and d!16695 (not res!38556)) b!72579))

(declare-fun m!70775 () Bool)

(assert (=> d!16695 m!70775))

(declare-fun m!70777 () Bool)

(assert (=> b!72577 m!70777))

(assert (=> b!72577 m!69293))

(assert (=> b!72577 m!69293))

(declare-fun m!70779 () Bool)

(assert (=> b!72577 m!70779))

(assert (=> b!72579 m!69293))

(assert (=> b!72579 m!69293))

(assert (=> b!72579 m!70779))

(assert (=> bm!6146 d!16695))

(declare-fun bm!6313 () Bool)

(declare-fun call!6318 () ListLongMap!1395)

(declare-fun call!6316 () ListLongMap!1395)

(assert (=> bm!6313 (= call!6318 call!6316)))

(declare-fun b!72580 () Bool)

(declare-fun e!47467 () ListLongMap!1395)

(assert (=> b!72580 (= e!47467 call!6318)))

(declare-fun b!72581 () Bool)

(declare-fun e!47464 () ListLongMap!1395)

(assert (=> b!72581 (= e!47464 (+!91 call!6316 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (_2!1065 lt!31440)))))))

(declare-fun b!72582 () Bool)

(declare-fun res!38557 () Bool)

(declare-fun e!47468 () Bool)

(assert (=> b!72582 (=> (not res!38557) (not e!47468))))

(declare-fun e!47472 () Bool)

(assert (=> b!72582 (= res!38557 e!47472)))

(declare-fun c!10744 () Bool)

(assert (=> b!72582 (= c!10744 (not (= (bvand (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6314 () Bool)

(declare-fun call!6321 () Bool)

(declare-fun lt!32371 () ListLongMap!1395)

(assert (=> bm!6314 (= call!6321 (contains!715 lt!32371 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6315 () Bool)

(declare-fun call!6322 () Bool)

(assert (=> bm!6315 (= call!6322 (contains!715 lt!32371 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6316 () Bool)

(declare-fun call!6319 () ListLongMap!1395)

(assert (=> bm!6316 (= call!6319 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (_2!1065 lt!31440)) (_values!2174 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440)) (extraKeys!2054 (_2!1065 lt!31440)) (zeroValue!2095 (_2!1065 lt!31440)) (minValue!2095 (_2!1065 lt!31440)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1065 lt!31440))))))

(declare-fun b!72583 () Bool)

(declare-fun res!38565 () Bool)

(assert (=> b!72583 (=> (not res!38565) (not e!47468))))

(declare-fun e!47471 () Bool)

(assert (=> b!72583 (= res!38565 e!47471)))

(declare-fun res!38562 () Bool)

(assert (=> b!72583 (=> res!38562 e!47471)))

(declare-fun e!47469 () Bool)

(assert (=> b!72583 (= res!38562 (not e!47469))))

(declare-fun res!38558 () Bool)

(assert (=> b!72583 (=> (not res!38558) (not e!47469))))

(assert (=> b!72583 (= res!38558 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))))))

(declare-fun b!72584 () Bool)

(declare-fun e!47463 () Bool)

(assert (=> b!72584 (= e!47468 e!47463)))

(declare-fun c!10742 () Bool)

(assert (=> b!72584 (= c!10742 (not (= (bvand (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72585 () Bool)

(declare-fun e!47473 () Bool)

(assert (=> b!72585 (= e!47473 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000)))))

(declare-fun b!72586 () Bool)

(declare-fun c!10747 () Bool)

(assert (=> b!72586 (= c!10747 (and (not (= (bvand (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47474 () ListLongMap!1395)

(assert (=> b!72586 (= e!47467 e!47474)))

(declare-fun b!72587 () Bool)

(declare-fun e!47465 () Unit!1996)

(declare-fun lt!32353 () Unit!1996)

(assert (=> b!72587 (= e!47465 lt!32353)))

(declare-fun lt!32364 () ListLongMap!1395)

(assert (=> b!72587 (= lt!32364 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (_2!1065 lt!31440)) (_values!2174 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440)) (extraKeys!2054 (_2!1065 lt!31440)) (zeroValue!2095 (_2!1065 lt!31440)) (minValue!2095 (_2!1065 lt!31440)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1065 lt!31440))))))

(declare-fun lt!32370 () (_ BitVec 64))

(assert (=> b!72587 (= lt!32370 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32367 () (_ BitVec 64))

(assert (=> b!72587 (= lt!32367 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000))))

(declare-fun lt!32368 () Unit!1996)

(assert (=> b!72587 (= lt!32368 (addStillContains!50 lt!32364 lt!32370 (zeroValue!2095 (_2!1065 lt!31440)) lt!32367))))

(assert (=> b!72587 (contains!715 (+!91 lt!32364 (tuple2!2111 lt!32370 (zeroValue!2095 (_2!1065 lt!31440)))) lt!32367)))

(declare-fun lt!32362 () Unit!1996)

(assert (=> b!72587 (= lt!32362 lt!32368)))

(declare-fun lt!32365 () ListLongMap!1395)

(assert (=> b!72587 (= lt!32365 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (_2!1065 lt!31440)) (_values!2174 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440)) (extraKeys!2054 (_2!1065 lt!31440)) (zeroValue!2095 (_2!1065 lt!31440)) (minValue!2095 (_2!1065 lt!31440)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1065 lt!31440))))))

(declare-fun lt!32357 () (_ BitVec 64))

(assert (=> b!72587 (= lt!32357 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32369 () (_ BitVec 64))

(assert (=> b!72587 (= lt!32369 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000))))

(declare-fun lt!32372 () Unit!1996)

(assert (=> b!72587 (= lt!32372 (addApplyDifferent!50 lt!32365 lt!32357 (minValue!2095 (_2!1065 lt!31440)) lt!32369))))

(assert (=> b!72587 (= (apply!74 (+!91 lt!32365 (tuple2!2111 lt!32357 (minValue!2095 (_2!1065 lt!31440)))) lt!32369) (apply!74 lt!32365 lt!32369))))

(declare-fun lt!32358 () Unit!1996)

(assert (=> b!72587 (= lt!32358 lt!32372)))

(declare-fun lt!32354 () ListLongMap!1395)

(assert (=> b!72587 (= lt!32354 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (_2!1065 lt!31440)) (_values!2174 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440)) (extraKeys!2054 (_2!1065 lt!31440)) (zeroValue!2095 (_2!1065 lt!31440)) (minValue!2095 (_2!1065 lt!31440)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1065 lt!31440))))))

(declare-fun lt!32360 () (_ BitVec 64))

(assert (=> b!72587 (= lt!32360 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32352 () (_ BitVec 64))

(assert (=> b!72587 (= lt!32352 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000))))

(declare-fun lt!32355 () Unit!1996)

(assert (=> b!72587 (= lt!32355 (addApplyDifferent!50 lt!32354 lt!32360 (zeroValue!2095 (_2!1065 lt!31440)) lt!32352))))

(assert (=> b!72587 (= (apply!74 (+!91 lt!32354 (tuple2!2111 lt!32360 (zeroValue!2095 (_2!1065 lt!31440)))) lt!32352) (apply!74 lt!32354 lt!32352))))

(declare-fun lt!32359 () Unit!1996)

(assert (=> b!72587 (= lt!32359 lt!32355)))

(declare-fun lt!32363 () ListLongMap!1395)

(assert (=> b!72587 (= lt!32363 (getCurrentListMapNoExtraKeys!56 (_keys!3839 (_2!1065 lt!31440)) (_values!2174 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440)) (extraKeys!2054 (_2!1065 lt!31440)) (zeroValue!2095 (_2!1065 lt!31440)) (minValue!2095 (_2!1065 lt!31440)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1065 lt!31440))))))

(declare-fun lt!32356 () (_ BitVec 64))

(assert (=> b!72587 (= lt!32356 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32361 () (_ BitVec 64))

(assert (=> b!72587 (= lt!32361 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000))))

(assert (=> b!72587 (= lt!32353 (addApplyDifferent!50 lt!32363 lt!32356 (minValue!2095 (_2!1065 lt!31440)) lt!32361))))

(assert (=> b!72587 (= (apply!74 (+!91 lt!32363 (tuple2!2111 lt!32356 (minValue!2095 (_2!1065 lt!31440)))) lt!32361) (apply!74 lt!32363 lt!32361))))

(declare-fun b!72588 () Bool)

(declare-fun call!6320 () ListLongMap!1395)

(assert (=> b!72588 (= e!47474 call!6320)))

(declare-fun c!10745 () Bool)

(declare-fun c!10746 () Bool)

(declare-fun bm!6317 () Bool)

(declare-fun call!6317 () ListLongMap!1395)

(assert (=> bm!6317 (= call!6316 (+!91 (ite c!10745 call!6319 (ite c!10746 call!6317 call!6320)) (ite (or c!10745 c!10746) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (_2!1065 lt!31440))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (_2!1065 lt!31440))))))))

(declare-fun b!72589 () Bool)

(declare-fun e!47466 () Bool)

(assert (=> b!72589 (= e!47463 e!47466)))

(declare-fun res!38560 () Bool)

(assert (=> b!72589 (= res!38560 call!6321)))

(assert (=> b!72589 (=> (not res!38560) (not e!47466))))

(declare-fun b!72590 () Bool)

(assert (=> b!72590 (= e!47466 (= (apply!74 lt!32371 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 (_2!1065 lt!31440))))))

(declare-fun bm!6318 () Bool)

(assert (=> bm!6318 (= call!6320 call!6317)))

(declare-fun b!72591 () Bool)

(assert (=> b!72591 (= e!47464 e!47467)))

(assert (=> b!72591 (= c!10746 (and (not (= (bvand (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72592 () Bool)

(declare-fun e!47462 () Bool)

(assert (=> b!72592 (= e!47472 e!47462)))

(declare-fun res!38561 () Bool)

(assert (=> b!72592 (= res!38561 call!6322)))

(assert (=> b!72592 (=> (not res!38561) (not e!47462))))

(declare-fun bm!6319 () Bool)

(assert (=> bm!6319 (= call!6317 call!6319)))

(declare-fun b!72593 () Bool)

(declare-fun e!47470 () Bool)

(assert (=> b!72593 (= e!47470 (= (apply!74 lt!32371 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000)) (get!1141 (select (arr!1845 (_values!2174 (_2!1065 lt!31440))) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 (_2!1065 lt!31440)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72593 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2082 (_values!2174 (_2!1065 lt!31440)))))))

(assert (=> b!72593 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))))))

(declare-fun d!16697 () Bool)

(assert (=> d!16697 e!47468))

(declare-fun res!38563 () Bool)

(assert (=> d!16697 (=> (not res!38563) (not e!47468))))

(assert (=> d!16697 (= res!38563 (or (bvsge #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))))))))

(declare-fun lt!32351 () ListLongMap!1395)

(assert (=> d!16697 (= lt!32371 lt!32351)))

(declare-fun lt!32366 () Unit!1996)

(assert (=> d!16697 (= lt!32366 e!47465)))

(declare-fun c!10743 () Bool)

(assert (=> d!16697 (= c!10743 e!47473)))

(declare-fun res!38559 () Bool)

(assert (=> d!16697 (=> (not res!38559) (not e!47473))))

(assert (=> d!16697 (= res!38559 (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))))))

(assert (=> d!16697 (= lt!32351 e!47464)))

(assert (=> d!16697 (= c!10745 (and (not (= (bvand (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 (_2!1065 lt!31440)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16697 (validMask!0 (mask!6148 (_2!1065 lt!31440)))))

(assert (=> d!16697 (= (getCurrentListMap!411 (_keys!3839 (_2!1065 lt!31440)) (_values!2174 (_2!1065 lt!31440)) (mask!6148 (_2!1065 lt!31440)) (extraKeys!2054 (_2!1065 lt!31440)) (zeroValue!2095 (_2!1065 lt!31440)) (minValue!2095 (_2!1065 lt!31440)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1065 lt!31440))) lt!32371)))

(declare-fun b!72594 () Bool)

(declare-fun Unit!2066 () Unit!1996)

(assert (=> b!72594 (= e!47465 Unit!2066)))

(declare-fun b!72595 () Bool)

(assert (=> b!72595 (= e!47462 (= (apply!74 lt!32371 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 (_2!1065 lt!31440))))))

(declare-fun b!72596 () Bool)

(assert (=> b!72596 (= e!47469 (validKeyInArray!0 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000)))))

(declare-fun b!72597 () Bool)

(assert (=> b!72597 (= e!47463 (not call!6321))))

(declare-fun b!72598 () Bool)

(assert (=> b!72598 (= e!47472 (not call!6322))))

(declare-fun b!72599 () Bool)

(assert (=> b!72599 (= e!47471 e!47470)))

(declare-fun res!38564 () Bool)

(assert (=> b!72599 (=> (not res!38564) (not e!47470))))

(assert (=> b!72599 (= res!38564 (contains!715 lt!32371 (select (arr!1844 (_keys!3839 (_2!1065 lt!31440))) #b00000000000000000000000000000000)))))

(assert (=> b!72599 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2081 (_keys!3839 (_2!1065 lt!31440)))))))

(declare-fun b!72600 () Bool)

(assert (=> b!72600 (= e!47474 call!6318)))

(assert (= (and d!16697 c!10745) b!72581))

(assert (= (and d!16697 (not c!10745)) b!72591))

(assert (= (and b!72591 c!10746) b!72580))

(assert (= (and b!72591 (not c!10746)) b!72586))

(assert (= (and b!72586 c!10747) b!72600))

(assert (= (and b!72586 (not c!10747)) b!72588))

(assert (= (or b!72600 b!72588) bm!6318))

(assert (= (or b!72580 bm!6318) bm!6319))

(assert (= (or b!72580 b!72600) bm!6313))

(assert (= (or b!72581 bm!6319) bm!6316))

(assert (= (or b!72581 bm!6313) bm!6317))

(assert (= (and d!16697 res!38559) b!72585))

(assert (= (and d!16697 c!10743) b!72587))

(assert (= (and d!16697 (not c!10743)) b!72594))

(assert (= (and d!16697 res!38563) b!72583))

(assert (= (and b!72583 res!38558) b!72596))

(assert (= (and b!72583 (not res!38562)) b!72599))

(assert (= (and b!72599 res!38564) b!72593))

(assert (= (and b!72583 res!38565) b!72582))

(assert (= (and b!72582 c!10744) b!72592))

(assert (= (and b!72582 (not c!10744)) b!72598))

(assert (= (and b!72592 res!38561) b!72595))

(assert (= (or b!72592 b!72598) bm!6315))

(assert (= (and b!72582 res!38557) b!72584))

(assert (= (and b!72584 c!10742) b!72589))

(assert (= (and b!72584 (not c!10742)) b!72597))

(assert (= (and b!72589 res!38560) b!72590))

(assert (= (or b!72589 b!72597) bm!6314))

(declare-fun b_lambda!3249 () Bool)

(assert (=> (not b_lambda!3249) (not b!72593)))

(declare-fun tb!1517 () Bool)

(declare-fun t!5015 () Bool)

(assert (=> (and b!70696 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 (_2!1065 lt!31440))) t!5015) tb!1517))

(declare-fun result!2665 () Bool)

(assert (=> tb!1517 (= result!2665 tp_is_empty!2467)))

(assert (=> b!72593 t!5015))

(declare-fun b_and!4465 () Bool)

(assert (= b_and!4461 (and (=> t!5015 result!2665) b_and!4465)))

(declare-fun t!5017 () Bool)

(declare-fun tb!1519 () Bool)

(assert (=> (and b!70685 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (_2!1065 lt!31440))) t!5017) tb!1519))

(declare-fun result!2667 () Bool)

(assert (= result!2667 result!2665))

(assert (=> b!72593 t!5017))

(declare-fun b_and!4467 () Bool)

(assert (= b_and!4463 (and (=> t!5017 result!2667) b_and!4467)))

(declare-fun m!70781 () Bool)

(assert (=> b!72595 m!70781))

(declare-fun m!70783 () Bool)

(assert (=> b!72590 m!70783))

(assert (=> d!16697 m!69917))

(declare-fun m!70785 () Bool)

(assert (=> bm!6314 m!70785))

(assert (=> b!72596 m!69161))

(assert (=> b!72596 m!69161))

(assert (=> b!72596 m!69163))

(declare-fun m!70787 () Bool)

(assert (=> bm!6315 m!70787))

(assert (=> b!72599 m!69161))

(assert (=> b!72599 m!69161))

(declare-fun m!70789 () Bool)

(assert (=> b!72599 m!70789))

(assert (=> b!72585 m!69161))

(assert (=> b!72585 m!69161))

(assert (=> b!72585 m!69163))

(declare-fun m!70791 () Bool)

(assert (=> bm!6317 m!70791))

(declare-fun m!70793 () Bool)

(assert (=> bm!6316 m!70793))

(declare-fun m!70795 () Bool)

(assert (=> b!72581 m!70795))

(declare-fun m!70797 () Bool)

(assert (=> b!72587 m!70797))

(declare-fun m!70799 () Bool)

(assert (=> b!72587 m!70799))

(declare-fun m!70801 () Bool)

(assert (=> b!72587 m!70801))

(declare-fun m!70803 () Bool)

(assert (=> b!72587 m!70803))

(declare-fun m!70805 () Bool)

(assert (=> b!72587 m!70805))

(declare-fun m!70807 () Bool)

(assert (=> b!72587 m!70807))

(declare-fun m!70809 () Bool)

(assert (=> b!72587 m!70809))

(declare-fun m!70811 () Bool)

(assert (=> b!72587 m!70811))

(assert (=> b!72587 m!69161))

(assert (=> b!72587 m!70805))

(declare-fun m!70813 () Bool)

(assert (=> b!72587 m!70813))

(assert (=> b!72587 m!70801))

(declare-fun m!70815 () Bool)

(assert (=> b!72587 m!70815))

(declare-fun m!70817 () Bool)

(assert (=> b!72587 m!70817))

(declare-fun m!70819 () Bool)

(assert (=> b!72587 m!70819))

(declare-fun m!70821 () Bool)

(assert (=> b!72587 m!70821))

(assert (=> b!72587 m!70793))

(assert (=> b!72587 m!70815))

(declare-fun m!70823 () Bool)

(assert (=> b!72587 m!70823))

(declare-fun m!70825 () Bool)

(assert (=> b!72587 m!70825))

(assert (=> b!72587 m!70809))

(declare-fun m!70827 () Bool)

(assert (=> b!72593 m!70827))

(assert (=> b!72593 m!69161))

(declare-fun m!70829 () Bool)

(assert (=> b!72593 m!70829))

(declare-fun m!70831 () Bool)

(assert (=> b!72593 m!70831))

(assert (=> b!72593 m!70827))

(declare-fun m!70833 () Bool)

(assert (=> b!72593 m!70833))

(assert (=> b!72593 m!70831))

(assert (=> b!72593 m!69161))

(assert (=> d!15921 d!16697))

(declare-fun lt!32373 () Bool)

(declare-fun d!16699 () Bool)

(assert (=> d!16699 (= lt!32373 (select (content!76 (toList!713 lt!31605)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(declare-fun e!47476 () Bool)

(assert (=> d!16699 (= lt!32373 e!47476)))

(declare-fun res!38567 () Bool)

(assert (=> d!16699 (=> (not res!38567) (not e!47476))))

(assert (=> d!16699 (= res!38567 ((_ is Cons!1463) (toList!713 lt!31605)))))

(assert (=> d!16699 (= (contains!719 (toList!713 lt!31605) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) lt!32373)))

(declare-fun b!72601 () Bool)

(declare-fun e!47475 () Bool)

(assert (=> b!72601 (= e!47476 e!47475)))

(declare-fun res!38566 () Bool)

(assert (=> b!72601 (=> res!38566 e!47475)))

(assert (=> b!72601 (= res!38566 (= (h!2049 (toList!713 lt!31605)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(declare-fun b!72602 () Bool)

(assert (=> b!72602 (= e!47475 (contains!719 (t!4995 (toList!713 lt!31605)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(assert (= (and d!16699 res!38567) b!72601))

(assert (= (and b!72601 (not res!38566)) b!72602))

(declare-fun m!70835 () Bool)

(assert (=> d!16699 m!70835))

(declare-fun m!70837 () Bool)

(assert (=> d!16699 m!70837))

(declare-fun m!70839 () Bool)

(assert (=> b!72602 m!70839))

(assert (=> b!71240 d!16699))

(declare-fun d!16701 () Bool)

(assert (=> d!16701 (= ($colon$colon!64 e!46623 (ite c!10345 (h!2049 (toList!713 (+!91 lt!31219 lt!31223))) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228)))) (Cons!1463 (ite c!10345 (h!2049 (toList!713 (+!91 lt!31219 lt!31223))) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))) e!46623))))

(assert (=> bm!6142 d!16701))

(declare-fun d!16703 () Bool)

(declare-fun c!10748 () Bool)

(assert (=> d!16703 (= c!10748 ((_ is Nil!1464) (toList!713 lt!31516)))))

(declare-fun e!47477 () (InoxSet tuple2!2110))

(assert (=> d!16703 (= (content!76 (toList!713 lt!31516)) e!47477)))

(declare-fun b!72603 () Bool)

(assert (=> b!72603 (= e!47477 ((as const (Array tuple2!2110 Bool)) false))))

(declare-fun b!72604 () Bool)

(assert (=> b!72604 (= e!47477 ((_ map or) (store ((as const (Array tuple2!2110 Bool)) false) (h!2049 (toList!713 lt!31516)) true) (content!76 (t!4995 (toList!713 lt!31516)))))))

(assert (= (and d!16703 c!10748) b!72603))

(assert (= (and d!16703 (not c!10748)) b!72604))

(declare-fun m!70841 () Bool)

(assert (=> b!72604 m!70841))

(assert (=> b!72604 m!70769))

(assert (=> d!15925 d!16703))

(assert (=> b!71541 d!16127))

(declare-fun d!16705 () Bool)

(declare-fun e!47478 () Bool)

(assert (=> d!16705 e!47478))

(declare-fun res!38568 () Bool)

(assert (=> d!16705 (=> (not res!38568) (not e!47478))))

(declare-fun lt!32377 () ListLongMap!1395)

(assert (=> d!16705 (= res!38568 (contains!715 lt!32377 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(declare-fun lt!32375 () List!1467)

(assert (=> d!16705 (= lt!32377 (ListLongMap!1396 lt!32375))))

(declare-fun lt!32376 () Unit!1996)

(declare-fun lt!32374 () Unit!1996)

(assert (=> d!16705 (= lt!32376 lt!32374)))

(assert (=> d!16705 (= (getValueByKey!133 lt!32375 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!16705 (= lt!32374 (lemmaContainsTupThenGetReturnValue!50 lt!32375 (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!16705 (= lt!32375 (insertStrictlySorted!53 (toList!713 (map!1155 newMap!16)) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))))))

(assert (=> d!16705 (= (+!91 (map!1155 newMap!16) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)) lt!32377)))

(declare-fun b!72605 () Bool)

(declare-fun res!38569 () Bool)

(assert (=> b!72605 (=> (not res!38569) (not e!47478))))

(assert (=> b!72605 (= res!38569 (= (getValueByKey!133 (toList!713 lt!32377) (_1!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220))) (Some!138 (_2!1066 (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))))

(declare-fun b!72606 () Bool)

(assert (=> b!72606 (= e!47478 (contains!719 (toList!713 lt!32377) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) lt!31220)))))

(assert (= (and d!16705 res!38568) b!72605))

(assert (= (and b!72605 res!38569) b!72606))

(declare-fun m!70843 () Bool)

(assert (=> d!16705 m!70843))

(declare-fun m!70845 () Bool)

(assert (=> d!16705 m!70845))

(declare-fun m!70847 () Bool)

(assert (=> d!16705 m!70847))

(declare-fun m!70849 () Bool)

(assert (=> d!16705 m!70849))

(declare-fun m!70851 () Bool)

(assert (=> b!72605 m!70851))

(declare-fun m!70853 () Bool)

(assert (=> b!72606 m!70853))

(assert (=> b!71541 d!16705))

(assert (=> b!71541 d!15827))

(declare-fun d!16707 () Bool)

(assert (=> d!16707 (= ($colon$colon!64 e!46799 (ite c!10421 (h!2049 (toList!713 (+!91 lt!31219 lt!31228))) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223)))) (Cons!1463 (ite c!10421 (h!2049 (toList!713 (+!91 lt!31219 lt!31228))) (tuple2!2111 (_1!1066 lt!31223) (_2!1066 lt!31223))) e!46799))))

(assert (=> bm!6177 d!16707))

(declare-fun d!16709 () Bool)

(declare-fun e!47480 () Bool)

(assert (=> d!16709 e!47480))

(declare-fun res!38570 () Bool)

(assert (=> d!16709 (=> res!38570 e!47480)))

(declare-fun lt!32381 () Bool)

(assert (=> d!16709 (= res!38570 (not lt!32381))))

(declare-fun lt!32380 () Bool)

(assert (=> d!16709 (= lt!32381 lt!32380)))

(declare-fun lt!32379 () Unit!1996)

(declare-fun e!47479 () Unit!1996)

(assert (=> d!16709 (= lt!32379 e!47479)))

(declare-fun c!10749 () Bool)

(assert (=> d!16709 (= c!10749 lt!32380)))

(assert (=> d!16709 (= lt!32380 (containsKey!136 (toList!713 lt!31681) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!16709 (= (contains!715 lt!31681 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!32381)))

(declare-fun b!72607 () Bool)

(declare-fun lt!32378 () Unit!1996)

(assert (=> b!72607 (= e!47479 lt!32378)))

(assert (=> b!72607 (= lt!32378 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31681) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!72607 (isDefined!85 (getValueByKey!133 (toList!713 lt!31681) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!72608 () Bool)

(declare-fun Unit!2067 () Unit!1996)

(assert (=> b!72608 (= e!47479 Unit!2067)))

(declare-fun b!72609 () Bool)

(assert (=> b!72609 (= e!47480 (isDefined!85 (getValueByKey!133 (toList!713 lt!31681) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!16709 c!10749) b!72607))

(assert (= (and d!16709 (not c!10749)) b!72608))

(assert (= (and d!16709 (not res!38570)) b!72609))

(assert (=> d!16709 m!68687))

(declare-fun m!70855 () Bool)

(assert (=> d!16709 m!70855))

(assert (=> b!72607 m!68687))

(declare-fun m!70857 () Bool)

(assert (=> b!72607 m!70857))

(assert (=> b!72607 m!68687))

(assert (=> b!72607 m!69607))

(assert (=> b!72607 m!69607))

(declare-fun m!70859 () Bool)

(assert (=> b!72607 m!70859))

(assert (=> b!72609 m!68687))

(assert (=> b!72609 m!69607))

(assert (=> b!72609 m!69607))

(assert (=> b!72609 m!70859))

(assert (=> b!71342 d!16709))

(declare-fun d!16711 () Bool)

(declare-fun e!47481 () Bool)

(assert (=> d!16711 e!47481))

(declare-fun res!38571 () Bool)

(assert (=> d!16711 (=> (not res!38571) (not e!47481))))

(declare-fun lt!32385 () ListLongMap!1395)

(assert (=> d!16711 (= res!38571 (contains!715 lt!32385 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun lt!32383 () List!1467)

(assert (=> d!16711 (= lt!32385 (ListLongMap!1396 lt!32383))))

(declare-fun lt!32384 () Unit!1996)

(declare-fun lt!32382 () Unit!1996)

(assert (=> d!16711 (= lt!32384 lt!32382)))

(assert (=> d!16711 (= (getValueByKey!133 lt!32383 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16711 (= lt!32382 (lemmaContainsTupThenGetReturnValue!50 lt!32383 (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16711 (= lt!32383 (insertStrictlySorted!53 (toList!713 call!6198) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16711 (= (+!91 call!6198 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) lt!32385)))

(declare-fun b!72610 () Bool)

(declare-fun res!38572 () Bool)

(assert (=> b!72610 (=> (not res!38572) (not e!47481))))

(assert (=> b!72610 (= res!38572 (= (getValueByKey!133 (toList!713 lt!32385) (_1!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(declare-fun b!72611 () Bool)

(assert (=> b!72611 (= e!47481 (contains!719 (toList!713 lt!32385) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(assert (= (and d!16711 res!38571) b!72610))

(assert (= (and b!72610 res!38572) b!72611))

(declare-fun m!70861 () Bool)

(assert (=> d!16711 m!70861))

(declare-fun m!70863 () Bool)

(assert (=> d!16711 m!70863))

(declare-fun m!70865 () Bool)

(assert (=> d!16711 m!70865))

(declare-fun m!70867 () Bool)

(assert (=> d!16711 m!70867))

(declare-fun m!70869 () Bool)

(assert (=> b!72610 m!70869))

(declare-fun m!70871 () Bool)

(assert (=> b!72611 m!70871))

(assert (=> b!71573 d!16711))

(declare-fun d!16713 () Bool)

(declare-fun res!38573 () Bool)

(declare-fun e!47482 () Bool)

(assert (=> d!16713 (=> res!38573 e!47482)))

(assert (=> d!16713 (= res!38573 (or ((_ is Nil!1464) lt!31754) ((_ is Nil!1464) (t!4995 lt!31754))))))

(assert (=> d!16713 (= (isStrictlySorted!278 lt!31754) e!47482)))

(declare-fun b!72612 () Bool)

(declare-fun e!47483 () Bool)

(assert (=> b!72612 (= e!47482 e!47483)))

(declare-fun res!38574 () Bool)

(assert (=> b!72612 (=> (not res!38574) (not e!47483))))

(assert (=> b!72612 (= res!38574 (bvslt (_1!1066 (h!2049 lt!31754)) (_1!1066 (h!2049 (t!4995 lt!31754)))))))

(declare-fun b!72613 () Bool)

(assert (=> b!72613 (= e!47483 (isStrictlySorted!278 (t!4995 lt!31754)))))

(assert (= (and d!16713 (not res!38573)) b!72612))

(assert (= (and b!72612 res!38574) b!72613))

(declare-fun m!70873 () Bool)

(assert (=> b!72613 m!70873))

(assert (=> d!16061 d!16713))

(declare-fun d!16715 () Bool)

(declare-fun res!38575 () Bool)

(declare-fun e!47484 () Bool)

(assert (=> d!16715 (=> res!38575 e!47484)))

(assert (=> d!16715 (= res!38575 (or ((_ is Nil!1464) (toList!713 (+!91 lt!31219 lt!31228))) ((_ is Nil!1464) (t!4995 (toList!713 (+!91 lt!31219 lt!31228))))))))

(assert (=> d!16715 (= (isStrictlySorted!278 (toList!713 (+!91 lt!31219 lt!31228))) e!47484)))

(declare-fun b!72614 () Bool)

(declare-fun e!47485 () Bool)

(assert (=> b!72614 (= e!47484 e!47485)))

(declare-fun res!38576 () Bool)

(assert (=> b!72614 (=> (not res!38576) (not e!47485))))

(assert (=> b!72614 (= res!38576 (bvslt (_1!1066 (h!2049 (toList!713 (+!91 lt!31219 lt!31228)))) (_1!1066 (h!2049 (t!4995 (toList!713 (+!91 lt!31219 lt!31228)))))))))

(declare-fun b!72615 () Bool)

(assert (=> b!72615 (= e!47485 (isStrictlySorted!278 (t!4995 (toList!713 (+!91 lt!31219 lt!31228)))))))

(assert (= (and d!16715 (not res!38575)) b!72614))

(assert (= (and b!72614 res!38576) b!72615))

(assert (=> b!72615 m!69173))

(assert (=> d!16061 d!16715))

(declare-fun d!16717 () Bool)

(assert (=> d!16717 (= (content!77 Nil!1465) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!16063 d!16717))

(declare-fun d!16719 () Bool)

(assert (=> d!16719 (isDefined!85 (getValueByKey!133 (toList!713 lt!31480) (_1!1066 lt!31223)))))

(declare-fun lt!32386 () Unit!1996)

(assert (=> d!16719 (= lt!32386 (choose!407 (toList!713 lt!31480) (_1!1066 lt!31223)))))

(declare-fun e!47486 () Bool)

(assert (=> d!16719 e!47486))

(declare-fun res!38577 () Bool)

(assert (=> d!16719 (=> (not res!38577) (not e!47486))))

(assert (=> d!16719 (= res!38577 (isStrictlySorted!278 (toList!713 lt!31480)))))

(assert (=> d!16719 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31480) (_1!1066 lt!31223)) lt!32386)))

(declare-fun b!72616 () Bool)

(assert (=> b!72616 (= e!47486 (containsKey!136 (toList!713 lt!31480) (_1!1066 lt!31223)))))

(assert (= (and d!16719 res!38577) b!72616))

(assert (=> d!16719 m!68141))

(assert (=> d!16719 m!68141))

(assert (=> d!16719 m!68801))

(declare-fun m!70875 () Bool)

(assert (=> d!16719 m!70875))

(declare-fun m!70877 () Bool)

(assert (=> d!16719 m!70877))

(assert (=> b!72616 m!68797))

(assert (=> b!71381 d!16719))

(assert (=> b!71381 d!16099))

(assert (=> b!71381 d!15901))

(assert (=> d!16051 d!15999))

(declare-fun d!16721 () Bool)

(declare-fun e!47495 () Bool)

(assert (=> d!16721 e!47495))

(declare-fun c!10754 () Bool)

(declare-fun lt!32389 () SeekEntryResult!229)

(assert (=> d!16721 (= c!10754 ((_ is MissingZero!229) lt!32389))))

(assert (=> d!16721 (= lt!32389 (seekEntryOrOpen!0 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (_keys!3839 newMap!16) (mask!6148 newMap!16)))))

(assert (=> d!16721 true))

(declare-fun _$34!803 () Unit!1996)

(assert (=> d!16721 (= (choose!414 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)) _$34!803)))

(declare-fun b!72633 () Bool)

(declare-fun res!38589 () Bool)

(assert (=> b!72633 (= res!38589 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3046 lt!32389)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47497 () Bool)

(assert (=> b!72633 (=> (not res!38589) (not e!47497))))

(declare-fun b!72634 () Bool)

(assert (=> b!72634 (= e!47495 e!47497)))

(declare-fun res!38587 () Bool)

(declare-fun call!6327 () Bool)

(assert (=> b!72634 (= res!38587 call!6327)))

(assert (=> b!72634 (=> (not res!38587) (not e!47497))))

(declare-fun bm!6324 () Bool)

(assert (=> bm!6324 (= call!6327 (inRange!0 (ite c!10754 (index!3046 lt!32389) (index!3049 lt!32389)) (mask!6148 newMap!16)))))

(declare-fun b!72635 () Bool)

(declare-fun e!47498 () Bool)

(assert (=> b!72635 (= e!47498 ((_ is Undefined!229) lt!32389))))

(declare-fun b!72636 () Bool)

(declare-fun e!47496 () Bool)

(declare-fun call!6328 () Bool)

(assert (=> b!72636 (= e!47496 (not call!6328))))

(declare-fun b!72637 () Bool)

(assert (=> b!72637 (= e!47495 e!47498)))

(declare-fun c!10755 () Bool)

(assert (=> b!72637 (= c!10755 ((_ is MissingVacant!229) lt!32389))))

(declare-fun b!72638 () Bool)

(assert (=> b!72638 (= e!47497 (not call!6328))))

(declare-fun b!72639 () Bool)

(declare-fun res!38586 () Bool)

(assert (=> b!72639 (=> (not res!38586) (not e!47496))))

(assert (=> b!72639 (= res!38586 call!6327)))

(assert (=> b!72639 (= e!47498 e!47496)))

(declare-fun b!72640 () Bool)

(declare-fun res!38588 () Bool)

(assert (=> b!72640 (=> (not res!38588) (not e!47496))))

(assert (=> b!72640 (= res!38588 (= (select (arr!1844 (_keys!3839 newMap!16)) (index!3049 lt!32389)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6325 () Bool)

(assert (=> bm!6325 (= call!6328 (arrayContainsKey!0 (_keys!3839 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!16721 c!10754) b!72634))

(assert (= (and d!16721 (not c!10754)) b!72637))

(assert (= (and b!72634 res!38587) b!72633))

(assert (= (and b!72633 res!38589) b!72638))

(assert (= (and b!72637 c!10755) b!72639))

(assert (= (and b!72637 (not c!10755)) b!72635))

(assert (= (and b!72639 res!38586) b!72640))

(assert (= (and b!72640 res!38588) b!72636))

(assert (= (or b!72634 b!72639) bm!6324))

(assert (= (or b!72638 b!72636) bm!6325))

(declare-fun m!70879 () Bool)

(assert (=> b!72633 m!70879))

(declare-fun m!70881 () Bool)

(assert (=> b!72640 m!70881))

(assert (=> d!16721 m!67819))

(assert (=> d!16721 m!68061))

(assert (=> bm!6325 m!67819))

(assert (=> bm!6325 m!68109))

(declare-fun m!70883 () Bool)

(assert (=> bm!6324 m!70883))

(assert (=> d!16051 d!16721))

(assert (=> d!16051 d!16115))

(declare-fun d!16723 () Bool)

(declare-fun lt!32390 () Bool)

(assert (=> d!16723 (= lt!32390 (select (content!76 (toList!713 lt!31535)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!47500 () Bool)

(assert (=> d!16723 (= lt!32390 e!47500)))

(declare-fun res!38591 () Bool)

(assert (=> d!16723 (=> (not res!38591) (not e!47500))))

(assert (=> d!16723 (= res!38591 ((_ is Cons!1463) (toList!713 lt!31535)))))

(assert (=> d!16723 (= (contains!719 (toList!713 lt!31535) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!32390)))

(declare-fun b!72641 () Bool)

(declare-fun e!47499 () Bool)

(assert (=> b!72641 (= e!47500 e!47499)))

(declare-fun res!38590 () Bool)

(assert (=> b!72641 (=> res!38590 e!47499)))

(assert (=> b!72641 (= res!38590 (= (h!2049 (toList!713 lt!31535)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!72642 () Bool)

(assert (=> b!72642 (= e!47499 (contains!719 (t!4995 (toList!713 lt!31535)) (tuple2!2111 (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1141 (select (arr!1845 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!326 (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16723 res!38591) b!72641))

(assert (= (and b!72641 (not res!38590)) b!72642))

(declare-fun m!70885 () Bool)

(assert (=> d!16723 m!70885))

(declare-fun m!70887 () Bool)

(assert (=> d!16723 m!70887))

(declare-fun m!70889 () Bool)

(assert (=> b!72642 m!70889))

(assert (=> b!71137 d!16723))

(declare-fun b!72644 () Bool)

(declare-fun e!47501 () Option!139)

(declare-fun e!47502 () Option!139)

(assert (=> b!72644 (= e!47501 e!47502)))

(declare-fun c!10757 () Bool)

(assert (=> b!72644 (= c!10757 (and ((_ is Cons!1463) (toList!713 lt!31614)) (not (= (_1!1066 (h!2049 (toList!713 lt!31614))) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))))

(declare-fun b!72646 () Bool)

(assert (=> b!72646 (= e!47502 None!137)))

(declare-fun b!72645 () Bool)

(assert (=> b!72645 (= e!47502 (getValueByKey!133 (t!4995 (toList!713 lt!31614)) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun d!16725 () Bool)

(declare-fun c!10756 () Bool)

(assert (=> d!16725 (= c!10756 (and ((_ is Cons!1463) (toList!713 lt!31614)) (= (_1!1066 (h!2049 (toList!713 lt!31614))) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(assert (=> d!16725 (= (getValueByKey!133 (toList!713 lt!31614) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) e!47501)))

(declare-fun b!72643 () Bool)

(assert (=> b!72643 (= e!47501 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31614)))))))

(assert (= (and d!16725 c!10756) b!72643))

(assert (= (and d!16725 (not c!10756)) b!72644))

(assert (= (and b!72644 c!10757) b!72645))

(assert (= (and b!72644 (not c!10757)) b!72646))

(declare-fun m!70891 () Bool)

(assert (=> b!72645 m!70891))

(assert (=> b!71260 d!16725))

(declare-fun d!16727 () Bool)

(declare-fun e!47503 () Bool)

(assert (=> d!16727 e!47503))

(declare-fun res!38592 () Bool)

(assert (=> d!16727 (=> (not res!38592) (not e!47503))))

(declare-fun lt!32394 () ListLongMap!1395)

(assert (=> d!16727 (= res!38592 (contains!715 lt!32394 (_1!1066 (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))))

(declare-fun lt!32392 () List!1467)

(assert (=> d!16727 (= lt!32394 (ListLongMap!1396 lt!32392))))

(declare-fun lt!32393 () Unit!1996)

(declare-fun lt!32391 () Unit!1996)

(assert (=> d!16727 (= lt!32393 lt!32391)))

(assert (=> d!16727 (= (getValueByKey!133 lt!32392 (_1!1066 (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))) (Some!138 (_2!1066 (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))))

(assert (=> d!16727 (= lt!32391 (lemmaContainsTupThenGetReturnValue!50 lt!32392 (_1!1066 (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) (_2!1066 (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))))

(assert (=> d!16727 (= lt!32392 (insertStrictlySorted!53 (toList!713 (ite c!10351 call!6151 (ite c!10352 call!6149 call!6152))) (_1!1066 (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) (_2!1066 (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))))))

(assert (=> d!16727 (= (+!91 (ite c!10351 call!6151 (ite c!10352 call!6149 call!6152)) (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))) lt!32394)))

(declare-fun b!72647 () Bool)

(declare-fun res!38593 () Bool)

(assert (=> b!72647 (=> (not res!38593) (not e!47503))))

(assert (=> b!72647 (= res!38593 (= (getValueByKey!133 (toList!713 lt!32394) (_1!1066 (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16)))))) (Some!138 (_2!1066 (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))))

(declare-fun b!72648 () Bool)

(assert (=> b!72648 (= e!47503 (contains!719 (toList!713 lt!32394) (ite (or c!10351 c!10352) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10293 c!10301) lt!31220 (zeroValue!2095 newMap!16))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10293 (ite c!10301 (minValue!2095 newMap!16) lt!31220) (minValue!2095 newMap!16))))))))

(assert (= (and d!16727 res!38592) b!72647))

(assert (= (and b!72647 res!38593) b!72648))

(declare-fun m!70893 () Bool)

(assert (=> d!16727 m!70893))

(declare-fun m!70895 () Bool)

(assert (=> d!16727 m!70895))

(declare-fun m!70897 () Bool)

(assert (=> d!16727 m!70897))

(declare-fun m!70899 () Bool)

(assert (=> d!16727 m!70899))

(declare-fun m!70901 () Bool)

(assert (=> b!72647 m!70901))

(declare-fun m!70903 () Bool)

(assert (=> b!72648 m!70903))

(assert (=> bm!6149 d!16727))

(assert (=> b!71436 d!16557))

(assert (=> b!71436 d!16559))

(declare-fun b!72650 () Bool)

(declare-fun e!47504 () Option!139)

(declare-fun e!47505 () Option!139)

(assert (=> b!72650 (= e!47504 e!47505)))

(declare-fun c!10759 () Bool)

(assert (=> b!72650 (= c!10759 (and ((_ is Cons!1463) (t!4995 lt!31478)) (not (= (_1!1066 (h!2049 (t!4995 lt!31478))) (_1!1066 lt!31223)))))))

(declare-fun b!72652 () Bool)

(assert (=> b!72652 (= e!47505 None!137)))

(declare-fun b!72651 () Bool)

(assert (=> b!72651 (= e!47505 (getValueByKey!133 (t!4995 (t!4995 lt!31478)) (_1!1066 lt!31223)))))

(declare-fun d!16729 () Bool)

(declare-fun c!10758 () Bool)

(assert (=> d!16729 (= c!10758 (and ((_ is Cons!1463) (t!4995 lt!31478)) (= (_1!1066 (h!2049 (t!4995 lt!31478))) (_1!1066 lt!31223))))))

(assert (=> d!16729 (= (getValueByKey!133 (t!4995 lt!31478) (_1!1066 lt!31223)) e!47504)))

(declare-fun b!72649 () Bool)

(assert (=> b!72649 (= e!47504 (Some!138 (_2!1066 (h!2049 (t!4995 lt!31478)))))))

(assert (= (and d!16729 c!10758) b!72649))

(assert (= (and d!16729 (not c!10758)) b!72650))

(assert (= (and b!72650 c!10759) b!72651))

(assert (= (and b!72650 (not c!10759)) b!72652))

(declare-fun m!70905 () Bool)

(assert (=> b!72651 m!70905))

(assert (=> b!71386 d!16729))

(assert (=> d!15933 d!15929))

(assert (=> d!15933 d!15931))

(declare-fun d!16731 () Bool)

(assert (=> d!16731 (isDefined!85 (getValueByKey!133 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (=> d!16731 true))

(declare-fun _$12!320 () Unit!1996)

(assert (=> d!16731 (= (choose!407 (toList!713 lt!31227) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) _$12!320)))

(declare-fun bs!3132 () Bool)

(assert (= bs!3132 d!16731))

(assert (=> bs!3132 m!67819))

(assert (=> bs!3132 m!68053))

(assert (=> bs!3132 m!68053))

(assert (=> bs!3132 m!68055))

(assert (=> d!15933 d!16731))

(declare-fun d!16733 () Bool)

(declare-fun res!38594 () Bool)

(declare-fun e!47506 () Bool)

(assert (=> d!16733 (=> res!38594 e!47506)))

(assert (=> d!16733 (= res!38594 (or ((_ is Nil!1464) (toList!713 lt!31227)) ((_ is Nil!1464) (t!4995 (toList!713 lt!31227)))))))

(assert (=> d!16733 (= (isStrictlySorted!278 (toList!713 lt!31227)) e!47506)))

(declare-fun b!72653 () Bool)

(declare-fun e!47507 () Bool)

(assert (=> b!72653 (= e!47506 e!47507)))

(declare-fun res!38595 () Bool)

(assert (=> b!72653 (=> (not res!38595) (not e!47507))))

(assert (=> b!72653 (= res!38595 (bvslt (_1!1066 (h!2049 (toList!713 lt!31227))) (_1!1066 (h!2049 (t!4995 (toList!713 lt!31227))))))))

(declare-fun b!72654 () Bool)

(assert (=> b!72654 (= e!47507 (isStrictlySorted!278 (t!4995 (toList!713 lt!31227))))))

(assert (= (and d!16733 (not res!38594)) b!72653))

(assert (= (and b!72653 res!38595) b!72654))

(declare-fun m!70907 () Bool)

(assert (=> b!72654 m!70907))

(assert (=> d!15933 d!16733))

(declare-fun d!16735 () Bool)

(assert (=> d!16735 (= (get!1146 (getValueByKey!133 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2522 (getValueByKey!133 (toList!713 lt!31501) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15903 d!16735))

(assert (=> d!15903 d!16289))

(declare-fun d!16737 () Bool)

(assert (=> d!16737 (isDefined!85 (getValueByKey!133 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32395 () Unit!1996)

(assert (=> d!16737 (= lt!32395 (choose!407 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47508 () Bool)

(assert (=> d!16737 e!47508))

(declare-fun res!38596 () Bool)

(assert (=> d!16737 (=> (not res!38596) (not e!47508))))

(assert (=> d!16737 (= res!38596 (isStrictlySorted!278 (toList!713 lt!31501)))))

(assert (=> d!16737 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000) lt!32395)))

(declare-fun b!72655 () Bool)

(assert (=> b!72655 (= e!47508 (containsKey!136 (toList!713 lt!31501) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16737 res!38596) b!72655))

(assert (=> d!16737 m!68377))

(assert (=> d!16737 m!68377))

(assert (=> d!16737 m!68379))

(declare-fun m!70909 () Bool)

(assert (=> d!16737 m!70909))

(assert (=> d!16737 m!69711))

(assert (=> b!72655 m!68373))

(assert (=> b!71206 d!16737))

(assert (=> b!71206 d!16159))

(assert (=> b!71206 d!16161))

(declare-fun d!16739 () Bool)

(declare-fun e!47510 () Bool)

(assert (=> d!16739 e!47510))

(declare-fun res!38597 () Bool)

(assert (=> d!16739 (=> res!38597 e!47510)))

(declare-fun lt!32399 () Bool)

(assert (=> d!16739 (= res!38597 (not lt!32399))))

(declare-fun lt!32398 () Bool)

(assert (=> d!16739 (= lt!32399 lt!32398)))

(declare-fun lt!32397 () Unit!1996)

(declare-fun e!47509 () Unit!1996)

(assert (=> d!16739 (= lt!32397 e!47509)))

(declare-fun c!10760 () Bool)

(assert (=> d!16739 (= c!10760 lt!32398)))

(assert (=> d!16739 (= lt!32398 (containsKey!136 (toList!713 lt!31716) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16739 (= (contains!715 lt!31716 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32399)))

(declare-fun b!72656 () Bool)

(declare-fun lt!32396 () Unit!1996)

(assert (=> b!72656 (= e!47509 lt!32396)))

(assert (=> b!72656 (= lt!32396 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31716) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72656 (isDefined!85 (getValueByKey!133 (toList!713 lt!31716) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72657 () Bool)

(declare-fun Unit!2068 () Unit!1996)

(assert (=> b!72657 (= e!47509 Unit!2068)))

(declare-fun b!72658 () Bool)

(assert (=> b!72658 (= e!47510 (isDefined!85 (getValueByKey!133 (toList!713 lt!31716) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16739 c!10760) b!72656))

(assert (= (and d!16739 (not c!10760)) b!72657))

(assert (= (and d!16739 (not res!38597)) b!72658))

(declare-fun m!70911 () Bool)

(assert (=> d!16739 m!70911))

(declare-fun m!70913 () Bool)

(assert (=> b!72656 m!70913))

(assert (=> b!72656 m!69563))

(assert (=> b!72656 m!69563))

(declare-fun m!70915 () Bool)

(assert (=> b!72656 m!70915))

(assert (=> b!72658 m!69563))

(assert (=> b!72658 m!69563))

(assert (=> b!72658 m!70915))

(assert (=> bm!6159 d!16739))

(declare-fun d!16741 () Bool)

(declare-fun res!38598 () Bool)

(declare-fun e!47511 () Bool)

(assert (=> d!16741 (=> res!38598 e!47511)))

(assert (=> d!16741 (= res!38598 (or ((_ is Nil!1464) lt!31853) ((_ is Nil!1464) (t!4995 lt!31853))))))

(assert (=> d!16741 (= (isStrictlySorted!278 lt!31853) e!47511)))

(declare-fun b!72659 () Bool)

(declare-fun e!47512 () Bool)

(assert (=> b!72659 (= e!47511 e!47512)))

(declare-fun res!38599 () Bool)

(assert (=> b!72659 (=> (not res!38599) (not e!47512))))

(assert (=> b!72659 (= res!38599 (bvslt (_1!1066 (h!2049 lt!31853)) (_1!1066 (h!2049 (t!4995 lt!31853)))))))

(declare-fun b!72660 () Bool)

(assert (=> b!72660 (= e!47512 (isStrictlySorted!278 (t!4995 lt!31853)))))

(assert (= (and d!16741 (not res!38598)) b!72659))

(assert (= (and b!72659 res!38599) b!72660))

(declare-fun m!70917 () Bool)

(assert (=> b!72660 m!70917))

(assert (=> d!16073 d!16741))

(assert (=> d!16073 d!16359))

(declare-fun b!72662 () Bool)

(declare-fun res!38600 () Bool)

(declare-fun e!47513 () Bool)

(assert (=> b!72662 (=> (not res!38600) (not e!47513))))

(assert (=> b!72662 (= res!38600 (bvsge (size!2087 (v!2516 (underlying!259 thiss!992))) (_size!393 (v!2516 (underlying!259 thiss!992)))))))

(declare-fun b!72664 () Bool)

(assert (=> b!72664 (= e!47513 (and (bvsge (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!393 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!72663 () Bool)

(declare-fun res!38602 () Bool)

(assert (=> b!72663 (=> (not res!38602) (not e!47513))))

(assert (=> b!72663 (= res!38602 (= (size!2087 (v!2516 (underlying!259 thiss!992))) (bvadd (_size!393 (v!2516 (underlying!259 thiss!992))) (bvsdiv (bvadd (extraKeys!2054 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!16743 () Bool)

(declare-fun res!38603 () Bool)

(assert (=> d!16743 (=> (not res!38603) (not e!47513))))

(assert (=> d!16743 (= res!38603 (validMask!0 (mask!6148 (v!2516 (underlying!259 thiss!992)))))))

(assert (=> d!16743 (= (simpleValid!50 (v!2516 (underlying!259 thiss!992))) e!47513)))

(declare-fun b!72661 () Bool)

(declare-fun res!38601 () Bool)

(assert (=> b!72661 (=> (not res!38601) (not e!47513))))

(assert (=> b!72661 (= res!38601 (and (= (size!2082 (_values!2174 (v!2516 (underlying!259 thiss!992)))) (bvadd (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000001)) (= (size!2081 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) (size!2082 (_values!2174 (v!2516 (underlying!259 thiss!992))))) (bvsge (_size!393 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!393 (v!2516 (underlying!259 thiss!992))) (bvadd (mask!6148 (v!2516 (underlying!259 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!16743 res!38603) b!72661))

(assert (= (and b!72661 res!38601) b!72662))

(assert (= (and b!72662 res!38600) b!72663))

(assert (= (and b!72663 res!38602) b!72664))

(declare-fun m!70919 () Bool)

(assert (=> b!72662 m!70919))

(assert (=> b!72663 m!70919))

(assert (=> d!16743 m!67845))

(assert (=> d!15945 d!16743))

(declare-fun d!16745 () Bool)

(declare-fun e!47515 () Bool)

(assert (=> d!16745 e!47515))

(declare-fun res!38604 () Bool)

(assert (=> d!16745 (=> res!38604 e!47515)))

(declare-fun lt!32403 () Bool)

(assert (=> d!16745 (= res!38604 (not lt!32403))))

(declare-fun lt!32402 () Bool)

(assert (=> d!16745 (= lt!32403 lt!32402)))

(declare-fun lt!32401 () Unit!1996)

(declare-fun e!47514 () Unit!1996)

(assert (=> d!16745 (= lt!32401 e!47514)))

(declare-fun c!10761 () Bool)

(assert (=> d!16745 (= c!10761 lt!32402)))

(assert (=> d!16745 (= lt!32402 (containsKey!136 (toList!713 lt!31614) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> d!16745 (= (contains!715 lt!31614 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) lt!32403)))

(declare-fun b!72665 () Bool)

(declare-fun lt!32400 () Unit!1996)

(assert (=> b!72665 (= e!47514 lt!32400)))

(assert (=> b!72665 (= lt!32400 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31614) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(assert (=> b!72665 (isDefined!85 (getValueByKey!133 (toList!713 lt!31614) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun b!72666 () Bool)

(declare-fun Unit!2069 () Unit!1996)

(assert (=> b!72666 (= e!47514 Unit!2069)))

(declare-fun b!72667 () Bool)

(assert (=> b!72667 (= e!47515 (isDefined!85 (getValueByKey!133 (toList!713 lt!31614) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(assert (= (and d!16745 c!10761) b!72665))

(assert (= (and d!16745 (not c!10761)) b!72666))

(assert (= (and d!16745 (not res!38604)) b!72667))

(declare-fun m!70921 () Bool)

(assert (=> d!16745 m!70921))

(declare-fun m!70923 () Bool)

(assert (=> b!72665 m!70923))

(assert (=> b!72665 m!68509))

(assert (=> b!72665 m!68509))

(declare-fun m!70925 () Bool)

(assert (=> b!72665 m!70925))

(assert (=> b!72667 m!68509))

(assert (=> b!72667 m!68509))

(assert (=> b!72667 m!70925))

(assert (=> d!15947 d!16745))

(declare-fun b!72669 () Bool)

(declare-fun e!47516 () Option!139)

(declare-fun e!47517 () Option!139)

(assert (=> b!72669 (= e!47516 e!47517)))

(declare-fun c!10763 () Bool)

(assert (=> b!72669 (= c!10763 (and ((_ is Cons!1463) lt!31612) (not (= (_1!1066 (h!2049 lt!31612)) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))))

(declare-fun b!72671 () Bool)

(assert (=> b!72671 (= e!47517 None!137)))

(declare-fun b!72670 () Bool)

(assert (=> b!72670 (= e!47517 (getValueByKey!133 (t!4995 lt!31612) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun c!10762 () Bool)

(declare-fun d!16747 () Bool)

(assert (=> d!16747 (= c!10762 (and ((_ is Cons!1463) lt!31612) (= (_1!1066 (h!2049 lt!31612)) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(assert (=> d!16747 (= (getValueByKey!133 lt!31612 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) e!47516)))

(declare-fun b!72668 () Bool)

(assert (=> b!72668 (= e!47516 (Some!138 (_2!1066 (h!2049 lt!31612))))))

(assert (= (and d!16747 c!10762) b!72668))

(assert (= (and d!16747 (not c!10762)) b!72669))

(assert (= (and b!72669 c!10763) b!72670))

(assert (= (and b!72669 (not c!10763)) b!72671))

(declare-fun m!70927 () Bool)

(assert (=> b!72670 m!70927))

(assert (=> d!15947 d!16747))

(declare-fun d!16749 () Bool)

(assert (=> d!16749 (= (getValueByKey!133 lt!31612 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) (Some!138 (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun lt!32404 () Unit!1996)

(assert (=> d!16749 (= lt!32404 (choose!406 lt!31612 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun e!47518 () Bool)

(assert (=> d!16749 e!47518))

(declare-fun res!38605 () Bool)

(assert (=> d!16749 (=> (not res!38605) (not e!47518))))

(assert (=> d!16749 (= res!38605 (isStrictlySorted!278 lt!31612))))

(assert (=> d!16749 (= (lemmaContainsTupThenGetReturnValue!50 lt!31612 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) lt!32404)))

(declare-fun b!72672 () Bool)

(declare-fun res!38606 () Bool)

(assert (=> b!72672 (=> (not res!38606) (not e!47518))))

(assert (=> b!72672 (= res!38606 (containsKey!136 lt!31612 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun b!72673 () Bool)

(assert (=> b!72673 (= e!47518 (contains!719 lt!31612 (tuple2!2111 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(assert (= (and d!16749 res!38605) b!72672))

(assert (= (and b!72672 res!38606) b!72673))

(assert (=> d!16749 m!68503))

(declare-fun m!70929 () Bool)

(assert (=> d!16749 m!70929))

(declare-fun m!70931 () Bool)

(assert (=> d!16749 m!70931))

(declare-fun m!70933 () Bool)

(assert (=> b!72672 m!70933))

(declare-fun m!70935 () Bool)

(assert (=> b!72673 m!70935))

(assert (=> d!15947 d!16749))

(declare-fun b!72674 () Bool)

(declare-fun e!47523 () List!1467)

(declare-fun call!6331 () List!1467)

(assert (=> b!72674 (= e!47523 call!6331)))

(declare-fun c!10767 () Bool)

(declare-fun bm!6326 () Bool)

(declare-fun e!47522 () List!1467)

(assert (=> bm!6326 (= call!6331 ($colon$colon!64 e!47522 (ite c!10767 (h!2049 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058)))) (tuple2!2111 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))))

(declare-fun c!10766 () Bool)

(assert (=> bm!6326 (= c!10766 c!10767)))

(declare-fun d!16751 () Bool)

(declare-fun e!47521 () Bool)

(assert (=> d!16751 e!47521))

(declare-fun res!38608 () Bool)

(assert (=> d!16751 (=> (not res!38608) (not e!47521))))

(declare-fun lt!32405 () List!1467)

(assert (=> d!16751 (= res!38608 (isStrictlySorted!278 lt!32405))))

(assert (=> d!16751 (= lt!32405 e!47523)))

(assert (=> d!16751 (= c!10767 (and ((_ is Cons!1463) (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058)))) (bvslt (_1!1066 (h!2049 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058))))) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(assert (=> d!16751 (isStrictlySorted!278 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058))))))

(assert (=> d!16751 (= (insertStrictlySorted!53 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058))) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))) lt!32405)))

(declare-fun b!72675 () Bool)

(declare-fun e!47519 () List!1467)

(declare-fun call!6329 () List!1467)

(assert (=> b!72675 (= e!47519 call!6329)))

(declare-fun c!10764 () Bool)

(declare-fun b!72676 () Bool)

(assert (=> b!72676 (= c!10764 (and ((_ is Cons!1463) (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058)))) (bvsgt (_1!1066 (h!2049 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058))))) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun e!47520 () List!1467)

(assert (=> b!72676 (= e!47519 e!47520)))

(declare-fun b!72677 () Bool)

(declare-fun call!6330 () List!1467)

(assert (=> b!72677 (= e!47520 call!6330)))

(declare-fun b!72678 () Bool)

(assert (=> b!72678 (= e!47520 call!6330)))

(declare-fun b!72679 () Bool)

(declare-fun res!38607 () Bool)

(assert (=> b!72679 (=> (not res!38607) (not e!47521))))

(assert (=> b!72679 (= res!38607 (containsKey!136 lt!32405 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun c!10765 () Bool)

(declare-fun b!72680 () Bool)

(assert (=> b!72680 (= e!47522 (ite c!10765 (t!4995 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058)))) (ite c!10764 (Cons!1463 (h!2049 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058)))) (t!4995 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058))))) Nil!1464)))))

(declare-fun bm!6327 () Bool)

(assert (=> bm!6327 (= call!6329 call!6331)))

(declare-fun b!72681 () Bool)

(assert (=> b!72681 (= e!47523 e!47519)))

(assert (=> b!72681 (= c!10765 (and ((_ is Cons!1463) (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058)))) (= (_1!1066 (h!2049 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058))))) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(declare-fun bm!6328 () Bool)

(assert (=> bm!6328 (= call!6330 call!6329)))

(declare-fun b!72682 () Bool)

(assert (=> b!72682 (= e!47522 (insertStrictlySorted!53 (t!4995 (toList!713 (ite c!10253 call!6057 (ite c!10254 call!6055 call!6058)))) (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992))))))))))

(declare-fun b!72683 () Bool)

(assert (=> b!72683 (= e!47521 (contains!719 lt!32405 (tuple2!2111 (_1!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) (_2!1066 (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))))

(assert (= (and d!16751 c!10767) b!72674))

(assert (= (and d!16751 (not c!10767)) b!72681))

(assert (= (and b!72681 c!10765) b!72675))

(assert (= (and b!72681 (not c!10765)) b!72676))

(assert (= (and b!72676 c!10764) b!72677))

(assert (= (and b!72676 (not c!10764)) b!72678))

(assert (= (or b!72677 b!72678) bm!6328))

(assert (= (or b!72675 bm!6328) bm!6327))

(assert (= (or b!72674 bm!6327) bm!6326))

(assert (= (and bm!6326 c!10766) b!72682))

(assert (= (and bm!6326 (not c!10766)) b!72680))

(assert (= (and d!16751 res!38608) b!72679))

(assert (= (and b!72679 res!38607) b!72683))

(declare-fun m!70937 () Bool)

(assert (=> b!72679 m!70937))

(declare-fun m!70939 () Bool)

(assert (=> b!72683 m!70939))

(declare-fun m!70941 () Bool)

(assert (=> bm!6326 m!70941))

(declare-fun m!70943 () Bool)

(assert (=> d!16751 m!70943))

(declare-fun m!70945 () Bool)

(assert (=> d!16751 m!70945))

(declare-fun m!70947 () Bool)

(assert (=> b!72682 m!70947))

(assert (=> d!15947 d!16751))

(declare-fun d!16753 () Bool)

(declare-fun e!47525 () Bool)

(assert (=> d!16753 e!47525))

(declare-fun res!38609 () Bool)

(assert (=> d!16753 (=> res!38609 e!47525)))

(declare-fun lt!32409 () Bool)

(assert (=> d!16753 (= res!38609 (not lt!32409))))

(declare-fun lt!32408 () Bool)

(assert (=> d!16753 (= lt!32409 lt!32408)))

(declare-fun lt!32407 () Unit!1996)

(declare-fun e!47524 () Unit!1996)

(assert (=> d!16753 (= lt!32407 e!47524)))

(declare-fun c!10768 () Bool)

(assert (=> d!16753 (= c!10768 lt!32408)))

(assert (=> d!16753 (= lt!32408 (containsKey!136 (toList!713 lt!31597) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16753 (= (contains!715 lt!31597 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32409)))

(declare-fun b!72684 () Bool)

(declare-fun lt!32406 () Unit!1996)

(assert (=> b!72684 (= e!47524 lt!32406)))

(assert (=> b!72684 (= lt!32406 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31597) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72684 (isDefined!85 (getValueByKey!133 (toList!713 lt!31597) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72685 () Bool)

(declare-fun Unit!2070 () Unit!1996)

(assert (=> b!72685 (= e!47524 Unit!2070)))

(declare-fun b!72686 () Bool)

(assert (=> b!72686 (= e!47525 (isDefined!85 (getValueByKey!133 (toList!713 lt!31597) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16753 c!10768) b!72684))

(assert (= (and d!16753 (not c!10768)) b!72685))

(assert (= (and d!16753 (not res!38609)) b!72686))

(declare-fun m!70949 () Bool)

(assert (=> d!16753 m!70949))

(declare-fun m!70951 () Bool)

(assert (=> b!72684 m!70951))

(declare-fun m!70953 () Bool)

(assert (=> b!72684 m!70953))

(assert (=> b!72684 m!70953))

(declare-fun m!70955 () Bool)

(assert (=> b!72684 m!70955))

(assert (=> b!72686 m!70953))

(assert (=> b!72686 m!70953))

(assert (=> b!72686 m!70955))

(assert (=> bm!6147 d!16753))

(declare-fun d!16755 () Bool)

(declare-fun res!38610 () Bool)

(declare-fun e!47526 () Bool)

(assert (=> d!16755 (=> res!38610 e!47526)))

(assert (=> d!16755 (= res!38610 (and ((_ is Cons!1463) (toList!713 lt!31505)) (= (_1!1066 (h!2049 (toList!713 lt!31505))) (_1!1066 lt!31228))))))

(assert (=> d!16755 (= (containsKey!136 (toList!713 lt!31505) (_1!1066 lt!31228)) e!47526)))

(declare-fun b!72687 () Bool)

(declare-fun e!47527 () Bool)

(assert (=> b!72687 (= e!47526 e!47527)))

(declare-fun res!38611 () Bool)

(assert (=> b!72687 (=> (not res!38611) (not e!47527))))

(assert (=> b!72687 (= res!38611 (and (or (not ((_ is Cons!1463) (toList!713 lt!31505))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31505))) (_1!1066 lt!31228))) ((_ is Cons!1463) (toList!713 lt!31505)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31505))) (_1!1066 lt!31228))))))

(declare-fun b!72688 () Bool)

(assert (=> b!72688 (= e!47527 (containsKey!136 (t!4995 (toList!713 lt!31505)) (_1!1066 lt!31228)))))

(assert (= (and d!16755 (not res!38610)) b!72687))

(assert (= (and b!72687 res!38611) b!72688))

(declare-fun m!70957 () Bool)

(assert (=> b!72688 m!70957))

(assert (=> d!15909 d!16755))

(assert (=> d!15881 d!15875))

(assert (=> d!15881 d!15879))

(declare-fun d!16757 () Bool)

(assert (=> d!16757 (not (contains!715 (+!91 lt!31498 (tuple2!2111 lt!31495 lt!31497)) lt!31500))))

(assert (=> d!16757 true))

(declare-fun _$36!298 () Unit!1996)

(assert (=> d!16757 (= (choose!404 lt!31498 lt!31495 lt!31497 lt!31500) _$36!298)))

(declare-fun bs!3133 () Bool)

(assert (= bs!3133 d!16757))

(assert (=> bs!3133 m!68159))

(assert (=> bs!3133 m!68159))

(assert (=> bs!3133 m!68161))

(assert (=> d!15881 d!16757))

(declare-fun d!16759 () Bool)

(declare-fun e!47529 () Bool)

(assert (=> d!16759 e!47529))

(declare-fun res!38612 () Bool)

(assert (=> d!16759 (=> res!38612 e!47529)))

(declare-fun lt!32413 () Bool)

(assert (=> d!16759 (= res!38612 (not lt!32413))))

(declare-fun lt!32412 () Bool)

(assert (=> d!16759 (= lt!32413 lt!32412)))

(declare-fun lt!32411 () Unit!1996)

(declare-fun e!47528 () Unit!1996)

(assert (=> d!16759 (= lt!32411 e!47528)))

(declare-fun c!10769 () Bool)

(assert (=> d!16759 (= c!10769 lt!32412)))

(assert (=> d!16759 (= lt!32412 (containsKey!136 (toList!713 lt!31498) lt!31500))))

(assert (=> d!16759 (= (contains!715 lt!31498 lt!31500) lt!32413)))

(declare-fun b!72690 () Bool)

(declare-fun lt!32410 () Unit!1996)

(assert (=> b!72690 (= e!47528 lt!32410)))

(assert (=> b!72690 (= lt!32410 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31498) lt!31500))))

(assert (=> b!72690 (isDefined!85 (getValueByKey!133 (toList!713 lt!31498) lt!31500))))

(declare-fun b!72691 () Bool)

(declare-fun Unit!2071 () Unit!1996)

(assert (=> b!72691 (= e!47528 Unit!2071)))

(declare-fun b!72692 () Bool)

(assert (=> b!72692 (= e!47529 (isDefined!85 (getValueByKey!133 (toList!713 lt!31498) lt!31500)))))

(assert (= (and d!16759 c!10769) b!72690))

(assert (= (and d!16759 (not c!10769)) b!72691))

(assert (= (and d!16759 (not res!38612)) b!72692))

(declare-fun m!70959 () Bool)

(assert (=> d!16759 m!70959))

(declare-fun m!70961 () Bool)

(assert (=> b!72690 m!70961))

(declare-fun m!70963 () Bool)

(assert (=> b!72690 m!70963))

(assert (=> b!72690 m!70963))

(declare-fun m!70965 () Bool)

(assert (=> b!72690 m!70965))

(assert (=> b!72692 m!70963))

(assert (=> b!72692 m!70963))

(assert (=> b!72692 m!70965))

(assert (=> d!15881 d!16759))

(declare-fun d!16761 () Bool)

(declare-fun e!47530 () Bool)

(assert (=> d!16761 e!47530))

(declare-fun res!38613 () Bool)

(assert (=> d!16761 (=> (not res!38613) (not e!47530))))

(declare-fun lt!32417 () ListLongMap!1395)

(assert (=> d!16761 (= res!38613 (contains!715 lt!32417 (_1!1066 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16)))))))

(declare-fun lt!32415 () List!1467)

(assert (=> d!16761 (= lt!32417 (ListLongMap!1396 lt!32415))))

(declare-fun lt!32416 () Unit!1996)

(declare-fun lt!32414 () Unit!1996)

(assert (=> d!16761 (= lt!32416 lt!32414)))

(assert (=> d!16761 (= (getValueByKey!133 lt!32415 (_1!1066 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16761 (= lt!32414 (lemmaContainsTupThenGetReturnValue!50 lt!32415 (_1!1066 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16761 (= lt!32415 (insertStrictlySorted!53 (toList!713 lt!31857) (_1!1066 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16761 (= (+!91 lt!31857 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16))) lt!32417)))

(declare-fun b!72693 () Bool)

(declare-fun res!38614 () Bool)

(assert (=> b!72693 (=> (not res!38614) (not e!47530))))

(assert (=> b!72693 (= res!38614 (= (getValueByKey!133 (toList!713 lt!32417) (_1!1066 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16))))))))

(declare-fun b!72694 () Bool)

(assert (=> b!72694 (= e!47530 (contains!719 (toList!713 lt!32417) (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16))))))

(assert (= (and d!16761 res!38613) b!72693))

(assert (= (and b!72693 res!38614) b!72694))

(declare-fun m!70967 () Bool)

(assert (=> d!16761 m!70967))

(declare-fun m!70969 () Bool)

(assert (=> d!16761 m!70969))

(declare-fun m!70971 () Bool)

(assert (=> d!16761 m!70971))

(declare-fun m!70973 () Bool)

(assert (=> d!16761 m!70973))

(declare-fun m!70975 () Bool)

(assert (=> b!72693 m!70975))

(declare-fun m!70977 () Bool)

(assert (=> b!72694 m!70977))

(assert (=> b!71579 d!16761))

(declare-fun d!16763 () Bool)

(assert (=> d!16763 (= (apply!74 (+!91 lt!31866 (tuple2!2111 lt!31859 (minValue!2095 newMap!16))) lt!31864) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31866 (tuple2!2111 lt!31859 (minValue!2095 newMap!16)))) lt!31864)))))

(declare-fun bs!3134 () Bool)

(assert (= bs!3134 d!16763))

(declare-fun m!70979 () Bool)

(assert (=> bs!3134 m!70979))

(assert (=> bs!3134 m!70979))

(declare-fun m!70981 () Bool)

(assert (=> bs!3134 m!70981))

(assert (=> b!71579 d!16763))

(declare-fun d!16765 () Bool)

(declare-fun e!47531 () Bool)

(assert (=> d!16765 e!47531))

(declare-fun res!38615 () Bool)

(assert (=> d!16765 (=> (not res!38615) (not e!47531))))

(declare-fun lt!32421 () ListLongMap!1395)

(assert (=> d!16765 (= res!38615 (contains!715 lt!32421 (_1!1066 (tuple2!2111 lt!31860 (minValue!2095 newMap!16)))))))

(declare-fun lt!32419 () List!1467)

(assert (=> d!16765 (= lt!32421 (ListLongMap!1396 lt!32419))))

(declare-fun lt!32420 () Unit!1996)

(declare-fun lt!32418 () Unit!1996)

(assert (=> d!16765 (= lt!32420 lt!32418)))

(assert (=> d!16765 (= (getValueByKey!133 lt!32419 (_1!1066 (tuple2!2111 lt!31860 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31860 (minValue!2095 newMap!16)))))))

(assert (=> d!16765 (= lt!32418 (lemmaContainsTupThenGetReturnValue!50 lt!32419 (_1!1066 (tuple2!2111 lt!31860 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31860 (minValue!2095 newMap!16)))))))

(assert (=> d!16765 (= lt!32419 (insertStrictlySorted!53 (toList!713 lt!31868) (_1!1066 (tuple2!2111 lt!31860 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31860 (minValue!2095 newMap!16)))))))

(assert (=> d!16765 (= (+!91 lt!31868 (tuple2!2111 lt!31860 (minValue!2095 newMap!16))) lt!32421)))

(declare-fun b!72695 () Bool)

(declare-fun res!38616 () Bool)

(assert (=> b!72695 (=> (not res!38616) (not e!47531))))

(assert (=> b!72695 (= res!38616 (= (getValueByKey!133 (toList!713 lt!32421) (_1!1066 (tuple2!2111 lt!31860 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31860 (minValue!2095 newMap!16))))))))

(declare-fun b!72696 () Bool)

(assert (=> b!72696 (= e!47531 (contains!719 (toList!713 lt!32421) (tuple2!2111 lt!31860 (minValue!2095 newMap!16))))))

(assert (= (and d!16765 res!38615) b!72695))

(assert (= (and b!72695 res!38616) b!72696))

(declare-fun m!70983 () Bool)

(assert (=> d!16765 m!70983))

(declare-fun m!70985 () Bool)

(assert (=> d!16765 m!70985))

(declare-fun m!70987 () Bool)

(assert (=> d!16765 m!70987))

(declare-fun m!70989 () Bool)

(assert (=> d!16765 m!70989))

(declare-fun m!70991 () Bool)

(assert (=> b!72695 m!70991))

(declare-fun m!70993 () Bool)

(assert (=> b!72696 m!70993))

(assert (=> b!71579 d!16765))

(declare-fun d!16767 () Bool)

(assert (=> d!16767 (= (apply!74 (+!91 lt!31866 (tuple2!2111 lt!31859 (minValue!2095 newMap!16))) lt!31864) (apply!74 lt!31866 lt!31864))))

(declare-fun lt!32422 () Unit!1996)

(assert (=> d!16767 (= lt!32422 (choose!409 lt!31866 lt!31859 (minValue!2095 newMap!16) lt!31864))))

(declare-fun e!47532 () Bool)

(assert (=> d!16767 e!47532))

(declare-fun res!38617 () Bool)

(assert (=> d!16767 (=> (not res!38617) (not e!47532))))

(assert (=> d!16767 (= res!38617 (contains!715 lt!31866 lt!31864))))

(assert (=> d!16767 (= (addApplyDifferent!50 lt!31866 lt!31859 (minValue!2095 newMap!16) lt!31864) lt!32422)))

(declare-fun b!72697 () Bool)

(assert (=> b!72697 (= e!47532 (not (= lt!31864 lt!31859)))))

(assert (= (and d!16767 res!38617) b!72697))

(assert (=> d!16767 m!68997))

(declare-fun m!70995 () Bool)

(assert (=> d!16767 m!70995))

(assert (=> d!16767 m!68999))

(assert (=> d!16767 m!69001))

(assert (=> d!16767 m!68999))

(declare-fun m!70997 () Bool)

(assert (=> d!16767 m!70997))

(assert (=> b!71579 d!16767))

(declare-fun d!16769 () Bool)

(assert (=> d!16769 (= (apply!74 (+!91 lt!31868 (tuple2!2111 lt!31860 (minValue!2095 newMap!16))) lt!31872) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31868 (tuple2!2111 lt!31860 (minValue!2095 newMap!16)))) lt!31872)))))

(declare-fun bs!3135 () Bool)

(assert (= bs!3135 d!16769))

(declare-fun m!70999 () Bool)

(assert (=> bs!3135 m!70999))

(assert (=> bs!3135 m!70999))

(declare-fun m!71001 () Bool)

(assert (=> bs!3135 m!71001))

(assert (=> b!71579 d!16769))

(declare-fun d!16771 () Bool)

(declare-fun e!47534 () Bool)

(assert (=> d!16771 e!47534))

(declare-fun res!38618 () Bool)

(assert (=> d!16771 (=> res!38618 e!47534)))

(declare-fun lt!32426 () Bool)

(assert (=> d!16771 (= res!38618 (not lt!32426))))

(declare-fun lt!32425 () Bool)

(assert (=> d!16771 (= lt!32426 lt!32425)))

(declare-fun lt!32424 () Unit!1996)

(declare-fun e!47533 () Unit!1996)

(assert (=> d!16771 (= lt!32424 e!47533)))

(declare-fun c!10770 () Bool)

(assert (=> d!16771 (= c!10770 lt!32425)))

(assert (=> d!16771 (= lt!32425 (containsKey!136 (toList!713 (+!91 lt!31867 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16)))) lt!31870))))

(assert (=> d!16771 (= (contains!715 (+!91 lt!31867 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16))) lt!31870) lt!32426)))

(declare-fun b!72698 () Bool)

(declare-fun lt!32423 () Unit!1996)

(assert (=> b!72698 (= e!47533 lt!32423)))

(assert (=> b!72698 (= lt!32423 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 (+!91 lt!31867 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16)))) lt!31870))))

(assert (=> b!72698 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31867 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16)))) lt!31870))))

(declare-fun b!72699 () Bool)

(declare-fun Unit!2072 () Unit!1996)

(assert (=> b!72699 (= e!47533 Unit!2072)))

(declare-fun b!72700 () Bool)

(assert (=> b!72700 (= e!47534 (isDefined!85 (getValueByKey!133 (toList!713 (+!91 lt!31867 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16)))) lt!31870)))))

(assert (= (and d!16771 c!10770) b!72698))

(assert (= (and d!16771 (not c!10770)) b!72699))

(assert (= (and d!16771 (not res!38618)) b!72700))

(declare-fun m!71003 () Bool)

(assert (=> d!16771 m!71003))

(declare-fun m!71005 () Bool)

(assert (=> b!72698 m!71005))

(declare-fun m!71007 () Bool)

(assert (=> b!72698 m!71007))

(assert (=> b!72698 m!71007))

(declare-fun m!71009 () Bool)

(assert (=> b!72698 m!71009))

(assert (=> b!72700 m!71007))

(assert (=> b!72700 m!71007))

(assert (=> b!72700 m!71009))

(assert (=> b!71579 d!16771))

(declare-fun d!16773 () Bool)

(assert (=> d!16773 (= (apply!74 (+!91 lt!31857 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16))) lt!31855) (apply!74 lt!31857 lt!31855))))

(declare-fun lt!32427 () Unit!1996)

(assert (=> d!16773 (= lt!32427 (choose!409 lt!31857 lt!31863 (zeroValue!2095 newMap!16) lt!31855))))

(declare-fun e!47535 () Bool)

(assert (=> d!16773 e!47535))

(declare-fun res!38619 () Bool)

(assert (=> d!16773 (=> (not res!38619) (not e!47535))))

(assert (=> d!16773 (= res!38619 (contains!715 lt!31857 lt!31855))))

(assert (=> d!16773 (= (addApplyDifferent!50 lt!31857 lt!31863 (zeroValue!2095 newMap!16) lt!31855) lt!32427)))

(declare-fun b!72701 () Bool)

(assert (=> b!72701 (= e!47535 (not (= lt!31855 lt!31863)))))

(assert (= (and d!16773 res!38619) b!72701))

(assert (=> d!16773 m!69015))

(declare-fun m!71011 () Bool)

(assert (=> d!16773 m!71011))

(assert (=> d!16773 m!69003))

(assert (=> d!16773 m!69005))

(assert (=> d!16773 m!69003))

(declare-fun m!71013 () Bool)

(assert (=> d!16773 m!71013))

(assert (=> b!71579 d!16773))

(declare-fun d!16775 () Bool)

(declare-fun e!47536 () Bool)

(assert (=> d!16775 e!47536))

(declare-fun res!38620 () Bool)

(assert (=> d!16775 (=> (not res!38620) (not e!47536))))

(declare-fun lt!32431 () ListLongMap!1395)

(assert (=> d!16775 (= res!38620 (contains!715 lt!32431 (_1!1066 (tuple2!2111 lt!31859 (minValue!2095 newMap!16)))))))

(declare-fun lt!32429 () List!1467)

(assert (=> d!16775 (= lt!32431 (ListLongMap!1396 lt!32429))))

(declare-fun lt!32430 () Unit!1996)

(declare-fun lt!32428 () Unit!1996)

(assert (=> d!16775 (= lt!32430 lt!32428)))

(assert (=> d!16775 (= (getValueByKey!133 lt!32429 (_1!1066 (tuple2!2111 lt!31859 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31859 (minValue!2095 newMap!16)))))))

(assert (=> d!16775 (= lt!32428 (lemmaContainsTupThenGetReturnValue!50 lt!32429 (_1!1066 (tuple2!2111 lt!31859 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31859 (minValue!2095 newMap!16)))))))

(assert (=> d!16775 (= lt!32429 (insertStrictlySorted!53 (toList!713 lt!31866) (_1!1066 (tuple2!2111 lt!31859 (minValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31859 (minValue!2095 newMap!16)))))))

(assert (=> d!16775 (= (+!91 lt!31866 (tuple2!2111 lt!31859 (minValue!2095 newMap!16))) lt!32431)))

(declare-fun b!72702 () Bool)

(declare-fun res!38621 () Bool)

(assert (=> b!72702 (=> (not res!38621) (not e!47536))))

(assert (=> b!72702 (= res!38621 (= (getValueByKey!133 (toList!713 lt!32431) (_1!1066 (tuple2!2111 lt!31859 (minValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31859 (minValue!2095 newMap!16))))))))

(declare-fun b!72703 () Bool)

(assert (=> b!72703 (= e!47536 (contains!719 (toList!713 lt!32431) (tuple2!2111 lt!31859 (minValue!2095 newMap!16))))))

(assert (= (and d!16775 res!38620) b!72702))

(assert (= (and b!72702 res!38621) b!72703))

(declare-fun m!71015 () Bool)

(assert (=> d!16775 m!71015))

(declare-fun m!71017 () Bool)

(assert (=> d!16775 m!71017))

(declare-fun m!71019 () Bool)

(assert (=> d!16775 m!71019))

(declare-fun m!71021 () Bool)

(assert (=> d!16775 m!71021))

(declare-fun m!71023 () Bool)

(assert (=> b!72702 m!71023))

(declare-fun m!71025 () Bool)

(assert (=> b!72703 m!71025))

(assert (=> b!71579 d!16775))

(assert (=> b!71579 d!16327))

(declare-fun d!16777 () Bool)

(assert (=> d!16777 (= (apply!74 lt!31866 lt!31864) (get!1146 (getValueByKey!133 (toList!713 lt!31866) lt!31864)))))

(declare-fun bs!3136 () Bool)

(assert (= bs!3136 d!16777))

(declare-fun m!71027 () Bool)

(assert (=> bs!3136 m!71027))

(assert (=> bs!3136 m!71027))

(declare-fun m!71029 () Bool)

(assert (=> bs!3136 m!71029))

(assert (=> b!71579 d!16777))

(declare-fun d!16779 () Bool)

(assert (=> d!16779 (= (apply!74 lt!31868 lt!31872) (get!1146 (getValueByKey!133 (toList!713 lt!31868) lt!31872)))))

(declare-fun bs!3137 () Bool)

(assert (= bs!3137 d!16779))

(declare-fun m!71031 () Bool)

(assert (=> bs!3137 m!71031))

(assert (=> bs!3137 m!71031))

(declare-fun m!71033 () Bool)

(assert (=> bs!3137 m!71033))

(assert (=> b!71579 d!16779))

(declare-fun d!16781 () Bool)

(assert (=> d!16781 (= (apply!74 (+!91 lt!31868 (tuple2!2111 lt!31860 (minValue!2095 newMap!16))) lt!31872) (apply!74 lt!31868 lt!31872))))

(declare-fun lt!32432 () Unit!1996)

(assert (=> d!16781 (= lt!32432 (choose!409 lt!31868 lt!31860 (minValue!2095 newMap!16) lt!31872))))

(declare-fun e!47537 () Bool)

(assert (=> d!16781 e!47537))

(declare-fun res!38622 () Bool)

(assert (=> d!16781 (=> (not res!38622) (not e!47537))))

(assert (=> d!16781 (= res!38622 (contains!715 lt!31868 lt!31872))))

(assert (=> d!16781 (= (addApplyDifferent!50 lt!31868 lt!31860 (minValue!2095 newMap!16) lt!31872) lt!32432)))

(declare-fun b!72704 () Bool)

(assert (=> b!72704 (= e!47537 (not (= lt!31872 lt!31860)))))

(assert (= (and d!16781 res!38622) b!72704))

(assert (=> d!16781 m!68995))

(declare-fun m!71035 () Bool)

(assert (=> d!16781 m!71035))

(assert (=> d!16781 m!69007))

(assert (=> d!16781 m!69009))

(assert (=> d!16781 m!69007))

(declare-fun m!71037 () Bool)

(assert (=> d!16781 m!71037))

(assert (=> b!71579 d!16781))

(declare-fun d!16783 () Bool)

(declare-fun e!47538 () Bool)

(assert (=> d!16783 e!47538))

(declare-fun res!38623 () Bool)

(assert (=> d!16783 (=> (not res!38623) (not e!47538))))

(declare-fun lt!32436 () ListLongMap!1395)

(assert (=> d!16783 (= res!38623 (contains!715 lt!32436 (_1!1066 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16)))))))

(declare-fun lt!32434 () List!1467)

(assert (=> d!16783 (= lt!32436 (ListLongMap!1396 lt!32434))))

(declare-fun lt!32435 () Unit!1996)

(declare-fun lt!32433 () Unit!1996)

(assert (=> d!16783 (= lt!32435 lt!32433)))

(assert (=> d!16783 (= (getValueByKey!133 lt!32434 (_1!1066 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16783 (= lt!32433 (lemmaContainsTupThenGetReturnValue!50 lt!32434 (_1!1066 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16783 (= lt!32434 (insertStrictlySorted!53 (toList!713 lt!31867) (_1!1066 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16))) (_2!1066 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16783 (= (+!91 lt!31867 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16))) lt!32436)))

(declare-fun b!72705 () Bool)

(declare-fun res!38624 () Bool)

(assert (=> b!72705 (=> (not res!38624) (not e!47538))))

(assert (=> b!72705 (= res!38624 (= (getValueByKey!133 (toList!713 lt!32436) (_1!1066 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16)))) (Some!138 (_2!1066 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16))))))))

(declare-fun b!72706 () Bool)

(assert (=> b!72706 (= e!47538 (contains!719 (toList!713 lt!32436) (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16))))))

(assert (= (and d!16783 res!38623) b!72705))

(assert (= (and b!72705 res!38624) b!72706))

(declare-fun m!71039 () Bool)

(assert (=> d!16783 m!71039))

(declare-fun m!71041 () Bool)

(assert (=> d!16783 m!71041))

(declare-fun m!71043 () Bool)

(assert (=> d!16783 m!71043))

(declare-fun m!71045 () Bool)

(assert (=> d!16783 m!71045))

(declare-fun m!71047 () Bool)

(assert (=> b!72705 m!71047))

(declare-fun m!71049 () Bool)

(assert (=> b!72706 m!71049))

(assert (=> b!71579 d!16783))

(declare-fun d!16785 () Bool)

(assert (=> d!16785 (= (apply!74 lt!31857 lt!31855) (get!1146 (getValueByKey!133 (toList!713 lt!31857) lt!31855)))))

(declare-fun bs!3138 () Bool)

(assert (= bs!3138 d!16785))

(declare-fun m!71051 () Bool)

(assert (=> bs!3138 m!71051))

(assert (=> bs!3138 m!71051))

(declare-fun m!71053 () Bool)

(assert (=> bs!3138 m!71053))

(assert (=> b!71579 d!16785))

(declare-fun d!16787 () Bool)

(assert (=> d!16787 (contains!715 (+!91 lt!31867 (tuple2!2111 lt!31873 (zeroValue!2095 newMap!16))) lt!31870)))

(declare-fun lt!32437 () Unit!1996)

(assert (=> d!16787 (= lt!32437 (choose!410 lt!31867 lt!31873 (zeroValue!2095 newMap!16) lt!31870))))

(assert (=> d!16787 (contains!715 lt!31867 lt!31870)))

(assert (=> d!16787 (= (addStillContains!50 lt!31867 lt!31873 (zeroValue!2095 newMap!16) lt!31870) lt!32437)))

(declare-fun bs!3139 () Bool)

(assert (= bs!3139 d!16787))

(assert (=> bs!3139 m!69013))

(assert (=> bs!3139 m!69013))

(assert (=> bs!3139 m!69021))

(declare-fun m!71055 () Bool)

(assert (=> bs!3139 m!71055))

(declare-fun m!71057 () Bool)

(assert (=> bs!3139 m!71057))

(assert (=> b!71579 d!16787))

(declare-fun d!16789 () Bool)

(assert (=> d!16789 (= (apply!74 (+!91 lt!31857 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16))) lt!31855) (get!1146 (getValueByKey!133 (toList!713 (+!91 lt!31857 (tuple2!2111 lt!31863 (zeroValue!2095 newMap!16)))) lt!31855)))))

(declare-fun bs!3140 () Bool)

(assert (= bs!3140 d!16789))

(declare-fun m!71059 () Bool)

(assert (=> bs!3140 m!71059))

(assert (=> bs!3140 m!71059))

(declare-fun m!71061 () Bool)

(assert (=> bs!3140 m!71061))

(assert (=> b!71579 d!16789))

(declare-fun d!16791 () Bool)

(declare-fun lt!32438 () Bool)

(assert (=> d!16791 (= lt!32438 (select (content!76 (t!4995 (toList!713 lt!31512))) lt!31223))))

(declare-fun e!47540 () Bool)

(assert (=> d!16791 (= lt!32438 e!47540)))

(declare-fun res!38626 () Bool)

(assert (=> d!16791 (=> (not res!38626) (not e!47540))))

(assert (=> d!16791 (= res!38626 ((_ is Cons!1463) (t!4995 (toList!713 lt!31512))))))

(assert (=> d!16791 (= (contains!719 (t!4995 (toList!713 lt!31512)) lt!31223) lt!32438)))

(declare-fun b!72707 () Bool)

(declare-fun e!47539 () Bool)

(assert (=> b!72707 (= e!47540 e!47539)))

(declare-fun res!38625 () Bool)

(assert (=> b!72707 (=> res!38625 e!47539)))

(assert (=> b!72707 (= res!38625 (= (h!2049 (t!4995 (toList!713 lt!31512))) lt!31223))))

(declare-fun b!72708 () Bool)

(assert (=> b!72708 (= e!47539 (contains!719 (t!4995 (t!4995 (toList!713 lt!31512))) lt!31223))))

(assert (= (and d!16791 res!38626) b!72707))

(assert (= (and b!72707 (not res!38625)) b!72708))

(assert (=> d!16791 m!69303))

(declare-fun m!71063 () Bool)

(assert (=> d!16791 m!71063))

(declare-fun m!71065 () Bool)

(assert (=> b!72708 m!71065))

(assert (=> b!71249 d!16791))

(declare-fun d!16793 () Bool)

(assert (=> d!16793 (= (get!1146 (getValueByKey!133 (toList!713 lt!31357) lt!31355)) (v!2522 (getValueByKey!133 (toList!713 lt!31357) lt!31355)))))

(assert (=> d!15961 d!16793))

(declare-fun b!72710 () Bool)

(declare-fun e!47541 () Option!139)

(declare-fun e!47542 () Option!139)

(assert (=> b!72710 (= e!47541 e!47542)))

(declare-fun c!10772 () Bool)

(assert (=> b!72710 (= c!10772 (and ((_ is Cons!1463) (toList!713 lt!31357)) (not (= (_1!1066 (h!2049 (toList!713 lt!31357))) lt!31355))))))

(declare-fun b!72712 () Bool)

(assert (=> b!72712 (= e!47542 None!137)))

(declare-fun b!72711 () Bool)

(assert (=> b!72711 (= e!47542 (getValueByKey!133 (t!4995 (toList!713 lt!31357)) lt!31355))))

(declare-fun d!16795 () Bool)

(declare-fun c!10771 () Bool)

(assert (=> d!16795 (= c!10771 (and ((_ is Cons!1463) (toList!713 lt!31357)) (= (_1!1066 (h!2049 (toList!713 lt!31357))) lt!31355)))))

(assert (=> d!16795 (= (getValueByKey!133 (toList!713 lt!31357) lt!31355) e!47541)))

(declare-fun b!72709 () Bool)

(assert (=> b!72709 (= e!47541 (Some!138 (_2!1066 (h!2049 (toList!713 lt!31357)))))))

(assert (= (and d!16795 c!10771) b!72709))

(assert (= (and d!16795 (not c!10771)) b!72710))

(assert (= (and b!72710 c!10772) b!72711))

(assert (= (and b!72710 (not c!10772)) b!72712))

(declare-fun m!71067 () Bool)

(assert (=> b!72711 m!71067))

(assert (=> d!15961 d!16795))

(declare-fun d!16797 () Bool)

(assert (=> d!16797 (= ($colon$colon!64 e!46839 (ite c!10440 (h!2049 (toList!713 lt!31219)) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228)))) (Cons!1463 (ite c!10440 (h!2049 (toList!713 lt!31219)) (tuple2!2111 (_1!1066 lt!31228) (_2!1066 lt!31228))) e!46839))))

(assert (=> bm!6192 d!16797))

(declare-fun d!16799 () Bool)

(declare-fun e!47543 () Bool)

(assert (=> d!16799 e!47543))

(declare-fun res!38627 () Bool)

(assert (=> d!16799 (=> (not res!38627) (not e!47543))))

(declare-fun lt!32442 () ListLongMap!1395)

(assert (=> d!16799 (= res!38627 (contains!715 lt!32442 (_1!1066 (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(declare-fun lt!32440 () List!1467)

(assert (=> d!16799 (= lt!32442 (ListLongMap!1396 lt!32440))))

(declare-fun lt!32441 () Unit!1996)

(declare-fun lt!32439 () Unit!1996)

(assert (=> d!16799 (= lt!32441 lt!32439)))

(assert (=> d!16799 (= (getValueByKey!133 lt!32440 (_1!1066 (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))) (Some!138 (_2!1066 (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16799 (= lt!32439 (lemmaContainsTupThenGetReturnValue!50 lt!32440 (_1!1066 (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (_2!1066 (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16799 (= lt!32440 (insertStrictlySorted!53 (toList!713 (ite c!10386 call!6164 (ite c!10387 call!6162 call!6165))) (_1!1066 (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (_2!1066 (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16799 (= (+!91 (ite c!10386 call!6164 (ite c!10387 call!6162 call!6165)) (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) lt!32442)))

(declare-fun b!72713 () Bool)

(declare-fun res!38628 () Bool)

(assert (=> b!72713 (=> (not res!38628) (not e!47543))))

(assert (=> b!72713 (= res!38628 (= (getValueByKey!133 (toList!713 lt!32442) (_1!1066 (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))) (Some!138 (_2!1066 (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))))

(declare-fun b!72714 () Bool)

(assert (=> b!72714 (= e!47543 (contains!719 (toList!713 lt!32442) (ite (or c!10386 c!10387) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (= (and d!16799 res!38627) b!72713))

(assert (= (and b!72713 res!38628) b!72714))

(declare-fun m!71069 () Bool)

(assert (=> d!16799 m!71069))

(declare-fun m!71071 () Bool)

(assert (=> d!16799 m!71071))

(declare-fun m!71073 () Bool)

(assert (=> d!16799 m!71073))

(declare-fun m!71075 () Bool)

(assert (=> d!16799 m!71075))

(declare-fun m!71077 () Bool)

(assert (=> b!72713 m!71077))

(declare-fun m!71079 () Bool)

(assert (=> b!72714 m!71079))

(assert (=> bm!6162 d!16799))

(assert (=> d!16059 d!16057))

(declare-fun d!16801 () Bool)

(assert (=> d!16801 (= (getValueByKey!133 lt!31510 (_1!1066 lt!31223)) (Some!138 (_2!1066 lt!31223)))))

(assert (=> d!16801 true))

(declare-fun _$22!381 () Unit!1996)

(assert (=> d!16801 (= (choose!406 lt!31510 (_1!1066 lt!31223) (_2!1066 lt!31223)) _$22!381)))

(declare-fun bs!3141 () Bool)

(assert (= bs!3141 d!16801))

(assert (=> bs!3141 m!68189))

(assert (=> d!16059 d!16801))

(declare-fun d!16803 () Bool)

(declare-fun res!38629 () Bool)

(declare-fun e!47544 () Bool)

(assert (=> d!16803 (=> res!38629 e!47544)))

(assert (=> d!16803 (= res!38629 (or ((_ is Nil!1464) lt!31510) ((_ is Nil!1464) (t!4995 lt!31510))))))

(assert (=> d!16803 (= (isStrictlySorted!278 lt!31510) e!47544)))

(declare-fun b!72715 () Bool)

(declare-fun e!47545 () Bool)

(assert (=> b!72715 (= e!47544 e!47545)))

(declare-fun res!38630 () Bool)

(assert (=> b!72715 (=> (not res!38630) (not e!47545))))

(assert (=> b!72715 (= res!38630 (bvslt (_1!1066 (h!2049 lt!31510)) (_1!1066 (h!2049 (t!4995 lt!31510)))))))

(declare-fun b!72716 () Bool)

(assert (=> b!72716 (= e!47545 (isStrictlySorted!278 (t!4995 lt!31510)))))

(assert (= (and d!16803 (not res!38629)) b!72715))

(assert (= (and b!72715 res!38630) b!72716))

(declare-fun m!71081 () Bool)

(assert (=> b!72716 m!71081))

(assert (=> d!16059 d!16803))

(declare-fun d!16805 () Bool)

(assert (=> d!16805 (= (apply!74 lt!31597 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1146 (getValueByKey!133 (toList!713 lt!31597) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3142 () Bool)

(assert (= bs!3142 d!16805))

(assert (=> bs!3142 m!70953))

(assert (=> bs!3142 m!70953))

(declare-fun m!71083 () Bool)

(assert (=> bs!3142 m!71083))

(assert (=> b!71227 d!16805))

(declare-fun d!16807 () Bool)

(assert (=> d!16807 (contains!715 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))

(declare-fun lt!32445 () Unit!1996)

(declare-fun choose!416 (array!3863 array!3865 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) (_ BitVec 32) Int) Unit!1996)

(assert (=> d!16807 (= lt!32445 (choose!416 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16807 (validMask!0 (mask!6148 newMap!16))))

(assert (=> d!16807 (= (lemmaArrayContainsKeyThenInListMap!12 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32445)))

(declare-fun bs!3143 () Bool)

(assert (= bs!3143 d!16807))

(assert (=> bs!3143 m!67987))

(assert (=> bs!3143 m!67987))

(assert (=> bs!3143 m!67819))

(assert (=> bs!3143 m!68093))

(assert (=> bs!3143 m!67819))

(declare-fun m!71085 () Bool)

(assert (=> bs!3143 m!71085))

(assert (=> bs!3143 m!68327))

(assert (=> b!71547 d!16807))

(assert (=> b!71547 d!16017))

(assert (=> b!71547 d!16019))

(declare-fun d!16809 () Bool)

(declare-fun lt!32446 () Bool)

(assert (=> d!16809 (= lt!32446 (select (content!76 (t!4995 (toList!713 lt!31505))) lt!31228))))

(declare-fun e!47547 () Bool)

(assert (=> d!16809 (= lt!32446 e!47547)))

(declare-fun res!38632 () Bool)

(assert (=> d!16809 (=> (not res!38632) (not e!47547))))

(assert (=> d!16809 (= res!38632 ((_ is Cons!1463) (t!4995 (toList!713 lt!31505))))))

(assert (=> d!16809 (= (contains!719 (t!4995 (toList!713 lt!31505)) lt!31228) lt!32446)))

(declare-fun b!72717 () Bool)

(declare-fun e!47546 () Bool)

(assert (=> b!72717 (= e!47547 e!47546)))

(declare-fun res!38631 () Bool)

(assert (=> b!72717 (=> res!38631 e!47546)))

(assert (=> b!72717 (= res!38631 (= (h!2049 (t!4995 (toList!713 lt!31505))) lt!31228))))

(declare-fun b!72718 () Bool)

(assert (=> b!72718 (= e!47546 (contains!719 (t!4995 (t!4995 (toList!713 lt!31505))) lt!31228))))

(assert (= (and d!16809 res!38632) b!72717))

(assert (= (and b!72717 (not res!38631)) b!72718))

(assert (=> d!16809 m!69299))

(declare-fun m!71087 () Bool)

(assert (=> d!16809 m!71087))

(declare-fun m!71089 () Bool)

(assert (=> b!72718 m!71089))

(assert (=> b!71256 d!16809))

(declare-fun d!16811 () Bool)

(assert (=> d!16811 (= (apply!74 lt!31874 (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000)) (get!1146 (getValueByKey!133 (toList!713 lt!31874) (select (arr!1844 (_keys!3839 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3144 () Bool)

(assert (= bs!3144 d!16811))

(assert (=> bs!3144 m!68397))

(assert (=> bs!3144 m!70379))

(assert (=> bs!3144 m!70379))

(declare-fun m!71091 () Bool)

(assert (=> bs!3144 m!71091))

(assert (=> b!71585 d!16811))

(declare-fun c!10773 () Bool)

(declare-fun d!16813 () Bool)

(assert (=> d!16813 (= c!10773 ((_ is ValueCellFull!890) (select (arr!1845 (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!47548 () V!2937)

(assert (=> d!16813 (= (get!1141 (select (arr!1845 (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47548)))

(declare-fun b!72719 () Bool)

(assert (=> b!72719 (= e!47548 (get!1144 (select (arr!1845 (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72720 () Bool)

(assert (=> b!72720 (= e!47548 (get!1145 (select (arr!1845 (ite (or c!10293 c!10297) (_values!2174 newMap!16) (array!3866 (store (arr!1845 (_values!2174 newMap!16)) (index!3047 lt!31452) (ValueCellFull!890 lt!31220)) (size!2082 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!326 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16813 c!10773) b!72719))

(assert (= (and d!16813 (not c!10773)) b!72720))

(assert (=> b!72719 m!69027))

(assert (=> b!72719 m!68441))

(declare-fun m!71093 () Bool)

(assert (=> b!72719 m!71093))

(assert (=> b!72720 m!69027))

(assert (=> b!72720 m!68441))

(declare-fun m!71095 () Bool)

(assert (=> b!72720 m!71095))

(assert (=> b!71585 d!16813))

(assert (=> bm!6188 d!15999))

(declare-fun d!16815 () Bool)

(declare-fun res!38633 () Bool)

(declare-fun e!47549 () Bool)

(assert (=> d!16815 (=> res!38633 e!47549)))

(assert (=> d!16815 (= res!38633 (and ((_ is Cons!1463) lt!31723) (= (_1!1066 (h!2049 lt!31723)) (_1!1066 lt!31223))))))

(assert (=> d!16815 (= (containsKey!136 lt!31723 (_1!1066 lt!31223)) e!47549)))

(declare-fun b!72721 () Bool)

(declare-fun e!47550 () Bool)

(assert (=> b!72721 (= e!47549 e!47550)))

(declare-fun res!38634 () Bool)

(assert (=> b!72721 (=> (not res!38634) (not e!47550))))

(assert (=> b!72721 (= res!38634 (and (or (not ((_ is Cons!1463) lt!31723)) (bvsle (_1!1066 (h!2049 lt!31723)) (_1!1066 lt!31223))) ((_ is Cons!1463) lt!31723) (bvslt (_1!1066 (h!2049 lt!31723)) (_1!1066 lt!31223))))))

(declare-fun b!72722 () Bool)

(assert (=> b!72722 (= e!47550 (containsKey!136 (t!4995 lt!31723) (_1!1066 lt!31223)))))

(assert (= (and d!16815 (not res!38633)) b!72721))

(assert (= (and b!72721 res!38634) b!72722))

(declare-fun m!71097 () Bool)

(assert (=> b!72722 m!71097))

(assert (=> b!71395 d!16815))

(declare-fun d!16817 () Bool)

(declare-fun res!38635 () Bool)

(declare-fun e!47551 () Bool)

(assert (=> d!16817 (=> res!38635 e!47551)))

(assert (=> d!16817 (= res!38635 (and ((_ is Cons!1463) (toList!713 lt!31365)) (= (_1!1066 (h!2049 (toList!713 lt!31365))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16817 (= (containsKey!136 (toList!713 lt!31365) #b1000000000000000000000000000000000000000000000000000000000000000) e!47551)))

(declare-fun b!72723 () Bool)

(declare-fun e!47552 () Bool)

(assert (=> b!72723 (= e!47551 e!47552)))

(declare-fun res!38636 () Bool)

(assert (=> b!72723 (=> (not res!38636) (not e!47552))))

(assert (=> b!72723 (= res!38636 (and (or (not ((_ is Cons!1463) (toList!713 lt!31365))) (bvsle (_1!1066 (h!2049 (toList!713 lt!31365))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1463) (toList!713 lt!31365)) (bvslt (_1!1066 (h!2049 (toList!713 lt!31365))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72724 () Bool)

(assert (=> b!72724 (= e!47552 (containsKey!136 (t!4995 (toList!713 lt!31365)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16817 (not res!38635)) b!72723))

(assert (= (and b!72723 res!38636) b!72724))

(declare-fun m!71099 () Bool)

(assert (=> b!72724 m!71099))

(assert (=> d!15873 d!16817))

(assert (=> d!15889 d!15893))

(assert (=> d!15889 d!15885))

(assert (=> d!15889 d!15891))

(assert (=> d!15889 d!15887))

(declare-fun d!16819 () Bool)

(declare-fun lt!32447 () Bool)

(assert (=> d!16819 (= lt!32447 (select (content!76 (toList!713 lt!31614)) (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun e!47554 () Bool)

(assert (=> d!16819 (= lt!32447 e!47554)))

(declare-fun res!38638 () Bool)

(assert (=> d!16819 (=> (not res!38638) (not e!47554))))

(assert (=> d!16819 (= res!38638 ((_ is Cons!1463) (toList!713 lt!31614)))))

(assert (=> d!16819 (= (contains!719 (toList!713 lt!31614) (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!32447)))

(declare-fun b!72725 () Bool)

(declare-fun e!47553 () Bool)

(assert (=> b!72725 (= e!47554 e!47553)))

(declare-fun res!38637 () Bool)

(assert (=> b!72725 (=> res!38637 e!47553)))

(assert (=> b!72725 (= res!38637 (= (h!2049 (toList!713 lt!31614)) (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(declare-fun b!72726 () Bool)

(assert (=> b!72726 (= e!47553 (contains!719 (t!4995 (toList!713 lt!31614)) (ite (or c!10253 c!10254) (tuple2!2111 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))) (tuple2!2111 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2516 (underlying!259 thiss!992)))))))))

(assert (= (and d!16819 res!38638) b!72725))

(assert (= (and b!72725 (not res!38637)) b!72726))

(declare-fun m!71101 () Bool)

(assert (=> d!16819 m!71101))

(declare-fun m!71103 () Bool)

(assert (=> d!16819 m!71103))

(declare-fun m!71105 () Bool)

(assert (=> b!72726 m!71105))

(assert (=> b!71261 d!16819))

(assert (=> d!16071 d!16069))

(declare-fun d!16821 () Bool)

(assert (=> d!16821 (= (getValueByKey!133 lt!31514 (_1!1066 lt!31228)) (Some!138 (_2!1066 lt!31228)))))

(assert (=> d!16821 true))

(declare-fun _$22!382 () Unit!1996)

(assert (=> d!16821 (= (choose!406 lt!31514 (_1!1066 lt!31228) (_2!1066 lt!31228)) _$22!382)))

(declare-fun bs!3145 () Bool)

(assert (= bs!3145 d!16821))

(assert (=> bs!3145 m!68201))

(assert (=> d!16071 d!16821))

(declare-fun d!16823 () Bool)

(declare-fun res!38639 () Bool)

(declare-fun e!47555 () Bool)

(assert (=> d!16823 (=> res!38639 e!47555)))

(assert (=> d!16823 (= res!38639 (or ((_ is Nil!1464) lt!31514) ((_ is Nil!1464) (t!4995 lt!31514))))))

(assert (=> d!16823 (= (isStrictlySorted!278 lt!31514) e!47555)))

(declare-fun b!72727 () Bool)

(declare-fun e!47556 () Bool)

(assert (=> b!72727 (= e!47555 e!47556)))

(declare-fun res!38640 () Bool)

(assert (=> b!72727 (=> (not res!38640) (not e!47556))))

(assert (=> b!72727 (= res!38640 (bvslt (_1!1066 (h!2049 lt!31514)) (_1!1066 (h!2049 (t!4995 lt!31514)))))))

(declare-fun b!72728 () Bool)

(assert (=> b!72728 (= e!47556 (isStrictlySorted!278 (t!4995 lt!31514)))))

(assert (= (and d!16823 (not res!38639)) b!72727))

(assert (= (and b!72727 res!38640) b!72728))

(declare-fun m!71107 () Bool)

(assert (=> b!72728 m!71107))

(assert (=> d!16071 d!16823))

(declare-fun d!16825 () Bool)

(assert (=> d!16825 (isDefined!85 (getValueByKey!133 (toList!713 lt!31505) (_1!1066 lt!31228)))))

(declare-fun lt!32448 () Unit!1996)

(assert (=> d!16825 (= lt!32448 (choose!407 (toList!713 lt!31505) (_1!1066 lt!31228)))))

(declare-fun e!47557 () Bool)

(assert (=> d!16825 e!47557))

(declare-fun res!38641 () Bool)

(assert (=> d!16825 (=> (not res!38641) (not e!47557))))

(assert (=> d!16825 (= res!38641 (isStrictlySorted!278 (toList!713 lt!31505)))))

(assert (=> d!16825 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31505) (_1!1066 lt!31228)) lt!32448)))

(declare-fun b!72729 () Bool)

(assert (=> b!72729 (= e!47557 (containsKey!136 (toList!713 lt!31505) (_1!1066 lt!31228)))))

(assert (= (and d!16825 res!38641) b!72729))

(assert (=> d!16825 m!68173))

(assert (=> d!16825 m!68173))

(assert (=> d!16825 m!68349))

(declare-fun m!71109 () Bool)

(assert (=> d!16825 m!71109))

(declare-fun m!71111 () Bool)

(assert (=> d!16825 m!71111))

(assert (=> b!72729 m!68345))

(assert (=> b!71163 d!16825))

(assert (=> b!71163 d!16253))

(assert (=> b!71163 d!16053))

(declare-fun d!16827 () Bool)

(declare-fun res!38642 () Bool)

(declare-fun e!47558 () Bool)

(assert (=> d!16827 (=> res!38642 e!47558)))

(assert (=> d!16827 (= res!38642 (and ((_ is Cons!1463) (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))) (= (_1!1066 (h!2049 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(assert (=> d!16827 (= (containsKey!136 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)) e!47558)))

(declare-fun b!72730 () Bool)

(declare-fun e!47559 () Bool)

(assert (=> b!72730 (= e!47558 e!47559)))

(declare-fun res!38643 () Bool)

(assert (=> b!72730 (=> (not res!38643) (not e!47559))))

(assert (=> b!72730 (= res!38643 (and (or (not ((_ is Cons!1463) (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))))) (bvsle (_1!1066 (h!2049 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))) ((_ is Cons!1463) (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))) (bvslt (_1!1066 (h!2049 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355))))))

(declare-fun b!72731 () Bool)

(assert (=> b!72731 (= e!47559 (containsKey!136 (t!4995 (toList!713 (getCurrentListMap!411 (_keys!3839 newMap!16) (_values!2174 newMap!16) (mask!6148 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))) (select (arr!1844 (_keys!3839 (v!2516 (underlying!259 thiss!992)))) from!355)))))

(assert (= (and d!16827 (not res!38642)) b!72730))

(assert (= (and b!72730 res!38643) b!72731))

(assert (=> b!72731 m!67819))

(declare-fun m!71113 () Bool)

(assert (=> b!72731 m!71113))

(assert (=> d!16017 d!16827))

(declare-fun b!72733 () Bool)

(declare-fun e!47560 () Option!139)

(declare-fun e!47561 () Option!139)

(assert (=> b!72733 (= e!47560 e!47561)))

(declare-fun c!10775 () Bool)

(assert (=> b!72733 (= c!10775 (and ((_ is Cons!1463) (t!4995 lt!31503)) (not (= (_1!1066 (h!2049 (t!4995 lt!31503))) (_1!1066 lt!31228)))))))

(declare-fun b!72735 () Bool)

(assert (=> b!72735 (= e!47561 None!137)))

(declare-fun b!72734 () Bool)

(assert (=> b!72734 (= e!47561 (getValueByKey!133 (t!4995 (t!4995 lt!31503)) (_1!1066 lt!31228)))))

(declare-fun d!16829 () Bool)

(declare-fun c!10774 () Bool)

(assert (=> d!16829 (= c!10774 (and ((_ is Cons!1463) (t!4995 lt!31503)) (= (_1!1066 (h!2049 (t!4995 lt!31503))) (_1!1066 lt!31228))))))

(assert (=> d!16829 (= (getValueByKey!133 (t!4995 lt!31503) (_1!1066 lt!31228)) e!47560)))

(declare-fun b!72732 () Bool)

(assert (=> b!72732 (= e!47560 (Some!138 (_2!1066 (h!2049 (t!4995 lt!31503)))))))

(assert (= (and d!16829 c!10774) b!72732))

(assert (= (and d!16829 (not c!10774)) b!72733))

(assert (= (and b!72733 c!10775) b!72734))

(assert (= (and b!72733 (not c!10775)) b!72735))

(declare-fun m!71115 () Bool)

(assert (=> b!72734 m!71115))

(assert (=> b!71168 d!16829))

(declare-fun d!16831 () Bool)

(declare-fun res!38644 () Bool)

(declare-fun e!47562 () Bool)

(assert (=> d!16831 (=> res!38644 e!47562)))

(assert (=> d!16831 (= res!38644 (and ((_ is Cons!1463) (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (= (_1!1066 (h!2049 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31361)))))

(assert (=> d!16831 (= (containsKey!136 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))) lt!31361) e!47562)))

(declare-fun b!72736 () Bool)

(declare-fun e!47563 () Bool)

(assert (=> b!72736 (= e!47562 e!47563)))

(declare-fun res!38645 () Bool)

(assert (=> b!72736 (=> (not res!38645) (not e!47563))))

(assert (=> b!72736 (= res!38645 (and (or (not ((_ is Cons!1463) (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) (bvsle (_1!1066 (h!2049 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31361)) ((_ is Cons!1463) (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) (bvslt (_1!1066 (h!2049 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992)))))))) lt!31361)))))

(declare-fun b!72737 () Bool)

(assert (=> b!72737 (= e!47563 (containsKey!136 (t!4995 (toList!713 (+!91 lt!31358 (tuple2!2111 lt!31364 (zeroValue!2095 (v!2516 (underlying!259 thiss!992))))))) lt!31361))))

(assert (= (and d!16831 (not res!38644)) b!72736))

(assert (= (and b!72736 res!38645) b!72737))

(declare-fun m!71117 () Bool)

(assert (=> b!72737 m!71117))

(assert (=> d!15971 d!16831))

(declare-fun d!16833 () Bool)

(declare-fun e!47565 () Bool)

(assert (=> d!16833 e!47565))

(declare-fun res!38646 () Bool)

(assert (=> d!16833 (=> res!38646 e!47565)))

(declare-fun lt!32452 () Bool)

(assert (=> d!16833 (= res!38646 (not lt!32452))))

(declare-fun lt!32451 () Bool)

(assert (=> d!16833 (= lt!32452 lt!32451)))

(declare-fun lt!32450 () Unit!1996)

(declare-fun e!47564 () Unit!1996)

(assert (=> d!16833 (= lt!32450 e!47564)))

(declare-fun c!10776 () Bool)

(assert (=> d!16833 (= c!10776 lt!32451)))

(assert (=> d!16833 (= lt!32451 (containsKey!136 (toList!713 lt!31716) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16833 (= (contains!715 lt!31716 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32452)))

(declare-fun b!72738 () Bool)

(declare-fun lt!32449 () Unit!1996)

(assert (=> b!72738 (= e!47564 lt!32449)))

(assert (=> b!72738 (= lt!32449 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31716) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72738 (isDefined!85 (getValueByKey!133 (toList!713 lt!31716) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72739 () Bool)

(declare-fun Unit!2073 () Unit!1996)

(assert (=> b!72739 (= e!47564 Unit!2073)))

(declare-fun b!72740 () Bool)

(assert (=> b!72740 (= e!47565 (isDefined!85 (getValueByKey!133 (toList!713 lt!31716) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16833 c!10776) b!72738))

(assert (= (and d!16833 (not c!10776)) b!72739))

(assert (= (and d!16833 (not res!38646)) b!72740))

(declare-fun m!71119 () Bool)

(assert (=> d!16833 m!71119))

(declare-fun m!71121 () Bool)

(assert (=> b!72738 m!71121))

(assert (=> b!72738 m!69111))

(assert (=> b!72738 m!69111))

(declare-fun m!71123 () Bool)

(assert (=> b!72738 m!71123))

(assert (=> b!72740 m!69111))

(assert (=> b!72740 m!69111))

(assert (=> b!72740 m!71123))

(assert (=> bm!6160 d!16833))

(declare-fun d!16835 () Bool)

(declare-fun e!47567 () Bool)

(assert (=> d!16835 e!47567))

(declare-fun res!38647 () Bool)

(assert (=> d!16835 (=> res!38647 e!47567)))

(declare-fun lt!32456 () Bool)

(assert (=> d!16835 (= res!38647 (not lt!32456))))

(declare-fun lt!32455 () Bool)

(assert (=> d!16835 (= lt!32456 lt!32455)))

(declare-fun lt!32454 () Unit!1996)

(declare-fun e!47566 () Unit!1996)

(assert (=> d!16835 (= lt!32454 e!47566)))

(declare-fun c!10777 () Bool)

(assert (=> d!16835 (= c!10777 lt!32455)))

(assert (=> d!16835 (= lt!32455 (containsKey!136 (toList!713 lt!31681) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16835 (= (contains!715 lt!31681 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32456)))

(declare-fun b!72741 () Bool)

(declare-fun lt!32453 () Unit!1996)

(assert (=> b!72741 (= e!47566 lt!32453)))

(assert (=> b!72741 (= lt!32453 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31681) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72741 (isDefined!85 (getValueByKey!133 (toList!713 lt!31681) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72742 () Bool)

(declare-fun Unit!2074 () Unit!1996)

(assert (=> b!72742 (= e!47566 Unit!2074)))

(declare-fun b!72743 () Bool)

(assert (=> b!72743 (= e!47567 (isDefined!85 (getValueByKey!133 (toList!713 lt!31681) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16835 c!10777) b!72741))

(assert (= (and d!16835 (not c!10777)) b!72742))

(assert (= (and d!16835 (not res!38647)) b!72743))

(declare-fun m!71125 () Bool)

(assert (=> d!16835 m!71125))

(declare-fun m!71127 () Bool)

(assert (=> b!72741 m!71127))

(declare-fun m!71129 () Bool)

(assert (=> b!72741 m!71129))

(assert (=> b!72741 m!71129))

(declare-fun m!71131 () Bool)

(assert (=> b!72741 m!71131))

(assert (=> b!72743 m!71129))

(assert (=> b!72743 m!71129))

(assert (=> b!72743 m!71131))

(assert (=> b!71336 d!16835))

(assert (=> d!15957 d!15969))

(assert (=> d!15957 d!15955))

(assert (=> d!15957 d!15963))

(declare-fun d!16837 () Bool)

(declare-fun e!47569 () Bool)

(assert (=> d!16837 e!47569))

(declare-fun res!38648 () Bool)

(assert (=> d!16837 (=> res!38648 e!47569)))

(declare-fun lt!32460 () Bool)

(assert (=> d!16837 (= res!38648 (not lt!32460))))

(declare-fun lt!32459 () Bool)

(assert (=> d!16837 (= lt!32460 lt!32459)))

(declare-fun lt!32458 () Unit!1996)

(declare-fun e!47568 () Unit!1996)

(assert (=> d!16837 (= lt!32458 e!47568)))

(declare-fun c!10778 () Bool)

(assert (=> d!16837 (= c!10778 lt!32459)))

(assert (=> d!16837 (= lt!32459 (containsKey!136 (toList!713 lt!31359) lt!31363))))

(assert (=> d!16837 (= (contains!715 lt!31359 lt!31363) lt!32460)))

(declare-fun b!72744 () Bool)

(declare-fun lt!32457 () Unit!1996)

(assert (=> b!72744 (= e!47568 lt!32457)))

(assert (=> b!72744 (= lt!32457 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!713 lt!31359) lt!31363))))

(assert (=> b!72744 (isDefined!85 (getValueByKey!133 (toList!713 lt!31359) lt!31363))))

(declare-fun b!72745 () Bool)

(declare-fun Unit!2075 () Unit!1996)

(assert (=> b!72745 (= e!47568 Unit!2075)))

(declare-fun b!72746 () Bool)

(assert (=> b!72746 (= e!47569 (isDefined!85 (getValueByKey!133 (toList!713 lt!31359) lt!31363)))))

(assert (= (and d!16837 c!10778) b!72744))

(assert (= (and d!16837 (not c!10778)) b!72745))

(assert (= (and d!16837 (not res!38648)) b!72746))

(declare-fun m!71133 () Bool)

(assert (=> d!16837 m!71133))

(declare-fun m!71135 () Bool)

(assert (=> b!72744 m!71135))

(assert (=> b!72744 m!68577))

(assert (=> b!72744 m!68577))

(declare-fun m!71137 () Bool)

(assert (=> b!72744 m!71137))

(assert (=> b!72746 m!68577))

(assert (=> b!72746 m!68577))

(assert (=> b!72746 m!71137))

(assert (=> d!15957 d!16837))

(declare-fun d!16839 () Bool)

(assert (=> d!16839 (= (apply!74 (+!91 lt!31359 (tuple2!2111 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))))) lt!31363) (apply!74 lt!31359 lt!31363))))

(assert (=> d!16839 true))

(declare-fun _$34!804 () Unit!1996)

(assert (=> d!16839 (= (choose!409 lt!31359 lt!31351 (minValue!2095 (v!2516 (underlying!259 thiss!992))) lt!31363) _$34!804)))

(declare-fun bs!3146 () Bool)

(assert (= bs!3146 d!16839))

(assert (=> bs!3146 m!68019))

(assert (=> bs!3146 m!68019))

(assert (=> bs!3146 m!68021))

(assert (=> bs!3146 m!68007))

(assert (=> d!15957 d!16839))

(declare-fun mapNonEmpty!3159 () Bool)

(declare-fun mapRes!3159 () Bool)

(declare-fun tp!8505 () Bool)

(declare-fun e!47570 () Bool)

(assert (=> mapNonEmpty!3159 (= mapRes!3159 (and tp!8505 e!47570))))

(declare-fun mapValue!3159 () ValueCell!890)

(declare-fun mapRest!3159 () (Array (_ BitVec 32) ValueCell!890))

(declare-fun mapKey!3159 () (_ BitVec 32))

(assert (=> mapNonEmpty!3159 (= mapRest!3158 (store mapRest!3159 mapKey!3159 mapValue!3159))))

(declare-fun mapIsEmpty!3159 () Bool)

(assert (=> mapIsEmpty!3159 mapRes!3159))

(declare-fun condMapEmpty!3159 () Bool)

(declare-fun mapDefault!3159 () ValueCell!890)

(assert (=> mapNonEmpty!3158 (= condMapEmpty!3159 (= mapRest!3158 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3159)))))

(declare-fun e!47571 () Bool)

(assert (=> mapNonEmpty!3158 (= tp!8504 (and e!47571 mapRes!3159))))

(declare-fun b!72748 () Bool)

(assert (=> b!72748 (= e!47571 tp_is_empty!2467)))

(declare-fun b!72747 () Bool)

(assert (=> b!72747 (= e!47570 tp_is_empty!2467)))

(assert (= (and mapNonEmpty!3158 condMapEmpty!3159) mapIsEmpty!3159))

(assert (= (and mapNonEmpty!3158 (not condMapEmpty!3159)) mapNonEmpty!3159))

(assert (= (and mapNonEmpty!3159 ((_ is ValueCellFull!890) mapValue!3159)) b!72747))

(assert (= (and mapNonEmpty!3158 ((_ is ValueCellFull!890) mapDefault!3159)) b!72748))

(declare-fun m!71139 () Bool)

(assert (=> mapNonEmpty!3159 m!71139))

(declare-fun mapNonEmpty!3160 () Bool)

(declare-fun mapRes!3160 () Bool)

(declare-fun tp!8506 () Bool)

(declare-fun e!47572 () Bool)

(assert (=> mapNonEmpty!3160 (= mapRes!3160 (and tp!8506 e!47572))))

(declare-fun mapKey!3160 () (_ BitVec 32))

(declare-fun mapRest!3160 () (Array (_ BitVec 32) ValueCell!890))

(declare-fun mapValue!3160 () ValueCell!890)

(assert (=> mapNonEmpty!3160 (= mapRest!3157 (store mapRest!3160 mapKey!3160 mapValue!3160))))

(declare-fun mapIsEmpty!3160 () Bool)

(assert (=> mapIsEmpty!3160 mapRes!3160))

(declare-fun condMapEmpty!3160 () Bool)

(declare-fun mapDefault!3160 () ValueCell!890)

(assert (=> mapNonEmpty!3157 (= condMapEmpty!3160 (= mapRest!3157 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3160)))))

(declare-fun e!47573 () Bool)

(assert (=> mapNonEmpty!3157 (= tp!8503 (and e!47573 mapRes!3160))))

(declare-fun b!72750 () Bool)

(assert (=> b!72750 (= e!47573 tp_is_empty!2467)))

(declare-fun b!72749 () Bool)

(assert (=> b!72749 (= e!47572 tp_is_empty!2467)))

(assert (= (and mapNonEmpty!3157 condMapEmpty!3160) mapIsEmpty!3160))

(assert (= (and mapNonEmpty!3157 (not condMapEmpty!3160)) mapNonEmpty!3160))

(assert (= (and mapNonEmpty!3160 ((_ is ValueCellFull!890) mapValue!3160)) b!72749))

(assert (= (and mapNonEmpty!3157 ((_ is ValueCellFull!890) mapDefault!3160)) b!72750))

(declare-fun m!71141 () Bool)

(assert (=> mapNonEmpty!3160 m!71141))

(declare-fun b_lambda!3251 () Bool)

(assert (= b_lambda!3227 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3251)))

(declare-fun b_lambda!3253 () Bool)

(assert (= b_lambda!3247 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3253)))

(declare-fun b_lambda!3255 () Bool)

(assert (= b_lambda!3237 (or (and b!70696 b_free!2101) (and b!70685 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))) b_lambda!3255)))

(declare-fun b_lambda!3257 () Bool)

(assert (= b_lambda!3245 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3257)))

(declare-fun b_lambda!3259 () Bool)

(assert (= b_lambda!3221 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3259)))

(declare-fun b_lambda!3261 () Bool)

(assert (= b_lambda!3243 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3261)))

(declare-fun b_lambda!3263 () Bool)

(assert (= b_lambda!3241 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3263)))

(declare-fun b_lambda!3265 () Bool)

(assert (= b_lambda!3235 (or (and b!70696 b_free!2101) (and b!70685 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))))) b_lambda!3265)))

(declare-fun b_lambda!3267 () Bool)

(assert (= b_lambda!3239 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3267)))

(declare-fun b_lambda!3269 () Bool)

(assert (= b_lambda!3225 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3269)))

(declare-fun b_lambda!3271 () Bool)

(assert (= b_lambda!3233 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3271)))

(declare-fun b_lambda!3273 () Bool)

(assert (= b_lambda!3223 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3273)))

(declare-fun b_lambda!3275 () Bool)

(assert (= b_lambda!3231 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3275)))

(declare-fun b_lambda!3277 () Bool)

(assert (= b_lambda!3229 (or (and b!70696 b_free!2101 (= (defaultEntry!2191 (v!2516 (underlying!259 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70685 b_free!2103) b_lambda!3277)))

(check-sat (not b!72450) (not b!71873) (not d!16599) (not b!71774) (not d!16771) (not b!71606) (not b!72672) (not b!71851) (not b!71842) (not d!16583) (not b!72132) (not b!72044) (not b!72029) (not d!16571) (not d!16607) (not b!71907) (not b!72368) (not b!72579) (not b!72035) (not d!16597) (not d!16435) (not b!72211) (not b!71904) (not b!71829) (not b!71820) (not b!72217) (not b!71985) (not d!16415) (not b!72718) (not d!16609) (not b!72482) (not d!16603) (not b!72056) (not b!72377) (not b!72535) (not b!72198) (not bm!6283) (not b!72170) (not b!72286) (not b!71668) (not b!72282) (not bm!6262) (not b!72292) (not d!16471) (not b!72389) (not d!16447) (not d!16097) (not b!72320) (not b!72269) (not b!71699) (not b!72469) (not b!71695) (not b!72595) (not d!16233) (not b!72737) (not b_lambda!3259) (not b!71659) (not b!72380) (not b_lambda!3265) (not b_lambda!3195) (not bm!6231) (not b!71628) (not bm!6254) (not d!16125) (not d!16311) (not d!16209) (not b!72157) (not bm!6244) (not b!71803) (not b!72662) (not b!72219) (not b!72642) (not b!71721) (not d!16499) (not b!71971) (not b!72278) (not d!16723) (not b!72249) (not b!72714) (not b_lambda!3273) (not b!72165) (not b!72260) (not d!16773) (not d!16721) (not d!16709) (not b!72572) (not b!72417) (not b!72176) (not d!16325) (not bm!6238) (not b!72537) (not bm!6273) (not d!16453) (not b_lambda!3215) (not bm!6292) (not d!16775) (not d!16789) (not b!71703) (not d!16809) (not b!72064) (not b!72027) (not b!71724) (not b!72585) (not b!72340) (not b_lambda!3187) (not bm!6234) (not d!16525) (not b!71878) (not d!16461) (not b!71629) (not b!72274) (not b!72096) (not b!72171) (not d!16449) (not b!72353) (not b!72473) (not d!16189) (not b!71867) (not b!71992) (not b!72581) (not b!72744) (not b_lambda!3255) (not d!16573) (not b!72127) (not b!72692) (not b!72208) (not b!72014) (not bm!6302) (not b_lambda!3253) (not d!16413) (not b!72386) (not b!72195) (not bm!6218) (not b!72590) (not b!72370) (not b!72163) (not b!71858) (not bm!6296) (not d!16267) (not b!71794) (not d!16705) (not b!72323) (not b!72700) (not b!71715) (not b!72108) (not b!71804) (not d!16243) (not b!71892) (not d!16487) (not b!71672) (not b!71618) (not bm!6255) (not b!72067) (not b!72728) (not bm!6307) (not b!71990) (not b!71771) (not bm!6317) (not b!72336) (not b!72167) (not bm!6212) (not b!71631) (not b!71641) (not b!72209) (not b!72023) (not b!71895) (not d!16269) (not b!72154) (not d!16493) (not b!72405) (not b!71709) (not b!72234) (not d!16287) (not b!72071) (not b!71625) (not b!72426) (not b!72605) (not b!72120) (not d!16547) (not b!72204) (not b!71906) (not bm!6295) (not b!72042) (not b!71746) (not b!71852) (not d!16101) (not d!16207) (not b!72062) (not bm!6209) (not b!72075) (not bm!6287) (not b!72346) (not b!72130) (not b!72362) (not bm!6314) (not b!71833) (not b!72613) (not b_lambda!3197) (not d!16253) (not b!72418) (not b_lambda!3219) (not b!72719) (not d!16315) (not b!72606) (not b!72740) (not b!72189) (not b!71705) (not b!72682) (not d!16403) (not bm!6300) (not b!71910) (not d!16753) (not b!71872) (not d!16579) (not b!72281) (not d!16079) (not b!72529) (not d!16475) (not b!72095) (not d!16255) (not b!71805) (not b!72299) (not b!72376) (not d!16349) (not d!16759) (not b!72541) (not d!16429) (not b!72506) (not b_next!2101) (not d!16237) (not d!16833) (not b!72420) (not d!16201) (not b!72243) (not b!71770) (not d!16631) (not b!71969) (not d!16507) (not d!16497) (not b!72486) (not b!72703) (not bm!6305) (not bm!6230) (not d!16379) (not b!72610) (not b!71718) (not b!71943) (not b!72409) (not b!72688) (not b!71948) (not b!71755) (not d!16355) (not b!72143) (not b_lambda!3267) (not b!72724) (not bm!6248) (not d!16589) (not d!16167) (not d!16673) (not d!16563) (not b!72441) (not b!72576) (not d!16539) b_and!4467 (not d!16513) (not b!71638) (not b!72060) (not d!16801) (not d!16511) (not b!72302) (not d!16719) (not b!72523) (not d!16779) (not b!72694) (not b!71883) (not d!16601) (not d!16617) (not b!72153) (not b!72169) (not b!72686) (not bm!6228) (not b!72574) (not b!71836) (not b!72547) (not b!71801) (not b!72560) (not b!72599) (not bm!6220) (not d!16739) (not d!16503) (not d!16621) (not b!71854) (not d!16611) (not b!71841) (not d!16219) (not b_lambda!3269) (not d!16521) (not b!72331) (not b!71637) (not d!16819) (not b!72378) (not b!72264) (not b!71723) (not b!72242) (not b!71654) (not b!72105) (not bm!6204) (not b!71834) (not b!71753) (not b!71903) (not b!72220) (not d!16195) (not b!72374) (not d!16327) (not d!16283) (not b!72297) (not b!71757) (not b!72397) (not b!72488) (not b!71813) (not d!16213) (not b!72261) (not d!16133) (not b!72110) (not d!16745) (not d!16661) (not d!16477) (not b!72695) (not d!16737) (not bm!6221) (not b!71727) (not d!16141) (not d!16165) (not bm!6205) (not b!71832) (not b!71988) (not d!16169) (not d!16675) (not b!72229) (not b_lambda!3263) (not bm!6301) (not b!71744) (not b!72334) (not b!72266) (not b!72708) (not d!16697) (not b!72462) (not b!71959) (not b!72190) (not b!72407) (not b!72197) (not b!72698) (not b!72102) (not bm!6263) (not d!16297) (not bm!6240) (not bm!6251) (not b!72296) (not b!72384) (not d!16223) (not d!16099) (not b!72654) (not b!72738) (not b!71691) (not b!72255) (not b!71651) (not b!72337) (not b!72004) (not b!72123) (not b_lambda!3199) (not d!16807) (not b!71864) (not b!71909) (not d!16309) (not b!71782) (not b!72402) (not bm!6274) (not d!16401) (not bm!6241) (not bm!6281) (not d!16361) (not b!72658) (not b!72356) (not b!72020) (not b!72429) (not b!71995) (not bm!6284) (not b!71989) (not b!72722) (not b!71697) (not d!16839) (not b!72012) (not d!16179) (not b!72339) (not b!72616) (not b!72396) (not b_lambda!3249) (not d!16149) (not bm!6229) (not d!16791) (not b!72079) (not d!16089) (not b!72181) (not b_lambda!3261) (not b!72072) (not d!16615) (not b!72419) (not b!72716) (not bm!6308) (not d!16531) (not d!16459) (not d!16545) (not b!71646) (not b!72090) (not b!71822) (not b!71786) (not b!72147) (not b!72743) (not bm!6259) (not d!16529) (not b!72174) (not b!72505) (not d!16367) (not d!16143) (not b!72726) (not b!72304) (not d!16783) (not b!72611) (not b!71675) (not b!72158) (not b!72276) (not bm!6239) (not d!16225) (not bm!6203) (not b!71808) (not b!72500) (not d!16087) (not b!72093) (not b!72059) (not d!16369) (not b!71957) (not b_lambda!3257) (not bm!6310) (not b!72214) (not b!72065) (not d!16345) (not b!72325) (not b!72335) (not b!72734) (not d!16565) (not d!16811) (not b!72472) (not b!71998) (not b!72527) (not b!72460) (not b!72414) (not b!72571) (not b!71597) (not bm!6225) (not b!72332) (not b!71773) (not b!72133) (not d!16383) (not b!71968) (not d!16691) (not d!16181) (not b!72667) (not d!16727) (not b!72663) (not b!71749) (not b!72443) (not b!72139) (not b!72532) (not b!72328) (not b!71789) (not d!16083) (not b!72295) (not b!72404) (not d!16743) (not b!72485) (not b!71880) (not b_next!2103) (not b!72511) (not b!71768) (not b!71876) (not d!16277) (not bm!6270) (not d!16103) (not b!72538) (not b!72566) (not d!16799) (not d!16305) (not d!16619) (not d!16777) (not d!16637) (not d!16443) (not d!16681) (not b!71946) (not b!72253) (not b!72412) (not b!71769) (not b!72660) (not b!72400) b_and!4465 (not d!16407) (not b!71650) (not b!72679) (not b!71961) (not b_lambda!3277) (not b_lambda!3213) (not b!72444) (not b!71614) (not d!16751) (not b!72607) (not b!71970) (not b!72655) (not b!72673) (not b!72474) (not b!72066) (not b!71896) (not d!16639) (not b!72413) (not d!16749) (not d!16329) (not b!72651) (not bm!6214) (not b!72455) (not b!72031) (not d!16427) (not b!72237) (not d!16785) (not b!72314) (not b!72501) (not b!72084) (not b!72104) (not d!16555) (not bm!6288) (not b!72068) (not d!16385) (not b!71997) (not b!72434) (not d!16485) (not d!16535) (not b!71902) (not b!72696) (not d!16123) (not d!16543) (not b!72565) (not b!72168) (not d!16519) (not d!16077) (not b!71870) (not b!71885) (not d!16199) (not d!16261) (not b!72705) (not bm!6297) (not d!16699) (not d!16537) (not b!72713) (not b!72317) (not bm!6316) (not b!72008) (not b!71598) (not b!72720) (not d!16109) (not b!71734) (not b!72338) (not d!16117) (not b!72087) (not d!16139) (not b!72259) (not bm!6206) (not b!72252) (not b!72656) (not b!71855) (not bm!6258) (not b!71609) (not b!72371) (not d!16081) (not b!71951) (not b!72322) (not b!72156) (not b!72081) (not d!16393) (not d!16593) (not b!72457) (not d!16567) (not b!71886) (not d!16455) (not d!16273) (not d!16533) (not bm!6325) (not d!16591) (not b!71669) (not d!16647) (not b!72235) (not b!71735) (not mapNonEmpty!3160) (not mapNonEmpty!3159) (not d!16769) (not d!16837) (not d!16523) (not b!72074) (not b!72315) (not b!71633) (not bm!6264) (not d!16711) (not b!72232) (not d!16259) (not d!16557) (not b!71802) (not b!71953) (not b!72665) (not b!72272) (not b!71634) (not b!71766) (not d!16185) (not b!72186) (not d!16281) (not d!16137) (not d!16321) (not b!72577) (not b!71976) (not bm!6282) (not d!16825) (not b!72280) (not b!72392) (not b!71732) (not b!72504) (not b!72503) (not b!72125) (not d!16505) (not bm!6315) (not b!72240) (not b!72342) (not b!72551) (not b!71736) (not b!72670) (not b!72037) (not b!71823) (not b!72557) (not d!16527) (not b!72150) (not b!71797) (not b!71799) (not d!16765) (not d!16761) (not b!72711) (not b!71604) (not b!71810) (not d!16203) (not d!16405) (not b!72382) (not bm!6247) (not b!72398) (not b!71856) (not b!72647) (not b_lambda!3271) (not b!72521) (not d!16605) (not b!72207) (not b!72731) (not b!72741) (not b!71777) (not b!72555) (not b!72545) (not d!16635) (not b!72602) (not d!16439) (not b!71612) (not d!16211) (not b!72257) (not d!16655) (not d!16569) (not b!72706) (not b!72116) (not b!72050) (not bm!6224) (not b!72684) (not b!72365) (not b!71767) (not d!16163) (not b!72230) (not d!16805) (not b!71700) (not d!16263) (not d!16217) (not d!16425) (not b!72049) (not b!71671) (not d!16119) (not b!72436) (not d!16657) (not b!72453) (not b!72645) (not b!72477) (not d!16285) (not d!16763) (not b!71978) (not b!72702) (not b!72009) (not b!72350) (not b!71707) (not bm!6326) (not b!71839) (not b!72463) (not bm!6219) (not b!72192) (not bm!6309) (not b!72007) (not b!72569) (not d!16433) (not b!72454) (not b!71862) (not b!71615) (not b!72729) (not d!16731) (not b!71729) (not d!16227) (not b!71966) (not d!16613) (not b!72438) (not b!71901) (not b!71788) (not d!16353) (not d!16669) (not d!16659) (not d!16679) (not d!16835) (not b!72648) (not bm!6267) (not d!16341) (not b!71665) (not b!72683) (not b!72069) (not b!72187) (not d!16275) (not d!16781) (not b!72746) (not d!16293) (not b!71817) (not d!16595) (not d!16323) (not b!71899) (not b!71815) (not d!16131) (not bm!6289) (not b!72226) (not b!71640) (not d!16183) (not d!16629) (not d!16363) (not b_lambda!3211) (not d!16695) (not b!72145) (not d!16159) (not b!72311) (not b!72112) (not b!72491) (not bm!6213) (not b!72546) (not b!72349) (not b!72693) (not b!71915) (not b_lambda!3275) (not b!71632) (not d!16215) (not b!72609) (not b!71635) (not b!71963) (not b!71648) (not d!16767) (not d!16541) (not b!72509) (not b!71763) (not b!72406) (not b!72411) (not d!16481) (not d!16821) (not b!71955) (not d!16317) (not b!71776) (not b!72178) (not b!72596) (not b!72615) tp_is_empty!2467 (not d!16787) (not d!16291) (not b!71848) (not b!71600) (not b!72017) (not d!16685) (not b!72516) (not b!72030) (not b!72118) (not b!71949) (not b!72593) (not bm!6324) (not d!16645) (not b!72690) (not b!72421) (not d!16113) (not d!16347) (not d!16373) (not b!72587) (not b!71973) (not b!71979) (not b!72563) (not b_lambda!3217) (not b!72047) (not b!72212) (not d!16643) (not d!16757) (not b!72142) (not d!16127) (not d!16665) (not b!72604) (not b!72360) (not b_lambda!3251) (not b!72305) (not b!71713) (not bm!6299) (not bm!6277))
(check-sat b_and!4465 b_and!4467 (not b_next!2101) (not b_next!2103))
