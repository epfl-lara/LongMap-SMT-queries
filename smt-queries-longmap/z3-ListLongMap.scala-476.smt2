; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9592 () Bool)

(assert start!9592)

(declare-fun b!70773 () Bool)

(declare-fun b_free!2105 () Bool)

(declare-fun b_next!2105 () Bool)

(assert (=> b!70773 (= b_free!2105 (not b_next!2105))))

(declare-fun tp!8483 () Bool)

(declare-fun b_and!4359 () Bool)

(assert (=> b!70773 (= tp!8483 b_and!4359)))

(declare-fun b!70762 () Bool)

(declare-fun b_free!2107 () Bool)

(declare-fun b_next!2107 () Bool)

(assert (=> b!70762 (= b_free!2107 (not b_next!2107))))

(declare-fun tp!8485 () Bool)

(declare-fun b_and!4361 () Bool)

(assert (=> b!70762 (= tp!8485 b_and!4361)))

(declare-fun b!70758 () Bool)

(declare-datatypes ((Unit!2002 0))(
  ( (Unit!2003) )
))
(declare-fun e!46360 () Unit!2002)

(declare-fun Unit!2004 () Unit!2002)

(assert (=> b!70758 (= e!46360 Unit!2004)))

(declare-fun b!70759 () Bool)

(declare-fun e!46357 () Bool)

(declare-fun tp_is_empty!2469 () Bool)

(assert (=> b!70759 (= e!46357 tp_is_empty!2469)))

(declare-fun b!70760 () Bool)

(declare-fun e!46355 () Bool)

(declare-fun e!46354 () Bool)

(assert (=> b!70760 (= e!46355 e!46354)))

(declare-fun b!70761 () Bool)

(declare-fun e!46361 () Bool)

(declare-fun mapRes!3146 () Bool)

(assert (=> b!70761 (= e!46361 (and e!46357 mapRes!3146))))

(declare-fun condMapEmpty!3146 () Bool)

(declare-datatypes ((V!2939 0))(
  ( (V!2940 (val!1279 Int)) )
))
(declare-datatypes ((array!3881 0))(
  ( (array!3882 (arr!1853 (Array (_ BitVec 32) (_ BitVec 64))) (size!2090 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!891 0))(
  ( (ValueCellFull!891 (v!2513 V!2939)) (EmptyCell!891) )
))
(declare-datatypes ((array!3883 0))(
  ( (array!3884 (arr!1854 (Array (_ BitVec 32) ValueCell!891)) (size!2091 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!690 0))(
  ( (LongMapFixedSize!691 (defaultEntry!2192 Int) (mask!6149 (_ BitVec 32)) (extraKeys!2055 (_ BitVec 32)) (zeroValue!2096 V!2939) (minValue!2096 V!2939) (_size!394 (_ BitVec 32)) (_keys!3840 array!3881) (_values!2175 array!3883) (_vacant!394 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!690)

(declare-fun mapDefault!3145 () ValueCell!891)

(assert (=> b!70761 (= condMapEmpty!3146 (= (arr!1854 (_values!2175 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3145)))))

(declare-fun e!46364 () Bool)

(declare-fun array_inv!1141 (array!3881) Bool)

(declare-fun array_inv!1142 (array!3883) Bool)

(assert (=> b!70762 (= e!46364 (and tp!8485 tp_is_empty!2469 (array_inv!1141 (_keys!3840 newMap!16)) (array_inv!1142 (_values!2175 newMap!16)) e!46361))))

(declare-fun b!70763 () Bool)

(declare-fun Unit!2005 () Unit!2002)

(assert (=> b!70763 (= e!46360 Unit!2005)))

(declare-fun lt!31267 () Unit!2002)

(declare-datatypes ((Cell!492 0))(
  ( (Cell!493 (v!2514 LongMapFixedSize!690)) )
))
(declare-datatypes ((LongMap!492 0))(
  ( (LongMap!493 (underlying!257 Cell!492)) )
))
(declare-fun thiss!992 () LongMap!492)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!48 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) (_ BitVec 32) Int) Unit!2002)

(assert (=> b!70763 (= lt!31267 (lemmaListMapContainsThenArrayContainsFrom!48 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3881 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!70763 (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!31263 () Unit!2002)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3881 (_ BitVec 32) (_ BitVec 32)) Unit!2002)

(assert (=> b!70763 (= lt!31263 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1475 0))(
  ( (Nil!1472) (Cons!1471 (h!2057 (_ BitVec 64)) (t!5011 List!1475)) )
))
(declare-fun arrayNoDuplicates!0 (array!3881 (_ BitVec 32) List!1475) Bool)

(assert (=> b!70763 (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) from!355 Nil!1472)))

(declare-fun lt!31268 () Unit!2002)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3881 (_ BitVec 32) (_ BitVec 64) List!1475) Unit!2002)

(assert (=> b!70763 (= lt!31268 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472)))))

(assert (=> b!70763 false))

(declare-fun mapNonEmpty!3145 () Bool)

(declare-fun tp!8484 () Bool)

(declare-fun e!46366 () Bool)

(assert (=> mapNonEmpty!3145 (= mapRes!3146 (and tp!8484 e!46366))))

(declare-fun mapValue!3146 () ValueCell!891)

(declare-fun mapRest!3145 () (Array (_ BitVec 32) ValueCell!891))

(declare-fun mapKey!3145 () (_ BitVec 32))

(assert (=> mapNonEmpty!3145 (= (arr!1854 (_values!2175 newMap!16)) (store mapRest!3145 mapKey!3145 mapValue!3146))))

(declare-fun b!70764 () Bool)

(assert (=> b!70764 (= e!46366 tp_is_empty!2469)))

(declare-fun res!37806 () Bool)

(declare-fun e!46368 () Bool)

(assert (=> start!9592 (=> (not res!37806) (not e!46368))))

(declare-fun valid!286 (LongMap!492) Bool)

(assert (=> start!9592 (= res!37806 (valid!286 thiss!992))))

(assert (=> start!9592 e!46368))

(assert (=> start!9592 e!46355))

(assert (=> start!9592 true))

(assert (=> start!9592 e!46364))

(declare-fun b!70765 () Bool)

(declare-fun e!46353 () Bool)

(declare-fun e!46363 () Bool)

(declare-fun mapRes!3145 () Bool)

(assert (=> b!70765 (= e!46353 (and e!46363 mapRes!3145))))

(declare-fun condMapEmpty!3145 () Bool)

(declare-fun mapDefault!3146 () ValueCell!891)

(assert (=> b!70765 (= condMapEmpty!3145 (= (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3146)))))

(declare-fun b!70766 () Bool)

(declare-fun res!37809 () Bool)

(assert (=> b!70766 (=> (not res!37809) (not e!46368))))

(declare-fun valid!287 (LongMapFixedSize!690) Bool)

(assert (=> b!70766 (= res!37809 (valid!287 newMap!16))))

(declare-fun mapIsEmpty!3145 () Bool)

(assert (=> mapIsEmpty!3145 mapRes!3146))

(declare-fun b!70767 () Bool)

(declare-fun e!46351 () Bool)

(assert (=> b!70767 (= e!46354 e!46351)))

(declare-fun b!70768 () Bool)

(declare-fun e!46352 () Bool)

(assert (=> b!70768 (= e!46368 e!46352)))

(declare-fun res!37810 () Bool)

(assert (=> b!70768 (=> (not res!37810) (not e!46352))))

(declare-datatypes ((tuple2!2114 0))(
  ( (tuple2!2115 (_1!1068 (_ BitVec 64)) (_2!1068 V!2939)) )
))
(declare-datatypes ((List!1476 0))(
  ( (Nil!1473) (Cons!1472 (h!2058 tuple2!2114) (t!5012 List!1476)) )
))
(declare-datatypes ((ListLongMap!1415 0))(
  ( (ListLongMap!1416 (toList!723 List!1476)) )
))
(declare-fun lt!31272 () ListLongMap!1415)

(declare-fun lt!31273 () ListLongMap!1415)

(assert (=> b!70768 (= res!37810 (= lt!31272 lt!31273))))

(declare-fun map!1148 (LongMapFixedSize!690) ListLongMap!1415)

(assert (=> b!70768 (= lt!31273 (map!1148 newMap!16))))

(declare-fun getCurrentListMap!421 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) Int) ListLongMap!1415)

(assert (=> b!70768 (= lt!31272 (getCurrentListMap!421 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun b!70769 () Bool)

(declare-fun e!46365 () Bool)

(declare-fun e!46362 () Bool)

(assert (=> b!70769 (= e!46365 e!46362)))

(declare-fun res!37808 () Bool)

(assert (=> b!70769 (=> (not res!37808) (not e!46362))))

(declare-datatypes ((tuple2!2116 0))(
  ( (tuple2!2117 (_1!1069 Bool) (_2!1069 LongMapFixedSize!690)) )
))
(declare-fun lt!31271 () tuple2!2116)

(assert (=> b!70769 (= res!37808 (and (_1!1069 lt!31271) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!31266 () Unit!2002)

(assert (=> b!70769 (= lt!31266 e!46360)))

(declare-fun c!10238 () Bool)

(declare-fun contains!719 (ListLongMap!1415 (_ BitVec 64)) Bool)

(assert (=> b!70769 (= c!10238 (contains!719 lt!31273 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun lt!31264 () V!2939)

(declare-fun update!94 (LongMapFixedSize!690 (_ BitVec 64) V!2939) tuple2!2116)

(assert (=> b!70769 (= lt!31271 (update!94 newMap!16 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))

(declare-fun b!70770 () Bool)

(declare-fun e!46359 () Bool)

(assert (=> b!70770 (= e!46359 (or (not (= (size!2091 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6149 (v!2514 (underlying!257 thiss!992)))))) (not (= (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (size!2091 (_values!2175 (v!2514 (underlying!257 thiss!992)))))) (bvslt (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun mapNonEmpty!3146 () Bool)

(declare-fun tp!8486 () Bool)

(declare-fun e!46356 () Bool)

(assert (=> mapNonEmpty!3146 (= mapRes!3145 (and tp!8486 e!46356))))

(declare-fun mapRest!3146 () (Array (_ BitVec 32) ValueCell!891))

(declare-fun mapValue!3145 () ValueCell!891)

(declare-fun mapKey!3146 () (_ BitVec 32))

(assert (=> mapNonEmpty!3146 (= (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (store mapRest!3146 mapKey!3146 mapValue!3145))))

(declare-fun b!70771 () Bool)

(assert (=> b!70771 (= e!46363 tp_is_empty!2469)))

(declare-fun mapIsEmpty!3146 () Bool)

(assert (=> mapIsEmpty!3146 mapRes!3145))

(declare-fun b!70772 () Bool)

(declare-fun res!37812 () Bool)

(assert (=> b!70772 (=> (not res!37812) (not e!46368))))

(assert (=> b!70772 (= res!37812 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> b!70773 (= e!46351 (and tp!8483 tp_is_empty!2469 (array_inv!1141 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (array_inv!1142 (_values!2175 (v!2514 (underlying!257 thiss!992)))) e!46353))))

(declare-fun b!70774 () Bool)

(assert (=> b!70774 (= e!46352 e!46365)))

(declare-fun res!37807 () Bool)

(assert (=> b!70774 (=> (not res!37807) (not e!46365))))

(assert (=> b!70774 (= res!37807 (and (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1133 (ValueCell!891 V!2939) V!2939)

(declare-fun dynLambda!324 (Int (_ BitVec 64)) V!2939)

(assert (=> b!70774 (= lt!31264 (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70775 () Bool)

(declare-fun res!37811 () Bool)

(assert (=> b!70775 (=> (not res!37811) (not e!46368))))

(assert (=> b!70775 (= res!37811 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6149 newMap!16)) (_size!394 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun b!70776 () Bool)

(assert (=> b!70776 (= e!46356 tp_is_empty!2469)))

(declare-fun b!70777 () Bool)

(assert (=> b!70777 (= e!46362 (not e!46359))))

(declare-fun res!37805 () Bool)

(assert (=> b!70777 (=> res!37805 e!46359)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!70777 (= res!37805 (not (validMask!0 (mask!6149 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun lt!31270 () ListLongMap!1415)

(declare-fun lt!31269 () tuple2!2114)

(declare-fun lt!31265 () tuple2!2114)

(declare-fun +!93 (ListLongMap!1415 tuple2!2114) ListLongMap!1415)

(assert (=> b!70777 (= (+!93 (+!93 lt!31270 lt!31269) lt!31265) (+!93 (+!93 lt!31270 lt!31265) lt!31269))))

(assert (=> b!70777 (= lt!31265 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))

(assert (=> b!70777 (= lt!31269 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))

(declare-fun lt!31274 () Unit!2002)

(declare-fun addCommutativeForDiffKeys!12 (ListLongMap!1415 (_ BitVec 64) V!2939 (_ BitVec 64) V!2939) Unit!2002)

(assert (=> b!70777 (= lt!31274 (addCommutativeForDiffKeys!12 lt!31270 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!58 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) Int) ListLongMap!1415)

(assert (=> b!70777 (= lt!31270 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(assert (= (and start!9592 res!37806) b!70772))

(assert (= (and b!70772 res!37812) b!70766))

(assert (= (and b!70766 res!37809) b!70775))

(assert (= (and b!70775 res!37811) b!70768))

(assert (= (and b!70768 res!37810) b!70774))

(assert (= (and b!70774 res!37807) b!70769))

(assert (= (and b!70769 c!10238) b!70763))

(assert (= (and b!70769 (not c!10238)) b!70758))

(assert (= (and b!70769 res!37808) b!70777))

(assert (= (and b!70777 (not res!37805)) b!70770))

(assert (= (and b!70765 condMapEmpty!3145) mapIsEmpty!3146))

(assert (= (and b!70765 (not condMapEmpty!3145)) mapNonEmpty!3146))

(get-info :version)

(assert (= (and mapNonEmpty!3146 ((_ is ValueCellFull!891) mapValue!3145)) b!70776))

(assert (= (and b!70765 ((_ is ValueCellFull!891) mapDefault!3146)) b!70771))

(assert (= b!70773 b!70765))

(assert (= b!70767 b!70773))

(assert (= b!70760 b!70767))

(assert (= start!9592 b!70760))

(assert (= (and b!70761 condMapEmpty!3146) mapIsEmpty!3145))

(assert (= (and b!70761 (not condMapEmpty!3146)) mapNonEmpty!3145))

(assert (= (and mapNonEmpty!3145 ((_ is ValueCellFull!891) mapValue!3146)) b!70764))

(assert (= (and b!70761 ((_ is ValueCellFull!891) mapDefault!3145)) b!70759))

(assert (= b!70762 b!70761))

(assert (= start!9592 b!70762))

(declare-fun b_lambda!3177 () Bool)

(assert (=> (not b_lambda!3177) (not b!70774)))

(declare-fun t!5008 () Bool)

(declare-fun tb!1509 () Bool)

(assert (=> (and b!70773 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))) t!5008) tb!1509))

(declare-fun result!2651 () Bool)

(assert (=> tb!1509 (= result!2651 tp_is_empty!2469)))

(assert (=> b!70774 t!5008))

(declare-fun b_and!4363 () Bool)

(assert (= b_and!4359 (and (=> t!5008 result!2651) b_and!4363)))

(declare-fun t!5010 () Bool)

(declare-fun tb!1511 () Bool)

(assert (=> (and b!70762 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))) t!5010) tb!1511))

(declare-fun result!2655 () Bool)

(assert (= result!2655 result!2651))

(assert (=> b!70774 t!5010))

(declare-fun b_and!4365 () Bool)

(assert (= b_and!4361 (and (=> t!5010 result!2655) b_and!4365)))

(declare-fun m!67891 () Bool)

(assert (=> b!70777 m!67891))

(declare-fun m!67893 () Bool)

(assert (=> b!70777 m!67893))

(declare-fun m!67895 () Bool)

(assert (=> b!70777 m!67895))

(declare-fun m!67897 () Bool)

(assert (=> b!70777 m!67897))

(declare-fun m!67899 () Bool)

(assert (=> b!70777 m!67899))

(declare-fun m!67901 () Bool)

(assert (=> b!70777 m!67901))

(assert (=> b!70777 m!67901))

(declare-fun m!67903 () Bool)

(assert (=> b!70777 m!67903))

(assert (=> b!70777 m!67895))

(assert (=> b!70777 m!67893))

(declare-fun m!67905 () Bool)

(assert (=> b!70777 m!67905))

(declare-fun m!67907 () Bool)

(assert (=> b!70773 m!67907))

(declare-fun m!67909 () Bool)

(assert (=> b!70773 m!67909))

(assert (=> b!70774 m!67893))

(declare-fun m!67911 () Bool)

(assert (=> b!70774 m!67911))

(declare-fun m!67913 () Bool)

(assert (=> b!70774 m!67913))

(assert (=> b!70774 m!67911))

(assert (=> b!70774 m!67913))

(declare-fun m!67915 () Bool)

(assert (=> b!70774 m!67915))

(declare-fun m!67917 () Bool)

(assert (=> mapNonEmpty!3145 m!67917))

(declare-fun m!67919 () Bool)

(assert (=> b!70763 m!67919))

(declare-fun m!67921 () Bool)

(assert (=> b!70763 m!67921))

(assert (=> b!70763 m!67893))

(declare-fun m!67923 () Bool)

(assert (=> b!70763 m!67923))

(assert (=> b!70763 m!67893))

(assert (=> b!70763 m!67893))

(declare-fun m!67925 () Bool)

(assert (=> b!70763 m!67925))

(assert (=> b!70763 m!67893))

(declare-fun m!67927 () Bool)

(assert (=> b!70763 m!67927))

(declare-fun m!67929 () Bool)

(assert (=> b!70766 m!67929))

(declare-fun m!67931 () Bool)

(assert (=> b!70768 m!67931))

(declare-fun m!67933 () Bool)

(assert (=> b!70768 m!67933))

(assert (=> b!70769 m!67893))

(assert (=> b!70769 m!67893))

(declare-fun m!67935 () Bool)

(assert (=> b!70769 m!67935))

(assert (=> b!70769 m!67893))

(declare-fun m!67937 () Bool)

(assert (=> b!70769 m!67937))

(declare-fun m!67939 () Bool)

(assert (=> mapNonEmpty!3146 m!67939))

(declare-fun m!67941 () Bool)

(assert (=> b!70762 m!67941))

(declare-fun m!67943 () Bool)

(assert (=> b!70762 m!67943))

(declare-fun m!67945 () Bool)

(assert (=> start!9592 m!67945))

(check-sat (not b!70762) (not b!70777) (not b_next!2105) tp_is_empty!2469 (not mapNonEmpty!3145) (not b!70763) b_and!4365 (not start!9592) (not b!70768) (not b_next!2107) (not b!70769) (not mapNonEmpty!3146) (not b_lambda!3177) b_and!4363 (not b!70774) (not b!70773) (not b!70766))
(check-sat b_and!4363 b_and!4365 (not b_next!2105) (not b_next!2107))
(get-model)

(declare-fun b_lambda!3181 () Bool)

(assert (= b_lambda!3177 (or (and b!70773 b_free!2105) (and b!70762 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))) b_lambda!3181)))

(check-sat (not mapNonEmpty!3146) (not b!70762) (not b!70777) tp_is_empty!2469 (not mapNonEmpty!3145) (not b!70763) b_and!4365 (not start!9592) (not b!70768) (not b_next!2107) (not b!70769) (not b_lambda!3181) (not b_next!2105) b_and!4363 (not b!70774) (not b!70773) (not b!70766))
(check-sat b_and!4363 b_and!4365 (not b_next!2105) (not b_next!2107))
(get-model)

(declare-fun d!15795 () Bool)

(assert (=> d!15795 (not (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31313 () Unit!2002)

(declare-fun choose!68 (array!3881 (_ BitVec 32) (_ BitVec 64) List!1475) Unit!2002)

(assert (=> d!15795 (= lt!31313 (choose!68 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472)))))

(assert (=> d!15795 (bvslt (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!15795 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472)) lt!31313)))

(declare-fun bs!3049 () Bool)

(assert (= bs!3049 d!15795))

(assert (=> bs!3049 m!67893))

(assert (=> bs!3049 m!67925))

(assert (=> bs!3049 m!67893))

(declare-fun m!68003 () Bool)

(assert (=> bs!3049 m!68003))

(assert (=> b!70763 d!15795))

(declare-fun d!15797 () Bool)

(assert (=> d!15797 (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) from!355 Nil!1472)))

(declare-fun lt!31316 () Unit!2002)

(declare-fun choose!39 (array!3881 (_ BitVec 32) (_ BitVec 32)) Unit!2002)

(assert (=> d!15797 (= lt!31316 (choose!39 (_keys!3840 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!15797 (bvslt (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!15797 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000 from!355) lt!31316)))

(declare-fun bs!3050 () Bool)

(assert (= bs!3050 d!15797))

(assert (=> bs!3050 m!67921))

(declare-fun m!68005 () Bool)

(assert (=> bs!3050 m!68005))

(assert (=> b!70763 d!15797))

(declare-fun d!15799 () Bool)

(declare-fun res!37841 () Bool)

(declare-fun e!46427 () Bool)

(assert (=> d!15799 (=> res!37841 e!46427)))

(assert (=> d!15799 (= res!37841 (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!15799 (= (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!46427)))

(declare-fun b!70846 () Bool)

(declare-fun e!46428 () Bool)

(assert (=> b!70846 (= e!46427 e!46428)))

(declare-fun res!37842 () Bool)

(assert (=> b!70846 (=> (not res!37842) (not e!46428))))

(assert (=> b!70846 (= res!37842 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!70847 () Bool)

(assert (=> b!70847 (= e!46428 (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!15799 (not res!37841)) b!70846))

(assert (= (and b!70846 res!37842) b!70847))

(declare-fun m!68007 () Bool)

(assert (=> d!15799 m!68007))

(assert (=> b!70847 m!67893))

(declare-fun m!68009 () Bool)

(assert (=> b!70847 m!68009))

(assert (=> b!70763 d!15799))

(declare-fun d!15801 () Bool)

(declare-fun e!46431 () Bool)

(assert (=> d!15801 e!46431))

(declare-fun c!10244 () Bool)

(assert (=> d!15801 (= c!10244 (and (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!31319 () Unit!2002)

(declare-fun choose!395 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) (_ BitVec 32) Int) Unit!2002)

(assert (=> d!15801 (= lt!31319 (choose!395 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(assert (=> d!15801 (validMask!0 (mask!6149 (v!2514 (underlying!257 thiss!992))))))

(assert (=> d!15801 (= (lemmaListMapContainsThenArrayContainsFrom!48 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))) lt!31319)))

(declare-fun b!70852 () Bool)

(assert (=> b!70852 (= e!46431 (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!70853 () Bool)

(assert (=> b!70853 (= e!46431 (ite (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!15801 c!10244) b!70852))

(assert (= (and d!15801 (not c!10244)) b!70853))

(assert (=> d!15801 m!67893))

(declare-fun m!68011 () Bool)

(assert (=> d!15801 m!68011))

(assert (=> d!15801 m!67891))

(assert (=> b!70852 m!67893))

(assert (=> b!70852 m!67925))

(assert (=> b!70763 d!15801))

(declare-fun b!70864 () Bool)

(declare-fun e!46443 () Bool)

(declare-fun e!46441 () Bool)

(assert (=> b!70864 (= e!46443 e!46441)))

(declare-fun c!10247 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!70864 (= c!10247 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun d!15803 () Bool)

(declare-fun res!37850 () Bool)

(declare-fun e!46440 () Bool)

(assert (=> d!15803 (=> res!37850 e!46440)))

(assert (=> d!15803 (= res!37850 (bvsge from!355 (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!15803 (= (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) from!355 Nil!1472) e!46440)))

(declare-fun bm!6059 () Bool)

(declare-fun call!6062 () Bool)

(assert (=> bm!6059 (= call!6062 (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)))))

(declare-fun b!70865 () Bool)

(assert (=> b!70865 (= e!46441 call!6062)))

(declare-fun b!70866 () Bool)

(assert (=> b!70866 (= e!46440 e!46443)))

(declare-fun res!37851 () Bool)

(assert (=> b!70866 (=> (not res!37851) (not e!46443))))

(declare-fun e!46442 () Bool)

(assert (=> b!70866 (= res!37851 (not e!46442))))

(declare-fun res!37849 () Bool)

(assert (=> b!70866 (=> (not res!37849) (not e!46442))))

(assert (=> b!70866 (= res!37849 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!70867 () Bool)

(declare-fun contains!721 (List!1475 (_ BitVec 64)) Bool)

(assert (=> b!70867 (= e!46442 (contains!721 Nil!1472 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!70868 () Bool)

(assert (=> b!70868 (= e!46441 call!6062)))

(assert (= (and d!15803 (not res!37850)) b!70866))

(assert (= (and b!70866 res!37849) b!70867))

(assert (= (and b!70866 res!37851) b!70864))

(assert (= (and b!70864 c!10247) b!70868))

(assert (= (and b!70864 (not c!10247)) b!70865))

(assert (= (or b!70868 b!70865) bm!6059))

(assert (=> b!70864 m!67893))

(assert (=> b!70864 m!67893))

(declare-fun m!68013 () Bool)

(assert (=> b!70864 m!68013))

(assert (=> bm!6059 m!67893))

(declare-fun m!68015 () Bool)

(assert (=> bm!6059 m!68015))

(assert (=> b!70866 m!67893))

(assert (=> b!70866 m!67893))

(assert (=> b!70866 m!68013))

(assert (=> b!70867 m!67893))

(assert (=> b!70867 m!67893))

(declare-fun m!68017 () Bool)

(assert (=> b!70867 m!68017))

(assert (=> b!70763 d!15803))

(declare-fun d!15805 () Bool)

(assert (=> d!15805 (= (array_inv!1141 (_keys!3840 newMap!16)) (bvsge (size!2090 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70762 d!15805))

(declare-fun d!15807 () Bool)

(assert (=> d!15807 (= (array_inv!1142 (_values!2175 newMap!16)) (bvsge (size!2091 (_values!2175 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70762 d!15807))

(declare-fun d!15809 () Bool)

(declare-fun c!10250 () Bool)

(assert (=> d!15809 (= c!10250 ((_ is ValueCellFull!891) (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun e!46446 () V!2939)

(assert (=> d!15809 (= (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46446)))

(declare-fun b!70873 () Bool)

(declare-fun get!1134 (ValueCell!891 V!2939) V!2939)

(assert (=> b!70873 (= e!46446 (get!1134 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70874 () Bool)

(declare-fun get!1135 (ValueCell!891 V!2939) V!2939)

(assert (=> b!70874 (= e!46446 (get!1135 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15809 c!10250) b!70873))

(assert (= (and d!15809 (not c!10250)) b!70874))

(assert (=> b!70873 m!67911))

(assert (=> b!70873 m!67913))

(declare-fun m!68019 () Bool)

(assert (=> b!70873 m!68019))

(assert (=> b!70874 m!67911))

(assert (=> b!70874 m!67913))

(declare-fun m!68021 () Bool)

(assert (=> b!70874 m!68021))

(assert (=> b!70774 d!15809))

(declare-fun d!15811 () Bool)

(declare-fun e!46451 () Bool)

(assert (=> d!15811 e!46451))

(declare-fun res!37854 () Bool)

(assert (=> d!15811 (=> res!37854 e!46451)))

(declare-fun lt!31330 () Bool)

(assert (=> d!15811 (= res!37854 (not lt!31330))))

(declare-fun lt!31329 () Bool)

(assert (=> d!15811 (= lt!31330 lt!31329)))

(declare-fun lt!31328 () Unit!2002)

(declare-fun e!46452 () Unit!2002)

(assert (=> d!15811 (= lt!31328 e!46452)))

(declare-fun c!10253 () Bool)

(assert (=> d!15811 (= c!10253 lt!31329)))

(declare-fun containsKey!136 (List!1476 (_ BitVec 64)) Bool)

(assert (=> d!15811 (= lt!31329 (containsKey!136 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!15811 (= (contains!719 lt!31273 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) lt!31330)))

(declare-fun b!70881 () Bool)

(declare-fun lt!31331 () Unit!2002)

(assert (=> b!70881 (= e!46452 lt!31331)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!84 (List!1476 (_ BitVec 64)) Unit!2002)

(assert (=> b!70881 (= lt!31331 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-datatypes ((Option!138 0))(
  ( (Some!137 (v!2518 V!2939)) (None!136) )
))
(declare-fun isDefined!85 (Option!138) Bool)

(declare-fun getValueByKey!132 (List!1476 (_ BitVec 64)) Option!138)

(assert (=> b!70881 (isDefined!85 (getValueByKey!132 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!70882 () Bool)

(declare-fun Unit!2008 () Unit!2002)

(assert (=> b!70882 (= e!46452 Unit!2008)))

(declare-fun b!70883 () Bool)

(assert (=> b!70883 (= e!46451 (isDefined!85 (getValueByKey!132 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (= (and d!15811 c!10253) b!70881))

(assert (= (and d!15811 (not c!10253)) b!70882))

(assert (= (and d!15811 (not res!37854)) b!70883))

(assert (=> d!15811 m!67893))

(declare-fun m!68023 () Bool)

(assert (=> d!15811 m!68023))

(assert (=> b!70881 m!67893))

(declare-fun m!68025 () Bool)

(assert (=> b!70881 m!68025))

(assert (=> b!70881 m!67893))

(declare-fun m!68027 () Bool)

(assert (=> b!70881 m!68027))

(assert (=> b!70881 m!68027))

(declare-fun m!68029 () Bool)

(assert (=> b!70881 m!68029))

(assert (=> b!70883 m!67893))

(assert (=> b!70883 m!68027))

(assert (=> b!70883 m!68027))

(assert (=> b!70883 m!68029))

(assert (=> b!70769 d!15811))

(declare-fun b!70968 () Bool)

(declare-fun e!46515 () Unit!2002)

(declare-fun lt!31405 () Unit!2002)

(assert (=> b!70968 (= e!46515 lt!31405)))

(declare-fun call!6117 () Unit!2002)

(assert (=> b!70968 (= lt!31405 call!6117)))

(declare-datatypes ((SeekEntryResult!235 0))(
  ( (MissingZero!235 (index!3070 (_ BitVec 32))) (Found!235 (index!3071 (_ BitVec 32))) (Intermediate!235 (undefined!1047 Bool) (index!3072 (_ BitVec 32)) (x!11007 (_ BitVec 32))) (Undefined!235) (MissingVacant!235 (index!3073 (_ BitVec 32))) )
))
(declare-fun lt!31403 () SeekEntryResult!235)

(declare-fun call!6119 () SeekEntryResult!235)

(assert (=> b!70968 (= lt!31403 call!6119)))

(declare-fun res!37887 () Bool)

(assert (=> b!70968 (= res!37887 ((_ is Found!235) lt!31403))))

(declare-fun e!46513 () Bool)

(assert (=> b!70968 (=> (not res!37887) (not e!46513))))

(assert (=> b!70968 e!46513))

(declare-fun bm!6108 () Bool)

(declare-fun call!6120 () SeekEntryResult!235)

(declare-fun call!6124 () SeekEntryResult!235)

(assert (=> bm!6108 (= call!6120 call!6124)))

(declare-fun bm!6109 () Bool)

(declare-fun call!6128 () ListLongMap!1415)

(declare-fun call!6111 () ListLongMap!1415)

(assert (=> bm!6109 (= call!6128 call!6111)))

(declare-fun b!70969 () Bool)

(declare-fun lt!31393 () tuple2!2116)

(declare-fun call!6115 () tuple2!2116)

(assert (=> b!70969 (= lt!31393 call!6115)))

(declare-fun e!46500 () tuple2!2116)

(assert (=> b!70969 (= e!46500 (tuple2!2117 (_1!1069 lt!31393) (_2!1069 lt!31393)))))

(declare-fun bm!6110 () Bool)

(declare-fun call!6121 () ListLongMap!1415)

(declare-fun call!6133 () ListLongMap!1415)

(assert (=> bm!6110 (= call!6121 call!6133)))

(declare-fun b!70970 () Bool)

(declare-fun c!10293 () Bool)

(declare-fun lt!31396 () SeekEntryResult!235)

(assert (=> b!70970 (= c!10293 ((_ is MissingVacant!235) lt!31396))))

(declare-fun e!46517 () Bool)

(declare-fun e!46506 () Bool)

(assert (=> b!70970 (= e!46517 e!46506)))

(declare-fun bm!6111 () Bool)

(declare-fun call!6127 () ListLongMap!1415)

(declare-fun lt!31408 () tuple2!2116)

(assert (=> bm!6111 (= call!6127 (map!1148 (_2!1069 lt!31408)))))

(declare-fun call!6113 () Bool)

(declare-fun bm!6112 () Bool)

(assert (=> bm!6112 (= call!6113 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!70971 () Bool)

(declare-fun res!37883 () Bool)

(declare-fun call!6132 () Bool)

(assert (=> b!70971 (= res!37883 call!6132)))

(assert (=> b!70971 (=> (not res!37883) (not e!46513))))

(declare-fun bm!6113 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3881 (_ BitVec 32)) SeekEntryResult!235)

(assert (=> bm!6113 (= call!6124 (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!70972 () Bool)

(declare-fun e!46507 () Bool)

(declare-fun call!6114 () Bool)

(assert (=> b!70972 (= e!46507 (not call!6114))))

(declare-fun e!46512 () Bool)

(declare-fun lt!31400 () SeekEntryResult!235)

(declare-fun b!70973 () Bool)

(assert (=> b!70973 (= e!46512 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31400)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun bm!6114 () Bool)

(declare-fun call!6123 () Bool)

(declare-fun call!6126 () Bool)

(assert (=> bm!6114 (= call!6123 call!6126)))

(declare-fun bm!6115 () Bool)

(declare-fun call!6112 () Bool)

(assert (=> bm!6115 (= call!6112 call!6132)))

(declare-fun b!70974 () Bool)

(declare-fun e!46503 () Bool)

(declare-fun call!6116 () Bool)

(assert (=> b!70974 (= e!46503 (not call!6116))))

(declare-fun bm!6116 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) Int) Unit!2002)

(assert (=> bm!6116 (= call!6117 (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(declare-fun b!70975 () Bool)

(declare-fun lt!31388 () Unit!2002)

(declare-fun lt!31401 () Unit!2002)

(assert (=> b!70975 (= lt!31388 lt!31401)))

(declare-fun call!6129 () Bool)

(assert (=> b!70975 call!6129))

(declare-fun lt!31406 () SeekEntryResult!235)

(declare-fun lt!31387 () array!3883)

(declare-fun lemmaValidKeyInArrayIsInListMap!84 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) Int) Unit!2002)

(assert (=> b!70975 (= lt!31401 (lemmaValidKeyInArrayIsInListMap!84 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3071 lt!31406) (defaultEntry!2192 newMap!16)))))

(assert (=> b!70975 (= lt!31387 (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))))

(declare-fun lt!31399 () Unit!2002)

(declare-fun lt!31392 () Unit!2002)

(assert (=> b!70975 (= lt!31399 lt!31392)))

(declare-fun call!6131 () ListLongMap!1415)

(assert (=> b!70975 (= call!6131 call!6128)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) (_ BitVec 64) V!2939 Int) Unit!2002)

(assert (=> b!70975 (= lt!31392 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3071 lt!31406) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31410 () Unit!2002)

(assert (=> b!70975 (= lt!31410 e!46515)))

(declare-fun c!10283 () Bool)

(assert (=> b!70975 (= c!10283 (contains!719 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> b!70975 (= e!46500 (tuple2!2117 true (LongMapFixedSize!691 (defaultEntry!2192 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (_size!394 newMap!16) (_keys!3840 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (_vacant!394 newMap!16))))))

(declare-fun bm!6117 () Bool)

(declare-fun call!6118 () Bool)

(assert (=> bm!6117 (= call!6118 call!6123)))

(declare-fun bm!6118 () Bool)

(assert (=> bm!6118 (= call!6132 call!6126)))

(declare-fun b!70976 () Bool)

(declare-fun e!46505 () tuple2!2116)

(assert (=> b!70976 (= e!46505 e!46500)))

(declare-fun c!10291 () Bool)

(assert (=> b!70976 (= c!10291 ((_ is MissingZero!235) lt!31406))))

(declare-fun bm!6119 () Bool)

(declare-fun call!6125 () ListLongMap!1415)

(assert (=> bm!6119 (= call!6125 call!6111)))

(declare-fun c!10286 () Bool)

(declare-fun c!10284 () Bool)

(declare-fun bm!6120 () Bool)

(declare-fun lt!31395 () (_ BitVec 32))

(declare-fun c!10290 () Bool)

(assert (=> bm!6120 (= call!6111 (getCurrentListMap!421 (_keys!3840 newMap!16) (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) (zeroValue!2096 newMap!16) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!70977 () Bool)

(declare-fun res!37884 () Bool)

(declare-fun e!46502 () Bool)

(assert (=> b!70977 (=> (not res!37884) (not e!46502))))

(declare-fun lt!31407 () SeekEntryResult!235)

(assert (=> b!70977 (= res!37884 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3070 lt!31407)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!6130 () Unit!2002)

(declare-fun bm!6121 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) Int) Unit!2002)

(assert (=> bm!6121 (= call!6130 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(declare-fun b!70978 () Bool)

(declare-fun res!37890 () Bool)

(assert (=> b!70978 (= res!37890 call!6123)))

(assert (=> b!70978 (=> (not res!37890) (not e!46512))))

(declare-fun b!70979 () Bool)

(assert (=> b!70979 (= e!46513 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31403)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!70980 () Bool)

(declare-fun e!46518 () Unit!2002)

(declare-fun Unit!2009 () Unit!2002)

(assert (=> b!70980 (= e!46518 Unit!2009)))

(declare-fun lt!31391 () Unit!2002)

(assert (=> b!70980 (= lt!31391 call!6117)))

(assert (=> b!70980 (= lt!31400 call!6120)))

(declare-fun res!37894 () Bool)

(assert (=> b!70980 (= res!37894 ((_ is Found!235) lt!31400))))

(assert (=> b!70980 (=> (not res!37894) (not e!46512))))

(assert (=> b!70980 e!46512))

(declare-fun lt!31411 () Unit!2002)

(assert (=> b!70980 (= lt!31411 lt!31391)))

(assert (=> b!70980 false))

(declare-fun bm!6122 () Bool)

(declare-fun c!10292 () Bool)

(declare-fun updateHelperNewKey!23 (LongMapFixedSize!690 (_ BitVec 64) V!2939 (_ BitVec 32)) tuple2!2116)

(assert (=> bm!6122 (= call!6115 (updateHelperNewKey!23 newMap!16 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))))))

(declare-fun d!15813 () Bool)

(declare-fun e!46509 () Bool)

(assert (=> d!15813 e!46509))

(declare-fun res!37892 () Bool)

(assert (=> d!15813 (=> (not res!37892) (not e!46509))))

(assert (=> d!15813 (= res!37892 (valid!287 (_2!1069 lt!31408)))))

(declare-fun e!46510 () tuple2!2116)

(assert (=> d!15813 (= lt!31408 e!46510)))

(assert (=> d!15813 (= c!10286 (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvneg (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (=> d!15813 (valid!287 newMap!16)))

(assert (=> d!15813 (= (update!94 newMap!16 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264) lt!31408)))

(declare-fun b!70981 () Bool)

(declare-fun lt!31412 () Unit!2002)

(assert (=> b!70981 (= e!46518 lt!31412)))

(assert (=> b!70981 (= lt!31412 call!6130)))

(assert (=> b!70981 (= lt!31396 call!6120)))

(declare-fun c!10285 () Bool)

(assert (=> b!70981 (= c!10285 ((_ is MissingZero!235) lt!31396))))

(assert (=> b!70981 e!46517))

(declare-fun b!70982 () Bool)

(declare-fun e!46501 () Bool)

(declare-fun call!6122 () ListLongMap!1415)

(assert (=> b!70982 (= e!46501 (= call!6127 call!6122))))

(declare-fun b!70983 () Bool)

(assert (=> b!70983 (= e!46509 e!46501)))

(declare-fun c!10294 () Bool)

(assert (=> b!70983 (= c!10294 (_1!1069 lt!31408))))

(declare-fun bm!6123 () Bool)

(declare-fun call!6134 () ListLongMap!1415)

(assert (=> bm!6123 (= call!6134 call!6131)))

(declare-fun b!70984 () Bool)

(declare-fun e!46499 () ListLongMap!1415)

(assert (=> b!70984 (= e!46499 call!6133)))

(declare-fun b!70985 () Bool)

(declare-fun Unit!2010 () Unit!2002)

(assert (=> b!70985 (= e!46515 Unit!2010)))

(declare-fun lt!31398 () Unit!2002)

(assert (=> b!70985 (= lt!31398 call!6130)))

(assert (=> b!70985 (= lt!31407 call!6119)))

(declare-fun c!10282 () Bool)

(assert (=> b!70985 (= c!10282 ((_ is MissingZero!235) lt!31407))))

(declare-fun e!46498 () Bool)

(assert (=> b!70985 e!46498))

(declare-fun lt!31394 () Unit!2002)

(assert (=> b!70985 (= lt!31394 lt!31398)))

(assert (=> b!70985 false))

(declare-fun b!70986 () Bool)

(declare-fun res!37896 () Bool)

(assert (=> b!70986 (=> (not res!37896) (not e!46507))))

(assert (=> b!70986 (= res!37896 call!6118)))

(assert (=> b!70986 (= e!46517 e!46507)))

(declare-fun c!10295 () Bool)

(declare-fun bm!6124 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!6124 (= call!6126 (inRange!0 (ite c!10290 (ite c!10295 (index!3071 lt!31400) (ite c!10285 (index!3070 lt!31396) (index!3073 lt!31396))) (ite c!10283 (index!3071 lt!31403) (ite c!10282 (index!3070 lt!31407) (index!3073 lt!31407)))) (mask!6149 newMap!16)))))

(declare-fun b!70987 () Bool)

(declare-fun c!10289 () Bool)

(assert (=> b!70987 (= c!10289 ((_ is MissingVacant!235) lt!31407))))

(declare-fun e!46497 () Bool)

(assert (=> b!70987 (= e!46498 e!46497)))

(declare-fun b!70988 () Bool)

(assert (=> b!70988 (= e!46506 ((_ is Undefined!235) lt!31396))))

(declare-fun b!70989 () Bool)

(declare-fun e!46514 () ListLongMap!1415)

(assert (=> b!70989 (= e!46514 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun bm!6125 () Bool)

(assert (=> bm!6125 (= call!6116 call!6113)))

(declare-fun b!70990 () Bool)

(declare-fun res!37886 () Bool)

(assert (=> b!70990 (= res!37886 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3073 lt!31396)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46516 () Bool)

(assert (=> b!70990 (=> (not res!37886) (not e!46516))))

(declare-fun b!70991 () Bool)

(assert (=> b!70991 (= e!46497 ((_ is Undefined!235) lt!31407))))

(declare-fun b!70992 () Bool)

(assert (=> b!70992 (= e!46516 (not call!6114))))

(declare-fun b!70993 () Bool)

(assert (=> b!70993 (= e!46502 (not call!6116))))

(declare-fun bm!6126 () Bool)

(assert (=> bm!6126 (= call!6131 (+!93 e!46514 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun c!10287 () Bool)

(assert (=> bm!6126 (= c!10287 c!10286)))

(declare-fun b!70994 () Bool)

(assert (=> b!70994 (= c!10292 ((_ is MissingVacant!235) lt!31406))))

(declare-fun e!46508 () tuple2!2116)

(assert (=> b!70994 (= e!46508 e!46505)))

(declare-fun bm!6127 () Bool)

(declare-fun lt!31389 () (_ BitVec 32))

(assert (=> bm!6127 (= call!6133 (getCurrentListMap!421 (_keys!3840 newMap!16) (ite c!10286 (_values!2175 newMap!16) lt!31387) (mask!6149 newMap!16) (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!70995 () Bool)

(assert (=> b!70995 (= e!46499 call!6128)))

(declare-fun bm!6128 () Bool)

(assert (=> bm!6128 (= call!6114 call!6113)))

(declare-fun b!70996 () Bool)

(declare-fun lt!31404 () tuple2!2116)

(assert (=> b!70996 (= e!46505 (tuple2!2117 (_1!1069 lt!31404) (_2!1069 lt!31404)))))

(assert (=> b!70996 (= lt!31404 call!6115)))

(declare-fun b!70997 () Bool)

(declare-fun e!46504 () tuple2!2116)

(assert (=> b!70997 (= e!46510 e!46504)))

(assert (=> b!70997 (= c!10284 (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70998 () Bool)

(declare-fun res!37893 () Bool)

(assert (=> b!70998 (=> (not res!37893) (not e!46502))))

(assert (=> b!70998 (= res!37893 call!6112)))

(assert (=> b!70998 (= e!46498 e!46502)))

(declare-fun b!70999 () Bool)

(declare-fun lt!31386 () Unit!2002)

(assert (=> b!70999 (= lt!31386 e!46518)))

(assert (=> b!70999 (= c!10295 call!6129)))

(assert (=> b!70999 (= e!46508 (tuple2!2117 false newMap!16))))

(declare-fun bm!6129 () Bool)

(assert (=> bm!6129 (= call!6119 call!6124)))

(declare-fun b!71000 () Bool)

(declare-fun lt!31402 () Unit!2002)

(declare-fun lt!31390 () Unit!2002)

(assert (=> b!71000 (= lt!31402 lt!31390)))

(assert (=> b!71000 (= call!6134 call!6125)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 V!2939 Int) Unit!2002)

(assert (=> b!71000 (= lt!31390 (lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31395 (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) lt!31264 (defaultEntry!2192 newMap!16)))))

(assert (=> b!71000 (= lt!31395 (bvor (extraKeys!2055 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!71000 (= e!46504 (tuple2!2117 true (LongMapFixedSize!691 (defaultEntry!2192 newMap!16) (mask!6149 newMap!16) (bvor (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) (zeroValue!2096 newMap!16) lt!31264 (_size!394 newMap!16) (_keys!3840 newMap!16) (_values!2175 newMap!16) (_vacant!394 newMap!16))))))

(declare-fun b!71001 () Bool)

(declare-fun e!46511 () Bool)

(assert (=> b!71001 (= e!46511 (= call!6127 (+!93 call!6122 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!71002 () Bool)

(declare-fun res!37885 () Bool)

(assert (=> b!71002 (=> (not res!37885) (not e!46507))))

(assert (=> b!71002 (= res!37885 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3070 lt!31396)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71003 () Bool)

(declare-fun lt!31397 () Unit!2002)

(declare-fun lt!31409 () Unit!2002)

(assert (=> b!71003 (= lt!31397 lt!31409)))

(assert (=> b!71003 (= call!6134 call!6121)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!23 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 V!2939 Int) Unit!2002)

(assert (=> b!71003 (= lt!31409 (lemmaChangeZeroKeyThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31389 (zeroValue!2096 newMap!16) lt!31264 (minValue!2096 newMap!16) (defaultEntry!2192 newMap!16)))))

(assert (=> b!71003 (= lt!31389 (bvor (extraKeys!2055 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!71003 (= e!46504 (tuple2!2117 true (LongMapFixedSize!691 (defaultEntry!2192 newMap!16) (mask!6149 newMap!16) (bvor (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) lt!31264 (minValue!2096 newMap!16) (_size!394 newMap!16) (_keys!3840 newMap!16) (_values!2175 newMap!16) (_vacant!394 newMap!16))))))

(declare-fun bm!6130 () Bool)

(assert (=> bm!6130 (= call!6122 (map!1148 newMap!16))))

(declare-fun b!71004 () Bool)

(assert (=> b!71004 (= e!46514 (ite c!10284 call!6125 call!6121))))

(declare-fun b!71005 () Bool)

(assert (=> b!71005 (= e!46497 e!46503)))

(declare-fun res!37888 () Bool)

(assert (=> b!71005 (= res!37888 call!6112)))

(assert (=> b!71005 (=> (not res!37888) (not e!46503))))

(declare-fun b!71006 () Bool)

(assert (=> b!71006 (= e!46506 e!46516)))

(declare-fun res!37891 () Bool)

(assert (=> b!71006 (= res!37891 call!6118)))

(assert (=> b!71006 (=> (not res!37891) (not e!46516))))

(declare-fun b!71007 () Bool)

(declare-fun res!37889 () Bool)

(assert (=> b!71007 (= res!37889 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3073 lt!31407)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71007 (=> (not res!37889) (not e!46503))))

(declare-fun bm!6131 () Bool)

(declare-fun c!10288 () Bool)

(assert (=> bm!6131 (= c!10288 c!10290)))

(assert (=> bm!6131 (= call!6129 (contains!719 e!46499 (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))

(declare-fun b!71008 () Bool)

(assert (=> b!71008 (= e!46501 e!46511)))

(declare-fun res!37895 () Bool)

(assert (=> b!71008 (= res!37895 (contains!719 call!6127 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> b!71008 (=> (not res!37895) (not e!46511))))

(declare-fun b!71009 () Bool)

(assert (=> b!71009 (= e!46510 e!46508)))

(assert (=> b!71009 (= lt!31406 (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(assert (=> b!71009 (= c!10290 ((_ is Undefined!235) lt!31406))))

(assert (= (and d!15813 c!10286) b!70997))

(assert (= (and d!15813 (not c!10286)) b!71009))

(assert (= (and b!70997 c!10284) b!71003))

(assert (= (and b!70997 (not c!10284)) b!71000))

(assert (= (or b!71003 b!71000) bm!6110))

(assert (= (or b!71003 b!71000) bm!6119))

(assert (= (or b!71003 b!71000) bm!6123))

(assert (= (and b!71009 c!10290) b!70999))

(assert (= (and b!71009 (not c!10290)) b!70994))

(assert (= (and b!70999 c!10295) b!70980))

(assert (= (and b!70999 (not c!10295)) b!70981))

(assert (= (and b!70980 res!37894) b!70978))

(assert (= (and b!70978 res!37890) b!70973))

(assert (= (and b!70981 c!10285) b!70986))

(assert (= (and b!70981 (not c!10285)) b!70970))

(assert (= (and b!70986 res!37896) b!71002))

(assert (= (and b!71002 res!37885) b!70972))

(assert (= (and b!70970 c!10293) b!71006))

(assert (= (and b!70970 (not c!10293)) b!70988))

(assert (= (and b!71006 res!37891) b!70990))

(assert (= (and b!70990 res!37886) b!70992))

(assert (= (or b!70986 b!71006) bm!6117))

(assert (= (or b!70972 b!70992) bm!6128))

(assert (= (or b!70978 bm!6117) bm!6114))

(assert (= (or b!70980 b!70981) bm!6108))

(assert (= (and b!70994 c!10292) b!70996))

(assert (= (and b!70994 (not c!10292)) b!70976))

(assert (= (and b!70976 c!10291) b!70969))

(assert (= (and b!70976 (not c!10291)) b!70975))

(assert (= (and b!70975 c!10283) b!70968))

(assert (= (and b!70975 (not c!10283)) b!70985))

(assert (= (and b!70968 res!37887) b!70971))

(assert (= (and b!70971 res!37883) b!70979))

(assert (= (and b!70985 c!10282) b!70998))

(assert (= (and b!70985 (not c!10282)) b!70987))

(assert (= (and b!70998 res!37893) b!70977))

(assert (= (and b!70977 res!37884) b!70993))

(assert (= (and b!70987 c!10289) b!71005))

(assert (= (and b!70987 (not c!10289)) b!70991))

(assert (= (and b!71005 res!37888) b!71007))

(assert (= (and b!71007 res!37889) b!70974))

(assert (= (or b!70998 b!71005) bm!6115))

(assert (= (or b!70993 b!70974) bm!6125))

(assert (= (or b!70971 bm!6115) bm!6118))

(assert (= (or b!70968 b!70985) bm!6129))

(assert (= (or b!70996 b!70969) bm!6122))

(assert (= (or bm!6108 bm!6129) bm!6113))

(assert (= (or b!70999 b!70975) bm!6109))

(assert (= (or bm!6114 bm!6118) bm!6124))

(assert (= (or b!70981 b!70985) bm!6121))

(assert (= (or b!70980 b!70968) bm!6116))

(assert (= (or bm!6128 bm!6125) bm!6112))

(assert (= (or b!70999 b!70975) bm!6131))

(assert (= (and bm!6131 c!10288) b!70995))

(assert (= (and bm!6131 (not c!10288)) b!70984))

(assert (= (or bm!6119 bm!6109) bm!6120))

(assert (= (or bm!6110 b!70984) bm!6127))

(assert (= (or bm!6123 b!70975) bm!6126))

(assert (= (and bm!6126 c!10287) b!71004))

(assert (= (and bm!6126 (not c!10287)) b!70989))

(assert (= (and d!15813 res!37892) b!70983))

(assert (= (and b!70983 c!10294) b!71008))

(assert (= (and b!70983 (not c!10294)) b!70982))

(assert (= (and b!71008 res!37895) b!71001))

(assert (= (or b!71008 b!71001 b!70982) bm!6111))

(assert (= (or b!71001 b!70982) bm!6130))

(assert (=> bm!6112 m!67893))

(declare-fun m!68031 () Bool)

(assert (=> bm!6112 m!68031))

(declare-fun m!68033 () Bool)

(assert (=> b!70990 m!68033))

(declare-fun m!68035 () Bool)

(assert (=> b!70973 m!68035))

(declare-fun m!68037 () Bool)

(assert (=> b!71001 m!68037))

(declare-fun m!68039 () Bool)

(assert (=> bm!6120 m!68039))

(declare-fun m!68041 () Bool)

(assert (=> bm!6120 m!68041))

(declare-fun m!68043 () Bool)

(assert (=> bm!6131 m!68043))

(declare-fun m!68045 () Bool)

(assert (=> bm!6131 m!68045))

(declare-fun m!68047 () Bool)

(assert (=> b!71000 m!68047))

(declare-fun m!68049 () Bool)

(assert (=> b!70975 m!68049))

(declare-fun m!68051 () Bool)

(assert (=> b!70975 m!68051))

(assert (=> b!70975 m!67893))

(declare-fun m!68053 () Bool)

(assert (=> b!70975 m!68053))

(assert (=> b!70975 m!68051))

(assert (=> b!70975 m!67893))

(declare-fun m!68055 () Bool)

(assert (=> b!70975 m!68055))

(assert (=> b!70975 m!68039))

(assert (=> bm!6122 m!67893))

(declare-fun m!68057 () Bool)

(assert (=> bm!6122 m!68057))

(declare-fun m!68059 () Bool)

(assert (=> bm!6111 m!68059))

(declare-fun m!68061 () Bool)

(assert (=> bm!6124 m!68061))

(assert (=> b!70989 m!68051))

(declare-fun m!68063 () Bool)

(assert (=> bm!6127 m!68063))

(assert (=> bm!6113 m!67893))

(declare-fun m!68065 () Bool)

(assert (=> bm!6113 m!68065))

(assert (=> bm!6130 m!67931))

(declare-fun m!68067 () Bool)

(assert (=> b!71002 m!68067))

(assert (=> b!71009 m!67893))

(assert (=> b!71009 m!68065))

(assert (=> bm!6116 m!67893))

(declare-fun m!68069 () Bool)

(assert (=> bm!6116 m!68069))

(declare-fun m!68071 () Bool)

(assert (=> bm!6126 m!68071))

(assert (=> bm!6121 m!67893))

(declare-fun m!68073 () Bool)

(assert (=> bm!6121 m!68073))

(declare-fun m!68075 () Bool)

(assert (=> b!71003 m!68075))

(declare-fun m!68077 () Bool)

(assert (=> b!70977 m!68077))

(declare-fun m!68079 () Bool)

(assert (=> d!15813 m!68079))

(assert (=> d!15813 m!67929))

(assert (=> b!71008 m!67893))

(declare-fun m!68081 () Bool)

(assert (=> b!71008 m!68081))

(declare-fun m!68083 () Bool)

(assert (=> b!70979 m!68083))

(declare-fun m!68085 () Bool)

(assert (=> b!71007 m!68085))

(assert (=> b!70769 d!15813))

(declare-fun d!15815 () Bool)

(declare-fun e!46521 () Bool)

(assert (=> d!15815 e!46521))

(declare-fun res!37901 () Bool)

(assert (=> d!15815 (=> (not res!37901) (not e!46521))))

(declare-fun lt!31423 () ListLongMap!1415)

(assert (=> d!15815 (= res!37901 (contains!719 lt!31423 (_1!1068 lt!31269)))))

(declare-fun lt!31424 () List!1476)

(assert (=> d!15815 (= lt!31423 (ListLongMap!1416 lt!31424))))

(declare-fun lt!31422 () Unit!2002)

(declare-fun lt!31421 () Unit!2002)

(assert (=> d!15815 (= lt!31422 lt!31421)))

(assert (=> d!15815 (= (getValueByKey!132 lt!31424 (_1!1068 lt!31269)) (Some!137 (_2!1068 lt!31269)))))

(declare-fun lemmaContainsTupThenGetReturnValue!49 (List!1476 (_ BitVec 64) V!2939) Unit!2002)

(assert (=> d!15815 (= lt!31421 (lemmaContainsTupThenGetReturnValue!49 lt!31424 (_1!1068 lt!31269) (_2!1068 lt!31269)))))

(declare-fun insertStrictlySorted!52 (List!1476 (_ BitVec 64) V!2939) List!1476)

(assert (=> d!15815 (= lt!31424 (insertStrictlySorted!52 (toList!723 (+!93 lt!31270 lt!31265)) (_1!1068 lt!31269) (_2!1068 lt!31269)))))

(assert (=> d!15815 (= (+!93 (+!93 lt!31270 lt!31265) lt!31269) lt!31423)))

(declare-fun b!71014 () Bool)

(declare-fun res!37902 () Bool)

(assert (=> b!71014 (=> (not res!37902) (not e!46521))))

(assert (=> b!71014 (= res!37902 (= (getValueByKey!132 (toList!723 lt!31423) (_1!1068 lt!31269)) (Some!137 (_2!1068 lt!31269))))))

(declare-fun b!71015 () Bool)

(declare-fun contains!722 (List!1476 tuple2!2114) Bool)

(assert (=> b!71015 (= e!46521 (contains!722 (toList!723 lt!31423) lt!31269))))

(assert (= (and d!15815 res!37901) b!71014))

(assert (= (and b!71014 res!37902) b!71015))

(declare-fun m!68087 () Bool)

(assert (=> d!15815 m!68087))

(declare-fun m!68089 () Bool)

(assert (=> d!15815 m!68089))

(declare-fun m!68091 () Bool)

(assert (=> d!15815 m!68091))

(declare-fun m!68093 () Bool)

(assert (=> d!15815 m!68093))

(declare-fun m!68095 () Bool)

(assert (=> b!71014 m!68095))

(declare-fun m!68097 () Bool)

(assert (=> b!71015 m!68097))

(assert (=> b!70777 d!15815))

(declare-fun b!71040 () Bool)

(declare-fun e!46540 () ListLongMap!1415)

(assert (=> b!71040 (= e!46540 (ListLongMap!1416 Nil!1473))))

(declare-fun d!15817 () Bool)

(declare-fun e!46539 () Bool)

(assert (=> d!15817 e!46539))

(declare-fun res!37913 () Bool)

(assert (=> d!15817 (=> (not res!37913) (not e!46539))))

(declare-fun lt!31444 () ListLongMap!1415)

(assert (=> d!15817 (= res!37913 (not (contains!719 lt!31444 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15817 (= lt!31444 e!46540)))

(declare-fun c!10307 () Bool)

(assert (=> d!15817 (= c!10307 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!15817 (validMask!0 (mask!6149 (v!2514 (underlying!257 thiss!992))))))

(assert (=> d!15817 (= (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))) lt!31444)))

(declare-fun bm!6134 () Bool)

(declare-fun call!6137 () ListLongMap!1415)

(assert (=> bm!6134 (= call!6137 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun b!71041 () Bool)

(declare-fun e!46538 () Bool)

(declare-fun e!46541 () Bool)

(assert (=> b!71041 (= e!46538 e!46541)))

(assert (=> b!71041 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun res!37914 () Bool)

(assert (=> b!71041 (= res!37914 (contains!719 lt!31444 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71041 (=> (not res!37914) (not e!46541))))

(declare-fun b!71042 () Bool)

(declare-fun e!46536 () Bool)

(declare-fun isEmpty!313 (ListLongMap!1415) Bool)

(assert (=> b!71042 (= e!46536 (isEmpty!313 lt!31444))))

(declare-fun b!71043 () Bool)

(assert (=> b!71043 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> b!71043 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2091 (_values!2175 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun apply!74 (ListLongMap!1415 (_ BitVec 64)) V!2939)

(assert (=> b!71043 (= e!46541 (= (apply!74 lt!31444 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71044 () Bool)

(declare-fun res!37911 () Bool)

(assert (=> b!71044 (=> (not res!37911) (not e!46539))))

(assert (=> b!71044 (= res!37911 (not (contains!719 lt!31444 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71045 () Bool)

(declare-fun e!46537 () ListLongMap!1415)

(assert (=> b!71045 (= e!46540 e!46537)))

(declare-fun c!10306 () Bool)

(assert (=> b!71045 (= c!10306 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71046 () Bool)

(assert (=> b!71046 (= e!46536 (= lt!31444 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71047 () Bool)

(declare-fun lt!31445 () Unit!2002)

(declare-fun lt!31441 () Unit!2002)

(assert (=> b!71047 (= lt!31445 lt!31441)))

(declare-fun lt!31442 () V!2939)

(declare-fun lt!31443 () (_ BitVec 64))

(declare-fun lt!31440 () (_ BitVec 64))

(declare-fun lt!31439 () ListLongMap!1415)

(assert (=> b!71047 (not (contains!719 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)) lt!31443))))

(declare-fun addStillNotContains!23 (ListLongMap!1415 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2002)

(assert (=> b!71047 (= lt!31441 (addStillNotContains!23 lt!31439 lt!31440 lt!31442 lt!31443))))

(assert (=> b!71047 (= lt!31443 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71047 (= lt!31442 (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71047 (= lt!31440 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!71047 (= lt!31439 call!6137)))

(assert (=> b!71047 (= e!46537 (+!93 call!6137 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71048 () Bool)

(assert (=> b!71048 (= e!46539 e!46538)))

(declare-fun c!10304 () Bool)

(declare-fun e!46542 () Bool)

(assert (=> b!71048 (= c!10304 e!46542)))

(declare-fun res!37912 () Bool)

(assert (=> b!71048 (=> (not res!37912) (not e!46542))))

(assert (=> b!71048 (= res!37912 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71049 () Bool)

(assert (=> b!71049 (= e!46542 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71049 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!71050 () Bool)

(assert (=> b!71050 (= e!46538 e!46536)))

(declare-fun c!10305 () Bool)

(assert (=> b!71050 (= c!10305 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71051 () Bool)

(assert (=> b!71051 (= e!46537 call!6137)))

(assert (= (and d!15817 c!10307) b!71040))

(assert (= (and d!15817 (not c!10307)) b!71045))

(assert (= (and b!71045 c!10306) b!71047))

(assert (= (and b!71045 (not c!10306)) b!71051))

(assert (= (or b!71047 b!71051) bm!6134))

(assert (= (and d!15817 res!37913) b!71044))

(assert (= (and b!71044 res!37911) b!71048))

(assert (= (and b!71048 res!37912) b!71049))

(assert (= (and b!71048 c!10304) b!71041))

(assert (= (and b!71048 (not c!10304)) b!71050))

(assert (= (and b!71041 res!37914) b!71043))

(assert (= (and b!71050 c!10305) b!71046))

(assert (= (and b!71050 (not c!10305)) b!71042))

(declare-fun b_lambda!3183 () Bool)

(assert (=> (not b_lambda!3183) (not b!71043)))

(assert (=> b!71043 t!5008))

(declare-fun b_and!4375 () Bool)

(assert (= b_and!4363 (and (=> t!5008 result!2651) b_and!4375)))

(assert (=> b!71043 t!5010))

(declare-fun b_and!4377 () Bool)

(assert (= b_and!4365 (and (=> t!5010 result!2655) b_and!4377)))

(declare-fun b_lambda!3185 () Bool)

(assert (=> (not b_lambda!3185) (not b!71047)))

(assert (=> b!71047 t!5008))

(declare-fun b_and!4379 () Bool)

(assert (= b_and!4375 (and (=> t!5008 result!2651) b_and!4379)))

(assert (=> b!71047 t!5010))

(declare-fun b_and!4381 () Bool)

(assert (= b_and!4377 (and (=> t!5010 result!2655) b_and!4381)))

(declare-fun m!68099 () Bool)

(assert (=> b!71044 m!68099))

(declare-fun m!68101 () Bool)

(assert (=> b!71042 m!68101))

(declare-fun m!68103 () Bool)

(assert (=> bm!6134 m!68103))

(declare-fun m!68105 () Bool)

(assert (=> b!71043 m!68105))

(assert (=> b!71043 m!67913))

(declare-fun m!68107 () Bool)

(assert (=> b!71043 m!68107))

(assert (=> b!71043 m!68007))

(declare-fun m!68109 () Bool)

(assert (=> b!71043 m!68109))

(assert (=> b!71043 m!68105))

(assert (=> b!71043 m!68007))

(assert (=> b!71043 m!67913))

(assert (=> b!71045 m!68007))

(assert (=> b!71045 m!68007))

(declare-fun m!68111 () Bool)

(assert (=> b!71045 m!68111))

(assert (=> b!71049 m!68007))

(assert (=> b!71049 m!68007))

(assert (=> b!71049 m!68111))

(assert (=> b!71046 m!68103))

(assert (=> b!71041 m!68007))

(assert (=> b!71041 m!68007))

(declare-fun m!68113 () Bool)

(assert (=> b!71041 m!68113))

(declare-fun m!68115 () Bool)

(assert (=> d!15817 m!68115))

(assert (=> d!15817 m!67891))

(declare-fun m!68117 () Bool)

(assert (=> b!71047 m!68117))

(assert (=> b!71047 m!68105))

(assert (=> b!71047 m!67913))

(assert (=> b!71047 m!68107))

(declare-fun m!68119 () Bool)

(assert (=> b!71047 m!68119))

(assert (=> b!71047 m!68105))

(declare-fun m!68121 () Bool)

(assert (=> b!71047 m!68121))

(assert (=> b!71047 m!68121))

(declare-fun m!68123 () Bool)

(assert (=> b!71047 m!68123))

(assert (=> b!71047 m!68007))

(assert (=> b!71047 m!67913))

(assert (=> b!70777 d!15817))

(declare-fun d!15819 () Bool)

(declare-fun e!46543 () Bool)

(assert (=> d!15819 e!46543))

(declare-fun res!37915 () Bool)

(assert (=> d!15819 (=> (not res!37915) (not e!46543))))

(declare-fun lt!31448 () ListLongMap!1415)

(assert (=> d!15819 (= res!37915 (contains!719 lt!31448 (_1!1068 lt!31269)))))

(declare-fun lt!31449 () List!1476)

(assert (=> d!15819 (= lt!31448 (ListLongMap!1416 lt!31449))))

(declare-fun lt!31447 () Unit!2002)

(declare-fun lt!31446 () Unit!2002)

(assert (=> d!15819 (= lt!31447 lt!31446)))

(assert (=> d!15819 (= (getValueByKey!132 lt!31449 (_1!1068 lt!31269)) (Some!137 (_2!1068 lt!31269)))))

(assert (=> d!15819 (= lt!31446 (lemmaContainsTupThenGetReturnValue!49 lt!31449 (_1!1068 lt!31269) (_2!1068 lt!31269)))))

(assert (=> d!15819 (= lt!31449 (insertStrictlySorted!52 (toList!723 lt!31270) (_1!1068 lt!31269) (_2!1068 lt!31269)))))

(assert (=> d!15819 (= (+!93 lt!31270 lt!31269) lt!31448)))

(declare-fun b!71052 () Bool)

(declare-fun res!37916 () Bool)

(assert (=> b!71052 (=> (not res!37916) (not e!46543))))

(assert (=> b!71052 (= res!37916 (= (getValueByKey!132 (toList!723 lt!31448) (_1!1068 lt!31269)) (Some!137 (_2!1068 lt!31269))))))

(declare-fun b!71053 () Bool)

(assert (=> b!71053 (= e!46543 (contains!722 (toList!723 lt!31448) lt!31269))))

(assert (= (and d!15819 res!37915) b!71052))

(assert (= (and b!71052 res!37916) b!71053))

(declare-fun m!68125 () Bool)

(assert (=> d!15819 m!68125))

(declare-fun m!68127 () Bool)

(assert (=> d!15819 m!68127))

(declare-fun m!68129 () Bool)

(assert (=> d!15819 m!68129))

(declare-fun m!68131 () Bool)

(assert (=> d!15819 m!68131))

(declare-fun m!68133 () Bool)

(assert (=> b!71052 m!68133))

(declare-fun m!68135 () Bool)

(assert (=> b!71053 m!68135))

(assert (=> b!70777 d!15819))

(declare-fun d!15821 () Bool)

(declare-fun e!46544 () Bool)

(assert (=> d!15821 e!46544))

(declare-fun res!37917 () Bool)

(assert (=> d!15821 (=> (not res!37917) (not e!46544))))

(declare-fun lt!31452 () ListLongMap!1415)

(assert (=> d!15821 (= res!37917 (contains!719 lt!31452 (_1!1068 lt!31265)))))

(declare-fun lt!31453 () List!1476)

(assert (=> d!15821 (= lt!31452 (ListLongMap!1416 lt!31453))))

(declare-fun lt!31451 () Unit!2002)

(declare-fun lt!31450 () Unit!2002)

(assert (=> d!15821 (= lt!31451 lt!31450)))

(assert (=> d!15821 (= (getValueByKey!132 lt!31453 (_1!1068 lt!31265)) (Some!137 (_2!1068 lt!31265)))))

(assert (=> d!15821 (= lt!31450 (lemmaContainsTupThenGetReturnValue!49 lt!31453 (_1!1068 lt!31265) (_2!1068 lt!31265)))))

(assert (=> d!15821 (= lt!31453 (insertStrictlySorted!52 (toList!723 lt!31270) (_1!1068 lt!31265) (_2!1068 lt!31265)))))

(assert (=> d!15821 (= (+!93 lt!31270 lt!31265) lt!31452)))

(declare-fun b!71054 () Bool)

(declare-fun res!37918 () Bool)

(assert (=> b!71054 (=> (not res!37918) (not e!46544))))

(assert (=> b!71054 (= res!37918 (= (getValueByKey!132 (toList!723 lt!31452) (_1!1068 lt!31265)) (Some!137 (_2!1068 lt!31265))))))

(declare-fun b!71055 () Bool)

(assert (=> b!71055 (= e!46544 (contains!722 (toList!723 lt!31452) lt!31265))))

(assert (= (and d!15821 res!37917) b!71054))

(assert (= (and b!71054 res!37918) b!71055))

(declare-fun m!68137 () Bool)

(assert (=> d!15821 m!68137))

(declare-fun m!68139 () Bool)

(assert (=> d!15821 m!68139))

(declare-fun m!68141 () Bool)

(assert (=> d!15821 m!68141))

(declare-fun m!68143 () Bool)

(assert (=> d!15821 m!68143))

(declare-fun m!68145 () Bool)

(assert (=> b!71054 m!68145))

(declare-fun m!68147 () Bool)

(assert (=> b!71055 m!68147))

(assert (=> b!70777 d!15821))

(declare-fun d!15823 () Bool)

(assert (=> d!15823 (= (+!93 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (+!93 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(declare-fun lt!31456 () Unit!2002)

(declare-fun choose!396 (ListLongMap!1415 (_ BitVec 64) V!2939 (_ BitVec 64) V!2939) Unit!2002)

(assert (=> d!15823 (= lt!31456 (choose!396 lt!31270 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))

(assert (=> d!15823 (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15823 (= (addCommutativeForDiffKeys!12 lt!31270 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) lt!31456)))

(declare-fun bs!3051 () Bool)

(assert (= bs!3051 d!15823))

(declare-fun m!68149 () Bool)

(assert (=> bs!3051 m!68149))

(declare-fun m!68151 () Bool)

(assert (=> bs!3051 m!68151))

(declare-fun m!68153 () Bool)

(assert (=> bs!3051 m!68153))

(assert (=> bs!3051 m!68149))

(declare-fun m!68155 () Bool)

(assert (=> bs!3051 m!68155))

(assert (=> bs!3051 m!67893))

(declare-fun m!68157 () Bool)

(assert (=> bs!3051 m!68157))

(assert (=> bs!3051 m!68151))

(assert (=> b!70777 d!15823))

(declare-fun d!15825 () Bool)

(declare-fun e!46545 () Bool)

(assert (=> d!15825 e!46545))

(declare-fun res!37919 () Bool)

(assert (=> d!15825 (=> (not res!37919) (not e!46545))))

(declare-fun lt!31459 () ListLongMap!1415)

(assert (=> d!15825 (= res!37919 (contains!719 lt!31459 (_1!1068 lt!31265)))))

(declare-fun lt!31460 () List!1476)

(assert (=> d!15825 (= lt!31459 (ListLongMap!1416 lt!31460))))

(declare-fun lt!31458 () Unit!2002)

(declare-fun lt!31457 () Unit!2002)

(assert (=> d!15825 (= lt!31458 lt!31457)))

(assert (=> d!15825 (= (getValueByKey!132 lt!31460 (_1!1068 lt!31265)) (Some!137 (_2!1068 lt!31265)))))

(assert (=> d!15825 (= lt!31457 (lemmaContainsTupThenGetReturnValue!49 lt!31460 (_1!1068 lt!31265) (_2!1068 lt!31265)))))

(assert (=> d!15825 (= lt!31460 (insertStrictlySorted!52 (toList!723 (+!93 lt!31270 lt!31269)) (_1!1068 lt!31265) (_2!1068 lt!31265)))))

(assert (=> d!15825 (= (+!93 (+!93 lt!31270 lt!31269) lt!31265) lt!31459)))

(declare-fun b!71056 () Bool)

(declare-fun res!37920 () Bool)

(assert (=> b!71056 (=> (not res!37920) (not e!46545))))

(assert (=> b!71056 (= res!37920 (= (getValueByKey!132 (toList!723 lt!31459) (_1!1068 lt!31265)) (Some!137 (_2!1068 lt!31265))))))

(declare-fun b!71057 () Bool)

(assert (=> b!71057 (= e!46545 (contains!722 (toList!723 lt!31459) lt!31265))))

(assert (= (and d!15825 res!37919) b!71056))

(assert (= (and b!71056 res!37920) b!71057))

(declare-fun m!68159 () Bool)

(assert (=> d!15825 m!68159))

(declare-fun m!68161 () Bool)

(assert (=> d!15825 m!68161))

(declare-fun m!68163 () Bool)

(assert (=> d!15825 m!68163))

(declare-fun m!68165 () Bool)

(assert (=> d!15825 m!68165))

(declare-fun m!68167 () Bool)

(assert (=> b!71056 m!68167))

(declare-fun m!68169 () Bool)

(assert (=> b!71057 m!68169))

(assert (=> b!70777 d!15825))

(declare-fun d!15827 () Bool)

(assert (=> d!15827 (= (validMask!0 (mask!6149 (v!2514 (underlying!257 thiss!992)))) (and (or (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000001111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000011111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000001111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000011111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000001111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000011111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000001111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000011111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000001111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000011111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000001111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000011111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000111111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000001111111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000011111111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000111111111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000001111111111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000011111111111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000111111111111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00001111111111111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00011111111111111111111111111111) (= (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!70777 d!15827))

(declare-fun d!15829 () Bool)

(assert (=> d!15829 (= (map!1148 newMap!16) (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun bs!3052 () Bool)

(assert (= bs!3052 d!15829))

(assert (=> bs!3052 m!68051))

(assert (=> b!70768 d!15829))

(declare-fun b!71100 () Bool)

(declare-fun c!10321 () Bool)

(assert (=> b!71100 (= c!10321 (and (not (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46581 () ListLongMap!1415)

(declare-fun e!46579 () ListLongMap!1415)

(assert (=> b!71100 (= e!46581 e!46579)))

(declare-fun b!71101 () Bool)

(declare-fun e!46577 () Bool)

(declare-fun e!46572 () Bool)

(assert (=> b!71101 (= e!46577 e!46572)))

(declare-fun res!37946 () Bool)

(declare-fun call!6154 () Bool)

(assert (=> b!71101 (= res!37946 call!6154)))

(assert (=> b!71101 (=> (not res!37946) (not e!46572))))

(declare-fun b!71102 () Bool)

(declare-fun e!46574 () Bool)

(declare-fun lt!31522 () ListLongMap!1415)

(assert (=> b!71102 (= e!46574 (= (apply!74 lt!31522 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun b!71103 () Bool)

(declare-fun e!46578 () Bool)

(assert (=> b!71103 (= e!46578 e!46574)))

(declare-fun res!37945 () Bool)

(declare-fun call!6152 () Bool)

(assert (=> b!71103 (= res!37945 call!6152)))

(assert (=> b!71103 (=> (not res!37945) (not e!46574))))

(declare-fun bm!6149 () Bool)

(assert (=> bm!6149 (= call!6154 (contains!719 lt!31522 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6150 () Bool)

(declare-fun call!6155 () ListLongMap!1415)

(declare-fun call!6156 () ListLongMap!1415)

(assert (=> bm!6150 (= call!6155 call!6156)))

(declare-fun b!71105 () Bool)

(declare-fun call!6158 () ListLongMap!1415)

(assert (=> b!71105 (= e!46579 call!6158)))

(declare-fun b!71106 () Bool)

(declare-fun e!46584 () Bool)

(assert (=> b!71106 (= e!46584 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!6151 () Bool)

(declare-fun call!6153 () ListLongMap!1415)

(declare-fun call!6157 () ListLongMap!1415)

(assert (=> bm!6151 (= call!6153 call!6157)))

(declare-fun b!71107 () Bool)

(declare-fun e!46580 () Unit!2002)

(declare-fun lt!31525 () Unit!2002)

(assert (=> b!71107 (= e!46580 lt!31525)))

(declare-fun lt!31514 () ListLongMap!1415)

(assert (=> b!71107 (= lt!31514 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun lt!31523 () (_ BitVec 64))

(assert (=> b!71107 (= lt!31523 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31508 () (_ BitVec 64))

(assert (=> b!71107 (= lt!31508 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31520 () Unit!2002)

(declare-fun addStillContains!50 (ListLongMap!1415 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2002)

(assert (=> b!71107 (= lt!31520 (addStillContains!50 lt!31514 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31508))))

(assert (=> b!71107 (contains!719 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31508)))

(declare-fun lt!31526 () Unit!2002)

(assert (=> b!71107 (= lt!31526 lt!31520)))

(declare-fun lt!31507 () ListLongMap!1415)

(assert (=> b!71107 (= lt!31507 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun lt!31513 () (_ BitVec 64))

(assert (=> b!71107 (= lt!31513 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31517 () (_ BitVec 64))

(assert (=> b!71107 (= lt!31517 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31519 () Unit!2002)

(declare-fun addApplyDifferent!50 (ListLongMap!1415 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2002)

(assert (=> b!71107 (= lt!31519 (addApplyDifferent!50 lt!31507 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31517))))

(assert (=> b!71107 (= (apply!74 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31517) (apply!74 lt!31507 lt!31517))))

(declare-fun lt!31524 () Unit!2002)

(assert (=> b!71107 (= lt!31524 lt!31519)))

(declare-fun lt!31521 () ListLongMap!1415)

(assert (=> b!71107 (= lt!31521 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun lt!31515 () (_ BitVec 64))

(assert (=> b!71107 (= lt!31515 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31509 () (_ BitVec 64))

(assert (=> b!71107 (= lt!31509 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31512 () Unit!2002)

(assert (=> b!71107 (= lt!31512 (addApplyDifferent!50 lt!31521 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31509))))

(assert (=> b!71107 (= (apply!74 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31509) (apply!74 lt!31521 lt!31509))))

(declare-fun lt!31516 () Unit!2002)

(assert (=> b!71107 (= lt!31516 lt!31512)))

(declare-fun lt!31511 () ListLongMap!1415)

(assert (=> b!71107 (= lt!31511 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun lt!31506 () (_ BitVec 64))

(assert (=> b!71107 (= lt!31506 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31510 () (_ BitVec 64))

(assert (=> b!71107 (= lt!31510 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!71107 (= lt!31525 (addApplyDifferent!50 lt!31511 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31510))))

(assert (=> b!71107 (= (apply!74 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31510) (apply!74 lt!31511 lt!31510))))

(declare-fun b!71108 () Bool)

(declare-fun e!46582 () Bool)

(declare-fun e!46573 () Bool)

(assert (=> b!71108 (= e!46582 e!46573)))

(declare-fun res!37944 () Bool)

(assert (=> b!71108 (=> (not res!37944) (not e!46573))))

(assert (=> b!71108 (= res!37944 (contains!719 lt!31522 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71108 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71109 () Bool)

(assert (=> b!71109 (= e!46578 (not call!6152))))

(declare-fun b!71110 () Bool)

(declare-fun e!46583 () Bool)

(assert (=> b!71110 (= e!46583 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71111 () Bool)

(assert (=> b!71111 (= e!46581 call!6153)))

(declare-fun b!71112 () Bool)

(declare-fun e!46576 () ListLongMap!1415)

(assert (=> b!71112 (= e!46576 e!46581)))

(declare-fun c!10323 () Bool)

(assert (=> b!71112 (= c!10323 (and (not (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6152 () Bool)

(assert (=> bm!6152 (= call!6152 (contains!719 lt!31522 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71113 () Bool)

(assert (=> b!71113 (= e!46573 (= (apply!74 lt!31522 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71113 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2091 (_values!2175 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> b!71113 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71104 () Bool)

(assert (=> b!71104 (= e!46577 (not call!6154))))

(declare-fun d!15831 () Bool)

(declare-fun e!46575 () Bool)

(assert (=> d!15831 e!46575))

(declare-fun res!37942 () Bool)

(assert (=> d!15831 (=> (not res!37942) (not e!46575))))

(assert (=> d!15831 (= res!37942 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun lt!31505 () ListLongMap!1415)

(assert (=> d!15831 (= lt!31522 lt!31505)))

(declare-fun lt!31518 () Unit!2002)

(assert (=> d!15831 (= lt!31518 e!46580)))

(declare-fun c!10324 () Bool)

(assert (=> d!15831 (= c!10324 e!46584)))

(declare-fun res!37947 () Bool)

(assert (=> d!15831 (=> (not res!37947) (not e!46584))))

(assert (=> d!15831 (= res!37947 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!15831 (= lt!31505 e!46576)))

(declare-fun c!10325 () Bool)

(assert (=> d!15831 (= c!10325 (and (not (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15831 (validMask!0 (mask!6149 (v!2514 (underlying!257 thiss!992))))))

(assert (=> d!15831 (= (getCurrentListMap!421 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))) lt!31522)))

(declare-fun b!71114 () Bool)

(declare-fun Unit!2011 () Unit!2002)

(assert (=> b!71114 (= e!46580 Unit!2011)))

(declare-fun b!71115 () Bool)

(assert (=> b!71115 (= e!46572 (= (apply!74 lt!31522 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun bm!6153 () Bool)

(assert (=> bm!6153 (= call!6157 (+!93 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158)) (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71116 () Bool)

(declare-fun res!37943 () Bool)

(assert (=> b!71116 (=> (not res!37943) (not e!46575))))

(assert (=> b!71116 (= res!37943 e!46578)))

(declare-fun c!10322 () Bool)

(assert (=> b!71116 (= c!10322 (not (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6154 () Bool)

(assert (=> bm!6154 (= call!6156 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun b!71117 () Bool)

(assert (=> b!71117 (= e!46576 (+!93 call!6157 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun bm!6155 () Bool)

(assert (=> bm!6155 (= call!6158 call!6155)))

(declare-fun b!71118 () Bool)

(assert (=> b!71118 (= e!46579 call!6153)))

(declare-fun b!71119 () Bool)

(declare-fun res!37940 () Bool)

(assert (=> b!71119 (=> (not res!37940) (not e!46575))))

(assert (=> b!71119 (= res!37940 e!46582)))

(declare-fun res!37941 () Bool)

(assert (=> b!71119 (=> res!37941 e!46582)))

(assert (=> b!71119 (= res!37941 (not e!46583))))

(declare-fun res!37939 () Bool)

(assert (=> b!71119 (=> (not res!37939) (not e!46583))))

(assert (=> b!71119 (= res!37939 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71120 () Bool)

(assert (=> b!71120 (= e!46575 e!46577)))

(declare-fun c!10320 () Bool)

(assert (=> b!71120 (= c!10320 (not (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!15831 c!10325) b!71117))

(assert (= (and d!15831 (not c!10325)) b!71112))

(assert (= (and b!71112 c!10323) b!71111))

(assert (= (and b!71112 (not c!10323)) b!71100))

(assert (= (and b!71100 c!10321) b!71118))

(assert (= (and b!71100 (not c!10321)) b!71105))

(assert (= (or b!71118 b!71105) bm!6155))

(assert (= (or b!71111 bm!6155) bm!6150))

(assert (= (or b!71111 b!71118) bm!6151))

(assert (= (or b!71117 bm!6150) bm!6154))

(assert (= (or b!71117 bm!6151) bm!6153))

(assert (= (and d!15831 res!37947) b!71106))

(assert (= (and d!15831 c!10324) b!71107))

(assert (= (and d!15831 (not c!10324)) b!71114))

(assert (= (and d!15831 res!37942) b!71119))

(assert (= (and b!71119 res!37939) b!71110))

(assert (= (and b!71119 (not res!37941)) b!71108))

(assert (= (and b!71108 res!37944) b!71113))

(assert (= (and b!71119 res!37940) b!71116))

(assert (= (and b!71116 c!10322) b!71103))

(assert (= (and b!71116 (not c!10322)) b!71109))

(assert (= (and b!71103 res!37945) b!71102))

(assert (= (or b!71103 b!71109) bm!6152))

(assert (= (and b!71116 res!37943) b!71120))

(assert (= (and b!71120 c!10320) b!71101))

(assert (= (and b!71120 (not c!10320)) b!71104))

(assert (= (and b!71101 res!37946) b!71115))

(assert (= (or b!71101 b!71104) bm!6149))

(declare-fun b_lambda!3187 () Bool)

(assert (=> (not b_lambda!3187) (not b!71113)))

(assert (=> b!71113 t!5008))

(declare-fun b_and!4383 () Bool)

(assert (= b_and!4379 (and (=> t!5008 result!2651) b_and!4383)))

(assert (=> b!71113 t!5010))

(declare-fun b_and!4385 () Bool)

(assert (= b_and!4381 (and (=> t!5010 result!2655) b_and!4385)))

(assert (=> b!71108 m!68007))

(assert (=> b!71108 m!68007))

(declare-fun m!68171 () Bool)

(assert (=> b!71108 m!68171))

(assert (=> b!71113 m!67913))

(assert (=> b!71113 m!68007))

(declare-fun m!68173 () Bool)

(assert (=> b!71113 m!68173))

(assert (=> b!71113 m!68007))

(assert (=> b!71113 m!68105))

(assert (=> b!71113 m!68105))

(assert (=> b!71113 m!67913))

(assert (=> b!71113 m!68107))

(assert (=> bm!6154 m!67899))

(assert (=> b!71106 m!68007))

(assert (=> b!71106 m!68007))

(assert (=> b!71106 m!68111))

(declare-fun m!68175 () Bool)

(assert (=> b!71102 m!68175))

(declare-fun m!68177 () Bool)

(assert (=> bm!6153 m!68177))

(declare-fun m!68179 () Bool)

(assert (=> b!71115 m!68179))

(declare-fun m!68181 () Bool)

(assert (=> b!71117 m!68181))

(assert (=> d!15831 m!67891))

(declare-fun m!68183 () Bool)

(assert (=> bm!6149 m!68183))

(declare-fun m!68185 () Bool)

(assert (=> b!71107 m!68185))

(declare-fun m!68187 () Bool)

(assert (=> b!71107 m!68187))

(declare-fun m!68189 () Bool)

(assert (=> b!71107 m!68189))

(declare-fun m!68191 () Bool)

(assert (=> b!71107 m!68191))

(assert (=> b!71107 m!68185))

(declare-fun m!68193 () Bool)

(assert (=> b!71107 m!68193))

(declare-fun m!68195 () Bool)

(assert (=> b!71107 m!68195))

(declare-fun m!68197 () Bool)

(assert (=> b!71107 m!68197))

(declare-fun m!68199 () Bool)

(assert (=> b!71107 m!68199))

(assert (=> b!71107 m!68007))

(declare-fun m!68201 () Bool)

(assert (=> b!71107 m!68201))

(assert (=> b!71107 m!67899))

(assert (=> b!71107 m!68187))

(declare-fun m!68203 () Bool)

(assert (=> b!71107 m!68203))

(declare-fun m!68205 () Bool)

(assert (=> b!71107 m!68205))

(assert (=> b!71107 m!68199))

(declare-fun m!68207 () Bool)

(assert (=> b!71107 m!68207))

(declare-fun m!68209 () Bool)

(assert (=> b!71107 m!68209))

(declare-fun m!68211 () Bool)

(assert (=> b!71107 m!68211))

(assert (=> b!71107 m!68209))

(declare-fun m!68213 () Bool)

(assert (=> b!71107 m!68213))

(declare-fun m!68215 () Bool)

(assert (=> bm!6152 m!68215))

(assert (=> b!71110 m!68007))

(assert (=> b!71110 m!68007))

(assert (=> b!71110 m!68111))

(assert (=> b!70768 d!15831))

(declare-fun d!15833 () Bool)

(declare-fun res!37954 () Bool)

(declare-fun e!46587 () Bool)

(assert (=> d!15833 (=> (not res!37954) (not e!46587))))

(declare-fun simpleValid!50 (LongMapFixedSize!690) Bool)

(assert (=> d!15833 (= res!37954 (simpleValid!50 newMap!16))))

(assert (=> d!15833 (= (valid!287 newMap!16) e!46587)))

(declare-fun b!71127 () Bool)

(declare-fun res!37955 () Bool)

(assert (=> b!71127 (=> (not res!37955) (not e!46587))))

(declare-fun arrayCountValidKeys!0 (array!3881 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!71127 (= res!37955 (= (arrayCountValidKeys!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (_size!394 newMap!16)))))

(declare-fun b!71128 () Bool)

(declare-fun res!37956 () Bool)

(assert (=> b!71128 (=> (not res!37956) (not e!46587))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3881 (_ BitVec 32)) Bool)

(assert (=> b!71128 (= res!37956 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!71129 () Bool)

(assert (=> b!71129 (= e!46587 (arrayNoDuplicates!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 Nil!1472))))

(assert (= (and d!15833 res!37954) b!71127))

(assert (= (and b!71127 res!37955) b!71128))

(assert (= (and b!71128 res!37956) b!71129))

(declare-fun m!68217 () Bool)

(assert (=> d!15833 m!68217))

(declare-fun m!68219 () Bool)

(assert (=> b!71127 m!68219))

(declare-fun m!68221 () Bool)

(assert (=> b!71128 m!68221))

(declare-fun m!68223 () Bool)

(assert (=> b!71129 m!68223))

(assert (=> b!70766 d!15833))

(declare-fun d!15835 () Bool)

(assert (=> d!15835 (= (array_inv!1141 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvsge (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!70773 d!15835))

(declare-fun d!15837 () Bool)

(assert (=> d!15837 (= (array_inv!1142 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvsge (size!2091 (_values!2175 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!70773 d!15837))

(declare-fun d!15839 () Bool)

(assert (=> d!15839 (= (valid!286 thiss!992) (valid!287 (v!2514 (underlying!257 thiss!992))))))

(declare-fun bs!3053 () Bool)

(assert (= bs!3053 d!15839))

(declare-fun m!68225 () Bool)

(assert (=> bs!3053 m!68225))

(assert (=> start!9592 d!15839))

(declare-fun b!71137 () Bool)

(declare-fun e!46592 () Bool)

(assert (=> b!71137 (= e!46592 tp_is_empty!2469)))

(declare-fun mapNonEmpty!3155 () Bool)

(declare-fun mapRes!3155 () Bool)

(declare-fun tp!8501 () Bool)

(declare-fun e!46593 () Bool)

(assert (=> mapNonEmpty!3155 (= mapRes!3155 (and tp!8501 e!46593))))

(declare-fun mapKey!3155 () (_ BitVec 32))

(declare-fun mapValue!3155 () ValueCell!891)

(declare-fun mapRest!3155 () (Array (_ BitVec 32) ValueCell!891))

(assert (=> mapNonEmpty!3155 (= mapRest!3146 (store mapRest!3155 mapKey!3155 mapValue!3155))))

(declare-fun condMapEmpty!3155 () Bool)

(declare-fun mapDefault!3155 () ValueCell!891)

(assert (=> mapNonEmpty!3146 (= condMapEmpty!3155 (= mapRest!3146 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3155)))))

(assert (=> mapNonEmpty!3146 (= tp!8486 (and e!46592 mapRes!3155))))

(declare-fun mapIsEmpty!3155 () Bool)

(assert (=> mapIsEmpty!3155 mapRes!3155))

(declare-fun b!71136 () Bool)

(assert (=> b!71136 (= e!46593 tp_is_empty!2469)))

(assert (= (and mapNonEmpty!3146 condMapEmpty!3155) mapIsEmpty!3155))

(assert (= (and mapNonEmpty!3146 (not condMapEmpty!3155)) mapNonEmpty!3155))

(assert (= (and mapNonEmpty!3155 ((_ is ValueCellFull!891) mapValue!3155)) b!71136))

(assert (= (and mapNonEmpty!3146 ((_ is ValueCellFull!891) mapDefault!3155)) b!71137))

(declare-fun m!68227 () Bool)

(assert (=> mapNonEmpty!3155 m!68227))

(declare-fun b!71139 () Bool)

(declare-fun e!46594 () Bool)

(assert (=> b!71139 (= e!46594 tp_is_empty!2469)))

(declare-fun mapNonEmpty!3156 () Bool)

(declare-fun mapRes!3156 () Bool)

(declare-fun tp!8502 () Bool)

(declare-fun e!46595 () Bool)

(assert (=> mapNonEmpty!3156 (= mapRes!3156 (and tp!8502 e!46595))))

(declare-fun mapKey!3156 () (_ BitVec 32))

(declare-fun mapRest!3156 () (Array (_ BitVec 32) ValueCell!891))

(declare-fun mapValue!3156 () ValueCell!891)

(assert (=> mapNonEmpty!3156 (= mapRest!3145 (store mapRest!3156 mapKey!3156 mapValue!3156))))

(declare-fun condMapEmpty!3156 () Bool)

(declare-fun mapDefault!3156 () ValueCell!891)

(assert (=> mapNonEmpty!3145 (= condMapEmpty!3156 (= mapRest!3145 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3156)))))

(assert (=> mapNonEmpty!3145 (= tp!8484 (and e!46594 mapRes!3156))))

(declare-fun mapIsEmpty!3156 () Bool)

(assert (=> mapIsEmpty!3156 mapRes!3156))

(declare-fun b!71138 () Bool)

(assert (=> b!71138 (= e!46595 tp_is_empty!2469)))

(assert (= (and mapNonEmpty!3145 condMapEmpty!3156) mapIsEmpty!3156))

(assert (= (and mapNonEmpty!3145 (not condMapEmpty!3156)) mapNonEmpty!3156))

(assert (= (and mapNonEmpty!3156 ((_ is ValueCellFull!891) mapValue!3156)) b!71138))

(assert (= (and mapNonEmpty!3145 ((_ is ValueCellFull!891) mapDefault!3156)) b!71139))

(declare-fun m!68229 () Bool)

(assert (=> mapNonEmpty!3156 m!68229))

(declare-fun b_lambda!3189 () Bool)

(assert (= b_lambda!3187 (or (and b!70773 b_free!2105) (and b!70762 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))) b_lambda!3189)))

(declare-fun b_lambda!3191 () Bool)

(assert (= b_lambda!3185 (or (and b!70773 b_free!2105) (and b!70762 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))) b_lambda!3191)))

(declare-fun b_lambda!3193 () Bool)

(assert (= b_lambda!3183 (or (and b!70773 b_free!2105) (and b!70762 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))) b_lambda!3193)))

(check-sat (not b!70989) (not b!71056) (not bm!6126) (not b!70866) (not d!15815) (not b!71115) (not b_next!2107) (not b!71110) (not b!71014) (not bm!6130) (not bm!6112) (not bm!6124) (not b!70873) (not b_lambda!3193) (not b!71108) (not d!15819) (not d!15829) (not b!71047) (not b!71003) (not mapNonEmpty!3156) (not b_lambda!3189) (not b!70847) (not b!71049) (not d!15817) (not b!71117) (not bm!6113) (not b!70881) (not bm!6153) (not b!70852) (not d!15795) (not d!15825) (not mapNonEmpty!3155) (not b!70874) (not b_next!2105) (not d!15823) (not b_lambda!3181) (not b!71015) (not bm!6134) tp_is_empty!2469 (not b!71045) (not b!70975) (not bm!6059) (not b!71107) (not b!70883) (not b!71000) (not bm!6121) (not bm!6122) (not b!71044) (not d!15839) (not b!71128) (not b!71042) (not b_lambda!3191) (not bm!6111) (not bm!6152) b_and!4385 (not bm!6127) (not b!71001) (not b!71106) (not bm!6116) (not b!71008) (not b!71054) (not b!71129) (not b!71009) (not d!15813) (not bm!6120) (not bm!6131) (not b!71053) (not b!71113) (not b!71043) (not b!71127) (not d!15801) (not d!15833) (not b!70864) (not b!71046) (not b!71041) b_and!4383 (not bm!6154) (not d!15821) (not b!71052) (not b!71057) (not b!70867) (not d!15831) (not b!71055) (not d!15797) (not b!71102) (not d!15811) (not bm!6149))
(check-sat b_and!4383 b_and!4385 (not b_next!2105) (not b_next!2107))
(get-model)

(declare-fun b!71151 () Bool)

(declare-fun e!46601 () Option!138)

(assert (=> b!71151 (= e!46601 None!136)))

(declare-fun b!71149 () Bool)

(declare-fun e!46600 () Option!138)

(assert (=> b!71149 (= e!46600 e!46601)))

(declare-fun c!10331 () Bool)

(assert (=> b!71149 (= c!10331 (and ((_ is Cons!1472) (toList!723 lt!31448)) (not (= (_1!1068 (h!2058 (toList!723 lt!31448))) (_1!1068 lt!31269)))))))

(declare-fun b!71148 () Bool)

(assert (=> b!71148 (= e!46600 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31448)))))))

(declare-fun d!15841 () Bool)

(declare-fun c!10330 () Bool)

(assert (=> d!15841 (= c!10330 (and ((_ is Cons!1472) (toList!723 lt!31448)) (= (_1!1068 (h!2058 (toList!723 lt!31448))) (_1!1068 lt!31269))))))

(assert (=> d!15841 (= (getValueByKey!132 (toList!723 lt!31448) (_1!1068 lt!31269)) e!46600)))

(declare-fun b!71150 () Bool)

(assert (=> b!71150 (= e!46601 (getValueByKey!132 (t!5012 (toList!723 lt!31448)) (_1!1068 lt!31269)))))

(assert (= (and d!15841 c!10330) b!71148))

(assert (= (and d!15841 (not c!10330)) b!71149))

(assert (= (and b!71149 c!10331) b!71150))

(assert (= (and b!71149 (not c!10331)) b!71151))

(declare-fun m!68231 () Bool)

(assert (=> b!71150 m!68231))

(assert (=> b!71052 d!15841))

(assert (=> bm!6130 d!15829))

(declare-fun d!15843 () Bool)

(declare-fun e!46602 () Bool)

(assert (=> d!15843 e!46602))

(declare-fun res!37957 () Bool)

(assert (=> d!15843 (=> res!37957 e!46602)))

(declare-fun lt!31529 () Bool)

(assert (=> d!15843 (= res!37957 (not lt!31529))))

(declare-fun lt!31528 () Bool)

(assert (=> d!15843 (= lt!31529 lt!31528)))

(declare-fun lt!31527 () Unit!2002)

(declare-fun e!46603 () Unit!2002)

(assert (=> d!15843 (= lt!31527 e!46603)))

(declare-fun c!10332 () Bool)

(assert (=> d!15843 (= c!10332 lt!31528)))

(assert (=> d!15843 (= lt!31528 (containsKey!136 (toList!723 lt!31423) (_1!1068 lt!31269)))))

(assert (=> d!15843 (= (contains!719 lt!31423 (_1!1068 lt!31269)) lt!31529)))

(declare-fun b!71152 () Bool)

(declare-fun lt!31530 () Unit!2002)

(assert (=> b!71152 (= e!46603 lt!31530)))

(assert (=> b!71152 (= lt!31530 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31423) (_1!1068 lt!31269)))))

(assert (=> b!71152 (isDefined!85 (getValueByKey!132 (toList!723 lt!31423) (_1!1068 lt!31269)))))

(declare-fun b!71153 () Bool)

(declare-fun Unit!2012 () Unit!2002)

(assert (=> b!71153 (= e!46603 Unit!2012)))

(declare-fun b!71154 () Bool)

(assert (=> b!71154 (= e!46602 (isDefined!85 (getValueByKey!132 (toList!723 lt!31423) (_1!1068 lt!31269))))))

(assert (= (and d!15843 c!10332) b!71152))

(assert (= (and d!15843 (not c!10332)) b!71153))

(assert (= (and d!15843 (not res!37957)) b!71154))

(declare-fun m!68233 () Bool)

(assert (=> d!15843 m!68233))

(declare-fun m!68235 () Bool)

(assert (=> b!71152 m!68235))

(assert (=> b!71152 m!68095))

(assert (=> b!71152 m!68095))

(declare-fun m!68237 () Bool)

(assert (=> b!71152 m!68237))

(assert (=> b!71154 m!68095))

(assert (=> b!71154 m!68095))

(assert (=> b!71154 m!68237))

(assert (=> d!15815 d!15843))

(declare-fun b!71158 () Bool)

(declare-fun e!46605 () Option!138)

(assert (=> b!71158 (= e!46605 None!136)))

(declare-fun b!71156 () Bool)

(declare-fun e!46604 () Option!138)

(assert (=> b!71156 (= e!46604 e!46605)))

(declare-fun c!10334 () Bool)

(assert (=> b!71156 (= c!10334 (and ((_ is Cons!1472) lt!31424) (not (= (_1!1068 (h!2058 lt!31424)) (_1!1068 lt!31269)))))))

(declare-fun b!71155 () Bool)

(assert (=> b!71155 (= e!46604 (Some!137 (_2!1068 (h!2058 lt!31424))))))

(declare-fun d!15845 () Bool)

(declare-fun c!10333 () Bool)

(assert (=> d!15845 (= c!10333 (and ((_ is Cons!1472) lt!31424) (= (_1!1068 (h!2058 lt!31424)) (_1!1068 lt!31269))))))

(assert (=> d!15845 (= (getValueByKey!132 lt!31424 (_1!1068 lt!31269)) e!46604)))

(declare-fun b!71157 () Bool)

(assert (=> b!71157 (= e!46605 (getValueByKey!132 (t!5012 lt!31424) (_1!1068 lt!31269)))))

(assert (= (and d!15845 c!10333) b!71155))

(assert (= (and d!15845 (not c!10333)) b!71156))

(assert (= (and b!71156 c!10334) b!71157))

(assert (= (and b!71156 (not c!10334)) b!71158))

(declare-fun m!68239 () Bool)

(assert (=> b!71157 m!68239))

(assert (=> d!15815 d!15845))

(declare-fun d!15847 () Bool)

(assert (=> d!15847 (= (getValueByKey!132 lt!31424 (_1!1068 lt!31269)) (Some!137 (_2!1068 lt!31269)))))

(declare-fun lt!31533 () Unit!2002)

(declare-fun choose!397 (List!1476 (_ BitVec 64) V!2939) Unit!2002)

(assert (=> d!15847 (= lt!31533 (choose!397 lt!31424 (_1!1068 lt!31269) (_2!1068 lt!31269)))))

(declare-fun e!46608 () Bool)

(assert (=> d!15847 e!46608))

(declare-fun res!37962 () Bool)

(assert (=> d!15847 (=> (not res!37962) (not e!46608))))

(declare-fun isStrictlySorted!291 (List!1476) Bool)

(assert (=> d!15847 (= res!37962 (isStrictlySorted!291 lt!31424))))

(assert (=> d!15847 (= (lemmaContainsTupThenGetReturnValue!49 lt!31424 (_1!1068 lt!31269) (_2!1068 lt!31269)) lt!31533)))

(declare-fun b!71163 () Bool)

(declare-fun res!37963 () Bool)

(assert (=> b!71163 (=> (not res!37963) (not e!46608))))

(assert (=> b!71163 (= res!37963 (containsKey!136 lt!31424 (_1!1068 lt!31269)))))

(declare-fun b!71164 () Bool)

(assert (=> b!71164 (= e!46608 (contains!722 lt!31424 (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(assert (= (and d!15847 res!37962) b!71163))

(assert (= (and b!71163 res!37963) b!71164))

(assert (=> d!15847 m!68089))

(declare-fun m!68241 () Bool)

(assert (=> d!15847 m!68241))

(declare-fun m!68243 () Bool)

(assert (=> d!15847 m!68243))

(declare-fun m!68245 () Bool)

(assert (=> b!71163 m!68245))

(declare-fun m!68247 () Bool)

(assert (=> b!71164 m!68247))

(assert (=> d!15815 d!15847))

(declare-fun bm!6162 () Bool)

(declare-fun call!6167 () List!1476)

(declare-fun call!6165 () List!1476)

(assert (=> bm!6162 (= call!6167 call!6165)))

(declare-fun b!71185 () Bool)

(declare-fun e!46620 () List!1476)

(declare-fun call!6166 () List!1476)

(assert (=> b!71185 (= e!46620 call!6166)))

(declare-fun e!46619 () List!1476)

(declare-fun bm!6163 () Bool)

(declare-fun c!10345 () Bool)

(declare-fun $colon$colon!65 (List!1476 tuple2!2114) List!1476)

(assert (=> bm!6163 (= call!6165 ($colon$colon!65 e!46619 (ite c!10345 (h!2058 (toList!723 (+!93 lt!31270 lt!31265))) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269)))))))

(declare-fun c!10346 () Bool)

(assert (=> bm!6163 (= c!10346 c!10345)))

(declare-fun c!10343 () Bool)

(declare-fun b!71187 () Bool)

(assert (=> b!71187 (= c!10343 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 lt!31265))) (bvsgt (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 lt!31265)))) (_1!1068 lt!31269))))))

(declare-fun e!46623 () List!1476)

(assert (=> b!71187 (= e!46623 e!46620)))

(declare-fun b!71188 () Bool)

(assert (=> b!71188 (= e!46623 call!6167)))

(declare-fun b!71189 () Bool)

(assert (=> b!71189 (= e!46620 call!6166)))

(declare-fun b!71190 () Bool)

(declare-fun e!46622 () List!1476)

(assert (=> b!71190 (= e!46622 e!46623)))

(declare-fun c!10344 () Bool)

(assert (=> b!71190 (= c!10344 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 lt!31265))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 lt!31265)))) (_1!1068 lt!31269))))))

(declare-fun b!71191 () Bool)

(declare-fun res!37969 () Bool)

(declare-fun e!46621 () Bool)

(assert (=> b!71191 (=> (not res!37969) (not e!46621))))

(declare-fun lt!31536 () List!1476)

(assert (=> b!71191 (= res!37969 (containsKey!136 lt!31536 (_1!1068 lt!31269)))))

(declare-fun b!71192 () Bool)

(assert (=> b!71192 (= e!46621 (contains!722 lt!31536 (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun b!71193 () Bool)

(assert (=> b!71193 (= e!46619 (ite c!10344 (t!5012 (toList!723 (+!93 lt!31270 lt!31265))) (ite c!10343 (Cons!1472 (h!2058 (toList!723 (+!93 lt!31270 lt!31265))) (t!5012 (toList!723 (+!93 lt!31270 lt!31265)))) Nil!1473)))))

(declare-fun b!71186 () Bool)

(assert (=> b!71186 (= e!46622 call!6165)))

(declare-fun d!15849 () Bool)

(assert (=> d!15849 e!46621))

(declare-fun res!37968 () Bool)

(assert (=> d!15849 (=> (not res!37968) (not e!46621))))

(assert (=> d!15849 (= res!37968 (isStrictlySorted!291 lt!31536))))

(assert (=> d!15849 (= lt!31536 e!46622)))

(assert (=> d!15849 (= c!10345 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 lt!31265))) (bvslt (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 lt!31265)))) (_1!1068 lt!31269))))))

(assert (=> d!15849 (isStrictlySorted!291 (toList!723 (+!93 lt!31270 lt!31265)))))

(assert (=> d!15849 (= (insertStrictlySorted!52 (toList!723 (+!93 lt!31270 lt!31265)) (_1!1068 lt!31269) (_2!1068 lt!31269)) lt!31536)))

(declare-fun b!71194 () Bool)

(assert (=> b!71194 (= e!46619 (insertStrictlySorted!52 (t!5012 (toList!723 (+!93 lt!31270 lt!31265))) (_1!1068 lt!31269) (_2!1068 lt!31269)))))

(declare-fun bm!6164 () Bool)

(assert (=> bm!6164 (= call!6166 call!6167)))

(assert (= (and d!15849 c!10345) b!71186))

(assert (= (and d!15849 (not c!10345)) b!71190))

(assert (= (and b!71190 c!10344) b!71188))

(assert (= (and b!71190 (not c!10344)) b!71187))

(assert (= (and b!71187 c!10343) b!71185))

(assert (= (and b!71187 (not c!10343)) b!71189))

(assert (= (or b!71185 b!71189) bm!6164))

(assert (= (or b!71188 bm!6164) bm!6162))

(assert (= (or b!71186 bm!6162) bm!6163))

(assert (= (and bm!6163 c!10346) b!71194))

(assert (= (and bm!6163 (not c!10346)) b!71193))

(assert (= (and d!15849 res!37968) b!71191))

(assert (= (and b!71191 res!37969) b!71192))

(declare-fun m!68249 () Bool)

(assert (=> b!71191 m!68249))

(declare-fun m!68251 () Bool)

(assert (=> b!71194 m!68251))

(declare-fun m!68253 () Bool)

(assert (=> b!71192 m!68253))

(declare-fun m!68255 () Bool)

(assert (=> bm!6163 m!68255))

(declare-fun m!68257 () Bool)

(assert (=> d!15849 m!68257))

(declare-fun m!68259 () Bool)

(assert (=> d!15849 m!68259))

(assert (=> d!15815 d!15849))

(declare-fun d!15851 () Bool)

(declare-fun e!46626 () Bool)

(assert (=> d!15851 e!46626))

(declare-fun res!37972 () Bool)

(assert (=> d!15851 (=> (not res!37972) (not e!46626))))

(assert (=> d!15851 (= res!37972 (and (bvsge (index!3071 lt!31406) #b00000000000000000000000000000000) (bvslt (index!3071 lt!31406) (size!2090 (_keys!3840 newMap!16)))))))

(declare-fun lt!31539 () Unit!2002)

(declare-fun choose!398 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) Int) Unit!2002)

(assert (=> d!15851 (= lt!31539 (choose!398 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3071 lt!31406) (defaultEntry!2192 newMap!16)))))

(assert (=> d!15851 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15851 (= (lemmaValidKeyInArrayIsInListMap!84 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3071 lt!31406) (defaultEntry!2192 newMap!16)) lt!31539)))

(declare-fun b!71197 () Bool)

(assert (=> b!71197 (= e!46626 (contains!719 (getCurrentListMap!421 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))))))

(assert (= (and d!15851 res!37972) b!71197))

(declare-fun m!68261 () Bool)

(assert (=> d!15851 m!68261))

(declare-fun m!68263 () Bool)

(assert (=> d!15851 m!68263))

(declare-fun m!68265 () Bool)

(assert (=> b!71197 m!68265))

(assert (=> b!71197 m!68043))

(assert (=> b!71197 m!68265))

(assert (=> b!71197 m!68043))

(declare-fun m!68267 () Bool)

(assert (=> b!71197 m!68267))

(assert (=> b!70975 d!15851))

(declare-fun d!15853 () Bool)

(declare-fun e!46629 () Bool)

(assert (=> d!15853 e!46629))

(declare-fun res!37975 () Bool)

(assert (=> d!15853 (=> (not res!37975) (not e!46629))))

(assert (=> d!15853 (= res!37975 (and (bvsge (index!3071 lt!31406) #b00000000000000000000000000000000) (bvslt (index!3071 lt!31406) (size!2091 (_values!2175 newMap!16)))))))

(declare-fun lt!31542 () Unit!2002)

(declare-fun choose!399 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) (_ BitVec 64) V!2939 Int) Unit!2002)

(assert (=> d!15853 (= lt!31542 (choose!399 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3071 lt!31406) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 (defaultEntry!2192 newMap!16)))))

(assert (=> d!15853 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15853 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3071 lt!31406) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 (defaultEntry!2192 newMap!16)) lt!31542)))

(declare-fun b!71200 () Bool)

(assert (=> b!71200 (= e!46629 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (getCurrentListMap!421 (_keys!3840 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))))))

(assert (= (and d!15853 res!37975) b!71200))

(assert (=> d!15853 m!67893))

(declare-fun m!68269 () Bool)

(assert (=> d!15853 m!68269))

(assert (=> d!15853 m!68263))

(assert (=> b!71200 m!68051))

(assert (=> b!71200 m!68051))

(declare-fun m!68271 () Bool)

(assert (=> b!71200 m!68271))

(assert (=> b!71200 m!68039))

(declare-fun m!68273 () Bool)

(assert (=> b!71200 m!68273))

(assert (=> b!70975 d!15853))

(declare-fun d!15855 () Bool)

(declare-fun e!46630 () Bool)

(assert (=> d!15855 e!46630))

(declare-fun res!37976 () Bool)

(assert (=> d!15855 (=> res!37976 e!46630)))

(declare-fun lt!31545 () Bool)

(assert (=> d!15855 (= res!37976 (not lt!31545))))

(declare-fun lt!31544 () Bool)

(assert (=> d!15855 (= lt!31545 lt!31544)))

(declare-fun lt!31543 () Unit!2002)

(declare-fun e!46631 () Unit!2002)

(assert (=> d!15855 (= lt!31543 e!46631)))

(declare-fun c!10347 () Bool)

(assert (=> d!15855 (= c!10347 lt!31544)))

(assert (=> d!15855 (= lt!31544 (containsKey!136 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!15855 (= (contains!719 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) lt!31545)))

(declare-fun b!71201 () Bool)

(declare-fun lt!31546 () Unit!2002)

(assert (=> b!71201 (= e!46631 lt!31546)))

(assert (=> b!71201 (= lt!31546 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> b!71201 (isDefined!85 (getValueByKey!132 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!71202 () Bool)

(declare-fun Unit!2013 () Unit!2002)

(assert (=> b!71202 (= e!46631 Unit!2013)))

(declare-fun b!71203 () Bool)

(assert (=> b!71203 (= e!46630 (isDefined!85 (getValueByKey!132 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (= (and d!15855 c!10347) b!71201))

(assert (= (and d!15855 (not c!10347)) b!71202))

(assert (= (and d!15855 (not res!37976)) b!71203))

(assert (=> d!15855 m!67893))

(declare-fun m!68275 () Bool)

(assert (=> d!15855 m!68275))

(assert (=> b!71201 m!67893))

(declare-fun m!68277 () Bool)

(assert (=> b!71201 m!68277))

(assert (=> b!71201 m!67893))

(declare-fun m!68279 () Bool)

(assert (=> b!71201 m!68279))

(assert (=> b!71201 m!68279))

(declare-fun m!68281 () Bool)

(assert (=> b!71201 m!68281))

(assert (=> b!71203 m!67893))

(assert (=> b!71203 m!68279))

(assert (=> b!71203 m!68279))

(assert (=> b!71203 m!68281))

(assert (=> b!70975 d!15855))

(declare-fun b!71204 () Bool)

(declare-fun c!10349 () Bool)

(assert (=> b!71204 (= c!10349 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46641 () ListLongMap!1415)

(declare-fun e!46639 () ListLongMap!1415)

(assert (=> b!71204 (= e!46641 e!46639)))

(declare-fun b!71205 () Bool)

(declare-fun e!46637 () Bool)

(declare-fun e!46632 () Bool)

(assert (=> b!71205 (= e!46637 e!46632)))

(declare-fun res!37984 () Bool)

(declare-fun call!6170 () Bool)

(assert (=> b!71205 (= res!37984 call!6170)))

(assert (=> b!71205 (=> (not res!37984) (not e!46632))))

(declare-fun b!71206 () Bool)

(declare-fun e!46634 () Bool)

(declare-fun lt!31564 () ListLongMap!1415)

(assert (=> b!71206 (= e!46634 (= (apply!74 lt!31564 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!71207 () Bool)

(declare-fun e!46638 () Bool)

(assert (=> b!71207 (= e!46638 e!46634)))

(declare-fun res!37983 () Bool)

(declare-fun call!6168 () Bool)

(assert (=> b!71207 (= res!37983 call!6168)))

(assert (=> b!71207 (=> (not res!37983) (not e!46634))))

(declare-fun bm!6165 () Bool)

(assert (=> bm!6165 (= call!6170 (contains!719 lt!31564 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6166 () Bool)

(declare-fun call!6171 () ListLongMap!1415)

(declare-fun call!6172 () ListLongMap!1415)

(assert (=> bm!6166 (= call!6171 call!6172)))

(declare-fun b!71209 () Bool)

(declare-fun call!6174 () ListLongMap!1415)

(assert (=> b!71209 (= e!46639 call!6174)))

(declare-fun b!71210 () Bool)

(declare-fun e!46644 () Bool)

(assert (=> b!71210 (= e!46644 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6167 () Bool)

(declare-fun call!6169 () ListLongMap!1415)

(declare-fun call!6173 () ListLongMap!1415)

(assert (=> bm!6167 (= call!6169 call!6173)))

(declare-fun b!71211 () Bool)

(declare-fun e!46640 () Unit!2002)

(declare-fun lt!31567 () Unit!2002)

(assert (=> b!71211 (= e!46640 lt!31567)))

(declare-fun lt!31556 () ListLongMap!1415)

(assert (=> b!71211 (= lt!31556 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31565 () (_ BitVec 64))

(assert (=> b!71211 (= lt!31565 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31550 () (_ BitVec 64))

(assert (=> b!71211 (= lt!31550 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31562 () Unit!2002)

(assert (=> b!71211 (= lt!31562 (addStillContains!50 lt!31556 lt!31565 (zeroValue!2096 newMap!16) lt!31550))))

(assert (=> b!71211 (contains!719 (+!93 lt!31556 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16))) lt!31550)))

(declare-fun lt!31568 () Unit!2002)

(assert (=> b!71211 (= lt!31568 lt!31562)))

(declare-fun lt!31549 () ListLongMap!1415)

(assert (=> b!71211 (= lt!31549 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31555 () (_ BitVec 64))

(assert (=> b!71211 (= lt!31555 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31559 () (_ BitVec 64))

(assert (=> b!71211 (= lt!31559 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31561 () Unit!2002)

(assert (=> b!71211 (= lt!31561 (addApplyDifferent!50 lt!31549 lt!31555 (minValue!2096 newMap!16) lt!31559))))

(assert (=> b!71211 (= (apply!74 (+!93 lt!31549 (tuple2!2115 lt!31555 (minValue!2096 newMap!16))) lt!31559) (apply!74 lt!31549 lt!31559))))

(declare-fun lt!31566 () Unit!2002)

(assert (=> b!71211 (= lt!31566 lt!31561)))

(declare-fun lt!31563 () ListLongMap!1415)

(assert (=> b!71211 (= lt!31563 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31557 () (_ BitVec 64))

(assert (=> b!71211 (= lt!31557 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31551 () (_ BitVec 64))

(assert (=> b!71211 (= lt!31551 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31554 () Unit!2002)

(assert (=> b!71211 (= lt!31554 (addApplyDifferent!50 lt!31563 lt!31557 (zeroValue!2096 newMap!16) lt!31551))))

(assert (=> b!71211 (= (apply!74 (+!93 lt!31563 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16))) lt!31551) (apply!74 lt!31563 lt!31551))))

(declare-fun lt!31558 () Unit!2002)

(assert (=> b!71211 (= lt!31558 lt!31554)))

(declare-fun lt!31553 () ListLongMap!1415)

(assert (=> b!71211 (= lt!31553 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31548 () (_ BitVec 64))

(assert (=> b!71211 (= lt!31548 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31552 () (_ BitVec 64))

(assert (=> b!71211 (= lt!31552 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71211 (= lt!31567 (addApplyDifferent!50 lt!31553 lt!31548 (minValue!2096 newMap!16) lt!31552))))

(assert (=> b!71211 (= (apply!74 (+!93 lt!31553 (tuple2!2115 lt!31548 (minValue!2096 newMap!16))) lt!31552) (apply!74 lt!31553 lt!31552))))

(declare-fun b!71212 () Bool)

(declare-fun e!46642 () Bool)

(declare-fun e!46633 () Bool)

(assert (=> b!71212 (= e!46642 e!46633)))

(declare-fun res!37982 () Bool)

(assert (=> b!71212 (=> (not res!37982) (not e!46633))))

(assert (=> b!71212 (= res!37982 (contains!719 lt!31564 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71212 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71213 () Bool)

(assert (=> b!71213 (= e!46638 (not call!6168))))

(declare-fun b!71214 () Bool)

(declare-fun e!46643 () Bool)

(assert (=> b!71214 (= e!46643 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71215 () Bool)

(assert (=> b!71215 (= e!46641 call!6169)))

(declare-fun b!71216 () Bool)

(declare-fun e!46636 () ListLongMap!1415)

(assert (=> b!71216 (= e!46636 e!46641)))

(declare-fun c!10351 () Bool)

(assert (=> b!71216 (= c!10351 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6168 () Bool)

(assert (=> bm!6168 (= call!6168 (contains!719 lt!31564 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71217 () Bool)

(assert (=> b!71217 (= e!46633 (= (apply!74 lt!31564 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71217 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (_values!2175 newMap!16))))))

(assert (=> b!71217 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71208 () Bool)

(assert (=> b!71208 (= e!46637 (not call!6170))))

(declare-fun d!15857 () Bool)

(declare-fun e!46635 () Bool)

(assert (=> d!15857 e!46635))

(declare-fun res!37980 () Bool)

(assert (=> d!15857 (=> (not res!37980) (not e!46635))))

(assert (=> d!15857 (= res!37980 (or (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))))

(declare-fun lt!31547 () ListLongMap!1415)

(assert (=> d!15857 (= lt!31564 lt!31547)))

(declare-fun lt!31560 () Unit!2002)

(assert (=> d!15857 (= lt!31560 e!46640)))

(declare-fun c!10352 () Bool)

(assert (=> d!15857 (= c!10352 e!46644)))

(declare-fun res!37985 () Bool)

(assert (=> d!15857 (=> (not res!37985) (not e!46644))))

(assert (=> d!15857 (= res!37985 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!15857 (= lt!31547 e!46636)))

(declare-fun c!10353 () Bool)

(assert (=> d!15857 (= c!10353 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15857 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15857 (= (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31564)))

(declare-fun b!71218 () Bool)

(declare-fun Unit!2014 () Unit!2002)

(assert (=> b!71218 (= e!46640 Unit!2014)))

(declare-fun b!71219 () Bool)

(assert (=> b!71219 (= e!46632 (= (apply!74 lt!31564 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun bm!6169 () Bool)

(assert (=> bm!6169 (= call!6173 (+!93 (ite c!10353 call!6172 (ite c!10351 call!6171 call!6174)) (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun b!71220 () Bool)

(declare-fun res!37981 () Bool)

(assert (=> b!71220 (=> (not res!37981) (not e!46635))))

(assert (=> b!71220 (= res!37981 e!46638)))

(declare-fun c!10350 () Bool)

(assert (=> b!71220 (= c!10350 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6170 () Bool)

(assert (=> bm!6170 (= call!6172 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!71221 () Bool)

(assert (=> b!71221 (= e!46636 (+!93 call!6173 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun bm!6171 () Bool)

(assert (=> bm!6171 (= call!6174 call!6171)))

(declare-fun b!71222 () Bool)

(assert (=> b!71222 (= e!46639 call!6169)))

(declare-fun b!71223 () Bool)

(declare-fun res!37978 () Bool)

(assert (=> b!71223 (=> (not res!37978) (not e!46635))))

(assert (=> b!71223 (= res!37978 e!46642)))

(declare-fun res!37979 () Bool)

(assert (=> b!71223 (=> res!37979 e!46642)))

(assert (=> b!71223 (= res!37979 (not e!46643))))

(declare-fun res!37977 () Bool)

(assert (=> b!71223 (=> (not res!37977) (not e!46643))))

(assert (=> b!71223 (= res!37977 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71224 () Bool)

(assert (=> b!71224 (= e!46635 e!46637)))

(declare-fun c!10348 () Bool)

(assert (=> b!71224 (= c!10348 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!15857 c!10353) b!71221))

(assert (= (and d!15857 (not c!10353)) b!71216))

(assert (= (and b!71216 c!10351) b!71215))

(assert (= (and b!71216 (not c!10351)) b!71204))

(assert (= (and b!71204 c!10349) b!71222))

(assert (= (and b!71204 (not c!10349)) b!71209))

(assert (= (or b!71222 b!71209) bm!6171))

(assert (= (or b!71215 bm!6171) bm!6166))

(assert (= (or b!71215 b!71222) bm!6167))

(assert (= (or b!71221 bm!6166) bm!6170))

(assert (= (or b!71221 bm!6167) bm!6169))

(assert (= (and d!15857 res!37985) b!71210))

(assert (= (and d!15857 c!10352) b!71211))

(assert (= (and d!15857 (not c!10352)) b!71218))

(assert (= (and d!15857 res!37980) b!71223))

(assert (= (and b!71223 res!37977) b!71214))

(assert (= (and b!71223 (not res!37979)) b!71212))

(assert (= (and b!71212 res!37982) b!71217))

(assert (= (and b!71223 res!37978) b!71220))

(assert (= (and b!71220 c!10350) b!71207))

(assert (= (and b!71220 (not c!10350)) b!71213))

(assert (= (and b!71207 res!37983) b!71206))

(assert (= (or b!71207 b!71213) bm!6168))

(assert (= (and b!71220 res!37981) b!71224))

(assert (= (and b!71224 c!10348) b!71205))

(assert (= (and b!71224 (not c!10348)) b!71208))

(assert (= (and b!71205 res!37984) b!71219))

(assert (= (or b!71205 b!71208) bm!6165))

(declare-fun b_lambda!3195 () Bool)

(assert (=> (not b_lambda!3195) (not b!71217)))

(declare-fun t!5019 () Bool)

(declare-fun tb!1517 () Bool)

(assert (=> (and b!70773 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16)) t!5019) tb!1517))

(declare-fun result!2665 () Bool)

(assert (=> tb!1517 (= result!2665 tp_is_empty!2469)))

(assert (=> b!71217 t!5019))

(declare-fun b_and!4387 () Bool)

(assert (= b_and!4383 (and (=> t!5019 result!2665) b_and!4387)))

(declare-fun t!5021 () Bool)

(declare-fun tb!1519 () Bool)

(assert (=> (and b!70762 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 newMap!16)) t!5021) tb!1519))

(declare-fun result!2667 () Bool)

(assert (= result!2667 result!2665))

(assert (=> b!71217 t!5021))

(declare-fun b_and!4389 () Bool)

(assert (= b_and!4385 (and (=> t!5021 result!2667) b_and!4389)))

(declare-fun m!68283 () Bool)

(assert (=> b!71212 m!68283))

(assert (=> b!71212 m!68283))

(declare-fun m!68285 () Bool)

(assert (=> b!71212 m!68285))

(declare-fun m!68287 () Bool)

(assert (=> b!71217 m!68287))

(assert (=> b!71217 m!68283))

(declare-fun m!68289 () Bool)

(assert (=> b!71217 m!68289))

(assert (=> b!71217 m!68283))

(declare-fun m!68291 () Bool)

(assert (=> b!71217 m!68291))

(assert (=> b!71217 m!68291))

(assert (=> b!71217 m!68287))

(declare-fun m!68293 () Bool)

(assert (=> b!71217 m!68293))

(declare-fun m!68295 () Bool)

(assert (=> bm!6170 m!68295))

(assert (=> b!71210 m!68283))

(assert (=> b!71210 m!68283))

(declare-fun m!68297 () Bool)

(assert (=> b!71210 m!68297))

(declare-fun m!68299 () Bool)

(assert (=> b!71206 m!68299))

(declare-fun m!68301 () Bool)

(assert (=> bm!6169 m!68301))

(declare-fun m!68303 () Bool)

(assert (=> b!71219 m!68303))

(declare-fun m!68305 () Bool)

(assert (=> b!71221 m!68305))

(assert (=> d!15857 m!68263))

(declare-fun m!68307 () Bool)

(assert (=> bm!6165 m!68307))

(declare-fun m!68309 () Bool)

(assert (=> b!71211 m!68309))

(declare-fun m!68311 () Bool)

(assert (=> b!71211 m!68311))

(declare-fun m!68313 () Bool)

(assert (=> b!71211 m!68313))

(declare-fun m!68315 () Bool)

(assert (=> b!71211 m!68315))

(assert (=> b!71211 m!68309))

(declare-fun m!68317 () Bool)

(assert (=> b!71211 m!68317))

(declare-fun m!68319 () Bool)

(assert (=> b!71211 m!68319))

(declare-fun m!68321 () Bool)

(assert (=> b!71211 m!68321))

(declare-fun m!68323 () Bool)

(assert (=> b!71211 m!68323))

(assert (=> b!71211 m!68283))

(declare-fun m!68325 () Bool)

(assert (=> b!71211 m!68325))

(assert (=> b!71211 m!68295))

(assert (=> b!71211 m!68311))

(declare-fun m!68327 () Bool)

(assert (=> b!71211 m!68327))

(declare-fun m!68329 () Bool)

(assert (=> b!71211 m!68329))

(assert (=> b!71211 m!68323))

(declare-fun m!68331 () Bool)

(assert (=> b!71211 m!68331))

(declare-fun m!68333 () Bool)

(assert (=> b!71211 m!68333))

(declare-fun m!68335 () Bool)

(assert (=> b!71211 m!68335))

(assert (=> b!71211 m!68333))

(declare-fun m!68337 () Bool)

(assert (=> b!71211 m!68337))

(declare-fun m!68339 () Bool)

(assert (=> bm!6168 m!68339))

(assert (=> b!71214 m!68283))

(assert (=> b!71214 m!68283))

(assert (=> b!71214 m!68297))

(assert (=> b!70975 d!15857))

(declare-fun b!71228 () Bool)

(declare-fun e!46646 () Option!138)

(assert (=> b!71228 (= e!46646 None!136)))

(declare-fun b!71226 () Bool)

(declare-fun e!46645 () Option!138)

(assert (=> b!71226 (= e!46645 e!46646)))

(declare-fun c!10355 () Bool)

(assert (=> b!71226 (= c!10355 (and ((_ is Cons!1472) (toList!723 lt!31452)) (not (= (_1!1068 (h!2058 (toList!723 lt!31452))) (_1!1068 lt!31265)))))))

(declare-fun b!71225 () Bool)

(assert (=> b!71225 (= e!46645 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31452)))))))

(declare-fun d!15859 () Bool)

(declare-fun c!10354 () Bool)

(assert (=> d!15859 (= c!10354 (and ((_ is Cons!1472) (toList!723 lt!31452)) (= (_1!1068 (h!2058 (toList!723 lt!31452))) (_1!1068 lt!31265))))))

(assert (=> d!15859 (= (getValueByKey!132 (toList!723 lt!31452) (_1!1068 lt!31265)) e!46645)))

(declare-fun b!71227 () Bool)

(assert (=> b!71227 (= e!46646 (getValueByKey!132 (t!5012 (toList!723 lt!31452)) (_1!1068 lt!31265)))))

(assert (= (and d!15859 c!10354) b!71225))

(assert (= (and d!15859 (not c!10354)) b!71226))

(assert (= (and b!71226 c!10355) b!71227))

(assert (= (and b!71226 (not c!10355)) b!71228))

(declare-fun m!68341 () Bool)

(assert (=> b!71227 m!68341))

(assert (=> b!71054 d!15859))

(declare-fun d!15861 () Bool)

(declare-fun e!46647 () Bool)

(assert (=> d!15861 e!46647))

(declare-fun res!37986 () Bool)

(assert (=> d!15861 (=> res!37986 e!46647)))

(declare-fun lt!31571 () Bool)

(assert (=> d!15861 (= res!37986 (not lt!31571))))

(declare-fun lt!31570 () Bool)

(assert (=> d!15861 (= lt!31571 lt!31570)))

(declare-fun lt!31569 () Unit!2002)

(declare-fun e!46648 () Unit!2002)

(assert (=> d!15861 (= lt!31569 e!46648)))

(declare-fun c!10356 () Bool)

(assert (=> d!15861 (= c!10356 lt!31570)))

(assert (=> d!15861 (= lt!31570 (containsKey!136 (toList!723 lt!31459) (_1!1068 lt!31265)))))

(assert (=> d!15861 (= (contains!719 lt!31459 (_1!1068 lt!31265)) lt!31571)))

(declare-fun b!71229 () Bool)

(declare-fun lt!31572 () Unit!2002)

(assert (=> b!71229 (= e!46648 lt!31572)))

(assert (=> b!71229 (= lt!31572 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31459) (_1!1068 lt!31265)))))

(assert (=> b!71229 (isDefined!85 (getValueByKey!132 (toList!723 lt!31459) (_1!1068 lt!31265)))))

(declare-fun b!71230 () Bool)

(declare-fun Unit!2015 () Unit!2002)

(assert (=> b!71230 (= e!46648 Unit!2015)))

(declare-fun b!71231 () Bool)

(assert (=> b!71231 (= e!46647 (isDefined!85 (getValueByKey!132 (toList!723 lt!31459) (_1!1068 lt!31265))))))

(assert (= (and d!15861 c!10356) b!71229))

(assert (= (and d!15861 (not c!10356)) b!71230))

(assert (= (and d!15861 (not res!37986)) b!71231))

(declare-fun m!68343 () Bool)

(assert (=> d!15861 m!68343))

(declare-fun m!68345 () Bool)

(assert (=> b!71229 m!68345))

(assert (=> b!71229 m!68167))

(assert (=> b!71229 m!68167))

(declare-fun m!68347 () Bool)

(assert (=> b!71229 m!68347))

(assert (=> b!71231 m!68167))

(assert (=> b!71231 m!68167))

(assert (=> b!71231 m!68347))

(assert (=> d!15825 d!15861))

(declare-fun b!71235 () Bool)

(declare-fun e!46650 () Option!138)

(assert (=> b!71235 (= e!46650 None!136)))

(declare-fun b!71233 () Bool)

(declare-fun e!46649 () Option!138)

(assert (=> b!71233 (= e!46649 e!46650)))

(declare-fun c!10358 () Bool)

(assert (=> b!71233 (= c!10358 (and ((_ is Cons!1472) lt!31460) (not (= (_1!1068 (h!2058 lt!31460)) (_1!1068 lt!31265)))))))

(declare-fun b!71232 () Bool)

(assert (=> b!71232 (= e!46649 (Some!137 (_2!1068 (h!2058 lt!31460))))))

(declare-fun d!15863 () Bool)

(declare-fun c!10357 () Bool)

(assert (=> d!15863 (= c!10357 (and ((_ is Cons!1472) lt!31460) (= (_1!1068 (h!2058 lt!31460)) (_1!1068 lt!31265))))))

(assert (=> d!15863 (= (getValueByKey!132 lt!31460 (_1!1068 lt!31265)) e!46649)))

(declare-fun b!71234 () Bool)

(assert (=> b!71234 (= e!46650 (getValueByKey!132 (t!5012 lt!31460) (_1!1068 lt!31265)))))

(assert (= (and d!15863 c!10357) b!71232))

(assert (= (and d!15863 (not c!10357)) b!71233))

(assert (= (and b!71233 c!10358) b!71234))

(assert (= (and b!71233 (not c!10358)) b!71235))

(declare-fun m!68349 () Bool)

(assert (=> b!71234 m!68349))

(assert (=> d!15825 d!15863))

(declare-fun d!15865 () Bool)

(assert (=> d!15865 (= (getValueByKey!132 lt!31460 (_1!1068 lt!31265)) (Some!137 (_2!1068 lt!31265)))))

(declare-fun lt!31573 () Unit!2002)

(assert (=> d!15865 (= lt!31573 (choose!397 lt!31460 (_1!1068 lt!31265) (_2!1068 lt!31265)))))

(declare-fun e!46651 () Bool)

(assert (=> d!15865 e!46651))

(declare-fun res!37987 () Bool)

(assert (=> d!15865 (=> (not res!37987) (not e!46651))))

(assert (=> d!15865 (= res!37987 (isStrictlySorted!291 lt!31460))))

(assert (=> d!15865 (= (lemmaContainsTupThenGetReturnValue!49 lt!31460 (_1!1068 lt!31265) (_2!1068 lt!31265)) lt!31573)))

(declare-fun b!71236 () Bool)

(declare-fun res!37988 () Bool)

(assert (=> b!71236 (=> (not res!37988) (not e!46651))))

(assert (=> b!71236 (= res!37988 (containsKey!136 lt!31460 (_1!1068 lt!31265)))))

(declare-fun b!71237 () Bool)

(assert (=> b!71237 (= e!46651 (contains!722 lt!31460 (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(assert (= (and d!15865 res!37987) b!71236))

(assert (= (and b!71236 res!37988) b!71237))

(assert (=> d!15865 m!68161))

(declare-fun m!68351 () Bool)

(assert (=> d!15865 m!68351))

(declare-fun m!68353 () Bool)

(assert (=> d!15865 m!68353))

(declare-fun m!68355 () Bool)

(assert (=> b!71236 m!68355))

(declare-fun m!68357 () Bool)

(assert (=> b!71237 m!68357))

(assert (=> d!15825 d!15865))

(declare-fun bm!6172 () Bool)

(declare-fun call!6177 () List!1476)

(declare-fun call!6175 () List!1476)

(assert (=> bm!6172 (= call!6177 call!6175)))

(declare-fun b!71238 () Bool)

(declare-fun e!46653 () List!1476)

(declare-fun call!6176 () List!1476)

(assert (=> b!71238 (= e!46653 call!6176)))

(declare-fun c!10361 () Bool)

(declare-fun bm!6173 () Bool)

(declare-fun e!46652 () List!1476)

(assert (=> bm!6173 (= call!6175 ($colon$colon!65 e!46652 (ite c!10361 (h!2058 (toList!723 (+!93 lt!31270 lt!31269))) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265)))))))

(declare-fun c!10362 () Bool)

(assert (=> bm!6173 (= c!10362 c!10361)))

(declare-fun c!10359 () Bool)

(declare-fun b!71240 () Bool)

(assert (=> b!71240 (= c!10359 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 lt!31269))) (bvsgt (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 lt!31269)))) (_1!1068 lt!31265))))))

(declare-fun e!46656 () List!1476)

(assert (=> b!71240 (= e!46656 e!46653)))

(declare-fun b!71241 () Bool)

(assert (=> b!71241 (= e!46656 call!6177)))

(declare-fun b!71242 () Bool)

(assert (=> b!71242 (= e!46653 call!6176)))

(declare-fun b!71243 () Bool)

(declare-fun e!46655 () List!1476)

(assert (=> b!71243 (= e!46655 e!46656)))

(declare-fun c!10360 () Bool)

(assert (=> b!71243 (= c!10360 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 lt!31269))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 lt!31269)))) (_1!1068 lt!31265))))))

(declare-fun b!71244 () Bool)

(declare-fun res!37990 () Bool)

(declare-fun e!46654 () Bool)

(assert (=> b!71244 (=> (not res!37990) (not e!46654))))

(declare-fun lt!31574 () List!1476)

(assert (=> b!71244 (= res!37990 (containsKey!136 lt!31574 (_1!1068 lt!31265)))))

(declare-fun b!71245 () Bool)

(assert (=> b!71245 (= e!46654 (contains!722 lt!31574 (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun b!71246 () Bool)

(assert (=> b!71246 (= e!46652 (ite c!10360 (t!5012 (toList!723 (+!93 lt!31270 lt!31269))) (ite c!10359 (Cons!1472 (h!2058 (toList!723 (+!93 lt!31270 lt!31269))) (t!5012 (toList!723 (+!93 lt!31270 lt!31269)))) Nil!1473)))))

(declare-fun b!71239 () Bool)

(assert (=> b!71239 (= e!46655 call!6175)))

(declare-fun d!15867 () Bool)

(assert (=> d!15867 e!46654))

(declare-fun res!37989 () Bool)

(assert (=> d!15867 (=> (not res!37989) (not e!46654))))

(assert (=> d!15867 (= res!37989 (isStrictlySorted!291 lt!31574))))

(assert (=> d!15867 (= lt!31574 e!46655)))

(assert (=> d!15867 (= c!10361 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 lt!31269))) (bvslt (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 lt!31269)))) (_1!1068 lt!31265))))))

(assert (=> d!15867 (isStrictlySorted!291 (toList!723 (+!93 lt!31270 lt!31269)))))

(assert (=> d!15867 (= (insertStrictlySorted!52 (toList!723 (+!93 lt!31270 lt!31269)) (_1!1068 lt!31265) (_2!1068 lt!31265)) lt!31574)))

(declare-fun b!71247 () Bool)

(assert (=> b!71247 (= e!46652 (insertStrictlySorted!52 (t!5012 (toList!723 (+!93 lt!31270 lt!31269))) (_1!1068 lt!31265) (_2!1068 lt!31265)))))

(declare-fun bm!6174 () Bool)

(assert (=> bm!6174 (= call!6176 call!6177)))

(assert (= (and d!15867 c!10361) b!71239))

(assert (= (and d!15867 (not c!10361)) b!71243))

(assert (= (and b!71243 c!10360) b!71241))

(assert (= (and b!71243 (not c!10360)) b!71240))

(assert (= (and b!71240 c!10359) b!71238))

(assert (= (and b!71240 (not c!10359)) b!71242))

(assert (= (or b!71238 b!71242) bm!6174))

(assert (= (or b!71241 bm!6174) bm!6172))

(assert (= (or b!71239 bm!6172) bm!6173))

(assert (= (and bm!6173 c!10362) b!71247))

(assert (= (and bm!6173 (not c!10362)) b!71246))

(assert (= (and d!15867 res!37989) b!71244))

(assert (= (and b!71244 res!37990) b!71245))

(declare-fun m!68359 () Bool)

(assert (=> b!71244 m!68359))

(declare-fun m!68361 () Bool)

(assert (=> b!71247 m!68361))

(declare-fun m!68363 () Bool)

(assert (=> b!71245 m!68363))

(declare-fun m!68365 () Bool)

(assert (=> bm!6173 m!68365))

(declare-fun m!68367 () Bool)

(assert (=> d!15867 m!68367))

(declare-fun m!68369 () Bool)

(assert (=> d!15867 m!68369))

(assert (=> d!15825 d!15867))

(declare-fun d!15869 () Bool)

(assert (=> d!15869 (= (inRange!0 (ite c!10290 (ite c!10295 (index!3071 lt!31400) (ite c!10285 (index!3070 lt!31396) (index!3073 lt!31396))) (ite c!10283 (index!3071 lt!31403) (ite c!10282 (index!3070 lt!31407) (index!3073 lt!31407)))) (mask!6149 newMap!16)) (and (bvsge (ite c!10290 (ite c!10295 (index!3071 lt!31400) (ite c!10285 (index!3070 lt!31396) (index!3073 lt!31396))) (ite c!10283 (index!3071 lt!31403) (ite c!10282 (index!3070 lt!31407) (index!3073 lt!31407)))) #b00000000000000000000000000000000) (bvslt (ite c!10290 (ite c!10295 (index!3071 lt!31400) (ite c!10285 (index!3070 lt!31396) (index!3073 lt!31396))) (ite c!10283 (index!3071 lt!31403) (ite c!10282 (index!3070 lt!31407) (index!3073 lt!31407)))) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6124 d!15869))

(declare-fun d!15871 () Bool)

(declare-fun e!46657 () Bool)

(assert (=> d!15871 e!46657))

(declare-fun res!37991 () Bool)

(assert (=> d!15871 (=> (not res!37991) (not e!46657))))

(declare-fun lt!31577 () ListLongMap!1415)

(assert (=> d!15871 (= res!37991 (contains!719 lt!31577 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!31578 () List!1476)

(assert (=> d!15871 (= lt!31577 (ListLongMap!1416 lt!31578))))

(declare-fun lt!31576 () Unit!2002)

(declare-fun lt!31575 () Unit!2002)

(assert (=> d!15871 (= lt!31576 lt!31575)))

(assert (=> d!15871 (= (getValueByKey!132 lt!31578 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15871 (= lt!31575 (lemmaContainsTupThenGetReturnValue!49 lt!31578 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15871 (= lt!31578 (insertStrictlySorted!52 (toList!723 lt!31270) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15871 (= (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31577)))

(declare-fun b!71248 () Bool)

(declare-fun res!37992 () Bool)

(assert (=> b!71248 (=> (not res!37992) (not e!46657))))

(assert (=> b!71248 (= res!37992 (= (getValueByKey!132 (toList!723 lt!31577) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71249 () Bool)

(assert (=> b!71249 (= e!46657 (contains!722 (toList!723 lt!31577) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!15871 res!37991) b!71248))

(assert (= (and b!71248 res!37992) b!71249))

(declare-fun m!68371 () Bool)

(assert (=> d!15871 m!68371))

(declare-fun m!68373 () Bool)

(assert (=> d!15871 m!68373))

(declare-fun m!68375 () Bool)

(assert (=> d!15871 m!68375))

(declare-fun m!68377 () Bool)

(assert (=> d!15871 m!68377))

(declare-fun m!68379 () Bool)

(assert (=> b!71248 m!68379))

(declare-fun m!68381 () Bool)

(assert (=> b!71249 m!68381))

(assert (=> d!15823 d!15871))

(declare-fun d!15873 () Bool)

(declare-fun e!46658 () Bool)

(assert (=> d!15873 e!46658))

(declare-fun res!37993 () Bool)

(assert (=> d!15873 (=> (not res!37993) (not e!46658))))

(declare-fun lt!31581 () ListLongMap!1415)

(assert (=> d!15873 (= res!37993 (contains!719 lt!31581 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun lt!31582 () List!1476)

(assert (=> d!15873 (= lt!31581 (ListLongMap!1416 lt!31582))))

(declare-fun lt!31580 () Unit!2002)

(declare-fun lt!31579 () Unit!2002)

(assert (=> d!15873 (= lt!31580 lt!31579)))

(assert (=> d!15873 (= (getValueByKey!132 lt!31582 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!15873 (= lt!31579 (lemmaContainsTupThenGetReturnValue!49 lt!31582 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!15873 (= lt!31582 (insertStrictlySorted!52 (toList!723 lt!31270) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!15873 (= (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) lt!31581)))

(declare-fun b!71250 () Bool)

(declare-fun res!37994 () Bool)

(assert (=> b!71250 (=> (not res!37994) (not e!46658))))

(assert (=> b!71250 (= res!37994 (= (getValueByKey!132 (toList!723 lt!31581) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!71251 () Bool)

(assert (=> b!71251 (= e!46658 (contains!722 (toList!723 lt!31581) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(assert (= (and d!15873 res!37993) b!71250))

(assert (= (and b!71250 res!37994) b!71251))

(declare-fun m!68383 () Bool)

(assert (=> d!15873 m!68383))

(declare-fun m!68385 () Bool)

(assert (=> d!15873 m!68385))

(declare-fun m!68387 () Bool)

(assert (=> d!15873 m!68387))

(declare-fun m!68389 () Bool)

(assert (=> d!15873 m!68389))

(declare-fun m!68391 () Bool)

(assert (=> b!71250 m!68391))

(declare-fun m!68393 () Bool)

(assert (=> b!71251 m!68393))

(assert (=> d!15823 d!15873))

(declare-fun d!15875 () Bool)

(assert (=> d!15875 (= (+!93 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (+!93 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(assert (=> d!15875 true))

(declare-fun _$28!118 () Unit!2002)

(assert (=> d!15875 (= (choose!396 lt!31270 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) _$28!118)))

(declare-fun bs!3054 () Bool)

(assert (= bs!3054 d!15875))

(assert (=> bs!3054 m!68151))

(assert (=> bs!3054 m!68151))

(assert (=> bs!3054 m!68153))

(assert (=> bs!3054 m!68149))

(assert (=> bs!3054 m!68149))

(assert (=> bs!3054 m!68155))

(assert (=> d!15823 d!15875))

(declare-fun d!15877 () Bool)

(declare-fun e!46659 () Bool)

(assert (=> d!15877 e!46659))

(declare-fun res!37995 () Bool)

(assert (=> d!15877 (=> (not res!37995) (not e!46659))))

(declare-fun lt!31585 () ListLongMap!1415)

(assert (=> d!15877 (= res!37995 (contains!719 lt!31585 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!31586 () List!1476)

(assert (=> d!15877 (= lt!31585 (ListLongMap!1416 lt!31586))))

(declare-fun lt!31584 () Unit!2002)

(declare-fun lt!31583 () Unit!2002)

(assert (=> d!15877 (= lt!31584 lt!31583)))

(assert (=> d!15877 (= (getValueByKey!132 lt!31586 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15877 (= lt!31583 (lemmaContainsTupThenGetReturnValue!49 lt!31586 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15877 (= lt!31586 (insertStrictlySorted!52 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15877 (= (+!93 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31585)))

(declare-fun b!71252 () Bool)

(declare-fun res!37996 () Bool)

(assert (=> b!71252 (=> (not res!37996) (not e!46659))))

(assert (=> b!71252 (= res!37996 (= (getValueByKey!132 (toList!723 lt!31585) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71253 () Bool)

(assert (=> b!71253 (= e!46659 (contains!722 (toList!723 lt!31585) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!15877 res!37995) b!71252))

(assert (= (and b!71252 res!37996) b!71253))

(declare-fun m!68395 () Bool)

(assert (=> d!15877 m!68395))

(declare-fun m!68397 () Bool)

(assert (=> d!15877 m!68397))

(declare-fun m!68399 () Bool)

(assert (=> d!15877 m!68399))

(declare-fun m!68401 () Bool)

(assert (=> d!15877 m!68401))

(declare-fun m!68403 () Bool)

(assert (=> b!71252 m!68403))

(declare-fun m!68405 () Bool)

(assert (=> b!71253 m!68405))

(assert (=> d!15823 d!15877))

(declare-fun d!15879 () Bool)

(declare-fun e!46660 () Bool)

(assert (=> d!15879 e!46660))

(declare-fun res!37997 () Bool)

(assert (=> d!15879 (=> (not res!37997) (not e!46660))))

(declare-fun lt!31589 () ListLongMap!1415)

(assert (=> d!15879 (= res!37997 (contains!719 lt!31589 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun lt!31590 () List!1476)

(assert (=> d!15879 (= lt!31589 (ListLongMap!1416 lt!31590))))

(declare-fun lt!31588 () Unit!2002)

(declare-fun lt!31587 () Unit!2002)

(assert (=> d!15879 (= lt!31588 lt!31587)))

(assert (=> d!15879 (= (getValueByKey!132 lt!31590 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!15879 (= lt!31587 (lemmaContainsTupThenGetReturnValue!49 lt!31590 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!15879 (= lt!31590 (insertStrictlySorted!52 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!15879 (= (+!93 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) lt!31589)))

(declare-fun b!71254 () Bool)

(declare-fun res!37998 () Bool)

(assert (=> b!71254 (=> (not res!37998) (not e!46660))))

(assert (=> b!71254 (= res!37998 (= (getValueByKey!132 (toList!723 lt!31589) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!71255 () Bool)

(assert (=> b!71255 (= e!46660 (contains!722 (toList!723 lt!31589) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(assert (= (and d!15879 res!37997) b!71254))

(assert (= (and b!71254 res!37998) b!71255))

(declare-fun m!68407 () Bool)

(assert (=> d!15879 m!68407))

(declare-fun m!68409 () Bool)

(assert (=> d!15879 m!68409))

(declare-fun m!68411 () Bool)

(assert (=> d!15879 m!68411))

(declare-fun m!68413 () Bool)

(assert (=> d!15879 m!68413))

(declare-fun m!68415 () Bool)

(assert (=> b!71254 m!68415))

(declare-fun m!68417 () Bool)

(assert (=> b!71255 m!68417))

(assert (=> d!15823 d!15879))

(declare-fun d!15881 () Bool)

(declare-fun e!46661 () Bool)

(assert (=> d!15881 e!46661))

(declare-fun res!37999 () Bool)

(assert (=> d!15881 (=> res!37999 e!46661)))

(declare-fun lt!31593 () Bool)

(assert (=> d!15881 (= res!37999 (not lt!31593))))

(declare-fun lt!31592 () Bool)

(assert (=> d!15881 (= lt!31593 lt!31592)))

(declare-fun lt!31591 () Unit!2002)

(declare-fun e!46662 () Unit!2002)

(assert (=> d!15881 (= lt!31591 e!46662)))

(declare-fun c!10363 () Bool)

(assert (=> d!15881 (= c!10363 lt!31592)))

(assert (=> d!15881 (= lt!31592 (containsKey!136 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15881 (= (contains!719 lt!31522 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31593)))

(declare-fun b!71256 () Bool)

(declare-fun lt!31594 () Unit!2002)

(assert (=> b!71256 (= e!46662 lt!31594)))

(assert (=> b!71256 (= lt!31594 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71256 (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71257 () Bool)

(declare-fun Unit!2016 () Unit!2002)

(assert (=> b!71257 (= e!46662 Unit!2016)))

(declare-fun b!71258 () Bool)

(assert (=> b!71258 (= e!46661 (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15881 c!10363) b!71256))

(assert (= (and d!15881 (not c!10363)) b!71257))

(assert (= (and d!15881 (not res!37999)) b!71258))

(declare-fun m!68419 () Bool)

(assert (=> d!15881 m!68419))

(declare-fun m!68421 () Bool)

(assert (=> b!71256 m!68421))

(declare-fun m!68423 () Bool)

(assert (=> b!71256 m!68423))

(assert (=> b!71256 m!68423))

(declare-fun m!68425 () Bool)

(assert (=> b!71256 m!68425))

(assert (=> b!71258 m!68423))

(assert (=> b!71258 m!68423))

(assert (=> b!71258 m!68425))

(assert (=> bm!6149 d!15881))

(declare-fun d!15883 () Bool)

(assert (=> d!15883 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31395 (zeroValue!2096 newMap!16) lt!31264 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31597 () Unit!2002)

(declare-fun choose!400 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 V!2939 Int) Unit!2002)

(assert (=> d!15883 (= lt!31597 (choose!400 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31395 (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) lt!31264 (defaultEntry!2192 newMap!16)))))

(assert (=> d!15883 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15883 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31395 (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) lt!31264 (defaultEntry!2192 newMap!16)) lt!31597)))

(declare-fun bs!3055 () Bool)

(assert (= bs!3055 d!15883))

(assert (=> bs!3055 m!68051))

(declare-fun m!68427 () Bool)

(assert (=> bs!3055 m!68427))

(assert (=> bs!3055 m!68051))

(declare-fun m!68429 () Bool)

(assert (=> bs!3055 m!68429))

(declare-fun m!68431 () Bool)

(assert (=> bs!3055 m!68431))

(assert (=> bs!3055 m!68263))

(assert (=> b!71000 d!15883))

(declare-fun d!15885 () Bool)

(declare-fun e!46663 () Bool)

(assert (=> d!15885 e!46663))

(declare-fun res!38000 () Bool)

(assert (=> d!15885 (=> res!38000 e!46663)))

(declare-fun lt!31600 () Bool)

(assert (=> d!15885 (= res!38000 (not lt!31600))))

(declare-fun lt!31599 () Bool)

(assert (=> d!15885 (= lt!31600 lt!31599)))

(declare-fun lt!31598 () Unit!2002)

(declare-fun e!46664 () Unit!2002)

(assert (=> d!15885 (= lt!31598 e!46664)))

(declare-fun c!10364 () Bool)

(assert (=> d!15885 (= c!10364 lt!31599)))

(assert (=> d!15885 (= lt!31599 (containsKey!136 (toList!723 lt!31448) (_1!1068 lt!31269)))))

(assert (=> d!15885 (= (contains!719 lt!31448 (_1!1068 lt!31269)) lt!31600)))

(declare-fun b!71259 () Bool)

(declare-fun lt!31601 () Unit!2002)

(assert (=> b!71259 (= e!46664 lt!31601)))

(assert (=> b!71259 (= lt!31601 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31448) (_1!1068 lt!31269)))))

(assert (=> b!71259 (isDefined!85 (getValueByKey!132 (toList!723 lt!31448) (_1!1068 lt!31269)))))

(declare-fun b!71260 () Bool)

(declare-fun Unit!2017 () Unit!2002)

(assert (=> b!71260 (= e!46664 Unit!2017)))

(declare-fun b!71261 () Bool)

(assert (=> b!71261 (= e!46663 (isDefined!85 (getValueByKey!132 (toList!723 lt!31448) (_1!1068 lt!31269))))))

(assert (= (and d!15885 c!10364) b!71259))

(assert (= (and d!15885 (not c!10364)) b!71260))

(assert (= (and d!15885 (not res!38000)) b!71261))

(declare-fun m!68433 () Bool)

(assert (=> d!15885 m!68433))

(declare-fun m!68435 () Bool)

(assert (=> b!71259 m!68435))

(assert (=> b!71259 m!68133))

(assert (=> b!71259 m!68133))

(declare-fun m!68437 () Bool)

(assert (=> b!71259 m!68437))

(assert (=> b!71261 m!68133))

(assert (=> b!71261 m!68133))

(assert (=> b!71261 m!68437))

(assert (=> d!15819 d!15885))

(declare-fun b!71265 () Bool)

(declare-fun e!46666 () Option!138)

(assert (=> b!71265 (= e!46666 None!136)))

(declare-fun b!71263 () Bool)

(declare-fun e!46665 () Option!138)

(assert (=> b!71263 (= e!46665 e!46666)))

(declare-fun c!10366 () Bool)

(assert (=> b!71263 (= c!10366 (and ((_ is Cons!1472) lt!31449) (not (= (_1!1068 (h!2058 lt!31449)) (_1!1068 lt!31269)))))))

(declare-fun b!71262 () Bool)

(assert (=> b!71262 (= e!46665 (Some!137 (_2!1068 (h!2058 lt!31449))))))

(declare-fun d!15887 () Bool)

(declare-fun c!10365 () Bool)

(assert (=> d!15887 (= c!10365 (and ((_ is Cons!1472) lt!31449) (= (_1!1068 (h!2058 lt!31449)) (_1!1068 lt!31269))))))

(assert (=> d!15887 (= (getValueByKey!132 lt!31449 (_1!1068 lt!31269)) e!46665)))

(declare-fun b!71264 () Bool)

(assert (=> b!71264 (= e!46666 (getValueByKey!132 (t!5012 lt!31449) (_1!1068 lt!31269)))))

(assert (= (and d!15887 c!10365) b!71262))

(assert (= (and d!15887 (not c!10365)) b!71263))

(assert (= (and b!71263 c!10366) b!71264))

(assert (= (and b!71263 (not c!10366)) b!71265))

(declare-fun m!68439 () Bool)

(assert (=> b!71264 m!68439))

(assert (=> d!15819 d!15887))

(declare-fun d!15889 () Bool)

(assert (=> d!15889 (= (getValueByKey!132 lt!31449 (_1!1068 lt!31269)) (Some!137 (_2!1068 lt!31269)))))

(declare-fun lt!31602 () Unit!2002)

(assert (=> d!15889 (= lt!31602 (choose!397 lt!31449 (_1!1068 lt!31269) (_2!1068 lt!31269)))))

(declare-fun e!46667 () Bool)

(assert (=> d!15889 e!46667))

(declare-fun res!38001 () Bool)

(assert (=> d!15889 (=> (not res!38001) (not e!46667))))

(assert (=> d!15889 (= res!38001 (isStrictlySorted!291 lt!31449))))

(assert (=> d!15889 (= (lemmaContainsTupThenGetReturnValue!49 lt!31449 (_1!1068 lt!31269) (_2!1068 lt!31269)) lt!31602)))

(declare-fun b!71266 () Bool)

(declare-fun res!38002 () Bool)

(assert (=> b!71266 (=> (not res!38002) (not e!46667))))

(assert (=> b!71266 (= res!38002 (containsKey!136 lt!31449 (_1!1068 lt!31269)))))

(declare-fun b!71267 () Bool)

(assert (=> b!71267 (= e!46667 (contains!722 lt!31449 (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(assert (= (and d!15889 res!38001) b!71266))

(assert (= (and b!71266 res!38002) b!71267))

(assert (=> d!15889 m!68127))

(declare-fun m!68441 () Bool)

(assert (=> d!15889 m!68441))

(declare-fun m!68443 () Bool)

(assert (=> d!15889 m!68443))

(declare-fun m!68445 () Bool)

(assert (=> b!71266 m!68445))

(declare-fun m!68447 () Bool)

(assert (=> b!71267 m!68447))

(assert (=> d!15819 d!15889))

(declare-fun bm!6175 () Bool)

(declare-fun call!6180 () List!1476)

(declare-fun call!6178 () List!1476)

(assert (=> bm!6175 (= call!6180 call!6178)))

(declare-fun b!71268 () Bool)

(declare-fun e!46669 () List!1476)

(declare-fun call!6179 () List!1476)

(assert (=> b!71268 (= e!46669 call!6179)))

(declare-fun bm!6176 () Bool)

(declare-fun e!46668 () List!1476)

(declare-fun c!10369 () Bool)

(assert (=> bm!6176 (= call!6178 ($colon$colon!65 e!46668 (ite c!10369 (h!2058 (toList!723 lt!31270)) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269)))))))

(declare-fun c!10370 () Bool)

(assert (=> bm!6176 (= c!10370 c!10369)))

(declare-fun b!71270 () Bool)

(declare-fun c!10367 () Bool)

(assert (=> b!71270 (= c!10367 (and ((_ is Cons!1472) (toList!723 lt!31270)) (bvsgt (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 lt!31269))))))

(declare-fun e!46672 () List!1476)

(assert (=> b!71270 (= e!46672 e!46669)))

(declare-fun b!71271 () Bool)

(assert (=> b!71271 (= e!46672 call!6180)))

(declare-fun b!71272 () Bool)

(assert (=> b!71272 (= e!46669 call!6179)))

(declare-fun b!71273 () Bool)

(declare-fun e!46671 () List!1476)

(assert (=> b!71273 (= e!46671 e!46672)))

(declare-fun c!10368 () Bool)

(assert (=> b!71273 (= c!10368 (and ((_ is Cons!1472) (toList!723 lt!31270)) (= (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 lt!31269))))))

(declare-fun b!71274 () Bool)

(declare-fun res!38004 () Bool)

(declare-fun e!46670 () Bool)

(assert (=> b!71274 (=> (not res!38004) (not e!46670))))

(declare-fun lt!31603 () List!1476)

(assert (=> b!71274 (= res!38004 (containsKey!136 lt!31603 (_1!1068 lt!31269)))))

(declare-fun b!71275 () Bool)

(assert (=> b!71275 (= e!46670 (contains!722 lt!31603 (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun b!71276 () Bool)

(assert (=> b!71276 (= e!46668 (ite c!10368 (t!5012 (toList!723 lt!31270)) (ite c!10367 (Cons!1472 (h!2058 (toList!723 lt!31270)) (t!5012 (toList!723 lt!31270))) Nil!1473)))))

(declare-fun b!71269 () Bool)

(assert (=> b!71269 (= e!46671 call!6178)))

(declare-fun d!15891 () Bool)

(assert (=> d!15891 e!46670))

(declare-fun res!38003 () Bool)

(assert (=> d!15891 (=> (not res!38003) (not e!46670))))

(assert (=> d!15891 (= res!38003 (isStrictlySorted!291 lt!31603))))

(assert (=> d!15891 (= lt!31603 e!46671)))

(assert (=> d!15891 (= c!10369 (and ((_ is Cons!1472) (toList!723 lt!31270)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 lt!31269))))))

(assert (=> d!15891 (isStrictlySorted!291 (toList!723 lt!31270))))

(assert (=> d!15891 (= (insertStrictlySorted!52 (toList!723 lt!31270) (_1!1068 lt!31269) (_2!1068 lt!31269)) lt!31603)))

(declare-fun b!71277 () Bool)

(assert (=> b!71277 (= e!46668 (insertStrictlySorted!52 (t!5012 (toList!723 lt!31270)) (_1!1068 lt!31269) (_2!1068 lt!31269)))))

(declare-fun bm!6177 () Bool)

(assert (=> bm!6177 (= call!6179 call!6180)))

(assert (= (and d!15891 c!10369) b!71269))

(assert (= (and d!15891 (not c!10369)) b!71273))

(assert (= (and b!71273 c!10368) b!71271))

(assert (= (and b!71273 (not c!10368)) b!71270))

(assert (= (and b!71270 c!10367) b!71268))

(assert (= (and b!71270 (not c!10367)) b!71272))

(assert (= (or b!71268 b!71272) bm!6177))

(assert (= (or b!71271 bm!6177) bm!6175))

(assert (= (or b!71269 bm!6175) bm!6176))

(assert (= (and bm!6176 c!10370) b!71277))

(assert (= (and bm!6176 (not c!10370)) b!71276))

(assert (= (and d!15891 res!38003) b!71274))

(assert (= (and b!71274 res!38004) b!71275))

(declare-fun m!68449 () Bool)

(assert (=> b!71274 m!68449))

(declare-fun m!68451 () Bool)

(assert (=> b!71277 m!68451))

(declare-fun m!68453 () Bool)

(assert (=> b!71275 m!68453))

(declare-fun m!68455 () Bool)

(assert (=> bm!6176 m!68455))

(declare-fun m!68457 () Bool)

(assert (=> d!15891 m!68457))

(declare-fun m!68459 () Bool)

(assert (=> d!15891 m!68459))

(assert (=> d!15819 d!15891))

(declare-fun d!15893 () Bool)

(assert (=> d!15893 (= (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71049 d!15893))

(declare-fun d!15895 () Bool)

(declare-fun res!38005 () Bool)

(declare-fun e!46673 () Bool)

(assert (=> d!15895 (=> (not res!38005) (not e!46673))))

(assert (=> d!15895 (= res!38005 (simpleValid!50 (_2!1069 lt!31408)))))

(assert (=> d!15895 (= (valid!287 (_2!1069 lt!31408)) e!46673)))

(declare-fun b!71278 () Bool)

(declare-fun res!38006 () Bool)

(assert (=> b!71278 (=> (not res!38006) (not e!46673))))

(assert (=> b!71278 (= res!38006 (= (arrayCountValidKeys!0 (_keys!3840 (_2!1069 lt!31408)) #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))) (_size!394 (_2!1069 lt!31408))))))

(declare-fun b!71279 () Bool)

(declare-fun res!38007 () Bool)

(assert (=> b!71279 (=> (not res!38007) (not e!46673))))

(assert (=> b!71279 (= res!38007 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408))))))

(declare-fun b!71280 () Bool)

(assert (=> b!71280 (= e!46673 (arrayNoDuplicates!0 (_keys!3840 (_2!1069 lt!31408)) #b00000000000000000000000000000000 Nil!1472))))

(assert (= (and d!15895 res!38005) b!71278))

(assert (= (and b!71278 res!38006) b!71279))

(assert (= (and b!71279 res!38007) b!71280))

(declare-fun m!68461 () Bool)

(assert (=> d!15895 m!68461))

(declare-fun m!68463 () Bool)

(assert (=> b!71278 m!68463))

(declare-fun m!68465 () Bool)

(assert (=> b!71279 m!68465))

(declare-fun m!68467 () Bool)

(assert (=> b!71280 m!68467))

(assert (=> d!15813 d!15895))

(assert (=> d!15813 d!15833))

(assert (=> bm!6154 d!15817))

(declare-fun d!15897 () Bool)

(declare-fun e!46674 () Bool)

(assert (=> d!15897 e!46674))

(declare-fun res!38008 () Bool)

(assert (=> d!15897 (=> res!38008 e!46674)))

(declare-fun lt!31606 () Bool)

(assert (=> d!15897 (= res!38008 (not lt!31606))))

(declare-fun lt!31605 () Bool)

(assert (=> d!15897 (= lt!31606 lt!31605)))

(declare-fun lt!31604 () Unit!2002)

(declare-fun e!46675 () Unit!2002)

(assert (=> d!15897 (= lt!31604 e!46675)))

(declare-fun c!10371 () Bool)

(assert (=> d!15897 (= c!10371 lt!31605)))

(assert (=> d!15897 (= lt!31605 (containsKey!136 (toList!723 lt!31452) (_1!1068 lt!31265)))))

(assert (=> d!15897 (= (contains!719 lt!31452 (_1!1068 lt!31265)) lt!31606)))

(declare-fun b!71281 () Bool)

(declare-fun lt!31607 () Unit!2002)

(assert (=> b!71281 (= e!46675 lt!31607)))

(assert (=> b!71281 (= lt!31607 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31452) (_1!1068 lt!31265)))))

(assert (=> b!71281 (isDefined!85 (getValueByKey!132 (toList!723 lt!31452) (_1!1068 lt!31265)))))

(declare-fun b!71282 () Bool)

(declare-fun Unit!2018 () Unit!2002)

(assert (=> b!71282 (= e!46675 Unit!2018)))

(declare-fun b!71283 () Bool)

(assert (=> b!71283 (= e!46674 (isDefined!85 (getValueByKey!132 (toList!723 lt!31452) (_1!1068 lt!31265))))))

(assert (= (and d!15897 c!10371) b!71281))

(assert (= (and d!15897 (not c!10371)) b!71282))

(assert (= (and d!15897 (not res!38008)) b!71283))

(declare-fun m!68469 () Bool)

(assert (=> d!15897 m!68469))

(declare-fun m!68471 () Bool)

(assert (=> b!71281 m!68471))

(assert (=> b!71281 m!68145))

(assert (=> b!71281 m!68145))

(declare-fun m!68473 () Bool)

(assert (=> b!71281 m!68473))

(assert (=> b!71283 m!68145))

(assert (=> b!71283 m!68145))

(assert (=> b!71283 m!68473))

(assert (=> d!15821 d!15897))

(declare-fun b!71287 () Bool)

(declare-fun e!46677 () Option!138)

(assert (=> b!71287 (= e!46677 None!136)))

(declare-fun b!71285 () Bool)

(declare-fun e!46676 () Option!138)

(assert (=> b!71285 (= e!46676 e!46677)))

(declare-fun c!10373 () Bool)

(assert (=> b!71285 (= c!10373 (and ((_ is Cons!1472) lt!31453) (not (= (_1!1068 (h!2058 lt!31453)) (_1!1068 lt!31265)))))))

(declare-fun b!71284 () Bool)

(assert (=> b!71284 (= e!46676 (Some!137 (_2!1068 (h!2058 lt!31453))))))

(declare-fun d!15899 () Bool)

(declare-fun c!10372 () Bool)

(assert (=> d!15899 (= c!10372 (and ((_ is Cons!1472) lt!31453) (= (_1!1068 (h!2058 lt!31453)) (_1!1068 lt!31265))))))

(assert (=> d!15899 (= (getValueByKey!132 lt!31453 (_1!1068 lt!31265)) e!46676)))

(declare-fun b!71286 () Bool)

(assert (=> b!71286 (= e!46677 (getValueByKey!132 (t!5012 lt!31453) (_1!1068 lt!31265)))))

(assert (= (and d!15899 c!10372) b!71284))

(assert (= (and d!15899 (not c!10372)) b!71285))

(assert (= (and b!71285 c!10373) b!71286))

(assert (= (and b!71285 (not c!10373)) b!71287))

(declare-fun m!68475 () Bool)

(assert (=> b!71286 m!68475))

(assert (=> d!15821 d!15899))

(declare-fun d!15901 () Bool)

(assert (=> d!15901 (= (getValueByKey!132 lt!31453 (_1!1068 lt!31265)) (Some!137 (_2!1068 lt!31265)))))

(declare-fun lt!31608 () Unit!2002)

(assert (=> d!15901 (= lt!31608 (choose!397 lt!31453 (_1!1068 lt!31265) (_2!1068 lt!31265)))))

(declare-fun e!46678 () Bool)

(assert (=> d!15901 e!46678))

(declare-fun res!38009 () Bool)

(assert (=> d!15901 (=> (not res!38009) (not e!46678))))

(assert (=> d!15901 (= res!38009 (isStrictlySorted!291 lt!31453))))

(assert (=> d!15901 (= (lemmaContainsTupThenGetReturnValue!49 lt!31453 (_1!1068 lt!31265) (_2!1068 lt!31265)) lt!31608)))

(declare-fun b!71288 () Bool)

(declare-fun res!38010 () Bool)

(assert (=> b!71288 (=> (not res!38010) (not e!46678))))

(assert (=> b!71288 (= res!38010 (containsKey!136 lt!31453 (_1!1068 lt!31265)))))

(declare-fun b!71289 () Bool)

(assert (=> b!71289 (= e!46678 (contains!722 lt!31453 (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(assert (= (and d!15901 res!38009) b!71288))

(assert (= (and b!71288 res!38010) b!71289))

(assert (=> d!15901 m!68139))

(declare-fun m!68477 () Bool)

(assert (=> d!15901 m!68477))

(declare-fun m!68479 () Bool)

(assert (=> d!15901 m!68479))

(declare-fun m!68481 () Bool)

(assert (=> b!71288 m!68481))

(declare-fun m!68483 () Bool)

(assert (=> b!71289 m!68483))

(assert (=> d!15821 d!15901))

(declare-fun bm!6178 () Bool)

(declare-fun call!6183 () List!1476)

(declare-fun call!6181 () List!1476)

(assert (=> bm!6178 (= call!6183 call!6181)))

(declare-fun b!71290 () Bool)

(declare-fun e!46680 () List!1476)

(declare-fun call!6182 () List!1476)

(assert (=> b!71290 (= e!46680 call!6182)))

(declare-fun c!10376 () Bool)

(declare-fun bm!6179 () Bool)

(declare-fun e!46679 () List!1476)

(assert (=> bm!6179 (= call!6181 ($colon$colon!65 e!46679 (ite c!10376 (h!2058 (toList!723 lt!31270)) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265)))))))

(declare-fun c!10377 () Bool)

(assert (=> bm!6179 (= c!10377 c!10376)))

(declare-fun b!71292 () Bool)

(declare-fun c!10374 () Bool)

(assert (=> b!71292 (= c!10374 (and ((_ is Cons!1472) (toList!723 lt!31270)) (bvsgt (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 lt!31265))))))

(declare-fun e!46683 () List!1476)

(assert (=> b!71292 (= e!46683 e!46680)))

(declare-fun b!71293 () Bool)

(assert (=> b!71293 (= e!46683 call!6183)))

(declare-fun b!71294 () Bool)

(assert (=> b!71294 (= e!46680 call!6182)))

(declare-fun b!71295 () Bool)

(declare-fun e!46682 () List!1476)

(assert (=> b!71295 (= e!46682 e!46683)))

(declare-fun c!10375 () Bool)

(assert (=> b!71295 (= c!10375 (and ((_ is Cons!1472) (toList!723 lt!31270)) (= (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 lt!31265))))))

(declare-fun b!71296 () Bool)

(declare-fun res!38012 () Bool)

(declare-fun e!46681 () Bool)

(assert (=> b!71296 (=> (not res!38012) (not e!46681))))

(declare-fun lt!31609 () List!1476)

(assert (=> b!71296 (= res!38012 (containsKey!136 lt!31609 (_1!1068 lt!31265)))))

(declare-fun b!71297 () Bool)

(assert (=> b!71297 (= e!46681 (contains!722 lt!31609 (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun b!71298 () Bool)

(assert (=> b!71298 (= e!46679 (ite c!10375 (t!5012 (toList!723 lt!31270)) (ite c!10374 (Cons!1472 (h!2058 (toList!723 lt!31270)) (t!5012 (toList!723 lt!31270))) Nil!1473)))))

(declare-fun b!71291 () Bool)

(assert (=> b!71291 (= e!46682 call!6181)))

(declare-fun d!15903 () Bool)

(assert (=> d!15903 e!46681))

(declare-fun res!38011 () Bool)

(assert (=> d!15903 (=> (not res!38011) (not e!46681))))

(assert (=> d!15903 (= res!38011 (isStrictlySorted!291 lt!31609))))

(assert (=> d!15903 (= lt!31609 e!46682)))

(assert (=> d!15903 (= c!10376 (and ((_ is Cons!1472) (toList!723 lt!31270)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 lt!31265))))))

(assert (=> d!15903 (isStrictlySorted!291 (toList!723 lt!31270))))

(assert (=> d!15903 (= (insertStrictlySorted!52 (toList!723 lt!31270) (_1!1068 lt!31265) (_2!1068 lt!31265)) lt!31609)))

(declare-fun b!71299 () Bool)

(assert (=> b!71299 (= e!46679 (insertStrictlySorted!52 (t!5012 (toList!723 lt!31270)) (_1!1068 lt!31265) (_2!1068 lt!31265)))))

(declare-fun bm!6180 () Bool)

(assert (=> bm!6180 (= call!6182 call!6183)))

(assert (= (and d!15903 c!10376) b!71291))

(assert (= (and d!15903 (not c!10376)) b!71295))

(assert (= (and b!71295 c!10375) b!71293))

(assert (= (and b!71295 (not c!10375)) b!71292))

(assert (= (and b!71292 c!10374) b!71290))

(assert (= (and b!71292 (not c!10374)) b!71294))

(assert (= (or b!71290 b!71294) bm!6180))

(assert (= (or b!71293 bm!6180) bm!6178))

(assert (= (or b!71291 bm!6178) bm!6179))

(assert (= (and bm!6179 c!10377) b!71299))

(assert (= (and bm!6179 (not c!10377)) b!71298))

(assert (= (and d!15903 res!38011) b!71296))

(assert (= (and b!71296 res!38012) b!71297))

(declare-fun m!68485 () Bool)

(assert (=> b!71296 m!68485))

(declare-fun m!68487 () Bool)

(assert (=> b!71299 m!68487))

(declare-fun m!68489 () Bool)

(assert (=> b!71297 m!68489))

(declare-fun m!68491 () Bool)

(assert (=> bm!6179 m!68491))

(declare-fun m!68493 () Bool)

(assert (=> d!15903 m!68493))

(assert (=> d!15903 m!68459))

(assert (=> d!15821 d!15903))

(declare-fun d!15905 () Bool)

(declare-fun res!38018 () Bool)

(declare-fun e!46690 () Bool)

(assert (=> d!15905 (=> res!38018 e!46690)))

(assert (=> d!15905 (= res!38018 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!15905 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 newMap!16) (mask!6149 newMap!16)) e!46690)))

(declare-fun b!71308 () Bool)

(declare-fun e!46691 () Bool)

(assert (=> b!71308 (= e!46690 e!46691)))

(declare-fun c!10380 () Bool)

(assert (=> b!71308 (= c!10380 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71309 () Bool)

(declare-fun e!46692 () Bool)

(declare-fun call!6186 () Bool)

(assert (=> b!71309 (= e!46692 call!6186)))

(declare-fun bm!6183 () Bool)

(assert (=> bm!6183 (= call!6186 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!71310 () Bool)

(assert (=> b!71310 (= e!46691 call!6186)))

(declare-fun b!71311 () Bool)

(assert (=> b!71311 (= e!46691 e!46692)))

(declare-fun lt!31617 () (_ BitVec 64))

(assert (=> b!71311 (= lt!31617 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31618 () Unit!2002)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3881 (_ BitVec 64) (_ BitVec 32)) Unit!2002)

(assert (=> b!71311 (= lt!31618 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3840 newMap!16) lt!31617 #b00000000000000000000000000000000))))

(assert (=> b!71311 (arrayContainsKey!0 (_keys!3840 newMap!16) lt!31617 #b00000000000000000000000000000000)))

(declare-fun lt!31616 () Unit!2002)

(assert (=> b!71311 (= lt!31616 lt!31618)))

(declare-fun res!38017 () Bool)

(assert (=> b!71311 (= res!38017 (= (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (_keys!3840 newMap!16) (mask!6149 newMap!16)) (Found!235 #b00000000000000000000000000000000)))))

(assert (=> b!71311 (=> (not res!38017) (not e!46692))))

(assert (= (and d!15905 (not res!38018)) b!71308))

(assert (= (and b!71308 c!10380) b!71311))

(assert (= (and b!71308 (not c!10380)) b!71310))

(assert (= (and b!71311 res!38017) b!71309))

(assert (= (or b!71309 b!71310) bm!6183))

(assert (=> b!71308 m!68283))

(assert (=> b!71308 m!68283))

(assert (=> b!71308 m!68297))

(declare-fun m!68495 () Bool)

(assert (=> bm!6183 m!68495))

(assert (=> b!71311 m!68283))

(declare-fun m!68497 () Bool)

(assert (=> b!71311 m!68497))

(declare-fun m!68499 () Bool)

(assert (=> b!71311 m!68499))

(assert (=> b!71311 m!68283))

(declare-fun m!68501 () Bool)

(assert (=> b!71311 m!68501))

(assert (=> b!71128 d!15905))

(declare-fun d!15907 () Bool)

(declare-fun lt!31621 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!75 (List!1475) (InoxSet (_ BitVec 64)))

(assert (=> d!15907 (= lt!31621 (select (content!75 Nil!1472) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun e!46698 () Bool)

(assert (=> d!15907 (= lt!31621 e!46698)))

(declare-fun res!38023 () Bool)

(assert (=> d!15907 (=> (not res!38023) (not e!46698))))

(assert (=> d!15907 (= res!38023 ((_ is Cons!1471) Nil!1472))))

(assert (=> d!15907 (= (contains!721 Nil!1472 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) lt!31621)))

(declare-fun b!71316 () Bool)

(declare-fun e!46697 () Bool)

(assert (=> b!71316 (= e!46698 e!46697)))

(declare-fun res!38024 () Bool)

(assert (=> b!71316 (=> res!38024 e!46697)))

(assert (=> b!71316 (= res!38024 (= (h!2057 Nil!1472) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!71317 () Bool)

(assert (=> b!71317 (= e!46697 (contains!721 (t!5011 Nil!1472) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!15907 res!38023) b!71316))

(assert (= (and b!71316 (not res!38024)) b!71317))

(declare-fun m!68503 () Bool)

(assert (=> d!15907 m!68503))

(assert (=> d!15907 m!67893))

(declare-fun m!68505 () Bool)

(assert (=> d!15907 m!68505))

(assert (=> b!71317 m!67893))

(declare-fun m!68507 () Bool)

(assert (=> b!71317 m!68507))

(assert (=> b!70867 d!15907))

(declare-fun d!15909 () Bool)

(declare-fun e!46699 () Bool)

(assert (=> d!15909 e!46699))

(declare-fun res!38025 () Bool)

(assert (=> d!15909 (=> (not res!38025) (not e!46699))))

(declare-fun lt!31624 () ListLongMap!1415)

(assert (=> d!15909 (= res!38025 (contains!719 lt!31624 (_1!1068 (tuple2!2115 lt!31440 lt!31442))))))

(declare-fun lt!31625 () List!1476)

(assert (=> d!15909 (= lt!31624 (ListLongMap!1416 lt!31625))))

(declare-fun lt!31623 () Unit!2002)

(declare-fun lt!31622 () Unit!2002)

(assert (=> d!15909 (= lt!31623 lt!31622)))

(assert (=> d!15909 (= (getValueByKey!132 lt!31625 (_1!1068 (tuple2!2115 lt!31440 lt!31442))) (Some!137 (_2!1068 (tuple2!2115 lt!31440 lt!31442))))))

(assert (=> d!15909 (= lt!31622 (lemmaContainsTupThenGetReturnValue!49 lt!31625 (_1!1068 (tuple2!2115 lt!31440 lt!31442)) (_2!1068 (tuple2!2115 lt!31440 lt!31442))))))

(assert (=> d!15909 (= lt!31625 (insertStrictlySorted!52 (toList!723 lt!31439) (_1!1068 (tuple2!2115 lt!31440 lt!31442)) (_2!1068 (tuple2!2115 lt!31440 lt!31442))))))

(assert (=> d!15909 (= (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)) lt!31624)))

(declare-fun b!71318 () Bool)

(declare-fun res!38026 () Bool)

(assert (=> b!71318 (=> (not res!38026) (not e!46699))))

(assert (=> b!71318 (= res!38026 (= (getValueByKey!132 (toList!723 lt!31624) (_1!1068 (tuple2!2115 lt!31440 lt!31442))) (Some!137 (_2!1068 (tuple2!2115 lt!31440 lt!31442)))))))

(declare-fun b!71319 () Bool)

(assert (=> b!71319 (= e!46699 (contains!722 (toList!723 lt!31624) (tuple2!2115 lt!31440 lt!31442)))))

(assert (= (and d!15909 res!38025) b!71318))

(assert (= (and b!71318 res!38026) b!71319))

(declare-fun m!68509 () Bool)

(assert (=> d!15909 m!68509))

(declare-fun m!68511 () Bool)

(assert (=> d!15909 m!68511))

(declare-fun m!68513 () Bool)

(assert (=> d!15909 m!68513))

(declare-fun m!68515 () Bool)

(assert (=> d!15909 m!68515))

(declare-fun m!68517 () Bool)

(assert (=> b!71318 m!68517))

(declare-fun m!68519 () Bool)

(assert (=> b!71319 m!68519))

(assert (=> b!71047 d!15909))

(declare-fun d!15911 () Bool)

(declare-fun c!10381 () Bool)

(assert (=> d!15911 (= c!10381 ((_ is ValueCellFull!891) (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!46700 () V!2939)

(assert (=> d!15911 (= (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46700)))

(declare-fun b!71320 () Bool)

(assert (=> b!71320 (= e!46700 (get!1134 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71321 () Bool)

(assert (=> b!71321 (= e!46700 (get!1135 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15911 c!10381) b!71320))

(assert (= (and d!15911 (not c!10381)) b!71321))

(assert (=> b!71320 m!68105))

(assert (=> b!71320 m!67913))

(declare-fun m!68521 () Bool)

(assert (=> b!71320 m!68521))

(assert (=> b!71321 m!68105))

(assert (=> b!71321 m!67913))

(declare-fun m!68523 () Bool)

(assert (=> b!71321 m!68523))

(assert (=> b!71047 d!15911))

(declare-fun d!15913 () Bool)

(assert (=> d!15913 (not (contains!719 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)) lt!31443))))

(declare-fun lt!31628 () Unit!2002)

(declare-fun choose!401 (ListLongMap!1415 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2002)

(assert (=> d!15913 (= lt!31628 (choose!401 lt!31439 lt!31440 lt!31442 lt!31443))))

(declare-fun e!46703 () Bool)

(assert (=> d!15913 e!46703))

(declare-fun res!38029 () Bool)

(assert (=> d!15913 (=> (not res!38029) (not e!46703))))

(assert (=> d!15913 (= res!38029 (not (contains!719 lt!31439 lt!31443)))))

(assert (=> d!15913 (= (addStillNotContains!23 lt!31439 lt!31440 lt!31442 lt!31443) lt!31628)))

(declare-fun b!71325 () Bool)

(assert (=> b!71325 (= e!46703 (not (= lt!31440 lt!31443)))))

(assert (= (and d!15913 res!38029) b!71325))

(assert (=> d!15913 m!68121))

(assert (=> d!15913 m!68121))

(assert (=> d!15913 m!68123))

(declare-fun m!68525 () Bool)

(assert (=> d!15913 m!68525))

(declare-fun m!68527 () Bool)

(assert (=> d!15913 m!68527))

(assert (=> b!71047 d!15913))

(declare-fun d!15915 () Bool)

(declare-fun e!46704 () Bool)

(assert (=> d!15915 e!46704))

(declare-fun res!38030 () Bool)

(assert (=> d!15915 (=> res!38030 e!46704)))

(declare-fun lt!31631 () Bool)

(assert (=> d!15915 (= res!38030 (not lt!31631))))

(declare-fun lt!31630 () Bool)

(assert (=> d!15915 (= lt!31631 lt!31630)))

(declare-fun lt!31629 () Unit!2002)

(declare-fun e!46705 () Unit!2002)

(assert (=> d!15915 (= lt!31629 e!46705)))

(declare-fun c!10382 () Bool)

(assert (=> d!15915 (= c!10382 lt!31630)))

(assert (=> d!15915 (= lt!31630 (containsKey!136 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443))))

(assert (=> d!15915 (= (contains!719 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)) lt!31443) lt!31631)))

(declare-fun b!71326 () Bool)

(declare-fun lt!31632 () Unit!2002)

(assert (=> b!71326 (= e!46705 lt!31632)))

(assert (=> b!71326 (= lt!31632 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443))))

(assert (=> b!71326 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443))))

(declare-fun b!71327 () Bool)

(declare-fun Unit!2019 () Unit!2002)

(assert (=> b!71327 (= e!46705 Unit!2019)))

(declare-fun b!71328 () Bool)

(assert (=> b!71328 (= e!46704 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443)))))

(assert (= (and d!15915 c!10382) b!71326))

(assert (= (and d!15915 (not c!10382)) b!71327))

(assert (= (and d!15915 (not res!38030)) b!71328))

(declare-fun m!68529 () Bool)

(assert (=> d!15915 m!68529))

(declare-fun m!68531 () Bool)

(assert (=> b!71326 m!68531))

(declare-fun m!68533 () Bool)

(assert (=> b!71326 m!68533))

(assert (=> b!71326 m!68533))

(declare-fun m!68535 () Bool)

(assert (=> b!71326 m!68535))

(assert (=> b!71328 m!68533))

(assert (=> b!71328 m!68533))

(assert (=> b!71328 m!68535))

(assert (=> b!71047 d!15915))

(declare-fun d!15917 () Bool)

(declare-fun e!46706 () Bool)

(assert (=> d!15917 e!46706))

(declare-fun res!38031 () Bool)

(assert (=> d!15917 (=> (not res!38031) (not e!46706))))

(declare-fun lt!31635 () ListLongMap!1415)

(assert (=> d!15917 (= res!38031 (contains!719 lt!31635 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!31636 () List!1476)

(assert (=> d!15917 (= lt!31635 (ListLongMap!1416 lt!31636))))

(declare-fun lt!31634 () Unit!2002)

(declare-fun lt!31633 () Unit!2002)

(assert (=> d!15917 (= lt!31634 lt!31633)))

(assert (=> d!15917 (= (getValueByKey!132 lt!31636 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15917 (= lt!31633 (lemmaContainsTupThenGetReturnValue!49 lt!31636 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15917 (= lt!31636 (insertStrictlySorted!52 (toList!723 call!6137) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15917 (= (+!93 call!6137 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!31635)))

(declare-fun b!71329 () Bool)

(declare-fun res!38032 () Bool)

(assert (=> b!71329 (=> (not res!38032) (not e!46706))))

(assert (=> b!71329 (= res!38032 (= (getValueByKey!132 (toList!723 lt!31635) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!71330 () Bool)

(assert (=> b!71330 (= e!46706 (contains!722 (toList!723 lt!31635) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15917 res!38031) b!71329))

(assert (= (and b!71329 res!38032) b!71330))

(declare-fun m!68537 () Bool)

(assert (=> d!15917 m!68537))

(declare-fun m!68539 () Bool)

(assert (=> d!15917 m!68539))

(declare-fun m!68541 () Bool)

(assert (=> d!15917 m!68541))

(declare-fun m!68543 () Bool)

(assert (=> d!15917 m!68543))

(declare-fun m!68545 () Bool)

(assert (=> b!71329 m!68545))

(declare-fun m!68547 () Bool)

(assert (=> b!71330 m!68547))

(assert (=> b!71047 d!15917))

(declare-fun d!15919 () Bool)

(declare-fun e!46707 () Bool)

(assert (=> d!15919 e!46707))

(declare-fun res!38033 () Bool)

(assert (=> d!15919 (=> (not res!38033) (not e!46707))))

(declare-fun lt!31639 () ListLongMap!1415)

(assert (=> d!15919 (= res!38033 (contains!719 lt!31639 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun lt!31640 () List!1476)

(assert (=> d!15919 (= lt!31639 (ListLongMap!1416 lt!31640))))

(declare-fun lt!31638 () Unit!2002)

(declare-fun lt!31637 () Unit!2002)

(assert (=> d!15919 (= lt!31638 lt!31637)))

(assert (=> d!15919 (= (getValueByKey!132 lt!31640 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) (Some!137 (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!15919 (= lt!31637 (lemmaContainsTupThenGetReturnValue!49 lt!31640 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!15919 (= lt!31640 (insertStrictlySorted!52 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158))) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!15919 (= (+!93 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158)) (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31639)))

(declare-fun b!71331 () Bool)

(declare-fun res!38034 () Bool)

(assert (=> b!71331 (=> (not res!38034) (not e!46707))))

(assert (=> b!71331 (= res!38034 (= (getValueByKey!132 (toList!723 lt!31639) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) (Some!137 (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!71332 () Bool)

(assert (=> b!71332 (= e!46707 (contains!722 (toList!723 lt!31639) (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!15919 res!38033) b!71331))

(assert (= (and b!71331 res!38034) b!71332))

(declare-fun m!68549 () Bool)

(assert (=> d!15919 m!68549))

(declare-fun m!68551 () Bool)

(assert (=> d!15919 m!68551))

(declare-fun m!68553 () Bool)

(assert (=> d!15919 m!68553))

(declare-fun m!68555 () Bool)

(assert (=> d!15919 m!68555))

(declare-fun m!68557 () Bool)

(assert (=> b!71331 m!68557))

(declare-fun m!68559 () Bool)

(assert (=> b!71332 m!68559))

(assert (=> bm!6153 d!15919))

(declare-fun d!15921 () Bool)

(assert (=> d!15921 (= (map!1148 (_2!1069 lt!31408)) (getCurrentListMap!421 (_keys!3840 (_2!1069 lt!31408)) (_values!2175 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408)) (extraKeys!2055 (_2!1069 lt!31408)) (zeroValue!2096 (_2!1069 lt!31408)) (minValue!2096 (_2!1069 lt!31408)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1069 lt!31408))))))

(declare-fun bs!3056 () Bool)

(assert (= bs!3056 d!15921))

(declare-fun m!68561 () Bool)

(assert (=> bs!3056 m!68561))

(assert (=> bm!6111 d!15921))

(declare-fun d!15923 () Bool)

(declare-fun get!1136 (Option!138) V!2939)

(assert (=> d!15923 (= (apply!74 lt!31444 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1136 (getValueByKey!132 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3057 () Bool)

(assert (= bs!3057 d!15923))

(assert (=> bs!3057 m!68007))

(declare-fun m!68563 () Bool)

(assert (=> bs!3057 m!68563))

(assert (=> bs!3057 m!68563))

(declare-fun m!68565 () Bool)

(assert (=> bs!3057 m!68565))

(assert (=> b!71043 d!15923))

(assert (=> b!71043 d!15911))

(declare-fun call!6192 () Bool)

(declare-fun bm!6188 () Bool)

(assert (=> bm!6188 (= call!6192 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!15925 () Bool)

(declare-fun e!46718 () Bool)

(assert (=> d!15925 e!46718))

(declare-fun c!10387 () Bool)

(declare-fun lt!31645 () SeekEntryResult!235)

(assert (=> d!15925 (= c!10387 ((_ is MissingZero!235) lt!31645))))

(assert (=> d!15925 (= lt!31645 (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun lt!31646 () Unit!2002)

(declare-fun choose!402 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) Int) Unit!2002)

(assert (=> d!15925 (= lt!31646 (choose!402 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(assert (=> d!15925 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15925 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)) lt!31646)))

(declare-fun b!71349 () Bool)

(declare-fun res!38044 () Bool)

(declare-fun e!46717 () Bool)

(assert (=> b!71349 (=> (not res!38044) (not e!46717))))

(declare-fun call!6191 () Bool)

(assert (=> b!71349 (= res!38044 call!6191)))

(declare-fun e!46719 () Bool)

(assert (=> b!71349 (= e!46719 e!46717)))

(declare-fun b!71350 () Bool)

(declare-fun e!46716 () Bool)

(assert (=> b!71350 (= e!46716 (not call!6192))))

(declare-fun b!71351 () Bool)

(assert (=> b!71351 (= e!46719 ((_ is Undefined!235) lt!31645))))

(declare-fun b!71352 () Bool)

(assert (=> b!71352 (= e!46718 e!46719)))

(declare-fun c!10388 () Bool)

(assert (=> b!71352 (= c!10388 ((_ is MissingVacant!235) lt!31645))))

(declare-fun b!71353 () Bool)

(assert (=> b!71353 (= e!46717 (not call!6192))))

(declare-fun b!71354 () Bool)

(declare-fun res!38045 () Bool)

(assert (=> b!71354 (=> (not res!38045) (not e!46717))))

(assert (=> b!71354 (= res!38045 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3073 lt!31645)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71354 (and (bvsge (index!3073 lt!31645) #b00000000000000000000000000000000) (bvslt (index!3073 lt!31645) (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71355 () Bool)

(assert (=> b!71355 (and (bvsge (index!3070 lt!31645) #b00000000000000000000000000000000) (bvslt (index!3070 lt!31645) (size!2090 (_keys!3840 newMap!16))))))

(declare-fun res!38046 () Bool)

(assert (=> b!71355 (= res!38046 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3070 lt!31645)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71355 (=> (not res!38046) (not e!46716))))

(declare-fun b!71356 () Bool)

(assert (=> b!71356 (= e!46718 e!46716)))

(declare-fun res!38043 () Bool)

(assert (=> b!71356 (= res!38043 call!6191)))

(assert (=> b!71356 (=> (not res!38043) (not e!46716))))

(declare-fun bm!6189 () Bool)

(assert (=> bm!6189 (= call!6191 (inRange!0 (ite c!10387 (index!3070 lt!31645) (index!3073 lt!31645)) (mask!6149 newMap!16)))))

(assert (= (and d!15925 c!10387) b!71356))

(assert (= (and d!15925 (not c!10387)) b!71352))

(assert (= (and b!71356 res!38043) b!71355))

(assert (= (and b!71355 res!38046) b!71350))

(assert (= (and b!71352 c!10388) b!71349))

(assert (= (and b!71352 (not c!10388)) b!71351))

(assert (= (and b!71349 res!38044) b!71354))

(assert (= (and b!71354 res!38045) b!71353))

(assert (= (or b!71356 b!71349) bm!6189))

(assert (= (or b!71350 b!71353) bm!6188))

(assert (=> d!15925 m!67893))

(assert (=> d!15925 m!68065))

(assert (=> d!15925 m!67893))

(declare-fun m!68567 () Bool)

(assert (=> d!15925 m!68567))

(assert (=> d!15925 m!68263))

(declare-fun m!68569 () Bool)

(assert (=> bm!6189 m!68569))

(assert (=> bm!6188 m!67893))

(assert (=> bm!6188 m!68031))

(declare-fun m!68571 () Bool)

(assert (=> b!71355 m!68571))

(declare-fun m!68573 () Bool)

(assert (=> b!71354 m!68573))

(assert (=> bm!6121 d!15925))

(declare-fun d!15927 () Bool)

(declare-fun e!46720 () Bool)

(assert (=> d!15927 e!46720))

(declare-fun res!38047 () Bool)

(assert (=> d!15927 (=> res!38047 e!46720)))

(declare-fun lt!31649 () Bool)

(assert (=> d!15927 (= res!38047 (not lt!31649))))

(declare-fun lt!31648 () Bool)

(assert (=> d!15927 (= lt!31649 lt!31648)))

(declare-fun lt!31647 () Unit!2002)

(declare-fun e!46721 () Unit!2002)

(assert (=> d!15927 (= lt!31647 e!46721)))

(declare-fun c!10389 () Bool)

(assert (=> d!15927 (= c!10389 lt!31648)))

(assert (=> d!15927 (= lt!31648 (containsKey!136 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15927 (= (contains!719 lt!31522 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31649)))

(declare-fun b!71357 () Bool)

(declare-fun lt!31650 () Unit!2002)

(assert (=> b!71357 (= e!46721 lt!31650)))

(assert (=> b!71357 (= lt!31650 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71357 (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71358 () Bool)

(declare-fun Unit!2020 () Unit!2002)

(assert (=> b!71358 (= e!46721 Unit!2020)))

(declare-fun b!71359 () Bool)

(assert (=> b!71359 (= e!46720 (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15927 c!10389) b!71357))

(assert (= (and d!15927 (not c!10389)) b!71358))

(assert (= (and d!15927 (not res!38047)) b!71359))

(declare-fun m!68575 () Bool)

(assert (=> d!15927 m!68575))

(declare-fun m!68577 () Bool)

(assert (=> b!71357 m!68577))

(declare-fun m!68579 () Bool)

(assert (=> b!71357 m!68579))

(assert (=> b!71357 m!68579))

(declare-fun m!68581 () Bool)

(assert (=> b!71357 m!68581))

(assert (=> b!71359 m!68579))

(assert (=> b!71359 m!68579))

(assert (=> b!71359 m!68581))

(assert (=> bm!6152 d!15927))

(declare-fun d!15929 () Bool)

(declare-fun e!46722 () Bool)

(assert (=> d!15929 e!46722))

(declare-fun res!38048 () Bool)

(assert (=> d!15929 (=> (not res!38048) (not e!46722))))

(declare-fun lt!31653 () ListLongMap!1415)

(assert (=> d!15929 (= res!38048 (contains!719 lt!31653 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun lt!31654 () List!1476)

(assert (=> d!15929 (= lt!31653 (ListLongMap!1416 lt!31654))))

(declare-fun lt!31652 () Unit!2002)

(declare-fun lt!31651 () Unit!2002)

(assert (=> d!15929 (= lt!31652 lt!31651)))

(assert (=> d!15929 (= (getValueByKey!132 lt!31654 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) (Some!137 (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!15929 (= lt!31651 (lemmaContainsTupThenGetReturnValue!49 lt!31654 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!15929 (= lt!31654 (insertStrictlySorted!52 (toList!723 e!46514) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!15929 (= (+!93 e!46514 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!31653)))

(declare-fun b!71360 () Bool)

(declare-fun res!38049 () Bool)

(assert (=> b!71360 (=> (not res!38049) (not e!46722))))

(assert (=> b!71360 (= res!38049 (= (getValueByKey!132 (toList!723 lt!31653) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) (Some!137 (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun b!71361 () Bool)

(assert (=> b!71361 (= e!46722 (contains!722 (toList!723 lt!31653) (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (= (and d!15929 res!38048) b!71360))

(assert (= (and b!71360 res!38049) b!71361))

(declare-fun m!68583 () Bool)

(assert (=> d!15929 m!68583))

(declare-fun m!68585 () Bool)

(assert (=> d!15929 m!68585))

(declare-fun m!68587 () Bool)

(assert (=> d!15929 m!68587))

(declare-fun m!68589 () Bool)

(assert (=> d!15929 m!68589))

(declare-fun m!68591 () Bool)

(assert (=> b!71360 m!68591))

(declare-fun m!68593 () Bool)

(assert (=> b!71361 m!68593))

(assert (=> bm!6126 d!15929))

(declare-fun b!71373 () Bool)

(declare-fun e!46725 () Bool)

(assert (=> b!71373 (= e!46725 (and (bvsge (extraKeys!2055 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2055 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!394 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!71370 () Bool)

(declare-fun res!38061 () Bool)

(assert (=> b!71370 (=> (not res!38061) (not e!46725))))

(assert (=> b!71370 (= res!38061 (and (= (size!2091 (_values!2175 newMap!16)) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001)) (= (size!2090 (_keys!3840 newMap!16)) (size!2091 (_values!2175 newMap!16))) (bvsge (_size!394 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!394 newMap!16) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!71371 () Bool)

(declare-fun res!38059 () Bool)

(assert (=> b!71371 (=> (not res!38059) (not e!46725))))

(declare-fun size!2094 (LongMapFixedSize!690) (_ BitVec 32))

(assert (=> b!71371 (= res!38059 (bvsge (size!2094 newMap!16) (_size!394 newMap!16)))))

(declare-fun d!15931 () Bool)

(declare-fun res!38060 () Bool)

(assert (=> d!15931 (=> (not res!38060) (not e!46725))))

(assert (=> d!15931 (= res!38060 (validMask!0 (mask!6149 newMap!16)))))

(assert (=> d!15931 (= (simpleValid!50 newMap!16) e!46725)))

(declare-fun b!71372 () Bool)

(declare-fun res!38058 () Bool)

(assert (=> b!71372 (=> (not res!38058) (not e!46725))))

(assert (=> b!71372 (= res!38058 (= (size!2094 newMap!16) (bvadd (_size!394 newMap!16) (bvsdiv (bvadd (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!15931 res!38060) b!71370))

(assert (= (and b!71370 res!38061) b!71371))

(assert (= (and b!71371 res!38059) b!71372))

(assert (= (and b!71372 res!38058) b!71373))

(declare-fun m!68595 () Bool)

(assert (=> b!71371 m!68595))

(assert (=> d!15931 m!68263))

(assert (=> b!71372 m!68595))

(assert (=> d!15833 d!15931))

(assert (=> b!71045 d!15893))

(declare-fun b!71377 () Bool)

(declare-fun e!46727 () Option!138)

(assert (=> b!71377 (= e!46727 None!136)))

(declare-fun b!71375 () Bool)

(declare-fun e!46726 () Option!138)

(assert (=> b!71375 (= e!46726 e!46727)))

(declare-fun c!10391 () Bool)

(assert (=> b!71375 (= c!10391 (and ((_ is Cons!1472) (toList!723 lt!31423)) (not (= (_1!1068 (h!2058 (toList!723 lt!31423))) (_1!1068 lt!31269)))))))

(declare-fun b!71374 () Bool)

(assert (=> b!71374 (= e!46726 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31423)))))))

(declare-fun d!15933 () Bool)

(declare-fun c!10390 () Bool)

(assert (=> d!15933 (= c!10390 (and ((_ is Cons!1472) (toList!723 lt!31423)) (= (_1!1068 (h!2058 (toList!723 lt!31423))) (_1!1068 lt!31269))))))

(assert (=> d!15933 (= (getValueByKey!132 (toList!723 lt!31423) (_1!1068 lt!31269)) e!46726)))

(declare-fun b!71376 () Bool)

(assert (=> b!71376 (= e!46727 (getValueByKey!132 (t!5012 (toList!723 lt!31423)) (_1!1068 lt!31269)))))

(assert (= (and d!15933 c!10390) b!71374))

(assert (= (and d!15933 (not c!10390)) b!71375))

(assert (= (and b!71375 c!10391) b!71376))

(assert (= (and b!71375 (not c!10391)) b!71377))

(declare-fun m!68597 () Bool)

(assert (=> b!71376 m!68597))

(assert (=> b!71014 d!15933))

(assert (=> d!15831 d!15827))

(declare-fun b!71378 () Bool)

(declare-fun c!10393 () Bool)

(assert (=> b!71378 (= c!10393 (and (not (= (bvand (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46737 () ListLongMap!1415)

(declare-fun e!46735 () ListLongMap!1415)

(assert (=> b!71378 (= e!46737 e!46735)))

(declare-fun b!71379 () Bool)

(declare-fun e!46733 () Bool)

(declare-fun e!46728 () Bool)

(assert (=> b!71379 (= e!46733 e!46728)))

(declare-fun res!38069 () Bool)

(declare-fun call!6195 () Bool)

(assert (=> b!71379 (= res!38069 call!6195)))

(assert (=> b!71379 (=> (not res!38069) (not e!46728))))

(declare-fun b!71380 () Bool)

(declare-fun e!46730 () Bool)

(declare-fun lt!31672 () ListLongMap!1415)

(assert (=> b!71380 (= e!46730 (= (apply!74 lt!31672 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))))

(declare-fun b!71381 () Bool)

(declare-fun e!46734 () Bool)

(assert (=> b!71381 (= e!46734 e!46730)))

(declare-fun res!38068 () Bool)

(declare-fun call!6193 () Bool)

(assert (=> b!71381 (= res!38068 call!6193)))

(assert (=> b!71381 (=> (not res!38068) (not e!46730))))

(declare-fun bm!6190 () Bool)

(assert (=> bm!6190 (= call!6195 (contains!719 lt!31672 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6191 () Bool)

(declare-fun call!6196 () ListLongMap!1415)

(declare-fun call!6197 () ListLongMap!1415)

(assert (=> bm!6191 (= call!6196 call!6197)))

(declare-fun b!71383 () Bool)

(declare-fun call!6199 () ListLongMap!1415)

(assert (=> b!71383 (= e!46735 call!6199)))

(declare-fun b!71384 () Bool)

(declare-fun e!46740 () Bool)

(assert (=> b!71384 (= e!46740 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6192 () Bool)

(declare-fun call!6194 () ListLongMap!1415)

(declare-fun call!6198 () ListLongMap!1415)

(assert (=> bm!6192 (= call!6194 call!6198)))

(declare-fun b!71385 () Bool)

(declare-fun e!46736 () Unit!2002)

(declare-fun lt!31675 () Unit!2002)

(assert (=> b!71385 (= e!46736 lt!31675)))

(declare-fun lt!31664 () ListLongMap!1415)

(assert (=> b!71385 (= lt!31664 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite c!10286 (_values!2175 newMap!16) lt!31387) (mask!6149 newMap!16) (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31673 () (_ BitVec 64))

(assert (=> b!71385 (= lt!31673 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31658 () (_ BitVec 64))

(assert (=> b!71385 (= lt!31658 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31670 () Unit!2002)

(assert (=> b!71385 (= lt!31670 (addStillContains!50 lt!31664 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) lt!31658))))

(assert (=> b!71385 (contains!719 (+!93 lt!31664 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) lt!31658)))

(declare-fun lt!31676 () Unit!2002)

(assert (=> b!71385 (= lt!31676 lt!31670)))

(declare-fun lt!31657 () ListLongMap!1415)

(assert (=> b!71385 (= lt!31657 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite c!10286 (_values!2175 newMap!16) lt!31387) (mask!6149 newMap!16) (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31663 () (_ BitVec 64))

(assert (=> b!71385 (= lt!31663 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31667 () (_ BitVec 64))

(assert (=> b!71385 (= lt!31667 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31669 () Unit!2002)

(assert (=> b!71385 (= lt!31669 (addApplyDifferent!50 lt!31657 lt!31663 (minValue!2096 newMap!16) lt!31667))))

(assert (=> b!71385 (= (apply!74 (+!93 lt!31657 (tuple2!2115 lt!31663 (minValue!2096 newMap!16))) lt!31667) (apply!74 lt!31657 lt!31667))))

(declare-fun lt!31674 () Unit!2002)

(assert (=> b!71385 (= lt!31674 lt!31669)))

(declare-fun lt!31671 () ListLongMap!1415)

(assert (=> b!71385 (= lt!31671 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite c!10286 (_values!2175 newMap!16) lt!31387) (mask!6149 newMap!16) (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31665 () (_ BitVec 64))

(assert (=> b!71385 (= lt!31665 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31659 () (_ BitVec 64))

(assert (=> b!71385 (= lt!31659 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31662 () Unit!2002)

(assert (=> b!71385 (= lt!31662 (addApplyDifferent!50 lt!31671 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) lt!31659))))

(assert (=> b!71385 (= (apply!74 (+!93 lt!31671 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) lt!31659) (apply!74 lt!31671 lt!31659))))

(declare-fun lt!31666 () Unit!2002)

(assert (=> b!71385 (= lt!31666 lt!31662)))

(declare-fun lt!31661 () ListLongMap!1415)

(assert (=> b!71385 (= lt!31661 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite c!10286 (_values!2175 newMap!16) lt!31387) (mask!6149 newMap!16) (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31656 () (_ BitVec 64))

(assert (=> b!71385 (= lt!31656 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31660 () (_ BitVec 64))

(assert (=> b!71385 (= lt!31660 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71385 (= lt!31675 (addApplyDifferent!50 lt!31661 lt!31656 (minValue!2096 newMap!16) lt!31660))))

(assert (=> b!71385 (= (apply!74 (+!93 lt!31661 (tuple2!2115 lt!31656 (minValue!2096 newMap!16))) lt!31660) (apply!74 lt!31661 lt!31660))))

(declare-fun b!71386 () Bool)

(declare-fun e!46738 () Bool)

(declare-fun e!46729 () Bool)

(assert (=> b!71386 (= e!46738 e!46729)))

(declare-fun res!38067 () Bool)

(assert (=> b!71386 (=> (not res!38067) (not e!46729))))

(assert (=> b!71386 (= res!38067 (contains!719 lt!31672 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71386 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71387 () Bool)

(assert (=> b!71387 (= e!46734 (not call!6193))))

(declare-fun b!71388 () Bool)

(declare-fun e!46739 () Bool)

(assert (=> b!71388 (= e!46739 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71389 () Bool)

(assert (=> b!71389 (= e!46737 call!6194)))

(declare-fun b!71390 () Bool)

(declare-fun e!46732 () ListLongMap!1415)

(assert (=> b!71390 (= e!46732 e!46737)))

(declare-fun c!10395 () Bool)

(assert (=> b!71390 (= c!10395 (and (not (= (bvand (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6193 () Bool)

(assert (=> bm!6193 (= call!6193 (contains!719 lt!31672 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71391 () Bool)

(assert (=> b!71391 (= e!46729 (= (apply!74 lt!31672 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (ite c!10286 (_values!2175 newMap!16) lt!31387)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71391 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (ite c!10286 (_values!2175 newMap!16) lt!31387))))))

(assert (=> b!71391 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71382 () Bool)

(assert (=> b!71382 (= e!46733 (not call!6195))))

(declare-fun d!15935 () Bool)

(declare-fun e!46731 () Bool)

(assert (=> d!15935 e!46731))

(declare-fun res!38065 () Bool)

(assert (=> d!15935 (=> (not res!38065) (not e!46731))))

(assert (=> d!15935 (= res!38065 (or (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))))

(declare-fun lt!31655 () ListLongMap!1415)

(assert (=> d!15935 (= lt!31672 lt!31655)))

(declare-fun lt!31668 () Unit!2002)

(assert (=> d!15935 (= lt!31668 e!46736)))

(declare-fun c!10396 () Bool)

(assert (=> d!15935 (= c!10396 e!46740)))

(declare-fun res!38070 () Bool)

(assert (=> d!15935 (=> (not res!38070) (not e!46740))))

(assert (=> d!15935 (= res!38070 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!15935 (= lt!31655 e!46732)))

(declare-fun c!10397 () Bool)

(assert (=> d!15935 (= c!10397 (and (not (= (bvand (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15935 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15935 (= (getCurrentListMap!421 (_keys!3840 newMap!16) (ite c!10286 (_values!2175 newMap!16) lt!31387) (mask!6149 newMap!16) (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31672)))

(declare-fun b!71392 () Bool)

(declare-fun Unit!2021 () Unit!2002)

(assert (=> b!71392 (= e!46736 Unit!2021)))

(declare-fun b!71393 () Bool)

(assert (=> b!71393 (= e!46728 (= (apply!74 lt!31672 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun bm!6194 () Bool)

(assert (=> bm!6194 (= call!6198 (+!93 (ite c!10397 call!6197 (ite c!10395 call!6196 call!6199)) (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun b!71394 () Bool)

(declare-fun res!38066 () Bool)

(assert (=> b!71394 (=> (not res!38066) (not e!46731))))

(assert (=> b!71394 (= res!38066 e!46734)))

(declare-fun c!10394 () Bool)

(assert (=> b!71394 (= c!10394 (not (= (bvand (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6195 () Bool)

(assert (=> bm!6195 (= call!6197 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite c!10286 (_values!2175 newMap!16) lt!31387) (mask!6149 newMap!16) (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!71395 () Bool)

(assert (=> b!71395 (= e!46732 (+!93 call!6198 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun bm!6196 () Bool)

(assert (=> bm!6196 (= call!6199 call!6196)))

(declare-fun b!71396 () Bool)

(assert (=> b!71396 (= e!46735 call!6194)))

(declare-fun b!71397 () Bool)

(declare-fun res!38063 () Bool)

(assert (=> b!71397 (=> (not res!38063) (not e!46731))))

(assert (=> b!71397 (= res!38063 e!46738)))

(declare-fun res!38064 () Bool)

(assert (=> b!71397 (=> res!38064 e!46738)))

(assert (=> b!71397 (= res!38064 (not e!46739))))

(declare-fun res!38062 () Bool)

(assert (=> b!71397 (=> (not res!38062) (not e!46739))))

(assert (=> b!71397 (= res!38062 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71398 () Bool)

(assert (=> b!71398 (= e!46731 e!46733)))

(declare-fun c!10392 () Bool)

(assert (=> b!71398 (= c!10392 (not (= (bvand (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!15935 c!10397) b!71395))

(assert (= (and d!15935 (not c!10397)) b!71390))

(assert (= (and b!71390 c!10395) b!71389))

(assert (= (and b!71390 (not c!10395)) b!71378))

(assert (= (and b!71378 c!10393) b!71396))

(assert (= (and b!71378 (not c!10393)) b!71383))

(assert (= (or b!71396 b!71383) bm!6196))

(assert (= (or b!71389 bm!6196) bm!6191))

(assert (= (or b!71389 b!71396) bm!6192))

(assert (= (or b!71395 bm!6191) bm!6195))

(assert (= (or b!71395 bm!6192) bm!6194))

(assert (= (and d!15935 res!38070) b!71384))

(assert (= (and d!15935 c!10396) b!71385))

(assert (= (and d!15935 (not c!10396)) b!71392))

(assert (= (and d!15935 res!38065) b!71397))

(assert (= (and b!71397 res!38062) b!71388))

(assert (= (and b!71397 (not res!38064)) b!71386))

(assert (= (and b!71386 res!38067) b!71391))

(assert (= (and b!71397 res!38063) b!71394))

(assert (= (and b!71394 c!10394) b!71381))

(assert (= (and b!71394 (not c!10394)) b!71387))

(assert (= (and b!71381 res!38068) b!71380))

(assert (= (or b!71381 b!71387) bm!6193))

(assert (= (and b!71394 res!38066) b!71398))

(assert (= (and b!71398 c!10392) b!71379))

(assert (= (and b!71398 (not c!10392)) b!71382))

(assert (= (and b!71379 res!38069) b!71393))

(assert (= (or b!71379 b!71382) bm!6190))

(declare-fun b_lambda!3197 () Bool)

(assert (=> (not b_lambda!3197) (not b!71391)))

(assert (=> b!71391 t!5019))

(declare-fun b_and!4391 () Bool)

(assert (= b_and!4387 (and (=> t!5019 result!2665) b_and!4391)))

(assert (=> b!71391 t!5021))

(declare-fun b_and!4393 () Bool)

(assert (= b_and!4389 (and (=> t!5021 result!2667) b_and!4393)))

(assert (=> b!71386 m!68283))

(assert (=> b!71386 m!68283))

(declare-fun m!68599 () Bool)

(assert (=> b!71386 m!68599))

(assert (=> b!71391 m!68287))

(assert (=> b!71391 m!68283))

(declare-fun m!68601 () Bool)

(assert (=> b!71391 m!68601))

(assert (=> b!71391 m!68283))

(declare-fun m!68603 () Bool)

(assert (=> b!71391 m!68603))

(assert (=> b!71391 m!68603))

(assert (=> b!71391 m!68287))

(declare-fun m!68605 () Bool)

(assert (=> b!71391 m!68605))

(declare-fun m!68607 () Bool)

(assert (=> bm!6195 m!68607))

(assert (=> b!71384 m!68283))

(assert (=> b!71384 m!68283))

(assert (=> b!71384 m!68297))

(declare-fun m!68609 () Bool)

(assert (=> b!71380 m!68609))

(declare-fun m!68611 () Bool)

(assert (=> bm!6194 m!68611))

(declare-fun m!68613 () Bool)

(assert (=> b!71393 m!68613))

(declare-fun m!68615 () Bool)

(assert (=> b!71395 m!68615))

(assert (=> d!15935 m!68263))

(declare-fun m!68617 () Bool)

(assert (=> bm!6190 m!68617))

(declare-fun m!68619 () Bool)

(assert (=> b!71385 m!68619))

(declare-fun m!68621 () Bool)

(assert (=> b!71385 m!68621))

(declare-fun m!68623 () Bool)

(assert (=> b!71385 m!68623))

(declare-fun m!68625 () Bool)

(assert (=> b!71385 m!68625))

(assert (=> b!71385 m!68619))

(declare-fun m!68627 () Bool)

(assert (=> b!71385 m!68627))

(declare-fun m!68629 () Bool)

(assert (=> b!71385 m!68629))

(declare-fun m!68631 () Bool)

(assert (=> b!71385 m!68631))

(declare-fun m!68633 () Bool)

(assert (=> b!71385 m!68633))

(assert (=> b!71385 m!68283))

(declare-fun m!68635 () Bool)

(assert (=> b!71385 m!68635))

(assert (=> b!71385 m!68607))

(assert (=> b!71385 m!68621))

(declare-fun m!68637 () Bool)

(assert (=> b!71385 m!68637))

(declare-fun m!68639 () Bool)

(assert (=> b!71385 m!68639))

(assert (=> b!71385 m!68633))

(declare-fun m!68641 () Bool)

(assert (=> b!71385 m!68641))

(declare-fun m!68643 () Bool)

(assert (=> b!71385 m!68643))

(declare-fun m!68645 () Bool)

(assert (=> b!71385 m!68645))

(assert (=> b!71385 m!68643))

(declare-fun m!68647 () Bool)

(assert (=> b!71385 m!68647))

(declare-fun m!68649 () Bool)

(assert (=> bm!6193 m!68649))

(assert (=> b!71388 m!68283))

(assert (=> b!71388 m!68283))

(assert (=> b!71388 m!68297))

(assert (=> bm!6127 d!15935))

(declare-fun d!15937 () Bool)

(declare-fun e!46741 () Bool)

(assert (=> d!15937 e!46741))

(declare-fun res!38071 () Bool)

(assert (=> d!15937 (=> res!38071 e!46741)))

(declare-fun lt!31679 () Bool)

(assert (=> d!15937 (= res!38071 (not lt!31679))))

(declare-fun lt!31678 () Bool)

(assert (=> d!15937 (= lt!31679 lt!31678)))

(declare-fun lt!31677 () Unit!2002)

(declare-fun e!46742 () Unit!2002)

(assert (=> d!15937 (= lt!31677 e!46742)))

(declare-fun c!10398 () Bool)

(assert (=> d!15937 (= c!10398 lt!31678)))

(assert (=> d!15937 (= lt!31678 (containsKey!136 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))

(assert (=> d!15937 (= (contains!719 e!46499 (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))) lt!31679)))

(declare-fun b!71399 () Bool)

(declare-fun lt!31680 () Unit!2002)

(assert (=> b!71399 (= e!46742 lt!31680)))

(assert (=> b!71399 (= lt!31680 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))

(assert (=> b!71399 (isDefined!85 (getValueByKey!132 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))

(declare-fun b!71400 () Bool)

(declare-fun Unit!2022 () Unit!2002)

(assert (=> b!71400 (= e!46742 Unit!2022)))

(declare-fun b!71401 () Bool)

(assert (=> b!71401 (= e!46741 (isDefined!85 (getValueByKey!132 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))))))))

(assert (= (and d!15937 c!10398) b!71399))

(assert (= (and d!15937 (not c!10398)) b!71400))

(assert (= (and d!15937 (not res!38071)) b!71401))

(declare-fun m!68651 () Bool)

(assert (=> d!15937 m!68651))

(declare-fun m!68653 () Bool)

(assert (=> b!71399 m!68653))

(declare-fun m!68655 () Bool)

(assert (=> b!71399 m!68655))

(assert (=> b!71399 m!68655))

(declare-fun m!68657 () Bool)

(assert (=> b!71399 m!68657))

(assert (=> b!71401 m!68655))

(assert (=> b!71401 m!68655))

(assert (=> b!71401 m!68657))

(assert (=> bm!6131 d!15937))

(declare-fun d!15939 () Bool)

(declare-fun lt!31683 () Bool)

(declare-fun content!76 (List!1476) (InoxSet tuple2!2114))

(assert (=> d!15939 (= lt!31683 (select (content!76 (toList!723 lt!31459)) lt!31265))))

(declare-fun e!46747 () Bool)

(assert (=> d!15939 (= lt!31683 e!46747)))

(declare-fun res!38077 () Bool)

(assert (=> d!15939 (=> (not res!38077) (not e!46747))))

(assert (=> d!15939 (= res!38077 ((_ is Cons!1472) (toList!723 lt!31459)))))

(assert (=> d!15939 (= (contains!722 (toList!723 lt!31459) lt!31265) lt!31683)))

(declare-fun b!71406 () Bool)

(declare-fun e!46748 () Bool)

(assert (=> b!71406 (= e!46747 e!46748)))

(declare-fun res!38076 () Bool)

(assert (=> b!71406 (=> res!38076 e!46748)))

(assert (=> b!71406 (= res!38076 (= (h!2058 (toList!723 lt!31459)) lt!31265))))

(declare-fun b!71407 () Bool)

(assert (=> b!71407 (= e!46748 (contains!722 (t!5012 (toList!723 lt!31459)) lt!31265))))

(assert (= (and d!15939 res!38077) b!71406))

(assert (= (and b!71406 (not res!38076)) b!71407))

(declare-fun m!68659 () Bool)

(assert (=> d!15939 m!68659))

(declare-fun m!68661 () Bool)

(assert (=> d!15939 m!68661))

(declare-fun m!68663 () Bool)

(assert (=> b!71407 m!68663))

(assert (=> b!71057 d!15939))

(declare-fun d!15941 () Bool)

(declare-fun e!46749 () Bool)

(assert (=> d!15941 e!46749))

(declare-fun res!38078 () Bool)

(assert (=> d!15941 (=> res!38078 e!46749)))

(declare-fun lt!31686 () Bool)

(assert (=> d!15941 (= res!38078 (not lt!31686))))

(declare-fun lt!31685 () Bool)

(assert (=> d!15941 (= lt!31686 lt!31685)))

(declare-fun lt!31684 () Unit!2002)

(declare-fun e!46750 () Unit!2002)

(assert (=> d!15941 (= lt!31684 e!46750)))

(declare-fun c!10399 () Bool)

(assert (=> d!15941 (= c!10399 lt!31685)))

(assert (=> d!15941 (= lt!31685 (containsKey!136 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!15941 (= (contains!719 lt!31444 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!31686)))

(declare-fun b!71408 () Bool)

(declare-fun lt!31687 () Unit!2002)

(assert (=> b!71408 (= e!46750 lt!31687)))

(assert (=> b!71408 (= lt!31687 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71408 (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71409 () Bool)

(declare-fun Unit!2023 () Unit!2002)

(assert (=> b!71409 (= e!46750 Unit!2023)))

(declare-fun b!71410 () Bool)

(assert (=> b!71410 (= e!46749 (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!15941 c!10399) b!71408))

(assert (= (and d!15941 (not c!10399)) b!71409))

(assert (= (and d!15941 (not res!38078)) b!71410))

(assert (=> d!15941 m!68007))

(declare-fun m!68665 () Bool)

(assert (=> d!15941 m!68665))

(assert (=> b!71408 m!68007))

(declare-fun m!68667 () Bool)

(assert (=> b!71408 m!68667))

(assert (=> b!71408 m!68007))

(assert (=> b!71408 m!68563))

(assert (=> b!71408 m!68563))

(declare-fun m!68669 () Bool)

(assert (=> b!71408 m!68669))

(assert (=> b!71410 m!68007))

(assert (=> b!71410 m!68563))

(assert (=> b!71410 m!68563))

(assert (=> b!71410 m!68669))

(assert (=> b!71041 d!15941))

(declare-fun c!10401 () Bool)

(declare-fun b!71411 () Bool)

(assert (=> b!71411 (= c!10401 (and (not (= (bvand (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46760 () ListLongMap!1415)

(declare-fun e!46758 () ListLongMap!1415)

(assert (=> b!71411 (= e!46760 e!46758)))

(declare-fun b!71412 () Bool)

(declare-fun e!46756 () Bool)

(declare-fun e!46751 () Bool)

(assert (=> b!71412 (= e!46756 e!46751)))

(declare-fun res!38086 () Bool)

(declare-fun call!6202 () Bool)

(assert (=> b!71412 (= res!38086 call!6202)))

(assert (=> b!71412 (=> (not res!38086) (not e!46751))))

(declare-fun b!71413 () Bool)

(declare-fun e!46753 () Bool)

(declare-fun lt!31705 () ListLongMap!1415)

(assert (=> b!71413 (= e!46753 (= (apply!74 lt!31705 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!71414 () Bool)

(declare-fun e!46757 () Bool)

(assert (=> b!71414 (= e!46757 e!46753)))

(declare-fun res!38085 () Bool)

(declare-fun call!6200 () Bool)

(assert (=> b!71414 (= res!38085 call!6200)))

(assert (=> b!71414 (=> (not res!38085) (not e!46753))))

(declare-fun bm!6197 () Bool)

(assert (=> bm!6197 (= call!6202 (contains!719 lt!31705 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6198 () Bool)

(declare-fun call!6203 () ListLongMap!1415)

(declare-fun call!6204 () ListLongMap!1415)

(assert (=> bm!6198 (= call!6203 call!6204)))

(declare-fun b!71416 () Bool)

(declare-fun call!6206 () ListLongMap!1415)

(assert (=> b!71416 (= e!46758 call!6206)))

(declare-fun b!71417 () Bool)

(declare-fun e!46763 () Bool)

(assert (=> b!71417 (= e!46763 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6199 () Bool)

(declare-fun call!6201 () ListLongMap!1415)

(declare-fun call!6205 () ListLongMap!1415)

(assert (=> bm!6199 (= call!6201 call!6205)))

(declare-fun b!71418 () Bool)

(declare-fun e!46759 () Unit!2002)

(declare-fun lt!31708 () Unit!2002)

(assert (=> b!71418 (= e!46759 lt!31708)))

(declare-fun lt!31697 () ListLongMap!1415)

(assert (=> b!71418 (= lt!31697 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) (zeroValue!2096 newMap!16) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31706 () (_ BitVec 64))

(assert (=> b!71418 (= lt!31706 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31691 () (_ BitVec 64))

(assert (=> b!71418 (= lt!31691 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31703 () Unit!2002)

(assert (=> b!71418 (= lt!31703 (addStillContains!50 lt!31697 lt!31706 (zeroValue!2096 newMap!16) lt!31691))))

(assert (=> b!71418 (contains!719 (+!93 lt!31697 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16))) lt!31691)))

(declare-fun lt!31709 () Unit!2002)

(assert (=> b!71418 (= lt!31709 lt!31703)))

(declare-fun lt!31690 () ListLongMap!1415)

(assert (=> b!71418 (= lt!31690 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) (zeroValue!2096 newMap!16) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31696 () (_ BitVec 64))

(assert (=> b!71418 (= lt!31696 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31700 () (_ BitVec 64))

(assert (=> b!71418 (= lt!31700 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31702 () Unit!2002)

(assert (=> b!71418 (= lt!31702 (addApplyDifferent!50 lt!31690 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) lt!31700))))

(assert (=> b!71418 (= (apply!74 (+!93 lt!31690 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) lt!31700) (apply!74 lt!31690 lt!31700))))

(declare-fun lt!31707 () Unit!2002)

(assert (=> b!71418 (= lt!31707 lt!31702)))

(declare-fun lt!31704 () ListLongMap!1415)

(assert (=> b!71418 (= lt!31704 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) (zeroValue!2096 newMap!16) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31698 () (_ BitVec 64))

(assert (=> b!71418 (= lt!31698 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31692 () (_ BitVec 64))

(assert (=> b!71418 (= lt!31692 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31695 () Unit!2002)

(assert (=> b!71418 (= lt!31695 (addApplyDifferent!50 lt!31704 lt!31698 (zeroValue!2096 newMap!16) lt!31692))))

(assert (=> b!71418 (= (apply!74 (+!93 lt!31704 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16))) lt!31692) (apply!74 lt!31704 lt!31692))))

(declare-fun lt!31699 () Unit!2002)

(assert (=> b!71418 (= lt!31699 lt!31695)))

(declare-fun lt!31694 () ListLongMap!1415)

(assert (=> b!71418 (= lt!31694 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) (zeroValue!2096 newMap!16) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31689 () (_ BitVec 64))

(assert (=> b!71418 (= lt!31689 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31693 () (_ BitVec 64))

(assert (=> b!71418 (= lt!31693 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71418 (= lt!31708 (addApplyDifferent!50 lt!31694 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) lt!31693))))

(assert (=> b!71418 (= (apply!74 (+!93 lt!31694 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) lt!31693) (apply!74 lt!31694 lt!31693))))

(declare-fun b!71419 () Bool)

(declare-fun e!46761 () Bool)

(declare-fun e!46752 () Bool)

(assert (=> b!71419 (= e!46761 e!46752)))

(declare-fun res!38084 () Bool)

(assert (=> b!71419 (=> (not res!38084) (not e!46752))))

(assert (=> b!71419 (= res!38084 (contains!719 lt!31705 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71419 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71420 () Bool)

(assert (=> b!71420 (= e!46757 (not call!6200))))

(declare-fun b!71421 () Bool)

(declare-fun e!46762 () Bool)

(assert (=> b!71421 (= e!46762 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71422 () Bool)

(assert (=> b!71422 (= e!46760 call!6201)))

(declare-fun b!71423 () Bool)

(declare-fun e!46755 () ListLongMap!1415)

(assert (=> b!71423 (= e!46755 e!46760)))

(declare-fun c!10403 () Bool)

(assert (=> b!71423 (= c!10403 (and (not (= (bvand (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6200 () Bool)

(assert (=> bm!6200 (= call!6200 (contains!719 lt!31705 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71424 () Bool)

(assert (=> b!71424 (= e!46752 (= (apply!74 lt!31705 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71424 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))))))))

(assert (=> b!71424 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71415 () Bool)

(assert (=> b!71415 (= e!46756 (not call!6202))))

(declare-fun d!15943 () Bool)

(declare-fun e!46754 () Bool)

(assert (=> d!15943 e!46754))

(declare-fun res!38082 () Bool)

(assert (=> d!15943 (=> (not res!38082) (not e!46754))))

(assert (=> d!15943 (= res!38082 (or (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))))

(declare-fun lt!31688 () ListLongMap!1415)

(assert (=> d!15943 (= lt!31705 lt!31688)))

(declare-fun lt!31701 () Unit!2002)

(assert (=> d!15943 (= lt!31701 e!46759)))

(declare-fun c!10404 () Bool)

(assert (=> d!15943 (= c!10404 e!46763)))

(declare-fun res!38087 () Bool)

(assert (=> d!15943 (=> (not res!38087) (not e!46763))))

(assert (=> d!15943 (= res!38087 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!15943 (= lt!31688 e!46755)))

(declare-fun c!10405 () Bool)

(assert (=> d!15943 (= c!10405 (and (not (= (bvand (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15943 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15943 (= (getCurrentListMap!421 (_keys!3840 newMap!16) (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) (zeroValue!2096 newMap!16) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31705)))

(declare-fun b!71425 () Bool)

(declare-fun Unit!2024 () Unit!2002)

(assert (=> b!71425 (= e!46759 Unit!2024)))

(declare-fun b!71426 () Bool)

(assert (=> b!71426 (= e!46751 (= (apply!74 lt!31705 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))

(declare-fun bm!6201 () Bool)

(assert (=> bm!6201 (= call!6205 (+!93 (ite c!10405 call!6204 (ite c!10403 call!6203 call!6206)) (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(declare-fun b!71427 () Bool)

(declare-fun res!38083 () Bool)

(assert (=> b!71427 (=> (not res!38083) (not e!46754))))

(assert (=> b!71427 (= res!38083 e!46757)))

(declare-fun c!10402 () Bool)

(assert (=> b!71427 (= c!10402 (not (= (bvand (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6202 () Bool)

(assert (=> bm!6202 (= call!6204 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) (zeroValue!2096 newMap!16) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!71428 () Bool)

(assert (=> b!71428 (= e!46755 (+!93 call!6205 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))

(declare-fun bm!6203 () Bool)

(assert (=> bm!6203 (= call!6206 call!6203)))

(declare-fun b!71429 () Bool)

(assert (=> b!71429 (= e!46758 call!6201)))

(declare-fun b!71430 () Bool)

(declare-fun res!38080 () Bool)

(assert (=> b!71430 (=> (not res!38080) (not e!46754))))

(assert (=> b!71430 (= res!38080 e!46761)))

(declare-fun res!38081 () Bool)

(assert (=> b!71430 (=> res!38081 e!46761)))

(assert (=> b!71430 (= res!38081 (not e!46762))))

(declare-fun res!38079 () Bool)

(assert (=> b!71430 (=> (not res!38079) (not e!46762))))

(assert (=> b!71430 (= res!38079 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71431 () Bool)

(assert (=> b!71431 (= e!46754 e!46756)))

(declare-fun c!10400 () Bool)

(assert (=> b!71431 (= c!10400 (not (= (bvand (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!15943 c!10405) b!71428))

(assert (= (and d!15943 (not c!10405)) b!71423))

(assert (= (and b!71423 c!10403) b!71422))

(assert (= (and b!71423 (not c!10403)) b!71411))

(assert (= (and b!71411 c!10401) b!71429))

(assert (= (and b!71411 (not c!10401)) b!71416))

(assert (= (or b!71429 b!71416) bm!6203))

(assert (= (or b!71422 bm!6203) bm!6198))

(assert (= (or b!71422 b!71429) bm!6199))

(assert (= (or b!71428 bm!6198) bm!6202))

(assert (= (or b!71428 bm!6199) bm!6201))

(assert (= (and d!15943 res!38087) b!71417))

(assert (= (and d!15943 c!10404) b!71418))

(assert (= (and d!15943 (not c!10404)) b!71425))

(assert (= (and d!15943 res!38082) b!71430))

(assert (= (and b!71430 res!38079) b!71421))

(assert (= (and b!71430 (not res!38081)) b!71419))

(assert (= (and b!71419 res!38084) b!71424))

(assert (= (and b!71430 res!38080) b!71427))

(assert (= (and b!71427 c!10402) b!71414))

(assert (= (and b!71427 (not c!10402)) b!71420))

(assert (= (and b!71414 res!38085) b!71413))

(assert (= (or b!71414 b!71420) bm!6200))

(assert (= (and b!71427 res!38083) b!71431))

(assert (= (and b!71431 c!10400) b!71412))

(assert (= (and b!71431 (not c!10400)) b!71415))

(assert (= (and b!71412 res!38086) b!71426))

(assert (= (or b!71412 b!71415) bm!6197))

(declare-fun b_lambda!3199 () Bool)

(assert (=> (not b_lambda!3199) (not b!71424)))

(assert (=> b!71424 t!5019))

(declare-fun b_and!4395 () Bool)

(assert (= b_and!4391 (and (=> t!5019 result!2665) b_and!4395)))

(assert (=> b!71424 t!5021))

(declare-fun b_and!4397 () Bool)

(assert (= b_and!4393 (and (=> t!5021 result!2667) b_and!4397)))

(assert (=> b!71419 m!68283))

(assert (=> b!71419 m!68283))

(declare-fun m!68671 () Bool)

(assert (=> b!71419 m!68671))

(assert (=> b!71424 m!68287))

(assert (=> b!71424 m!68283))

(declare-fun m!68673 () Bool)

(assert (=> b!71424 m!68673))

(assert (=> b!71424 m!68283))

(declare-fun m!68675 () Bool)

(assert (=> b!71424 m!68675))

(assert (=> b!71424 m!68675))

(assert (=> b!71424 m!68287))

(declare-fun m!68677 () Bool)

(assert (=> b!71424 m!68677))

(declare-fun m!68679 () Bool)

(assert (=> bm!6202 m!68679))

(assert (=> b!71417 m!68283))

(assert (=> b!71417 m!68283))

(assert (=> b!71417 m!68297))

(declare-fun m!68681 () Bool)

(assert (=> b!71413 m!68681))

(declare-fun m!68683 () Bool)

(assert (=> bm!6201 m!68683))

(declare-fun m!68685 () Bool)

(assert (=> b!71426 m!68685))

(declare-fun m!68687 () Bool)

(assert (=> b!71428 m!68687))

(assert (=> d!15943 m!68263))

(declare-fun m!68689 () Bool)

(assert (=> bm!6197 m!68689))

(declare-fun m!68691 () Bool)

(assert (=> b!71418 m!68691))

(declare-fun m!68693 () Bool)

(assert (=> b!71418 m!68693))

(declare-fun m!68695 () Bool)

(assert (=> b!71418 m!68695))

(declare-fun m!68697 () Bool)

(assert (=> b!71418 m!68697))

(assert (=> b!71418 m!68691))

(declare-fun m!68699 () Bool)

(assert (=> b!71418 m!68699))

(declare-fun m!68701 () Bool)

(assert (=> b!71418 m!68701))

(declare-fun m!68703 () Bool)

(assert (=> b!71418 m!68703))

(declare-fun m!68705 () Bool)

(assert (=> b!71418 m!68705))

(assert (=> b!71418 m!68283))

(declare-fun m!68707 () Bool)

(assert (=> b!71418 m!68707))

(assert (=> b!71418 m!68679))

(assert (=> b!71418 m!68693))

(declare-fun m!68709 () Bool)

(assert (=> b!71418 m!68709))

(declare-fun m!68711 () Bool)

(assert (=> b!71418 m!68711))

(assert (=> b!71418 m!68705))

(declare-fun m!68713 () Bool)

(assert (=> b!71418 m!68713))

(declare-fun m!68715 () Bool)

(assert (=> b!71418 m!68715))

(declare-fun m!68717 () Bool)

(assert (=> b!71418 m!68717))

(assert (=> b!71418 m!68715))

(declare-fun m!68719 () Bool)

(assert (=> b!71418 m!68719))

(declare-fun m!68721 () Bool)

(assert (=> bm!6200 m!68721))

(assert (=> b!71421 m!68283))

(assert (=> b!71421 m!68283))

(assert (=> b!71421 m!68297))

(assert (=> bm!6120 d!15943))

(declare-fun b!71444 () Bool)

(declare-fun e!46771 () SeekEntryResult!235)

(declare-fun e!46770 () SeekEntryResult!235)

(assert (=> b!71444 (= e!46771 e!46770)))

(declare-fun lt!31717 () (_ BitVec 64))

(declare-fun lt!31716 () SeekEntryResult!235)

(assert (=> b!71444 (= lt!31717 (select (arr!1853 (_keys!3840 newMap!16)) (index!3072 lt!31716)))))

(declare-fun c!10413 () Bool)

(assert (=> b!71444 (= c!10413 (= lt!31717 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!71445 () Bool)

(declare-fun c!10412 () Bool)

(assert (=> b!71445 (= c!10412 (= lt!31717 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46772 () SeekEntryResult!235)

(assert (=> b!71445 (= e!46770 e!46772)))

(declare-fun b!71446 () Bool)

(assert (=> b!71446 (= e!46770 (Found!235 (index!3072 lt!31716)))))

(declare-fun b!71447 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3881 (_ BitVec 32)) SeekEntryResult!235)

(assert (=> b!71447 (= e!46772 (seekKeyOrZeroReturnVacant!0 (x!11007 lt!31716) (index!3072 lt!31716) (index!3072 lt!31716) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!71448 () Bool)

(assert (=> b!71448 (= e!46771 Undefined!235)))

(declare-fun d!15945 () Bool)

(declare-fun lt!31718 () SeekEntryResult!235)

(assert (=> d!15945 (and (or ((_ is Undefined!235) lt!31718) (not ((_ is Found!235) lt!31718)) (and (bvsge (index!3071 lt!31718) #b00000000000000000000000000000000) (bvslt (index!3071 lt!31718) (size!2090 (_keys!3840 newMap!16))))) (or ((_ is Undefined!235) lt!31718) ((_ is Found!235) lt!31718) (not ((_ is MissingZero!235) lt!31718)) (and (bvsge (index!3070 lt!31718) #b00000000000000000000000000000000) (bvslt (index!3070 lt!31718) (size!2090 (_keys!3840 newMap!16))))) (or ((_ is Undefined!235) lt!31718) ((_ is Found!235) lt!31718) ((_ is MissingZero!235) lt!31718) (not ((_ is MissingVacant!235) lt!31718)) (and (bvsge (index!3073 lt!31718) #b00000000000000000000000000000000) (bvslt (index!3073 lt!31718) (size!2090 (_keys!3840 newMap!16))))) (or ((_ is Undefined!235) lt!31718) (ite ((_ is Found!235) lt!31718) (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31718)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (ite ((_ is MissingZero!235) lt!31718) (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3070 lt!31718)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!235) lt!31718) (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3073 lt!31718)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15945 (= lt!31718 e!46771)))

(declare-fun c!10414 () Bool)

(assert (=> d!15945 (= c!10414 (and ((_ is Intermediate!235) lt!31716) (undefined!1047 lt!31716)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3881 (_ BitVec 32)) SeekEntryResult!235)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!15945 (= lt!31716 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (mask!6149 newMap!16)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(assert (=> d!15945 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15945 (= (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)) lt!31718)))

(declare-fun b!71449 () Bool)

(assert (=> b!71449 (= e!46772 (MissingZero!235 (index!3072 lt!31716)))))

(assert (= (and d!15945 c!10414) b!71448))

(assert (= (and d!15945 (not c!10414)) b!71444))

(assert (= (and b!71444 c!10413) b!71446))

(assert (= (and b!71444 (not c!10413)) b!71445))

(assert (= (and b!71445 c!10412) b!71449))

(assert (= (and b!71445 (not c!10412)) b!71447))

(declare-fun m!68723 () Bool)

(assert (=> b!71444 m!68723))

(assert (=> b!71447 m!67893))

(declare-fun m!68725 () Bool)

(assert (=> b!71447 m!68725))

(declare-fun m!68727 () Bool)

(assert (=> d!15945 m!68727))

(assert (=> d!15945 m!68263))

(declare-fun m!68729 () Bool)

(assert (=> d!15945 m!68729))

(assert (=> d!15945 m!67893))

(declare-fun m!68731 () Bool)

(assert (=> d!15945 m!68731))

(declare-fun m!68733 () Bool)

(assert (=> d!15945 m!68733))

(assert (=> d!15945 m!67893))

(assert (=> d!15945 m!68729))

(declare-fun m!68735 () Bool)

(assert (=> d!15945 m!68735))

(assert (=> b!71009 d!15945))

(declare-fun d!15947 () Bool)

(assert (=> d!15947 (= (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (and (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70864 d!15947))

(declare-fun d!15949 () Bool)

(declare-fun lt!31719 () Bool)

(assert (=> d!15949 (= lt!31719 (select (content!76 (toList!723 lt!31452)) lt!31265))))

(declare-fun e!46773 () Bool)

(assert (=> d!15949 (= lt!31719 e!46773)))

(declare-fun res!38089 () Bool)

(assert (=> d!15949 (=> (not res!38089) (not e!46773))))

(assert (=> d!15949 (= res!38089 ((_ is Cons!1472) (toList!723 lt!31452)))))

(assert (=> d!15949 (= (contains!722 (toList!723 lt!31452) lt!31265) lt!31719)))

(declare-fun b!71450 () Bool)

(declare-fun e!46774 () Bool)

(assert (=> b!71450 (= e!46773 e!46774)))

(declare-fun res!38088 () Bool)

(assert (=> b!71450 (=> res!38088 e!46774)))

(assert (=> b!71450 (= res!38088 (= (h!2058 (toList!723 lt!31452)) lt!31265))))

(declare-fun b!71451 () Bool)

(assert (=> b!71451 (= e!46774 (contains!722 (t!5012 (toList!723 lt!31452)) lt!31265))))

(assert (= (and d!15949 res!38089) b!71450))

(assert (= (and b!71450 (not res!38088)) b!71451))

(declare-fun m!68737 () Bool)

(assert (=> d!15949 m!68737))

(declare-fun m!68739 () Bool)

(assert (=> d!15949 m!68739))

(declare-fun m!68741 () Bool)

(assert (=> b!71451 m!68741))

(assert (=> b!71055 d!15949))

(declare-fun d!15951 () Bool)

(declare-fun isEmpty!314 (Option!138) Bool)

(assert (=> d!15951 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))))

(declare-fun bs!3058 () Bool)

(assert (= bs!3058 d!15951))

(assert (=> bs!3058 m!68027))

(declare-fun m!68743 () Bool)

(assert (=> bs!3058 m!68743))

(assert (=> b!70883 d!15951))

(declare-fun b!71455 () Bool)

(declare-fun e!46776 () Option!138)

(assert (=> b!71455 (= e!46776 None!136)))

(declare-fun b!71453 () Bool)

(declare-fun e!46775 () Option!138)

(assert (=> b!71453 (= e!46775 e!46776)))

(declare-fun c!10416 () Bool)

(assert (=> b!71453 (= c!10416 (and ((_ is Cons!1472) (toList!723 lt!31273)) (not (= (_1!1068 (h!2058 (toList!723 lt!31273))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))))

(declare-fun b!71452 () Bool)

(assert (=> b!71452 (= e!46775 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31273)))))))

(declare-fun d!15953 () Bool)

(declare-fun c!10415 () Bool)

(assert (=> d!15953 (= c!10415 (and ((_ is Cons!1472) (toList!723 lt!31273)) (= (_1!1068 (h!2058 (toList!723 lt!31273))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (=> d!15953 (= (getValueByKey!132 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) e!46775)))

(declare-fun b!71454 () Bool)

(assert (=> b!71454 (= e!46776 (getValueByKey!132 (t!5012 (toList!723 lt!31273)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!15953 c!10415) b!71452))

(assert (= (and d!15953 (not c!10415)) b!71453))

(assert (= (and b!71453 c!10416) b!71454))

(assert (= (and b!71453 (not c!10416)) b!71455))

(assert (=> b!71454 m!67893))

(declare-fun m!68745 () Bool)

(assert (=> b!71454 m!68745))

(assert (=> b!70883 d!15953))

(declare-fun d!15955 () Bool)

(declare-fun res!38090 () Bool)

(declare-fun e!46777 () Bool)

(assert (=> d!15955 (=> (not res!38090) (not e!46777))))

(assert (=> d!15955 (= res!38090 (simpleValid!50 (v!2514 (underlying!257 thiss!992))))))

(assert (=> d!15955 (= (valid!287 (v!2514 (underlying!257 thiss!992))) e!46777)))

(declare-fun b!71456 () Bool)

(declare-fun res!38091 () Bool)

(assert (=> b!71456 (=> (not res!38091) (not e!46777))))

(assert (=> b!71456 (= res!38091 (= (arrayCountValidKeys!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000 (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))) (_size!394 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun b!71457 () Bool)

(declare-fun res!38092 () Bool)

(assert (=> b!71457 (=> (not res!38092) (not e!46777))))

(assert (=> b!71457 (= res!38092 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun b!71458 () Bool)

(assert (=> b!71458 (= e!46777 (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000 Nil!1472))))

(assert (= (and d!15955 res!38090) b!71456))

(assert (= (and b!71456 res!38091) b!71457))

(assert (= (and b!71457 res!38092) b!71458))

(declare-fun m!68747 () Bool)

(assert (=> d!15955 m!68747))

(declare-fun m!68749 () Bool)

(assert (=> b!71456 m!68749))

(declare-fun m!68751 () Bool)

(assert (=> b!71457 m!68751))

(declare-fun m!68753 () Bool)

(assert (=> b!71458 m!68753))

(assert (=> d!15839 d!15955))

(assert (=> d!15829 d!15857))

(declare-fun d!15957 () Bool)

(declare-fun e!46778 () Bool)

(assert (=> d!15957 e!46778))

(declare-fun res!38093 () Bool)

(assert (=> d!15957 (=> res!38093 e!46778)))

(declare-fun lt!31722 () Bool)

(assert (=> d!15957 (= res!38093 (not lt!31722))))

(declare-fun lt!31721 () Bool)

(assert (=> d!15957 (= lt!31722 lt!31721)))

(declare-fun lt!31720 () Unit!2002)

(declare-fun e!46779 () Unit!2002)

(assert (=> d!15957 (= lt!31720 e!46779)))

(declare-fun c!10417 () Bool)

(assert (=> d!15957 (= c!10417 lt!31721)))

(assert (=> d!15957 (= lt!31721 (containsKey!136 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15957 (= (contains!719 lt!31444 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31722)))

(declare-fun b!71459 () Bool)

(declare-fun lt!31723 () Unit!2002)

(assert (=> b!71459 (= e!46779 lt!31723)))

(assert (=> b!71459 (= lt!31723 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71459 (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71460 () Bool)

(declare-fun Unit!2025 () Unit!2002)

(assert (=> b!71460 (= e!46779 Unit!2025)))

(declare-fun b!71461 () Bool)

(assert (=> b!71461 (= e!46778 (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15957 c!10417) b!71459))

(assert (= (and d!15957 (not c!10417)) b!71460))

(assert (= (and d!15957 (not res!38093)) b!71461))

(declare-fun m!68755 () Bool)

(assert (=> d!15957 m!68755))

(declare-fun m!68757 () Bool)

(assert (=> b!71459 m!68757))

(declare-fun m!68759 () Bool)

(assert (=> b!71459 m!68759))

(assert (=> b!71459 m!68759))

(declare-fun m!68761 () Bool)

(assert (=> b!71459 m!68761))

(assert (=> b!71461 m!68759))

(assert (=> b!71461 m!68759))

(assert (=> b!71461 m!68761))

(assert (=> d!15817 d!15957))

(assert (=> d!15817 d!15827))

(declare-fun d!15959 () Bool)

(declare-fun e!46782 () Bool)

(assert (=> d!15959 e!46782))

(declare-fun res!38098 () Bool)

(assert (=> d!15959 (=> (not res!38098) (not e!46782))))

(declare-fun lt!31729 () SeekEntryResult!235)

(assert (=> d!15959 (= res!38098 ((_ is Found!235) lt!31729))))

(assert (=> d!15959 (= lt!31729 (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun lt!31728 () Unit!2002)

(declare-fun choose!403 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) Int) Unit!2002)

(assert (=> d!15959 (= lt!31728 (choose!403 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(assert (=> d!15959 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15959 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)) lt!31728)))

(declare-fun b!71466 () Bool)

(declare-fun res!38099 () Bool)

(assert (=> b!71466 (=> (not res!38099) (not e!46782))))

(assert (=> b!71466 (= res!38099 (inRange!0 (index!3071 lt!31729) (mask!6149 newMap!16)))))

(declare-fun b!71467 () Bool)

(assert (=> b!71467 (= e!46782 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31729)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> b!71467 (and (bvsge (index!3071 lt!31729) #b00000000000000000000000000000000) (bvslt (index!3071 lt!31729) (size!2090 (_keys!3840 newMap!16))))))

(assert (= (and d!15959 res!38098) b!71466))

(assert (= (and b!71466 res!38099) b!71467))

(assert (=> d!15959 m!67893))

(assert (=> d!15959 m!68065))

(assert (=> d!15959 m!67893))

(declare-fun m!68763 () Bool)

(assert (=> d!15959 m!68763))

(assert (=> d!15959 m!68263))

(declare-fun m!68765 () Bool)

(assert (=> b!71466 m!68765))

(declare-fun m!68767 () Bool)

(assert (=> b!71467 m!68767))

(assert (=> bm!6116 d!15959))

(assert (=> b!71106 d!15893))

(declare-fun d!15961 () Bool)

(assert (=> d!15961 (= (get!1134 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2513 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> b!70873 d!15961))

(declare-fun d!15963 () Bool)

(declare-fun lt!31730 () Bool)

(assert (=> d!15963 (= lt!31730 (select (content!76 (toList!723 lt!31448)) lt!31269))))

(declare-fun e!46783 () Bool)

(assert (=> d!15963 (= lt!31730 e!46783)))

(declare-fun res!38101 () Bool)

(assert (=> d!15963 (=> (not res!38101) (not e!46783))))

(assert (=> d!15963 (= res!38101 ((_ is Cons!1472) (toList!723 lt!31448)))))

(assert (=> d!15963 (= (contains!722 (toList!723 lt!31448) lt!31269) lt!31730)))

(declare-fun b!71468 () Bool)

(declare-fun e!46784 () Bool)

(assert (=> b!71468 (= e!46783 e!46784)))

(declare-fun res!38100 () Bool)

(assert (=> b!71468 (=> res!38100 e!46784)))

(assert (=> b!71468 (= res!38100 (= (h!2058 (toList!723 lt!31448)) lt!31269))))

(declare-fun b!71469 () Bool)

(assert (=> b!71469 (= e!46784 (contains!722 (t!5012 (toList!723 lt!31448)) lt!31269))))

(assert (= (and d!15963 res!38101) b!71468))

(assert (= (and b!71468 (not res!38100)) b!71469))

(declare-fun m!68769 () Bool)

(assert (=> d!15963 m!68769))

(declare-fun m!68771 () Bool)

(assert (=> d!15963 m!68771))

(declare-fun m!68773 () Bool)

(assert (=> b!71469 m!68773))

(assert (=> b!71053 d!15963))

(declare-fun d!15965 () Bool)

(assert (=> d!15965 (isDefined!85 (getValueByKey!132 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun lt!31733 () Unit!2002)

(declare-fun choose!404 (List!1476 (_ BitVec 64)) Unit!2002)

(assert (=> d!15965 (= lt!31733 (choose!404 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun e!46787 () Bool)

(assert (=> d!15965 e!46787))

(declare-fun res!38104 () Bool)

(assert (=> d!15965 (=> (not res!38104) (not e!46787))))

(assert (=> d!15965 (= res!38104 (isStrictlySorted!291 (toList!723 lt!31273)))))

(assert (=> d!15965 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) lt!31733)))

(declare-fun b!71472 () Bool)

(assert (=> b!71472 (= e!46787 (containsKey!136 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!15965 res!38104) b!71472))

(assert (=> d!15965 m!67893))

(assert (=> d!15965 m!68027))

(assert (=> d!15965 m!68027))

(assert (=> d!15965 m!68029))

(assert (=> d!15965 m!67893))

(declare-fun m!68775 () Bool)

(assert (=> d!15965 m!68775))

(declare-fun m!68777 () Bool)

(assert (=> d!15965 m!68777))

(assert (=> b!71472 m!67893))

(assert (=> b!71472 m!68023))

(assert (=> b!70881 d!15965))

(assert (=> b!70881 d!15951))

(assert (=> b!70881 d!15953))

(declare-fun d!15967 () Bool)

(assert (=> d!15967 (= (apply!74 lt!31507 lt!31517) (get!1136 (getValueByKey!132 (toList!723 lt!31507) lt!31517)))))

(declare-fun bs!3059 () Bool)

(assert (= bs!3059 d!15967))

(declare-fun m!68779 () Bool)

(assert (=> bs!3059 m!68779))

(assert (=> bs!3059 m!68779))

(declare-fun m!68781 () Bool)

(assert (=> bs!3059 m!68781))

(assert (=> b!71107 d!15967))

(declare-fun d!15969 () Bool)

(assert (=> d!15969 (= (apply!74 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31517) (apply!74 lt!31507 lt!31517))))

(declare-fun lt!31736 () Unit!2002)

(declare-fun choose!405 (ListLongMap!1415 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2002)

(assert (=> d!15969 (= lt!31736 (choose!405 lt!31507 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31517))))

(declare-fun e!46790 () Bool)

(assert (=> d!15969 e!46790))

(declare-fun res!38107 () Bool)

(assert (=> d!15969 (=> (not res!38107) (not e!46790))))

(assert (=> d!15969 (= res!38107 (contains!719 lt!31507 lt!31517))))

(assert (=> d!15969 (= (addApplyDifferent!50 lt!31507 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31517) lt!31736)))

(declare-fun b!71476 () Bool)

(assert (=> b!71476 (= e!46790 (not (= lt!31517 lt!31513)))))

(assert (= (and d!15969 res!38107) b!71476))

(assert (=> d!15969 m!68185))

(declare-fun m!68783 () Bool)

(assert (=> d!15969 m!68783))

(declare-fun m!68785 () Bool)

(assert (=> d!15969 m!68785))

(assert (=> d!15969 m!68195))

(assert (=> d!15969 m!68185))

(assert (=> d!15969 m!68193))

(assert (=> b!71107 d!15969))

(declare-fun d!15971 () Bool)

(declare-fun e!46791 () Bool)

(assert (=> d!15971 e!46791))

(declare-fun res!38108 () Bool)

(assert (=> d!15971 (=> (not res!38108) (not e!46791))))

(declare-fun lt!31739 () ListLongMap!1415)

(assert (=> d!15971 (= res!38108 (contains!719 lt!31739 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!31740 () List!1476)

(assert (=> d!15971 (= lt!31739 (ListLongMap!1416 lt!31740))))

(declare-fun lt!31738 () Unit!2002)

(declare-fun lt!31737 () Unit!2002)

(assert (=> d!15971 (= lt!31738 lt!31737)))

(assert (=> d!15971 (= (getValueByKey!132 lt!31740 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15971 (= lt!31737 (lemmaContainsTupThenGetReturnValue!49 lt!31740 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15971 (= lt!31740 (insertStrictlySorted!52 (toList!723 lt!31521) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15971 (= (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31739)))

(declare-fun b!71477 () Bool)

(declare-fun res!38109 () Bool)

(assert (=> b!71477 (=> (not res!38109) (not e!46791))))

(assert (=> b!71477 (= res!38109 (= (getValueByKey!132 (toList!723 lt!31739) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71478 () Bool)

(assert (=> b!71478 (= e!46791 (contains!722 (toList!723 lt!31739) (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!15971 res!38108) b!71477))

(assert (= (and b!71477 res!38109) b!71478))

(declare-fun m!68787 () Bool)

(assert (=> d!15971 m!68787))

(declare-fun m!68789 () Bool)

(assert (=> d!15971 m!68789))

(declare-fun m!68791 () Bool)

(assert (=> d!15971 m!68791))

(declare-fun m!68793 () Bool)

(assert (=> d!15971 m!68793))

(declare-fun m!68795 () Bool)

(assert (=> b!71477 m!68795))

(declare-fun m!68797 () Bool)

(assert (=> b!71478 m!68797))

(assert (=> b!71107 d!15971))

(assert (=> b!71107 d!15817))

(declare-fun d!15973 () Bool)

(assert (=> d!15973 (= (apply!74 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31509) (apply!74 lt!31521 lt!31509))))

(declare-fun lt!31741 () Unit!2002)

(assert (=> d!15973 (= lt!31741 (choose!405 lt!31521 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31509))))

(declare-fun e!46792 () Bool)

(assert (=> d!15973 e!46792))

(declare-fun res!38110 () Bool)

(assert (=> d!15973 (=> (not res!38110) (not e!46792))))

(assert (=> d!15973 (= res!38110 (contains!719 lt!31521 lt!31509))))

(assert (=> d!15973 (= (addApplyDifferent!50 lt!31521 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31509) lt!31741)))

(declare-fun b!71479 () Bool)

(assert (=> b!71479 (= e!46792 (not (= lt!31509 lt!31515)))))

(assert (= (and d!15973 res!38110) b!71479))

(assert (=> d!15973 m!68187))

(declare-fun m!68799 () Bool)

(assert (=> d!15973 m!68799))

(declare-fun m!68801 () Bool)

(assert (=> d!15973 m!68801))

(assert (=> d!15973 m!68211))

(assert (=> d!15973 m!68187))

(assert (=> d!15973 m!68203))

(assert (=> b!71107 d!15973))

(declare-fun d!15975 () Bool)

(assert (=> d!15975 (= (apply!74 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31517) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31517)))))

(declare-fun bs!3060 () Bool)

(assert (= bs!3060 d!15975))

(declare-fun m!68803 () Bool)

(assert (=> bs!3060 m!68803))

(assert (=> bs!3060 m!68803))

(declare-fun m!68805 () Bool)

(assert (=> bs!3060 m!68805))

(assert (=> b!71107 d!15975))

(declare-fun d!15977 () Bool)

(assert (=> d!15977 (= (apply!74 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31509) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31509)))))

(declare-fun bs!3061 () Bool)

(assert (= bs!3061 d!15977))

(declare-fun m!68807 () Bool)

(assert (=> bs!3061 m!68807))

(assert (=> bs!3061 m!68807))

(declare-fun m!68809 () Bool)

(assert (=> bs!3061 m!68809))

(assert (=> b!71107 d!15977))

(declare-fun d!15979 () Bool)

(assert (=> d!15979 (= (apply!74 lt!31521 lt!31509) (get!1136 (getValueByKey!132 (toList!723 lt!31521) lt!31509)))))

(declare-fun bs!3062 () Bool)

(assert (= bs!3062 d!15979))

(declare-fun m!68811 () Bool)

(assert (=> bs!3062 m!68811))

(assert (=> bs!3062 m!68811))

(declare-fun m!68813 () Bool)

(assert (=> bs!3062 m!68813))

(assert (=> b!71107 d!15979))

(declare-fun d!15981 () Bool)

(assert (=> d!15981 (contains!719 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31508)))

(declare-fun lt!31744 () Unit!2002)

(declare-fun choose!406 (ListLongMap!1415 (_ BitVec 64) V!2939 (_ BitVec 64)) Unit!2002)

(assert (=> d!15981 (= lt!31744 (choose!406 lt!31514 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31508))))

(assert (=> d!15981 (contains!719 lt!31514 lt!31508)))

(assert (=> d!15981 (= (addStillContains!50 lt!31514 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31508) lt!31744)))

(declare-fun bs!3063 () Bool)

(assert (= bs!3063 d!15981))

(assert (=> bs!3063 m!68199))

(assert (=> bs!3063 m!68199))

(assert (=> bs!3063 m!68207))

(declare-fun m!68815 () Bool)

(assert (=> bs!3063 m!68815))

(declare-fun m!68817 () Bool)

(assert (=> bs!3063 m!68817))

(assert (=> b!71107 d!15981))

(declare-fun d!15983 () Bool)

(declare-fun e!46793 () Bool)

(assert (=> d!15983 e!46793))

(declare-fun res!38111 () Bool)

(assert (=> d!15983 (=> (not res!38111) (not e!46793))))

(declare-fun lt!31747 () ListLongMap!1415)

(assert (=> d!15983 (= res!38111 (contains!719 lt!31747 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!31748 () List!1476)

(assert (=> d!15983 (= lt!31747 (ListLongMap!1416 lt!31748))))

(declare-fun lt!31746 () Unit!2002)

(declare-fun lt!31745 () Unit!2002)

(assert (=> d!15983 (= lt!31746 lt!31745)))

(assert (=> d!15983 (= (getValueByKey!132 lt!31748 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15983 (= lt!31745 (lemmaContainsTupThenGetReturnValue!49 lt!31748 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15983 (= lt!31748 (insertStrictlySorted!52 (toList!723 lt!31507) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15983 (= (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31747)))

(declare-fun b!71481 () Bool)

(declare-fun res!38112 () Bool)

(assert (=> b!71481 (=> (not res!38112) (not e!46793))))

(assert (=> b!71481 (= res!38112 (= (getValueByKey!132 (toList!723 lt!31747) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71482 () Bool)

(assert (=> b!71482 (= e!46793 (contains!722 (toList!723 lt!31747) (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!15983 res!38111) b!71481))

(assert (= (and b!71481 res!38112) b!71482))

(declare-fun m!68819 () Bool)

(assert (=> d!15983 m!68819))

(declare-fun m!68821 () Bool)

(assert (=> d!15983 m!68821))

(declare-fun m!68823 () Bool)

(assert (=> d!15983 m!68823))

(declare-fun m!68825 () Bool)

(assert (=> d!15983 m!68825))

(declare-fun m!68827 () Bool)

(assert (=> b!71481 m!68827))

(declare-fun m!68829 () Bool)

(assert (=> b!71482 m!68829))

(assert (=> b!71107 d!15983))

(declare-fun d!15985 () Bool)

(assert (=> d!15985 (= (apply!74 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31510) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31510)))))

(declare-fun bs!3064 () Bool)

(assert (= bs!3064 d!15985))

(declare-fun m!68831 () Bool)

(assert (=> bs!3064 m!68831))

(assert (=> bs!3064 m!68831))

(declare-fun m!68833 () Bool)

(assert (=> bs!3064 m!68833))

(assert (=> b!71107 d!15985))

(declare-fun d!15987 () Bool)

(declare-fun e!46794 () Bool)

(assert (=> d!15987 e!46794))

(declare-fun res!38113 () Bool)

(assert (=> d!15987 (=> (not res!38113) (not e!46794))))

(declare-fun lt!31751 () ListLongMap!1415)

(assert (=> d!15987 (= res!38113 (contains!719 lt!31751 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!31752 () List!1476)

(assert (=> d!15987 (= lt!31751 (ListLongMap!1416 lt!31752))))

(declare-fun lt!31750 () Unit!2002)

(declare-fun lt!31749 () Unit!2002)

(assert (=> d!15987 (= lt!31750 lt!31749)))

(assert (=> d!15987 (= (getValueByKey!132 lt!31752 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15987 (= lt!31749 (lemmaContainsTupThenGetReturnValue!49 lt!31752 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15987 (= lt!31752 (insertStrictlySorted!52 (toList!723 lt!31514) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15987 (= (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31751)))

(declare-fun b!71483 () Bool)

(declare-fun res!38114 () Bool)

(assert (=> b!71483 (=> (not res!38114) (not e!46794))))

(assert (=> b!71483 (= res!38114 (= (getValueByKey!132 (toList!723 lt!31751) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71484 () Bool)

(assert (=> b!71484 (= e!46794 (contains!722 (toList!723 lt!31751) (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!15987 res!38113) b!71483))

(assert (= (and b!71483 res!38114) b!71484))

(declare-fun m!68835 () Bool)

(assert (=> d!15987 m!68835))

(declare-fun m!68837 () Bool)

(assert (=> d!15987 m!68837))

(declare-fun m!68839 () Bool)

(assert (=> d!15987 m!68839))

(declare-fun m!68841 () Bool)

(assert (=> d!15987 m!68841))

(declare-fun m!68843 () Bool)

(assert (=> b!71483 m!68843))

(declare-fun m!68845 () Bool)

(assert (=> b!71484 m!68845))

(assert (=> b!71107 d!15987))

(declare-fun d!15989 () Bool)

(assert (=> d!15989 (= (apply!74 lt!31511 lt!31510) (get!1136 (getValueByKey!132 (toList!723 lt!31511) lt!31510)))))

(declare-fun bs!3065 () Bool)

(assert (= bs!3065 d!15989))

(declare-fun m!68847 () Bool)

(assert (=> bs!3065 m!68847))

(assert (=> bs!3065 m!68847))

(declare-fun m!68849 () Bool)

(assert (=> bs!3065 m!68849))

(assert (=> b!71107 d!15989))

(declare-fun d!15991 () Bool)

(declare-fun e!46795 () Bool)

(assert (=> d!15991 e!46795))

(declare-fun res!38115 () Bool)

(assert (=> d!15991 (=> (not res!38115) (not e!46795))))

(declare-fun lt!31755 () ListLongMap!1415)

(assert (=> d!15991 (= res!38115 (contains!719 lt!31755 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!31756 () List!1476)

(assert (=> d!15991 (= lt!31755 (ListLongMap!1416 lt!31756))))

(declare-fun lt!31754 () Unit!2002)

(declare-fun lt!31753 () Unit!2002)

(assert (=> d!15991 (= lt!31754 lt!31753)))

(assert (=> d!15991 (= (getValueByKey!132 lt!31756 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15991 (= lt!31753 (lemmaContainsTupThenGetReturnValue!49 lt!31756 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15991 (= lt!31756 (insertStrictlySorted!52 (toList!723 lt!31511) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!15991 (= (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31755)))

(declare-fun b!71485 () Bool)

(declare-fun res!38116 () Bool)

(assert (=> b!71485 (=> (not res!38116) (not e!46795))))

(assert (=> b!71485 (= res!38116 (= (getValueByKey!132 (toList!723 lt!31755) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71486 () Bool)

(assert (=> b!71486 (= e!46795 (contains!722 (toList!723 lt!31755) (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!15991 res!38115) b!71485))

(assert (= (and b!71485 res!38116) b!71486))

(declare-fun m!68851 () Bool)

(assert (=> d!15991 m!68851))

(declare-fun m!68853 () Bool)

(assert (=> d!15991 m!68853))

(declare-fun m!68855 () Bool)

(assert (=> d!15991 m!68855))

(declare-fun m!68857 () Bool)

(assert (=> d!15991 m!68857))

(declare-fun m!68859 () Bool)

(assert (=> b!71485 m!68859))

(declare-fun m!68861 () Bool)

(assert (=> b!71486 m!68861))

(assert (=> b!71107 d!15991))

(declare-fun d!15993 () Bool)

(assert (=> d!15993 (= (apply!74 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31510) (apply!74 lt!31511 lt!31510))))

(declare-fun lt!31757 () Unit!2002)

(assert (=> d!15993 (= lt!31757 (choose!405 lt!31511 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31510))))

(declare-fun e!46796 () Bool)

(assert (=> d!15993 e!46796))

(declare-fun res!38117 () Bool)

(assert (=> d!15993 (=> (not res!38117) (not e!46796))))

(assert (=> d!15993 (= res!38117 (contains!719 lt!31511 lt!31510))))

(assert (=> d!15993 (= (addApplyDifferent!50 lt!31511 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31510) lt!31757)))

(declare-fun b!71487 () Bool)

(assert (=> b!71487 (= e!46796 (not (= lt!31510 lt!31506)))))

(assert (= (and d!15993 res!38117) b!71487))

(assert (=> d!15993 m!68209))

(declare-fun m!68863 () Bool)

(assert (=> d!15993 m!68863))

(declare-fun m!68865 () Bool)

(assert (=> d!15993 m!68865))

(assert (=> d!15993 m!68205))

(assert (=> d!15993 m!68209))

(assert (=> d!15993 m!68213))

(assert (=> b!71107 d!15993))

(declare-fun d!15995 () Bool)

(declare-fun e!46797 () Bool)

(assert (=> d!15995 e!46797))

(declare-fun res!38118 () Bool)

(assert (=> d!15995 (=> res!38118 e!46797)))

(declare-fun lt!31760 () Bool)

(assert (=> d!15995 (= res!38118 (not lt!31760))))

(declare-fun lt!31759 () Bool)

(assert (=> d!15995 (= lt!31760 lt!31759)))

(declare-fun lt!31758 () Unit!2002)

(declare-fun e!46798 () Unit!2002)

(assert (=> d!15995 (= lt!31758 e!46798)))

(declare-fun c!10418 () Bool)

(assert (=> d!15995 (= c!10418 lt!31759)))

(assert (=> d!15995 (= lt!31759 (containsKey!136 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508))))

(assert (=> d!15995 (= (contains!719 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31508) lt!31760)))

(declare-fun b!71488 () Bool)

(declare-fun lt!31761 () Unit!2002)

(assert (=> b!71488 (= e!46798 lt!31761)))

(assert (=> b!71488 (= lt!31761 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508))))

(assert (=> b!71488 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508))))

(declare-fun b!71489 () Bool)

(declare-fun Unit!2026 () Unit!2002)

(assert (=> b!71489 (= e!46798 Unit!2026)))

(declare-fun b!71490 () Bool)

(assert (=> b!71490 (= e!46797 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508)))))

(assert (= (and d!15995 c!10418) b!71488))

(assert (= (and d!15995 (not c!10418)) b!71489))

(assert (= (and d!15995 (not res!38118)) b!71490))

(declare-fun m!68867 () Bool)

(assert (=> d!15995 m!68867))

(declare-fun m!68869 () Bool)

(assert (=> b!71488 m!68869))

(declare-fun m!68871 () Bool)

(assert (=> b!71488 m!68871))

(assert (=> b!71488 m!68871))

(declare-fun m!68873 () Bool)

(assert (=> b!71488 m!68873))

(assert (=> b!71490 m!68871))

(assert (=> b!71490 m!68871))

(assert (=> b!71490 m!68873))

(assert (=> b!71107 d!15995))

(assert (=> b!70989 d!15857))

(declare-fun d!15997 () Bool)

(declare-fun e!46799 () Bool)

(assert (=> d!15997 e!46799))

(declare-fun res!38119 () Bool)

(assert (=> d!15997 (=> (not res!38119) (not e!46799))))

(declare-fun lt!31764 () ListLongMap!1415)

(assert (=> d!15997 (= res!38119 (contains!719 lt!31764 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun lt!31765 () List!1476)

(assert (=> d!15997 (= lt!31764 (ListLongMap!1416 lt!31765))))

(declare-fun lt!31763 () Unit!2002)

(declare-fun lt!31762 () Unit!2002)

(assert (=> d!15997 (= lt!31763 lt!31762)))

(assert (=> d!15997 (= (getValueByKey!132 lt!31765 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!15997 (= lt!31762 (lemmaContainsTupThenGetReturnValue!49 lt!31765 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!15997 (= lt!31765 (insertStrictlySorted!52 (toList!723 call!6122) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!15997 (= (+!93 call!6122 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) lt!31764)))

(declare-fun b!71491 () Bool)

(declare-fun res!38120 () Bool)

(assert (=> b!71491 (=> (not res!38120) (not e!46799))))

(assert (=> b!71491 (= res!38120 (= (getValueByKey!132 (toList!723 lt!31764) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!71492 () Bool)

(assert (=> b!71492 (= e!46799 (contains!722 (toList!723 lt!31764) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(assert (= (and d!15997 res!38119) b!71491))

(assert (= (and b!71491 res!38120) b!71492))

(declare-fun m!68875 () Bool)

(assert (=> d!15997 m!68875))

(declare-fun m!68877 () Bool)

(assert (=> d!15997 m!68877))

(declare-fun m!68879 () Bool)

(assert (=> d!15997 m!68879))

(declare-fun m!68881 () Bool)

(assert (=> d!15997 m!68881))

(declare-fun m!68883 () Bool)

(assert (=> b!71491 m!68883))

(declare-fun m!68885 () Bool)

(assert (=> b!71492 m!68885))

(assert (=> b!71001 d!15997))

(assert (=> b!70852 d!15799))

(declare-fun d!15999 () Bool)

(assert (=> d!15999 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31389 lt!31264 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31768 () Unit!2002)

(declare-fun choose!407 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 V!2939 Int) Unit!2002)

(assert (=> d!15999 (= lt!31768 (choose!407 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31389 (zeroValue!2096 newMap!16) lt!31264 (minValue!2096 newMap!16) (defaultEntry!2192 newMap!16)))))

(assert (=> d!15999 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!15999 (= (lemmaChangeZeroKeyThenAddPairToListMap!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31389 (zeroValue!2096 newMap!16) lt!31264 (minValue!2096 newMap!16) (defaultEntry!2192 newMap!16)) lt!31768)))

(declare-fun bs!3066 () Bool)

(assert (= bs!3066 d!15999))

(assert (=> bs!3066 m!68051))

(declare-fun m!68887 () Bool)

(assert (=> bs!3066 m!68887))

(declare-fun m!68889 () Bool)

(assert (=> bs!3066 m!68889))

(assert (=> bs!3066 m!68051))

(declare-fun m!68891 () Bool)

(assert (=> bs!3066 m!68891))

(assert (=> bs!3066 m!68263))

(assert (=> b!71003 d!15999))

(assert (=> d!15797 d!15803))

(declare-fun d!16001 () Bool)

(assert (=> d!16001 (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) from!355 Nil!1472)))

(assert (=> d!16001 true))

(declare-fun _$71!93 () Unit!2002)

(assert (=> d!16001 (= (choose!39 (_keys!3840 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!93)))

(declare-fun bs!3067 () Bool)

(assert (= bs!3067 d!16001))

(assert (=> bs!3067 m!67921))

(assert (=> d!15797 d!16001))

(declare-fun d!16003 () Bool)

(declare-fun e!46802 () Bool)

(assert (=> d!16003 e!46802))

(declare-fun c!10421 () Bool)

(assert (=> d!16003 (= c!10421 (and (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!16003 true))

(declare-fun _$29!87 () Unit!2002)

(assert (=> d!16003 (= (choose!395 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))) _$29!87)))

(declare-fun b!71497 () Bool)

(assert (=> b!71497 (= e!46802 (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!71498 () Bool)

(assert (=> b!71498 (= e!46802 (ite (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!16003 c!10421) b!71497))

(assert (= (and d!16003 (not c!10421)) b!71498))

(assert (=> b!71497 m!67893))

(assert (=> b!71497 m!67925))

(assert (=> d!15801 d!16003))

(assert (=> d!15801 d!15827))

(declare-fun d!16005 () Bool)

(declare-fun res!38121 () Bool)

(declare-fun e!46803 () Bool)

(assert (=> d!16005 (=> res!38121 e!46803)))

(assert (=> d!16005 (= res!38121 (= (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!16005 (= (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000) e!46803)))

(declare-fun b!71499 () Bool)

(declare-fun e!46804 () Bool)

(assert (=> b!71499 (= e!46803 e!46804)))

(declare-fun res!38122 () Bool)

(assert (=> b!71499 (=> (not res!38122) (not e!46804))))

(assert (=> b!71499 (= res!38122 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71500 () Bool)

(assert (=> b!71500 (= e!46804 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16005 (not res!38121)) b!71499))

(assert (= (and b!71499 res!38122) b!71500))

(assert (=> d!16005 m!68283))

(assert (=> b!71500 m!67893))

(declare-fun m!68893 () Bool)

(assert (=> b!71500 m!68893))

(assert (=> bm!6112 d!16005))

(declare-fun b!71535 () Bool)

(declare-fun e!46821 () Bool)

(declare-fun call!6218 () Bool)

(assert (=> b!71535 (= e!46821 (not call!6218))))

(declare-fun d!16007 () Bool)

(declare-fun e!46826 () Bool)

(assert (=> d!16007 e!46826))

(declare-fun res!38147 () Bool)

(assert (=> d!16007 (=> (not res!38147) (not e!46826))))

(declare-fun lt!31848 () tuple2!2116)

(assert (=> d!16007 (= res!38147 (_1!1069 lt!31848))))

(assert (=> d!16007 (= lt!31848 (tuple2!2117 true (LongMapFixedSize!691 (defaultEntry!2192 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (bvadd (_size!394 newMap!16) #b00000000000000000000000000000001) (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (_vacant!394 newMap!16))))))

(declare-fun lt!31836 () Unit!2002)

(declare-fun lt!31851 () Unit!2002)

(assert (=> d!16007 (= lt!31836 lt!31851)))

(declare-fun lt!31850 () array!3881)

(declare-fun lt!31840 () array!3883)

(assert (=> d!16007 (contains!719 (getCurrentListMap!421 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))))))

(assert (=> d!16007 (= lt!31851 (lemmaValidKeyInArrayIsInListMap!84 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (defaultEntry!2192 newMap!16)))))

(assert (=> d!16007 (= lt!31840 (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))))

(assert (=> d!16007 (= lt!31850 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))

(declare-fun lt!31837 () Unit!2002)

(declare-fun lt!31852 () Unit!2002)

(assert (=> d!16007 (= lt!31837 lt!31852)))

(declare-fun lt!31844 () array!3881)

(assert (=> d!16007 (= (arrayCountValidKeys!0 lt!31844 (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (bvadd (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3881 (_ BitVec 32)) Unit!2002)

(assert (=> d!16007 (= lt!31852 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!31844 (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))))))

(assert (=> d!16007 (= lt!31844 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))

(declare-fun lt!31832 () Unit!2002)

(declare-fun lt!31857 () Unit!2002)

(assert (=> d!16007 (= lt!31832 lt!31857)))

(declare-fun lt!31856 () array!3881)

(assert (=> d!16007 (arrayContainsKey!0 lt!31856 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!16007 (= lt!31857 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!31856 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))))))

(assert (=> d!16007 (= lt!31856 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))

(declare-fun lt!31854 () Unit!2002)

(declare-fun lt!31833 () Unit!2002)

(assert (=> d!16007 (= lt!31854 lt!31833)))

(assert (=> d!16007 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (getCurrentListMap!421 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!12 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) (_ BitVec 64) V!2939 Int) Unit!2002)

(assert (=> d!16007 (= lt!31833 (lemmaAddValidKeyToArrayThenAddPairToListMap!12 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31829 () Unit!2002)

(declare-fun lt!31845 () Unit!2002)

(assert (=> d!16007 (= lt!31829 lt!31845)))

(assert (=> d!16007 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (mask!6149 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3881 (_ BitVec 32) (_ BitVec 32)) Unit!2002)

(assert (=> d!16007 (= lt!31845 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (mask!6149 newMap!16)))))

(declare-fun lt!31846 () Unit!2002)

(declare-fun lt!31834 () Unit!2002)

(assert (=> d!16007 (= lt!31846 lt!31834)))

(assert (=> d!16007 (= (arrayCountValidKeys!0 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3881 (_ BitVec 32) (_ BitVec 64)) Unit!2002)

(assert (=> d!16007 (= lt!31834 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3840 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun lt!31835 () Unit!2002)

(declare-fun lt!31843 () Unit!2002)

(assert (=> d!16007 (= lt!31835 lt!31843)))

(declare-fun lt!31841 () (_ BitVec 32))

(declare-fun lt!31839 () List!1475)

(assert (=> d!16007 (arrayNoDuplicates!0 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) lt!31841 lt!31839)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3881 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1475) Unit!2002)

(assert (=> d!16007 (= lt!31843 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) lt!31841 lt!31839))))

(assert (=> d!16007 (= lt!31839 Nil!1472)))

(assert (=> d!16007 (= lt!31841 #b00000000000000000000000000000000)))

(declare-fun lt!31831 () Unit!2002)

(declare-fun e!46828 () Unit!2002)

(assert (=> d!16007 (= lt!31831 e!46828)))

(declare-fun c!10433 () Bool)

(assert (=> d!16007 (= c!10433 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!31847 () Unit!2002)

(declare-fun e!46823 () Unit!2002)

(assert (=> d!16007 (= lt!31847 e!46823)))

(declare-fun c!10431 () Bool)

(assert (=> d!16007 (= c!10431 (contains!719 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!16007 (valid!287 newMap!16)))

(assert (=> d!16007 (= (updateHelperNewKey!23 newMap!16 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))) lt!31848)))

(declare-fun b!71536 () Bool)

(declare-fun c!10432 () Bool)

(declare-fun lt!31858 () SeekEntryResult!235)

(assert (=> b!71536 (= c!10432 ((_ is MissingVacant!235) lt!31858))))

(declare-fun e!46827 () Bool)

(declare-fun e!46824 () Bool)

(assert (=> b!71536 (= e!46827 e!46824)))

(declare-fun b!71537 () Bool)

(declare-fun res!38141 () Bool)

(assert (=> b!71537 (=> (not res!38141) (not e!46826))))

(assert (=> b!71537 (= res!38141 (valid!287 (_2!1069 lt!31848)))))

(declare-fun b!71538 () Bool)

(declare-fun Unit!2027 () Unit!2002)

(assert (=> b!71538 (= e!46828 Unit!2027)))

(declare-fun lt!31855 () Unit!2002)

(declare-fun lemmaArrayContainsKeyThenInListMap!12 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) (_ BitVec 32) Int) Unit!2002)

(assert (=> b!71538 (= lt!31855 (lemmaArrayContainsKeyThenInListMap!12 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(assert (=> b!71538 (contains!719 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))

(declare-fun lt!31842 () Unit!2002)

(assert (=> b!71538 (= lt!31842 lt!31855)))

(assert (=> b!71538 false))

(declare-fun b!71539 () Bool)

(declare-fun res!38143 () Bool)

(assert (=> b!71539 (= res!38143 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3073 lt!31858)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71539 (=> (not res!38143) (not e!46821))))

(declare-fun b!71540 () Bool)

(declare-fun res!38145 () Bool)

(declare-fun e!46822 () Bool)

(assert (=> b!71540 (=> (not res!38145) (not e!46822))))

(assert (=> b!71540 (= res!38145 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3070 lt!31858)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71541 () Bool)

(assert (=> b!71541 (= e!46824 e!46821)))

(declare-fun res!38142 () Bool)

(declare-fun call!6215 () Bool)

(assert (=> b!71541 (= res!38142 call!6215)))

(assert (=> b!71541 (=> (not res!38142) (not e!46821))))

(declare-fun b!71542 () Bool)

(declare-fun lt!31830 () Unit!2002)

(assert (=> b!71542 (= e!46823 lt!31830)))

(assert (=> b!71542 (= lt!31830 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(declare-fun call!6217 () SeekEntryResult!235)

(assert (=> b!71542 (= lt!31858 call!6217)))

(declare-fun c!10430 () Bool)

(assert (=> b!71542 (= c!10430 ((_ is MissingZero!235) lt!31858))))

(assert (=> b!71542 e!46827))

(declare-fun b!71543 () Bool)

(declare-fun Unit!2028 () Unit!2002)

(assert (=> b!71543 (= e!46828 Unit!2028)))

(declare-fun b!71544 () Bool)

(declare-fun res!38146 () Bool)

(assert (=> b!71544 (=> (not res!38146) (not e!46822))))

(assert (=> b!71544 (= res!38146 call!6215)))

(assert (=> b!71544 (= e!46827 e!46822)))

(declare-fun b!71545 () Bool)

(assert (=> b!71545 (= e!46826 (= (map!1148 (_2!1069 lt!31848)) (+!93 (map!1148 newMap!16) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun bm!6212 () Bool)

(declare-fun call!6216 () Bool)

(assert (=> bm!6212 (= call!6215 call!6216)))

(declare-fun b!71546 () Bool)

(declare-fun res!38149 () Bool)

(assert (=> b!71546 (=> (not res!38149) (not e!46826))))

(assert (=> b!71546 (= res!38149 (contains!719 (map!1148 (_2!1069 lt!31848)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!71547 () Bool)

(declare-fun res!38144 () Bool)

(assert (=> b!71547 (= res!38144 call!6216)))

(declare-fun e!46825 () Bool)

(assert (=> b!71547 (=> (not res!38144) (not e!46825))))

(declare-fun bm!6213 () Bool)

(assert (=> bm!6213 (= call!6217 (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!71548 () Bool)

(assert (=> b!71548 (= e!46822 (not call!6218))))

(declare-fun b!71549 () Bool)

(declare-fun Unit!2029 () Unit!2002)

(assert (=> b!71549 (= e!46823 Unit!2029)))

(declare-fun lt!31853 () Unit!2002)

(assert (=> b!71549 (= lt!31853 (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31849 () SeekEntryResult!235)

(assert (=> b!71549 (= lt!31849 call!6217)))

(declare-fun res!38148 () Bool)

(assert (=> b!71549 (= res!38148 ((_ is Found!235) lt!31849))))

(assert (=> b!71549 (=> (not res!38148) (not e!46825))))

(assert (=> b!71549 e!46825))

(declare-fun lt!31838 () Unit!2002)

(assert (=> b!71549 (= lt!31838 lt!31853)))

(assert (=> b!71549 false))

(declare-fun bm!6214 () Bool)

(assert (=> bm!6214 (= call!6216 (inRange!0 (ite c!10431 (index!3071 lt!31849) (ite c!10430 (index!3070 lt!31858) (index!3073 lt!31858))) (mask!6149 newMap!16)))))

(declare-fun b!71550 () Bool)

(assert (=> b!71550 (= e!46825 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31849)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!71551 () Bool)

(assert (=> b!71551 (= e!46824 ((_ is Undefined!235) lt!31858))))

(declare-fun bm!6215 () Bool)

(assert (=> bm!6215 (= call!6218 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!16007 c!10431) b!71549))

(assert (= (and d!16007 (not c!10431)) b!71542))

(assert (= (and b!71549 res!38148) b!71547))

(assert (= (and b!71547 res!38144) b!71550))

(assert (= (and b!71542 c!10430) b!71544))

(assert (= (and b!71542 (not c!10430)) b!71536))

(assert (= (and b!71544 res!38146) b!71540))

(assert (= (and b!71540 res!38145) b!71548))

(assert (= (and b!71536 c!10432) b!71541))

(assert (= (and b!71536 (not c!10432)) b!71551))

(assert (= (and b!71541 res!38142) b!71539))

(assert (= (and b!71539 res!38143) b!71535))

(assert (= (or b!71544 b!71541) bm!6212))

(assert (= (or b!71548 b!71535) bm!6215))

(assert (= (or b!71547 bm!6212) bm!6214))

(assert (= (or b!71549 b!71542) bm!6213))

(assert (= (and d!16007 c!10433) b!71538))

(assert (= (and d!16007 (not c!10433)) b!71543))

(assert (= (and d!16007 res!38147) b!71537))

(assert (= (and b!71537 res!38141) b!71546))

(assert (= (and b!71546 res!38149) b!71545))

(declare-fun m!68895 () Bool)

(assert (=> bm!6214 m!68895))

(assert (=> b!71538 m!67893))

(declare-fun m!68897 () Bool)

(assert (=> b!71538 m!68897))

(assert (=> b!71538 m!68051))

(assert (=> b!71538 m!68051))

(assert (=> b!71538 m!67893))

(assert (=> b!71538 m!68055))

(declare-fun m!68899 () Bool)

(assert (=> d!16007 m!68899))

(declare-fun m!68901 () Bool)

(assert (=> d!16007 m!68901))

(assert (=> d!16007 m!67893))

(assert (=> d!16007 m!68031))

(assert (=> d!16007 m!68051))

(assert (=> d!16007 m!68271))

(declare-fun m!68903 () Bool)

(assert (=> d!16007 m!68903))

(assert (=> d!16007 m!67893))

(declare-fun m!68905 () Bool)

(assert (=> d!16007 m!68905))

(declare-fun m!68907 () Bool)

(assert (=> d!16007 m!68907))

(declare-fun m!68909 () Bool)

(assert (=> d!16007 m!68909))

(declare-fun m!68911 () Bool)

(assert (=> d!16007 m!68911))

(declare-fun m!68913 () Bool)

(assert (=> d!16007 m!68913))

(assert (=> d!16007 m!67893))

(declare-fun m!68915 () Bool)

(assert (=> d!16007 m!68915))

(declare-fun m!68917 () Bool)

(assert (=> d!16007 m!68917))

(assert (=> d!16007 m!68903))

(declare-fun m!68919 () Bool)

(assert (=> d!16007 m!68919))

(declare-fun m!68921 () Bool)

(assert (=> d!16007 m!68921))

(assert (=> d!16007 m!68919))

(assert (=> d!16007 m!68051))

(declare-fun m!68923 () Bool)

(assert (=> d!16007 m!68923))

(assert (=> d!16007 m!67893))

(declare-fun m!68925 () Bool)

(assert (=> d!16007 m!68925))

(declare-fun m!68927 () Bool)

(assert (=> d!16007 m!68927))

(assert (=> d!16007 m!67929))

(assert (=> d!16007 m!68051))

(assert (=> d!16007 m!67893))

(assert (=> d!16007 m!68055))

(assert (=> d!16007 m!67893))

(declare-fun m!68929 () Bool)

(assert (=> d!16007 m!68929))

(assert (=> d!16007 m!67893))

(declare-fun m!68931 () Bool)

(assert (=> d!16007 m!68931))

(assert (=> d!16007 m!67893))

(declare-fun m!68933 () Bool)

(assert (=> d!16007 m!68933))

(assert (=> d!16007 m!68219))

(declare-fun m!68935 () Bool)

(assert (=> b!71546 m!68935))

(assert (=> b!71546 m!68935))

(assert (=> b!71546 m!67893))

(declare-fun m!68937 () Bool)

(assert (=> b!71546 m!68937))

(declare-fun m!68939 () Bool)

(assert (=> b!71540 m!68939))

(assert (=> b!71545 m!68935))

(assert (=> b!71545 m!67931))

(assert (=> b!71545 m!67931))

(declare-fun m!68941 () Bool)

(assert (=> b!71545 m!68941))

(assert (=> bm!6215 m!67893))

(assert (=> bm!6215 m!68031))

(assert (=> bm!6213 m!67893))

(assert (=> bm!6213 m!68065))

(declare-fun m!68943 () Bool)

(assert (=> b!71539 m!68943))

(declare-fun m!68945 () Bool)

(assert (=> b!71550 m!68945))

(assert (=> b!71542 m!67893))

(assert (=> b!71542 m!68073))

(declare-fun m!68947 () Bool)

(assert (=> b!71537 m!68947))

(assert (=> b!71549 m!67893))

(assert (=> b!71549 m!68069))

(assert (=> bm!6122 d!16007))

(declare-fun d!16009 () Bool)

(declare-fun e!46829 () Bool)

(assert (=> d!16009 e!46829))

(declare-fun res!38150 () Bool)

(assert (=> d!16009 (=> (not res!38150) (not e!46829))))

(declare-fun lt!31861 () ListLongMap!1415)

(assert (=> d!16009 (= res!38150 (contains!719 lt!31861 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!31862 () List!1476)

(assert (=> d!16009 (= lt!31861 (ListLongMap!1416 lt!31862))))

(declare-fun lt!31860 () Unit!2002)

(declare-fun lt!31859 () Unit!2002)

(assert (=> d!16009 (= lt!31860 lt!31859)))

(assert (=> d!16009 (= (getValueByKey!132 lt!31862 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16009 (= lt!31859 (lemmaContainsTupThenGetReturnValue!49 lt!31862 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16009 (= lt!31862 (insertStrictlySorted!52 (toList!723 call!6157) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16009 (= (+!93 call!6157 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31861)))

(declare-fun b!71552 () Bool)

(declare-fun res!38151 () Bool)

(assert (=> b!71552 (=> (not res!38151) (not e!46829))))

(assert (=> b!71552 (= res!38151 (= (getValueByKey!132 (toList!723 lt!31861) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71553 () Bool)

(assert (=> b!71553 (= e!46829 (contains!722 (toList!723 lt!31861) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!16009 res!38150) b!71552))

(assert (= (and b!71552 res!38151) b!71553))

(declare-fun m!68949 () Bool)

(assert (=> d!16009 m!68949))

(declare-fun m!68951 () Bool)

(assert (=> d!16009 m!68951))

(declare-fun m!68953 () Bool)

(assert (=> d!16009 m!68953))

(declare-fun m!68955 () Bool)

(assert (=> d!16009 m!68955))

(declare-fun m!68957 () Bool)

(assert (=> b!71552 m!68957))

(declare-fun m!68959 () Bool)

(assert (=> b!71553 m!68959))

(assert (=> b!71117 d!16009))

(assert (=> bm!6113 d!15945))

(declare-fun d!16011 () Bool)

(assert (=> d!16011 (= (apply!74 lt!31522 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1136 (getValueByKey!132 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3068 () Bool)

(assert (= bs!3068 d!16011))

(assert (=> bs!3068 m!68579))

(assert (=> bs!3068 m!68579))

(declare-fun m!68961 () Bool)

(assert (=> bs!3068 m!68961))

(assert (=> b!71102 d!16011))

(declare-fun d!16013 () Bool)

(declare-fun res!38152 () Bool)

(declare-fun e!46830 () Bool)

(assert (=> d!16013 (=> res!38152 e!46830)))

(assert (=> d!16013 (= res!38152 (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!16013 (= (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!46830)))

(declare-fun b!71554 () Bool)

(declare-fun e!46831 () Bool)

(assert (=> b!71554 (= e!46830 e!46831)))

(declare-fun res!38153 () Bool)

(assert (=> b!71554 (=> (not res!38153) (not e!46831))))

(assert (=> b!71554 (= res!38153 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71555 () Bool)

(assert (=> b!71555 (= e!46831 (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16013 (not res!38152)) b!71554))

(assert (= (and b!71554 res!38153) b!71555))

(declare-fun m!68963 () Bool)

(assert (=> d!16013 m!68963))

(assert (=> b!71555 m!67893))

(declare-fun m!68965 () Bool)

(assert (=> b!71555 m!68965))

(assert (=> b!70847 d!16013))

(declare-fun d!16015 () Bool)

(assert (=> d!16015 (= (apply!74 lt!31522 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1136 (getValueByKey!132 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3069 () Bool)

(assert (= bs!3069 d!16015))

(assert (=> bs!3069 m!68423))

(assert (=> bs!3069 m!68423))

(declare-fun m!68967 () Bool)

(assert (=> bs!3069 m!68967))

(assert (=> b!71115 d!16015))

(declare-fun b!71556 () Bool)

(declare-fun e!46835 () Bool)

(declare-fun e!46833 () Bool)

(assert (=> b!71556 (= e!46835 e!46833)))

(declare-fun c!10434 () Bool)

(assert (=> b!71556 (= c!10434 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!16017 () Bool)

(declare-fun res!38155 () Bool)

(declare-fun e!46832 () Bool)

(assert (=> d!16017 (=> res!38155 e!46832)))

(assert (=> d!16017 (= res!38155 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16017 (= (arrayNoDuplicates!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 Nil!1472) e!46832)))

(declare-fun bm!6216 () Bool)

(declare-fun call!6219 () Bool)

(assert (=> bm!6216 (= call!6219 (arrayNoDuplicates!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10434 (Cons!1471 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) Nil!1472) Nil!1472)))))

(declare-fun b!71557 () Bool)

(assert (=> b!71557 (= e!46833 call!6219)))

(declare-fun b!71558 () Bool)

(assert (=> b!71558 (= e!46832 e!46835)))

(declare-fun res!38156 () Bool)

(assert (=> b!71558 (=> (not res!38156) (not e!46835))))

(declare-fun e!46834 () Bool)

(assert (=> b!71558 (= res!38156 (not e!46834))))

(declare-fun res!38154 () Bool)

(assert (=> b!71558 (=> (not res!38154) (not e!46834))))

(assert (=> b!71558 (= res!38154 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71559 () Bool)

(assert (=> b!71559 (= e!46834 (contains!721 Nil!1472 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71560 () Bool)

(assert (=> b!71560 (= e!46833 call!6219)))

(assert (= (and d!16017 (not res!38155)) b!71558))

(assert (= (and b!71558 res!38154) b!71559))

(assert (= (and b!71558 res!38156) b!71556))

(assert (= (and b!71556 c!10434) b!71560))

(assert (= (and b!71556 (not c!10434)) b!71557))

(assert (= (or b!71560 b!71557) bm!6216))

(assert (=> b!71556 m!68283))

(assert (=> b!71556 m!68283))

(assert (=> b!71556 m!68297))

(assert (=> bm!6216 m!68283))

(declare-fun m!68969 () Bool)

(assert (=> bm!6216 m!68969))

(assert (=> b!71558 m!68283))

(assert (=> b!71558 m!68283))

(assert (=> b!71558 m!68297))

(assert (=> b!71559 m!68283))

(assert (=> b!71559 m!68283))

(declare-fun m!68971 () Bool)

(assert (=> b!71559 m!68971))

(assert (=> b!71129 d!16017))

(declare-fun b!71561 () Bool)

(declare-fun e!46840 () ListLongMap!1415)

(assert (=> b!71561 (= e!46840 (ListLongMap!1416 Nil!1473))))

(declare-fun d!16019 () Bool)

(declare-fun e!46839 () Bool)

(assert (=> d!16019 e!46839))

(declare-fun res!38159 () Bool)

(assert (=> d!16019 (=> (not res!38159) (not e!46839))))

(declare-fun lt!31868 () ListLongMap!1415)

(assert (=> d!16019 (= res!38159 (not (contains!719 lt!31868 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16019 (= lt!31868 e!46840)))

(declare-fun c!10438 () Bool)

(assert (=> d!16019 (= c!10438 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!16019 (validMask!0 (mask!6149 (v!2514 (underlying!257 thiss!992))))))

(assert (=> d!16019 (= (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))) lt!31868)))

(declare-fun bm!6217 () Bool)

(declare-fun call!6220 () ListLongMap!1415)

(assert (=> bm!6217 (= call!6220 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun b!71562 () Bool)

(declare-fun e!46838 () Bool)

(declare-fun e!46841 () Bool)

(assert (=> b!71562 (= e!46838 e!46841)))

(assert (=> b!71562 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun res!38160 () Bool)

(assert (=> b!71562 (= res!38160 (contains!719 lt!31868 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!71562 (=> (not res!38160) (not e!46841))))

(declare-fun b!71563 () Bool)

(declare-fun e!46836 () Bool)

(assert (=> b!71563 (= e!46836 (isEmpty!313 lt!31868))))

(declare-fun b!71564 () Bool)

(assert (=> b!71564 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> b!71564 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2091 (_values!2175 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> b!71564 (= e!46841 (= (apply!74 lt!31868 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71565 () Bool)

(declare-fun res!38157 () Bool)

(assert (=> b!71565 (=> (not res!38157) (not e!46839))))

(assert (=> b!71565 (= res!38157 (not (contains!719 lt!31868 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71566 () Bool)

(declare-fun e!46837 () ListLongMap!1415)

(assert (=> b!71566 (= e!46840 e!46837)))

(declare-fun c!10437 () Bool)

(assert (=> b!71566 (= c!10437 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71567 () Bool)

(assert (=> b!71567 (= e!46836 (= lt!31868 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71568 () Bool)

(declare-fun lt!31869 () Unit!2002)

(declare-fun lt!31865 () Unit!2002)

(assert (=> b!71568 (= lt!31869 lt!31865)))

(declare-fun lt!31863 () ListLongMap!1415)

(declare-fun lt!31866 () V!2939)

(declare-fun lt!31867 () (_ BitVec 64))

(declare-fun lt!31864 () (_ BitVec 64))

(assert (=> b!71568 (not (contains!719 (+!93 lt!31863 (tuple2!2115 lt!31864 lt!31866)) lt!31867))))

(assert (=> b!71568 (= lt!31865 (addStillNotContains!23 lt!31863 lt!31864 lt!31866 lt!31867))))

(assert (=> b!71568 (= lt!31867 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71568 (= lt!31866 (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71568 (= lt!31864 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!71568 (= lt!31863 call!6220)))

(assert (=> b!71568 (= e!46837 (+!93 call!6220 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71569 () Bool)

(assert (=> b!71569 (= e!46839 e!46838)))

(declare-fun c!10435 () Bool)

(declare-fun e!46842 () Bool)

(assert (=> b!71569 (= c!10435 e!46842)))

(declare-fun res!38158 () Bool)

(assert (=> b!71569 (=> (not res!38158) (not e!46842))))

(assert (=> b!71569 (= res!38158 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71570 () Bool)

(assert (=> b!71570 (= e!46842 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!71570 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!71571 () Bool)

(assert (=> b!71571 (= e!46838 e!46836)))

(declare-fun c!10436 () Bool)

(assert (=> b!71571 (= c!10436 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71572 () Bool)

(assert (=> b!71572 (= e!46837 call!6220)))

(assert (= (and d!16019 c!10438) b!71561))

(assert (= (and d!16019 (not c!10438)) b!71566))

(assert (= (and b!71566 c!10437) b!71568))

(assert (= (and b!71566 (not c!10437)) b!71572))

(assert (= (or b!71568 b!71572) bm!6217))

(assert (= (and d!16019 res!38159) b!71565))

(assert (= (and b!71565 res!38157) b!71569))

(assert (= (and b!71569 res!38158) b!71570))

(assert (= (and b!71569 c!10435) b!71562))

(assert (= (and b!71569 (not c!10435)) b!71571))

(assert (= (and b!71562 res!38160) b!71564))

(assert (= (and b!71571 c!10436) b!71567))

(assert (= (and b!71571 (not c!10436)) b!71563))

(declare-fun b_lambda!3201 () Bool)

(assert (=> (not b_lambda!3201) (not b!71564)))

(assert (=> b!71564 t!5008))

(declare-fun b_and!4399 () Bool)

(assert (= b_and!4395 (and (=> t!5008 result!2651) b_and!4399)))

(assert (=> b!71564 t!5010))

(declare-fun b_and!4401 () Bool)

(assert (= b_and!4397 (and (=> t!5010 result!2655) b_and!4401)))

(declare-fun b_lambda!3203 () Bool)

(assert (=> (not b_lambda!3203) (not b!71568)))

(assert (=> b!71568 t!5008))

(declare-fun b_and!4403 () Bool)

(assert (= b_and!4399 (and (=> t!5008 result!2651) b_and!4403)))

(assert (=> b!71568 t!5010))

(declare-fun b_and!4405 () Bool)

(assert (= b_and!4401 (and (=> t!5010 result!2655) b_and!4405)))

(declare-fun m!68973 () Bool)

(assert (=> b!71565 m!68973))

(declare-fun m!68975 () Bool)

(assert (=> b!71563 m!68975))

(declare-fun m!68977 () Bool)

(assert (=> bm!6217 m!68977))

(declare-fun m!68979 () Bool)

(assert (=> b!71564 m!68979))

(assert (=> b!71564 m!67913))

(declare-fun m!68981 () Bool)

(assert (=> b!71564 m!68981))

(assert (=> b!71564 m!68963))

(declare-fun m!68983 () Bool)

(assert (=> b!71564 m!68983))

(assert (=> b!71564 m!68979))

(assert (=> b!71564 m!68963))

(assert (=> b!71564 m!67913))

(assert (=> b!71566 m!68963))

(assert (=> b!71566 m!68963))

(declare-fun m!68985 () Bool)

(assert (=> b!71566 m!68985))

(assert (=> b!71570 m!68963))

(assert (=> b!71570 m!68963))

(assert (=> b!71570 m!68985))

(assert (=> b!71567 m!68977))

(assert (=> b!71562 m!68963))

(assert (=> b!71562 m!68963))

(declare-fun m!68987 () Bool)

(assert (=> b!71562 m!68987))

(declare-fun m!68989 () Bool)

(assert (=> d!16019 m!68989))

(assert (=> d!16019 m!67891))

(declare-fun m!68991 () Bool)

(assert (=> b!71568 m!68991))

(assert (=> b!71568 m!68979))

(assert (=> b!71568 m!67913))

(assert (=> b!71568 m!68981))

(declare-fun m!68993 () Bool)

(assert (=> b!71568 m!68993))

(assert (=> b!71568 m!68979))

(declare-fun m!68995 () Bool)

(assert (=> b!71568 m!68995))

(assert (=> b!71568 m!68995))

(declare-fun m!68997 () Bool)

(assert (=> b!71568 m!68997))

(assert (=> b!71568 m!68963))

(assert (=> b!71568 m!67913))

(assert (=> b!71046 d!16019))

(declare-fun d!16021 () Bool)

(declare-fun lt!31870 () Bool)

(assert (=> d!16021 (= lt!31870 (select (content!76 (toList!723 lt!31423)) lt!31269))))

(declare-fun e!46843 () Bool)

(assert (=> d!16021 (= lt!31870 e!46843)))

(declare-fun res!38162 () Bool)

(assert (=> d!16021 (=> (not res!38162) (not e!46843))))

(assert (=> d!16021 (= res!38162 ((_ is Cons!1472) (toList!723 lt!31423)))))

(assert (=> d!16021 (= (contains!722 (toList!723 lt!31423) lt!31269) lt!31870)))

(declare-fun b!71573 () Bool)

(declare-fun e!46844 () Bool)

(assert (=> b!71573 (= e!46843 e!46844)))

(declare-fun res!38161 () Bool)

(assert (=> b!71573 (=> res!38161 e!46844)))

(assert (=> b!71573 (= res!38161 (= (h!2058 (toList!723 lt!31423)) lt!31269))))

(declare-fun b!71574 () Bool)

(assert (=> b!71574 (= e!46844 (contains!722 (t!5012 (toList!723 lt!31423)) lt!31269))))

(assert (= (and d!16021 res!38162) b!71573))

(assert (= (and b!71573 (not res!38161)) b!71574))

(declare-fun m!68999 () Bool)

(assert (=> d!16021 m!68999))

(declare-fun m!69001 () Bool)

(assert (=> d!16021 m!69001))

(declare-fun m!69003 () Bool)

(assert (=> b!71574 m!69003))

(assert (=> b!71015 d!16021))

(declare-fun b!71575 () Bool)

(declare-fun e!46848 () Bool)

(declare-fun e!46846 () Bool)

(assert (=> b!71575 (= e!46848 e!46846)))

(declare-fun c!10439 () Bool)

(assert (=> b!71575 (= c!10439 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!16023 () Bool)

(declare-fun res!38164 () Bool)

(declare-fun e!46845 () Bool)

(assert (=> d!16023 (=> res!38164 e!46845)))

(assert (=> d!16023 (= res!38164 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!16023 (= (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)) e!46845)))

(declare-fun bm!6218 () Bool)

(declare-fun call!6221 () Bool)

(assert (=> bm!6218 (= call!6221 (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10439 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472))))))

(declare-fun b!71576 () Bool)

(assert (=> b!71576 (= e!46846 call!6221)))

(declare-fun b!71577 () Bool)

(assert (=> b!71577 (= e!46845 e!46848)))

(declare-fun res!38165 () Bool)

(assert (=> b!71577 (=> (not res!38165) (not e!46848))))

(declare-fun e!46847 () Bool)

(assert (=> b!71577 (= res!38165 (not e!46847))))

(declare-fun res!38163 () Bool)

(assert (=> b!71577 (=> (not res!38163) (not e!46847))))

(assert (=> b!71577 (= res!38163 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71578 () Bool)

(assert (=> b!71578 (= e!46847 (contains!721 (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71579 () Bool)

(assert (=> b!71579 (= e!46846 call!6221)))

(assert (= (and d!16023 (not res!38164)) b!71577))

(assert (= (and b!71577 res!38163) b!71578))

(assert (= (and b!71577 res!38165) b!71575))

(assert (= (and b!71575 c!10439) b!71579))

(assert (= (and b!71575 (not c!10439)) b!71576))

(assert (= (or b!71579 b!71576) bm!6218))

(declare-fun m!69005 () Bool)

(assert (=> b!71575 m!69005))

(assert (=> b!71575 m!69005))

(declare-fun m!69007 () Bool)

(assert (=> b!71575 m!69007))

(assert (=> bm!6218 m!69005))

(declare-fun m!69009 () Bool)

(assert (=> bm!6218 m!69009))

(assert (=> b!71577 m!69005))

(assert (=> b!71577 m!69005))

(assert (=> b!71577 m!69007))

(assert (=> b!71578 m!69005))

(assert (=> b!71578 m!69005))

(declare-fun m!69011 () Bool)

(assert (=> b!71578 m!69011))

(assert (=> bm!6059 d!16023))

(declare-fun d!16025 () Bool)

(assert (=> d!16025 (= (apply!74 lt!31522 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1136 (getValueByKey!132 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3070 () Bool)

(assert (= bs!3070 d!16025))

(assert (=> bs!3070 m!68007))

(declare-fun m!69013 () Bool)

(assert (=> bs!3070 m!69013))

(assert (=> bs!3070 m!69013))

(declare-fun m!69015 () Bool)

(assert (=> bs!3070 m!69015))

(assert (=> b!71113 d!16025))

(assert (=> b!71113 d!15911))

(assert (=> b!70866 d!15947))

(declare-fun b!71588 () Bool)

(declare-fun e!46854 () (_ BitVec 32))

(declare-fun call!6224 () (_ BitVec 32))

(assert (=> b!71588 (= e!46854 call!6224)))

(declare-fun b!71589 () Bool)

(declare-fun e!46853 () (_ BitVec 32))

(assert (=> b!71589 (= e!46853 #b00000000000000000000000000000000)))

(declare-fun b!71590 () Bool)

(assert (=> b!71590 (= e!46854 (bvadd #b00000000000000000000000000000001 call!6224))))

(declare-fun b!71591 () Bool)

(assert (=> b!71591 (= e!46853 e!46854)))

(declare-fun c!10444 () Bool)

(assert (=> b!71591 (= c!10444 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!16027 () Bool)

(declare-fun lt!31873 () (_ BitVec 32))

(assert (=> d!16027 (and (bvsge lt!31873 #b00000000000000000000000000000000) (bvsle lt!31873 (bvsub (size!2090 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16027 (= lt!31873 e!46853)))

(declare-fun c!10445 () Bool)

(assert (=> d!16027 (= c!10445 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16027 (and (bvsle #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2090 (_keys!3840 newMap!16)) (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16027 (= (arrayCountValidKeys!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) lt!31873)))

(declare-fun bm!6221 () Bool)

(assert (=> bm!6221 (= call!6224 (arrayCountValidKeys!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))))))

(assert (= (and d!16027 c!10445) b!71589))

(assert (= (and d!16027 (not c!10445)) b!71591))

(assert (= (and b!71591 c!10444) b!71590))

(assert (= (and b!71591 (not c!10444)) b!71588))

(assert (= (or b!71590 b!71588) bm!6221))

(assert (=> b!71591 m!68283))

(assert (=> b!71591 m!68283))

(assert (=> b!71591 m!68297))

(declare-fun m!69017 () Bool)

(assert (=> bm!6221 m!69017))

(assert (=> b!71127 d!16027))

(declare-fun d!16029 () Bool)

(declare-fun e!46855 () Bool)

(assert (=> d!16029 e!46855))

(declare-fun res!38166 () Bool)

(assert (=> d!16029 (=> res!38166 e!46855)))

(declare-fun lt!31876 () Bool)

(assert (=> d!16029 (= res!38166 (not lt!31876))))

(declare-fun lt!31875 () Bool)

(assert (=> d!16029 (= lt!31876 lt!31875)))

(declare-fun lt!31874 () Unit!2002)

(declare-fun e!46856 () Unit!2002)

(assert (=> d!16029 (= lt!31874 e!46856)))

(declare-fun c!10446 () Bool)

(assert (=> d!16029 (= c!10446 lt!31875)))

(assert (=> d!16029 (= lt!31875 (containsKey!136 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16029 (= (contains!719 lt!31444 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31876)))

(declare-fun b!71592 () Bool)

(declare-fun lt!31877 () Unit!2002)

(assert (=> b!71592 (= e!46856 lt!31877)))

(assert (=> b!71592 (= lt!31877 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71592 (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71593 () Bool)

(declare-fun Unit!2030 () Unit!2002)

(assert (=> b!71593 (= e!46856 Unit!2030)))

(declare-fun b!71594 () Bool)

(assert (=> b!71594 (= e!46855 (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16029 c!10446) b!71592))

(assert (= (and d!16029 (not c!10446)) b!71593))

(assert (= (and d!16029 (not res!38166)) b!71594))

(declare-fun m!69019 () Bool)

(assert (=> d!16029 m!69019))

(declare-fun m!69021 () Bool)

(assert (=> b!71592 m!69021))

(declare-fun m!69023 () Bool)

(assert (=> b!71592 m!69023))

(assert (=> b!71592 m!69023))

(declare-fun m!69025 () Bool)

(assert (=> b!71592 m!69025))

(assert (=> b!71594 m!69023))

(assert (=> b!71594 m!69023))

(assert (=> b!71594 m!69025))

(assert (=> b!71044 d!16029))

(declare-fun d!16031 () Bool)

(declare-fun res!38171 () Bool)

(declare-fun e!46861 () Bool)

(assert (=> d!16031 (=> res!38171 e!46861)))

(assert (=> d!16031 (= res!38171 (and ((_ is Cons!1472) (toList!723 lt!31273)) (= (_1!1068 (h!2058 (toList!723 lt!31273))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (=> d!16031 (= (containsKey!136 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) e!46861)))

(declare-fun b!71599 () Bool)

(declare-fun e!46862 () Bool)

(assert (=> b!71599 (= e!46861 e!46862)))

(declare-fun res!38172 () Bool)

(assert (=> b!71599 (=> (not res!38172) (not e!46862))))

(assert (=> b!71599 (= res!38172 (and (or (not ((_ is Cons!1472) (toList!723 lt!31273))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31273))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))) ((_ is Cons!1472) (toList!723 lt!31273)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31273))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(declare-fun b!71600 () Bool)

(assert (=> b!71600 (= e!46862 (containsKey!136 (t!5012 (toList!723 lt!31273)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16031 (not res!38171)) b!71599))

(assert (= (and b!71599 res!38172) b!71600))

(assert (=> b!71600 m!67893))

(declare-fun m!69027 () Bool)

(assert (=> b!71600 m!69027))

(assert (=> d!15811 d!16031))

(declare-fun b!71604 () Bool)

(declare-fun e!46864 () Option!138)

(assert (=> b!71604 (= e!46864 None!136)))

(declare-fun b!71602 () Bool)

(declare-fun e!46863 () Option!138)

(assert (=> b!71602 (= e!46863 e!46864)))

(declare-fun c!10448 () Bool)

(assert (=> b!71602 (= c!10448 (and ((_ is Cons!1472) (toList!723 lt!31459)) (not (= (_1!1068 (h!2058 (toList!723 lt!31459))) (_1!1068 lt!31265)))))))

(declare-fun b!71601 () Bool)

(assert (=> b!71601 (= e!46863 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31459)))))))

(declare-fun d!16033 () Bool)

(declare-fun c!10447 () Bool)

(assert (=> d!16033 (= c!10447 (and ((_ is Cons!1472) (toList!723 lt!31459)) (= (_1!1068 (h!2058 (toList!723 lt!31459))) (_1!1068 lt!31265))))))

(assert (=> d!16033 (= (getValueByKey!132 (toList!723 lt!31459) (_1!1068 lt!31265)) e!46863)))

(declare-fun b!71603 () Bool)

(assert (=> b!71603 (= e!46864 (getValueByKey!132 (t!5012 (toList!723 lt!31459)) (_1!1068 lt!31265)))))

(assert (= (and d!16033 c!10447) b!71601))

(assert (= (and d!16033 (not c!10447)) b!71602))

(assert (= (and b!71602 c!10448) b!71603))

(assert (= (and b!71602 (not c!10448)) b!71604))

(declare-fun m!69029 () Bool)

(assert (=> b!71603 m!69029))

(assert (=> b!71056 d!16033))

(assert (=> bm!6134 d!16019))

(declare-fun d!16035 () Bool)

(declare-fun e!46865 () Bool)

(assert (=> d!16035 e!46865))

(declare-fun res!38173 () Bool)

(assert (=> d!16035 (=> res!38173 e!46865)))

(declare-fun lt!31880 () Bool)

(assert (=> d!16035 (= res!38173 (not lt!31880))))

(declare-fun lt!31879 () Bool)

(assert (=> d!16035 (= lt!31880 lt!31879)))

(declare-fun lt!31878 () Unit!2002)

(declare-fun e!46866 () Unit!2002)

(assert (=> d!16035 (= lt!31878 e!46866)))

(declare-fun c!10449 () Bool)

(assert (=> d!16035 (= c!10449 lt!31879)))

(assert (=> d!16035 (= lt!31879 (containsKey!136 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!16035 (= (contains!719 call!6127 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) lt!31880)))

(declare-fun b!71605 () Bool)

(declare-fun lt!31881 () Unit!2002)

(assert (=> b!71605 (= e!46866 lt!31881)))

(assert (=> b!71605 (= lt!31881 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> b!71605 (isDefined!85 (getValueByKey!132 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!71606 () Bool)

(declare-fun Unit!2031 () Unit!2002)

(assert (=> b!71606 (= e!46866 Unit!2031)))

(declare-fun b!71607 () Bool)

(assert (=> b!71607 (= e!46865 (isDefined!85 (getValueByKey!132 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (= (and d!16035 c!10449) b!71605))

(assert (= (and d!16035 (not c!10449)) b!71606))

(assert (= (and d!16035 (not res!38173)) b!71607))

(assert (=> d!16035 m!67893))

(declare-fun m!69031 () Bool)

(assert (=> d!16035 m!69031))

(assert (=> b!71605 m!67893))

(declare-fun m!69033 () Bool)

(assert (=> b!71605 m!69033))

(assert (=> b!71605 m!67893))

(declare-fun m!69035 () Bool)

(assert (=> b!71605 m!69035))

(assert (=> b!71605 m!69035))

(declare-fun m!69037 () Bool)

(assert (=> b!71605 m!69037))

(assert (=> b!71607 m!67893))

(assert (=> b!71607 m!69035))

(assert (=> b!71607 m!69035))

(assert (=> b!71607 m!69037))

(assert (=> b!71008 d!16035))

(declare-fun d!16037 () Bool)

(declare-fun isEmpty!315 (List!1476) Bool)

(assert (=> d!16037 (= (isEmpty!313 lt!31444) (isEmpty!315 (toList!723 lt!31444)))))

(declare-fun bs!3071 () Bool)

(assert (= bs!3071 d!16037))

(declare-fun m!69039 () Bool)

(assert (=> bs!3071 m!69039))

(assert (=> b!71042 d!16037))

(declare-fun d!16039 () Bool)

(assert (=> d!16039 (= (get!1135 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70874 d!16039))

(declare-fun d!16041 () Bool)

(declare-fun e!46867 () Bool)

(assert (=> d!16041 e!46867))

(declare-fun res!38174 () Bool)

(assert (=> d!16041 (=> res!38174 e!46867)))

(declare-fun lt!31884 () Bool)

(assert (=> d!16041 (= res!38174 (not lt!31884))))

(declare-fun lt!31883 () Bool)

(assert (=> d!16041 (= lt!31884 lt!31883)))

(declare-fun lt!31882 () Unit!2002)

(declare-fun e!46868 () Unit!2002)

(assert (=> d!16041 (= lt!31882 e!46868)))

(declare-fun c!10450 () Bool)

(assert (=> d!16041 (= c!10450 lt!31883)))

(assert (=> d!16041 (= lt!31883 (containsKey!136 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!16041 (= (contains!719 lt!31522 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!31884)))

(declare-fun b!71608 () Bool)

(declare-fun lt!31885 () Unit!2002)

(assert (=> b!71608 (= e!46868 lt!31885)))

(assert (=> b!71608 (= lt!31885 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71608 (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71609 () Bool)

(declare-fun Unit!2032 () Unit!2002)

(assert (=> b!71609 (= e!46868 Unit!2032)))

(declare-fun b!71610 () Bool)

(assert (=> b!71610 (= e!46867 (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!16041 c!10450) b!71608))

(assert (= (and d!16041 (not c!10450)) b!71609))

(assert (= (and d!16041 (not res!38174)) b!71610))

(assert (=> d!16041 m!68007))

(declare-fun m!69041 () Bool)

(assert (=> d!16041 m!69041))

(assert (=> b!71608 m!68007))

(declare-fun m!69043 () Bool)

(assert (=> b!71608 m!69043))

(assert (=> b!71608 m!68007))

(assert (=> b!71608 m!69013))

(assert (=> b!71608 m!69013))

(declare-fun m!69045 () Bool)

(assert (=> b!71608 m!69045))

(assert (=> b!71610 m!68007))

(assert (=> b!71610 m!69013))

(assert (=> b!71610 m!69013))

(assert (=> b!71610 m!69045))

(assert (=> b!71108 d!16041))

(assert (=> d!15795 d!15799))

(declare-fun d!16043 () Bool)

(assert (=> d!16043 (not (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!16043 true))

(declare-fun _$68!52 () Unit!2002)

(assert (=> d!16043 (= (choose!68 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472)) _$68!52)))

(declare-fun bs!3072 () Bool)

(assert (= bs!3072 d!16043))

(assert (=> bs!3072 m!67893))

(assert (=> bs!3072 m!67925))

(assert (=> d!15795 d!16043))

(assert (=> b!71110 d!15893))

(declare-fun b!71612 () Bool)

(declare-fun e!46869 () Bool)

(assert (=> b!71612 (= e!46869 tp_is_empty!2469)))

(declare-fun mapNonEmpty!3157 () Bool)

(declare-fun mapRes!3157 () Bool)

(declare-fun tp!8503 () Bool)

(declare-fun e!46870 () Bool)

(assert (=> mapNonEmpty!3157 (= mapRes!3157 (and tp!8503 e!46870))))

(declare-fun mapRest!3157 () (Array (_ BitVec 32) ValueCell!891))

(declare-fun mapKey!3157 () (_ BitVec 32))

(declare-fun mapValue!3157 () ValueCell!891)

(assert (=> mapNonEmpty!3157 (= mapRest!3155 (store mapRest!3157 mapKey!3157 mapValue!3157))))

(declare-fun condMapEmpty!3157 () Bool)

(declare-fun mapDefault!3157 () ValueCell!891)

(assert (=> mapNonEmpty!3155 (= condMapEmpty!3157 (= mapRest!3155 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3157)))))

(assert (=> mapNonEmpty!3155 (= tp!8501 (and e!46869 mapRes!3157))))

(declare-fun mapIsEmpty!3157 () Bool)

(assert (=> mapIsEmpty!3157 mapRes!3157))

(declare-fun b!71611 () Bool)

(assert (=> b!71611 (= e!46870 tp_is_empty!2469)))

(assert (= (and mapNonEmpty!3155 condMapEmpty!3157) mapIsEmpty!3157))

(assert (= (and mapNonEmpty!3155 (not condMapEmpty!3157)) mapNonEmpty!3157))

(assert (= (and mapNonEmpty!3157 ((_ is ValueCellFull!891) mapValue!3157)) b!71611))

(assert (= (and mapNonEmpty!3155 ((_ is ValueCellFull!891) mapDefault!3157)) b!71612))

(declare-fun m!69047 () Bool)

(assert (=> mapNonEmpty!3157 m!69047))

(declare-fun b!71614 () Bool)

(declare-fun e!46871 () Bool)

(assert (=> b!71614 (= e!46871 tp_is_empty!2469)))

(declare-fun mapNonEmpty!3158 () Bool)

(declare-fun mapRes!3158 () Bool)

(declare-fun tp!8504 () Bool)

(declare-fun e!46872 () Bool)

(assert (=> mapNonEmpty!3158 (= mapRes!3158 (and tp!8504 e!46872))))

(declare-fun mapRest!3158 () (Array (_ BitVec 32) ValueCell!891))

(declare-fun mapKey!3158 () (_ BitVec 32))

(declare-fun mapValue!3158 () ValueCell!891)

(assert (=> mapNonEmpty!3158 (= mapRest!3156 (store mapRest!3158 mapKey!3158 mapValue!3158))))

(declare-fun condMapEmpty!3158 () Bool)

(declare-fun mapDefault!3158 () ValueCell!891)

(assert (=> mapNonEmpty!3156 (= condMapEmpty!3158 (= mapRest!3156 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3158)))))

(assert (=> mapNonEmpty!3156 (= tp!8502 (and e!46871 mapRes!3158))))

(declare-fun mapIsEmpty!3158 () Bool)

(assert (=> mapIsEmpty!3158 mapRes!3158))

(declare-fun b!71613 () Bool)

(assert (=> b!71613 (= e!46872 tp_is_empty!2469)))

(assert (= (and mapNonEmpty!3156 condMapEmpty!3158) mapIsEmpty!3158))

(assert (= (and mapNonEmpty!3156 (not condMapEmpty!3158)) mapNonEmpty!3158))

(assert (= (and mapNonEmpty!3158 ((_ is ValueCellFull!891) mapValue!3158)) b!71613))

(assert (= (and mapNonEmpty!3156 ((_ is ValueCellFull!891) mapDefault!3158)) b!71614))

(declare-fun m!69049 () Bool)

(assert (=> mapNonEmpty!3158 m!69049))

(declare-fun b_lambda!3205 () Bool)

(assert (= b_lambda!3195 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3205)))

(declare-fun b_lambda!3207 () Bool)

(assert (= b_lambda!3201 (or (and b!70773 b_free!2105) (and b!70762 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))) b_lambda!3207)))

(declare-fun b_lambda!3209 () Bool)

(assert (= b_lambda!3197 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3209)))

(declare-fun b_lambda!3211 () Bool)

(assert (= b_lambda!3203 (or (and b!70773 b_free!2105) (and b!70762 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))) b_lambda!3211)))

(declare-fun b_lambda!3213 () Bool)

(assert (= b_lambda!3199 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3213)))

(check-sat (not b!71267) (not b!71266) (not d!15903) (not d!16019) (not b!71253) (not b!71410) (not b!71483) (not b!71152) (not b!71297) (not b!71564) (not d!15857) (not bm!6214) (not d!15919) (not b!71289) (not b!71214) (not d!15951) (not d!15941) (not bm!6215) (not b!71386) (not b!71610) (not b!71556) (not b!71413) (not b_lambda!3193) (not b!71376) (not b!71575) (not d!15923) (not b!71488) (not b_lambda!3189) (not b!71492) (not b!71258) (not b!71277) (not b!71210) (not b!71456) (not d!16001) (not d!15991) (not b!71568) (not b!71296) (not bm!6173) (not d!16025) (not b!71401) (not d!15995) (not d!16011) (not b!71154) (not d!16029) (not b!71558) (not d!15853) (not b!71163) (not d!15891) (not d!15985) (not b!71317) (not b!71559) (not bm!6202) (not d!15993) (not bm!6195) (not d!15855) (not d!16021) (not b!71591) (not b!71194) (not b!71247) (not d!15975) (not b!71447) (not b!71308) (not d!15927) (not b!71545) (not mapNonEmpty!3157) (not b!71562) (not d!15917) (not b!71497) (not bm!6189) (not b!71485) (not b!71331) (not b!71477) (not b!71299) (not d!15967) (not b!71164) (not b!71388) (not d!15997) (not b!71537) (not b!71500) (not b!71249) (not b!71482) (not b!71206) (not d!15849) (not b!71486) (not b!71542) (not d!15949) (not d!16035) (not d!15999) (not b!71608) (not bm!6176) b_and!4403 (not b_lambda!3211) (not d!15909) (not d!15867) (not b!71321) (not b!71466) (not d!15879) (not bm!6168) (not d!15861) (not d!15965) (not b!71280) (not b!71393) (not b!71538) (not b!71237) (not b!71274) (not b!71574) (not b!71472) (not d!16009) (not b_lambda!3181) (not b!71555) (not b!71254) (not bm!6221) (not b_next!2105) (not b_lambda!3207) (not d!15921) (not d!15929) (not d!15925) (not d!15943) (not b!71217) (not b_lambda!3209) (not d!16015) (not d!15897) (not b!71261) (not b!71566) tp_is_empty!2469 (not d!15877) (not bm!6217) (not bm!6213) (not d!15875) (not b!71330) (not b!71211) (not b!71157) (not d!15901) (not b!71248) (not b!71319) (not b!71275) (not bm!6218) (not b!71491) (not b!71332) (not b!71578) (not b!71251) (not b!71546) b_and!4405 (not b!71594) (not b!71197) (not b!71191) (not b!71203) (not b!71320) (not bm!6170) (not b!71565) (not b!71256) (not b!71200) (not b!71286) (not d!15881) (not b!71281) (not d!15963) (not b!71600) (not d!15873) (not d!15883) (not b!71259) (not d!15935) (not b!71372) (not b!71283) (not mapNonEmpty!3158) (not d!15983) (not bm!6201) (not d!15913) (not b!71577) (not d!15915) (not d!15981) (not b!71408) (not d!15889) (not d!15959) (not b!71426) (not b!71607) (not d!15895) (not b_lambda!3191) (not b!71361) (not bm!6183) (not d!15987) (not b!71328) (not d!15885) (not d!15843) (not d!15847) (not b!71150) (not b!71357) (not d!15979) (not b!71279) (not b!71244) (not b!71552) (not b!71418) (not b!71563) (not b!71457) (not bm!6188) (not b!71231) (not bm!6216) (not b!71454) (not b!71553) (not b!71236) (not d!15989) (not b!71192) (not b!71359) (not b!71278) (not d!15971) (not d!16037) (not bm!6200) (not b!71461) (not b_lambda!3205) (not b!71478) (not d!15973) (not b!71417) (not d!15977) (not bm!6169) (not d!16043) (not b!71605) (not bm!6190) (not b!71395) (not b!71245) (not bm!6197) (not b!71407) (not b!71234) (not b!71458) (not b!71391) (not b!71229) (not bm!6179) (not b!71424) (not b!71428) (not b!71360) (not bm!6163) (not b!71603) (not d!15939) (not b!71227) (not b!71384) (not b!71490) (not b!71212) (not b!71385) (not b!71288) (not d!15871) (not d!15945) (not b!71250) (not b!71549) (not b!71459) (not b!71371) (not b!71421) (not d!16041) (not d!15955) (not d!15957) (not b!71219) (not bm!6165) (not b!71201) (not b!71311) (not b!71380) (not b!71252) (not d!15931) (not b!71255) (not b!71318) (not b_next!2107) (not b!71399) (not b!71221) (not bm!6193) (not b!71451) (not b!71469) (not d!15907) (not b!71264) (not b!71326) (not b!71570) (not b!71329) (not b!71484) (not b!71481) (not b!71419) (not d!16007) (not d!15937) (not b!71567) (not b_lambda!3213) (not d!15969) (not b!71592) (not d!15851) (not bm!6194) (not d!15865))
(check-sat b_and!4403 b_and!4405 (not b_next!2105) (not b_next!2107))
(get-model)

(declare-fun d!16045 () Bool)

(assert (=> d!16045 (= (apply!74 lt!31705 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1136 (getValueByKey!132 (toList!723 lt!31705) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3073 () Bool)

(assert (= bs!3073 d!16045))

(declare-fun m!69051 () Bool)

(assert (=> bs!3073 m!69051))

(assert (=> bs!3073 m!69051))

(declare-fun m!69053 () Bool)

(assert (=> bs!3073 m!69053))

(assert (=> b!71413 d!16045))

(declare-fun d!16047 () Bool)

(assert (=> d!16047 (= (apply!74 (+!93 lt!31553 (tuple2!2115 lt!31548 (minValue!2096 newMap!16))) lt!31552) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31553 (tuple2!2115 lt!31548 (minValue!2096 newMap!16)))) lt!31552)))))

(declare-fun bs!3074 () Bool)

(assert (= bs!3074 d!16047))

(declare-fun m!69055 () Bool)

(assert (=> bs!3074 m!69055))

(assert (=> bs!3074 m!69055))

(declare-fun m!69057 () Bool)

(assert (=> bs!3074 m!69057))

(assert (=> b!71211 d!16047))

(declare-fun d!16049 () Bool)

(assert (=> d!16049 (contains!719 (+!93 lt!31556 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16))) lt!31550)))

(declare-fun lt!31886 () Unit!2002)

(assert (=> d!16049 (= lt!31886 (choose!406 lt!31556 lt!31565 (zeroValue!2096 newMap!16) lt!31550))))

(assert (=> d!16049 (contains!719 lt!31556 lt!31550)))

(assert (=> d!16049 (= (addStillContains!50 lt!31556 lt!31565 (zeroValue!2096 newMap!16) lt!31550) lt!31886)))

(declare-fun bs!3075 () Bool)

(assert (= bs!3075 d!16049))

(assert (=> bs!3075 m!68323))

(assert (=> bs!3075 m!68323))

(assert (=> bs!3075 m!68331))

(declare-fun m!69059 () Bool)

(assert (=> bs!3075 m!69059))

(declare-fun m!69061 () Bool)

(assert (=> bs!3075 m!69061))

(assert (=> b!71211 d!16049))

(declare-fun d!16051 () Bool)

(declare-fun e!46873 () Bool)

(assert (=> d!16051 e!46873))

(declare-fun res!38175 () Bool)

(assert (=> d!16051 (=> (not res!38175) (not e!46873))))

(declare-fun lt!31889 () ListLongMap!1415)

(assert (=> d!16051 (= res!38175 (contains!719 lt!31889 (_1!1068 (tuple2!2115 lt!31548 (minValue!2096 newMap!16)))))))

(declare-fun lt!31890 () List!1476)

(assert (=> d!16051 (= lt!31889 (ListLongMap!1416 lt!31890))))

(declare-fun lt!31888 () Unit!2002)

(declare-fun lt!31887 () Unit!2002)

(assert (=> d!16051 (= lt!31888 lt!31887)))

(assert (=> d!16051 (= (getValueByKey!132 lt!31890 (_1!1068 (tuple2!2115 lt!31548 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31548 (minValue!2096 newMap!16)))))))

(assert (=> d!16051 (= lt!31887 (lemmaContainsTupThenGetReturnValue!49 lt!31890 (_1!1068 (tuple2!2115 lt!31548 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31548 (minValue!2096 newMap!16)))))))

(assert (=> d!16051 (= lt!31890 (insertStrictlySorted!52 (toList!723 lt!31553) (_1!1068 (tuple2!2115 lt!31548 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31548 (minValue!2096 newMap!16)))))))

(assert (=> d!16051 (= (+!93 lt!31553 (tuple2!2115 lt!31548 (minValue!2096 newMap!16))) lt!31889)))

(declare-fun b!71615 () Bool)

(declare-fun res!38176 () Bool)

(assert (=> b!71615 (=> (not res!38176) (not e!46873))))

(assert (=> b!71615 (= res!38176 (= (getValueByKey!132 (toList!723 lt!31889) (_1!1068 (tuple2!2115 lt!31548 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31548 (minValue!2096 newMap!16))))))))

(declare-fun b!71616 () Bool)

(assert (=> b!71616 (= e!46873 (contains!722 (toList!723 lt!31889) (tuple2!2115 lt!31548 (minValue!2096 newMap!16))))))

(assert (= (and d!16051 res!38175) b!71615))

(assert (= (and b!71615 res!38176) b!71616))

(declare-fun m!69063 () Bool)

(assert (=> d!16051 m!69063))

(declare-fun m!69065 () Bool)

(assert (=> d!16051 m!69065))

(declare-fun m!69067 () Bool)

(assert (=> d!16051 m!69067))

(declare-fun m!69069 () Bool)

(assert (=> d!16051 m!69069))

(declare-fun m!69071 () Bool)

(assert (=> b!71615 m!69071))

(declare-fun m!69073 () Bool)

(assert (=> b!71616 m!69073))

(assert (=> b!71211 d!16051))

(declare-fun d!16053 () Bool)

(assert (=> d!16053 (= (apply!74 lt!31549 lt!31559) (get!1136 (getValueByKey!132 (toList!723 lt!31549) lt!31559)))))

(declare-fun bs!3076 () Bool)

(assert (= bs!3076 d!16053))

(declare-fun m!69075 () Bool)

(assert (=> bs!3076 m!69075))

(assert (=> bs!3076 m!69075))

(declare-fun m!69077 () Bool)

(assert (=> bs!3076 m!69077))

(assert (=> b!71211 d!16053))

(declare-fun d!16055 () Bool)

(assert (=> d!16055 (= (apply!74 (+!93 lt!31563 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16))) lt!31551) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31563 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16)))) lt!31551)))))

(declare-fun bs!3077 () Bool)

(assert (= bs!3077 d!16055))

(declare-fun m!69079 () Bool)

(assert (=> bs!3077 m!69079))

(assert (=> bs!3077 m!69079))

(declare-fun m!69081 () Bool)

(assert (=> bs!3077 m!69081))

(assert (=> b!71211 d!16055))

(declare-fun d!16057 () Bool)

(assert (=> d!16057 (= (apply!74 (+!93 lt!31549 (tuple2!2115 lt!31555 (minValue!2096 newMap!16))) lt!31559) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31549 (tuple2!2115 lt!31555 (minValue!2096 newMap!16)))) lt!31559)))))

(declare-fun bs!3078 () Bool)

(assert (= bs!3078 d!16057))

(declare-fun m!69083 () Bool)

(assert (=> bs!3078 m!69083))

(assert (=> bs!3078 m!69083))

(declare-fun m!69085 () Bool)

(assert (=> bs!3078 m!69085))

(assert (=> b!71211 d!16057))

(declare-fun d!16059 () Bool)

(declare-fun e!46874 () Bool)

(assert (=> d!16059 e!46874))

(declare-fun res!38177 () Bool)

(assert (=> d!16059 (=> (not res!38177) (not e!46874))))

(declare-fun lt!31893 () ListLongMap!1415)

(assert (=> d!16059 (= res!38177 (contains!719 lt!31893 (_1!1068 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16)))))))

(declare-fun lt!31894 () List!1476)

(assert (=> d!16059 (= lt!31893 (ListLongMap!1416 lt!31894))))

(declare-fun lt!31892 () Unit!2002)

(declare-fun lt!31891 () Unit!2002)

(assert (=> d!16059 (= lt!31892 lt!31891)))

(assert (=> d!16059 (= (getValueByKey!132 lt!31894 (_1!1068 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16059 (= lt!31891 (lemmaContainsTupThenGetReturnValue!49 lt!31894 (_1!1068 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16059 (= lt!31894 (insertStrictlySorted!52 (toList!723 lt!31556) (_1!1068 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16059 (= (+!93 lt!31556 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16))) lt!31893)))

(declare-fun b!71617 () Bool)

(declare-fun res!38178 () Bool)

(assert (=> b!71617 (=> (not res!38178) (not e!46874))))

(assert (=> b!71617 (= res!38178 (= (getValueByKey!132 (toList!723 lt!31893) (_1!1068 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16))))))))

(declare-fun b!71618 () Bool)

(assert (=> b!71618 (= e!46874 (contains!722 (toList!723 lt!31893) (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16))))))

(assert (= (and d!16059 res!38177) b!71617))

(assert (= (and b!71617 res!38178) b!71618))

(declare-fun m!69087 () Bool)

(assert (=> d!16059 m!69087))

(declare-fun m!69089 () Bool)

(assert (=> d!16059 m!69089))

(declare-fun m!69091 () Bool)

(assert (=> d!16059 m!69091))

(declare-fun m!69093 () Bool)

(assert (=> d!16059 m!69093))

(declare-fun m!69095 () Bool)

(assert (=> b!71617 m!69095))

(declare-fun m!69097 () Bool)

(assert (=> b!71618 m!69097))

(assert (=> b!71211 d!16059))

(declare-fun d!16061 () Bool)

(assert (=> d!16061 (= (apply!74 (+!93 lt!31553 (tuple2!2115 lt!31548 (minValue!2096 newMap!16))) lt!31552) (apply!74 lt!31553 lt!31552))))

(declare-fun lt!31895 () Unit!2002)

(assert (=> d!16061 (= lt!31895 (choose!405 lt!31553 lt!31548 (minValue!2096 newMap!16) lt!31552))))

(declare-fun e!46875 () Bool)

(assert (=> d!16061 e!46875))

(declare-fun res!38179 () Bool)

(assert (=> d!16061 (=> (not res!38179) (not e!46875))))

(assert (=> d!16061 (= res!38179 (contains!719 lt!31553 lt!31552))))

(assert (=> d!16061 (= (addApplyDifferent!50 lt!31553 lt!31548 (minValue!2096 newMap!16) lt!31552) lt!31895)))

(declare-fun b!71619 () Bool)

(assert (=> b!71619 (= e!46875 (not (= lt!31552 lt!31548)))))

(assert (= (and d!16061 res!38179) b!71619))

(assert (=> d!16061 m!68333))

(declare-fun m!69099 () Bool)

(assert (=> d!16061 m!69099))

(declare-fun m!69101 () Bool)

(assert (=> d!16061 m!69101))

(assert (=> d!16061 m!68329))

(assert (=> d!16061 m!68333))

(assert (=> d!16061 m!68337))

(assert (=> b!71211 d!16061))

(declare-fun d!16063 () Bool)

(declare-fun e!46876 () Bool)

(assert (=> d!16063 e!46876))

(declare-fun res!38180 () Bool)

(assert (=> d!16063 (=> (not res!38180) (not e!46876))))

(declare-fun lt!31898 () ListLongMap!1415)

(assert (=> d!16063 (= res!38180 (contains!719 lt!31898 (_1!1068 (tuple2!2115 lt!31555 (minValue!2096 newMap!16)))))))

(declare-fun lt!31899 () List!1476)

(assert (=> d!16063 (= lt!31898 (ListLongMap!1416 lt!31899))))

(declare-fun lt!31897 () Unit!2002)

(declare-fun lt!31896 () Unit!2002)

(assert (=> d!16063 (= lt!31897 lt!31896)))

(assert (=> d!16063 (= (getValueByKey!132 lt!31899 (_1!1068 (tuple2!2115 lt!31555 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31555 (minValue!2096 newMap!16)))))))

(assert (=> d!16063 (= lt!31896 (lemmaContainsTupThenGetReturnValue!49 lt!31899 (_1!1068 (tuple2!2115 lt!31555 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31555 (minValue!2096 newMap!16)))))))

(assert (=> d!16063 (= lt!31899 (insertStrictlySorted!52 (toList!723 lt!31549) (_1!1068 (tuple2!2115 lt!31555 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31555 (minValue!2096 newMap!16)))))))

(assert (=> d!16063 (= (+!93 lt!31549 (tuple2!2115 lt!31555 (minValue!2096 newMap!16))) lt!31898)))

(declare-fun b!71620 () Bool)

(declare-fun res!38181 () Bool)

(assert (=> b!71620 (=> (not res!38181) (not e!46876))))

(assert (=> b!71620 (= res!38181 (= (getValueByKey!132 (toList!723 lt!31898) (_1!1068 (tuple2!2115 lt!31555 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31555 (minValue!2096 newMap!16))))))))

(declare-fun b!71621 () Bool)

(assert (=> b!71621 (= e!46876 (contains!722 (toList!723 lt!31898) (tuple2!2115 lt!31555 (minValue!2096 newMap!16))))))

(assert (= (and d!16063 res!38180) b!71620))

(assert (= (and b!71620 res!38181) b!71621))

(declare-fun m!69103 () Bool)

(assert (=> d!16063 m!69103))

(declare-fun m!69105 () Bool)

(assert (=> d!16063 m!69105))

(declare-fun m!69107 () Bool)

(assert (=> d!16063 m!69107))

(declare-fun m!69109 () Bool)

(assert (=> d!16063 m!69109))

(declare-fun m!69111 () Bool)

(assert (=> b!71620 m!69111))

(declare-fun m!69113 () Bool)

(assert (=> b!71621 m!69113))

(assert (=> b!71211 d!16063))

(declare-fun d!16065 () Bool)

(assert (=> d!16065 (= (apply!74 (+!93 lt!31563 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16))) lt!31551) (apply!74 lt!31563 lt!31551))))

(declare-fun lt!31900 () Unit!2002)

(assert (=> d!16065 (= lt!31900 (choose!405 lt!31563 lt!31557 (zeroValue!2096 newMap!16) lt!31551))))

(declare-fun e!46877 () Bool)

(assert (=> d!16065 e!46877))

(declare-fun res!38182 () Bool)

(assert (=> d!16065 (=> (not res!38182) (not e!46877))))

(assert (=> d!16065 (= res!38182 (contains!719 lt!31563 lt!31551))))

(assert (=> d!16065 (= (addApplyDifferent!50 lt!31563 lt!31557 (zeroValue!2096 newMap!16) lt!31551) lt!31900)))

(declare-fun b!71622 () Bool)

(assert (=> b!71622 (= e!46877 (not (= lt!31551 lt!31557)))))

(assert (= (and d!16065 res!38182) b!71622))

(assert (=> d!16065 m!68311))

(declare-fun m!69115 () Bool)

(assert (=> d!16065 m!69115))

(declare-fun m!69117 () Bool)

(assert (=> d!16065 m!69117))

(assert (=> d!16065 m!68335))

(assert (=> d!16065 m!68311))

(assert (=> d!16065 m!68327))

(assert (=> b!71211 d!16065))

(declare-fun b!71623 () Bool)

(declare-fun e!46882 () ListLongMap!1415)

(assert (=> b!71623 (= e!46882 (ListLongMap!1416 Nil!1473))))

(declare-fun d!16067 () Bool)

(declare-fun e!46881 () Bool)

(assert (=> d!16067 e!46881))

(declare-fun res!38185 () Bool)

(assert (=> d!16067 (=> (not res!38185) (not e!46881))))

(declare-fun lt!31906 () ListLongMap!1415)

(assert (=> d!16067 (= res!38185 (not (contains!719 lt!31906 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16067 (= lt!31906 e!46882)))

(declare-fun c!10454 () Bool)

(assert (=> d!16067 (= c!10454 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16067 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16067 (= (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31906)))

(declare-fun bm!6222 () Bool)

(declare-fun call!6225 () ListLongMap!1415)

(assert (=> bm!6222 (= call!6225 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16)))))

(declare-fun b!71624 () Bool)

(declare-fun e!46880 () Bool)

(declare-fun e!46883 () Bool)

(assert (=> b!71624 (= e!46880 e!46883)))

(assert (=> b!71624 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun res!38186 () Bool)

(assert (=> b!71624 (= res!38186 (contains!719 lt!31906 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71624 (=> (not res!38186) (not e!46883))))

(declare-fun b!71625 () Bool)

(declare-fun e!46878 () Bool)

(assert (=> b!71625 (= e!46878 (isEmpty!313 lt!31906))))

(declare-fun b!71626 () Bool)

(assert (=> b!71626 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> b!71626 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (_values!2175 newMap!16))))))

(assert (=> b!71626 (= e!46883 (= (apply!74 lt!31906 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71627 () Bool)

(declare-fun res!38183 () Bool)

(assert (=> b!71627 (=> (not res!38183) (not e!46881))))

(assert (=> b!71627 (= res!38183 (not (contains!719 lt!31906 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71628 () Bool)

(declare-fun e!46879 () ListLongMap!1415)

(assert (=> b!71628 (= e!46882 e!46879)))

(declare-fun c!10453 () Bool)

(assert (=> b!71628 (= c!10453 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71629 () Bool)

(assert (=> b!71629 (= e!46878 (= lt!31906 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16))))))

(declare-fun b!71630 () Bool)

(declare-fun lt!31907 () Unit!2002)

(declare-fun lt!31903 () Unit!2002)

(assert (=> b!71630 (= lt!31907 lt!31903)))

(declare-fun lt!31904 () V!2939)

(declare-fun lt!31901 () ListLongMap!1415)

(declare-fun lt!31905 () (_ BitVec 64))

(declare-fun lt!31902 () (_ BitVec 64))

(assert (=> b!71630 (not (contains!719 (+!93 lt!31901 (tuple2!2115 lt!31902 lt!31904)) lt!31905))))

(assert (=> b!71630 (= lt!31903 (addStillNotContains!23 lt!31901 lt!31902 lt!31904 lt!31905))))

(assert (=> b!71630 (= lt!31905 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71630 (= lt!31904 (get!1133 (select (arr!1854 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71630 (= lt!31902 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71630 (= lt!31901 call!6225)))

(assert (=> b!71630 (= e!46879 (+!93 call!6225 (tuple2!2115 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (get!1133 (select (arr!1854 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71631 () Bool)

(assert (=> b!71631 (= e!46881 e!46880)))

(declare-fun c!10451 () Bool)

(declare-fun e!46884 () Bool)

(assert (=> b!71631 (= c!10451 e!46884)))

(declare-fun res!38184 () Bool)

(assert (=> b!71631 (=> (not res!38184) (not e!46884))))

(assert (=> b!71631 (= res!38184 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71632 () Bool)

(assert (=> b!71632 (= e!46884 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71632 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!71633 () Bool)

(assert (=> b!71633 (= e!46880 e!46878)))

(declare-fun c!10452 () Bool)

(assert (=> b!71633 (= c!10452 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71634 () Bool)

(assert (=> b!71634 (= e!46879 call!6225)))

(assert (= (and d!16067 c!10454) b!71623))

(assert (= (and d!16067 (not c!10454)) b!71628))

(assert (= (and b!71628 c!10453) b!71630))

(assert (= (and b!71628 (not c!10453)) b!71634))

(assert (= (or b!71630 b!71634) bm!6222))

(assert (= (and d!16067 res!38185) b!71627))

(assert (= (and b!71627 res!38183) b!71631))

(assert (= (and b!71631 res!38184) b!71632))

(assert (= (and b!71631 c!10451) b!71624))

(assert (= (and b!71631 (not c!10451)) b!71633))

(assert (= (and b!71624 res!38186) b!71626))

(assert (= (and b!71633 c!10452) b!71629))

(assert (= (and b!71633 (not c!10452)) b!71625))

(declare-fun b_lambda!3215 () Bool)

(assert (=> (not b_lambda!3215) (not b!71626)))

(assert (=> b!71626 t!5019))

(declare-fun b_and!4407 () Bool)

(assert (= b_and!4403 (and (=> t!5019 result!2665) b_and!4407)))

(assert (=> b!71626 t!5021))

(declare-fun b_and!4409 () Bool)

(assert (= b_and!4405 (and (=> t!5021 result!2667) b_and!4409)))

(declare-fun b_lambda!3217 () Bool)

(assert (=> (not b_lambda!3217) (not b!71630)))

(assert (=> b!71630 t!5019))

(declare-fun b_and!4411 () Bool)

(assert (= b_and!4407 (and (=> t!5019 result!2665) b_and!4411)))

(assert (=> b!71630 t!5021))

(declare-fun b_and!4413 () Bool)

(assert (= b_and!4409 (and (=> t!5021 result!2667) b_and!4413)))

(declare-fun m!69119 () Bool)

(assert (=> b!71627 m!69119))

(declare-fun m!69121 () Bool)

(assert (=> b!71625 m!69121))

(declare-fun m!69123 () Bool)

(assert (=> bm!6222 m!69123))

(assert (=> b!71626 m!68291))

(assert (=> b!71626 m!68287))

(assert (=> b!71626 m!68293))

(assert (=> b!71626 m!68283))

(declare-fun m!69125 () Bool)

(assert (=> b!71626 m!69125))

(assert (=> b!71626 m!68291))

(assert (=> b!71626 m!68283))

(assert (=> b!71626 m!68287))

(assert (=> b!71628 m!68283))

(assert (=> b!71628 m!68283))

(assert (=> b!71628 m!68297))

(assert (=> b!71632 m!68283))

(assert (=> b!71632 m!68283))

(assert (=> b!71632 m!68297))

(assert (=> b!71629 m!69123))

(assert (=> b!71624 m!68283))

(assert (=> b!71624 m!68283))

(declare-fun m!69127 () Bool)

(assert (=> b!71624 m!69127))

(declare-fun m!69129 () Bool)

(assert (=> d!16067 m!69129))

(assert (=> d!16067 m!68263))

(declare-fun m!69131 () Bool)

(assert (=> b!71630 m!69131))

(assert (=> b!71630 m!68291))

(assert (=> b!71630 m!68287))

(assert (=> b!71630 m!68293))

(declare-fun m!69133 () Bool)

(assert (=> b!71630 m!69133))

(assert (=> b!71630 m!68291))

(declare-fun m!69135 () Bool)

(assert (=> b!71630 m!69135))

(assert (=> b!71630 m!69135))

(declare-fun m!69137 () Bool)

(assert (=> b!71630 m!69137))

(assert (=> b!71630 m!68283))

(assert (=> b!71630 m!68287))

(assert (=> b!71211 d!16067))

(declare-fun d!16069 () Bool)

(assert (=> d!16069 (= (apply!74 (+!93 lt!31549 (tuple2!2115 lt!31555 (minValue!2096 newMap!16))) lt!31559) (apply!74 lt!31549 lt!31559))))

(declare-fun lt!31908 () Unit!2002)

(assert (=> d!16069 (= lt!31908 (choose!405 lt!31549 lt!31555 (minValue!2096 newMap!16) lt!31559))))

(declare-fun e!46885 () Bool)

(assert (=> d!16069 e!46885))

(declare-fun res!38187 () Bool)

(assert (=> d!16069 (=> (not res!38187) (not e!46885))))

(assert (=> d!16069 (= res!38187 (contains!719 lt!31549 lt!31559))))

(assert (=> d!16069 (= (addApplyDifferent!50 lt!31549 lt!31555 (minValue!2096 newMap!16) lt!31559) lt!31908)))

(declare-fun b!71635 () Bool)

(assert (=> b!71635 (= e!46885 (not (= lt!31559 lt!31555)))))

(assert (= (and d!16069 res!38187) b!71635))

(assert (=> d!16069 m!68309))

(declare-fun m!69139 () Bool)

(assert (=> d!16069 m!69139))

(declare-fun m!69141 () Bool)

(assert (=> d!16069 m!69141))

(assert (=> d!16069 m!68319))

(assert (=> d!16069 m!68309))

(assert (=> d!16069 m!68317))

(assert (=> b!71211 d!16069))

(declare-fun d!16071 () Bool)

(assert (=> d!16071 (= (apply!74 lt!31553 lt!31552) (get!1136 (getValueByKey!132 (toList!723 lt!31553) lt!31552)))))

(declare-fun bs!3079 () Bool)

(assert (= bs!3079 d!16071))

(declare-fun m!69143 () Bool)

(assert (=> bs!3079 m!69143))

(assert (=> bs!3079 m!69143))

(declare-fun m!69145 () Bool)

(assert (=> bs!3079 m!69145))

(assert (=> b!71211 d!16071))

(declare-fun d!16073 () Bool)

(declare-fun e!46886 () Bool)

(assert (=> d!16073 e!46886))

(declare-fun res!38188 () Bool)

(assert (=> d!16073 (=> (not res!38188) (not e!46886))))

(declare-fun lt!31911 () ListLongMap!1415)

(assert (=> d!16073 (= res!38188 (contains!719 lt!31911 (_1!1068 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16)))))))

(declare-fun lt!31912 () List!1476)

(assert (=> d!16073 (= lt!31911 (ListLongMap!1416 lt!31912))))

(declare-fun lt!31910 () Unit!2002)

(declare-fun lt!31909 () Unit!2002)

(assert (=> d!16073 (= lt!31910 lt!31909)))

(assert (=> d!16073 (= (getValueByKey!132 lt!31912 (_1!1068 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16073 (= lt!31909 (lemmaContainsTupThenGetReturnValue!49 lt!31912 (_1!1068 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16073 (= lt!31912 (insertStrictlySorted!52 (toList!723 lt!31563) (_1!1068 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16073 (= (+!93 lt!31563 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16))) lt!31911)))

(declare-fun b!71636 () Bool)

(declare-fun res!38189 () Bool)

(assert (=> b!71636 (=> (not res!38189) (not e!46886))))

(assert (=> b!71636 (= res!38189 (= (getValueByKey!132 (toList!723 lt!31911) (_1!1068 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16))))))))

(declare-fun b!71637 () Bool)

(assert (=> b!71637 (= e!46886 (contains!722 (toList!723 lt!31911) (tuple2!2115 lt!31557 (zeroValue!2096 newMap!16))))))

(assert (= (and d!16073 res!38188) b!71636))

(assert (= (and b!71636 res!38189) b!71637))

(declare-fun m!69147 () Bool)

(assert (=> d!16073 m!69147))

(declare-fun m!69149 () Bool)

(assert (=> d!16073 m!69149))

(declare-fun m!69151 () Bool)

(assert (=> d!16073 m!69151))

(declare-fun m!69153 () Bool)

(assert (=> d!16073 m!69153))

(declare-fun m!69155 () Bool)

(assert (=> b!71636 m!69155))

(declare-fun m!69157 () Bool)

(assert (=> b!71637 m!69157))

(assert (=> b!71211 d!16073))

(declare-fun d!16075 () Bool)

(declare-fun e!46887 () Bool)

(assert (=> d!16075 e!46887))

(declare-fun res!38190 () Bool)

(assert (=> d!16075 (=> res!38190 e!46887)))

(declare-fun lt!31915 () Bool)

(assert (=> d!16075 (= res!38190 (not lt!31915))))

(declare-fun lt!31914 () Bool)

(assert (=> d!16075 (= lt!31915 lt!31914)))

(declare-fun lt!31913 () Unit!2002)

(declare-fun e!46888 () Unit!2002)

(assert (=> d!16075 (= lt!31913 e!46888)))

(declare-fun c!10455 () Bool)

(assert (=> d!16075 (= c!10455 lt!31914)))

(assert (=> d!16075 (= lt!31914 (containsKey!136 (toList!723 (+!93 lt!31556 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16)))) lt!31550))))

(assert (=> d!16075 (= (contains!719 (+!93 lt!31556 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16))) lt!31550) lt!31915)))

(declare-fun b!71638 () Bool)

(declare-fun lt!31916 () Unit!2002)

(assert (=> b!71638 (= e!46888 lt!31916)))

(assert (=> b!71638 (= lt!31916 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (+!93 lt!31556 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16)))) lt!31550))))

(assert (=> b!71638 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31556 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16)))) lt!31550))))

(declare-fun b!71639 () Bool)

(declare-fun Unit!2033 () Unit!2002)

(assert (=> b!71639 (= e!46888 Unit!2033)))

(declare-fun b!71640 () Bool)

(assert (=> b!71640 (= e!46887 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31556 (tuple2!2115 lt!31565 (zeroValue!2096 newMap!16)))) lt!31550)))))

(assert (= (and d!16075 c!10455) b!71638))

(assert (= (and d!16075 (not c!10455)) b!71639))

(assert (= (and d!16075 (not res!38190)) b!71640))

(declare-fun m!69159 () Bool)

(assert (=> d!16075 m!69159))

(declare-fun m!69161 () Bool)

(assert (=> b!71638 m!69161))

(declare-fun m!69163 () Bool)

(assert (=> b!71638 m!69163))

(assert (=> b!71638 m!69163))

(declare-fun m!69165 () Bool)

(assert (=> b!71638 m!69165))

(assert (=> b!71640 m!69163))

(assert (=> b!71640 m!69163))

(assert (=> b!71640 m!69165))

(assert (=> b!71211 d!16075))

(declare-fun d!16077 () Bool)

(assert (=> d!16077 (= (apply!74 lt!31563 lt!31551) (get!1136 (getValueByKey!132 (toList!723 lt!31563) lt!31551)))))

(declare-fun bs!3080 () Bool)

(assert (= bs!3080 d!16077))

(declare-fun m!69167 () Bool)

(assert (=> bs!3080 m!69167))

(assert (=> bs!3080 m!69167))

(declare-fun m!69169 () Bool)

(assert (=> bs!3080 m!69169))

(assert (=> b!71211 d!16077))

(declare-fun d!16079 () Bool)

(assert (=> d!16079 (= (get!1136 (getValueByKey!132 (toList!723 lt!31507) lt!31517)) (v!2518 (getValueByKey!132 (toList!723 lt!31507) lt!31517)))))

(assert (=> d!15967 d!16079))

(declare-fun b!71644 () Bool)

(declare-fun e!46890 () Option!138)

(assert (=> b!71644 (= e!46890 None!136)))

(declare-fun b!71642 () Bool)

(declare-fun e!46889 () Option!138)

(assert (=> b!71642 (= e!46889 e!46890)))

(declare-fun c!10457 () Bool)

(assert (=> b!71642 (= c!10457 (and ((_ is Cons!1472) (toList!723 lt!31507)) (not (= (_1!1068 (h!2058 (toList!723 lt!31507))) lt!31517))))))

(declare-fun b!71641 () Bool)

(assert (=> b!71641 (= e!46889 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31507)))))))

(declare-fun d!16081 () Bool)

(declare-fun c!10456 () Bool)

(assert (=> d!16081 (= c!10456 (and ((_ is Cons!1472) (toList!723 lt!31507)) (= (_1!1068 (h!2058 (toList!723 lt!31507))) lt!31517)))))

(assert (=> d!16081 (= (getValueByKey!132 (toList!723 lt!31507) lt!31517) e!46889)))

(declare-fun b!71643 () Bool)

(assert (=> b!71643 (= e!46890 (getValueByKey!132 (t!5012 (toList!723 lt!31507)) lt!31517))))

(assert (= (and d!16081 c!10456) b!71641))

(assert (= (and d!16081 (not c!10456)) b!71642))

(assert (= (and b!71642 c!10457) b!71643))

(assert (= (and b!71642 (not c!10457)) b!71644))

(declare-fun m!69171 () Bool)

(assert (=> b!71643 m!69171))

(assert (=> d!15967 d!16081))

(declare-fun d!16083 () Bool)

(assert (=> d!16083 (= (apply!74 lt!31672 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1136 (getValueByKey!132 (toList!723 lt!31672) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3081 () Bool)

(assert (= bs!3081 d!16083))

(declare-fun m!69173 () Bool)

(assert (=> bs!3081 m!69173))

(assert (=> bs!3081 m!69173))

(declare-fun m!69175 () Bool)

(assert (=> bs!3081 m!69175))

(assert (=> b!71393 d!16083))

(declare-fun d!16085 () Bool)

(assert (=> d!16085 (= (apply!74 lt!31705 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1136 (getValueByKey!132 (toList!723 lt!31705) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3082 () Bool)

(assert (= bs!3082 d!16085))

(declare-fun m!69177 () Bool)

(assert (=> bs!3082 m!69177))

(assert (=> bs!3082 m!69177))

(declare-fun m!69179 () Bool)

(assert (=> bs!3082 m!69179))

(assert (=> b!71426 d!16085))

(declare-fun d!16087 () Bool)

(assert (=> d!16087 (= (apply!74 lt!31672 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1136 (getValueByKey!132 (toList!723 lt!31672) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3083 () Bool)

(assert (= bs!3083 d!16087))

(declare-fun m!69181 () Bool)

(assert (=> bs!3083 m!69181))

(assert (=> bs!3083 m!69181))

(declare-fun m!69183 () Bool)

(assert (=> bs!3083 m!69183))

(assert (=> b!71380 d!16087))

(declare-fun b!71648 () Bool)

(declare-fun e!46892 () Option!138)

(assert (=> b!71648 (= e!46892 None!136)))

(declare-fun b!71646 () Bool)

(declare-fun e!46891 () Option!138)

(assert (=> b!71646 (= e!46891 e!46892)))

(declare-fun c!10459 () Bool)

(assert (=> b!71646 (= c!10459 (and ((_ is Cons!1472) (toList!723 lt!31577)) (not (= (_1!1068 (h!2058 (toList!723 lt!31577))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!71645 () Bool)

(assert (=> b!71645 (= e!46891 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31577)))))))

(declare-fun d!16089 () Bool)

(declare-fun c!10458 () Bool)

(assert (=> d!16089 (= c!10458 (and ((_ is Cons!1472) (toList!723 lt!31577)) (= (_1!1068 (h!2058 (toList!723 lt!31577))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16089 (= (getValueByKey!132 (toList!723 lt!31577) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!46891)))

(declare-fun b!71647 () Bool)

(assert (=> b!71647 (= e!46892 (getValueByKey!132 (t!5012 (toList!723 lt!31577)) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16089 c!10458) b!71645))

(assert (= (and d!16089 (not c!10458)) b!71646))

(assert (= (and b!71646 c!10459) b!71647))

(assert (= (and b!71646 (not c!10459)) b!71648))

(declare-fun m!69185 () Bool)

(assert (=> b!71647 m!69185))

(assert (=> b!71248 d!16089))

(declare-fun b!71652 () Bool)

(declare-fun e!46893 () Bool)

(assert (=> b!71652 (= e!46893 (and (bvsge (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000000) (bvsle (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000011) (bvsge (_vacant!394 (_2!1069 lt!31408)) #b00000000000000000000000000000000)))))

(declare-fun b!71649 () Bool)

(declare-fun res!38194 () Bool)

(assert (=> b!71649 (=> (not res!38194) (not e!46893))))

(assert (=> b!71649 (= res!38194 (and (= (size!2091 (_values!2175 (_2!1069 lt!31408))) (bvadd (mask!6149 (_2!1069 lt!31408)) #b00000000000000000000000000000001)) (= (size!2090 (_keys!3840 (_2!1069 lt!31408))) (size!2091 (_values!2175 (_2!1069 lt!31408)))) (bvsge (_size!394 (_2!1069 lt!31408)) #b00000000000000000000000000000000) (bvsle (_size!394 (_2!1069 lt!31408)) (bvadd (mask!6149 (_2!1069 lt!31408)) #b00000000000000000000000000000001))))))

(declare-fun b!71650 () Bool)

(declare-fun res!38192 () Bool)

(assert (=> b!71650 (=> (not res!38192) (not e!46893))))

(assert (=> b!71650 (= res!38192 (bvsge (size!2094 (_2!1069 lt!31408)) (_size!394 (_2!1069 lt!31408))))))

(declare-fun d!16091 () Bool)

(declare-fun res!38193 () Bool)

(assert (=> d!16091 (=> (not res!38193) (not e!46893))))

(assert (=> d!16091 (= res!38193 (validMask!0 (mask!6149 (_2!1069 lt!31408))))))

(assert (=> d!16091 (= (simpleValid!50 (_2!1069 lt!31408)) e!46893)))

(declare-fun b!71651 () Bool)

(declare-fun res!38191 () Bool)

(assert (=> b!71651 (=> (not res!38191) (not e!46893))))

(assert (=> b!71651 (= res!38191 (= (size!2094 (_2!1069 lt!31408)) (bvadd (_size!394 (_2!1069 lt!31408)) (bvsdiv (bvadd (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!16091 res!38193) b!71649))

(assert (= (and b!71649 res!38194) b!71650))

(assert (= (and b!71650 res!38192) b!71651))

(assert (= (and b!71651 res!38191) b!71652))

(declare-fun m!69187 () Bool)

(assert (=> b!71650 m!69187))

(declare-fun m!69189 () Bool)

(assert (=> d!16091 m!69189))

(assert (=> b!71651 m!69187))

(assert (=> d!15895 d!16091))

(declare-fun b!71656 () Bool)

(declare-fun e!46895 () Option!138)

(assert (=> b!71656 (= e!46895 None!136)))

(declare-fun b!71654 () Bool)

(declare-fun e!46894 () Option!138)

(assert (=> b!71654 (= e!46894 e!46895)))

(declare-fun c!10461 () Bool)

(assert (=> b!71654 (= c!10461 (and ((_ is Cons!1472) (toList!723 lt!31747)) (not (= (_1!1068 (h!2058 (toList!723 lt!31747))) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!71653 () Bool)

(assert (=> b!71653 (= e!46894 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31747)))))))

(declare-fun d!16093 () Bool)

(declare-fun c!10460 () Bool)

(assert (=> d!16093 (= c!10460 (and ((_ is Cons!1472) (toList!723 lt!31747)) (= (_1!1068 (h!2058 (toList!723 lt!31747))) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16093 (= (getValueByKey!132 (toList!723 lt!31747) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!46894)))

(declare-fun b!71655 () Bool)

(assert (=> b!71655 (= e!46895 (getValueByKey!132 (t!5012 (toList!723 lt!31747)) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16093 c!10460) b!71653))

(assert (= (and d!16093 (not c!10460)) b!71654))

(assert (= (and b!71654 c!10461) b!71655))

(assert (= (and b!71654 (not c!10461)) b!71656))

(declare-fun m!69191 () Bool)

(assert (=> b!71655 m!69191))

(assert (=> b!71481 d!16093))

(declare-fun d!16095 () Bool)

(declare-fun res!38195 () Bool)

(declare-fun e!46896 () Bool)

(assert (=> d!16095 (=> res!38195 e!46896)))

(assert (=> d!16095 (= res!38195 (and ((_ is Cons!1472) (toList!723 lt!31452)) (= (_1!1068 (h!2058 (toList!723 lt!31452))) (_1!1068 lt!31265))))))

(assert (=> d!16095 (= (containsKey!136 (toList!723 lt!31452) (_1!1068 lt!31265)) e!46896)))

(declare-fun b!71657 () Bool)

(declare-fun e!46897 () Bool)

(assert (=> b!71657 (= e!46896 e!46897)))

(declare-fun res!38196 () Bool)

(assert (=> b!71657 (=> (not res!38196) (not e!46897))))

(assert (=> b!71657 (= res!38196 (and (or (not ((_ is Cons!1472) (toList!723 lt!31452))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31452))) (_1!1068 lt!31265))) ((_ is Cons!1472) (toList!723 lt!31452)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31452))) (_1!1068 lt!31265))))))

(declare-fun b!71658 () Bool)

(assert (=> b!71658 (= e!46897 (containsKey!136 (t!5012 (toList!723 lt!31452)) (_1!1068 lt!31265)))))

(assert (= (and d!16095 (not res!38195)) b!71657))

(assert (= (and b!71657 res!38196) b!71658))

(declare-fun m!69193 () Bool)

(assert (=> b!71658 m!69193))

(assert (=> d!15897 d!16095))

(declare-fun d!16097 () Bool)

(declare-fun e!46898 () Bool)

(assert (=> d!16097 e!46898))

(declare-fun res!38197 () Bool)

(assert (=> d!16097 (=> res!38197 e!46898)))

(declare-fun lt!31919 () Bool)

(assert (=> d!16097 (= res!38197 (not lt!31919))))

(declare-fun lt!31918 () Bool)

(assert (=> d!16097 (= lt!31919 lt!31918)))

(declare-fun lt!31917 () Unit!2002)

(declare-fun e!46899 () Unit!2002)

(assert (=> d!16097 (= lt!31917 e!46899)))

(declare-fun c!10462 () Bool)

(assert (=> d!16097 (= c!10462 lt!31918)))

(assert (=> d!16097 (= lt!31918 (containsKey!136 (toList!723 lt!31705) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16097 (= (contains!719 lt!31705 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) lt!31919)))

(declare-fun b!71659 () Bool)

(declare-fun lt!31920 () Unit!2002)

(assert (=> b!71659 (= e!46899 lt!31920)))

(assert (=> b!71659 (= lt!31920 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31705) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71659 (isDefined!85 (getValueByKey!132 (toList!723 lt!31705) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71660 () Bool)

(declare-fun Unit!2034 () Unit!2002)

(assert (=> b!71660 (= e!46899 Unit!2034)))

(declare-fun b!71661 () Bool)

(assert (=> b!71661 (= e!46898 (isDefined!85 (getValueByKey!132 (toList!723 lt!31705) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16097 c!10462) b!71659))

(assert (= (and d!16097 (not c!10462)) b!71660))

(assert (= (and d!16097 (not res!38197)) b!71661))

(assert (=> d!16097 m!68283))

(declare-fun m!69195 () Bool)

(assert (=> d!16097 m!69195))

(assert (=> b!71659 m!68283))

(declare-fun m!69197 () Bool)

(assert (=> b!71659 m!69197))

(assert (=> b!71659 m!68283))

(declare-fun m!69199 () Bool)

(assert (=> b!71659 m!69199))

(assert (=> b!71659 m!69199))

(declare-fun m!69201 () Bool)

(assert (=> b!71659 m!69201))

(assert (=> b!71661 m!68283))

(assert (=> b!71661 m!69199))

(assert (=> b!71661 m!69199))

(assert (=> b!71661 m!69201))

(assert (=> b!71419 d!16097))

(declare-fun d!16099 () Bool)

(declare-fun res!38198 () Bool)

(declare-fun e!46900 () Bool)

(assert (=> d!16099 (=> res!38198 e!46900)))

(assert (=> d!16099 (= res!38198 (and ((_ is Cons!1472) lt!31460) (= (_1!1068 (h!2058 lt!31460)) (_1!1068 lt!31265))))))

(assert (=> d!16099 (= (containsKey!136 lt!31460 (_1!1068 lt!31265)) e!46900)))

(declare-fun b!71662 () Bool)

(declare-fun e!46901 () Bool)

(assert (=> b!71662 (= e!46900 e!46901)))

(declare-fun res!38199 () Bool)

(assert (=> b!71662 (=> (not res!38199) (not e!46901))))

(assert (=> b!71662 (= res!38199 (and (or (not ((_ is Cons!1472) lt!31460)) (bvsle (_1!1068 (h!2058 lt!31460)) (_1!1068 lt!31265))) ((_ is Cons!1472) lt!31460) (bvslt (_1!1068 (h!2058 lt!31460)) (_1!1068 lt!31265))))))

(declare-fun b!71663 () Bool)

(assert (=> b!71663 (= e!46901 (containsKey!136 (t!5012 lt!31460) (_1!1068 lt!31265)))))

(assert (= (and d!16099 (not res!38198)) b!71662))

(assert (= (and b!71662 res!38199) b!71663))

(declare-fun m!69203 () Bool)

(assert (=> b!71663 m!69203))

(assert (=> b!71236 d!16099))

(declare-fun d!16101 () Bool)

(declare-fun e!46902 () Bool)

(assert (=> d!16101 e!46902))

(declare-fun res!38200 () Bool)

(assert (=> d!16101 (=> res!38200 e!46902)))

(declare-fun lt!31923 () Bool)

(assert (=> d!16101 (= res!38200 (not lt!31923))))

(declare-fun lt!31922 () Bool)

(assert (=> d!16101 (= lt!31923 lt!31922)))

(declare-fun lt!31921 () Unit!2002)

(declare-fun e!46903 () Unit!2002)

(assert (=> d!16101 (= lt!31921 e!46903)))

(declare-fun c!10463 () Bool)

(assert (=> d!16101 (= c!10463 lt!31922)))

(assert (=> d!16101 (= lt!31922 (containsKey!136 (toList!723 lt!31747) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16101 (= (contains!719 lt!31747 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31923)))

(declare-fun b!71664 () Bool)

(declare-fun lt!31924 () Unit!2002)

(assert (=> b!71664 (= e!46903 lt!31924)))

(assert (=> b!71664 (= lt!31924 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31747) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> b!71664 (isDefined!85 (getValueByKey!132 (toList!723 lt!31747) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71665 () Bool)

(declare-fun Unit!2035 () Unit!2002)

(assert (=> b!71665 (= e!46903 Unit!2035)))

(declare-fun b!71666 () Bool)

(assert (=> b!71666 (= e!46902 (isDefined!85 (getValueByKey!132 (toList!723 lt!31747) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16101 c!10463) b!71664))

(assert (= (and d!16101 (not c!10463)) b!71665))

(assert (= (and d!16101 (not res!38200)) b!71666))

(declare-fun m!69205 () Bool)

(assert (=> d!16101 m!69205))

(declare-fun m!69207 () Bool)

(assert (=> b!71664 m!69207))

(assert (=> b!71664 m!68827))

(assert (=> b!71664 m!68827))

(declare-fun m!69209 () Bool)

(assert (=> b!71664 m!69209))

(assert (=> b!71666 m!68827))

(assert (=> b!71666 m!68827))

(assert (=> b!71666 m!69209))

(assert (=> d!15983 d!16101))

(declare-fun b!71670 () Bool)

(declare-fun e!46905 () Option!138)

(assert (=> b!71670 (= e!46905 None!136)))

(declare-fun b!71668 () Bool)

(declare-fun e!46904 () Option!138)

(assert (=> b!71668 (= e!46904 e!46905)))

(declare-fun c!10465 () Bool)

(assert (=> b!71668 (= c!10465 (and ((_ is Cons!1472) lt!31748) (not (= (_1!1068 (h!2058 lt!31748)) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!71667 () Bool)

(assert (=> b!71667 (= e!46904 (Some!137 (_2!1068 (h!2058 lt!31748))))))

(declare-fun c!10464 () Bool)

(declare-fun d!16103 () Bool)

(assert (=> d!16103 (= c!10464 (and ((_ is Cons!1472) lt!31748) (= (_1!1068 (h!2058 lt!31748)) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16103 (= (getValueByKey!132 lt!31748 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!46904)))

(declare-fun b!71669 () Bool)

(assert (=> b!71669 (= e!46905 (getValueByKey!132 (t!5012 lt!31748) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16103 c!10464) b!71667))

(assert (= (and d!16103 (not c!10464)) b!71668))

(assert (= (and b!71668 c!10465) b!71669))

(assert (= (and b!71668 (not c!10465)) b!71670))

(declare-fun m!69211 () Bool)

(assert (=> b!71669 m!69211))

(assert (=> d!15983 d!16103))

(declare-fun d!16105 () Bool)

(assert (=> d!16105 (= (getValueByKey!132 lt!31748 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!31925 () Unit!2002)

(assert (=> d!16105 (= lt!31925 (choose!397 lt!31748 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun e!46906 () Bool)

(assert (=> d!16105 e!46906))

(declare-fun res!38201 () Bool)

(assert (=> d!16105 (=> (not res!38201) (not e!46906))))

(assert (=> d!16105 (= res!38201 (isStrictlySorted!291 lt!31748))))

(assert (=> d!16105 (= (lemmaContainsTupThenGetReturnValue!49 lt!31748 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31925)))

(declare-fun b!71671 () Bool)

(declare-fun res!38202 () Bool)

(assert (=> b!71671 (=> (not res!38202) (not e!46906))))

(assert (=> b!71671 (= res!38202 (containsKey!136 lt!31748 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71672 () Bool)

(assert (=> b!71672 (= e!46906 (contains!722 lt!31748 (tuple2!2115 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16105 res!38201) b!71671))

(assert (= (and b!71671 res!38202) b!71672))

(assert (=> d!16105 m!68821))

(declare-fun m!69213 () Bool)

(assert (=> d!16105 m!69213))

(declare-fun m!69215 () Bool)

(assert (=> d!16105 m!69215))

(declare-fun m!69217 () Bool)

(assert (=> b!71671 m!69217))

(declare-fun m!69219 () Bool)

(assert (=> b!71672 m!69219))

(assert (=> d!15983 d!16105))

(declare-fun bm!6223 () Bool)

(declare-fun call!6228 () List!1476)

(declare-fun call!6226 () List!1476)

(assert (=> bm!6223 (= call!6228 call!6226)))

(declare-fun b!71673 () Bool)

(declare-fun e!46908 () List!1476)

(declare-fun call!6227 () List!1476)

(assert (=> b!71673 (= e!46908 call!6227)))

(declare-fun c!10468 () Bool)

(declare-fun bm!6224 () Bool)

(declare-fun e!46907 () List!1476)

(assert (=> bm!6224 (= call!6226 ($colon$colon!65 e!46907 (ite c!10468 (h!2058 (toList!723 lt!31507)) (tuple2!2115 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun c!10469 () Bool)

(assert (=> bm!6224 (= c!10469 c!10468)))

(declare-fun b!71675 () Bool)

(declare-fun c!10466 () Bool)

(assert (=> b!71675 (= c!10466 (and ((_ is Cons!1472) (toList!723 lt!31507)) (bvsgt (_1!1068 (h!2058 (toList!723 lt!31507))) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun e!46911 () List!1476)

(assert (=> b!71675 (= e!46911 e!46908)))

(declare-fun b!71676 () Bool)

(assert (=> b!71676 (= e!46911 call!6228)))

(declare-fun b!71677 () Bool)

(assert (=> b!71677 (= e!46908 call!6227)))

(declare-fun b!71678 () Bool)

(declare-fun e!46910 () List!1476)

(assert (=> b!71678 (= e!46910 e!46911)))

(declare-fun c!10467 () Bool)

(assert (=> b!71678 (= c!10467 (and ((_ is Cons!1472) (toList!723 lt!31507)) (= (_1!1068 (h!2058 (toList!723 lt!31507))) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71679 () Bool)

(declare-fun res!38204 () Bool)

(declare-fun e!46909 () Bool)

(assert (=> b!71679 (=> (not res!38204) (not e!46909))))

(declare-fun lt!31926 () List!1476)

(assert (=> b!71679 (= res!38204 (containsKey!136 lt!31926 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71680 () Bool)

(assert (=> b!71680 (= e!46909 (contains!722 lt!31926 (tuple2!2115 (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71681 () Bool)

(assert (=> b!71681 (= e!46907 (ite c!10467 (t!5012 (toList!723 lt!31507)) (ite c!10466 (Cons!1472 (h!2058 (toList!723 lt!31507)) (t!5012 (toList!723 lt!31507))) Nil!1473)))))

(declare-fun b!71674 () Bool)

(assert (=> b!71674 (= e!46910 call!6226)))

(declare-fun d!16107 () Bool)

(assert (=> d!16107 e!46909))

(declare-fun res!38203 () Bool)

(assert (=> d!16107 (=> (not res!38203) (not e!46909))))

(assert (=> d!16107 (= res!38203 (isStrictlySorted!291 lt!31926))))

(assert (=> d!16107 (= lt!31926 e!46910)))

(assert (=> d!16107 (= c!10468 (and ((_ is Cons!1472) (toList!723 lt!31507)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31507))) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16107 (isStrictlySorted!291 (toList!723 lt!31507))))

(assert (=> d!16107 (= (insertStrictlySorted!52 (toList!723 lt!31507) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31926)))

(declare-fun b!71682 () Bool)

(assert (=> b!71682 (= e!46907 (insertStrictlySorted!52 (t!5012 (toList!723 lt!31507)) (_1!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun bm!6225 () Bool)

(assert (=> bm!6225 (= call!6227 call!6228)))

(assert (= (and d!16107 c!10468) b!71674))

(assert (= (and d!16107 (not c!10468)) b!71678))

(assert (= (and b!71678 c!10467) b!71676))

(assert (= (and b!71678 (not c!10467)) b!71675))

(assert (= (and b!71675 c!10466) b!71673))

(assert (= (and b!71675 (not c!10466)) b!71677))

(assert (= (or b!71673 b!71677) bm!6225))

(assert (= (or b!71676 bm!6225) bm!6223))

(assert (= (or b!71674 bm!6223) bm!6224))

(assert (= (and bm!6224 c!10469) b!71682))

(assert (= (and bm!6224 (not c!10469)) b!71681))

(assert (= (and d!16107 res!38203) b!71679))

(assert (= (and b!71679 res!38204) b!71680))

(declare-fun m!69221 () Bool)

(assert (=> b!71679 m!69221))

(declare-fun m!69223 () Bool)

(assert (=> b!71682 m!69223))

(declare-fun m!69225 () Bool)

(assert (=> b!71680 m!69225))

(declare-fun m!69227 () Bool)

(assert (=> bm!6224 m!69227))

(declare-fun m!69229 () Bool)

(assert (=> d!16107 m!69229))

(declare-fun m!69231 () Bool)

(assert (=> d!16107 m!69231))

(assert (=> d!15983 d!16107))

(declare-fun d!16109 () Bool)

(assert (=> d!16109 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31459) (_1!1068 lt!31265))) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31459) (_1!1068 lt!31265)))))))

(declare-fun bs!3084 () Bool)

(assert (= bs!3084 d!16109))

(assert (=> bs!3084 m!68167))

(declare-fun m!69233 () Bool)

(assert (=> bs!3084 m!69233))

(assert (=> b!71231 d!16109))

(assert (=> b!71231 d!16033))

(declare-fun d!16111 () Bool)

(declare-fun res!38205 () Bool)

(declare-fun e!46912 () Bool)

(assert (=> d!16111 (=> res!38205 e!46912)))

(assert (=> d!16111 (= res!38205 (and ((_ is Cons!1472) (toList!723 lt!31444)) (= (_1!1068 (h!2058 (toList!723 lt!31444))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16111 (= (containsKey!136 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000) e!46912)))

(declare-fun b!71683 () Bool)

(declare-fun e!46913 () Bool)

(assert (=> b!71683 (= e!46912 e!46913)))

(declare-fun res!38206 () Bool)

(assert (=> b!71683 (=> (not res!38206) (not e!46913))))

(assert (=> b!71683 (= res!38206 (and (or (not ((_ is Cons!1472) (toList!723 lt!31444))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31444))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1472) (toList!723 lt!31444)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31444))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71684 () Bool)

(assert (=> b!71684 (= e!46913 (containsKey!136 (t!5012 (toList!723 lt!31444)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16111 (not res!38205)) b!71683))

(assert (= (and b!71683 res!38206) b!71684))

(declare-fun m!69235 () Bool)

(assert (=> b!71684 m!69235))

(assert (=> d!16029 d!16111))

(declare-fun b!71688 () Bool)

(declare-fun e!46915 () Option!138)

(assert (=> b!71688 (= e!46915 None!136)))

(declare-fun b!71686 () Bool)

(declare-fun e!46914 () Option!138)

(assert (=> b!71686 (= e!46914 e!46915)))

(declare-fun c!10471 () Bool)

(assert (=> b!71686 (= c!10471 (and ((_ is Cons!1472) (toList!723 lt!31585)) (not (= (_1!1068 (h!2058 (toList!723 lt!31585))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!71685 () Bool)

(assert (=> b!71685 (= e!46914 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31585)))))))

(declare-fun d!16113 () Bool)

(declare-fun c!10470 () Bool)

(assert (=> d!16113 (= c!10470 (and ((_ is Cons!1472) (toList!723 lt!31585)) (= (_1!1068 (h!2058 (toList!723 lt!31585))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16113 (= (getValueByKey!132 (toList!723 lt!31585) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!46914)))

(declare-fun b!71687 () Bool)

(assert (=> b!71687 (= e!46915 (getValueByKey!132 (t!5012 (toList!723 lt!31585)) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16113 c!10470) b!71685))

(assert (= (and d!16113 (not c!10470)) b!71686))

(assert (= (and b!71686 c!10471) b!71687))

(assert (= (and b!71686 (not c!10471)) b!71688))

(declare-fun m!69237 () Bool)

(assert (=> b!71687 m!69237))

(assert (=> b!71252 d!16113))

(declare-fun d!16115 () Bool)

(assert (=> d!16115 (= (apply!74 lt!31564 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1136 (getValueByKey!132 (toList!723 lt!31564) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3085 () Bool)

(assert (= bs!3085 d!16115))

(declare-fun m!69239 () Bool)

(assert (=> bs!3085 m!69239))

(assert (=> bs!3085 m!69239))

(declare-fun m!69241 () Bool)

(assert (=> bs!3085 m!69241))

(assert (=> b!71206 d!16115))

(declare-fun d!16117 () Bool)

(assert (=> d!16117 (= (apply!74 lt!31564 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1136 (getValueByKey!132 (toList!723 lt!31564) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3086 () Bool)

(assert (= bs!3086 d!16117))

(declare-fun m!69243 () Bool)

(assert (=> bs!3086 m!69243))

(assert (=> bs!3086 m!69243))

(declare-fun m!69245 () Bool)

(assert (=> bs!3086 m!69245))

(assert (=> b!71219 d!16117))

(declare-fun d!16119 () Bool)

(declare-fun res!38207 () Bool)

(declare-fun e!46916 () Bool)

(assert (=> d!16119 (=> res!38207 e!46916)))

(assert (=> d!16119 (= res!38207 (and ((_ is Cons!1472) lt!31424) (= (_1!1068 (h!2058 lt!31424)) (_1!1068 lt!31269))))))

(assert (=> d!16119 (= (containsKey!136 lt!31424 (_1!1068 lt!31269)) e!46916)))

(declare-fun b!71689 () Bool)

(declare-fun e!46917 () Bool)

(assert (=> b!71689 (= e!46916 e!46917)))

(declare-fun res!38208 () Bool)

(assert (=> b!71689 (=> (not res!38208) (not e!46917))))

(assert (=> b!71689 (= res!38208 (and (or (not ((_ is Cons!1472) lt!31424)) (bvsle (_1!1068 (h!2058 lt!31424)) (_1!1068 lt!31269))) ((_ is Cons!1472) lt!31424) (bvslt (_1!1068 (h!2058 lt!31424)) (_1!1068 lt!31269))))))

(declare-fun b!71690 () Bool)

(assert (=> b!71690 (= e!46917 (containsKey!136 (t!5012 lt!31424) (_1!1068 lt!31269)))))

(assert (= (and d!16119 (not res!38207)) b!71689))

(assert (= (and b!71689 res!38208) b!71690))

(declare-fun m!69247 () Bool)

(assert (=> b!71690 m!69247))

(assert (=> b!71163 d!16119))

(declare-fun d!16121 () Bool)

(declare-fun e!46918 () Bool)

(assert (=> d!16121 e!46918))

(declare-fun res!38209 () Bool)

(assert (=> d!16121 (=> res!38209 e!46918)))

(declare-fun lt!31929 () Bool)

(assert (=> d!16121 (= res!38209 (not lt!31929))))

(declare-fun lt!31928 () Bool)

(assert (=> d!16121 (= lt!31929 lt!31928)))

(declare-fun lt!31927 () Unit!2002)

(declare-fun e!46919 () Unit!2002)

(assert (=> d!16121 (= lt!31927 e!46919)))

(declare-fun c!10472 () Bool)

(assert (=> d!16121 (= c!10472 lt!31928)))

(assert (=> d!16121 (= lt!31928 (containsKey!136 (toList!723 lt!31577) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16121 (= (contains!719 lt!31577 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31929)))

(declare-fun b!71691 () Bool)

(declare-fun lt!31930 () Unit!2002)

(assert (=> b!71691 (= e!46919 lt!31930)))

(assert (=> b!71691 (= lt!31930 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31577) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> b!71691 (isDefined!85 (getValueByKey!132 (toList!723 lt!31577) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71692 () Bool)

(declare-fun Unit!2036 () Unit!2002)

(assert (=> b!71692 (= e!46919 Unit!2036)))

(declare-fun b!71693 () Bool)

(assert (=> b!71693 (= e!46918 (isDefined!85 (getValueByKey!132 (toList!723 lt!31577) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16121 c!10472) b!71691))

(assert (= (and d!16121 (not c!10472)) b!71692))

(assert (= (and d!16121 (not res!38209)) b!71693))

(declare-fun m!69249 () Bool)

(assert (=> d!16121 m!69249))

(declare-fun m!69251 () Bool)

(assert (=> b!71691 m!69251))

(assert (=> b!71691 m!68379))

(assert (=> b!71691 m!68379))

(declare-fun m!69253 () Bool)

(assert (=> b!71691 m!69253))

(assert (=> b!71693 m!68379))

(assert (=> b!71693 m!68379))

(assert (=> b!71693 m!69253))

(assert (=> d!15871 d!16121))

(declare-fun b!71697 () Bool)

(declare-fun e!46921 () Option!138)

(assert (=> b!71697 (= e!46921 None!136)))

(declare-fun b!71695 () Bool)

(declare-fun e!46920 () Option!138)

(assert (=> b!71695 (= e!46920 e!46921)))

(declare-fun c!10474 () Bool)

(assert (=> b!71695 (= c!10474 (and ((_ is Cons!1472) lt!31578) (not (= (_1!1068 (h!2058 lt!31578)) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!71694 () Bool)

(assert (=> b!71694 (= e!46920 (Some!137 (_2!1068 (h!2058 lt!31578))))))

(declare-fun d!16123 () Bool)

(declare-fun c!10473 () Bool)

(assert (=> d!16123 (= c!10473 (and ((_ is Cons!1472) lt!31578) (= (_1!1068 (h!2058 lt!31578)) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16123 (= (getValueByKey!132 lt!31578 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!46920)))

(declare-fun b!71696 () Bool)

(assert (=> b!71696 (= e!46921 (getValueByKey!132 (t!5012 lt!31578) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16123 c!10473) b!71694))

(assert (= (and d!16123 (not c!10473)) b!71695))

(assert (= (and b!71695 c!10474) b!71696))

(assert (= (and b!71695 (not c!10474)) b!71697))

(declare-fun m!69255 () Bool)

(assert (=> b!71696 m!69255))

(assert (=> d!15871 d!16123))

(declare-fun d!16125 () Bool)

(assert (=> d!16125 (= (getValueByKey!132 lt!31578 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!31931 () Unit!2002)

(assert (=> d!16125 (= lt!31931 (choose!397 lt!31578 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun e!46922 () Bool)

(assert (=> d!16125 e!46922))

(declare-fun res!38210 () Bool)

(assert (=> d!16125 (=> (not res!38210) (not e!46922))))

(assert (=> d!16125 (= res!38210 (isStrictlySorted!291 lt!31578))))

(assert (=> d!16125 (= (lemmaContainsTupThenGetReturnValue!49 lt!31578 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31931)))

(declare-fun b!71698 () Bool)

(declare-fun res!38211 () Bool)

(assert (=> b!71698 (=> (not res!38211) (not e!46922))))

(assert (=> b!71698 (= res!38211 (containsKey!136 lt!31578 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71699 () Bool)

(assert (=> b!71699 (= e!46922 (contains!722 lt!31578 (tuple2!2115 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16125 res!38210) b!71698))

(assert (= (and b!71698 res!38211) b!71699))

(assert (=> d!16125 m!68373))

(declare-fun m!69257 () Bool)

(assert (=> d!16125 m!69257))

(declare-fun m!69259 () Bool)

(assert (=> d!16125 m!69259))

(declare-fun m!69261 () Bool)

(assert (=> b!71698 m!69261))

(declare-fun m!69263 () Bool)

(assert (=> b!71699 m!69263))

(assert (=> d!15871 d!16125))

(declare-fun bm!6226 () Bool)

(declare-fun call!6231 () List!1476)

(declare-fun call!6229 () List!1476)

(assert (=> bm!6226 (= call!6231 call!6229)))

(declare-fun b!71700 () Bool)

(declare-fun e!46924 () List!1476)

(declare-fun call!6230 () List!1476)

(assert (=> b!71700 (= e!46924 call!6230)))

(declare-fun bm!6227 () Bool)

(declare-fun c!10477 () Bool)

(declare-fun e!46923 () List!1476)

(assert (=> bm!6227 (= call!6229 ($colon$colon!65 e!46923 (ite c!10477 (h!2058 (toList!723 lt!31270)) (tuple2!2115 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun c!10478 () Bool)

(assert (=> bm!6227 (= c!10478 c!10477)))

(declare-fun b!71702 () Bool)

(declare-fun c!10475 () Bool)

(assert (=> b!71702 (= c!10475 (and ((_ is Cons!1472) (toList!723 lt!31270)) (bvsgt (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun e!46927 () List!1476)

(assert (=> b!71702 (= e!46927 e!46924)))

(declare-fun b!71703 () Bool)

(assert (=> b!71703 (= e!46927 call!6231)))

(declare-fun b!71704 () Bool)

(assert (=> b!71704 (= e!46924 call!6230)))

(declare-fun b!71705 () Bool)

(declare-fun e!46926 () List!1476)

(assert (=> b!71705 (= e!46926 e!46927)))

(declare-fun c!10476 () Bool)

(assert (=> b!71705 (= c!10476 (and ((_ is Cons!1472) (toList!723 lt!31270)) (= (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71706 () Bool)

(declare-fun res!38213 () Bool)

(declare-fun e!46925 () Bool)

(assert (=> b!71706 (=> (not res!38213) (not e!46925))))

(declare-fun lt!31932 () List!1476)

(assert (=> b!71706 (= res!38213 (containsKey!136 lt!31932 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71707 () Bool)

(assert (=> b!71707 (= e!46925 (contains!722 lt!31932 (tuple2!2115 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71708 () Bool)

(assert (=> b!71708 (= e!46923 (ite c!10476 (t!5012 (toList!723 lt!31270)) (ite c!10475 (Cons!1472 (h!2058 (toList!723 lt!31270)) (t!5012 (toList!723 lt!31270))) Nil!1473)))))

(declare-fun b!71701 () Bool)

(assert (=> b!71701 (= e!46926 call!6229)))

(declare-fun d!16127 () Bool)

(assert (=> d!16127 e!46925))

(declare-fun res!38212 () Bool)

(assert (=> d!16127 (=> (not res!38212) (not e!46925))))

(assert (=> d!16127 (= res!38212 (isStrictlySorted!291 lt!31932))))

(assert (=> d!16127 (= lt!31932 e!46926)))

(assert (=> d!16127 (= c!10477 (and ((_ is Cons!1472) (toList!723 lt!31270)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16127 (isStrictlySorted!291 (toList!723 lt!31270))))

(assert (=> d!16127 (= (insertStrictlySorted!52 (toList!723 lt!31270) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31932)))

(declare-fun b!71709 () Bool)

(assert (=> b!71709 (= e!46923 (insertStrictlySorted!52 (t!5012 (toList!723 lt!31270)) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun bm!6228 () Bool)

(assert (=> bm!6228 (= call!6230 call!6231)))

(assert (= (and d!16127 c!10477) b!71701))

(assert (= (and d!16127 (not c!10477)) b!71705))

(assert (= (and b!71705 c!10476) b!71703))

(assert (= (and b!71705 (not c!10476)) b!71702))

(assert (= (and b!71702 c!10475) b!71700))

(assert (= (and b!71702 (not c!10475)) b!71704))

(assert (= (or b!71700 b!71704) bm!6228))

(assert (= (or b!71703 bm!6228) bm!6226))

(assert (= (or b!71701 bm!6226) bm!6227))

(assert (= (and bm!6227 c!10478) b!71709))

(assert (= (and bm!6227 (not c!10478)) b!71708))

(assert (= (and d!16127 res!38212) b!71706))

(assert (= (and b!71706 res!38213) b!71707))

(declare-fun m!69265 () Bool)

(assert (=> b!71706 m!69265))

(declare-fun m!69267 () Bool)

(assert (=> b!71709 m!69267))

(declare-fun m!69269 () Bool)

(assert (=> b!71707 m!69269))

(declare-fun m!69271 () Bool)

(assert (=> bm!6227 m!69271))

(declare-fun m!69273 () Bool)

(assert (=> d!16127 m!69273))

(assert (=> d!16127 m!68459))

(assert (=> d!15871 d!16127))

(declare-fun d!16129 () Bool)

(assert (=> d!16129 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31423) (_1!1068 lt!31269))) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31423) (_1!1068 lt!31269)))))))

(declare-fun bs!3087 () Bool)

(assert (= bs!3087 d!16129))

(assert (=> bs!3087 m!68095))

(declare-fun m!69275 () Bool)

(assert (=> bs!3087 m!69275))

(assert (=> b!71154 d!16129))

(assert (=> b!71154 d!15933))

(declare-fun d!16131 () Bool)

(assert (=> d!16131 (= (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71556 d!16131))

(declare-fun d!16133 () Bool)

(declare-fun res!38214 () Bool)

(declare-fun e!46928 () Bool)

(assert (=> d!16133 (=> res!38214 e!46928)))

(assert (=> d!16133 (= res!38214 (and ((_ is Cons!1472) (toList!723 call!6127)) (= (_1!1068 (h!2058 (toList!723 call!6127))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (=> d!16133 (= (containsKey!136 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) e!46928)))

(declare-fun b!71710 () Bool)

(declare-fun e!46929 () Bool)

(assert (=> b!71710 (= e!46928 e!46929)))

(declare-fun res!38215 () Bool)

(assert (=> b!71710 (=> (not res!38215) (not e!46929))))

(assert (=> b!71710 (= res!38215 (and (or (not ((_ is Cons!1472) (toList!723 call!6127))) (bvsle (_1!1068 (h!2058 (toList!723 call!6127))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))) ((_ is Cons!1472) (toList!723 call!6127)) (bvslt (_1!1068 (h!2058 (toList!723 call!6127))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(declare-fun b!71711 () Bool)

(assert (=> b!71711 (= e!46929 (containsKey!136 (t!5012 (toList!723 call!6127)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16133 (not res!38214)) b!71710))

(assert (= (and b!71710 res!38215) b!71711))

(assert (=> b!71711 m!67893))

(declare-fun m!69277 () Bool)

(assert (=> b!71711 m!69277))

(assert (=> d!16035 d!16133))

(declare-fun d!16135 () Bool)

(assert (=> d!16135 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3088 () Bool)

(assert (= bs!3088 d!16135))

(assert (=> bs!3088 m!68759))

(declare-fun m!69279 () Bool)

(assert (=> bs!3088 m!69279))

(assert (=> b!71461 d!16135))

(declare-fun b!71715 () Bool)

(declare-fun e!46931 () Option!138)

(assert (=> b!71715 (= e!46931 None!136)))

(declare-fun b!71713 () Bool)

(declare-fun e!46930 () Option!138)

(assert (=> b!71713 (= e!46930 e!46931)))

(declare-fun c!10480 () Bool)

(assert (=> b!71713 (= c!10480 (and ((_ is Cons!1472) (toList!723 lt!31444)) (not (= (_1!1068 (h!2058 (toList!723 lt!31444))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71712 () Bool)

(assert (=> b!71712 (= e!46930 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31444)))))))

(declare-fun d!16137 () Bool)

(declare-fun c!10479 () Bool)

(assert (=> d!16137 (= c!10479 (and ((_ is Cons!1472) (toList!723 lt!31444)) (= (_1!1068 (h!2058 (toList!723 lt!31444))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16137 (= (getValueByKey!132 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000) e!46930)))

(declare-fun b!71714 () Bool)

(assert (=> b!71714 (= e!46931 (getValueByKey!132 (t!5012 (toList!723 lt!31444)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16137 c!10479) b!71712))

(assert (= (and d!16137 (not c!10479)) b!71713))

(assert (= (and b!71713 c!10480) b!71714))

(assert (= (and b!71713 (not c!10480)) b!71715))

(declare-fun m!69281 () Bool)

(assert (=> b!71714 m!69281))

(assert (=> b!71461 d!16137))

(declare-fun b!71716 () Bool)

(declare-fun e!46936 () ListLongMap!1415)

(assert (=> b!71716 (= e!46936 (ListLongMap!1416 Nil!1473))))

(declare-fun d!16139 () Bool)

(declare-fun e!46935 () Bool)

(assert (=> d!16139 e!46935))

(declare-fun res!38218 () Bool)

(assert (=> d!16139 (=> (not res!38218) (not e!46935))))

(declare-fun lt!31938 () ListLongMap!1415)

(assert (=> d!16139 (= res!38218 (not (contains!719 lt!31938 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16139 (= lt!31938 e!46936)))

(declare-fun c!10484 () Bool)

(assert (=> d!16139 (= c!10484 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!16139 (validMask!0 (mask!6149 (v!2514 (underlying!257 thiss!992))))))

(assert (=> d!16139 (= (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))) lt!31938)))

(declare-fun bm!6229 () Bool)

(declare-fun call!6232 () ListLongMap!1415)

(assert (=> bm!6229 (= call!6232 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun b!71717 () Bool)

(declare-fun e!46934 () Bool)

(declare-fun e!46937 () Bool)

(assert (=> b!71717 (= e!46934 e!46937)))

(assert (=> b!71717 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun res!38219 () Bool)

(assert (=> b!71717 (= res!38219 (contains!719 lt!31938 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!71717 (=> (not res!38219) (not e!46937))))

(declare-fun b!71718 () Bool)

(declare-fun e!46932 () Bool)

(assert (=> b!71718 (= e!46932 (isEmpty!313 lt!31938))))

(declare-fun b!71719 () Bool)

(assert (=> b!71719 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> b!71719 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2091 (_values!2175 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> b!71719 (= e!46937 (= (apply!74 lt!31938 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71720 () Bool)

(declare-fun res!38216 () Bool)

(assert (=> b!71720 (=> (not res!38216) (not e!46935))))

(assert (=> b!71720 (= res!38216 (not (contains!719 lt!31938 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71721 () Bool)

(declare-fun e!46933 () ListLongMap!1415)

(assert (=> b!71721 (= e!46936 e!46933)))

(declare-fun c!10483 () Bool)

(assert (=> b!71721 (= c!10483 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!71722 () Bool)

(assert (=> b!71722 (= e!46932 (= lt!31938 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (_values!2175 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992))) (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) (minValue!2096 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71723 () Bool)

(declare-fun lt!31939 () Unit!2002)

(declare-fun lt!31935 () Unit!2002)

(assert (=> b!71723 (= lt!31939 lt!31935)))

(declare-fun lt!31936 () V!2939)

(declare-fun lt!31934 () (_ BitVec 64))

(declare-fun lt!31933 () ListLongMap!1415)

(declare-fun lt!31937 () (_ BitVec 64))

(assert (=> b!71723 (not (contains!719 (+!93 lt!31933 (tuple2!2115 lt!31934 lt!31936)) lt!31937))))

(assert (=> b!71723 (= lt!31935 (addStillNotContains!23 lt!31933 lt!31934 lt!31936 lt!31937))))

(assert (=> b!71723 (= lt!31937 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71723 (= lt!31936 (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71723 (= lt!31934 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!71723 (= lt!31933 call!6232)))

(assert (=> b!71723 (= e!46933 (+!93 call!6232 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71724 () Bool)

(assert (=> b!71724 (= e!46935 e!46934)))

(declare-fun c!10481 () Bool)

(declare-fun e!46938 () Bool)

(assert (=> b!71724 (= c!10481 e!46938)))

(declare-fun res!38217 () Bool)

(assert (=> b!71724 (=> (not res!38217) (not e!46938))))

(assert (=> b!71724 (= res!38217 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71725 () Bool)

(assert (=> b!71725 (= e!46938 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!71725 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!71726 () Bool)

(assert (=> b!71726 (= e!46934 e!46932)))

(declare-fun c!10482 () Bool)

(assert (=> b!71726 (= c!10482 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71727 () Bool)

(assert (=> b!71727 (= e!46933 call!6232)))

(assert (= (and d!16139 c!10484) b!71716))

(assert (= (and d!16139 (not c!10484)) b!71721))

(assert (= (and b!71721 c!10483) b!71723))

(assert (= (and b!71721 (not c!10483)) b!71727))

(assert (= (or b!71723 b!71727) bm!6229))

(assert (= (and d!16139 res!38218) b!71720))

(assert (= (and b!71720 res!38216) b!71724))

(assert (= (and b!71724 res!38217) b!71725))

(assert (= (and b!71724 c!10481) b!71717))

(assert (= (and b!71724 (not c!10481)) b!71726))

(assert (= (and b!71717 res!38219) b!71719))

(assert (= (and b!71726 c!10482) b!71722))

(assert (= (and b!71726 (not c!10482)) b!71718))

(declare-fun b_lambda!3219 () Bool)

(assert (=> (not b_lambda!3219) (not b!71719)))

(assert (=> b!71719 t!5008))

(declare-fun b_and!4415 () Bool)

(assert (= b_and!4411 (and (=> t!5008 result!2651) b_and!4415)))

(assert (=> b!71719 t!5010))

(declare-fun b_and!4417 () Bool)

(assert (= b_and!4413 (and (=> t!5010 result!2655) b_and!4417)))

(declare-fun b_lambda!3221 () Bool)

(assert (=> (not b_lambda!3221) (not b!71723)))

(assert (=> b!71723 t!5008))

(declare-fun b_and!4419 () Bool)

(assert (= b_and!4415 (and (=> t!5008 result!2651) b_and!4419)))

(assert (=> b!71723 t!5010))

(declare-fun b_and!4421 () Bool)

(assert (= b_and!4417 (and (=> t!5010 result!2655) b_and!4421)))

(declare-fun m!69283 () Bool)

(assert (=> b!71720 m!69283))

(declare-fun m!69285 () Bool)

(assert (=> b!71718 m!69285))

(declare-fun m!69287 () Bool)

(assert (=> bm!6229 m!69287))

(declare-fun m!69289 () Bool)

(assert (=> b!71719 m!69289))

(assert (=> b!71719 m!67913))

(declare-fun m!69291 () Bool)

(assert (=> b!71719 m!69291))

(declare-fun m!69293 () Bool)

(assert (=> b!71719 m!69293))

(declare-fun m!69295 () Bool)

(assert (=> b!71719 m!69295))

(assert (=> b!71719 m!69289))

(assert (=> b!71719 m!69293))

(assert (=> b!71719 m!67913))

(assert (=> b!71721 m!69293))

(assert (=> b!71721 m!69293))

(declare-fun m!69297 () Bool)

(assert (=> b!71721 m!69297))

(assert (=> b!71725 m!69293))

(assert (=> b!71725 m!69293))

(assert (=> b!71725 m!69297))

(assert (=> b!71722 m!69287))

(assert (=> b!71717 m!69293))

(assert (=> b!71717 m!69293))

(declare-fun m!69299 () Bool)

(assert (=> b!71717 m!69299))

(declare-fun m!69301 () Bool)

(assert (=> d!16139 m!69301))

(assert (=> d!16139 m!67891))

(declare-fun m!69303 () Bool)

(assert (=> b!71723 m!69303))

(assert (=> b!71723 m!69289))

(assert (=> b!71723 m!67913))

(assert (=> b!71723 m!69291))

(declare-fun m!69305 () Bool)

(assert (=> b!71723 m!69305))

(assert (=> b!71723 m!69289))

(declare-fun m!69307 () Bool)

(assert (=> b!71723 m!69307))

(assert (=> b!71723 m!69307))

(declare-fun m!69309 () Bool)

(assert (=> b!71723 m!69309))

(assert (=> b!71723 m!69293))

(assert (=> b!71723 m!67913))

(assert (=> b!71567 d!16139))

(declare-fun d!16141 () Bool)

(assert (=> d!16141 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31395 (zeroValue!2096 newMap!16) lt!31264 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(assert (=> d!16141 true))

(declare-fun _$8!61 () Unit!2002)

(assert (=> d!16141 (= (choose!400 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31395 (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) lt!31264 (defaultEntry!2192 newMap!16)) _$8!61)))

(declare-fun bs!3089 () Bool)

(assert (= bs!3089 d!16141))

(assert (=> bs!3089 m!68051))

(assert (=> bs!3089 m!68051))

(assert (=> bs!3089 m!68429))

(assert (=> bs!3089 m!68431))

(assert (=> d!15883 d!16141))

(assert (=> d!15883 d!15857))

(declare-fun d!16143 () Bool)

(declare-fun e!46939 () Bool)

(assert (=> d!16143 e!46939))

(declare-fun res!38220 () Bool)

(assert (=> d!16143 (=> (not res!38220) (not e!46939))))

(declare-fun lt!31942 () ListLongMap!1415)

(assert (=> d!16143 (= res!38220 (contains!719 lt!31942 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264))))))

(declare-fun lt!31943 () List!1476)

(assert (=> d!16143 (= lt!31942 (ListLongMap!1416 lt!31943))))

(declare-fun lt!31941 () Unit!2002)

(declare-fun lt!31940 () Unit!2002)

(assert (=> d!16143 (= lt!31941 lt!31940)))

(assert (=> d!16143 (= (getValueByKey!132 lt!31943 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264))))))

(assert (=> d!16143 (= lt!31940 (lemmaContainsTupThenGetReturnValue!49 lt!31943 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264))))))

(assert (=> d!16143 (= lt!31943 (insertStrictlySorted!52 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264))))))

(assert (=> d!16143 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) lt!31942)))

(declare-fun b!71728 () Bool)

(declare-fun res!38221 () Bool)

(assert (=> b!71728 (=> (not res!38221) (not e!46939))))

(assert (=> b!71728 (= res!38221 (= (getValueByKey!132 (toList!723 lt!31942) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)))))))

(declare-fun b!71729 () Bool)

(assert (=> b!71729 (= e!46939 (contains!722 (toList!723 lt!31942) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)))))

(assert (= (and d!16143 res!38220) b!71728))

(assert (= (and b!71728 res!38221) b!71729))

(declare-fun m!69311 () Bool)

(assert (=> d!16143 m!69311))

(declare-fun m!69313 () Bool)

(assert (=> d!16143 m!69313))

(declare-fun m!69315 () Bool)

(assert (=> d!16143 m!69315))

(declare-fun m!69317 () Bool)

(assert (=> d!16143 m!69317))

(declare-fun m!69319 () Bool)

(assert (=> b!71728 m!69319))

(declare-fun m!69321 () Bool)

(assert (=> b!71729 m!69321))

(assert (=> d!15883 d!16143))

(declare-fun d!16145 () Bool)

(assert (=> d!16145 (= (validMask!0 (mask!6149 newMap!16)) (and (or (= (mask!6149 newMap!16) #b00000000000000000000000000000111) (= (mask!6149 newMap!16) #b00000000000000000000000000001111) (= (mask!6149 newMap!16) #b00000000000000000000000000011111) (= (mask!6149 newMap!16) #b00000000000000000000000000111111) (= (mask!6149 newMap!16) #b00000000000000000000000001111111) (= (mask!6149 newMap!16) #b00000000000000000000000011111111) (= (mask!6149 newMap!16) #b00000000000000000000000111111111) (= (mask!6149 newMap!16) #b00000000000000000000001111111111) (= (mask!6149 newMap!16) #b00000000000000000000011111111111) (= (mask!6149 newMap!16) #b00000000000000000000111111111111) (= (mask!6149 newMap!16) #b00000000000000000001111111111111) (= (mask!6149 newMap!16) #b00000000000000000011111111111111) (= (mask!6149 newMap!16) #b00000000000000000111111111111111) (= (mask!6149 newMap!16) #b00000000000000001111111111111111) (= (mask!6149 newMap!16) #b00000000000000011111111111111111) (= (mask!6149 newMap!16) #b00000000000000111111111111111111) (= (mask!6149 newMap!16) #b00000000000001111111111111111111) (= (mask!6149 newMap!16) #b00000000000011111111111111111111) (= (mask!6149 newMap!16) #b00000000000111111111111111111111) (= (mask!6149 newMap!16) #b00000000001111111111111111111111) (= (mask!6149 newMap!16) #b00000000011111111111111111111111) (= (mask!6149 newMap!16) #b00000000111111111111111111111111) (= (mask!6149 newMap!16) #b00000001111111111111111111111111) (= (mask!6149 newMap!16) #b00000011111111111111111111111111) (= (mask!6149 newMap!16) #b00000111111111111111111111111111) (= (mask!6149 newMap!16) #b00001111111111111111111111111111) (= (mask!6149 newMap!16) #b00011111111111111111111111111111) (= (mask!6149 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6149 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!15883 d!16145))

(declare-fun b!71730 () Bool)

(declare-fun c!10486 () Bool)

(assert (=> b!71730 (= c!10486 (and (not (= (bvand lt!31395 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!31395 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46949 () ListLongMap!1415)

(declare-fun e!46947 () ListLongMap!1415)

(assert (=> b!71730 (= e!46949 e!46947)))

(declare-fun b!71731 () Bool)

(declare-fun e!46945 () Bool)

(declare-fun e!46940 () Bool)

(assert (=> b!71731 (= e!46945 e!46940)))

(declare-fun res!38229 () Bool)

(declare-fun call!6235 () Bool)

(assert (=> b!71731 (= res!38229 call!6235)))

(assert (=> b!71731 (=> (not res!38229) (not e!46940))))

(declare-fun b!71732 () Bool)

(declare-fun e!46942 () Bool)

(declare-fun lt!31961 () ListLongMap!1415)

(assert (=> b!71732 (= e!46942 (= (apply!74 lt!31961 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!71733 () Bool)

(declare-fun e!46946 () Bool)

(assert (=> b!71733 (= e!46946 e!46942)))

(declare-fun res!38228 () Bool)

(declare-fun call!6233 () Bool)

(assert (=> b!71733 (= res!38228 call!6233)))

(assert (=> b!71733 (=> (not res!38228) (not e!46942))))

(declare-fun bm!6230 () Bool)

(assert (=> bm!6230 (= call!6235 (contains!719 lt!31961 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6231 () Bool)

(declare-fun call!6236 () ListLongMap!1415)

(declare-fun call!6237 () ListLongMap!1415)

(assert (=> bm!6231 (= call!6236 call!6237)))

(declare-fun b!71735 () Bool)

(declare-fun call!6239 () ListLongMap!1415)

(assert (=> b!71735 (= e!46947 call!6239)))

(declare-fun b!71736 () Bool)

(declare-fun e!46952 () Bool)

(assert (=> b!71736 (= e!46952 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6232 () Bool)

(declare-fun call!6234 () ListLongMap!1415)

(declare-fun call!6238 () ListLongMap!1415)

(assert (=> bm!6232 (= call!6234 call!6238)))

(declare-fun b!71737 () Bool)

(declare-fun e!46948 () Unit!2002)

(declare-fun lt!31964 () Unit!2002)

(assert (=> b!71737 (= e!46948 lt!31964)))

(declare-fun lt!31953 () ListLongMap!1415)

(assert (=> b!71737 (= lt!31953 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31395 (zeroValue!2096 newMap!16) lt!31264 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31962 () (_ BitVec 64))

(assert (=> b!71737 (= lt!31962 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31947 () (_ BitVec 64))

(assert (=> b!71737 (= lt!31947 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31959 () Unit!2002)

(assert (=> b!71737 (= lt!31959 (addStillContains!50 lt!31953 lt!31962 (zeroValue!2096 newMap!16) lt!31947))))

(assert (=> b!71737 (contains!719 (+!93 lt!31953 (tuple2!2115 lt!31962 (zeroValue!2096 newMap!16))) lt!31947)))

(declare-fun lt!31965 () Unit!2002)

(assert (=> b!71737 (= lt!31965 lt!31959)))

(declare-fun lt!31946 () ListLongMap!1415)

(assert (=> b!71737 (= lt!31946 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31395 (zeroValue!2096 newMap!16) lt!31264 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31952 () (_ BitVec 64))

(assert (=> b!71737 (= lt!31952 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31956 () (_ BitVec 64))

(assert (=> b!71737 (= lt!31956 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31958 () Unit!2002)

(assert (=> b!71737 (= lt!31958 (addApplyDifferent!50 lt!31946 lt!31952 lt!31264 lt!31956))))

(assert (=> b!71737 (= (apply!74 (+!93 lt!31946 (tuple2!2115 lt!31952 lt!31264)) lt!31956) (apply!74 lt!31946 lt!31956))))

(declare-fun lt!31963 () Unit!2002)

(assert (=> b!71737 (= lt!31963 lt!31958)))

(declare-fun lt!31960 () ListLongMap!1415)

(assert (=> b!71737 (= lt!31960 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31395 (zeroValue!2096 newMap!16) lt!31264 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31954 () (_ BitVec 64))

(assert (=> b!71737 (= lt!31954 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31948 () (_ BitVec 64))

(assert (=> b!71737 (= lt!31948 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31951 () Unit!2002)

(assert (=> b!71737 (= lt!31951 (addApplyDifferent!50 lt!31960 lt!31954 (zeroValue!2096 newMap!16) lt!31948))))

(assert (=> b!71737 (= (apply!74 (+!93 lt!31960 (tuple2!2115 lt!31954 (zeroValue!2096 newMap!16))) lt!31948) (apply!74 lt!31960 lt!31948))))

(declare-fun lt!31955 () Unit!2002)

(assert (=> b!71737 (= lt!31955 lt!31951)))

(declare-fun lt!31950 () ListLongMap!1415)

(assert (=> b!71737 (= lt!31950 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31395 (zeroValue!2096 newMap!16) lt!31264 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!31945 () (_ BitVec 64))

(assert (=> b!71737 (= lt!31945 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31949 () (_ BitVec 64))

(assert (=> b!71737 (= lt!31949 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71737 (= lt!31964 (addApplyDifferent!50 lt!31950 lt!31945 lt!31264 lt!31949))))

(assert (=> b!71737 (= (apply!74 (+!93 lt!31950 (tuple2!2115 lt!31945 lt!31264)) lt!31949) (apply!74 lt!31950 lt!31949))))

(declare-fun b!71738 () Bool)

(declare-fun e!46950 () Bool)

(declare-fun e!46941 () Bool)

(assert (=> b!71738 (= e!46950 e!46941)))

(declare-fun res!38227 () Bool)

(assert (=> b!71738 (=> (not res!38227) (not e!46941))))

(assert (=> b!71738 (= res!38227 (contains!719 lt!31961 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71738 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71739 () Bool)

(assert (=> b!71739 (= e!46946 (not call!6233))))

(declare-fun b!71740 () Bool)

(declare-fun e!46951 () Bool)

(assert (=> b!71740 (= e!46951 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71741 () Bool)

(assert (=> b!71741 (= e!46949 call!6234)))

(declare-fun b!71742 () Bool)

(declare-fun e!46944 () ListLongMap!1415)

(assert (=> b!71742 (= e!46944 e!46949)))

(declare-fun c!10488 () Bool)

(assert (=> b!71742 (= c!10488 (and (not (= (bvand lt!31395 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!31395 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6233 () Bool)

(assert (=> bm!6233 (= call!6233 (contains!719 lt!31961 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71743 () Bool)

(assert (=> b!71743 (= e!46941 (= (apply!74 lt!31961 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71743 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (_values!2175 newMap!16))))))

(assert (=> b!71743 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71734 () Bool)

(assert (=> b!71734 (= e!46945 (not call!6235))))

(declare-fun d!16147 () Bool)

(declare-fun e!46943 () Bool)

(assert (=> d!16147 e!46943))

(declare-fun res!38225 () Bool)

(assert (=> d!16147 (=> (not res!38225) (not e!46943))))

(assert (=> d!16147 (= res!38225 (or (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))))

(declare-fun lt!31944 () ListLongMap!1415)

(assert (=> d!16147 (= lt!31961 lt!31944)))

(declare-fun lt!31957 () Unit!2002)

(assert (=> d!16147 (= lt!31957 e!46948)))

(declare-fun c!10489 () Bool)

(assert (=> d!16147 (= c!10489 e!46952)))

(declare-fun res!38230 () Bool)

(assert (=> d!16147 (=> (not res!38230) (not e!46952))))

(assert (=> d!16147 (= res!38230 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16147 (= lt!31944 e!46944)))

(declare-fun c!10490 () Bool)

(assert (=> d!16147 (= c!10490 (and (not (= (bvand lt!31395 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!31395 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16147 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16147 (= (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31395 (zeroValue!2096 newMap!16) lt!31264 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!31961)))

(declare-fun b!71744 () Bool)

(declare-fun Unit!2037 () Unit!2002)

(assert (=> b!71744 (= e!46948 Unit!2037)))

(declare-fun b!71745 () Bool)

(assert (=> b!71745 (= e!46940 (= (apply!74 lt!31961 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31264))))

(declare-fun bm!6234 () Bool)

(assert (=> bm!6234 (= call!6238 (+!93 (ite c!10490 call!6237 (ite c!10488 call!6236 call!6239)) (ite (or c!10490 c!10488) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264))))))

(declare-fun b!71746 () Bool)

(declare-fun res!38226 () Bool)

(assert (=> b!71746 (=> (not res!38226) (not e!46943))))

(assert (=> b!71746 (= res!38226 e!46946)))

(declare-fun c!10487 () Bool)

(assert (=> b!71746 (= c!10487 (not (= (bvand lt!31395 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6235 () Bool)

(assert (=> bm!6235 (= call!6237 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31395 (zeroValue!2096 newMap!16) lt!31264 #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!71747 () Bool)

(assert (=> b!71747 (= e!46944 (+!93 call!6238 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)))))

(declare-fun bm!6236 () Bool)

(assert (=> bm!6236 (= call!6239 call!6236)))

(declare-fun b!71748 () Bool)

(assert (=> b!71748 (= e!46947 call!6234)))

(declare-fun b!71749 () Bool)

(declare-fun res!38223 () Bool)

(assert (=> b!71749 (=> (not res!38223) (not e!46943))))

(assert (=> b!71749 (= res!38223 e!46950)))

(declare-fun res!38224 () Bool)

(assert (=> b!71749 (=> res!38224 e!46950)))

(assert (=> b!71749 (= res!38224 (not e!46951))))

(declare-fun res!38222 () Bool)

(assert (=> b!71749 (=> (not res!38222) (not e!46951))))

(assert (=> b!71749 (= res!38222 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71750 () Bool)

(assert (=> b!71750 (= e!46943 e!46945)))

(declare-fun c!10485 () Bool)

(assert (=> b!71750 (= c!10485 (not (= (bvand lt!31395 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!16147 c!10490) b!71747))

(assert (= (and d!16147 (not c!10490)) b!71742))

(assert (= (and b!71742 c!10488) b!71741))

(assert (= (and b!71742 (not c!10488)) b!71730))

(assert (= (and b!71730 c!10486) b!71748))

(assert (= (and b!71730 (not c!10486)) b!71735))

(assert (= (or b!71748 b!71735) bm!6236))

(assert (= (or b!71741 bm!6236) bm!6231))

(assert (= (or b!71741 b!71748) bm!6232))

(assert (= (or b!71747 bm!6231) bm!6235))

(assert (= (or b!71747 bm!6232) bm!6234))

(assert (= (and d!16147 res!38230) b!71736))

(assert (= (and d!16147 c!10489) b!71737))

(assert (= (and d!16147 (not c!10489)) b!71744))

(assert (= (and d!16147 res!38225) b!71749))

(assert (= (and b!71749 res!38222) b!71740))

(assert (= (and b!71749 (not res!38224)) b!71738))

(assert (= (and b!71738 res!38227) b!71743))

(assert (= (and b!71749 res!38223) b!71746))

(assert (= (and b!71746 c!10487) b!71733))

(assert (= (and b!71746 (not c!10487)) b!71739))

(assert (= (and b!71733 res!38228) b!71732))

(assert (= (or b!71733 b!71739) bm!6233))

(assert (= (and b!71746 res!38226) b!71750))

(assert (= (and b!71750 c!10485) b!71731))

(assert (= (and b!71750 (not c!10485)) b!71734))

(assert (= (and b!71731 res!38229) b!71745))

(assert (= (or b!71731 b!71734) bm!6230))

(declare-fun b_lambda!3223 () Bool)

(assert (=> (not b_lambda!3223) (not b!71743)))

(assert (=> b!71743 t!5019))

(declare-fun b_and!4423 () Bool)

(assert (= b_and!4419 (and (=> t!5019 result!2665) b_and!4423)))

(assert (=> b!71743 t!5021))

(declare-fun b_and!4425 () Bool)

(assert (= b_and!4421 (and (=> t!5021 result!2667) b_and!4425)))

(assert (=> b!71738 m!68283))

(assert (=> b!71738 m!68283))

(declare-fun m!69323 () Bool)

(assert (=> b!71738 m!69323))

(assert (=> b!71743 m!68287))

(assert (=> b!71743 m!68283))

(declare-fun m!69325 () Bool)

(assert (=> b!71743 m!69325))

(assert (=> b!71743 m!68283))

(assert (=> b!71743 m!68291))

(assert (=> b!71743 m!68291))

(assert (=> b!71743 m!68287))

(assert (=> b!71743 m!68293))

(declare-fun m!69327 () Bool)

(assert (=> bm!6235 m!69327))

(assert (=> b!71736 m!68283))

(assert (=> b!71736 m!68283))

(assert (=> b!71736 m!68297))

(declare-fun m!69329 () Bool)

(assert (=> b!71732 m!69329))

(declare-fun m!69331 () Bool)

(assert (=> bm!6234 m!69331))

(declare-fun m!69333 () Bool)

(assert (=> b!71745 m!69333))

(declare-fun m!69335 () Bool)

(assert (=> b!71747 m!69335))

(assert (=> d!16147 m!68263))

(declare-fun m!69337 () Bool)

(assert (=> bm!6230 m!69337))

(declare-fun m!69339 () Bool)

(assert (=> b!71737 m!69339))

(declare-fun m!69341 () Bool)

(assert (=> b!71737 m!69341))

(declare-fun m!69343 () Bool)

(assert (=> b!71737 m!69343))

(declare-fun m!69345 () Bool)

(assert (=> b!71737 m!69345))

(assert (=> b!71737 m!69339))

(declare-fun m!69347 () Bool)

(assert (=> b!71737 m!69347))

(declare-fun m!69349 () Bool)

(assert (=> b!71737 m!69349))

(declare-fun m!69351 () Bool)

(assert (=> b!71737 m!69351))

(declare-fun m!69353 () Bool)

(assert (=> b!71737 m!69353))

(assert (=> b!71737 m!68283))

(declare-fun m!69355 () Bool)

(assert (=> b!71737 m!69355))

(assert (=> b!71737 m!69327))

(assert (=> b!71737 m!69341))

(declare-fun m!69357 () Bool)

(assert (=> b!71737 m!69357))

(declare-fun m!69359 () Bool)

(assert (=> b!71737 m!69359))

(assert (=> b!71737 m!69353))

(declare-fun m!69361 () Bool)

(assert (=> b!71737 m!69361))

(declare-fun m!69363 () Bool)

(assert (=> b!71737 m!69363))

(declare-fun m!69365 () Bool)

(assert (=> b!71737 m!69365))

(assert (=> b!71737 m!69363))

(declare-fun m!69367 () Bool)

(assert (=> b!71737 m!69367))

(declare-fun m!69369 () Bool)

(assert (=> bm!6233 m!69369))

(assert (=> b!71740 m!68283))

(assert (=> b!71740 m!68283))

(assert (=> b!71740 m!68297))

(assert (=> d!15883 d!16147))

(declare-fun d!16149 () Bool)

(declare-fun e!46953 () Bool)

(assert (=> d!16149 e!46953))

(declare-fun res!38231 () Bool)

(assert (=> d!16149 (=> res!38231 e!46953)))

(declare-fun lt!31968 () Bool)

(assert (=> d!16149 (= res!38231 (not lt!31968))))

(declare-fun lt!31967 () Bool)

(assert (=> d!16149 (= lt!31968 lt!31967)))

(declare-fun lt!31966 () Unit!2002)

(declare-fun e!46954 () Unit!2002)

(assert (=> d!16149 (= lt!31966 e!46954)))

(declare-fun c!10491 () Bool)

(assert (=> d!16149 (= c!10491 lt!31967)))

(assert (=> d!16149 (= lt!31967 (containsKey!136 (toList!723 lt!31672) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16149 (= (contains!719 lt!31672 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) lt!31968)))

(declare-fun b!71751 () Bool)

(declare-fun lt!31969 () Unit!2002)

(assert (=> b!71751 (= e!46954 lt!31969)))

(assert (=> b!71751 (= lt!31969 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31672) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71751 (isDefined!85 (getValueByKey!132 (toList!723 lt!31672) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71752 () Bool)

(declare-fun Unit!2038 () Unit!2002)

(assert (=> b!71752 (= e!46954 Unit!2038)))

(declare-fun b!71753 () Bool)

(assert (=> b!71753 (= e!46953 (isDefined!85 (getValueByKey!132 (toList!723 lt!31672) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16149 c!10491) b!71751))

(assert (= (and d!16149 (not c!10491)) b!71752))

(assert (= (and d!16149 (not res!38231)) b!71753))

(assert (=> d!16149 m!68283))

(declare-fun m!69371 () Bool)

(assert (=> d!16149 m!69371))

(assert (=> b!71751 m!68283))

(declare-fun m!69373 () Bool)

(assert (=> b!71751 m!69373))

(assert (=> b!71751 m!68283))

(declare-fun m!69375 () Bool)

(assert (=> b!71751 m!69375))

(assert (=> b!71751 m!69375))

(declare-fun m!69377 () Bool)

(assert (=> b!71751 m!69377))

(assert (=> b!71753 m!68283))

(assert (=> b!71753 m!69375))

(assert (=> b!71753 m!69375))

(assert (=> b!71753 m!69377))

(assert (=> b!71386 d!16149))

(declare-fun d!16151 () Bool)

(declare-fun e!46955 () Bool)

(assert (=> d!16151 e!46955))

(declare-fun res!38232 () Bool)

(assert (=> d!16151 (=> res!38232 e!46955)))

(declare-fun lt!31972 () Bool)

(assert (=> d!16151 (= res!38232 (not lt!31972))))

(declare-fun lt!31971 () Bool)

(assert (=> d!16151 (= lt!31972 lt!31971)))

(declare-fun lt!31970 () Unit!2002)

(declare-fun e!46956 () Unit!2002)

(assert (=> d!16151 (= lt!31970 e!46956)))

(declare-fun c!10492 () Bool)

(assert (=> d!16151 (= c!10492 lt!31971)))

(assert (=> d!16151 (= lt!31971 (containsKey!136 (toList!723 lt!31585) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16151 (= (contains!719 lt!31585 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31972)))

(declare-fun b!71754 () Bool)

(declare-fun lt!31973 () Unit!2002)

(assert (=> b!71754 (= e!46956 lt!31973)))

(assert (=> b!71754 (= lt!31973 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31585) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> b!71754 (isDefined!85 (getValueByKey!132 (toList!723 lt!31585) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71755 () Bool)

(declare-fun Unit!2039 () Unit!2002)

(assert (=> b!71755 (= e!46956 Unit!2039)))

(declare-fun b!71756 () Bool)

(assert (=> b!71756 (= e!46955 (isDefined!85 (getValueByKey!132 (toList!723 lt!31585) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16151 c!10492) b!71754))

(assert (= (and d!16151 (not c!10492)) b!71755))

(assert (= (and d!16151 (not res!38232)) b!71756))

(declare-fun m!69379 () Bool)

(assert (=> d!16151 m!69379))

(declare-fun m!69381 () Bool)

(assert (=> b!71754 m!69381))

(assert (=> b!71754 m!68403))

(assert (=> b!71754 m!68403))

(declare-fun m!69383 () Bool)

(assert (=> b!71754 m!69383))

(assert (=> b!71756 m!68403))

(assert (=> b!71756 m!68403))

(assert (=> b!71756 m!69383))

(assert (=> d!15877 d!16151))

(declare-fun b!71760 () Bool)

(declare-fun e!46958 () Option!138)

(assert (=> b!71760 (= e!46958 None!136)))

(declare-fun b!71758 () Bool)

(declare-fun e!46957 () Option!138)

(assert (=> b!71758 (= e!46957 e!46958)))

(declare-fun c!10494 () Bool)

(assert (=> b!71758 (= c!10494 (and ((_ is Cons!1472) lt!31586) (not (= (_1!1068 (h!2058 lt!31586)) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!71757 () Bool)

(assert (=> b!71757 (= e!46957 (Some!137 (_2!1068 (h!2058 lt!31586))))))

(declare-fun d!16153 () Bool)

(declare-fun c!10493 () Bool)

(assert (=> d!16153 (= c!10493 (and ((_ is Cons!1472) lt!31586) (= (_1!1068 (h!2058 lt!31586)) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16153 (= (getValueByKey!132 lt!31586 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!46957)))

(declare-fun b!71759 () Bool)

(assert (=> b!71759 (= e!46958 (getValueByKey!132 (t!5012 lt!31586) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16153 c!10493) b!71757))

(assert (= (and d!16153 (not c!10493)) b!71758))

(assert (= (and b!71758 c!10494) b!71759))

(assert (= (and b!71758 (not c!10494)) b!71760))

(declare-fun m!69385 () Bool)

(assert (=> b!71759 m!69385))

(assert (=> d!15877 d!16153))

(declare-fun d!16155 () Bool)

(assert (=> d!16155 (= (getValueByKey!132 lt!31586 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!31974 () Unit!2002)

(assert (=> d!16155 (= lt!31974 (choose!397 lt!31586 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun e!46959 () Bool)

(assert (=> d!16155 e!46959))

(declare-fun res!38233 () Bool)

(assert (=> d!16155 (=> (not res!38233) (not e!46959))))

(assert (=> d!16155 (= res!38233 (isStrictlySorted!291 lt!31586))))

(assert (=> d!16155 (= (lemmaContainsTupThenGetReturnValue!49 lt!31586 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31974)))

(declare-fun b!71761 () Bool)

(declare-fun res!38234 () Bool)

(assert (=> b!71761 (=> (not res!38234) (not e!46959))))

(assert (=> b!71761 (= res!38234 (containsKey!136 lt!31586 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71762 () Bool)

(assert (=> b!71762 (= e!46959 (contains!722 lt!31586 (tuple2!2115 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16155 res!38233) b!71761))

(assert (= (and b!71761 res!38234) b!71762))

(assert (=> d!16155 m!68397))

(declare-fun m!69387 () Bool)

(assert (=> d!16155 m!69387))

(declare-fun m!69389 () Bool)

(assert (=> d!16155 m!69389))

(declare-fun m!69391 () Bool)

(assert (=> b!71761 m!69391))

(declare-fun m!69393 () Bool)

(assert (=> b!71762 m!69393))

(assert (=> d!15877 d!16155))

(declare-fun bm!6237 () Bool)

(declare-fun call!6242 () List!1476)

(declare-fun call!6240 () List!1476)

(assert (=> bm!6237 (= call!6242 call!6240)))

(declare-fun b!71763 () Bool)

(declare-fun e!46961 () List!1476)

(declare-fun call!6241 () List!1476)

(assert (=> b!71763 (= e!46961 call!6241)))

(declare-fun c!10497 () Bool)

(declare-fun e!46960 () List!1476)

(declare-fun bm!6238 () Bool)

(assert (=> bm!6238 (= call!6240 ($colon$colon!65 e!46960 (ite c!10497 (h!2058 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) (tuple2!2115 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun c!10498 () Bool)

(assert (=> bm!6238 (= c!10498 c!10497)))

(declare-fun b!71765 () Bool)

(declare-fun c!10495 () Bool)

(assert (=> b!71765 (= c!10495 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) (bvsgt (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun e!46964 () List!1476)

(assert (=> b!71765 (= e!46964 e!46961)))

(declare-fun b!71766 () Bool)

(assert (=> b!71766 (= e!46964 call!6242)))

(declare-fun b!71767 () Bool)

(assert (=> b!71767 (= e!46961 call!6241)))

(declare-fun b!71768 () Bool)

(declare-fun e!46963 () List!1476)

(assert (=> b!71768 (= e!46963 e!46964)))

(declare-fun c!10496 () Bool)

(assert (=> b!71768 (= c!10496 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71769 () Bool)

(declare-fun res!38236 () Bool)

(declare-fun e!46962 () Bool)

(assert (=> b!71769 (=> (not res!38236) (not e!46962))))

(declare-fun lt!31975 () List!1476)

(assert (=> b!71769 (= res!38236 (containsKey!136 lt!31975 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71770 () Bool)

(assert (=> b!71770 (= e!46962 (contains!722 lt!31975 (tuple2!2115 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71771 () Bool)

(assert (=> b!71771 (= e!46960 (ite c!10496 (t!5012 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) (ite c!10495 (Cons!1472 (h!2058 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) (t!5012 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))) Nil!1473)))))

(declare-fun b!71764 () Bool)

(assert (=> b!71764 (= e!46963 call!6240)))

(declare-fun d!16157 () Bool)

(assert (=> d!16157 e!46962))

(declare-fun res!38235 () Bool)

(assert (=> d!16157 (=> (not res!38235) (not e!46962))))

(assert (=> d!16157 (= res!38235 (isStrictlySorted!291 lt!31975))))

(assert (=> d!16157 (= lt!31975 e!46963)))

(assert (=> d!16157 (= c!10497 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) (bvslt (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16157 (isStrictlySorted!291 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!16157 (= (insertStrictlySorted!52 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31975)))

(declare-fun b!71772 () Bool)

(assert (=> b!71772 (= e!46960 (insertStrictlySorted!52 (t!5012 (toList!723 (+!93 lt!31270 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun bm!6239 () Bool)

(assert (=> bm!6239 (= call!6241 call!6242)))

(assert (= (and d!16157 c!10497) b!71764))

(assert (= (and d!16157 (not c!10497)) b!71768))

(assert (= (and b!71768 c!10496) b!71766))

(assert (= (and b!71768 (not c!10496)) b!71765))

(assert (= (and b!71765 c!10495) b!71763))

(assert (= (and b!71765 (not c!10495)) b!71767))

(assert (= (or b!71763 b!71767) bm!6239))

(assert (= (or b!71766 bm!6239) bm!6237))

(assert (= (or b!71764 bm!6237) bm!6238))

(assert (= (and bm!6238 c!10498) b!71772))

(assert (= (and bm!6238 (not c!10498)) b!71771))

(assert (= (and d!16157 res!38235) b!71769))

(assert (= (and b!71769 res!38236) b!71770))

(declare-fun m!69395 () Bool)

(assert (=> b!71769 m!69395))

(declare-fun m!69397 () Bool)

(assert (=> b!71772 m!69397))

(declare-fun m!69399 () Bool)

(assert (=> b!71770 m!69399))

(declare-fun m!69401 () Bool)

(assert (=> bm!6238 m!69401))

(declare-fun m!69403 () Bool)

(assert (=> d!16157 m!69403))

(declare-fun m!69405 () Bool)

(assert (=> d!16157 m!69405))

(assert (=> d!15877 d!16157))

(declare-fun d!16159 () Bool)

(declare-fun e!46965 () Bool)

(assert (=> d!16159 e!46965))

(declare-fun res!38237 () Bool)

(assert (=> d!16159 (=> (not res!38237) (not e!46965))))

(declare-fun lt!31978 () ListLongMap!1415)

(assert (=> d!16159 (= res!38237 (contains!719 lt!31978 (_1!1068 (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))))

(declare-fun lt!31979 () List!1476)

(assert (=> d!16159 (= lt!31978 (ListLongMap!1416 lt!31979))))

(declare-fun lt!31977 () Unit!2002)

(declare-fun lt!31976 () Unit!2002)

(assert (=> d!16159 (= lt!31977 lt!31976)))

(assert (=> d!16159 (= (getValueByKey!132 lt!31979 (_1!1068 (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))) (Some!137 (_2!1068 (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))))

(assert (=> d!16159 (= lt!31976 (lemmaContainsTupThenGetReturnValue!49 lt!31979 (_1!1068 (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) (_2!1068 (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))))

(assert (=> d!16159 (= lt!31979 (insertStrictlySorted!52 (toList!723 (ite c!10405 call!6204 (ite c!10403 call!6203 call!6206))) (_1!1068 (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) (_2!1068 (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))))

(assert (=> d!16159 (= (+!93 (ite c!10405 call!6204 (ite c!10403 call!6203 call!6206)) (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) lt!31978)))

(declare-fun b!71773 () Bool)

(declare-fun res!38238 () Bool)

(assert (=> b!71773 (=> (not res!38238) (not e!46965))))

(assert (=> b!71773 (= res!38238 (= (getValueByKey!132 (toList!723 lt!31978) (_1!1068 (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))) (Some!137 (_2!1068 (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))))

(declare-fun b!71774 () Bool)

(assert (=> b!71774 (= e!46965 (contains!722 (toList!723 lt!31978) (ite (or c!10405 c!10403) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(assert (= (and d!16159 res!38237) b!71773))

(assert (= (and b!71773 res!38238) b!71774))

(declare-fun m!69407 () Bool)

(assert (=> d!16159 m!69407))

(declare-fun m!69409 () Bool)

(assert (=> d!16159 m!69409))

(declare-fun m!69411 () Bool)

(assert (=> d!16159 m!69411))

(declare-fun m!69413 () Bool)

(assert (=> d!16159 m!69413))

(declare-fun m!69415 () Bool)

(assert (=> b!71773 m!69415))

(declare-fun m!69417 () Bool)

(assert (=> b!71774 m!69417))

(assert (=> bm!6201 d!16159))

(assert (=> d!16001 d!15803))

(declare-fun d!16161 () Bool)

(declare-fun e!46966 () Bool)

(assert (=> d!16161 e!46966))

(declare-fun res!38239 () Bool)

(assert (=> d!16161 (=> res!38239 e!46966)))

(declare-fun lt!31982 () Bool)

(assert (=> d!16161 (= res!38239 (not lt!31982))))

(declare-fun lt!31981 () Bool)

(assert (=> d!16161 (= lt!31982 lt!31981)))

(declare-fun lt!31980 () Unit!2002)

(declare-fun e!46967 () Unit!2002)

(assert (=> d!16161 (= lt!31980 e!46967)))

(declare-fun c!10499 () Bool)

(assert (=> d!16161 (= c!10499 lt!31981)))

(assert (=> d!16161 (= lt!31981 (containsKey!136 (toList!723 lt!31564) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16161 (= (contains!719 lt!31564 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) lt!31982)))

(declare-fun b!71775 () Bool)

(declare-fun lt!31983 () Unit!2002)

(assert (=> b!71775 (= e!46967 lt!31983)))

(assert (=> b!71775 (= lt!31983 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31564) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71775 (isDefined!85 (getValueByKey!132 (toList!723 lt!31564) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71776 () Bool)

(declare-fun Unit!2040 () Unit!2002)

(assert (=> b!71776 (= e!46967 Unit!2040)))

(declare-fun b!71777 () Bool)

(assert (=> b!71777 (= e!46966 (isDefined!85 (getValueByKey!132 (toList!723 lt!31564) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16161 c!10499) b!71775))

(assert (= (and d!16161 (not c!10499)) b!71776))

(assert (= (and d!16161 (not res!38239)) b!71777))

(assert (=> d!16161 m!68283))

(declare-fun m!69419 () Bool)

(assert (=> d!16161 m!69419))

(assert (=> b!71775 m!68283))

(declare-fun m!69421 () Bool)

(assert (=> b!71775 m!69421))

(assert (=> b!71775 m!68283))

(declare-fun m!69423 () Bool)

(assert (=> b!71775 m!69423))

(assert (=> b!71775 m!69423))

(declare-fun m!69425 () Bool)

(assert (=> b!71775 m!69425))

(assert (=> b!71777 m!68283))

(assert (=> b!71777 m!69423))

(assert (=> b!71777 m!69423))

(assert (=> b!71777 m!69425))

(assert (=> b!71212 d!16161))

(declare-fun d!16163 () Bool)

(assert (=> d!16163 (isDefined!85 (getValueByKey!132 (toList!723 lt!31452) (_1!1068 lt!31265)))))

(declare-fun lt!31984 () Unit!2002)

(assert (=> d!16163 (= lt!31984 (choose!404 (toList!723 lt!31452) (_1!1068 lt!31265)))))

(declare-fun e!46968 () Bool)

(assert (=> d!16163 e!46968))

(declare-fun res!38240 () Bool)

(assert (=> d!16163 (=> (not res!38240) (not e!46968))))

(assert (=> d!16163 (= res!38240 (isStrictlySorted!291 (toList!723 lt!31452)))))

(assert (=> d!16163 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31452) (_1!1068 lt!31265)) lt!31984)))

(declare-fun b!71778 () Bool)

(assert (=> b!71778 (= e!46968 (containsKey!136 (toList!723 lt!31452) (_1!1068 lt!31265)))))

(assert (= (and d!16163 res!38240) b!71778))

(assert (=> d!16163 m!68145))

(assert (=> d!16163 m!68145))

(assert (=> d!16163 m!68473))

(declare-fun m!69427 () Bool)

(assert (=> d!16163 m!69427))

(declare-fun m!69429 () Bool)

(assert (=> d!16163 m!69429))

(assert (=> b!71778 m!68469))

(assert (=> b!71281 d!16163))

(declare-fun d!16165 () Bool)

(assert (=> d!16165 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31452) (_1!1068 lt!31265))) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31452) (_1!1068 lt!31265)))))))

(declare-fun bs!3090 () Bool)

(assert (= bs!3090 d!16165))

(assert (=> bs!3090 m!68145))

(declare-fun m!69431 () Bool)

(assert (=> bs!3090 m!69431))

(assert (=> b!71281 d!16165))

(assert (=> b!71281 d!15859))

(declare-fun b!71797 () Bool)

(declare-fun e!46980 () Bool)

(declare-fun e!46983 () Bool)

(assert (=> b!71797 (= e!46980 e!46983)))

(declare-fun res!38249 () Bool)

(declare-fun lt!31990 () SeekEntryResult!235)

(assert (=> b!71797 (= res!38249 (and ((_ is Intermediate!235) lt!31990) (not (undefined!1047 lt!31990)) (bvslt (x!11007 lt!31990) #b01111111111111111111111111111110) (bvsge (x!11007 lt!31990) #b00000000000000000000000000000000) (bvsge (x!11007 lt!31990) #b00000000000000000000000000000000)))))

(assert (=> b!71797 (=> (not res!38249) (not e!46983))))

(declare-fun b!71798 () Bool)

(declare-fun e!46979 () SeekEntryResult!235)

(assert (=> b!71798 (= e!46979 (Intermediate!235 true (toIndex!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (mask!6149 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!71799 () Bool)

(assert (=> b!71799 (and (bvsge (index!3072 lt!31990) #b00000000000000000000000000000000) (bvslt (index!3072 lt!31990) (size!2090 (_keys!3840 newMap!16))))))

(declare-fun res!38247 () Bool)

(assert (=> b!71799 (= res!38247 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3072 lt!31990)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46982 () Bool)

(assert (=> b!71799 (=> res!38247 e!46982)))

(declare-fun b!71800 () Bool)

(declare-fun e!46981 () SeekEntryResult!235)

(assert (=> b!71800 (= e!46981 (Intermediate!235 false (toIndex!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (mask!6149 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!71801 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!71801 (= e!46981 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (mask!6149 newMap!16)) #b00000000000000000000000000000000 (mask!6149 newMap!16)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun d!16167 () Bool)

(assert (=> d!16167 e!46980))

(declare-fun c!10507 () Bool)

(assert (=> d!16167 (= c!10507 (and ((_ is Intermediate!235) lt!31990) (undefined!1047 lt!31990)))))

(assert (=> d!16167 (= lt!31990 e!46979)))

(declare-fun c!10506 () Bool)

(assert (=> d!16167 (= c!10506 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!31989 () (_ BitVec 64))

(assert (=> d!16167 (= lt!31989 (select (arr!1853 (_keys!3840 newMap!16)) (toIndex!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (mask!6149 newMap!16))))))

(assert (=> d!16167 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16167 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (mask!6149 newMap!16)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)) lt!31990)))

(declare-fun b!71802 () Bool)

(assert (=> b!71802 (and (bvsge (index!3072 lt!31990) #b00000000000000000000000000000000) (bvslt (index!3072 lt!31990) (size!2090 (_keys!3840 newMap!16))))))

(assert (=> b!71802 (= e!46982 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3072 lt!31990)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71803 () Bool)

(assert (=> b!71803 (= e!46979 e!46981)))

(declare-fun c!10508 () Bool)

(assert (=> b!71803 (= c!10508 (or (= lt!31989 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (= (bvadd lt!31989 lt!31989) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71804 () Bool)

(assert (=> b!71804 (and (bvsge (index!3072 lt!31990) #b00000000000000000000000000000000) (bvslt (index!3072 lt!31990) (size!2090 (_keys!3840 newMap!16))))))

(declare-fun res!38248 () Bool)

(assert (=> b!71804 (= res!38248 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3072 lt!31990)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> b!71804 (=> res!38248 e!46982)))

(assert (=> b!71804 (= e!46983 e!46982)))

(declare-fun b!71805 () Bool)

(assert (=> b!71805 (= e!46980 (bvsge (x!11007 lt!31990) #b01111111111111111111111111111110))))

(assert (= (and d!16167 c!10506) b!71798))

(assert (= (and d!16167 (not c!10506)) b!71803))

(assert (= (and b!71803 c!10508) b!71800))

(assert (= (and b!71803 (not c!10508)) b!71801))

(assert (= (and d!16167 c!10507) b!71805))

(assert (= (and d!16167 (not c!10507)) b!71797))

(assert (= (and b!71797 res!38249) b!71804))

(assert (= (and b!71804 (not res!38248)) b!71799))

(assert (= (and b!71799 (not res!38247)) b!71802))

(declare-fun m!69433 () Bool)

(assert (=> b!71802 m!69433))

(assert (=> d!16167 m!68729))

(declare-fun m!69435 () Bool)

(assert (=> d!16167 m!69435))

(assert (=> d!16167 m!68263))

(assert (=> b!71799 m!69433))

(assert (=> b!71801 m!68729))

(declare-fun m!69437 () Bool)

(assert (=> b!71801 m!69437))

(assert (=> b!71801 m!69437))

(assert (=> b!71801 m!67893))

(declare-fun m!69439 () Bool)

(assert (=> b!71801 m!69439))

(assert (=> b!71804 m!69433))

(assert (=> d!15945 d!16167))

(declare-fun d!16169 () Bool)

(declare-fun lt!31996 () (_ BitVec 32))

(declare-fun lt!31995 () (_ BitVec 32))

(assert (=> d!16169 (= lt!31996 (bvmul (bvxor lt!31995 (bvlshr lt!31995 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!16169 (= lt!31995 ((_ extract 31 0) (bvand (bvxor (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvlshr (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!16169 (and (bvsge (mask!6149 newMap!16) #b00000000000000000000000000000000) (let ((res!38250 (let ((h!2060 ((_ extract 31 0) (bvand (bvxor (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvlshr (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11109 (bvmul (bvxor h!2060 (bvlshr h!2060 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11109 (bvlshr x!11109 #b00000000000000000000000000001101)) (mask!6149 newMap!16)))))) (and (bvslt res!38250 (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001)) (bvsge res!38250 #b00000000000000000000000000000000))))))

(assert (=> d!16169 (= (toIndex!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (mask!6149 newMap!16)) (bvand (bvxor lt!31996 (bvlshr lt!31996 #b00000000000000000000000000001101)) (mask!6149 newMap!16)))))

(assert (=> d!15945 d!16169))

(assert (=> d!15945 d!16145))

(declare-fun d!16171 () Bool)

(declare-fun res!38251 () Bool)

(declare-fun e!46984 () Bool)

(assert (=> d!16171 (=> res!38251 e!46984)))

(assert (=> d!16171 (= res!38251 (and ((_ is Cons!1472) lt!31449) (= (_1!1068 (h!2058 lt!31449)) (_1!1068 lt!31269))))))

(assert (=> d!16171 (= (containsKey!136 lt!31449 (_1!1068 lt!31269)) e!46984)))

(declare-fun b!71806 () Bool)

(declare-fun e!46985 () Bool)

(assert (=> b!71806 (= e!46984 e!46985)))

(declare-fun res!38252 () Bool)

(assert (=> b!71806 (=> (not res!38252) (not e!46985))))

(assert (=> b!71806 (= res!38252 (and (or (not ((_ is Cons!1472) lt!31449)) (bvsle (_1!1068 (h!2058 lt!31449)) (_1!1068 lt!31269))) ((_ is Cons!1472) lt!31449) (bvslt (_1!1068 (h!2058 lt!31449)) (_1!1068 lt!31269))))))

(declare-fun b!71807 () Bool)

(assert (=> b!71807 (= e!46985 (containsKey!136 (t!5012 lt!31449) (_1!1068 lt!31269)))))

(assert (= (and d!16171 (not res!38251)) b!71806))

(assert (= (and b!71806 res!38252) b!71807))

(declare-fun m!69441 () Bool)

(assert (=> b!71807 m!69441))

(assert (=> b!71266 d!16171))

(declare-fun d!16173 () Bool)

(assert (=> d!16173 (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!31997 () Unit!2002)

(assert (=> d!16173 (= lt!31997 (choose!404 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46986 () Bool)

(assert (=> d!16173 e!46986))

(declare-fun res!38253 () Bool)

(assert (=> d!16173 (=> (not res!38253) (not e!46986))))

(assert (=> d!16173 (= res!38253 (isStrictlySorted!291 (toList!723 lt!31444)))))

(assert (=> d!16173 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000) lt!31997)))

(declare-fun b!71808 () Bool)

(assert (=> b!71808 (= e!46986 (containsKey!136 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16173 res!38253) b!71808))

(assert (=> d!16173 m!69023))

(assert (=> d!16173 m!69023))

(assert (=> d!16173 m!69025))

(declare-fun m!69443 () Bool)

(assert (=> d!16173 m!69443))

(declare-fun m!69445 () Bool)

(assert (=> d!16173 m!69445))

(assert (=> b!71808 m!69019))

(assert (=> b!71592 d!16173))

(declare-fun d!16175 () Bool)

(assert (=> d!16175 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3091 () Bool)

(assert (= bs!3091 d!16175))

(assert (=> bs!3091 m!69023))

(declare-fun m!69447 () Bool)

(assert (=> bs!3091 m!69447))

(assert (=> b!71592 d!16175))

(declare-fun b!71812 () Bool)

(declare-fun e!46988 () Option!138)

(assert (=> b!71812 (= e!46988 None!136)))

(declare-fun b!71810 () Bool)

(declare-fun e!46987 () Option!138)

(assert (=> b!71810 (= e!46987 e!46988)))

(declare-fun c!10510 () Bool)

(assert (=> b!71810 (= c!10510 (and ((_ is Cons!1472) (toList!723 lt!31444)) (not (= (_1!1068 (h!2058 (toList!723 lt!31444))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71809 () Bool)

(assert (=> b!71809 (= e!46987 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31444)))))))

(declare-fun d!16177 () Bool)

(declare-fun c!10509 () Bool)

(assert (=> d!16177 (= c!10509 (and ((_ is Cons!1472) (toList!723 lt!31444)) (= (_1!1068 (h!2058 (toList!723 lt!31444))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16177 (= (getValueByKey!132 (toList!723 lt!31444) #b1000000000000000000000000000000000000000000000000000000000000000) e!46987)))

(declare-fun b!71811 () Bool)

(assert (=> b!71811 (= e!46988 (getValueByKey!132 (t!5012 (toList!723 lt!31444)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16177 c!10509) b!71809))

(assert (= (and d!16177 (not c!10509)) b!71810))

(assert (= (and b!71810 c!10510) b!71811))

(assert (= (and b!71810 (not c!10510)) b!71812))

(declare-fun m!69449 () Bool)

(assert (=> b!71811 m!69449))

(assert (=> b!71592 d!16177))

(declare-fun d!16179 () Bool)

(declare-fun res!38254 () Bool)

(declare-fun e!46989 () Bool)

(assert (=> d!16179 (=> res!38254 e!46989)))

(assert (=> d!16179 (= res!38254 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31508)))))

(assert (=> d!16179 (= (containsKey!136 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508) e!46989)))

(declare-fun b!71813 () Bool)

(declare-fun e!46990 () Bool)

(assert (=> b!71813 (= e!46989 e!46990)))

(declare-fun res!38255 () Bool)

(assert (=> b!71813 (=> (not res!38255) (not e!46990))))

(assert (=> b!71813 (= res!38255 (and (or (not ((_ is Cons!1472) (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) (bvsle (_1!1068 (h!2058 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31508)) ((_ is Cons!1472) (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (bvslt (_1!1068 (h!2058 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31508)))))

(declare-fun b!71814 () Bool)

(assert (=> b!71814 (= e!46990 (containsKey!136 (t!5012 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) lt!31508))))

(assert (= (and d!16179 (not res!38254)) b!71813))

(assert (= (and b!71813 res!38255) b!71814))

(declare-fun m!69451 () Bool)

(assert (=> b!71814 m!69451))

(assert (=> d!15995 d!16179))

(declare-fun d!16181 () Bool)

(declare-fun e!46991 () Bool)

(assert (=> d!16181 e!46991))

(declare-fun res!38256 () Bool)

(assert (=> d!16181 (=> (not res!38256) (not e!46991))))

(declare-fun lt!32000 () ListLongMap!1415)

(assert (=> d!16181 (= res!38256 (contains!719 lt!32000 (_1!1068 (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(declare-fun lt!32001 () List!1476)

(assert (=> d!16181 (= lt!32000 (ListLongMap!1416 lt!32001))))

(declare-fun lt!31999 () Unit!2002)

(declare-fun lt!31998 () Unit!2002)

(assert (=> d!16181 (= lt!31999 lt!31998)))

(assert (=> d!16181 (= (getValueByKey!132 lt!32001 (_1!1068 (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))) (Some!137 (_2!1068 (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16181 (= lt!31998 (lemmaContainsTupThenGetReturnValue!49 lt!32001 (_1!1068 (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (_2!1068 (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16181 (= lt!32001 (insertStrictlySorted!52 (toList!723 (ite c!10397 call!6197 (ite c!10395 call!6196 call!6199))) (_1!1068 (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (_2!1068 (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16181 (= (+!93 (ite c!10397 call!6197 (ite c!10395 call!6196 call!6199)) (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) lt!32000)))

(declare-fun b!71815 () Bool)

(declare-fun res!38257 () Bool)

(assert (=> b!71815 (=> (not res!38257) (not e!46991))))

(assert (=> b!71815 (= res!38257 (= (getValueByKey!132 (toList!723 lt!32000) (_1!1068 (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))) (Some!137 (_2!1068 (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))))

(declare-fun b!71816 () Bool)

(assert (=> b!71816 (= e!46991 (contains!722 (toList!723 lt!32000) (ite (or c!10397 c!10395) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (= (and d!16181 res!38256) b!71815))

(assert (= (and b!71815 res!38257) b!71816))

(declare-fun m!69453 () Bool)

(assert (=> d!16181 m!69453))

(declare-fun m!69455 () Bool)

(assert (=> d!16181 m!69455))

(declare-fun m!69457 () Bool)

(assert (=> d!16181 m!69457))

(declare-fun m!69459 () Bool)

(assert (=> d!16181 m!69459))

(declare-fun m!69461 () Bool)

(assert (=> b!71815 m!69461))

(declare-fun m!69463 () Bool)

(assert (=> b!71816 m!69463))

(assert (=> bm!6194 d!16181))

(declare-fun d!16183 () Bool)

(assert (=> d!16183 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31448) (_1!1068 lt!31269))) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31448) (_1!1068 lt!31269)))))))

(declare-fun bs!3092 () Bool)

(assert (= bs!3092 d!16183))

(assert (=> bs!3092 m!68133))

(declare-fun m!69465 () Bool)

(assert (=> bs!3092 m!69465))

(assert (=> b!71261 d!16183))

(assert (=> b!71261 d!15841))

(declare-fun d!16185 () Bool)

(declare-fun res!38259 () Bool)

(declare-fun e!46992 () Bool)

(assert (=> d!16185 (=> res!38259 e!46992)))

(assert (=> d!16185 (= res!38259 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16185 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3840 newMap!16) (mask!6149 newMap!16)) e!46992)))

(declare-fun b!71817 () Bool)

(declare-fun e!46993 () Bool)

(assert (=> b!71817 (= e!46992 e!46993)))

(declare-fun c!10511 () Bool)

(assert (=> b!71817 (= c!10511 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!71818 () Bool)

(declare-fun e!46994 () Bool)

(declare-fun call!6243 () Bool)

(assert (=> b!71818 (= e!46994 call!6243)))

(declare-fun bm!6240 () Bool)

(assert (=> bm!6240 (= call!6243 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!71819 () Bool)

(assert (=> b!71819 (= e!46993 call!6243)))

(declare-fun b!71820 () Bool)

(assert (=> b!71820 (= e!46993 e!46994)))

(declare-fun lt!32003 () (_ BitVec 64))

(assert (=> b!71820 (= lt!32003 (select (arr!1853 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!32004 () Unit!2002)

(assert (=> b!71820 (= lt!32004 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3840 newMap!16) lt!32003 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!71820 (arrayContainsKey!0 (_keys!3840 newMap!16) lt!32003 #b00000000000000000000000000000000)))

(declare-fun lt!32002 () Unit!2002)

(assert (=> b!71820 (= lt!32002 lt!32004)))

(declare-fun res!38258 () Bool)

(assert (=> b!71820 (= res!38258 (= (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3840 newMap!16) (mask!6149 newMap!16)) (Found!235 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!71820 (=> (not res!38258) (not e!46994))))

(assert (= (and d!16185 (not res!38259)) b!71817))

(assert (= (and b!71817 c!10511) b!71820))

(assert (= (and b!71817 (not c!10511)) b!71819))

(assert (= (and b!71820 res!38258) b!71818))

(assert (= (or b!71818 b!71819) bm!6240))

(declare-fun m!69467 () Bool)

(assert (=> b!71817 m!69467))

(assert (=> b!71817 m!69467))

(declare-fun m!69469 () Bool)

(assert (=> b!71817 m!69469))

(declare-fun m!69471 () Bool)

(assert (=> bm!6240 m!69471))

(assert (=> b!71820 m!69467))

(declare-fun m!69473 () Bool)

(assert (=> b!71820 m!69473))

(declare-fun m!69475 () Bool)

(assert (=> b!71820 m!69475))

(assert (=> b!71820 m!69467))

(declare-fun m!69477 () Bool)

(assert (=> b!71820 m!69477))

(assert (=> bm!6183 d!16185))

(assert (=> d!15981 d!15995))

(assert (=> d!15981 d!15987))

(declare-fun d!16187 () Bool)

(assert (=> d!16187 (contains!719 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31508)))

(assert (=> d!16187 true))

(declare-fun _$35!315 () Unit!2002)

(assert (=> d!16187 (= (choose!406 lt!31514 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31508) _$35!315)))

(declare-fun bs!3093 () Bool)

(assert (= bs!3093 d!16187))

(assert (=> bs!3093 m!68199))

(assert (=> bs!3093 m!68199))

(assert (=> bs!3093 m!68207))

(assert (=> d!15981 d!16187))

(declare-fun d!16189 () Bool)

(declare-fun e!46995 () Bool)

(assert (=> d!16189 e!46995))

(declare-fun res!38260 () Bool)

(assert (=> d!16189 (=> res!38260 e!46995)))

(declare-fun lt!32007 () Bool)

(assert (=> d!16189 (= res!38260 (not lt!32007))))

(declare-fun lt!32006 () Bool)

(assert (=> d!16189 (= lt!32007 lt!32006)))

(declare-fun lt!32005 () Unit!2002)

(declare-fun e!46996 () Unit!2002)

(assert (=> d!16189 (= lt!32005 e!46996)))

(declare-fun c!10512 () Bool)

(assert (=> d!16189 (= c!10512 lt!32006)))

(assert (=> d!16189 (= lt!32006 (containsKey!136 (toList!723 lt!31514) lt!31508))))

(assert (=> d!16189 (= (contains!719 lt!31514 lt!31508) lt!32007)))

(declare-fun b!71822 () Bool)

(declare-fun lt!32008 () Unit!2002)

(assert (=> b!71822 (= e!46996 lt!32008)))

(assert (=> b!71822 (= lt!32008 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31514) lt!31508))))

(assert (=> b!71822 (isDefined!85 (getValueByKey!132 (toList!723 lt!31514) lt!31508))))

(declare-fun b!71823 () Bool)

(declare-fun Unit!2041 () Unit!2002)

(assert (=> b!71823 (= e!46996 Unit!2041)))

(declare-fun b!71824 () Bool)

(assert (=> b!71824 (= e!46995 (isDefined!85 (getValueByKey!132 (toList!723 lt!31514) lt!31508)))))

(assert (= (and d!16189 c!10512) b!71822))

(assert (= (and d!16189 (not c!10512)) b!71823))

(assert (= (and d!16189 (not res!38260)) b!71824))

(declare-fun m!69479 () Bool)

(assert (=> d!16189 m!69479))

(declare-fun m!69481 () Bool)

(assert (=> b!71822 m!69481))

(declare-fun m!69483 () Bool)

(assert (=> b!71822 m!69483))

(assert (=> b!71822 m!69483))

(declare-fun m!69485 () Bool)

(assert (=> b!71822 m!69485))

(assert (=> b!71824 m!69483))

(assert (=> b!71824 m!69483))

(assert (=> b!71824 m!69485))

(assert (=> d!15981 d!16189))

(declare-fun b!71828 () Bool)

(declare-fun e!46998 () Option!138)

(assert (=> b!71828 (= e!46998 None!136)))

(declare-fun b!71826 () Bool)

(declare-fun e!46997 () Option!138)

(assert (=> b!71826 (= e!46997 e!46998)))

(declare-fun c!10514 () Bool)

(assert (=> b!71826 (= c!10514 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31452))) (not (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31452)))) (_1!1068 lt!31265)))))))

(declare-fun b!71825 () Bool)

(assert (=> b!71825 (= e!46997 (Some!137 (_2!1068 (h!2058 (t!5012 (toList!723 lt!31452))))))))

(declare-fun d!16191 () Bool)

(declare-fun c!10513 () Bool)

(assert (=> d!16191 (= c!10513 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31452))) (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31452)))) (_1!1068 lt!31265))))))

(assert (=> d!16191 (= (getValueByKey!132 (t!5012 (toList!723 lt!31452)) (_1!1068 lt!31265)) e!46997)))

(declare-fun b!71827 () Bool)

(assert (=> b!71827 (= e!46998 (getValueByKey!132 (t!5012 (t!5012 (toList!723 lt!31452))) (_1!1068 lt!31265)))))

(assert (= (and d!16191 c!10513) b!71825))

(assert (= (and d!16191 (not c!10513)) b!71826))

(assert (= (and b!71826 c!10514) b!71827))

(assert (= (and b!71826 (not c!10514)) b!71828))

(declare-fun m!69487 () Bool)

(assert (=> b!71827 m!69487))

(assert (=> b!71227 d!16191))

(assert (=> bm!6213 d!15945))

(declare-fun d!16193 () Bool)

(declare-fun res!38261 () Bool)

(declare-fun e!46999 () Bool)

(assert (=> d!16193 (=> res!38261 e!46999)))

(assert (=> d!16193 (= res!38261 (and ((_ is Cons!1472) (toList!723 e!46499)) (= (_1!1068 (h!2058 (toList!723 e!46499))) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))))))))

(assert (=> d!16193 (= (containsKey!136 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))) e!46999)))

(declare-fun b!71829 () Bool)

(declare-fun e!47000 () Bool)

(assert (=> b!71829 (= e!46999 e!47000)))

(declare-fun res!38262 () Bool)

(assert (=> b!71829 (=> (not res!38262) (not e!47000))))

(assert (=> b!71829 (= res!38262 (and (or (not ((_ is Cons!1472) (toList!723 e!46499))) (bvsle (_1!1068 (h!2058 (toList!723 e!46499))) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))))) ((_ is Cons!1472) (toList!723 e!46499)) (bvslt (_1!1068 (h!2058 (toList!723 e!46499))) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))))))))

(declare-fun b!71830 () Bool)

(assert (=> b!71830 (= e!47000 (containsKey!136 (t!5012 (toList!723 e!46499)) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))

(assert (= (and d!16193 (not res!38261)) b!71829))

(assert (= (and b!71829 res!38262) b!71830))

(declare-fun m!69489 () Bool)

(assert (=> b!71830 m!69489))

(assert (=> d!15937 d!16193))

(declare-fun d!16195 () Bool)

(declare-fun res!38263 () Bool)

(declare-fun e!47001 () Bool)

(assert (=> d!16195 (=> res!38263 e!47001)))

(assert (=> d!16195 (= res!38263 (and ((_ is Cons!1472) (toList!723 lt!31522)) (= (_1!1068 (h!2058 (toList!723 lt!31522))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16195 (= (containsKey!136 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000) e!47001)))

(declare-fun b!71831 () Bool)

(declare-fun e!47002 () Bool)

(assert (=> b!71831 (= e!47001 e!47002)))

(declare-fun res!38264 () Bool)

(assert (=> b!71831 (=> (not res!38264) (not e!47002))))

(assert (=> b!71831 (= res!38264 (and (or (not ((_ is Cons!1472) (toList!723 lt!31522))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31522))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1472) (toList!723 lt!31522)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31522))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71832 () Bool)

(assert (=> b!71832 (= e!47002 (containsKey!136 (t!5012 (toList!723 lt!31522)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16195 (not res!38263)) b!71831))

(assert (= (and b!71831 res!38264) b!71832))

(declare-fun m!69491 () Bool)

(assert (=> b!71832 m!69491))

(assert (=> d!15927 d!16195))

(declare-fun d!16197 () Bool)

(declare-fun lt!32009 () Bool)

(assert (=> d!16197 (= lt!32009 (select (content!76 (toList!723 lt!31747)) (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun e!47003 () Bool)

(assert (=> d!16197 (= lt!32009 e!47003)))

(declare-fun res!38266 () Bool)

(assert (=> d!16197 (=> (not res!38266) (not e!47003))))

(assert (=> d!16197 (= res!38266 ((_ is Cons!1472) (toList!723 lt!31747)))))

(assert (=> d!16197 (= (contains!722 (toList!723 lt!31747) (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!32009)))

(declare-fun b!71833 () Bool)

(declare-fun e!47004 () Bool)

(assert (=> b!71833 (= e!47003 e!47004)))

(declare-fun res!38265 () Bool)

(assert (=> b!71833 (=> res!38265 e!47004)))

(assert (=> b!71833 (= res!38265 (= (h!2058 (toList!723 lt!31747)) (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71834 () Bool)

(assert (=> b!71834 (= e!47004 (contains!722 (t!5012 (toList!723 lt!31747)) (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!16197 res!38266) b!71833))

(assert (= (and b!71833 (not res!38265)) b!71834))

(declare-fun m!69493 () Bool)

(assert (=> d!16197 m!69493))

(declare-fun m!69495 () Bool)

(assert (=> d!16197 m!69495))

(declare-fun m!69497 () Bool)

(assert (=> b!71834 m!69497))

(assert (=> b!71482 d!16197))

(declare-fun d!16199 () Bool)

(assert (=> d!16199 (isDefined!85 (getValueByKey!132 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun lt!32010 () Unit!2002)

(assert (=> d!16199 (= lt!32010 (choose!404 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun e!47005 () Bool)

(assert (=> d!16199 e!47005))

(declare-fun res!38267 () Bool)

(assert (=> d!16199 (=> (not res!38267) (not e!47005))))

(assert (=> d!16199 (= res!38267 (isStrictlySorted!291 (toList!723 call!6127)))))

(assert (=> d!16199 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) lt!32010)))

(declare-fun b!71835 () Bool)

(assert (=> b!71835 (= e!47005 (containsKey!136 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16199 res!38267) b!71835))

(assert (=> d!16199 m!67893))

(assert (=> d!16199 m!69035))

(assert (=> d!16199 m!69035))

(assert (=> d!16199 m!69037))

(assert (=> d!16199 m!67893))

(declare-fun m!69499 () Bool)

(assert (=> d!16199 m!69499))

(declare-fun m!69501 () Bool)

(assert (=> d!16199 m!69501))

(assert (=> b!71835 m!67893))

(assert (=> b!71835 m!69031))

(assert (=> b!71605 d!16199))

(declare-fun d!16201 () Bool)

(assert (=> d!16201 (= (isDefined!85 (getValueByKey!132 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))) (not (isEmpty!314 (getValueByKey!132 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))))

(declare-fun bs!3094 () Bool)

(assert (= bs!3094 d!16201))

(assert (=> bs!3094 m!69035))

(declare-fun m!69503 () Bool)

(assert (=> bs!3094 m!69503))

(assert (=> b!71605 d!16201))

(declare-fun b!71839 () Bool)

(declare-fun e!47007 () Option!138)

(assert (=> b!71839 (= e!47007 None!136)))

(declare-fun b!71837 () Bool)

(declare-fun e!47006 () Option!138)

(assert (=> b!71837 (= e!47006 e!47007)))

(declare-fun c!10516 () Bool)

(assert (=> b!71837 (= c!10516 (and ((_ is Cons!1472) (toList!723 call!6127)) (not (= (_1!1068 (h!2058 (toList!723 call!6127))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))))

(declare-fun b!71836 () Bool)

(assert (=> b!71836 (= e!47006 (Some!137 (_2!1068 (h!2058 (toList!723 call!6127)))))))

(declare-fun d!16203 () Bool)

(declare-fun c!10515 () Bool)

(assert (=> d!16203 (= c!10515 (and ((_ is Cons!1472) (toList!723 call!6127)) (= (_1!1068 (h!2058 (toList!723 call!6127))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (=> d!16203 (= (getValueByKey!132 (toList!723 call!6127) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) e!47006)))

(declare-fun b!71838 () Bool)

(assert (=> b!71838 (= e!47007 (getValueByKey!132 (t!5012 (toList!723 call!6127)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16203 c!10515) b!71836))

(assert (= (and d!16203 (not c!10515)) b!71837))

(assert (= (and b!71837 c!10516) b!71838))

(assert (= (and b!71837 (not c!10516)) b!71839))

(assert (=> b!71838 m!67893))

(declare-fun m!69505 () Bool)

(assert (=> b!71838 m!69505))

(assert (=> b!71605 d!16203))

(declare-fun b!71843 () Bool)

(declare-fun e!47009 () Option!138)

(assert (=> b!71843 (= e!47009 None!136)))

(declare-fun b!71841 () Bool)

(declare-fun e!47008 () Option!138)

(assert (=> b!71841 (= e!47008 e!47009)))

(declare-fun c!10518 () Bool)

(assert (=> b!71841 (= c!10518 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31273))) (not (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31273)))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))))

(declare-fun b!71840 () Bool)

(assert (=> b!71840 (= e!47008 (Some!137 (_2!1068 (h!2058 (t!5012 (toList!723 lt!31273))))))))

(declare-fun c!10517 () Bool)

(declare-fun d!16205 () Bool)

(assert (=> d!16205 (= c!10517 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31273))) (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31273)))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (=> d!16205 (= (getValueByKey!132 (t!5012 (toList!723 lt!31273)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) e!47008)))

(declare-fun b!71842 () Bool)

(assert (=> b!71842 (= e!47009 (getValueByKey!132 (t!5012 (t!5012 (toList!723 lt!31273))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16205 c!10517) b!71840))

(assert (= (and d!16205 (not c!10517)) b!71841))

(assert (= (and b!71841 c!10518) b!71842))

(assert (= (and b!71841 (not c!10518)) b!71843))

(assert (=> b!71842 m!67893))

(declare-fun m!69507 () Bool)

(assert (=> b!71842 m!69507))

(assert (=> b!71454 d!16205))

(declare-fun b!71847 () Bool)

(declare-fun e!47011 () Option!138)

(assert (=> b!71847 (= e!47011 None!136)))

(declare-fun b!71845 () Bool)

(declare-fun e!47010 () Option!138)

(assert (=> b!71845 (= e!47010 e!47011)))

(declare-fun c!10520 () Bool)

(assert (=> b!71845 (= c!10520 (and ((_ is Cons!1472) (t!5012 lt!31453)) (not (= (_1!1068 (h!2058 (t!5012 lt!31453))) (_1!1068 lt!31265)))))))

(declare-fun b!71844 () Bool)

(assert (=> b!71844 (= e!47010 (Some!137 (_2!1068 (h!2058 (t!5012 lt!31453)))))))

(declare-fun d!16207 () Bool)

(declare-fun c!10519 () Bool)

(assert (=> d!16207 (= c!10519 (and ((_ is Cons!1472) (t!5012 lt!31453)) (= (_1!1068 (h!2058 (t!5012 lt!31453))) (_1!1068 lt!31265))))))

(assert (=> d!16207 (= (getValueByKey!132 (t!5012 lt!31453) (_1!1068 lt!31265)) e!47010)))

(declare-fun b!71846 () Bool)

(assert (=> b!71846 (= e!47011 (getValueByKey!132 (t!5012 (t!5012 lt!31453)) (_1!1068 lt!31265)))))

(assert (= (and d!16207 c!10519) b!71844))

(assert (= (and d!16207 (not c!10519)) b!71845))

(assert (= (and b!71845 c!10520) b!71846))

(assert (= (and b!71845 (not c!10520)) b!71847))

(declare-fun m!69509 () Bool)

(assert (=> b!71846 m!69509))

(assert (=> b!71286 d!16207))

(declare-fun d!16209 () Bool)

(declare-fun lt!32011 () Bool)

(assert (=> d!16209 (= lt!32011 (select (content!76 (toList!723 lt!31577)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun e!47012 () Bool)

(assert (=> d!16209 (= lt!32011 e!47012)))

(declare-fun res!38269 () Bool)

(assert (=> d!16209 (=> (not res!38269) (not e!47012))))

(assert (=> d!16209 (= res!38269 ((_ is Cons!1472) (toList!723 lt!31577)))))

(assert (=> d!16209 (= (contains!722 (toList!723 lt!31577) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!32011)))

(declare-fun b!71848 () Bool)

(declare-fun e!47013 () Bool)

(assert (=> b!71848 (= e!47012 e!47013)))

(declare-fun res!38268 () Bool)

(assert (=> b!71848 (=> res!38268 e!47013)))

(assert (=> b!71848 (= res!38268 (= (h!2058 (toList!723 lt!31577)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71849 () Bool)

(assert (=> b!71849 (= e!47013 (contains!722 (t!5012 (toList!723 lt!31577)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!16209 res!38269) b!71848))

(assert (= (and b!71848 (not res!38268)) b!71849))

(declare-fun m!69511 () Bool)

(assert (=> d!16209 m!69511))

(declare-fun m!69513 () Bool)

(assert (=> d!16209 m!69513))

(declare-fun m!69515 () Bool)

(assert (=> b!71849 m!69515))

(assert (=> b!71249 d!16209))

(declare-fun d!16211 () Bool)

(declare-fun lt!32012 () Bool)

(assert (=> d!16211 (= lt!32012 (select (content!76 (toList!723 lt!31585)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun e!47014 () Bool)

(assert (=> d!16211 (= lt!32012 e!47014)))

(declare-fun res!38271 () Bool)

(assert (=> d!16211 (=> (not res!38271) (not e!47014))))

(assert (=> d!16211 (= res!38271 ((_ is Cons!1472) (toList!723 lt!31585)))))

(assert (=> d!16211 (= (contains!722 (toList!723 lt!31585) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!32012)))

(declare-fun b!71850 () Bool)

(declare-fun e!47015 () Bool)

(assert (=> b!71850 (= e!47014 e!47015)))

(declare-fun res!38270 () Bool)

(assert (=> b!71850 (=> res!38270 e!47015)))

(assert (=> b!71850 (= res!38270 (= (h!2058 (toList!723 lt!31585)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!71851 () Bool)

(assert (=> b!71851 (= e!47015 (contains!722 (t!5012 (toList!723 lt!31585)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!16211 res!38271) b!71850))

(assert (= (and b!71850 (not res!38270)) b!71851))

(declare-fun m!69517 () Bool)

(assert (=> d!16211 m!69517))

(declare-fun m!69519 () Bool)

(assert (=> d!16211 m!69519))

(declare-fun m!69521 () Bool)

(assert (=> b!71851 m!69521))

(assert (=> b!71253 d!16211))

(declare-fun b!71864 () Bool)

(declare-fun e!47023 () SeekEntryResult!235)

(assert (=> b!71864 (= e!47023 (Found!235 (index!3072 lt!31716)))))

(declare-fun b!71865 () Bool)

(declare-fun e!47022 () SeekEntryResult!235)

(assert (=> b!71865 (= e!47022 Undefined!235)))

(declare-fun b!71866 () Bool)

(declare-fun c!10527 () Bool)

(declare-fun lt!32017 () (_ BitVec 64))

(assert (=> b!71866 (= c!10527 (= lt!32017 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47024 () SeekEntryResult!235)

(assert (=> b!71866 (= e!47023 e!47024)))

(declare-fun b!71867 () Bool)

(assert (=> b!71867 (= e!47024 (MissingVacant!235 (index!3072 lt!31716)))))

(declare-fun b!71868 () Bool)

(assert (=> b!71868 (= e!47022 e!47023)))

(declare-fun c!10529 () Bool)

(assert (=> b!71868 (= c!10529 (= lt!32017 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!71869 () Bool)

(assert (=> b!71869 (= e!47024 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11007 lt!31716) #b00000000000000000000000000000001) (nextIndex!0 (index!3072 lt!31716) (x!11007 lt!31716) (mask!6149 newMap!16)) (index!3072 lt!31716) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun d!16213 () Bool)

(declare-fun lt!32018 () SeekEntryResult!235)

(assert (=> d!16213 (and (or ((_ is Undefined!235) lt!32018) (not ((_ is Found!235) lt!32018)) (and (bvsge (index!3071 lt!32018) #b00000000000000000000000000000000) (bvslt (index!3071 lt!32018) (size!2090 (_keys!3840 newMap!16))))) (or ((_ is Undefined!235) lt!32018) ((_ is Found!235) lt!32018) (not ((_ is MissingVacant!235) lt!32018)) (not (= (index!3073 lt!32018) (index!3072 lt!31716))) (and (bvsge (index!3073 lt!32018) #b00000000000000000000000000000000) (bvslt (index!3073 lt!32018) (size!2090 (_keys!3840 newMap!16))))) (or ((_ is Undefined!235) lt!32018) (ite ((_ is Found!235) lt!32018) (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!32018)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (and ((_ is MissingVacant!235) lt!32018) (= (index!3073 lt!32018) (index!3072 lt!31716)) (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3073 lt!32018)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!16213 (= lt!32018 e!47022)))

(declare-fun c!10528 () Bool)

(assert (=> d!16213 (= c!10528 (bvsge (x!11007 lt!31716) #b01111111111111111111111111111110))))

(assert (=> d!16213 (= lt!32017 (select (arr!1853 (_keys!3840 newMap!16)) (index!3072 lt!31716)))))

(assert (=> d!16213 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16213 (= (seekKeyOrZeroReturnVacant!0 (x!11007 lt!31716) (index!3072 lt!31716) (index!3072 lt!31716) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)) lt!32018)))

(assert (= (and d!16213 c!10528) b!71865))

(assert (= (and d!16213 (not c!10528)) b!71868))

(assert (= (and b!71868 c!10529) b!71864))

(assert (= (and b!71868 (not c!10529)) b!71866))

(assert (= (and b!71866 c!10527) b!71867))

(assert (= (and b!71866 (not c!10527)) b!71869))

(declare-fun m!69523 () Bool)

(assert (=> b!71869 m!69523))

(assert (=> b!71869 m!69523))

(assert (=> b!71869 m!67893))

(declare-fun m!69525 () Bool)

(assert (=> b!71869 m!69525))

(declare-fun m!69527 () Bool)

(assert (=> d!16213 m!69527))

(declare-fun m!69529 () Bool)

(assert (=> d!16213 m!69529))

(assert (=> d!16213 m!68723))

(assert (=> d!16213 m!68263))

(assert (=> b!71447 d!16213))

(declare-fun b!71873 () Bool)

(declare-fun e!47026 () Option!138)

(assert (=> b!71873 (= e!47026 None!136)))

(declare-fun b!71871 () Bool)

(declare-fun e!47025 () Option!138)

(assert (=> b!71871 (= e!47025 e!47026)))

(declare-fun c!10531 () Bool)

(assert (=> b!71871 (= c!10531 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31448))) (not (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31448)))) (_1!1068 lt!31269)))))))

(declare-fun b!71870 () Bool)

(assert (=> b!71870 (= e!47025 (Some!137 (_2!1068 (h!2058 (t!5012 (toList!723 lt!31448))))))))

(declare-fun d!16215 () Bool)

(declare-fun c!10530 () Bool)

(assert (=> d!16215 (= c!10530 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31448))) (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31448)))) (_1!1068 lt!31269))))))

(assert (=> d!16215 (= (getValueByKey!132 (t!5012 (toList!723 lt!31448)) (_1!1068 lt!31269)) e!47025)))

(declare-fun b!71872 () Bool)

(assert (=> b!71872 (= e!47026 (getValueByKey!132 (t!5012 (t!5012 (toList!723 lt!31448))) (_1!1068 lt!31269)))))

(assert (= (and d!16215 c!10530) b!71870))

(assert (= (and d!16215 (not c!10530)) b!71871))

(assert (= (and b!71871 c!10531) b!71872))

(assert (= (and b!71871 (not c!10531)) b!71873))

(declare-fun m!69531 () Bool)

(assert (=> b!71872 m!69531))

(assert (=> b!71150 d!16215))

(declare-fun d!16217 () Bool)

(declare-fun lt!32019 () Bool)

(assert (=> d!16217 (= lt!32019 (select (content!76 lt!31460) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun e!47027 () Bool)

(assert (=> d!16217 (= lt!32019 e!47027)))

(declare-fun res!38273 () Bool)

(assert (=> d!16217 (=> (not res!38273) (not e!47027))))

(assert (=> d!16217 (= res!38273 ((_ is Cons!1472) lt!31460))))

(assert (=> d!16217 (= (contains!722 lt!31460 (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))) lt!32019)))

(declare-fun b!71874 () Bool)

(declare-fun e!47028 () Bool)

(assert (=> b!71874 (= e!47027 e!47028)))

(declare-fun res!38272 () Bool)

(assert (=> b!71874 (=> res!38272 e!47028)))

(assert (=> b!71874 (= res!38272 (= (h!2058 lt!31460) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun b!71875 () Bool)

(assert (=> b!71875 (= e!47028 (contains!722 (t!5012 lt!31460) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(assert (= (and d!16217 res!38273) b!71874))

(assert (= (and b!71874 (not res!38272)) b!71875))

(declare-fun m!69533 () Bool)

(assert (=> d!16217 m!69533))

(declare-fun m!69535 () Bool)

(assert (=> d!16217 m!69535))

(declare-fun m!69537 () Bool)

(assert (=> b!71875 m!69537))

(assert (=> b!71237 d!16217))

(declare-fun b!71876 () Bool)

(declare-fun e!47032 () Bool)

(declare-fun e!47030 () Bool)

(assert (=> b!71876 (= e!47032 e!47030)))

(declare-fun c!10532 () Bool)

(assert (=> b!71876 (= c!10532 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!16219 () Bool)

(declare-fun res!38275 () Bool)

(declare-fun e!47029 () Bool)

(assert (=> d!16219 (=> res!38275 e!47029)))

(assert (=> d!16219 (= res!38275 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16219 (= (arrayNoDuplicates!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10434 (Cons!1471 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) Nil!1472) Nil!1472)) e!47029)))

(declare-fun call!6244 () Bool)

(declare-fun bm!6241 () Bool)

(assert (=> bm!6241 (= call!6244 (arrayNoDuplicates!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10532 (Cons!1471 (select (arr!1853 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!10434 (Cons!1471 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) Nil!1472) Nil!1472)) (ite c!10434 (Cons!1471 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) Nil!1472) Nil!1472))))))

(declare-fun b!71877 () Bool)

(assert (=> b!71877 (= e!47030 call!6244)))

(declare-fun b!71878 () Bool)

(assert (=> b!71878 (= e!47029 e!47032)))

(declare-fun res!38276 () Bool)

(assert (=> b!71878 (=> (not res!38276) (not e!47032))))

(declare-fun e!47031 () Bool)

(assert (=> b!71878 (= res!38276 (not e!47031))))

(declare-fun res!38274 () Bool)

(assert (=> b!71878 (=> (not res!38274) (not e!47031))))

(assert (=> b!71878 (= res!38274 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!71879 () Bool)

(assert (=> b!71879 (= e!47031 (contains!721 (ite c!10434 (Cons!1471 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) Nil!1472) Nil!1472) (select (arr!1853 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!71880 () Bool)

(assert (=> b!71880 (= e!47030 call!6244)))

(assert (= (and d!16219 (not res!38275)) b!71878))

(assert (= (and b!71878 res!38274) b!71879))

(assert (= (and b!71878 res!38276) b!71876))

(assert (= (and b!71876 c!10532) b!71880))

(assert (= (and b!71876 (not c!10532)) b!71877))

(assert (= (or b!71880 b!71877) bm!6241))

(assert (=> b!71876 m!69467))

(assert (=> b!71876 m!69467))

(assert (=> b!71876 m!69469))

(assert (=> bm!6241 m!69467))

(declare-fun m!69539 () Bool)

(assert (=> bm!6241 m!69539))

(assert (=> b!71878 m!69467))

(assert (=> b!71878 m!69467))

(assert (=> b!71878 m!69469))

(assert (=> b!71879 m!69467))

(assert (=> b!71879 m!69467))

(declare-fun m!69541 () Bool)

(assert (=> b!71879 m!69541))

(assert (=> bm!6216 d!16219))

(declare-fun d!16221 () Bool)

(declare-fun res!38277 () Bool)

(declare-fun e!47033 () Bool)

(assert (=> d!16221 (=> res!38277 e!47033)))

(assert (=> d!16221 (= res!38277 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31273))) (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31273)))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (=> d!16221 (= (containsKey!136 (t!5012 (toList!723 lt!31273)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) e!47033)))

(declare-fun b!71881 () Bool)

(declare-fun e!47034 () Bool)

(assert (=> b!71881 (= e!47033 e!47034)))

(declare-fun res!38278 () Bool)

(assert (=> b!71881 (=> (not res!38278) (not e!47034))))

(assert (=> b!71881 (= res!38278 (and (or (not ((_ is Cons!1472) (t!5012 (toList!723 lt!31273)))) (bvsle (_1!1068 (h!2058 (t!5012 (toList!723 lt!31273)))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))) ((_ is Cons!1472) (t!5012 (toList!723 lt!31273))) (bvslt (_1!1068 (h!2058 (t!5012 (toList!723 lt!31273)))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(declare-fun b!71882 () Bool)

(assert (=> b!71882 (= e!47034 (containsKey!136 (t!5012 (t!5012 (toList!723 lt!31273))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16221 (not res!38277)) b!71881))

(assert (= (and b!71881 res!38278) b!71882))

(assert (=> b!71882 m!67893))

(declare-fun m!69543 () Bool)

(assert (=> b!71882 m!69543))

(assert (=> b!71600 d!16221))

(declare-fun b!71886 () Bool)

(declare-fun e!47036 () Option!138)

(assert (=> b!71886 (= e!47036 None!136)))

(declare-fun b!71884 () Bool)

(declare-fun e!47035 () Option!138)

(assert (=> b!71884 (= e!47035 e!47036)))

(declare-fun c!10534 () Bool)

(assert (=> b!71884 (= c!10534 (and ((_ is Cons!1472) (toList!723 lt!31755)) (not (= (_1!1068 (h!2058 (toList!723 lt!31755))) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!71883 () Bool)

(assert (=> b!71883 (= e!47035 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31755)))))))

(declare-fun d!16223 () Bool)

(declare-fun c!10533 () Bool)

(assert (=> d!16223 (= c!10533 (and ((_ is Cons!1472) (toList!723 lt!31755)) (= (_1!1068 (h!2058 (toList!723 lt!31755))) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16223 (= (getValueByKey!132 (toList!723 lt!31755) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!47035)))

(declare-fun b!71885 () Bool)

(assert (=> b!71885 (= e!47036 (getValueByKey!132 (t!5012 (toList!723 lt!31755)) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16223 c!10533) b!71883))

(assert (= (and d!16223 (not c!10533)) b!71884))

(assert (= (and b!71884 c!10534) b!71885))

(assert (= (and b!71884 (not c!10534)) b!71886))

(declare-fun m!69545 () Bool)

(assert (=> b!71885 m!69545))

(assert (=> b!71485 d!16223))

(assert (=> d!15925 d!15945))

(declare-fun b!71903 () Bool)

(declare-fun e!47047 () Bool)

(declare-fun call!6249 () Bool)

(assert (=> b!71903 (= e!47047 (not call!6249))))

(declare-fun d!16225 () Bool)

(declare-fun e!47046 () Bool)

(assert (=> d!16225 e!47046))

(declare-fun c!10540 () Bool)

(declare-fun lt!32022 () SeekEntryResult!235)

(assert (=> d!16225 (= c!10540 ((_ is MissingZero!235) lt!32022))))

(assert (=> d!16225 (= lt!32022 (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(assert (=> d!16225 true))

(declare-fun _$34!799 () Unit!2002)

(assert (=> d!16225 (= (choose!402 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)) _$34!799)))

(declare-fun b!71904 () Bool)

(declare-fun res!38288 () Bool)

(declare-fun e!47048 () Bool)

(assert (=> b!71904 (=> (not res!38288) (not e!47048))))

(declare-fun call!6250 () Bool)

(assert (=> b!71904 (= res!38288 call!6250)))

(declare-fun e!47045 () Bool)

(assert (=> b!71904 (= e!47045 e!47048)))

(declare-fun bm!6246 () Bool)

(assert (=> bm!6246 (= call!6250 (inRange!0 (ite c!10540 (index!3070 lt!32022) (index!3073 lt!32022)) (mask!6149 newMap!16)))))

(declare-fun bm!6247 () Bool)

(assert (=> bm!6247 (= call!6249 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!71905 () Bool)

(assert (=> b!71905 (= e!47046 e!47045)))

(declare-fun c!10539 () Bool)

(assert (=> b!71905 (= c!10539 ((_ is MissingVacant!235) lt!32022))))

(declare-fun b!71906 () Bool)

(assert (=> b!71906 (= e!47045 ((_ is Undefined!235) lt!32022))))

(declare-fun b!71907 () Bool)

(assert (=> b!71907 (= e!47046 e!47047)))

(declare-fun res!38287 () Bool)

(assert (=> b!71907 (= res!38287 call!6250)))

(assert (=> b!71907 (=> (not res!38287) (not e!47047))))

(declare-fun b!71908 () Bool)

(declare-fun res!38290 () Bool)

(assert (=> b!71908 (=> (not res!38290) (not e!47048))))

(assert (=> b!71908 (= res!38290 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3073 lt!32022)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71909 () Bool)

(assert (=> b!71909 (= e!47048 (not call!6249))))

(declare-fun b!71910 () Bool)

(declare-fun res!38289 () Bool)

(assert (=> b!71910 (= res!38289 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3070 lt!32022)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71910 (=> (not res!38289) (not e!47047))))

(assert (= (and d!16225 c!10540) b!71907))

(assert (= (and d!16225 (not c!10540)) b!71905))

(assert (= (and b!71907 res!38287) b!71910))

(assert (= (and b!71910 res!38289) b!71903))

(assert (= (and b!71905 c!10539) b!71904))

(assert (= (and b!71905 (not c!10539)) b!71906))

(assert (= (and b!71904 res!38288) b!71908))

(assert (= (and b!71908 res!38290) b!71909))

(assert (= (or b!71907 b!71904) bm!6246))

(assert (= (or b!71903 b!71909) bm!6247))

(declare-fun m!69547 () Bool)

(assert (=> b!71908 m!69547))

(assert (=> d!16225 m!67893))

(assert (=> d!16225 m!68065))

(declare-fun m!69549 () Bool)

(assert (=> b!71910 m!69549))

(declare-fun m!69551 () Bool)

(assert (=> bm!6246 m!69551))

(assert (=> bm!6247 m!67893))

(assert (=> bm!6247 m!68031))

(assert (=> d!15925 d!16225))

(assert (=> d!15925 d!16145))

(declare-fun d!16227 () Bool)

(assert (=> d!16227 (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32023 () Unit!2002)

(assert (=> d!16227 (= lt!32023 (choose!404 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47049 () Bool)

(assert (=> d!16227 e!47049))

(declare-fun res!38291 () Bool)

(assert (=> d!16227 (=> (not res!38291) (not e!47049))))

(assert (=> d!16227 (= res!38291 (isStrictlySorted!291 (toList!723 lt!31522)))))

(assert (=> d!16227 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000) lt!32023)))

(declare-fun b!71911 () Bool)

(assert (=> b!71911 (= e!47049 (containsKey!136 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16227 res!38291) b!71911))

(assert (=> d!16227 m!68579))

(assert (=> d!16227 m!68579))

(assert (=> d!16227 m!68581))

(declare-fun m!69553 () Bool)

(assert (=> d!16227 m!69553))

(declare-fun m!69555 () Bool)

(assert (=> d!16227 m!69555))

(assert (=> b!71911 m!68575))

(assert (=> b!71357 d!16227))

(declare-fun d!16229 () Bool)

(assert (=> d!16229 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3095 () Bool)

(assert (= bs!3095 d!16229))

(assert (=> bs!3095 m!68579))

(declare-fun m!69557 () Bool)

(assert (=> bs!3095 m!69557))

(assert (=> b!71357 d!16229))

(declare-fun b!71915 () Bool)

(declare-fun e!47051 () Option!138)

(assert (=> b!71915 (= e!47051 None!136)))

(declare-fun b!71913 () Bool)

(declare-fun e!47050 () Option!138)

(assert (=> b!71913 (= e!47050 e!47051)))

(declare-fun c!10542 () Bool)

(assert (=> b!71913 (= c!10542 (and ((_ is Cons!1472) (toList!723 lt!31522)) (not (= (_1!1068 (h!2058 (toList!723 lt!31522))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71912 () Bool)

(assert (=> b!71912 (= e!47050 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31522)))))))

(declare-fun d!16231 () Bool)

(declare-fun c!10541 () Bool)

(assert (=> d!16231 (= c!10541 (and ((_ is Cons!1472) (toList!723 lt!31522)) (= (_1!1068 (h!2058 (toList!723 lt!31522))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16231 (= (getValueByKey!132 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000) e!47050)))

(declare-fun b!71914 () Bool)

(assert (=> b!71914 (= e!47051 (getValueByKey!132 (t!5012 (toList!723 lt!31522)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16231 c!10541) b!71912))

(assert (= (and d!16231 (not c!10541)) b!71913))

(assert (= (and b!71913 c!10542) b!71914))

(assert (= (and b!71913 (not c!10542)) b!71915))

(declare-fun m!69559 () Bool)

(assert (=> b!71914 m!69559))

(assert (=> b!71357 d!16231))

(declare-fun d!16233 () Bool)

(declare-fun e!47052 () Bool)

(assert (=> d!16233 e!47052))

(declare-fun res!38292 () Bool)

(assert (=> d!16233 (=> res!38292 e!47052)))

(declare-fun lt!32026 () Bool)

(assert (=> d!16233 (= res!38292 (not lt!32026))))

(declare-fun lt!32025 () Bool)

(assert (=> d!16233 (= lt!32026 lt!32025)))

(declare-fun lt!32024 () Unit!2002)

(declare-fun e!47053 () Unit!2002)

(assert (=> d!16233 (= lt!32024 e!47053)))

(declare-fun c!10543 () Bool)

(assert (=> d!16233 (= c!10543 lt!32025)))

(assert (=> d!16233 (= lt!32025 (containsKey!136 (toList!723 lt!31755) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16233 (= (contains!719 lt!31755 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32026)))

(declare-fun b!71916 () Bool)

(declare-fun lt!32027 () Unit!2002)

(assert (=> b!71916 (= e!47053 lt!32027)))

(assert (=> b!71916 (= lt!32027 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31755) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> b!71916 (isDefined!85 (getValueByKey!132 (toList!723 lt!31755) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71917 () Bool)

(declare-fun Unit!2042 () Unit!2002)

(assert (=> b!71917 (= e!47053 Unit!2042)))

(declare-fun b!71918 () Bool)

(assert (=> b!71918 (= e!47052 (isDefined!85 (getValueByKey!132 (toList!723 lt!31755) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16233 c!10543) b!71916))

(assert (= (and d!16233 (not c!10543)) b!71917))

(assert (= (and d!16233 (not res!38292)) b!71918))

(declare-fun m!69561 () Bool)

(assert (=> d!16233 m!69561))

(declare-fun m!69563 () Bool)

(assert (=> b!71916 m!69563))

(assert (=> b!71916 m!68859))

(assert (=> b!71916 m!68859))

(declare-fun m!69565 () Bool)

(assert (=> b!71916 m!69565))

(assert (=> b!71918 m!68859))

(assert (=> b!71918 m!68859))

(assert (=> b!71918 m!69565))

(assert (=> d!15991 d!16233))

(declare-fun b!71922 () Bool)

(declare-fun e!47055 () Option!138)

(assert (=> b!71922 (= e!47055 None!136)))

(declare-fun b!71920 () Bool)

(declare-fun e!47054 () Option!138)

(assert (=> b!71920 (= e!47054 e!47055)))

(declare-fun c!10545 () Bool)

(assert (=> b!71920 (= c!10545 (and ((_ is Cons!1472) lt!31756) (not (= (_1!1068 (h!2058 lt!31756)) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!71919 () Bool)

(assert (=> b!71919 (= e!47054 (Some!137 (_2!1068 (h!2058 lt!31756))))))

(declare-fun c!10544 () Bool)

(declare-fun d!16235 () Bool)

(assert (=> d!16235 (= c!10544 (and ((_ is Cons!1472) lt!31756) (= (_1!1068 (h!2058 lt!31756)) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16235 (= (getValueByKey!132 lt!31756 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!47054)))

(declare-fun b!71921 () Bool)

(assert (=> b!71921 (= e!47055 (getValueByKey!132 (t!5012 lt!31756) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16235 c!10544) b!71919))

(assert (= (and d!16235 (not c!10544)) b!71920))

(assert (= (and b!71920 c!10545) b!71921))

(assert (= (and b!71920 (not c!10545)) b!71922))

(declare-fun m!69567 () Bool)

(assert (=> b!71921 m!69567))

(assert (=> d!15991 d!16235))

(declare-fun d!16237 () Bool)

(assert (=> d!16237 (= (getValueByKey!132 lt!31756 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!32028 () Unit!2002)

(assert (=> d!16237 (= lt!32028 (choose!397 lt!31756 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun e!47056 () Bool)

(assert (=> d!16237 e!47056))

(declare-fun res!38293 () Bool)

(assert (=> d!16237 (=> (not res!38293) (not e!47056))))

(assert (=> d!16237 (= res!38293 (isStrictlySorted!291 lt!31756))))

(assert (=> d!16237 (= (lemmaContainsTupThenGetReturnValue!49 lt!31756 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32028)))

(declare-fun b!71923 () Bool)

(declare-fun res!38294 () Bool)

(assert (=> b!71923 (=> (not res!38294) (not e!47056))))

(assert (=> b!71923 (= res!38294 (containsKey!136 lt!31756 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71924 () Bool)

(assert (=> b!71924 (= e!47056 (contains!722 lt!31756 (tuple2!2115 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16237 res!38293) b!71923))

(assert (= (and b!71923 res!38294) b!71924))

(assert (=> d!16237 m!68853))

(declare-fun m!69569 () Bool)

(assert (=> d!16237 m!69569))

(declare-fun m!69571 () Bool)

(assert (=> d!16237 m!69571))

(declare-fun m!69573 () Bool)

(assert (=> b!71923 m!69573))

(declare-fun m!69575 () Bool)

(assert (=> b!71924 m!69575))

(assert (=> d!15991 d!16237))

(declare-fun bm!6248 () Bool)

(declare-fun call!6253 () List!1476)

(declare-fun call!6251 () List!1476)

(assert (=> bm!6248 (= call!6253 call!6251)))

(declare-fun b!71925 () Bool)

(declare-fun e!47058 () List!1476)

(declare-fun call!6252 () List!1476)

(assert (=> b!71925 (= e!47058 call!6252)))

(declare-fun c!10548 () Bool)

(declare-fun e!47057 () List!1476)

(declare-fun bm!6249 () Bool)

(assert (=> bm!6249 (= call!6251 ($colon$colon!65 e!47057 (ite c!10548 (h!2058 (toList!723 lt!31511)) (tuple2!2115 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun c!10549 () Bool)

(assert (=> bm!6249 (= c!10549 c!10548)))

(declare-fun c!10546 () Bool)

(declare-fun b!71927 () Bool)

(assert (=> b!71927 (= c!10546 (and ((_ is Cons!1472) (toList!723 lt!31511)) (bvsgt (_1!1068 (h!2058 (toList!723 lt!31511))) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun e!47061 () List!1476)

(assert (=> b!71927 (= e!47061 e!47058)))

(declare-fun b!71928 () Bool)

(assert (=> b!71928 (= e!47061 call!6253)))

(declare-fun b!71929 () Bool)

(assert (=> b!71929 (= e!47058 call!6252)))

(declare-fun b!71930 () Bool)

(declare-fun e!47060 () List!1476)

(assert (=> b!71930 (= e!47060 e!47061)))

(declare-fun c!10547 () Bool)

(assert (=> b!71930 (= c!10547 (and ((_ is Cons!1472) (toList!723 lt!31511)) (= (_1!1068 (h!2058 (toList!723 lt!31511))) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71931 () Bool)

(declare-fun res!38296 () Bool)

(declare-fun e!47059 () Bool)

(assert (=> b!71931 (=> (not res!38296) (not e!47059))))

(declare-fun lt!32029 () List!1476)

(assert (=> b!71931 (= res!38296 (containsKey!136 lt!32029 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!71932 () Bool)

(assert (=> b!71932 (= e!47059 (contains!722 lt!32029 (tuple2!2115 (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!71933 () Bool)

(assert (=> b!71933 (= e!47057 (ite c!10547 (t!5012 (toList!723 lt!31511)) (ite c!10546 (Cons!1472 (h!2058 (toList!723 lt!31511)) (t!5012 (toList!723 lt!31511))) Nil!1473)))))

(declare-fun b!71926 () Bool)

(assert (=> b!71926 (= e!47060 call!6251)))

(declare-fun d!16239 () Bool)

(assert (=> d!16239 e!47059))

(declare-fun res!38295 () Bool)

(assert (=> d!16239 (=> (not res!38295) (not e!47059))))

(assert (=> d!16239 (= res!38295 (isStrictlySorted!291 lt!32029))))

(assert (=> d!16239 (= lt!32029 e!47060)))

(assert (=> d!16239 (= c!10548 (and ((_ is Cons!1472) (toList!723 lt!31511)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31511))) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16239 (isStrictlySorted!291 (toList!723 lt!31511))))

(assert (=> d!16239 (= (insertStrictlySorted!52 (toList!723 lt!31511) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32029)))

(declare-fun b!71934 () Bool)

(assert (=> b!71934 (= e!47057 (insertStrictlySorted!52 (t!5012 (toList!723 lt!31511)) (_1!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun bm!6250 () Bool)

(assert (=> bm!6250 (= call!6252 call!6253)))

(assert (= (and d!16239 c!10548) b!71926))

(assert (= (and d!16239 (not c!10548)) b!71930))

(assert (= (and b!71930 c!10547) b!71928))

(assert (= (and b!71930 (not c!10547)) b!71927))

(assert (= (and b!71927 c!10546) b!71925))

(assert (= (and b!71927 (not c!10546)) b!71929))

(assert (= (or b!71925 b!71929) bm!6250))

(assert (= (or b!71928 bm!6250) bm!6248))

(assert (= (or b!71926 bm!6248) bm!6249))

(assert (= (and bm!6249 c!10549) b!71934))

(assert (= (and bm!6249 (not c!10549)) b!71933))

(assert (= (and d!16239 res!38295) b!71931))

(assert (= (and b!71931 res!38296) b!71932))

(declare-fun m!69577 () Bool)

(assert (=> b!71931 m!69577))

(declare-fun m!69579 () Bool)

(assert (=> b!71934 m!69579))

(declare-fun m!69581 () Bool)

(assert (=> b!71932 m!69581))

(declare-fun m!69583 () Bool)

(assert (=> bm!6249 m!69583))

(declare-fun m!69585 () Bool)

(assert (=> d!16239 m!69585))

(declare-fun m!69587 () Bool)

(assert (=> d!16239 m!69587))

(assert (=> d!15991 d!16239))

(declare-fun d!16241 () Bool)

(declare-fun e!47062 () Bool)

(assert (=> d!16241 e!47062))

(declare-fun res!38297 () Bool)

(assert (=> d!16241 (=> (not res!38297) (not e!47062))))

(declare-fun lt!32032 () ListLongMap!1415)

(assert (=> d!16241 (= res!38297 (contains!719 lt!32032 (_1!1068 (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(declare-fun lt!32033 () List!1476)

(assert (=> d!16241 (= lt!32032 (ListLongMap!1416 lt!32033))))

(declare-fun lt!32031 () Unit!2002)

(declare-fun lt!32030 () Unit!2002)

(assert (=> d!16241 (= lt!32031 lt!32030)))

(assert (=> d!16241 (= (getValueByKey!132 lt!32033 (_1!1068 (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))) (Some!137 (_2!1068 (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16241 (= lt!32030 (lemmaContainsTupThenGetReturnValue!49 lt!32033 (_1!1068 (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (_2!1068 (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16241 (= lt!32033 (insertStrictlySorted!52 (toList!723 (ite c!10353 call!6172 (ite c!10351 call!6171 call!6174))) (_1!1068 (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (_2!1068 (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(assert (=> d!16241 (= (+!93 (ite c!10353 call!6172 (ite c!10351 call!6171 call!6174)) (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) lt!32032)))

(declare-fun b!71935 () Bool)

(declare-fun res!38298 () Bool)

(assert (=> b!71935 (=> (not res!38298) (not e!47062))))

(assert (=> b!71935 (= res!38298 (= (getValueByKey!132 (toList!723 lt!32032) (_1!1068 (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))) (Some!137 (_2!1068 (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))))

(declare-fun b!71936 () Bool)

(assert (=> b!71936 (= e!47062 (contains!722 (toList!723 lt!32032) (ite (or c!10353 c!10351) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (= (and d!16241 res!38297) b!71935))

(assert (= (and b!71935 res!38298) b!71936))

(declare-fun m!69589 () Bool)

(assert (=> d!16241 m!69589))

(declare-fun m!69591 () Bool)

(assert (=> d!16241 m!69591))

(declare-fun m!69593 () Bool)

(assert (=> d!16241 m!69593))

(declare-fun m!69595 () Bool)

(assert (=> d!16241 m!69595))

(declare-fun m!69597 () Bool)

(assert (=> b!71935 m!69597))

(declare-fun m!69599 () Bool)

(assert (=> b!71936 m!69599))

(assert (=> bm!6169 d!16241))

(declare-fun d!16243 () Bool)

(assert (=> d!16243 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508))))

(declare-fun lt!32034 () Unit!2002)

(assert (=> d!16243 (= lt!32034 (choose!404 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508))))

(declare-fun e!47063 () Bool)

(assert (=> d!16243 e!47063))

(declare-fun res!38299 () Bool)

(assert (=> d!16243 (=> (not res!38299) (not e!47063))))

(assert (=> d!16243 (= res!38299 (isStrictlySorted!291 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16243 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508) lt!32034)))

(declare-fun b!71937 () Bool)

(assert (=> b!71937 (= e!47063 (containsKey!136 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508))))

(assert (= (and d!16243 res!38299) b!71937))

(assert (=> d!16243 m!68871))

(assert (=> d!16243 m!68871))

(assert (=> d!16243 m!68873))

(declare-fun m!69601 () Bool)

(assert (=> d!16243 m!69601))

(declare-fun m!69603 () Bool)

(assert (=> d!16243 m!69603))

(assert (=> b!71937 m!68867))

(assert (=> b!71488 d!16243))

(declare-fun d!16245 () Bool)

(assert (=> d!16245 (= (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508)) (not (isEmpty!314 (getValueByKey!132 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508))))))

(declare-fun bs!3096 () Bool)

(assert (= bs!3096 d!16245))

(assert (=> bs!3096 m!68871))

(declare-fun m!69605 () Bool)

(assert (=> bs!3096 m!69605))

(assert (=> b!71488 d!16245))

(declare-fun b!71941 () Bool)

(declare-fun e!47065 () Option!138)

(assert (=> b!71941 (= e!47065 None!136)))

(declare-fun b!71939 () Bool)

(declare-fun e!47064 () Option!138)

(assert (=> b!71939 (= e!47064 e!47065)))

(declare-fun c!10551 () Bool)

(assert (=> b!71939 (= c!10551 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (not (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31508))))))

(declare-fun b!71938 () Bool)

(assert (=> b!71938 (= e!47064 (Some!137 (_2!1068 (h!2058 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))))

(declare-fun c!10550 () Bool)

(declare-fun d!16247 () Bool)

(assert (=> d!16247 (= c!10550 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31508)))))

(assert (=> d!16247 (= (getValueByKey!132 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31508) e!47064)))

(declare-fun b!71940 () Bool)

(assert (=> b!71940 (= e!47065 (getValueByKey!132 (t!5012 (toList!723 (+!93 lt!31514 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) lt!31508))))

(assert (= (and d!16247 c!10550) b!71938))

(assert (= (and d!16247 (not c!10550)) b!71939))

(assert (= (and b!71939 c!10551) b!71940))

(assert (= (and b!71939 (not c!10551)) b!71941))

(declare-fun m!69607 () Bool)

(assert (=> b!71940 m!69607))

(assert (=> b!71488 d!16247))

(declare-fun d!16249 () Bool)

(declare-fun lt!32035 () Bool)

(assert (=> d!16249 (= lt!32035 (select (content!76 lt!31424) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun e!47066 () Bool)

(assert (=> d!16249 (= lt!32035 e!47066)))

(declare-fun res!38301 () Bool)

(assert (=> d!16249 (=> (not res!38301) (not e!47066))))

(assert (=> d!16249 (= res!38301 ((_ is Cons!1472) lt!31424))))

(assert (=> d!16249 (= (contains!722 lt!31424 (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))) lt!32035)))

(declare-fun b!71942 () Bool)

(declare-fun e!47067 () Bool)

(assert (=> b!71942 (= e!47066 e!47067)))

(declare-fun res!38300 () Bool)

(assert (=> b!71942 (=> res!38300 e!47067)))

(assert (=> b!71942 (= res!38300 (= (h!2058 lt!31424) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun b!71943 () Bool)

(assert (=> b!71943 (= e!47067 (contains!722 (t!5012 lt!31424) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(assert (= (and d!16249 res!38301) b!71942))

(assert (= (and b!71942 (not res!38300)) b!71943))

(declare-fun m!69609 () Bool)

(assert (=> d!16249 m!69609))

(declare-fun m!69611 () Bool)

(assert (=> d!16249 m!69611))

(declare-fun m!69613 () Bool)

(assert (=> b!71943 m!69613))

(assert (=> b!71164 d!16249))

(declare-fun d!16251 () Bool)

(declare-fun c!10552 () Bool)

(assert (=> d!16251 (= c!10552 ((_ is ValueCellFull!891) (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!47068 () V!2939)

(assert (=> d!16251 (= (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47068)))

(declare-fun b!71944 () Bool)

(assert (=> b!71944 (= e!47068 (get!1134 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71945 () Bool)

(assert (=> b!71945 (= e!47068 (get!1135 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16251 c!10552) b!71944))

(assert (= (and d!16251 (not c!10552)) b!71945))

(assert (=> b!71944 m!68979))

(assert (=> b!71944 m!67913))

(declare-fun m!69615 () Bool)

(assert (=> b!71944 m!69615))

(assert (=> b!71945 m!68979))

(assert (=> b!71945 m!67913))

(declare-fun m!69617 () Bool)

(assert (=> b!71945 m!69617))

(assert (=> b!71568 d!16251))

(declare-fun d!16253 () Bool)

(assert (=> d!16253 (not (contains!719 (+!93 lt!31863 (tuple2!2115 lt!31864 lt!31866)) lt!31867))))

(declare-fun lt!32036 () Unit!2002)

(assert (=> d!16253 (= lt!32036 (choose!401 lt!31863 lt!31864 lt!31866 lt!31867))))

(declare-fun e!47069 () Bool)

(assert (=> d!16253 e!47069))

(declare-fun res!38302 () Bool)

(assert (=> d!16253 (=> (not res!38302) (not e!47069))))

(assert (=> d!16253 (= res!38302 (not (contains!719 lt!31863 lt!31867)))))

(assert (=> d!16253 (= (addStillNotContains!23 lt!31863 lt!31864 lt!31866 lt!31867) lt!32036)))

(declare-fun b!71946 () Bool)

(assert (=> b!71946 (= e!47069 (not (= lt!31864 lt!31867)))))

(assert (= (and d!16253 res!38302) b!71946))

(assert (=> d!16253 m!68995))

(assert (=> d!16253 m!68995))

(assert (=> d!16253 m!68997))

(declare-fun m!69619 () Bool)

(assert (=> d!16253 m!69619))

(declare-fun m!69621 () Bool)

(assert (=> d!16253 m!69621))

(assert (=> b!71568 d!16253))

(declare-fun d!16255 () Bool)

(declare-fun e!47070 () Bool)

(assert (=> d!16255 e!47070))

(declare-fun res!38303 () Bool)

(assert (=> d!16255 (=> res!38303 e!47070)))

(declare-fun lt!32039 () Bool)

(assert (=> d!16255 (= res!38303 (not lt!32039))))

(declare-fun lt!32038 () Bool)

(assert (=> d!16255 (= lt!32039 lt!32038)))

(declare-fun lt!32037 () Unit!2002)

(declare-fun e!47071 () Unit!2002)

(assert (=> d!16255 (= lt!32037 e!47071)))

(declare-fun c!10553 () Bool)

(assert (=> d!16255 (= c!10553 lt!32038)))

(assert (=> d!16255 (= lt!32038 (containsKey!136 (toList!723 (+!93 lt!31863 (tuple2!2115 lt!31864 lt!31866))) lt!31867))))

(assert (=> d!16255 (= (contains!719 (+!93 lt!31863 (tuple2!2115 lt!31864 lt!31866)) lt!31867) lt!32039)))

(declare-fun b!71947 () Bool)

(declare-fun lt!32040 () Unit!2002)

(assert (=> b!71947 (= e!47071 lt!32040)))

(assert (=> b!71947 (= lt!32040 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (+!93 lt!31863 (tuple2!2115 lt!31864 lt!31866))) lt!31867))))

(assert (=> b!71947 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31863 (tuple2!2115 lt!31864 lt!31866))) lt!31867))))

(declare-fun b!71948 () Bool)

(declare-fun Unit!2043 () Unit!2002)

(assert (=> b!71948 (= e!47071 Unit!2043)))

(declare-fun b!71949 () Bool)

(assert (=> b!71949 (= e!47070 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31863 (tuple2!2115 lt!31864 lt!31866))) lt!31867)))))

(assert (= (and d!16255 c!10553) b!71947))

(assert (= (and d!16255 (not c!10553)) b!71948))

(assert (= (and d!16255 (not res!38303)) b!71949))

(declare-fun m!69623 () Bool)

(assert (=> d!16255 m!69623))

(declare-fun m!69625 () Bool)

(assert (=> b!71947 m!69625))

(declare-fun m!69627 () Bool)

(assert (=> b!71947 m!69627))

(assert (=> b!71947 m!69627))

(declare-fun m!69629 () Bool)

(assert (=> b!71947 m!69629))

(assert (=> b!71949 m!69627))

(assert (=> b!71949 m!69627))

(assert (=> b!71949 m!69629))

(assert (=> b!71568 d!16255))

(declare-fun d!16257 () Bool)

(declare-fun e!47072 () Bool)

(assert (=> d!16257 e!47072))

(declare-fun res!38304 () Bool)

(assert (=> d!16257 (=> (not res!38304) (not e!47072))))

(declare-fun lt!32043 () ListLongMap!1415)

(assert (=> d!16257 (= res!38304 (contains!719 lt!32043 (_1!1068 (tuple2!2115 lt!31864 lt!31866))))))

(declare-fun lt!32044 () List!1476)

(assert (=> d!16257 (= lt!32043 (ListLongMap!1416 lt!32044))))

(declare-fun lt!32042 () Unit!2002)

(declare-fun lt!32041 () Unit!2002)

(assert (=> d!16257 (= lt!32042 lt!32041)))

(assert (=> d!16257 (= (getValueByKey!132 lt!32044 (_1!1068 (tuple2!2115 lt!31864 lt!31866))) (Some!137 (_2!1068 (tuple2!2115 lt!31864 lt!31866))))))

(assert (=> d!16257 (= lt!32041 (lemmaContainsTupThenGetReturnValue!49 lt!32044 (_1!1068 (tuple2!2115 lt!31864 lt!31866)) (_2!1068 (tuple2!2115 lt!31864 lt!31866))))))

(assert (=> d!16257 (= lt!32044 (insertStrictlySorted!52 (toList!723 lt!31863) (_1!1068 (tuple2!2115 lt!31864 lt!31866)) (_2!1068 (tuple2!2115 lt!31864 lt!31866))))))

(assert (=> d!16257 (= (+!93 lt!31863 (tuple2!2115 lt!31864 lt!31866)) lt!32043)))

(declare-fun b!71950 () Bool)

(declare-fun res!38305 () Bool)

(assert (=> b!71950 (=> (not res!38305) (not e!47072))))

(assert (=> b!71950 (= res!38305 (= (getValueByKey!132 (toList!723 lt!32043) (_1!1068 (tuple2!2115 lt!31864 lt!31866))) (Some!137 (_2!1068 (tuple2!2115 lt!31864 lt!31866)))))))

(declare-fun b!71951 () Bool)

(assert (=> b!71951 (= e!47072 (contains!722 (toList!723 lt!32043) (tuple2!2115 lt!31864 lt!31866)))))

(assert (= (and d!16257 res!38304) b!71950))

(assert (= (and b!71950 res!38305) b!71951))

(declare-fun m!69631 () Bool)

(assert (=> d!16257 m!69631))

(declare-fun m!69633 () Bool)

(assert (=> d!16257 m!69633))

(declare-fun m!69635 () Bool)

(assert (=> d!16257 m!69635))

(declare-fun m!69637 () Bool)

(assert (=> d!16257 m!69637))

(declare-fun m!69639 () Bool)

(assert (=> b!71950 m!69639))

(declare-fun m!69641 () Bool)

(assert (=> b!71951 m!69641))

(assert (=> b!71568 d!16257))

(declare-fun d!16259 () Bool)

(declare-fun e!47073 () Bool)

(assert (=> d!16259 e!47073))

(declare-fun res!38306 () Bool)

(assert (=> d!16259 (=> (not res!38306) (not e!47073))))

(declare-fun lt!32047 () ListLongMap!1415)

(assert (=> d!16259 (= res!38306 (contains!719 lt!32047 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!32048 () List!1476)

(assert (=> d!16259 (= lt!32047 (ListLongMap!1416 lt!32048))))

(declare-fun lt!32046 () Unit!2002)

(declare-fun lt!32045 () Unit!2002)

(assert (=> d!16259 (= lt!32046 lt!32045)))

(assert (=> d!16259 (= (getValueByKey!132 lt!32048 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16259 (= lt!32045 (lemmaContainsTupThenGetReturnValue!49 lt!32048 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16259 (= lt!32048 (insertStrictlySorted!52 (toList!723 call!6220) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16259 (= (+!93 call!6220 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!32047)))

(declare-fun b!71952 () Bool)

(declare-fun res!38307 () Bool)

(assert (=> b!71952 (=> (not res!38307) (not e!47073))))

(assert (=> b!71952 (= res!38307 (= (getValueByKey!132 (toList!723 lt!32047) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!71953 () Bool)

(assert (=> b!71953 (= e!47073 (contains!722 (toList!723 lt!32047) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16259 res!38306) b!71952))

(assert (= (and b!71952 res!38307) b!71953))

(declare-fun m!69643 () Bool)

(assert (=> d!16259 m!69643))

(declare-fun m!69645 () Bool)

(assert (=> d!16259 m!69645))

(declare-fun m!69647 () Bool)

(assert (=> d!16259 m!69647))

(declare-fun m!69649 () Bool)

(assert (=> d!16259 m!69649))

(declare-fun m!69651 () Bool)

(assert (=> b!71952 m!69651))

(declare-fun m!69653 () Bool)

(assert (=> b!71953 m!69653))

(assert (=> b!71568 d!16259))

(declare-fun d!16261 () Bool)

(declare-fun res!38308 () Bool)

(declare-fun e!47074 () Bool)

(assert (=> d!16261 (=> res!38308 e!47074)))

(assert (=> d!16261 (= res!38308 (and ((_ is Cons!1472) lt!31574) (= (_1!1068 (h!2058 lt!31574)) (_1!1068 lt!31265))))))

(assert (=> d!16261 (= (containsKey!136 lt!31574 (_1!1068 lt!31265)) e!47074)))

(declare-fun b!71954 () Bool)

(declare-fun e!47075 () Bool)

(assert (=> b!71954 (= e!47074 e!47075)))

(declare-fun res!38309 () Bool)

(assert (=> b!71954 (=> (not res!38309) (not e!47075))))

(assert (=> b!71954 (= res!38309 (and (or (not ((_ is Cons!1472) lt!31574)) (bvsle (_1!1068 (h!2058 lt!31574)) (_1!1068 lt!31265))) ((_ is Cons!1472) lt!31574) (bvslt (_1!1068 (h!2058 lt!31574)) (_1!1068 lt!31265))))))

(declare-fun b!71955 () Bool)

(assert (=> b!71955 (= e!47075 (containsKey!136 (t!5012 lt!31574) (_1!1068 lt!31265)))))

(assert (= (and d!16261 (not res!38308)) b!71954))

(assert (= (and b!71954 res!38309) b!71955))

(declare-fun m!69655 () Bool)

(assert (=> b!71955 m!69655))

(assert (=> b!71244 d!16261))

(declare-fun d!16263 () Bool)

(assert (=> d!16263 (= (get!1136 (getValueByKey!132 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2518 (getValueByKey!132 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16025 d!16263))

(declare-fun b!71959 () Bool)

(declare-fun e!47077 () Option!138)

(assert (=> b!71959 (= e!47077 None!136)))

(declare-fun b!71957 () Bool)

(declare-fun e!47076 () Option!138)

(assert (=> b!71957 (= e!47076 e!47077)))

(declare-fun c!10555 () Bool)

(assert (=> b!71957 (= c!10555 (and ((_ is Cons!1472) (toList!723 lt!31522)) (not (= (_1!1068 (h!2058 (toList!723 lt!31522))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!71956 () Bool)

(assert (=> b!71956 (= e!47076 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31522)))))))

(declare-fun d!16265 () Bool)

(declare-fun c!10554 () Bool)

(assert (=> d!16265 (= c!10554 (and ((_ is Cons!1472) (toList!723 lt!31522)) (= (_1!1068 (h!2058 (toList!723 lt!31522))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16265 (= (getValueByKey!132 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47076)))

(declare-fun b!71958 () Bool)

(assert (=> b!71958 (= e!47077 (getValueByKey!132 (t!5012 (toList!723 lt!31522)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16265 c!10554) b!71956))

(assert (= (and d!16265 (not c!10554)) b!71957))

(assert (= (and b!71957 c!10555) b!71958))

(assert (= (and b!71957 (not c!10555)) b!71959))

(assert (=> b!71958 m!68007))

(declare-fun m!69657 () Bool)

(assert (=> b!71958 m!69657))

(assert (=> d!16025 d!16265))

(declare-fun d!16267 () Bool)

(assert (=> d!16267 (isDefined!85 (getValueByKey!132 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))

(declare-fun lt!32049 () Unit!2002)

(assert (=> d!16267 (= lt!32049 (choose!404 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))

(declare-fun e!47078 () Bool)

(assert (=> d!16267 e!47078))

(declare-fun res!38310 () Bool)

(assert (=> d!16267 (=> (not res!38310) (not e!47078))))

(assert (=> d!16267 (= res!38310 (isStrictlySorted!291 (toList!723 e!46499)))))

(assert (=> d!16267 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))) lt!32049)))

(declare-fun b!71960 () Bool)

(assert (=> b!71960 (= e!47078 (containsKey!136 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))

(assert (= (and d!16267 res!38310) b!71960))

(assert (=> d!16267 m!68655))

(assert (=> d!16267 m!68655))

(assert (=> d!16267 m!68657))

(declare-fun m!69659 () Bool)

(assert (=> d!16267 m!69659))

(declare-fun m!69661 () Bool)

(assert (=> d!16267 m!69661))

(assert (=> b!71960 m!68651))

(assert (=> b!71399 d!16267))

(declare-fun d!16269 () Bool)

(assert (=> d!16269 (= (isDefined!85 (getValueByKey!132 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))))) (not (isEmpty!314 (getValueByKey!132 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))))

(declare-fun bs!3097 () Bool)

(assert (= bs!3097 d!16269))

(assert (=> bs!3097 m!68655))

(declare-fun m!69663 () Bool)

(assert (=> bs!3097 m!69663))

(assert (=> b!71399 d!16269))

(declare-fun b!71964 () Bool)

(declare-fun e!47080 () Option!138)

(assert (=> b!71964 (= e!47080 None!136)))

(declare-fun b!71962 () Bool)

(declare-fun e!47079 () Option!138)

(assert (=> b!71962 (= e!47079 e!47080)))

(declare-fun c!10557 () Bool)

(assert (=> b!71962 (= c!10557 (and ((_ is Cons!1472) (toList!723 e!46499)) (not (= (_1!1068 (h!2058 (toList!723 e!46499))) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))))

(declare-fun b!71961 () Bool)

(assert (=> b!71961 (= e!47079 (Some!137 (_2!1068 (h!2058 (toList!723 e!46499)))))))

(declare-fun d!16271 () Bool)

(declare-fun c!10556 () Bool)

(assert (=> d!16271 (= c!10556 (and ((_ is Cons!1472) (toList!723 e!46499)) (= (_1!1068 (h!2058 (toList!723 e!46499))) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))))))))

(assert (=> d!16271 (= (getValueByKey!132 (toList!723 e!46499) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))) e!47079)))

(declare-fun b!71963 () Bool)

(assert (=> b!71963 (= e!47080 (getValueByKey!132 (t!5012 (toList!723 e!46499)) (ite c!10290 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))

(assert (= (and d!16271 c!10556) b!71961))

(assert (= (and d!16271 (not c!10556)) b!71962))

(assert (= (and b!71962 c!10557) b!71963))

(assert (= (and b!71962 (not c!10557)) b!71964))

(declare-fun m!69665 () Bool)

(assert (=> b!71963 m!69665))

(assert (=> b!71399 d!16271))

(declare-fun d!16273 () Bool)

(declare-fun lt!32050 () Bool)

(assert (=> d!16273 (= lt!32050 (select (content!76 lt!31449) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun e!47081 () Bool)

(assert (=> d!16273 (= lt!32050 e!47081)))

(declare-fun res!38312 () Bool)

(assert (=> d!16273 (=> (not res!38312) (not e!47081))))

(assert (=> d!16273 (= res!38312 ((_ is Cons!1472) lt!31449))))

(assert (=> d!16273 (= (contains!722 lt!31449 (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))) lt!32050)))

(declare-fun b!71965 () Bool)

(declare-fun e!47082 () Bool)

(assert (=> b!71965 (= e!47081 e!47082)))

(declare-fun res!38311 () Bool)

(assert (=> b!71965 (=> res!38311 e!47082)))

(assert (=> b!71965 (= res!38311 (= (h!2058 lt!31449) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun b!71966 () Bool)

(assert (=> b!71966 (= e!47082 (contains!722 (t!5012 lt!31449) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(assert (= (and d!16273 res!38312) b!71965))

(assert (= (and b!71965 (not res!38311)) b!71966))

(declare-fun m!69667 () Bool)

(assert (=> d!16273 m!69667))

(declare-fun m!69669 () Bool)

(assert (=> d!16273 m!69669))

(declare-fun m!69671 () Bool)

(assert (=> b!71966 m!69671))

(assert (=> b!71267 d!16273))

(declare-fun d!16275 () Bool)

(declare-fun res!38313 () Bool)

(declare-fun e!47083 () Bool)

(assert (=> d!16275 (=> res!38313 e!47083)))

(assert (=> d!16275 (= res!38313 (and ((_ is Cons!1472) (toList!723 lt!31522)) (= (_1!1068 (h!2058 (toList!723 lt!31522))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16275 (= (containsKey!136 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47083)))

(declare-fun b!71967 () Bool)

(declare-fun e!47084 () Bool)

(assert (=> b!71967 (= e!47083 e!47084)))

(declare-fun res!38314 () Bool)

(assert (=> b!71967 (=> (not res!38314) (not e!47084))))

(assert (=> b!71967 (= res!38314 (and (or (not ((_ is Cons!1472) (toList!723 lt!31522))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31522))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1472) (toList!723 lt!31522)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31522))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!71968 () Bool)

(assert (=> b!71968 (= e!47084 (containsKey!136 (t!5012 (toList!723 lt!31522)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16275 (not res!38313)) b!71967))

(assert (= (and b!71967 res!38314) b!71968))

(assert (=> b!71968 m!68007))

(declare-fun m!69673 () Bool)

(assert (=> b!71968 m!69673))

(assert (=> d!16041 d!16275))

(declare-fun d!16277 () Bool)

(assert (=> d!16277 (= (get!1136 (getValueByKey!132 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2518 (getValueByKey!132 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16015 d!16277))

(declare-fun b!71972 () Bool)

(declare-fun e!47086 () Option!138)

(assert (=> b!71972 (= e!47086 None!136)))

(declare-fun b!71970 () Bool)

(declare-fun e!47085 () Option!138)

(assert (=> b!71970 (= e!47085 e!47086)))

(declare-fun c!10559 () Bool)

(assert (=> b!71970 (= c!10559 (and ((_ is Cons!1472) (toList!723 lt!31522)) (not (= (_1!1068 (h!2058 (toList!723 lt!31522))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71969 () Bool)

(assert (=> b!71969 (= e!47085 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31522)))))))

(declare-fun d!16279 () Bool)

(declare-fun c!10558 () Bool)

(assert (=> d!16279 (= c!10558 (and ((_ is Cons!1472) (toList!723 lt!31522)) (= (_1!1068 (h!2058 (toList!723 lt!31522))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16279 (= (getValueByKey!132 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000) e!47085)))

(declare-fun b!71971 () Bool)

(assert (=> b!71971 (= e!47086 (getValueByKey!132 (t!5012 (toList!723 lt!31522)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16279 c!10558) b!71969))

(assert (= (and d!16279 (not c!10558)) b!71970))

(assert (= (and b!71970 c!10559) b!71971))

(assert (= (and b!71970 (not c!10559)) b!71972))

(declare-fun m!69675 () Bool)

(assert (=> b!71971 m!69675))

(assert (=> d!16015 d!16279))

(declare-fun d!16281 () Bool)

(declare-fun res!38315 () Bool)

(declare-fun e!47087 () Bool)

(assert (=> d!16281 (=> res!38315 e!47087)))

(assert (=> d!16281 (= res!38315 (and ((_ is Cons!1472) lt!31603) (= (_1!1068 (h!2058 lt!31603)) (_1!1068 lt!31269))))))

(assert (=> d!16281 (= (containsKey!136 lt!31603 (_1!1068 lt!31269)) e!47087)))

(declare-fun b!71973 () Bool)

(declare-fun e!47088 () Bool)

(assert (=> b!71973 (= e!47087 e!47088)))

(declare-fun res!38316 () Bool)

(assert (=> b!71973 (=> (not res!38316) (not e!47088))))

(assert (=> b!71973 (= res!38316 (and (or (not ((_ is Cons!1472) lt!31603)) (bvsle (_1!1068 (h!2058 lt!31603)) (_1!1068 lt!31269))) ((_ is Cons!1472) lt!31603) (bvslt (_1!1068 (h!2058 lt!31603)) (_1!1068 lt!31269))))))

(declare-fun b!71974 () Bool)

(assert (=> b!71974 (= e!47088 (containsKey!136 (t!5012 lt!31603) (_1!1068 lt!31269)))))

(assert (= (and d!16281 (not res!38315)) b!71973))

(assert (= (and b!71973 res!38316) b!71974))

(declare-fun m!69677 () Bool)

(assert (=> b!71974 m!69677))

(assert (=> b!71274 d!16281))

(declare-fun d!16283 () Bool)

(assert (=> d!16283 (= (get!1136 (getValueByKey!132 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2518 (getValueByKey!132 (toList!723 lt!31522) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16011 d!16283))

(assert (=> d!16011 d!16231))

(declare-fun d!16285 () Bool)

(declare-fun e!47089 () Bool)

(assert (=> d!16285 e!47089))

(declare-fun res!38317 () Bool)

(assert (=> d!16285 (=> res!38317 e!47089)))

(declare-fun lt!32053 () Bool)

(assert (=> d!16285 (= res!38317 (not lt!32053))))

(declare-fun lt!32052 () Bool)

(assert (=> d!16285 (= lt!32053 lt!32052)))

(declare-fun lt!32051 () Unit!2002)

(declare-fun e!47090 () Unit!2002)

(assert (=> d!16285 (= lt!32051 e!47090)))

(declare-fun c!10560 () Bool)

(assert (=> d!16285 (= c!10560 lt!32052)))

(assert (=> d!16285 (= lt!32052 (containsKey!136 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))))))

(assert (=> d!16285 (= (contains!719 (getCurrentListMap!421 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))) lt!32053)))

(declare-fun b!71975 () Bool)

(declare-fun lt!32054 () Unit!2002)

(assert (=> b!71975 (= e!47090 lt!32054)))

(assert (=> b!71975 (= lt!32054 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))))))

(assert (=> b!71975 (isDefined!85 (getValueByKey!132 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406))))))

(declare-fun b!71976 () Bool)

(declare-fun Unit!2044 () Unit!2002)

(assert (=> b!71976 (= e!47090 Unit!2044)))

(declare-fun b!71977 () Bool)

(assert (=> b!71977 (= e!47089 (isDefined!85 (getValueByKey!132 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))))

(assert (= (and d!16285 c!10560) b!71975))

(assert (= (and d!16285 (not c!10560)) b!71976))

(assert (= (and d!16285 (not res!38317)) b!71977))

(assert (=> d!16285 m!68043))

(declare-fun m!69679 () Bool)

(assert (=> d!16285 m!69679))

(assert (=> b!71975 m!68043))

(declare-fun m!69681 () Bool)

(assert (=> b!71975 m!69681))

(assert (=> b!71975 m!68043))

(declare-fun m!69683 () Bool)

(assert (=> b!71975 m!69683))

(assert (=> b!71975 m!69683))

(declare-fun m!69685 () Bool)

(assert (=> b!71975 m!69685))

(assert (=> b!71977 m!68043))

(assert (=> b!71977 m!69683))

(assert (=> b!71977 m!69683))

(assert (=> b!71977 m!69685))

(assert (=> b!71197 d!16285))

(declare-fun b!71978 () Bool)

(declare-fun c!10562 () Bool)

(assert (=> b!71978 (= c!10562 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47100 () ListLongMap!1415)

(declare-fun e!47098 () ListLongMap!1415)

(assert (=> b!71978 (= e!47100 e!47098)))

(declare-fun b!71979 () Bool)

(declare-fun e!47096 () Bool)

(declare-fun e!47091 () Bool)

(assert (=> b!71979 (= e!47096 e!47091)))

(declare-fun res!38325 () Bool)

(declare-fun call!6256 () Bool)

(assert (=> b!71979 (= res!38325 call!6256)))

(assert (=> b!71979 (=> (not res!38325) (not e!47091))))

(declare-fun b!71980 () Bool)

(declare-fun e!47093 () Bool)

(declare-fun lt!32072 () ListLongMap!1415)

(assert (=> b!71980 (= e!47093 (= (apply!74 lt!32072 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!71981 () Bool)

(declare-fun e!47097 () Bool)

(assert (=> b!71981 (= e!47097 e!47093)))

(declare-fun res!38324 () Bool)

(declare-fun call!6254 () Bool)

(assert (=> b!71981 (= res!38324 call!6254)))

(assert (=> b!71981 (=> (not res!38324) (not e!47093))))

(declare-fun bm!6251 () Bool)

(assert (=> bm!6251 (= call!6256 (contains!719 lt!32072 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6252 () Bool)

(declare-fun call!6257 () ListLongMap!1415)

(declare-fun call!6258 () ListLongMap!1415)

(assert (=> bm!6252 (= call!6257 call!6258)))

(declare-fun b!71983 () Bool)

(declare-fun call!6260 () ListLongMap!1415)

(assert (=> b!71983 (= e!47098 call!6260)))

(declare-fun b!71984 () Bool)

(declare-fun e!47103 () Bool)

(assert (=> b!71984 (= e!47103 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6253 () Bool)

(declare-fun call!6255 () ListLongMap!1415)

(declare-fun call!6259 () ListLongMap!1415)

(assert (=> bm!6253 (= call!6255 call!6259)))

(declare-fun b!71985 () Bool)

(declare-fun e!47099 () Unit!2002)

(declare-fun lt!32075 () Unit!2002)

(assert (=> b!71985 (= e!47099 lt!32075)))

(declare-fun lt!32064 () ListLongMap!1415)

(assert (=> b!71985 (= lt!32064 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32073 () (_ BitVec 64))

(assert (=> b!71985 (= lt!32073 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32058 () (_ BitVec 64))

(assert (=> b!71985 (= lt!32058 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32070 () Unit!2002)

(assert (=> b!71985 (= lt!32070 (addStillContains!50 lt!32064 lt!32073 (zeroValue!2096 newMap!16) lt!32058))))

(assert (=> b!71985 (contains!719 (+!93 lt!32064 (tuple2!2115 lt!32073 (zeroValue!2096 newMap!16))) lt!32058)))

(declare-fun lt!32076 () Unit!2002)

(assert (=> b!71985 (= lt!32076 lt!32070)))

(declare-fun lt!32057 () ListLongMap!1415)

(assert (=> b!71985 (= lt!32057 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32063 () (_ BitVec 64))

(assert (=> b!71985 (= lt!32063 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32067 () (_ BitVec 64))

(assert (=> b!71985 (= lt!32067 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32069 () Unit!2002)

(assert (=> b!71985 (= lt!32069 (addApplyDifferent!50 lt!32057 lt!32063 (minValue!2096 newMap!16) lt!32067))))

(assert (=> b!71985 (= (apply!74 (+!93 lt!32057 (tuple2!2115 lt!32063 (minValue!2096 newMap!16))) lt!32067) (apply!74 lt!32057 lt!32067))))

(declare-fun lt!32074 () Unit!2002)

(assert (=> b!71985 (= lt!32074 lt!32069)))

(declare-fun lt!32071 () ListLongMap!1415)

(assert (=> b!71985 (= lt!32071 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32065 () (_ BitVec 64))

(assert (=> b!71985 (= lt!32065 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32059 () (_ BitVec 64))

(assert (=> b!71985 (= lt!32059 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32062 () Unit!2002)

(assert (=> b!71985 (= lt!32062 (addApplyDifferent!50 lt!32071 lt!32065 (zeroValue!2096 newMap!16) lt!32059))))

(assert (=> b!71985 (= (apply!74 (+!93 lt!32071 (tuple2!2115 lt!32065 (zeroValue!2096 newMap!16))) lt!32059) (apply!74 lt!32071 lt!32059))))

(declare-fun lt!32066 () Unit!2002)

(assert (=> b!71985 (= lt!32066 lt!32062)))

(declare-fun lt!32061 () ListLongMap!1415)

(assert (=> b!71985 (= lt!32061 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32056 () (_ BitVec 64))

(assert (=> b!71985 (= lt!32056 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32060 () (_ BitVec 64))

(assert (=> b!71985 (= lt!32060 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71985 (= lt!32075 (addApplyDifferent!50 lt!32061 lt!32056 (minValue!2096 newMap!16) lt!32060))))

(assert (=> b!71985 (= (apply!74 (+!93 lt!32061 (tuple2!2115 lt!32056 (minValue!2096 newMap!16))) lt!32060) (apply!74 lt!32061 lt!32060))))

(declare-fun b!71986 () Bool)

(declare-fun e!47101 () Bool)

(declare-fun e!47092 () Bool)

(assert (=> b!71986 (= e!47101 e!47092)))

(declare-fun res!38323 () Bool)

(assert (=> b!71986 (=> (not res!38323) (not e!47092))))

(assert (=> b!71986 (= res!38323 (contains!719 lt!32072 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71986 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71987 () Bool)

(assert (=> b!71987 (= e!47097 (not call!6254))))

(declare-fun b!71988 () Bool)

(declare-fun e!47102 () Bool)

(assert (=> b!71988 (= e!47102 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71989 () Bool)

(assert (=> b!71989 (= e!47100 call!6255)))

(declare-fun b!71990 () Bool)

(declare-fun e!47095 () ListLongMap!1415)

(assert (=> b!71990 (= e!47095 e!47100)))

(declare-fun c!10564 () Bool)

(assert (=> b!71990 (= c!10564 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6254 () Bool)

(assert (=> bm!6254 (= call!6254 (contains!719 lt!32072 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71991 () Bool)

(assert (=> b!71991 (= e!47092 (= (apply!74 lt!32072 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 lt!31387) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71991 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 lt!31387)))))

(assert (=> b!71991 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71982 () Bool)

(assert (=> b!71982 (= e!47096 (not call!6256))))

(declare-fun d!16287 () Bool)

(declare-fun e!47094 () Bool)

(assert (=> d!16287 e!47094))

(declare-fun res!38321 () Bool)

(assert (=> d!16287 (=> (not res!38321) (not e!47094))))

(assert (=> d!16287 (= res!38321 (or (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))))

(declare-fun lt!32055 () ListLongMap!1415)

(assert (=> d!16287 (= lt!32072 lt!32055)))

(declare-fun lt!32068 () Unit!2002)

(assert (=> d!16287 (= lt!32068 e!47099)))

(declare-fun c!10565 () Bool)

(assert (=> d!16287 (= c!10565 e!47103)))

(declare-fun res!38326 () Bool)

(assert (=> d!16287 (=> (not res!38326) (not e!47103))))

(assert (=> d!16287 (= res!38326 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16287 (= lt!32055 e!47095)))

(declare-fun c!10566 () Bool)

(assert (=> d!16287 (= c!10566 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16287 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16287 (= (getCurrentListMap!421 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32072)))

(declare-fun b!71992 () Bool)

(declare-fun Unit!2045 () Unit!2002)

(assert (=> b!71992 (= e!47099 Unit!2045)))

(declare-fun b!71993 () Bool)

(assert (=> b!71993 (= e!47091 (= (apply!74 lt!32072 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun bm!6255 () Bool)

(assert (=> bm!6255 (= call!6259 (+!93 (ite c!10566 call!6258 (ite c!10564 call!6257 call!6260)) (ite (or c!10566 c!10564) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun b!71994 () Bool)

(declare-fun res!38322 () Bool)

(assert (=> b!71994 (=> (not res!38322) (not e!47094))))

(assert (=> b!71994 (= res!38322 e!47097)))

(declare-fun c!10563 () Bool)

(assert (=> b!71994 (= c!10563 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6256 () Bool)

(assert (=> bm!6256 (= call!6258 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!71995 () Bool)

(assert (=> b!71995 (= e!47095 (+!93 call!6259 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun bm!6257 () Bool)

(assert (=> bm!6257 (= call!6260 call!6257)))

(declare-fun b!71996 () Bool)

(assert (=> b!71996 (= e!47098 call!6255)))

(declare-fun b!71997 () Bool)

(declare-fun res!38319 () Bool)

(assert (=> b!71997 (=> (not res!38319) (not e!47094))))

(assert (=> b!71997 (= res!38319 e!47101)))

(declare-fun res!38320 () Bool)

(assert (=> b!71997 (=> res!38320 e!47101)))

(assert (=> b!71997 (= res!38320 (not e!47102))))

(declare-fun res!38318 () Bool)

(assert (=> b!71997 (=> (not res!38318) (not e!47102))))

(assert (=> b!71997 (= res!38318 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!71998 () Bool)

(assert (=> b!71998 (= e!47094 e!47096)))

(declare-fun c!10561 () Bool)

(assert (=> b!71998 (= c!10561 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!16287 c!10566) b!71995))

(assert (= (and d!16287 (not c!10566)) b!71990))

(assert (= (and b!71990 c!10564) b!71989))

(assert (= (and b!71990 (not c!10564)) b!71978))

(assert (= (and b!71978 c!10562) b!71996))

(assert (= (and b!71978 (not c!10562)) b!71983))

(assert (= (or b!71996 b!71983) bm!6257))

(assert (= (or b!71989 bm!6257) bm!6252))

(assert (= (or b!71989 b!71996) bm!6253))

(assert (= (or b!71995 bm!6252) bm!6256))

(assert (= (or b!71995 bm!6253) bm!6255))

(assert (= (and d!16287 res!38326) b!71984))

(assert (= (and d!16287 c!10565) b!71985))

(assert (= (and d!16287 (not c!10565)) b!71992))

(assert (= (and d!16287 res!38321) b!71997))

(assert (= (and b!71997 res!38318) b!71988))

(assert (= (and b!71997 (not res!38320)) b!71986))

(assert (= (and b!71986 res!38323) b!71991))

(assert (= (and b!71997 res!38319) b!71994))

(assert (= (and b!71994 c!10563) b!71981))

(assert (= (and b!71994 (not c!10563)) b!71987))

(assert (= (and b!71981 res!38324) b!71980))

(assert (= (or b!71981 b!71987) bm!6254))

(assert (= (and b!71994 res!38322) b!71998))

(assert (= (and b!71998 c!10561) b!71979))

(assert (= (and b!71998 (not c!10561)) b!71982))

(assert (= (and b!71979 res!38325) b!71993))

(assert (= (or b!71979 b!71982) bm!6251))

(declare-fun b_lambda!3225 () Bool)

(assert (=> (not b_lambda!3225) (not b!71991)))

(assert (=> b!71991 t!5019))

(declare-fun b_and!4427 () Bool)

(assert (= b_and!4423 (and (=> t!5019 result!2665) b_and!4427)))

(assert (=> b!71991 t!5021))

(declare-fun b_and!4429 () Bool)

(assert (= b_and!4425 (and (=> t!5021 result!2667) b_and!4429)))

(assert (=> b!71986 m!68283))

(assert (=> b!71986 m!68283))

(declare-fun m!69687 () Bool)

(assert (=> b!71986 m!69687))

(assert (=> b!71991 m!68287))

(assert (=> b!71991 m!68283))

(declare-fun m!69689 () Bool)

(assert (=> b!71991 m!69689))

(assert (=> b!71991 m!68283))

(declare-fun m!69691 () Bool)

(assert (=> b!71991 m!69691))

(assert (=> b!71991 m!69691))

(assert (=> b!71991 m!68287))

(declare-fun m!69693 () Bool)

(assert (=> b!71991 m!69693))

(declare-fun m!69695 () Bool)

(assert (=> bm!6256 m!69695))

(assert (=> b!71984 m!68283))

(assert (=> b!71984 m!68283))

(assert (=> b!71984 m!68297))

(declare-fun m!69697 () Bool)

(assert (=> b!71980 m!69697))

(declare-fun m!69699 () Bool)

(assert (=> bm!6255 m!69699))

(declare-fun m!69701 () Bool)

(assert (=> b!71993 m!69701))

(declare-fun m!69703 () Bool)

(assert (=> b!71995 m!69703))

(assert (=> d!16287 m!68263))

(declare-fun m!69705 () Bool)

(assert (=> bm!6251 m!69705))

(declare-fun m!69707 () Bool)

(assert (=> b!71985 m!69707))

(declare-fun m!69709 () Bool)

(assert (=> b!71985 m!69709))

(declare-fun m!69711 () Bool)

(assert (=> b!71985 m!69711))

(declare-fun m!69713 () Bool)

(assert (=> b!71985 m!69713))

(assert (=> b!71985 m!69707))

(declare-fun m!69715 () Bool)

(assert (=> b!71985 m!69715))

(declare-fun m!69717 () Bool)

(assert (=> b!71985 m!69717))

(declare-fun m!69719 () Bool)

(assert (=> b!71985 m!69719))

(declare-fun m!69721 () Bool)

(assert (=> b!71985 m!69721))

(assert (=> b!71985 m!68283))

(declare-fun m!69723 () Bool)

(assert (=> b!71985 m!69723))

(assert (=> b!71985 m!69695))

(assert (=> b!71985 m!69709))

(declare-fun m!69725 () Bool)

(assert (=> b!71985 m!69725))

(declare-fun m!69727 () Bool)

(assert (=> b!71985 m!69727))

(assert (=> b!71985 m!69721))

(declare-fun m!69729 () Bool)

(assert (=> b!71985 m!69729))

(declare-fun m!69731 () Bool)

(assert (=> b!71985 m!69731))

(declare-fun m!69733 () Bool)

(assert (=> b!71985 m!69733))

(assert (=> b!71985 m!69731))

(declare-fun m!69735 () Bool)

(assert (=> b!71985 m!69735))

(declare-fun m!69737 () Bool)

(assert (=> bm!6254 m!69737))

(assert (=> b!71988 m!68283))

(assert (=> b!71988 m!68283))

(assert (=> b!71988 m!68297))

(assert (=> b!71197 d!16287))

(assert (=> d!15959 d!15945))

(declare-fun d!16289 () Bool)

(declare-fun e!47106 () Bool)

(assert (=> d!16289 e!47106))

(declare-fun res!38331 () Bool)

(assert (=> d!16289 (=> (not res!38331) (not e!47106))))

(declare-fun lt!32079 () SeekEntryResult!235)

(assert (=> d!16289 (= res!38331 ((_ is Found!235) lt!32079))))

(assert (=> d!16289 (= lt!32079 (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(assert (=> d!16289 true))

(declare-fun _$33!57 () Unit!2002)

(assert (=> d!16289 (= (choose!403 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (defaultEntry!2192 newMap!16)) _$33!57)))

(declare-fun b!72003 () Bool)

(declare-fun res!38332 () Bool)

(assert (=> b!72003 (=> (not res!38332) (not e!47106))))

(assert (=> b!72003 (= res!38332 (inRange!0 (index!3071 lt!32079) (mask!6149 newMap!16)))))

(declare-fun b!72004 () Bool)

(assert (=> b!72004 (= e!47106 (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!32079)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16289 res!38331) b!72003))

(assert (= (and b!72003 res!38332) b!72004))

(assert (=> d!16289 m!67893))

(assert (=> d!16289 m!68065))

(declare-fun m!69739 () Bool)

(assert (=> b!72003 m!69739))

(declare-fun m!69741 () Bool)

(assert (=> b!72004 m!69741))

(assert (=> d!15959 d!16289))

(assert (=> d!15959 d!16145))

(declare-fun b!72008 () Bool)

(declare-fun e!47108 () Option!138)

(assert (=> b!72008 (= e!47108 None!136)))

(declare-fun b!72006 () Bool)

(declare-fun e!47107 () Option!138)

(assert (=> b!72006 (= e!47107 e!47108)))

(declare-fun c!10568 () Bool)

(assert (=> b!72006 (= c!10568 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31423))) (not (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31423)))) (_1!1068 lt!31269)))))))

(declare-fun b!72005 () Bool)

(assert (=> b!72005 (= e!47107 (Some!137 (_2!1068 (h!2058 (t!5012 (toList!723 lt!31423))))))))

(declare-fun d!16291 () Bool)

(declare-fun c!10567 () Bool)

(assert (=> d!16291 (= c!10567 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31423))) (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31423)))) (_1!1068 lt!31269))))))

(assert (=> d!16291 (= (getValueByKey!132 (t!5012 (toList!723 lt!31423)) (_1!1068 lt!31269)) e!47107)))

(declare-fun b!72007 () Bool)

(assert (=> b!72007 (= e!47108 (getValueByKey!132 (t!5012 (t!5012 (toList!723 lt!31423))) (_1!1068 lt!31269)))))

(assert (= (and d!16291 c!10567) b!72005))

(assert (= (and d!16291 (not c!10567)) b!72006))

(assert (= (and b!72006 c!10568) b!72007))

(assert (= (and b!72006 (not c!10568)) b!72008))

(declare-fun m!69743 () Bool)

(assert (=> b!72007 m!69743))

(assert (=> b!71376 d!16291))

(declare-fun d!16293 () Bool)

(declare-fun lt!32080 () Bool)

(assert (=> d!16293 (= lt!32080 (select (content!76 (t!5012 (toList!723 lt!31423))) lt!31269))))

(declare-fun e!47109 () Bool)

(assert (=> d!16293 (= lt!32080 e!47109)))

(declare-fun res!38334 () Bool)

(assert (=> d!16293 (=> (not res!38334) (not e!47109))))

(assert (=> d!16293 (= res!38334 ((_ is Cons!1472) (t!5012 (toList!723 lt!31423))))))

(assert (=> d!16293 (= (contains!722 (t!5012 (toList!723 lt!31423)) lt!31269) lt!32080)))

(declare-fun b!72009 () Bool)

(declare-fun e!47110 () Bool)

(assert (=> b!72009 (= e!47109 e!47110)))

(declare-fun res!38333 () Bool)

(assert (=> b!72009 (=> res!38333 e!47110)))

(assert (=> b!72009 (= res!38333 (= (h!2058 (t!5012 (toList!723 lt!31423))) lt!31269))))

(declare-fun b!72010 () Bool)

(assert (=> b!72010 (= e!47110 (contains!722 (t!5012 (t!5012 (toList!723 lt!31423))) lt!31269))))

(assert (= (and d!16293 res!38334) b!72009))

(assert (= (and b!72009 (not res!38333)) b!72010))

(declare-fun m!69745 () Bool)

(assert (=> d!16293 m!69745))

(declare-fun m!69747 () Bool)

(assert (=> d!16293 m!69747))

(declare-fun m!69749 () Bool)

(assert (=> b!72010 m!69749))

(assert (=> b!71574 d!16293))

(declare-fun b!72011 () Bool)

(declare-fun c!10570 () Bool)

(assert (=> b!72011 (= c!10570 (and (not (= (bvand (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47120 () ListLongMap!1415)

(declare-fun e!47118 () ListLongMap!1415)

(assert (=> b!72011 (= e!47120 e!47118)))

(declare-fun b!72012 () Bool)

(declare-fun e!47116 () Bool)

(declare-fun e!47111 () Bool)

(assert (=> b!72012 (= e!47116 e!47111)))

(declare-fun res!38342 () Bool)

(declare-fun call!6263 () Bool)

(assert (=> b!72012 (= res!38342 call!6263)))

(assert (=> b!72012 (=> (not res!38342) (not e!47111))))

(declare-fun b!72013 () Bool)

(declare-fun e!47113 () Bool)

(declare-fun lt!32098 () ListLongMap!1415)

(assert (=> b!72013 (= e!47113 (= (apply!74 lt!32098 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 (_2!1069 lt!31408))))))

(declare-fun b!72014 () Bool)

(declare-fun e!47117 () Bool)

(assert (=> b!72014 (= e!47117 e!47113)))

(declare-fun res!38341 () Bool)

(declare-fun call!6261 () Bool)

(assert (=> b!72014 (= res!38341 call!6261)))

(assert (=> b!72014 (=> (not res!38341) (not e!47113))))

(declare-fun bm!6258 () Bool)

(assert (=> bm!6258 (= call!6263 (contains!719 lt!32098 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6259 () Bool)

(declare-fun call!6264 () ListLongMap!1415)

(declare-fun call!6265 () ListLongMap!1415)

(assert (=> bm!6259 (= call!6264 call!6265)))

(declare-fun b!72016 () Bool)

(declare-fun call!6267 () ListLongMap!1415)

(assert (=> b!72016 (= e!47118 call!6267)))

(declare-fun b!72017 () Bool)

(declare-fun e!47123 () Bool)

(assert (=> b!72017 (= e!47123 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000)))))

(declare-fun bm!6260 () Bool)

(declare-fun call!6262 () ListLongMap!1415)

(declare-fun call!6266 () ListLongMap!1415)

(assert (=> bm!6260 (= call!6262 call!6266)))

(declare-fun b!72018 () Bool)

(declare-fun e!47119 () Unit!2002)

(declare-fun lt!32101 () Unit!2002)

(assert (=> b!72018 (= e!47119 lt!32101)))

(declare-fun lt!32090 () ListLongMap!1415)

(assert (=> b!72018 (= lt!32090 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (_2!1069 lt!31408)) (_values!2175 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408)) (extraKeys!2055 (_2!1069 lt!31408)) (zeroValue!2096 (_2!1069 lt!31408)) (minValue!2096 (_2!1069 lt!31408)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1069 lt!31408))))))

(declare-fun lt!32099 () (_ BitVec 64))

(assert (=> b!72018 (= lt!32099 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32084 () (_ BitVec 64))

(assert (=> b!72018 (= lt!32084 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000))))

(declare-fun lt!32096 () Unit!2002)

(assert (=> b!72018 (= lt!32096 (addStillContains!50 lt!32090 lt!32099 (zeroValue!2096 (_2!1069 lt!31408)) lt!32084))))

(assert (=> b!72018 (contains!719 (+!93 lt!32090 (tuple2!2115 lt!32099 (zeroValue!2096 (_2!1069 lt!31408)))) lt!32084)))

(declare-fun lt!32102 () Unit!2002)

(assert (=> b!72018 (= lt!32102 lt!32096)))

(declare-fun lt!32083 () ListLongMap!1415)

(assert (=> b!72018 (= lt!32083 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (_2!1069 lt!31408)) (_values!2175 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408)) (extraKeys!2055 (_2!1069 lt!31408)) (zeroValue!2096 (_2!1069 lt!31408)) (minValue!2096 (_2!1069 lt!31408)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1069 lt!31408))))))

(declare-fun lt!32089 () (_ BitVec 64))

(assert (=> b!72018 (= lt!32089 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32093 () (_ BitVec 64))

(assert (=> b!72018 (= lt!32093 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000))))

(declare-fun lt!32095 () Unit!2002)

(assert (=> b!72018 (= lt!32095 (addApplyDifferent!50 lt!32083 lt!32089 (minValue!2096 (_2!1069 lt!31408)) lt!32093))))

(assert (=> b!72018 (= (apply!74 (+!93 lt!32083 (tuple2!2115 lt!32089 (minValue!2096 (_2!1069 lt!31408)))) lt!32093) (apply!74 lt!32083 lt!32093))))

(declare-fun lt!32100 () Unit!2002)

(assert (=> b!72018 (= lt!32100 lt!32095)))

(declare-fun lt!32097 () ListLongMap!1415)

(assert (=> b!72018 (= lt!32097 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (_2!1069 lt!31408)) (_values!2175 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408)) (extraKeys!2055 (_2!1069 lt!31408)) (zeroValue!2096 (_2!1069 lt!31408)) (minValue!2096 (_2!1069 lt!31408)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1069 lt!31408))))))

(declare-fun lt!32091 () (_ BitVec 64))

(assert (=> b!72018 (= lt!32091 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32085 () (_ BitVec 64))

(assert (=> b!72018 (= lt!32085 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000))))

(declare-fun lt!32088 () Unit!2002)

(assert (=> b!72018 (= lt!32088 (addApplyDifferent!50 lt!32097 lt!32091 (zeroValue!2096 (_2!1069 lt!31408)) lt!32085))))

(assert (=> b!72018 (= (apply!74 (+!93 lt!32097 (tuple2!2115 lt!32091 (zeroValue!2096 (_2!1069 lt!31408)))) lt!32085) (apply!74 lt!32097 lt!32085))))

(declare-fun lt!32092 () Unit!2002)

(assert (=> b!72018 (= lt!32092 lt!32088)))

(declare-fun lt!32087 () ListLongMap!1415)

(assert (=> b!72018 (= lt!32087 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (_2!1069 lt!31408)) (_values!2175 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408)) (extraKeys!2055 (_2!1069 lt!31408)) (zeroValue!2096 (_2!1069 lt!31408)) (minValue!2096 (_2!1069 lt!31408)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1069 lt!31408))))))

(declare-fun lt!32082 () (_ BitVec 64))

(assert (=> b!72018 (= lt!32082 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32086 () (_ BitVec 64))

(assert (=> b!72018 (= lt!32086 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000))))

(assert (=> b!72018 (= lt!32101 (addApplyDifferent!50 lt!32087 lt!32082 (minValue!2096 (_2!1069 lt!31408)) lt!32086))))

(assert (=> b!72018 (= (apply!74 (+!93 lt!32087 (tuple2!2115 lt!32082 (minValue!2096 (_2!1069 lt!31408)))) lt!32086) (apply!74 lt!32087 lt!32086))))

(declare-fun b!72019 () Bool)

(declare-fun e!47121 () Bool)

(declare-fun e!47112 () Bool)

(assert (=> b!72019 (= e!47121 e!47112)))

(declare-fun res!38340 () Bool)

(assert (=> b!72019 (=> (not res!38340) (not e!47112))))

(assert (=> b!72019 (= res!38340 (contains!719 lt!32098 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000)))))

(assert (=> b!72019 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))))))

(declare-fun b!72020 () Bool)

(assert (=> b!72020 (= e!47117 (not call!6261))))

(declare-fun b!72021 () Bool)

(declare-fun e!47122 () Bool)

(assert (=> b!72021 (= e!47122 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000)))))

(declare-fun b!72022 () Bool)

(assert (=> b!72022 (= e!47120 call!6262)))

(declare-fun b!72023 () Bool)

(declare-fun e!47115 () ListLongMap!1415)

(assert (=> b!72023 (= e!47115 e!47120)))

(declare-fun c!10572 () Bool)

(assert (=> b!72023 (= c!10572 (and (not (= (bvand (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6261 () Bool)

(assert (=> bm!6261 (= call!6261 (contains!719 lt!32098 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72024 () Bool)

(assert (=> b!72024 (= e!47112 (= (apply!74 lt!32098 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (_values!2175 (_2!1069 lt!31408))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 (_2!1069 lt!31408)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72024 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (_values!2175 (_2!1069 lt!31408)))))))

(assert (=> b!72024 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))))))

(declare-fun b!72015 () Bool)

(assert (=> b!72015 (= e!47116 (not call!6263))))

(declare-fun d!16295 () Bool)

(declare-fun e!47114 () Bool)

(assert (=> d!16295 e!47114))

(declare-fun res!38338 () Bool)

(assert (=> d!16295 (=> (not res!38338) (not e!47114))))

(assert (=> d!16295 (= res!38338 (or (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))))))))

(declare-fun lt!32081 () ListLongMap!1415)

(assert (=> d!16295 (= lt!32098 lt!32081)))

(declare-fun lt!32094 () Unit!2002)

(assert (=> d!16295 (= lt!32094 e!47119)))

(declare-fun c!10573 () Bool)

(assert (=> d!16295 (= c!10573 e!47123)))

(declare-fun res!38343 () Bool)

(assert (=> d!16295 (=> (not res!38343) (not e!47123))))

(assert (=> d!16295 (= res!38343 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))))))

(assert (=> d!16295 (= lt!32081 e!47115)))

(declare-fun c!10574 () Bool)

(assert (=> d!16295 (= c!10574 (and (not (= (bvand (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16295 (validMask!0 (mask!6149 (_2!1069 lt!31408)))))

(assert (=> d!16295 (= (getCurrentListMap!421 (_keys!3840 (_2!1069 lt!31408)) (_values!2175 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408)) (extraKeys!2055 (_2!1069 lt!31408)) (zeroValue!2096 (_2!1069 lt!31408)) (minValue!2096 (_2!1069 lt!31408)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1069 lt!31408))) lt!32098)))

(declare-fun b!72025 () Bool)

(declare-fun Unit!2046 () Unit!2002)

(assert (=> b!72025 (= e!47119 Unit!2046)))

(declare-fun b!72026 () Bool)

(assert (=> b!72026 (= e!47111 (= (apply!74 lt!32098 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 (_2!1069 lt!31408))))))

(declare-fun bm!6262 () Bool)

(assert (=> bm!6262 (= call!6266 (+!93 (ite c!10574 call!6265 (ite c!10572 call!6264 call!6267)) (ite (or c!10574 c!10572) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (_2!1069 lt!31408))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (_2!1069 lt!31408))))))))

(declare-fun b!72027 () Bool)

(declare-fun res!38339 () Bool)

(assert (=> b!72027 (=> (not res!38339) (not e!47114))))

(assert (=> b!72027 (= res!38339 e!47117)))

(declare-fun c!10571 () Bool)

(assert (=> b!72027 (= c!10571 (not (= (bvand (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6263 () Bool)

(assert (=> bm!6263 (= call!6265 (getCurrentListMapNoExtraKeys!58 (_keys!3840 (_2!1069 lt!31408)) (_values!2175 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408)) (extraKeys!2055 (_2!1069 lt!31408)) (zeroValue!2096 (_2!1069 lt!31408)) (minValue!2096 (_2!1069 lt!31408)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1069 lt!31408))))))

(declare-fun b!72028 () Bool)

(assert (=> b!72028 (= e!47115 (+!93 call!6266 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (_2!1069 lt!31408)))))))

(declare-fun bm!6264 () Bool)

(assert (=> bm!6264 (= call!6267 call!6264)))

(declare-fun b!72029 () Bool)

(assert (=> b!72029 (= e!47118 call!6262)))

(declare-fun b!72030 () Bool)

(declare-fun res!38336 () Bool)

(assert (=> b!72030 (=> (not res!38336) (not e!47114))))

(assert (=> b!72030 (= res!38336 e!47121)))

(declare-fun res!38337 () Bool)

(assert (=> b!72030 (=> res!38337 e!47121)))

(assert (=> b!72030 (= res!38337 (not e!47122))))

(declare-fun res!38335 () Bool)

(assert (=> b!72030 (=> (not res!38335) (not e!47122))))

(assert (=> b!72030 (= res!38335 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))))))

(declare-fun b!72031 () Bool)

(assert (=> b!72031 (= e!47114 e!47116)))

(declare-fun c!10569 () Bool)

(assert (=> b!72031 (= c!10569 (not (= (bvand (extraKeys!2055 (_2!1069 lt!31408)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!16295 c!10574) b!72028))

(assert (= (and d!16295 (not c!10574)) b!72023))

(assert (= (and b!72023 c!10572) b!72022))

(assert (= (and b!72023 (not c!10572)) b!72011))

(assert (= (and b!72011 c!10570) b!72029))

(assert (= (and b!72011 (not c!10570)) b!72016))

(assert (= (or b!72029 b!72016) bm!6264))

(assert (= (or b!72022 bm!6264) bm!6259))

(assert (= (or b!72022 b!72029) bm!6260))

(assert (= (or b!72028 bm!6259) bm!6263))

(assert (= (or b!72028 bm!6260) bm!6262))

(assert (= (and d!16295 res!38343) b!72017))

(assert (= (and d!16295 c!10573) b!72018))

(assert (= (and d!16295 (not c!10573)) b!72025))

(assert (= (and d!16295 res!38338) b!72030))

(assert (= (and b!72030 res!38335) b!72021))

(assert (= (and b!72030 (not res!38337)) b!72019))

(assert (= (and b!72019 res!38340) b!72024))

(assert (= (and b!72030 res!38336) b!72027))

(assert (= (and b!72027 c!10571) b!72014))

(assert (= (and b!72027 (not c!10571)) b!72020))

(assert (= (and b!72014 res!38341) b!72013))

(assert (= (or b!72014 b!72020) bm!6261))

(assert (= (and b!72027 res!38339) b!72031))

(assert (= (and b!72031 c!10569) b!72012))

(assert (= (and b!72031 (not c!10569)) b!72015))

(assert (= (and b!72012 res!38342) b!72026))

(assert (= (or b!72012 b!72015) bm!6258))

(declare-fun b_lambda!3227 () Bool)

(assert (=> (not b_lambda!3227) (not b!72024)))

(declare-fun tb!1521 () Bool)

(declare-fun t!5023 () Bool)

(assert (=> (and b!70773 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 (_2!1069 lt!31408))) t!5023) tb!1521))

(declare-fun result!2669 () Bool)

(assert (=> tb!1521 (= result!2669 tp_is_empty!2469)))

(assert (=> b!72024 t!5023))

(declare-fun b_and!4431 () Bool)

(assert (= b_and!4427 (and (=> t!5023 result!2669) b_and!4431)))

(declare-fun t!5025 () Bool)

(declare-fun tb!1523 () Bool)

(assert (=> (and b!70762 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (_2!1069 lt!31408))) t!5025) tb!1523))

(declare-fun result!2671 () Bool)

(assert (= result!2671 result!2669))

(assert (=> b!72024 t!5025))

(declare-fun b_and!4433 () Bool)

(assert (= b_and!4429 (and (=> t!5025 result!2671) b_and!4433)))

(declare-fun m!69751 () Bool)

(assert (=> b!72019 m!69751))

(assert (=> b!72019 m!69751))

(declare-fun m!69753 () Bool)

(assert (=> b!72019 m!69753))

(declare-fun m!69755 () Bool)

(assert (=> b!72024 m!69755))

(assert (=> b!72024 m!69751))

(declare-fun m!69757 () Bool)

(assert (=> b!72024 m!69757))

(assert (=> b!72024 m!69751))

(declare-fun m!69759 () Bool)

(assert (=> b!72024 m!69759))

(assert (=> b!72024 m!69759))

(assert (=> b!72024 m!69755))

(declare-fun m!69761 () Bool)

(assert (=> b!72024 m!69761))

(declare-fun m!69763 () Bool)

(assert (=> bm!6263 m!69763))

(assert (=> b!72017 m!69751))

(assert (=> b!72017 m!69751))

(declare-fun m!69765 () Bool)

(assert (=> b!72017 m!69765))

(declare-fun m!69767 () Bool)

(assert (=> b!72013 m!69767))

(declare-fun m!69769 () Bool)

(assert (=> bm!6262 m!69769))

(declare-fun m!69771 () Bool)

(assert (=> b!72026 m!69771))

(declare-fun m!69773 () Bool)

(assert (=> b!72028 m!69773))

(assert (=> d!16295 m!69189))

(declare-fun m!69775 () Bool)

(assert (=> bm!6258 m!69775))

(declare-fun m!69777 () Bool)

(assert (=> b!72018 m!69777))

(declare-fun m!69779 () Bool)

(assert (=> b!72018 m!69779))

(declare-fun m!69781 () Bool)

(assert (=> b!72018 m!69781))

(declare-fun m!69783 () Bool)

(assert (=> b!72018 m!69783))

(assert (=> b!72018 m!69777))

(declare-fun m!69785 () Bool)

(assert (=> b!72018 m!69785))

(declare-fun m!69787 () Bool)

(assert (=> b!72018 m!69787))

(declare-fun m!69789 () Bool)

(assert (=> b!72018 m!69789))

(declare-fun m!69791 () Bool)

(assert (=> b!72018 m!69791))

(assert (=> b!72018 m!69751))

(declare-fun m!69793 () Bool)

(assert (=> b!72018 m!69793))

(assert (=> b!72018 m!69763))

(assert (=> b!72018 m!69779))

(declare-fun m!69795 () Bool)

(assert (=> b!72018 m!69795))

(declare-fun m!69797 () Bool)

(assert (=> b!72018 m!69797))

(assert (=> b!72018 m!69791))

(declare-fun m!69799 () Bool)

(assert (=> b!72018 m!69799))

(declare-fun m!69801 () Bool)

(assert (=> b!72018 m!69801))

(declare-fun m!69803 () Bool)

(assert (=> b!72018 m!69803))

(assert (=> b!72018 m!69801))

(declare-fun m!69805 () Bool)

(assert (=> b!72018 m!69805))

(declare-fun m!69807 () Bool)

(assert (=> bm!6261 m!69807))

(assert (=> b!72021 m!69751))

(assert (=> b!72021 m!69751))

(assert (=> b!72021 m!69765))

(assert (=> d!15921 d!16295))

(declare-fun d!16297 () Bool)

(assert (=> d!16297 (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!32103 () Unit!2002)

(assert (=> d!16297 (= lt!32103 (choose!404 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47124 () Bool)

(assert (=> d!16297 e!47124))

(declare-fun res!38344 () Bool)

(assert (=> d!16297 (=> (not res!38344) (not e!47124))))

(assert (=> d!16297 (= res!38344 (isStrictlySorted!291 (toList!723 lt!31522)))))

(assert (=> d!16297 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32103)))

(declare-fun b!72032 () Bool)

(assert (=> b!72032 (= e!47124 (containsKey!136 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16297 res!38344) b!72032))

(assert (=> d!16297 m!68007))

(assert (=> d!16297 m!69013))

(assert (=> d!16297 m!69013))

(assert (=> d!16297 m!69045))

(assert (=> d!16297 m!68007))

(declare-fun m!69809 () Bool)

(assert (=> d!16297 m!69809))

(assert (=> d!16297 m!69555))

(assert (=> b!72032 m!68007))

(assert (=> b!72032 m!69041))

(assert (=> b!71608 d!16297))

(declare-fun d!16299 () Bool)

(assert (=> d!16299 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31522) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3098 () Bool)

(assert (= bs!3098 d!16299))

(assert (=> bs!3098 m!69013))

(declare-fun m!69811 () Bool)

(assert (=> bs!3098 m!69811))

(assert (=> b!71608 d!16299))

(assert (=> b!71608 d!16265))

(declare-fun d!16301 () Bool)

(declare-fun res!38345 () Bool)

(declare-fun e!47125 () Bool)

(assert (=> d!16301 (=> res!38345 e!47125)))

(assert (=> d!16301 (= res!38345 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))))) lt!31443)))))

(assert (=> d!16301 (= (containsKey!136 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443) e!47125)))

(declare-fun b!72033 () Bool)

(declare-fun e!47126 () Bool)

(assert (=> b!72033 (= e!47125 e!47126)))

(declare-fun res!38346 () Bool)

(assert (=> b!72033 (=> (not res!38346) (not e!47126))))

(assert (=> b!72033 (= res!38346 (and (or (not ((_ is Cons!1472) (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))))) (bvsle (_1!1068 (h!2058 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))))) lt!31443)) ((_ is Cons!1472) (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)))) (bvslt (_1!1068 (h!2058 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))))) lt!31443)))))

(declare-fun b!72034 () Bool)

(assert (=> b!72034 (= e!47126 (containsKey!136 (t!5012 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)))) lt!31443))))

(assert (= (and d!16301 (not res!38345)) b!72033))

(assert (= (and b!72033 res!38346) b!72034))

(declare-fun m!69813 () Bool)

(assert (=> b!72034 m!69813))

(assert (=> d!15915 d!16301))

(declare-fun lt!32104 () Bool)

(declare-fun d!16303 () Bool)

(assert (=> d!16303 (= lt!32104 (select (content!76 (toList!723 lt!31755)) (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun e!47127 () Bool)

(assert (=> d!16303 (= lt!32104 e!47127)))

(declare-fun res!38348 () Bool)

(assert (=> d!16303 (=> (not res!38348) (not e!47127))))

(assert (=> d!16303 (= res!38348 ((_ is Cons!1472) (toList!723 lt!31755)))))

(assert (=> d!16303 (= (contains!722 (toList!723 lt!31755) (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!32104)))

(declare-fun b!72035 () Bool)

(declare-fun e!47128 () Bool)

(assert (=> b!72035 (= e!47127 e!47128)))

(declare-fun res!38347 () Bool)

(assert (=> b!72035 (=> res!38347 e!47128)))

(assert (=> b!72035 (= res!38347 (= (h!2058 (toList!723 lt!31755)) (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!72036 () Bool)

(assert (=> b!72036 (= e!47128 (contains!722 (t!5012 (toList!723 lt!31755)) (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!16303 res!38348) b!72035))

(assert (= (and b!72035 (not res!38347)) b!72036))

(declare-fun m!69815 () Bool)

(assert (=> d!16303 m!69815))

(declare-fun m!69817 () Bool)

(assert (=> d!16303 m!69817))

(declare-fun m!69819 () Bool)

(assert (=> b!72036 m!69819))

(assert (=> b!71486 d!16303))

(assert (=> b!71421 d!16131))

(assert (=> b!71542 d!15925))

(declare-fun d!16305 () Bool)

(declare-fun e!47129 () Bool)

(assert (=> d!16305 e!47129))

(declare-fun res!38349 () Bool)

(assert (=> d!16305 (=> res!38349 e!47129)))

(declare-fun lt!32107 () Bool)

(assert (=> d!16305 (= res!38349 (not lt!32107))))

(declare-fun lt!32106 () Bool)

(assert (=> d!16305 (= lt!32107 lt!32106)))

(declare-fun lt!32105 () Unit!2002)

(declare-fun e!47130 () Unit!2002)

(assert (=> d!16305 (= lt!32105 e!47130)))

(declare-fun c!10575 () Bool)

(assert (=> d!16305 (= c!10575 lt!32106)))

(assert (=> d!16305 (= lt!32106 (containsKey!136 (toList!723 lt!31705) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16305 (= (contains!719 lt!31705 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32107)))

(declare-fun b!72037 () Bool)

(declare-fun lt!32108 () Unit!2002)

(assert (=> b!72037 (= e!47130 lt!32108)))

(assert (=> b!72037 (= lt!32108 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31705) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72037 (isDefined!85 (getValueByKey!132 (toList!723 lt!31705) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72038 () Bool)

(declare-fun Unit!2047 () Unit!2002)

(assert (=> b!72038 (= e!47130 Unit!2047)))

(declare-fun b!72039 () Bool)

(assert (=> b!72039 (= e!47129 (isDefined!85 (getValueByKey!132 (toList!723 lt!31705) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16305 c!10575) b!72037))

(assert (= (and d!16305 (not c!10575)) b!72038))

(assert (= (and d!16305 (not res!38349)) b!72039))

(declare-fun m!69821 () Bool)

(assert (=> d!16305 m!69821))

(declare-fun m!69823 () Bool)

(assert (=> b!72037 m!69823))

(assert (=> b!72037 m!69177))

(assert (=> b!72037 m!69177))

(declare-fun m!69825 () Bool)

(assert (=> b!72037 m!69825))

(assert (=> b!72039 m!69177))

(assert (=> b!72039 m!69177))

(assert (=> b!72039 m!69825))

(assert (=> bm!6197 d!16305))

(assert (=> b!71472 d!16031))

(assert (=> b!71388 d!16131))

(declare-fun d!16307 () Bool)

(declare-fun res!38350 () Bool)

(declare-fun e!47131 () Bool)

(assert (=> d!16307 (=> res!38350 e!47131)))

(assert (=> d!16307 (= res!38350 (and ((_ is Cons!1472) lt!31453) (= (_1!1068 (h!2058 lt!31453)) (_1!1068 lt!31265))))))

(assert (=> d!16307 (= (containsKey!136 lt!31453 (_1!1068 lt!31265)) e!47131)))

(declare-fun b!72040 () Bool)

(declare-fun e!47132 () Bool)

(assert (=> b!72040 (= e!47131 e!47132)))

(declare-fun res!38351 () Bool)

(assert (=> b!72040 (=> (not res!38351) (not e!47132))))

(assert (=> b!72040 (= res!38351 (and (or (not ((_ is Cons!1472) lt!31453)) (bvsle (_1!1068 (h!2058 lt!31453)) (_1!1068 lt!31265))) ((_ is Cons!1472) lt!31453) (bvslt (_1!1068 (h!2058 lt!31453)) (_1!1068 lt!31265))))))

(declare-fun b!72041 () Bool)

(assert (=> b!72041 (= e!47132 (containsKey!136 (t!5012 lt!31453) (_1!1068 lt!31265)))))

(assert (= (and d!16307 (not res!38350)) b!72040))

(assert (= (and b!72040 res!38351) b!72041))

(declare-fun m!69827 () Bool)

(assert (=> b!72041 m!69827))

(assert (=> b!71288 d!16307))

(declare-fun d!16309 () Bool)

(assert (=> d!16309 (= (get!1136 (getValueByKey!132 (toList!723 lt!31521) lt!31509)) (v!2518 (getValueByKey!132 (toList!723 lt!31521) lt!31509)))))

(assert (=> d!15979 d!16309))

(declare-fun b!72045 () Bool)

(declare-fun e!47134 () Option!138)

(assert (=> b!72045 (= e!47134 None!136)))

(declare-fun b!72043 () Bool)

(declare-fun e!47133 () Option!138)

(assert (=> b!72043 (= e!47133 e!47134)))

(declare-fun c!10577 () Bool)

(assert (=> b!72043 (= c!10577 (and ((_ is Cons!1472) (toList!723 lt!31521)) (not (= (_1!1068 (h!2058 (toList!723 lt!31521))) lt!31509))))))

(declare-fun b!72042 () Bool)

(assert (=> b!72042 (= e!47133 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31521)))))))

(declare-fun d!16311 () Bool)

(declare-fun c!10576 () Bool)

(assert (=> d!16311 (= c!10576 (and ((_ is Cons!1472) (toList!723 lt!31521)) (= (_1!1068 (h!2058 (toList!723 lt!31521))) lt!31509)))))

(assert (=> d!16311 (= (getValueByKey!132 (toList!723 lt!31521) lt!31509) e!47133)))

(declare-fun b!72044 () Bool)

(assert (=> b!72044 (= e!47134 (getValueByKey!132 (t!5012 (toList!723 lt!31521)) lt!31509))))

(assert (= (and d!16311 c!10576) b!72042))

(assert (= (and d!16311 (not c!10576)) b!72043))

(assert (= (and b!72043 c!10577) b!72044))

(assert (= (and b!72043 (not c!10577)) b!72045))

(declare-fun m!69829 () Bool)

(assert (=> b!72044 m!69829))

(assert (=> d!15979 d!16311))

(declare-fun d!16313 () Bool)

(declare-fun lt!32109 () Bool)

(assert (=> d!16313 (= lt!32109 (select (content!76 lt!31574) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun e!47135 () Bool)

(assert (=> d!16313 (= lt!32109 e!47135)))

(declare-fun res!38353 () Bool)

(assert (=> d!16313 (=> (not res!38353) (not e!47135))))

(assert (=> d!16313 (= res!38353 ((_ is Cons!1472) lt!31574))))

(assert (=> d!16313 (= (contains!722 lt!31574 (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))) lt!32109)))

(declare-fun b!72046 () Bool)

(declare-fun e!47136 () Bool)

(assert (=> b!72046 (= e!47135 e!47136)))

(declare-fun res!38352 () Bool)

(assert (=> b!72046 (=> res!38352 e!47136)))

(assert (=> b!72046 (= res!38352 (= (h!2058 lt!31574) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun b!72047 () Bool)

(assert (=> b!72047 (= e!47136 (contains!722 (t!5012 lt!31574) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(assert (= (and d!16313 res!38353) b!72046))

(assert (= (and b!72046 (not res!38352)) b!72047))

(declare-fun m!69831 () Bool)

(assert (=> d!16313 m!69831))

(declare-fun m!69833 () Bool)

(assert (=> d!16313 m!69833))

(declare-fun m!69835 () Bool)

(assert (=> b!72047 m!69835))

(assert (=> b!71245 d!16313))

(declare-fun b!72048 () Bool)

(declare-fun e!47138 () (_ BitVec 32))

(declare-fun call!6268 () (_ BitVec 32))

(assert (=> b!72048 (= e!47138 call!6268)))

(declare-fun b!72049 () Bool)

(declare-fun e!47137 () (_ BitVec 32))

(assert (=> b!72049 (= e!47137 #b00000000000000000000000000000000)))

(declare-fun b!72050 () Bool)

(assert (=> b!72050 (= e!47138 (bvadd #b00000000000000000000000000000001 call!6268))))

(declare-fun b!72051 () Bool)

(assert (=> b!72051 (= e!47137 e!47138)))

(declare-fun c!10578 () Bool)

(assert (=> b!72051 (= c!10578 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!16315 () Bool)

(declare-fun lt!32110 () (_ BitVec 32))

(assert (=> d!16315 (and (bvsge lt!32110 #b00000000000000000000000000000000) (bvsle lt!32110 (bvsub (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!16315 (= lt!32110 e!47137)))

(declare-fun c!10579 () Bool)

(assert (=> d!16315 (= c!10579 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!16315 (and (bvsle #b00000000000000000000000000000000 (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!16315 (= (arrayCountValidKeys!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000 (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))) lt!32110)))

(declare-fun bm!6265 () Bool)

(assert (=> bm!6265 (= call!6268 (arrayCountValidKeys!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!16315 c!10579) b!72049))

(assert (= (and d!16315 (not c!10579)) b!72051))

(assert (= (and b!72051 c!10578) b!72050))

(assert (= (and b!72051 (not c!10578)) b!72048))

(assert (= (or b!72050 b!72048) bm!6265))

(declare-fun m!69837 () Bool)

(assert (=> b!72051 m!69837))

(assert (=> b!72051 m!69837))

(declare-fun m!69839 () Bool)

(assert (=> b!72051 m!69839))

(declare-fun m!69841 () Bool)

(assert (=> bm!6265 m!69841))

(assert (=> b!71456 d!16315))

(declare-fun d!16317 () Bool)

(declare-fun e!47139 () Bool)

(assert (=> d!16317 e!47139))

(declare-fun res!38354 () Bool)

(assert (=> d!16317 (=> res!38354 e!47139)))

(declare-fun lt!32113 () Bool)

(assert (=> d!16317 (= res!38354 (not lt!32113))))

(declare-fun lt!32112 () Bool)

(assert (=> d!16317 (= lt!32113 lt!32112)))

(declare-fun lt!32111 () Unit!2002)

(declare-fun e!47140 () Unit!2002)

(assert (=> d!16317 (= lt!32111 e!47140)))

(declare-fun c!10580 () Bool)

(assert (=> d!16317 (= c!10580 lt!32112)))

(assert (=> d!16317 (= lt!32112 (containsKey!136 (toList!723 lt!31672) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16317 (= (contains!719 lt!31672 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32113)))

(declare-fun b!72052 () Bool)

(declare-fun lt!32114 () Unit!2002)

(assert (=> b!72052 (= e!47140 lt!32114)))

(assert (=> b!72052 (= lt!32114 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31672) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72052 (isDefined!85 (getValueByKey!132 (toList!723 lt!31672) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72053 () Bool)

(declare-fun Unit!2048 () Unit!2002)

(assert (=> b!72053 (= e!47140 Unit!2048)))

(declare-fun b!72054 () Bool)

(assert (=> b!72054 (= e!47139 (isDefined!85 (getValueByKey!132 (toList!723 lt!31672) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16317 c!10580) b!72052))

(assert (= (and d!16317 (not c!10580)) b!72053))

(assert (= (and d!16317 (not res!38354)) b!72054))

(declare-fun m!69843 () Bool)

(assert (=> d!16317 m!69843))

(declare-fun m!69845 () Bool)

(assert (=> b!72052 m!69845))

(assert (=> b!72052 m!69173))

(assert (=> b!72052 m!69173))

(declare-fun m!69847 () Bool)

(assert (=> b!72052 m!69847))

(assert (=> b!72054 m!69173))

(assert (=> b!72054 m!69173))

(assert (=> b!72054 m!69847))

(assert (=> bm!6190 d!16317))

(assert (=> b!71283 d!16165))

(assert (=> b!71283 d!15859))

(assert (=> b!71549 d!15959))

(declare-fun d!16319 () Bool)

(declare-fun res!38359 () Bool)

(declare-fun e!47145 () Bool)

(assert (=> d!16319 (=> res!38359 e!47145)))

(assert (=> d!16319 (= res!38359 (or ((_ is Nil!1473) lt!31574) ((_ is Nil!1473) (t!5012 lt!31574))))))

(assert (=> d!16319 (= (isStrictlySorted!291 lt!31574) e!47145)))

(declare-fun b!72059 () Bool)

(declare-fun e!47146 () Bool)

(assert (=> b!72059 (= e!47145 e!47146)))

(declare-fun res!38360 () Bool)

(assert (=> b!72059 (=> (not res!38360) (not e!47146))))

(assert (=> b!72059 (= res!38360 (bvslt (_1!1068 (h!2058 lt!31574)) (_1!1068 (h!2058 (t!5012 lt!31574)))))))

(declare-fun b!72060 () Bool)

(assert (=> b!72060 (= e!47146 (isStrictlySorted!291 (t!5012 lt!31574)))))

(assert (= (and d!16319 (not res!38359)) b!72059))

(assert (= (and b!72059 res!38360) b!72060))

(declare-fun m!69849 () Bool)

(assert (=> b!72060 m!69849))

(assert (=> d!15867 d!16319))

(declare-fun d!16321 () Bool)

(declare-fun res!38361 () Bool)

(declare-fun e!47147 () Bool)

(assert (=> d!16321 (=> res!38361 e!47147)))

(assert (=> d!16321 (= res!38361 (or ((_ is Nil!1473) (toList!723 (+!93 lt!31270 lt!31269))) ((_ is Nil!1473) (t!5012 (toList!723 (+!93 lt!31270 lt!31269))))))))

(assert (=> d!16321 (= (isStrictlySorted!291 (toList!723 (+!93 lt!31270 lt!31269))) e!47147)))

(declare-fun b!72061 () Bool)

(declare-fun e!47148 () Bool)

(assert (=> b!72061 (= e!47147 e!47148)))

(declare-fun res!38362 () Bool)

(assert (=> b!72061 (=> (not res!38362) (not e!47148))))

(assert (=> b!72061 (= res!38362 (bvslt (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 lt!31269)))) (_1!1068 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31269)))))))))

(declare-fun b!72062 () Bool)

(assert (=> b!72062 (= e!47148 (isStrictlySorted!291 (t!5012 (toList!723 (+!93 lt!31270 lt!31269)))))))

(assert (= (and d!16321 (not res!38361)) b!72061))

(assert (= (and b!72061 res!38362) b!72062))

(declare-fun m!69851 () Bool)

(assert (=> b!72062 m!69851))

(assert (=> d!15867 d!16321))

(assert (=> b!71607 d!16201))

(assert (=> b!71607 d!16203))

(assert (=> d!15931 d!16145))

(assert (=> b!71594 d!16175))

(assert (=> b!71594 d!16177))

(declare-fun d!16323 () Bool)

(assert (=> d!16323 (= (isEmpty!314 (getValueByKey!132 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))) (not ((_ is Some!137) (getValueByKey!132 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))))

(assert (=> d!15951 d!16323))

(declare-fun d!16325 () Bool)

(assert (=> d!16325 (arrayContainsKey!0 (_keys!3840 newMap!16) lt!31617 #b00000000000000000000000000000000)))

(declare-fun lt!32117 () Unit!2002)

(declare-fun choose!13 (array!3881 (_ BitVec 64) (_ BitVec 32)) Unit!2002)

(assert (=> d!16325 (= lt!32117 (choose!13 (_keys!3840 newMap!16) lt!31617 #b00000000000000000000000000000000))))

(assert (=> d!16325 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!16325 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3840 newMap!16) lt!31617 #b00000000000000000000000000000000) lt!32117)))

(declare-fun bs!3099 () Bool)

(assert (= bs!3099 d!16325))

(assert (=> bs!3099 m!68499))

(declare-fun m!69853 () Bool)

(assert (=> bs!3099 m!69853))

(assert (=> b!71311 d!16325))

(declare-fun d!16327 () Bool)

(declare-fun res!38363 () Bool)

(declare-fun e!47149 () Bool)

(assert (=> d!16327 (=> res!38363 e!47149)))

(assert (=> d!16327 (= res!38363 (= (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) lt!31617))))

(assert (=> d!16327 (= (arrayContainsKey!0 (_keys!3840 newMap!16) lt!31617 #b00000000000000000000000000000000) e!47149)))

(declare-fun b!72063 () Bool)

(declare-fun e!47150 () Bool)

(assert (=> b!72063 (= e!47149 e!47150)))

(declare-fun res!38364 () Bool)

(assert (=> b!72063 (=> (not res!38364) (not e!47150))))

(assert (=> b!72063 (= res!38364 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72064 () Bool)

(assert (=> b!72064 (= e!47150 (arrayContainsKey!0 (_keys!3840 newMap!16) lt!31617 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16327 (not res!38363)) b!72063))

(assert (= (and b!72063 res!38364) b!72064))

(assert (=> d!16327 m!68283))

(declare-fun m!69855 () Bool)

(assert (=> b!72064 m!69855))

(assert (=> b!71311 d!16327))

(declare-fun b!72065 () Bool)

(declare-fun e!47152 () SeekEntryResult!235)

(declare-fun e!47151 () SeekEntryResult!235)

(assert (=> b!72065 (= e!47152 e!47151)))

(declare-fun lt!32119 () (_ BitVec 64))

(declare-fun lt!32118 () SeekEntryResult!235)

(assert (=> b!72065 (= lt!32119 (select (arr!1853 (_keys!3840 newMap!16)) (index!3072 lt!32118)))))

(declare-fun c!10582 () Bool)

(assert (=> b!72065 (= c!10582 (= lt!32119 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72066 () Bool)

(declare-fun c!10581 () Bool)

(assert (=> b!72066 (= c!10581 (= lt!32119 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47153 () SeekEntryResult!235)

(assert (=> b!72066 (= e!47151 e!47153)))

(declare-fun b!72067 () Bool)

(assert (=> b!72067 (= e!47151 (Found!235 (index!3072 lt!32118)))))

(declare-fun b!72068 () Bool)

(assert (=> b!72068 (= e!47153 (seekKeyOrZeroReturnVacant!0 (x!11007 lt!32118) (index!3072 lt!32118) (index!3072 lt!32118) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(declare-fun b!72069 () Bool)

(assert (=> b!72069 (= e!47152 Undefined!235)))

(declare-fun d!16329 () Bool)

(declare-fun lt!32120 () SeekEntryResult!235)

(assert (=> d!16329 (and (or ((_ is Undefined!235) lt!32120) (not ((_ is Found!235) lt!32120)) (and (bvsge (index!3071 lt!32120) #b00000000000000000000000000000000) (bvslt (index!3071 lt!32120) (size!2090 (_keys!3840 newMap!16))))) (or ((_ is Undefined!235) lt!32120) ((_ is Found!235) lt!32120) (not ((_ is MissingZero!235) lt!32120)) (and (bvsge (index!3070 lt!32120) #b00000000000000000000000000000000) (bvslt (index!3070 lt!32120) (size!2090 (_keys!3840 newMap!16))))) (or ((_ is Undefined!235) lt!32120) ((_ is Found!235) lt!32120) ((_ is MissingZero!235) lt!32120) (not ((_ is MissingVacant!235) lt!32120)) (and (bvsge (index!3073 lt!32120) #b00000000000000000000000000000000) (bvslt (index!3073 lt!32120) (size!2090 (_keys!3840 newMap!16))))) (or ((_ is Undefined!235) lt!32120) (ite ((_ is Found!235) lt!32120) (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!32120)) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!235) lt!32120) (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3070 lt!32120)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!235) lt!32120) (= (select (arr!1853 (_keys!3840 newMap!16)) (index!3073 lt!32120)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16329 (= lt!32120 e!47152)))

(declare-fun c!10583 () Bool)

(assert (=> d!16329 (= c!10583 (and ((_ is Intermediate!235) lt!32118) (undefined!1047 lt!32118)))))

(assert (=> d!16329 (= lt!32118 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (mask!6149 newMap!16)) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (_keys!3840 newMap!16) (mask!6149 newMap!16)))))

(assert (=> d!16329 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16329 (= (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (_keys!3840 newMap!16) (mask!6149 newMap!16)) lt!32120)))

(declare-fun b!72070 () Bool)

(assert (=> b!72070 (= e!47153 (MissingZero!235 (index!3072 lt!32118)))))

(assert (= (and d!16329 c!10583) b!72069))

(assert (= (and d!16329 (not c!10583)) b!72065))

(assert (= (and b!72065 c!10582) b!72067))

(assert (= (and b!72065 (not c!10582)) b!72066))

(assert (= (and b!72066 c!10581) b!72070))

(assert (= (and b!72066 (not c!10581)) b!72068))

(declare-fun m!69857 () Bool)

(assert (=> b!72065 m!69857))

(assert (=> b!72068 m!68283))

(declare-fun m!69859 () Bool)

(assert (=> b!72068 m!69859))

(declare-fun m!69861 () Bool)

(assert (=> d!16329 m!69861))

(assert (=> d!16329 m!68263))

(declare-fun m!69863 () Bool)

(assert (=> d!16329 m!69863))

(assert (=> d!16329 m!68283))

(declare-fun m!69865 () Bool)

(assert (=> d!16329 m!69865))

(declare-fun m!69867 () Bool)

(assert (=> d!16329 m!69867))

(assert (=> d!16329 m!68283))

(assert (=> d!16329 m!69863))

(declare-fun m!69869 () Bool)

(assert (=> d!16329 m!69869))

(assert (=> b!71311 d!16329))

(assert (=> bm!6217 d!16139))

(declare-fun d!16331 () Bool)

(assert (=> d!16331 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443))))

(declare-fun lt!32121 () Unit!2002)

(assert (=> d!16331 (= lt!32121 (choose!404 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443))))

(declare-fun e!47154 () Bool)

(assert (=> d!16331 e!47154))

(declare-fun res!38365 () Bool)

(assert (=> d!16331 (=> (not res!38365) (not e!47154))))

(assert (=> d!16331 (= res!38365 (isStrictlySorted!291 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)))))))

(assert (=> d!16331 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443) lt!32121)))

(declare-fun b!72071 () Bool)

(assert (=> b!72071 (= e!47154 (containsKey!136 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443))))

(assert (= (and d!16331 res!38365) b!72071))

(assert (=> d!16331 m!68533))

(assert (=> d!16331 m!68533))

(assert (=> d!16331 m!68535))

(declare-fun m!69871 () Bool)

(assert (=> d!16331 m!69871))

(declare-fun m!69873 () Bool)

(assert (=> d!16331 m!69873))

(assert (=> b!72071 m!68529))

(assert (=> b!71326 d!16331))

(declare-fun d!16333 () Bool)

(assert (=> d!16333 (= (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443)) (not (isEmpty!314 (getValueByKey!132 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443))))))

(declare-fun bs!3100 () Bool)

(assert (= bs!3100 d!16333))

(assert (=> bs!3100 m!68533))

(declare-fun m!69875 () Bool)

(assert (=> bs!3100 m!69875))

(assert (=> b!71326 d!16333))

(declare-fun b!72075 () Bool)

(declare-fun e!47156 () Option!138)

(assert (=> b!72075 (= e!47156 None!136)))

(declare-fun b!72073 () Bool)

(declare-fun e!47155 () Option!138)

(assert (=> b!72073 (= e!47155 e!47156)))

(declare-fun c!10585 () Bool)

(assert (=> b!72073 (= c!10585 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)))) (not (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))))) lt!31443))))))

(declare-fun b!72072 () Bool)

(assert (=> b!72072 (= e!47155 (Some!137 (_2!1068 (h!2058 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)))))))))

(declare-fun c!10584 () Bool)

(declare-fun d!16335 () Bool)

(assert (=> d!16335 (= c!10584 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))))) lt!31443)))))

(assert (=> d!16335 (= (getValueByKey!132 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442))) lt!31443) e!47155)))

(declare-fun b!72074 () Bool)

(assert (=> b!72074 (= e!47156 (getValueByKey!132 (t!5012 (toList!723 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)))) lt!31443))))

(assert (= (and d!16335 c!10584) b!72072))

(assert (= (and d!16335 (not c!10584)) b!72073))

(assert (= (and b!72073 c!10585) b!72074))

(assert (= (and b!72073 (not c!10585)) b!72075))

(declare-fun m!69877 () Bool)

(assert (=> b!72074 m!69877))

(assert (=> b!71326 d!16335))

(assert (=> b!71214 d!16131))

(declare-fun b!72076 () Bool)

(declare-fun e!47161 () ListLongMap!1415)

(assert (=> b!72076 (= e!47161 (ListLongMap!1416 Nil!1473))))

(declare-fun d!16337 () Bool)

(declare-fun e!47160 () Bool)

(assert (=> d!16337 e!47160))

(declare-fun res!38368 () Bool)

(assert (=> d!16337 (=> (not res!38368) (not e!47160))))

(declare-fun lt!32127 () ListLongMap!1415)

(assert (=> d!16337 (= res!38368 (not (contains!719 lt!32127 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16337 (= lt!32127 e!47161)))

(declare-fun c!10589 () Bool)

(assert (=> d!16337 (= c!10589 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16337 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16337 (= (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) (zeroValue!2096 newMap!16) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32127)))

(declare-fun bm!6266 () Bool)

(declare-fun call!6269 () ListLongMap!1415)

(assert (=> bm!6266 (= call!6269 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) (zeroValue!2096 newMap!16) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16)))))

(declare-fun b!72077 () Bool)

(declare-fun e!47159 () Bool)

(declare-fun e!47162 () Bool)

(assert (=> b!72077 (= e!47159 e!47162)))

(assert (=> b!72077 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun res!38369 () Bool)

(assert (=> b!72077 (= res!38369 (contains!719 lt!32127 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72077 (=> (not res!38369) (not e!47162))))

(declare-fun b!72078 () Bool)

(declare-fun e!47157 () Bool)

(assert (=> b!72078 (= e!47157 (isEmpty!313 lt!32127))))

(declare-fun b!72079 () Bool)

(assert (=> b!72079 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> b!72079 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))))))))

(assert (=> b!72079 (= e!47162 (= (apply!74 lt!32127 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!72080 () Bool)

(declare-fun res!38366 () Bool)

(assert (=> b!72080 (=> (not res!38366) (not e!47160))))

(assert (=> b!72080 (= res!38366 (not (contains!719 lt!32127 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72081 () Bool)

(declare-fun e!47158 () ListLongMap!1415)

(assert (=> b!72081 (= e!47161 e!47158)))

(declare-fun c!10588 () Bool)

(assert (=> b!72081 (= c!10588 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72082 () Bool)

(assert (=> b!72082 (= e!47157 (= lt!32127 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) (mask!6149 newMap!16) (ite c!10286 (ite c!10284 (extraKeys!2055 newMap!16) lt!31395) (extraKeys!2055 newMap!16)) (zeroValue!2096 newMap!16) (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16))))))

(declare-fun b!72083 () Bool)

(declare-fun lt!32128 () Unit!2002)

(declare-fun lt!32124 () Unit!2002)

(assert (=> b!72083 (= lt!32128 lt!32124)))

(declare-fun lt!32126 () (_ BitVec 64))

(declare-fun lt!32123 () (_ BitVec 64))

(declare-fun lt!32125 () V!2939)

(declare-fun lt!32122 () ListLongMap!1415)

(assert (=> b!72083 (not (contains!719 (+!93 lt!32122 (tuple2!2115 lt!32123 lt!32125)) lt!32126))))

(assert (=> b!72083 (= lt!32124 (addStillNotContains!23 lt!32122 lt!32123 lt!32125 lt!32126))))

(assert (=> b!72083 (= lt!32126 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!72083 (= lt!32125 (get!1133 (select (arr!1854 (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!72083 (= lt!32123 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72083 (= lt!32122 call!6269)))

(assert (=> b!72083 (= e!47158 (+!93 call!6269 (tuple2!2115 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (get!1133 (select (arr!1854 (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!72084 () Bool)

(assert (=> b!72084 (= e!47160 e!47159)))

(declare-fun c!10586 () Bool)

(declare-fun e!47163 () Bool)

(assert (=> b!72084 (= c!10586 e!47163)))

(declare-fun res!38367 () Bool)

(assert (=> b!72084 (=> (not res!38367) (not e!47163))))

(assert (=> b!72084 (= res!38367 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72085 () Bool)

(assert (=> b!72085 (= e!47163 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72085 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!72086 () Bool)

(assert (=> b!72086 (= e!47159 e!47157)))

(declare-fun c!10587 () Bool)

(assert (=> b!72086 (= c!10587 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72087 () Bool)

(assert (=> b!72087 (= e!47158 call!6269)))

(assert (= (and d!16337 c!10589) b!72076))

(assert (= (and d!16337 (not c!10589)) b!72081))

(assert (= (and b!72081 c!10588) b!72083))

(assert (= (and b!72081 (not c!10588)) b!72087))

(assert (= (or b!72083 b!72087) bm!6266))

(assert (= (and d!16337 res!38368) b!72080))

(assert (= (and b!72080 res!38366) b!72084))

(assert (= (and b!72084 res!38367) b!72085))

(assert (= (and b!72084 c!10586) b!72077))

(assert (= (and b!72084 (not c!10586)) b!72086))

(assert (= (and b!72077 res!38369) b!72079))

(assert (= (and b!72086 c!10587) b!72082))

(assert (= (and b!72086 (not c!10587)) b!72078))

(declare-fun b_lambda!3229 () Bool)

(assert (=> (not b_lambda!3229) (not b!72079)))

(assert (=> b!72079 t!5019))

(declare-fun b_and!4435 () Bool)

(assert (= b_and!4431 (and (=> t!5019 result!2665) b_and!4435)))

(assert (=> b!72079 t!5021))

(declare-fun b_and!4437 () Bool)

(assert (= b_and!4433 (and (=> t!5021 result!2667) b_and!4437)))

(declare-fun b_lambda!3231 () Bool)

(assert (=> (not b_lambda!3231) (not b!72083)))

(assert (=> b!72083 t!5019))

(declare-fun b_and!4439 () Bool)

(assert (= b_and!4435 (and (=> t!5019 result!2665) b_and!4439)))

(assert (=> b!72083 t!5021))

(declare-fun b_and!4441 () Bool)

(assert (= b_and!4437 (and (=> t!5021 result!2667) b_and!4441)))

(declare-fun m!69879 () Bool)

(assert (=> b!72080 m!69879))

(declare-fun m!69881 () Bool)

(assert (=> b!72078 m!69881))

(declare-fun m!69883 () Bool)

(assert (=> bm!6266 m!69883))

(assert (=> b!72079 m!68675))

(assert (=> b!72079 m!68287))

(assert (=> b!72079 m!68677))

(assert (=> b!72079 m!68283))

(declare-fun m!69885 () Bool)

(assert (=> b!72079 m!69885))

(assert (=> b!72079 m!68675))

(assert (=> b!72079 m!68283))

(assert (=> b!72079 m!68287))

(assert (=> b!72081 m!68283))

(assert (=> b!72081 m!68283))

(assert (=> b!72081 m!68297))

(assert (=> b!72085 m!68283))

(assert (=> b!72085 m!68283))

(assert (=> b!72085 m!68297))

(assert (=> b!72082 m!69883))

(assert (=> b!72077 m!68283))

(assert (=> b!72077 m!68283))

(declare-fun m!69887 () Bool)

(assert (=> b!72077 m!69887))

(declare-fun m!69889 () Bool)

(assert (=> d!16337 m!69889))

(assert (=> d!16337 m!68263))

(declare-fun m!69891 () Bool)

(assert (=> b!72083 m!69891))

(assert (=> b!72083 m!68675))

(assert (=> b!72083 m!68287))

(assert (=> b!72083 m!68677))

(declare-fun m!69893 () Bool)

(assert (=> b!72083 m!69893))

(assert (=> b!72083 m!68675))

(declare-fun m!69895 () Bool)

(assert (=> b!72083 m!69895))

(assert (=> b!72083 m!69895))

(declare-fun m!69897 () Bool)

(assert (=> b!72083 m!69897))

(assert (=> b!72083 m!68283))

(assert (=> b!72083 m!68287))

(assert (=> bm!6202 d!16337))

(declare-fun d!16339 () Bool)

(declare-fun lt!32129 () Bool)

(assert (=> d!16339 (= lt!32129 (select (content!76 (t!5012 (toList!723 lt!31452))) lt!31265))))

(declare-fun e!47164 () Bool)

(assert (=> d!16339 (= lt!32129 e!47164)))

(declare-fun res!38371 () Bool)

(assert (=> d!16339 (=> (not res!38371) (not e!47164))))

(assert (=> d!16339 (= res!38371 ((_ is Cons!1472) (t!5012 (toList!723 lt!31452))))))

(assert (=> d!16339 (= (contains!722 (t!5012 (toList!723 lt!31452)) lt!31265) lt!32129)))

(declare-fun b!72088 () Bool)

(declare-fun e!47165 () Bool)

(assert (=> b!72088 (= e!47164 e!47165)))

(declare-fun res!38370 () Bool)

(assert (=> b!72088 (=> res!38370 e!47165)))

(assert (=> b!72088 (= res!38370 (= (h!2058 (t!5012 (toList!723 lt!31452))) lt!31265))))

(declare-fun b!72089 () Bool)

(assert (=> b!72089 (= e!47165 (contains!722 (t!5012 (t!5012 (toList!723 lt!31452))) lt!31265))))

(assert (= (and d!16339 res!38371) b!72088))

(assert (= (and b!72088 (not res!38370)) b!72089))

(declare-fun m!69899 () Bool)

(assert (=> d!16339 m!69899))

(declare-fun m!69901 () Bool)

(assert (=> d!16339 m!69901))

(declare-fun m!69903 () Bool)

(assert (=> b!72089 m!69903))

(assert (=> b!71451 d!16339))

(declare-fun d!16341 () Bool)

(declare-fun res!38372 () Bool)

(declare-fun e!47166 () Bool)

(assert (=> d!16341 (=> res!38372 e!47166)))

(assert (=> d!16341 (= res!38372 (or ((_ is Nil!1473) lt!31536) ((_ is Nil!1473) (t!5012 lt!31536))))))

(assert (=> d!16341 (= (isStrictlySorted!291 lt!31536) e!47166)))

(declare-fun b!72090 () Bool)

(declare-fun e!47167 () Bool)

(assert (=> b!72090 (= e!47166 e!47167)))

(declare-fun res!38373 () Bool)

(assert (=> b!72090 (=> (not res!38373) (not e!47167))))

(assert (=> b!72090 (= res!38373 (bvslt (_1!1068 (h!2058 lt!31536)) (_1!1068 (h!2058 (t!5012 lt!31536)))))))

(declare-fun b!72091 () Bool)

(assert (=> b!72091 (= e!47167 (isStrictlySorted!291 (t!5012 lt!31536)))))

(assert (= (and d!16341 (not res!38372)) b!72090))

(assert (= (and b!72090 res!38373) b!72091))

(declare-fun m!69905 () Bool)

(assert (=> b!72091 m!69905))

(assert (=> d!15849 d!16341))

(declare-fun d!16343 () Bool)

(declare-fun res!38374 () Bool)

(declare-fun e!47168 () Bool)

(assert (=> d!16343 (=> res!38374 e!47168)))

(assert (=> d!16343 (= res!38374 (or ((_ is Nil!1473) (toList!723 (+!93 lt!31270 lt!31265))) ((_ is Nil!1473) (t!5012 (toList!723 (+!93 lt!31270 lt!31265))))))))

(assert (=> d!16343 (= (isStrictlySorted!291 (toList!723 (+!93 lt!31270 lt!31265))) e!47168)))

(declare-fun b!72092 () Bool)

(declare-fun e!47169 () Bool)

(assert (=> b!72092 (= e!47168 e!47169)))

(declare-fun res!38375 () Bool)

(assert (=> b!72092 (=> (not res!38375) (not e!47169))))

(assert (=> b!72092 (= res!38375 (bvslt (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 lt!31265)))) (_1!1068 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31265)))))))))

(declare-fun b!72093 () Bool)

(assert (=> b!72093 (= e!47169 (isStrictlySorted!291 (t!5012 (toList!723 (+!93 lt!31270 lt!31265)))))))

(assert (= (and d!16343 (not res!38374)) b!72092))

(assert (= (and b!72092 res!38375) b!72093))

(declare-fun m!69907 () Bool)

(assert (=> b!72093 m!69907))

(assert (=> d!15849 d!16343))

(declare-fun d!16345 () Bool)

(declare-fun e!47170 () Bool)

(assert (=> d!16345 e!47170))

(declare-fun res!38376 () Bool)

(assert (=> d!16345 (=> res!38376 e!47170)))

(declare-fun lt!32132 () Bool)

(assert (=> d!16345 (= res!38376 (not lt!32132))))

(declare-fun lt!32131 () Bool)

(assert (=> d!16345 (= lt!32132 lt!32131)))

(declare-fun lt!32130 () Unit!2002)

(declare-fun e!47171 () Unit!2002)

(assert (=> d!16345 (= lt!32130 e!47171)))

(declare-fun c!10590 () Bool)

(assert (=> d!16345 (= c!10590 lt!32131)))

(assert (=> d!16345 (= lt!32131 (containsKey!136 (toList!723 lt!31868) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16345 (= (contains!719 lt!31868 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32132)))

(declare-fun b!72094 () Bool)

(declare-fun lt!32133 () Unit!2002)

(assert (=> b!72094 (= e!47171 lt!32133)))

(assert (=> b!72094 (= lt!32133 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31868) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72094 (isDefined!85 (getValueByKey!132 (toList!723 lt!31868) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72095 () Bool)

(declare-fun Unit!2049 () Unit!2002)

(assert (=> b!72095 (= e!47171 Unit!2049)))

(declare-fun b!72096 () Bool)

(assert (=> b!72096 (= e!47170 (isDefined!85 (getValueByKey!132 (toList!723 lt!31868) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16345 c!10590) b!72094))

(assert (= (and d!16345 (not c!10590)) b!72095))

(assert (= (and d!16345 (not res!38376)) b!72096))

(declare-fun m!69909 () Bool)

(assert (=> d!16345 m!69909))

(declare-fun m!69911 () Bool)

(assert (=> b!72094 m!69911))

(declare-fun m!69913 () Bool)

(assert (=> b!72094 m!69913))

(assert (=> b!72094 m!69913))

(declare-fun m!69915 () Bool)

(assert (=> b!72094 m!69915))

(assert (=> b!72096 m!69913))

(assert (=> b!72096 m!69913))

(assert (=> b!72096 m!69915))

(assert (=> d!16019 d!16345))

(assert (=> d!16019 d!15827))

(declare-fun d!16347 () Bool)

(assert (=> d!16347 (= (get!1136 (getValueByKey!132 (toList!723 lt!31511) lt!31510)) (v!2518 (getValueByKey!132 (toList!723 lt!31511) lt!31510)))))

(assert (=> d!15989 d!16347))

(declare-fun b!72100 () Bool)

(declare-fun e!47173 () Option!138)

(assert (=> b!72100 (= e!47173 None!136)))

(declare-fun b!72098 () Bool)

(declare-fun e!47172 () Option!138)

(assert (=> b!72098 (= e!47172 e!47173)))

(declare-fun c!10592 () Bool)

(assert (=> b!72098 (= c!10592 (and ((_ is Cons!1472) (toList!723 lt!31511)) (not (= (_1!1068 (h!2058 (toList!723 lt!31511))) lt!31510))))))

(declare-fun b!72097 () Bool)

(assert (=> b!72097 (= e!47172 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31511)))))))

(declare-fun d!16349 () Bool)

(declare-fun c!10591 () Bool)

(assert (=> d!16349 (= c!10591 (and ((_ is Cons!1472) (toList!723 lt!31511)) (= (_1!1068 (h!2058 (toList!723 lt!31511))) lt!31510)))))

(assert (=> d!16349 (= (getValueByKey!132 (toList!723 lt!31511) lt!31510) e!47172)))

(declare-fun b!72099 () Bool)

(assert (=> b!72099 (= e!47173 (getValueByKey!132 (t!5012 (toList!723 lt!31511)) lt!31510))))

(assert (= (and d!16349 c!10591) b!72097))

(assert (= (and d!16349 (not c!10591)) b!72098))

(assert (= (and b!72098 c!10592) b!72099))

(assert (= (and b!72098 (not c!10592)) b!72100))

(declare-fun m!69917 () Bool)

(assert (=> b!72099 m!69917))

(assert (=> d!15989 d!16349))

(declare-fun d!16351 () Bool)

(declare-fun lt!32134 () Bool)

(assert (=> d!16351 (= lt!32134 (select (content!76 lt!31603) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun e!47174 () Bool)

(assert (=> d!16351 (= lt!32134 e!47174)))

(declare-fun res!38378 () Bool)

(assert (=> d!16351 (=> (not res!38378) (not e!47174))))

(assert (=> d!16351 (= res!38378 ((_ is Cons!1472) lt!31603))))

(assert (=> d!16351 (= (contains!722 lt!31603 (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))) lt!32134)))

(declare-fun b!72101 () Bool)

(declare-fun e!47175 () Bool)

(assert (=> b!72101 (= e!47174 e!47175)))

(declare-fun res!38377 () Bool)

(assert (=> b!72101 (=> res!38377 e!47175)))

(assert (=> b!72101 (= res!38377 (= (h!2058 lt!31603) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun b!72102 () Bool)

(assert (=> b!72102 (= e!47175 (contains!722 (t!5012 lt!31603) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(assert (= (and d!16351 res!38378) b!72101))

(assert (= (and b!72101 (not res!38377)) b!72102))

(declare-fun m!69919 () Bool)

(assert (=> d!16351 m!69919))

(declare-fun m!69921 () Bool)

(assert (=> d!16351 m!69921))

(declare-fun m!69923 () Bool)

(assert (=> b!72102 m!69923))

(assert (=> b!71275 d!16351))

(declare-fun d!16353 () Bool)

(declare-fun res!38379 () Bool)

(declare-fun e!47176 () Bool)

(assert (=> d!16353 (=> res!38379 e!47176)))

(assert (=> d!16353 (= res!38379 (and ((_ is Cons!1472) (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))) (= (_1!1068 (h!2058 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (=> d!16353 (= (containsKey!136 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) e!47176)))

(declare-fun b!72103 () Bool)

(declare-fun e!47177 () Bool)

(assert (=> b!72103 (= e!47176 e!47177)))

(declare-fun res!38380 () Bool)

(assert (=> b!72103 (=> (not res!38380) (not e!47177))))

(assert (=> b!72103 (= res!38380 (and (or (not ((_ is Cons!1472) (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))))) (bvsle (_1!1068 (h!2058 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))) ((_ is Cons!1472) (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))) (bvslt (_1!1068 (h!2058 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(declare-fun b!72104 () Bool)

(assert (=> b!72104 (= e!47177 (containsKey!136 (t!5012 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16353 (not res!38379)) b!72103))

(assert (= (and b!72103 res!38380) b!72104))

(assert (=> b!72104 m!67893))

(declare-fun m!69925 () Bool)

(assert (=> b!72104 m!69925))

(assert (=> d!15855 d!16353))

(declare-fun b!72105 () Bool)

(declare-fun e!47182 () ListLongMap!1415)

(assert (=> b!72105 (= e!47182 (ListLongMap!1416 Nil!1473))))

(declare-fun d!16355 () Bool)

(declare-fun e!47181 () Bool)

(assert (=> d!16355 e!47181))

(declare-fun res!38383 () Bool)

(assert (=> d!16355 (=> (not res!38383) (not e!47181))))

(declare-fun lt!32140 () ListLongMap!1415)

(assert (=> d!16355 (= res!38383 (not (contains!719 lt!32140 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16355 (= lt!32140 e!47182)))

(declare-fun c!10596 () Bool)

(assert (=> d!16355 (= c!10596 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16355 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16355 (= (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite c!10286 (_values!2175 newMap!16) lt!31387) (mask!6149 newMap!16) (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32140)))

(declare-fun call!6270 () ListLongMap!1415)

(declare-fun bm!6267 () Bool)

(assert (=> bm!6267 (= call!6270 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite c!10286 (_values!2175 newMap!16) lt!31387) (mask!6149 newMap!16) (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) (minValue!2096 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16)))))

(declare-fun b!72106 () Bool)

(declare-fun e!47180 () Bool)

(declare-fun e!47183 () Bool)

(assert (=> b!72106 (= e!47180 e!47183)))

(assert (=> b!72106 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun res!38384 () Bool)

(assert (=> b!72106 (= res!38384 (contains!719 lt!32140 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72106 (=> (not res!38384) (not e!47183))))

(declare-fun b!72107 () Bool)

(declare-fun e!47178 () Bool)

(assert (=> b!72107 (= e!47178 (isEmpty!313 lt!32140))))

(declare-fun b!72108 () Bool)

(assert (=> b!72108 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> b!72108 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (ite c!10286 (_values!2175 newMap!16) lt!31387))))))

(assert (=> b!72108 (= e!47183 (= (apply!74 lt!32140 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (ite c!10286 (_values!2175 newMap!16) lt!31387)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!72109 () Bool)

(declare-fun res!38381 () Bool)

(assert (=> b!72109 (=> (not res!38381) (not e!47181))))

(assert (=> b!72109 (= res!38381 (not (contains!719 lt!32140 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72110 () Bool)

(declare-fun e!47179 () ListLongMap!1415)

(assert (=> b!72110 (= e!47182 e!47179)))

(declare-fun c!10595 () Bool)

(assert (=> b!72110 (= c!10595 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72111 () Bool)

(assert (=> b!72111 (= e!47178 (= lt!32140 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (ite c!10286 (_values!2175 newMap!16) lt!31387) (mask!6149 newMap!16) (ite (and c!10286 c!10284) lt!31389 (extraKeys!2055 newMap!16)) (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) (minValue!2096 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2192 newMap!16))))))

(declare-fun b!72112 () Bool)

(declare-fun lt!32141 () Unit!2002)

(declare-fun lt!32137 () Unit!2002)

(assert (=> b!72112 (= lt!32141 lt!32137)))

(declare-fun lt!32136 () (_ BitVec 64))

(declare-fun lt!32139 () (_ BitVec 64))

(declare-fun lt!32135 () ListLongMap!1415)

(declare-fun lt!32138 () V!2939)

(assert (=> b!72112 (not (contains!719 (+!93 lt!32135 (tuple2!2115 lt!32136 lt!32138)) lt!32139))))

(assert (=> b!72112 (= lt!32137 (addStillNotContains!23 lt!32135 lt!32136 lt!32138 lt!32139))))

(assert (=> b!72112 (= lt!32139 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!72112 (= lt!32138 (get!1133 (select (arr!1854 (ite c!10286 (_values!2175 newMap!16) lt!31387)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!72112 (= lt!32136 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72112 (= lt!32135 call!6270)))

(assert (=> b!72112 (= e!47179 (+!93 call!6270 (tuple2!2115 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000) (get!1133 (select (arr!1854 (ite c!10286 (_values!2175 newMap!16) lt!31387)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!72113 () Bool)

(assert (=> b!72113 (= e!47181 e!47180)))

(declare-fun c!10593 () Bool)

(declare-fun e!47184 () Bool)

(assert (=> b!72113 (= c!10593 e!47184)))

(declare-fun res!38382 () Bool)

(assert (=> b!72113 (=> (not res!38382) (not e!47184))))

(assert (=> b!72113 (= res!38382 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72114 () Bool)

(assert (=> b!72114 (= e!47184 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72114 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!72115 () Bool)

(assert (=> b!72115 (= e!47180 e!47178)))

(declare-fun c!10594 () Bool)

(assert (=> b!72115 (= c!10594 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72116 () Bool)

(assert (=> b!72116 (= e!47179 call!6270)))

(assert (= (and d!16355 c!10596) b!72105))

(assert (= (and d!16355 (not c!10596)) b!72110))

(assert (= (and b!72110 c!10595) b!72112))

(assert (= (and b!72110 (not c!10595)) b!72116))

(assert (= (or b!72112 b!72116) bm!6267))

(assert (= (and d!16355 res!38383) b!72109))

(assert (= (and b!72109 res!38381) b!72113))

(assert (= (and b!72113 res!38382) b!72114))

(assert (= (and b!72113 c!10593) b!72106))

(assert (= (and b!72113 (not c!10593)) b!72115))

(assert (= (and b!72106 res!38384) b!72108))

(assert (= (and b!72115 c!10594) b!72111))

(assert (= (and b!72115 (not c!10594)) b!72107))

(declare-fun b_lambda!3233 () Bool)

(assert (=> (not b_lambda!3233) (not b!72108)))

(assert (=> b!72108 t!5019))

(declare-fun b_and!4443 () Bool)

(assert (= b_and!4439 (and (=> t!5019 result!2665) b_and!4443)))

(assert (=> b!72108 t!5021))

(declare-fun b_and!4445 () Bool)

(assert (= b_and!4441 (and (=> t!5021 result!2667) b_and!4445)))

(declare-fun b_lambda!3235 () Bool)

(assert (=> (not b_lambda!3235) (not b!72112)))

(assert (=> b!72112 t!5019))

(declare-fun b_and!4447 () Bool)

(assert (= b_and!4443 (and (=> t!5019 result!2665) b_and!4447)))

(assert (=> b!72112 t!5021))

(declare-fun b_and!4449 () Bool)

(assert (= b_and!4445 (and (=> t!5021 result!2667) b_and!4449)))

(declare-fun m!69927 () Bool)

(assert (=> b!72109 m!69927))

(declare-fun m!69929 () Bool)

(assert (=> b!72107 m!69929))

(declare-fun m!69931 () Bool)

(assert (=> bm!6267 m!69931))

(assert (=> b!72108 m!68603))

(assert (=> b!72108 m!68287))

(assert (=> b!72108 m!68605))

(assert (=> b!72108 m!68283))

(declare-fun m!69933 () Bool)

(assert (=> b!72108 m!69933))

(assert (=> b!72108 m!68603))

(assert (=> b!72108 m!68283))

(assert (=> b!72108 m!68287))

(assert (=> b!72110 m!68283))

(assert (=> b!72110 m!68283))

(assert (=> b!72110 m!68297))

(assert (=> b!72114 m!68283))

(assert (=> b!72114 m!68283))

(assert (=> b!72114 m!68297))

(assert (=> b!72111 m!69931))

(assert (=> b!72106 m!68283))

(assert (=> b!72106 m!68283))

(declare-fun m!69935 () Bool)

(assert (=> b!72106 m!69935))

(declare-fun m!69937 () Bool)

(assert (=> d!16355 m!69937))

(assert (=> d!16355 m!68263))

(declare-fun m!69939 () Bool)

(assert (=> b!72112 m!69939))

(assert (=> b!72112 m!68603))

(assert (=> b!72112 m!68287))

(assert (=> b!72112 m!68605))

(declare-fun m!69941 () Bool)

(assert (=> b!72112 m!69941))

(assert (=> b!72112 m!68603))

(declare-fun m!69943 () Bool)

(assert (=> b!72112 m!69943))

(assert (=> b!72112 m!69943))

(declare-fun m!69945 () Bool)

(assert (=> b!72112 m!69945))

(assert (=> b!72112 m!68283))

(assert (=> b!72112 m!68287))

(assert (=> bm!6195 d!16355))

(assert (=> d!15999 d!15857))

(declare-fun b!72117 () Bool)

(declare-fun c!10598 () Bool)

(assert (=> b!72117 (= c!10598 (and (not (= (bvand lt!31389 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!31389 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47194 () ListLongMap!1415)

(declare-fun e!47192 () ListLongMap!1415)

(assert (=> b!72117 (= e!47194 e!47192)))

(declare-fun b!72118 () Bool)

(declare-fun e!47190 () Bool)

(declare-fun e!47185 () Bool)

(assert (=> b!72118 (= e!47190 e!47185)))

(declare-fun res!38392 () Bool)

(declare-fun call!6273 () Bool)

(assert (=> b!72118 (= res!38392 call!6273)))

(assert (=> b!72118 (=> (not res!38392) (not e!47185))))

(declare-fun b!72119 () Bool)

(declare-fun e!47187 () Bool)

(declare-fun lt!32159 () ListLongMap!1415)

(assert (=> b!72119 (= e!47187 (= (apply!74 lt!32159 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31264))))

(declare-fun b!72120 () Bool)

(declare-fun e!47191 () Bool)

(assert (=> b!72120 (= e!47191 e!47187)))

(declare-fun res!38391 () Bool)

(declare-fun call!6271 () Bool)

(assert (=> b!72120 (= res!38391 call!6271)))

(assert (=> b!72120 (=> (not res!38391) (not e!47187))))

(declare-fun bm!6268 () Bool)

(assert (=> bm!6268 (= call!6273 (contains!719 lt!32159 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6269 () Bool)

(declare-fun call!6274 () ListLongMap!1415)

(declare-fun call!6275 () ListLongMap!1415)

(assert (=> bm!6269 (= call!6274 call!6275)))

(declare-fun b!72122 () Bool)

(declare-fun call!6277 () ListLongMap!1415)

(assert (=> b!72122 (= e!47192 call!6277)))

(declare-fun b!72123 () Bool)

(declare-fun e!47197 () Bool)

(assert (=> b!72123 (= e!47197 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6270 () Bool)

(declare-fun call!6272 () ListLongMap!1415)

(declare-fun call!6276 () ListLongMap!1415)

(assert (=> bm!6270 (= call!6272 call!6276)))

(declare-fun b!72124 () Bool)

(declare-fun e!47193 () Unit!2002)

(declare-fun lt!32162 () Unit!2002)

(assert (=> b!72124 (= e!47193 lt!32162)))

(declare-fun lt!32151 () ListLongMap!1415)

(assert (=> b!72124 (= lt!32151 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31389 lt!31264 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32160 () (_ BitVec 64))

(assert (=> b!72124 (= lt!32160 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32145 () (_ BitVec 64))

(assert (=> b!72124 (= lt!32145 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32157 () Unit!2002)

(assert (=> b!72124 (= lt!32157 (addStillContains!50 lt!32151 lt!32160 lt!31264 lt!32145))))

(assert (=> b!72124 (contains!719 (+!93 lt!32151 (tuple2!2115 lt!32160 lt!31264)) lt!32145)))

(declare-fun lt!32163 () Unit!2002)

(assert (=> b!72124 (= lt!32163 lt!32157)))

(declare-fun lt!32144 () ListLongMap!1415)

(assert (=> b!72124 (= lt!32144 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31389 lt!31264 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32150 () (_ BitVec 64))

(assert (=> b!72124 (= lt!32150 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32154 () (_ BitVec 64))

(assert (=> b!72124 (= lt!32154 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32156 () Unit!2002)

(assert (=> b!72124 (= lt!32156 (addApplyDifferent!50 lt!32144 lt!32150 (minValue!2096 newMap!16) lt!32154))))

(assert (=> b!72124 (= (apply!74 (+!93 lt!32144 (tuple2!2115 lt!32150 (minValue!2096 newMap!16))) lt!32154) (apply!74 lt!32144 lt!32154))))

(declare-fun lt!32161 () Unit!2002)

(assert (=> b!72124 (= lt!32161 lt!32156)))

(declare-fun lt!32158 () ListLongMap!1415)

(assert (=> b!72124 (= lt!32158 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31389 lt!31264 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32152 () (_ BitVec 64))

(assert (=> b!72124 (= lt!32152 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32146 () (_ BitVec 64))

(assert (=> b!72124 (= lt!32146 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32149 () Unit!2002)

(assert (=> b!72124 (= lt!32149 (addApplyDifferent!50 lt!32158 lt!32152 lt!31264 lt!32146))))

(assert (=> b!72124 (= (apply!74 (+!93 lt!32158 (tuple2!2115 lt!32152 lt!31264)) lt!32146) (apply!74 lt!32158 lt!32146))))

(declare-fun lt!32153 () Unit!2002)

(assert (=> b!72124 (= lt!32153 lt!32149)))

(declare-fun lt!32148 () ListLongMap!1415)

(assert (=> b!72124 (= lt!32148 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31389 lt!31264 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32143 () (_ BitVec 64))

(assert (=> b!72124 (= lt!32143 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32147 () (_ BitVec 64))

(assert (=> b!72124 (= lt!32147 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72124 (= lt!32162 (addApplyDifferent!50 lt!32148 lt!32143 (minValue!2096 newMap!16) lt!32147))))

(assert (=> b!72124 (= (apply!74 (+!93 lt!32148 (tuple2!2115 lt!32143 (minValue!2096 newMap!16))) lt!32147) (apply!74 lt!32148 lt!32147))))

(declare-fun b!72125 () Bool)

(declare-fun e!47195 () Bool)

(declare-fun e!47186 () Bool)

(assert (=> b!72125 (= e!47195 e!47186)))

(declare-fun res!38390 () Bool)

(assert (=> b!72125 (=> (not res!38390) (not e!47186))))

(assert (=> b!72125 (= res!38390 (contains!719 lt!32159 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72125 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72126 () Bool)

(assert (=> b!72126 (= e!47191 (not call!6271))))

(declare-fun b!72127 () Bool)

(declare-fun e!47196 () Bool)

(assert (=> b!72127 (= e!47196 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72128 () Bool)

(assert (=> b!72128 (= e!47194 call!6272)))

(declare-fun b!72129 () Bool)

(declare-fun e!47189 () ListLongMap!1415)

(assert (=> b!72129 (= e!47189 e!47194)))

(declare-fun c!10600 () Bool)

(assert (=> b!72129 (= c!10600 (and (not (= (bvand lt!31389 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!31389 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6271 () Bool)

(assert (=> bm!6271 (= call!6271 (contains!719 lt!32159 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72130 () Bool)

(assert (=> b!72130 (= e!47186 (= (apply!74 lt!32159 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72130 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (_values!2175 newMap!16))))))

(assert (=> b!72130 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72121 () Bool)

(assert (=> b!72121 (= e!47190 (not call!6273))))

(declare-fun d!16357 () Bool)

(declare-fun e!47188 () Bool)

(assert (=> d!16357 e!47188))

(declare-fun res!38388 () Bool)

(assert (=> d!16357 (=> (not res!38388) (not e!47188))))

(assert (=> d!16357 (= res!38388 (or (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))))

(declare-fun lt!32142 () ListLongMap!1415)

(assert (=> d!16357 (= lt!32159 lt!32142)))

(declare-fun lt!32155 () Unit!2002)

(assert (=> d!16357 (= lt!32155 e!47193)))

(declare-fun c!10601 () Bool)

(assert (=> d!16357 (= c!10601 e!47197)))

(declare-fun res!38393 () Bool)

(assert (=> d!16357 (=> (not res!38393) (not e!47197))))

(assert (=> d!16357 (= res!38393 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16357 (= lt!32142 e!47189)))

(declare-fun c!10602 () Bool)

(assert (=> d!16357 (= c!10602 (and (not (= (bvand lt!31389 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!31389 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16357 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16357 (= (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31389 lt!31264 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32159)))

(declare-fun b!72131 () Bool)

(declare-fun Unit!2050 () Unit!2002)

(assert (=> b!72131 (= e!47193 Unit!2050)))

(declare-fun b!72132 () Bool)

(assert (=> b!72132 (= e!47185 (= (apply!74 lt!32159 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun bm!6272 () Bool)

(assert (=> bm!6272 (= call!6276 (+!93 (ite c!10602 call!6275 (ite c!10600 call!6274 call!6277)) (ite (or c!10602 c!10600) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun b!72133 () Bool)

(declare-fun res!38389 () Bool)

(assert (=> b!72133 (=> (not res!38389) (not e!47188))))

(assert (=> b!72133 (= res!38389 e!47191)))

(declare-fun c!10599 () Bool)

(assert (=> b!72133 (= c!10599 (not (= (bvand lt!31389 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6273 () Bool)

(assert (=> bm!6273 (= call!6275 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31389 lt!31264 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!72134 () Bool)

(assert (=> b!72134 (= e!47189 (+!93 call!6276 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun bm!6274 () Bool)

(assert (=> bm!6274 (= call!6277 call!6274)))

(declare-fun b!72135 () Bool)

(assert (=> b!72135 (= e!47192 call!6272)))

(declare-fun b!72136 () Bool)

(declare-fun res!38386 () Bool)

(assert (=> b!72136 (=> (not res!38386) (not e!47188))))

(assert (=> b!72136 (= res!38386 e!47195)))

(declare-fun res!38387 () Bool)

(assert (=> b!72136 (=> res!38387 e!47195)))

(assert (=> b!72136 (= res!38387 (not e!47196))))

(declare-fun res!38385 () Bool)

(assert (=> b!72136 (=> (not res!38385) (not e!47196))))

(assert (=> b!72136 (= res!38385 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72137 () Bool)

(assert (=> b!72137 (= e!47188 e!47190)))

(declare-fun c!10597 () Bool)

(assert (=> b!72137 (= c!10597 (not (= (bvand lt!31389 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!16357 c!10602) b!72134))

(assert (= (and d!16357 (not c!10602)) b!72129))

(assert (= (and b!72129 c!10600) b!72128))

(assert (= (and b!72129 (not c!10600)) b!72117))

(assert (= (and b!72117 c!10598) b!72135))

(assert (= (and b!72117 (not c!10598)) b!72122))

(assert (= (or b!72135 b!72122) bm!6274))

(assert (= (or b!72128 bm!6274) bm!6269))

(assert (= (or b!72128 b!72135) bm!6270))

(assert (= (or b!72134 bm!6269) bm!6273))

(assert (= (or b!72134 bm!6270) bm!6272))

(assert (= (and d!16357 res!38393) b!72123))

(assert (= (and d!16357 c!10601) b!72124))

(assert (= (and d!16357 (not c!10601)) b!72131))

(assert (= (and d!16357 res!38388) b!72136))

(assert (= (and b!72136 res!38385) b!72127))

(assert (= (and b!72136 (not res!38387)) b!72125))

(assert (= (and b!72125 res!38390) b!72130))

(assert (= (and b!72136 res!38386) b!72133))

(assert (= (and b!72133 c!10599) b!72120))

(assert (= (and b!72133 (not c!10599)) b!72126))

(assert (= (and b!72120 res!38391) b!72119))

(assert (= (or b!72120 b!72126) bm!6271))

(assert (= (and b!72133 res!38389) b!72137))

(assert (= (and b!72137 c!10597) b!72118))

(assert (= (and b!72137 (not c!10597)) b!72121))

(assert (= (and b!72118 res!38392) b!72132))

(assert (= (or b!72118 b!72121) bm!6268))

(declare-fun b_lambda!3237 () Bool)

(assert (=> (not b_lambda!3237) (not b!72130)))

(assert (=> b!72130 t!5019))

(declare-fun b_and!4451 () Bool)

(assert (= b_and!4447 (and (=> t!5019 result!2665) b_and!4451)))

(assert (=> b!72130 t!5021))

(declare-fun b_and!4453 () Bool)

(assert (= b_and!4449 (and (=> t!5021 result!2667) b_and!4453)))

(assert (=> b!72125 m!68283))

(assert (=> b!72125 m!68283))

(declare-fun m!69947 () Bool)

(assert (=> b!72125 m!69947))

(assert (=> b!72130 m!68287))

(assert (=> b!72130 m!68283))

(declare-fun m!69949 () Bool)

(assert (=> b!72130 m!69949))

(assert (=> b!72130 m!68283))

(assert (=> b!72130 m!68291))

(assert (=> b!72130 m!68291))

(assert (=> b!72130 m!68287))

(assert (=> b!72130 m!68293))

(declare-fun m!69951 () Bool)

(assert (=> bm!6273 m!69951))

(assert (=> b!72123 m!68283))

(assert (=> b!72123 m!68283))

(assert (=> b!72123 m!68297))

(declare-fun m!69953 () Bool)

(assert (=> b!72119 m!69953))

(declare-fun m!69955 () Bool)

(assert (=> bm!6272 m!69955))

(declare-fun m!69957 () Bool)

(assert (=> b!72132 m!69957))

(declare-fun m!69959 () Bool)

(assert (=> b!72134 m!69959))

(assert (=> d!16357 m!68263))

(declare-fun m!69961 () Bool)

(assert (=> bm!6268 m!69961))

(declare-fun m!69963 () Bool)

(assert (=> b!72124 m!69963))

(declare-fun m!69965 () Bool)

(assert (=> b!72124 m!69965))

(declare-fun m!69967 () Bool)

(assert (=> b!72124 m!69967))

(declare-fun m!69969 () Bool)

(assert (=> b!72124 m!69969))

(assert (=> b!72124 m!69963))

(declare-fun m!69971 () Bool)

(assert (=> b!72124 m!69971))

(declare-fun m!69973 () Bool)

(assert (=> b!72124 m!69973))

(declare-fun m!69975 () Bool)

(assert (=> b!72124 m!69975))

(declare-fun m!69977 () Bool)

(assert (=> b!72124 m!69977))

(assert (=> b!72124 m!68283))

(declare-fun m!69979 () Bool)

(assert (=> b!72124 m!69979))

(assert (=> b!72124 m!69951))

(assert (=> b!72124 m!69965))

(declare-fun m!69981 () Bool)

(assert (=> b!72124 m!69981))

(declare-fun m!69983 () Bool)

(assert (=> b!72124 m!69983))

(assert (=> b!72124 m!69977))

(declare-fun m!69985 () Bool)

(assert (=> b!72124 m!69985))

(declare-fun m!69987 () Bool)

(assert (=> b!72124 m!69987))

(declare-fun m!69989 () Bool)

(assert (=> b!72124 m!69989))

(assert (=> b!72124 m!69987))

(declare-fun m!69991 () Bool)

(assert (=> b!72124 m!69991))

(declare-fun m!69993 () Bool)

(assert (=> bm!6271 m!69993))

(assert (=> b!72127 m!68283))

(assert (=> b!72127 m!68283))

(assert (=> b!72127 m!68297))

(assert (=> d!15999 d!16357))

(assert (=> d!15999 d!16145))

(declare-fun d!16359 () Bool)

(assert (=> d!16359 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) lt!31389 lt!31264 (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(assert (=> d!16359 true))

(declare-fun _$7!59 () Unit!2002)

(assert (=> d!16359 (= (choose!407 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) lt!31389 (zeroValue!2096 newMap!16) lt!31264 (minValue!2096 newMap!16) (defaultEntry!2192 newMap!16)) _$7!59)))

(declare-fun bs!3101 () Bool)

(assert (= bs!3101 d!16359))

(assert (=> bs!3101 m!68051))

(assert (=> bs!3101 m!68051))

(assert (=> bs!3101 m!68891))

(assert (=> bs!3101 m!68887))

(assert (=> d!15999 d!16359))

(declare-fun d!16361 () Bool)

(declare-fun e!47198 () Bool)

(assert (=> d!16361 e!47198))

(declare-fun res!38394 () Bool)

(assert (=> d!16361 (=> (not res!38394) (not e!47198))))

(declare-fun lt!32166 () ListLongMap!1415)

(assert (=> d!16361 (= res!38394 (contains!719 lt!32166 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264))))))

(declare-fun lt!32167 () List!1476)

(assert (=> d!16361 (= lt!32166 (ListLongMap!1416 lt!32167))))

(declare-fun lt!32165 () Unit!2002)

(declare-fun lt!32164 () Unit!2002)

(assert (=> d!16361 (= lt!32165 lt!32164)))

(assert (=> d!16361 (= (getValueByKey!132 lt!32167 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264))) (Some!137 (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264))))))

(assert (=> d!16361 (= lt!32164 (lemmaContainsTupThenGetReturnValue!49 lt!32167 (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264))))))

(assert (=> d!16361 (= lt!32167 (insertStrictlySorted!52 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264))))))

(assert (=> d!16361 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264)) lt!32166)))

(declare-fun b!72138 () Bool)

(declare-fun res!38395 () Bool)

(assert (=> b!72138 (=> (not res!38395) (not e!47198))))

(assert (=> b!72138 (= res!38395 (= (getValueByKey!132 (toList!723 lt!32166) (_1!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264))) (Some!137 (_2!1068 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264)))))))

(declare-fun b!72139 () Bool)

(assert (=> b!72139 (= e!47198 (contains!722 (toList!723 lt!32166) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264)))))

(assert (= (and d!16361 res!38394) b!72138))

(assert (= (and b!72138 res!38395) b!72139))

(declare-fun m!69995 () Bool)

(assert (=> d!16361 m!69995))

(declare-fun m!69997 () Bool)

(assert (=> d!16361 m!69997))

(declare-fun m!69999 () Bool)

(assert (=> d!16361 m!69999))

(declare-fun m!70001 () Bool)

(assert (=> d!16361 m!70001))

(declare-fun m!70003 () Bool)

(assert (=> b!72138 m!70003))

(declare-fun m!70005 () Bool)

(assert (=> b!72139 m!70005))

(assert (=> d!15999 d!16361))

(declare-fun d!16363 () Bool)

(declare-fun res!38396 () Bool)

(declare-fun e!47199 () Bool)

(assert (=> d!16363 (=> res!38396 e!47199)))

(assert (=> d!16363 (= res!38396 (or ((_ is Nil!1473) lt!31603) ((_ is Nil!1473) (t!5012 lt!31603))))))

(assert (=> d!16363 (= (isStrictlySorted!291 lt!31603) e!47199)))

(declare-fun b!72140 () Bool)

(declare-fun e!47200 () Bool)

(assert (=> b!72140 (= e!47199 e!47200)))

(declare-fun res!38397 () Bool)

(assert (=> b!72140 (=> (not res!38397) (not e!47200))))

(assert (=> b!72140 (= res!38397 (bvslt (_1!1068 (h!2058 lt!31603)) (_1!1068 (h!2058 (t!5012 lt!31603)))))))

(declare-fun b!72141 () Bool)

(assert (=> b!72141 (= e!47200 (isStrictlySorted!291 (t!5012 lt!31603)))))

(assert (= (and d!16363 (not res!38396)) b!72140))

(assert (= (and b!72140 res!38397) b!72141))

(declare-fun m!70007 () Bool)

(assert (=> b!72141 m!70007))

(assert (=> d!15891 d!16363))

(declare-fun d!16365 () Bool)

(declare-fun res!38398 () Bool)

(declare-fun e!47201 () Bool)

(assert (=> d!16365 (=> res!38398 e!47201)))

(assert (=> d!16365 (= res!38398 (or ((_ is Nil!1473) (toList!723 lt!31270)) ((_ is Nil!1473) (t!5012 (toList!723 lt!31270)))))))

(assert (=> d!16365 (= (isStrictlySorted!291 (toList!723 lt!31270)) e!47201)))

(declare-fun b!72142 () Bool)

(declare-fun e!47202 () Bool)

(assert (=> b!72142 (= e!47201 e!47202)))

(declare-fun res!38399 () Bool)

(assert (=> b!72142 (=> (not res!38399) (not e!47202))))

(assert (=> b!72142 (= res!38399 (bvslt (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 (h!2058 (t!5012 (toList!723 lt!31270))))))))

(declare-fun b!72143 () Bool)

(assert (=> b!72143 (= e!47202 (isStrictlySorted!291 (t!5012 (toList!723 lt!31270))))))

(assert (= (and d!16365 (not res!38398)) b!72142))

(assert (= (and b!72142 res!38399) b!72143))

(declare-fun m!70009 () Bool)

(assert (=> b!72143 m!70009))

(assert (=> d!15891 d!16365))

(assert (=> d!15913 d!15915))

(assert (=> d!15913 d!15909))

(declare-fun d!16367 () Bool)

(assert (=> d!16367 (not (contains!719 (+!93 lt!31439 (tuple2!2115 lt!31440 lt!31442)) lt!31443))))

(assert (=> d!16367 true))

(declare-fun _$36!298 () Unit!2002)

(assert (=> d!16367 (= (choose!401 lt!31439 lt!31440 lt!31442 lt!31443) _$36!298)))

(declare-fun bs!3102 () Bool)

(assert (= bs!3102 d!16367))

(assert (=> bs!3102 m!68121))

(assert (=> bs!3102 m!68121))

(assert (=> bs!3102 m!68123))

(assert (=> d!15913 d!16367))

(declare-fun d!16369 () Bool)

(declare-fun e!47203 () Bool)

(assert (=> d!16369 e!47203))

(declare-fun res!38400 () Bool)

(assert (=> d!16369 (=> res!38400 e!47203)))

(declare-fun lt!32170 () Bool)

(assert (=> d!16369 (= res!38400 (not lt!32170))))

(declare-fun lt!32169 () Bool)

(assert (=> d!16369 (= lt!32170 lt!32169)))

(declare-fun lt!32168 () Unit!2002)

(declare-fun e!47204 () Unit!2002)

(assert (=> d!16369 (= lt!32168 e!47204)))

(declare-fun c!10603 () Bool)

(assert (=> d!16369 (= c!10603 lt!32169)))

(assert (=> d!16369 (= lt!32169 (containsKey!136 (toList!723 lt!31439) lt!31443))))

(assert (=> d!16369 (= (contains!719 lt!31439 lt!31443) lt!32170)))

(declare-fun b!72145 () Bool)

(declare-fun lt!32171 () Unit!2002)

(assert (=> b!72145 (= e!47204 lt!32171)))

(assert (=> b!72145 (= lt!32171 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31439) lt!31443))))

(assert (=> b!72145 (isDefined!85 (getValueByKey!132 (toList!723 lt!31439) lt!31443))))

(declare-fun b!72146 () Bool)

(declare-fun Unit!2051 () Unit!2002)

(assert (=> b!72146 (= e!47204 Unit!2051)))

(declare-fun b!72147 () Bool)

(assert (=> b!72147 (= e!47203 (isDefined!85 (getValueByKey!132 (toList!723 lt!31439) lt!31443)))))

(assert (= (and d!16369 c!10603) b!72145))

(assert (= (and d!16369 (not c!10603)) b!72146))

(assert (= (and d!16369 (not res!38400)) b!72147))

(declare-fun m!70011 () Bool)

(assert (=> d!16369 m!70011))

(declare-fun m!70013 () Bool)

(assert (=> b!72145 m!70013))

(declare-fun m!70015 () Bool)

(assert (=> b!72145 m!70015))

(assert (=> b!72145 m!70015))

(declare-fun m!70017 () Bool)

(assert (=> b!72145 m!70017))

(assert (=> b!72147 m!70015))

(assert (=> b!72147 m!70015))

(assert (=> b!72147 m!70017))

(assert (=> d!15913 d!16369))

(assert (=> b!71558 d!16131))

(declare-fun d!16371 () Bool)

(assert (=> d!16371 (= (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71570 d!16371))

(declare-fun d!16373 () Bool)

(declare-fun c!10606 () Bool)

(assert (=> d!16373 (= c!10606 ((_ is Nil!1473) (toList!723 lt!31423)))))

(declare-fun e!47207 () (InoxSet tuple2!2114))

(assert (=> d!16373 (= (content!76 (toList!723 lt!31423)) e!47207)))

(declare-fun b!72152 () Bool)

(assert (=> b!72152 (= e!47207 ((as const (Array tuple2!2114 Bool)) false))))

(declare-fun b!72153 () Bool)

(assert (=> b!72153 (= e!47207 ((_ map or) (store ((as const (Array tuple2!2114 Bool)) false) (h!2058 (toList!723 lt!31423)) true) (content!76 (t!5012 (toList!723 lt!31423)))))))

(assert (= (and d!16373 c!10606) b!72152))

(assert (= (and d!16373 (not c!10606)) b!72153))

(declare-fun m!70019 () Bool)

(assert (=> b!72153 m!70019))

(assert (=> b!72153 m!69745))

(assert (=> d!16021 d!16373))

(declare-fun d!16375 () Bool)

(declare-fun e!47208 () Bool)

(assert (=> d!16375 e!47208))

(declare-fun res!38401 () Bool)

(assert (=> d!16375 (=> res!38401 e!47208)))

(declare-fun lt!32174 () Bool)

(assert (=> d!16375 (= res!38401 (not lt!32174))))

(declare-fun lt!32173 () Bool)

(assert (=> d!16375 (= lt!32174 lt!32173)))

(declare-fun lt!32172 () Unit!2002)

(declare-fun e!47209 () Unit!2002)

(assert (=> d!16375 (= lt!32172 e!47209)))

(declare-fun c!10607 () Bool)

(assert (=> d!16375 (= c!10607 lt!32173)))

(assert (=> d!16375 (= lt!32173 (containsKey!136 (toList!723 lt!31564) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16375 (= (contains!719 lt!31564 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32174)))

(declare-fun b!72154 () Bool)

(declare-fun lt!32175 () Unit!2002)

(assert (=> b!72154 (= e!47209 lt!32175)))

(assert (=> b!72154 (= lt!32175 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31564) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72154 (isDefined!85 (getValueByKey!132 (toList!723 lt!31564) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72155 () Bool)

(declare-fun Unit!2052 () Unit!2002)

(assert (=> b!72155 (= e!47209 Unit!2052)))

(declare-fun b!72156 () Bool)

(assert (=> b!72156 (= e!47208 (isDefined!85 (getValueByKey!132 (toList!723 lt!31564) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16375 c!10607) b!72154))

(assert (= (and d!16375 (not c!10607)) b!72155))

(assert (= (and d!16375 (not res!38401)) b!72156))

(declare-fun m!70021 () Bool)

(assert (=> d!16375 m!70021))

(declare-fun m!70023 () Bool)

(assert (=> b!72154 m!70023))

(assert (=> b!72154 m!69243))

(assert (=> b!72154 m!69243))

(declare-fun m!70025 () Bool)

(assert (=> b!72154 m!70025))

(assert (=> b!72156 m!69243))

(assert (=> b!72156 m!69243))

(assert (=> b!72156 m!70025))

(assert (=> bm!6165 d!16375))

(assert (=> d!15965 d!15951))

(assert (=> d!15965 d!15953))

(declare-fun d!16377 () Bool)

(assert (=> d!16377 (isDefined!85 (getValueByKey!132 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!16377 true))

(declare-fun _$12!320 () Unit!2002)

(assert (=> d!16377 (= (choose!404 (toList!723 lt!31273) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) _$12!320)))

(declare-fun bs!3103 () Bool)

(assert (= bs!3103 d!16377))

(assert (=> bs!3103 m!67893))

(assert (=> bs!3103 m!68027))

(assert (=> bs!3103 m!68027))

(assert (=> bs!3103 m!68029))

(assert (=> d!15965 d!16377))

(declare-fun d!16379 () Bool)

(declare-fun res!38402 () Bool)

(declare-fun e!47210 () Bool)

(assert (=> d!16379 (=> res!38402 e!47210)))

(assert (=> d!16379 (= res!38402 (or ((_ is Nil!1473) (toList!723 lt!31273)) ((_ is Nil!1473) (t!5012 (toList!723 lt!31273)))))))

(assert (=> d!16379 (= (isStrictlySorted!291 (toList!723 lt!31273)) e!47210)))

(declare-fun b!72157 () Bool)

(declare-fun e!47211 () Bool)

(assert (=> b!72157 (= e!47210 e!47211)))

(declare-fun res!38403 () Bool)

(assert (=> b!72157 (=> (not res!38403) (not e!47211))))

(assert (=> b!72157 (= res!38403 (bvslt (_1!1068 (h!2058 (toList!723 lt!31273))) (_1!1068 (h!2058 (t!5012 (toList!723 lt!31273))))))))

(declare-fun b!72158 () Bool)

(assert (=> b!72158 (= e!47211 (isStrictlySorted!291 (t!5012 (toList!723 lt!31273))))))

(assert (= (and d!16379 (not res!38402)) b!72157))

(assert (= (and b!72157 res!38403) b!72158))

(declare-fun m!70027 () Bool)

(assert (=> b!72158 m!70027))

(assert (=> d!15965 d!16379))

(declare-fun d!16381 () Bool)

(assert (=> d!16381 (= (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71575 d!16381))

(assert (=> bm!6170 d!16067))

(assert (=> b!71497 d!15799))

(assert (=> d!15847 d!15845))

(declare-fun d!16383 () Bool)

(assert (=> d!16383 (= (getValueByKey!132 lt!31424 (_1!1068 lt!31269)) (Some!137 (_2!1068 lt!31269)))))

(assert (=> d!16383 true))

(declare-fun _$22!379 () Unit!2002)

(assert (=> d!16383 (= (choose!397 lt!31424 (_1!1068 lt!31269) (_2!1068 lt!31269)) _$22!379)))

(declare-fun bs!3104 () Bool)

(assert (= bs!3104 d!16383))

(assert (=> bs!3104 m!68089))

(assert (=> d!15847 d!16383))

(declare-fun d!16385 () Bool)

(declare-fun res!38404 () Bool)

(declare-fun e!47212 () Bool)

(assert (=> d!16385 (=> res!38404 e!47212)))

(assert (=> d!16385 (= res!38404 (or ((_ is Nil!1473) lt!31424) ((_ is Nil!1473) (t!5012 lt!31424))))))

(assert (=> d!16385 (= (isStrictlySorted!291 lt!31424) e!47212)))

(declare-fun b!72159 () Bool)

(declare-fun e!47213 () Bool)

(assert (=> b!72159 (= e!47212 e!47213)))

(declare-fun res!38405 () Bool)

(assert (=> b!72159 (=> (not res!38405) (not e!47213))))

(assert (=> b!72159 (= res!38405 (bvslt (_1!1068 (h!2058 lt!31424)) (_1!1068 (h!2058 (t!5012 lt!31424)))))))

(declare-fun b!72160 () Bool)

(assert (=> b!72160 (= e!47213 (isStrictlySorted!291 (t!5012 lt!31424)))))

(assert (= (and d!16385 (not res!38404)) b!72159))

(assert (= (and b!72159 res!38405) b!72160))

(declare-fun m!70029 () Bool)

(assert (=> b!72160 m!70029))

(assert (=> d!15847 d!16385))

(declare-fun d!16387 () Bool)

(declare-fun lt!32176 () Bool)

(assert (=> d!16387 (= lt!32176 (select (content!76 (t!5012 (toList!723 lt!31448))) lt!31269))))

(declare-fun e!47214 () Bool)

(assert (=> d!16387 (= lt!32176 e!47214)))

(declare-fun res!38407 () Bool)

(assert (=> d!16387 (=> (not res!38407) (not e!47214))))

(assert (=> d!16387 (= res!38407 ((_ is Cons!1472) (t!5012 (toList!723 lt!31448))))))

(assert (=> d!16387 (= (contains!722 (t!5012 (toList!723 lt!31448)) lt!31269) lt!32176)))

(declare-fun b!72161 () Bool)

(declare-fun e!47215 () Bool)

(assert (=> b!72161 (= e!47214 e!47215)))

(declare-fun res!38406 () Bool)

(assert (=> b!72161 (=> res!38406 e!47215)))

(assert (=> b!72161 (= res!38406 (= (h!2058 (t!5012 (toList!723 lt!31448))) lt!31269))))

(declare-fun b!72162 () Bool)

(assert (=> b!72162 (= e!47215 (contains!722 (t!5012 (t!5012 (toList!723 lt!31448))) lt!31269))))

(assert (= (and d!16387 res!38407) b!72161))

(assert (= (and b!72161 (not res!38406)) b!72162))

(declare-fun m!70031 () Bool)

(assert (=> d!16387 m!70031))

(declare-fun m!70033 () Bool)

(assert (=> d!16387 m!70033))

(declare-fun m!70035 () Bool)

(assert (=> b!72162 m!70035))

(assert (=> b!71469 d!16387))

(declare-fun d!16389 () Bool)

(declare-fun e!47216 () Bool)

(assert (=> d!16389 e!47216))

(declare-fun res!38408 () Bool)

(assert (=> d!16389 (=> (not res!38408) (not e!47216))))

(declare-fun lt!32179 () ListLongMap!1415)

(assert (=> d!16389 (= res!38408 (contains!719 lt!32179 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun lt!32180 () List!1476)

(assert (=> d!16389 (= lt!32179 (ListLongMap!1416 lt!32180))))

(declare-fun lt!32178 () Unit!2002)

(declare-fun lt!32177 () Unit!2002)

(assert (=> d!16389 (= lt!32178 lt!32177)))

(assert (=> d!16389 (= (getValueByKey!132 lt!32180 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!16389 (= lt!32177 (lemmaContainsTupThenGetReturnValue!49 lt!32180 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!16389 (= lt!32180 (insertStrictlySorted!52 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!16389 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) lt!32179)))

(declare-fun b!72163 () Bool)

(declare-fun res!38409 () Bool)

(assert (=> b!72163 (=> (not res!38409) (not e!47216))))

(assert (=> b!72163 (= res!38409 (= (getValueByKey!132 (toList!723 lt!32179) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72164 () Bool)

(assert (=> b!72164 (= e!47216 (contains!722 (toList!723 lt!32179) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(assert (= (and d!16389 res!38408) b!72163))

(assert (= (and b!72163 res!38409) b!72164))

(declare-fun m!70037 () Bool)

(assert (=> d!16389 m!70037))

(declare-fun m!70039 () Bool)

(assert (=> d!16389 m!70039))

(declare-fun m!70041 () Bool)

(assert (=> d!16389 m!70041))

(declare-fun m!70043 () Bool)

(assert (=> d!16389 m!70043))

(declare-fun m!70045 () Bool)

(assert (=> b!72163 m!70045))

(declare-fun m!70047 () Bool)

(assert (=> b!72164 m!70047))

(assert (=> b!71200 d!16389))

(assert (=> b!71200 d!15857))

(declare-fun b!72165 () Bool)

(declare-fun c!10609 () Bool)

(assert (=> b!72165 (= c!10609 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47226 () ListLongMap!1415)

(declare-fun e!47224 () ListLongMap!1415)

(assert (=> b!72165 (= e!47226 e!47224)))

(declare-fun b!72166 () Bool)

(declare-fun e!47222 () Bool)

(declare-fun e!47217 () Bool)

(assert (=> b!72166 (= e!47222 e!47217)))

(declare-fun res!38417 () Bool)

(declare-fun call!6280 () Bool)

(assert (=> b!72166 (= res!38417 call!6280)))

(assert (=> b!72166 (=> (not res!38417) (not e!47217))))

(declare-fun b!72167 () Bool)

(declare-fun e!47219 () Bool)

(declare-fun lt!32198 () ListLongMap!1415)

(assert (=> b!72167 (= e!47219 (= (apply!74 lt!32198 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!72168 () Bool)

(declare-fun e!47223 () Bool)

(assert (=> b!72168 (= e!47223 e!47219)))

(declare-fun res!38416 () Bool)

(declare-fun call!6278 () Bool)

(assert (=> b!72168 (= res!38416 call!6278)))

(assert (=> b!72168 (=> (not res!38416) (not e!47219))))

(declare-fun bm!6275 () Bool)

(assert (=> bm!6275 (= call!6280 (contains!719 lt!32198 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6276 () Bool)

(declare-fun call!6281 () ListLongMap!1415)

(declare-fun call!6282 () ListLongMap!1415)

(assert (=> bm!6276 (= call!6281 call!6282)))

(declare-fun b!72170 () Bool)

(declare-fun call!6284 () ListLongMap!1415)

(assert (=> b!72170 (= e!47224 call!6284)))

(declare-fun b!72171 () Bool)

(declare-fun e!47229 () Bool)

(assert (=> b!72171 (= e!47229 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6277 () Bool)

(declare-fun call!6279 () ListLongMap!1415)

(declare-fun call!6283 () ListLongMap!1415)

(assert (=> bm!6277 (= call!6279 call!6283)))

(declare-fun b!72172 () Bool)

(declare-fun e!47225 () Unit!2002)

(declare-fun lt!32201 () Unit!2002)

(assert (=> b!72172 (= e!47225 lt!32201)))

(declare-fun lt!32190 () ListLongMap!1415)

(assert (=> b!72172 (= lt!32190 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32199 () (_ BitVec 64))

(assert (=> b!72172 (= lt!32199 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32184 () (_ BitVec 64))

(assert (=> b!72172 (= lt!32184 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32196 () Unit!2002)

(assert (=> b!72172 (= lt!32196 (addStillContains!50 lt!32190 lt!32199 (zeroValue!2096 newMap!16) lt!32184))))

(assert (=> b!72172 (contains!719 (+!93 lt!32190 (tuple2!2115 lt!32199 (zeroValue!2096 newMap!16))) lt!32184)))

(declare-fun lt!32202 () Unit!2002)

(assert (=> b!72172 (= lt!32202 lt!32196)))

(declare-fun lt!32183 () ListLongMap!1415)

(assert (=> b!72172 (= lt!32183 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32189 () (_ BitVec 64))

(assert (=> b!72172 (= lt!32189 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32193 () (_ BitVec 64))

(assert (=> b!72172 (= lt!32193 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32195 () Unit!2002)

(assert (=> b!72172 (= lt!32195 (addApplyDifferent!50 lt!32183 lt!32189 (minValue!2096 newMap!16) lt!32193))))

(assert (=> b!72172 (= (apply!74 (+!93 lt!32183 (tuple2!2115 lt!32189 (minValue!2096 newMap!16))) lt!32193) (apply!74 lt!32183 lt!32193))))

(declare-fun lt!32200 () Unit!2002)

(assert (=> b!72172 (= lt!32200 lt!32195)))

(declare-fun lt!32197 () ListLongMap!1415)

(assert (=> b!72172 (= lt!32197 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32191 () (_ BitVec 64))

(assert (=> b!72172 (= lt!32191 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32185 () (_ BitVec 64))

(assert (=> b!72172 (= lt!32185 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32188 () Unit!2002)

(assert (=> b!72172 (= lt!32188 (addApplyDifferent!50 lt!32197 lt!32191 (zeroValue!2096 newMap!16) lt!32185))))

(assert (=> b!72172 (= (apply!74 (+!93 lt!32197 (tuple2!2115 lt!32191 (zeroValue!2096 newMap!16))) lt!32185) (apply!74 lt!32197 lt!32185))))

(declare-fun lt!32192 () Unit!2002)

(assert (=> b!72172 (= lt!32192 lt!32188)))

(declare-fun lt!32187 () ListLongMap!1415)

(assert (=> b!72172 (= lt!32187 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32182 () (_ BitVec 64))

(assert (=> b!72172 (= lt!32182 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32186 () (_ BitVec 64))

(assert (=> b!72172 (= lt!32186 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72172 (= lt!32201 (addApplyDifferent!50 lt!32187 lt!32182 (minValue!2096 newMap!16) lt!32186))))

(assert (=> b!72172 (= (apply!74 (+!93 lt!32187 (tuple2!2115 lt!32182 (minValue!2096 newMap!16))) lt!32186) (apply!74 lt!32187 lt!32186))))

(declare-fun b!72173 () Bool)

(declare-fun e!47227 () Bool)

(declare-fun e!47218 () Bool)

(assert (=> b!72173 (= e!47227 e!47218)))

(declare-fun res!38415 () Bool)

(assert (=> b!72173 (=> (not res!38415) (not e!47218))))

(assert (=> b!72173 (= res!38415 (contains!719 lt!32198 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72173 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72174 () Bool)

(assert (=> b!72174 (= e!47223 (not call!6278))))

(declare-fun b!72175 () Bool)

(declare-fun e!47228 () Bool)

(assert (=> b!72175 (= e!47228 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72176 () Bool)

(assert (=> b!72176 (= e!47226 call!6279)))

(declare-fun b!72177 () Bool)

(declare-fun e!47221 () ListLongMap!1415)

(assert (=> b!72177 (= e!47221 e!47226)))

(declare-fun c!10611 () Bool)

(assert (=> b!72177 (= c!10611 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6278 () Bool)

(assert (=> bm!6278 (= call!6278 (contains!719 lt!32198 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72178 () Bool)

(assert (=> b!72178 (= e!47218 (= (apply!74 lt!32198 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72178 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))))))

(assert (=> b!72178 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72169 () Bool)

(assert (=> b!72169 (= e!47222 (not call!6280))))

(declare-fun d!16391 () Bool)

(declare-fun e!47220 () Bool)

(assert (=> d!16391 e!47220))

(declare-fun res!38413 () Bool)

(assert (=> d!16391 (=> (not res!38413) (not e!47220))))

(assert (=> d!16391 (= res!38413 (or (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))))

(declare-fun lt!32181 () ListLongMap!1415)

(assert (=> d!16391 (= lt!32198 lt!32181)))

(declare-fun lt!32194 () Unit!2002)

(assert (=> d!16391 (= lt!32194 e!47225)))

(declare-fun c!10612 () Bool)

(assert (=> d!16391 (= c!10612 e!47229)))

(declare-fun res!38418 () Bool)

(assert (=> d!16391 (=> (not res!38418) (not e!47229))))

(assert (=> d!16391 (= res!38418 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16391 (= lt!32181 e!47221)))

(declare-fun c!10613 () Bool)

(assert (=> d!16391 (= c!10613 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16391 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16391 (= (getCurrentListMap!421 (_keys!3840 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32198)))

(declare-fun b!72179 () Bool)

(declare-fun Unit!2053 () Unit!2002)

(assert (=> b!72179 (= e!47225 Unit!2053)))

(declare-fun b!72180 () Bool)

(assert (=> b!72180 (= e!47217 (= (apply!74 lt!32198 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun bm!6279 () Bool)

(assert (=> bm!6279 (= call!6283 (+!93 (ite c!10613 call!6282 (ite c!10611 call!6281 call!6284)) (ite (or c!10613 c!10611) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun b!72181 () Bool)

(declare-fun res!38414 () Bool)

(assert (=> b!72181 (=> (not res!38414) (not e!47220))))

(assert (=> b!72181 (= res!38414 e!47223)))

(declare-fun c!10610 () Bool)

(assert (=> b!72181 (= c!10610 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6280 () Bool)

(assert (=> bm!6280 (= call!6282 (getCurrentListMapNoExtraKeys!58 (_keys!3840 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!72182 () Bool)

(assert (=> b!72182 (= e!47221 (+!93 call!6283 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun bm!6281 () Bool)

(assert (=> bm!6281 (= call!6284 call!6281)))

(declare-fun b!72183 () Bool)

(assert (=> b!72183 (= e!47224 call!6279)))

(declare-fun b!72184 () Bool)

(declare-fun res!38411 () Bool)

(assert (=> b!72184 (=> (not res!38411) (not e!47220))))

(assert (=> b!72184 (= res!38411 e!47227)))

(declare-fun res!38412 () Bool)

(assert (=> b!72184 (=> res!38412 e!47227)))

(assert (=> b!72184 (= res!38412 (not e!47228))))

(declare-fun res!38410 () Bool)

(assert (=> b!72184 (=> (not res!38410) (not e!47228))))

(assert (=> b!72184 (= res!38410 (bvslt #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72185 () Bool)

(assert (=> b!72185 (= e!47220 e!47222)))

(declare-fun c!10608 () Bool)

(assert (=> b!72185 (= c!10608 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!16391 c!10613) b!72182))

(assert (= (and d!16391 (not c!10613)) b!72177))

(assert (= (and b!72177 c!10611) b!72176))

(assert (= (and b!72177 (not c!10611)) b!72165))

(assert (= (and b!72165 c!10609) b!72183))

(assert (= (and b!72165 (not c!10609)) b!72170))

(assert (= (or b!72183 b!72170) bm!6281))

(assert (= (or b!72176 bm!6281) bm!6276))

(assert (= (or b!72176 b!72183) bm!6277))

(assert (= (or b!72182 bm!6276) bm!6280))

(assert (= (or b!72182 bm!6277) bm!6279))

(assert (= (and d!16391 res!38418) b!72171))

(assert (= (and d!16391 c!10612) b!72172))

(assert (= (and d!16391 (not c!10612)) b!72179))

(assert (= (and d!16391 res!38413) b!72184))

(assert (= (and b!72184 res!38410) b!72175))

(assert (= (and b!72184 (not res!38412)) b!72173))

(assert (= (and b!72173 res!38415) b!72178))

(assert (= (and b!72184 res!38411) b!72181))

(assert (= (and b!72181 c!10610) b!72168))

(assert (= (and b!72181 (not c!10610)) b!72174))

(assert (= (and b!72168 res!38416) b!72167))

(assert (= (or b!72168 b!72174) bm!6278))

(assert (= (and b!72181 res!38414) b!72185))

(assert (= (and b!72185 c!10608) b!72166))

(assert (= (and b!72185 (not c!10608)) b!72169))

(assert (= (and b!72166 res!38417) b!72180))

(assert (= (or b!72166 b!72169) bm!6275))

(declare-fun b_lambda!3239 () Bool)

(assert (=> (not b_lambda!3239) (not b!72178)))

(assert (=> b!72178 t!5019))

(declare-fun b_and!4455 () Bool)

(assert (= b_and!4451 (and (=> t!5019 result!2665) b_and!4455)))

(assert (=> b!72178 t!5021))

(declare-fun b_and!4457 () Bool)

(assert (= b_and!4453 (and (=> t!5021 result!2667) b_and!4457)))

(assert (=> b!72173 m!68283))

(assert (=> b!72173 m!68283))

(declare-fun m!70049 () Bool)

(assert (=> b!72173 m!70049))

(assert (=> b!72178 m!68287))

(assert (=> b!72178 m!68283))

(declare-fun m!70051 () Bool)

(assert (=> b!72178 m!70051))

(assert (=> b!72178 m!68283))

(declare-fun m!70053 () Bool)

(assert (=> b!72178 m!70053))

(assert (=> b!72178 m!70053))

(assert (=> b!72178 m!68287))

(declare-fun m!70055 () Bool)

(assert (=> b!72178 m!70055))

(declare-fun m!70057 () Bool)

(assert (=> bm!6280 m!70057))

(assert (=> b!72171 m!68283))

(assert (=> b!72171 m!68283))

(assert (=> b!72171 m!68297))

(declare-fun m!70059 () Bool)

(assert (=> b!72167 m!70059))

(declare-fun m!70061 () Bool)

(assert (=> bm!6279 m!70061))

(declare-fun m!70063 () Bool)

(assert (=> b!72180 m!70063))

(declare-fun m!70065 () Bool)

(assert (=> b!72182 m!70065))

(assert (=> d!16391 m!68263))

(declare-fun m!70067 () Bool)

(assert (=> bm!6275 m!70067))

(declare-fun m!70069 () Bool)

(assert (=> b!72172 m!70069))

(declare-fun m!70071 () Bool)

(assert (=> b!72172 m!70071))

(declare-fun m!70073 () Bool)

(assert (=> b!72172 m!70073))

(declare-fun m!70075 () Bool)

(assert (=> b!72172 m!70075))

(assert (=> b!72172 m!70069))

(declare-fun m!70077 () Bool)

(assert (=> b!72172 m!70077))

(declare-fun m!70079 () Bool)

(assert (=> b!72172 m!70079))

(declare-fun m!70081 () Bool)

(assert (=> b!72172 m!70081))

(declare-fun m!70083 () Bool)

(assert (=> b!72172 m!70083))

(assert (=> b!72172 m!68283))

(declare-fun m!70085 () Bool)

(assert (=> b!72172 m!70085))

(assert (=> b!72172 m!70057))

(assert (=> b!72172 m!70071))

(declare-fun m!70087 () Bool)

(assert (=> b!72172 m!70087))

(declare-fun m!70089 () Bool)

(assert (=> b!72172 m!70089))

(assert (=> b!72172 m!70083))

(declare-fun m!70091 () Bool)

(assert (=> b!72172 m!70091))

(declare-fun m!70093 () Bool)

(assert (=> b!72172 m!70093))

(declare-fun m!70095 () Bool)

(assert (=> b!72172 m!70095))

(assert (=> b!72172 m!70093))

(declare-fun m!70097 () Bool)

(assert (=> b!72172 m!70097))

(declare-fun m!70099 () Bool)

(assert (=> bm!6278 m!70099))

(assert (=> b!72175 m!68283))

(assert (=> b!72175 m!68283))

(assert (=> b!72175 m!68297))

(assert (=> b!71200 d!16391))

(assert (=> d!15865 d!15863))

(declare-fun d!16393 () Bool)

(assert (=> d!16393 (= (getValueByKey!132 lt!31460 (_1!1068 lt!31265)) (Some!137 (_2!1068 lt!31265)))))

(assert (=> d!16393 true))

(declare-fun _$22!380 () Unit!2002)

(assert (=> d!16393 (= (choose!397 lt!31460 (_1!1068 lt!31265) (_2!1068 lt!31265)) _$22!380)))

(declare-fun bs!3105 () Bool)

(assert (= bs!3105 d!16393))

(assert (=> bs!3105 m!68161))

(assert (=> d!15865 d!16393))

(declare-fun d!16395 () Bool)

(declare-fun res!38419 () Bool)

(declare-fun e!47230 () Bool)

(assert (=> d!16395 (=> res!38419 e!47230)))

(assert (=> d!16395 (= res!38419 (or ((_ is Nil!1473) lt!31460) ((_ is Nil!1473) (t!5012 lt!31460))))))

(assert (=> d!16395 (= (isStrictlySorted!291 lt!31460) e!47230)))

(declare-fun b!72186 () Bool)

(declare-fun e!47231 () Bool)

(assert (=> b!72186 (= e!47230 e!47231)))

(declare-fun res!38420 () Bool)

(assert (=> b!72186 (=> (not res!38420) (not e!47231))))

(assert (=> b!72186 (= res!38420 (bvslt (_1!1068 (h!2058 lt!31460)) (_1!1068 (h!2058 (t!5012 lt!31460)))))))

(declare-fun b!72187 () Bool)

(assert (=> b!72187 (= e!47231 (isStrictlySorted!291 (t!5012 lt!31460)))))

(assert (= (and d!16395 (not res!38419)) b!72186))

(assert (= (and b!72186 res!38420) b!72187))

(declare-fun m!70101 () Bool)

(assert (=> b!72187 m!70101))

(assert (=> d!15865 d!16395))

(assert (=> d!15973 d!15971))

(declare-fun d!16397 () Bool)

(assert (=> d!16397 (= (apply!74 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31509) (apply!74 lt!31521 lt!31509))))

(assert (=> d!16397 true))

(declare-fun _$34!802 () Unit!2002)

(assert (=> d!16397 (= (choose!405 lt!31521 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31509) _$34!802)))

(declare-fun bs!3106 () Bool)

(assert (= bs!3106 d!16397))

(assert (=> bs!3106 m!68187))

(assert (=> bs!3106 m!68187))

(assert (=> bs!3106 m!68203))

(assert (=> bs!3106 m!68211))

(assert (=> d!15973 d!16397))

(assert (=> d!15973 d!15977))

(assert (=> d!15973 d!15979))

(declare-fun d!16399 () Bool)

(declare-fun e!47232 () Bool)

(assert (=> d!16399 e!47232))

(declare-fun res!38421 () Bool)

(assert (=> d!16399 (=> res!38421 e!47232)))

(declare-fun lt!32205 () Bool)

(assert (=> d!16399 (= res!38421 (not lt!32205))))

(declare-fun lt!32204 () Bool)

(assert (=> d!16399 (= lt!32205 lt!32204)))

(declare-fun lt!32203 () Unit!2002)

(declare-fun e!47233 () Unit!2002)

(assert (=> d!16399 (= lt!32203 e!47233)))

(declare-fun c!10614 () Bool)

(assert (=> d!16399 (= c!10614 lt!32204)))

(assert (=> d!16399 (= lt!32204 (containsKey!136 (toList!723 lt!31521) lt!31509))))

(assert (=> d!16399 (= (contains!719 lt!31521 lt!31509) lt!32205)))

(declare-fun b!72189 () Bool)

(declare-fun lt!32206 () Unit!2002)

(assert (=> b!72189 (= e!47233 lt!32206)))

(assert (=> b!72189 (= lt!32206 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31521) lt!31509))))

(assert (=> b!72189 (isDefined!85 (getValueByKey!132 (toList!723 lt!31521) lt!31509))))

(declare-fun b!72190 () Bool)

(declare-fun Unit!2054 () Unit!2002)

(assert (=> b!72190 (= e!47233 Unit!2054)))

(declare-fun b!72191 () Bool)

(assert (=> b!72191 (= e!47232 (isDefined!85 (getValueByKey!132 (toList!723 lt!31521) lt!31509)))))

(assert (= (and d!16399 c!10614) b!72189))

(assert (= (and d!16399 (not c!10614)) b!72190))

(assert (= (and d!16399 (not res!38421)) b!72191))

(declare-fun m!70103 () Bool)

(assert (=> d!16399 m!70103))

(declare-fun m!70105 () Bool)

(assert (=> b!72189 m!70105))

(assert (=> b!72189 m!68811))

(assert (=> b!72189 m!68811))

(declare-fun m!70107 () Bool)

(assert (=> b!72189 m!70107))

(assert (=> b!72191 m!68811))

(assert (=> b!72191 m!68811))

(assert (=> b!72191 m!70107))

(assert (=> d!15973 d!16399))

(declare-fun b!72195 () Bool)

(declare-fun e!47235 () Option!138)

(assert (=> b!72195 (= e!47235 None!136)))

(declare-fun b!72193 () Bool)

(declare-fun e!47234 () Option!138)

(assert (=> b!72193 (= e!47234 e!47235)))

(declare-fun c!10616 () Bool)

(assert (=> b!72193 (= c!10616 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31459))) (not (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31459)))) (_1!1068 lt!31265)))))))

(declare-fun b!72192 () Bool)

(assert (=> b!72192 (= e!47234 (Some!137 (_2!1068 (h!2058 (t!5012 (toList!723 lt!31459))))))))

(declare-fun d!16401 () Bool)

(declare-fun c!10615 () Bool)

(assert (=> d!16401 (= c!10615 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31459))) (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31459)))) (_1!1068 lt!31265))))))

(assert (=> d!16401 (= (getValueByKey!132 (t!5012 (toList!723 lt!31459)) (_1!1068 lt!31265)) e!47234)))

(declare-fun b!72194 () Bool)

(assert (=> b!72194 (= e!47235 (getValueByKey!132 (t!5012 (t!5012 (toList!723 lt!31459))) (_1!1068 lt!31265)))))

(assert (= (and d!16401 c!10615) b!72192))

(assert (= (and d!16401 (not c!10615)) b!72193))

(assert (= (and b!72193 c!10616) b!72194))

(assert (= (and b!72193 (not c!10616)) b!72195))

(declare-fun m!70109 () Bool)

(assert (=> b!72194 m!70109))

(assert (=> b!71603 d!16401))

(declare-fun b!72199 () Bool)

(declare-fun e!47237 () Option!138)

(assert (=> b!72199 (= e!47237 None!136)))

(declare-fun b!72197 () Bool)

(declare-fun e!47236 () Option!138)

(assert (=> b!72197 (= e!47236 e!47237)))

(declare-fun c!10618 () Bool)

(assert (=> b!72197 (= c!10618 (and ((_ is Cons!1472) (toList!723 lt!31861)) (not (= (_1!1068 (h!2058 (toList!723 lt!31861))) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!72196 () Bool)

(assert (=> b!72196 (= e!47236 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31861)))))))

(declare-fun d!16403 () Bool)

(declare-fun c!10617 () Bool)

(assert (=> d!16403 (= c!10617 (and ((_ is Cons!1472) (toList!723 lt!31861)) (= (_1!1068 (h!2058 (toList!723 lt!31861))) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16403 (= (getValueByKey!132 (toList!723 lt!31861) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!47236)))

(declare-fun b!72198 () Bool)

(assert (=> b!72198 (= e!47237 (getValueByKey!132 (t!5012 (toList!723 lt!31861)) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16403 c!10617) b!72196))

(assert (= (and d!16403 (not c!10617)) b!72197))

(assert (= (and b!72197 c!10618) b!72198))

(assert (= (and b!72197 (not c!10618)) b!72199))

(declare-fun m!70111 () Bool)

(assert (=> b!72198 m!70111))

(assert (=> b!71552 d!16403))

(declare-fun d!16405 () Bool)

(assert (=> d!16405 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (getCurrentListMap!421 (_keys!3840 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(assert (=> d!16405 true))

(declare-fun _$5!77 () Unit!2002)

(assert (=> d!16405 (= (choose!399 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3071 lt!31406) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 (defaultEntry!2192 newMap!16)) _$5!77)))

(declare-fun bs!3107 () Bool)

(assert (= bs!3107 d!16405))

(assert (=> bs!3107 m!68051))

(assert (=> bs!3107 m!68051))

(assert (=> bs!3107 m!68271))

(assert (=> bs!3107 m!68039))

(assert (=> bs!3107 m!68273))

(assert (=> d!15853 d!16405))

(assert (=> d!15853 d!16145))

(assert (=> b!71401 d!16269))

(assert (=> b!71401 d!16271))

(assert (=> b!71591 d!16131))

(assert (=> b!71359 d!16229))

(assert (=> b!71359 d!16231))

(declare-fun b!72203 () Bool)

(declare-fun e!47239 () Option!138)

(assert (=> b!72203 (= e!47239 None!136)))

(declare-fun b!72201 () Bool)

(declare-fun e!47238 () Option!138)

(assert (=> b!72201 (= e!47238 e!47239)))

(declare-fun c!10620 () Bool)

(assert (=> b!72201 (= c!10620 (and ((_ is Cons!1472) (toList!723 lt!31624)) (not (= (_1!1068 (h!2058 (toList!723 lt!31624))) (_1!1068 (tuple2!2115 lt!31440 lt!31442))))))))

(declare-fun b!72200 () Bool)

(assert (=> b!72200 (= e!47238 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31624)))))))

(declare-fun c!10619 () Bool)

(declare-fun d!16407 () Bool)

(assert (=> d!16407 (= c!10619 (and ((_ is Cons!1472) (toList!723 lt!31624)) (= (_1!1068 (h!2058 (toList!723 lt!31624))) (_1!1068 (tuple2!2115 lt!31440 lt!31442)))))))

(assert (=> d!16407 (= (getValueByKey!132 (toList!723 lt!31624) (_1!1068 (tuple2!2115 lt!31440 lt!31442))) e!47238)))

(declare-fun b!72202 () Bool)

(assert (=> b!72202 (= e!47239 (getValueByKey!132 (t!5012 (toList!723 lt!31624)) (_1!1068 (tuple2!2115 lt!31440 lt!31442))))))

(assert (= (and d!16407 c!10619) b!72200))

(assert (= (and d!16407 (not c!10619)) b!72201))

(assert (= (and b!72201 c!10620) b!72202))

(assert (= (and b!72201 (not c!10620)) b!72203))

(declare-fun m!70113 () Bool)

(assert (=> b!72202 m!70113))

(assert (=> b!71318 d!16407))

(declare-fun d!16409 () Bool)

(declare-fun res!38423 () Bool)

(declare-fun e!47240 () Bool)

(assert (=> d!16409 (=> res!38423 e!47240)))

(assert (=> d!16409 (= res!38423 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!16409 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992)))) e!47240)))

(declare-fun b!72204 () Bool)

(declare-fun e!47241 () Bool)

(assert (=> b!72204 (= e!47240 e!47241)))

(declare-fun c!10621 () Bool)

(assert (=> b!72204 (= c!10621 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!72205 () Bool)

(declare-fun e!47242 () Bool)

(declare-fun call!6285 () Bool)

(assert (=> b!72205 (= e!47242 call!6285)))

(declare-fun bm!6282 () Bool)

(assert (=> bm!6282 (= call!6285 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3840 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun b!72206 () Bool)

(assert (=> b!72206 (= e!47241 call!6285)))

(declare-fun b!72207 () Bool)

(assert (=> b!72207 (= e!47241 e!47242)))

(declare-fun lt!32208 () (_ BitVec 64))

(assert (=> b!72207 (= lt!32208 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!32209 () Unit!2002)

(assert (=> b!72207 (= lt!32209 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) lt!32208 #b00000000000000000000000000000000))))

(assert (=> b!72207 (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) lt!32208 #b00000000000000000000000000000000)))

(declare-fun lt!32207 () Unit!2002)

(assert (=> b!72207 (= lt!32207 lt!32209)))

(declare-fun res!38422 () Bool)

(assert (=> b!72207 (= res!38422 (= (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000) (_keys!3840 (v!2514 (underlying!257 thiss!992))) (mask!6149 (v!2514 (underlying!257 thiss!992)))) (Found!235 #b00000000000000000000000000000000)))))

(assert (=> b!72207 (=> (not res!38422) (not e!47242))))

(assert (= (and d!16409 (not res!38423)) b!72204))

(assert (= (and b!72204 c!10621) b!72207))

(assert (= (and b!72204 (not c!10621)) b!72206))

(assert (= (and b!72207 res!38422) b!72205))

(assert (= (or b!72205 b!72206) bm!6282))

(assert (=> b!72204 m!69837))

(assert (=> b!72204 m!69837))

(assert (=> b!72204 m!69839))

(declare-fun m!70115 () Bool)

(assert (=> bm!6282 m!70115))

(assert (=> b!72207 m!69837))

(declare-fun m!70117 () Bool)

(assert (=> b!72207 m!70117))

(declare-fun m!70119 () Bool)

(assert (=> b!72207 m!70119))

(assert (=> b!72207 m!69837))

(declare-fun m!70121 () Bool)

(assert (=> b!72207 m!70121))

(assert (=> b!71457 d!16409))

(assert (=> b!71490 d!16245))

(assert (=> b!71490 d!16247))

(declare-fun d!16411 () Bool)

(declare-fun lt!32210 () Bool)

(assert (=> d!16411 (= lt!32210 (select (content!76 lt!31453) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun e!47243 () Bool)

(assert (=> d!16411 (= lt!32210 e!47243)))

(declare-fun res!38425 () Bool)

(assert (=> d!16411 (=> (not res!38425) (not e!47243))))

(assert (=> d!16411 (= res!38425 ((_ is Cons!1472) lt!31453))))

(assert (=> d!16411 (= (contains!722 lt!31453 (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))) lt!32210)))

(declare-fun b!72208 () Bool)

(declare-fun e!47244 () Bool)

(assert (=> b!72208 (= e!47243 e!47244)))

(declare-fun res!38424 () Bool)

(assert (=> b!72208 (=> res!38424 e!47244)))

(assert (=> b!72208 (= res!38424 (= (h!2058 lt!31453) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun b!72209 () Bool)

(assert (=> b!72209 (= e!47244 (contains!722 (t!5012 lt!31453) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(assert (= (and d!16411 res!38425) b!72208))

(assert (= (and b!72208 (not res!38424)) b!72209))

(declare-fun m!70123 () Bool)

(assert (=> d!16411 m!70123))

(declare-fun m!70125 () Bool)

(assert (=> d!16411 m!70125))

(declare-fun m!70127 () Bool)

(assert (=> b!72209 m!70127))

(assert (=> b!71289 d!16411))

(declare-fun d!16413 () Bool)

(assert (=> d!16413 (= (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31509)) (v!2518 (getValueByKey!132 (toList!723 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31509)))))

(assert (=> d!15977 d!16413))

(declare-fun b!72213 () Bool)

(declare-fun e!47246 () Option!138)

(assert (=> b!72213 (= e!47246 None!136)))

(declare-fun b!72211 () Bool)

(declare-fun e!47245 () Option!138)

(assert (=> b!72211 (= e!47245 e!47246)))

(declare-fun c!10623 () Bool)

(assert (=> b!72211 (= c!10623 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (not (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31509))))))

(declare-fun b!72210 () Bool)

(assert (=> b!72210 (= e!47245 (Some!137 (_2!1068 (h!2058 (toList!723 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))))

(declare-fun d!16415 () Bool)

(declare-fun c!10622 () Bool)

(assert (=> d!16415 (= c!10622 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31509)))))

(assert (=> d!16415 (= (getValueByKey!132 (toList!723 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31509) e!47245)))

(declare-fun b!72212 () Bool)

(assert (=> b!72212 (= e!47246 (getValueByKey!132 (t!5012 (toList!723 (+!93 lt!31521 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) lt!31509))))

(assert (= (and d!16415 c!10622) b!72210))

(assert (= (and d!16415 (not c!10622)) b!72211))

(assert (= (and b!72211 c!10623) b!72212))

(assert (= (and b!72211 (not c!10623)) b!72213))

(declare-fun m!70129 () Bool)

(assert (=> b!72212 m!70129))

(assert (=> d!15977 d!16415))

(declare-fun d!16417 () Bool)

(declare-fun res!38426 () Bool)

(declare-fun e!47247 () Bool)

(assert (=> d!16417 (=> res!38426 e!47247)))

(assert (=> d!16417 (= res!38426 (= (select (arr!1853 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!16417 (= (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!47247)))

(declare-fun b!72214 () Bool)

(declare-fun e!47248 () Bool)

(assert (=> b!72214 (= e!47247 e!47248)))

(declare-fun res!38427 () Bool)

(assert (=> b!72214 (=> (not res!38427) (not e!47248))))

(assert (=> b!72214 (= res!38427 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))))))

(declare-fun b!72215 () Bool)

(assert (=> b!72215 (= e!47248 (arrayContainsKey!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16417 (not res!38426)) b!72214))

(assert (= (and b!72214 res!38427) b!72215))

(assert (=> d!16417 m!69467))

(assert (=> b!72215 m!67893))

(declare-fun m!70131 () Bool)

(assert (=> b!72215 m!70131))

(assert (=> b!71500 d!16417))

(declare-fun d!16419 () Bool)

(declare-fun e!47249 () Bool)

(assert (=> d!16419 e!47249))

(declare-fun res!38428 () Bool)

(assert (=> d!16419 (=> res!38428 e!47249)))

(declare-fun lt!32213 () Bool)

(assert (=> d!16419 (= res!38428 (not lt!32213))))

(declare-fun lt!32212 () Bool)

(assert (=> d!16419 (= lt!32213 lt!32212)))

(declare-fun lt!32211 () Unit!2002)

(declare-fun e!47250 () Unit!2002)

(assert (=> d!16419 (= lt!32211 e!47250)))

(declare-fun c!10624 () Bool)

(assert (=> d!16419 (= c!10624 lt!32212)))

(assert (=> d!16419 (= lt!32212 (containsKey!136 (toList!723 lt!31624) (_1!1068 (tuple2!2115 lt!31440 lt!31442))))))

(assert (=> d!16419 (= (contains!719 lt!31624 (_1!1068 (tuple2!2115 lt!31440 lt!31442))) lt!32213)))

(declare-fun b!72216 () Bool)

(declare-fun lt!32214 () Unit!2002)

(assert (=> b!72216 (= e!47250 lt!32214)))

(assert (=> b!72216 (= lt!32214 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31624) (_1!1068 (tuple2!2115 lt!31440 lt!31442))))))

(assert (=> b!72216 (isDefined!85 (getValueByKey!132 (toList!723 lt!31624) (_1!1068 (tuple2!2115 lt!31440 lt!31442))))))

(declare-fun b!72217 () Bool)

(declare-fun Unit!2055 () Unit!2002)

(assert (=> b!72217 (= e!47250 Unit!2055)))

(declare-fun b!72218 () Bool)

(assert (=> b!72218 (= e!47249 (isDefined!85 (getValueByKey!132 (toList!723 lt!31624) (_1!1068 (tuple2!2115 lt!31440 lt!31442)))))))

(assert (= (and d!16419 c!10624) b!72216))

(assert (= (and d!16419 (not c!10624)) b!72217))

(assert (= (and d!16419 (not res!38428)) b!72218))

(declare-fun m!70133 () Bool)

(assert (=> d!16419 m!70133))

(declare-fun m!70135 () Bool)

(assert (=> b!72216 m!70135))

(assert (=> b!72216 m!68517))

(assert (=> b!72216 m!68517))

(declare-fun m!70137 () Bool)

(assert (=> b!72216 m!70137))

(assert (=> b!72218 m!68517))

(assert (=> b!72218 m!68517))

(assert (=> b!72218 m!70137))

(assert (=> d!15909 d!16419))

(declare-fun b!72222 () Bool)

(declare-fun e!47252 () Option!138)

(assert (=> b!72222 (= e!47252 None!136)))

(declare-fun b!72220 () Bool)

(declare-fun e!47251 () Option!138)

(assert (=> b!72220 (= e!47251 e!47252)))

(declare-fun c!10626 () Bool)

(assert (=> b!72220 (= c!10626 (and ((_ is Cons!1472) lt!31625) (not (= (_1!1068 (h!2058 lt!31625)) (_1!1068 (tuple2!2115 lt!31440 lt!31442))))))))

(declare-fun b!72219 () Bool)

(assert (=> b!72219 (= e!47251 (Some!137 (_2!1068 (h!2058 lt!31625))))))

(declare-fun c!10625 () Bool)

(declare-fun d!16421 () Bool)

(assert (=> d!16421 (= c!10625 (and ((_ is Cons!1472) lt!31625) (= (_1!1068 (h!2058 lt!31625)) (_1!1068 (tuple2!2115 lt!31440 lt!31442)))))))

(assert (=> d!16421 (= (getValueByKey!132 lt!31625 (_1!1068 (tuple2!2115 lt!31440 lt!31442))) e!47251)))

(declare-fun b!72221 () Bool)

(assert (=> b!72221 (= e!47252 (getValueByKey!132 (t!5012 lt!31625) (_1!1068 (tuple2!2115 lt!31440 lt!31442))))))

(assert (= (and d!16421 c!10625) b!72219))

(assert (= (and d!16421 (not c!10625)) b!72220))

(assert (= (and b!72220 c!10626) b!72221))

(assert (= (and b!72220 (not c!10626)) b!72222))

(declare-fun m!70139 () Bool)

(assert (=> b!72221 m!70139))

(assert (=> d!15909 d!16421))

(declare-fun d!16423 () Bool)

(assert (=> d!16423 (= (getValueByKey!132 lt!31625 (_1!1068 (tuple2!2115 lt!31440 lt!31442))) (Some!137 (_2!1068 (tuple2!2115 lt!31440 lt!31442))))))

(declare-fun lt!32215 () Unit!2002)

(assert (=> d!16423 (= lt!32215 (choose!397 lt!31625 (_1!1068 (tuple2!2115 lt!31440 lt!31442)) (_2!1068 (tuple2!2115 lt!31440 lt!31442))))))

(declare-fun e!47253 () Bool)

(assert (=> d!16423 e!47253))

(declare-fun res!38429 () Bool)

(assert (=> d!16423 (=> (not res!38429) (not e!47253))))

(assert (=> d!16423 (= res!38429 (isStrictlySorted!291 lt!31625))))

(assert (=> d!16423 (= (lemmaContainsTupThenGetReturnValue!49 lt!31625 (_1!1068 (tuple2!2115 lt!31440 lt!31442)) (_2!1068 (tuple2!2115 lt!31440 lt!31442))) lt!32215)))

(declare-fun b!72223 () Bool)

(declare-fun res!38430 () Bool)

(assert (=> b!72223 (=> (not res!38430) (not e!47253))))

(assert (=> b!72223 (= res!38430 (containsKey!136 lt!31625 (_1!1068 (tuple2!2115 lt!31440 lt!31442))))))

(declare-fun b!72224 () Bool)

(assert (=> b!72224 (= e!47253 (contains!722 lt!31625 (tuple2!2115 (_1!1068 (tuple2!2115 lt!31440 lt!31442)) (_2!1068 (tuple2!2115 lt!31440 lt!31442)))))))

(assert (= (and d!16423 res!38429) b!72223))

(assert (= (and b!72223 res!38430) b!72224))

(assert (=> d!16423 m!68511))

(declare-fun m!70141 () Bool)

(assert (=> d!16423 m!70141))

(declare-fun m!70143 () Bool)

(assert (=> d!16423 m!70143))

(declare-fun m!70145 () Bool)

(assert (=> b!72223 m!70145))

(declare-fun m!70147 () Bool)

(assert (=> b!72224 m!70147))

(assert (=> d!15909 d!16423))

(declare-fun bm!6283 () Bool)

(declare-fun call!6288 () List!1476)

(declare-fun call!6286 () List!1476)

(assert (=> bm!6283 (= call!6288 call!6286)))

(declare-fun b!72225 () Bool)

(declare-fun e!47255 () List!1476)

(declare-fun call!6287 () List!1476)

(assert (=> b!72225 (= e!47255 call!6287)))

(declare-fun c!10629 () Bool)

(declare-fun e!47254 () List!1476)

(declare-fun bm!6284 () Bool)

(assert (=> bm!6284 (= call!6286 ($colon$colon!65 e!47254 (ite c!10629 (h!2058 (toList!723 lt!31439)) (tuple2!2115 (_1!1068 (tuple2!2115 lt!31440 lt!31442)) (_2!1068 (tuple2!2115 lt!31440 lt!31442))))))))

(declare-fun c!10630 () Bool)

(assert (=> bm!6284 (= c!10630 c!10629)))

(declare-fun b!72227 () Bool)

(declare-fun c!10627 () Bool)

(assert (=> b!72227 (= c!10627 (and ((_ is Cons!1472) (toList!723 lt!31439)) (bvsgt (_1!1068 (h!2058 (toList!723 lt!31439))) (_1!1068 (tuple2!2115 lt!31440 lt!31442)))))))

(declare-fun e!47258 () List!1476)

(assert (=> b!72227 (= e!47258 e!47255)))

(declare-fun b!72228 () Bool)

(assert (=> b!72228 (= e!47258 call!6288)))

(declare-fun b!72229 () Bool)

(assert (=> b!72229 (= e!47255 call!6287)))

(declare-fun b!72230 () Bool)

(declare-fun e!47257 () List!1476)

(assert (=> b!72230 (= e!47257 e!47258)))

(declare-fun c!10628 () Bool)

(assert (=> b!72230 (= c!10628 (and ((_ is Cons!1472) (toList!723 lt!31439)) (= (_1!1068 (h!2058 (toList!723 lt!31439))) (_1!1068 (tuple2!2115 lt!31440 lt!31442)))))))

(declare-fun b!72231 () Bool)

(declare-fun res!38432 () Bool)

(declare-fun e!47256 () Bool)

(assert (=> b!72231 (=> (not res!38432) (not e!47256))))

(declare-fun lt!32216 () List!1476)

(assert (=> b!72231 (= res!38432 (containsKey!136 lt!32216 (_1!1068 (tuple2!2115 lt!31440 lt!31442))))))

(declare-fun b!72232 () Bool)

(assert (=> b!72232 (= e!47256 (contains!722 lt!32216 (tuple2!2115 (_1!1068 (tuple2!2115 lt!31440 lt!31442)) (_2!1068 (tuple2!2115 lt!31440 lt!31442)))))))

(declare-fun b!72233 () Bool)

(assert (=> b!72233 (= e!47254 (ite c!10628 (t!5012 (toList!723 lt!31439)) (ite c!10627 (Cons!1472 (h!2058 (toList!723 lt!31439)) (t!5012 (toList!723 lt!31439))) Nil!1473)))))

(declare-fun b!72226 () Bool)

(assert (=> b!72226 (= e!47257 call!6286)))

(declare-fun d!16425 () Bool)

(assert (=> d!16425 e!47256))

(declare-fun res!38431 () Bool)

(assert (=> d!16425 (=> (not res!38431) (not e!47256))))

(assert (=> d!16425 (= res!38431 (isStrictlySorted!291 lt!32216))))

(assert (=> d!16425 (= lt!32216 e!47257)))

(assert (=> d!16425 (= c!10629 (and ((_ is Cons!1472) (toList!723 lt!31439)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31439))) (_1!1068 (tuple2!2115 lt!31440 lt!31442)))))))

(assert (=> d!16425 (isStrictlySorted!291 (toList!723 lt!31439))))

(assert (=> d!16425 (= (insertStrictlySorted!52 (toList!723 lt!31439) (_1!1068 (tuple2!2115 lt!31440 lt!31442)) (_2!1068 (tuple2!2115 lt!31440 lt!31442))) lt!32216)))

(declare-fun b!72234 () Bool)

(assert (=> b!72234 (= e!47254 (insertStrictlySorted!52 (t!5012 (toList!723 lt!31439)) (_1!1068 (tuple2!2115 lt!31440 lt!31442)) (_2!1068 (tuple2!2115 lt!31440 lt!31442))))))

(declare-fun bm!6285 () Bool)

(assert (=> bm!6285 (= call!6287 call!6288)))

(assert (= (and d!16425 c!10629) b!72226))

(assert (= (and d!16425 (not c!10629)) b!72230))

(assert (= (and b!72230 c!10628) b!72228))

(assert (= (and b!72230 (not c!10628)) b!72227))

(assert (= (and b!72227 c!10627) b!72225))

(assert (= (and b!72227 (not c!10627)) b!72229))

(assert (= (or b!72225 b!72229) bm!6285))

(assert (= (or b!72228 bm!6285) bm!6283))

(assert (= (or b!72226 bm!6283) bm!6284))

(assert (= (and bm!6284 c!10630) b!72234))

(assert (= (and bm!6284 (not c!10630)) b!72233))

(assert (= (and d!16425 res!38431) b!72231))

(assert (= (and b!72231 res!38432) b!72232))

(declare-fun m!70149 () Bool)

(assert (=> b!72231 m!70149))

(declare-fun m!70151 () Bool)

(assert (=> b!72234 m!70151))

(declare-fun m!70153 () Bool)

(assert (=> b!72232 m!70153))

(declare-fun m!70155 () Bool)

(assert (=> bm!6284 m!70155))

(declare-fun m!70157 () Bool)

(assert (=> d!16425 m!70157))

(declare-fun m!70159 () Bool)

(assert (=> d!16425 m!70159))

(assert (=> d!15909 d!16425))

(declare-fun d!16427 () Bool)

(assert (=> d!16427 (isDefined!85 (getValueByKey!132 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun lt!32217 () Unit!2002)

(assert (=> d!16427 (= lt!32217 (choose!404 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun e!47259 () Bool)

(assert (=> d!16427 e!47259))

(declare-fun res!38433 () Bool)

(assert (=> d!16427 (=> (not res!38433) (not e!47259))))

(assert (=> d!16427 (= res!38433 (isStrictlySorted!291 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))))

(assert (=> d!16427 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) lt!32217)))

(declare-fun b!72235 () Bool)

(assert (=> b!72235 (= e!47259 (containsKey!136 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16427 res!38433) b!72235))

(assert (=> d!16427 m!67893))

(assert (=> d!16427 m!68279))

(assert (=> d!16427 m!68279))

(assert (=> d!16427 m!68281))

(assert (=> d!16427 m!67893))

(declare-fun m!70161 () Bool)

(assert (=> d!16427 m!70161))

(declare-fun m!70163 () Bool)

(assert (=> d!16427 m!70163))

(assert (=> b!72235 m!67893))

(assert (=> b!72235 m!68275))

(assert (=> b!71201 d!16427))

(declare-fun d!16429 () Bool)

(assert (=> d!16429 (= (isDefined!85 (getValueByKey!132 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))) (not (isEmpty!314 (getValueByKey!132 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))))

(declare-fun bs!3108 () Bool)

(assert (= bs!3108 d!16429))

(assert (=> bs!3108 m!68279))

(declare-fun m!70165 () Bool)

(assert (=> bs!3108 m!70165))

(assert (=> b!71201 d!16429))

(declare-fun b!72239 () Bool)

(declare-fun e!47261 () Option!138)

(assert (=> b!72239 (= e!47261 None!136)))

(declare-fun b!72237 () Bool)

(declare-fun e!47260 () Option!138)

(assert (=> b!72237 (= e!47260 e!47261)))

(declare-fun c!10632 () Bool)

(assert (=> b!72237 (= c!10632 (and ((_ is Cons!1472) (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))) (not (= (_1!1068 (h!2058 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))))

(declare-fun b!72236 () Bool)

(assert (=> b!72236 (= e!47260 (Some!137 (_2!1068 (h!2058 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))))))

(declare-fun c!10631 () Bool)

(declare-fun d!16431 () Bool)

(assert (=> d!16431 (= c!10631 (and ((_ is Cons!1472) (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))) (= (_1!1068 (h!2058 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (=> d!16431 (= (getValueByKey!132 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) e!47260)))

(declare-fun b!72238 () Bool)

(assert (=> b!72238 (= e!47261 (getValueByKey!132 (t!5012 (toList!723 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16431 c!10631) b!72236))

(assert (= (and d!16431 (not c!10631)) b!72237))

(assert (= (and b!72237 c!10632) b!72238))

(assert (= (and b!72237 (not c!10632)) b!72239))

(assert (=> b!72238 m!67893))

(declare-fun m!70167 () Bool)

(assert (=> b!72238 m!70167))

(assert (=> b!71201 d!16431))

(assert (=> d!16043 d!15799))

(declare-fun d!16433 () Bool)

(assert (=> d!16433 (= ($colon$colon!65 e!46652 (ite c!10361 (h!2058 (toList!723 (+!93 lt!31270 lt!31269))) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265)))) (Cons!1472 (ite c!10361 (h!2058 (toList!723 (+!93 lt!31270 lt!31269))) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))) e!46652))))

(assert (=> bm!6173 d!16433))

(declare-fun d!16435 () Bool)

(declare-fun e!47262 () Bool)

(assert (=> d!16435 e!47262))

(declare-fun res!38434 () Bool)

(assert (=> d!16435 (=> res!38434 e!47262)))

(declare-fun lt!32220 () Bool)

(assert (=> d!16435 (= res!38434 (not lt!32220))))

(declare-fun lt!32219 () Bool)

(assert (=> d!16435 (= lt!32220 lt!32219)))

(declare-fun lt!32218 () Unit!2002)

(declare-fun e!47263 () Unit!2002)

(assert (=> d!16435 (= lt!32218 e!47263)))

(declare-fun c!10633 () Bool)

(assert (=> d!16435 (= c!10633 lt!32219)))

(assert (=> d!16435 (= lt!32219 (containsKey!136 (toList!723 lt!31868) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!16435 (= (contains!719 lt!31868 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!32220)))

(declare-fun b!72240 () Bool)

(declare-fun lt!32221 () Unit!2002)

(assert (=> b!72240 (= e!47263 lt!32221)))

(assert (=> b!72240 (= lt!32221 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31868) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!72240 (isDefined!85 (getValueByKey!132 (toList!723 lt!31868) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!72241 () Bool)

(declare-fun Unit!2056 () Unit!2002)

(assert (=> b!72241 (= e!47263 Unit!2056)))

(declare-fun b!72242 () Bool)

(assert (=> b!72242 (= e!47262 (isDefined!85 (getValueByKey!132 (toList!723 lt!31868) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!16435 c!10633) b!72240))

(assert (= (and d!16435 (not c!10633)) b!72241))

(assert (= (and d!16435 (not res!38434)) b!72242))

(assert (=> d!16435 m!68963))

(declare-fun m!70169 () Bool)

(assert (=> d!16435 m!70169))

(assert (=> b!72240 m!68963))

(declare-fun m!70171 () Bool)

(assert (=> b!72240 m!70171))

(assert (=> b!72240 m!68963))

(declare-fun m!70173 () Bool)

(assert (=> b!72240 m!70173))

(assert (=> b!72240 m!70173))

(declare-fun m!70175 () Bool)

(assert (=> b!72240 m!70175))

(assert (=> b!72242 m!68963))

(assert (=> b!72242 m!70173))

(assert (=> b!72242 m!70173))

(assert (=> b!72242 m!70175))

(assert (=> b!71562 d!16435))

(declare-fun d!16437 () Bool)

(declare-fun e!47264 () Bool)

(assert (=> d!16437 e!47264))

(declare-fun res!38435 () Bool)

(assert (=> d!16437 (=> (not res!38435) (not e!47264))))

(declare-fun lt!32224 () ListLongMap!1415)

(assert (=> d!16437 (= res!38435 (contains!719 lt!32224 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(declare-fun lt!32225 () List!1476)

(assert (=> d!16437 (= lt!32224 (ListLongMap!1416 lt!32225))))

(declare-fun lt!32223 () Unit!2002)

(declare-fun lt!32222 () Unit!2002)

(assert (=> d!16437 (= lt!32223 lt!32222)))

(assert (=> d!16437 (= (getValueByKey!132 lt!32225 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(assert (=> d!16437 (= lt!32222 (lemmaContainsTupThenGetReturnValue!49 lt!32225 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(assert (=> d!16437 (= lt!32225 (insertStrictlySorted!52 (toList!723 call!6205) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(assert (=> d!16437 (= (+!93 call!6205 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) lt!32224)))

(declare-fun b!72243 () Bool)

(declare-fun res!38436 () Bool)

(assert (=> b!72243 (=> (not res!38436) (not e!47264))))

(assert (=> b!72243 (= res!38436 (= (getValueByKey!132 (toList!723 lt!32224) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))))

(declare-fun b!72244 () Bool)

(assert (=> b!72244 (= e!47264 (contains!722 (toList!723 lt!32224) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))

(assert (= (and d!16437 res!38435) b!72243))

(assert (= (and b!72243 res!38436) b!72244))

(declare-fun m!70177 () Bool)

(assert (=> d!16437 m!70177))

(declare-fun m!70179 () Bool)

(assert (=> d!16437 m!70179))

(declare-fun m!70181 () Bool)

(assert (=> d!16437 m!70181))

(declare-fun m!70183 () Bool)

(assert (=> d!16437 m!70183))

(declare-fun m!70185 () Bool)

(assert (=> b!72243 m!70185))

(declare-fun m!70187 () Bool)

(assert (=> b!72244 m!70187))

(assert (=> b!71428 d!16437))

(declare-fun b!72248 () Bool)

(declare-fun e!47266 () Option!138)

(assert (=> b!72248 (= e!47266 None!136)))

(declare-fun b!72246 () Bool)

(declare-fun e!47265 () Option!138)

(assert (=> b!72246 (= e!47265 e!47266)))

(declare-fun c!10635 () Bool)

(assert (=> b!72246 (= c!10635 (and ((_ is Cons!1472) (toList!723 lt!31639)) (not (= (_1!1068 (h!2058 (toList!723 lt!31639))) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))))

(declare-fun b!72245 () Bool)

(assert (=> b!72245 (= e!47265 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31639)))))))

(declare-fun c!10634 () Bool)

(declare-fun d!16439 () Bool)

(assert (=> d!16439 (= c!10634 (and ((_ is Cons!1472) (toList!723 lt!31639)) (= (_1!1068 (h!2058 (toList!723 lt!31639))) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(assert (=> d!16439 (= (getValueByKey!132 (toList!723 lt!31639) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) e!47265)))

(declare-fun b!72247 () Bool)

(assert (=> b!72247 (= e!47266 (getValueByKey!132 (t!5012 (toList!723 lt!31639)) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16439 c!10634) b!72245))

(assert (= (and d!16439 (not c!10634)) b!72246))

(assert (= (and b!72246 c!10635) b!72247))

(assert (= (and b!72246 (not c!10635)) b!72248))

(declare-fun m!70189 () Bool)

(assert (=> b!72247 m!70189))

(assert (=> b!71331 d!16439))

(declare-fun d!16441 () Bool)

(assert (=> d!16441 (= (inRange!0 (ite c!10431 (index!3071 lt!31849) (ite c!10430 (index!3070 lt!31858) (index!3073 lt!31858))) (mask!6149 newMap!16)) (and (bvsge (ite c!10431 (index!3071 lt!31849) (ite c!10430 (index!3070 lt!31858) (index!3073 lt!31858))) #b00000000000000000000000000000000) (bvslt (ite c!10431 (index!3071 lt!31849) (ite c!10430 (index!3070 lt!31858) (index!3073 lt!31858))) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6214 d!16441))

(assert (=> d!15889 d!15887))

(declare-fun d!16443 () Bool)

(assert (=> d!16443 (= (getValueByKey!132 lt!31449 (_1!1068 lt!31269)) (Some!137 (_2!1068 lt!31269)))))

(assert (=> d!16443 true))

(declare-fun _$22!381 () Unit!2002)

(assert (=> d!16443 (= (choose!397 lt!31449 (_1!1068 lt!31269) (_2!1068 lt!31269)) _$22!381)))

(declare-fun bs!3109 () Bool)

(assert (= bs!3109 d!16443))

(assert (=> bs!3109 m!68127))

(assert (=> d!15889 d!16443))

(declare-fun d!16445 () Bool)

(declare-fun res!38437 () Bool)

(declare-fun e!47267 () Bool)

(assert (=> d!16445 (=> res!38437 e!47267)))

(assert (=> d!16445 (= res!38437 (or ((_ is Nil!1473) lt!31449) ((_ is Nil!1473) (t!5012 lt!31449))))))

(assert (=> d!16445 (= (isStrictlySorted!291 lt!31449) e!47267)))

(declare-fun b!72249 () Bool)

(declare-fun e!47268 () Bool)

(assert (=> b!72249 (= e!47267 e!47268)))

(declare-fun res!38438 () Bool)

(assert (=> b!72249 (=> (not res!38438) (not e!47268))))

(assert (=> b!72249 (= res!38438 (bvslt (_1!1068 (h!2058 lt!31449)) (_1!1068 (h!2058 (t!5012 lt!31449)))))))

(declare-fun b!72250 () Bool)

(assert (=> b!72250 (= e!47268 (isStrictlySorted!291 (t!5012 lt!31449)))))

(assert (= (and d!16445 (not res!38437)) b!72249))

(assert (= (and b!72249 res!38438) b!72250))

(declare-fun m!70191 () Bool)

(assert (=> b!72250 m!70191))

(assert (=> d!15889 d!16445))

(declare-fun d!16447 () Bool)

(declare-fun res!38439 () Bool)

(declare-fun e!47269 () Bool)

(assert (=> d!16447 (=> res!38439 e!47269)))

(assert (=> d!16447 (= res!38439 (and ((_ is Cons!1472) lt!31536) (= (_1!1068 (h!2058 lt!31536)) (_1!1068 lt!31269))))))

(assert (=> d!16447 (= (containsKey!136 lt!31536 (_1!1068 lt!31269)) e!47269)))

(declare-fun b!72251 () Bool)

(declare-fun e!47270 () Bool)

(assert (=> b!72251 (= e!47269 e!47270)))

(declare-fun res!38440 () Bool)

(assert (=> b!72251 (=> (not res!38440) (not e!47270))))

(assert (=> b!72251 (= res!38440 (and (or (not ((_ is Cons!1472) lt!31536)) (bvsle (_1!1068 (h!2058 lt!31536)) (_1!1068 lt!31269))) ((_ is Cons!1472) lt!31536) (bvslt (_1!1068 (h!2058 lt!31536)) (_1!1068 lt!31269))))))

(declare-fun b!72252 () Bool)

(assert (=> b!72252 (= e!47270 (containsKey!136 (t!5012 lt!31536) (_1!1068 lt!31269)))))

(assert (= (and d!16447 (not res!38439)) b!72251))

(assert (= (and b!72251 res!38440) b!72252))

(declare-fun m!70193 () Bool)

(assert (=> b!72252 m!70193))

(assert (=> b!71191 d!16447))

(declare-fun d!16449 () Bool)

(declare-fun e!47271 () Bool)

(assert (=> d!16449 e!47271))

(declare-fun res!38441 () Bool)

(assert (=> d!16449 (=> res!38441 e!47271)))

(declare-fun lt!32228 () Bool)

(assert (=> d!16449 (= res!38441 (not lt!32228))))

(declare-fun lt!32227 () Bool)

(assert (=> d!16449 (= lt!32228 lt!32227)))

(declare-fun lt!32226 () Unit!2002)

(declare-fun e!47272 () Unit!2002)

(assert (=> d!16449 (= lt!32226 e!47272)))

(declare-fun c!10636 () Bool)

(assert (=> d!16449 (= c!10636 lt!32227)))

(assert (=> d!16449 (= lt!32227 (containsKey!136 (toList!723 lt!31639) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16449 (= (contains!719 lt!31639 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) lt!32228)))

(declare-fun b!72253 () Bool)

(declare-fun lt!32229 () Unit!2002)

(assert (=> b!72253 (= e!47272 lt!32229)))

(assert (=> b!72253 (= lt!32229 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31639) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> b!72253 (isDefined!85 (getValueByKey!132 (toList!723 lt!31639) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!72254 () Bool)

(declare-fun Unit!2057 () Unit!2002)

(assert (=> b!72254 (= e!47272 Unit!2057)))

(declare-fun b!72255 () Bool)

(assert (=> b!72255 (= e!47271 (isDefined!85 (getValueByKey!132 (toList!723 lt!31639) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(assert (= (and d!16449 c!10636) b!72253))

(assert (= (and d!16449 (not c!10636)) b!72254))

(assert (= (and d!16449 (not res!38441)) b!72255))

(declare-fun m!70195 () Bool)

(assert (=> d!16449 m!70195))

(declare-fun m!70197 () Bool)

(assert (=> b!72253 m!70197))

(assert (=> b!72253 m!68557))

(assert (=> b!72253 m!68557))

(declare-fun m!70199 () Bool)

(assert (=> b!72253 m!70199))

(assert (=> b!72255 m!68557))

(assert (=> b!72255 m!68557))

(assert (=> b!72255 m!70199))

(assert (=> d!15919 d!16449))

(declare-fun b!72259 () Bool)

(declare-fun e!47274 () Option!138)

(assert (=> b!72259 (= e!47274 None!136)))

(declare-fun b!72257 () Bool)

(declare-fun e!47273 () Option!138)

(assert (=> b!72257 (= e!47273 e!47274)))

(declare-fun c!10638 () Bool)

(assert (=> b!72257 (= c!10638 (and ((_ is Cons!1472) lt!31640) (not (= (_1!1068 (h!2058 lt!31640)) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))))

(declare-fun b!72256 () Bool)

(assert (=> b!72256 (= e!47273 (Some!137 (_2!1068 (h!2058 lt!31640))))))

(declare-fun d!16451 () Bool)

(declare-fun c!10637 () Bool)

(assert (=> d!16451 (= c!10637 (and ((_ is Cons!1472) lt!31640) (= (_1!1068 (h!2058 lt!31640)) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(assert (=> d!16451 (= (getValueByKey!132 lt!31640 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) e!47273)))

(declare-fun b!72258 () Bool)

(assert (=> b!72258 (= e!47274 (getValueByKey!132 (t!5012 lt!31640) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16451 c!10637) b!72256))

(assert (= (and d!16451 (not c!10637)) b!72257))

(assert (= (and b!72257 c!10638) b!72258))

(assert (= (and b!72257 (not c!10638)) b!72259))

(declare-fun m!70201 () Bool)

(assert (=> b!72258 m!70201))

(assert (=> d!15919 d!16451))

(declare-fun d!16453 () Bool)

(assert (=> d!16453 (= (getValueByKey!132 lt!31640 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) (Some!137 (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun lt!32230 () Unit!2002)

(assert (=> d!16453 (= lt!32230 (choose!397 lt!31640 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun e!47275 () Bool)

(assert (=> d!16453 e!47275))

(declare-fun res!38442 () Bool)

(assert (=> d!16453 (=> (not res!38442) (not e!47275))))

(assert (=> d!16453 (= res!38442 (isStrictlySorted!291 lt!31640))))

(assert (=> d!16453 (= (lemmaContainsTupThenGetReturnValue!49 lt!31640 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) lt!32230)))

(declare-fun b!72260 () Bool)

(declare-fun res!38443 () Bool)

(assert (=> b!72260 (=> (not res!38443) (not e!47275))))

(assert (=> b!72260 (= res!38443 (containsKey!136 lt!31640 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!72261 () Bool)

(assert (=> b!72261 (= e!47275 (contains!722 lt!31640 (tuple2!2115 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(assert (= (and d!16453 res!38442) b!72260))

(assert (= (and b!72260 res!38443) b!72261))

(assert (=> d!16453 m!68551))

(declare-fun m!70203 () Bool)

(assert (=> d!16453 m!70203))

(declare-fun m!70205 () Bool)

(assert (=> d!16453 m!70205))

(declare-fun m!70207 () Bool)

(assert (=> b!72260 m!70207))

(declare-fun m!70209 () Bool)

(assert (=> b!72261 m!70209))

(assert (=> d!15919 d!16453))

(declare-fun bm!6286 () Bool)

(declare-fun call!6291 () List!1476)

(declare-fun call!6289 () List!1476)

(assert (=> bm!6286 (= call!6291 call!6289)))

(declare-fun b!72262 () Bool)

(declare-fun e!47277 () List!1476)

(declare-fun call!6290 () List!1476)

(assert (=> b!72262 (= e!47277 call!6290)))

(declare-fun bm!6287 () Bool)

(declare-fun e!47276 () List!1476)

(declare-fun c!10641 () Bool)

(assert (=> bm!6287 (= call!6289 ($colon$colon!65 e!47276 (ite c!10641 (h!2058 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158)))) (tuple2!2115 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))))

(declare-fun c!10642 () Bool)

(assert (=> bm!6287 (= c!10642 c!10641)))

(declare-fun b!72264 () Bool)

(declare-fun c!10639 () Bool)

(assert (=> b!72264 (= c!10639 (and ((_ is Cons!1472) (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158)))) (bvsgt (_1!1068 (h!2058 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158))))) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun e!47280 () List!1476)

(assert (=> b!72264 (= e!47280 e!47277)))

(declare-fun b!72265 () Bool)

(assert (=> b!72265 (= e!47280 call!6291)))

(declare-fun b!72266 () Bool)

(assert (=> b!72266 (= e!47277 call!6290)))

(declare-fun b!72267 () Bool)

(declare-fun e!47279 () List!1476)

(assert (=> b!72267 (= e!47279 e!47280)))

(declare-fun c!10640 () Bool)

(assert (=> b!72267 (= c!10640 (and ((_ is Cons!1472) (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158)))) (= (_1!1068 (h!2058 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158))))) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!72268 () Bool)

(declare-fun res!38445 () Bool)

(declare-fun e!47278 () Bool)

(assert (=> b!72268 (=> (not res!38445) (not e!47278))))

(declare-fun lt!32231 () List!1476)

(assert (=> b!72268 (= res!38445 (containsKey!136 lt!32231 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!72269 () Bool)

(assert (=> b!72269 (= e!47278 (contains!722 lt!32231 (tuple2!2115 (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!72270 () Bool)

(assert (=> b!72270 (= e!47276 (ite c!10640 (t!5012 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158)))) (ite c!10639 (Cons!1472 (h!2058 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158)))) (t!5012 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158))))) Nil!1473)))))

(declare-fun b!72263 () Bool)

(assert (=> b!72263 (= e!47279 call!6289)))

(declare-fun d!16455 () Bool)

(assert (=> d!16455 e!47278))

(declare-fun res!38444 () Bool)

(assert (=> d!16455 (=> (not res!38444) (not e!47278))))

(assert (=> d!16455 (= res!38444 (isStrictlySorted!291 lt!32231))))

(assert (=> d!16455 (= lt!32231 e!47279)))

(assert (=> d!16455 (= c!10641 (and ((_ is Cons!1472) (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158)))) (bvslt (_1!1068 (h!2058 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158))))) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(assert (=> d!16455 (isStrictlySorted!291 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158))))))

(assert (=> d!16455 (= (insertStrictlySorted!52 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158))) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) lt!32231)))

(declare-fun b!72271 () Bool)

(assert (=> b!72271 (= e!47276 (insertStrictlySorted!52 (t!5012 (toList!723 (ite c!10325 call!6156 (ite c!10323 call!6155 call!6158)))) (_1!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_2!1068 (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun bm!6288 () Bool)

(assert (=> bm!6288 (= call!6290 call!6291)))

(assert (= (and d!16455 c!10641) b!72263))

(assert (= (and d!16455 (not c!10641)) b!72267))

(assert (= (and b!72267 c!10640) b!72265))

(assert (= (and b!72267 (not c!10640)) b!72264))

(assert (= (and b!72264 c!10639) b!72262))

(assert (= (and b!72264 (not c!10639)) b!72266))

(assert (= (or b!72262 b!72266) bm!6288))

(assert (= (or b!72265 bm!6288) bm!6286))

(assert (= (or b!72263 bm!6286) bm!6287))

(assert (= (and bm!6287 c!10642) b!72271))

(assert (= (and bm!6287 (not c!10642)) b!72270))

(assert (= (and d!16455 res!38444) b!72268))

(assert (= (and b!72268 res!38445) b!72269))

(declare-fun m!70211 () Bool)

(assert (=> b!72268 m!70211))

(declare-fun m!70213 () Bool)

(assert (=> b!72271 m!70213))

(declare-fun m!70215 () Bool)

(assert (=> b!72269 m!70215))

(declare-fun m!70217 () Bool)

(assert (=> bm!6287 m!70217))

(declare-fun m!70219 () Bool)

(assert (=> d!16455 m!70219))

(declare-fun m!70221 () Bool)

(assert (=> d!16455 m!70221))

(assert (=> d!15919 d!16455))

(declare-fun d!16457 () Bool)

(declare-fun res!38446 () Bool)

(declare-fun e!47281 () Bool)

(assert (=> d!16457 (=> res!38446 e!47281)))

(assert (=> d!16457 (= res!38446 (and ((_ is Cons!1472) lt!31609) (= (_1!1068 (h!2058 lt!31609)) (_1!1068 lt!31265))))))

(assert (=> d!16457 (= (containsKey!136 lt!31609 (_1!1068 lt!31265)) e!47281)))

(declare-fun b!72272 () Bool)

(declare-fun e!47282 () Bool)

(assert (=> b!72272 (= e!47281 e!47282)))

(declare-fun res!38447 () Bool)

(assert (=> b!72272 (=> (not res!38447) (not e!47282))))

(assert (=> b!72272 (= res!38447 (and (or (not ((_ is Cons!1472) lt!31609)) (bvsle (_1!1068 (h!2058 lt!31609)) (_1!1068 lt!31265))) ((_ is Cons!1472) lt!31609) (bvslt (_1!1068 (h!2058 lt!31609)) (_1!1068 lt!31265))))))

(declare-fun b!72273 () Bool)

(assert (=> b!72273 (= e!47282 (containsKey!136 (t!5012 lt!31609) (_1!1068 lt!31265)))))

(assert (= (and d!16457 (not res!38446)) b!72272))

(assert (= (and b!72272 res!38447) b!72273))

(declare-fun m!70223 () Bool)

(assert (=> b!72273 m!70223))

(assert (=> b!71296 d!16457))

(declare-fun b!72274 () Bool)

(declare-fun e!47286 () Bool)

(declare-fun e!47284 () Bool)

(assert (=> b!72274 (= e!47286 e!47284)))

(declare-fun c!10643 () Bool)

(assert (=> b!72274 (= c!10643 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!16459 () Bool)

(declare-fun res!38449 () Bool)

(declare-fun e!47283 () Bool)

(assert (=> d!16459 (=> res!38449 e!47283)))

(assert (=> d!16459 (= res!38449 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!16459 (= (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10439 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472))) e!47283)))

(declare-fun call!6292 () Bool)

(declare-fun bm!6289 () Bool)

(assert (=> bm!6289 (= call!6292 (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10643 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!10439 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472))) (ite c!10439 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)))))))

(declare-fun b!72275 () Bool)

(assert (=> b!72275 (= e!47284 call!6292)))

(declare-fun b!72276 () Bool)

(assert (=> b!72276 (= e!47283 e!47286)))

(declare-fun res!38450 () Bool)

(assert (=> b!72276 (=> (not res!38450) (not e!47286))))

(declare-fun e!47285 () Bool)

(assert (=> b!72276 (= res!38450 (not e!47285))))

(declare-fun res!38448 () Bool)

(assert (=> b!72276 (=> (not res!38448) (not e!47285))))

(assert (=> b!72276 (= res!38448 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!72277 () Bool)

(assert (=> b!72277 (= e!47285 (contains!721 (ite c!10439 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!72278 () Bool)

(assert (=> b!72278 (= e!47284 call!6292)))

(assert (= (and d!16459 (not res!38449)) b!72276))

(assert (= (and b!72276 res!38448) b!72277))

(assert (= (and b!72276 res!38450) b!72274))

(assert (= (and b!72274 c!10643) b!72278))

(assert (= (and b!72274 (not c!10643)) b!72275))

(assert (= (or b!72278 b!72275) bm!6289))

(declare-fun m!70225 () Bool)

(assert (=> b!72274 m!70225))

(assert (=> b!72274 m!70225))

(declare-fun m!70227 () Bool)

(assert (=> b!72274 m!70227))

(assert (=> bm!6289 m!70225))

(declare-fun m!70229 () Bool)

(assert (=> bm!6289 m!70229))

(assert (=> b!72276 m!70225))

(assert (=> b!72276 m!70225))

(assert (=> b!72276 m!70227))

(assert (=> b!72277 m!70225))

(assert (=> b!72277 m!70225))

(declare-fun m!70231 () Bool)

(assert (=> b!72277 m!70231))

(assert (=> bm!6218 d!16459))

(declare-fun d!16461 () Bool)

(declare-fun e!47287 () Bool)

(assert (=> d!16461 e!47287))

(declare-fun res!38451 () Bool)

(assert (=> d!16461 (=> (not res!38451) (not e!47287))))

(declare-fun lt!32234 () ListLongMap!1415)

(assert (=> d!16461 (= res!38451 (contains!719 lt!32234 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun lt!32235 () List!1476)

(assert (=> d!16461 (= lt!32234 (ListLongMap!1416 lt!32235))))

(declare-fun lt!32233 () Unit!2002)

(declare-fun lt!32232 () Unit!2002)

(assert (=> d!16461 (= lt!32233 lt!32232)))

(assert (=> d!16461 (= (getValueByKey!132 lt!32235 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16461 (= lt!32232 (lemmaContainsTupThenGetReturnValue!49 lt!32235 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16461 (= lt!32235 (insertStrictlySorted!52 (toList!723 call!6198) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16461 (= (+!93 call!6198 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) lt!32234)))

(declare-fun b!72279 () Bool)

(declare-fun res!38452 () Bool)

(assert (=> b!72279 (=> (not res!38452) (not e!47287))))

(assert (=> b!72279 (= res!38452 (= (getValueByKey!132 (toList!723 lt!32234) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(declare-fun b!72280 () Bool)

(assert (=> b!72280 (= e!47287 (contains!722 (toList!723 lt!32234) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(assert (= (and d!16461 res!38451) b!72279))

(assert (= (and b!72279 res!38452) b!72280))

(declare-fun m!70233 () Bool)

(assert (=> d!16461 m!70233))

(declare-fun m!70235 () Bool)

(assert (=> d!16461 m!70235))

(declare-fun m!70237 () Bool)

(assert (=> d!16461 m!70237))

(declare-fun m!70239 () Bool)

(assert (=> d!16461 m!70239))

(declare-fun m!70241 () Bool)

(assert (=> b!72279 m!70241))

(declare-fun m!70243 () Bool)

(assert (=> b!72280 m!70243))

(assert (=> b!71395 d!16461))

(declare-fun d!16463 () Bool)

(declare-fun e!47288 () Bool)

(assert (=> d!16463 e!47288))

(declare-fun res!38453 () Bool)

(assert (=> d!16463 (=> res!38453 e!47288)))

(declare-fun lt!32238 () Bool)

(assert (=> d!16463 (= res!38453 (not lt!32238))))

(declare-fun lt!32237 () Bool)

(assert (=> d!16463 (= lt!32238 lt!32237)))

(declare-fun lt!32236 () Unit!2002)

(declare-fun e!47289 () Unit!2002)

(assert (=> d!16463 (= lt!32236 e!47289)))

(declare-fun c!10644 () Bool)

(assert (=> d!16463 (= c!10644 lt!32237)))

(assert (=> d!16463 (= lt!32237 (containsKey!136 (toList!723 lt!31861) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16463 (= (contains!719 lt!31861 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32238)))

(declare-fun b!72281 () Bool)

(declare-fun lt!32239 () Unit!2002)

(assert (=> b!72281 (= e!47289 lt!32239)))

(assert (=> b!72281 (= lt!32239 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31861) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> b!72281 (isDefined!85 (getValueByKey!132 (toList!723 lt!31861) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!72282 () Bool)

(declare-fun Unit!2058 () Unit!2002)

(assert (=> b!72282 (= e!47289 Unit!2058)))

(declare-fun b!72283 () Bool)

(assert (=> b!72283 (= e!47288 (isDefined!85 (getValueByKey!132 (toList!723 lt!31861) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16463 c!10644) b!72281))

(assert (= (and d!16463 (not c!10644)) b!72282))

(assert (= (and d!16463 (not res!38453)) b!72283))

(declare-fun m!70245 () Bool)

(assert (=> d!16463 m!70245))

(declare-fun m!70247 () Bool)

(assert (=> b!72281 m!70247))

(assert (=> b!72281 m!68957))

(assert (=> b!72281 m!68957))

(declare-fun m!70249 () Bool)

(assert (=> b!72281 m!70249))

(assert (=> b!72283 m!68957))

(assert (=> b!72283 m!68957))

(assert (=> b!72283 m!70249))

(assert (=> d!16009 d!16463))

(declare-fun b!72287 () Bool)

(declare-fun e!47291 () Option!138)

(assert (=> b!72287 (= e!47291 None!136)))

(declare-fun b!72285 () Bool)

(declare-fun e!47290 () Option!138)

(assert (=> b!72285 (= e!47290 e!47291)))

(declare-fun c!10646 () Bool)

(assert (=> b!72285 (= c!10646 (and ((_ is Cons!1472) lt!31862) (not (= (_1!1068 (h!2058 lt!31862)) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!72284 () Bool)

(assert (=> b!72284 (= e!47290 (Some!137 (_2!1068 (h!2058 lt!31862))))))

(declare-fun d!16465 () Bool)

(declare-fun c!10645 () Bool)

(assert (=> d!16465 (= c!10645 (and ((_ is Cons!1472) lt!31862) (= (_1!1068 (h!2058 lt!31862)) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16465 (= (getValueByKey!132 lt!31862 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!47290)))

(declare-fun b!72286 () Bool)

(assert (=> b!72286 (= e!47291 (getValueByKey!132 (t!5012 lt!31862) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16465 c!10645) b!72284))

(assert (= (and d!16465 (not c!10645)) b!72285))

(assert (= (and b!72285 c!10646) b!72286))

(assert (= (and b!72285 (not c!10646)) b!72287))

(declare-fun m!70251 () Bool)

(assert (=> b!72286 m!70251))

(assert (=> d!16009 d!16465))

(declare-fun d!16467 () Bool)

(assert (=> d!16467 (= (getValueByKey!132 lt!31862 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!32240 () Unit!2002)

(assert (=> d!16467 (= lt!32240 (choose!397 lt!31862 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun e!47292 () Bool)

(assert (=> d!16467 e!47292))

(declare-fun res!38454 () Bool)

(assert (=> d!16467 (=> (not res!38454) (not e!47292))))

(assert (=> d!16467 (= res!38454 (isStrictlySorted!291 lt!31862))))

(assert (=> d!16467 (= (lemmaContainsTupThenGetReturnValue!49 lt!31862 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32240)))

(declare-fun b!72288 () Bool)

(declare-fun res!38455 () Bool)

(assert (=> b!72288 (=> (not res!38455) (not e!47292))))

(assert (=> b!72288 (= res!38455 (containsKey!136 lt!31862 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!72289 () Bool)

(assert (=> b!72289 (= e!47292 (contains!722 lt!31862 (tuple2!2115 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16467 res!38454) b!72288))

(assert (= (and b!72288 res!38455) b!72289))

(assert (=> d!16467 m!68951))

(declare-fun m!70253 () Bool)

(assert (=> d!16467 m!70253))

(declare-fun m!70255 () Bool)

(assert (=> d!16467 m!70255))

(declare-fun m!70257 () Bool)

(assert (=> b!72288 m!70257))

(declare-fun m!70259 () Bool)

(assert (=> b!72289 m!70259))

(assert (=> d!16009 d!16467))

(declare-fun bm!6290 () Bool)

(declare-fun call!6295 () List!1476)

(declare-fun call!6293 () List!1476)

(assert (=> bm!6290 (= call!6295 call!6293)))

(declare-fun b!72290 () Bool)

(declare-fun e!47294 () List!1476)

(declare-fun call!6294 () List!1476)

(assert (=> b!72290 (= e!47294 call!6294)))

(declare-fun c!10649 () Bool)

(declare-fun bm!6291 () Bool)

(declare-fun e!47293 () List!1476)

(assert (=> bm!6291 (= call!6293 ($colon$colon!65 e!47293 (ite c!10649 (h!2058 (toList!723 call!6157)) (tuple2!2115 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun c!10650 () Bool)

(assert (=> bm!6291 (= c!10650 c!10649)))

(declare-fun b!72292 () Bool)

(declare-fun c!10647 () Bool)

(assert (=> b!72292 (= c!10647 (and ((_ is Cons!1472) (toList!723 call!6157)) (bvsgt (_1!1068 (h!2058 (toList!723 call!6157))) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun e!47297 () List!1476)

(assert (=> b!72292 (= e!47297 e!47294)))

(declare-fun b!72293 () Bool)

(assert (=> b!72293 (= e!47297 call!6295)))

(declare-fun b!72294 () Bool)

(assert (=> b!72294 (= e!47294 call!6294)))

(declare-fun b!72295 () Bool)

(declare-fun e!47296 () List!1476)

(assert (=> b!72295 (= e!47296 e!47297)))

(declare-fun c!10648 () Bool)

(assert (=> b!72295 (= c!10648 (and ((_ is Cons!1472) (toList!723 call!6157)) (= (_1!1068 (h!2058 (toList!723 call!6157))) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!72296 () Bool)

(declare-fun res!38457 () Bool)

(declare-fun e!47295 () Bool)

(assert (=> b!72296 (=> (not res!38457) (not e!47295))))

(declare-fun lt!32241 () List!1476)

(assert (=> b!72296 (= res!38457 (containsKey!136 lt!32241 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!72297 () Bool)

(assert (=> b!72297 (= e!47295 (contains!722 lt!32241 (tuple2!2115 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!72298 () Bool)

(assert (=> b!72298 (= e!47293 (ite c!10648 (t!5012 (toList!723 call!6157)) (ite c!10647 (Cons!1472 (h!2058 (toList!723 call!6157)) (t!5012 (toList!723 call!6157))) Nil!1473)))))

(declare-fun b!72291 () Bool)

(assert (=> b!72291 (= e!47296 call!6293)))

(declare-fun d!16469 () Bool)

(assert (=> d!16469 e!47295))

(declare-fun res!38456 () Bool)

(assert (=> d!16469 (=> (not res!38456) (not e!47295))))

(assert (=> d!16469 (= res!38456 (isStrictlySorted!291 lt!32241))))

(assert (=> d!16469 (= lt!32241 e!47296)))

(assert (=> d!16469 (= c!10649 (and ((_ is Cons!1472) (toList!723 call!6157)) (bvslt (_1!1068 (h!2058 (toList!723 call!6157))) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16469 (isStrictlySorted!291 (toList!723 call!6157))))

(assert (=> d!16469 (= (insertStrictlySorted!52 (toList!723 call!6157) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32241)))

(declare-fun b!72299 () Bool)

(assert (=> b!72299 (= e!47293 (insertStrictlySorted!52 (t!5012 (toList!723 call!6157)) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun bm!6292 () Bool)

(assert (=> bm!6292 (= call!6294 call!6295)))

(assert (= (and d!16469 c!10649) b!72291))

(assert (= (and d!16469 (not c!10649)) b!72295))

(assert (= (and b!72295 c!10648) b!72293))

(assert (= (and b!72295 (not c!10648)) b!72292))

(assert (= (and b!72292 c!10647) b!72290))

(assert (= (and b!72292 (not c!10647)) b!72294))

(assert (= (or b!72290 b!72294) bm!6292))

(assert (= (or b!72293 bm!6292) bm!6290))

(assert (= (or b!72291 bm!6290) bm!6291))

(assert (= (and bm!6291 c!10650) b!72299))

(assert (= (and bm!6291 (not c!10650)) b!72298))

(assert (= (and d!16469 res!38456) b!72296))

(assert (= (and b!72296 res!38457) b!72297))

(declare-fun m!70261 () Bool)

(assert (=> b!72296 m!70261))

(declare-fun m!70263 () Bool)

(assert (=> b!72299 m!70263))

(declare-fun m!70265 () Bool)

(assert (=> b!72297 m!70265))

(declare-fun m!70267 () Bool)

(assert (=> bm!6291 m!70267))

(declare-fun m!70269 () Bool)

(assert (=> d!16469 m!70269))

(declare-fun m!70271 () Bool)

(assert (=> d!16469 m!70271))

(assert (=> d!16009 d!16469))

(declare-fun b!72300 () Bool)

(declare-fun e!47299 () (_ BitVec 32))

(declare-fun call!6296 () (_ BitVec 32))

(assert (=> b!72300 (= e!47299 call!6296)))

(declare-fun b!72301 () Bool)

(declare-fun e!47298 () (_ BitVec 32))

(assert (=> b!72301 (= e!47298 #b00000000000000000000000000000000)))

(declare-fun b!72302 () Bool)

(assert (=> b!72302 (= e!47299 (bvadd #b00000000000000000000000000000001 call!6296))))

(declare-fun b!72303 () Bool)

(assert (=> b!72303 (= e!47298 e!47299)))

(declare-fun c!10651 () Bool)

(assert (=> b!72303 (= c!10651 (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!16471 () Bool)

(declare-fun lt!32242 () (_ BitVec 32))

(assert (=> d!16471 (and (bvsge lt!32242 #b00000000000000000000000000000000) (bvsle lt!32242 (bvsub (size!2090 (_keys!3840 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!16471 (= lt!32242 e!47298)))

(declare-fun c!10652 () Bool)

(assert (=> d!16471 (= c!10652 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16471 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2090 (_keys!3840 newMap!16)) (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16471 (= (arrayCountValidKeys!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))) lt!32242)))

(declare-fun bm!6293 () Bool)

(assert (=> bm!6293 (= call!6296 (arrayCountValidKeys!0 (_keys!3840 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))))))

(assert (= (and d!16471 c!10652) b!72301))

(assert (= (and d!16471 (not c!10652)) b!72303))

(assert (= (and b!72303 c!10651) b!72302))

(assert (= (and b!72303 (not c!10651)) b!72300))

(assert (= (or b!72302 b!72300) bm!6293))

(assert (=> b!72303 m!69467))

(assert (=> b!72303 m!69467))

(assert (=> b!72303 m!69469))

(declare-fun m!70273 () Bool)

(assert (=> bm!6293 m!70273))

(assert (=> bm!6221 d!16471))

(declare-fun d!16473 () Bool)

(declare-fun c!10653 () Bool)

(assert (=> d!16473 (= c!10653 ((_ is Nil!1473) (toList!723 lt!31452)))))

(declare-fun e!47300 () (InoxSet tuple2!2114))

(assert (=> d!16473 (= (content!76 (toList!723 lt!31452)) e!47300)))

(declare-fun b!72304 () Bool)

(assert (=> b!72304 (= e!47300 ((as const (Array tuple2!2114 Bool)) false))))

(declare-fun b!72305 () Bool)

(assert (=> b!72305 (= e!47300 ((_ map or) (store ((as const (Array tuple2!2114 Bool)) false) (h!2058 (toList!723 lt!31452)) true) (content!76 (t!5012 (toList!723 lt!31452)))))))

(assert (= (and d!16473 c!10653) b!72304))

(assert (= (and d!16473 (not c!10653)) b!72305))

(declare-fun m!70275 () Bool)

(assert (=> b!72305 m!70275))

(assert (=> b!72305 m!69899))

(assert (=> d!15949 d!16473))

(declare-fun d!16475 () Bool)

(assert (=> d!16475 (= (content!75 Nil!1472) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!15907 d!16475))

(declare-fun d!16477 () Bool)

(assert (not d!16477))

(assert (=> b!71317 d!16477))

(declare-fun d!16479 () Bool)

(declare-fun lt!32243 () Bool)

(assert (=> d!16479 (= lt!32243 (select (content!75 Nil!1472) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!47302 () Bool)

(assert (=> d!16479 (= lt!32243 e!47302)))

(declare-fun res!38458 () Bool)

(assert (=> d!16479 (=> (not res!38458) (not e!47302))))

(assert (=> d!16479 (= res!38458 ((_ is Cons!1471) Nil!1472))))

(assert (=> d!16479 (= (contains!721 Nil!1472 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) lt!32243)))

(declare-fun b!72306 () Bool)

(declare-fun e!47301 () Bool)

(assert (=> b!72306 (= e!47302 e!47301)))

(declare-fun res!38459 () Bool)

(assert (=> b!72306 (=> res!38459 e!47301)))

(assert (=> b!72306 (= res!38459 (= (h!2057 Nil!1472) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72307 () Bool)

(assert (=> b!72307 (= e!47301 (contains!721 (t!5011 Nil!1472) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!16479 res!38458) b!72306))

(assert (= (and b!72306 (not res!38459)) b!72307))

(assert (=> d!16479 m!68503))

(assert (=> d!16479 m!68283))

(declare-fun m!70277 () Bool)

(assert (=> d!16479 m!70277))

(assert (=> b!72307 m!68283))

(declare-fun m!70279 () Bool)

(assert (=> b!72307 m!70279))

(assert (=> b!71559 d!16479))

(declare-fun d!16481 () Bool)

(declare-fun e!47303 () Bool)

(assert (=> d!16481 e!47303))

(declare-fun res!38460 () Bool)

(assert (=> d!16481 (=> (not res!38460) (not e!47303))))

(declare-fun lt!32246 () ListLongMap!1415)

(assert (=> d!16481 (= res!38460 (contains!719 lt!32246 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun lt!32247 () List!1476)

(assert (=> d!16481 (= lt!32246 (ListLongMap!1416 lt!32247))))

(declare-fun lt!32245 () Unit!2002)

(declare-fun lt!32244 () Unit!2002)

(assert (=> d!16481 (= lt!32245 lt!32244)))

(assert (=> d!16481 (= (getValueByKey!132 lt!32247 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16481 (= lt!32244 (lemmaContainsTupThenGetReturnValue!49 lt!32247 (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16481 (= lt!32247 (insertStrictlySorted!52 (toList!723 call!6173) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(assert (=> d!16481 (= (+!93 call!6173 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))) lt!32246)))

(declare-fun b!72308 () Bool)

(declare-fun res!38461 () Bool)

(assert (=> b!72308 (=> (not res!38461) (not e!47303))))

(assert (=> b!72308 (= res!38461 (= (getValueByKey!132 (toList!723 lt!32246) (_1!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))))

(declare-fun b!72309 () Bool)

(assert (=> b!72309 (= e!47303 (contains!722 (toList!723 lt!32246) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(assert (= (and d!16481 res!38460) b!72308))

(assert (= (and b!72308 res!38461) b!72309))

(declare-fun m!70281 () Bool)

(assert (=> d!16481 m!70281))

(declare-fun m!70283 () Bool)

(assert (=> d!16481 m!70283))

(declare-fun m!70285 () Bool)

(assert (=> d!16481 m!70285))

(declare-fun m!70287 () Bool)

(assert (=> d!16481 m!70287))

(declare-fun m!70289 () Bool)

(assert (=> b!72308 m!70289))

(declare-fun m!70291 () Bool)

(assert (=> b!72309 m!70291))

(assert (=> b!71221 d!16481))

(assert (=> d!15875 d!15877))

(assert (=> d!15875 d!15873))

(assert (=> d!15875 d!15879))

(assert (=> d!15875 d!15871))

(assert (=> b!71610 d!16299))

(assert (=> b!71610 d!16265))

(declare-fun d!16483 () Bool)

(declare-fun lt!32248 () Bool)

(assert (=> d!16483 (= lt!32248 (select (content!76 (toList!723 lt!31861)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun e!47304 () Bool)

(assert (=> d!16483 (= lt!32248 e!47304)))

(declare-fun res!38463 () Bool)

(assert (=> d!16483 (=> (not res!38463) (not e!47304))))

(assert (=> d!16483 (= res!38463 ((_ is Cons!1472) (toList!723 lt!31861)))))

(assert (=> d!16483 (= (contains!722 (toList!723 lt!31861) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!32248)))

(declare-fun b!72310 () Bool)

(declare-fun e!47305 () Bool)

(assert (=> b!72310 (= e!47304 e!47305)))

(declare-fun res!38462 () Bool)

(assert (=> b!72310 (=> res!38462 e!47305)))

(assert (=> b!72310 (= res!38462 (= (h!2058 (toList!723 lt!31861)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!72311 () Bool)

(assert (=> b!72311 (= e!47305 (contains!722 (t!5012 (toList!723 lt!31861)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!16483 res!38463) b!72310))

(assert (= (and b!72310 (not res!38462)) b!72311))

(declare-fun m!70293 () Bool)

(assert (=> d!16483 m!70293))

(declare-fun m!70295 () Bool)

(assert (=> d!16483 m!70295))

(declare-fun m!70297 () Bool)

(assert (=> b!72311 m!70297))

(assert (=> b!71553 d!16483))

(declare-fun b!72315 () Bool)

(declare-fun e!47307 () Option!138)

(assert (=> b!72315 (= e!47307 None!136)))

(declare-fun b!72313 () Bool)

(declare-fun e!47306 () Option!138)

(assert (=> b!72313 (= e!47306 e!47307)))

(declare-fun c!10655 () Bool)

(assert (=> b!72313 (= c!10655 (and ((_ is Cons!1472) (toList!723 lt!31653)) (not (= (_1!1068 (h!2058 (toList!723 lt!31653))) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))))

(declare-fun b!72312 () Bool)

(assert (=> b!72312 (= e!47306 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31653)))))))

(declare-fun d!16485 () Bool)

(declare-fun c!10654 () Bool)

(assert (=> d!16485 (= c!10654 (and ((_ is Cons!1472) (toList!723 lt!31653)) (= (_1!1068 (h!2058 (toList!723 lt!31653))) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(assert (=> d!16485 (= (getValueByKey!132 (toList!723 lt!31653) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) e!47306)))

(declare-fun b!72314 () Bool)

(assert (=> b!72314 (= e!47307 (getValueByKey!132 (t!5012 (toList!723 lt!31653)) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (= (and d!16485 c!10654) b!72312))

(assert (= (and d!16485 (not c!10654)) b!72313))

(assert (= (and b!72313 c!10655) b!72314))

(assert (= (and b!72313 (not c!10655)) b!72315))

(declare-fun m!70299 () Bool)

(assert (=> b!72314 m!70299))

(assert (=> b!71360 d!16485))

(declare-fun bm!6294 () Bool)

(declare-fun call!6299 () List!1476)

(declare-fun call!6297 () List!1476)

(assert (=> bm!6294 (= call!6299 call!6297)))

(declare-fun b!72316 () Bool)

(declare-fun e!47309 () List!1476)

(declare-fun call!6298 () List!1476)

(assert (=> b!72316 (= e!47309 call!6298)))

(declare-fun c!10658 () Bool)

(declare-fun e!47308 () List!1476)

(declare-fun bm!6295 () Bool)

(assert (=> bm!6295 (= call!6297 ($colon$colon!65 e!47308 (ite c!10658 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31269)))) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265)))))))

(declare-fun c!10659 () Bool)

(assert (=> bm!6295 (= c!10659 c!10658)))

(declare-fun c!10656 () Bool)

(declare-fun b!72318 () Bool)

(assert (=> b!72318 (= c!10656 (and ((_ is Cons!1472) (t!5012 (toList!723 (+!93 lt!31270 lt!31269)))) (bvsgt (_1!1068 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31269))))) (_1!1068 lt!31265))))))

(declare-fun e!47312 () List!1476)

(assert (=> b!72318 (= e!47312 e!47309)))

(declare-fun b!72319 () Bool)

(assert (=> b!72319 (= e!47312 call!6299)))

(declare-fun b!72320 () Bool)

(assert (=> b!72320 (= e!47309 call!6298)))

(declare-fun b!72321 () Bool)

(declare-fun e!47311 () List!1476)

(assert (=> b!72321 (= e!47311 e!47312)))

(declare-fun c!10657 () Bool)

(assert (=> b!72321 (= c!10657 (and ((_ is Cons!1472) (t!5012 (toList!723 (+!93 lt!31270 lt!31269)))) (= (_1!1068 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31269))))) (_1!1068 lt!31265))))))

(declare-fun b!72322 () Bool)

(declare-fun res!38465 () Bool)

(declare-fun e!47310 () Bool)

(assert (=> b!72322 (=> (not res!38465) (not e!47310))))

(declare-fun lt!32249 () List!1476)

(assert (=> b!72322 (= res!38465 (containsKey!136 lt!32249 (_1!1068 lt!31265)))))

(declare-fun b!72323 () Bool)

(assert (=> b!72323 (= e!47310 (contains!722 lt!32249 (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun b!72324 () Bool)

(assert (=> b!72324 (= e!47308 (ite c!10657 (t!5012 (t!5012 (toList!723 (+!93 lt!31270 lt!31269)))) (ite c!10656 (Cons!1472 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31269)))) (t!5012 (t!5012 (toList!723 (+!93 lt!31270 lt!31269))))) Nil!1473)))))

(declare-fun b!72317 () Bool)

(assert (=> b!72317 (= e!47311 call!6297)))

(declare-fun d!16487 () Bool)

(assert (=> d!16487 e!47310))

(declare-fun res!38464 () Bool)

(assert (=> d!16487 (=> (not res!38464) (not e!47310))))

(assert (=> d!16487 (= res!38464 (isStrictlySorted!291 lt!32249))))

(assert (=> d!16487 (= lt!32249 e!47311)))

(assert (=> d!16487 (= c!10658 (and ((_ is Cons!1472) (t!5012 (toList!723 (+!93 lt!31270 lt!31269)))) (bvslt (_1!1068 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31269))))) (_1!1068 lt!31265))))))

(assert (=> d!16487 (isStrictlySorted!291 (t!5012 (toList!723 (+!93 lt!31270 lt!31269))))))

(assert (=> d!16487 (= (insertStrictlySorted!52 (t!5012 (toList!723 (+!93 lt!31270 lt!31269))) (_1!1068 lt!31265) (_2!1068 lt!31265)) lt!32249)))

(declare-fun b!72325 () Bool)

(assert (=> b!72325 (= e!47308 (insertStrictlySorted!52 (t!5012 (t!5012 (toList!723 (+!93 lt!31270 lt!31269)))) (_1!1068 lt!31265) (_2!1068 lt!31265)))))

(declare-fun bm!6296 () Bool)

(assert (=> bm!6296 (= call!6298 call!6299)))

(assert (= (and d!16487 c!10658) b!72317))

(assert (= (and d!16487 (not c!10658)) b!72321))

(assert (= (and b!72321 c!10657) b!72319))

(assert (= (and b!72321 (not c!10657)) b!72318))

(assert (= (and b!72318 c!10656) b!72316))

(assert (= (and b!72318 (not c!10656)) b!72320))

(assert (= (or b!72316 b!72320) bm!6296))

(assert (= (or b!72319 bm!6296) bm!6294))

(assert (= (or b!72317 bm!6294) bm!6295))

(assert (= (and bm!6295 c!10659) b!72325))

(assert (= (and bm!6295 (not c!10659)) b!72324))

(assert (= (and d!16487 res!38464) b!72322))

(assert (= (and b!72322 res!38465) b!72323))

(declare-fun m!70301 () Bool)

(assert (=> b!72322 m!70301))

(declare-fun m!70303 () Bool)

(assert (=> b!72325 m!70303))

(declare-fun m!70305 () Bool)

(assert (=> b!72323 m!70305))

(declare-fun m!70307 () Bool)

(assert (=> bm!6295 m!70307))

(declare-fun m!70309 () Bool)

(assert (=> d!16487 m!70309))

(assert (=> d!16487 m!69851))

(assert (=> b!71247 d!16487))

(declare-fun b!72329 () Bool)

(declare-fun e!47314 () Option!138)

(assert (=> b!72329 (= e!47314 None!136)))

(declare-fun b!72327 () Bool)

(declare-fun e!47313 () Option!138)

(assert (=> b!72327 (= e!47313 e!47314)))

(declare-fun c!10661 () Bool)

(assert (=> b!72327 (= c!10661 (and ((_ is Cons!1472) (toList!723 lt!31751)) (not (= (_1!1068 (h!2058 (toList!723 lt!31751))) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!72326 () Bool)

(assert (=> b!72326 (= e!47313 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31751)))))))

(declare-fun c!10660 () Bool)

(declare-fun d!16489 () Bool)

(assert (=> d!16489 (= c!10660 (and ((_ is Cons!1472) (toList!723 lt!31751)) (= (_1!1068 (h!2058 (toList!723 lt!31751))) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16489 (= (getValueByKey!132 (toList!723 lt!31751) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!47313)))

(declare-fun b!72328 () Bool)

(assert (=> b!72328 (= e!47314 (getValueByKey!132 (t!5012 (toList!723 lt!31751)) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16489 c!10660) b!72326))

(assert (= (and d!16489 (not c!10660)) b!72327))

(assert (= (and b!72327 c!10661) b!72328))

(assert (= (and b!72327 (not c!10661)) b!72329))

(declare-fun m!70311 () Bool)

(assert (=> b!72328 m!70311))

(assert (=> b!71483 d!16489))

(declare-fun d!16491 () Bool)

(assert (=> d!16491 (= (get!1134 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2513 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71320 d!16491))

(declare-fun d!16493 () Bool)

(assert (=> d!16493 (= ($colon$colon!65 e!46668 (ite c!10369 (h!2058 (toList!723 lt!31270)) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269)))) (Cons!1472 (ite c!10369 (h!2058 (toList!723 lt!31270)) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))) e!46668))))

(assert (=> bm!6176 d!16493))

(declare-fun d!16495 () Bool)

(assert (=> d!16495 (= (isEmpty!313 lt!31868) (isEmpty!315 (toList!723 lt!31868)))))

(declare-fun bs!3110 () Bool)

(assert (= bs!3110 d!16495))

(declare-fun m!70313 () Bool)

(assert (=> bs!3110 m!70313))

(assert (=> b!71563 d!16495))

(assert (=> b!71328 d!16333))

(assert (=> b!71328 d!16335))

(declare-fun d!16497 () Bool)

(declare-fun res!38466 () Bool)

(declare-fun e!47315 () Bool)

(assert (=> d!16497 (=> res!38466 e!47315)))

(assert (=> d!16497 (= res!38466 (and ((_ is Cons!1472) (toList!723 lt!31444)) (= (_1!1068 (h!2058 (toList!723 lt!31444))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16497 (= (containsKey!136 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47315)))

(declare-fun b!72330 () Bool)

(declare-fun e!47316 () Bool)

(assert (=> b!72330 (= e!47315 e!47316)))

(declare-fun res!38467 () Bool)

(assert (=> b!72330 (=> (not res!38467) (not e!47316))))

(assert (=> b!72330 (= res!38467 (and (or (not ((_ is Cons!1472) (toList!723 lt!31444))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31444))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1472) (toList!723 lt!31444)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31444))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!72331 () Bool)

(assert (=> b!72331 (= e!47316 (containsKey!136 (t!5012 (toList!723 lt!31444)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16497 (not res!38466)) b!72330))

(assert (= (and b!72330 res!38467) b!72331))

(assert (=> b!72331 m!68007))

(declare-fun m!70315 () Bool)

(assert (=> b!72331 m!70315))

(assert (=> d!15941 d!16497))

(declare-fun lt!32250 () Bool)

(declare-fun d!16499 () Bool)

(assert (=> d!16499 (= lt!32250 (select (content!76 (toList!723 lt!31624)) (tuple2!2115 lt!31440 lt!31442)))))

(declare-fun e!47317 () Bool)

(assert (=> d!16499 (= lt!32250 e!47317)))

(declare-fun res!38469 () Bool)

(assert (=> d!16499 (=> (not res!38469) (not e!47317))))

(assert (=> d!16499 (= res!38469 ((_ is Cons!1472) (toList!723 lt!31624)))))

(assert (=> d!16499 (= (contains!722 (toList!723 lt!31624) (tuple2!2115 lt!31440 lt!31442)) lt!32250)))

(declare-fun b!72332 () Bool)

(declare-fun e!47318 () Bool)

(assert (=> b!72332 (= e!47317 e!47318)))

(declare-fun res!38468 () Bool)

(assert (=> b!72332 (=> res!38468 e!47318)))

(assert (=> b!72332 (= res!38468 (= (h!2058 (toList!723 lt!31624)) (tuple2!2115 lt!31440 lt!31442)))))

(declare-fun b!72333 () Bool)

(assert (=> b!72333 (= e!47318 (contains!722 (t!5012 (toList!723 lt!31624)) (tuple2!2115 lt!31440 lt!31442)))))

(assert (= (and d!16499 res!38469) b!72332))

(assert (= (and b!72332 (not res!38468)) b!72333))

(declare-fun m!70317 () Bool)

(assert (=> d!16499 m!70317))

(declare-fun m!70319 () Bool)

(assert (=> d!16499 m!70319))

(declare-fun m!70321 () Bool)

(assert (=> b!72333 m!70321))

(assert (=> b!71319 d!16499))

(declare-fun d!16501 () Bool)

(assert (=> d!16501 (= (isEmpty!315 (toList!723 lt!31444)) ((_ is Nil!1473) (toList!723 lt!31444)))))

(assert (=> d!16037 d!16501))

(declare-fun b!72334 () Bool)

(declare-fun e!47322 () Bool)

(declare-fun e!47320 () Bool)

(assert (=> b!72334 (= e!47322 e!47320)))

(declare-fun c!10662 () Bool)

(assert (=> b!72334 (= c!10662 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!16503 () Bool)

(declare-fun res!38471 () Bool)

(declare-fun e!47319 () Bool)

(assert (=> d!16503 (=> res!38471 e!47319)))

(assert (=> d!16503 (= res!38471 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(assert (=> d!16503 (= (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000 Nil!1472) e!47319)))

(declare-fun bm!6297 () Bool)

(declare-fun call!6300 () Bool)

(assert (=> bm!6297 (= call!6300 (arrayNoDuplicates!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10662 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000) Nil!1472) Nil!1472)))))

(declare-fun b!72335 () Bool)

(assert (=> b!72335 (= e!47320 call!6300)))

(declare-fun b!72336 () Bool)

(assert (=> b!72336 (= e!47319 e!47322)))

(declare-fun res!38472 () Bool)

(assert (=> b!72336 (=> (not res!38472) (not e!47322))))

(declare-fun e!47321 () Bool)

(assert (=> b!72336 (= res!38472 (not e!47321))))

(declare-fun res!38470 () Bool)

(assert (=> b!72336 (=> (not res!38470) (not e!47321))))

(assert (=> b!72336 (= res!38470 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!72337 () Bool)

(assert (=> b!72337 (= e!47321 (contains!721 Nil!1472 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!72338 () Bool)

(assert (=> b!72338 (= e!47320 call!6300)))

(assert (= (and d!16503 (not res!38471)) b!72336))

(assert (= (and b!72336 res!38470) b!72337))

(assert (= (and b!72336 res!38472) b!72334))

(assert (= (and b!72334 c!10662) b!72338))

(assert (= (and b!72334 (not c!10662)) b!72335))

(assert (= (or b!72338 b!72335) bm!6297))

(assert (=> b!72334 m!69837))

(assert (=> b!72334 m!69837))

(assert (=> b!72334 m!69839))

(assert (=> bm!6297 m!69837))

(declare-fun m!70323 () Bool)

(assert (=> bm!6297 m!70323))

(assert (=> b!72336 m!69837))

(assert (=> b!72336 m!69837))

(assert (=> b!72336 m!69839))

(assert (=> b!72337 m!69837))

(assert (=> b!72337 m!69837))

(declare-fun m!70325 () Bool)

(assert (=> b!72337 m!70325))

(assert (=> b!71458 d!16503))

(declare-fun d!16505 () Bool)

(declare-fun res!38473 () Bool)

(declare-fun e!47323 () Bool)

(assert (=> d!16505 (=> res!38473 e!47323)))

(assert (=> d!16505 (= res!38473 (= (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!16505 (= (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!47323)))

(declare-fun b!72339 () Bool)

(declare-fun e!47324 () Bool)

(assert (=> b!72339 (= e!47323 e!47324)))

(declare-fun res!38474 () Bool)

(assert (=> b!72339 (=> (not res!38474) (not e!47324))))

(assert (=> b!72339 (= res!38474 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!72340 () Bool)

(assert (=> b!72340 (= e!47324 (arrayContainsKey!0 (_keys!3840 (v!2514 (underlying!257 thiss!992))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16505 (not res!38473)) b!72339))

(assert (= (and b!72339 res!38474) b!72340))

(assert (=> d!16505 m!69293))

(assert (=> b!72340 m!67893))

(declare-fun m!70327 () Bool)

(assert (=> b!72340 m!70327))

(assert (=> b!71555 d!16505))

(declare-fun d!16507 () Bool)

(declare-fun res!38475 () Bool)

(declare-fun e!47325 () Bool)

(assert (=> d!16507 (=> res!38475 e!47325)))

(assert (=> d!16507 (= res!38475 (and ((_ is Cons!1472) (toList!723 lt!31522)) (= (_1!1068 (h!2058 (toList!723 lt!31522))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16507 (= (containsKey!136 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000) e!47325)))

(declare-fun b!72341 () Bool)

(declare-fun e!47326 () Bool)

(assert (=> b!72341 (= e!47325 e!47326)))

(declare-fun res!38476 () Bool)

(assert (=> b!72341 (=> (not res!38476) (not e!47326))))

(assert (=> b!72341 (= res!38476 (and (or (not ((_ is Cons!1472) (toList!723 lt!31522))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31522))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1472) (toList!723 lt!31522)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31522))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72342 () Bool)

(assert (=> b!72342 (= e!47326 (containsKey!136 (t!5012 (toList!723 lt!31522)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16507 (not res!38475)) b!72341))

(assert (= (and b!72341 res!38476) b!72342))

(declare-fun m!70329 () Bool)

(assert (=> b!72342 m!70329))

(assert (=> d!15881 d!16507))

(declare-fun d!16509 () Bool)

(declare-fun lt!32251 () Bool)

(assert (=> d!16509 (= lt!32251 (select (content!76 (t!5012 (toList!723 lt!31459))) lt!31265))))

(declare-fun e!47327 () Bool)

(assert (=> d!16509 (= lt!32251 e!47327)))

(declare-fun res!38478 () Bool)

(assert (=> d!16509 (=> (not res!38478) (not e!47327))))

(assert (=> d!16509 (= res!38478 ((_ is Cons!1472) (t!5012 (toList!723 lt!31459))))))

(assert (=> d!16509 (= (contains!722 (t!5012 (toList!723 lt!31459)) lt!31265) lt!32251)))

(declare-fun b!72343 () Bool)

(declare-fun e!47328 () Bool)

(assert (=> b!72343 (= e!47327 e!47328)))

(declare-fun res!38477 () Bool)

(assert (=> b!72343 (=> res!38477 e!47328)))

(assert (=> b!72343 (= res!38477 (= (h!2058 (t!5012 (toList!723 lt!31459))) lt!31265))))

(declare-fun b!72344 () Bool)

(assert (=> b!72344 (= e!47328 (contains!722 (t!5012 (t!5012 (toList!723 lt!31459))) lt!31265))))

(assert (= (and d!16509 res!38478) b!72343))

(assert (= (and b!72343 (not res!38477)) b!72344))

(declare-fun m!70331 () Bool)

(assert (=> d!16509 m!70331))

(declare-fun m!70333 () Bool)

(assert (=> d!16509 m!70333))

(declare-fun m!70335 () Bool)

(assert (=> b!72344 m!70335))

(assert (=> b!71407 d!16509))

(declare-fun d!16511 () Bool)

(declare-fun c!10663 () Bool)

(assert (=> d!16511 (= c!10663 ((_ is Nil!1473) (toList!723 lt!31448)))))

(declare-fun e!47329 () (InoxSet tuple2!2114))

(assert (=> d!16511 (= (content!76 (toList!723 lt!31448)) e!47329)))

(declare-fun b!72345 () Bool)

(assert (=> b!72345 (= e!47329 ((as const (Array tuple2!2114 Bool)) false))))

(declare-fun b!72346 () Bool)

(assert (=> b!72346 (= e!47329 ((_ map or) (store ((as const (Array tuple2!2114 Bool)) false) (h!2058 (toList!723 lt!31448)) true) (content!76 (t!5012 (toList!723 lt!31448)))))))

(assert (= (and d!16511 c!10663) b!72345))

(assert (= (and d!16511 (not c!10663)) b!72346))

(declare-fun m!70337 () Bool)

(assert (=> b!72346 m!70337))

(assert (=> b!72346 m!70031))

(assert (=> d!15963 d!16511))

(declare-fun d!16513 () Bool)

(declare-fun lt!32252 () Bool)

(assert (=> d!16513 (= lt!32252 (select (content!76 lt!31609) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun e!47330 () Bool)

(assert (=> d!16513 (= lt!32252 e!47330)))

(declare-fun res!38480 () Bool)

(assert (=> d!16513 (=> (not res!38480) (not e!47330))))

(assert (=> d!16513 (= res!38480 ((_ is Cons!1472) lt!31609))))

(assert (=> d!16513 (= (contains!722 lt!31609 (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))) lt!32252)))

(declare-fun b!72347 () Bool)

(declare-fun e!47331 () Bool)

(assert (=> b!72347 (= e!47330 e!47331)))

(declare-fun res!38479 () Bool)

(assert (=> b!72347 (=> res!38479 e!47331)))

(assert (=> b!72347 (= res!38479 (= (h!2058 lt!31609) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun b!72348 () Bool)

(assert (=> b!72348 (= e!47331 (contains!722 (t!5012 lt!31609) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(assert (= (and d!16513 res!38480) b!72347))

(assert (= (and b!72347 (not res!38479)) b!72348))

(declare-fun m!70339 () Bool)

(assert (=> d!16513 m!70339))

(declare-fun m!70341 () Bool)

(assert (=> d!16513 m!70341))

(declare-fun m!70343 () Bool)

(assert (=> b!72348 m!70343))

(assert (=> b!71297 d!16513))

(declare-fun b!72352 () Bool)

(declare-fun e!47333 () Option!138)

(assert (=> b!72352 (= e!47333 None!136)))

(declare-fun b!72350 () Bool)

(declare-fun e!47332 () Option!138)

(assert (=> b!72350 (= e!47332 e!47333)))

(declare-fun c!10665 () Bool)

(assert (=> b!72350 (= c!10665 (and ((_ is Cons!1472) (toList!723 lt!31764)) (not (= (_1!1068 (h!2058 (toList!723 lt!31764))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun b!72349 () Bool)

(assert (=> b!72349 (= e!47332 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31764)))))))

(declare-fun d!16515 () Bool)

(declare-fun c!10664 () Bool)

(assert (=> d!16515 (= c!10664 (and ((_ is Cons!1472) (toList!723 lt!31764)) (= (_1!1068 (h!2058 (toList!723 lt!31764))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!16515 (= (getValueByKey!132 (toList!723 lt!31764) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) e!47332)))

(declare-fun b!72351 () Bool)

(assert (=> b!72351 (= e!47333 (getValueByKey!132 (t!5012 (toList!723 lt!31764)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (= (and d!16515 c!10664) b!72349))

(assert (= (and d!16515 (not c!10664)) b!72350))

(assert (= (and b!72350 c!10665) b!72351))

(assert (= (and b!72350 (not c!10665)) b!72352))

(declare-fun m!70345 () Bool)

(assert (=> b!72351 m!70345))

(assert (=> b!71491 d!16515))

(declare-fun lt!32253 () Bool)

(declare-fun d!16517 () Bool)

(assert (=> d!16517 (= lt!32253 (select (content!76 (toList!723 lt!31639)) (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun e!47334 () Bool)

(assert (=> d!16517 (= lt!32253 e!47334)))

(declare-fun res!38482 () Bool)

(assert (=> d!16517 (=> (not res!38482) (not e!47334))))

(assert (=> d!16517 (= res!38482 ((_ is Cons!1472) (toList!723 lt!31639)))))

(assert (=> d!16517 (= (contains!722 (toList!723 lt!31639) (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32253)))

(declare-fun b!72353 () Bool)

(declare-fun e!47335 () Bool)

(assert (=> b!72353 (= e!47334 e!47335)))

(declare-fun res!38481 () Bool)

(assert (=> b!72353 (=> res!38481 e!47335)))

(assert (=> b!72353 (= res!38481 (= (h!2058 (toList!723 lt!31639)) (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!72354 () Bool)

(assert (=> b!72354 (= e!47335 (contains!722 (t!5012 (toList!723 lt!31639)) (ite (or c!10325 c!10323) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16517 res!38482) b!72353))

(assert (= (and b!72353 (not res!38481)) b!72354))

(declare-fun m!70347 () Bool)

(assert (=> d!16517 m!70347))

(declare-fun m!70349 () Bool)

(assert (=> d!16517 m!70349))

(declare-fun m!70351 () Bool)

(assert (=> b!72354 m!70351))

(assert (=> b!71332 d!16517))

(declare-fun b!72355 () Bool)

(declare-fun e!47337 () (_ BitVec 32))

(declare-fun call!6301 () (_ BitVec 32))

(assert (=> b!72355 (= e!47337 call!6301)))

(declare-fun b!72356 () Bool)

(declare-fun e!47336 () (_ BitVec 32))

(assert (=> b!72356 (= e!47336 #b00000000000000000000000000000000)))

(declare-fun b!72357 () Bool)

(assert (=> b!72357 (= e!47337 (bvadd #b00000000000000000000000000000001 call!6301))))

(declare-fun b!72358 () Bool)

(assert (=> b!72358 (= e!47336 e!47337)))

(declare-fun c!10666 () Bool)

(assert (=> b!72358 (= c!10666 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000)))))

(declare-fun d!16519 () Bool)

(declare-fun lt!32254 () (_ BitVec 32))

(assert (=> d!16519 (and (bvsge lt!32254 #b00000000000000000000000000000000) (bvsle lt!32254 (bvsub (size!2090 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000)))))

(assert (=> d!16519 (= lt!32254 e!47336)))

(declare-fun c!10667 () Bool)

(assert (=> d!16519 (= c!10667 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))))))

(assert (=> d!16519 (and (bvsle #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2090 (_keys!3840 (_2!1069 lt!31408))) (size!2090 (_keys!3840 (_2!1069 lt!31408)))))))

(assert (=> d!16519 (= (arrayCountValidKeys!0 (_keys!3840 (_2!1069 lt!31408)) #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))) lt!32254)))

(declare-fun bm!6298 () Bool)

(assert (=> bm!6298 (= call!6301 (arrayCountValidKeys!0 (_keys!3840 (_2!1069 lt!31408)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 (_2!1069 lt!31408)))))))

(assert (= (and d!16519 c!10667) b!72356))

(assert (= (and d!16519 (not c!10667)) b!72358))

(assert (= (and b!72358 c!10666) b!72357))

(assert (= (and b!72358 (not c!10666)) b!72355))

(assert (= (or b!72357 b!72355) bm!6298))

(assert (=> b!72358 m!69751))

(assert (=> b!72358 m!69751))

(assert (=> b!72358 m!69765))

(declare-fun m!70353 () Bool)

(assert (=> bm!6298 m!70353))

(assert (=> b!71278 d!16519))

(declare-fun d!16521 () Bool)

(declare-fun e!47338 () Bool)

(assert (=> d!16521 e!47338))

(declare-fun res!38483 () Bool)

(assert (=> d!16521 (=> res!38483 e!47338)))

(declare-fun lt!32257 () Bool)

(assert (=> d!16521 (= res!38483 (not lt!32257))))

(declare-fun lt!32256 () Bool)

(assert (=> d!16521 (= lt!32257 lt!32256)))

(declare-fun lt!32255 () Unit!2002)

(declare-fun e!47339 () Unit!2002)

(assert (=> d!16521 (= lt!32255 e!47339)))

(declare-fun c!10668 () Bool)

(assert (=> d!16521 (= c!10668 lt!32256)))

(assert (=> d!16521 (= lt!32256 (containsKey!136 (toList!723 lt!31764) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!16521 (= (contains!719 lt!31764 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!32257)))

(declare-fun b!72359 () Bool)

(declare-fun lt!32258 () Unit!2002)

(assert (=> b!72359 (= e!47339 lt!32258)))

(assert (=> b!72359 (= lt!32258 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31764) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> b!72359 (isDefined!85 (getValueByKey!132 (toList!723 lt!31764) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!72360 () Bool)

(declare-fun Unit!2059 () Unit!2002)

(assert (=> b!72360 (= e!47339 Unit!2059)))

(declare-fun b!72361 () Bool)

(assert (=> b!72361 (= e!47338 (isDefined!85 (getValueByKey!132 (toList!723 lt!31764) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (= (and d!16521 c!10668) b!72359))

(assert (= (and d!16521 (not c!10668)) b!72360))

(assert (= (and d!16521 (not res!38483)) b!72361))

(declare-fun m!70355 () Bool)

(assert (=> d!16521 m!70355))

(declare-fun m!70357 () Bool)

(assert (=> b!72359 m!70357))

(assert (=> b!72359 m!68883))

(assert (=> b!72359 m!68883))

(declare-fun m!70359 () Bool)

(assert (=> b!72359 m!70359))

(assert (=> b!72361 m!68883))

(assert (=> b!72361 m!68883))

(assert (=> b!72361 m!70359))

(assert (=> d!15997 d!16521))

(declare-fun b!72365 () Bool)

(declare-fun e!47341 () Option!138)

(assert (=> b!72365 (= e!47341 None!136)))

(declare-fun b!72363 () Bool)

(declare-fun e!47340 () Option!138)

(assert (=> b!72363 (= e!47340 e!47341)))

(declare-fun c!10670 () Bool)

(assert (=> b!72363 (= c!10670 (and ((_ is Cons!1472) lt!31765) (not (= (_1!1068 (h!2058 lt!31765)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun b!72362 () Bool)

(assert (=> b!72362 (= e!47340 (Some!137 (_2!1068 (h!2058 lt!31765))))))

(declare-fun d!16523 () Bool)

(declare-fun c!10669 () Bool)

(assert (=> d!16523 (= c!10669 (and ((_ is Cons!1472) lt!31765) (= (_1!1068 (h!2058 lt!31765)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!16523 (= (getValueByKey!132 lt!31765 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) e!47340)))

(declare-fun b!72364 () Bool)

(assert (=> b!72364 (= e!47341 (getValueByKey!132 (t!5012 lt!31765) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (= (and d!16523 c!10669) b!72362))

(assert (= (and d!16523 (not c!10669)) b!72363))

(assert (= (and b!72363 c!10670) b!72364))

(assert (= (and b!72363 (not c!10670)) b!72365))

(declare-fun m!70361 () Bool)

(assert (=> b!72364 m!70361))

(assert (=> d!15997 d!16523))

(declare-fun d!16525 () Bool)

(assert (=> d!16525 (= (getValueByKey!132 lt!31765 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun lt!32259 () Unit!2002)

(assert (=> d!16525 (= lt!32259 (choose!397 lt!31765 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun e!47342 () Bool)

(assert (=> d!16525 e!47342))

(declare-fun res!38484 () Bool)

(assert (=> d!16525 (=> (not res!38484) (not e!47342))))

(assert (=> d!16525 (= res!38484 (isStrictlySorted!291 lt!31765))))

(assert (=> d!16525 (= (lemmaContainsTupThenGetReturnValue!49 lt!31765 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!32259)))

(declare-fun b!72366 () Bool)

(declare-fun res!38485 () Bool)

(assert (=> b!72366 (=> (not res!38485) (not e!47342))))

(assert (=> b!72366 (= res!38485 (containsKey!136 lt!31765 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!72367 () Bool)

(assert (=> b!72367 (= e!47342 (contains!722 lt!31765 (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (= (and d!16525 res!38484) b!72366))

(assert (= (and b!72366 res!38485) b!72367))

(assert (=> d!16525 m!68877))

(declare-fun m!70363 () Bool)

(assert (=> d!16525 m!70363))

(declare-fun m!70365 () Bool)

(assert (=> d!16525 m!70365))

(declare-fun m!70367 () Bool)

(assert (=> b!72366 m!70367))

(declare-fun m!70369 () Bool)

(assert (=> b!72367 m!70369))

(assert (=> d!15997 d!16525))

(declare-fun bm!6299 () Bool)

(declare-fun call!6304 () List!1476)

(declare-fun call!6302 () List!1476)

(assert (=> bm!6299 (= call!6304 call!6302)))

(declare-fun b!72368 () Bool)

(declare-fun e!47344 () List!1476)

(declare-fun call!6303 () List!1476)

(assert (=> b!72368 (= e!47344 call!6303)))

(declare-fun c!10673 () Bool)

(declare-fun bm!6300 () Bool)

(declare-fun e!47343 () List!1476)

(assert (=> bm!6300 (= call!6302 ($colon$colon!65 e!47343 (ite c!10673 (h!2058 (toList!723 call!6122)) (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun c!10674 () Bool)

(assert (=> bm!6300 (= c!10674 c!10673)))

(declare-fun b!72370 () Bool)

(declare-fun c!10671 () Bool)

(assert (=> b!72370 (= c!10671 (and ((_ is Cons!1472) (toList!723 call!6122)) (bvsgt (_1!1068 (h!2058 (toList!723 call!6122))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun e!47347 () List!1476)

(assert (=> b!72370 (= e!47347 e!47344)))

(declare-fun b!72371 () Bool)

(assert (=> b!72371 (= e!47347 call!6304)))

(declare-fun b!72372 () Bool)

(assert (=> b!72372 (= e!47344 call!6303)))

(declare-fun b!72373 () Bool)

(declare-fun e!47346 () List!1476)

(assert (=> b!72373 (= e!47346 e!47347)))

(declare-fun c!10672 () Bool)

(assert (=> b!72373 (= c!10672 (and ((_ is Cons!1472) (toList!723 call!6122)) (= (_1!1068 (h!2058 (toList!723 call!6122))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72374 () Bool)

(declare-fun res!38487 () Bool)

(declare-fun e!47345 () Bool)

(assert (=> b!72374 (=> (not res!38487) (not e!47345))))

(declare-fun lt!32260 () List!1476)

(assert (=> b!72374 (= res!38487 (containsKey!136 lt!32260 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!72375 () Bool)

(assert (=> b!72375 (= e!47345 (contains!722 lt!32260 (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72376 () Bool)

(assert (=> b!72376 (= e!47343 (ite c!10672 (t!5012 (toList!723 call!6122)) (ite c!10671 (Cons!1472 (h!2058 (toList!723 call!6122)) (t!5012 (toList!723 call!6122))) Nil!1473)))))

(declare-fun b!72369 () Bool)

(assert (=> b!72369 (= e!47346 call!6302)))

(declare-fun d!16527 () Bool)

(assert (=> d!16527 e!47345))

(declare-fun res!38486 () Bool)

(assert (=> d!16527 (=> (not res!38486) (not e!47345))))

(assert (=> d!16527 (= res!38486 (isStrictlySorted!291 lt!32260))))

(assert (=> d!16527 (= lt!32260 e!47346)))

(assert (=> d!16527 (= c!10673 (and ((_ is Cons!1472) (toList!723 call!6122)) (bvslt (_1!1068 (h!2058 (toList!723 call!6122))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!16527 (isStrictlySorted!291 (toList!723 call!6122))))

(assert (=> d!16527 (= (insertStrictlySorted!52 (toList!723 call!6122) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!32260)))

(declare-fun b!72377 () Bool)

(assert (=> b!72377 (= e!47343 (insertStrictlySorted!52 (t!5012 (toList!723 call!6122)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun bm!6301 () Bool)

(assert (=> bm!6301 (= call!6303 call!6304)))

(assert (= (and d!16527 c!10673) b!72369))

(assert (= (and d!16527 (not c!10673)) b!72373))

(assert (= (and b!72373 c!10672) b!72371))

(assert (= (and b!72373 (not c!10672)) b!72370))

(assert (= (and b!72370 c!10671) b!72368))

(assert (= (and b!72370 (not c!10671)) b!72372))

(assert (= (or b!72368 b!72372) bm!6301))

(assert (= (or b!72371 bm!6301) bm!6299))

(assert (= (or b!72369 bm!6299) bm!6300))

(assert (= (and bm!6300 c!10674) b!72377))

(assert (= (and bm!6300 (not c!10674)) b!72376))

(assert (= (and d!16527 res!38486) b!72374))

(assert (= (and b!72374 res!38487) b!72375))

(declare-fun m!70371 () Bool)

(assert (=> b!72374 m!70371))

(declare-fun m!70373 () Bool)

(assert (=> b!72377 m!70373))

(declare-fun m!70375 () Bool)

(assert (=> b!72375 m!70375))

(declare-fun m!70377 () Bool)

(assert (=> bm!6300 m!70377))

(declare-fun m!70379 () Bool)

(assert (=> d!16527 m!70379))

(declare-fun m!70381 () Bool)

(assert (=> d!16527 m!70381))

(assert (=> d!15997 d!16527))

(declare-fun bm!6302 () Bool)

(declare-fun call!6307 () List!1476)

(declare-fun call!6305 () List!1476)

(assert (=> bm!6302 (= call!6307 call!6305)))

(declare-fun b!72378 () Bool)

(declare-fun e!47349 () List!1476)

(declare-fun call!6306 () List!1476)

(assert (=> b!72378 (= e!47349 call!6306)))

(declare-fun bm!6303 () Bool)

(declare-fun c!10677 () Bool)

(declare-fun e!47348 () List!1476)

(assert (=> bm!6303 (= call!6305 ($colon$colon!65 e!47348 (ite c!10677 (h!2058 (t!5012 (toList!723 lt!31270))) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269)))))))

(declare-fun c!10678 () Bool)

(assert (=> bm!6303 (= c!10678 c!10677)))

(declare-fun b!72380 () Bool)

(declare-fun c!10675 () Bool)

(assert (=> b!72380 (= c!10675 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31270))) (bvsgt (_1!1068 (h!2058 (t!5012 (toList!723 lt!31270)))) (_1!1068 lt!31269))))))

(declare-fun e!47352 () List!1476)

(assert (=> b!72380 (= e!47352 e!47349)))

(declare-fun b!72381 () Bool)

(assert (=> b!72381 (= e!47352 call!6307)))

(declare-fun b!72382 () Bool)

(assert (=> b!72382 (= e!47349 call!6306)))

(declare-fun b!72383 () Bool)

(declare-fun e!47351 () List!1476)

(assert (=> b!72383 (= e!47351 e!47352)))

(declare-fun c!10676 () Bool)

(assert (=> b!72383 (= c!10676 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31270))) (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31270)))) (_1!1068 lt!31269))))))

(declare-fun b!72384 () Bool)

(declare-fun res!38489 () Bool)

(declare-fun e!47350 () Bool)

(assert (=> b!72384 (=> (not res!38489) (not e!47350))))

(declare-fun lt!32261 () List!1476)

(assert (=> b!72384 (= res!38489 (containsKey!136 lt!32261 (_1!1068 lt!31269)))))

(declare-fun b!72385 () Bool)

(assert (=> b!72385 (= e!47350 (contains!722 lt!32261 (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun b!72386 () Bool)

(assert (=> b!72386 (= e!47348 (ite c!10676 (t!5012 (t!5012 (toList!723 lt!31270))) (ite c!10675 (Cons!1472 (h!2058 (t!5012 (toList!723 lt!31270))) (t!5012 (t!5012 (toList!723 lt!31270)))) Nil!1473)))))

(declare-fun b!72379 () Bool)

(assert (=> b!72379 (= e!47351 call!6305)))

(declare-fun d!16529 () Bool)

(assert (=> d!16529 e!47350))

(declare-fun res!38488 () Bool)

(assert (=> d!16529 (=> (not res!38488) (not e!47350))))

(assert (=> d!16529 (= res!38488 (isStrictlySorted!291 lt!32261))))

(assert (=> d!16529 (= lt!32261 e!47351)))

(assert (=> d!16529 (= c!10677 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31270))) (bvslt (_1!1068 (h!2058 (t!5012 (toList!723 lt!31270)))) (_1!1068 lt!31269))))))

(assert (=> d!16529 (isStrictlySorted!291 (t!5012 (toList!723 lt!31270)))))

(assert (=> d!16529 (= (insertStrictlySorted!52 (t!5012 (toList!723 lt!31270)) (_1!1068 lt!31269) (_2!1068 lt!31269)) lt!32261)))

(declare-fun b!72387 () Bool)

(assert (=> b!72387 (= e!47348 (insertStrictlySorted!52 (t!5012 (t!5012 (toList!723 lt!31270))) (_1!1068 lt!31269) (_2!1068 lt!31269)))))

(declare-fun bm!6304 () Bool)

(assert (=> bm!6304 (= call!6306 call!6307)))

(assert (= (and d!16529 c!10677) b!72379))

(assert (= (and d!16529 (not c!10677)) b!72383))

(assert (= (and b!72383 c!10676) b!72381))

(assert (= (and b!72383 (not c!10676)) b!72380))

(assert (= (and b!72380 c!10675) b!72378))

(assert (= (and b!72380 (not c!10675)) b!72382))

(assert (= (or b!72378 b!72382) bm!6304))

(assert (= (or b!72381 bm!6304) bm!6302))

(assert (= (or b!72379 bm!6302) bm!6303))

(assert (= (and bm!6303 c!10678) b!72387))

(assert (= (and bm!6303 (not c!10678)) b!72386))

(assert (= (and d!16529 res!38488) b!72384))

(assert (= (and b!72384 res!38489) b!72385))

(declare-fun m!70383 () Bool)

(assert (=> b!72384 m!70383))

(declare-fun m!70385 () Bool)

(assert (=> b!72387 m!70385))

(declare-fun m!70387 () Bool)

(assert (=> b!72385 m!70387))

(declare-fun m!70389 () Bool)

(assert (=> bm!6303 m!70389))

(declare-fun m!70391 () Bool)

(assert (=> d!16529 m!70391))

(assert (=> d!16529 m!70009))

(assert (=> b!71277 d!16529))

(declare-fun d!16531 () Bool)

(declare-fun e!47353 () Bool)

(assert (=> d!16531 e!47353))

(declare-fun res!38490 () Bool)

(assert (=> d!16531 (=> res!38490 e!47353)))

(declare-fun lt!32264 () Bool)

(assert (=> d!16531 (= res!38490 (not lt!32264))))

(declare-fun lt!32263 () Bool)

(assert (=> d!16531 (= lt!32264 lt!32263)))

(declare-fun lt!32262 () Unit!2002)

(declare-fun e!47354 () Unit!2002)

(assert (=> d!16531 (= lt!32262 e!47354)))

(declare-fun c!10679 () Bool)

(assert (=> d!16531 (= c!10679 lt!32263)))

(assert (=> d!16531 (= lt!32263 (containsKey!136 (toList!723 lt!31705) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16531 (= (contains!719 lt!31705 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32264)))

(declare-fun b!72388 () Bool)

(declare-fun lt!32265 () Unit!2002)

(assert (=> b!72388 (= e!47354 lt!32265)))

(assert (=> b!72388 (= lt!32265 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31705) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72388 (isDefined!85 (getValueByKey!132 (toList!723 lt!31705) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72389 () Bool)

(declare-fun Unit!2060 () Unit!2002)

(assert (=> b!72389 (= e!47354 Unit!2060)))

(declare-fun b!72390 () Bool)

(assert (=> b!72390 (= e!47353 (isDefined!85 (getValueByKey!132 (toList!723 lt!31705) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16531 c!10679) b!72388))

(assert (= (and d!16531 (not c!10679)) b!72389))

(assert (= (and d!16531 (not res!38490)) b!72390))

(declare-fun m!70393 () Bool)

(assert (=> d!16531 m!70393))

(declare-fun m!70395 () Bool)

(assert (=> b!72388 m!70395))

(assert (=> b!72388 m!69051))

(assert (=> b!72388 m!69051))

(declare-fun m!70397 () Bool)

(assert (=> b!72388 m!70397))

(assert (=> b!72390 m!69051))

(assert (=> b!72390 m!69051))

(assert (=> b!72390 m!70397))

(assert (=> bm!6200 d!16531))

(declare-fun d!16533 () Bool)

(declare-fun lt!32266 () Bool)

(assert (=> d!16533 (= lt!32266 (select (content!76 lt!31536) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun e!47355 () Bool)

(assert (=> d!16533 (= lt!32266 e!47355)))

(declare-fun res!38492 () Bool)

(assert (=> d!16533 (=> (not res!38492) (not e!47355))))

(assert (=> d!16533 (= res!38492 ((_ is Cons!1472) lt!31536))))

(assert (=> d!16533 (= (contains!722 lt!31536 (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))) lt!32266)))

(declare-fun b!72391 () Bool)

(declare-fun e!47356 () Bool)

(assert (=> b!72391 (= e!47355 e!47356)))

(declare-fun res!38491 () Bool)

(assert (=> b!72391 (=> res!38491 e!47356)))

(assert (=> b!72391 (= res!38491 (= (h!2058 lt!31536) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun b!72392 () Bool)

(assert (=> b!72392 (= e!47356 (contains!722 (t!5012 lt!31536) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(assert (= (and d!16533 res!38492) b!72391))

(assert (= (and b!72391 (not res!38491)) b!72392))

(declare-fun m!70399 () Bool)

(assert (=> d!16533 m!70399))

(declare-fun m!70401 () Bool)

(assert (=> d!16533 m!70401))

(declare-fun m!70403 () Bool)

(assert (=> b!72392 m!70403))

(assert (=> b!71192 d!16533))

(declare-fun d!16535 () Bool)

(assert (=> d!16535 (= (map!1148 (_2!1069 lt!31848)) (getCurrentListMap!421 (_keys!3840 (_2!1069 lt!31848)) (_values!2175 (_2!1069 lt!31848)) (mask!6149 (_2!1069 lt!31848)) (extraKeys!2055 (_2!1069 lt!31848)) (zeroValue!2096 (_2!1069 lt!31848)) (minValue!2096 (_2!1069 lt!31848)) #b00000000000000000000000000000000 (defaultEntry!2192 (_2!1069 lt!31848))))))

(declare-fun bs!3111 () Bool)

(assert (= bs!3111 d!16535))

(declare-fun m!70405 () Bool)

(assert (=> bs!3111 m!70405))

(assert (=> b!71545 d!16535))

(declare-fun d!16537 () Bool)

(declare-fun e!47357 () Bool)

(assert (=> d!16537 e!47357))

(declare-fun res!38493 () Bool)

(assert (=> d!16537 (=> (not res!38493) (not e!47357))))

(declare-fun lt!32269 () ListLongMap!1415)

(assert (=> d!16537 (= res!38493 (contains!719 lt!32269 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun lt!32270 () List!1476)

(assert (=> d!16537 (= lt!32269 (ListLongMap!1416 lt!32270))))

(declare-fun lt!32268 () Unit!2002)

(declare-fun lt!32267 () Unit!2002)

(assert (=> d!16537 (= lt!32268 lt!32267)))

(assert (=> d!16537 (= (getValueByKey!132 lt!32270 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!16537 (= lt!32267 (lemmaContainsTupThenGetReturnValue!49 lt!32270 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!16537 (= lt!32270 (insertStrictlySorted!52 (toList!723 (map!1148 newMap!16)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!16537 (= (+!93 (map!1148 newMap!16) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) lt!32269)))

(declare-fun b!72393 () Bool)

(declare-fun res!38494 () Bool)

(assert (=> b!72393 (=> (not res!38494) (not e!47357))))

(assert (=> b!72393 (= res!38494 (= (getValueByKey!132 (toList!723 lt!32269) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72394 () Bool)

(assert (=> b!72394 (= e!47357 (contains!722 (toList!723 lt!32269) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(assert (= (and d!16537 res!38493) b!72393))

(assert (= (and b!72393 res!38494) b!72394))

(declare-fun m!70407 () Bool)

(assert (=> d!16537 m!70407))

(declare-fun m!70409 () Bool)

(assert (=> d!16537 m!70409))

(declare-fun m!70411 () Bool)

(assert (=> d!16537 m!70411))

(declare-fun m!70413 () Bool)

(assert (=> d!16537 m!70413))

(declare-fun m!70415 () Bool)

(assert (=> b!72393 m!70415))

(declare-fun m!70417 () Bool)

(assert (=> b!72394 m!70417))

(assert (=> b!71545 d!16537))

(assert (=> b!71545 d!15829))

(declare-fun d!16539 () Bool)

(assert (=> d!16539 (= (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31517)) (v!2518 (getValueByKey!132 (toList!723 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31517)))))

(assert (=> d!15975 d!16539))

(declare-fun b!72398 () Bool)

(declare-fun e!47359 () Option!138)

(assert (=> b!72398 (= e!47359 None!136)))

(declare-fun b!72396 () Bool)

(declare-fun e!47358 () Option!138)

(assert (=> b!72396 (= e!47358 e!47359)))

(declare-fun c!10681 () Bool)

(assert (=> b!72396 (= c!10681 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) (not (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31517))))))

(declare-fun b!72395 () Bool)

(assert (=> b!72395 (= e!47358 (Some!137 (_2!1068 (h!2058 (toList!723 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))))

(declare-fun d!16541 () Bool)

(declare-fun c!10680 () Bool)

(assert (=> d!16541 (= c!10680 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31517)))))

(assert (=> d!16541 (= (getValueByKey!132 (toList!723 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31517) e!47358)))

(declare-fun b!72397 () Bool)

(assert (=> b!72397 (= e!47359 (getValueByKey!132 (t!5012 (toList!723 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) lt!31517))))

(assert (= (and d!16541 c!10680) b!72395))

(assert (= (and d!16541 (not c!10680)) b!72396))

(assert (= (and b!72396 c!10681) b!72397))

(assert (= (and b!72396 (not c!10681)) b!72398))

(declare-fun m!70419 () Bool)

(assert (=> b!72397 m!70419))

(assert (=> d!15975 d!16541))

(declare-fun d!16543 () Bool)

(assert (=> d!16543 (contains!719 (getCurrentListMap!421 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1853 (_keys!3840 newMap!16)) (index!3071 lt!31406)))))

(assert (=> d!16543 true))

(declare-fun _$16!93 () Unit!2002)

(assert (=> d!16543 (= (choose!398 (_keys!3840 newMap!16) lt!31387 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (index!3071 lt!31406) (defaultEntry!2192 newMap!16)) _$16!93)))

(declare-fun bs!3112 () Bool)

(assert (= bs!3112 d!16543))

(assert (=> bs!3112 m!68265))

(assert (=> bs!3112 m!68043))

(assert (=> bs!3112 m!68265))

(assert (=> bs!3112 m!68043))

(assert (=> bs!3112 m!68267))

(assert (=> d!15851 d!16543))

(assert (=> d!15851 d!16145))

(declare-fun d!16545 () Bool)

(assert (=> d!16545 (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32271 () Unit!2002)

(assert (=> d!16545 (= lt!32271 (choose!404 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47360 () Bool)

(assert (=> d!16545 e!47360))

(declare-fun res!38495 () Bool)

(assert (=> d!16545 (=> (not res!38495) (not e!47360))))

(assert (=> d!16545 (= res!38495 (isStrictlySorted!291 (toList!723 lt!31522)))))

(assert (=> d!16545 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000) lt!32271)))

(declare-fun b!72399 () Bool)

(assert (=> b!72399 (= e!47360 (containsKey!136 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16545 res!38495) b!72399))

(assert (=> d!16545 m!68423))

(assert (=> d!16545 m!68423))

(assert (=> d!16545 m!68425))

(declare-fun m!70421 () Bool)

(assert (=> d!16545 m!70421))

(assert (=> d!16545 m!69555))

(assert (=> b!72399 m!68419))

(assert (=> b!71256 d!16545))

(declare-fun d!16547 () Bool)

(assert (=> d!16547 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31522) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3113 () Bool)

(assert (= bs!3113 d!16547))

(assert (=> bs!3113 m!68423))

(declare-fun m!70423 () Bool)

(assert (=> bs!3113 m!70423))

(assert (=> b!71256 d!16547))

(assert (=> b!71256 d!16279))

(declare-fun d!16549 () Bool)

(declare-fun c!10682 () Bool)

(assert (=> d!16549 (= c!10682 ((_ is Nil!1473) (toList!723 lt!31459)))))

(declare-fun e!47361 () (InoxSet tuple2!2114))

(assert (=> d!16549 (= (content!76 (toList!723 lt!31459)) e!47361)))

(declare-fun b!72400 () Bool)

(assert (=> b!72400 (= e!47361 ((as const (Array tuple2!2114 Bool)) false))))

(declare-fun b!72401 () Bool)

(assert (=> b!72401 (= e!47361 ((_ map or) (store ((as const (Array tuple2!2114 Bool)) false) (h!2058 (toList!723 lt!31459)) true) (content!76 (t!5012 (toList!723 lt!31459)))))))

(assert (= (and d!16549 c!10682) b!72400))

(assert (= (and d!16549 (not c!10682)) b!72401))

(declare-fun m!70425 () Bool)

(assert (=> b!72401 m!70425))

(assert (=> b!72401 m!70331))

(assert (=> d!15939 d!16549))

(declare-fun d!16551 () Bool)

(declare-fun e!47362 () Bool)

(assert (=> d!16551 e!47362))

(declare-fun res!38496 () Bool)

(assert (=> d!16551 (=> res!38496 e!47362)))

(declare-fun lt!32274 () Bool)

(assert (=> d!16551 (= res!38496 (not lt!32274))))

(declare-fun lt!32273 () Bool)

(assert (=> d!16551 (= lt!32274 lt!32273)))

(declare-fun lt!32272 () Unit!2002)

(declare-fun e!47363 () Unit!2002)

(assert (=> d!16551 (= lt!32272 e!47363)))

(declare-fun c!10683 () Bool)

(assert (=> d!16551 (= c!10683 lt!32273)))

(assert (=> d!16551 (= lt!32273 (containsKey!136 (toList!723 lt!31653) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!16551 (= (contains!719 lt!31653 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) lt!32274)))

(declare-fun b!72402 () Bool)

(declare-fun lt!32275 () Unit!2002)

(assert (=> b!72402 (= e!47363 lt!32275)))

(assert (=> b!72402 (= lt!32275 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31653) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> b!72402 (isDefined!85 (getValueByKey!132 (toList!723 lt!31653) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72403 () Bool)

(declare-fun Unit!2061 () Unit!2002)

(assert (=> b!72403 (= e!47363 Unit!2061)))

(declare-fun b!72404 () Bool)

(assert (=> b!72404 (= e!47362 (isDefined!85 (getValueByKey!132 (toList!723 lt!31653) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(assert (= (and d!16551 c!10683) b!72402))

(assert (= (and d!16551 (not c!10683)) b!72403))

(assert (= (and d!16551 (not res!38496)) b!72404))

(declare-fun m!70427 () Bool)

(assert (=> d!16551 m!70427))

(declare-fun m!70429 () Bool)

(assert (=> b!72402 m!70429))

(assert (=> b!72402 m!68591))

(assert (=> b!72402 m!68591))

(declare-fun m!70431 () Bool)

(assert (=> b!72402 m!70431))

(assert (=> b!72404 m!68591))

(assert (=> b!72404 m!68591))

(assert (=> b!72404 m!70431))

(assert (=> d!15929 d!16551))

(declare-fun b!72408 () Bool)

(declare-fun e!47365 () Option!138)

(assert (=> b!72408 (= e!47365 None!136)))

(declare-fun b!72406 () Bool)

(declare-fun e!47364 () Option!138)

(assert (=> b!72406 (= e!47364 e!47365)))

(declare-fun c!10685 () Bool)

(assert (=> b!72406 (= c!10685 (and ((_ is Cons!1472) lt!31654) (not (= (_1!1068 (h!2058 lt!31654)) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))))

(declare-fun b!72405 () Bool)

(assert (=> b!72405 (= e!47364 (Some!137 (_2!1068 (h!2058 lt!31654))))))

(declare-fun c!10684 () Bool)

(declare-fun d!16553 () Bool)

(assert (=> d!16553 (= c!10684 (and ((_ is Cons!1472) lt!31654) (= (_1!1068 (h!2058 lt!31654)) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(assert (=> d!16553 (= (getValueByKey!132 lt!31654 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) e!47364)))

(declare-fun b!72407 () Bool)

(assert (=> b!72407 (= e!47365 (getValueByKey!132 (t!5012 lt!31654) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (= (and d!16553 c!10684) b!72405))

(assert (= (and d!16553 (not c!10684)) b!72406))

(assert (= (and b!72406 c!10685) b!72407))

(assert (= (and b!72406 (not c!10685)) b!72408))

(declare-fun m!70433 () Bool)

(assert (=> b!72407 m!70433))

(assert (=> d!15929 d!16553))

(declare-fun d!16555 () Bool)

(assert (=> d!16555 (= (getValueByKey!132 lt!31654 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) (Some!137 (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun lt!32276 () Unit!2002)

(assert (=> d!16555 (= lt!32276 (choose!397 lt!31654 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun e!47366 () Bool)

(assert (=> d!16555 e!47366))

(declare-fun res!38497 () Bool)

(assert (=> d!16555 (=> (not res!38497) (not e!47366))))

(assert (=> d!16555 (= res!38497 (isStrictlySorted!291 lt!31654))))

(assert (=> d!16555 (= (lemmaContainsTupThenGetReturnValue!49 lt!31654 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) lt!32276)))

(declare-fun b!72409 () Bool)

(declare-fun res!38498 () Bool)

(assert (=> b!72409 (=> (not res!38498) (not e!47366))))

(assert (=> b!72409 (= res!38498 (containsKey!136 lt!31654 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72410 () Bool)

(assert (=> b!72410 (= e!47366 (contains!722 lt!31654 (tuple2!2115 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(assert (= (and d!16555 res!38497) b!72409))

(assert (= (and b!72409 res!38498) b!72410))

(assert (=> d!16555 m!68585))

(declare-fun m!70435 () Bool)

(assert (=> d!16555 m!70435))

(declare-fun m!70437 () Bool)

(assert (=> d!16555 m!70437))

(declare-fun m!70439 () Bool)

(assert (=> b!72409 m!70439))

(declare-fun m!70441 () Bool)

(assert (=> b!72410 m!70441))

(assert (=> d!15929 d!16555))

(declare-fun bm!6305 () Bool)

(declare-fun call!6310 () List!1476)

(declare-fun call!6308 () List!1476)

(assert (=> bm!6305 (= call!6310 call!6308)))

(declare-fun b!72411 () Bool)

(declare-fun e!47368 () List!1476)

(declare-fun call!6309 () List!1476)

(assert (=> b!72411 (= e!47368 call!6309)))

(declare-fun bm!6306 () Bool)

(declare-fun e!47367 () List!1476)

(declare-fun c!10688 () Bool)

(assert (=> bm!6306 (= call!6308 ($colon$colon!65 e!47367 (ite c!10688 (h!2058 (toList!723 e!46514)) (tuple2!2115 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))))

(declare-fun c!10689 () Bool)

(assert (=> bm!6306 (= c!10689 c!10688)))

(declare-fun b!72413 () Bool)

(declare-fun c!10686 () Bool)

(assert (=> b!72413 (= c!10686 (and ((_ is Cons!1472) (toList!723 e!46514)) (bvsgt (_1!1068 (h!2058 (toList!723 e!46514))) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun e!47371 () List!1476)

(assert (=> b!72413 (= e!47371 e!47368)))

(declare-fun b!72414 () Bool)

(assert (=> b!72414 (= e!47371 call!6310)))

(declare-fun b!72415 () Bool)

(assert (=> b!72415 (= e!47368 call!6309)))

(declare-fun b!72416 () Bool)

(declare-fun e!47370 () List!1476)

(assert (=> b!72416 (= e!47370 e!47371)))

(declare-fun c!10687 () Bool)

(assert (=> b!72416 (= c!10687 (and ((_ is Cons!1472) (toList!723 e!46514)) (= (_1!1068 (h!2058 (toList!723 e!46514))) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun b!72417 () Bool)

(declare-fun res!38500 () Bool)

(declare-fun e!47369 () Bool)

(assert (=> b!72417 (=> (not res!38500) (not e!47369))))

(declare-fun lt!32277 () List!1476)

(assert (=> b!72417 (= res!38500 (containsKey!136 lt!32277 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72418 () Bool)

(assert (=> b!72418 (= e!47369 (contains!722 lt!32277 (tuple2!2115 (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun b!72419 () Bool)

(assert (=> b!72419 (= e!47367 (ite c!10687 (t!5012 (toList!723 e!46514)) (ite c!10686 (Cons!1472 (h!2058 (toList!723 e!46514)) (t!5012 (toList!723 e!46514))) Nil!1473)))))

(declare-fun b!72412 () Bool)

(assert (=> b!72412 (= e!47370 call!6308)))

(declare-fun d!16557 () Bool)

(assert (=> d!16557 e!47369))

(declare-fun res!38499 () Bool)

(assert (=> d!16557 (=> (not res!38499) (not e!47369))))

(assert (=> d!16557 (= res!38499 (isStrictlySorted!291 lt!32277))))

(assert (=> d!16557 (= lt!32277 e!47370)))

(assert (=> d!16557 (= c!10688 (and ((_ is Cons!1472) (toList!723 e!46514)) (bvslt (_1!1068 (h!2058 (toList!723 e!46514))) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(assert (=> d!16557 (isStrictlySorted!291 (toList!723 e!46514))))

(assert (=> d!16557 (= (insertStrictlySorted!52 (toList!723 e!46514) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))) lt!32277)))

(declare-fun b!72420 () Bool)

(assert (=> b!72420 (= e!47367 (insertStrictlySorted!52 (t!5012 (toList!723 e!46514)) (_1!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (_2!1068 (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun bm!6307 () Bool)

(assert (=> bm!6307 (= call!6309 call!6310)))

(assert (= (and d!16557 c!10688) b!72412))

(assert (= (and d!16557 (not c!10688)) b!72416))

(assert (= (and b!72416 c!10687) b!72414))

(assert (= (and b!72416 (not c!10687)) b!72413))

(assert (= (and b!72413 c!10686) b!72411))

(assert (= (and b!72413 (not c!10686)) b!72415))

(assert (= (or b!72411 b!72415) bm!6307))

(assert (= (or b!72414 bm!6307) bm!6305))

(assert (= (or b!72412 bm!6305) bm!6306))

(assert (= (and bm!6306 c!10689) b!72420))

(assert (= (and bm!6306 (not c!10689)) b!72419))

(assert (= (and d!16557 res!38499) b!72417))

(assert (= (and b!72417 res!38500) b!72418))

(declare-fun m!70443 () Bool)

(assert (=> b!72417 m!70443))

(declare-fun m!70445 () Bool)

(assert (=> b!72420 m!70445))

(declare-fun m!70447 () Bool)

(assert (=> b!72418 m!70447))

(declare-fun m!70449 () Bool)

(assert (=> bm!6306 m!70449))

(declare-fun m!70451 () Bool)

(assert (=> d!16557 m!70451))

(declare-fun m!70453 () Bool)

(assert (=> d!16557 m!70453))

(assert (=> d!15929 d!16557))

(declare-fun d!16559 () Bool)

(declare-fun res!38501 () Bool)

(declare-fun e!47372 () Bool)

(assert (=> d!16559 (=> res!38501 e!47372)))

(assert (=> d!16559 (= res!38501 (or ((_ is Nil!1473) lt!31609) ((_ is Nil!1473) (t!5012 lt!31609))))))

(assert (=> d!16559 (= (isStrictlySorted!291 lt!31609) e!47372)))

(declare-fun b!72421 () Bool)

(declare-fun e!47373 () Bool)

(assert (=> b!72421 (= e!47372 e!47373)))

(declare-fun res!38502 () Bool)

(assert (=> b!72421 (=> (not res!38502) (not e!47373))))

(assert (=> b!72421 (= res!38502 (bvslt (_1!1068 (h!2058 lt!31609)) (_1!1068 (h!2058 (t!5012 lt!31609)))))))

(declare-fun b!72422 () Bool)

(assert (=> b!72422 (= e!47373 (isStrictlySorted!291 (t!5012 lt!31609)))))

(assert (= (and d!16559 (not res!38501)) b!72421))

(assert (= (and b!72421 res!38502) b!72422))

(declare-fun m!70455 () Bool)

(assert (=> b!72422 m!70455))

(assert (=> d!15903 d!16559))

(assert (=> d!15903 d!16365))

(declare-fun d!16561 () Bool)

(declare-fun e!47374 () Bool)

(assert (=> d!16561 e!47374))

(declare-fun res!38503 () Bool)

(assert (=> d!16561 (=> res!38503 e!47374)))

(declare-fun lt!32280 () Bool)

(assert (=> d!16561 (= res!38503 (not lt!32280))))

(declare-fun lt!32279 () Bool)

(assert (=> d!16561 (= lt!32280 lt!32279)))

(declare-fun lt!32278 () Unit!2002)

(declare-fun e!47375 () Unit!2002)

(assert (=> d!16561 (= lt!32278 e!47375)))

(declare-fun c!10690 () Bool)

(assert (=> d!16561 (= c!10690 lt!32279)))

(assert (=> d!16561 (= lt!32279 (containsKey!136 (toList!723 lt!31751) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16561 (= (contains!719 lt!31751 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32280)))

(declare-fun b!72423 () Bool)

(declare-fun lt!32281 () Unit!2002)

(assert (=> b!72423 (= e!47375 lt!32281)))

(assert (=> b!72423 (= lt!32281 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31751) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> b!72423 (isDefined!85 (getValueByKey!132 (toList!723 lt!31751) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!72424 () Bool)

(declare-fun Unit!2062 () Unit!2002)

(assert (=> b!72424 (= e!47375 Unit!2062)))

(declare-fun b!72425 () Bool)

(assert (=> b!72425 (= e!47374 (isDefined!85 (getValueByKey!132 (toList!723 lt!31751) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16561 c!10690) b!72423))

(assert (= (and d!16561 (not c!10690)) b!72424))

(assert (= (and d!16561 (not res!38503)) b!72425))

(declare-fun m!70457 () Bool)

(assert (=> d!16561 m!70457))

(declare-fun m!70459 () Bool)

(assert (=> b!72423 m!70459))

(assert (=> b!72423 m!68843))

(assert (=> b!72423 m!68843))

(declare-fun m!70461 () Bool)

(assert (=> b!72423 m!70461))

(assert (=> b!72425 m!68843))

(assert (=> b!72425 m!68843))

(assert (=> b!72425 m!70461))

(assert (=> d!15987 d!16561))

(declare-fun b!72429 () Bool)

(declare-fun e!47377 () Option!138)

(assert (=> b!72429 (= e!47377 None!136)))

(declare-fun b!72427 () Bool)

(declare-fun e!47376 () Option!138)

(assert (=> b!72427 (= e!47376 e!47377)))

(declare-fun c!10692 () Bool)

(assert (=> b!72427 (= c!10692 (and ((_ is Cons!1472) lt!31752) (not (= (_1!1068 (h!2058 lt!31752)) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!72426 () Bool)

(assert (=> b!72426 (= e!47376 (Some!137 (_2!1068 (h!2058 lt!31752))))))

(declare-fun d!16563 () Bool)

(declare-fun c!10691 () Bool)

(assert (=> d!16563 (= c!10691 (and ((_ is Cons!1472) lt!31752) (= (_1!1068 (h!2058 lt!31752)) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16563 (= (getValueByKey!132 lt!31752 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!47376)))

(declare-fun b!72428 () Bool)

(assert (=> b!72428 (= e!47377 (getValueByKey!132 (t!5012 lt!31752) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16563 c!10691) b!72426))

(assert (= (and d!16563 (not c!10691)) b!72427))

(assert (= (and b!72427 c!10692) b!72428))

(assert (= (and b!72427 (not c!10692)) b!72429))

(declare-fun m!70463 () Bool)

(assert (=> b!72428 m!70463))

(assert (=> d!15987 d!16563))

(declare-fun d!16565 () Bool)

(assert (=> d!16565 (= (getValueByKey!132 lt!31752 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!32282 () Unit!2002)

(assert (=> d!16565 (= lt!32282 (choose!397 lt!31752 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun e!47378 () Bool)

(assert (=> d!16565 e!47378))

(declare-fun res!38504 () Bool)

(assert (=> d!16565 (=> (not res!38504) (not e!47378))))

(assert (=> d!16565 (= res!38504 (isStrictlySorted!291 lt!31752))))

(assert (=> d!16565 (= (lemmaContainsTupThenGetReturnValue!49 lt!31752 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32282)))

(declare-fun b!72430 () Bool)

(declare-fun res!38505 () Bool)

(assert (=> b!72430 (=> (not res!38505) (not e!47378))))

(assert (=> b!72430 (= res!38505 (containsKey!136 lt!31752 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!72431 () Bool)

(assert (=> b!72431 (= e!47378 (contains!722 lt!31752 (tuple2!2115 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16565 res!38504) b!72430))

(assert (= (and b!72430 res!38505) b!72431))

(assert (=> d!16565 m!68837))

(declare-fun m!70465 () Bool)

(assert (=> d!16565 m!70465))

(declare-fun m!70467 () Bool)

(assert (=> d!16565 m!70467))

(declare-fun m!70469 () Bool)

(assert (=> b!72430 m!70469))

(declare-fun m!70471 () Bool)

(assert (=> b!72431 m!70471))

(assert (=> d!15987 d!16565))

(declare-fun bm!6308 () Bool)

(declare-fun call!6313 () List!1476)

(declare-fun call!6311 () List!1476)

(assert (=> bm!6308 (= call!6313 call!6311)))

(declare-fun b!72432 () Bool)

(declare-fun e!47380 () List!1476)

(declare-fun call!6312 () List!1476)

(assert (=> b!72432 (= e!47380 call!6312)))

(declare-fun c!10695 () Bool)

(declare-fun e!47379 () List!1476)

(declare-fun bm!6309 () Bool)

(assert (=> bm!6309 (= call!6311 ($colon$colon!65 e!47379 (ite c!10695 (h!2058 (toList!723 lt!31514)) (tuple2!2115 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun c!10696 () Bool)

(assert (=> bm!6309 (= c!10696 c!10695)))

(declare-fun b!72434 () Bool)

(declare-fun c!10693 () Bool)

(assert (=> b!72434 (= c!10693 (and ((_ is Cons!1472) (toList!723 lt!31514)) (bvsgt (_1!1068 (h!2058 (toList!723 lt!31514))) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun e!47383 () List!1476)

(assert (=> b!72434 (= e!47383 e!47380)))

(declare-fun b!72435 () Bool)

(assert (=> b!72435 (= e!47383 call!6313)))

(declare-fun b!72436 () Bool)

(assert (=> b!72436 (= e!47380 call!6312)))

(declare-fun b!72437 () Bool)

(declare-fun e!47382 () List!1476)

(assert (=> b!72437 (= e!47382 e!47383)))

(declare-fun c!10694 () Bool)

(assert (=> b!72437 (= c!10694 (and ((_ is Cons!1472) (toList!723 lt!31514)) (= (_1!1068 (h!2058 (toList!723 lt!31514))) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!72438 () Bool)

(declare-fun res!38507 () Bool)

(declare-fun e!47381 () Bool)

(assert (=> b!72438 (=> (not res!38507) (not e!47381))))

(declare-fun lt!32283 () List!1476)

(assert (=> b!72438 (= res!38507 (containsKey!136 lt!32283 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!72439 () Bool)

(assert (=> b!72439 (= e!47381 (contains!722 lt!32283 (tuple2!2115 (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!72440 () Bool)

(assert (=> b!72440 (= e!47379 (ite c!10694 (t!5012 (toList!723 lt!31514)) (ite c!10693 (Cons!1472 (h!2058 (toList!723 lt!31514)) (t!5012 (toList!723 lt!31514))) Nil!1473)))))

(declare-fun b!72433 () Bool)

(assert (=> b!72433 (= e!47382 call!6311)))

(declare-fun d!16567 () Bool)

(assert (=> d!16567 e!47381))

(declare-fun res!38506 () Bool)

(assert (=> d!16567 (=> (not res!38506) (not e!47381))))

(assert (=> d!16567 (= res!38506 (isStrictlySorted!291 lt!32283))))

(assert (=> d!16567 (= lt!32283 e!47382)))

(assert (=> d!16567 (= c!10695 (and ((_ is Cons!1472) (toList!723 lt!31514)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31514))) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16567 (isStrictlySorted!291 (toList!723 lt!31514))))

(assert (=> d!16567 (= (insertStrictlySorted!52 (toList!723 lt!31514) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32283)))

(declare-fun b!72441 () Bool)

(assert (=> b!72441 (= e!47379 (insertStrictlySorted!52 (t!5012 (toList!723 lt!31514)) (_1!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun bm!6310 () Bool)

(assert (=> bm!6310 (= call!6312 call!6313)))

(assert (= (and d!16567 c!10695) b!72433))

(assert (= (and d!16567 (not c!10695)) b!72437))

(assert (= (and b!72437 c!10694) b!72435))

(assert (= (and b!72437 (not c!10694)) b!72434))

(assert (= (and b!72434 c!10693) b!72432))

(assert (= (and b!72434 (not c!10693)) b!72436))

(assert (= (or b!72432 b!72436) bm!6310))

(assert (= (or b!72435 bm!6310) bm!6308))

(assert (= (or b!72433 bm!6308) bm!6309))

(assert (= (and bm!6309 c!10696) b!72441))

(assert (= (and bm!6309 (not c!10696)) b!72440))

(assert (= (and d!16567 res!38506) b!72438))

(assert (= (and b!72438 res!38507) b!72439))

(declare-fun m!70473 () Bool)

(assert (=> b!72438 m!70473))

(declare-fun m!70475 () Bool)

(assert (=> b!72441 m!70475))

(declare-fun m!70477 () Bool)

(assert (=> b!72439 m!70477))

(declare-fun m!70479 () Bool)

(assert (=> bm!6309 m!70479))

(declare-fun m!70481 () Bool)

(assert (=> d!16567 m!70481))

(declare-fun m!70483 () Bool)

(assert (=> d!16567 m!70483))

(assert (=> d!15987 d!16567))

(declare-fun d!16569 () Bool)

(assert (=> d!16569 (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!32284 () Unit!2002)

(assert (=> d!16569 (= lt!32284 (choose!404 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47384 () Bool)

(assert (=> d!16569 e!47384))

(declare-fun res!38508 () Bool)

(assert (=> d!16569 (=> (not res!38508) (not e!47384))))

(assert (=> d!16569 (= res!38508 (isStrictlySorted!291 (toList!723 lt!31444)))))

(assert (=> d!16569 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32284)))

(declare-fun b!72442 () Bool)

(assert (=> b!72442 (= e!47384 (containsKey!136 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16569 res!38508) b!72442))

(assert (=> d!16569 m!68007))

(assert (=> d!16569 m!68563))

(assert (=> d!16569 m!68563))

(assert (=> d!16569 m!68669))

(assert (=> d!16569 m!68007))

(declare-fun m!70485 () Bool)

(assert (=> d!16569 m!70485))

(assert (=> d!16569 m!69445))

(assert (=> b!72442 m!68007))

(assert (=> b!72442 m!68665))

(assert (=> b!71408 d!16569))

(declare-fun d!16571 () Bool)

(assert (=> d!16571 (= (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!314 (getValueByKey!132 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3114 () Bool)

(assert (= bs!3114 d!16571))

(assert (=> bs!3114 m!68563))

(declare-fun m!70487 () Bool)

(assert (=> bs!3114 m!70487))

(assert (=> b!71408 d!16571))

(declare-fun b!72446 () Bool)

(declare-fun e!47386 () Option!138)

(assert (=> b!72446 (= e!47386 None!136)))

(declare-fun b!72444 () Bool)

(declare-fun e!47385 () Option!138)

(assert (=> b!72444 (= e!47385 e!47386)))

(declare-fun c!10698 () Bool)

(assert (=> b!72444 (= c!10698 (and ((_ is Cons!1472) (toList!723 lt!31444)) (not (= (_1!1068 (h!2058 (toList!723 lt!31444))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!72443 () Bool)

(assert (=> b!72443 (= e!47385 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31444)))))))

(declare-fun d!16573 () Bool)

(declare-fun c!10697 () Bool)

(assert (=> d!16573 (= c!10697 (and ((_ is Cons!1472) (toList!723 lt!31444)) (= (_1!1068 (h!2058 (toList!723 lt!31444))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16573 (= (getValueByKey!132 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47385)))

(declare-fun b!72445 () Bool)

(assert (=> b!72445 (= e!47386 (getValueByKey!132 (t!5012 (toList!723 lt!31444)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16573 c!10697) b!72443))

(assert (= (and d!16573 (not c!10697)) b!72444))

(assert (= (and b!72444 c!10698) b!72445))

(assert (= (and b!72444 (not c!10698)) b!72446))

(assert (=> b!72445 m!68007))

(declare-fun m!70489 () Bool)

(assert (=> b!72445 m!70489))

(assert (=> b!71408 d!16573))

(declare-fun b!72450 () Bool)

(declare-fun e!47388 () Option!138)

(assert (=> b!72450 (= e!47388 None!136)))

(declare-fun b!72448 () Bool)

(declare-fun e!47387 () Option!138)

(assert (=> b!72448 (= e!47387 e!47388)))

(declare-fun c!10700 () Bool)

(assert (=> b!72448 (= c!10700 (and ((_ is Cons!1472) (toList!723 lt!31739)) (not (= (_1!1068 (h!2058 (toList!723 lt!31739))) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!72447 () Bool)

(assert (=> b!72447 (= e!47387 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31739)))))))

(declare-fun c!10699 () Bool)

(declare-fun d!16575 () Bool)

(assert (=> d!16575 (= c!10699 (and ((_ is Cons!1472) (toList!723 lt!31739)) (= (_1!1068 (h!2058 (toList!723 lt!31739))) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16575 (= (getValueByKey!132 (toList!723 lt!31739) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!47387)))

(declare-fun b!72449 () Bool)

(assert (=> b!72449 (= e!47388 (getValueByKey!132 (t!5012 (toList!723 lt!31739)) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16575 c!10699) b!72447))

(assert (= (and d!16575 (not c!10699)) b!72448))

(assert (= (and b!72448 c!10700) b!72449))

(assert (= (and b!72448 (not c!10700)) b!72450))

(declare-fun m!70491 () Bool)

(assert (=> b!72449 m!70491))

(assert (=> b!71477 d!16575))

(declare-fun d!16577 () Bool)

(declare-fun e!47389 () Bool)

(assert (=> d!16577 e!47389))

(declare-fun res!38509 () Bool)

(assert (=> d!16577 (=> res!38509 e!47389)))

(declare-fun lt!32287 () Bool)

(assert (=> d!16577 (= res!38509 (not lt!32287))))

(declare-fun lt!32286 () Bool)

(assert (=> d!16577 (= lt!32287 lt!32286)))

(declare-fun lt!32285 () Unit!2002)

(declare-fun e!47390 () Unit!2002)

(assert (=> d!16577 (= lt!32285 e!47390)))

(declare-fun c!10701 () Bool)

(assert (=> d!16577 (= c!10701 lt!32286)))

(assert (=> d!16577 (= lt!32286 (containsKey!136 (toList!723 lt!31672) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16577 (= (contains!719 lt!31672 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32287)))

(declare-fun b!72451 () Bool)

(declare-fun lt!32288 () Unit!2002)

(assert (=> b!72451 (= e!47390 lt!32288)))

(assert (=> b!72451 (= lt!32288 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31672) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72451 (isDefined!85 (getValueByKey!132 (toList!723 lt!31672) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72452 () Bool)

(declare-fun Unit!2063 () Unit!2002)

(assert (=> b!72452 (= e!47390 Unit!2063)))

(declare-fun b!72453 () Bool)

(assert (=> b!72453 (= e!47389 (isDefined!85 (getValueByKey!132 (toList!723 lt!31672) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16577 c!10701) b!72451))

(assert (= (and d!16577 (not c!10701)) b!72452))

(assert (= (and d!16577 (not res!38509)) b!72453))

(declare-fun m!70493 () Bool)

(assert (=> d!16577 m!70493))

(declare-fun m!70495 () Bool)

(assert (=> b!72451 m!70495))

(assert (=> b!72451 m!69181))

(assert (=> b!72451 m!69181))

(declare-fun m!70497 () Bool)

(assert (=> b!72451 m!70497))

(assert (=> b!72453 m!69181))

(assert (=> b!72453 m!69181))

(assert (=> b!72453 m!70497))

(assert (=> bm!6193 d!16577))

(declare-fun d!16579 () Bool)

(declare-fun lt!32289 () Bool)

(assert (=> d!16579 (= lt!32289 (select (content!76 (toList!723 lt!31653)) (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun e!47391 () Bool)

(assert (=> d!16579 (= lt!32289 e!47391)))

(declare-fun res!38511 () Bool)

(assert (=> d!16579 (=> (not res!38511) (not e!47391))))

(assert (=> d!16579 (= res!38511 ((_ is Cons!1472) (toList!723 lt!31653)))))

(assert (=> d!16579 (= (contains!722 (toList!723 lt!31653) (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!32289)))

(declare-fun b!72454 () Bool)

(declare-fun e!47392 () Bool)

(assert (=> b!72454 (= e!47391 e!47392)))

(declare-fun res!38510 () Bool)

(assert (=> b!72454 (=> res!38510 e!47392)))

(assert (=> b!72454 (= res!38510 (= (h!2058 (toList!723 lt!31653)) (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!72455 () Bool)

(assert (=> b!72455 (= e!47392 (contains!722 (t!5012 (toList!723 lt!31653)) (ite c!10286 (ite c!10284 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31264) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31264)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (= (and d!16579 res!38511) b!72454))

(assert (= (and b!72454 (not res!38510)) b!72455))

(declare-fun m!70499 () Bool)

(assert (=> d!16579 m!70499))

(declare-fun m!70501 () Bool)

(assert (=> d!16579 m!70501))

(declare-fun m!70503 () Bool)

(assert (=> b!72455 m!70503))

(assert (=> b!71361 d!16579))

(declare-fun lt!32290 () Bool)

(declare-fun d!16581 () Bool)

(assert (=> d!16581 (= lt!32290 (select (content!76 (toList!723 lt!31751)) (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun e!47393 () Bool)

(assert (=> d!16581 (= lt!32290 e!47393)))

(declare-fun res!38513 () Bool)

(assert (=> d!16581 (=> (not res!38513) (not e!47393))))

(assert (=> d!16581 (= res!38513 ((_ is Cons!1472) (toList!723 lt!31751)))))

(assert (=> d!16581 (= (contains!722 (toList!723 lt!31751) (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!32290)))

(declare-fun b!72456 () Bool)

(declare-fun e!47394 () Bool)

(assert (=> b!72456 (= e!47393 e!47394)))

(declare-fun res!38512 () Bool)

(assert (=> b!72456 (=> res!38512 e!47394)))

(assert (=> b!72456 (= res!38512 (= (h!2058 (toList!723 lt!31751)) (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!72457 () Bool)

(assert (=> b!72457 (= e!47394 (contains!722 (t!5012 (toList!723 lt!31751)) (tuple2!2115 lt!31523 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!16581 res!38513) b!72456))

(assert (= (and b!72456 (not res!38512)) b!72457))

(declare-fun m!70505 () Bool)

(assert (=> d!16581 m!70505))

(declare-fun m!70507 () Bool)

(assert (=> d!16581 m!70507))

(declare-fun m!70509 () Bool)

(assert (=> b!72457 m!70509))

(assert (=> b!71484 d!16581))

(declare-fun d!16583 () Bool)

(assert (=> d!16583 (= (get!1135 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71321 d!16583))

(declare-fun d!16585 () Bool)

(assert (=> d!16585 (= (size!2094 newMap!16) (bvadd (_size!394 newMap!16) (bvsdiv (bvadd (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!71371 d!16585))

(declare-fun d!16587 () Bool)

(assert (=> d!16587 (= (apply!74 lt!31868 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1136 (getValueByKey!132 (toList!723 lt!31868) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3115 () Bool)

(assert (= bs!3115 d!16587))

(assert (=> bs!3115 m!68963))

(assert (=> bs!3115 m!70173))

(assert (=> bs!3115 m!70173))

(declare-fun m!70511 () Bool)

(assert (=> bs!3115 m!70511))

(assert (=> b!71564 d!16587))

(assert (=> b!71564 d!16251))

(assert (=> b!71384 d!16131))

(declare-fun d!16589 () Bool)

(declare-fun lt!32291 () Bool)

(assert (=> d!16589 (= lt!32291 (select (content!76 (toList!723 lt!31764)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(declare-fun e!47395 () Bool)

(assert (=> d!16589 (= lt!32291 e!47395)))

(declare-fun res!38515 () Bool)

(assert (=> d!16589 (=> (not res!38515) (not e!47395))))

(assert (=> d!16589 (= res!38515 ((_ is Cons!1472) (toList!723 lt!31764)))))

(assert (=> d!16589 (= (contains!722 (toList!723 lt!31764) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) lt!32291)))

(declare-fun b!72458 () Bool)

(declare-fun e!47396 () Bool)

(assert (=> b!72458 (= e!47395 e!47396)))

(declare-fun res!38514 () Bool)

(assert (=> b!72458 (=> res!38514 e!47396)))

(assert (=> b!72458 (= res!38514 (= (h!2058 (toList!723 lt!31764)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(declare-fun b!72459 () Bool)

(assert (=> b!72459 (= e!47396 (contains!722 (t!5012 (toList!723 lt!31764)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(assert (= (and d!16589 res!38515) b!72458))

(assert (= (and b!72458 (not res!38514)) b!72459))

(declare-fun m!70513 () Bool)

(assert (=> d!16589 m!70513))

(declare-fun m!70515 () Bool)

(assert (=> d!16589 m!70515))

(declare-fun m!70517 () Bool)

(assert (=> b!72459 m!70517))

(assert (=> b!71492 d!16589))

(declare-fun d!16591 () Bool)

(declare-fun e!47397 () Bool)

(assert (=> d!16591 e!47397))

(declare-fun res!38516 () Bool)

(assert (=> d!16591 (=> res!38516 e!47397)))

(declare-fun lt!32294 () Bool)

(assert (=> d!16591 (= res!38516 (not lt!32294))))

(declare-fun lt!32293 () Bool)

(assert (=> d!16591 (= lt!32294 lt!32293)))

(declare-fun lt!32292 () Unit!2002)

(declare-fun e!47398 () Unit!2002)

(assert (=> d!16591 (= lt!32292 e!47398)))

(declare-fun c!10702 () Bool)

(assert (=> d!16591 (= c!10702 lt!32293)))

(assert (=> d!16591 (= lt!32293 (containsKey!136 (toList!723 lt!31564) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16591 (= (contains!719 lt!31564 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32294)))

(declare-fun b!72460 () Bool)

(declare-fun lt!32295 () Unit!2002)

(assert (=> b!72460 (= e!47398 lt!32295)))

(assert (=> b!72460 (= lt!32295 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31564) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72460 (isDefined!85 (getValueByKey!132 (toList!723 lt!31564) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72461 () Bool)

(declare-fun Unit!2064 () Unit!2002)

(assert (=> b!72461 (= e!47398 Unit!2064)))

(declare-fun b!72462 () Bool)

(assert (=> b!72462 (= e!47397 (isDefined!85 (getValueByKey!132 (toList!723 lt!31564) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16591 c!10702) b!72460))

(assert (= (and d!16591 (not c!10702)) b!72461))

(assert (= (and d!16591 (not res!38516)) b!72462))

(declare-fun m!70519 () Bool)

(assert (=> d!16591 m!70519))

(declare-fun m!70521 () Bool)

(assert (=> b!72460 m!70521))

(assert (=> b!72460 m!69239))

(assert (=> b!72460 m!69239))

(declare-fun m!70523 () Bool)

(assert (=> b!72460 m!70523))

(assert (=> b!72462 m!69239))

(assert (=> b!72462 m!69239))

(assert (=> b!72462 m!70523))

(assert (=> bm!6168 d!16591))

(assert (=> b!71417 d!16131))

(assert (=> b!71203 d!16429))

(assert (=> b!71203 d!16431))

(declare-fun d!16593 () Bool)

(declare-fun res!38517 () Bool)

(declare-fun e!47399 () Bool)

(assert (=> d!16593 (=> (not res!38517) (not e!47399))))

(assert (=> d!16593 (= res!38517 (simpleValid!50 (_2!1069 lt!31848)))))

(assert (=> d!16593 (= (valid!287 (_2!1069 lt!31848)) e!47399)))

(declare-fun b!72463 () Bool)

(declare-fun res!38518 () Bool)

(assert (=> b!72463 (=> (not res!38518) (not e!47399))))

(assert (=> b!72463 (= res!38518 (= (arrayCountValidKeys!0 (_keys!3840 (_2!1069 lt!31848)) #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31848)))) (_size!394 (_2!1069 lt!31848))))))

(declare-fun b!72464 () Bool)

(declare-fun res!38519 () Bool)

(assert (=> b!72464 (=> (not res!38519) (not e!47399))))

(assert (=> b!72464 (= res!38519 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 (_2!1069 lt!31848)) (mask!6149 (_2!1069 lt!31848))))))

(declare-fun b!72465 () Bool)

(assert (=> b!72465 (= e!47399 (arrayNoDuplicates!0 (_keys!3840 (_2!1069 lt!31848)) #b00000000000000000000000000000000 Nil!1472))))

(assert (= (and d!16593 res!38517) b!72463))

(assert (= (and b!72463 res!38518) b!72464))

(assert (= (and b!72464 res!38519) b!72465))

(declare-fun m!70525 () Bool)

(assert (=> d!16593 m!70525))

(declare-fun m!70527 () Bool)

(assert (=> b!72463 m!70527))

(declare-fun m!70529 () Bool)

(assert (=> b!72464 m!70529))

(declare-fun m!70531 () Bool)

(assert (=> b!72465 m!70531))

(assert (=> b!71537 d!16593))

(declare-fun b!72469 () Bool)

(declare-fun e!47401 () Option!138)

(assert (=> b!72469 (= e!47401 None!136)))

(declare-fun b!72467 () Bool)

(declare-fun e!47400 () Option!138)

(assert (=> b!72467 (= e!47400 e!47401)))

(declare-fun c!10704 () Bool)

(assert (=> b!72467 (= c!10704 (and ((_ is Cons!1472) (toList!723 lt!31635)) (not (= (_1!1068 (h!2058 (toList!723 lt!31635))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!72466 () Bool)

(assert (=> b!72466 (= e!47400 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31635)))))))

(declare-fun c!10703 () Bool)

(declare-fun d!16595 () Bool)

(assert (=> d!16595 (= c!10703 (and ((_ is Cons!1472) (toList!723 lt!31635)) (= (_1!1068 (h!2058 (toList!723 lt!31635))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!16595 (= (getValueByKey!132 (toList!723 lt!31635) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!47400)))

(declare-fun b!72468 () Bool)

(assert (=> b!72468 (= e!47401 (getValueByKey!132 (t!5012 (toList!723 lt!31635)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!16595 c!10703) b!72466))

(assert (= (and d!16595 (not c!10703)) b!72467))

(assert (= (and b!72467 c!10704) b!72468))

(assert (= (and b!72467 (not c!10704)) b!72469))

(declare-fun m!70533 () Bool)

(assert (=> b!72468 m!70533))

(assert (=> b!71329 d!16595))

(declare-fun d!16597 () Bool)

(declare-fun e!47402 () Bool)

(assert (=> d!16597 e!47402))

(declare-fun res!38520 () Bool)

(assert (=> d!16597 (=> res!38520 e!47402)))

(declare-fun lt!32298 () Bool)

(assert (=> d!16597 (= res!38520 (not lt!32298))))

(declare-fun lt!32297 () Bool)

(assert (=> d!16597 (= lt!32298 lt!32297)))

(declare-fun lt!32296 () Unit!2002)

(declare-fun e!47403 () Unit!2002)

(assert (=> d!16597 (= lt!32296 e!47403)))

(declare-fun c!10705 () Bool)

(assert (=> d!16597 (= c!10705 lt!32297)))

(assert (=> d!16597 (= lt!32297 (containsKey!136 (toList!723 lt!31739) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16597 (= (contains!719 lt!31739 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32298)))

(declare-fun b!72470 () Bool)

(declare-fun lt!32299 () Unit!2002)

(assert (=> b!72470 (= e!47403 lt!32299)))

(assert (=> b!72470 (= lt!32299 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31739) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> b!72470 (isDefined!85 (getValueByKey!132 (toList!723 lt!31739) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!72471 () Bool)

(declare-fun Unit!2065 () Unit!2002)

(assert (=> b!72471 (= e!47403 Unit!2065)))

(declare-fun b!72472 () Bool)

(assert (=> b!72472 (= e!47402 (isDefined!85 (getValueByKey!132 (toList!723 lt!31739) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16597 c!10705) b!72470))

(assert (= (and d!16597 (not c!10705)) b!72471))

(assert (= (and d!16597 (not res!38520)) b!72472))

(declare-fun m!70535 () Bool)

(assert (=> d!16597 m!70535))

(declare-fun m!70537 () Bool)

(assert (=> b!72470 m!70537))

(assert (=> b!72470 m!68795))

(assert (=> b!72470 m!68795))

(declare-fun m!70539 () Bool)

(assert (=> b!72470 m!70539))

(assert (=> b!72472 m!68795))

(assert (=> b!72472 m!68795))

(assert (=> b!72472 m!70539))

(assert (=> d!15971 d!16597))

(declare-fun b!72476 () Bool)

(declare-fun e!47405 () Option!138)

(assert (=> b!72476 (= e!47405 None!136)))

(declare-fun b!72474 () Bool)

(declare-fun e!47404 () Option!138)

(assert (=> b!72474 (= e!47404 e!47405)))

(declare-fun c!10707 () Bool)

(assert (=> b!72474 (= c!10707 (and ((_ is Cons!1472) lt!31740) (not (= (_1!1068 (h!2058 lt!31740)) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun b!72473 () Bool)

(assert (=> b!72473 (= e!47404 (Some!137 (_2!1068 (h!2058 lt!31740))))))

(declare-fun d!16599 () Bool)

(declare-fun c!10706 () Bool)

(assert (=> d!16599 (= c!10706 (and ((_ is Cons!1472) lt!31740) (= (_1!1068 (h!2058 lt!31740)) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16599 (= (getValueByKey!132 lt!31740 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) e!47404)))

(declare-fun b!72475 () Bool)

(assert (=> b!72475 (= e!47405 (getValueByKey!132 (t!5012 lt!31740) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (= (and d!16599 c!10706) b!72473))

(assert (= (and d!16599 (not c!10706)) b!72474))

(assert (= (and b!72474 c!10707) b!72475))

(assert (= (and b!72474 (not c!10707)) b!72476))

(declare-fun m!70541 () Bool)

(assert (=> b!72475 m!70541))

(assert (=> d!15971 d!16599))

(declare-fun d!16601 () Bool)

(assert (=> d!16601 (= (getValueByKey!132 lt!31740 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (Some!137 (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun lt!32300 () Unit!2002)

(assert (=> d!16601 (= lt!32300 (choose!397 lt!31740 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun e!47406 () Bool)

(assert (=> d!16601 e!47406))

(declare-fun res!38521 () Bool)

(assert (=> d!16601 (=> (not res!38521) (not e!47406))))

(assert (=> d!16601 (= res!38521 (isStrictlySorted!291 lt!31740))))

(assert (=> d!16601 (= (lemmaContainsTupThenGetReturnValue!49 lt!31740 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32300)))

(declare-fun b!72477 () Bool)

(declare-fun res!38522 () Bool)

(assert (=> b!72477 (=> (not res!38522) (not e!47406))))

(assert (=> b!72477 (= res!38522 (containsKey!136 lt!31740 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!72478 () Bool)

(assert (=> b!72478 (= e!47406 (contains!722 lt!31740 (tuple2!2115 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (= (and d!16601 res!38521) b!72477))

(assert (= (and b!72477 res!38522) b!72478))

(assert (=> d!16601 m!68789))

(declare-fun m!70543 () Bool)

(assert (=> d!16601 m!70543))

(declare-fun m!70545 () Bool)

(assert (=> d!16601 m!70545))

(declare-fun m!70547 () Bool)

(assert (=> b!72477 m!70547))

(declare-fun m!70549 () Bool)

(assert (=> b!72478 m!70549))

(assert (=> d!15971 d!16601))

(declare-fun bm!6311 () Bool)

(declare-fun call!6316 () List!1476)

(declare-fun call!6314 () List!1476)

(assert (=> bm!6311 (= call!6316 call!6314)))

(declare-fun b!72479 () Bool)

(declare-fun e!47408 () List!1476)

(declare-fun call!6315 () List!1476)

(assert (=> b!72479 (= e!47408 call!6315)))

(declare-fun c!10710 () Bool)

(declare-fun e!47407 () List!1476)

(declare-fun bm!6312 () Bool)

(assert (=> bm!6312 (= call!6314 ($colon$colon!65 e!47407 (ite c!10710 (h!2058 (toList!723 lt!31521)) (tuple2!2115 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))))

(declare-fun c!10711 () Bool)

(assert (=> bm!6312 (= c!10711 c!10710)))

(declare-fun c!10708 () Bool)

(declare-fun b!72481 () Bool)

(assert (=> b!72481 (= c!10708 (and ((_ is Cons!1472) (toList!723 lt!31521)) (bvsgt (_1!1068 (h!2058 (toList!723 lt!31521))) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun e!47411 () List!1476)

(assert (=> b!72481 (= e!47411 e!47408)))

(declare-fun b!72482 () Bool)

(assert (=> b!72482 (= e!47411 call!6316)))

(declare-fun b!72483 () Bool)

(assert (=> b!72483 (= e!47408 call!6315)))

(declare-fun b!72484 () Bool)

(declare-fun e!47410 () List!1476)

(assert (=> b!72484 (= e!47410 e!47411)))

(declare-fun c!10709 () Bool)

(assert (=> b!72484 (= c!10709 (and ((_ is Cons!1472) (toList!723 lt!31521)) (= (_1!1068 (h!2058 (toList!723 lt!31521))) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!72485 () Bool)

(declare-fun res!38524 () Bool)

(declare-fun e!47409 () Bool)

(assert (=> b!72485 (=> (not res!38524) (not e!47409))))

(declare-fun lt!32301 () List!1476)

(assert (=> b!72485 (= res!38524 (containsKey!136 lt!32301 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun b!72486 () Bool)

(assert (=> b!72486 (= e!47409 (contains!722 lt!32301 (tuple2!2115 (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(declare-fun b!72487 () Bool)

(assert (=> b!72487 (= e!47407 (ite c!10709 (t!5012 (toList!723 lt!31521)) (ite c!10708 (Cons!1472 (h!2058 (toList!723 lt!31521)) (t!5012 (toList!723 lt!31521))) Nil!1473)))))

(declare-fun b!72480 () Bool)

(assert (=> b!72480 (= e!47410 call!6314)))

(declare-fun d!16603 () Bool)

(assert (=> d!16603 e!47409))

(declare-fun res!38523 () Bool)

(assert (=> d!16603 (=> (not res!38523) (not e!47409))))

(assert (=> d!16603 (= res!38523 (isStrictlySorted!291 lt!32301))))

(assert (=> d!16603 (= lt!32301 e!47410)))

(assert (=> d!16603 (= c!10710 (and ((_ is Cons!1472) (toList!723 lt!31521)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31521))) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))))

(assert (=> d!16603 (isStrictlySorted!291 (toList!723 lt!31521))))

(assert (=> d!16603 (= (insertStrictlySorted!52 (toList!723 lt!31521) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!32301)))

(declare-fun b!72488 () Bool)

(assert (=> b!72488 (= e!47407 (insertStrictlySorted!52 (t!5012 (toList!723 lt!31521)) (_1!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) (_2!1068 (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(declare-fun bm!6313 () Bool)

(assert (=> bm!6313 (= call!6315 call!6316)))

(assert (= (and d!16603 c!10710) b!72480))

(assert (= (and d!16603 (not c!10710)) b!72484))

(assert (= (and b!72484 c!10709) b!72482))

(assert (= (and b!72484 (not c!10709)) b!72481))

(assert (= (and b!72481 c!10708) b!72479))

(assert (= (and b!72481 (not c!10708)) b!72483))

(assert (= (or b!72479 b!72483) bm!6313))

(assert (= (or b!72482 bm!6313) bm!6311))

(assert (= (or b!72480 bm!6311) bm!6312))

(assert (= (and bm!6312 c!10711) b!72488))

(assert (= (and bm!6312 (not c!10711)) b!72487))

(assert (= (and d!16603 res!38523) b!72485))

(assert (= (and b!72485 res!38524) b!72486))

(declare-fun m!70551 () Bool)

(assert (=> b!72485 m!70551))

(declare-fun m!70553 () Bool)

(assert (=> b!72488 m!70553))

(declare-fun m!70555 () Bool)

(assert (=> b!72486 m!70555))

(declare-fun m!70557 () Bool)

(assert (=> bm!6312 m!70557))

(declare-fun m!70559 () Bool)

(assert (=> d!16603 m!70559))

(declare-fun m!70561 () Bool)

(assert (=> d!16603 m!70561))

(assert (=> d!15971 d!16603))

(assert (=> d!15901 d!15899))

(declare-fun d!16605 () Bool)

(assert (=> d!16605 (= (getValueByKey!132 lt!31453 (_1!1068 lt!31265)) (Some!137 (_2!1068 lt!31265)))))

(assert (=> d!16605 true))

(declare-fun _$22!382 () Unit!2002)

(assert (=> d!16605 (= (choose!397 lt!31453 (_1!1068 lt!31265) (_2!1068 lt!31265)) _$22!382)))

(declare-fun bs!3116 () Bool)

(assert (= bs!3116 d!16605))

(assert (=> bs!3116 m!68139))

(assert (=> d!15901 d!16605))

(declare-fun d!16607 () Bool)

(declare-fun res!38525 () Bool)

(declare-fun e!47412 () Bool)

(assert (=> d!16607 (=> res!38525 e!47412)))

(assert (=> d!16607 (= res!38525 (or ((_ is Nil!1473) lt!31453) ((_ is Nil!1473) (t!5012 lt!31453))))))

(assert (=> d!16607 (= (isStrictlySorted!291 lt!31453) e!47412)))

(declare-fun b!72489 () Bool)

(declare-fun e!47413 () Bool)

(assert (=> b!72489 (= e!47412 e!47413)))

(declare-fun res!38526 () Bool)

(assert (=> b!72489 (=> (not res!38526) (not e!47413))))

(assert (=> b!72489 (= res!38526 (bvslt (_1!1068 (h!2058 lt!31453)) (_1!1068 (h!2058 (t!5012 lt!31453)))))))

(declare-fun b!72490 () Bool)

(assert (=> b!72490 (= e!47413 (isStrictlySorted!291 (t!5012 lt!31453)))))

(assert (= (and d!16607 (not res!38525)) b!72489))

(assert (= (and b!72489 res!38526) b!72490))

(declare-fun m!70563 () Bool)

(assert (=> b!72490 m!70563))

(assert (=> d!15901 d!16607))

(declare-fun b!72494 () Bool)

(declare-fun e!47414 () Bool)

(assert (=> b!72494 (= e!47414 (and (bvsge (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!394 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!72491 () Bool)

(declare-fun res!38530 () Bool)

(assert (=> b!72491 (=> (not res!38530) (not e!47414))))

(assert (=> b!72491 (= res!38530 (and (= (size!2091 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000001)) (= (size!2090 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (size!2091 (_values!2175 (v!2514 (underlying!257 thiss!992))))) (bvsge (_size!394 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!394 (v!2514 (underlying!257 thiss!992))) (bvadd (mask!6149 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!72492 () Bool)

(declare-fun res!38528 () Bool)

(assert (=> b!72492 (=> (not res!38528) (not e!47414))))

(assert (=> b!72492 (= res!38528 (bvsge (size!2094 (v!2514 (underlying!257 thiss!992))) (_size!394 (v!2514 (underlying!257 thiss!992)))))))

(declare-fun d!16609 () Bool)

(declare-fun res!38529 () Bool)

(assert (=> d!16609 (=> (not res!38529) (not e!47414))))

(assert (=> d!16609 (= res!38529 (validMask!0 (mask!6149 (v!2514 (underlying!257 thiss!992)))))))

(assert (=> d!16609 (= (simpleValid!50 (v!2514 (underlying!257 thiss!992))) e!47414)))

(declare-fun b!72493 () Bool)

(declare-fun res!38527 () Bool)

(assert (=> b!72493 (=> (not res!38527) (not e!47414))))

(assert (=> b!72493 (= res!38527 (= (size!2094 (v!2514 (underlying!257 thiss!992))) (bvadd (_size!394 (v!2514 (underlying!257 thiss!992))) (bvsdiv (bvadd (extraKeys!2055 (v!2514 (underlying!257 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!16609 res!38529) b!72491))

(assert (= (and b!72491 res!38530) b!72492))

(assert (= (and b!72492 res!38528) b!72493))

(assert (= (and b!72493 res!38527) b!72494))

(declare-fun m!70565 () Bool)

(assert (=> b!72492 m!70565))

(assert (=> d!16609 m!67891))

(assert (=> b!72493 m!70565))

(assert (=> d!15955 d!16609))

(declare-fun d!16611 () Bool)

(declare-fun res!38532 () Bool)

(declare-fun e!47415 () Bool)

(assert (=> d!16611 (=> res!38532 e!47415)))

(assert (=> d!16611 (= res!38532 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))))))

(assert (=> d!16611 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3840 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408))) e!47415)))

(declare-fun b!72495 () Bool)

(declare-fun e!47416 () Bool)

(assert (=> b!72495 (= e!47415 e!47416)))

(declare-fun c!10712 () Bool)

(assert (=> b!72495 (= c!10712 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000)))))

(declare-fun b!72496 () Bool)

(declare-fun e!47417 () Bool)

(declare-fun call!6317 () Bool)

(assert (=> b!72496 (= e!47417 call!6317)))

(declare-fun bm!6314 () Bool)

(assert (=> bm!6314 (= call!6317 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3840 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408))))))

(declare-fun b!72497 () Bool)

(assert (=> b!72497 (= e!47416 call!6317)))

(declare-fun b!72498 () Bool)

(assert (=> b!72498 (= e!47416 e!47417)))

(declare-fun lt!32303 () (_ BitVec 64))

(assert (=> b!72498 (= lt!32303 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000))))

(declare-fun lt!32304 () Unit!2002)

(assert (=> b!72498 (= lt!32304 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3840 (_2!1069 lt!31408)) lt!32303 #b00000000000000000000000000000000))))

(assert (=> b!72498 (arrayContainsKey!0 (_keys!3840 (_2!1069 lt!31408)) lt!32303 #b00000000000000000000000000000000)))

(declare-fun lt!32302 () Unit!2002)

(assert (=> b!72498 (= lt!32302 lt!32304)))

(declare-fun res!38531 () Bool)

(assert (=> b!72498 (= res!38531 (= (seekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000) (_keys!3840 (_2!1069 lt!31408)) (mask!6149 (_2!1069 lt!31408))) (Found!235 #b00000000000000000000000000000000)))))

(assert (=> b!72498 (=> (not res!38531) (not e!47417))))

(assert (= (and d!16611 (not res!38532)) b!72495))

(assert (= (and b!72495 c!10712) b!72498))

(assert (= (and b!72495 (not c!10712)) b!72497))

(assert (= (and b!72498 res!38531) b!72496))

(assert (= (or b!72496 b!72497) bm!6314))

(assert (=> b!72495 m!69751))

(assert (=> b!72495 m!69751))

(assert (=> b!72495 m!69765))

(declare-fun m!70567 () Bool)

(assert (=> bm!6314 m!70567))

(assert (=> b!72498 m!69751))

(declare-fun m!70569 () Bool)

(assert (=> b!72498 m!70569))

(declare-fun m!70571 () Bool)

(assert (=> b!72498 m!70571))

(assert (=> b!72498 m!69751))

(declare-fun m!70573 () Bool)

(assert (=> b!72498 m!70573))

(assert (=> b!71279 d!16611))

(assert (=> b!71210 d!16131))

(declare-fun b!72502 () Bool)

(declare-fun e!47419 () Option!138)

(assert (=> b!72502 (= e!47419 None!136)))

(declare-fun b!72500 () Bool)

(declare-fun e!47418 () Option!138)

(assert (=> b!72500 (= e!47418 e!47419)))

(declare-fun c!10714 () Bool)

(assert (=> b!72500 (= c!10714 (and ((_ is Cons!1472) (toList!723 lt!31581)) (not (= (_1!1068 (h!2058 (toList!723 lt!31581))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun b!72499 () Bool)

(assert (=> b!72499 (= e!47418 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31581)))))))

(declare-fun c!10713 () Bool)

(declare-fun d!16613 () Bool)

(assert (=> d!16613 (= c!10713 (and ((_ is Cons!1472) (toList!723 lt!31581)) (= (_1!1068 (h!2058 (toList!723 lt!31581))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!16613 (= (getValueByKey!132 (toList!723 lt!31581) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) e!47418)))

(declare-fun b!72501 () Bool)

(assert (=> b!72501 (= e!47419 (getValueByKey!132 (t!5012 (toList!723 lt!31581)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (= (and d!16613 c!10713) b!72499))

(assert (= (and d!16613 (not c!10713)) b!72500))

(assert (= (and b!72500 c!10714) b!72501))

(assert (= (and b!72500 (not c!10714)) b!72502))

(declare-fun m!70575 () Bool)

(assert (=> b!72501 m!70575))

(assert (=> b!71250 d!16613))

(assert (=> b!71577 d!16381))

(declare-fun d!16615 () Bool)

(declare-fun res!38533 () Bool)

(declare-fun e!47420 () Bool)

(assert (=> d!16615 (=> res!38533 e!47420)))

(assert (=> d!16615 (= res!38533 (and ((_ is Cons!1472) (toList!723 lt!31423)) (= (_1!1068 (h!2058 (toList!723 lt!31423))) (_1!1068 lt!31269))))))

(assert (=> d!16615 (= (containsKey!136 (toList!723 lt!31423) (_1!1068 lt!31269)) e!47420)))

(declare-fun b!72503 () Bool)

(declare-fun e!47421 () Bool)

(assert (=> b!72503 (= e!47420 e!47421)))

(declare-fun res!38534 () Bool)

(assert (=> b!72503 (=> (not res!38534) (not e!47421))))

(assert (=> b!72503 (= res!38534 (and (or (not ((_ is Cons!1472) (toList!723 lt!31423))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31423))) (_1!1068 lt!31269))) ((_ is Cons!1472) (toList!723 lt!31423)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31423))) (_1!1068 lt!31269))))))

(declare-fun b!72504 () Bool)

(assert (=> b!72504 (= e!47421 (containsKey!136 (t!5012 (toList!723 lt!31423)) (_1!1068 lt!31269)))))

(assert (= (and d!16615 (not res!38533)) b!72503))

(assert (= (and b!72503 res!38534) b!72504))

(declare-fun m!70577 () Bool)

(assert (=> b!72504 m!70577))

(assert (=> d!15843 d!16615))

(declare-fun d!16617 () Bool)

(declare-fun res!38535 () Bool)

(declare-fun e!47422 () Bool)

(assert (=> d!16617 (=> res!38535 e!47422)))

(assert (=> d!16617 (= res!38535 (and ((_ is Cons!1472) (toList!723 lt!31459)) (= (_1!1068 (h!2058 (toList!723 lt!31459))) (_1!1068 lt!31265))))))

(assert (=> d!16617 (= (containsKey!136 (toList!723 lt!31459) (_1!1068 lt!31265)) e!47422)))

(declare-fun b!72505 () Bool)

(declare-fun e!47423 () Bool)

(assert (=> b!72505 (= e!47422 e!47423)))

(declare-fun res!38536 () Bool)

(assert (=> b!72505 (=> (not res!38536) (not e!47423))))

(assert (=> b!72505 (= res!38536 (and (or (not ((_ is Cons!1472) (toList!723 lt!31459))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31459))) (_1!1068 lt!31265))) ((_ is Cons!1472) (toList!723 lt!31459)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31459))) (_1!1068 lt!31265))))))

(declare-fun b!72506 () Bool)

(assert (=> b!72506 (= e!47423 (containsKey!136 (t!5012 (toList!723 lt!31459)) (_1!1068 lt!31265)))))

(assert (= (and d!16617 (not res!38535)) b!72505))

(assert (= (and b!72505 res!38536) b!72506))

(declare-fun m!70579 () Bool)

(assert (=> b!72506 m!70579))

(assert (=> d!15861 d!16617))

(declare-fun d!16619 () Bool)

(declare-fun res!38537 () Bool)

(declare-fun e!47424 () Bool)

(assert (=> d!16619 (=> res!38537 e!47424)))

(assert (=> d!16619 (= res!38537 (and ((_ is Cons!1472) (toList!723 lt!31444)) (= (_1!1068 (h!2058 (toList!723 lt!31444))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16619 (= (containsKey!136 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000) e!47424)))

(declare-fun b!72507 () Bool)

(declare-fun e!47425 () Bool)

(assert (=> b!72507 (= e!47424 e!47425)))

(declare-fun res!38538 () Bool)

(assert (=> b!72507 (=> (not res!38538) (not e!47425))))

(assert (=> b!72507 (= res!38538 (and (or (not ((_ is Cons!1472) (toList!723 lt!31444))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31444))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1472) (toList!723 lt!31444)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31444))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72508 () Bool)

(assert (=> b!72508 (= e!47425 (containsKey!136 (t!5012 (toList!723 lt!31444)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16619 (not res!38537)) b!72507))

(assert (= (and b!72507 res!38538) b!72508))

(declare-fun m!70581 () Bool)

(assert (=> b!72508 m!70581))

(assert (=> d!15957 d!16619))

(declare-fun d!16621 () Bool)

(assert (=> d!16621 (= (apply!74 lt!31705 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (getValueByKey!132 (toList!723 lt!31705) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3117 () Bool)

(assert (= bs!3117 d!16621))

(assert (=> bs!3117 m!68283))

(assert (=> bs!3117 m!69199))

(assert (=> bs!3117 m!69199))

(declare-fun m!70583 () Bool)

(assert (=> bs!3117 m!70583))

(assert (=> b!71424 d!16621))

(declare-fun d!16623 () Bool)

(declare-fun c!10715 () Bool)

(assert (=> d!16623 (= c!10715 ((_ is ValueCellFull!891) (select (arr!1854 (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!47426 () V!2939)

(assert (=> d!16623 (= (get!1133 (select (arr!1854 (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47426)))

(declare-fun b!72509 () Bool)

(assert (=> b!72509 (= e!47426 (get!1134 (select (arr!1854 (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72510 () Bool)

(assert (=> b!72510 (= e!47426 (get!1135 (select (arr!1854 (ite (or c!10286 c!10290) (_values!2175 newMap!16) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (index!3071 lt!31406) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16623 c!10715) b!72509))

(assert (= (and d!16623 (not c!10715)) b!72510))

(assert (=> b!72509 m!68675))

(assert (=> b!72509 m!68287))

(declare-fun m!70585 () Bool)

(assert (=> b!72509 m!70585))

(assert (=> b!72510 m!68675))

(assert (=> b!72510 m!68287))

(declare-fun m!70587 () Bool)

(assert (=> b!72510 m!70587))

(assert (=> b!71424 d!16623))

(declare-fun d!16625 () Bool)

(assert (=> d!16625 (= ($colon$colon!65 e!46619 (ite c!10345 (h!2058 (toList!723 (+!93 lt!31270 lt!31265))) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269)))) (Cons!1472 (ite c!10345 (h!2058 (toList!723 (+!93 lt!31270 lt!31265))) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))) e!46619))))

(assert (=> bm!6163 d!16625))

(declare-fun b!72514 () Bool)

(declare-fun e!47428 () Option!138)

(assert (=> b!72514 (= e!47428 None!136)))

(declare-fun b!72512 () Bool)

(declare-fun e!47427 () Option!138)

(assert (=> b!72512 (= e!47427 e!47428)))

(declare-fun c!10717 () Bool)

(assert (=> b!72512 (= c!10717 (and ((_ is Cons!1472) (toList!723 lt!31589)) (not (= (_1!1068 (h!2058 (toList!723 lt!31589))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun b!72511 () Bool)

(assert (=> b!72511 (= e!47427 (Some!137 (_2!1068 (h!2058 (toList!723 lt!31589)))))))

(declare-fun c!10716 () Bool)

(declare-fun d!16627 () Bool)

(assert (=> d!16627 (= c!10716 (and ((_ is Cons!1472) (toList!723 lt!31589)) (= (_1!1068 (h!2058 (toList!723 lt!31589))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!16627 (= (getValueByKey!132 (toList!723 lt!31589) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) e!47427)))

(declare-fun b!72513 () Bool)

(assert (=> b!72513 (= e!47428 (getValueByKey!132 (t!5012 (toList!723 lt!31589)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (= (and d!16627 c!10716) b!72511))

(assert (= (and d!16627 (not c!10716)) b!72512))

(assert (= (and b!72512 c!10717) b!72513))

(assert (= (and b!72512 (not c!10717)) b!72514))

(declare-fun m!70589 () Bool)

(assert (=> b!72513 m!70589))

(assert (=> b!71254 d!16627))

(declare-fun d!16629 () Bool)

(assert (=> d!16629 (= (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31510)) (v!2518 (getValueByKey!132 (toList!723 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31510)))))

(assert (=> d!15985 d!16629))

(declare-fun b!72518 () Bool)

(declare-fun e!47430 () Option!138)

(assert (=> b!72518 (= e!47430 None!136)))

(declare-fun b!72516 () Bool)

(declare-fun e!47429 () Option!138)

(assert (=> b!72516 (= e!47429 e!47430)))

(declare-fun c!10719 () Bool)

(assert (=> b!72516 (= c!10719 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) (not (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31510))))))

(declare-fun b!72515 () Bool)

(assert (=> b!72515 (= e!47429 (Some!137 (_2!1068 (h!2058 (toList!723 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))))))))

(declare-fun d!16631 () Bool)

(declare-fun c!10718 () Bool)

(assert (=> d!16631 (= c!10718 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))))) lt!31510)))))

(assert (=> d!16631 (= (getValueByKey!132 (toList!723 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992)))))) lt!31510) e!47429)))

(declare-fun b!72517 () Bool)

(assert (=> b!72517 (= e!47430 (getValueByKey!132 (t!5012 (toList!723 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))))) lt!31510))))

(assert (= (and d!16631 c!10718) b!72515))

(assert (= (and d!16631 (not c!10718)) b!72516))

(assert (= (and b!72516 c!10719) b!72517))

(assert (= (and b!72516 (not c!10719)) b!72518))

(declare-fun m!70591 () Bool)

(assert (=> b!72517 m!70591))

(assert (=> d!15985 d!16631))

(declare-fun d!16633 () Bool)

(assert (=> d!16633 (= ($colon$colon!65 e!46679 (ite c!10376 (h!2058 (toList!723 lt!31270)) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265)))) (Cons!1472 (ite c!10376 (h!2058 (toList!723 lt!31270)) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))) e!46679))))

(assert (=> bm!6179 d!16633))

(declare-fun d!16635 () Bool)

(declare-fun e!47431 () Bool)

(assert (=> d!16635 e!47431))

(declare-fun res!38539 () Bool)

(assert (=> d!16635 (=> res!38539 e!47431)))

(declare-fun lt!32307 () Bool)

(assert (=> d!16635 (= res!38539 (not lt!32307))))

(declare-fun lt!32306 () Bool)

(assert (=> d!16635 (= lt!32307 lt!32306)))

(declare-fun lt!32305 () Unit!2002)

(declare-fun e!47432 () Unit!2002)

(assert (=> d!16635 (= lt!32305 e!47432)))

(declare-fun c!10720 () Bool)

(assert (=> d!16635 (= c!10720 lt!32306)))

(assert (=> d!16635 (= lt!32306 (containsKey!136 (toList!723 lt!31581) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!16635 (= (contains!719 lt!31581 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!32307)))

(declare-fun b!72519 () Bool)

(declare-fun lt!32308 () Unit!2002)

(assert (=> b!72519 (= e!47432 lt!32308)))

(assert (=> b!72519 (= lt!32308 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31581) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> b!72519 (isDefined!85 (getValueByKey!132 (toList!723 lt!31581) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!72520 () Bool)

(declare-fun Unit!2066 () Unit!2002)

(assert (=> b!72520 (= e!47432 Unit!2066)))

(declare-fun b!72521 () Bool)

(assert (=> b!72521 (= e!47431 (isDefined!85 (getValueByKey!132 (toList!723 lt!31581) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (= (and d!16635 c!10720) b!72519))

(assert (= (and d!16635 (not c!10720)) b!72520))

(assert (= (and d!16635 (not res!38539)) b!72521))

(declare-fun m!70593 () Bool)

(assert (=> d!16635 m!70593))

(declare-fun m!70595 () Bool)

(assert (=> b!72519 m!70595))

(assert (=> b!72519 m!68391))

(assert (=> b!72519 m!68391))

(declare-fun m!70597 () Bool)

(assert (=> b!72519 m!70597))

(assert (=> b!72521 m!68391))

(assert (=> b!72521 m!68391))

(assert (=> b!72521 m!70597))

(assert (=> d!15873 d!16635))

(declare-fun b!72525 () Bool)

(declare-fun e!47434 () Option!138)

(assert (=> b!72525 (= e!47434 None!136)))

(declare-fun b!72523 () Bool)

(declare-fun e!47433 () Option!138)

(assert (=> b!72523 (= e!47433 e!47434)))

(declare-fun c!10722 () Bool)

(assert (=> b!72523 (= c!10722 (and ((_ is Cons!1472) lt!31582) (not (= (_1!1068 (h!2058 lt!31582)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun b!72522 () Bool)

(assert (=> b!72522 (= e!47433 (Some!137 (_2!1068 (h!2058 lt!31582))))))

(declare-fun d!16637 () Bool)

(declare-fun c!10721 () Bool)

(assert (=> d!16637 (= c!10721 (and ((_ is Cons!1472) lt!31582) (= (_1!1068 (h!2058 lt!31582)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!16637 (= (getValueByKey!132 lt!31582 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) e!47433)))

(declare-fun b!72524 () Bool)

(assert (=> b!72524 (= e!47434 (getValueByKey!132 (t!5012 lt!31582) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (= (and d!16637 c!10721) b!72522))

(assert (= (and d!16637 (not c!10721)) b!72523))

(assert (= (and b!72523 c!10722) b!72524))

(assert (= (and b!72523 (not c!10722)) b!72525))

(declare-fun m!70599 () Bool)

(assert (=> b!72524 m!70599))

(assert (=> d!15873 d!16637))

(declare-fun d!16639 () Bool)

(assert (=> d!16639 (= (getValueByKey!132 lt!31582 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun lt!32309 () Unit!2002)

(assert (=> d!16639 (= lt!32309 (choose!397 lt!31582 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun e!47435 () Bool)

(assert (=> d!16639 e!47435))

(declare-fun res!38540 () Bool)

(assert (=> d!16639 (=> (not res!38540) (not e!47435))))

(assert (=> d!16639 (= res!38540 (isStrictlySorted!291 lt!31582))))

(assert (=> d!16639 (= (lemmaContainsTupThenGetReturnValue!49 lt!31582 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!32309)))

(declare-fun b!72526 () Bool)

(declare-fun res!38541 () Bool)

(assert (=> b!72526 (=> (not res!38541) (not e!47435))))

(assert (=> b!72526 (= res!38541 (containsKey!136 lt!31582 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!72527 () Bool)

(assert (=> b!72527 (= e!47435 (contains!722 lt!31582 (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (= (and d!16639 res!38540) b!72526))

(assert (= (and b!72526 res!38541) b!72527))

(assert (=> d!16639 m!68385))

(declare-fun m!70601 () Bool)

(assert (=> d!16639 m!70601))

(declare-fun m!70603 () Bool)

(assert (=> d!16639 m!70603))

(declare-fun m!70605 () Bool)

(assert (=> b!72526 m!70605))

(declare-fun m!70607 () Bool)

(assert (=> b!72527 m!70607))

(assert (=> d!15873 d!16639))

(declare-fun bm!6315 () Bool)

(declare-fun call!6320 () List!1476)

(declare-fun call!6318 () List!1476)

(assert (=> bm!6315 (= call!6320 call!6318)))

(declare-fun b!72528 () Bool)

(declare-fun e!47437 () List!1476)

(declare-fun call!6319 () List!1476)

(assert (=> b!72528 (= e!47437 call!6319)))

(declare-fun c!10725 () Bool)

(declare-fun e!47436 () List!1476)

(declare-fun bm!6316 () Bool)

(assert (=> bm!6316 (= call!6318 ($colon$colon!65 e!47436 (ite c!10725 (h!2058 (toList!723 lt!31270)) (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun c!10726 () Bool)

(assert (=> bm!6316 (= c!10726 c!10725)))

(declare-fun c!10723 () Bool)

(declare-fun b!72530 () Bool)

(assert (=> b!72530 (= c!10723 (and ((_ is Cons!1472) (toList!723 lt!31270)) (bvsgt (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun e!47440 () List!1476)

(assert (=> b!72530 (= e!47440 e!47437)))

(declare-fun b!72531 () Bool)

(assert (=> b!72531 (= e!47440 call!6320)))

(declare-fun b!72532 () Bool)

(assert (=> b!72532 (= e!47437 call!6319)))

(declare-fun b!72533 () Bool)

(declare-fun e!47439 () List!1476)

(assert (=> b!72533 (= e!47439 e!47440)))

(declare-fun c!10724 () Bool)

(assert (=> b!72533 (= c!10724 (and ((_ is Cons!1472) (toList!723 lt!31270)) (= (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72534 () Bool)

(declare-fun res!38543 () Bool)

(declare-fun e!47438 () Bool)

(assert (=> b!72534 (=> (not res!38543) (not e!47438))))

(declare-fun lt!32310 () List!1476)

(assert (=> b!72534 (= res!38543 (containsKey!136 lt!32310 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!72535 () Bool)

(assert (=> b!72535 (= e!47438 (contains!722 lt!32310 (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72536 () Bool)

(assert (=> b!72536 (= e!47436 (ite c!10724 (t!5012 (toList!723 lt!31270)) (ite c!10723 (Cons!1472 (h!2058 (toList!723 lt!31270)) (t!5012 (toList!723 lt!31270))) Nil!1473)))))

(declare-fun b!72529 () Bool)

(assert (=> b!72529 (= e!47439 call!6318)))

(declare-fun d!16641 () Bool)

(assert (=> d!16641 e!47438))

(declare-fun res!38542 () Bool)

(assert (=> d!16641 (=> (not res!38542) (not e!47438))))

(assert (=> d!16641 (= res!38542 (isStrictlySorted!291 lt!32310))))

(assert (=> d!16641 (= lt!32310 e!47439)))

(assert (=> d!16641 (= c!10725 (and ((_ is Cons!1472) (toList!723 lt!31270)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31270))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!16641 (isStrictlySorted!291 (toList!723 lt!31270))))

(assert (=> d!16641 (= (insertStrictlySorted!52 (toList!723 lt!31270) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!32310)))

(declare-fun b!72537 () Bool)

(assert (=> b!72537 (= e!47436 (insertStrictlySorted!52 (t!5012 (toList!723 lt!31270)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun bm!6317 () Bool)

(assert (=> bm!6317 (= call!6319 call!6320)))

(assert (= (and d!16641 c!10725) b!72529))

(assert (= (and d!16641 (not c!10725)) b!72533))

(assert (= (and b!72533 c!10724) b!72531))

(assert (= (and b!72533 (not c!10724)) b!72530))

(assert (= (and b!72530 c!10723) b!72528))

(assert (= (and b!72530 (not c!10723)) b!72532))

(assert (= (or b!72528 b!72532) bm!6317))

(assert (= (or b!72531 bm!6317) bm!6315))

(assert (= (or b!72529 bm!6315) bm!6316))

(assert (= (and bm!6316 c!10726) b!72537))

(assert (= (and bm!6316 (not c!10726)) b!72536))

(assert (= (and d!16641 res!38542) b!72534))

(assert (= (and b!72534 res!38543) b!72535))

(declare-fun m!70609 () Bool)

(assert (=> b!72534 m!70609))

(declare-fun m!70611 () Bool)

(assert (=> b!72537 m!70611))

(declare-fun m!70613 () Bool)

(assert (=> b!72535 m!70613))

(declare-fun m!70615 () Bool)

(assert (=> bm!6316 m!70615))

(declare-fun m!70617 () Bool)

(assert (=> d!16641 m!70617))

(assert (=> d!16641 m!68459))

(assert (=> d!15873 d!16641))

(declare-fun d!16643 () Bool)

(declare-fun e!47441 () Bool)

(assert (=> d!16643 e!47441))

(declare-fun res!38544 () Bool)

(assert (=> d!16643 (=> res!38544 e!47441)))

(declare-fun lt!32313 () Bool)

(assert (=> d!16643 (= res!38544 (not lt!32313))))

(declare-fun lt!32312 () Bool)

(assert (=> d!16643 (= lt!32313 lt!32312)))

(declare-fun lt!32311 () Unit!2002)

(declare-fun e!47442 () Unit!2002)

(assert (=> d!16643 (= lt!32311 e!47442)))

(declare-fun c!10727 () Bool)

(assert (=> d!16643 (= c!10727 lt!32312)))

(assert (=> d!16643 (= lt!32312 (containsKey!136 (toList!723 lt!31635) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16643 (= (contains!719 lt!31635 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!32313)))

(declare-fun b!72538 () Bool)

(declare-fun lt!32314 () Unit!2002)

(assert (=> b!72538 (= e!47442 lt!32314)))

(assert (=> b!72538 (= lt!32314 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31635) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!72538 (isDefined!85 (getValueByKey!132 (toList!723 lt!31635) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!72539 () Bool)

(declare-fun Unit!2067 () Unit!2002)

(assert (=> b!72539 (= e!47442 Unit!2067)))

(declare-fun b!72540 () Bool)

(assert (=> b!72540 (= e!47441 (isDefined!85 (getValueByKey!132 (toList!723 lt!31635) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!16643 c!10727) b!72538))

(assert (= (and d!16643 (not c!10727)) b!72539))

(assert (= (and d!16643 (not res!38544)) b!72540))

(declare-fun m!70619 () Bool)

(assert (=> d!16643 m!70619))

(declare-fun m!70621 () Bool)

(assert (=> b!72538 m!70621))

(assert (=> b!72538 m!68545))

(assert (=> b!72538 m!68545))

(declare-fun m!70623 () Bool)

(assert (=> b!72538 m!70623))

(assert (=> b!72540 m!68545))

(assert (=> b!72540 m!68545))

(assert (=> b!72540 m!70623))

(assert (=> d!15917 d!16643))

(declare-fun b!72544 () Bool)

(declare-fun e!47444 () Option!138)

(assert (=> b!72544 (= e!47444 None!136)))

(declare-fun b!72542 () Bool)

(declare-fun e!47443 () Option!138)

(assert (=> b!72542 (= e!47443 e!47444)))

(declare-fun c!10729 () Bool)

(assert (=> b!72542 (= c!10729 (and ((_ is Cons!1472) lt!31636) (not (= (_1!1068 (h!2058 lt!31636)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!72541 () Bool)

(assert (=> b!72541 (= e!47443 (Some!137 (_2!1068 (h!2058 lt!31636))))))

(declare-fun d!16645 () Bool)

(declare-fun c!10728 () Bool)

(assert (=> d!16645 (= c!10728 (and ((_ is Cons!1472) lt!31636) (= (_1!1068 (h!2058 lt!31636)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!16645 (= (getValueByKey!132 lt!31636 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!47443)))

(declare-fun b!72543 () Bool)

(assert (=> b!72543 (= e!47444 (getValueByKey!132 (t!5012 lt!31636) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!16645 c!10728) b!72541))

(assert (= (and d!16645 (not c!10728)) b!72542))

(assert (= (and b!72542 c!10729) b!72543))

(assert (= (and b!72542 (not c!10729)) b!72544))

(declare-fun m!70625 () Bool)

(assert (=> b!72543 m!70625))

(assert (=> d!15917 d!16645))

(declare-fun d!16647 () Bool)

(assert (=> d!16647 (= (getValueByKey!132 lt!31636 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!32315 () Unit!2002)

(assert (=> d!16647 (= lt!32315 (choose!397 lt!31636 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!47445 () Bool)

(assert (=> d!16647 e!47445))

(declare-fun res!38545 () Bool)

(assert (=> d!16647 (=> (not res!38545) (not e!47445))))

(assert (=> d!16647 (= res!38545 (isStrictlySorted!291 lt!31636))))

(assert (=> d!16647 (= (lemmaContainsTupThenGetReturnValue!49 lt!31636 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!32315)))

(declare-fun b!72545 () Bool)

(declare-fun res!38546 () Bool)

(assert (=> b!72545 (=> (not res!38546) (not e!47445))))

(assert (=> b!72545 (= res!38546 (containsKey!136 lt!31636 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!72546 () Bool)

(assert (=> b!72546 (= e!47445 (contains!722 lt!31636 (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!16647 res!38545) b!72545))

(assert (= (and b!72545 res!38546) b!72546))

(assert (=> d!16647 m!68539))

(declare-fun m!70627 () Bool)

(assert (=> d!16647 m!70627))

(declare-fun m!70629 () Bool)

(assert (=> d!16647 m!70629))

(declare-fun m!70631 () Bool)

(assert (=> b!72545 m!70631))

(declare-fun m!70633 () Bool)

(assert (=> b!72546 m!70633))

(assert (=> d!15917 d!16647))

(declare-fun bm!6318 () Bool)

(declare-fun call!6323 () List!1476)

(declare-fun call!6321 () List!1476)

(assert (=> bm!6318 (= call!6323 call!6321)))

(declare-fun b!72547 () Bool)

(declare-fun e!47447 () List!1476)

(declare-fun call!6322 () List!1476)

(assert (=> b!72547 (= e!47447 call!6322)))

(declare-fun c!10732 () Bool)

(declare-fun e!47446 () List!1476)

(declare-fun bm!6319 () Bool)

(assert (=> bm!6319 (= call!6321 ($colon$colon!65 e!47446 (ite c!10732 (h!2058 (toList!723 call!6137)) (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!10733 () Bool)

(assert (=> bm!6319 (= c!10733 c!10732)))

(declare-fun c!10730 () Bool)

(declare-fun b!72549 () Bool)

(assert (=> b!72549 (= c!10730 (and ((_ is Cons!1472) (toList!723 call!6137)) (bvsgt (_1!1068 (h!2058 (toList!723 call!6137))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!47450 () List!1476)

(assert (=> b!72549 (= e!47450 e!47447)))

(declare-fun b!72550 () Bool)

(assert (=> b!72550 (= e!47450 call!6323)))

(declare-fun b!72551 () Bool)

(assert (=> b!72551 (= e!47447 call!6322)))

(declare-fun b!72552 () Bool)

(declare-fun e!47449 () List!1476)

(assert (=> b!72552 (= e!47449 e!47450)))

(declare-fun c!10731 () Bool)

(assert (=> b!72552 (= c!10731 (and ((_ is Cons!1472) (toList!723 call!6137)) (= (_1!1068 (h!2058 (toList!723 call!6137))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!72553 () Bool)

(declare-fun res!38548 () Bool)

(declare-fun e!47448 () Bool)

(assert (=> b!72553 (=> (not res!38548) (not e!47448))))

(declare-fun lt!32316 () List!1476)

(assert (=> b!72553 (= res!38548 (containsKey!136 lt!32316 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!72554 () Bool)

(assert (=> b!72554 (= e!47448 (contains!722 lt!32316 (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!72555 () Bool)

(assert (=> b!72555 (= e!47446 (ite c!10731 (t!5012 (toList!723 call!6137)) (ite c!10730 (Cons!1472 (h!2058 (toList!723 call!6137)) (t!5012 (toList!723 call!6137))) Nil!1473)))))

(declare-fun b!72548 () Bool)

(assert (=> b!72548 (= e!47449 call!6321)))

(declare-fun d!16649 () Bool)

(assert (=> d!16649 e!47448))

(declare-fun res!38547 () Bool)

(assert (=> d!16649 (=> (not res!38547) (not e!47448))))

(assert (=> d!16649 (= res!38547 (isStrictlySorted!291 lt!32316))))

(assert (=> d!16649 (= lt!32316 e!47449)))

(assert (=> d!16649 (= c!10732 (and ((_ is Cons!1472) (toList!723 call!6137)) (bvslt (_1!1068 (h!2058 (toList!723 call!6137))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!16649 (isStrictlySorted!291 (toList!723 call!6137))))

(assert (=> d!16649 (= (insertStrictlySorted!52 (toList!723 call!6137) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!32316)))

(declare-fun b!72556 () Bool)

(assert (=> b!72556 (= e!47446 (insertStrictlySorted!52 (t!5012 (toList!723 call!6137)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!6320 () Bool)

(assert (=> bm!6320 (= call!6322 call!6323)))

(assert (= (and d!16649 c!10732) b!72548))

(assert (= (and d!16649 (not c!10732)) b!72552))

(assert (= (and b!72552 c!10731) b!72550))

(assert (= (and b!72552 (not c!10731)) b!72549))

(assert (= (and b!72549 c!10730) b!72547))

(assert (= (and b!72549 (not c!10730)) b!72551))

(assert (= (or b!72547 b!72551) bm!6320))

(assert (= (or b!72550 bm!6320) bm!6318))

(assert (= (or b!72548 bm!6318) bm!6319))

(assert (= (and bm!6319 c!10733) b!72556))

(assert (= (and bm!6319 (not c!10733)) b!72555))

(assert (= (and d!16649 res!38547) b!72553))

(assert (= (and b!72553 res!38548) b!72554))

(declare-fun m!70635 () Bool)

(assert (=> b!72553 m!70635))

(declare-fun m!70637 () Bool)

(assert (=> b!72556 m!70637))

(declare-fun m!70639 () Bool)

(assert (=> b!72554 m!70639))

(declare-fun m!70641 () Bool)

(assert (=> bm!6319 m!70641))

(declare-fun m!70643 () Bool)

(assert (=> d!16649 m!70643))

(declare-fun m!70645 () Bool)

(assert (=> d!16649 m!70645))

(assert (=> d!15917 d!16649))

(declare-fun d!16651 () Bool)

(assert (=> d!16651 (= (apply!74 lt!31672 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (getValueByKey!132 (toList!723 lt!31672) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3118 () Bool)

(assert (= bs!3118 d!16651))

(assert (=> bs!3118 m!68283))

(assert (=> bs!3118 m!69375))

(assert (=> bs!3118 m!69375))

(declare-fun m!70647 () Bool)

(assert (=> bs!3118 m!70647))

(assert (=> b!71391 d!16651))

(declare-fun d!16653 () Bool)

(declare-fun c!10734 () Bool)

(assert (=> d!16653 (= c!10734 ((_ is ValueCellFull!891) (select (arr!1854 (ite c!10286 (_values!2175 newMap!16) lt!31387)) #b00000000000000000000000000000000)))))

(declare-fun e!47451 () V!2939)

(assert (=> d!16653 (= (get!1133 (select (arr!1854 (ite c!10286 (_values!2175 newMap!16) lt!31387)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47451)))

(declare-fun b!72557 () Bool)

(assert (=> b!72557 (= e!47451 (get!1134 (select (arr!1854 (ite c!10286 (_values!2175 newMap!16) lt!31387)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72558 () Bool)

(assert (=> b!72558 (= e!47451 (get!1135 (select (arr!1854 (ite c!10286 (_values!2175 newMap!16) lt!31387)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16653 c!10734) b!72557))

(assert (= (and d!16653 (not c!10734)) b!72558))

(assert (=> b!72557 m!68603))

(assert (=> b!72557 m!68287))

(declare-fun m!70649 () Bool)

(assert (=> b!72557 m!70649))

(assert (=> b!72558 m!68603))

(assert (=> b!72558 m!68287))

(declare-fun m!70651 () Bool)

(assert (=> b!72558 m!70651))

(assert (=> b!71391 d!16653))

(declare-fun d!16655 () Bool)

(declare-fun lt!32317 () Bool)

(assert (=> d!16655 (= lt!32317 (select (content!76 (toList!723 lt!31739)) (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun e!47452 () Bool)

(assert (=> d!16655 (= lt!32317 e!47452)))

(declare-fun res!38550 () Bool)

(assert (=> d!16655 (=> (not res!38550) (not e!47452))))

(assert (=> d!16655 (= res!38550 ((_ is Cons!1472) (toList!723 lt!31739)))))

(assert (=> d!16655 (= (contains!722 (toList!723 lt!31739) (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!32317)))

(declare-fun b!72559 () Bool)

(declare-fun e!47453 () Bool)

(assert (=> b!72559 (= e!47452 e!47453)))

(declare-fun res!38549 () Bool)

(assert (=> b!72559 (=> res!38549 e!47453)))

(assert (=> b!72559 (= res!38549 (= (h!2058 (toList!723 lt!31739)) (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(declare-fun b!72560 () Bool)

(assert (=> b!72560 (= e!47453 (contains!722 (t!5012 (toList!723 lt!31739)) (tuple2!2115 lt!31515 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))))

(assert (= (and d!16655 res!38550) b!72559))

(assert (= (and b!72559 (not res!38549)) b!72560))

(declare-fun m!70653 () Bool)

(assert (=> d!16655 m!70653))

(declare-fun m!70655 () Bool)

(assert (=> d!16655 m!70655))

(declare-fun m!70657 () Bool)

(assert (=> b!72560 m!70657))

(assert (=> b!71478 d!16655))

(declare-fun d!16657 () Bool)

(assert (=> d!16657 (isDefined!85 (getValueByKey!132 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32318 () Unit!2002)

(assert (=> d!16657 (= lt!32318 (choose!404 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47454 () Bool)

(assert (=> d!16657 e!47454))

(declare-fun res!38551 () Bool)

(assert (=> d!16657 (=> (not res!38551) (not e!47454))))

(assert (=> d!16657 (= res!38551 (isStrictlySorted!291 (toList!723 lt!31444)))))

(assert (=> d!16657 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000) lt!32318)))

(declare-fun b!72561 () Bool)

(assert (=> b!72561 (= e!47454 (containsKey!136 (toList!723 lt!31444) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16657 res!38551) b!72561))

(assert (=> d!16657 m!68759))

(assert (=> d!16657 m!68759))

(assert (=> d!16657 m!68761))

(declare-fun m!70659 () Bool)

(assert (=> d!16657 m!70659))

(assert (=> d!16657 m!69445))

(assert (=> b!72561 m!68755))

(assert (=> b!71459 d!16657))

(assert (=> b!71459 d!16135))

(assert (=> b!71459 d!16137))

(assert (=> b!71372 d!16585))

(declare-fun d!16659 () Bool)

(declare-fun e!47455 () Bool)

(assert (=> d!16659 e!47455))

(declare-fun res!38552 () Bool)

(assert (=> d!16659 (=> res!38552 e!47455)))

(declare-fun lt!32321 () Bool)

(assert (=> d!16659 (= res!38552 (not lt!32321))))

(declare-fun lt!32320 () Bool)

(assert (=> d!16659 (= lt!32321 lt!32320)))

(declare-fun lt!32319 () Unit!2002)

(declare-fun e!47456 () Unit!2002)

(assert (=> d!16659 (= lt!32319 e!47456)))

(declare-fun c!10735 () Bool)

(assert (=> d!16659 (= c!10735 lt!32320)))

(assert (=> d!16659 (= lt!32320 (containsKey!136 (toList!723 lt!31868) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16659 (= (contains!719 lt!31868 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32321)))

(declare-fun b!72562 () Bool)

(declare-fun lt!32322 () Unit!2002)

(assert (=> b!72562 (= e!47456 lt!32322)))

(assert (=> b!72562 (= lt!32322 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31868) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72562 (isDefined!85 (getValueByKey!132 (toList!723 lt!31868) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72563 () Bool)

(declare-fun Unit!2068 () Unit!2002)

(assert (=> b!72563 (= e!47456 Unit!2068)))

(declare-fun b!72564 () Bool)

(assert (=> b!72564 (= e!47455 (isDefined!85 (getValueByKey!132 (toList!723 lt!31868) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16659 c!10735) b!72562))

(assert (= (and d!16659 (not c!10735)) b!72563))

(assert (= (and d!16659 (not res!38552)) b!72564))

(declare-fun m!70661 () Bool)

(assert (=> d!16659 m!70661))

(declare-fun m!70663 () Bool)

(assert (=> b!72562 m!70663))

(declare-fun m!70665 () Bool)

(assert (=> b!72562 m!70665))

(assert (=> b!72562 m!70665))

(declare-fun m!70667 () Bool)

(assert (=> b!72562 m!70667))

(assert (=> b!72564 m!70665))

(assert (=> b!72564 m!70665))

(assert (=> b!72564 m!70667))

(assert (=> b!71565 d!16659))

(declare-fun d!16661 () Bool)

(assert (=> d!16661 (isDefined!85 (getValueByKey!132 (toList!723 lt!31459) (_1!1068 lt!31265)))))

(declare-fun lt!32323 () Unit!2002)

(assert (=> d!16661 (= lt!32323 (choose!404 (toList!723 lt!31459) (_1!1068 lt!31265)))))

(declare-fun e!47457 () Bool)

(assert (=> d!16661 e!47457))

(declare-fun res!38553 () Bool)

(assert (=> d!16661 (=> (not res!38553) (not e!47457))))

(assert (=> d!16661 (= res!38553 (isStrictlySorted!291 (toList!723 lt!31459)))))

(assert (=> d!16661 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31459) (_1!1068 lt!31265)) lt!32323)))

(declare-fun b!72565 () Bool)

(assert (=> b!72565 (= e!47457 (containsKey!136 (toList!723 lt!31459) (_1!1068 lt!31265)))))

(assert (= (and d!16661 res!38553) b!72565))

(assert (=> d!16661 m!68167))

(assert (=> d!16661 m!68167))

(assert (=> d!16661 m!68347))

(declare-fun m!70669 () Bool)

(assert (=> d!16661 m!70669))

(declare-fun m!70671 () Bool)

(assert (=> d!16661 m!70671))

(assert (=> b!72565 m!68343))

(assert (=> b!71229 d!16661))

(assert (=> b!71229 d!16109))

(assert (=> b!71229 d!16033))

(declare-fun d!16663 () Bool)

(assert (=> d!16663 (= (inRange!0 (index!3071 lt!31729) (mask!6149 newMap!16)) (and (bvsge (index!3071 lt!31729) #b00000000000000000000000000000000) (bvslt (index!3071 lt!31729) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!71466 d!16663))

(declare-fun d!16665 () Bool)

(declare-fun res!38554 () Bool)

(declare-fun e!47458 () Bool)

(assert (=> d!16665 (=> res!38554 e!47458)))

(assert (=> d!16665 (= res!38554 (and ((_ is Cons!1472) (toList!723 lt!31448)) (= (_1!1068 (h!2058 (toList!723 lt!31448))) (_1!1068 lt!31269))))))

(assert (=> d!16665 (= (containsKey!136 (toList!723 lt!31448) (_1!1068 lt!31269)) e!47458)))

(declare-fun b!72566 () Bool)

(declare-fun e!47459 () Bool)

(assert (=> b!72566 (= e!47458 e!47459)))

(declare-fun res!38555 () Bool)

(assert (=> b!72566 (=> (not res!38555) (not e!47459))))

(assert (=> b!72566 (= res!38555 (and (or (not ((_ is Cons!1472) (toList!723 lt!31448))) (bvsle (_1!1068 (h!2058 (toList!723 lt!31448))) (_1!1068 lt!31269))) ((_ is Cons!1472) (toList!723 lt!31448)) (bvslt (_1!1068 (h!2058 (toList!723 lt!31448))) (_1!1068 lt!31269))))))

(declare-fun b!72567 () Bool)

(assert (=> b!72567 (= e!47459 (containsKey!136 (t!5012 (toList!723 lt!31448)) (_1!1068 lt!31269)))))

(assert (= (and d!16665 (not res!38554)) b!72566))

(assert (= (and b!72566 res!38555) b!72567))

(declare-fun m!70673 () Bool)

(assert (=> b!72567 m!70673))

(assert (=> d!15885 d!16665))

(assert (=> bm!6215 d!16005))

(declare-fun d!16667 () Bool)

(assert (=> d!16667 (contains!719 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))

(declare-fun lt!32326 () Unit!2002)

(declare-fun choose!408 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 64) (_ BitVec 32) Int) Unit!2002)

(assert (=> d!16667 (= lt!32326 (choose!408 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(assert (=> d!16667 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16667 (= (lemmaArrayContainsKeyThenInListMap!12 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32326)))

(declare-fun bs!3119 () Bool)

(assert (= bs!3119 d!16667))

(assert (=> bs!3119 m!68051))

(assert (=> bs!3119 m!68051))

(assert (=> bs!3119 m!67893))

(assert (=> bs!3119 m!68055))

(assert (=> bs!3119 m!67893))

(declare-fun m!70675 () Bool)

(assert (=> bs!3119 m!70675))

(assert (=> bs!3119 m!68263))

(assert (=> b!71538 d!16667))

(assert (=> b!71538 d!15855))

(assert (=> b!71538 d!15857))

(declare-fun d!16669 () Bool)

(declare-fun e!47460 () Bool)

(assert (=> d!16669 e!47460))

(declare-fun res!38556 () Bool)

(assert (=> d!16669 (=> res!38556 e!47460)))

(declare-fun lt!32329 () Bool)

(assert (=> d!16669 (= res!38556 (not lt!32329))))

(declare-fun lt!32328 () Bool)

(assert (=> d!16669 (= lt!32329 lt!32328)))

(declare-fun lt!32327 () Unit!2002)

(declare-fun e!47461 () Unit!2002)

(assert (=> d!16669 (= lt!32327 e!47461)))

(declare-fun c!10736 () Bool)

(assert (=> d!16669 (= c!10736 lt!32328)))

(assert (=> d!16669 (= lt!32328 (containsKey!136 (toList!723 lt!31589) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> d!16669 (= (contains!719 lt!31589 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!32329)))

(declare-fun b!72568 () Bool)

(declare-fun lt!32330 () Unit!2002)

(assert (=> b!72568 (= e!47461 lt!32330)))

(assert (=> b!72568 (= lt!32330 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31589) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (=> b!72568 (isDefined!85 (getValueByKey!132 (toList!723 lt!31589) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!72569 () Bool)

(declare-fun Unit!2069 () Unit!2002)

(assert (=> b!72569 (= e!47461 Unit!2069)))

(declare-fun b!72570 () Bool)

(assert (=> b!72570 (= e!47460 (isDefined!85 (getValueByKey!132 (toList!723 lt!31589) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (= (and d!16669 c!10736) b!72568))

(assert (= (and d!16669 (not c!10736)) b!72569))

(assert (= (and d!16669 (not res!38556)) b!72570))

(declare-fun m!70677 () Bool)

(assert (=> d!16669 m!70677))

(declare-fun m!70679 () Bool)

(assert (=> b!72568 m!70679))

(assert (=> b!72568 m!68415))

(assert (=> b!72568 m!68415))

(declare-fun m!70681 () Bool)

(assert (=> b!72568 m!70681))

(assert (=> b!72570 m!68415))

(assert (=> b!72570 m!68415))

(assert (=> b!72570 m!70681))

(assert (=> d!15879 d!16669))

(declare-fun b!72574 () Bool)

(declare-fun e!47463 () Option!138)

(assert (=> b!72574 (= e!47463 None!136)))

(declare-fun b!72572 () Bool)

(declare-fun e!47462 () Option!138)

(assert (=> b!72572 (= e!47462 e!47463)))

(declare-fun c!10738 () Bool)

(assert (=> b!72572 (= c!10738 (and ((_ is Cons!1472) lt!31590) (not (= (_1!1068 (h!2058 lt!31590)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun b!72571 () Bool)

(assert (=> b!72571 (= e!47462 (Some!137 (_2!1068 (h!2058 lt!31590))))))

(declare-fun c!10737 () Bool)

(declare-fun d!16671 () Bool)

(assert (=> d!16671 (= c!10737 (and ((_ is Cons!1472) lt!31590) (= (_1!1068 (h!2058 lt!31590)) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!16671 (= (getValueByKey!132 lt!31590 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) e!47462)))

(declare-fun b!72573 () Bool)

(assert (=> b!72573 (= e!47463 (getValueByKey!132 (t!5012 lt!31590) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(assert (= (and d!16671 c!10737) b!72571))

(assert (= (and d!16671 (not c!10737)) b!72572))

(assert (= (and b!72572 c!10738) b!72573))

(assert (= (and b!72572 (not c!10738)) b!72574))

(declare-fun m!70683 () Bool)

(assert (=> b!72573 m!70683))

(assert (=> d!15879 d!16671))

(declare-fun d!16673 () Bool)

(assert (=> d!16673 (= (getValueByKey!132 lt!31590 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) (Some!137 (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun lt!32331 () Unit!2002)

(assert (=> d!16673 (= lt!32331 (choose!397 lt!31590 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun e!47464 () Bool)

(assert (=> d!16673 e!47464))

(declare-fun res!38557 () Bool)

(assert (=> d!16673 (=> (not res!38557) (not e!47464))))

(assert (=> d!16673 (= res!38557 (isStrictlySorted!291 lt!31590))))

(assert (=> d!16673 (= (lemmaContainsTupThenGetReturnValue!49 lt!31590 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!32331)))

(declare-fun b!72575 () Bool)

(declare-fun res!38558 () Bool)

(assert (=> b!72575 (=> (not res!38558) (not e!47464))))

(assert (=> b!72575 (= res!38558 (containsKey!136 lt!31590 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!72576 () Bool)

(assert (=> b!72576 (= e!47464 (contains!722 lt!31590 (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (= (and d!16673 res!38557) b!72575))

(assert (= (and b!72575 res!38558) b!72576))

(assert (=> d!16673 m!68409))

(declare-fun m!70685 () Bool)

(assert (=> d!16673 m!70685))

(declare-fun m!70687 () Bool)

(assert (=> d!16673 m!70687))

(declare-fun m!70689 () Bool)

(assert (=> b!72575 m!70689))

(declare-fun m!70691 () Bool)

(assert (=> b!72576 m!70691))

(assert (=> d!15879 d!16673))

(declare-fun bm!6321 () Bool)

(declare-fun call!6326 () List!1476)

(declare-fun call!6324 () List!1476)

(assert (=> bm!6321 (= call!6326 call!6324)))

(declare-fun b!72577 () Bool)

(declare-fun e!47466 () List!1476)

(declare-fun call!6325 () List!1476)

(assert (=> b!72577 (= e!47466 call!6325)))

(declare-fun c!10741 () Bool)

(declare-fun bm!6322 () Bool)

(declare-fun e!47465 () List!1476)

(assert (=> bm!6322 (= call!6324 ($colon$colon!65 e!47465 (ite c!10741 (h!2058 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))))

(declare-fun c!10742 () Bool)

(assert (=> bm!6322 (= c!10742 c!10741)))

(declare-fun c!10739 () Bool)

(declare-fun b!72579 () Bool)

(assert (=> b!72579 (= c!10739 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (bvsgt (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun e!47469 () List!1476)

(assert (=> b!72579 (= e!47469 e!47466)))

(declare-fun b!72580 () Bool)

(assert (=> b!72580 (= e!47469 call!6326)))

(declare-fun b!72581 () Bool)

(assert (=> b!72581 (= e!47466 call!6325)))

(declare-fun b!72582 () Bool)

(declare-fun e!47468 () List!1476)

(assert (=> b!72582 (= e!47468 e!47469)))

(declare-fun c!10740 () Bool)

(assert (=> b!72582 (= c!10740 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (= (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72583 () Bool)

(declare-fun res!38560 () Bool)

(declare-fun e!47467 () Bool)

(assert (=> b!72583 (=> (not res!38560) (not e!47467))))

(declare-fun lt!32332 () List!1476)

(assert (=> b!72583 (= res!38560 (containsKey!136 lt!32332 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun b!72584 () Bool)

(assert (=> b!72584 (= e!47467 (contains!722 lt!32332 (tuple2!2115 (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(declare-fun b!72585 () Bool)

(assert (=> b!72585 (= e!47465 (ite c!10740 (t!5012 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (ite c!10739 (Cons!1472 (h!2058 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (t!5012 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) Nil!1473)))))

(declare-fun b!72578 () Bool)

(assert (=> b!72578 (= e!47468 call!6324)))

(declare-fun d!16675 () Bool)

(assert (=> d!16675 e!47467))

(declare-fun res!38559 () Bool)

(assert (=> d!16675 (=> (not res!38559) (not e!47467))))

(assert (=> d!16675 (= res!38559 (isStrictlySorted!291 lt!32332))))

(assert (=> d!16675 (= lt!32332 e!47468)))

(assert (=> d!16675 (= c!10741 (and ((_ is Cons!1472) (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (bvslt (_1!1068 (h!2058 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))))

(assert (=> d!16675 (isStrictlySorted!291 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))))))

(assert (=> d!16675 (= (insertStrictlySorted!52 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992)))))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))) lt!32332)))

(declare-fun b!72586 () Bool)

(assert (=> b!72586 (= e!47465 (insertStrictlySorted!52 (t!5012 (toList!723 (+!93 lt!31270 (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 (v!2514 (underlying!257 thiss!992))))))) (_1!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (_2!1068 (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264))))))

(declare-fun bm!6323 () Bool)

(assert (=> bm!6323 (= call!6325 call!6326)))

(assert (= (and d!16675 c!10741) b!72578))

(assert (= (and d!16675 (not c!10741)) b!72582))

(assert (= (and b!72582 c!10740) b!72580))

(assert (= (and b!72582 (not c!10740)) b!72579))

(assert (= (and b!72579 c!10739) b!72577))

(assert (= (and b!72579 (not c!10739)) b!72581))

(assert (= (or b!72577 b!72581) bm!6323))

(assert (= (or b!72580 bm!6323) bm!6321))

(assert (= (or b!72578 bm!6321) bm!6322))

(assert (= (and bm!6322 c!10742) b!72586))

(assert (= (and bm!6322 (not c!10742)) b!72585))

(assert (= (and d!16675 res!38559) b!72583))

(assert (= (and b!72583 res!38560) b!72584))

(declare-fun m!70693 () Bool)

(assert (=> b!72583 m!70693))

(declare-fun m!70695 () Bool)

(assert (=> b!72586 m!70695))

(declare-fun m!70697 () Bool)

(assert (=> b!72584 m!70697))

(declare-fun m!70699 () Bool)

(assert (=> bm!6322 m!70699))

(declare-fun m!70701 () Bool)

(assert (=> d!16675 m!70701))

(declare-fun m!70703 () Bool)

(assert (=> d!16675 m!70703))

(assert (=> d!15879 d!16675))

(declare-fun d!16677 () Bool)

(assert (=> d!16677 (= (apply!74 lt!31564 (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (getValueByKey!132 (toList!723 lt!31564) (select (arr!1853 (_keys!3840 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3120 () Bool)

(assert (= bs!3120 d!16677))

(assert (=> bs!3120 m!68283))

(assert (=> bs!3120 m!69423))

(assert (=> bs!3120 m!69423))

(declare-fun m!70705 () Bool)

(assert (=> bs!3120 m!70705))

(assert (=> b!71217 d!16677))

(declare-fun d!16679 () Bool)

(declare-fun c!10743 () Bool)

(assert (=> d!16679 (= c!10743 ((_ is ValueCellFull!891) (select (arr!1854 (_values!2175 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!47470 () V!2939)

(assert (=> d!16679 (= (get!1133 (select (arr!1854 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47470)))

(declare-fun b!72587 () Bool)

(assert (=> b!72587 (= e!47470 (get!1134 (select (arr!1854 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72588 () Bool)

(assert (=> b!72588 (= e!47470 (get!1135 (select (arr!1854 (_values!2175 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16679 c!10743) b!72587))

(assert (= (and d!16679 (not c!10743)) b!72588))

(assert (=> b!72587 m!68291))

(assert (=> b!72587 m!68287))

(declare-fun m!70707 () Bool)

(assert (=> b!72587 m!70707))

(assert (=> b!72588 m!68291))

(assert (=> b!72588 m!68287))

(declare-fun m!70709 () Bool)

(assert (=> b!72588 m!70709))

(assert (=> b!71217 d!16679))

(declare-fun d!16681 () Bool)

(assert (=> d!16681 (isDefined!85 (getValueByKey!132 (toList!723 lt!31423) (_1!1068 lt!31269)))))

(declare-fun lt!32333 () Unit!2002)

(assert (=> d!16681 (= lt!32333 (choose!404 (toList!723 lt!31423) (_1!1068 lt!31269)))))

(declare-fun e!47471 () Bool)

(assert (=> d!16681 e!47471))

(declare-fun res!38561 () Bool)

(assert (=> d!16681 (=> (not res!38561) (not e!47471))))

(assert (=> d!16681 (= res!38561 (isStrictlySorted!291 (toList!723 lt!31423)))))

(assert (=> d!16681 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31423) (_1!1068 lt!31269)) lt!32333)))

(declare-fun b!72589 () Bool)

(assert (=> b!72589 (= e!47471 (containsKey!136 (toList!723 lt!31423) (_1!1068 lt!31269)))))

(assert (= (and d!16681 res!38561) b!72589))

(assert (=> d!16681 m!68095))

(assert (=> d!16681 m!68095))

(assert (=> d!16681 m!68237))

(declare-fun m!70711 () Bool)

(assert (=> d!16681 m!70711))

(declare-fun m!70713 () Bool)

(assert (=> d!16681 m!70713))

(assert (=> b!72589 m!68233))

(assert (=> b!71152 d!16681))

(assert (=> b!71152 d!16129))

(assert (=> b!71152 d!15933))

(assert (=> d!15943 d!16145))

(declare-fun d!16683 () Bool)

(assert (=> d!16683 (= (get!1136 (getValueByKey!132 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2518 (getValueByKey!132 (toList!723 lt!31444) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15923 d!16683))

(assert (=> d!15923 d!16573))

(declare-fun b!72593 () Bool)

(declare-fun e!47473 () Option!138)

(assert (=> b!72593 (= e!47473 None!136)))

(declare-fun b!72591 () Bool)

(declare-fun e!47472 () Option!138)

(assert (=> b!72591 (= e!47472 e!47473)))

(declare-fun c!10745 () Bool)

(assert (=> b!72591 (= c!10745 (and ((_ is Cons!1472) (t!5012 lt!31424)) (not (= (_1!1068 (h!2058 (t!5012 lt!31424))) (_1!1068 lt!31269)))))))

(declare-fun b!72590 () Bool)

(assert (=> b!72590 (= e!47472 (Some!137 (_2!1068 (h!2058 (t!5012 lt!31424)))))))

(declare-fun d!16685 () Bool)

(declare-fun c!10744 () Bool)

(assert (=> d!16685 (= c!10744 (and ((_ is Cons!1472) (t!5012 lt!31424)) (= (_1!1068 (h!2058 (t!5012 lt!31424))) (_1!1068 lt!31269))))))

(assert (=> d!16685 (= (getValueByKey!132 (t!5012 lt!31424) (_1!1068 lt!31269)) e!47472)))

(declare-fun b!72592 () Bool)

(assert (=> b!72592 (= e!47473 (getValueByKey!132 (t!5012 (t!5012 lt!31424)) (_1!1068 lt!31269)))))

(assert (= (and d!16685 c!10744) b!72590))

(assert (= (and d!16685 (not c!10744)) b!72591))

(assert (= (and b!72591 c!10745) b!72592))

(assert (= (and b!72591 (not c!10745)) b!72593))

(declare-fun m!70715 () Bool)

(assert (=> b!72592 m!70715))

(assert (=> b!71157 d!16685))

(assert (=> d!15969 d!15967))

(declare-fun d!16687 () Bool)

(declare-fun e!47474 () Bool)

(assert (=> d!16687 e!47474))

(declare-fun res!38562 () Bool)

(assert (=> d!16687 (=> res!38562 e!47474)))

(declare-fun lt!32336 () Bool)

(assert (=> d!16687 (= res!38562 (not lt!32336))))

(declare-fun lt!32335 () Bool)

(assert (=> d!16687 (= lt!32336 lt!32335)))

(declare-fun lt!32334 () Unit!2002)

(declare-fun e!47475 () Unit!2002)

(assert (=> d!16687 (= lt!32334 e!47475)))

(declare-fun c!10746 () Bool)

(assert (=> d!16687 (= c!10746 lt!32335)))

(assert (=> d!16687 (= lt!32335 (containsKey!136 (toList!723 lt!31507) lt!31517))))

(assert (=> d!16687 (= (contains!719 lt!31507 lt!31517) lt!32336)))

(declare-fun b!72594 () Bool)

(declare-fun lt!32337 () Unit!2002)

(assert (=> b!72594 (= e!47475 lt!32337)))

(assert (=> b!72594 (= lt!32337 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31507) lt!31517))))

(assert (=> b!72594 (isDefined!85 (getValueByKey!132 (toList!723 lt!31507) lt!31517))))

(declare-fun b!72595 () Bool)

(declare-fun Unit!2070 () Unit!2002)

(assert (=> b!72595 (= e!47475 Unit!2070)))

(declare-fun b!72596 () Bool)

(assert (=> b!72596 (= e!47474 (isDefined!85 (getValueByKey!132 (toList!723 lt!31507) lt!31517)))))

(assert (= (and d!16687 c!10746) b!72594))

(assert (= (and d!16687 (not c!10746)) b!72595))

(assert (= (and d!16687 (not res!38562)) b!72596))

(declare-fun m!70717 () Bool)

(assert (=> d!16687 m!70717))

(declare-fun m!70719 () Bool)

(assert (=> b!72594 m!70719))

(assert (=> b!72594 m!68779))

(assert (=> b!72594 m!68779))

(declare-fun m!70721 () Bool)

(assert (=> b!72594 m!70721))

(assert (=> b!72596 m!68779))

(assert (=> b!72596 m!68779))

(assert (=> b!72596 m!70721))

(assert (=> d!15969 d!16687))

(assert (=> d!15969 d!15983))

(assert (=> d!15969 d!15975))

(declare-fun d!16689 () Bool)

(assert (=> d!16689 (= (apply!74 (+!93 lt!31507 (tuple2!2115 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31517) (apply!74 lt!31507 lt!31517))))

(assert (=> d!16689 true))

(declare-fun _$34!803 () Unit!2002)

(assert (=> d!16689 (= (choose!405 lt!31507 lt!31513 (minValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31517) _$34!803)))

(declare-fun bs!3121 () Bool)

(assert (= bs!3121 d!16689))

(assert (=> bs!3121 m!68185))

(assert (=> bs!3121 m!68185))

(assert (=> bs!3121 m!68193))

(assert (=> bs!3121 m!68195))

(assert (=> d!15969 d!16689))

(declare-fun b!72597 () Bool)

(declare-fun e!47479 () Bool)

(declare-fun e!47477 () Bool)

(assert (=> b!72597 (= e!47479 e!47477)))

(declare-fun c!10747 () Bool)

(assert (=> b!72597 (= c!10747 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000)))))

(declare-fun d!16691 () Bool)

(declare-fun res!38564 () Bool)

(declare-fun e!47476 () Bool)

(assert (=> d!16691 (=> res!38564 e!47476)))

(assert (=> d!16691 (= res!38564 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 (_2!1069 lt!31408)))))))

(assert (=> d!16691 (= (arrayNoDuplicates!0 (_keys!3840 (_2!1069 lt!31408)) #b00000000000000000000000000000000 Nil!1472) e!47476)))

(declare-fun bm!6324 () Bool)

(declare-fun call!6327 () Bool)

(assert (=> bm!6324 (= call!6327 (arrayNoDuplicates!0 (_keys!3840 (_2!1069 lt!31408)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10747 (Cons!1471 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000) Nil!1472) Nil!1472)))))

(declare-fun b!72598 () Bool)

(assert (=> b!72598 (= e!47477 call!6327)))

(declare-fun b!72599 () Bool)

(assert (=> b!72599 (= e!47476 e!47479)))

(declare-fun res!38565 () Bool)

(assert (=> b!72599 (=> (not res!38565) (not e!47479))))

(declare-fun e!47478 () Bool)

(assert (=> b!72599 (= res!38565 (not e!47478))))

(declare-fun res!38563 () Bool)

(assert (=> b!72599 (=> (not res!38563) (not e!47478))))

(assert (=> b!72599 (= res!38563 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000)))))

(declare-fun b!72600 () Bool)

(assert (=> b!72600 (= e!47478 (contains!721 Nil!1472 (select (arr!1853 (_keys!3840 (_2!1069 lt!31408))) #b00000000000000000000000000000000)))))

(declare-fun b!72601 () Bool)

(assert (=> b!72601 (= e!47477 call!6327)))

(assert (= (and d!16691 (not res!38564)) b!72599))

(assert (= (and b!72599 res!38563) b!72600))

(assert (= (and b!72599 res!38565) b!72597))

(assert (= (and b!72597 c!10747) b!72601))

(assert (= (and b!72597 (not c!10747)) b!72598))

(assert (= (or b!72601 b!72598) bm!6324))

(assert (=> b!72597 m!69751))

(assert (=> b!72597 m!69751))

(assert (=> b!72597 m!69765))

(assert (=> bm!6324 m!69751))

(declare-fun m!70723 () Bool)

(assert (=> bm!6324 m!70723))

(assert (=> b!72599 m!69751))

(assert (=> b!72599 m!69751))

(assert (=> b!72599 m!69765))

(assert (=> b!72600 m!69751))

(assert (=> b!72600 m!69751))

(declare-fun m!70725 () Bool)

(assert (=> b!72600 m!70725))

(assert (=> b!71280 d!16691))

(assert (=> bm!6188 d!16005))

(declare-fun b!72605 () Bool)

(declare-fun e!47481 () Option!138)

(assert (=> b!72605 (= e!47481 None!136)))

(declare-fun b!72603 () Bool)

(declare-fun e!47480 () Option!138)

(assert (=> b!72603 (= e!47480 e!47481)))

(declare-fun c!10749 () Bool)

(assert (=> b!72603 (= c!10749 (and ((_ is Cons!1472) (t!5012 lt!31460)) (not (= (_1!1068 (h!2058 (t!5012 lt!31460))) (_1!1068 lt!31265)))))))

(declare-fun b!72602 () Bool)

(assert (=> b!72602 (= e!47480 (Some!137 (_2!1068 (h!2058 (t!5012 lt!31460)))))))

(declare-fun d!16693 () Bool)

(declare-fun c!10748 () Bool)

(assert (=> d!16693 (= c!10748 (and ((_ is Cons!1472) (t!5012 lt!31460)) (= (_1!1068 (h!2058 (t!5012 lt!31460))) (_1!1068 lt!31265))))))

(assert (=> d!16693 (= (getValueByKey!132 (t!5012 lt!31460) (_1!1068 lt!31265)) e!47480)))

(declare-fun b!72604 () Bool)

(assert (=> b!72604 (= e!47481 (getValueByKey!132 (t!5012 (t!5012 lt!31460)) (_1!1068 lt!31265)))))

(assert (= (and d!16693 c!10748) b!72602))

(assert (= (and d!16693 (not c!10748)) b!72603))

(assert (= (and b!72603 c!10749) b!72604))

(assert (= (and b!72603 (not c!10749)) b!72605))

(declare-fun m!70727 () Bool)

(assert (=> b!72604 m!70727))

(assert (=> b!71234 d!16693))

(assert (=> b!71410 d!16571))

(assert (=> b!71410 d!16573))

(declare-fun bm!6325 () Bool)

(declare-fun call!6330 () List!1476)

(declare-fun call!6328 () List!1476)

(assert (=> bm!6325 (= call!6330 call!6328)))

(declare-fun b!72606 () Bool)

(declare-fun e!47483 () List!1476)

(declare-fun call!6329 () List!1476)

(assert (=> b!72606 (= e!47483 call!6329)))

(declare-fun c!10752 () Bool)

(declare-fun e!47482 () List!1476)

(declare-fun bm!6326 () Bool)

(assert (=> bm!6326 (= call!6328 ($colon$colon!65 e!47482 (ite c!10752 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31265)))) (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269)))))))

(declare-fun c!10753 () Bool)

(assert (=> bm!6326 (= c!10753 c!10752)))

(declare-fun b!72608 () Bool)

(declare-fun c!10750 () Bool)

(assert (=> b!72608 (= c!10750 (and ((_ is Cons!1472) (t!5012 (toList!723 (+!93 lt!31270 lt!31265)))) (bvsgt (_1!1068 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31265))))) (_1!1068 lt!31269))))))

(declare-fun e!47486 () List!1476)

(assert (=> b!72608 (= e!47486 e!47483)))

(declare-fun b!72609 () Bool)

(assert (=> b!72609 (= e!47486 call!6330)))

(declare-fun b!72610 () Bool)

(assert (=> b!72610 (= e!47483 call!6329)))

(declare-fun b!72611 () Bool)

(declare-fun e!47485 () List!1476)

(assert (=> b!72611 (= e!47485 e!47486)))

(declare-fun c!10751 () Bool)

(assert (=> b!72611 (= c!10751 (and ((_ is Cons!1472) (t!5012 (toList!723 (+!93 lt!31270 lt!31265)))) (= (_1!1068 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31265))))) (_1!1068 lt!31269))))))

(declare-fun b!72612 () Bool)

(declare-fun res!38567 () Bool)

(declare-fun e!47484 () Bool)

(assert (=> b!72612 (=> (not res!38567) (not e!47484))))

(declare-fun lt!32338 () List!1476)

(assert (=> b!72612 (= res!38567 (containsKey!136 lt!32338 (_1!1068 lt!31269)))))

(declare-fun b!72613 () Bool)

(assert (=> b!72613 (= e!47484 (contains!722 lt!32338 (tuple2!2115 (_1!1068 lt!31269) (_2!1068 lt!31269))))))

(declare-fun b!72614 () Bool)

(assert (=> b!72614 (= e!47482 (ite c!10751 (t!5012 (t!5012 (toList!723 (+!93 lt!31270 lt!31265)))) (ite c!10750 (Cons!1472 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31265)))) (t!5012 (t!5012 (toList!723 (+!93 lt!31270 lt!31265))))) Nil!1473)))))

(declare-fun b!72607 () Bool)

(assert (=> b!72607 (= e!47485 call!6328)))

(declare-fun d!16695 () Bool)

(assert (=> d!16695 e!47484))

(declare-fun res!38566 () Bool)

(assert (=> d!16695 (=> (not res!38566) (not e!47484))))

(assert (=> d!16695 (= res!38566 (isStrictlySorted!291 lt!32338))))

(assert (=> d!16695 (= lt!32338 e!47485)))

(assert (=> d!16695 (= c!10752 (and ((_ is Cons!1472) (t!5012 (toList!723 (+!93 lt!31270 lt!31265)))) (bvslt (_1!1068 (h!2058 (t!5012 (toList!723 (+!93 lt!31270 lt!31265))))) (_1!1068 lt!31269))))))

(assert (=> d!16695 (isStrictlySorted!291 (t!5012 (toList!723 (+!93 lt!31270 lt!31265))))))

(assert (=> d!16695 (= (insertStrictlySorted!52 (t!5012 (toList!723 (+!93 lt!31270 lt!31265))) (_1!1068 lt!31269) (_2!1068 lt!31269)) lt!32338)))

(declare-fun b!72615 () Bool)

(assert (=> b!72615 (= e!47482 (insertStrictlySorted!52 (t!5012 (t!5012 (toList!723 (+!93 lt!31270 lt!31265)))) (_1!1068 lt!31269) (_2!1068 lt!31269)))))

(declare-fun bm!6327 () Bool)

(assert (=> bm!6327 (= call!6329 call!6330)))

(assert (= (and d!16695 c!10752) b!72607))

(assert (= (and d!16695 (not c!10752)) b!72611))

(assert (= (and b!72611 c!10751) b!72609))

(assert (= (and b!72611 (not c!10751)) b!72608))

(assert (= (and b!72608 c!10750) b!72606))

(assert (= (and b!72608 (not c!10750)) b!72610))

(assert (= (or b!72606 b!72610) bm!6327))

(assert (= (or b!72609 bm!6327) bm!6325))

(assert (= (or b!72607 bm!6325) bm!6326))

(assert (= (and bm!6326 c!10753) b!72615))

(assert (= (and bm!6326 (not c!10753)) b!72614))

(assert (= (and d!16695 res!38566) b!72612))

(assert (= (and b!72612 res!38567) b!72613))

(declare-fun m!70729 () Bool)

(assert (=> b!72612 m!70729))

(declare-fun m!70731 () Bool)

(assert (=> b!72615 m!70731))

(declare-fun m!70733 () Bool)

(assert (=> b!72613 m!70733))

(declare-fun m!70735 () Bool)

(assert (=> bm!6326 m!70735))

(declare-fun m!70737 () Bool)

(assert (=> d!16695 m!70737))

(assert (=> d!16695 m!69907))

(assert (=> b!71194 d!16695))

(assert (=> d!15935 d!16145))

(declare-fun bm!6328 () Bool)

(declare-fun call!6333 () List!1476)

(declare-fun call!6331 () List!1476)

(assert (=> bm!6328 (= call!6333 call!6331)))

(declare-fun b!72616 () Bool)

(declare-fun e!47488 () List!1476)

(declare-fun call!6332 () List!1476)

(assert (=> b!72616 (= e!47488 call!6332)))

(declare-fun bm!6329 () Bool)

(declare-fun c!10756 () Bool)

(declare-fun e!47487 () List!1476)

(assert (=> bm!6329 (= call!6331 ($colon$colon!65 e!47487 (ite c!10756 (h!2058 (t!5012 (toList!723 lt!31270))) (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265)))))))

(declare-fun c!10757 () Bool)

(assert (=> bm!6329 (= c!10757 c!10756)))

(declare-fun b!72618 () Bool)

(declare-fun c!10754 () Bool)

(assert (=> b!72618 (= c!10754 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31270))) (bvsgt (_1!1068 (h!2058 (t!5012 (toList!723 lt!31270)))) (_1!1068 lt!31265))))))

(declare-fun e!47491 () List!1476)

(assert (=> b!72618 (= e!47491 e!47488)))

(declare-fun b!72619 () Bool)

(assert (=> b!72619 (= e!47491 call!6333)))

(declare-fun b!72620 () Bool)

(assert (=> b!72620 (= e!47488 call!6332)))

(declare-fun b!72621 () Bool)

(declare-fun e!47490 () List!1476)

(assert (=> b!72621 (= e!47490 e!47491)))

(declare-fun c!10755 () Bool)

(assert (=> b!72621 (= c!10755 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31270))) (= (_1!1068 (h!2058 (t!5012 (toList!723 lt!31270)))) (_1!1068 lt!31265))))))

(declare-fun b!72622 () Bool)

(declare-fun res!38569 () Bool)

(declare-fun e!47489 () Bool)

(assert (=> b!72622 (=> (not res!38569) (not e!47489))))

(declare-fun lt!32339 () List!1476)

(assert (=> b!72622 (= res!38569 (containsKey!136 lt!32339 (_1!1068 lt!31265)))))

(declare-fun b!72623 () Bool)

(assert (=> b!72623 (= e!47489 (contains!722 lt!32339 (tuple2!2115 (_1!1068 lt!31265) (_2!1068 lt!31265))))))

(declare-fun b!72624 () Bool)

(assert (=> b!72624 (= e!47487 (ite c!10755 (t!5012 (t!5012 (toList!723 lt!31270))) (ite c!10754 (Cons!1472 (h!2058 (t!5012 (toList!723 lt!31270))) (t!5012 (t!5012 (toList!723 lt!31270)))) Nil!1473)))))

(declare-fun b!72617 () Bool)

(assert (=> b!72617 (= e!47490 call!6331)))

(declare-fun d!16697 () Bool)

(assert (=> d!16697 e!47489))

(declare-fun res!38568 () Bool)

(assert (=> d!16697 (=> (not res!38568) (not e!47489))))

(assert (=> d!16697 (= res!38568 (isStrictlySorted!291 lt!32339))))

(assert (=> d!16697 (= lt!32339 e!47490)))

(assert (=> d!16697 (= c!10756 (and ((_ is Cons!1472) (t!5012 (toList!723 lt!31270))) (bvslt (_1!1068 (h!2058 (t!5012 (toList!723 lt!31270)))) (_1!1068 lt!31265))))))

(assert (=> d!16697 (isStrictlySorted!291 (t!5012 (toList!723 lt!31270)))))

(assert (=> d!16697 (= (insertStrictlySorted!52 (t!5012 (toList!723 lt!31270)) (_1!1068 lt!31265) (_2!1068 lt!31265)) lt!32339)))

(declare-fun b!72625 () Bool)

(assert (=> b!72625 (= e!47487 (insertStrictlySorted!52 (t!5012 (t!5012 (toList!723 lt!31270))) (_1!1068 lt!31265) (_2!1068 lt!31265)))))

(declare-fun bm!6330 () Bool)

(assert (=> bm!6330 (= call!6332 call!6333)))

(assert (= (and d!16697 c!10756) b!72617))

(assert (= (and d!16697 (not c!10756)) b!72621))

(assert (= (and b!72621 c!10755) b!72619))

(assert (= (and b!72621 (not c!10755)) b!72618))

(assert (= (and b!72618 c!10754) b!72616))

(assert (= (and b!72618 (not c!10754)) b!72620))

(assert (= (or b!72616 b!72620) bm!6330))

(assert (= (or b!72619 bm!6330) bm!6328))

(assert (= (or b!72617 bm!6328) bm!6329))

(assert (= (and bm!6329 c!10757) b!72625))

(assert (= (and bm!6329 (not c!10757)) b!72624))

(assert (= (and d!16697 res!38568) b!72622))

(assert (= (and b!72622 res!38569) b!72623))

(declare-fun m!70739 () Bool)

(assert (=> b!72622 m!70739))

(declare-fun m!70741 () Bool)

(assert (=> b!72625 m!70741))

(declare-fun m!70743 () Bool)

(assert (=> b!72623 m!70743))

(declare-fun m!70745 () Bool)

(assert (=> bm!6329 m!70745))

(declare-fun m!70747 () Bool)

(assert (=> d!16697 m!70747))

(assert (=> d!16697 m!70009))

(assert (=> b!71299 d!16697))

(declare-fun lt!32340 () Bool)

(declare-fun d!16699 () Bool)

(assert (=> d!16699 (= lt!32340 (select (content!76 (toList!723 lt!31635)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!47492 () Bool)

(assert (=> d!16699 (= lt!32340 e!47492)))

(declare-fun res!38571 () Bool)

(assert (=> d!16699 (=> (not res!38571) (not e!47492))))

(assert (=> d!16699 (= res!38571 ((_ is Cons!1472) (toList!723 lt!31635)))))

(assert (=> d!16699 (= (contains!722 (toList!723 lt!31635) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!32340)))

(declare-fun b!72626 () Bool)

(declare-fun e!47493 () Bool)

(assert (=> b!72626 (= e!47492 e!47493)))

(declare-fun res!38570 () Bool)

(assert (=> b!72626 (=> res!38570 e!47493)))

(assert (=> b!72626 (= res!38570 (= (h!2058 (toList!723 lt!31635)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!72627 () Bool)

(assert (=> b!72627 (= e!47493 (contains!722 (t!5012 (toList!723 lt!31635)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1133 (select (arr!1854 (_values!2175 (v!2514 (underlying!257 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16699 res!38571) b!72626))

(assert (= (and b!72626 (not res!38570)) b!72627))

(declare-fun m!70749 () Bool)

(assert (=> d!16699 m!70749))

(declare-fun m!70751 () Bool)

(assert (=> d!16699 m!70751))

(declare-fun m!70753 () Bool)

(assert (=> b!72627 m!70753))

(assert (=> b!71330 d!16699))

(assert (=> b!71258 d!16547))

(assert (=> b!71258 d!16279))

(declare-fun d!16701 () Bool)

(declare-fun lt!32341 () Bool)

(assert (=> d!16701 (= lt!32341 (select (content!76 (toList!723 lt!31581)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(declare-fun e!47494 () Bool)

(assert (=> d!16701 (= lt!32341 e!47494)))

(declare-fun res!38573 () Bool)

(assert (=> d!16701 (=> (not res!38573) (not e!47494))))

(assert (=> d!16701 (= res!38573 ((_ is Cons!1472) (toList!723 lt!31581)))))

(assert (=> d!16701 (= (contains!722 (toList!723 lt!31581) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) lt!32341)))

(declare-fun b!72628 () Bool)

(declare-fun e!47495 () Bool)

(assert (=> b!72628 (= e!47494 e!47495)))

(declare-fun res!38572 () Bool)

(assert (=> b!72628 (=> res!38572 e!47495)))

(assert (=> b!72628 (= res!38572 (= (h!2058 (toList!723 lt!31581)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(declare-fun b!72629 () Bool)

(assert (=> b!72629 (= e!47495 (contains!722 (t!5012 (toList!723 lt!31581)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(assert (= (and d!16701 res!38573) b!72628))

(assert (= (and b!72628 (not res!38572)) b!72629))

(declare-fun m!70755 () Bool)

(assert (=> d!16701 m!70755))

(declare-fun m!70757 () Bool)

(assert (=> d!16701 m!70757))

(declare-fun m!70759 () Bool)

(assert (=> b!72629 m!70759))

(assert (=> b!71251 d!16701))

(assert (=> d!15857 d!16145))

(declare-fun lt!32342 () Bool)

(declare-fun d!16703 () Bool)

(assert (=> d!16703 (= lt!32342 (select (content!75 (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!47497 () Bool)

(assert (=> d!16703 (= lt!32342 e!47497)))

(declare-fun res!38574 () Bool)

(assert (=> d!16703 (=> (not res!38574) (not e!47497))))

(assert (=> d!16703 (= res!38574 ((_ is Cons!1471) (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)))))

(assert (=> d!16703 (= (contains!721 (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!32342)))

(declare-fun b!72630 () Bool)

(declare-fun e!47496 () Bool)

(assert (=> b!72630 (= e!47497 e!47496)))

(declare-fun res!38575 () Bool)

(assert (=> b!72630 (=> res!38575 e!47496)))

(assert (=> b!72630 (= res!38575 (= (h!2057 (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!72631 () Bool)

(assert (=> b!72631 (= e!47496 (contains!721 (t!5011 (ite c!10247 (Cons!1471 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) Nil!1472) Nil!1472)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!16703 res!38574) b!72630))

(assert (= (and b!72630 (not res!38575)) b!72631))

(declare-fun m!70761 () Bool)

(assert (=> d!16703 m!70761))

(assert (=> d!16703 m!69005))

(declare-fun m!70763 () Bool)

(assert (=> d!16703 m!70763))

(assert (=> b!72631 m!69005))

(declare-fun m!70765 () Bool)

(assert (=> b!72631 m!70765))

(assert (=> b!71578 d!16703))

(declare-fun d!16705 () Bool)

(assert (=> d!16705 (isDefined!85 (getValueByKey!132 (toList!723 lt!31448) (_1!1068 lt!31269)))))

(declare-fun lt!32343 () Unit!2002)

(assert (=> d!16705 (= lt!32343 (choose!404 (toList!723 lt!31448) (_1!1068 lt!31269)))))

(declare-fun e!47498 () Bool)

(assert (=> d!16705 e!47498))

(declare-fun res!38576 () Bool)

(assert (=> d!16705 (=> (not res!38576) (not e!47498))))

(assert (=> d!16705 (= res!38576 (isStrictlySorted!291 (toList!723 lt!31448)))))

(assert (=> d!16705 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31448) (_1!1068 lt!31269)) lt!32343)))

(declare-fun b!72632 () Bool)

(assert (=> b!72632 (= e!47498 (containsKey!136 (toList!723 lt!31448) (_1!1068 lt!31269)))))

(assert (= (and d!16705 res!38576) b!72632))

(assert (=> d!16705 m!68133))

(assert (=> d!16705 m!68133))

(assert (=> d!16705 m!68437))

(declare-fun m!70767 () Bool)

(assert (=> d!16705 m!70767))

(declare-fun m!70769 () Bool)

(assert (=> d!16705 m!70769))

(assert (=> b!72632 m!68433))

(assert (=> b!71259 d!16705))

(assert (=> b!71259 d!16183))

(assert (=> b!71259 d!15841))

(assert (=> b!71308 d!16131))

(declare-fun d!16707 () Bool)

(declare-fun e!47499 () Bool)

(assert (=> d!16707 e!47499))

(declare-fun res!38577 () Bool)

(assert (=> d!16707 (=> res!38577 e!47499)))

(declare-fun lt!32346 () Bool)

(assert (=> d!16707 (= res!38577 (not lt!32346))))

(declare-fun lt!32345 () Bool)

(assert (=> d!16707 (= lt!32346 lt!32345)))

(declare-fun lt!32344 () Unit!2002)

(declare-fun e!47500 () Unit!2002)

(assert (=> d!16707 (= lt!32344 e!47500)))

(declare-fun c!10758 () Bool)

(assert (=> d!16707 (= c!10758 lt!32345)))

(assert (=> d!16707 (= lt!32345 (containsKey!136 (toList!723 (map!1148 (_2!1069 lt!31848))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!16707 (= (contains!719 (map!1148 (_2!1069 lt!31848)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) lt!32346)))

(declare-fun b!72633 () Bool)

(declare-fun lt!32347 () Unit!2002)

(assert (=> b!72633 (= e!47500 lt!32347)))

(assert (=> b!72633 (= lt!32347 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (map!1148 (_2!1069 lt!31848))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> b!72633 (isDefined!85 (getValueByKey!132 (toList!723 (map!1148 (_2!1069 lt!31848))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(declare-fun b!72634 () Bool)

(declare-fun Unit!2071 () Unit!2002)

(assert (=> b!72634 (= e!47500 Unit!2071)))

(declare-fun b!72635 () Bool)

(assert (=> b!72635 (= e!47499 (isDefined!85 (getValueByKey!132 (toList!723 (map!1148 (_2!1069 lt!31848))) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355))))))

(assert (= (and d!16707 c!10758) b!72633))

(assert (= (and d!16707 (not c!10758)) b!72634))

(assert (= (and d!16707 (not res!38577)) b!72635))

(assert (=> d!16707 m!67893))

(declare-fun m!70771 () Bool)

(assert (=> d!16707 m!70771))

(assert (=> b!72633 m!67893))

(declare-fun m!70773 () Bool)

(assert (=> b!72633 m!70773))

(assert (=> b!72633 m!67893))

(declare-fun m!70775 () Bool)

(assert (=> b!72633 m!70775))

(assert (=> b!72633 m!70775))

(declare-fun m!70777 () Bool)

(assert (=> b!72633 m!70777))

(assert (=> b!72635 m!67893))

(assert (=> b!72635 m!70775))

(assert (=> b!72635 m!70775))

(assert (=> b!72635 m!70777))

(assert (=> b!71546 d!16707))

(assert (=> b!71546 d!16535))

(declare-fun b!72639 () Bool)

(declare-fun e!47502 () Option!138)

(assert (=> b!72639 (= e!47502 None!136)))

(declare-fun b!72637 () Bool)

(declare-fun e!47501 () Option!138)

(assert (=> b!72637 (= e!47501 e!47502)))

(declare-fun c!10760 () Bool)

(assert (=> b!72637 (= c!10760 (and ((_ is Cons!1472) (t!5012 lt!31449)) (not (= (_1!1068 (h!2058 (t!5012 lt!31449))) (_1!1068 lt!31269)))))))

(declare-fun b!72636 () Bool)

(assert (=> b!72636 (= e!47501 (Some!137 (_2!1068 (h!2058 (t!5012 lt!31449)))))))

(declare-fun d!16709 () Bool)

(declare-fun c!10759 () Bool)

(assert (=> d!16709 (= c!10759 (and ((_ is Cons!1472) (t!5012 lt!31449)) (= (_1!1068 (h!2058 (t!5012 lt!31449))) (_1!1068 lt!31269))))))

(assert (=> d!16709 (= (getValueByKey!132 (t!5012 lt!31449) (_1!1068 lt!31269)) e!47501)))

(declare-fun b!72638 () Bool)

(assert (=> b!72638 (= e!47502 (getValueByKey!132 (t!5012 (t!5012 lt!31449)) (_1!1068 lt!31269)))))

(assert (= (and d!16709 c!10759) b!72636))

(assert (= (and d!16709 (not c!10759)) b!72637))

(assert (= (and b!72637 c!10760) b!72638))

(assert (= (and b!72637 (not c!10760)) b!72639))

(declare-fun m!70779 () Bool)

(assert (=> b!72638 m!70779))

(assert (=> b!71264 d!16709))

(declare-fun d!16711 () Bool)

(assert (=> d!16711 (= (apply!74 (+!93 lt!31690 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) lt!31700) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31690 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) lt!31700)))))

(declare-fun bs!3122 () Bool)

(assert (= bs!3122 d!16711))

(declare-fun m!70781 () Bool)

(assert (=> bs!3122 m!70781))

(assert (=> bs!3122 m!70781))

(declare-fun m!70783 () Bool)

(assert (=> bs!3122 m!70783))

(assert (=> b!71418 d!16711))

(declare-fun d!16713 () Bool)

(declare-fun e!47503 () Bool)

(assert (=> d!16713 e!47503))

(declare-fun res!38578 () Bool)

(assert (=> d!16713 (=> (not res!38578) (not e!47503))))

(declare-fun lt!32350 () ListLongMap!1415)

(assert (=> d!16713 (= res!38578 (contains!719 lt!32350 (_1!1068 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(declare-fun lt!32351 () List!1476)

(assert (=> d!16713 (= lt!32350 (ListLongMap!1416 lt!32351))))

(declare-fun lt!32349 () Unit!2002)

(declare-fun lt!32348 () Unit!2002)

(assert (=> d!16713 (= lt!32349 lt!32348)))

(assert (=> d!16713 (= (getValueByKey!132 lt!32351 (_1!1068 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) (Some!137 (_2!1068 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(assert (=> d!16713 (= lt!32348 (lemmaContainsTupThenGetReturnValue!49 lt!32351 (_1!1068 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) (_2!1068 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(assert (=> d!16713 (= lt!32351 (insertStrictlySorted!52 (toList!723 lt!31690) (_1!1068 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) (_2!1068 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(assert (=> d!16713 (= (+!93 lt!31690 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) lt!32350)))

(declare-fun b!72640 () Bool)

(declare-fun res!38579 () Bool)

(assert (=> b!72640 (=> (not res!38579) (not e!47503))))

(assert (=> b!72640 (= res!38579 (= (getValueByKey!132 (toList!723 lt!32350) (_1!1068 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) (Some!137 (_2!1068 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))))

(declare-fun b!72641 () Bool)

(assert (=> b!72641 (= e!47503 (contains!722 (toList!723 lt!32350) (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))

(assert (= (and d!16713 res!38578) b!72640))

(assert (= (and b!72640 res!38579) b!72641))

(declare-fun m!70785 () Bool)

(assert (=> d!16713 m!70785))

(declare-fun m!70787 () Bool)

(assert (=> d!16713 m!70787))

(declare-fun m!70789 () Bool)

(assert (=> d!16713 m!70789))

(declare-fun m!70791 () Bool)

(assert (=> d!16713 m!70791))

(declare-fun m!70793 () Bool)

(assert (=> b!72640 m!70793))

(declare-fun m!70795 () Bool)

(assert (=> b!72641 m!70795))

(assert (=> b!71418 d!16713))

(declare-fun d!16715 () Bool)

(declare-fun e!47504 () Bool)

(assert (=> d!16715 e!47504))

(declare-fun res!38580 () Bool)

(assert (=> d!16715 (=> (not res!38580) (not e!47504))))

(declare-fun lt!32354 () ListLongMap!1415)

(assert (=> d!16715 (= res!38580 (contains!719 lt!32354 (_1!1068 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(declare-fun lt!32355 () List!1476)

(assert (=> d!16715 (= lt!32354 (ListLongMap!1416 lt!32355))))

(declare-fun lt!32353 () Unit!2002)

(declare-fun lt!32352 () Unit!2002)

(assert (=> d!16715 (= lt!32353 lt!32352)))

(assert (=> d!16715 (= (getValueByKey!132 lt!32355 (_1!1068 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) (Some!137 (_2!1068 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(assert (=> d!16715 (= lt!32352 (lemmaContainsTupThenGetReturnValue!49 lt!32355 (_1!1068 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) (_2!1068 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(assert (=> d!16715 (= lt!32355 (insertStrictlySorted!52 (toList!723 lt!31694) (_1!1068 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) (_2!1068 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))))))

(assert (=> d!16715 (= (+!93 lt!31694 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) lt!32354)))

(declare-fun b!72642 () Bool)

(declare-fun res!38581 () Bool)

(assert (=> b!72642 (=> (not res!38581) (not e!47504))))

(assert (=> b!72642 (= res!38581 (= (getValueByKey!132 (toList!723 lt!32354) (_1!1068 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) (Some!137 (_2!1068 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))))

(declare-fun b!72643 () Bool)

(assert (=> b!72643 (= e!47504 (contains!722 (toList!723 lt!32354) (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))))))

(assert (= (and d!16715 res!38580) b!72642))

(assert (= (and b!72642 res!38581) b!72643))

(declare-fun m!70797 () Bool)

(assert (=> d!16715 m!70797))

(declare-fun m!70799 () Bool)

(assert (=> d!16715 m!70799))

(declare-fun m!70801 () Bool)

(assert (=> d!16715 m!70801))

(declare-fun m!70803 () Bool)

(assert (=> d!16715 m!70803))

(declare-fun m!70805 () Bool)

(assert (=> b!72642 m!70805))

(declare-fun m!70807 () Bool)

(assert (=> b!72643 m!70807))

(assert (=> b!71418 d!16715))

(declare-fun d!16717 () Bool)

(assert (=> d!16717 (= (apply!74 (+!93 lt!31704 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16))) lt!31692) (apply!74 lt!31704 lt!31692))))

(declare-fun lt!32356 () Unit!2002)

(assert (=> d!16717 (= lt!32356 (choose!405 lt!31704 lt!31698 (zeroValue!2096 newMap!16) lt!31692))))

(declare-fun e!47505 () Bool)

(assert (=> d!16717 e!47505))

(declare-fun res!38582 () Bool)

(assert (=> d!16717 (=> (not res!38582) (not e!47505))))

(assert (=> d!16717 (= res!38582 (contains!719 lt!31704 lt!31692))))

(assert (=> d!16717 (= (addApplyDifferent!50 lt!31704 lt!31698 (zeroValue!2096 newMap!16) lt!31692) lt!32356)))

(declare-fun b!72644 () Bool)

(assert (=> b!72644 (= e!47505 (not (= lt!31692 lt!31698)))))

(assert (= (and d!16717 res!38582) b!72644))

(assert (=> d!16717 m!68693))

(declare-fun m!70809 () Bool)

(assert (=> d!16717 m!70809))

(declare-fun m!70811 () Bool)

(assert (=> d!16717 m!70811))

(assert (=> d!16717 m!68717))

(assert (=> d!16717 m!68693))

(assert (=> d!16717 m!68709))

(assert (=> b!71418 d!16717))

(declare-fun d!16719 () Bool)

(declare-fun e!47506 () Bool)

(assert (=> d!16719 e!47506))

(declare-fun res!38583 () Bool)

(assert (=> d!16719 (=> (not res!38583) (not e!47506))))

(declare-fun lt!32359 () ListLongMap!1415)

(assert (=> d!16719 (= res!38583 (contains!719 lt!32359 (_1!1068 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16)))))))

(declare-fun lt!32360 () List!1476)

(assert (=> d!16719 (= lt!32359 (ListLongMap!1416 lt!32360))))

(declare-fun lt!32358 () Unit!2002)

(declare-fun lt!32357 () Unit!2002)

(assert (=> d!16719 (= lt!32358 lt!32357)))

(assert (=> d!16719 (= (getValueByKey!132 lt!32360 (_1!1068 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16719 (= lt!32357 (lemmaContainsTupThenGetReturnValue!49 lt!32360 (_1!1068 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16719 (= lt!32360 (insertStrictlySorted!52 (toList!723 lt!31697) (_1!1068 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16719 (= (+!93 lt!31697 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16))) lt!32359)))

(declare-fun b!72645 () Bool)

(declare-fun res!38584 () Bool)

(assert (=> b!72645 (=> (not res!38584) (not e!47506))))

(assert (=> b!72645 (= res!38584 (= (getValueByKey!132 (toList!723 lt!32359) (_1!1068 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16))))))))

(declare-fun b!72646 () Bool)

(assert (=> b!72646 (= e!47506 (contains!722 (toList!723 lt!32359) (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16))))))

(assert (= (and d!16719 res!38583) b!72645))

(assert (= (and b!72645 res!38584) b!72646))

(declare-fun m!70813 () Bool)

(assert (=> d!16719 m!70813))

(declare-fun m!70815 () Bool)

(assert (=> d!16719 m!70815))

(declare-fun m!70817 () Bool)

(assert (=> d!16719 m!70817))

(declare-fun m!70819 () Bool)

(assert (=> d!16719 m!70819))

(declare-fun m!70821 () Bool)

(assert (=> b!72645 m!70821))

(declare-fun m!70823 () Bool)

(assert (=> b!72646 m!70823))

(assert (=> b!71418 d!16719))

(declare-fun d!16721 () Bool)

(declare-fun e!47507 () Bool)

(assert (=> d!16721 e!47507))

(declare-fun res!38585 () Bool)

(assert (=> d!16721 (=> (not res!38585) (not e!47507))))

(declare-fun lt!32363 () ListLongMap!1415)

(assert (=> d!16721 (= res!38585 (contains!719 lt!32363 (_1!1068 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16)))))))

(declare-fun lt!32364 () List!1476)

(assert (=> d!16721 (= lt!32363 (ListLongMap!1416 lt!32364))))

(declare-fun lt!32362 () Unit!2002)

(declare-fun lt!32361 () Unit!2002)

(assert (=> d!16721 (= lt!32362 lt!32361)))

(assert (=> d!16721 (= (getValueByKey!132 lt!32364 (_1!1068 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16721 (= lt!32361 (lemmaContainsTupThenGetReturnValue!49 lt!32364 (_1!1068 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16721 (= lt!32364 (insertStrictlySorted!52 (toList!723 lt!31704) (_1!1068 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16)))))))

(assert (=> d!16721 (= (+!93 lt!31704 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16))) lt!32363)))

(declare-fun b!72647 () Bool)

(declare-fun res!38586 () Bool)

(assert (=> b!72647 (=> (not res!38586) (not e!47507))))

(assert (=> b!72647 (= res!38586 (= (getValueByKey!132 (toList!723 lt!32363) (_1!1068 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16))))))))

(declare-fun b!72648 () Bool)

(assert (=> b!72648 (= e!47507 (contains!722 (toList!723 lt!32363) (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16))))))

(assert (= (and d!16721 res!38585) b!72647))

(assert (= (and b!72647 res!38586) b!72648))

(declare-fun m!70825 () Bool)

(assert (=> d!16721 m!70825))

(declare-fun m!70827 () Bool)

(assert (=> d!16721 m!70827))

(declare-fun m!70829 () Bool)

(assert (=> d!16721 m!70829))

(declare-fun m!70831 () Bool)

(assert (=> d!16721 m!70831))

(declare-fun m!70833 () Bool)

(assert (=> b!72647 m!70833))

(declare-fun m!70835 () Bool)

(assert (=> b!72648 m!70835))

(assert (=> b!71418 d!16721))

(declare-fun d!16723 () Bool)

(assert (=> d!16723 (= (apply!74 lt!31704 lt!31692) (get!1136 (getValueByKey!132 (toList!723 lt!31704) lt!31692)))))

(declare-fun bs!3123 () Bool)

(assert (= bs!3123 d!16723))

(declare-fun m!70837 () Bool)

(assert (=> bs!3123 m!70837))

(assert (=> bs!3123 m!70837))

(declare-fun m!70839 () Bool)

(assert (=> bs!3123 m!70839))

(assert (=> b!71418 d!16723))

(declare-fun d!16725 () Bool)

(assert (=> d!16725 (contains!719 (+!93 lt!31697 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16))) lt!31691)))

(declare-fun lt!32365 () Unit!2002)

(assert (=> d!16725 (= lt!32365 (choose!406 lt!31697 lt!31706 (zeroValue!2096 newMap!16) lt!31691))))

(assert (=> d!16725 (contains!719 lt!31697 lt!31691)))

(assert (=> d!16725 (= (addStillContains!50 lt!31697 lt!31706 (zeroValue!2096 newMap!16) lt!31691) lt!32365)))

(declare-fun bs!3124 () Bool)

(assert (= bs!3124 d!16725))

(assert (=> bs!3124 m!68705))

(assert (=> bs!3124 m!68705))

(assert (=> bs!3124 m!68713))

(declare-fun m!70841 () Bool)

(assert (=> bs!3124 m!70841))

(declare-fun m!70843 () Bool)

(assert (=> bs!3124 m!70843))

(assert (=> b!71418 d!16725))

(declare-fun d!16727 () Bool)

(assert (=> d!16727 (= (apply!74 (+!93 lt!31694 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) lt!31693) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31694 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16))))) lt!31693)))))

(declare-fun bs!3125 () Bool)

(assert (= bs!3125 d!16727))

(declare-fun m!70845 () Bool)

(assert (=> bs!3125 m!70845))

(assert (=> bs!3125 m!70845))

(declare-fun m!70847 () Bool)

(assert (=> bs!3125 m!70847))

(assert (=> b!71418 d!16727))

(declare-fun d!16729 () Bool)

(declare-fun e!47508 () Bool)

(assert (=> d!16729 e!47508))

(declare-fun res!38587 () Bool)

(assert (=> d!16729 (=> res!38587 e!47508)))

(declare-fun lt!32368 () Bool)

(assert (=> d!16729 (= res!38587 (not lt!32368))))

(declare-fun lt!32367 () Bool)

(assert (=> d!16729 (= lt!32368 lt!32367)))

(declare-fun lt!32366 () Unit!2002)

(declare-fun e!47509 () Unit!2002)

(assert (=> d!16729 (= lt!32366 e!47509)))

(declare-fun c!10761 () Bool)

(assert (=> d!16729 (= c!10761 lt!32367)))

(assert (=> d!16729 (= lt!32367 (containsKey!136 (toList!723 (+!93 lt!31697 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16)))) lt!31691))))

(assert (=> d!16729 (= (contains!719 (+!93 lt!31697 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16))) lt!31691) lt!32368)))

(declare-fun b!72649 () Bool)

(declare-fun lt!32369 () Unit!2002)

(assert (=> b!72649 (= e!47509 lt!32369)))

(assert (=> b!72649 (= lt!32369 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (+!93 lt!31697 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16)))) lt!31691))))

(assert (=> b!72649 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31697 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16)))) lt!31691))))

(declare-fun b!72650 () Bool)

(declare-fun Unit!2072 () Unit!2002)

(assert (=> b!72650 (= e!47509 Unit!2072)))

(declare-fun b!72651 () Bool)

(assert (=> b!72651 (= e!47508 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31697 (tuple2!2115 lt!31706 (zeroValue!2096 newMap!16)))) lt!31691)))))

(assert (= (and d!16729 c!10761) b!72649))

(assert (= (and d!16729 (not c!10761)) b!72650))

(assert (= (and d!16729 (not res!38587)) b!72651))

(declare-fun m!70849 () Bool)

(assert (=> d!16729 m!70849))

(declare-fun m!70851 () Bool)

(assert (=> b!72649 m!70851))

(declare-fun m!70853 () Bool)

(assert (=> b!72649 m!70853))

(assert (=> b!72649 m!70853))

(declare-fun m!70855 () Bool)

(assert (=> b!72649 m!70855))

(assert (=> b!72651 m!70853))

(assert (=> b!72651 m!70853))

(assert (=> b!72651 m!70855))

(assert (=> b!71418 d!16729))

(declare-fun d!16731 () Bool)

(assert (=> d!16731 (= (apply!74 lt!31694 lt!31693) (get!1136 (getValueByKey!132 (toList!723 lt!31694) lt!31693)))))

(declare-fun bs!3126 () Bool)

(assert (= bs!3126 d!16731))

(declare-fun m!70857 () Bool)

(assert (=> bs!3126 m!70857))

(assert (=> bs!3126 m!70857))

(declare-fun m!70859 () Bool)

(assert (=> bs!3126 m!70859))

(assert (=> b!71418 d!16731))

(declare-fun d!16733 () Bool)

(assert (=> d!16733 (= (apply!74 lt!31690 lt!31700) (get!1136 (getValueByKey!132 (toList!723 lt!31690) lt!31700)))))

(declare-fun bs!3127 () Bool)

(assert (= bs!3127 d!16733))

(declare-fun m!70861 () Bool)

(assert (=> bs!3127 m!70861))

(assert (=> bs!3127 m!70861))

(declare-fun m!70863 () Bool)

(assert (=> bs!3127 m!70863))

(assert (=> b!71418 d!16733))

(declare-fun d!16735 () Bool)

(assert (=> d!16735 (= (apply!74 (+!93 lt!31694 (tuple2!2115 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) lt!31693) (apply!74 lt!31694 lt!31693))))

(declare-fun lt!32370 () Unit!2002)

(assert (=> d!16735 (= lt!32370 (choose!405 lt!31694 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) lt!31693))))

(declare-fun e!47510 () Bool)

(assert (=> d!16735 e!47510))

(declare-fun res!38588 () Bool)

(assert (=> d!16735 (=> (not res!38588) (not e!47510))))

(assert (=> d!16735 (= res!38588 (contains!719 lt!31694 lt!31693))))

(assert (=> d!16735 (= (addApplyDifferent!50 lt!31694 lt!31689 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) lt!31693) lt!32370)))

(declare-fun b!72652 () Bool)

(assert (=> b!72652 (= e!47510 (not (= lt!31693 lt!31689)))))

(assert (= (and d!16735 res!38588) b!72652))

(assert (=> d!16735 m!68715))

(declare-fun m!70865 () Bool)

(assert (=> d!16735 m!70865))

(declare-fun m!70867 () Bool)

(assert (=> d!16735 m!70867))

(assert (=> d!16735 m!68711))

(assert (=> d!16735 m!68715))

(assert (=> d!16735 m!68719))

(assert (=> b!71418 d!16735))

(declare-fun d!16737 () Bool)

(assert (=> d!16737 (= (apply!74 (+!93 lt!31690 (tuple2!2115 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)))) lt!31700) (apply!74 lt!31690 lt!31700))))

(declare-fun lt!32371 () Unit!2002)

(assert (=> d!16737 (= lt!32371 (choose!405 lt!31690 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) lt!31700))))

(declare-fun e!47511 () Bool)

(assert (=> d!16737 e!47511))

(declare-fun res!38589 () Bool)

(assert (=> d!16737 (=> (not res!38589) (not e!47511))))

(assert (=> d!16737 (= res!38589 (contains!719 lt!31690 lt!31700))))

(assert (=> d!16737 (= (addApplyDifferent!50 lt!31690 lt!31696 (ite c!10286 (ite c!10284 (minValue!2096 newMap!16) lt!31264) (minValue!2096 newMap!16)) lt!31700) lt!32371)))

(declare-fun b!72653 () Bool)

(assert (=> b!72653 (= e!47511 (not (= lt!31700 lt!31696)))))

(assert (= (and d!16737 res!38589) b!72653))

(assert (=> d!16737 m!68691))

(declare-fun m!70869 () Bool)

(assert (=> d!16737 m!70869))

(declare-fun m!70871 () Bool)

(assert (=> d!16737 m!70871))

(assert (=> d!16737 m!68701))

(assert (=> d!16737 m!68691))

(assert (=> d!16737 m!68699))

(assert (=> b!71418 d!16737))

(assert (=> b!71418 d!16337))

(declare-fun d!16739 () Bool)

(assert (=> d!16739 (= (apply!74 (+!93 lt!31704 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16))) lt!31692) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31704 (tuple2!2115 lt!31698 (zeroValue!2096 newMap!16)))) lt!31692)))))

(declare-fun bs!3128 () Bool)

(assert (= bs!3128 d!16739))

(declare-fun m!70873 () Bool)

(assert (=> bs!3128 m!70873))

(assert (=> bs!3128 m!70873))

(declare-fun m!70875 () Bool)

(assert (=> bs!3128 m!70875))

(assert (=> b!71418 d!16739))

(declare-fun d!16741 () Bool)

(declare-fun lt!32372 () Bool)

(assert (=> d!16741 (= lt!32372 (select (content!76 (toList!723 lt!31589)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(declare-fun e!47512 () Bool)

(assert (=> d!16741 (= lt!32372 e!47512)))

(declare-fun res!38591 () Bool)

(assert (=> d!16741 (=> (not res!38591) (not e!47512))))

(assert (=> d!16741 (= res!38591 ((_ is Cons!1472) (toList!723 lt!31589)))))

(assert (=> d!16741 (= (contains!722 (toList!723 lt!31589) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) lt!32372)))

(declare-fun b!72654 () Bool)

(declare-fun e!47513 () Bool)

(assert (=> b!72654 (= e!47512 e!47513)))

(declare-fun res!38590 () Bool)

(assert (=> b!72654 (=> res!38590 e!47513)))

(assert (=> b!72654 (= res!38590 (= (h!2058 (toList!723 lt!31589)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(declare-fun b!72655 () Bool)

(assert (=> b!72655 (= e!47513 (contains!722 (t!5012 (toList!723 lt!31589)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)))))

(assert (= (and d!16741 res!38591) b!72654))

(assert (= (and b!72654 (not res!38590)) b!72655))

(declare-fun m!70877 () Bool)

(assert (=> d!16741 m!70877))

(declare-fun m!70879 () Bool)

(assert (=> d!16741 m!70879))

(declare-fun m!70881 () Bool)

(assert (=> b!72655 m!70881))

(assert (=> b!71255 d!16741))

(declare-fun d!16743 () Bool)

(assert (=> d!16743 (= (apply!74 (+!93 lt!31657 (tuple2!2115 lt!31663 (minValue!2096 newMap!16))) lt!31667) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31657 (tuple2!2115 lt!31663 (minValue!2096 newMap!16)))) lt!31667)))))

(declare-fun bs!3129 () Bool)

(assert (= bs!3129 d!16743))

(declare-fun m!70883 () Bool)

(assert (=> bs!3129 m!70883))

(assert (=> bs!3129 m!70883))

(declare-fun m!70885 () Bool)

(assert (=> bs!3129 m!70885))

(assert (=> b!71385 d!16743))

(declare-fun d!16745 () Bool)

(assert (=> d!16745 (= (apply!74 (+!93 lt!31661 (tuple2!2115 lt!31656 (minValue!2096 newMap!16))) lt!31660) (apply!74 lt!31661 lt!31660))))

(declare-fun lt!32373 () Unit!2002)

(assert (=> d!16745 (= lt!32373 (choose!405 lt!31661 lt!31656 (minValue!2096 newMap!16) lt!31660))))

(declare-fun e!47514 () Bool)

(assert (=> d!16745 e!47514))

(declare-fun res!38592 () Bool)

(assert (=> d!16745 (=> (not res!38592) (not e!47514))))

(assert (=> d!16745 (= res!38592 (contains!719 lt!31661 lt!31660))))

(assert (=> d!16745 (= (addApplyDifferent!50 lt!31661 lt!31656 (minValue!2096 newMap!16) lt!31660) lt!32373)))

(declare-fun b!72656 () Bool)

(assert (=> b!72656 (= e!47514 (not (= lt!31660 lt!31656)))))

(assert (= (and d!16745 res!38592) b!72656))

(assert (=> d!16745 m!68643))

(declare-fun m!70887 () Bool)

(assert (=> d!16745 m!70887))

(declare-fun m!70889 () Bool)

(assert (=> d!16745 m!70889))

(assert (=> d!16745 m!68639))

(assert (=> d!16745 m!68643))

(assert (=> d!16745 m!68647))

(assert (=> b!71385 d!16745))

(assert (=> b!71385 d!16355))

(declare-fun d!16747 () Bool)

(declare-fun e!47515 () Bool)

(assert (=> d!16747 e!47515))

(declare-fun res!38593 () Bool)

(assert (=> d!16747 (=> res!38593 e!47515)))

(declare-fun lt!32376 () Bool)

(assert (=> d!16747 (= res!38593 (not lt!32376))))

(declare-fun lt!32375 () Bool)

(assert (=> d!16747 (= lt!32376 lt!32375)))

(declare-fun lt!32374 () Unit!2002)

(declare-fun e!47516 () Unit!2002)

(assert (=> d!16747 (= lt!32374 e!47516)))

(declare-fun c!10762 () Bool)

(assert (=> d!16747 (= c!10762 lt!32375)))

(assert (=> d!16747 (= lt!32375 (containsKey!136 (toList!723 (+!93 lt!31664 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))) lt!31658))))

(assert (=> d!16747 (= (contains!719 (+!93 lt!31664 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) lt!31658) lt!32376)))

(declare-fun b!72657 () Bool)

(declare-fun lt!32377 () Unit!2002)

(assert (=> b!72657 (= e!47516 lt!32377)))

(assert (=> b!72657 (= lt!32377 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (+!93 lt!31664 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))) lt!31658))))

(assert (=> b!72657 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31664 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))) lt!31658))))

(declare-fun b!72658 () Bool)

(declare-fun Unit!2073 () Unit!2002)

(assert (=> b!72658 (= e!47516 Unit!2073)))

(declare-fun b!72659 () Bool)

(assert (=> b!72659 (= e!47515 (isDefined!85 (getValueByKey!132 (toList!723 (+!93 lt!31664 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))) lt!31658)))))

(assert (= (and d!16747 c!10762) b!72657))

(assert (= (and d!16747 (not c!10762)) b!72658))

(assert (= (and d!16747 (not res!38593)) b!72659))

(declare-fun m!70891 () Bool)

(assert (=> d!16747 m!70891))

(declare-fun m!70893 () Bool)

(assert (=> b!72657 m!70893))

(declare-fun m!70895 () Bool)

(assert (=> b!72657 m!70895))

(assert (=> b!72657 m!70895))

(declare-fun m!70897 () Bool)

(assert (=> b!72657 m!70897))

(assert (=> b!72659 m!70895))

(assert (=> b!72659 m!70895))

(assert (=> b!72659 m!70897))

(assert (=> b!71385 d!16747))

(declare-fun d!16749 () Bool)

(declare-fun e!47517 () Bool)

(assert (=> d!16749 e!47517))

(declare-fun res!38594 () Bool)

(assert (=> d!16749 (=> (not res!38594) (not e!47517))))

(declare-fun lt!32380 () ListLongMap!1415)

(assert (=> d!16749 (= res!38594 (contains!719 lt!32380 (_1!1068 (tuple2!2115 lt!31663 (minValue!2096 newMap!16)))))))

(declare-fun lt!32381 () List!1476)

(assert (=> d!16749 (= lt!32380 (ListLongMap!1416 lt!32381))))

(declare-fun lt!32379 () Unit!2002)

(declare-fun lt!32378 () Unit!2002)

(assert (=> d!16749 (= lt!32379 lt!32378)))

(assert (=> d!16749 (= (getValueByKey!132 lt!32381 (_1!1068 (tuple2!2115 lt!31663 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31663 (minValue!2096 newMap!16)))))))

(assert (=> d!16749 (= lt!32378 (lemmaContainsTupThenGetReturnValue!49 lt!32381 (_1!1068 (tuple2!2115 lt!31663 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31663 (minValue!2096 newMap!16)))))))

(assert (=> d!16749 (= lt!32381 (insertStrictlySorted!52 (toList!723 lt!31657) (_1!1068 (tuple2!2115 lt!31663 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31663 (minValue!2096 newMap!16)))))))

(assert (=> d!16749 (= (+!93 lt!31657 (tuple2!2115 lt!31663 (minValue!2096 newMap!16))) lt!32380)))

(declare-fun b!72660 () Bool)

(declare-fun res!38595 () Bool)

(assert (=> b!72660 (=> (not res!38595) (not e!47517))))

(assert (=> b!72660 (= res!38595 (= (getValueByKey!132 (toList!723 lt!32380) (_1!1068 (tuple2!2115 lt!31663 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31663 (minValue!2096 newMap!16))))))))

(declare-fun b!72661 () Bool)

(assert (=> b!72661 (= e!47517 (contains!722 (toList!723 lt!32380) (tuple2!2115 lt!31663 (minValue!2096 newMap!16))))))

(assert (= (and d!16749 res!38594) b!72660))

(assert (= (and b!72660 res!38595) b!72661))

(declare-fun m!70899 () Bool)

(assert (=> d!16749 m!70899))

(declare-fun m!70901 () Bool)

(assert (=> d!16749 m!70901))

(declare-fun m!70903 () Bool)

(assert (=> d!16749 m!70903))

(declare-fun m!70905 () Bool)

(assert (=> d!16749 m!70905))

(declare-fun m!70907 () Bool)

(assert (=> b!72660 m!70907))

(declare-fun m!70909 () Bool)

(assert (=> b!72661 m!70909))

(assert (=> b!71385 d!16749))

(declare-fun d!16751 () Bool)

(assert (=> d!16751 (= (apply!74 lt!31657 lt!31667) (get!1136 (getValueByKey!132 (toList!723 lt!31657) lt!31667)))))

(declare-fun bs!3130 () Bool)

(assert (= bs!3130 d!16751))

(declare-fun m!70911 () Bool)

(assert (=> bs!3130 m!70911))

(assert (=> bs!3130 m!70911))

(declare-fun m!70913 () Bool)

(assert (=> bs!3130 m!70913))

(assert (=> b!71385 d!16751))

(declare-fun d!16753 () Bool)

(assert (=> d!16753 (= (apply!74 lt!31661 lt!31660) (get!1136 (getValueByKey!132 (toList!723 lt!31661) lt!31660)))))

(declare-fun bs!3131 () Bool)

(assert (= bs!3131 d!16753))

(declare-fun m!70915 () Bool)

(assert (=> bs!3131 m!70915))

(assert (=> bs!3131 m!70915))

(declare-fun m!70917 () Bool)

(assert (=> bs!3131 m!70917))

(assert (=> b!71385 d!16753))

(declare-fun d!16755 () Bool)

(assert (=> d!16755 (= (apply!74 lt!31671 lt!31659) (get!1136 (getValueByKey!132 (toList!723 lt!31671) lt!31659)))))

(declare-fun bs!3132 () Bool)

(assert (= bs!3132 d!16755))

(declare-fun m!70919 () Bool)

(assert (=> bs!3132 m!70919))

(assert (=> bs!3132 m!70919))

(declare-fun m!70921 () Bool)

(assert (=> bs!3132 m!70921))

(assert (=> b!71385 d!16755))

(declare-fun d!16757 () Bool)

(assert (=> d!16757 (= (apply!74 (+!93 lt!31671 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) lt!31659) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31671 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))) lt!31659)))))

(declare-fun bs!3133 () Bool)

(assert (= bs!3133 d!16757))

(declare-fun m!70923 () Bool)

(assert (=> bs!3133 m!70923))

(assert (=> bs!3133 m!70923))

(declare-fun m!70925 () Bool)

(assert (=> bs!3133 m!70925))

(assert (=> b!71385 d!16757))

(declare-fun d!16759 () Bool)

(assert (=> d!16759 (= (apply!74 (+!93 lt!31671 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) lt!31659) (apply!74 lt!31671 lt!31659))))

(declare-fun lt!32382 () Unit!2002)

(assert (=> d!16759 (= lt!32382 (choose!405 lt!31671 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) lt!31659))))

(declare-fun e!47518 () Bool)

(assert (=> d!16759 e!47518))

(declare-fun res!38596 () Bool)

(assert (=> d!16759 (=> (not res!38596) (not e!47518))))

(assert (=> d!16759 (= res!38596 (contains!719 lt!31671 lt!31659))))

(assert (=> d!16759 (= (addApplyDifferent!50 lt!31671 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) lt!31659) lt!32382)))

(declare-fun b!72662 () Bool)

(assert (=> b!72662 (= e!47518 (not (= lt!31659 lt!31665)))))

(assert (= (and d!16759 res!38596) b!72662))

(assert (=> d!16759 m!68621))

(declare-fun m!70927 () Bool)

(assert (=> d!16759 m!70927))

(declare-fun m!70929 () Bool)

(assert (=> d!16759 m!70929))

(assert (=> d!16759 m!68645))

(assert (=> d!16759 m!68621))

(assert (=> d!16759 m!68637))

(assert (=> b!71385 d!16759))

(declare-fun d!16761 () Bool)

(declare-fun e!47519 () Bool)

(assert (=> d!16761 e!47519))

(declare-fun res!38597 () Bool)

(assert (=> d!16761 (=> (not res!38597) (not e!47519))))

(declare-fun lt!32385 () ListLongMap!1415)

(assert (=> d!16761 (= res!38597 (contains!719 lt!32385 (_1!1068 (tuple2!2115 lt!31656 (minValue!2096 newMap!16)))))))

(declare-fun lt!32386 () List!1476)

(assert (=> d!16761 (= lt!32385 (ListLongMap!1416 lt!32386))))

(declare-fun lt!32384 () Unit!2002)

(declare-fun lt!32383 () Unit!2002)

(assert (=> d!16761 (= lt!32384 lt!32383)))

(assert (=> d!16761 (= (getValueByKey!132 lt!32386 (_1!1068 (tuple2!2115 lt!31656 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31656 (minValue!2096 newMap!16)))))))

(assert (=> d!16761 (= lt!32383 (lemmaContainsTupThenGetReturnValue!49 lt!32386 (_1!1068 (tuple2!2115 lt!31656 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31656 (minValue!2096 newMap!16)))))))

(assert (=> d!16761 (= lt!32386 (insertStrictlySorted!52 (toList!723 lt!31661) (_1!1068 (tuple2!2115 lt!31656 (minValue!2096 newMap!16))) (_2!1068 (tuple2!2115 lt!31656 (minValue!2096 newMap!16)))))))

(assert (=> d!16761 (= (+!93 lt!31661 (tuple2!2115 lt!31656 (minValue!2096 newMap!16))) lt!32385)))

(declare-fun b!72663 () Bool)

(declare-fun res!38598 () Bool)

(assert (=> b!72663 (=> (not res!38598) (not e!47519))))

(assert (=> b!72663 (= res!38598 (= (getValueByKey!132 (toList!723 lt!32385) (_1!1068 (tuple2!2115 lt!31656 (minValue!2096 newMap!16)))) (Some!137 (_2!1068 (tuple2!2115 lt!31656 (minValue!2096 newMap!16))))))))

(declare-fun b!72664 () Bool)

(assert (=> b!72664 (= e!47519 (contains!722 (toList!723 lt!32385) (tuple2!2115 lt!31656 (minValue!2096 newMap!16))))))

(assert (= (and d!16761 res!38597) b!72663))

(assert (= (and b!72663 res!38598) b!72664))

(declare-fun m!70931 () Bool)

(assert (=> d!16761 m!70931))

(declare-fun m!70933 () Bool)

(assert (=> d!16761 m!70933))

(declare-fun m!70935 () Bool)

(assert (=> d!16761 m!70935))

(declare-fun m!70937 () Bool)

(assert (=> d!16761 m!70937))

(declare-fun m!70939 () Bool)

(assert (=> b!72663 m!70939))

(declare-fun m!70941 () Bool)

(assert (=> b!72664 m!70941))

(assert (=> b!71385 d!16761))

(declare-fun d!16763 () Bool)

(assert (=> d!16763 (contains!719 (+!93 lt!31664 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) lt!31658)))

(declare-fun lt!32387 () Unit!2002)

(assert (=> d!16763 (= lt!32387 (choose!406 lt!31664 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) lt!31658))))

(assert (=> d!16763 (contains!719 lt!31664 lt!31658)))

(assert (=> d!16763 (= (addStillContains!50 lt!31664 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)) lt!31658) lt!32387)))

(declare-fun bs!3134 () Bool)

(assert (= bs!3134 d!16763))

(assert (=> bs!3134 m!68633))

(assert (=> bs!3134 m!68633))

(assert (=> bs!3134 m!68641))

(declare-fun m!70943 () Bool)

(assert (=> bs!3134 m!70943))

(declare-fun m!70945 () Bool)

(assert (=> bs!3134 m!70945))

(assert (=> b!71385 d!16763))

(declare-fun d!16765 () Bool)

(assert (=> d!16765 (= (apply!74 (+!93 lt!31657 (tuple2!2115 lt!31663 (minValue!2096 newMap!16))) lt!31667) (apply!74 lt!31657 lt!31667))))

(declare-fun lt!32388 () Unit!2002)

(assert (=> d!16765 (= lt!32388 (choose!405 lt!31657 lt!31663 (minValue!2096 newMap!16) lt!31667))))

(declare-fun e!47520 () Bool)

(assert (=> d!16765 e!47520))

(declare-fun res!38599 () Bool)

(assert (=> d!16765 (=> (not res!38599) (not e!47520))))

(assert (=> d!16765 (= res!38599 (contains!719 lt!31657 lt!31667))))

(assert (=> d!16765 (= (addApplyDifferent!50 lt!31657 lt!31663 (minValue!2096 newMap!16) lt!31667) lt!32388)))

(declare-fun b!72665 () Bool)

(assert (=> b!72665 (= e!47520 (not (= lt!31667 lt!31663)))))

(assert (= (and d!16765 res!38599) b!72665))

(assert (=> d!16765 m!68619))

(declare-fun m!70947 () Bool)

(assert (=> d!16765 m!70947))

(declare-fun m!70949 () Bool)

(assert (=> d!16765 m!70949))

(assert (=> d!16765 m!68629))

(assert (=> d!16765 m!68619))

(assert (=> d!16765 m!68627))

(assert (=> b!71385 d!16765))

(declare-fun d!16767 () Bool)

(declare-fun e!47521 () Bool)

(assert (=> d!16767 e!47521))

(declare-fun res!38600 () Bool)

(assert (=> d!16767 (=> (not res!38600) (not e!47521))))

(declare-fun lt!32391 () ListLongMap!1415)

(assert (=> d!16767 (= res!38600 (contains!719 lt!32391 (_1!1068 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))))))

(declare-fun lt!32392 () List!1476)

(assert (=> d!16767 (= lt!32391 (ListLongMap!1416 lt!32392))))

(declare-fun lt!32390 () Unit!2002)

(declare-fun lt!32389 () Unit!2002)

(assert (=> d!16767 (= lt!32390 lt!32389)))

(assert (=> d!16767 (= (getValueByKey!132 lt!32392 (_1!1068 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))) (Some!137 (_2!1068 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16767 (= lt!32389 (lemmaContainsTupThenGetReturnValue!49 lt!32392 (_1!1068 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) (_2!1068 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16767 (= lt!32392 (insertStrictlySorted!52 (toList!723 lt!31664) (_1!1068 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) (_2!1068 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16767 (= (+!93 lt!31664 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) lt!32391)))

(declare-fun b!72666 () Bool)

(declare-fun res!38601 () Bool)

(assert (=> b!72666 (=> (not res!38601) (not e!47521))))

(assert (=> b!72666 (= res!38601 (= (getValueByKey!132 (toList!723 lt!32391) (_1!1068 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))) (Some!137 (_2!1068 (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))))))))

(declare-fun b!72667 () Bool)

(assert (=> b!72667 (= e!47521 (contains!722 (toList!723 lt!32391) (tuple2!2115 lt!31673 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))))))

(assert (= (and d!16767 res!38600) b!72666))

(assert (= (and b!72666 res!38601) b!72667))

(declare-fun m!70951 () Bool)

(assert (=> d!16767 m!70951))

(declare-fun m!70953 () Bool)

(assert (=> d!16767 m!70953))

(declare-fun m!70955 () Bool)

(assert (=> d!16767 m!70955))

(declare-fun m!70957 () Bool)

(assert (=> d!16767 m!70957))

(declare-fun m!70959 () Bool)

(assert (=> b!72666 m!70959))

(declare-fun m!70961 () Bool)

(assert (=> b!72667 m!70961))

(assert (=> b!71385 d!16767))

(declare-fun d!16769 () Bool)

(assert (=> d!16769 (= (apply!74 (+!93 lt!31661 (tuple2!2115 lt!31656 (minValue!2096 newMap!16))) lt!31660) (get!1136 (getValueByKey!132 (toList!723 (+!93 lt!31661 (tuple2!2115 lt!31656 (minValue!2096 newMap!16)))) lt!31660)))))

(declare-fun bs!3135 () Bool)

(assert (= bs!3135 d!16769))

(declare-fun m!70963 () Bool)

(assert (=> bs!3135 m!70963))

(assert (=> bs!3135 m!70963))

(declare-fun m!70965 () Bool)

(assert (=> bs!3135 m!70965))

(assert (=> b!71385 d!16769))

(declare-fun d!16771 () Bool)

(declare-fun e!47522 () Bool)

(assert (=> d!16771 e!47522))

(declare-fun res!38602 () Bool)

(assert (=> d!16771 (=> (not res!38602) (not e!47522))))

(declare-fun lt!32395 () ListLongMap!1415)

(assert (=> d!16771 (= res!38602 (contains!719 lt!32395 (_1!1068 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))))))

(declare-fun lt!32396 () List!1476)

(assert (=> d!16771 (= lt!32395 (ListLongMap!1416 lt!32396))))

(declare-fun lt!32394 () Unit!2002)

(declare-fun lt!32393 () Unit!2002)

(assert (=> d!16771 (= lt!32394 lt!32393)))

(assert (=> d!16771 (= (getValueByKey!132 lt!32396 (_1!1068 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))) (Some!137 (_2!1068 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16771 (= lt!32393 (lemmaContainsTupThenGetReturnValue!49 lt!32396 (_1!1068 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) (_2!1068 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16771 (= lt!32396 (insertStrictlySorted!52 (toList!723 lt!31671) (_1!1068 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) (_2!1068 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))))))

(assert (=> d!16771 (= (+!93 lt!31671 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))) lt!32395)))

(declare-fun b!72668 () Bool)

(declare-fun res!38603 () Bool)

(assert (=> b!72668 (=> (not res!38603) (not e!47522))))

(assert (=> b!72668 (= res!38603 (= (getValueByKey!132 (toList!723 lt!32395) (_1!1068 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16))))) (Some!137 (_2!1068 (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))))))))

(declare-fun b!72669 () Bool)

(assert (=> b!72669 (= e!47522 (contains!722 (toList!723 lt!32395) (tuple2!2115 lt!31665 (ite (and c!10286 c!10284) lt!31264 (zeroValue!2096 newMap!16)))))))

(assert (= (and d!16771 res!38602) b!72668))

(assert (= (and b!72668 res!38603) b!72669))

(declare-fun m!70967 () Bool)

(assert (=> d!16771 m!70967))

(declare-fun m!70969 () Bool)

(assert (=> d!16771 m!70969))

(declare-fun m!70971 () Bool)

(assert (=> d!16771 m!70971))

(declare-fun m!70973 () Bool)

(assert (=> d!16771 m!70973))

(declare-fun m!70975 () Bool)

(assert (=> b!72668 m!70975))

(declare-fun m!70977 () Bool)

(assert (=> b!72669 m!70977))

(assert (=> b!71385 d!16771))

(declare-fun d!16773 () Bool)

(declare-fun res!38605 () Bool)

(declare-fun e!47523 () Bool)

(assert (=> d!16773 (=> res!38605 e!47523)))

(assert (=> d!16773 (= res!38605 (bvsge #b00000000000000000000000000000000 (size!2090 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))))

(assert (=> d!16773 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (mask!6149 newMap!16)) e!47523)))

(declare-fun b!72670 () Bool)

(declare-fun e!47524 () Bool)

(assert (=> b!72670 (= e!47523 e!47524)))

(declare-fun c!10763 () Bool)

(assert (=> b!72670 (= c!10763 (validKeyInArray!0 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!72671 () Bool)

(declare-fun e!47525 () Bool)

(declare-fun call!6334 () Bool)

(assert (=> b!72671 (= e!47525 call!6334)))

(declare-fun bm!6331 () Bool)

(assert (=> bm!6331 (= call!6334 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (mask!6149 newMap!16)))))

(declare-fun b!72672 () Bool)

(assert (=> b!72672 (= e!47524 call!6334)))

(declare-fun b!72673 () Bool)

(assert (=> b!72673 (= e!47524 e!47525)))

(declare-fun lt!32398 () (_ BitVec 64))

(assert (=> b!72673 (= lt!32398 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32399 () Unit!2002)

(assert (=> b!72673 (= lt!32399 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) lt!32398 #b00000000000000000000000000000000))))

(assert (=> b!72673 (arrayContainsKey!0 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) lt!32398 #b00000000000000000000000000000000)))

(declare-fun lt!32397 () Unit!2002)

(assert (=> b!72673 (= lt!32397 lt!32399)))

(declare-fun res!38604 () Bool)

(assert (=> b!72673 (= res!38604 (= (seekEntryOrOpen!0 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000) (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (mask!6149 newMap!16)) (Found!235 #b00000000000000000000000000000000)))))

(assert (=> b!72673 (=> (not res!38604) (not e!47525))))

(assert (= (and d!16773 (not res!38605)) b!72670))

(assert (= (and b!72670 c!10763) b!72673))

(assert (= (and b!72670 (not c!10763)) b!72672))

(assert (= (and b!72673 res!38604) b!72671))

(assert (= (or b!72671 b!72672) bm!6331))

(declare-fun m!70979 () Bool)

(assert (=> b!72670 m!70979))

(assert (=> b!72670 m!70979))

(declare-fun m!70981 () Bool)

(assert (=> b!72670 m!70981))

(declare-fun m!70983 () Bool)

(assert (=> bm!6331 m!70983))

(assert (=> b!72673 m!70979))

(declare-fun m!70985 () Bool)

(assert (=> b!72673 m!70985))

(declare-fun m!70987 () Bool)

(assert (=> b!72673 m!70987))

(assert (=> b!72673 m!70979))

(declare-fun m!70989 () Bool)

(assert (=> b!72673 m!70989))

(assert (=> d!16007 d!16773))

(declare-fun d!16775 () Bool)

(declare-fun e!47526 () Bool)

(assert (=> d!16775 e!47526))

(declare-fun res!38606 () Bool)

(assert (=> d!16775 (=> (not res!38606) (not e!47526))))

(assert (=> d!16775 (= res!38606 (and (bvsge (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000000) (bvslt (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (size!2090 lt!31850))))))

(declare-fun lt!32400 () Unit!2002)

(assert (=> d!16775 (= lt!32400 (choose!398 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (defaultEntry!2192 newMap!16)))))

(assert (=> d!16775 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16775 (= (lemmaValidKeyInArrayIsInListMap!84 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (defaultEntry!2192 newMap!16)) lt!32400)))

(declare-fun b!72674 () Bool)

(assert (=> b!72674 (= e!47526 (contains!719 (getCurrentListMap!421 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (arr!1853 lt!31850) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)))))))

(assert (= (and d!16775 res!38606) b!72674))

(declare-fun m!70991 () Bool)

(assert (=> d!16775 m!70991))

(assert (=> d!16775 m!68263))

(assert (=> b!72674 m!68903))

(declare-fun m!70993 () Bool)

(assert (=> b!72674 m!70993))

(assert (=> b!72674 m!68903))

(assert (=> b!72674 m!70993))

(declare-fun m!70995 () Bool)

(assert (=> b!72674 m!70995))

(assert (=> d!16007 d!16775))

(assert (=> d!16007 d!15855))

(declare-fun b!72675 () Bool)

(declare-fun c!10765 () Bool)

(assert (=> b!72675 (= c!10765 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47536 () ListLongMap!1415)

(declare-fun e!47534 () ListLongMap!1415)

(assert (=> b!72675 (= e!47536 e!47534)))

(declare-fun b!72676 () Bool)

(declare-fun e!47532 () Bool)

(declare-fun e!47527 () Bool)

(assert (=> b!72676 (= e!47532 e!47527)))

(declare-fun res!38614 () Bool)

(declare-fun call!6337 () Bool)

(assert (=> b!72676 (= res!38614 call!6337)))

(assert (=> b!72676 (=> (not res!38614) (not e!47527))))

(declare-fun b!72677 () Bool)

(declare-fun e!47529 () Bool)

(declare-fun lt!32418 () ListLongMap!1415)

(assert (=> b!72677 (= e!47529 (= (apply!74 lt!32418 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!72678 () Bool)

(declare-fun e!47533 () Bool)

(assert (=> b!72678 (= e!47533 e!47529)))

(declare-fun res!38613 () Bool)

(declare-fun call!6335 () Bool)

(assert (=> b!72678 (= res!38613 call!6335)))

(assert (=> b!72678 (=> (not res!38613) (not e!47529))))

(declare-fun bm!6332 () Bool)

(assert (=> bm!6332 (= call!6337 (contains!719 lt!32418 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6333 () Bool)

(declare-fun call!6338 () ListLongMap!1415)

(declare-fun call!6339 () ListLongMap!1415)

(assert (=> bm!6333 (= call!6338 call!6339)))

(declare-fun b!72680 () Bool)

(declare-fun call!6341 () ListLongMap!1415)

(assert (=> b!72680 (= e!47534 call!6341)))

(declare-fun e!47539 () Bool)

(declare-fun b!72681 () Bool)

(assert (=> b!72681 (= e!47539 (validKeyInArray!0 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6334 () Bool)

(declare-fun call!6336 () ListLongMap!1415)

(declare-fun call!6340 () ListLongMap!1415)

(assert (=> bm!6334 (= call!6336 call!6340)))

(declare-fun b!72682 () Bool)

(declare-fun e!47535 () Unit!2002)

(declare-fun lt!32421 () Unit!2002)

(assert (=> b!72682 (= e!47535 lt!32421)))

(declare-fun lt!32410 () ListLongMap!1415)

(assert (=> b!72682 (= lt!32410 (getCurrentListMapNoExtraKeys!58 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32419 () (_ BitVec 64))

(assert (=> b!72682 (= lt!32419 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32404 () (_ BitVec 64))

(assert (=> b!72682 (= lt!32404 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32416 () Unit!2002)

(assert (=> b!72682 (= lt!32416 (addStillContains!50 lt!32410 lt!32419 (zeroValue!2096 newMap!16) lt!32404))))

(assert (=> b!72682 (contains!719 (+!93 lt!32410 (tuple2!2115 lt!32419 (zeroValue!2096 newMap!16))) lt!32404)))

(declare-fun lt!32422 () Unit!2002)

(assert (=> b!72682 (= lt!32422 lt!32416)))

(declare-fun lt!32403 () ListLongMap!1415)

(assert (=> b!72682 (= lt!32403 (getCurrentListMapNoExtraKeys!58 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32409 () (_ BitVec 64))

(assert (=> b!72682 (= lt!32409 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32413 () (_ BitVec 64))

(assert (=> b!72682 (= lt!32413 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32415 () Unit!2002)

(assert (=> b!72682 (= lt!32415 (addApplyDifferent!50 lt!32403 lt!32409 (minValue!2096 newMap!16) lt!32413))))

(assert (=> b!72682 (= (apply!74 (+!93 lt!32403 (tuple2!2115 lt!32409 (minValue!2096 newMap!16))) lt!32413) (apply!74 lt!32403 lt!32413))))

(declare-fun lt!32420 () Unit!2002)

(assert (=> b!72682 (= lt!32420 lt!32415)))

(declare-fun lt!32417 () ListLongMap!1415)

(assert (=> b!72682 (= lt!32417 (getCurrentListMapNoExtraKeys!58 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32411 () (_ BitVec 64))

(assert (=> b!72682 (= lt!32411 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32405 () (_ BitVec 64))

(assert (=> b!72682 (= lt!32405 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32408 () Unit!2002)

(assert (=> b!72682 (= lt!32408 (addApplyDifferent!50 lt!32417 lt!32411 (zeroValue!2096 newMap!16) lt!32405))))

(assert (=> b!72682 (= (apply!74 (+!93 lt!32417 (tuple2!2115 lt!32411 (zeroValue!2096 newMap!16))) lt!32405) (apply!74 lt!32417 lt!32405))))

(declare-fun lt!32412 () Unit!2002)

(assert (=> b!72682 (= lt!32412 lt!32408)))

(declare-fun lt!32407 () ListLongMap!1415)

(assert (=> b!72682 (= lt!32407 (getCurrentListMapNoExtraKeys!58 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32402 () (_ BitVec 64))

(assert (=> b!72682 (= lt!32402 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32406 () (_ BitVec 64))

(assert (=> b!72682 (= lt!32406 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!72682 (= lt!32421 (addApplyDifferent!50 lt!32407 lt!32402 (minValue!2096 newMap!16) lt!32406))))

(assert (=> b!72682 (= (apply!74 (+!93 lt!32407 (tuple2!2115 lt!32402 (minValue!2096 newMap!16))) lt!32406) (apply!74 lt!32407 lt!32406))))

(declare-fun b!72683 () Bool)

(declare-fun e!47537 () Bool)

(declare-fun e!47528 () Bool)

(assert (=> b!72683 (= e!47537 e!47528)))

(declare-fun res!38612 () Bool)

(assert (=> b!72683 (=> (not res!38612) (not e!47528))))

(assert (=> b!72683 (= res!38612 (contains!719 lt!32418 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!72683 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))))

(declare-fun b!72684 () Bool)

(assert (=> b!72684 (= e!47533 (not call!6335))))

(declare-fun b!72685 () Bool)

(declare-fun e!47538 () Bool)

(assert (=> b!72685 (= e!47538 (validKeyInArray!0 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!72686 () Bool)

(assert (=> b!72686 (= e!47536 call!6336)))

(declare-fun b!72687 () Bool)

(declare-fun e!47531 () ListLongMap!1415)

(assert (=> b!72687 (= e!47531 e!47536)))

(declare-fun c!10767 () Bool)

(assert (=> b!72687 (= c!10767 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6335 () Bool)

(assert (=> bm!6335 (= call!6335 (contains!719 lt!32418 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72688 () Bool)

(assert (=> b!72688 (= e!47528 (= (apply!74 lt!32418 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72688 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))))))))

(assert (=> b!72688 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))))

(declare-fun b!72679 () Bool)

(assert (=> b!72679 (= e!47532 (not call!6337))))

(declare-fun d!16777 () Bool)

(declare-fun e!47530 () Bool)

(assert (=> d!16777 e!47530))

(declare-fun res!38610 () Bool)

(assert (=> d!16777 (=> (not res!38610) (not e!47530))))

(assert (=> d!16777 (= res!38610 (or (bvsge #b00000000000000000000000000000000 (size!2090 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))))))

(declare-fun lt!32401 () ListLongMap!1415)

(assert (=> d!16777 (= lt!32418 lt!32401)))

(declare-fun lt!32414 () Unit!2002)

(assert (=> d!16777 (= lt!32414 e!47535)))

(declare-fun c!10768 () Bool)

(assert (=> d!16777 (= c!10768 e!47539)))

(declare-fun res!38615 () Bool)

(assert (=> d!16777 (=> (not res!38615) (not e!47539))))

(assert (=> d!16777 (= res!38615 (bvslt #b00000000000000000000000000000000 (size!2090 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))))

(assert (=> d!16777 (= lt!32401 e!47531)))

(declare-fun c!10769 () Bool)

(assert (=> d!16777 (= c!10769 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16777 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16777 (= (getCurrentListMap!421 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32418)))

(declare-fun b!72689 () Bool)

(declare-fun Unit!2074 () Unit!2002)

(assert (=> b!72689 (= e!47535 Unit!2074)))

(declare-fun b!72690 () Bool)

(assert (=> b!72690 (= e!47527 (= (apply!74 lt!32418 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun bm!6336 () Bool)

(assert (=> bm!6336 (= call!6340 (+!93 (ite c!10769 call!6339 (ite c!10767 call!6338 call!6341)) (ite (or c!10769 c!10767) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun b!72691 () Bool)

(declare-fun res!38611 () Bool)

(assert (=> b!72691 (=> (not res!38611) (not e!47530))))

(assert (=> b!72691 (= res!38611 e!47533)))

(declare-fun c!10766 () Bool)

(assert (=> b!72691 (= c!10766 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6337 () Bool)

(assert (=> bm!6337 (= call!6339 (getCurrentListMapNoExtraKeys!58 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!72692 () Bool)

(assert (=> b!72692 (= e!47531 (+!93 call!6340 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun bm!6338 () Bool)

(assert (=> bm!6338 (= call!6341 call!6338)))

(declare-fun b!72693 () Bool)

(assert (=> b!72693 (= e!47534 call!6336)))

(declare-fun b!72694 () Bool)

(declare-fun res!38608 () Bool)

(assert (=> b!72694 (=> (not res!38608) (not e!47530))))

(assert (=> b!72694 (= res!38608 e!47537)))

(declare-fun res!38609 () Bool)

(assert (=> b!72694 (=> res!38609 e!47537)))

(assert (=> b!72694 (= res!38609 (not e!47538))))

(declare-fun res!38607 () Bool)

(assert (=> b!72694 (=> (not res!38607) (not e!47538))))

(assert (=> b!72694 (= res!38607 (bvslt #b00000000000000000000000000000000 (size!2090 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))))

(declare-fun b!72695 () Bool)

(assert (=> b!72695 (= e!47530 e!47532)))

(declare-fun c!10764 () Bool)

(assert (=> b!72695 (= c!10764 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!16777 c!10769) b!72692))

(assert (= (and d!16777 (not c!10769)) b!72687))

(assert (= (and b!72687 c!10767) b!72686))

(assert (= (and b!72687 (not c!10767)) b!72675))

(assert (= (and b!72675 c!10765) b!72693))

(assert (= (and b!72675 (not c!10765)) b!72680))

(assert (= (or b!72693 b!72680) bm!6338))

(assert (= (or b!72686 bm!6338) bm!6333))

(assert (= (or b!72686 b!72693) bm!6334))

(assert (= (or b!72692 bm!6333) bm!6337))

(assert (= (or b!72692 bm!6334) bm!6336))

(assert (= (and d!16777 res!38615) b!72681))

(assert (= (and d!16777 c!10768) b!72682))

(assert (= (and d!16777 (not c!10768)) b!72689))

(assert (= (and d!16777 res!38610) b!72694))

(assert (= (and b!72694 res!38607) b!72685))

(assert (= (and b!72694 (not res!38609)) b!72683))

(assert (= (and b!72683 res!38612) b!72688))

(assert (= (and b!72694 res!38608) b!72691))

(assert (= (and b!72691 c!10766) b!72678))

(assert (= (and b!72691 (not c!10766)) b!72684))

(assert (= (and b!72678 res!38613) b!72677))

(assert (= (or b!72678 b!72684) bm!6335))

(assert (= (and b!72691 res!38611) b!72695))

(assert (= (and b!72695 c!10764) b!72676))

(assert (= (and b!72695 (not c!10764)) b!72679))

(assert (= (and b!72676 res!38614) b!72690))

(assert (= (or b!72676 b!72679) bm!6332))

(declare-fun b_lambda!3241 () Bool)

(assert (=> (not b_lambda!3241) (not b!72688)))

(assert (=> b!72688 t!5019))

(declare-fun b_and!4459 () Bool)

(assert (= b_and!4455 (and (=> t!5019 result!2665) b_and!4459)))

(assert (=> b!72688 t!5021))

(declare-fun b_and!4461 () Bool)

(assert (= b_and!4457 (and (=> t!5021 result!2667) b_and!4461)))

(assert (=> b!72683 m!70979))

(assert (=> b!72683 m!70979))

(declare-fun m!70997 () Bool)

(assert (=> b!72683 m!70997))

(assert (=> b!72688 m!68287))

(assert (=> b!72688 m!70979))

(declare-fun m!70999 () Bool)

(assert (=> b!72688 m!70999))

(assert (=> b!72688 m!70979))

(declare-fun m!71001 () Bool)

(assert (=> b!72688 m!71001))

(assert (=> b!72688 m!71001))

(assert (=> b!72688 m!68287))

(declare-fun m!71003 () Bool)

(assert (=> b!72688 m!71003))

(declare-fun m!71005 () Bool)

(assert (=> bm!6337 m!71005))

(assert (=> b!72681 m!70979))

(assert (=> b!72681 m!70979))

(assert (=> b!72681 m!70981))

(declare-fun m!71007 () Bool)

(assert (=> b!72677 m!71007))

(declare-fun m!71009 () Bool)

(assert (=> bm!6336 m!71009))

(declare-fun m!71011 () Bool)

(assert (=> b!72690 m!71011))

(declare-fun m!71013 () Bool)

(assert (=> b!72692 m!71013))

(assert (=> d!16777 m!68263))

(declare-fun m!71015 () Bool)

(assert (=> bm!6332 m!71015))

(declare-fun m!71017 () Bool)

(assert (=> b!72682 m!71017))

(declare-fun m!71019 () Bool)

(assert (=> b!72682 m!71019))

(declare-fun m!71021 () Bool)

(assert (=> b!72682 m!71021))

(declare-fun m!71023 () Bool)

(assert (=> b!72682 m!71023))

(assert (=> b!72682 m!71017))

(declare-fun m!71025 () Bool)

(assert (=> b!72682 m!71025))

(declare-fun m!71027 () Bool)

(assert (=> b!72682 m!71027))

(declare-fun m!71029 () Bool)

(assert (=> b!72682 m!71029))

(declare-fun m!71031 () Bool)

(assert (=> b!72682 m!71031))

(assert (=> b!72682 m!70979))

(declare-fun m!71033 () Bool)

(assert (=> b!72682 m!71033))

(assert (=> b!72682 m!71005))

(assert (=> b!72682 m!71019))

(declare-fun m!71035 () Bool)

(assert (=> b!72682 m!71035))

(declare-fun m!71037 () Bool)

(assert (=> b!72682 m!71037))

(assert (=> b!72682 m!71031))

(declare-fun m!71039 () Bool)

(assert (=> b!72682 m!71039))

(declare-fun m!71041 () Bool)

(assert (=> b!72682 m!71041))

(declare-fun m!71043 () Bool)

(assert (=> b!72682 m!71043))

(assert (=> b!72682 m!71041))

(declare-fun m!71045 () Bool)

(assert (=> b!72682 m!71045))

(declare-fun m!71047 () Bool)

(assert (=> bm!6335 m!71047))

(assert (=> b!72685 m!70979))

(assert (=> b!72685 m!70979))

(assert (=> b!72685 m!70981))

(assert (=> d!16007 d!16777))

(assert (=> d!16007 d!16005))

(declare-fun b!72704 () Bool)

(declare-fun res!38626 () Bool)

(declare-fun e!47544 () Bool)

(assert (=> b!72704 (=> (not res!38626) (not e!47544))))

(assert (=> b!72704 (= res!38626 (not (validKeyInArray!0 (select (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))))))))

(declare-fun d!16779 () Bool)

(declare-fun e!47545 () Bool)

(assert (=> d!16779 e!47545))

(declare-fun res!38624 () Bool)

(assert (=> d!16779 (=> (not res!38624) (not e!47545))))

(assert (=> d!16779 (= res!38624 (and (bvsge (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000000) (bvslt (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (size!2090 (_keys!3840 newMap!16)))))))

(declare-fun lt!32425 () Unit!2002)

(declare-fun choose!1 (array!3881 (_ BitVec 32) (_ BitVec 64)) Unit!2002)

(assert (=> d!16779 (= lt!32425 (choose!1 (_keys!3840 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!16779 e!47544))

(declare-fun res!38625 () Bool)

(assert (=> d!16779 (=> (not res!38625) (not e!47544))))

(assert (=> d!16779 (= res!38625 (and (bvsge (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000000) (bvslt (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (size!2090 (_keys!3840 newMap!16)))))))

(assert (=> d!16779 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3840 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) lt!32425)))

(declare-fun b!72707 () Bool)

(assert (=> b!72707 (= e!47545 (= (arrayCountValidKeys!0 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3840 newMap!16) #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!72706 () Bool)

(assert (=> b!72706 (= e!47544 (bvslt (size!2090 (_keys!3840 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!72705 () Bool)

(declare-fun res!38627 () Bool)

(assert (=> b!72705 (=> (not res!38627) (not e!47544))))

(assert (=> b!72705 (= res!38627 (validKeyInArray!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (= (and d!16779 res!38625) b!72704))

(assert (= (and b!72704 res!38626) b!72705))

(assert (= (and b!72705 res!38627) b!72706))

(assert (= (and d!16779 res!38624) b!72707))

(declare-fun m!71049 () Bool)

(assert (=> b!72704 m!71049))

(assert (=> b!72704 m!71049))

(declare-fun m!71051 () Bool)

(assert (=> b!72704 m!71051))

(assert (=> d!16779 m!67893))

(declare-fun m!71053 () Bool)

(assert (=> d!16779 m!71053))

(assert (=> b!72707 m!68909))

(assert (=> b!72707 m!68913))

(assert (=> b!72707 m!68219))

(assert (=> b!72705 m!67893))

(assert (=> b!72705 m!68013))

(assert (=> d!16007 d!16779))

(declare-fun d!16781 () Bool)

(declare-fun e!47546 () Bool)

(assert (=> d!16781 e!47546))

(declare-fun res!38628 () Bool)

(assert (=> d!16781 (=> res!38628 e!47546)))

(declare-fun lt!32428 () Bool)

(assert (=> d!16781 (= res!38628 (not lt!32428))))

(declare-fun lt!32427 () Bool)

(assert (=> d!16781 (= lt!32428 lt!32427)))

(declare-fun lt!32426 () Unit!2002)

(declare-fun e!47547 () Unit!2002)

(assert (=> d!16781 (= lt!32426 e!47547)))

(declare-fun c!10770 () Bool)

(assert (=> d!16781 (= c!10770 lt!32427)))

(assert (=> d!16781 (= lt!32427 (containsKey!136 (toList!723 (getCurrentListMap!421 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)))))))

(assert (=> d!16781 (= (contains!719 (getCurrentListMap!421 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (select (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)))) lt!32428)))

(declare-fun b!72708 () Bool)

(declare-fun lt!32429 () Unit!2002)

(assert (=> b!72708 (= e!47547 lt!32429)))

(assert (=> b!72708 (= lt!32429 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 (getCurrentListMap!421 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)))))))

(assert (=> b!72708 (isDefined!85 (getValueByKey!132 (toList!723 (getCurrentListMap!421 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)))))))

(declare-fun b!72709 () Bool)

(declare-fun Unit!2075 () Unit!2002)

(assert (=> b!72709 (= e!47547 Unit!2075)))

(declare-fun b!72710 () Bool)

(assert (=> b!72710 (= e!47546 (isDefined!85 (getValueByKey!132 (toList!723 (getCurrentListMap!421 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))) (select (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))))))))

(assert (= (and d!16781 c!10770) b!72708))

(assert (= (and d!16781 (not c!10770)) b!72709))

(assert (= (and d!16781 (not res!38628)) b!72710))

(assert (=> d!16781 m!68919))

(declare-fun m!71055 () Bool)

(assert (=> d!16781 m!71055))

(assert (=> b!72708 m!68919))

(declare-fun m!71057 () Bool)

(assert (=> b!72708 m!71057))

(assert (=> b!72708 m!68919))

(declare-fun m!71059 () Bool)

(assert (=> b!72708 m!71059))

(assert (=> b!72708 m!71059))

(declare-fun m!71061 () Bool)

(assert (=> b!72708 m!71061))

(assert (=> b!72710 m!68919))

(assert (=> b!72710 m!71059))

(assert (=> b!72710 m!71059))

(assert (=> b!72710 m!71061))

(assert (=> d!16007 d!16781))

(declare-fun d!16783 () Bool)

(declare-fun res!38629 () Bool)

(declare-fun e!47548 () Bool)

(assert (=> d!16783 (=> res!38629 e!47548)))

(assert (=> d!16783 (= res!38629 (= (select (arr!1853 lt!31856) #b00000000000000000000000000000000) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)))))

(assert (=> d!16783 (= (arrayContainsKey!0 lt!31856 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000) e!47548)))

(declare-fun b!72711 () Bool)

(declare-fun e!47549 () Bool)

(assert (=> b!72711 (= e!47548 e!47549)))

(declare-fun res!38630 () Bool)

(assert (=> b!72711 (=> (not res!38630) (not e!47549))))

(assert (=> b!72711 (= res!38630 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 lt!31856)))))

(declare-fun b!72712 () Bool)

(assert (=> b!72712 (= e!47549 (arrayContainsKey!0 lt!31856 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16783 (not res!38629)) b!72711))

(assert (= (and b!72711 res!38630) b!72712))

(declare-fun m!71063 () Bool)

(assert (=> d!16783 m!71063))

(assert (=> b!72712 m!67893))

(declare-fun m!71065 () Bool)

(assert (=> b!72712 m!71065))

(assert (=> d!16007 d!16783))

(declare-fun d!16785 () Bool)

(declare-fun e!47552 () Bool)

(assert (=> d!16785 e!47552))

(declare-fun res!38633 () Bool)

(assert (=> d!16785 (=> (not res!38633) (not e!47552))))

(assert (=> d!16785 (= res!38633 (and (bvsge (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000000) (bvslt (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (size!2090 (_keys!3840 newMap!16))) (bvslt (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (size!2091 (_values!2175 newMap!16)))))))

(declare-fun lt!32432 () Unit!2002)

(declare-fun choose!409 (array!3881 array!3883 (_ BitVec 32) (_ BitVec 32) V!2939 V!2939 (_ BitVec 32) (_ BitVec 64) V!2939 Int) Unit!2002)

(assert (=> d!16785 (= lt!32432 (choose!409 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 (defaultEntry!2192 newMap!16)))))

(assert (=> d!16785 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16785 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!12 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264 (defaultEntry!2192 newMap!16)) lt!32432)))

(declare-fun b!72715 () Bool)

(assert (=> b!72715 (= e!47552 (= (+!93 (getCurrentListMap!421 (_keys!3840 newMap!16) (_values!2175 newMap!16) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) (tuple2!2115 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) lt!31264)) (getCurrentListMap!421 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (array!3884 (store (arr!1854 (_values!2175 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (ValueCellFull!891 lt!31264)) (size!2091 (_values!2175 newMap!16))) (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16))))))

(assert (= (and d!16785 res!38633) b!72715))

(assert (=> d!16785 m!67893))

(declare-fun m!71067 () Bool)

(assert (=> d!16785 m!71067))

(assert (=> d!16785 m!68263))

(assert (=> b!72715 m!68051))

(assert (=> b!72715 m!68271))

(assert (=> b!72715 m!68901))

(assert (=> b!72715 m!68051))

(assert (=> b!72715 m!68927))

(assert (=> b!72715 m!68909))

(assert (=> d!16007 d!16785))

(declare-fun d!16787 () Bool)

(assert (=> d!16787 (arrayContainsKey!0 lt!31856 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!32433 () Unit!2002)

(assert (=> d!16787 (= lt!32433 (choose!13 lt!31856 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))))))

(assert (=> d!16787 (bvsge (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000000)))

(assert (=> d!16787 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!31856 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))) lt!32433)))

(declare-fun bs!3136 () Bool)

(assert (= bs!3136 d!16787))

(assert (=> bs!3136 m!67893))

(assert (=> bs!3136 m!68905))

(assert (=> bs!3136 m!67893))

(declare-fun m!71069 () Bool)

(assert (=> bs!3136 m!71069))

(assert (=> d!16007 d!16787))

(assert (=> d!16007 d!15857))

(declare-fun d!16789 () Bool)

(assert (=> d!16789 (= (arrayCountValidKeys!0 lt!31844 (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (bvadd (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!32436 () Unit!2002)

(declare-fun choose!2 (array!3881 (_ BitVec 32)) Unit!2002)

(assert (=> d!16789 (= lt!32436 (choose!2 lt!31844 (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))))))

(declare-fun e!47555 () Bool)

(assert (=> d!16789 e!47555))

(declare-fun res!38638 () Bool)

(assert (=> d!16789 (=> (not res!38638) (not e!47555))))

(assert (=> d!16789 (= res!38638 (and (bvsge (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000000) (bvslt (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (size!2090 lt!31844))))))

(assert (=> d!16789 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!31844 (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406))) lt!32436)))

(declare-fun b!72720 () Bool)

(declare-fun res!38639 () Bool)

(assert (=> b!72720 (=> (not res!38639) (not e!47555))))

(assert (=> b!72720 (= res!38639 (validKeyInArray!0 (select (arr!1853 lt!31844) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)))))))

(declare-fun b!72721 () Bool)

(assert (=> b!72721 (= e!47555 (bvslt (size!2090 lt!31844) #b01111111111111111111111111111111))))

(assert (= (and d!16789 res!38638) b!72720))

(assert (= (and b!72720 res!38639) b!72721))

(assert (=> d!16789 m!68899))

(declare-fun m!71071 () Bool)

(assert (=> d!16789 m!71071))

(declare-fun m!71073 () Bool)

(assert (=> b!72720 m!71073))

(assert (=> b!72720 m!71073))

(declare-fun m!71075 () Bool)

(assert (=> b!72720 m!71075))

(assert (=> d!16007 d!16789))

(declare-fun b!72722 () Bool)

(declare-fun e!47557 () (_ BitVec 32))

(declare-fun call!6342 () (_ BitVec 32))

(assert (=> b!72722 (= e!47557 call!6342)))

(declare-fun b!72723 () Bool)

(declare-fun e!47556 () (_ BitVec 32))

(assert (=> b!72723 (= e!47556 #b00000000000000000000000000000000)))

(declare-fun b!72724 () Bool)

(assert (=> b!72724 (= e!47557 (bvadd #b00000000000000000000000000000001 call!6342))))

(declare-fun b!72725 () Bool)

(assert (=> b!72725 (= e!47556 e!47557)))

(declare-fun c!10771 () Bool)

(assert (=> b!72725 (= c!10771 (validKeyInArray!0 (select (arr!1853 lt!31844) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)))))))

(declare-fun d!16791 () Bool)

(declare-fun lt!32437 () (_ BitVec 32))

(assert (=> d!16791 (and (bvsge lt!32437 #b00000000000000000000000000000000) (bvsle lt!32437 (bvsub (size!2090 lt!31844) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)))))))

(assert (=> d!16791 (= lt!32437 e!47556)))

(declare-fun c!10772 () Bool)

(assert (=> d!16791 (= c!10772 (bvsge (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (bvadd (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000001)))))

(assert (=> d!16791 (and (bvsle (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (bvadd (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000001)) (bvsge (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000001) (size!2090 lt!31844)))))

(assert (=> d!16791 (= (arrayCountValidKeys!0 lt!31844 (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (bvadd (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000001)) lt!32437)))

(declare-fun bm!6339 () Bool)

(assert (=> bm!6339 (= call!6342 (arrayCountValidKeys!0 lt!31844 (bvadd (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000001) (bvadd (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000001)))))

(assert (= (and d!16791 c!10772) b!72723))

(assert (= (and d!16791 (not c!10772)) b!72725))

(assert (= (and b!72725 c!10771) b!72724))

(assert (= (and b!72725 (not c!10771)) b!72722))

(assert (= (or b!72724 b!72722) bm!6339))

(assert (=> b!72725 m!71073))

(assert (=> b!72725 m!71073))

(assert (=> b!72725 m!71075))

(declare-fun m!71077 () Bool)

(assert (=> bm!6339 m!71077))

(assert (=> d!16007 d!16791))

(assert (=> d!16007 d!15833))

(assert (=> d!16007 d!16027))

(declare-fun b!72726 () Bool)

(declare-fun e!47559 () (_ BitVec 32))

(declare-fun call!6343 () (_ BitVec 32))

(assert (=> b!72726 (= e!47559 call!6343)))

(declare-fun b!72727 () Bool)

(declare-fun e!47558 () (_ BitVec 32))

(assert (=> b!72727 (= e!47558 #b00000000000000000000000000000000)))

(declare-fun b!72728 () Bool)

(assert (=> b!72728 (= e!47559 (bvadd #b00000000000000000000000000000001 call!6343))))

(declare-fun b!72729 () Bool)

(assert (=> b!72729 (= e!47558 e!47559)))

(declare-fun c!10773 () Bool)

(assert (=> b!72729 (= c!10773 (validKeyInArray!0 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun lt!32438 () (_ BitVec 32))

(declare-fun d!16793 () Bool)

(assert (=> d!16793 (and (bvsge lt!32438 #b00000000000000000000000000000000) (bvsle lt!32438 (bvsub (size!2090 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!16793 (= lt!32438 e!47558)))

(declare-fun c!10774 () Bool)

(assert (=> d!16793 (= c!10774 (bvsge #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))))))

(assert (=> d!16793 (and (bvsle #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2090 (_keys!3840 newMap!16)) (size!2090 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))))

(assert (=> d!16793 (= (arrayCountValidKeys!0 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) #b00000000000000000000000000000000 (size!2090 (_keys!3840 newMap!16))) lt!32438)))

(declare-fun bm!6340 () Bool)

(assert (=> bm!6340 (= call!6343 (arrayCountValidKeys!0 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2090 (_keys!3840 newMap!16))))))

(assert (= (and d!16793 c!10774) b!72727))

(assert (= (and d!16793 (not c!10774)) b!72729))

(assert (= (and b!72729 c!10773) b!72728))

(assert (= (and b!72729 (not c!10773)) b!72726))

(assert (= (or b!72728 b!72726) bm!6340))

(assert (=> b!72729 m!70979))

(assert (=> b!72729 m!70979))

(assert (=> b!72729 m!70981))

(declare-fun m!71079 () Bool)

(assert (=> bm!6340 m!71079))

(assert (=> d!16007 d!16793))

(declare-fun d!16795 () Bool)

(declare-fun e!47562 () Bool)

(assert (=> d!16795 e!47562))

(declare-fun res!38642 () Bool)

(assert (=> d!16795 (=> (not res!38642) (not e!47562))))

(assert (=> d!16795 (= res!38642 (and (bvsge (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000000) (bvslt (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (size!2090 (_keys!3840 newMap!16)))))))

(declare-fun lt!32441 () Unit!2002)

(declare-fun choose!102 ((_ BitVec 64) array!3881 (_ BitVec 32) (_ BitVec 32)) Unit!2002)

(assert (=> d!16795 (= lt!32441 (choose!102 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (mask!6149 newMap!16)))))

(assert (=> d!16795 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16795 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (_keys!3840 newMap!16) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (mask!6149 newMap!16)) lt!32441)))

(declare-fun b!72732 () Bool)

(assert (=> b!72732 (= e!47562 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (mask!6149 newMap!16)))))

(assert (= (and d!16795 res!38642) b!72732))

(assert (=> d!16795 m!67893))

(declare-fun m!71081 () Bool)

(assert (=> d!16795 m!71081))

(assert (=> d!16795 m!68263))

(assert (=> b!72732 m!68909))

(assert (=> b!72732 m!68923))

(assert (=> d!16007 d!16795))

(declare-fun b!72733 () Bool)

(declare-fun c!10776 () Bool)

(assert (=> b!72733 (= c!10776 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47572 () ListLongMap!1415)

(declare-fun e!47570 () ListLongMap!1415)

(assert (=> b!72733 (= e!47572 e!47570)))

(declare-fun b!72734 () Bool)

(declare-fun e!47568 () Bool)

(declare-fun e!47563 () Bool)

(assert (=> b!72734 (= e!47568 e!47563)))

(declare-fun res!38650 () Bool)

(declare-fun call!6346 () Bool)

(assert (=> b!72734 (= res!38650 call!6346)))

(assert (=> b!72734 (=> (not res!38650) (not e!47563))))

(declare-fun b!72735 () Bool)

(declare-fun e!47565 () Bool)

(declare-fun lt!32459 () ListLongMap!1415)

(assert (=> b!72735 (= e!47565 (= (apply!74 lt!32459 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2096 newMap!16)))))

(declare-fun b!72736 () Bool)

(declare-fun e!47569 () Bool)

(assert (=> b!72736 (= e!47569 e!47565)))

(declare-fun res!38649 () Bool)

(declare-fun call!6344 () Bool)

(assert (=> b!72736 (= res!38649 call!6344)))

(assert (=> b!72736 (=> (not res!38649) (not e!47565))))

(declare-fun bm!6341 () Bool)

(assert (=> bm!6341 (= call!6346 (contains!719 lt!32459 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6342 () Bool)

(declare-fun call!6347 () ListLongMap!1415)

(declare-fun call!6348 () ListLongMap!1415)

(assert (=> bm!6342 (= call!6347 call!6348)))

(declare-fun b!72738 () Bool)

(declare-fun call!6350 () ListLongMap!1415)

(assert (=> b!72738 (= e!47570 call!6350)))

(declare-fun b!72739 () Bool)

(declare-fun e!47575 () Bool)

(assert (=> b!72739 (= e!47575 (validKeyInArray!0 (select (arr!1853 lt!31850) #b00000000000000000000000000000000)))))

(declare-fun bm!6343 () Bool)

(declare-fun call!6345 () ListLongMap!1415)

(declare-fun call!6349 () ListLongMap!1415)

(assert (=> bm!6343 (= call!6345 call!6349)))

(declare-fun b!72740 () Bool)

(declare-fun e!47571 () Unit!2002)

(declare-fun lt!32462 () Unit!2002)

(assert (=> b!72740 (= e!47571 lt!32462)))

(declare-fun lt!32451 () ListLongMap!1415)

(assert (=> b!72740 (= lt!32451 (getCurrentListMapNoExtraKeys!58 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32460 () (_ BitVec 64))

(assert (=> b!72740 (= lt!32460 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32445 () (_ BitVec 64))

(assert (=> b!72740 (= lt!32445 (select (arr!1853 lt!31850) #b00000000000000000000000000000000))))

(declare-fun lt!32457 () Unit!2002)

(assert (=> b!72740 (= lt!32457 (addStillContains!50 lt!32451 lt!32460 (zeroValue!2096 newMap!16) lt!32445))))

(assert (=> b!72740 (contains!719 (+!93 lt!32451 (tuple2!2115 lt!32460 (zeroValue!2096 newMap!16))) lt!32445)))

(declare-fun lt!32463 () Unit!2002)

(assert (=> b!72740 (= lt!32463 lt!32457)))

(declare-fun lt!32444 () ListLongMap!1415)

(assert (=> b!72740 (= lt!32444 (getCurrentListMapNoExtraKeys!58 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32450 () (_ BitVec 64))

(assert (=> b!72740 (= lt!32450 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32454 () (_ BitVec 64))

(assert (=> b!72740 (= lt!32454 (select (arr!1853 lt!31850) #b00000000000000000000000000000000))))

(declare-fun lt!32456 () Unit!2002)

(assert (=> b!72740 (= lt!32456 (addApplyDifferent!50 lt!32444 lt!32450 (minValue!2096 newMap!16) lt!32454))))

(assert (=> b!72740 (= (apply!74 (+!93 lt!32444 (tuple2!2115 lt!32450 (minValue!2096 newMap!16))) lt!32454) (apply!74 lt!32444 lt!32454))))

(declare-fun lt!32461 () Unit!2002)

(assert (=> b!72740 (= lt!32461 lt!32456)))

(declare-fun lt!32458 () ListLongMap!1415)

(assert (=> b!72740 (= lt!32458 (getCurrentListMapNoExtraKeys!58 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32452 () (_ BitVec 64))

(assert (=> b!72740 (= lt!32452 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32446 () (_ BitVec 64))

(assert (=> b!72740 (= lt!32446 (select (arr!1853 lt!31850) #b00000000000000000000000000000000))))

(declare-fun lt!32449 () Unit!2002)

(assert (=> b!72740 (= lt!32449 (addApplyDifferent!50 lt!32458 lt!32452 (zeroValue!2096 newMap!16) lt!32446))))

(assert (=> b!72740 (= (apply!74 (+!93 lt!32458 (tuple2!2115 lt!32452 (zeroValue!2096 newMap!16))) lt!32446) (apply!74 lt!32458 lt!32446))))

(declare-fun lt!32453 () Unit!2002)

(assert (=> b!72740 (= lt!32453 lt!32449)))

(declare-fun lt!32448 () ListLongMap!1415)

(assert (=> b!72740 (= lt!32448 (getCurrentListMapNoExtraKeys!58 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun lt!32443 () (_ BitVec 64))

(assert (=> b!72740 (= lt!32443 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32447 () (_ BitVec 64))

(assert (=> b!72740 (= lt!32447 (select (arr!1853 lt!31850) #b00000000000000000000000000000000))))

(assert (=> b!72740 (= lt!32462 (addApplyDifferent!50 lt!32448 lt!32443 (minValue!2096 newMap!16) lt!32447))))

(assert (=> b!72740 (= (apply!74 (+!93 lt!32448 (tuple2!2115 lt!32443 (minValue!2096 newMap!16))) lt!32447) (apply!74 lt!32448 lt!32447))))

(declare-fun b!72741 () Bool)

(declare-fun e!47573 () Bool)

(declare-fun e!47564 () Bool)

(assert (=> b!72741 (= e!47573 e!47564)))

(declare-fun res!38648 () Bool)

(assert (=> b!72741 (=> (not res!38648) (not e!47564))))

(assert (=> b!72741 (= res!38648 (contains!719 lt!32459 (select (arr!1853 lt!31850) #b00000000000000000000000000000000)))))

(assert (=> b!72741 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 lt!31850)))))

(declare-fun b!72742 () Bool)

(assert (=> b!72742 (= e!47569 (not call!6344))))

(declare-fun b!72743 () Bool)

(declare-fun e!47574 () Bool)

(assert (=> b!72743 (= e!47574 (validKeyInArray!0 (select (arr!1853 lt!31850) #b00000000000000000000000000000000)))))

(declare-fun b!72744 () Bool)

(assert (=> b!72744 (= e!47572 call!6345)))

(declare-fun b!72745 () Bool)

(declare-fun e!47567 () ListLongMap!1415)

(assert (=> b!72745 (= e!47567 e!47572)))

(declare-fun c!10778 () Bool)

(assert (=> b!72745 (= c!10778 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6344 () Bool)

(assert (=> bm!6344 (= call!6344 (contains!719 lt!32459 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72746 () Bool)

(assert (=> b!72746 (= e!47564 (= (apply!74 lt!32459 (select (arr!1853 lt!31850) #b00000000000000000000000000000000)) (get!1133 (select (arr!1854 lt!31840) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2192 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72746 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2091 lt!31840)))))

(assert (=> b!72746 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 lt!31850)))))

(declare-fun b!72737 () Bool)

(assert (=> b!72737 (= e!47568 (not call!6346))))

(declare-fun d!16797 () Bool)

(declare-fun e!47566 () Bool)

(assert (=> d!16797 e!47566))

(declare-fun res!38646 () Bool)

(assert (=> d!16797 (=> (not res!38646) (not e!47566))))

(assert (=> d!16797 (= res!38646 (or (bvsge #b00000000000000000000000000000000 (size!2090 lt!31850)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2090 lt!31850)))))))

(declare-fun lt!32442 () ListLongMap!1415)

(assert (=> d!16797 (= lt!32459 lt!32442)))

(declare-fun lt!32455 () Unit!2002)

(assert (=> d!16797 (= lt!32455 e!47571)))

(declare-fun c!10779 () Bool)

(assert (=> d!16797 (= c!10779 e!47575)))

(declare-fun res!38651 () Bool)

(assert (=> d!16797 (=> (not res!38651) (not e!47575))))

(assert (=> d!16797 (= res!38651 (bvslt #b00000000000000000000000000000000 (size!2090 lt!31850)))))

(assert (=> d!16797 (= lt!32442 e!47567)))

(declare-fun c!10780 () Bool)

(assert (=> d!16797 (= c!10780 (and (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16797 (validMask!0 (mask!6149 newMap!16))))

(assert (=> d!16797 (= (getCurrentListMap!421 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)) lt!32459)))

(declare-fun b!72747 () Bool)

(declare-fun Unit!2076 () Unit!2002)

(assert (=> b!72747 (= e!47571 Unit!2076)))

(declare-fun b!72748 () Bool)

(assert (=> b!72748 (= e!47563 (= (apply!74 lt!32459 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2096 newMap!16)))))

(declare-fun bm!6345 () Bool)

(assert (=> bm!6345 (= call!6349 (+!93 (ite c!10780 call!6348 (ite c!10778 call!6347 call!6350)) (ite (or c!10780 c!10778) (tuple2!2115 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2096 newMap!16)) (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16)))))))

(declare-fun b!72749 () Bool)

(declare-fun res!38647 () Bool)

(assert (=> b!72749 (=> (not res!38647) (not e!47566))))

(assert (=> b!72749 (= res!38647 e!47569)))

(declare-fun c!10777 () Bool)

(assert (=> b!72749 (= c!10777 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6346 () Bool)

(assert (=> bm!6346 (= call!6348 (getCurrentListMapNoExtraKeys!58 lt!31850 lt!31840 (mask!6149 newMap!16) (extraKeys!2055 newMap!16) (zeroValue!2096 newMap!16) (minValue!2096 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2192 newMap!16)))))

(declare-fun b!72750 () Bool)

(assert (=> b!72750 (= e!47567 (+!93 call!6349 (tuple2!2115 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2096 newMap!16))))))

(declare-fun bm!6347 () Bool)

(assert (=> bm!6347 (= call!6350 call!6347)))

(declare-fun b!72751 () Bool)

(assert (=> b!72751 (= e!47570 call!6345)))

(declare-fun b!72752 () Bool)

(declare-fun res!38644 () Bool)

(assert (=> b!72752 (=> (not res!38644) (not e!47566))))

(assert (=> b!72752 (= res!38644 e!47573)))

(declare-fun res!38645 () Bool)

(assert (=> b!72752 (=> res!38645 e!47573)))

(assert (=> b!72752 (= res!38645 (not e!47574))))

(declare-fun res!38643 () Bool)

(assert (=> b!72752 (=> (not res!38643) (not e!47574))))

(assert (=> b!72752 (= res!38643 (bvslt #b00000000000000000000000000000000 (size!2090 lt!31850)))))

(declare-fun b!72753 () Bool)

(assert (=> b!72753 (= e!47566 e!47568)))

(declare-fun c!10775 () Bool)

(assert (=> b!72753 (= c!10775 (not (= (bvand (extraKeys!2055 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!16797 c!10780) b!72750))

(assert (= (and d!16797 (not c!10780)) b!72745))

(assert (= (and b!72745 c!10778) b!72744))

(assert (= (and b!72745 (not c!10778)) b!72733))

(assert (= (and b!72733 c!10776) b!72751))

(assert (= (and b!72733 (not c!10776)) b!72738))

(assert (= (or b!72751 b!72738) bm!6347))

(assert (= (or b!72744 bm!6347) bm!6342))

(assert (= (or b!72744 b!72751) bm!6343))

(assert (= (or b!72750 bm!6342) bm!6346))

(assert (= (or b!72750 bm!6343) bm!6345))

(assert (= (and d!16797 res!38651) b!72739))

(assert (= (and d!16797 c!10779) b!72740))

(assert (= (and d!16797 (not c!10779)) b!72747))

(assert (= (and d!16797 res!38646) b!72752))

(assert (= (and b!72752 res!38643) b!72743))

(assert (= (and b!72752 (not res!38645)) b!72741))

(assert (= (and b!72741 res!38648) b!72746))

(assert (= (and b!72752 res!38644) b!72749))

(assert (= (and b!72749 c!10777) b!72736))

(assert (= (and b!72749 (not c!10777)) b!72742))

(assert (= (and b!72736 res!38649) b!72735))

(assert (= (or b!72736 b!72742) bm!6344))

(assert (= (and b!72749 res!38647) b!72753))

(assert (= (and b!72753 c!10775) b!72734))

(assert (= (and b!72753 (not c!10775)) b!72737))

(assert (= (and b!72734 res!38650) b!72748))

(assert (= (or b!72734 b!72737) bm!6341))

(declare-fun b_lambda!3243 () Bool)

(assert (=> (not b_lambda!3243) (not b!72746)))

(assert (=> b!72746 t!5019))

(declare-fun b_and!4463 () Bool)

(assert (= b_and!4459 (and (=> t!5019 result!2665) b_and!4463)))

(assert (=> b!72746 t!5021))

(declare-fun b_and!4465 () Bool)

(assert (= b_and!4461 (and (=> t!5021 result!2667) b_and!4465)))

(declare-fun m!71083 () Bool)

(assert (=> b!72741 m!71083))

(assert (=> b!72741 m!71083))

(declare-fun m!71085 () Bool)

(assert (=> b!72741 m!71085))

(assert (=> b!72746 m!68287))

(assert (=> b!72746 m!71083))

(declare-fun m!71087 () Bool)

(assert (=> b!72746 m!71087))

(assert (=> b!72746 m!71083))

(declare-fun m!71089 () Bool)

(assert (=> b!72746 m!71089))

(assert (=> b!72746 m!71089))

(assert (=> b!72746 m!68287))

(declare-fun m!71091 () Bool)

(assert (=> b!72746 m!71091))

(declare-fun m!71093 () Bool)

(assert (=> bm!6346 m!71093))

(assert (=> b!72739 m!71083))

(assert (=> b!72739 m!71083))

(declare-fun m!71095 () Bool)

(assert (=> b!72739 m!71095))

(declare-fun m!71097 () Bool)

(assert (=> b!72735 m!71097))

(declare-fun m!71099 () Bool)

(assert (=> bm!6345 m!71099))

(declare-fun m!71101 () Bool)

(assert (=> b!72748 m!71101))

(declare-fun m!71103 () Bool)

(assert (=> b!72750 m!71103))

(assert (=> d!16797 m!68263))

(declare-fun m!71105 () Bool)

(assert (=> bm!6341 m!71105))

(declare-fun m!71107 () Bool)

(assert (=> b!72740 m!71107))

(declare-fun m!71109 () Bool)

(assert (=> b!72740 m!71109))

(declare-fun m!71111 () Bool)

(assert (=> b!72740 m!71111))

(declare-fun m!71113 () Bool)

(assert (=> b!72740 m!71113))

(assert (=> b!72740 m!71107))

(declare-fun m!71115 () Bool)

(assert (=> b!72740 m!71115))

(declare-fun m!71117 () Bool)

(assert (=> b!72740 m!71117))

(declare-fun m!71119 () Bool)

(assert (=> b!72740 m!71119))

(declare-fun m!71121 () Bool)

(assert (=> b!72740 m!71121))

(assert (=> b!72740 m!71083))

(declare-fun m!71123 () Bool)

(assert (=> b!72740 m!71123))

(assert (=> b!72740 m!71093))

(assert (=> b!72740 m!71109))

(declare-fun m!71125 () Bool)

(assert (=> b!72740 m!71125))

(declare-fun m!71127 () Bool)

(assert (=> b!72740 m!71127))

(assert (=> b!72740 m!71121))

(declare-fun m!71129 () Bool)

(assert (=> b!72740 m!71129))

(declare-fun m!71131 () Bool)

(assert (=> b!72740 m!71131))

(declare-fun m!71133 () Bool)

(assert (=> b!72740 m!71133))

(assert (=> b!72740 m!71131))

(declare-fun m!71135 () Bool)

(assert (=> b!72740 m!71135))

(declare-fun m!71137 () Bool)

(assert (=> bm!6344 m!71137))

(assert (=> b!72743 m!71083))

(assert (=> b!72743 m!71083))

(assert (=> b!72743 m!71095))

(assert (=> d!16007 d!16797))

(assert (=> d!16007 d!16389))

(declare-fun b!72754 () Bool)

(declare-fun e!47579 () Bool)

(declare-fun e!47577 () Bool)

(assert (=> b!72754 (= e!47579 e!47577)))

(declare-fun c!10781 () Bool)

(assert (=> b!72754 (= c!10781 (validKeyInArray!0 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) lt!31841)))))

(declare-fun d!16799 () Bool)

(declare-fun res!38653 () Bool)

(declare-fun e!47576 () Bool)

(assert (=> d!16799 (=> res!38653 e!47576)))

(assert (=> d!16799 (= res!38653 (bvsge lt!31841 (size!2090 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))))))))

(assert (=> d!16799 (= (arrayNoDuplicates!0 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) lt!31841 lt!31839) e!47576)))

(declare-fun bm!6348 () Bool)

(declare-fun call!6351 () Bool)

(assert (=> bm!6348 (= call!6351 (arrayNoDuplicates!0 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) (bvadd lt!31841 #b00000000000000000000000000000001) (ite c!10781 (Cons!1471 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) lt!31841) lt!31839) lt!31839)))))

(declare-fun b!72755 () Bool)

(assert (=> b!72755 (= e!47577 call!6351)))

(declare-fun b!72756 () Bool)

(assert (=> b!72756 (= e!47576 e!47579)))

(declare-fun res!38654 () Bool)

(assert (=> b!72756 (=> (not res!38654) (not e!47579))))

(declare-fun e!47578 () Bool)

(assert (=> b!72756 (= res!38654 (not e!47578))))

(declare-fun res!38652 () Bool)

(assert (=> b!72756 (=> (not res!38652) (not e!47578))))

(assert (=> b!72756 (= res!38652 (validKeyInArray!0 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) lt!31841)))))

(declare-fun b!72757 () Bool)

(assert (=> b!72757 (= e!47578 (contains!721 lt!31839 (select (arr!1853 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16)))) lt!31841)))))

(declare-fun b!72758 () Bool)

(assert (=> b!72758 (= e!47577 call!6351)))

(assert (= (and d!16799 (not res!38653)) b!72756))

(assert (= (and b!72756 res!38652) b!72757))

(assert (= (and b!72756 res!38654) b!72754))

(assert (= (and b!72754 c!10781) b!72758))

(assert (= (and b!72754 (not c!10781)) b!72755))

(assert (= (or b!72758 b!72755) bm!6348))

(declare-fun m!71139 () Bool)

(assert (=> b!72754 m!71139))

(assert (=> b!72754 m!71139))

(declare-fun m!71141 () Bool)

(assert (=> b!72754 m!71141))

(assert (=> bm!6348 m!71139))

(declare-fun m!71143 () Bool)

(assert (=> bm!6348 m!71143))

(assert (=> b!72756 m!71139))

(assert (=> b!72756 m!71139))

(assert (=> b!72756 m!71141))

(assert (=> b!72757 m!71139))

(assert (=> b!72757 m!71139))

(declare-fun m!71145 () Bool)

(assert (=> b!72757 m!71145))

(assert (=> d!16007 d!16799))

(declare-fun d!16801 () Bool)

(declare-fun e!47582 () Bool)

(assert (=> d!16801 e!47582))

(declare-fun res!38657 () Bool)

(assert (=> d!16801 (=> (not res!38657) (not e!47582))))

(assert (=> d!16801 (= res!38657 (and (bvsge (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) #b00000000000000000000000000000000) (bvslt (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (size!2090 (_keys!3840 newMap!16)))))))

(declare-fun lt!32466 () Unit!2002)

(declare-fun choose!41 (array!3881 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1475) Unit!2002)

(assert (=> d!16801 (= lt!32466 (choose!41 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) lt!31841 lt!31839))))

(assert (=> d!16801 (bvslt (size!2090 (_keys!3840 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!16801 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3840 newMap!16) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) lt!31841 lt!31839) lt!32466)))

(declare-fun b!72761 () Bool)

(assert (=> b!72761 (= e!47582 (arrayNoDuplicates!0 (array!3882 (store (arr!1853 (_keys!3840 newMap!16)) (ite c!10292 (index!3073 lt!31406) (index!3070 lt!31406)) (select (arr!1853 (_keys!3840 (v!2514 (underlying!257 thiss!992)))) from!355)) (size!2090 (_keys!3840 newMap!16))) lt!31841 lt!31839))))

(assert (= (and d!16801 res!38657) b!72761))

(assert (=> d!16801 m!67893))

(declare-fun m!71147 () Bool)

(assert (=> d!16801 m!71147))

(assert (=> b!72761 m!68909))

(assert (=> b!72761 m!68907))

(assert (=> d!16007 d!16801))

(declare-fun d!16803 () Bool)

(assert (=> d!16803 (= (inRange!0 (ite c!10387 (index!3070 lt!31645) (index!3073 lt!31645)) (mask!6149 newMap!16)) (and (bvsge (ite c!10387 (index!3070 lt!31645) (index!3073 lt!31645)) #b00000000000000000000000000000000) (bvslt (ite c!10387 (index!3070 lt!31645) (index!3073 lt!31645)) (bvadd (mask!6149 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6189 d!16803))

(assert (=> b!71566 d!16371))

(assert (=> d!15993 d!15985))

(declare-fun d!16805 () Bool)

(declare-fun e!47583 () Bool)

(assert (=> d!16805 e!47583))

(declare-fun res!38658 () Bool)

(assert (=> d!16805 (=> res!38658 e!47583)))

(declare-fun lt!32469 () Bool)

(assert (=> d!16805 (= res!38658 (not lt!32469))))

(declare-fun lt!32468 () Bool)

(assert (=> d!16805 (= lt!32469 lt!32468)))

(declare-fun lt!32467 () Unit!2002)

(declare-fun e!47584 () Unit!2002)

(assert (=> d!16805 (= lt!32467 e!47584)))

(declare-fun c!10782 () Bool)

(assert (=> d!16805 (= c!10782 lt!32468)))

(assert (=> d!16805 (= lt!32468 (containsKey!136 (toList!723 lt!31511) lt!31510))))

(assert (=> d!16805 (= (contains!719 lt!31511 lt!31510) lt!32469)))

(declare-fun b!72762 () Bool)

(declare-fun lt!32470 () Unit!2002)

(assert (=> b!72762 (= e!47584 lt!32470)))

(assert (=> b!72762 (= lt!32470 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!723 lt!31511) lt!31510))))

(assert (=> b!72762 (isDefined!85 (getValueByKey!132 (toList!723 lt!31511) lt!31510))))

(declare-fun b!72763 () Bool)

(declare-fun Unit!2077 () Unit!2002)

(assert (=> b!72763 (= e!47584 Unit!2077)))

(declare-fun b!72764 () Bool)

(assert (=> b!72764 (= e!47583 (isDefined!85 (getValueByKey!132 (toList!723 lt!31511) lt!31510)))))

(assert (= (and d!16805 c!10782) b!72762))

(assert (= (and d!16805 (not c!10782)) b!72763))

(assert (= (and d!16805 (not res!38658)) b!72764))

(declare-fun m!71149 () Bool)

(assert (=> d!16805 m!71149))

(declare-fun m!71151 () Bool)

(assert (=> b!72762 m!71151))

(assert (=> b!72762 m!68847))

(assert (=> b!72762 m!68847))

(declare-fun m!71153 () Bool)

(assert (=> b!72762 m!71153))

(assert (=> b!72764 m!68847))

(assert (=> b!72764 m!68847))

(assert (=> b!72764 m!71153))

(assert (=> d!15993 d!16805))

(declare-fun d!16807 () Bool)

(assert (=> d!16807 (= (apply!74 (+!93 lt!31511 (tuple2!2115 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))))) lt!31510) (apply!74 lt!31511 lt!31510))))

(assert (=> d!16807 true))

(declare-fun _$34!804 () Unit!2002)

(assert (=> d!16807 (= (choose!405 lt!31511 lt!31506 (minValue!2096 (v!2514 (underlying!257 thiss!992))) lt!31510) _$34!804)))

(declare-fun bs!3137 () Bool)

(assert (= bs!3137 d!16807))

(assert (=> bs!3137 m!68209))

(assert (=> bs!3137 m!68209))

(assert (=> bs!3137 m!68213))

(assert (=> bs!3137 m!68205))

(assert (=> d!15993 d!16807))

(assert (=> d!15993 d!15989))

(assert (=> d!15993 d!15991))

(declare-fun b!72766 () Bool)

(declare-fun e!47585 () Bool)

(assert (=> b!72766 (= e!47585 tp_is_empty!2469)))

(declare-fun mapNonEmpty!3159 () Bool)

(declare-fun mapRes!3159 () Bool)

(declare-fun tp!8505 () Bool)

(declare-fun e!47586 () Bool)

(assert (=> mapNonEmpty!3159 (= mapRes!3159 (and tp!8505 e!47586))))

(declare-fun mapValue!3159 () ValueCell!891)

(declare-fun mapKey!3159 () (_ BitVec 32))

(declare-fun mapRest!3159 () (Array (_ BitVec 32) ValueCell!891))

(assert (=> mapNonEmpty!3159 (= mapRest!3157 (store mapRest!3159 mapKey!3159 mapValue!3159))))

(declare-fun condMapEmpty!3159 () Bool)

(declare-fun mapDefault!3159 () ValueCell!891)

(assert (=> mapNonEmpty!3157 (= condMapEmpty!3159 (= mapRest!3157 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3159)))))

(assert (=> mapNonEmpty!3157 (= tp!8503 (and e!47585 mapRes!3159))))

(declare-fun mapIsEmpty!3159 () Bool)

(assert (=> mapIsEmpty!3159 mapRes!3159))

(declare-fun b!72765 () Bool)

(assert (=> b!72765 (= e!47586 tp_is_empty!2469)))

(assert (= (and mapNonEmpty!3157 condMapEmpty!3159) mapIsEmpty!3159))

(assert (= (and mapNonEmpty!3157 (not condMapEmpty!3159)) mapNonEmpty!3159))

(assert (= (and mapNonEmpty!3159 ((_ is ValueCellFull!891) mapValue!3159)) b!72765))

(assert (= (and mapNonEmpty!3157 ((_ is ValueCellFull!891) mapDefault!3159)) b!72766))

(declare-fun m!71155 () Bool)

(assert (=> mapNonEmpty!3159 m!71155))

(declare-fun b!72768 () Bool)

(declare-fun e!47587 () Bool)

(assert (=> b!72768 (= e!47587 tp_is_empty!2469)))

(declare-fun mapNonEmpty!3160 () Bool)

(declare-fun mapRes!3160 () Bool)

(declare-fun tp!8506 () Bool)

(declare-fun e!47588 () Bool)

(assert (=> mapNonEmpty!3160 (= mapRes!3160 (and tp!8506 e!47588))))

(declare-fun mapValue!3160 () ValueCell!891)

(declare-fun mapKey!3160 () (_ BitVec 32))

(declare-fun mapRest!3160 () (Array (_ BitVec 32) ValueCell!891))

(assert (=> mapNonEmpty!3160 (= mapRest!3158 (store mapRest!3160 mapKey!3160 mapValue!3160))))

(declare-fun condMapEmpty!3160 () Bool)

(declare-fun mapDefault!3160 () ValueCell!891)

(assert (=> mapNonEmpty!3158 (= condMapEmpty!3160 (= mapRest!3158 ((as const (Array (_ BitVec 32) ValueCell!891)) mapDefault!3160)))))

(assert (=> mapNonEmpty!3158 (= tp!8504 (and e!47587 mapRes!3160))))

(declare-fun mapIsEmpty!3160 () Bool)

(assert (=> mapIsEmpty!3160 mapRes!3160))

(declare-fun b!72767 () Bool)

(assert (=> b!72767 (= e!47588 tp_is_empty!2469)))

(assert (= (and mapNonEmpty!3158 condMapEmpty!3160) mapIsEmpty!3160))

(assert (= (and mapNonEmpty!3158 (not condMapEmpty!3160)) mapNonEmpty!3160))

(assert (= (and mapNonEmpty!3160 ((_ is ValueCellFull!891) mapValue!3160)) b!72767))

(assert (= (and mapNonEmpty!3158 ((_ is ValueCellFull!891) mapDefault!3160)) b!72768))

(declare-fun m!71157 () Bool)

(assert (=> mapNonEmpty!3160 m!71157))

(declare-fun b_lambda!3245 () Bool)

(assert (= b_lambda!3235 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3245)))

(declare-fun b_lambda!3247 () Bool)

(assert (= b_lambda!3219 (or (and b!70773 b_free!2105) (and b!70762 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))) b_lambda!3247)))

(declare-fun b_lambda!3249 () Bool)

(assert (= b_lambda!3237 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3249)))

(declare-fun b_lambda!3251 () Bool)

(assert (= b_lambda!3239 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3251)))

(declare-fun b_lambda!3253 () Bool)

(assert (= b_lambda!3233 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3253)))

(declare-fun b_lambda!3255 () Bool)

(assert (= b_lambda!3217 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3255)))

(declare-fun b_lambda!3257 () Bool)

(assert (= b_lambda!3231 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3257)))

(declare-fun b_lambda!3259 () Bool)

(assert (= b_lambda!3225 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3259)))

(declare-fun b_lambda!3261 () Bool)

(assert (= b_lambda!3223 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3261)))

(declare-fun b_lambda!3263 () Bool)

(assert (= b_lambda!3243 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3263)))

(declare-fun b_lambda!3265 () Bool)

(assert (= b_lambda!3215 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3265)))

(declare-fun b_lambda!3267 () Bool)

(assert (= b_lambda!3229 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3267)))

(declare-fun b_lambda!3269 () Bool)

(assert (= b_lambda!3241 (or (and b!70773 b_free!2105 (= (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))) (defaultEntry!2192 newMap!16))) (and b!70762 b_free!2107) b_lambda!3269)))

(declare-fun b_lambda!3271 () Bool)

(assert (= b_lambda!3221 (or (and b!70773 b_free!2105) (and b!70762 b_free!2107 (= (defaultEntry!2192 newMap!16) (defaultEntry!2192 (v!2514 (underlying!257 thiss!992))))) b_lambda!3271)))

(check-sat (not d!16127) (not bm!6230) (not d!16777) (not b!72661) (not b!71931) (not d!16635) (not d!16297) (not b!72013) (not b!72501) (not b!72079) (not d!16107) (not b!71751) (not b!72492) (not d!16749) (not d!16173) (not b!72260) (not d!16545) (not bm!6238) (not b!72089) (not b!72346) (not d!16765) (not d!16449) (not b!72107) (not b!72677) (not b!72465) (not d!16655) (not b!72082) (not b!71721) (not d!16805) (not b!71995) (not d!16601) (not b!72269) (not d!16437) (not d!16785) (not b!72478) (not bm!6280) (not b!72451) (not b!72401) (not b!72207) (not bm!6227) (not d!16723) (not b!71988) (not b!72543) (not d!16495) (not b!72477) (not b!72132) (not d!16787) (not d!16801) (not d!16789) (not b!71664) (not b!72568) (not b!72109) (not b!71878) (not b!72096) (not d!16659) (not b!72638) (not bm!6312) (not d!16199) (not b!71687) (not bm!6331) (not b!71632) (not b!71680) (not d!16097) (not b_lambda!3193) (not b!72182) (not b!71636) (not d!16747) (not d!16657) (not b!71682) (not b!72340) (not b!72242) (not d!16455) (not b!71953) (not b!71814) (not b!72119) (not b!72261) (not b!72003) (not d!16143) (not d!16305) (not d!16669) (not b!71921) (not d!16139) (not b!72130) (not b!72410) (not b_lambda!3189) (not b!72560) (not d!16537) (not b!72223) (not b!72036) (not d!16587) (not d!16479) (not b!71769) (not b!71808) (not d!16201) (not d!16075) (not d!16369) (not b!72094) (not b!72064) (not b!72439) (not d!16317) (not d!16517) (not b!72167) (not b!72594) (not b!72623) (not b!72540) (not b!72178) (not bm!6229) (not d!16639) (not d!16509) (not b!72010) (not d!16547) (not b!71984) (not b!72449) b_and!4463 (not b!71977) (not b!72209) (not b!72457) (not b!72746) (not d!16701) (not b!72748) (not d!16651) (not bm!6344) (not d!16419) (not b!72204) (not b!71732) (not b!72640) (not b!72657) (not d!16647) (not b!72425) (not b!72377) (not bm!6278) (not b!72664) (not b!72255) (not b!72083) (not b!72669) (not b!72629) (not b!72741) (not b!72558) (not b!71918) (not d!16577) (not b!71935) (not b!72112) (not d!16053) (not b!71753) (not b!72111) (not d!16605) (not b_lambda!3271) (not b!72187) (not b!72308) (not b!71637) (not d!16745) (not b!71717) (not b!72739) (not bm!6335) (not d!16073) (not b!72420) (not b!71745) (not b!72258) (not b!71815) (not b!72198) (not b!71647) (not b!72328) (not d!16051) (not b!72273) (not b!72238) (not d!16499) (not b!72445) (not b!72361) (not d!16257) (not bm!6340) (not b!72462) (not b!72062) (not b!72147) (not bm!6287) (not d!16609) (not d!16695) (not b!72325) (not d!16329) (not b!72521) (not b!72666) (not d!16083) (not b!72423) (not b!72409) (not b!72517) (not b!71737) (not d!16399) (not b!71693) (not d!16621) (not b!72470) (not d!16049) (not b!72374) (not b_lambda!3253) (not b!72586) (not b!71820) (not b!72554) b_and!4465 (not b!72485) (not b!72631) (not b!71643) (not d!16561) (not b!72393) (not b!71827) (not b!72074) (not b!71774) (not b!72576) (not b!72627) (not b!72647) (not d!16067) (not d!16429) (not b!72464) (not b_lambda!3255) (not d!16129) (not b!72508) (not d!16325) (not b!71960) (not b!72007) (not b!72333) (not b!72283) (not b!72052) (not b!72407) (not bm!6258) (not d!16597) (not bm!6234) (not d!16675) (not b!72720) (not b!71816) (not b!72625) (not b!72288) (not b!71869) (not b!72331) (not d!16529) (not b!71835) (not b!72692) (not d!16735) (not d!16717) (not b!72397) (not b!72102) (not b!71832) (not b!72234) (not d!16761) (not b!71851) (not b!71936) (not bm!6235) (not b!72575) (not d!16641) (not b!71621) (not bm!6326) (not bm!6289) (not b!72459) (not b!72160) (not d!16245) (not b!72660) (not b!72337) (not d!16763) (not d!16287) (not bm!6233) (not b!71916) (not b!72323) (not b!72244) (not b!71966) (not d!16065) (not d!16061) (not b!72463) (not d!16699) (not d!16781) (not b!72442) (not d!16069) (not b_lambda!3211) (not b!72613) (not bm!6306) (not b!72570) (not b!72158) (not b!72143) (not b!72667) (not d!16059) (not b!72375) (not d!16467) (not b!71754) (not b!72240) (not b!71747) (not b!71945) (not b!71696) (not d!16229) (not d!16187) (not b!71778) (not b!72358) (not b!71949) (not bm!6329) (not b!72026) (not d!16551) (not b!71618) (not d!16361) (not b!72139) (not b!72247) (not b!71824) (not d!16377) (not b_lambda!3181) (not b!71638) (not d!16355) (not d!16357) (not d!16681) (not b!72495) (not bm!6222) (not d!16643) (not b!71698) (not b!71875) (not b!71940) (not b!72596) (not bm!6322) (not b!71759) (not b!72564) (not b!72274) (not b!71663) (not b_next!2105) (not b!72344) (not d!16159) (not b_lambda!3207) (not b!72732) (not b!72635) (not b_lambda!3245) (not b!72162) (not b!71958) (not b!72599) (not bm!6314) (not d!16211) (not b_lambda!3209) (not d!16269) (not b!72268) (not b!72705) (not b!72488) (not b!71772) tp_is_empty!2469 (not b!72493) (not b!72054) (not d!16797) (not d!16367) (not b!72114) (not b!72367) (not d!16289) (not b!72060) (not b!71714) (not d!16213) (not d!16101) (not b!71671) (not b!72081) (not b!72216) (not d!16743) (not bm!6254) (not b!72743) (not b!71842) (not b!72757) (not b!72562) (not b!71934) (not b!72710) (not b!72761) (not b!71762) (not b!72221) (not bm!6265) (not d!16481) (not d!16391) (not b!72604) (not b!72366) (not b!71684) (not d!16535) (not b!71986) (not b!71666) (not b!71885) (not b!72750) (not b!72309) (not b!72303) (not b!72535) (not b!72510) (not b!72243) (not b!71968) (not b!72189) (not b!72024) (not b!72506) (not b!72212) (not d!16331) (not d!16731) (not b!71711) (not b!72218) (not b!72202) (not b!72305) (not bm!6246) (not b_lambda!3265) (not b!72498) (not b!72486) (not d!16237) (not b!72646) (not b!72615) (not b!72754) (not b!72394) (not d!16533) (not d!16751) (not bm!6324) (not b!72286) (not d!16715) (not b!72519) (not b!71640) (not b!71615) (not b!72472) (not d!16425) (not b!72583) (not b_lambda!3269) (not d!16579) (not b!72138) (not b!71952) (not d!16603) (not b!72279) (not d!16063) (not d!16057) (not d!16757) (not b!71659) (not d!16435) (not b!72280) (not bm!6336) (not b!72093) (not b!72104) (not b!72526) (not d!16273) (not b!72490) (not b!72612) (not b!72685) (not b!72715) (not b!72641) (not b!72276) (not b!71846) (not d!16227) (not b!71720) (not b!72668) (not bm!6337) (not b!72068) (not b!72175) (not b!71756) (not d!16375) (not b!72154) (not d!16463) (not b!72019) (not b!72037) (not b!72762) (not d!16427) (not d!16293) (not b!72509) (not d!16125) (not bm!6293) (not b!71729) (not b!72553) (not b!72557) (not b!72289) (not d!16649) (not b!72740) (not d!16259) (not mapNonEmpty!3159) (not b!72592) (not d!16569) (not b!71955) (not d!16295) (not b!72351) (not b!72388) (not d!16243) (not d!16423) (not d!16241) (not b!71626) (not b!72588) (not d!16115) (not bm!6263) (not d!16469) (not d!16189) (not b!71811) (not b!72041) (not d!16711) (not b!71669) (not b!71838) (not b!71963) (not b!71709) (not bm!6309) (not bm!6271) (not b_lambda!3257) (not b!71924) (not b!72453) (not b!72051) (not b!72729) (not d!16483) (not d!16253) (not b!72655) (not b_lambda!3259) (not b!72534) (not b!71801) (not b!71718) (not d!16543) (not b!71629) (not bm!6262) (not b!71993) (not d!16351) (not b!72764) (not b!71661) (not b!72707) (not b!72651) (not d!16047) (not b!71627) (not b_lambda!3191) (not b!72725) (not b!71943) (not b!72587) (not d!16733) (not b!72573) (not b!71985) (not b!72683) (not d!16741) (not b!72475) (not b!71923) (not b!72538) (not b!72645) (not bm!6332) (not b!72390) (not b!72173) (not b!72311) (not b!72561) (not bm!6251) (not d!16581) (not b!71975) (not d!16147) (not d!16393) (not b!72215) (not bm!6255) (not d!16443) (not d!16285) (not d!16163) (not d!16769) (not d!16591) (not d!16157) (not b!71911) (not b!72404) (not bm!6224) (not d!16807) (not bm!6348) (not b!72681) (not b!72252) (not b!72091) (not d!16209) (not d!16249) (not b!72099) (not b!71651) (not d!16267) (not d!16487) (not d!16725) (not d!16697) (not bm!6249) (not b!72277) (not bm!6295) (not b!72141) (not d!16339) (not b!72271) (not b!71980) (not b!72735) (not b!72756) (not b!71876) (not b!72034) (not b!72134) (not d!16091) (not d!16085) (not b!72307) (not b!72106) (not d!16513) (not d!16727) (not b!72180) (not bm!6261) (not d!16045) (not bm!6284) (not b!72642) (not b!71655) (not b!72659) (not d!16565) (not b!72127) (not d!16739) (not b!72232) (not bm!6319) (not b!72039) (not d!16337) (not b!71699) (not d!16557) (not b!72336) (not bm!6341) (not b!72163) (not b!72648) (not b!71650) (not b!72080) (not b!72071) (not b!71624) (not bm!6345) (not b_lambda!3247) (not b!72513) (not b!71944) (not d!16105) (not b!71691) (not d!16521) (not bm!6275) (not b!72078) (not b!72387) (not b!72032) (not b!72359) (not b!72441) (not d!16109) (not b!72468) (not b!72322) (not b!72546) (not d!16461) (not bm!6267) (not b!72392) (not b!72688) (not b!72314) (not b!72235) (not b!71773) (not bm!6282) (not d!16705) (not d!16531) (not b!72077) (not d!16333) (not d!16141) (not b!72123) (not b!71725) (not b_lambda!3205) (not d!16453) (not b!71834) (not d!16689) (not d!16687) (not b!72299) (not b!72017) (not b!71991) (not b!71630) (not d!16397) (not b_lambda!3263) (not d!16589) (not b!71822) (not b!72649) (not d!16411) (not b!72231) (not b!72384) (not b!72527) (not b!72418) (not b!72597) (not d!16155) (not b!71882) (not d!16719) (not mapNonEmpty!3160) (not bm!6240) (not d!16087) (not b!72124) (not d!16077) (not d!16771) (not d!16389) (not b!72296) (not b!71951) (not d!16175) (not b!72690) (not d!16527) (not b!72253) (not d!16779) (not b!71707) (not b!71950) (not bm!6298) (not d!16729) (not b!72643) (not b!71690) (not b_lambda!3261) (not b!72428) (not b!71738) (not d!16151) (not d!16405) (not b!72455) (not b!71736) (not b!72417) (not bm!6268) (not b!72565) (not b!72663) (not b!71971) (not b!71743) (not bm!6279) (not bm!6247) (not b!72171) (not b!72125) (not b!72224) (not d!16525) (not b_lambda!3251) (not b!72145) (not b!72108) (not bm!6303) (not b!71777) (not b!72430) (not b!72191) (not b!71672) (not d!16383) (not b!71616) (not b!71706) (not b!72110) (not d!16299) (not bm!6316) (not b!71872) (not d!16775) (not b!71679) (not d!16233) (not d!16661) (not d!16255) (not b!71830) (not bm!6241) (not b!72172) (not b!72633) (not b!72670) (not b!72354) (not b!72431) (not b!72385) (not d!16239) (not b_lambda!3267) (not bm!6266) (not d!16767) (not bm!6339) (not d!16755) (not b!71807) (not b!71658) (not b!71932) (not b!71728) (not d!16753) (not b!71722) (not b!71620) (not b!72589) (not b!72524) (not b!71817) (not b!72399) (not d!16055) (not b!71849) (not b!72156) (not b!71974) (not d!16165) (not b!72545) (not d!16707) (not b!72537) (not b!72504) (not b!72460) (not b!71719) (not d!16387) (not d!16071) (not b!72194) (not d!16181) (not b!72422) (not b!72342) (not b!72153) (not d!16225) (not b!71947) (not d!16795) (not b!72556) (not d!16217) (not b!72682) (not b!72622) (not b!72297) (not d!16359) (not d!16673) (not b!72028) (not d!16345) (not b!72438) (not b!72348) (not d!16703) (not b!71617) (not b!71761) (not d!16721) (not d!16167) (not b!71879) (not b!71770) (not b!72632) (not d!16713) (not b_next!2107) (not b!72674) (not b!71628) (not b!72673) (not b!72021) (not d!16313) (not bm!6291) (not d!16303) (not d!16759) (not b!72364) (not b!71625) (not d!16197) (not d!16135) (not d!16161) (not bm!6256) (not b!72085) (not bm!6300) (not bm!6346) (not bm!6273) (not d!16183) (not d!16555) (not d!16121) (not d!16667) (not b!71937) (not d!16593) (not b!72712) (not b!72704) (not b!71914) (not b!71723) (not b!72708) (not d!16737) (not b!72164) (not b_lambda!3227) (not b!72334) (not b!72018) (not d!16567) (not b!71740) (not bm!6272) (not b_lambda!3249) (not d!16677) (not b!72584) (not b!72567) (not b!72044) (not b!71775) (not d!16571) (not b!72281) (not b!72600) (not bm!6297) (not d!16117) (not b_lambda!3213) (not b!72402) (not d!16149) (not b!72250) (not b!72047))
(check-sat b_and!4463 b_and!4465 (not b_next!2105) (not b_next!2107))
