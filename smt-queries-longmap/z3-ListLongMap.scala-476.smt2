; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9594 () Bool)

(assert start!9594)

(declare-fun b!70564 () Bool)

(declare-fun b_free!2101 () Bool)

(declare-fun b_next!2101 () Bool)

(assert (=> b!70564 (= b_free!2101 (not b_next!2101))))

(declare-fun tp!8471 () Bool)

(declare-fun b_and!4333 () Bool)

(assert (=> b!70564 (= tp!8471 b_and!4333)))

(declare-fun b!70563 () Bool)

(declare-fun b_free!2103 () Bool)

(declare-fun b_next!2103 () Bool)

(assert (=> b!70563 (= b_free!2103 (not b_next!2103))))

(declare-fun tp!8474 () Bool)

(declare-fun b_and!4335 () Bool)

(assert (=> b!70563 (= tp!8474 b_and!4335)))

(declare-fun res!37720 () Bool)

(declare-fun e!46204 () Bool)

(assert (=> start!9594 (=> (not res!37720) (not e!46204))))

(declare-datatypes ((V!2937 0))(
  ( (V!2938 (val!1278 Int)) )
))
(declare-datatypes ((array!3857 0))(
  ( (array!3858 (arr!1840 (Array (_ BitVec 32) (_ BitVec 64))) (size!2078 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!890 0))(
  ( (ValueCellFull!890 (v!2506 V!2937)) (EmptyCell!890) )
))
(declare-datatypes ((array!3859 0))(
  ( (array!3860 (arr!1841 (Array (_ BitVec 32) ValueCell!890)) (size!2079 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!688 0))(
  ( (LongMapFixedSize!689 (defaultEntry!2191 Int) (mask!6147 (_ BitVec 32)) (extraKeys!2054 (_ BitVec 32)) (zeroValue!2095 V!2937) (minValue!2095 V!2937) (_size!393 (_ BitVec 32)) (_keys!3838 array!3857) (_values!2174 array!3859) (_vacant!393 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!484 0))(
  ( (Cell!485 (v!2507 LongMapFixedSize!688)) )
))
(declare-datatypes ((LongMap!484 0))(
  ( (LongMap!485 (underlying!253 Cell!484)) )
))
(declare-fun thiss!992 () LongMap!484)

(declare-fun valid!295 (LongMap!484) Bool)

(assert (=> start!9594 (= res!37720 (valid!295 thiss!992))))

(assert (=> start!9594 e!46204))

(declare-fun e!46208 () Bool)

(assert (=> start!9594 e!46208))

(assert (=> start!9594 true))

(declare-fun e!46205 () Bool)

(assert (=> start!9594 e!46205))

(declare-fun mapIsEmpty!3139 () Bool)

(declare-fun mapRes!3140 () Bool)

(assert (=> mapIsEmpty!3139 mapRes!3140))

(declare-fun b!70546 () Bool)

(declare-fun e!46216 () Bool)

(declare-fun tp_is_empty!2467 () Bool)

(assert (=> b!70546 (= e!46216 tp_is_empty!2467)))

(declare-fun b!70547 () Bool)

(declare-fun e!46201 () Bool)

(assert (=> b!70547 (= e!46204 e!46201)))

(declare-fun res!37713 () Bool)

(assert (=> b!70547 (=> (not res!37713) (not e!46201))))

(declare-datatypes ((tuple2!2112 0))(
  ( (tuple2!2113 (_1!1067 (_ BitVec 64)) (_2!1067 V!2937)) )
))
(declare-datatypes ((List!1479 0))(
  ( (Nil!1476) (Cons!1475 (h!2061 tuple2!2112) (t!5006 List!1479)) )
))
(declare-datatypes ((ListLongMap!1397 0))(
  ( (ListLongMap!1398 (toList!714 List!1479)) )
))
(declare-fun lt!31110 () ListLongMap!1397)

(declare-fun lt!31108 () ListLongMap!1397)

(assert (=> b!70547 (= res!37713 (= lt!31110 lt!31108))))

(declare-fun newMap!16 () LongMapFixedSize!688)

(declare-fun map!1145 (LongMapFixedSize!688) ListLongMap!1397)

(assert (=> b!70547 (= lt!31108 (map!1145 newMap!16))))

(declare-fun from!355 () (_ BitVec 32))

(declare-fun getCurrentListMap!407 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) Int) ListLongMap!1397)

(assert (=> b!70547 (= lt!31110 (getCurrentListMap!407 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!70548 () Bool)

(declare-fun e!46214 () Bool)

(declare-fun e!46209 () Bool)

(assert (=> b!70548 (= e!46214 e!46209)))

(declare-fun b!70549 () Bool)

(declare-fun e!46210 () Bool)

(assert (=> b!70549 (= e!46210 tp_is_empty!2467)))

(declare-fun b!70550 () Bool)

(declare-fun res!37717 () Bool)

(assert (=> b!70550 (=> (not res!37717) (not e!46204))))

(assert (=> b!70550 (= res!37717 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6147 newMap!16)) (_size!393 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!70551 () Bool)

(declare-datatypes ((Unit!1989 0))(
  ( (Unit!1990) )
))
(declare-fun e!46203 () Unit!1989)

(declare-fun Unit!1991 () Unit!1989)

(assert (=> b!70551 (= e!46203 Unit!1991)))

(declare-fun b!70552 () Bool)

(declare-fun e!46206 () Bool)

(assert (=> b!70552 (= e!46206 tp_is_empty!2467)))

(declare-fun b!70553 () Bool)

(declare-fun Unit!1992 () Unit!1989)

(assert (=> b!70553 (= e!46203 Unit!1992)))

(declare-fun lt!31111 () Unit!1989)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!47 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) (_ BitVec 32) Int) Unit!1989)

(assert (=> b!70553 (= lt!31111 (lemmaListMapContainsThenArrayContainsFrom!47 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3857 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!70553 (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!31113 () Unit!1989)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3857 (_ BitVec 32) (_ BitVec 32)) Unit!1989)

(assert (=> b!70553 (= lt!31113 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1480 0))(
  ( (Nil!1477) (Cons!1476 (h!2062 (_ BitVec 64)) (t!5007 List!1480)) )
))
(declare-fun arrayNoDuplicates!0 (array!3857 (_ BitVec 32) List!1480) Bool)

(assert (=> b!70553 (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) from!355 Nil!1477)))

(declare-fun lt!31104 () Unit!1989)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3857 (_ BitVec 32) (_ BitVec 64) List!1480) Unit!1989)

(assert (=> b!70553 (= lt!31104 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477)))))

(assert (=> b!70553 false))

(declare-fun mapIsEmpty!3140 () Bool)

(declare-fun mapRes!3139 () Bool)

(assert (=> mapIsEmpty!3140 mapRes!3139))

(declare-fun b!70554 () Bool)

(declare-fun e!46202 () Bool)

(declare-fun e!46213 () Bool)

(assert (=> b!70554 (= e!46202 (not e!46213))))

(declare-fun res!37716 () Bool)

(assert (=> b!70554 (=> res!37716 e!46213)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!70554 (= res!37716 (not (validMask!0 (mask!6147 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun lt!31105 () ListLongMap!1397)

(declare-fun lt!31109 () tuple2!2112)

(declare-fun lt!31103 () tuple2!2112)

(declare-fun +!91 (ListLongMap!1397 tuple2!2112) ListLongMap!1397)

(assert (=> b!70554 (= (+!91 (+!91 lt!31105 lt!31109) lt!31103) (+!91 (+!91 lt!31105 lt!31103) lt!31109))))

(assert (=> b!70554 (= lt!31103 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun lt!31106 () V!2937)

(assert (=> b!70554 (= lt!31109 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))

(declare-fun lt!31112 () Unit!1989)

(declare-fun addCommutativeForDiffKeys!10 (ListLongMap!1397 (_ BitVec 64) V!2937 (_ BitVec 64) V!2937) Unit!1989)

(assert (=> b!70554 (= lt!31112 (addCommutativeForDiffKeys!10 lt!31105 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!55 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) Int) ListLongMap!1397)

(assert (=> b!70554 (= lt!31105 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!70555 () Bool)

(declare-fun res!37714 () Bool)

(assert (=> b!70555 (=> (not res!37714) (not e!46204))))

(assert (=> b!70555 (= res!37714 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!70556 () Bool)

(declare-fun e!46215 () Bool)

(assert (=> b!70556 (= e!46215 tp_is_empty!2467)))

(declare-fun mapNonEmpty!3139 () Bool)

(declare-fun tp!8473 () Bool)

(assert (=> mapNonEmpty!3139 (= mapRes!3139 (and tp!8473 e!46216))))

(declare-fun mapValue!3139 () ValueCell!890)

(declare-fun mapKey!3140 () (_ BitVec 32))

(declare-fun mapRest!3139 () (Array (_ BitVec 32) ValueCell!890))

(assert (=> mapNonEmpty!3139 (= (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (store mapRest!3139 mapKey!3140 mapValue!3139))))

(declare-fun b!70557 () Bool)

(declare-fun res!37719 () Bool)

(assert (=> b!70557 (=> (not res!37719) (not e!46204))))

(declare-fun valid!296 (LongMapFixedSize!688) Bool)

(assert (=> b!70557 (= res!37719 (valid!296 newMap!16))))

(declare-fun b!70558 () Bool)

(declare-fun e!46217 () Bool)

(assert (=> b!70558 (= e!46217 e!46202)))

(declare-fun res!37715 () Bool)

(assert (=> b!70558 (=> (not res!37715) (not e!46202))))

(declare-datatypes ((tuple2!2114 0))(
  ( (tuple2!2115 (_1!1068 Bool) (_2!1068 LongMapFixedSize!688)) )
))
(declare-fun lt!31107 () tuple2!2114)

(assert (=> b!70558 (= res!37715 (and (_1!1068 lt!31107) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!31102 () Unit!1989)

(assert (=> b!70558 (= lt!31102 e!46203)))

(declare-fun c!10194 () Bool)

(declare-fun contains!716 (ListLongMap!1397 (_ BitVec 64)) Bool)

(assert (=> b!70558 (= c!10194 (contains!716 lt!31108 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun update!102 (LongMapFixedSize!688 (_ BitVec 64) V!2937) tuple2!2114)

(assert (=> b!70558 (= lt!31107 (update!102 newMap!16 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))

(declare-fun b!70559 () Bool)

(declare-fun e!46207 () Bool)

(assert (=> b!70559 (= e!46207 (and e!46210 mapRes!3139))))

(declare-fun condMapEmpty!3140 () Bool)

(declare-fun mapDefault!3140 () ValueCell!890)

(assert (=> b!70559 (= condMapEmpty!3140 (= (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3140)))))

(declare-fun b!70560 () Bool)

(assert (=> b!70560 (= e!46213 (or (not (= (size!2079 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6147 (v!2507 (underlying!253 thiss!992)))))) (not (= (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (size!2079 (_values!2174 (v!2507 (underlying!253 thiss!992)))))) (bvslt (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000) (bvsge (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!70561 () Bool)

(assert (=> b!70561 (= e!46201 e!46217)))

(declare-fun res!37718 () Bool)

(assert (=> b!70561 (=> (not res!37718) (not e!46217))))

(assert (=> b!70561 (= res!37718 (and (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1136 (ValueCell!890 V!2937) V!2937)

(declare-fun dynLambda!324 (Int (_ BitVec 64)) V!2937)

(assert (=> b!70561 (= lt!31106 (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70562 () Bool)

(declare-fun e!46218 () Bool)

(assert (=> b!70562 (= e!46218 (and e!46206 mapRes!3140))))

(declare-fun condMapEmpty!3139 () Bool)

(declare-fun mapDefault!3139 () ValueCell!890)

(assert (=> b!70562 (= condMapEmpty!3139 (= (arr!1841 (_values!2174 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3139)))))

(declare-fun array_inv!1147 (array!3857) Bool)

(declare-fun array_inv!1148 (array!3859) Bool)

(assert (=> b!70563 (= e!46205 (and tp!8474 tp_is_empty!2467 (array_inv!1147 (_keys!3838 newMap!16)) (array_inv!1148 (_values!2174 newMap!16)) e!46218))))

(assert (=> b!70564 (= e!46209 (and tp!8471 tp_is_empty!2467 (array_inv!1147 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (array_inv!1148 (_values!2174 (v!2507 (underlying!253 thiss!992)))) e!46207))))

(declare-fun mapNonEmpty!3140 () Bool)

(declare-fun tp!8472 () Bool)

(assert (=> mapNonEmpty!3140 (= mapRes!3140 (and tp!8472 e!46215))))

(declare-fun mapRest!3140 () (Array (_ BitVec 32) ValueCell!890))

(declare-fun mapKey!3139 () (_ BitVec 32))

(declare-fun mapValue!3140 () ValueCell!890)

(assert (=> mapNonEmpty!3140 (= (arr!1841 (_values!2174 newMap!16)) (store mapRest!3140 mapKey!3139 mapValue!3140))))

(declare-fun b!70565 () Bool)

(assert (=> b!70565 (= e!46208 e!46214)))

(assert (= (and start!9594 res!37720) b!70555))

(assert (= (and b!70555 res!37714) b!70557))

(assert (= (and b!70557 res!37719) b!70550))

(assert (= (and b!70550 res!37717) b!70547))

(assert (= (and b!70547 res!37713) b!70561))

(assert (= (and b!70561 res!37718) b!70558))

(assert (= (and b!70558 c!10194) b!70553))

(assert (= (and b!70558 (not c!10194)) b!70551))

(assert (= (and b!70558 res!37715) b!70554))

(assert (= (and b!70554 (not res!37716)) b!70560))

(assert (= (and b!70559 condMapEmpty!3140) mapIsEmpty!3140))

(assert (= (and b!70559 (not condMapEmpty!3140)) mapNonEmpty!3139))

(get-info :version)

(assert (= (and mapNonEmpty!3139 ((_ is ValueCellFull!890) mapValue!3139)) b!70546))

(assert (= (and b!70559 ((_ is ValueCellFull!890) mapDefault!3140)) b!70549))

(assert (= b!70564 b!70559))

(assert (= b!70548 b!70564))

(assert (= b!70565 b!70548))

(assert (= start!9594 b!70565))

(assert (= (and b!70562 condMapEmpty!3139) mapIsEmpty!3139))

(assert (= (and b!70562 (not condMapEmpty!3139)) mapNonEmpty!3140))

(assert (= (and mapNonEmpty!3140 ((_ is ValueCellFull!890) mapValue!3140)) b!70556))

(assert (= (and b!70562 ((_ is ValueCellFull!890) mapDefault!3139)) b!70552))

(assert (= b!70563 b!70562))

(assert (= start!9594 b!70563))

(declare-fun b_lambda!3161 () Bool)

(assert (=> (not b_lambda!3161) (not b!70561)))

(declare-fun t!5003 () Bool)

(declare-fun tb!1501 () Bool)

(assert (=> (and b!70564 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))) t!5003) tb!1501))

(declare-fun result!2641 () Bool)

(assert (=> tb!1501 (= result!2641 tp_is_empty!2467)))

(assert (=> b!70561 t!5003))

(declare-fun b_and!4337 () Bool)

(assert (= b_and!4333 (and (=> t!5003 result!2641) b_and!4337)))

(declare-fun t!5005 () Bool)

(declare-fun tb!1503 () Bool)

(assert (=> (and b!70563 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))) t!5005) tb!1503))

(declare-fun result!2645 () Bool)

(assert (= result!2645 result!2641))

(assert (=> b!70561 t!5005))

(declare-fun b_and!4339 () Bool)

(assert (= b_and!4335 (and (=> t!5005 result!2645) b_and!4339)))

(declare-fun m!67435 () Bool)

(assert (=> b!70558 m!67435))

(assert (=> b!70558 m!67435))

(declare-fun m!67437 () Bool)

(assert (=> b!70558 m!67437))

(assert (=> b!70558 m!67435))

(declare-fun m!67439 () Bool)

(assert (=> b!70558 m!67439))

(declare-fun m!67441 () Bool)

(assert (=> b!70564 m!67441))

(declare-fun m!67443 () Bool)

(assert (=> b!70564 m!67443))

(declare-fun m!67445 () Bool)

(assert (=> b!70547 m!67445))

(declare-fun m!67447 () Bool)

(assert (=> b!70547 m!67447))

(declare-fun m!67449 () Bool)

(assert (=> start!9594 m!67449))

(declare-fun m!67451 () Bool)

(assert (=> mapNonEmpty!3140 m!67451))

(declare-fun m!67453 () Bool)

(assert (=> mapNonEmpty!3139 m!67453))

(declare-fun m!67455 () Bool)

(assert (=> b!70557 m!67455))

(assert (=> b!70561 m!67435))

(declare-fun m!67457 () Bool)

(assert (=> b!70561 m!67457))

(declare-fun m!67459 () Bool)

(assert (=> b!70561 m!67459))

(assert (=> b!70561 m!67457))

(assert (=> b!70561 m!67459))

(declare-fun m!67461 () Bool)

(assert (=> b!70561 m!67461))

(declare-fun m!67463 () Bool)

(assert (=> b!70553 m!67463))

(declare-fun m!67465 () Bool)

(assert (=> b!70553 m!67465))

(assert (=> b!70553 m!67435))

(declare-fun m!67467 () Bool)

(assert (=> b!70553 m!67467))

(assert (=> b!70553 m!67435))

(assert (=> b!70553 m!67435))

(declare-fun m!67469 () Bool)

(assert (=> b!70553 m!67469))

(assert (=> b!70553 m!67435))

(declare-fun m!67471 () Bool)

(assert (=> b!70553 m!67471))

(declare-fun m!67473 () Bool)

(assert (=> b!70554 m!67473))

(declare-fun m!67475 () Bool)

(assert (=> b!70554 m!67475))

(declare-fun m!67477 () Bool)

(assert (=> b!70554 m!67477))

(declare-fun m!67479 () Bool)

(assert (=> b!70554 m!67479))

(declare-fun m!67481 () Bool)

(assert (=> b!70554 m!67481))

(assert (=> b!70554 m!67435))

(assert (=> b!70554 m!67479))

(declare-fun m!67483 () Bool)

(assert (=> b!70554 m!67483))

(assert (=> b!70554 m!67435))

(declare-fun m!67485 () Bool)

(assert (=> b!70554 m!67485))

(assert (=> b!70554 m!67473))

(declare-fun m!67487 () Bool)

(assert (=> b!70563 m!67487))

(declare-fun m!67489 () Bool)

(assert (=> b!70563 m!67489))

(check-sat (not start!9594) (not b!70564) (not mapNonEmpty!3140) (not b_lambda!3161) (not b!70563) (not b!70557) (not b!70561) (not b!70558) (not b_next!2101) (not b!70547) b_and!4337 (not b!70553) b_and!4339 tp_is_empty!2467 (not mapNonEmpty!3139) (not b!70554) (not b_next!2103))
(check-sat b_and!4337 b_and!4339 (not b_next!2101) (not b_next!2103))
(get-model)

(declare-fun b_lambda!3167 () Bool)

(assert (= b_lambda!3161 (or (and b!70564 b_free!2101) (and b!70563 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))) b_lambda!3167)))

(check-sat (not start!9594) (not b!70564) (not mapNonEmpty!3140) (not b!70563) (not b!70557) (not b_lambda!3167) (not b!70561) (not b!70558) (not b_next!2101) (not b!70547) b_and!4337 (not b!70553) b_and!4339 tp_is_empty!2467 (not mapNonEmpty!3139) (not b!70554) (not b_next!2103))
(check-sat b_and!4337 b_and!4339 (not b_next!2101) (not b_next!2103))
(get-model)

(declare-fun d!15719 () Bool)

(declare-fun c!10203 () Bool)

(assert (=> d!15719 (= c!10203 ((_ is ValueCellFull!890) (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!46329 () V!2937)

(assert (=> d!15719 (= (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46329)))

(declare-fun b!70696 () Bool)

(declare-fun get!1137 (ValueCell!890 V!2937) V!2937)

(assert (=> b!70696 (= e!46329 (get!1137 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!70697 () Bool)

(declare-fun get!1138 (ValueCell!890 V!2937) V!2937)

(assert (=> b!70697 (= e!46329 (get!1138 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15719 c!10203) b!70696))

(assert (= (and d!15719 (not c!10203)) b!70697))

(assert (=> b!70696 m!67457))

(assert (=> b!70696 m!67459))

(declare-fun m!67603 () Bool)

(assert (=> b!70696 m!67603))

(assert (=> b!70697 m!67457))

(assert (=> b!70697 m!67459))

(declare-fun m!67605 () Bool)

(assert (=> b!70697 m!67605))

(assert (=> b!70561 d!15719))

(declare-fun d!15721 () Bool)

(assert (=> d!15721 (= (map!1145 newMap!16) (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun bs!3037 () Bool)

(assert (= bs!3037 d!15721))

(declare-fun m!67607 () Bool)

(assert (=> bs!3037 m!67607))

(assert (=> b!70547 d!15721))

(declare-fun bm!6048 () Bool)

(declare-fun call!6057 () Bool)

(declare-fun lt!31248 () ListLongMap!1397)

(assert (=> bm!6048 (= call!6057 (contains!716 lt!31248 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70740 () Bool)

(declare-fun e!46356 () Bool)

(declare-fun apply!74 (ListLongMap!1397 (_ BitVec 64)) V!2937)

(assert (=> b!70740 (= e!46356 (= (apply!74 lt!31248 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!70741 () Bool)

(declare-fun e!46362 () ListLongMap!1397)

(declare-fun call!6053 () ListLongMap!1397)

(assert (=> b!70741 (= e!46362 call!6053)))

(declare-fun bm!6049 () Bool)

(declare-fun call!6051 () ListLongMap!1397)

(assert (=> bm!6049 (= call!6051 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!70742 () Bool)

(declare-fun e!46366 () Unit!1989)

(declare-fun Unit!1995 () Unit!1989)

(assert (=> b!70742 (= e!46366 Unit!1995)))

(declare-fun b!70743 () Bool)

(declare-fun e!46367 () Bool)

(declare-fun e!46361 () Bool)

(assert (=> b!70743 (= e!46367 e!46361)))

(declare-fun res!37793 () Bool)

(assert (=> b!70743 (=> (not res!37793) (not e!46361))))

(assert (=> b!70743 (= res!37793 (contains!716 lt!31248 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!70743 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!70744 () Bool)

(declare-fun c!10217 () Bool)

(assert (=> b!70744 (= c!10217 (and (not (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46357 () ListLongMap!1397)

(assert (=> b!70744 (= e!46357 e!46362)))

(declare-fun call!6052 () ListLongMap!1397)

(declare-fun call!6056 () ListLongMap!1397)

(declare-fun call!6055 () ListLongMap!1397)

(declare-fun bm!6050 () Bool)

(declare-fun c!10220 () Bool)

(declare-fun c!10218 () Bool)

(assert (=> bm!6050 (= call!6055 (+!91 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052)) (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun bm!6051 () Bool)

(declare-fun call!6054 () Bool)

(assert (=> bm!6051 (= call!6054 (contains!716 lt!31248 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!70745 () Bool)

(declare-fun e!46360 () Bool)

(assert (=> b!70745 (= e!46360 (not call!6054))))

(declare-fun b!70746 () Bool)

(assert (=> b!70746 (= e!46361 (= (apply!74 lt!31248 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70746 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2079 (_values!2174 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> b!70746 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!70747 () Bool)

(declare-fun e!46368 () Bool)

(assert (=> b!70747 (= e!46368 (not call!6057))))

(declare-fun b!70748 () Bool)

(declare-fun e!46363 () ListLongMap!1397)

(assert (=> b!70748 (= e!46363 e!46357)))

(assert (=> b!70748 (= c!10218 (and (not (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!70749 () Bool)

(assert (=> b!70749 (= e!46362 call!6052)))

(declare-fun bm!6052 () Bool)

(assert (=> bm!6052 (= call!6053 call!6055)))

(declare-fun b!70750 () Bool)

(declare-fun e!46358 () Bool)

(assert (=> b!70750 (= e!46358 e!46368)))

(declare-fun c!10221 () Bool)

(assert (=> b!70750 (= c!10221 (not (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6053 () Bool)

(assert (=> bm!6053 (= call!6056 call!6051)))

(declare-fun b!70751 () Bool)

(assert (=> b!70751 (= e!46357 call!6053)))

(declare-fun b!70752 () Bool)

(declare-fun res!37789 () Bool)

(assert (=> b!70752 (=> (not res!37789) (not e!46358))))

(assert (=> b!70752 (= res!37789 e!46367)))

(declare-fun res!37788 () Bool)

(assert (=> b!70752 (=> res!37788 e!46367)))

(declare-fun e!46365 () Bool)

(assert (=> b!70752 (= res!37788 (not e!46365))))

(declare-fun res!37790 () Bool)

(assert (=> b!70752 (=> (not res!37790) (not e!46365))))

(assert (=> b!70752 (= res!37790 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!70753 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!70753 (= e!46365 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!70754 () Bool)

(declare-fun res!37794 () Bool)

(assert (=> b!70754 (=> (not res!37794) (not e!46358))))

(assert (=> b!70754 (= res!37794 e!46360)))

(declare-fun c!10219 () Bool)

(assert (=> b!70754 (= c!10219 (not (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!70755 () Bool)

(declare-fun lt!31246 () Unit!1989)

(assert (=> b!70755 (= e!46366 lt!31246)))

(declare-fun lt!31230 () ListLongMap!1397)

(assert (=> b!70755 (= lt!31230 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun lt!31244 () (_ BitVec 64))

(assert (=> b!70755 (= lt!31244 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31231 () (_ BitVec 64))

(assert (=> b!70755 (= lt!31231 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31232 () Unit!1989)

(declare-fun addStillContains!50 (ListLongMap!1397 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1989)

(assert (=> b!70755 (= lt!31232 (addStillContains!50 lt!31230 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31231))))

(assert (=> b!70755 (contains!716 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31231)))

(declare-fun lt!31243 () Unit!1989)

(assert (=> b!70755 (= lt!31243 lt!31232)))

(declare-fun lt!31236 () ListLongMap!1397)

(assert (=> b!70755 (= lt!31236 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun lt!31241 () (_ BitVec 64))

(assert (=> b!70755 (= lt!31241 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31242 () (_ BitVec 64))

(assert (=> b!70755 (= lt!31242 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31239 () Unit!1989)

(declare-fun addApplyDifferent!50 (ListLongMap!1397 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1989)

(assert (=> b!70755 (= lt!31239 (addApplyDifferent!50 lt!31236 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31242))))

(assert (=> b!70755 (= (apply!74 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31242) (apply!74 lt!31236 lt!31242))))

(declare-fun lt!31233 () Unit!1989)

(assert (=> b!70755 (= lt!31233 lt!31239)))

(declare-fun lt!31245 () ListLongMap!1397)

(assert (=> b!70755 (= lt!31245 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun lt!31247 () (_ BitVec 64))

(assert (=> b!70755 (= lt!31247 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31251 () (_ BitVec 64))

(assert (=> b!70755 (= lt!31251 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31240 () Unit!1989)

(assert (=> b!70755 (= lt!31240 (addApplyDifferent!50 lt!31245 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31251))))

(assert (=> b!70755 (= (apply!74 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31251) (apply!74 lt!31245 lt!31251))))

(declare-fun lt!31250 () Unit!1989)

(assert (=> b!70755 (= lt!31250 lt!31240)))

(declare-fun lt!31249 () ListLongMap!1397)

(assert (=> b!70755 (= lt!31249 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun lt!31238 () (_ BitVec 64))

(assert (=> b!70755 (= lt!31238 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31234 () (_ BitVec 64))

(assert (=> b!70755 (= lt!31234 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!70755 (= lt!31246 (addApplyDifferent!50 lt!31249 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31234))))

(assert (=> b!70755 (= (apply!74 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31234) (apply!74 lt!31249 lt!31234))))

(declare-fun b!70756 () Bool)

(declare-fun e!46364 () Bool)

(assert (=> b!70756 (= e!46368 e!46364)))

(declare-fun res!37787 () Bool)

(assert (=> b!70756 (= res!37787 call!6057)))

(assert (=> b!70756 (=> (not res!37787) (not e!46364))))

(declare-fun b!70757 () Bool)

(assert (=> b!70757 (= e!46360 e!46356)))

(declare-fun res!37795 () Bool)

(assert (=> b!70757 (= res!37795 call!6054)))

(assert (=> b!70757 (=> (not res!37795) (not e!46356))))

(declare-fun d!15723 () Bool)

(assert (=> d!15723 e!46358))

(declare-fun res!37791 () Bool)

(assert (=> d!15723 (=> (not res!37791) (not e!46358))))

(assert (=> d!15723 (= res!37791 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun lt!31237 () ListLongMap!1397)

(assert (=> d!15723 (= lt!31248 lt!31237)))

(declare-fun lt!31235 () Unit!1989)

(assert (=> d!15723 (= lt!31235 e!46366)))

(declare-fun c!10216 () Bool)

(declare-fun e!46359 () Bool)

(assert (=> d!15723 (= c!10216 e!46359)))

(declare-fun res!37792 () Bool)

(assert (=> d!15723 (=> (not res!37792) (not e!46359))))

(assert (=> d!15723 (= res!37792 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!15723 (= lt!31237 e!46363)))

(assert (=> d!15723 (= c!10220 (and (not (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15723 (validMask!0 (mask!6147 (v!2507 (underlying!253 thiss!992))))))

(assert (=> d!15723 (= (getCurrentListMap!407 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))) lt!31248)))

(declare-fun b!70758 () Bool)

(assert (=> b!70758 (= e!46364 (= (apply!74 lt!31248 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!70759 () Bool)

(assert (=> b!70759 (= e!46359 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!70760 () Bool)

(assert (=> b!70760 (= e!46363 (+!91 call!6055 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun bm!6054 () Bool)

(assert (=> bm!6054 (= call!6052 call!6056)))

(assert (= (and d!15723 c!10220) b!70760))

(assert (= (and d!15723 (not c!10220)) b!70748))

(assert (= (and b!70748 c!10218) b!70751))

(assert (= (and b!70748 (not c!10218)) b!70744))

(assert (= (and b!70744 c!10217) b!70741))

(assert (= (and b!70744 (not c!10217)) b!70749))

(assert (= (or b!70741 b!70749) bm!6054))

(assert (= (or b!70751 bm!6054) bm!6053))

(assert (= (or b!70751 b!70741) bm!6052))

(assert (= (or b!70760 bm!6053) bm!6049))

(assert (= (or b!70760 bm!6052) bm!6050))

(assert (= (and d!15723 res!37792) b!70759))

(assert (= (and d!15723 c!10216) b!70755))

(assert (= (and d!15723 (not c!10216)) b!70742))

(assert (= (and d!15723 res!37791) b!70752))

(assert (= (and b!70752 res!37790) b!70753))

(assert (= (and b!70752 (not res!37788)) b!70743))

(assert (= (and b!70743 res!37793) b!70746))

(assert (= (and b!70752 res!37789) b!70754))

(assert (= (and b!70754 c!10219) b!70757))

(assert (= (and b!70754 (not c!10219)) b!70745))

(assert (= (and b!70757 res!37795) b!70740))

(assert (= (or b!70757 b!70745) bm!6051))

(assert (= (and b!70754 res!37794) b!70750))

(assert (= (and b!70750 c!10221) b!70756))

(assert (= (and b!70750 (not c!10221)) b!70747))

(assert (= (and b!70756 res!37787) b!70758))

(assert (= (or b!70756 b!70747) bm!6048))

(declare-fun b_lambda!3169 () Bool)

(assert (=> (not b_lambda!3169) (not b!70746)))

(assert (=> b!70746 t!5003))

(declare-fun b_and!4357 () Bool)

(assert (= b_and!4337 (and (=> t!5003 result!2641) b_and!4357)))

(assert (=> b!70746 t!5005))

(declare-fun b_and!4359 () Bool)

(assert (= b_and!4339 (and (=> t!5005 result!2645) b_and!4359)))

(declare-fun m!67609 () Bool)

(assert (=> b!70760 m!67609))

(declare-fun m!67611 () Bool)

(assert (=> b!70759 m!67611))

(assert (=> b!70759 m!67611))

(declare-fun m!67613 () Bool)

(assert (=> b!70759 m!67613))

(assert (=> b!70746 m!67459))

(assert (=> b!70746 m!67611))

(declare-fun m!67615 () Bool)

(assert (=> b!70746 m!67615))

(assert (=> b!70746 m!67459))

(declare-fun m!67617 () Bool)

(assert (=> b!70746 m!67617))

(assert (=> b!70746 m!67611))

(declare-fun m!67619 () Bool)

(assert (=> b!70746 m!67619))

(assert (=> b!70746 m!67615))

(assert (=> b!70753 m!67611))

(assert (=> b!70753 m!67611))

(assert (=> b!70753 m!67613))

(assert (=> d!15723 m!67477))

(assert (=> b!70743 m!67611))

(assert (=> b!70743 m!67611))

(declare-fun m!67621 () Bool)

(assert (=> b!70743 m!67621))

(declare-fun m!67623 () Bool)

(assert (=> b!70740 m!67623))

(declare-fun m!67625 () Bool)

(assert (=> bm!6051 m!67625))

(declare-fun m!67627 () Bool)

(assert (=> bm!6050 m!67627))

(assert (=> bm!6049 m!67481))

(declare-fun m!67629 () Bool)

(assert (=> bm!6048 m!67629))

(declare-fun m!67631 () Bool)

(assert (=> b!70758 m!67631))

(declare-fun m!67633 () Bool)

(assert (=> b!70755 m!67633))

(declare-fun m!67635 () Bool)

(assert (=> b!70755 m!67635))

(declare-fun m!67637 () Bool)

(assert (=> b!70755 m!67637))

(assert (=> b!70755 m!67481))

(assert (=> b!70755 m!67611))

(declare-fun m!67639 () Bool)

(assert (=> b!70755 m!67639))

(declare-fun m!67641 () Bool)

(assert (=> b!70755 m!67641))

(assert (=> b!70755 m!67639))

(declare-fun m!67643 () Bool)

(assert (=> b!70755 m!67643))

(declare-fun m!67645 () Bool)

(assert (=> b!70755 m!67645))

(assert (=> b!70755 m!67641))

(declare-fun m!67647 () Bool)

(assert (=> b!70755 m!67647))

(declare-fun m!67649 () Bool)

(assert (=> b!70755 m!67649))

(declare-fun m!67651 () Bool)

(assert (=> b!70755 m!67651))

(declare-fun m!67653 () Bool)

(assert (=> b!70755 m!67653))

(declare-fun m!67655 () Bool)

(assert (=> b!70755 m!67655))

(declare-fun m!67657 () Bool)

(assert (=> b!70755 m!67657))

(assert (=> b!70755 m!67649))

(declare-fun m!67659 () Bool)

(assert (=> b!70755 m!67659))

(assert (=> b!70755 m!67657))

(declare-fun m!67661 () Bool)

(assert (=> b!70755 m!67661))

(assert (=> b!70547 d!15723))

(declare-fun d!15725 () Bool)

(assert (=> d!15725 (= (array_inv!1147 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvsge (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!70564 d!15725))

(declare-fun d!15727 () Bool)

(assert (=> d!15727 (= (array_inv!1148 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvsge (size!2079 (_values!2174 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!70564 d!15727))

(declare-fun d!15729 () Bool)

(assert (=> d!15729 (= (array_inv!1147 (_keys!3838 newMap!16)) (bvsge (size!2078 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70563 d!15729))

(declare-fun d!15731 () Bool)

(assert (=> d!15731 (= (array_inv!1148 (_values!2174 newMap!16)) (bvsge (size!2079 (_values!2174 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!70563 d!15731))

(declare-fun d!15733 () Bool)

(declare-fun e!46374 () Bool)

(assert (=> d!15733 e!46374))

(declare-fun res!37798 () Bool)

(assert (=> d!15733 (=> res!37798 e!46374)))

(declare-fun lt!31262 () Bool)

(assert (=> d!15733 (= res!37798 (not lt!31262))))

(declare-fun lt!31260 () Bool)

(assert (=> d!15733 (= lt!31262 lt!31260)))

(declare-fun lt!31261 () Unit!1989)

(declare-fun e!46373 () Unit!1989)

(assert (=> d!15733 (= lt!31261 e!46373)))

(declare-fun c!10224 () Bool)

(assert (=> d!15733 (= c!10224 lt!31260)))

(declare-fun containsKey!134 (List!1479 (_ BitVec 64)) Bool)

(assert (=> d!15733 (= lt!31260 (containsKey!134 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15733 (= (contains!716 lt!31108 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) lt!31262)))

(declare-fun b!70767 () Bool)

(declare-fun lt!31263 () Unit!1989)

(assert (=> b!70767 (= e!46373 lt!31263)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!83 (List!1479 (_ BitVec 64)) Unit!1989)

(assert (=> b!70767 (= lt!31263 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-datatypes ((Option!136 0))(
  ( (Some!135 (v!2513 V!2937)) (None!134) )
))
(declare-fun isDefined!84 (Option!136) Bool)

(declare-fun getValueByKey!130 (List!1479 (_ BitVec 64)) Option!136)

(assert (=> b!70767 (isDefined!84 (getValueByKey!130 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!70768 () Bool)

(declare-fun Unit!1996 () Unit!1989)

(assert (=> b!70768 (= e!46373 Unit!1996)))

(declare-fun b!70769 () Bool)

(assert (=> b!70769 (= e!46374 (isDefined!84 (getValueByKey!130 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!15733 c!10224) b!70767))

(assert (= (and d!15733 (not c!10224)) b!70768))

(assert (= (and d!15733 (not res!37798)) b!70769))

(assert (=> d!15733 m!67435))

(declare-fun m!67663 () Bool)

(assert (=> d!15733 m!67663))

(assert (=> b!70767 m!67435))

(declare-fun m!67665 () Bool)

(assert (=> b!70767 m!67665))

(assert (=> b!70767 m!67435))

(declare-fun m!67667 () Bool)

(assert (=> b!70767 m!67667))

(assert (=> b!70767 m!67667))

(declare-fun m!67669 () Bool)

(assert (=> b!70767 m!67669))

(assert (=> b!70769 m!67435))

(assert (=> b!70769 m!67667))

(assert (=> b!70769 m!67667))

(assert (=> b!70769 m!67669))

(assert (=> b!70558 d!15733))

(declare-fun b!70854 () Bool)

(declare-fun res!37840 () Bool)

(declare-fun call!6115 () Bool)

(assert (=> b!70854 (= res!37840 call!6115)))

(declare-fun e!46434 () Bool)

(assert (=> b!70854 (=> (not res!37840) (not e!46434))))

(declare-fun bm!6103 () Bool)

(declare-datatypes ((SeekEntryResult!238 0))(
  ( (MissingZero!238 (index!3082 (_ BitVec 32))) (Found!238 (index!3083 (_ BitVec 32))) (Intermediate!238 (undefined!1050 Bool) (index!3084 (_ BitVec 32)) (x!11009 (_ BitVec 32))) (Undefined!238) (MissingVacant!238 (index!3085 (_ BitVec 32))) )
))
(declare-fun call!6121 () SeekEntryResult!238)

(declare-fun call!6113 () SeekEntryResult!238)

(assert (=> bm!6103 (= call!6121 call!6113)))

(declare-fun b!70855 () Bool)

(declare-fun e!46424 () Bool)

(declare-fun call!6109 () ListLongMap!1397)

(declare-fun call!6126 () ListLongMap!1397)

(assert (=> b!70855 (= e!46424 (= call!6109 call!6126))))

(declare-fun b!70856 () Bool)

(declare-fun res!37837 () Bool)

(declare-fun e!46432 () Bool)

(assert (=> b!70856 (=> (not res!37837) (not e!46432))))

(declare-fun lt!31336 () SeekEntryResult!238)

(assert (=> b!70856 (= res!37837 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3082 lt!31336)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6104 () Bool)

(declare-fun call!6111 () ListLongMap!1397)

(declare-fun call!6123 () ListLongMap!1397)

(assert (=> bm!6104 (= call!6111 call!6123)))

(declare-fun b!70857 () Bool)

(declare-fun e!46421 () Bool)

(assert (=> b!70857 (= e!46421 e!46424)))

(declare-fun c!10258 () Bool)

(declare-fun lt!31326 () tuple2!2114)

(assert (=> b!70857 (= c!10258 (_1!1068 lt!31326))))

(declare-fun e!46439 () Bool)

(declare-fun b!70858 () Bool)

(assert (=> b!70858 (= e!46439 (= call!6109 (+!91 call!6126 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!70859 () Bool)

(declare-fun res!37830 () Bool)

(assert (=> b!70859 (=> (not res!37830) (not e!46432))))

(declare-fun call!6108 () Bool)

(assert (=> b!70859 (= res!37830 call!6108)))

(declare-fun e!46431 () Bool)

(assert (=> b!70859 (= e!46431 e!46432)))

(declare-fun b!70860 () Bool)

(declare-fun lt!31342 () Unit!1989)

(declare-fun e!46428 () Unit!1989)

(assert (=> b!70860 (= lt!31342 e!46428)))

(declare-fun c!10264 () Bool)

(declare-fun call!6119 () Bool)

(assert (=> b!70860 (= c!10264 call!6119)))

(declare-fun e!46440 () tuple2!2114)

(assert (=> b!70860 (= e!46440 (tuple2!2115 false newMap!16))))

(declare-fun lt!31327 () SeekEntryResult!238)

(declare-fun e!46433 () Bool)

(declare-fun b!70861 () Bool)

(assert (=> b!70861 (= e!46433 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31327)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!70862 () Bool)

(declare-fun e!46423 () ListLongMap!1397)

(declare-fun call!6127 () ListLongMap!1397)

(assert (=> b!70862 (= e!46423 call!6127)))

(declare-fun b!70863 () Bool)

(declare-fun call!6116 () Bool)

(assert (=> b!70863 (= e!46432 (not call!6116))))

(declare-fun bm!6105 () Bool)

(declare-fun call!6110 () Bool)

(declare-fun call!6129 () Bool)

(assert (=> bm!6105 (= call!6110 call!6129)))

(declare-fun bm!6106 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3857 (_ BitVec 32)) SeekEntryResult!238)

(assert (=> bm!6106 (= call!6113 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(declare-fun bm!6107 () Bool)

(assert (=> bm!6107 (= call!6109 (map!1145 (_2!1068 lt!31326)))))

(declare-fun b!70864 () Bool)

(declare-fun e!46437 () ListLongMap!1397)

(assert (=> b!70864 (= e!46437 call!6111)))

(declare-fun b!70865 () Bool)

(declare-fun e!46438 () Unit!1989)

(declare-fun lt!31322 () Unit!1989)

(assert (=> b!70865 (= e!46438 lt!31322)))

(declare-fun call!6117 () Unit!1989)

(assert (=> b!70865 (= lt!31322 call!6117)))

(assert (=> b!70865 (= lt!31327 call!6121)))

(declare-fun res!37835 () Bool)

(assert (=> b!70865 (= res!37835 ((_ is Found!238) lt!31327))))

(assert (=> b!70865 (=> (not res!37835) (not e!46433))))

(assert (=> b!70865 e!46433))

(declare-fun d!15735 () Bool)

(assert (=> d!15735 e!46421))

(declare-fun res!37838 () Bool)

(assert (=> d!15735 (=> (not res!37838) (not e!46421))))

(assert (=> d!15735 (= res!37838 (valid!296 (_2!1068 lt!31326)))))

(declare-fun e!46420 () tuple2!2114)

(assert (=> d!15735 (= lt!31326 e!46420)))

(declare-fun c!10263 () Bool)

(assert (=> d!15735 (= c!10263 (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvneg (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15735 (valid!296 newMap!16)))

(assert (=> d!15735 (= (update!102 newMap!16 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106) lt!31326)))

(declare-fun b!70866 () Bool)

(declare-fun e!46426 () Bool)

(assert (=> b!70866 (= e!46426 (not call!6110))))

(declare-fun b!70867 () Bool)

(declare-fun res!37827 () Bool)

(declare-fun call!6124 () Bool)

(assert (=> b!70867 (= res!37827 call!6124)))

(assert (=> b!70867 (=> (not res!37827) (not e!46433))))

(declare-fun c!10259 () Bool)

(declare-fun bm!6108 () Bool)

(declare-fun c!10256 () Bool)

(declare-fun call!6122 () Bool)

(declare-fun c!10260 () Bool)

(declare-fun c!10254 () Bool)

(declare-fun lt!31324 () SeekEntryResult!238)

(declare-fun lt!31333 () SeekEntryResult!238)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!6108 (= call!6122 (inRange!0 (ite c!10259 (ite c!10264 (index!3083 lt!31324) (ite c!10256 (index!3082 lt!31333) (index!3085 lt!31333))) (ite c!10254 (index!3083 lt!31327) (ite c!10260 (index!3082 lt!31336) (index!3085 lt!31336)))) (mask!6147 newMap!16)))))

(declare-fun c!10265 () Bool)

(declare-fun bm!6109 () Bool)

(declare-fun call!6125 () ListLongMap!1397)

(assert (=> bm!6109 (= call!6125 (+!91 e!46423 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun c!10257 () Bool)

(assert (=> bm!6109 (= c!10257 c!10263)))

(declare-fun bm!6110 () Bool)

(assert (=> bm!6110 (= call!6126 (map!1145 newMap!16))))

(declare-fun b!70868 () Bool)

(declare-fun c!10262 () Bool)

(assert (=> b!70868 (= c!10262 ((_ is MissingVacant!238) lt!31336))))

(declare-fun e!46429 () Bool)

(assert (=> b!70868 (= e!46431 e!46429)))

(declare-fun b!70869 () Bool)

(declare-fun e!46425 () Bool)

(assert (=> b!70869 (= e!46425 (not call!6110))))

(declare-fun b!70870 () Bool)

(assert (=> b!70870 (= e!46434 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31324)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun bm!6111 () Bool)

(declare-fun c!10261 () Bool)

(assert (=> bm!6111 (= c!10261 c!10259)))

(assert (=> bm!6111 (= call!6119 (contains!716 e!46437 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!70871 () Bool)

(declare-fun lt!31320 () Unit!1989)

(declare-fun lt!31344 () Unit!1989)

(assert (=> b!70871 (= lt!31320 lt!31344)))

(declare-fun call!6118 () ListLongMap!1397)

(declare-fun call!6112 () ListLongMap!1397)

(assert (=> b!70871 (= call!6118 call!6112)))

(declare-fun lt!31329 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 V!2937 Int) Unit!1989)

(assert (=> b!70871 (= lt!31344 (lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) lt!31329 (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) lt!31106 (defaultEntry!2191 newMap!16)))))

(assert (=> b!70871 (= lt!31329 (bvor (extraKeys!2054 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!46430 () tuple2!2114)

(assert (=> b!70871 (= e!46430 (tuple2!2115 true (LongMapFixedSize!689 (defaultEntry!2191 newMap!16) (mask!6147 newMap!16) (bvor (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) (zeroValue!2095 newMap!16) lt!31106 (_size!393 newMap!16) (_keys!3838 newMap!16) (_values!2174 newMap!16) (_vacant!393 newMap!16))))))

(declare-fun b!70872 () Bool)

(declare-fun lt!31340 () Unit!1989)

(assert (=> b!70872 (= e!46428 lt!31340)))

(declare-fun call!6107 () Unit!1989)

(assert (=> b!70872 (= lt!31340 call!6107)))

(declare-fun call!6128 () SeekEntryResult!238)

(assert (=> b!70872 (= lt!31333 call!6128)))

(assert (=> b!70872 (= c!10256 ((_ is MissingZero!238) lt!31333))))

(declare-fun e!46435 () Bool)

(assert (=> b!70872 e!46435))

(declare-fun b!70873 () Bool)

(assert (=> b!70873 (= e!46424 e!46439)))

(declare-fun res!37829 () Bool)

(assert (=> b!70873 (= res!37829 (contains!716 call!6109 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!70873 (=> (not res!37829) (not e!46439))))

(declare-fun b!70874 () Bool)

(declare-fun lt!31343 () Unit!1989)

(declare-fun lt!31325 () Unit!1989)

(assert (=> b!70874 (= lt!31343 lt!31325)))

(assert (=> b!70874 (= call!6118 call!6112)))

(declare-fun lt!31323 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!23 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 V!2937 Int) Unit!1989)

(assert (=> b!70874 (= lt!31325 (lemmaChangeZeroKeyThenAddPairToListMap!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) lt!31323 (zeroValue!2095 newMap!16) lt!31106 (minValue!2095 newMap!16) (defaultEntry!2191 newMap!16)))))

(assert (=> b!70874 (= lt!31323 (bvor (extraKeys!2054 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!70874 (= e!46430 (tuple2!2115 true (LongMapFixedSize!689 (defaultEntry!2191 newMap!16) (mask!6147 newMap!16) (bvor (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) lt!31106 (minValue!2095 newMap!16) (_size!393 newMap!16) (_keys!3838 newMap!16) (_values!2174 newMap!16) (_vacant!393 newMap!16))))))

(declare-fun b!70875 () Bool)

(declare-fun e!46436 () Bool)

(assert (=> b!70875 (= e!46436 ((_ is Undefined!238) lt!31333))))

(declare-fun b!70876 () Bool)

(declare-fun e!46419 () tuple2!2114)

(declare-fun lt!31330 () tuple2!2114)

(assert (=> b!70876 (= e!46419 (tuple2!2115 (_1!1068 lt!31330) (_2!1068 lt!31330)))))

(declare-fun call!6114 () tuple2!2114)

(assert (=> b!70876 (= lt!31330 call!6114)))

(declare-fun bm!6112 () Bool)

(assert (=> bm!6112 (= call!6127 call!6123)))

(declare-fun bm!6113 () Bool)

(assert (=> bm!6113 (= call!6129 (arrayContainsKey!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!70877 () Bool)

(declare-fun res!37836 () Bool)

(assert (=> b!70877 (=> (not res!37836) (not e!46426))))

(assert (=> b!70877 (= res!37836 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3082 lt!31333)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6114 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) Int) Unit!1989)

(assert (=> bm!6114 (= call!6107 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(declare-fun bm!6115 () Bool)

(assert (=> bm!6115 (= call!6116 call!6129)))

(declare-fun b!70878 () Bool)

(assert (=> b!70878 (= e!46429 ((_ is Undefined!238) lt!31336))))

(declare-fun b!70879 () Bool)

(assert (=> b!70879 (= e!46420 e!46430)))

(assert (=> b!70879 (= c!10265 (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6116 () Bool)

(declare-fun call!6120 () ListLongMap!1397)

(assert (=> bm!6116 (= call!6112 call!6120)))

(declare-fun b!70880 () Bool)

(declare-fun e!46422 () Bool)

(assert (=> b!70880 (= e!46429 e!46422)))

(declare-fun res!37832 () Bool)

(assert (=> b!70880 (= res!37832 call!6108)))

(assert (=> b!70880 (=> (not res!37832) (not e!46422))))

(declare-fun bm!6117 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) Int) Unit!1989)

(assert (=> bm!6117 (= call!6117 (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(declare-fun bm!6118 () Bool)

(assert (=> bm!6118 (= call!6124 call!6122)))

(declare-fun b!70881 () Bool)

(assert (=> b!70881 (= e!46423 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!70882 () Bool)

(declare-fun lt!31338 () tuple2!2114)

(assert (=> b!70882 (= lt!31338 call!6114)))

(declare-fun e!46427 () tuple2!2114)

(assert (=> b!70882 (= e!46427 (tuple2!2115 (_1!1068 lt!31338) (_2!1068 lt!31338)))))

(declare-fun bm!6119 () Bool)

(assert (=> bm!6119 (= call!6128 call!6113)))

(declare-fun b!70883 () Bool)

(assert (=> b!70883 (= e!46436 e!46425)))

(declare-fun res!37839 () Bool)

(declare-fun call!6106 () Bool)

(assert (=> b!70883 (= res!37839 call!6106)))

(assert (=> b!70883 (=> (not res!37839) (not e!46425))))

(declare-fun b!70884 () Bool)

(declare-fun Unit!1997 () Unit!1989)

(assert (=> b!70884 (= e!46438 Unit!1997)))

(declare-fun lt!31334 () Unit!1989)

(assert (=> b!70884 (= lt!31334 call!6107)))

(assert (=> b!70884 (= lt!31336 call!6121)))

(assert (=> b!70884 (= c!10260 ((_ is MissingZero!238) lt!31336))))

(assert (=> b!70884 e!46431))

(declare-fun lt!31328 () Unit!1989)

(assert (=> b!70884 (= lt!31328 lt!31334)))

(assert (=> b!70884 false))

(declare-fun b!70885 () Bool)

(assert (=> b!70885 (= e!46419 e!46427)))

(declare-fun c!10253 () Bool)

(declare-fun lt!31341 () SeekEntryResult!238)

(assert (=> b!70885 (= c!10253 ((_ is MissingZero!238) lt!31341))))

(declare-fun b!70886 () Bool)

(declare-fun Unit!1998 () Unit!1989)

(assert (=> b!70886 (= e!46428 Unit!1998)))

(declare-fun lt!31319 () Unit!1989)

(assert (=> b!70886 (= lt!31319 call!6117)))

(assert (=> b!70886 (= lt!31324 call!6128)))

(declare-fun res!37834 () Bool)

(assert (=> b!70886 (= res!37834 ((_ is Found!238) lt!31324))))

(assert (=> b!70886 (=> (not res!37834) (not e!46434))))

(assert (=> b!70886 e!46434))

(declare-fun lt!31321 () Unit!1989)

(assert (=> b!70886 (= lt!31321 lt!31319)))

(assert (=> b!70886 false))

(declare-fun c!10255 () Bool)

(declare-fun bm!6120 () Bool)

(declare-fun updateHelperNewKey!23 (LongMapFixedSize!688 (_ BitVec 64) V!2937 (_ BitVec 32)) tuple2!2114)

(assert (=> bm!6120 (= call!6114 (updateHelperNewKey!23 newMap!16 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))))))

(declare-fun b!70887 () Bool)

(assert (=> b!70887 (= e!46437 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun bm!6121 () Bool)

(assert (=> bm!6121 (= call!6108 call!6124)))

(declare-fun bm!6122 () Bool)

(assert (=> bm!6122 (= call!6118 call!6125)))

(declare-fun b!70888 () Bool)

(assert (=> b!70888 (= e!46420 e!46440)))

(assert (=> b!70888 (= lt!31341 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(assert (=> b!70888 (= c!10259 ((_ is Undefined!238) lt!31341))))

(declare-fun b!70889 () Bool)

(declare-fun lt!31337 () Unit!1989)

(declare-fun lt!31318 () Unit!1989)

(assert (=> b!70889 (= lt!31337 lt!31318)))

(assert (=> b!70889 (contains!716 call!6111 (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341)))))

(declare-fun lt!31332 () array!3859)

(declare-fun lemmaValidKeyInArrayIsInListMap!82 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) Int) Unit!1989)

(assert (=> b!70889 (= lt!31318 (lemmaValidKeyInArrayIsInListMap!82 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3083 lt!31341) (defaultEntry!2191 newMap!16)))))

(assert (=> b!70889 (= lt!31332 (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))))

(declare-fun lt!31331 () Unit!1989)

(declare-fun lt!31335 () Unit!1989)

(assert (=> b!70889 (= lt!31331 lt!31335)))

(assert (=> b!70889 (= call!6125 call!6120)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) (_ BitVec 64) V!2937 Int) Unit!1989)

(assert (=> b!70889 (= lt!31335 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3083 lt!31341) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31339 () Unit!1989)

(assert (=> b!70889 (= lt!31339 e!46438)))

(assert (=> b!70889 (= c!10254 call!6119)))

(assert (=> b!70889 (= e!46427 (tuple2!2115 true (LongMapFixedSize!689 (defaultEntry!2191 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (_size!393 newMap!16) (_keys!3838 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (_vacant!393 newMap!16))))))

(declare-fun b!70890 () Bool)

(assert (=> b!70890 (= e!46422 (not call!6116))))

(declare-fun bm!6123 () Bool)

(assert (=> bm!6123 (= call!6123 (getCurrentListMap!407 (_keys!3838 newMap!16) (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!70891 () Bool)

(declare-fun c!10266 () Bool)

(assert (=> b!70891 (= c!10266 ((_ is MissingVacant!238) lt!31333))))

(assert (=> b!70891 (= e!46435 e!46436)))

(declare-fun b!70892 () Bool)

(assert (=> b!70892 (= c!10255 ((_ is MissingVacant!238) lt!31341))))

(assert (=> b!70892 (= e!46440 e!46419)))

(declare-fun b!70893 () Bool)

(declare-fun res!37833 () Bool)

(assert (=> b!70893 (=> (not res!37833) (not e!46426))))

(assert (=> b!70893 (= res!37833 call!6106)))

(assert (=> b!70893 (= e!46435 e!46426)))

(declare-fun bm!6124 () Bool)

(assert (=> bm!6124 (= call!6106 call!6115)))

(declare-fun b!70894 () Bool)

(declare-fun res!37831 () Bool)

(assert (=> b!70894 (= res!37831 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3085 lt!31336)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70894 (=> (not res!37831) (not e!46422))))

(declare-fun bm!6125 () Bool)

(assert (=> bm!6125 (= call!6115 call!6122)))

(declare-fun b!70895 () Bool)

(declare-fun res!37828 () Bool)

(assert (=> b!70895 (= res!37828 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3085 lt!31333)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70895 (=> (not res!37828) (not e!46425))))

(declare-fun bm!6126 () Bool)

(assert (=> bm!6126 (= call!6120 (getCurrentListMap!407 (_keys!3838 newMap!16) (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) (mask!6147 newMap!16) (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (= (and d!15735 c!10263) b!70879))

(assert (= (and d!15735 (not c!10263)) b!70888))

(assert (= (and b!70879 c!10265) b!70874))

(assert (= (and b!70879 (not c!10265)) b!70871))

(assert (= (or b!70874 b!70871) bm!6112))

(assert (= (or b!70874 b!70871) bm!6116))

(assert (= (or b!70874 b!70871) bm!6122))

(assert (= (and b!70888 c!10259) b!70860))

(assert (= (and b!70888 (not c!10259)) b!70892))

(assert (= (and b!70860 c!10264) b!70886))

(assert (= (and b!70860 (not c!10264)) b!70872))

(assert (= (and b!70886 res!37834) b!70854))

(assert (= (and b!70854 res!37840) b!70870))

(assert (= (and b!70872 c!10256) b!70893))

(assert (= (and b!70872 (not c!10256)) b!70891))

(assert (= (and b!70893 res!37833) b!70877))

(assert (= (and b!70877 res!37836) b!70866))

(assert (= (and b!70891 c!10266) b!70883))

(assert (= (and b!70891 (not c!10266)) b!70875))

(assert (= (and b!70883 res!37839) b!70895))

(assert (= (and b!70895 res!37828) b!70869))

(assert (= (or b!70893 b!70883) bm!6124))

(assert (= (or b!70866 b!70869) bm!6105))

(assert (= (or b!70854 bm!6124) bm!6125))

(assert (= (or b!70886 b!70872) bm!6119))

(assert (= (and b!70892 c!10255) b!70876))

(assert (= (and b!70892 (not c!10255)) b!70885))

(assert (= (and b!70885 c!10253) b!70882))

(assert (= (and b!70885 (not c!10253)) b!70889))

(assert (= (and b!70889 c!10254) b!70865))

(assert (= (and b!70889 (not c!10254)) b!70884))

(assert (= (and b!70865 res!37835) b!70867))

(assert (= (and b!70867 res!37827) b!70861))

(assert (= (and b!70884 c!10260) b!70859))

(assert (= (and b!70884 (not c!10260)) b!70868))

(assert (= (and b!70859 res!37830) b!70856))

(assert (= (and b!70856 res!37837) b!70863))

(assert (= (and b!70868 c!10262) b!70880))

(assert (= (and b!70868 (not c!10262)) b!70878))

(assert (= (and b!70880 res!37832) b!70894))

(assert (= (and b!70894 res!37831) b!70890))

(assert (= (or b!70859 b!70880) bm!6121))

(assert (= (or b!70863 b!70890) bm!6115))

(assert (= (or b!70867 bm!6121) bm!6118))

(assert (= (or b!70865 b!70884) bm!6103))

(assert (= (or b!70876 b!70882) bm!6120))

(assert (= (or b!70872 b!70884) bm!6114))

(assert (= (or bm!6119 bm!6103) bm!6106))

(assert (= (or b!70886 b!70865) bm!6117))

(assert (= (or bm!6105 bm!6115) bm!6113))

(assert (= (or bm!6125 bm!6118) bm!6108))

(assert (= (or b!70860 b!70889) bm!6104))

(assert (= (or b!70860 b!70889) bm!6111))

(assert (= (and bm!6111 c!10261) b!70864))

(assert (= (and bm!6111 (not c!10261)) b!70887))

(assert (= (or bm!6116 b!70889) bm!6126))

(assert (= (or bm!6112 bm!6104) bm!6123))

(assert (= (or bm!6122 b!70889) bm!6109))

(assert (= (and bm!6109 c!10257) b!70862))

(assert (= (and bm!6109 (not c!10257)) b!70881))

(assert (= (and d!15735 res!37838) b!70857))

(assert (= (and b!70857 c!10258) b!70873))

(assert (= (and b!70857 (not c!10258)) b!70855))

(assert (= (and b!70873 res!37829) b!70858))

(assert (= (or b!70858 b!70855) bm!6110))

(assert (= (or b!70873 b!70858 b!70855) bm!6107))

(declare-fun m!67671 () Bool)

(assert (=> b!70894 m!67671))

(assert (=> b!70887 m!67607))

(declare-fun m!67673 () Bool)

(assert (=> b!70889 m!67673))

(declare-fun m!67675 () Bool)

(assert (=> b!70889 m!67675))

(assert (=> b!70889 m!67435))

(declare-fun m!67677 () Bool)

(assert (=> b!70889 m!67677))

(declare-fun m!67679 () Bool)

(assert (=> b!70889 m!67679))

(assert (=> b!70889 m!67679))

(declare-fun m!67681 () Bool)

(assert (=> b!70889 m!67681))

(assert (=> bm!6110 m!67445))

(declare-fun m!67683 () Bool)

(assert (=> b!70856 m!67683))

(assert (=> bm!6114 m!67435))

(declare-fun m!67685 () Bool)

(assert (=> bm!6114 m!67685))

(assert (=> b!70873 m!67435))

(declare-fun m!67687 () Bool)

(assert (=> b!70873 m!67687))

(assert (=> b!70888 m!67435))

(declare-fun m!67689 () Bool)

(assert (=> b!70888 m!67689))

(declare-fun m!67691 () Bool)

(assert (=> b!70870 m!67691))

(declare-fun m!67693 () Bool)

(assert (=> b!70858 m!67693))

(assert (=> bm!6126 m!67675))

(declare-fun m!67695 () Bool)

(assert (=> bm!6126 m!67695))

(declare-fun m!67697 () Bool)

(assert (=> b!70861 m!67697))

(assert (=> bm!6113 m!67435))

(declare-fun m!67699 () Bool)

(assert (=> bm!6113 m!67699))

(assert (=> bm!6106 m!67435))

(assert (=> bm!6106 m!67689))

(assert (=> b!70881 m!67607))

(declare-fun m!67701 () Bool)

(assert (=> b!70895 m!67701))

(declare-fun m!67703 () Bool)

(assert (=> bm!6107 m!67703))

(assert (=> bm!6120 m!67435))

(declare-fun m!67705 () Bool)

(assert (=> bm!6120 m!67705))

(declare-fun m!67707 () Bool)

(assert (=> b!70874 m!67707))

(declare-fun m!67709 () Bool)

(assert (=> bm!6123 m!67709))

(declare-fun m!67711 () Bool)

(assert (=> b!70871 m!67711))

(assert (=> bm!6111 m!67435))

(declare-fun m!67713 () Bool)

(assert (=> bm!6111 m!67713))

(declare-fun m!67715 () Bool)

(assert (=> b!70877 m!67715))

(declare-fun m!67717 () Bool)

(assert (=> d!15735 m!67717))

(assert (=> d!15735 m!67455))

(declare-fun m!67719 () Bool)

(assert (=> bm!6109 m!67719))

(declare-fun m!67721 () Bool)

(assert (=> bm!6108 m!67721))

(assert (=> bm!6117 m!67435))

(declare-fun m!67723 () Bool)

(assert (=> bm!6117 m!67723))

(assert (=> b!70558 d!15735))

(declare-fun d!15737 () Bool)

(declare-fun e!46443 () Bool)

(assert (=> d!15737 e!46443))

(declare-fun res!37845 () Bool)

(assert (=> d!15737 (=> (not res!37845) (not e!46443))))

(declare-fun lt!31354 () ListLongMap!1397)

(assert (=> d!15737 (= res!37845 (contains!716 lt!31354 (_1!1067 lt!31103)))))

(declare-fun lt!31355 () List!1479)

(assert (=> d!15737 (= lt!31354 (ListLongMap!1398 lt!31355))))

(declare-fun lt!31353 () Unit!1989)

(declare-fun lt!31356 () Unit!1989)

(assert (=> d!15737 (= lt!31353 lt!31356)))

(assert (=> d!15737 (= (getValueByKey!130 lt!31355 (_1!1067 lt!31103)) (Some!135 (_2!1067 lt!31103)))))

(declare-fun lemmaContainsTupThenGetReturnValue!50 (List!1479 (_ BitVec 64) V!2937) Unit!1989)

(assert (=> d!15737 (= lt!31356 (lemmaContainsTupThenGetReturnValue!50 lt!31355 (_1!1067 lt!31103) (_2!1067 lt!31103)))))

(declare-fun insertStrictlySorted!53 (List!1479 (_ BitVec 64) V!2937) List!1479)

(assert (=> d!15737 (= lt!31355 (insertStrictlySorted!53 (toList!714 lt!31105) (_1!1067 lt!31103) (_2!1067 lt!31103)))))

(assert (=> d!15737 (= (+!91 lt!31105 lt!31103) lt!31354)))

(declare-fun b!70900 () Bool)

(declare-fun res!37846 () Bool)

(assert (=> b!70900 (=> (not res!37846) (not e!46443))))

(assert (=> b!70900 (= res!37846 (= (getValueByKey!130 (toList!714 lt!31354) (_1!1067 lt!31103)) (Some!135 (_2!1067 lt!31103))))))

(declare-fun b!70901 () Bool)

(declare-fun contains!717 (List!1479 tuple2!2112) Bool)

(assert (=> b!70901 (= e!46443 (contains!717 (toList!714 lt!31354) lt!31103))))

(assert (= (and d!15737 res!37845) b!70900))

(assert (= (and b!70900 res!37846) b!70901))

(declare-fun m!67725 () Bool)

(assert (=> d!15737 m!67725))

(declare-fun m!67727 () Bool)

(assert (=> d!15737 m!67727))

(declare-fun m!67729 () Bool)

(assert (=> d!15737 m!67729))

(declare-fun m!67731 () Bool)

(assert (=> d!15737 m!67731))

(declare-fun m!67733 () Bool)

(assert (=> b!70900 m!67733))

(declare-fun m!67735 () Bool)

(assert (=> b!70901 m!67735))

(assert (=> b!70554 d!15737))

(declare-fun d!15739 () Bool)

(declare-fun e!46444 () Bool)

(assert (=> d!15739 e!46444))

(declare-fun res!37847 () Bool)

(assert (=> d!15739 (=> (not res!37847) (not e!46444))))

(declare-fun lt!31358 () ListLongMap!1397)

(assert (=> d!15739 (= res!37847 (contains!716 lt!31358 (_1!1067 lt!31109)))))

(declare-fun lt!31359 () List!1479)

(assert (=> d!15739 (= lt!31358 (ListLongMap!1398 lt!31359))))

(declare-fun lt!31357 () Unit!1989)

(declare-fun lt!31360 () Unit!1989)

(assert (=> d!15739 (= lt!31357 lt!31360)))

(assert (=> d!15739 (= (getValueByKey!130 lt!31359 (_1!1067 lt!31109)) (Some!135 (_2!1067 lt!31109)))))

(assert (=> d!15739 (= lt!31360 (lemmaContainsTupThenGetReturnValue!50 lt!31359 (_1!1067 lt!31109) (_2!1067 lt!31109)))))

(assert (=> d!15739 (= lt!31359 (insertStrictlySorted!53 (toList!714 lt!31105) (_1!1067 lt!31109) (_2!1067 lt!31109)))))

(assert (=> d!15739 (= (+!91 lt!31105 lt!31109) lt!31358)))

(declare-fun b!70902 () Bool)

(declare-fun res!37848 () Bool)

(assert (=> b!70902 (=> (not res!37848) (not e!46444))))

(assert (=> b!70902 (= res!37848 (= (getValueByKey!130 (toList!714 lt!31358) (_1!1067 lt!31109)) (Some!135 (_2!1067 lt!31109))))))

(declare-fun b!70903 () Bool)

(assert (=> b!70903 (= e!46444 (contains!717 (toList!714 lt!31358) lt!31109))))

(assert (= (and d!15739 res!37847) b!70902))

(assert (= (and b!70902 res!37848) b!70903))

(declare-fun m!67737 () Bool)

(assert (=> d!15739 m!67737))

(declare-fun m!67739 () Bool)

(assert (=> d!15739 m!67739))

(declare-fun m!67741 () Bool)

(assert (=> d!15739 m!67741))

(declare-fun m!67743 () Bool)

(assert (=> d!15739 m!67743))

(declare-fun m!67745 () Bool)

(assert (=> b!70902 m!67745))

(declare-fun m!67747 () Bool)

(assert (=> b!70903 m!67747))

(assert (=> b!70554 d!15739))

(declare-fun d!15741 () Bool)

(assert (=> d!15741 (= (+!91 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (+!91 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(declare-fun lt!31363 () Unit!1989)

(declare-fun choose!402 (ListLongMap!1397 (_ BitVec 64) V!2937 (_ BitVec 64) V!2937) Unit!1989)

(assert (=> d!15741 (= lt!31363 (choose!402 lt!31105 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))

(assert (=> d!15741 (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15741 (= (addCommutativeForDiffKeys!10 lt!31105 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) lt!31363)))

(declare-fun bs!3038 () Bool)

(assert (= bs!3038 d!15741))

(assert (=> bs!3038 m!67435))

(declare-fun m!67749 () Bool)

(assert (=> bs!3038 m!67749))

(declare-fun m!67751 () Bool)

(assert (=> bs!3038 m!67751))

(declare-fun m!67753 () Bool)

(assert (=> bs!3038 m!67753))

(declare-fun m!67755 () Bool)

(assert (=> bs!3038 m!67755))

(declare-fun m!67757 () Bool)

(assert (=> bs!3038 m!67757))

(assert (=> bs!3038 m!67755))

(assert (=> bs!3038 m!67751))

(assert (=> b!70554 d!15741))

(declare-fun d!15743 () Bool)

(declare-fun e!46445 () Bool)

(assert (=> d!15743 e!46445))

(declare-fun res!37849 () Bool)

(assert (=> d!15743 (=> (not res!37849) (not e!46445))))

(declare-fun lt!31365 () ListLongMap!1397)

(assert (=> d!15743 (= res!37849 (contains!716 lt!31365 (_1!1067 lt!31109)))))

(declare-fun lt!31366 () List!1479)

(assert (=> d!15743 (= lt!31365 (ListLongMap!1398 lt!31366))))

(declare-fun lt!31364 () Unit!1989)

(declare-fun lt!31367 () Unit!1989)

(assert (=> d!15743 (= lt!31364 lt!31367)))

(assert (=> d!15743 (= (getValueByKey!130 lt!31366 (_1!1067 lt!31109)) (Some!135 (_2!1067 lt!31109)))))

(assert (=> d!15743 (= lt!31367 (lemmaContainsTupThenGetReturnValue!50 lt!31366 (_1!1067 lt!31109) (_2!1067 lt!31109)))))

(assert (=> d!15743 (= lt!31366 (insertStrictlySorted!53 (toList!714 (+!91 lt!31105 lt!31103)) (_1!1067 lt!31109) (_2!1067 lt!31109)))))

(assert (=> d!15743 (= (+!91 (+!91 lt!31105 lt!31103) lt!31109) lt!31365)))

(declare-fun b!70904 () Bool)

(declare-fun res!37850 () Bool)

(assert (=> b!70904 (=> (not res!37850) (not e!46445))))

(assert (=> b!70904 (= res!37850 (= (getValueByKey!130 (toList!714 lt!31365) (_1!1067 lt!31109)) (Some!135 (_2!1067 lt!31109))))))

(declare-fun b!70905 () Bool)

(assert (=> b!70905 (= e!46445 (contains!717 (toList!714 lt!31365) lt!31109))))

(assert (= (and d!15743 res!37849) b!70904))

(assert (= (and b!70904 res!37850) b!70905))

(declare-fun m!67759 () Bool)

(assert (=> d!15743 m!67759))

(declare-fun m!67761 () Bool)

(assert (=> d!15743 m!67761))

(declare-fun m!67763 () Bool)

(assert (=> d!15743 m!67763))

(declare-fun m!67765 () Bool)

(assert (=> d!15743 m!67765))

(declare-fun m!67767 () Bool)

(assert (=> b!70904 m!67767))

(declare-fun m!67769 () Bool)

(assert (=> b!70905 m!67769))

(assert (=> b!70554 d!15743))

(declare-fun d!15745 () Bool)

(assert (=> d!15745 (= (validMask!0 (mask!6147 (v!2507 (underlying!253 thiss!992)))) (and (or (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000001111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000011111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000001111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000011111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000001111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000011111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000001111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000011111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000001111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000011111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000001111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000011111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000111111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000001111111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000011111111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000111111111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000001111111111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000011111111111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000111111111111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00001111111111111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00011111111111111111111111111111) (= (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!70554 d!15745))

(declare-fun d!15747 () Bool)

(declare-fun e!46446 () Bool)

(assert (=> d!15747 e!46446))

(declare-fun res!37851 () Bool)

(assert (=> d!15747 (=> (not res!37851) (not e!46446))))

(declare-fun lt!31369 () ListLongMap!1397)

(assert (=> d!15747 (= res!37851 (contains!716 lt!31369 (_1!1067 lt!31103)))))

(declare-fun lt!31370 () List!1479)

(assert (=> d!15747 (= lt!31369 (ListLongMap!1398 lt!31370))))

(declare-fun lt!31368 () Unit!1989)

(declare-fun lt!31371 () Unit!1989)

(assert (=> d!15747 (= lt!31368 lt!31371)))

(assert (=> d!15747 (= (getValueByKey!130 lt!31370 (_1!1067 lt!31103)) (Some!135 (_2!1067 lt!31103)))))

(assert (=> d!15747 (= lt!31371 (lemmaContainsTupThenGetReturnValue!50 lt!31370 (_1!1067 lt!31103) (_2!1067 lt!31103)))))

(assert (=> d!15747 (= lt!31370 (insertStrictlySorted!53 (toList!714 (+!91 lt!31105 lt!31109)) (_1!1067 lt!31103) (_2!1067 lt!31103)))))

(assert (=> d!15747 (= (+!91 (+!91 lt!31105 lt!31109) lt!31103) lt!31369)))

(declare-fun b!70906 () Bool)

(declare-fun res!37852 () Bool)

(assert (=> b!70906 (=> (not res!37852) (not e!46446))))

(assert (=> b!70906 (= res!37852 (= (getValueByKey!130 (toList!714 lt!31369) (_1!1067 lt!31103)) (Some!135 (_2!1067 lt!31103))))))

(declare-fun b!70907 () Bool)

(assert (=> b!70907 (= e!46446 (contains!717 (toList!714 lt!31369) lt!31103))))

(assert (= (and d!15747 res!37851) b!70906))

(assert (= (and b!70906 res!37852) b!70907))

(declare-fun m!67771 () Bool)

(assert (=> d!15747 m!67771))

(declare-fun m!67773 () Bool)

(assert (=> d!15747 m!67773))

(declare-fun m!67775 () Bool)

(assert (=> d!15747 m!67775))

(declare-fun m!67777 () Bool)

(assert (=> d!15747 m!67777))

(declare-fun m!67779 () Bool)

(assert (=> b!70906 m!67779))

(declare-fun m!67781 () Bool)

(assert (=> b!70907 m!67781))

(assert (=> b!70554 d!15747))

(declare-fun b!70932 () Bool)

(declare-fun e!46463 () ListLongMap!1397)

(assert (=> b!70932 (= e!46463 (ListLongMap!1398 Nil!1476))))

(declare-fun b!70933 () Bool)

(declare-fun e!46462 () Bool)

(declare-fun lt!31388 () ListLongMap!1397)

(declare-fun isEmpty!317 (ListLongMap!1397) Bool)

(assert (=> b!70933 (= e!46462 (isEmpty!317 lt!31388))))

(declare-fun b!70934 () Bool)

(declare-fun lt!31392 () Unit!1989)

(declare-fun lt!31391 () Unit!1989)

(assert (=> b!70934 (= lt!31392 lt!31391)))

(declare-fun lt!31386 () V!2937)

(declare-fun lt!31387 () (_ BitVec 64))

(declare-fun lt!31390 () ListLongMap!1397)

(declare-fun lt!31389 () (_ BitVec 64))

(assert (=> b!70934 (not (contains!716 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)) lt!31389))))

(declare-fun addStillNotContains!24 (ListLongMap!1397 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1989)

(assert (=> b!70934 (= lt!31391 (addStillNotContains!24 lt!31390 lt!31387 lt!31386 lt!31389))))

(assert (=> b!70934 (= lt!31389 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!70934 (= lt!31386 (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!70934 (= lt!31387 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!6132 () ListLongMap!1397)

(assert (=> b!70934 (= lt!31390 call!6132)))

(declare-fun e!46464 () ListLongMap!1397)

(assert (=> b!70934 (= e!46464 (+!91 call!6132 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!70935 () Bool)

(declare-fun e!46466 () Bool)

(declare-fun e!46467 () Bool)

(assert (=> b!70935 (= e!46466 e!46467)))

(declare-fun c!10276 () Bool)

(declare-fun e!46465 () Bool)

(assert (=> b!70935 (= c!10276 e!46465)))

(declare-fun res!37861 () Bool)

(assert (=> b!70935 (=> (not res!37861) (not e!46465))))

(assert (=> b!70935 (= res!37861 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!70936 () Bool)

(assert (=> b!70936 (= e!46464 call!6132)))

(declare-fun b!70938 () Bool)

(declare-fun e!46461 () Bool)

(assert (=> b!70938 (= e!46467 e!46461)))

(assert (=> b!70938 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun res!37864 () Bool)

(assert (=> b!70938 (= res!37864 (contains!716 lt!31388 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!70938 (=> (not res!37864) (not e!46461))))

(declare-fun bm!6129 () Bool)

(assert (=> bm!6129 (= call!6132 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!70939 () Bool)

(assert (=> b!70939 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> b!70939 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2079 (_values!2174 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> b!70939 (= e!46461 (= (apply!74 lt!31388 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!70940 () Bool)

(assert (=> b!70940 (= e!46463 e!46464)))

(declare-fun c!10275 () Bool)

(assert (=> b!70940 (= c!10275 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!70941 () Bool)

(assert (=> b!70941 (= e!46462 (= lt!31388 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!70942 () Bool)

(assert (=> b!70942 (= e!46467 e!46462)))

(declare-fun c!10277 () Bool)

(assert (=> b!70942 (= c!10277 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!70943 () Bool)

(assert (=> b!70943 (= e!46465 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!70943 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun d!15749 () Bool)

(assert (=> d!15749 e!46466))

(declare-fun res!37863 () Bool)

(assert (=> d!15749 (=> (not res!37863) (not e!46466))))

(assert (=> d!15749 (= res!37863 (not (contains!716 lt!31388 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15749 (= lt!31388 e!46463)))

(declare-fun c!10278 () Bool)

(assert (=> d!15749 (= c!10278 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!15749 (validMask!0 (mask!6147 (v!2507 (underlying!253 thiss!992))))))

(assert (=> d!15749 (= (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))) lt!31388)))

(declare-fun b!70937 () Bool)

(declare-fun res!37862 () Bool)

(assert (=> b!70937 (=> (not res!37862) (not e!46466))))

(assert (=> b!70937 (= res!37862 (not (contains!716 lt!31388 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15749 c!10278) b!70932))

(assert (= (and d!15749 (not c!10278)) b!70940))

(assert (= (and b!70940 c!10275) b!70934))

(assert (= (and b!70940 (not c!10275)) b!70936))

(assert (= (or b!70934 b!70936) bm!6129))

(assert (= (and d!15749 res!37863) b!70937))

(assert (= (and b!70937 res!37862) b!70935))

(assert (= (and b!70935 res!37861) b!70943))

(assert (= (and b!70935 c!10276) b!70938))

(assert (= (and b!70935 (not c!10276)) b!70942))

(assert (= (and b!70938 res!37864) b!70939))

(assert (= (and b!70942 c!10277) b!70941))

(assert (= (and b!70942 (not c!10277)) b!70933))

(declare-fun b_lambda!3171 () Bool)

(assert (=> (not b_lambda!3171) (not b!70934)))

(assert (=> b!70934 t!5003))

(declare-fun b_and!4361 () Bool)

(assert (= b_and!4357 (and (=> t!5003 result!2641) b_and!4361)))

(assert (=> b!70934 t!5005))

(declare-fun b_and!4363 () Bool)

(assert (= b_and!4359 (and (=> t!5005 result!2645) b_and!4363)))

(declare-fun b_lambda!3173 () Bool)

(assert (=> (not b_lambda!3173) (not b!70939)))

(assert (=> b!70939 t!5003))

(declare-fun b_and!4365 () Bool)

(assert (= b_and!4361 (and (=> t!5003 result!2641) b_and!4365)))

(assert (=> b!70939 t!5005))

(declare-fun b_and!4367 () Bool)

(assert (= b_and!4363 (and (=> t!5005 result!2645) b_and!4367)))

(declare-fun m!67783 () Bool)

(assert (=> d!15749 m!67783))

(assert (=> d!15749 m!67477))

(assert (=> b!70938 m!67611))

(assert (=> b!70938 m!67611))

(declare-fun m!67785 () Bool)

(assert (=> b!70938 m!67785))

(declare-fun m!67787 () Bool)

(assert (=> bm!6129 m!67787))

(assert (=> b!70939 m!67611))

(assert (=> b!70939 m!67611))

(declare-fun m!67789 () Bool)

(assert (=> b!70939 m!67789))

(assert (=> b!70939 m!67615))

(assert (=> b!70939 m!67459))

(assert (=> b!70939 m!67615))

(assert (=> b!70939 m!67459))

(assert (=> b!70939 m!67617))

(declare-fun m!67791 () Bool)

(assert (=> b!70933 m!67791))

(assert (=> b!70941 m!67787))

(assert (=> b!70940 m!67611))

(assert (=> b!70940 m!67611))

(assert (=> b!70940 m!67613))

(declare-fun m!67793 () Bool)

(assert (=> b!70937 m!67793))

(assert (=> b!70943 m!67611))

(assert (=> b!70943 m!67611))

(assert (=> b!70943 m!67613))

(assert (=> b!70934 m!67611))

(declare-fun m!67795 () Bool)

(assert (=> b!70934 m!67795))

(declare-fun m!67797 () Bool)

(assert (=> b!70934 m!67797))

(assert (=> b!70934 m!67795))

(declare-fun m!67799 () Bool)

(assert (=> b!70934 m!67799))

(declare-fun m!67801 () Bool)

(assert (=> b!70934 m!67801))

(assert (=> b!70934 m!67615))

(assert (=> b!70934 m!67459))

(assert (=> b!70934 m!67615))

(assert (=> b!70934 m!67459))

(assert (=> b!70934 m!67617))

(assert (=> b!70554 d!15749))

(declare-fun d!15751 () Bool)

(assert (=> d!15751 (not (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!31395 () Unit!1989)

(declare-fun choose!68 (array!3857 (_ BitVec 32) (_ BitVec 64) List!1480) Unit!1989)

(assert (=> d!15751 (= lt!31395 (choose!68 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477)))))

(assert (=> d!15751 (bvslt (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!15751 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477)) lt!31395)))

(declare-fun bs!3039 () Bool)

(assert (= bs!3039 d!15751))

(assert (=> bs!3039 m!67435))

(assert (=> bs!3039 m!67469))

(assert (=> bs!3039 m!67435))

(declare-fun m!67803 () Bool)

(assert (=> bs!3039 m!67803))

(assert (=> b!70553 d!15751))

(declare-fun d!15753 () Bool)

(assert (=> d!15753 (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) from!355 Nil!1477)))

(declare-fun lt!31398 () Unit!1989)

(declare-fun choose!39 (array!3857 (_ BitVec 32) (_ BitVec 32)) Unit!1989)

(assert (=> d!15753 (= lt!31398 (choose!39 (_keys!3838 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!15753 (bvslt (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!15753 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355) lt!31398)))

(declare-fun bs!3040 () Bool)

(assert (= bs!3040 d!15753))

(assert (=> bs!3040 m!67465))

(declare-fun m!67805 () Bool)

(assert (=> bs!3040 m!67805))

(assert (=> b!70553 d!15753))

(declare-fun d!15755 () Bool)

(declare-fun res!37869 () Bool)

(declare-fun e!46472 () Bool)

(assert (=> d!15755 (=> res!37869 e!46472)))

(assert (=> d!15755 (= res!37869 (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15755 (= (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!46472)))

(declare-fun b!70948 () Bool)

(declare-fun e!46473 () Bool)

(assert (=> b!70948 (= e!46472 e!46473)))

(declare-fun res!37870 () Bool)

(assert (=> b!70948 (=> (not res!37870) (not e!46473))))

(assert (=> b!70948 (= res!37870 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!70949 () Bool)

(assert (=> b!70949 (= e!46473 (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!15755 (not res!37869)) b!70948))

(assert (= (and b!70948 res!37870) b!70949))

(assert (=> d!15755 m!67611))

(assert (=> b!70949 m!67435))

(declare-fun m!67807 () Bool)

(assert (=> b!70949 m!67807))

(assert (=> b!70553 d!15755))

(declare-fun d!15757 () Bool)

(declare-fun e!46476 () Bool)

(assert (=> d!15757 e!46476))

(declare-fun c!10281 () Bool)

(assert (=> d!15757 (= c!10281 (and (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!31401 () Unit!1989)

(declare-fun choose!403 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) (_ BitVec 32) Int) Unit!1989)

(assert (=> d!15757 (= lt!31401 (choose!403 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(assert (=> d!15757 (validMask!0 (mask!6147 (v!2507 (underlying!253 thiss!992))))))

(assert (=> d!15757 (= (lemmaListMapContainsThenArrayContainsFrom!47 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))) lt!31401)))

(declare-fun b!70954 () Bool)

(assert (=> b!70954 (= e!46476 (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!70955 () Bool)

(assert (=> b!70955 (= e!46476 (ite (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!15757 c!10281) b!70954))

(assert (= (and d!15757 (not c!10281)) b!70955))

(assert (=> d!15757 m!67435))

(declare-fun m!67809 () Bool)

(assert (=> d!15757 m!67809))

(assert (=> d!15757 m!67477))

(assert (=> b!70954 m!67435))

(assert (=> b!70954 m!67469))

(assert (=> b!70553 d!15757))

(declare-fun call!6135 () Bool)

(declare-fun bm!6132 () Bool)

(declare-fun c!10284 () Bool)

(assert (=> bm!6132 (= call!6135 (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)))))

(declare-fun b!70966 () Bool)

(declare-fun e!46485 () Bool)

(declare-fun e!46486 () Bool)

(assert (=> b!70966 (= e!46485 e!46486)))

(assert (=> b!70966 (= c!10284 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun d!15759 () Bool)

(declare-fun res!37878 () Bool)

(declare-fun e!46487 () Bool)

(assert (=> d!15759 (=> res!37878 e!46487)))

(assert (=> d!15759 (= res!37878 (bvsge from!355 (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!15759 (= (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) from!355 Nil!1477) e!46487)))

(declare-fun b!70967 () Bool)

(assert (=> b!70967 (= e!46486 call!6135)))

(declare-fun b!70968 () Bool)

(declare-fun e!46488 () Bool)

(declare-fun contains!718 (List!1480 (_ BitVec 64)) Bool)

(assert (=> b!70968 (= e!46488 (contains!718 Nil!1477 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!70969 () Bool)

(assert (=> b!70969 (= e!46486 call!6135)))

(declare-fun b!70970 () Bool)

(assert (=> b!70970 (= e!46487 e!46485)))

(declare-fun res!37879 () Bool)

(assert (=> b!70970 (=> (not res!37879) (not e!46485))))

(assert (=> b!70970 (= res!37879 (not e!46488))))

(declare-fun res!37877 () Bool)

(assert (=> b!70970 (=> (not res!37877) (not e!46488))))

(assert (=> b!70970 (= res!37877 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15759 (not res!37878)) b!70970))

(assert (= (and b!70970 res!37877) b!70968))

(assert (= (and b!70970 res!37879) b!70966))

(assert (= (and b!70966 c!10284) b!70967))

(assert (= (and b!70966 (not c!10284)) b!70969))

(assert (= (or b!70967 b!70969) bm!6132))

(assert (=> bm!6132 m!67435))

(declare-fun m!67811 () Bool)

(assert (=> bm!6132 m!67811))

(assert (=> b!70966 m!67435))

(assert (=> b!70966 m!67435))

(declare-fun m!67813 () Bool)

(assert (=> b!70966 m!67813))

(assert (=> b!70968 m!67435))

(assert (=> b!70968 m!67435))

(declare-fun m!67815 () Bool)

(assert (=> b!70968 m!67815))

(assert (=> b!70970 m!67435))

(assert (=> b!70970 m!67435))

(assert (=> b!70970 m!67813))

(assert (=> b!70553 d!15759))

(declare-fun d!15761 () Bool)

(assert (=> d!15761 (= (valid!295 thiss!992) (valid!296 (v!2507 (underlying!253 thiss!992))))))

(declare-fun bs!3041 () Bool)

(assert (= bs!3041 d!15761))

(declare-fun m!67817 () Bool)

(assert (=> bs!3041 m!67817))

(assert (=> start!9594 d!15761))

(declare-fun d!15763 () Bool)

(declare-fun res!37886 () Bool)

(declare-fun e!46491 () Bool)

(assert (=> d!15763 (=> (not res!37886) (not e!46491))))

(declare-fun simpleValid!50 (LongMapFixedSize!688) Bool)

(assert (=> d!15763 (= res!37886 (simpleValid!50 newMap!16))))

(assert (=> d!15763 (= (valid!296 newMap!16) e!46491)))

(declare-fun b!70977 () Bool)

(declare-fun res!37887 () Bool)

(assert (=> b!70977 (=> (not res!37887) (not e!46491))))

(declare-fun arrayCountValidKeys!0 (array!3857 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!70977 (= res!37887 (= (arrayCountValidKeys!0 (_keys!3838 newMap!16) #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (_size!393 newMap!16)))))

(declare-fun b!70978 () Bool)

(declare-fun res!37888 () Bool)

(assert (=> b!70978 (=> (not res!37888) (not e!46491))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3857 (_ BitVec 32)) Bool)

(assert (=> b!70978 (= res!37888 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(declare-fun b!70979 () Bool)

(assert (=> b!70979 (= e!46491 (arrayNoDuplicates!0 (_keys!3838 newMap!16) #b00000000000000000000000000000000 Nil!1477))))

(assert (= (and d!15763 res!37886) b!70977))

(assert (= (and b!70977 res!37887) b!70978))

(assert (= (and b!70978 res!37888) b!70979))

(declare-fun m!67819 () Bool)

(assert (=> d!15763 m!67819))

(declare-fun m!67821 () Bool)

(assert (=> b!70977 m!67821))

(declare-fun m!67823 () Bool)

(assert (=> b!70978 m!67823))

(declare-fun m!67825 () Bool)

(assert (=> b!70979 m!67825))

(assert (=> b!70557 d!15763))

(declare-fun mapIsEmpty!3155 () Bool)

(declare-fun mapRes!3155 () Bool)

(assert (=> mapIsEmpty!3155 mapRes!3155))

(declare-fun condMapEmpty!3155 () Bool)

(declare-fun mapDefault!3155 () ValueCell!890)

(assert (=> mapNonEmpty!3140 (= condMapEmpty!3155 (= mapRest!3140 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3155)))))

(declare-fun e!46497 () Bool)

(assert (=> mapNonEmpty!3140 (= tp!8472 (and e!46497 mapRes!3155))))

(declare-fun b!70986 () Bool)

(declare-fun e!46496 () Bool)

(assert (=> b!70986 (= e!46496 tp_is_empty!2467)))

(declare-fun b!70987 () Bool)

(assert (=> b!70987 (= e!46497 tp_is_empty!2467)))

(declare-fun mapNonEmpty!3155 () Bool)

(declare-fun tp!8501 () Bool)

(assert (=> mapNonEmpty!3155 (= mapRes!3155 (and tp!8501 e!46496))))

(declare-fun mapValue!3155 () ValueCell!890)

(declare-fun mapKey!3155 () (_ BitVec 32))

(declare-fun mapRest!3155 () (Array (_ BitVec 32) ValueCell!890))

(assert (=> mapNonEmpty!3155 (= mapRest!3140 (store mapRest!3155 mapKey!3155 mapValue!3155))))

(assert (= (and mapNonEmpty!3140 condMapEmpty!3155) mapIsEmpty!3155))

(assert (= (and mapNonEmpty!3140 (not condMapEmpty!3155)) mapNonEmpty!3155))

(assert (= (and mapNonEmpty!3155 ((_ is ValueCellFull!890) mapValue!3155)) b!70986))

(assert (= (and mapNonEmpty!3140 ((_ is ValueCellFull!890) mapDefault!3155)) b!70987))

(declare-fun m!67827 () Bool)

(assert (=> mapNonEmpty!3155 m!67827))

(declare-fun mapIsEmpty!3156 () Bool)

(declare-fun mapRes!3156 () Bool)

(assert (=> mapIsEmpty!3156 mapRes!3156))

(declare-fun condMapEmpty!3156 () Bool)

(declare-fun mapDefault!3156 () ValueCell!890)

(assert (=> mapNonEmpty!3139 (= condMapEmpty!3156 (= mapRest!3139 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3156)))))

(declare-fun e!46499 () Bool)

(assert (=> mapNonEmpty!3139 (= tp!8473 (and e!46499 mapRes!3156))))

(declare-fun b!70988 () Bool)

(declare-fun e!46498 () Bool)

(assert (=> b!70988 (= e!46498 tp_is_empty!2467)))

(declare-fun b!70989 () Bool)

(assert (=> b!70989 (= e!46499 tp_is_empty!2467)))

(declare-fun mapNonEmpty!3156 () Bool)

(declare-fun tp!8502 () Bool)

(assert (=> mapNonEmpty!3156 (= mapRes!3156 (and tp!8502 e!46498))))

(declare-fun mapValue!3156 () ValueCell!890)

(declare-fun mapRest!3156 () (Array (_ BitVec 32) ValueCell!890))

(declare-fun mapKey!3156 () (_ BitVec 32))

(assert (=> mapNonEmpty!3156 (= mapRest!3139 (store mapRest!3156 mapKey!3156 mapValue!3156))))

(assert (= (and mapNonEmpty!3139 condMapEmpty!3156) mapIsEmpty!3156))

(assert (= (and mapNonEmpty!3139 (not condMapEmpty!3156)) mapNonEmpty!3156))

(assert (= (and mapNonEmpty!3156 ((_ is ValueCellFull!890) mapValue!3156)) b!70988))

(assert (= (and mapNonEmpty!3139 ((_ is ValueCellFull!890) mapDefault!3156)) b!70989))

(declare-fun m!67829 () Bool)

(assert (=> mapNonEmpty!3156 m!67829))

(declare-fun b_lambda!3175 () Bool)

(assert (= b_lambda!3173 (or (and b!70564 b_free!2101) (and b!70563 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))) b_lambda!3175)))

(declare-fun b_lambda!3177 () Bool)

(assert (= b_lambda!3171 (or (and b!70564 b_free!2101) (and b!70563 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))) b_lambda!3177)))

(declare-fun b_lambda!3179 () Bool)

(assert (= b_lambda!3169 (or (and b!70564 b_free!2101) (and b!70563 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))) b_lambda!3179)))

(check-sat (not bm!6114) tp_is_empty!2467 (not b!70933) (not b!70767) (not b!70905) (not bm!6050) (not b!70939) (not b!70889) (not b!70968) (not bm!6048) (not b!70902) (not bm!6108) (not b!70907) (not b_lambda!3179) (not d!15739) (not bm!6120) (not d!15733) (not b!70941) (not mapNonEmpty!3155) (not b!70938) (not b!70888) (not bm!6123) (not d!15723) (not b_lambda!3167) (not d!15749) (not d!15753) (not b!70740) (not d!15743) (not d!15741) (not b_next!2103) (not d!15763) (not b!70874) (not bm!6049) (not b!70940) (not mapNonEmpty!3156) (not b!70954) (not b!70903) (not b!70873) (not b!70977) (not b!70934) (not b!70881) (not d!15761) b_and!4365 (not bm!6126) (not b!70943) (not b!70758) (not bm!6051) (not d!15721) (not d!15735) (not b!70966) (not b!70937) (not b!70906) (not b_next!2101) (not b!70746) (not b!70901) (not bm!6132) (not bm!6109) (not b!70858) (not b!70871) (not b!70753) (not b!70769) (not d!15747) (not bm!6117) (not bm!6110) (not b!70696) (not bm!6111) (not b!70755) (not b!70978) (not bm!6113) (not b!70900) (not d!15737) (not b!70697) (not b!70949) (not b_lambda!3175) (not b!70887) (not b!70979) (not b!70970) b_and!4367 (not b!70759) (not b_lambda!3177) (not b!70760) (not bm!6107) (not d!15751) (not b!70904) (not bm!6106) (not b!70743) (not d!15757) (not bm!6129))
(check-sat b_and!4365 b_and!4367 (not b_next!2101) (not b_next!2103))
(get-model)

(assert (=> bm!6110 d!15721))

(declare-fun d!15765 () Bool)

(declare-fun e!46501 () Bool)

(assert (=> d!15765 e!46501))

(declare-fun res!37889 () Bool)

(assert (=> d!15765 (=> res!37889 e!46501)))

(declare-fun lt!31404 () Bool)

(assert (=> d!15765 (= res!37889 (not lt!31404))))

(declare-fun lt!31402 () Bool)

(assert (=> d!15765 (= lt!31404 lt!31402)))

(declare-fun lt!31403 () Unit!1989)

(declare-fun e!46500 () Unit!1989)

(assert (=> d!15765 (= lt!31403 e!46500)))

(declare-fun c!10285 () Bool)

(assert (=> d!15765 (= c!10285 lt!31402)))

(assert (=> d!15765 (= lt!31402 (containsKey!134 (toList!714 lt!31365) (_1!1067 lt!31109)))))

(assert (=> d!15765 (= (contains!716 lt!31365 (_1!1067 lt!31109)) lt!31404)))

(declare-fun b!70990 () Bool)

(declare-fun lt!31405 () Unit!1989)

(assert (=> b!70990 (= e!46500 lt!31405)))

(assert (=> b!70990 (= lt!31405 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31365) (_1!1067 lt!31109)))))

(assert (=> b!70990 (isDefined!84 (getValueByKey!130 (toList!714 lt!31365) (_1!1067 lt!31109)))))

(declare-fun b!70991 () Bool)

(declare-fun Unit!1999 () Unit!1989)

(assert (=> b!70991 (= e!46500 Unit!1999)))

(declare-fun b!70992 () Bool)

(assert (=> b!70992 (= e!46501 (isDefined!84 (getValueByKey!130 (toList!714 lt!31365) (_1!1067 lt!31109))))))

(assert (= (and d!15765 c!10285) b!70990))

(assert (= (and d!15765 (not c!10285)) b!70991))

(assert (= (and d!15765 (not res!37889)) b!70992))

(declare-fun m!67831 () Bool)

(assert (=> d!15765 m!67831))

(declare-fun m!67833 () Bool)

(assert (=> b!70990 m!67833))

(assert (=> b!70990 m!67767))

(assert (=> b!70990 m!67767))

(declare-fun m!67835 () Bool)

(assert (=> b!70990 m!67835))

(assert (=> b!70992 m!67767))

(assert (=> b!70992 m!67767))

(assert (=> b!70992 m!67835))

(assert (=> d!15743 d!15765))

(declare-fun b!71001 () Bool)

(declare-fun e!46506 () Option!136)

(assert (=> b!71001 (= e!46506 (Some!135 (_2!1067 (h!2061 lt!31366))))))

(declare-fun d!15767 () Bool)

(declare-fun c!10290 () Bool)

(assert (=> d!15767 (= c!10290 (and ((_ is Cons!1475) lt!31366) (= (_1!1067 (h!2061 lt!31366)) (_1!1067 lt!31109))))))

(assert (=> d!15767 (= (getValueByKey!130 lt!31366 (_1!1067 lt!31109)) e!46506)))

(declare-fun b!71002 () Bool)

(declare-fun e!46507 () Option!136)

(assert (=> b!71002 (= e!46506 e!46507)))

(declare-fun c!10291 () Bool)

(assert (=> b!71002 (= c!10291 (and ((_ is Cons!1475) lt!31366) (not (= (_1!1067 (h!2061 lt!31366)) (_1!1067 lt!31109)))))))

(declare-fun b!71004 () Bool)

(assert (=> b!71004 (= e!46507 None!134)))

(declare-fun b!71003 () Bool)

(assert (=> b!71003 (= e!46507 (getValueByKey!130 (t!5006 lt!31366) (_1!1067 lt!31109)))))

(assert (= (and d!15767 c!10290) b!71001))

(assert (= (and d!15767 (not c!10290)) b!71002))

(assert (= (and b!71002 c!10291) b!71003))

(assert (= (and b!71002 (not c!10291)) b!71004))

(declare-fun m!67837 () Bool)

(assert (=> b!71003 m!67837))

(assert (=> d!15743 d!15767))

(declare-fun d!15769 () Bool)

(assert (=> d!15769 (= (getValueByKey!130 lt!31366 (_1!1067 lt!31109)) (Some!135 (_2!1067 lt!31109)))))

(declare-fun lt!31408 () Unit!1989)

(declare-fun choose!404 (List!1479 (_ BitVec 64) V!2937) Unit!1989)

(assert (=> d!15769 (= lt!31408 (choose!404 lt!31366 (_1!1067 lt!31109) (_2!1067 lt!31109)))))

(declare-fun e!46510 () Bool)

(assert (=> d!15769 e!46510))

(declare-fun res!37894 () Bool)

(assert (=> d!15769 (=> (not res!37894) (not e!46510))))

(declare-fun isStrictlySorted!286 (List!1479) Bool)

(assert (=> d!15769 (= res!37894 (isStrictlySorted!286 lt!31366))))

(assert (=> d!15769 (= (lemmaContainsTupThenGetReturnValue!50 lt!31366 (_1!1067 lt!31109) (_2!1067 lt!31109)) lt!31408)))

(declare-fun b!71009 () Bool)

(declare-fun res!37895 () Bool)

(assert (=> b!71009 (=> (not res!37895) (not e!46510))))

(assert (=> b!71009 (= res!37895 (containsKey!134 lt!31366 (_1!1067 lt!31109)))))

(declare-fun b!71010 () Bool)

(assert (=> b!71010 (= e!46510 (contains!717 lt!31366 (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(assert (= (and d!15769 res!37894) b!71009))

(assert (= (and b!71009 res!37895) b!71010))

(assert (=> d!15769 m!67761))

(declare-fun m!67839 () Bool)

(assert (=> d!15769 m!67839))

(declare-fun m!67841 () Bool)

(assert (=> d!15769 m!67841))

(declare-fun m!67843 () Bool)

(assert (=> b!71009 m!67843))

(declare-fun m!67845 () Bool)

(assert (=> b!71010 m!67845))

(assert (=> d!15743 d!15769))

(declare-fun b!71031 () Bool)

(declare-fun e!46523 () Bool)

(declare-fun lt!31411 () List!1479)

(assert (=> b!71031 (= e!46523 (contains!717 lt!31411 (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun b!71032 () Bool)

(declare-fun e!46521 () List!1479)

(assert (=> b!71032 (= e!46521 (insertStrictlySorted!53 (t!5006 (toList!714 (+!91 lt!31105 lt!31103))) (_1!1067 lt!31109) (_2!1067 lt!31109)))))

(declare-fun d!15771 () Bool)

(assert (=> d!15771 e!46523))

(declare-fun res!37901 () Bool)

(assert (=> d!15771 (=> (not res!37901) (not e!46523))))

(assert (=> d!15771 (= res!37901 (isStrictlySorted!286 lt!31411))))

(declare-fun e!46522 () List!1479)

(assert (=> d!15771 (= lt!31411 e!46522)))

(declare-fun c!10303 () Bool)

(assert (=> d!15771 (= c!10303 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 lt!31103))) (bvslt (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 lt!31103)))) (_1!1067 lt!31109))))))

(assert (=> d!15771 (isStrictlySorted!286 (toList!714 (+!91 lt!31105 lt!31103)))))

(assert (=> d!15771 (= (insertStrictlySorted!53 (toList!714 (+!91 lt!31105 lt!31103)) (_1!1067 lt!31109) (_2!1067 lt!31109)) lt!31411)))

(declare-fun b!71033 () Bool)

(declare-fun c!10302 () Bool)

(assert (=> b!71033 (= c!10302 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 lt!31103))) (bvsgt (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 lt!31103)))) (_1!1067 lt!31109))))))

(declare-fun e!46525 () List!1479)

(declare-fun e!46524 () List!1479)

(assert (=> b!71033 (= e!46525 e!46524)))

(declare-fun b!71034 () Bool)

(assert (=> b!71034 (= e!46522 e!46525)))

(declare-fun c!10301 () Bool)

(assert (=> b!71034 (= c!10301 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 lt!31103))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 lt!31103)))) (_1!1067 lt!31109))))))

(declare-fun b!71035 () Bool)

(declare-fun call!6144 () List!1479)

(assert (=> b!71035 (= e!46525 call!6144)))

(declare-fun b!71036 () Bool)

(declare-fun res!37900 () Bool)

(assert (=> b!71036 (=> (not res!37900) (not e!46523))))

(assert (=> b!71036 (= res!37900 (containsKey!134 lt!31411 (_1!1067 lt!31109)))))

(declare-fun b!71037 () Bool)

(assert (=> b!71037 (= e!46521 (ite c!10301 (t!5006 (toList!714 (+!91 lt!31105 lt!31103))) (ite c!10302 (Cons!1475 (h!2061 (toList!714 (+!91 lt!31105 lt!31103))) (t!5006 (toList!714 (+!91 lt!31105 lt!31103)))) Nil!1476)))))

(declare-fun b!71038 () Bool)

(declare-fun call!6143 () List!1479)

(assert (=> b!71038 (= e!46522 call!6143)))

(declare-fun b!71039 () Bool)

(declare-fun call!6142 () List!1479)

(assert (=> b!71039 (= e!46524 call!6142)))

(declare-fun bm!6139 () Bool)

(assert (=> bm!6139 (= call!6142 call!6144)))

(declare-fun bm!6140 () Bool)

(assert (=> bm!6140 (= call!6144 call!6143)))

(declare-fun bm!6141 () Bool)

(declare-fun $colon$colon!64 (List!1479 tuple2!2112) List!1479)

(assert (=> bm!6141 (= call!6143 ($colon$colon!64 e!46521 (ite c!10303 (h!2061 (toList!714 (+!91 lt!31105 lt!31103))) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109)))))))

(declare-fun c!10300 () Bool)

(assert (=> bm!6141 (= c!10300 c!10303)))

(declare-fun b!71040 () Bool)

(assert (=> b!71040 (= e!46524 call!6142)))

(assert (= (and d!15771 c!10303) b!71038))

(assert (= (and d!15771 (not c!10303)) b!71034))

(assert (= (and b!71034 c!10301) b!71035))

(assert (= (and b!71034 (not c!10301)) b!71033))

(assert (= (and b!71033 c!10302) b!71039))

(assert (= (and b!71033 (not c!10302)) b!71040))

(assert (= (or b!71039 b!71040) bm!6139))

(assert (= (or b!71035 bm!6139) bm!6140))

(assert (= (or b!71038 bm!6140) bm!6141))

(assert (= (and bm!6141 c!10300) b!71032))

(assert (= (and bm!6141 (not c!10300)) b!71037))

(assert (= (and d!15771 res!37901) b!71036))

(assert (= (and b!71036 res!37900) b!71031))

(declare-fun m!67847 () Bool)

(assert (=> b!71031 m!67847))

(declare-fun m!67849 () Bool)

(assert (=> b!71032 m!67849))

(declare-fun m!67851 () Bool)

(assert (=> b!71036 m!67851))

(declare-fun m!67853 () Bool)

(assert (=> bm!6141 m!67853))

(declare-fun m!67855 () Bool)

(assert (=> d!15771 m!67855))

(declare-fun m!67857 () Bool)

(assert (=> d!15771 m!67857))

(assert (=> d!15743 d!15771))

(declare-fun d!15773 () Bool)

(declare-fun e!46528 () Bool)

(assert (=> d!15773 e!46528))

(declare-fun c!10306 () Bool)

(assert (=> d!15773 (= c!10306 (and (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!15773 true))

(declare-fun _$29!87 () Unit!1989)

(assert (=> d!15773 (= (choose!403 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))) _$29!87)))

(declare-fun b!71045 () Bool)

(assert (=> b!71045 (= e!46528 (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!71046 () Bool)

(assert (=> b!71046 (= e!46528 (ite (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!15773 c!10306) b!71045))

(assert (= (and d!15773 (not c!10306)) b!71046))

(assert (=> b!71045 m!67435))

(assert (=> b!71045 m!67469))

(assert (=> d!15757 d!15773))

(assert (=> d!15757 d!15745))

(declare-fun bm!6142 () Bool)

(declare-fun call!6151 () Bool)

(declare-fun lt!31430 () ListLongMap!1397)

(assert (=> bm!6142 (= call!6151 (contains!716 lt!31430 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71047 () Bool)

(declare-fun e!46529 () Bool)

(assert (=> b!71047 (= e!46529 (= (apply!74 lt!31430 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))))

(declare-fun b!71048 () Bool)

(declare-fun e!46535 () ListLongMap!1397)

(declare-fun call!6147 () ListLongMap!1397)

(assert (=> b!71048 (= e!46535 call!6147)))

(declare-fun call!6145 () ListLongMap!1397)

(declare-fun bm!6143 () Bool)

(assert (=> bm!6143 (= call!6145 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) (mask!6147 newMap!16) (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71049 () Bool)

(declare-fun e!46539 () Unit!1989)

(declare-fun Unit!2000 () Unit!1989)

(assert (=> b!71049 (= e!46539 Unit!2000)))

(declare-fun b!71050 () Bool)

(declare-fun e!46540 () Bool)

(declare-fun e!46534 () Bool)

(assert (=> b!71050 (= e!46540 e!46534)))

(declare-fun res!37908 () Bool)

(assert (=> b!71050 (=> (not res!37908) (not e!46534))))

(assert (=> b!71050 (= res!37908 (contains!716 lt!31430 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71050 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71051 () Bool)

(declare-fun c!10308 () Bool)

(assert (=> b!71051 (= c!10308 (and (not (= (bvand (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46530 () ListLongMap!1397)

(assert (=> b!71051 (= e!46530 e!46535)))

(declare-fun c!10311 () Bool)

(declare-fun call!6146 () ListLongMap!1397)

(declare-fun call!6149 () ListLongMap!1397)

(declare-fun bm!6144 () Bool)

(declare-fun call!6150 () ListLongMap!1397)

(declare-fun c!10309 () Bool)

(assert (=> bm!6144 (= call!6149 (+!91 (ite c!10311 call!6145 (ite c!10309 call!6150 call!6146)) (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(declare-fun bm!6145 () Bool)

(declare-fun call!6148 () Bool)

(assert (=> bm!6145 (= call!6148 (contains!716 lt!31430 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71052 () Bool)

(declare-fun e!46533 () Bool)

(assert (=> b!71052 (= e!46533 (not call!6148))))

(declare-fun b!71053 () Bool)

(assert (=> b!71053 (= e!46534 (= (apply!74 lt!31430 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71053 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))))))))

(assert (=> b!71053 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71054 () Bool)

(declare-fun e!46541 () Bool)

(assert (=> b!71054 (= e!46541 (not call!6151))))

(declare-fun b!71055 () Bool)

(declare-fun e!46536 () ListLongMap!1397)

(assert (=> b!71055 (= e!46536 e!46530)))

(assert (=> b!71055 (= c!10309 (and (not (= (bvand (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71056 () Bool)

(assert (=> b!71056 (= e!46535 call!6146)))

(declare-fun bm!6146 () Bool)

(assert (=> bm!6146 (= call!6147 call!6149)))

(declare-fun b!71057 () Bool)

(declare-fun e!46531 () Bool)

(assert (=> b!71057 (= e!46531 e!46541)))

(declare-fun c!10312 () Bool)

(assert (=> b!71057 (= c!10312 (not (= (bvand (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6147 () Bool)

(assert (=> bm!6147 (= call!6150 call!6145)))

(declare-fun b!71058 () Bool)

(assert (=> b!71058 (= e!46530 call!6147)))

(declare-fun b!71059 () Bool)

(declare-fun res!37904 () Bool)

(assert (=> b!71059 (=> (not res!37904) (not e!46531))))

(assert (=> b!71059 (= res!37904 e!46540)))

(declare-fun res!37903 () Bool)

(assert (=> b!71059 (=> res!37903 e!46540)))

(declare-fun e!46538 () Bool)

(assert (=> b!71059 (= res!37903 (not e!46538))))

(declare-fun res!37905 () Bool)

(assert (=> b!71059 (=> (not res!37905) (not e!46538))))

(assert (=> b!71059 (= res!37905 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71060 () Bool)

(assert (=> b!71060 (= e!46538 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71061 () Bool)

(declare-fun res!37909 () Bool)

(assert (=> b!71061 (=> (not res!37909) (not e!46531))))

(assert (=> b!71061 (= res!37909 e!46533)))

(declare-fun c!10310 () Bool)

(assert (=> b!71061 (= c!10310 (not (= (bvand (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!71062 () Bool)

(declare-fun lt!31428 () Unit!1989)

(assert (=> b!71062 (= e!46539 lt!31428)))

(declare-fun lt!31412 () ListLongMap!1397)

(assert (=> b!71062 (= lt!31412 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) (mask!6147 newMap!16) (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31426 () (_ BitVec 64))

(assert (=> b!71062 (= lt!31426 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31413 () (_ BitVec 64))

(assert (=> b!71062 (= lt!31413 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31414 () Unit!1989)

(assert (=> b!71062 (= lt!31414 (addStillContains!50 lt!31412 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) lt!31413))))

(assert (=> b!71062 (contains!716 (+!91 lt!31412 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) lt!31413)))

(declare-fun lt!31425 () Unit!1989)

(assert (=> b!71062 (= lt!31425 lt!31414)))

(declare-fun lt!31418 () ListLongMap!1397)

(assert (=> b!71062 (= lt!31418 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) (mask!6147 newMap!16) (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31423 () (_ BitVec 64))

(assert (=> b!71062 (= lt!31423 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31424 () (_ BitVec 64))

(assert (=> b!71062 (= lt!31424 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31421 () Unit!1989)

(assert (=> b!71062 (= lt!31421 (addApplyDifferent!50 lt!31418 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) lt!31424))))

(assert (=> b!71062 (= (apply!74 (+!91 lt!31418 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) lt!31424) (apply!74 lt!31418 lt!31424))))

(declare-fun lt!31415 () Unit!1989)

(assert (=> b!71062 (= lt!31415 lt!31421)))

(declare-fun lt!31427 () ListLongMap!1397)

(assert (=> b!71062 (= lt!31427 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) (mask!6147 newMap!16) (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31429 () (_ BitVec 64))

(assert (=> b!71062 (= lt!31429 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31433 () (_ BitVec 64))

(assert (=> b!71062 (= lt!31433 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31422 () Unit!1989)

(assert (=> b!71062 (= lt!31422 (addApplyDifferent!50 lt!31427 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) lt!31433))))

(assert (=> b!71062 (= (apply!74 (+!91 lt!31427 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) lt!31433) (apply!74 lt!31427 lt!31433))))

(declare-fun lt!31432 () Unit!1989)

(assert (=> b!71062 (= lt!31432 lt!31422)))

(declare-fun lt!31431 () ListLongMap!1397)

(assert (=> b!71062 (= lt!31431 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) (mask!6147 newMap!16) (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31420 () (_ BitVec 64))

(assert (=> b!71062 (= lt!31420 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31416 () (_ BitVec 64))

(assert (=> b!71062 (= lt!31416 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71062 (= lt!31428 (addApplyDifferent!50 lt!31431 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) lt!31416))))

(assert (=> b!71062 (= (apply!74 (+!91 lt!31431 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) lt!31416) (apply!74 lt!31431 lt!31416))))

(declare-fun b!71063 () Bool)

(declare-fun e!46537 () Bool)

(assert (=> b!71063 (= e!46541 e!46537)))

(declare-fun res!37902 () Bool)

(assert (=> b!71063 (= res!37902 call!6151)))

(assert (=> b!71063 (=> (not res!37902) (not e!46537))))

(declare-fun b!71064 () Bool)

(assert (=> b!71064 (= e!46533 e!46529)))

(declare-fun res!37910 () Bool)

(assert (=> b!71064 (= res!37910 call!6148)))

(assert (=> b!71064 (=> (not res!37910) (not e!46529))))

(declare-fun d!15775 () Bool)

(assert (=> d!15775 e!46531))

(declare-fun res!37906 () Bool)

(assert (=> d!15775 (=> (not res!37906) (not e!46531))))

(assert (=> d!15775 (= res!37906 (or (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))))

(declare-fun lt!31419 () ListLongMap!1397)

(assert (=> d!15775 (= lt!31430 lt!31419)))

(declare-fun lt!31417 () Unit!1989)

(assert (=> d!15775 (= lt!31417 e!46539)))

(declare-fun c!10307 () Bool)

(declare-fun e!46532 () Bool)

(assert (=> d!15775 (= c!10307 e!46532)))

(declare-fun res!37907 () Bool)

(assert (=> d!15775 (=> (not res!37907) (not e!46532))))

(assert (=> d!15775 (= res!37907 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!15775 (= lt!31419 e!46536)))

(assert (=> d!15775 (= c!10311 (and (not (= (bvand (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15775 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15775 (= (getCurrentListMap!407 (_keys!3838 newMap!16) (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) (mask!6147 newMap!16) (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31430)))

(declare-fun b!71065 () Bool)

(assert (=> b!71065 (= e!46537 (= (apply!74 lt!31430 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))

(declare-fun b!71066 () Bool)

(assert (=> b!71066 (= e!46532 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71067 () Bool)

(assert (=> b!71067 (= e!46536 (+!91 call!6149 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))

(declare-fun bm!6148 () Bool)

(assert (=> bm!6148 (= call!6146 call!6150)))

(assert (= (and d!15775 c!10311) b!71067))

(assert (= (and d!15775 (not c!10311)) b!71055))

(assert (= (and b!71055 c!10309) b!71058))

(assert (= (and b!71055 (not c!10309)) b!71051))

(assert (= (and b!71051 c!10308) b!71048))

(assert (= (and b!71051 (not c!10308)) b!71056))

(assert (= (or b!71048 b!71056) bm!6148))

(assert (= (or b!71058 bm!6148) bm!6147))

(assert (= (or b!71058 b!71048) bm!6146))

(assert (= (or b!71067 bm!6147) bm!6143))

(assert (= (or b!71067 bm!6146) bm!6144))

(assert (= (and d!15775 res!37907) b!71066))

(assert (= (and d!15775 c!10307) b!71062))

(assert (= (and d!15775 (not c!10307)) b!71049))

(assert (= (and d!15775 res!37906) b!71059))

(assert (= (and b!71059 res!37905) b!71060))

(assert (= (and b!71059 (not res!37903)) b!71050))

(assert (= (and b!71050 res!37908) b!71053))

(assert (= (and b!71059 res!37904) b!71061))

(assert (= (and b!71061 c!10310) b!71064))

(assert (= (and b!71061 (not c!10310)) b!71052))

(assert (= (and b!71064 res!37910) b!71047))

(assert (= (or b!71064 b!71052) bm!6145))

(assert (= (and b!71061 res!37909) b!71057))

(assert (= (and b!71057 c!10312) b!71063))

(assert (= (and b!71057 (not c!10312)) b!71054))

(assert (= (and b!71063 res!37902) b!71065))

(assert (= (or b!71063 b!71054) bm!6142))

(declare-fun b_lambda!3181 () Bool)

(assert (=> (not b_lambda!3181) (not b!71053)))

(declare-fun t!5019 () Bool)

(declare-fun tb!1513 () Bool)

(assert (=> (and b!70564 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16)) t!5019) tb!1513))

(declare-fun result!2661 () Bool)

(assert (=> tb!1513 (= result!2661 tp_is_empty!2467)))

(assert (=> b!71053 t!5019))

(declare-fun b_and!4369 () Bool)

(assert (= b_and!4365 (and (=> t!5019 result!2661) b_and!4369)))

(declare-fun t!5021 () Bool)

(declare-fun tb!1515 () Bool)

(assert (=> (and b!70563 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 newMap!16)) t!5021) tb!1515))

(declare-fun result!2663 () Bool)

(assert (= result!2663 result!2661))

(assert (=> b!71053 t!5021))

(declare-fun b_and!4371 () Bool)

(assert (= b_and!4367 (and (=> t!5021 result!2663) b_and!4371)))

(declare-fun m!67859 () Bool)

(assert (=> b!71067 m!67859))

(declare-fun m!67861 () Bool)

(assert (=> b!71066 m!67861))

(assert (=> b!71066 m!67861))

(declare-fun m!67863 () Bool)

(assert (=> b!71066 m!67863))

(declare-fun m!67865 () Bool)

(assert (=> b!71053 m!67865))

(assert (=> b!71053 m!67861))

(declare-fun m!67867 () Bool)

(assert (=> b!71053 m!67867))

(assert (=> b!71053 m!67865))

(declare-fun m!67869 () Bool)

(assert (=> b!71053 m!67869))

(assert (=> b!71053 m!67861))

(declare-fun m!67871 () Bool)

(assert (=> b!71053 m!67871))

(assert (=> b!71053 m!67867))

(assert (=> b!71060 m!67861))

(assert (=> b!71060 m!67861))

(assert (=> b!71060 m!67863))

(declare-fun m!67873 () Bool)

(assert (=> d!15775 m!67873))

(assert (=> b!71050 m!67861))

(assert (=> b!71050 m!67861))

(declare-fun m!67875 () Bool)

(assert (=> b!71050 m!67875))

(declare-fun m!67877 () Bool)

(assert (=> b!71047 m!67877))

(declare-fun m!67879 () Bool)

(assert (=> bm!6145 m!67879))

(declare-fun m!67881 () Bool)

(assert (=> bm!6144 m!67881))

(declare-fun m!67883 () Bool)

(assert (=> bm!6143 m!67883))

(declare-fun m!67885 () Bool)

(assert (=> bm!6142 m!67885))

(declare-fun m!67887 () Bool)

(assert (=> b!71065 m!67887))

(declare-fun m!67889 () Bool)

(assert (=> b!71062 m!67889))

(declare-fun m!67891 () Bool)

(assert (=> b!71062 m!67891))

(declare-fun m!67893 () Bool)

(assert (=> b!71062 m!67893))

(assert (=> b!71062 m!67883))

(assert (=> b!71062 m!67861))

(declare-fun m!67895 () Bool)

(assert (=> b!71062 m!67895))

(declare-fun m!67897 () Bool)

(assert (=> b!71062 m!67897))

(assert (=> b!71062 m!67895))

(declare-fun m!67899 () Bool)

(assert (=> b!71062 m!67899))

(declare-fun m!67901 () Bool)

(assert (=> b!71062 m!67901))

(assert (=> b!71062 m!67897))

(declare-fun m!67903 () Bool)

(assert (=> b!71062 m!67903))

(declare-fun m!67905 () Bool)

(assert (=> b!71062 m!67905))

(declare-fun m!67907 () Bool)

(assert (=> b!71062 m!67907))

(declare-fun m!67909 () Bool)

(assert (=> b!71062 m!67909))

(declare-fun m!67911 () Bool)

(assert (=> b!71062 m!67911))

(declare-fun m!67913 () Bool)

(assert (=> b!71062 m!67913))

(assert (=> b!71062 m!67905))

(declare-fun m!67915 () Bool)

(assert (=> b!71062 m!67915))

(assert (=> b!71062 m!67913))

(declare-fun m!67917 () Bool)

(assert (=> b!71062 m!67917))

(assert (=> bm!6126 d!15775))

(declare-fun d!15777 () Bool)

(declare-fun isEmpty!318 (Option!136) Bool)

(assert (=> d!15777 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun bs!3042 () Bool)

(assert (= bs!3042 d!15777))

(assert (=> bs!3042 m!67667))

(declare-fun m!67919 () Bool)

(assert (=> bs!3042 m!67919))

(assert (=> b!70769 d!15777))

(declare-fun b!71068 () Bool)

(declare-fun e!46542 () Option!136)

(assert (=> b!71068 (= e!46542 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31108)))))))

(declare-fun c!10313 () Bool)

(declare-fun d!15779 () Bool)

(assert (=> d!15779 (= c!10313 (and ((_ is Cons!1475) (toList!714 lt!31108)) (= (_1!1067 (h!2061 (toList!714 lt!31108))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15779 (= (getValueByKey!130 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) e!46542)))

(declare-fun b!71069 () Bool)

(declare-fun e!46543 () Option!136)

(assert (=> b!71069 (= e!46542 e!46543)))

(declare-fun c!10314 () Bool)

(assert (=> b!71069 (= c!10314 (and ((_ is Cons!1475) (toList!714 lt!31108)) (not (= (_1!1067 (h!2061 (toList!714 lt!31108))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun b!71071 () Bool)

(assert (=> b!71071 (= e!46543 None!134)))

(declare-fun b!71070 () Bool)

(assert (=> b!71070 (= e!46543 (getValueByKey!130 (t!5006 (toList!714 lt!31108)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15779 c!10313) b!71068))

(assert (= (and d!15779 (not c!10313)) b!71069))

(assert (= (and b!71069 c!10314) b!71070))

(assert (= (and b!71069 (not c!10314)) b!71071))

(assert (=> b!71070 m!67435))

(declare-fun m!67921 () Bool)

(assert (=> b!71070 m!67921))

(assert (=> b!70769 d!15779))

(declare-fun d!15781 () Bool)

(declare-fun res!37911 () Bool)

(declare-fun e!46544 () Bool)

(assert (=> d!15781 (=> res!37911 e!46544)))

(assert (=> d!15781 (= res!37911 (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15781 (= (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!46544)))

(declare-fun b!71072 () Bool)

(declare-fun e!46545 () Bool)

(assert (=> b!71072 (= e!46544 e!46545)))

(declare-fun res!37912 () Bool)

(assert (=> b!71072 (=> (not res!37912) (not e!46545))))

(assert (=> b!71072 (= res!37912 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71073 () Bool)

(assert (=> b!71073 (= e!46545 (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!15781 (not res!37911)) b!71072))

(assert (= (and b!71072 res!37912) b!71073))

(declare-fun m!67923 () Bool)

(assert (=> d!15781 m!67923))

(assert (=> b!71073 m!67435))

(declare-fun m!67925 () Bool)

(assert (=> b!71073 m!67925))

(assert (=> b!70949 d!15781))

(declare-fun d!15783 () Bool)

(declare-fun e!46546 () Bool)

(assert (=> d!15783 e!46546))

(declare-fun res!37913 () Bool)

(assert (=> d!15783 (=> (not res!37913) (not e!46546))))

(declare-fun lt!31435 () ListLongMap!1397)

(assert (=> d!15783 (= res!37913 (contains!716 lt!31435 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun lt!31436 () List!1479)

(assert (=> d!15783 (= lt!31435 (ListLongMap!1398 lt!31436))))

(declare-fun lt!31434 () Unit!1989)

(declare-fun lt!31437 () Unit!1989)

(assert (=> d!15783 (= lt!31434 lt!31437)))

(assert (=> d!15783 (= (getValueByKey!130 lt!31436 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!15783 (= lt!31437 (lemmaContainsTupThenGetReturnValue!50 lt!31436 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!15783 (= lt!31436 (insertStrictlySorted!53 (toList!714 lt!31105) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!15783 (= (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) lt!31435)))

(declare-fun b!71074 () Bool)

(declare-fun res!37914 () Bool)

(assert (=> b!71074 (=> (not res!37914) (not e!46546))))

(assert (=> b!71074 (= res!37914 (= (getValueByKey!130 (toList!714 lt!31435) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!71075 () Bool)

(assert (=> b!71075 (= e!46546 (contains!717 (toList!714 lt!31435) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(assert (= (and d!15783 res!37913) b!71074))

(assert (= (and b!71074 res!37914) b!71075))

(declare-fun m!67927 () Bool)

(assert (=> d!15783 m!67927))

(declare-fun m!67929 () Bool)

(assert (=> d!15783 m!67929))

(declare-fun m!67931 () Bool)

(assert (=> d!15783 m!67931))

(declare-fun m!67933 () Bool)

(assert (=> d!15783 m!67933))

(declare-fun m!67935 () Bool)

(assert (=> b!71074 m!67935))

(declare-fun m!67937 () Bool)

(assert (=> b!71075 m!67937))

(assert (=> d!15741 d!15783))

(declare-fun d!15785 () Bool)

(declare-fun e!46547 () Bool)

(assert (=> d!15785 e!46547))

(declare-fun res!37915 () Bool)

(assert (=> d!15785 (=> (not res!37915) (not e!46547))))

(declare-fun lt!31439 () ListLongMap!1397)

(assert (=> d!15785 (= res!37915 (contains!716 lt!31439 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!31440 () List!1479)

(assert (=> d!15785 (= lt!31439 (ListLongMap!1398 lt!31440))))

(declare-fun lt!31438 () Unit!1989)

(declare-fun lt!31441 () Unit!1989)

(assert (=> d!15785 (= lt!31438 lt!31441)))

(assert (=> d!15785 (= (getValueByKey!130 lt!31440 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15785 (= lt!31441 (lemmaContainsTupThenGetReturnValue!50 lt!31440 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15785 (= lt!31440 (insertStrictlySorted!53 (toList!714 lt!31105) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15785 (= (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31439)))

(declare-fun b!71076 () Bool)

(declare-fun res!37916 () Bool)

(assert (=> b!71076 (=> (not res!37916) (not e!46547))))

(assert (=> b!71076 (= res!37916 (= (getValueByKey!130 (toList!714 lt!31439) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71077 () Bool)

(assert (=> b!71077 (= e!46547 (contains!717 (toList!714 lt!31439) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!15785 res!37915) b!71076))

(assert (= (and b!71076 res!37916) b!71077))

(declare-fun m!67939 () Bool)

(assert (=> d!15785 m!67939))

(declare-fun m!67941 () Bool)

(assert (=> d!15785 m!67941))

(declare-fun m!67943 () Bool)

(assert (=> d!15785 m!67943))

(declare-fun m!67945 () Bool)

(assert (=> d!15785 m!67945))

(declare-fun m!67947 () Bool)

(assert (=> b!71076 m!67947))

(declare-fun m!67949 () Bool)

(assert (=> b!71077 m!67949))

(assert (=> d!15741 d!15785))

(declare-fun d!15787 () Bool)

(declare-fun e!46548 () Bool)

(assert (=> d!15787 e!46548))

(declare-fun res!37917 () Bool)

(assert (=> d!15787 (=> (not res!37917) (not e!46548))))

(declare-fun lt!31443 () ListLongMap!1397)

(assert (=> d!15787 (= res!37917 (contains!716 lt!31443 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!31444 () List!1479)

(assert (=> d!15787 (= lt!31443 (ListLongMap!1398 lt!31444))))

(declare-fun lt!31442 () Unit!1989)

(declare-fun lt!31445 () Unit!1989)

(assert (=> d!15787 (= lt!31442 lt!31445)))

(assert (=> d!15787 (= (getValueByKey!130 lt!31444 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15787 (= lt!31445 (lemmaContainsTupThenGetReturnValue!50 lt!31444 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15787 (= lt!31444 (insertStrictlySorted!53 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15787 (= (+!91 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31443)))

(declare-fun b!71078 () Bool)

(declare-fun res!37918 () Bool)

(assert (=> b!71078 (=> (not res!37918) (not e!46548))))

(assert (=> b!71078 (= res!37918 (= (getValueByKey!130 (toList!714 lt!31443) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71079 () Bool)

(assert (=> b!71079 (= e!46548 (contains!717 (toList!714 lt!31443) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!15787 res!37917) b!71078))

(assert (= (and b!71078 res!37918) b!71079))

(declare-fun m!67951 () Bool)

(assert (=> d!15787 m!67951))

(declare-fun m!67953 () Bool)

(assert (=> d!15787 m!67953))

(declare-fun m!67955 () Bool)

(assert (=> d!15787 m!67955))

(declare-fun m!67957 () Bool)

(assert (=> d!15787 m!67957))

(declare-fun m!67959 () Bool)

(assert (=> b!71078 m!67959))

(declare-fun m!67961 () Bool)

(assert (=> b!71079 m!67961))

(assert (=> d!15741 d!15787))

(declare-fun d!15789 () Bool)

(declare-fun e!46549 () Bool)

(assert (=> d!15789 e!46549))

(declare-fun res!37919 () Bool)

(assert (=> d!15789 (=> (not res!37919) (not e!46549))))

(declare-fun lt!31447 () ListLongMap!1397)

(assert (=> d!15789 (= res!37919 (contains!716 lt!31447 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun lt!31448 () List!1479)

(assert (=> d!15789 (= lt!31447 (ListLongMap!1398 lt!31448))))

(declare-fun lt!31446 () Unit!1989)

(declare-fun lt!31449 () Unit!1989)

(assert (=> d!15789 (= lt!31446 lt!31449)))

(assert (=> d!15789 (= (getValueByKey!130 lt!31448 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!15789 (= lt!31449 (lemmaContainsTupThenGetReturnValue!50 lt!31448 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!15789 (= lt!31448 (insertStrictlySorted!53 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!15789 (= (+!91 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) lt!31447)))

(declare-fun b!71080 () Bool)

(declare-fun res!37920 () Bool)

(assert (=> b!71080 (=> (not res!37920) (not e!46549))))

(assert (=> b!71080 (= res!37920 (= (getValueByKey!130 (toList!714 lt!31447) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!71081 () Bool)

(assert (=> b!71081 (= e!46549 (contains!717 (toList!714 lt!31447) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(assert (= (and d!15789 res!37919) b!71080))

(assert (= (and b!71080 res!37920) b!71081))

(declare-fun m!67963 () Bool)

(assert (=> d!15789 m!67963))

(declare-fun m!67965 () Bool)

(assert (=> d!15789 m!67965))

(declare-fun m!67967 () Bool)

(assert (=> d!15789 m!67967))

(declare-fun m!67969 () Bool)

(assert (=> d!15789 m!67969))

(declare-fun m!67971 () Bool)

(assert (=> b!71080 m!67971))

(declare-fun m!67973 () Bool)

(assert (=> b!71081 m!67973))

(assert (=> d!15741 d!15789))

(declare-fun d!15791 () Bool)

(assert (=> d!15791 (= (+!91 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (+!91 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(assert (=> d!15791 true))

(declare-fun _$28!118 () Unit!1989)

(assert (=> d!15791 (= (choose!402 lt!31105 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) _$28!118)))

(declare-fun bs!3043 () Bool)

(assert (= bs!3043 d!15791))

(assert (=> bs!3043 m!67755))

(assert (=> bs!3043 m!67755))

(assert (=> bs!3043 m!67757))

(assert (=> bs!3043 m!67751))

(assert (=> bs!3043 m!67751))

(assert (=> bs!3043 m!67753))

(assert (=> d!15741 d!15791))

(declare-fun b!71082 () Bool)

(declare-fun e!46552 () ListLongMap!1397)

(assert (=> b!71082 (= e!46552 (ListLongMap!1398 Nil!1476))))

(declare-fun b!71083 () Bool)

(declare-fun e!46551 () Bool)

(declare-fun lt!31452 () ListLongMap!1397)

(assert (=> b!71083 (= e!46551 (isEmpty!317 lt!31452))))

(declare-fun b!71084 () Bool)

(declare-fun lt!31456 () Unit!1989)

(declare-fun lt!31455 () Unit!1989)

(assert (=> b!71084 (= lt!31456 lt!31455)))

(declare-fun lt!31450 () V!2937)

(declare-fun lt!31451 () (_ BitVec 64))

(declare-fun lt!31454 () ListLongMap!1397)

(declare-fun lt!31453 () (_ BitVec 64))

(assert (=> b!71084 (not (contains!716 (+!91 lt!31454 (tuple2!2113 lt!31451 lt!31450)) lt!31453))))

(assert (=> b!71084 (= lt!31455 (addStillNotContains!24 lt!31454 lt!31451 lt!31450 lt!31453))))

(assert (=> b!71084 (= lt!31453 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71084 (= lt!31450 (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71084 (= lt!31451 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!6152 () ListLongMap!1397)

(assert (=> b!71084 (= lt!31454 call!6152)))

(declare-fun e!46553 () ListLongMap!1397)

(assert (=> b!71084 (= e!46553 (+!91 call!6152 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71085 () Bool)

(declare-fun e!46555 () Bool)

(declare-fun e!46556 () Bool)

(assert (=> b!71085 (= e!46555 e!46556)))

(declare-fun c!10316 () Bool)

(declare-fun e!46554 () Bool)

(assert (=> b!71085 (= c!10316 e!46554)))

(declare-fun res!37921 () Bool)

(assert (=> b!71085 (=> (not res!37921) (not e!46554))))

(assert (=> b!71085 (= res!37921 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71086 () Bool)

(assert (=> b!71086 (= e!46553 call!6152)))

(declare-fun b!71088 () Bool)

(declare-fun e!46550 () Bool)

(assert (=> b!71088 (= e!46556 e!46550)))

(assert (=> b!71088 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun res!37924 () Bool)

(assert (=> b!71088 (= res!37924 (contains!716 lt!31452 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!71088 (=> (not res!37924) (not e!46550))))

(declare-fun bm!6149 () Bool)

(assert (=> bm!6149 (= call!6152 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!71089 () Bool)

(assert (=> b!71089 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> b!71089 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2079 (_values!2174 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> b!71089 (= e!46550 (= (apply!74 lt!31452 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71090 () Bool)

(assert (=> b!71090 (= e!46552 e!46553)))

(declare-fun c!10315 () Bool)

(assert (=> b!71090 (= c!10315 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71091 () Bool)

(assert (=> b!71091 (= e!46551 (= lt!31452 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71092 () Bool)

(assert (=> b!71092 (= e!46556 e!46551)))

(declare-fun c!10317 () Bool)

(assert (=> b!71092 (= c!10317 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71093 () Bool)

(assert (=> b!71093 (= e!46554 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!71093 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!15793 () Bool)

(assert (=> d!15793 e!46555))

(declare-fun res!37923 () Bool)

(assert (=> d!15793 (=> (not res!37923) (not e!46555))))

(assert (=> d!15793 (= res!37923 (not (contains!716 lt!31452 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15793 (= lt!31452 e!46552)))

(declare-fun c!10318 () Bool)

(assert (=> d!15793 (= c!10318 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!15793 (validMask!0 (mask!6147 (v!2507 (underlying!253 thiss!992))))))

(assert (=> d!15793 (= (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))) lt!31452)))

(declare-fun b!71087 () Bool)

(declare-fun res!37922 () Bool)

(assert (=> b!71087 (=> (not res!37922) (not e!46555))))

(assert (=> b!71087 (= res!37922 (not (contains!716 lt!31452 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15793 c!10318) b!71082))

(assert (= (and d!15793 (not c!10318)) b!71090))

(assert (= (and b!71090 c!10315) b!71084))

(assert (= (and b!71090 (not c!10315)) b!71086))

(assert (= (or b!71084 b!71086) bm!6149))

(assert (= (and d!15793 res!37923) b!71087))

(assert (= (and b!71087 res!37922) b!71085))

(assert (= (and b!71085 res!37921) b!71093))

(assert (= (and b!71085 c!10316) b!71088))

(assert (= (and b!71085 (not c!10316)) b!71092))

(assert (= (and b!71088 res!37924) b!71089))

(assert (= (and b!71092 c!10317) b!71091))

(assert (= (and b!71092 (not c!10317)) b!71083))

(declare-fun b_lambda!3183 () Bool)

(assert (=> (not b_lambda!3183) (not b!71084)))

(assert (=> b!71084 t!5003))

(declare-fun b_and!4373 () Bool)

(assert (= b_and!4369 (and (=> t!5003 result!2641) b_and!4373)))

(assert (=> b!71084 t!5005))

(declare-fun b_and!4375 () Bool)

(assert (= b_and!4371 (and (=> t!5005 result!2645) b_and!4375)))

(declare-fun b_lambda!3185 () Bool)

(assert (=> (not b_lambda!3185) (not b!71089)))

(assert (=> b!71089 t!5003))

(declare-fun b_and!4377 () Bool)

(assert (= b_and!4373 (and (=> t!5003 result!2641) b_and!4377)))

(assert (=> b!71089 t!5005))

(declare-fun b_and!4379 () Bool)

(assert (= b_and!4375 (and (=> t!5005 result!2645) b_and!4379)))

(declare-fun m!67975 () Bool)

(assert (=> d!15793 m!67975))

(assert (=> d!15793 m!67477))

(assert (=> b!71088 m!67923))

(assert (=> b!71088 m!67923))

(declare-fun m!67977 () Bool)

(assert (=> b!71088 m!67977))

(declare-fun m!67979 () Bool)

(assert (=> bm!6149 m!67979))

(assert (=> b!71089 m!67923))

(assert (=> b!71089 m!67923))

(declare-fun m!67981 () Bool)

(assert (=> b!71089 m!67981))

(declare-fun m!67983 () Bool)

(assert (=> b!71089 m!67983))

(assert (=> b!71089 m!67459))

(assert (=> b!71089 m!67983))

(assert (=> b!71089 m!67459))

(declare-fun m!67985 () Bool)

(assert (=> b!71089 m!67985))

(declare-fun m!67987 () Bool)

(assert (=> b!71083 m!67987))

(assert (=> b!71091 m!67979))

(assert (=> b!71090 m!67923))

(assert (=> b!71090 m!67923))

(declare-fun m!67989 () Bool)

(assert (=> b!71090 m!67989))

(declare-fun m!67991 () Bool)

(assert (=> b!71087 m!67991))

(assert (=> b!71093 m!67923))

(assert (=> b!71093 m!67923))

(assert (=> b!71093 m!67989))

(assert (=> b!71084 m!67923))

(declare-fun m!67993 () Bool)

(assert (=> b!71084 m!67993))

(declare-fun m!67995 () Bool)

(assert (=> b!71084 m!67995))

(assert (=> b!71084 m!67993))

(declare-fun m!67997 () Bool)

(assert (=> b!71084 m!67997))

(declare-fun m!67999 () Bool)

(assert (=> b!71084 m!67999))

(assert (=> b!71084 m!67983))

(assert (=> b!71084 m!67459))

(assert (=> b!71084 m!67983))

(assert (=> b!71084 m!67459))

(assert (=> b!71084 m!67985))

(assert (=> b!70941 d!15793))

(declare-fun d!15795 () Bool)

(assert (=> d!15795 (= (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70943 d!15795))

(declare-fun d!15797 () Bool)

(assert (=> d!15797 (= (inRange!0 (ite c!10259 (ite c!10264 (index!3083 lt!31324) (ite c!10256 (index!3082 lt!31333) (index!3085 lt!31333))) (ite c!10254 (index!3083 lt!31327) (ite c!10260 (index!3082 lt!31336) (index!3085 lt!31336)))) (mask!6147 newMap!16)) (and (bvsge (ite c!10259 (ite c!10264 (index!3083 lt!31324) (ite c!10256 (index!3082 lt!31333) (index!3085 lt!31333))) (ite c!10254 (index!3083 lt!31327) (ite c!10260 (index!3082 lt!31336) (index!3085 lt!31336)))) #b00000000000000000000000000000000) (bvslt (ite c!10259 (ite c!10264 (index!3083 lt!31324) (ite c!10256 (index!3082 lt!31333) (index!3085 lt!31333))) (ite c!10254 (index!3083 lt!31327) (ite c!10260 (index!3082 lt!31336) (index!3085 lt!31336)))) (bvadd (mask!6147 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6108 d!15797))

(declare-fun d!15799 () Bool)

(declare-fun get!1139 (Option!136) V!2937)

(assert (=> d!15799 (= (apply!74 lt!31388 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1139 (getValueByKey!130 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3044 () Bool)

(assert (= bs!3044 d!15799))

(assert (=> bs!3044 m!67611))

(declare-fun m!68001 () Bool)

(assert (=> bs!3044 m!68001))

(assert (=> bs!3044 m!68001))

(declare-fun m!68003 () Bool)

(assert (=> bs!3044 m!68003))

(assert (=> b!70939 d!15799))

(declare-fun d!15801 () Bool)

(declare-fun c!10319 () Bool)

(assert (=> d!15801 (= c!10319 ((_ is ValueCellFull!890) (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!46557 () V!2937)

(assert (=> d!15801 (= (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46557)))

(declare-fun b!71094 () Bool)

(assert (=> b!71094 (= e!46557 (get!1137 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71095 () Bool)

(assert (=> b!71095 (= e!46557 (get!1138 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15801 c!10319) b!71094))

(assert (= (and d!15801 (not c!10319)) b!71095))

(assert (=> b!71094 m!67615))

(assert (=> b!71094 m!67459))

(declare-fun m!68005 () Bool)

(assert (=> b!71094 m!68005))

(assert (=> b!71095 m!67615))

(assert (=> b!71095 m!67459))

(declare-fun m!68007 () Bool)

(assert (=> b!71095 m!68007))

(assert (=> b!70939 d!15801))

(declare-fun d!15803 () Bool)

(declare-fun lt!31459 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!75 (List!1480) (InoxSet (_ BitVec 64)))

(assert (=> d!15803 (= lt!31459 (select (content!75 Nil!1477) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!46563 () Bool)

(assert (=> d!15803 (= lt!31459 e!46563)))

(declare-fun res!37929 () Bool)

(assert (=> d!15803 (=> (not res!37929) (not e!46563))))

(assert (=> d!15803 (= res!37929 ((_ is Cons!1476) Nil!1477))))

(assert (=> d!15803 (= (contains!718 Nil!1477 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) lt!31459)))

(declare-fun b!71100 () Bool)

(declare-fun e!46562 () Bool)

(assert (=> b!71100 (= e!46563 e!46562)))

(declare-fun res!37930 () Bool)

(assert (=> b!71100 (=> res!37930 e!46562)))

(assert (=> b!71100 (= res!37930 (= (h!2062 Nil!1477) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!71101 () Bool)

(assert (=> b!71101 (= e!46562 (contains!718 (t!5007 Nil!1477) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15803 res!37929) b!71100))

(assert (= (and b!71100 (not res!37930)) b!71101))

(declare-fun m!68009 () Bool)

(assert (=> d!15803 m!68009))

(assert (=> d!15803 m!67435))

(declare-fun m!68011 () Bool)

(assert (=> d!15803 m!68011))

(assert (=> b!71101 m!67435))

(declare-fun m!68013 () Bool)

(assert (=> b!71101 m!68013))

(assert (=> b!70968 d!15803))

(declare-fun d!15805 () Bool)

(assert (=> d!15805 (= (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (and (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!70970 d!15805))

(declare-fun d!15807 () Bool)

(declare-fun e!46565 () Bool)

(assert (=> d!15807 e!46565))

(declare-fun res!37931 () Bool)

(assert (=> d!15807 (=> res!37931 e!46565)))

(declare-fun lt!31462 () Bool)

(assert (=> d!15807 (= res!37931 (not lt!31462))))

(declare-fun lt!31460 () Bool)

(assert (=> d!15807 (= lt!31462 lt!31460)))

(declare-fun lt!31461 () Unit!1989)

(declare-fun e!46564 () Unit!1989)

(assert (=> d!15807 (= lt!31461 e!46564)))

(declare-fun c!10320 () Bool)

(assert (=> d!15807 (= c!10320 lt!31460)))

(assert (=> d!15807 (= lt!31460 (containsKey!134 (toList!714 lt!31358) (_1!1067 lt!31109)))))

(assert (=> d!15807 (= (contains!716 lt!31358 (_1!1067 lt!31109)) lt!31462)))

(declare-fun b!71102 () Bool)

(declare-fun lt!31463 () Unit!1989)

(assert (=> b!71102 (= e!46564 lt!31463)))

(assert (=> b!71102 (= lt!31463 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31358) (_1!1067 lt!31109)))))

(assert (=> b!71102 (isDefined!84 (getValueByKey!130 (toList!714 lt!31358) (_1!1067 lt!31109)))))

(declare-fun b!71103 () Bool)

(declare-fun Unit!2001 () Unit!1989)

(assert (=> b!71103 (= e!46564 Unit!2001)))

(declare-fun b!71104 () Bool)

(assert (=> b!71104 (= e!46565 (isDefined!84 (getValueByKey!130 (toList!714 lt!31358) (_1!1067 lt!31109))))))

(assert (= (and d!15807 c!10320) b!71102))

(assert (= (and d!15807 (not c!10320)) b!71103))

(assert (= (and d!15807 (not res!37931)) b!71104))

(declare-fun m!68015 () Bool)

(assert (=> d!15807 m!68015))

(declare-fun m!68017 () Bool)

(assert (=> b!71102 m!68017))

(assert (=> b!71102 m!67745))

(assert (=> b!71102 m!67745))

(declare-fun m!68019 () Bool)

(assert (=> b!71102 m!68019))

(assert (=> b!71104 m!67745))

(assert (=> b!71104 m!67745))

(assert (=> b!71104 m!68019))

(assert (=> d!15739 d!15807))

(declare-fun b!71105 () Bool)

(declare-fun e!46566 () Option!136)

(assert (=> b!71105 (= e!46566 (Some!135 (_2!1067 (h!2061 lt!31359))))))

(declare-fun d!15809 () Bool)

(declare-fun c!10321 () Bool)

(assert (=> d!15809 (= c!10321 (and ((_ is Cons!1475) lt!31359) (= (_1!1067 (h!2061 lt!31359)) (_1!1067 lt!31109))))))

(assert (=> d!15809 (= (getValueByKey!130 lt!31359 (_1!1067 lt!31109)) e!46566)))

(declare-fun b!71106 () Bool)

(declare-fun e!46567 () Option!136)

(assert (=> b!71106 (= e!46566 e!46567)))

(declare-fun c!10322 () Bool)

(assert (=> b!71106 (= c!10322 (and ((_ is Cons!1475) lt!31359) (not (= (_1!1067 (h!2061 lt!31359)) (_1!1067 lt!31109)))))))

(declare-fun b!71108 () Bool)

(assert (=> b!71108 (= e!46567 None!134)))

(declare-fun b!71107 () Bool)

(assert (=> b!71107 (= e!46567 (getValueByKey!130 (t!5006 lt!31359) (_1!1067 lt!31109)))))

(assert (= (and d!15809 c!10321) b!71105))

(assert (= (and d!15809 (not c!10321)) b!71106))

(assert (= (and b!71106 c!10322) b!71107))

(assert (= (and b!71106 (not c!10322)) b!71108))

(declare-fun m!68021 () Bool)

(assert (=> b!71107 m!68021))

(assert (=> d!15739 d!15809))

(declare-fun d!15811 () Bool)

(assert (=> d!15811 (= (getValueByKey!130 lt!31359 (_1!1067 lt!31109)) (Some!135 (_2!1067 lt!31109)))))

(declare-fun lt!31464 () Unit!1989)

(assert (=> d!15811 (= lt!31464 (choose!404 lt!31359 (_1!1067 lt!31109) (_2!1067 lt!31109)))))

(declare-fun e!46568 () Bool)

(assert (=> d!15811 e!46568))

(declare-fun res!37932 () Bool)

(assert (=> d!15811 (=> (not res!37932) (not e!46568))))

(assert (=> d!15811 (= res!37932 (isStrictlySorted!286 lt!31359))))

(assert (=> d!15811 (= (lemmaContainsTupThenGetReturnValue!50 lt!31359 (_1!1067 lt!31109) (_2!1067 lt!31109)) lt!31464)))

(declare-fun b!71109 () Bool)

(declare-fun res!37933 () Bool)

(assert (=> b!71109 (=> (not res!37933) (not e!46568))))

(assert (=> b!71109 (= res!37933 (containsKey!134 lt!31359 (_1!1067 lt!31109)))))

(declare-fun b!71110 () Bool)

(assert (=> b!71110 (= e!46568 (contains!717 lt!31359 (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(assert (= (and d!15811 res!37932) b!71109))

(assert (= (and b!71109 res!37933) b!71110))

(assert (=> d!15811 m!67739))

(declare-fun m!68023 () Bool)

(assert (=> d!15811 m!68023))

(declare-fun m!68025 () Bool)

(assert (=> d!15811 m!68025))

(declare-fun m!68027 () Bool)

(assert (=> b!71109 m!68027))

(declare-fun m!68029 () Bool)

(assert (=> b!71110 m!68029))

(assert (=> d!15739 d!15811))

(declare-fun b!71111 () Bool)

(declare-fun e!46571 () Bool)

(declare-fun lt!31465 () List!1479)

(assert (=> b!71111 (= e!46571 (contains!717 lt!31465 (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun b!71112 () Bool)

(declare-fun e!46569 () List!1479)

(assert (=> b!71112 (= e!46569 (insertStrictlySorted!53 (t!5006 (toList!714 lt!31105)) (_1!1067 lt!31109) (_2!1067 lt!31109)))))

(declare-fun d!15813 () Bool)

(assert (=> d!15813 e!46571))

(declare-fun res!37935 () Bool)

(assert (=> d!15813 (=> (not res!37935) (not e!46571))))

(assert (=> d!15813 (= res!37935 (isStrictlySorted!286 lt!31465))))

(declare-fun e!46570 () List!1479)

(assert (=> d!15813 (= lt!31465 e!46570)))

(declare-fun c!10326 () Bool)

(assert (=> d!15813 (= c!10326 (and ((_ is Cons!1475) (toList!714 lt!31105)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 lt!31109))))))

(assert (=> d!15813 (isStrictlySorted!286 (toList!714 lt!31105))))

(assert (=> d!15813 (= (insertStrictlySorted!53 (toList!714 lt!31105) (_1!1067 lt!31109) (_2!1067 lt!31109)) lt!31465)))

(declare-fun b!71113 () Bool)

(declare-fun c!10325 () Bool)

(assert (=> b!71113 (= c!10325 (and ((_ is Cons!1475) (toList!714 lt!31105)) (bvsgt (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 lt!31109))))))

(declare-fun e!46573 () List!1479)

(declare-fun e!46572 () List!1479)

(assert (=> b!71113 (= e!46573 e!46572)))

(declare-fun b!71114 () Bool)

(assert (=> b!71114 (= e!46570 e!46573)))

(declare-fun c!10324 () Bool)

(assert (=> b!71114 (= c!10324 (and ((_ is Cons!1475) (toList!714 lt!31105)) (= (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 lt!31109))))))

(declare-fun b!71115 () Bool)

(declare-fun call!6155 () List!1479)

(assert (=> b!71115 (= e!46573 call!6155)))

(declare-fun b!71116 () Bool)

(declare-fun res!37934 () Bool)

(assert (=> b!71116 (=> (not res!37934) (not e!46571))))

(assert (=> b!71116 (= res!37934 (containsKey!134 lt!31465 (_1!1067 lt!31109)))))

(declare-fun b!71117 () Bool)

(assert (=> b!71117 (= e!46569 (ite c!10324 (t!5006 (toList!714 lt!31105)) (ite c!10325 (Cons!1475 (h!2061 (toList!714 lt!31105)) (t!5006 (toList!714 lt!31105))) Nil!1476)))))

(declare-fun b!71118 () Bool)

(declare-fun call!6154 () List!1479)

(assert (=> b!71118 (= e!46570 call!6154)))

(declare-fun b!71119 () Bool)

(declare-fun call!6153 () List!1479)

(assert (=> b!71119 (= e!46572 call!6153)))

(declare-fun bm!6150 () Bool)

(assert (=> bm!6150 (= call!6153 call!6155)))

(declare-fun bm!6151 () Bool)

(assert (=> bm!6151 (= call!6155 call!6154)))

(declare-fun bm!6152 () Bool)

(assert (=> bm!6152 (= call!6154 ($colon$colon!64 e!46569 (ite c!10326 (h!2061 (toList!714 lt!31105)) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109)))))))

(declare-fun c!10323 () Bool)

(assert (=> bm!6152 (= c!10323 c!10326)))

(declare-fun b!71120 () Bool)

(assert (=> b!71120 (= e!46572 call!6153)))

(assert (= (and d!15813 c!10326) b!71118))

(assert (= (and d!15813 (not c!10326)) b!71114))

(assert (= (and b!71114 c!10324) b!71115))

(assert (= (and b!71114 (not c!10324)) b!71113))

(assert (= (and b!71113 c!10325) b!71119))

(assert (= (and b!71113 (not c!10325)) b!71120))

(assert (= (or b!71119 b!71120) bm!6150))

(assert (= (or b!71115 bm!6150) bm!6151))

(assert (= (or b!71118 bm!6151) bm!6152))

(assert (= (and bm!6152 c!10323) b!71112))

(assert (= (and bm!6152 (not c!10323)) b!71117))

(assert (= (and d!15813 res!37935) b!71116))

(assert (= (and b!71116 res!37934) b!71111))

(declare-fun m!68031 () Bool)

(assert (=> b!71111 m!68031))

(declare-fun m!68033 () Bool)

(assert (=> b!71112 m!68033))

(declare-fun m!68035 () Bool)

(assert (=> b!71116 m!68035))

(declare-fun m!68037 () Bool)

(assert (=> bm!6152 m!68037))

(declare-fun m!68039 () Bool)

(assert (=> d!15813 m!68039))

(declare-fun m!68041 () Bool)

(assert (=> d!15813 m!68041))

(assert (=> d!15739 d!15813))

(declare-fun d!15815 () Bool)

(assert (=> d!15815 (isDefined!84 (getValueByKey!130 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!31468 () Unit!1989)

(declare-fun choose!405 (List!1479 (_ BitVec 64)) Unit!1989)

(assert (=> d!15815 (= lt!31468 (choose!405 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!46576 () Bool)

(assert (=> d!15815 e!46576))

(declare-fun res!37938 () Bool)

(assert (=> d!15815 (=> (not res!37938) (not e!46576))))

(assert (=> d!15815 (= res!37938 (isStrictlySorted!286 (toList!714 lt!31108)))))

(assert (=> d!15815 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) lt!31468)))

(declare-fun b!71123 () Bool)

(assert (=> b!71123 (= e!46576 (containsKey!134 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15815 res!37938) b!71123))

(assert (=> d!15815 m!67435))

(assert (=> d!15815 m!67667))

(assert (=> d!15815 m!67667))

(assert (=> d!15815 m!67669))

(assert (=> d!15815 m!67435))

(declare-fun m!68043 () Bool)

(assert (=> d!15815 m!68043))

(declare-fun m!68045 () Bool)

(assert (=> d!15815 m!68045))

(assert (=> b!71123 m!67435))

(assert (=> b!71123 m!67663))

(assert (=> b!70767 d!15815))

(assert (=> b!70767 d!15777))

(assert (=> b!70767 d!15779))

(declare-fun d!15817 () Bool)

(assert (=> d!15817 (= (apply!74 lt!31248 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1139 (getValueByKey!130 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3045 () Bool)

(assert (= bs!3045 d!15817))

(assert (=> bs!3045 m!67611))

(declare-fun m!68047 () Bool)

(assert (=> bs!3045 m!68047))

(assert (=> bs!3045 m!68047))

(declare-fun m!68049 () Bool)

(assert (=> bs!3045 m!68049))

(assert (=> b!70746 d!15817))

(assert (=> b!70746 d!15801))

(declare-fun bm!6153 () Bool)

(declare-fun call!6162 () Bool)

(declare-fun lt!31487 () ListLongMap!1397)

(assert (=> bm!6153 (= call!6162 (contains!716 lt!31487 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71124 () Bool)

(declare-fun e!46577 () Bool)

(assert (=> b!71124 (= e!46577 (= (apply!74 lt!31487 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!71125 () Bool)

(declare-fun e!46583 () ListLongMap!1397)

(declare-fun call!6158 () ListLongMap!1397)

(assert (=> b!71125 (= e!46583 call!6158)))

(declare-fun bm!6154 () Bool)

(declare-fun call!6156 () ListLongMap!1397)

(assert (=> bm!6154 (= call!6156 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71126 () Bool)

(declare-fun e!46587 () Unit!1989)

(declare-fun Unit!2002 () Unit!1989)

(assert (=> b!71126 (= e!46587 Unit!2002)))

(declare-fun b!71127 () Bool)

(declare-fun e!46588 () Bool)

(declare-fun e!46582 () Bool)

(assert (=> b!71127 (= e!46588 e!46582)))

(declare-fun res!37945 () Bool)

(assert (=> b!71127 (=> (not res!37945) (not e!46582))))

(assert (=> b!71127 (= res!37945 (contains!716 lt!31487 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71127 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71128 () Bool)

(declare-fun c!10328 () Bool)

(assert (=> b!71128 (= c!10328 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46578 () ListLongMap!1397)

(assert (=> b!71128 (= e!46578 e!46583)))

(declare-fun bm!6155 () Bool)

(declare-fun c!10329 () Bool)

(declare-fun call!6161 () ListLongMap!1397)

(declare-fun call!6157 () ListLongMap!1397)

(declare-fun c!10331 () Bool)

(declare-fun call!6160 () ListLongMap!1397)

(assert (=> bm!6155 (= call!6160 (+!91 (ite c!10331 call!6156 (ite c!10329 call!6161 call!6157)) (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun bm!6156 () Bool)

(declare-fun call!6159 () Bool)

(assert (=> bm!6156 (= call!6159 (contains!716 lt!31487 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71129 () Bool)

(declare-fun e!46581 () Bool)

(assert (=> b!71129 (= e!46581 (not call!6159))))

(declare-fun b!71130 () Bool)

(assert (=> b!71130 (= e!46582 (= (apply!74 lt!31487 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71130 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (_values!2174 newMap!16))))))

(assert (=> b!71130 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71131 () Bool)

(declare-fun e!46589 () Bool)

(assert (=> b!71131 (= e!46589 (not call!6162))))

(declare-fun b!71132 () Bool)

(declare-fun e!46584 () ListLongMap!1397)

(assert (=> b!71132 (= e!46584 e!46578)))

(assert (=> b!71132 (= c!10329 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71133 () Bool)

(assert (=> b!71133 (= e!46583 call!6157)))

(declare-fun bm!6157 () Bool)

(assert (=> bm!6157 (= call!6158 call!6160)))

(declare-fun b!71134 () Bool)

(declare-fun e!46579 () Bool)

(assert (=> b!71134 (= e!46579 e!46589)))

(declare-fun c!10332 () Bool)

(assert (=> b!71134 (= c!10332 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6158 () Bool)

(assert (=> bm!6158 (= call!6161 call!6156)))

(declare-fun b!71135 () Bool)

(assert (=> b!71135 (= e!46578 call!6158)))

(declare-fun b!71136 () Bool)

(declare-fun res!37941 () Bool)

(assert (=> b!71136 (=> (not res!37941) (not e!46579))))

(assert (=> b!71136 (= res!37941 e!46588)))

(declare-fun res!37940 () Bool)

(assert (=> b!71136 (=> res!37940 e!46588)))

(declare-fun e!46586 () Bool)

(assert (=> b!71136 (= res!37940 (not e!46586))))

(declare-fun res!37942 () Bool)

(assert (=> b!71136 (=> (not res!37942) (not e!46586))))

(assert (=> b!71136 (= res!37942 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71137 () Bool)

(assert (=> b!71137 (= e!46586 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71138 () Bool)

(declare-fun res!37946 () Bool)

(assert (=> b!71138 (=> (not res!37946) (not e!46579))))

(assert (=> b!71138 (= res!37946 e!46581)))

(declare-fun c!10330 () Bool)

(assert (=> b!71138 (= c!10330 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!71139 () Bool)

(declare-fun lt!31485 () Unit!1989)

(assert (=> b!71139 (= e!46587 lt!31485)))

(declare-fun lt!31469 () ListLongMap!1397)

(assert (=> b!71139 (= lt!31469 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31483 () (_ BitVec 64))

(assert (=> b!71139 (= lt!31483 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31470 () (_ BitVec 64))

(assert (=> b!71139 (= lt!31470 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31471 () Unit!1989)

(assert (=> b!71139 (= lt!31471 (addStillContains!50 lt!31469 lt!31483 (zeroValue!2095 newMap!16) lt!31470))))

(assert (=> b!71139 (contains!716 (+!91 lt!31469 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16))) lt!31470)))

(declare-fun lt!31482 () Unit!1989)

(assert (=> b!71139 (= lt!31482 lt!31471)))

(declare-fun lt!31475 () ListLongMap!1397)

(assert (=> b!71139 (= lt!31475 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31480 () (_ BitVec 64))

(assert (=> b!71139 (= lt!31480 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31481 () (_ BitVec 64))

(assert (=> b!71139 (= lt!31481 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31478 () Unit!1989)

(assert (=> b!71139 (= lt!31478 (addApplyDifferent!50 lt!31475 lt!31480 (minValue!2095 newMap!16) lt!31481))))

(assert (=> b!71139 (= (apply!74 (+!91 lt!31475 (tuple2!2113 lt!31480 (minValue!2095 newMap!16))) lt!31481) (apply!74 lt!31475 lt!31481))))

(declare-fun lt!31472 () Unit!1989)

(assert (=> b!71139 (= lt!31472 lt!31478)))

(declare-fun lt!31484 () ListLongMap!1397)

(assert (=> b!71139 (= lt!31484 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31486 () (_ BitVec 64))

(assert (=> b!71139 (= lt!31486 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31490 () (_ BitVec 64))

(assert (=> b!71139 (= lt!31490 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31479 () Unit!1989)

(assert (=> b!71139 (= lt!31479 (addApplyDifferent!50 lt!31484 lt!31486 (zeroValue!2095 newMap!16) lt!31490))))

(assert (=> b!71139 (= (apply!74 (+!91 lt!31484 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16))) lt!31490) (apply!74 lt!31484 lt!31490))))

(declare-fun lt!31489 () Unit!1989)

(assert (=> b!71139 (= lt!31489 lt!31479)))

(declare-fun lt!31488 () ListLongMap!1397)

(assert (=> b!71139 (= lt!31488 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31477 () (_ BitVec 64))

(assert (=> b!71139 (= lt!31477 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31473 () (_ BitVec 64))

(assert (=> b!71139 (= lt!31473 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71139 (= lt!31485 (addApplyDifferent!50 lt!31488 lt!31477 (minValue!2095 newMap!16) lt!31473))))

(assert (=> b!71139 (= (apply!74 (+!91 lt!31488 (tuple2!2113 lt!31477 (minValue!2095 newMap!16))) lt!31473) (apply!74 lt!31488 lt!31473))))

(declare-fun b!71140 () Bool)

(declare-fun e!46585 () Bool)

(assert (=> b!71140 (= e!46589 e!46585)))

(declare-fun res!37939 () Bool)

(assert (=> b!71140 (= res!37939 call!6162)))

(assert (=> b!71140 (=> (not res!37939) (not e!46585))))

(declare-fun b!71141 () Bool)

(assert (=> b!71141 (= e!46581 e!46577)))

(declare-fun res!37947 () Bool)

(assert (=> b!71141 (= res!37947 call!6159)))

(assert (=> b!71141 (=> (not res!37947) (not e!46577))))

(declare-fun d!15819 () Bool)

(assert (=> d!15819 e!46579))

(declare-fun res!37943 () Bool)

(assert (=> d!15819 (=> (not res!37943) (not e!46579))))

(assert (=> d!15819 (= res!37943 (or (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))))

(declare-fun lt!31476 () ListLongMap!1397)

(assert (=> d!15819 (= lt!31487 lt!31476)))

(declare-fun lt!31474 () Unit!1989)

(assert (=> d!15819 (= lt!31474 e!46587)))

(declare-fun c!10327 () Bool)

(declare-fun e!46580 () Bool)

(assert (=> d!15819 (= c!10327 e!46580)))

(declare-fun res!37944 () Bool)

(assert (=> d!15819 (=> (not res!37944) (not e!46580))))

(assert (=> d!15819 (= res!37944 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!15819 (= lt!31476 e!46584)))

(assert (=> d!15819 (= c!10331 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15819 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15819 (= (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31487)))

(declare-fun b!71142 () Bool)

(assert (=> b!71142 (= e!46585 (= (apply!74 lt!31487 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun b!71143 () Bool)

(assert (=> b!71143 (= e!46580 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71144 () Bool)

(assert (=> b!71144 (= e!46584 (+!91 call!6160 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun bm!6159 () Bool)

(assert (=> bm!6159 (= call!6157 call!6161)))

(assert (= (and d!15819 c!10331) b!71144))

(assert (= (and d!15819 (not c!10331)) b!71132))

(assert (= (and b!71132 c!10329) b!71135))

(assert (= (and b!71132 (not c!10329)) b!71128))

(assert (= (and b!71128 c!10328) b!71125))

(assert (= (and b!71128 (not c!10328)) b!71133))

(assert (= (or b!71125 b!71133) bm!6159))

(assert (= (or b!71135 bm!6159) bm!6158))

(assert (= (or b!71135 b!71125) bm!6157))

(assert (= (or b!71144 bm!6158) bm!6154))

(assert (= (or b!71144 bm!6157) bm!6155))

(assert (= (and d!15819 res!37944) b!71143))

(assert (= (and d!15819 c!10327) b!71139))

(assert (= (and d!15819 (not c!10327)) b!71126))

(assert (= (and d!15819 res!37943) b!71136))

(assert (= (and b!71136 res!37942) b!71137))

(assert (= (and b!71136 (not res!37940)) b!71127))

(assert (= (and b!71127 res!37945) b!71130))

(assert (= (and b!71136 res!37941) b!71138))

(assert (= (and b!71138 c!10330) b!71141))

(assert (= (and b!71138 (not c!10330)) b!71129))

(assert (= (and b!71141 res!37947) b!71124))

(assert (= (or b!71141 b!71129) bm!6156))

(assert (= (and b!71138 res!37946) b!71134))

(assert (= (and b!71134 c!10332) b!71140))

(assert (= (and b!71134 (not c!10332)) b!71131))

(assert (= (and b!71140 res!37939) b!71142))

(assert (= (or b!71140 b!71131) bm!6153))

(declare-fun b_lambda!3187 () Bool)

(assert (=> (not b_lambda!3187) (not b!71130)))

(assert (=> b!71130 t!5019))

(declare-fun b_and!4381 () Bool)

(assert (= b_and!4377 (and (=> t!5019 result!2661) b_and!4381)))

(assert (=> b!71130 t!5021))

(declare-fun b_and!4383 () Bool)

(assert (= b_and!4379 (and (=> t!5021 result!2663) b_and!4383)))

(declare-fun m!68051 () Bool)

(assert (=> b!71144 m!68051))

(assert (=> b!71143 m!67861))

(assert (=> b!71143 m!67861))

(assert (=> b!71143 m!67863))

(assert (=> b!71130 m!67865))

(assert (=> b!71130 m!67861))

(declare-fun m!68053 () Bool)

(assert (=> b!71130 m!68053))

(assert (=> b!71130 m!67865))

(declare-fun m!68055 () Bool)

(assert (=> b!71130 m!68055))

(assert (=> b!71130 m!67861))

(declare-fun m!68057 () Bool)

(assert (=> b!71130 m!68057))

(assert (=> b!71130 m!68053))

(assert (=> b!71137 m!67861))

(assert (=> b!71137 m!67861))

(assert (=> b!71137 m!67863))

(assert (=> d!15819 m!67873))

(assert (=> b!71127 m!67861))

(assert (=> b!71127 m!67861))

(declare-fun m!68059 () Bool)

(assert (=> b!71127 m!68059))

(declare-fun m!68061 () Bool)

(assert (=> b!71124 m!68061))

(declare-fun m!68063 () Bool)

(assert (=> bm!6156 m!68063))

(declare-fun m!68065 () Bool)

(assert (=> bm!6155 m!68065))

(declare-fun m!68067 () Bool)

(assert (=> bm!6154 m!68067))

(declare-fun m!68069 () Bool)

(assert (=> bm!6153 m!68069))

(declare-fun m!68071 () Bool)

(assert (=> b!71142 m!68071))

(declare-fun m!68073 () Bool)

(assert (=> b!71139 m!68073))

(declare-fun m!68075 () Bool)

(assert (=> b!71139 m!68075))

(declare-fun m!68077 () Bool)

(assert (=> b!71139 m!68077))

(assert (=> b!71139 m!68067))

(assert (=> b!71139 m!67861))

(declare-fun m!68079 () Bool)

(assert (=> b!71139 m!68079))

(declare-fun m!68081 () Bool)

(assert (=> b!71139 m!68081))

(assert (=> b!71139 m!68079))

(declare-fun m!68083 () Bool)

(assert (=> b!71139 m!68083))

(declare-fun m!68085 () Bool)

(assert (=> b!71139 m!68085))

(assert (=> b!71139 m!68081))

(declare-fun m!68087 () Bool)

(assert (=> b!71139 m!68087))

(declare-fun m!68089 () Bool)

(assert (=> b!71139 m!68089))

(declare-fun m!68091 () Bool)

(assert (=> b!71139 m!68091))

(declare-fun m!68093 () Bool)

(assert (=> b!71139 m!68093))

(declare-fun m!68095 () Bool)

(assert (=> b!71139 m!68095))

(declare-fun m!68097 () Bool)

(assert (=> b!71139 m!68097))

(assert (=> b!71139 m!68089))

(declare-fun m!68099 () Bool)

(assert (=> b!71139 m!68099))

(assert (=> b!71139 m!68097))

(declare-fun m!68101 () Bool)

(assert (=> b!71139 m!68101))

(assert (=> d!15721 d!15819))

(assert (=> b!70966 d!15805))

(declare-fun b!71157 () Bool)

(declare-fun e!46598 () SeekEntryResult!238)

(assert (=> b!71157 (= e!46598 Undefined!238)))

(declare-fun e!46596 () SeekEntryResult!238)

(declare-fun lt!31499 () SeekEntryResult!238)

(declare-fun b!71158 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3857 (_ BitVec 32)) SeekEntryResult!238)

(assert (=> b!71158 (= e!46596 (seekKeyOrZeroReturnVacant!0 (x!11009 lt!31499) (index!3084 lt!31499) (index!3084 lt!31499) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(declare-fun b!71159 () Bool)

(declare-fun e!46597 () SeekEntryResult!238)

(assert (=> b!71159 (= e!46598 e!46597)))

(declare-fun lt!31498 () (_ BitVec 64))

(assert (=> b!71159 (= lt!31498 (select (arr!1840 (_keys!3838 newMap!16)) (index!3084 lt!31499)))))

(declare-fun c!10339 () Bool)

(assert (=> b!71159 (= c!10339 (= lt!31498 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!31497 () SeekEntryResult!238)

(declare-fun d!15821 () Bool)

(assert (=> d!15821 (and (or ((_ is Undefined!238) lt!31497) (not ((_ is Found!238) lt!31497)) (and (bvsge (index!3083 lt!31497) #b00000000000000000000000000000000) (bvslt (index!3083 lt!31497) (size!2078 (_keys!3838 newMap!16))))) (or ((_ is Undefined!238) lt!31497) ((_ is Found!238) lt!31497) (not ((_ is MissingZero!238) lt!31497)) (and (bvsge (index!3082 lt!31497) #b00000000000000000000000000000000) (bvslt (index!3082 lt!31497) (size!2078 (_keys!3838 newMap!16))))) (or ((_ is Undefined!238) lt!31497) ((_ is Found!238) lt!31497) ((_ is MissingZero!238) lt!31497) (not ((_ is MissingVacant!238) lt!31497)) (and (bvsge (index!3085 lt!31497) #b00000000000000000000000000000000) (bvslt (index!3085 lt!31497) (size!2078 (_keys!3838 newMap!16))))) (or ((_ is Undefined!238) lt!31497) (ite ((_ is Found!238) lt!31497) (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31497)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (ite ((_ is MissingZero!238) lt!31497) (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3082 lt!31497)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!238) lt!31497) (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3085 lt!31497)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15821 (= lt!31497 e!46598)))

(declare-fun c!10340 () Bool)

(assert (=> d!15821 (= c!10340 (and ((_ is Intermediate!238) lt!31499) (undefined!1050 lt!31499)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3857 (_ BitVec 32)) SeekEntryResult!238)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!15821 (= lt!31499 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (mask!6147 newMap!16)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(assert (=> d!15821 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15821 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)) lt!31497)))

(declare-fun b!71160 () Bool)

(assert (=> b!71160 (= e!46597 (Found!238 (index!3084 lt!31499)))))

(declare-fun b!71161 () Bool)

(declare-fun c!10341 () Bool)

(assert (=> b!71161 (= c!10341 (= lt!31498 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71161 (= e!46597 e!46596)))

(declare-fun b!71162 () Bool)

(assert (=> b!71162 (= e!46596 (MissingZero!238 (index!3084 lt!31499)))))

(assert (= (and d!15821 c!10340) b!71157))

(assert (= (and d!15821 (not c!10340)) b!71159))

(assert (= (and b!71159 c!10339) b!71160))

(assert (= (and b!71159 (not c!10339)) b!71161))

(assert (= (and b!71161 c!10341) b!71162))

(assert (= (and b!71161 (not c!10341)) b!71158))

(assert (=> b!71158 m!67435))

(declare-fun m!68103 () Bool)

(assert (=> b!71158 m!68103))

(declare-fun m!68105 () Bool)

(assert (=> b!71159 m!68105))

(declare-fun m!68107 () Bool)

(assert (=> d!15821 m!68107))

(assert (=> d!15821 m!67435))

(declare-fun m!68109 () Bool)

(assert (=> d!15821 m!68109))

(declare-fun m!68111 () Bool)

(assert (=> d!15821 m!68111))

(declare-fun m!68113 () Bool)

(assert (=> d!15821 m!68113))

(assert (=> d!15821 m!67435))

(assert (=> d!15821 m!68107))

(assert (=> d!15821 m!67873))

(declare-fun m!68115 () Bool)

(assert (=> d!15821 m!68115))

(assert (=> bm!6106 d!15821))

(declare-fun b!71171 () Bool)

(declare-fun e!46603 () (_ BitVec 32))

(declare-fun call!6165 () (_ BitVec 32))

(assert (=> b!71171 (= e!46603 (bvadd #b00000000000000000000000000000001 call!6165))))

(declare-fun b!71172 () Bool)

(declare-fun e!46604 () (_ BitVec 32))

(assert (=> b!71172 (= e!46604 e!46603)))

(declare-fun c!10346 () Bool)

(assert (=> b!71172 (= c!10346 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6162 () Bool)

(assert (=> bm!6162 (= call!6165 (arrayCountValidKeys!0 (_keys!3838 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71173 () Bool)

(assert (=> b!71173 (= e!46604 #b00000000000000000000000000000000)))

(declare-fun d!15823 () Bool)

(declare-fun lt!31502 () (_ BitVec 32))

(assert (=> d!15823 (and (bvsge lt!31502 #b00000000000000000000000000000000) (bvsle lt!31502 (bvsub (size!2078 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!15823 (= lt!31502 e!46604)))

(declare-fun c!10347 () Bool)

(assert (=> d!15823 (= c!10347 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!15823 (and (bvsle #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2078 (_keys!3838 newMap!16)) (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!15823 (= (arrayCountValidKeys!0 (_keys!3838 newMap!16) #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) lt!31502)))

(declare-fun b!71174 () Bool)

(assert (=> b!71174 (= e!46603 call!6165)))

(assert (= (and d!15823 c!10347) b!71173))

(assert (= (and d!15823 (not c!10347)) b!71172))

(assert (= (and b!71172 c!10346) b!71171))

(assert (= (and b!71172 (not c!10346)) b!71174))

(assert (= (or b!71171 b!71174) bm!6162))

(assert (=> b!71172 m!67861))

(assert (=> b!71172 m!67861))

(assert (=> b!71172 m!67863))

(declare-fun m!68117 () Bool)

(assert (=> bm!6162 m!68117))

(assert (=> b!70977 d!15823))

(declare-fun d!15825 () Bool)

(declare-fun e!46606 () Bool)

(assert (=> d!15825 e!46606))

(declare-fun res!37948 () Bool)

(assert (=> d!15825 (=> res!37948 e!46606)))

(declare-fun lt!31505 () Bool)

(assert (=> d!15825 (= res!37948 (not lt!31505))))

(declare-fun lt!31503 () Bool)

(assert (=> d!15825 (= lt!31505 lt!31503)))

(declare-fun lt!31504 () Unit!1989)

(declare-fun e!46605 () Unit!1989)

(assert (=> d!15825 (= lt!31504 e!46605)))

(declare-fun c!10348 () Bool)

(assert (=> d!15825 (= c!10348 lt!31503)))

(assert (=> d!15825 (= lt!31503 (containsKey!134 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(assert (=> d!15825 (= (contains!716 call!6111 (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))) lt!31505)))

(declare-fun b!71175 () Bool)

(declare-fun lt!31506 () Unit!1989)

(assert (=> b!71175 (= e!46605 lt!31506)))

(assert (=> b!71175 (= lt!31506 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(assert (=> b!71175 (isDefined!84 (getValueByKey!130 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(declare-fun b!71176 () Bool)

(declare-fun Unit!2003 () Unit!1989)

(assert (=> b!71176 (= e!46605 Unit!2003)))

(declare-fun b!71177 () Bool)

(assert (=> b!71177 (= e!46606 (isDefined!84 (getValueByKey!130 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341)))))))

(assert (= (and d!15825 c!10348) b!71175))

(assert (= (and d!15825 (not c!10348)) b!71176))

(assert (= (and d!15825 (not res!37948)) b!71177))

(assert (=> d!15825 m!67679))

(declare-fun m!68119 () Bool)

(assert (=> d!15825 m!68119))

(assert (=> b!71175 m!67679))

(declare-fun m!68121 () Bool)

(assert (=> b!71175 m!68121))

(assert (=> b!71175 m!67679))

(declare-fun m!68123 () Bool)

(assert (=> b!71175 m!68123))

(assert (=> b!71175 m!68123))

(declare-fun m!68125 () Bool)

(assert (=> b!71175 m!68125))

(assert (=> b!71177 m!67679))

(assert (=> b!71177 m!68123))

(assert (=> b!71177 m!68123))

(assert (=> b!71177 m!68125))

(assert (=> b!70889 d!15825))

(declare-fun d!15827 () Bool)

(declare-fun e!46609 () Bool)

(assert (=> d!15827 e!46609))

(declare-fun res!37951 () Bool)

(assert (=> d!15827 (=> (not res!37951) (not e!46609))))

(assert (=> d!15827 (= res!37951 (and (bvsge (index!3083 lt!31341) #b00000000000000000000000000000000) (bvslt (index!3083 lt!31341) (size!2078 (_keys!3838 newMap!16)))))))

(declare-fun lt!31509 () Unit!1989)

(declare-fun choose!406 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) Int) Unit!1989)

(assert (=> d!15827 (= lt!31509 (choose!406 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3083 lt!31341) (defaultEntry!2191 newMap!16)))))

(assert (=> d!15827 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15827 (= (lemmaValidKeyInArrayIsInListMap!82 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3083 lt!31341) (defaultEntry!2191 newMap!16)) lt!31509)))

(declare-fun b!71180 () Bool)

(assert (=> b!71180 (= e!46609 (contains!716 (getCurrentListMap!407 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(assert (= (and d!15827 res!37951) b!71180))

(declare-fun m!68127 () Bool)

(assert (=> d!15827 m!68127))

(assert (=> d!15827 m!67873))

(declare-fun m!68129 () Bool)

(assert (=> b!71180 m!68129))

(assert (=> b!71180 m!67679))

(assert (=> b!71180 m!68129))

(assert (=> b!71180 m!67679))

(declare-fun m!68131 () Bool)

(assert (=> b!71180 m!68131))

(assert (=> b!70889 d!15827))

(declare-fun d!15829 () Bool)

(declare-fun e!46612 () Bool)

(assert (=> d!15829 e!46612))

(declare-fun res!37954 () Bool)

(assert (=> d!15829 (=> (not res!37954) (not e!46612))))

(assert (=> d!15829 (= res!37954 (and (bvsge (index!3083 lt!31341) #b00000000000000000000000000000000) (bvslt (index!3083 lt!31341) (size!2079 (_values!2174 newMap!16)))))))

(declare-fun lt!31512 () Unit!1989)

(declare-fun choose!407 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) (_ BitVec 64) V!2937 Int) Unit!1989)

(assert (=> d!15829 (= lt!31512 (choose!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3083 lt!31341) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 (defaultEntry!2191 newMap!16)))))

(assert (=> d!15829 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15829 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3083 lt!31341) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 (defaultEntry!2191 newMap!16)) lt!31512)))

(declare-fun b!71183 () Bool)

(assert (=> b!71183 (= e!46612 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (getCurrentListMap!407 (_keys!3838 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))))))

(assert (= (and d!15829 res!37954) b!71183))

(assert (=> d!15829 m!67435))

(declare-fun m!68133 () Bool)

(assert (=> d!15829 m!68133))

(assert (=> d!15829 m!67873))

(assert (=> b!71183 m!67607))

(assert (=> b!71183 m!67607))

(declare-fun m!68135 () Bool)

(assert (=> b!71183 m!68135))

(assert (=> b!71183 m!67675))

(declare-fun m!68137 () Bool)

(assert (=> b!71183 m!68137))

(assert (=> b!70889 d!15829))

(declare-fun d!15831 () Bool)

(declare-fun e!46614 () Bool)

(assert (=> d!15831 e!46614))

(declare-fun res!37955 () Bool)

(assert (=> d!15831 (=> res!37955 e!46614)))

(declare-fun lt!31515 () Bool)

(assert (=> d!15831 (= res!37955 (not lt!31515))))

(declare-fun lt!31513 () Bool)

(assert (=> d!15831 (= lt!31515 lt!31513)))

(declare-fun lt!31514 () Unit!1989)

(declare-fun e!46613 () Unit!1989)

(assert (=> d!15831 (= lt!31514 e!46613)))

(declare-fun c!10349 () Bool)

(assert (=> d!15831 (= c!10349 lt!31513)))

(assert (=> d!15831 (= lt!31513 (containsKey!134 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15831 (= (contains!716 lt!31248 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31515)))

(declare-fun b!71184 () Bool)

(declare-fun lt!31516 () Unit!1989)

(assert (=> b!71184 (= e!46613 lt!31516)))

(assert (=> b!71184 (= lt!31516 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71184 (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71185 () Bool)

(declare-fun Unit!2004 () Unit!1989)

(assert (=> b!71185 (= e!46613 Unit!2004)))

(declare-fun b!71186 () Bool)

(assert (=> b!71186 (= e!46614 (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15831 c!10349) b!71184))

(assert (= (and d!15831 (not c!10349)) b!71185))

(assert (= (and d!15831 (not res!37955)) b!71186))

(declare-fun m!68139 () Bool)

(assert (=> d!15831 m!68139))

(declare-fun m!68141 () Bool)

(assert (=> b!71184 m!68141))

(declare-fun m!68143 () Bool)

(assert (=> b!71184 m!68143))

(assert (=> b!71184 m!68143))

(declare-fun m!68145 () Bool)

(assert (=> b!71184 m!68145))

(assert (=> b!71186 m!68143))

(assert (=> b!71186 m!68143))

(assert (=> b!71186 m!68145))

(assert (=> bm!6051 d!15831))

(declare-fun bm!6163 () Bool)

(declare-fun call!6166 () Bool)

(declare-fun c!10350 () Bool)

(assert (=> bm!6163 (= call!6166 (arrayNoDuplicates!0 (_keys!3838 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10350 (Cons!1476 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) Nil!1477) Nil!1477)))))

(declare-fun b!71187 () Bool)

(declare-fun e!46615 () Bool)

(declare-fun e!46616 () Bool)

(assert (=> b!71187 (= e!46615 e!46616)))

(assert (=> b!71187 (= c!10350 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!15833 () Bool)

(declare-fun res!37957 () Bool)

(declare-fun e!46617 () Bool)

(assert (=> d!15833 (=> res!37957 e!46617)))

(assert (=> d!15833 (= res!37957 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!15833 (= (arrayNoDuplicates!0 (_keys!3838 newMap!16) #b00000000000000000000000000000000 Nil!1477) e!46617)))

(declare-fun b!71188 () Bool)

(assert (=> b!71188 (= e!46616 call!6166)))

(declare-fun b!71189 () Bool)

(declare-fun e!46618 () Bool)

(assert (=> b!71189 (= e!46618 (contains!718 Nil!1477 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71190 () Bool)

(assert (=> b!71190 (= e!46616 call!6166)))

(declare-fun b!71191 () Bool)

(assert (=> b!71191 (= e!46617 e!46615)))

(declare-fun res!37958 () Bool)

(assert (=> b!71191 (=> (not res!37958) (not e!46615))))

(assert (=> b!71191 (= res!37958 (not e!46618))))

(declare-fun res!37956 () Bool)

(assert (=> b!71191 (=> (not res!37956) (not e!46618))))

(assert (=> b!71191 (= res!37956 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!15833 (not res!37957)) b!71191))

(assert (= (and b!71191 res!37956) b!71189))

(assert (= (and b!71191 res!37958) b!71187))

(assert (= (and b!71187 c!10350) b!71188))

(assert (= (and b!71187 (not c!10350)) b!71190))

(assert (= (or b!71188 b!71190) bm!6163))

(assert (=> bm!6163 m!67861))

(declare-fun m!68147 () Bool)

(assert (=> bm!6163 m!68147))

(assert (=> b!71187 m!67861))

(assert (=> b!71187 m!67861))

(assert (=> b!71187 m!67863))

(assert (=> b!71189 m!67861))

(assert (=> b!71189 m!67861))

(declare-fun m!68149 () Bool)

(assert (=> b!71189 m!68149))

(assert (=> b!71191 m!67861))

(assert (=> b!71191 m!67861))

(assert (=> b!71191 m!67863))

(assert (=> b!70979 d!15833))

(declare-fun bm!6164 () Bool)

(declare-fun call!6173 () Bool)

(declare-fun lt!31535 () ListLongMap!1397)

(assert (=> bm!6164 (= call!6173 (contains!716 lt!31535 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71192 () Bool)

(declare-fun e!46619 () Bool)

(assert (=> b!71192 (= e!46619 (= (apply!74 lt!31535 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!71193 () Bool)

(declare-fun e!46625 () ListLongMap!1397)

(declare-fun call!6169 () ListLongMap!1397)

(assert (=> b!71193 (= e!46625 call!6169)))

(declare-fun bm!6165 () Bool)

(declare-fun call!6167 () ListLongMap!1397)

(assert (=> bm!6165 (= call!6167 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71194 () Bool)

(declare-fun e!46629 () Unit!1989)

(declare-fun Unit!2005 () Unit!1989)

(assert (=> b!71194 (= e!46629 Unit!2005)))

(declare-fun b!71195 () Bool)

(declare-fun e!46630 () Bool)

(declare-fun e!46624 () Bool)

(assert (=> b!71195 (= e!46630 e!46624)))

(declare-fun res!37965 () Bool)

(assert (=> b!71195 (=> (not res!37965) (not e!46624))))

(assert (=> b!71195 (= res!37965 (contains!716 lt!31535 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71195 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71196 () Bool)

(declare-fun c!10352 () Bool)

(assert (=> b!71196 (= c!10352 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46620 () ListLongMap!1397)

(assert (=> b!71196 (= e!46620 e!46625)))

(declare-fun call!6172 () ListLongMap!1397)

(declare-fun call!6168 () ListLongMap!1397)

(declare-fun c!10353 () Bool)

(declare-fun c!10355 () Bool)

(declare-fun call!6171 () ListLongMap!1397)

(declare-fun bm!6166 () Bool)

(assert (=> bm!6166 (= call!6171 (+!91 (ite c!10355 call!6167 (ite c!10353 call!6172 call!6168)) (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun bm!6167 () Bool)

(declare-fun call!6170 () Bool)

(assert (=> bm!6167 (= call!6170 (contains!716 lt!31535 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71197 () Bool)

(declare-fun e!46623 () Bool)

(assert (=> b!71197 (= e!46623 (not call!6170))))

(declare-fun b!71198 () Bool)

(assert (=> b!71198 (= e!46624 (= (apply!74 lt!31535 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71198 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332))))))

(assert (=> b!71198 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71199 () Bool)

(declare-fun e!46631 () Bool)

(assert (=> b!71199 (= e!46631 (not call!6173))))

(declare-fun b!71200 () Bool)

(declare-fun e!46626 () ListLongMap!1397)

(assert (=> b!71200 (= e!46626 e!46620)))

(assert (=> b!71200 (= c!10353 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71201 () Bool)

(assert (=> b!71201 (= e!46625 call!6168)))

(declare-fun bm!6168 () Bool)

(assert (=> bm!6168 (= call!6169 call!6171)))

(declare-fun b!71202 () Bool)

(declare-fun e!46621 () Bool)

(assert (=> b!71202 (= e!46621 e!46631)))

(declare-fun c!10356 () Bool)

(assert (=> b!71202 (= c!10356 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6169 () Bool)

(assert (=> bm!6169 (= call!6172 call!6167)))

(declare-fun b!71203 () Bool)

(assert (=> b!71203 (= e!46620 call!6169)))

(declare-fun b!71204 () Bool)

(declare-fun res!37961 () Bool)

(assert (=> b!71204 (=> (not res!37961) (not e!46621))))

(assert (=> b!71204 (= res!37961 e!46630)))

(declare-fun res!37960 () Bool)

(assert (=> b!71204 (=> res!37960 e!46630)))

(declare-fun e!46628 () Bool)

(assert (=> b!71204 (= res!37960 (not e!46628))))

(declare-fun res!37962 () Bool)

(assert (=> b!71204 (=> (not res!37962) (not e!46628))))

(assert (=> b!71204 (= res!37962 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71205 () Bool)

(assert (=> b!71205 (= e!46628 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71206 () Bool)

(declare-fun res!37966 () Bool)

(assert (=> b!71206 (=> (not res!37966) (not e!46621))))

(assert (=> b!71206 (= res!37966 e!46623)))

(declare-fun c!10354 () Bool)

(assert (=> b!71206 (= c!10354 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!71207 () Bool)

(declare-fun lt!31533 () Unit!1989)

(assert (=> b!71207 (= e!46629 lt!31533)))

(declare-fun lt!31517 () ListLongMap!1397)

(assert (=> b!71207 (= lt!31517 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31531 () (_ BitVec 64))

(assert (=> b!71207 (= lt!31531 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31518 () (_ BitVec 64))

(assert (=> b!71207 (= lt!31518 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31519 () Unit!1989)

(assert (=> b!71207 (= lt!31519 (addStillContains!50 lt!31517 lt!31531 (zeroValue!2095 newMap!16) lt!31518))))

(assert (=> b!71207 (contains!716 (+!91 lt!31517 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16))) lt!31518)))

(declare-fun lt!31530 () Unit!1989)

(assert (=> b!71207 (= lt!31530 lt!31519)))

(declare-fun lt!31523 () ListLongMap!1397)

(assert (=> b!71207 (= lt!31523 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31528 () (_ BitVec 64))

(assert (=> b!71207 (= lt!31528 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31529 () (_ BitVec 64))

(assert (=> b!71207 (= lt!31529 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31526 () Unit!1989)

(assert (=> b!71207 (= lt!31526 (addApplyDifferent!50 lt!31523 lt!31528 (minValue!2095 newMap!16) lt!31529))))

(assert (=> b!71207 (= (apply!74 (+!91 lt!31523 (tuple2!2113 lt!31528 (minValue!2095 newMap!16))) lt!31529) (apply!74 lt!31523 lt!31529))))

(declare-fun lt!31520 () Unit!1989)

(assert (=> b!71207 (= lt!31520 lt!31526)))

(declare-fun lt!31532 () ListLongMap!1397)

(assert (=> b!71207 (= lt!31532 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31534 () (_ BitVec 64))

(assert (=> b!71207 (= lt!31534 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31538 () (_ BitVec 64))

(assert (=> b!71207 (= lt!31538 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31527 () Unit!1989)

(assert (=> b!71207 (= lt!31527 (addApplyDifferent!50 lt!31532 lt!31534 (zeroValue!2095 newMap!16) lt!31538))))

(assert (=> b!71207 (= (apply!74 (+!91 lt!31532 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16))) lt!31538) (apply!74 lt!31532 lt!31538))))

(declare-fun lt!31537 () Unit!1989)

(assert (=> b!71207 (= lt!31537 lt!31527)))

(declare-fun lt!31536 () ListLongMap!1397)

(assert (=> b!71207 (= lt!31536 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31525 () (_ BitVec 64))

(assert (=> b!71207 (= lt!31525 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31521 () (_ BitVec 64))

(assert (=> b!71207 (= lt!31521 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71207 (= lt!31533 (addApplyDifferent!50 lt!31536 lt!31525 (minValue!2095 newMap!16) lt!31521))))

(assert (=> b!71207 (= (apply!74 (+!91 lt!31536 (tuple2!2113 lt!31525 (minValue!2095 newMap!16))) lt!31521) (apply!74 lt!31536 lt!31521))))

(declare-fun b!71208 () Bool)

(declare-fun e!46627 () Bool)

(assert (=> b!71208 (= e!46631 e!46627)))

(declare-fun res!37959 () Bool)

(assert (=> b!71208 (= res!37959 call!6173)))

(assert (=> b!71208 (=> (not res!37959) (not e!46627))))

(declare-fun b!71209 () Bool)

(assert (=> b!71209 (= e!46623 e!46619)))

(declare-fun res!37967 () Bool)

(assert (=> b!71209 (= res!37967 call!6170)))

(assert (=> b!71209 (=> (not res!37967) (not e!46619))))

(declare-fun d!15835 () Bool)

(assert (=> d!15835 e!46621))

(declare-fun res!37963 () Bool)

(assert (=> d!15835 (=> (not res!37963) (not e!46621))))

(assert (=> d!15835 (= res!37963 (or (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))))

(declare-fun lt!31524 () ListLongMap!1397)

(assert (=> d!15835 (= lt!31535 lt!31524)))

(declare-fun lt!31522 () Unit!1989)

(assert (=> d!15835 (= lt!31522 e!46629)))

(declare-fun c!10351 () Bool)

(declare-fun e!46622 () Bool)

(assert (=> d!15835 (= c!10351 e!46622)))

(declare-fun res!37964 () Bool)

(assert (=> d!15835 (=> (not res!37964) (not e!46622))))

(assert (=> d!15835 (= res!37964 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!15835 (= lt!31524 e!46626)))

(assert (=> d!15835 (= c!10355 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!15835 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15835 (= (getCurrentListMap!407 (_keys!3838 newMap!16) (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31535)))

(declare-fun b!71210 () Bool)

(assert (=> b!71210 (= e!46627 (= (apply!74 lt!31535 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun b!71211 () Bool)

(assert (=> b!71211 (= e!46622 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71212 () Bool)

(assert (=> b!71212 (= e!46626 (+!91 call!6171 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun bm!6170 () Bool)

(assert (=> bm!6170 (= call!6168 call!6172)))

(assert (= (and d!15835 c!10355) b!71212))

(assert (= (and d!15835 (not c!10355)) b!71200))

(assert (= (and b!71200 c!10353) b!71203))

(assert (= (and b!71200 (not c!10353)) b!71196))

(assert (= (and b!71196 c!10352) b!71193))

(assert (= (and b!71196 (not c!10352)) b!71201))

(assert (= (or b!71193 b!71201) bm!6170))

(assert (= (or b!71203 bm!6170) bm!6169))

(assert (= (or b!71203 b!71193) bm!6168))

(assert (= (or b!71212 bm!6169) bm!6165))

(assert (= (or b!71212 bm!6168) bm!6166))

(assert (= (and d!15835 res!37964) b!71211))

(assert (= (and d!15835 c!10351) b!71207))

(assert (= (and d!15835 (not c!10351)) b!71194))

(assert (= (and d!15835 res!37963) b!71204))

(assert (= (and b!71204 res!37962) b!71205))

(assert (= (and b!71204 (not res!37960)) b!71195))

(assert (= (and b!71195 res!37965) b!71198))

(assert (= (and b!71204 res!37961) b!71206))

(assert (= (and b!71206 c!10354) b!71209))

(assert (= (and b!71206 (not c!10354)) b!71197))

(assert (= (and b!71209 res!37967) b!71192))

(assert (= (or b!71209 b!71197) bm!6167))

(assert (= (and b!71206 res!37966) b!71202))

(assert (= (and b!71202 c!10356) b!71208))

(assert (= (and b!71202 (not c!10356)) b!71199))

(assert (= (and b!71208 res!37959) b!71210))

(assert (= (or b!71208 b!71199) bm!6164))

(declare-fun b_lambda!3189 () Bool)

(assert (=> (not b_lambda!3189) (not b!71198)))

(assert (=> b!71198 t!5019))

(declare-fun b_and!4385 () Bool)

(assert (= b_and!4381 (and (=> t!5019 result!2661) b_and!4385)))

(assert (=> b!71198 t!5021))

(declare-fun b_and!4387 () Bool)

(assert (= b_and!4383 (and (=> t!5021 result!2663) b_and!4387)))

(declare-fun m!68151 () Bool)

(assert (=> b!71212 m!68151))

(assert (=> b!71211 m!67861))

(assert (=> b!71211 m!67861))

(assert (=> b!71211 m!67863))

(assert (=> b!71198 m!67865))

(assert (=> b!71198 m!67861))

(declare-fun m!68153 () Bool)

(assert (=> b!71198 m!68153))

(assert (=> b!71198 m!67865))

(declare-fun m!68155 () Bool)

(assert (=> b!71198 m!68155))

(assert (=> b!71198 m!67861))

(declare-fun m!68157 () Bool)

(assert (=> b!71198 m!68157))

(assert (=> b!71198 m!68153))

(assert (=> b!71205 m!67861))

(assert (=> b!71205 m!67861))

(assert (=> b!71205 m!67863))

(assert (=> d!15835 m!67873))

(assert (=> b!71195 m!67861))

(assert (=> b!71195 m!67861))

(declare-fun m!68159 () Bool)

(assert (=> b!71195 m!68159))

(declare-fun m!68161 () Bool)

(assert (=> b!71192 m!68161))

(declare-fun m!68163 () Bool)

(assert (=> bm!6167 m!68163))

(declare-fun m!68165 () Bool)

(assert (=> bm!6166 m!68165))

(declare-fun m!68167 () Bool)

(assert (=> bm!6165 m!68167))

(declare-fun m!68169 () Bool)

(assert (=> bm!6164 m!68169))

(declare-fun m!68171 () Bool)

(assert (=> b!71210 m!68171))

(declare-fun m!68173 () Bool)

(assert (=> b!71207 m!68173))

(declare-fun m!68175 () Bool)

(assert (=> b!71207 m!68175))

(declare-fun m!68177 () Bool)

(assert (=> b!71207 m!68177))

(assert (=> b!71207 m!68167))

(assert (=> b!71207 m!67861))

(declare-fun m!68179 () Bool)

(assert (=> b!71207 m!68179))

(declare-fun m!68181 () Bool)

(assert (=> b!71207 m!68181))

(assert (=> b!71207 m!68179))

(declare-fun m!68183 () Bool)

(assert (=> b!71207 m!68183))

(declare-fun m!68185 () Bool)

(assert (=> b!71207 m!68185))

(assert (=> b!71207 m!68181))

(declare-fun m!68187 () Bool)

(assert (=> b!71207 m!68187))

(declare-fun m!68189 () Bool)

(assert (=> b!71207 m!68189))

(declare-fun m!68191 () Bool)

(assert (=> b!71207 m!68191))

(declare-fun m!68193 () Bool)

(assert (=> b!71207 m!68193))

(declare-fun m!68195 () Bool)

(assert (=> b!71207 m!68195))

(declare-fun m!68197 () Bool)

(assert (=> b!71207 m!68197))

(assert (=> b!71207 m!68189))

(declare-fun m!68199 () Bool)

(assert (=> b!71207 m!68199))

(assert (=> b!71207 m!68197))

(declare-fun m!68201 () Bool)

(assert (=> b!71207 m!68201))

(assert (=> bm!6123 d!15835))

(declare-fun d!15837 () Bool)

(declare-fun e!46633 () Bool)

(assert (=> d!15837 e!46633))

(declare-fun res!37968 () Bool)

(assert (=> d!15837 (=> res!37968 e!46633)))

(declare-fun lt!31541 () Bool)

(assert (=> d!15837 (= res!37968 (not lt!31541))))

(declare-fun lt!31539 () Bool)

(assert (=> d!15837 (= lt!31541 lt!31539)))

(declare-fun lt!31540 () Unit!1989)

(declare-fun e!46632 () Unit!1989)

(assert (=> d!15837 (= lt!31540 e!46632)))

(declare-fun c!10357 () Bool)

(assert (=> d!15837 (= c!10357 lt!31539)))

(assert (=> d!15837 (= lt!31539 (containsKey!134 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!15837 (= (contains!716 lt!31388 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!31541)))

(declare-fun b!71213 () Bool)

(declare-fun lt!31542 () Unit!1989)

(assert (=> b!71213 (= e!46632 lt!31542)))

(assert (=> b!71213 (= lt!31542 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71213 (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71214 () Bool)

(declare-fun Unit!2006 () Unit!1989)

(assert (=> b!71214 (= e!46632 Unit!2006)))

(declare-fun b!71215 () Bool)

(assert (=> b!71215 (= e!46633 (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!15837 c!10357) b!71213))

(assert (= (and d!15837 (not c!10357)) b!71214))

(assert (= (and d!15837 (not res!37968)) b!71215))

(assert (=> d!15837 m!67611))

(declare-fun m!68203 () Bool)

(assert (=> d!15837 m!68203))

(assert (=> b!71213 m!67611))

(declare-fun m!68205 () Bool)

(assert (=> b!71213 m!68205))

(assert (=> b!71213 m!67611))

(assert (=> b!71213 m!68001))

(assert (=> b!71213 m!68001))

(declare-fun m!68207 () Bool)

(assert (=> b!71213 m!68207))

(assert (=> b!71215 m!67611))

(assert (=> b!71215 m!68001))

(assert (=> b!71215 m!68001))

(assert (=> b!71215 m!68207))

(assert (=> b!70938 d!15837))

(declare-fun b!71216 () Bool)

(declare-fun e!46634 () Option!136)

(assert (=> b!71216 (= e!46634 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31369)))))))

(declare-fun d!15839 () Bool)

(declare-fun c!10358 () Bool)

(assert (=> d!15839 (= c!10358 (and ((_ is Cons!1475) (toList!714 lt!31369)) (= (_1!1067 (h!2061 (toList!714 lt!31369))) (_1!1067 lt!31103))))))

(assert (=> d!15839 (= (getValueByKey!130 (toList!714 lt!31369) (_1!1067 lt!31103)) e!46634)))

(declare-fun b!71217 () Bool)

(declare-fun e!46635 () Option!136)

(assert (=> b!71217 (= e!46634 e!46635)))

(declare-fun c!10359 () Bool)

(assert (=> b!71217 (= c!10359 (and ((_ is Cons!1475) (toList!714 lt!31369)) (not (= (_1!1067 (h!2061 (toList!714 lt!31369))) (_1!1067 lt!31103)))))))

(declare-fun b!71219 () Bool)

(assert (=> b!71219 (= e!46635 None!134)))

(declare-fun b!71218 () Bool)

(assert (=> b!71218 (= e!46635 (getValueByKey!130 (t!5006 (toList!714 lt!31369)) (_1!1067 lt!31103)))))

(assert (= (and d!15839 c!10358) b!71216))

(assert (= (and d!15839 (not c!10358)) b!71217))

(assert (= (and b!71217 c!10359) b!71218))

(assert (= (and b!71217 (not c!10359)) b!71219))

(declare-fun m!68209 () Bool)

(assert (=> b!71218 m!68209))

(assert (=> b!70906 d!15839))

(declare-fun d!15841 () Bool)

(assert (=> d!15841 (= (get!1138 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!70697 d!15841))

(assert (=> b!70759 d!15795))

(assert (=> b!70934 d!15801))

(declare-fun d!15843 () Bool)

(declare-fun e!46636 () Bool)

(assert (=> d!15843 e!46636))

(declare-fun res!37969 () Bool)

(assert (=> d!15843 (=> (not res!37969) (not e!46636))))

(declare-fun lt!31544 () ListLongMap!1397)

(assert (=> d!15843 (= res!37969 (contains!716 lt!31544 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!31545 () List!1479)

(assert (=> d!15843 (= lt!31544 (ListLongMap!1398 lt!31545))))

(declare-fun lt!31543 () Unit!1989)

(declare-fun lt!31546 () Unit!1989)

(assert (=> d!15843 (= lt!31543 lt!31546)))

(assert (=> d!15843 (= (getValueByKey!130 lt!31545 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15843 (= lt!31546 (lemmaContainsTupThenGetReturnValue!50 lt!31545 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15843 (= lt!31545 (insertStrictlySorted!53 (toList!714 call!6132) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!15843 (= (+!91 call!6132 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!31544)))

(declare-fun b!71220 () Bool)

(declare-fun res!37970 () Bool)

(assert (=> b!71220 (=> (not res!37970) (not e!46636))))

(assert (=> b!71220 (= res!37970 (= (getValueByKey!130 (toList!714 lt!31544) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!71221 () Bool)

(assert (=> b!71221 (= e!46636 (contains!717 (toList!714 lt!31544) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!15843 res!37969) b!71220))

(assert (= (and b!71220 res!37970) b!71221))

(declare-fun m!68211 () Bool)

(assert (=> d!15843 m!68211))

(declare-fun m!68213 () Bool)

(assert (=> d!15843 m!68213))

(declare-fun m!68215 () Bool)

(assert (=> d!15843 m!68215))

(declare-fun m!68217 () Bool)

(assert (=> d!15843 m!68217))

(declare-fun m!68219 () Bool)

(assert (=> b!71220 m!68219))

(declare-fun m!68221 () Bool)

(assert (=> b!71221 m!68221))

(assert (=> b!70934 d!15843))

(declare-fun d!15845 () Bool)

(declare-fun e!46638 () Bool)

(assert (=> d!15845 e!46638))

(declare-fun res!37971 () Bool)

(assert (=> d!15845 (=> res!37971 e!46638)))

(declare-fun lt!31549 () Bool)

(assert (=> d!15845 (= res!37971 (not lt!31549))))

(declare-fun lt!31547 () Bool)

(assert (=> d!15845 (= lt!31549 lt!31547)))

(declare-fun lt!31548 () Unit!1989)

(declare-fun e!46637 () Unit!1989)

(assert (=> d!15845 (= lt!31548 e!46637)))

(declare-fun c!10360 () Bool)

(assert (=> d!15845 (= c!10360 lt!31547)))

(assert (=> d!15845 (= lt!31547 (containsKey!134 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389))))

(assert (=> d!15845 (= (contains!716 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)) lt!31389) lt!31549)))

(declare-fun b!71222 () Bool)

(declare-fun lt!31550 () Unit!1989)

(assert (=> b!71222 (= e!46637 lt!31550)))

(assert (=> b!71222 (= lt!31550 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389))))

(assert (=> b!71222 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389))))

(declare-fun b!71223 () Bool)

(declare-fun Unit!2007 () Unit!1989)

(assert (=> b!71223 (= e!46637 Unit!2007)))

(declare-fun b!71224 () Bool)

(assert (=> b!71224 (= e!46638 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389)))))

(assert (= (and d!15845 c!10360) b!71222))

(assert (= (and d!15845 (not c!10360)) b!71223))

(assert (= (and d!15845 (not res!37971)) b!71224))

(declare-fun m!68223 () Bool)

(assert (=> d!15845 m!68223))

(declare-fun m!68225 () Bool)

(assert (=> b!71222 m!68225))

(declare-fun m!68227 () Bool)

(assert (=> b!71222 m!68227))

(assert (=> b!71222 m!68227))

(declare-fun m!68229 () Bool)

(assert (=> b!71222 m!68229))

(assert (=> b!71224 m!68227))

(assert (=> b!71224 m!68227))

(assert (=> b!71224 m!68229))

(assert (=> b!70934 d!15845))

(declare-fun d!15847 () Bool)

(assert (=> d!15847 (not (contains!716 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)) lt!31389))))

(declare-fun lt!31553 () Unit!1989)

(declare-fun choose!408 (ListLongMap!1397 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1989)

(assert (=> d!15847 (= lt!31553 (choose!408 lt!31390 lt!31387 lt!31386 lt!31389))))

(declare-fun e!46641 () Bool)

(assert (=> d!15847 e!46641))

(declare-fun res!37974 () Bool)

(assert (=> d!15847 (=> (not res!37974) (not e!46641))))

(assert (=> d!15847 (= res!37974 (not (contains!716 lt!31390 lt!31389)))))

(assert (=> d!15847 (= (addStillNotContains!24 lt!31390 lt!31387 lt!31386 lt!31389) lt!31553)))

(declare-fun b!71228 () Bool)

(assert (=> b!71228 (= e!46641 (not (= lt!31387 lt!31389)))))

(assert (= (and d!15847 res!37974) b!71228))

(assert (=> d!15847 m!67795))

(assert (=> d!15847 m!67795))

(assert (=> d!15847 m!67799))

(declare-fun m!68231 () Bool)

(assert (=> d!15847 m!68231))

(declare-fun m!68233 () Bool)

(assert (=> d!15847 m!68233))

(assert (=> b!70934 d!15847))

(declare-fun d!15849 () Bool)

(declare-fun e!46642 () Bool)

(assert (=> d!15849 e!46642))

(declare-fun res!37975 () Bool)

(assert (=> d!15849 (=> (not res!37975) (not e!46642))))

(declare-fun lt!31555 () ListLongMap!1397)

(assert (=> d!15849 (= res!37975 (contains!716 lt!31555 (_1!1067 (tuple2!2113 lt!31387 lt!31386))))))

(declare-fun lt!31556 () List!1479)

(assert (=> d!15849 (= lt!31555 (ListLongMap!1398 lt!31556))))

(declare-fun lt!31554 () Unit!1989)

(declare-fun lt!31557 () Unit!1989)

(assert (=> d!15849 (= lt!31554 lt!31557)))

(assert (=> d!15849 (= (getValueByKey!130 lt!31556 (_1!1067 (tuple2!2113 lt!31387 lt!31386))) (Some!135 (_2!1067 (tuple2!2113 lt!31387 lt!31386))))))

(assert (=> d!15849 (= lt!31557 (lemmaContainsTupThenGetReturnValue!50 lt!31556 (_1!1067 (tuple2!2113 lt!31387 lt!31386)) (_2!1067 (tuple2!2113 lt!31387 lt!31386))))))

(assert (=> d!15849 (= lt!31556 (insertStrictlySorted!53 (toList!714 lt!31390) (_1!1067 (tuple2!2113 lt!31387 lt!31386)) (_2!1067 (tuple2!2113 lt!31387 lt!31386))))))

(assert (=> d!15849 (= (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)) lt!31555)))

(declare-fun b!71229 () Bool)

(declare-fun res!37976 () Bool)

(assert (=> b!71229 (=> (not res!37976) (not e!46642))))

(assert (=> b!71229 (= res!37976 (= (getValueByKey!130 (toList!714 lt!31555) (_1!1067 (tuple2!2113 lt!31387 lt!31386))) (Some!135 (_2!1067 (tuple2!2113 lt!31387 lt!31386)))))))

(declare-fun b!71230 () Bool)

(assert (=> b!71230 (= e!46642 (contains!717 (toList!714 lt!31555) (tuple2!2113 lt!31387 lt!31386)))))

(assert (= (and d!15849 res!37975) b!71229))

(assert (= (and b!71229 res!37976) b!71230))

(declare-fun m!68235 () Bool)

(assert (=> d!15849 m!68235))

(declare-fun m!68237 () Bool)

(assert (=> d!15849 m!68237))

(declare-fun m!68239 () Bool)

(assert (=> d!15849 m!68239))

(declare-fun m!68241 () Bool)

(assert (=> d!15849 m!68241))

(declare-fun m!68243 () Bool)

(assert (=> b!71229 m!68243))

(declare-fun m!68245 () Bool)

(assert (=> b!71230 m!68245))

(assert (=> b!70934 d!15849))

(assert (=> d!15751 d!15755))

(declare-fun d!15851 () Bool)

(assert (=> d!15851 (not (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!15851 true))

(declare-fun _$68!52 () Unit!1989)

(assert (=> d!15851 (= (choose!68 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477)) _$68!52)))

(declare-fun bs!3046 () Bool)

(assert (= bs!3046 d!15851))

(assert (=> bs!3046 m!67435))

(assert (=> bs!3046 m!67469))

(assert (=> d!15751 d!15851))

(declare-fun d!15853 () Bool)

(declare-fun lt!31560 () Bool)

(declare-fun content!76 (List!1479) (InoxSet tuple2!2112))

(assert (=> d!15853 (= lt!31560 (select (content!76 (toList!714 lt!31365)) lt!31109))))

(declare-fun e!46647 () Bool)

(assert (=> d!15853 (= lt!31560 e!46647)))

(declare-fun res!37982 () Bool)

(assert (=> d!15853 (=> (not res!37982) (not e!46647))))

(assert (=> d!15853 (= res!37982 ((_ is Cons!1475) (toList!714 lt!31365)))))

(assert (=> d!15853 (= (contains!717 (toList!714 lt!31365) lt!31109) lt!31560)))

(declare-fun b!71235 () Bool)

(declare-fun e!46648 () Bool)

(assert (=> b!71235 (= e!46647 e!46648)))

(declare-fun res!37981 () Bool)

(assert (=> b!71235 (=> res!37981 e!46648)))

(assert (=> b!71235 (= res!37981 (= (h!2061 (toList!714 lt!31365)) lt!31109))))

(declare-fun b!71236 () Bool)

(assert (=> b!71236 (= e!46648 (contains!717 (t!5006 (toList!714 lt!31365)) lt!31109))))

(assert (= (and d!15853 res!37982) b!71235))

(assert (= (and b!71235 (not res!37981)) b!71236))

(declare-fun m!68247 () Bool)

(assert (=> d!15853 m!68247))

(declare-fun m!68249 () Bool)

(assert (=> d!15853 m!68249))

(declare-fun m!68251 () Bool)

(assert (=> b!71236 m!68251))

(assert (=> b!70905 d!15853))

(declare-fun d!15855 () Bool)

(declare-fun e!46650 () Bool)

(assert (=> d!15855 e!46650))

(declare-fun res!37983 () Bool)

(assert (=> d!15855 (=> res!37983 e!46650)))

(declare-fun lt!31563 () Bool)

(assert (=> d!15855 (= res!37983 (not lt!31563))))

(declare-fun lt!31561 () Bool)

(assert (=> d!15855 (= lt!31563 lt!31561)))

(declare-fun lt!31562 () Unit!1989)

(declare-fun e!46649 () Unit!1989)

(assert (=> d!15855 (= lt!31562 e!46649)))

(declare-fun c!10361 () Bool)

(assert (=> d!15855 (= c!10361 lt!31561)))

(assert (=> d!15855 (= lt!31561 (containsKey!134 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15855 (= (contains!716 call!6109 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) lt!31563)))

(declare-fun b!71237 () Bool)

(declare-fun lt!31564 () Unit!1989)

(assert (=> b!71237 (= e!46649 lt!31564)))

(assert (=> b!71237 (= lt!31564 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!71237 (isDefined!84 (getValueByKey!130 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!71238 () Bool)

(declare-fun Unit!2008 () Unit!1989)

(assert (=> b!71238 (= e!46649 Unit!2008)))

(declare-fun b!71239 () Bool)

(assert (=> b!71239 (= e!46650 (isDefined!84 (getValueByKey!130 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!15855 c!10361) b!71237))

(assert (= (and d!15855 (not c!10361)) b!71238))

(assert (= (and d!15855 (not res!37983)) b!71239))

(assert (=> d!15855 m!67435))

(declare-fun m!68253 () Bool)

(assert (=> d!15855 m!68253))

(assert (=> b!71237 m!67435))

(declare-fun m!68255 () Bool)

(assert (=> b!71237 m!68255))

(assert (=> b!71237 m!67435))

(declare-fun m!68257 () Bool)

(assert (=> b!71237 m!68257))

(assert (=> b!71237 m!68257))

(declare-fun m!68259 () Bool)

(assert (=> b!71237 m!68259))

(assert (=> b!71239 m!67435))

(assert (=> b!71239 m!68257))

(assert (=> b!71239 m!68257))

(assert (=> b!71239 m!68259))

(assert (=> b!70873 d!15855))

(declare-fun d!15857 () Bool)

(declare-fun e!46652 () Bool)

(assert (=> d!15857 e!46652))

(declare-fun res!37984 () Bool)

(assert (=> d!15857 (=> res!37984 e!46652)))

(declare-fun lt!31567 () Bool)

(assert (=> d!15857 (= res!37984 (not lt!31567))))

(declare-fun lt!31565 () Bool)

(assert (=> d!15857 (= lt!31567 lt!31565)))

(declare-fun lt!31566 () Unit!1989)

(declare-fun e!46651 () Unit!1989)

(assert (=> d!15857 (= lt!31566 e!46651)))

(declare-fun c!10362 () Bool)

(assert (=> d!15857 (= c!10362 lt!31565)))

(assert (=> d!15857 (= lt!31565 (containsKey!134 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15857 (= (contains!716 lt!31388 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31567)))

(declare-fun b!71240 () Bool)

(declare-fun lt!31568 () Unit!1989)

(assert (=> b!71240 (= e!46651 lt!31568)))

(assert (=> b!71240 (= lt!31568 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71240 (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71241 () Bool)

(declare-fun Unit!2009 () Unit!1989)

(assert (=> b!71241 (= e!46651 Unit!2009)))

(declare-fun b!71242 () Bool)

(assert (=> b!71242 (= e!46652 (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15857 c!10362) b!71240))

(assert (= (and d!15857 (not c!10362)) b!71241))

(assert (= (and d!15857 (not res!37984)) b!71242))

(declare-fun m!68261 () Bool)

(assert (=> d!15857 m!68261))

(declare-fun m!68263 () Bool)

(assert (=> b!71240 m!68263))

(declare-fun m!68265 () Bool)

(assert (=> b!71240 m!68265))

(assert (=> b!71240 m!68265))

(declare-fun m!68267 () Bool)

(assert (=> b!71240 m!68267))

(assert (=> b!71242 m!68265))

(assert (=> b!71242 m!68265))

(assert (=> b!71242 m!68267))

(assert (=> d!15749 d!15857))

(assert (=> d!15749 d!15745))

(assert (=> b!70887 d!15819))

(declare-fun d!15859 () Bool)

(assert (=> d!15859 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31329 (zeroValue!2095 newMap!16) lt!31106 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31571 () Unit!1989)

(declare-fun choose!409 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 V!2937 Int) Unit!1989)

(assert (=> d!15859 (= lt!31571 (choose!409 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) lt!31329 (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) lt!31106 (defaultEntry!2191 newMap!16)))))

(assert (=> d!15859 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15859 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) lt!31329 (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) lt!31106 (defaultEntry!2191 newMap!16)) lt!31571)))

(declare-fun bs!3047 () Bool)

(assert (= bs!3047 d!15859))

(assert (=> bs!3047 m!67607))

(declare-fun m!68269 () Bool)

(assert (=> bs!3047 m!68269))

(declare-fun m!68271 () Bool)

(assert (=> bs!3047 m!68271))

(assert (=> bs!3047 m!67607))

(declare-fun m!68273 () Bool)

(assert (=> bs!3047 m!68273))

(assert (=> bs!3047 m!67873))

(assert (=> b!70871 d!15859))

(assert (=> b!70753 d!15795))

(declare-fun d!15861 () Bool)

(declare-fun lt!31572 () Bool)

(assert (=> d!15861 (= lt!31572 (select (content!76 (toList!714 lt!31358)) lt!31109))))

(declare-fun e!46653 () Bool)

(assert (=> d!15861 (= lt!31572 e!46653)))

(declare-fun res!37986 () Bool)

(assert (=> d!15861 (=> (not res!37986) (not e!46653))))

(assert (=> d!15861 (= res!37986 ((_ is Cons!1475) (toList!714 lt!31358)))))

(assert (=> d!15861 (= (contains!717 (toList!714 lt!31358) lt!31109) lt!31572)))

(declare-fun b!71243 () Bool)

(declare-fun e!46654 () Bool)

(assert (=> b!71243 (= e!46653 e!46654)))

(declare-fun res!37985 () Bool)

(assert (=> b!71243 (=> res!37985 e!46654)))

(assert (=> b!71243 (= res!37985 (= (h!2061 (toList!714 lt!31358)) lt!31109))))

(declare-fun b!71244 () Bool)

(assert (=> b!71244 (= e!46654 (contains!717 (t!5006 (toList!714 lt!31358)) lt!31109))))

(assert (= (and d!15861 res!37986) b!71243))

(assert (= (and b!71243 (not res!37985)) b!71244))

(declare-fun m!68275 () Bool)

(assert (=> d!15861 m!68275))

(declare-fun m!68277 () Bool)

(assert (=> d!15861 m!68277))

(declare-fun m!68279 () Bool)

(assert (=> b!71244 m!68279))

(assert (=> b!70903 d!15861))

(declare-fun d!15863 () Bool)

(declare-fun e!46656 () Bool)

(assert (=> d!15863 e!46656))

(declare-fun res!37987 () Bool)

(assert (=> d!15863 (=> res!37987 e!46656)))

(declare-fun lt!31575 () Bool)

(assert (=> d!15863 (= res!37987 (not lt!31575))))

(declare-fun lt!31573 () Bool)

(assert (=> d!15863 (= lt!31575 lt!31573)))

(declare-fun lt!31574 () Unit!1989)

(declare-fun e!46655 () Unit!1989)

(assert (=> d!15863 (= lt!31574 e!46655)))

(declare-fun c!10363 () Bool)

(assert (=> d!15863 (= c!10363 lt!31573)))

(assert (=> d!15863 (= lt!31573 (containsKey!134 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15863 (= (contains!716 lt!31248 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31575)))

(declare-fun b!71245 () Bool)

(declare-fun lt!31576 () Unit!1989)

(assert (=> b!71245 (= e!46655 lt!31576)))

(assert (=> b!71245 (= lt!31576 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71245 (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71246 () Bool)

(declare-fun Unit!2010 () Unit!1989)

(assert (=> b!71246 (= e!46655 Unit!2010)))

(declare-fun b!71247 () Bool)

(assert (=> b!71247 (= e!46656 (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15863 c!10363) b!71245))

(assert (= (and d!15863 (not c!10363)) b!71246))

(assert (= (and d!15863 (not res!37987)) b!71247))

(declare-fun m!68281 () Bool)

(assert (=> d!15863 m!68281))

(declare-fun m!68283 () Bool)

(assert (=> b!71245 m!68283))

(declare-fun m!68285 () Bool)

(assert (=> b!71245 m!68285))

(assert (=> b!71245 m!68285))

(declare-fun m!68287 () Bool)

(assert (=> b!71245 m!68287))

(assert (=> b!71247 m!68285))

(assert (=> b!71247 m!68285))

(assert (=> b!71247 m!68287))

(assert (=> bm!6048 d!15863))

(declare-fun d!15865 () Bool)

(assert (=> d!15865 (contains!716 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31231)))

(declare-fun lt!31579 () Unit!1989)

(declare-fun choose!410 (ListLongMap!1397 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1989)

(assert (=> d!15865 (= lt!31579 (choose!410 lt!31230 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31231))))

(assert (=> d!15865 (contains!716 lt!31230 lt!31231)))

(assert (=> d!15865 (= (addStillContains!50 lt!31230 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31231) lt!31579)))

(declare-fun bs!3048 () Bool)

(assert (= bs!3048 d!15865))

(assert (=> bs!3048 m!67639))

(assert (=> bs!3048 m!67639))

(assert (=> bs!3048 m!67643))

(declare-fun m!68289 () Bool)

(assert (=> bs!3048 m!68289))

(declare-fun m!68291 () Bool)

(assert (=> bs!3048 m!68291))

(assert (=> b!70755 d!15865))

(declare-fun d!15867 () Bool)

(declare-fun e!46657 () Bool)

(assert (=> d!15867 e!46657))

(declare-fun res!37988 () Bool)

(assert (=> d!15867 (=> (not res!37988) (not e!46657))))

(declare-fun lt!31581 () ListLongMap!1397)

(assert (=> d!15867 (= res!37988 (contains!716 lt!31581 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!31582 () List!1479)

(assert (=> d!15867 (= lt!31581 (ListLongMap!1398 lt!31582))))

(declare-fun lt!31580 () Unit!1989)

(declare-fun lt!31583 () Unit!1989)

(assert (=> d!15867 (= lt!31580 lt!31583)))

(assert (=> d!15867 (= (getValueByKey!130 lt!31582 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15867 (= lt!31583 (lemmaContainsTupThenGetReturnValue!50 lt!31582 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15867 (= lt!31582 (insertStrictlySorted!53 (toList!714 lt!31245) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15867 (= (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31581)))

(declare-fun b!71249 () Bool)

(declare-fun res!37989 () Bool)

(assert (=> b!71249 (=> (not res!37989) (not e!46657))))

(assert (=> b!71249 (= res!37989 (= (getValueByKey!130 (toList!714 lt!31581) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71250 () Bool)

(assert (=> b!71250 (= e!46657 (contains!717 (toList!714 lt!31581) (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!15867 res!37988) b!71249))

(assert (= (and b!71249 res!37989) b!71250))

(declare-fun m!68293 () Bool)

(assert (=> d!15867 m!68293))

(declare-fun m!68295 () Bool)

(assert (=> d!15867 m!68295))

(declare-fun m!68297 () Bool)

(assert (=> d!15867 m!68297))

(declare-fun m!68299 () Bool)

(assert (=> d!15867 m!68299))

(declare-fun m!68301 () Bool)

(assert (=> b!71249 m!68301))

(declare-fun m!68303 () Bool)

(assert (=> b!71250 m!68303))

(assert (=> b!70755 d!15867))

(declare-fun d!15869 () Bool)

(assert (=> d!15869 (= (apply!74 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31251) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31251)))))

(declare-fun bs!3049 () Bool)

(assert (= bs!3049 d!15869))

(declare-fun m!68305 () Bool)

(assert (=> bs!3049 m!68305))

(assert (=> bs!3049 m!68305))

(declare-fun m!68307 () Bool)

(assert (=> bs!3049 m!68307))

(assert (=> b!70755 d!15869))

(assert (=> b!70755 d!15749))

(declare-fun d!15871 () Bool)

(declare-fun e!46658 () Bool)

(assert (=> d!15871 e!46658))

(declare-fun res!37990 () Bool)

(assert (=> d!15871 (=> (not res!37990) (not e!46658))))

(declare-fun lt!31585 () ListLongMap!1397)

(assert (=> d!15871 (= res!37990 (contains!716 lt!31585 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!31586 () List!1479)

(assert (=> d!15871 (= lt!31585 (ListLongMap!1398 lt!31586))))

(declare-fun lt!31584 () Unit!1989)

(declare-fun lt!31587 () Unit!1989)

(assert (=> d!15871 (= lt!31584 lt!31587)))

(assert (=> d!15871 (= (getValueByKey!130 lt!31586 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15871 (= lt!31587 (lemmaContainsTupThenGetReturnValue!50 lt!31586 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15871 (= lt!31586 (insertStrictlySorted!53 (toList!714 lt!31230) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15871 (= (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31585)))

(declare-fun b!71251 () Bool)

(declare-fun res!37991 () Bool)

(assert (=> b!71251 (=> (not res!37991) (not e!46658))))

(assert (=> b!71251 (= res!37991 (= (getValueByKey!130 (toList!714 lt!31585) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71252 () Bool)

(assert (=> b!71252 (= e!46658 (contains!717 (toList!714 lt!31585) (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!15871 res!37990) b!71251))

(assert (= (and b!71251 res!37991) b!71252))

(declare-fun m!68309 () Bool)

(assert (=> d!15871 m!68309))

(declare-fun m!68311 () Bool)

(assert (=> d!15871 m!68311))

(declare-fun m!68313 () Bool)

(assert (=> d!15871 m!68313))

(declare-fun m!68315 () Bool)

(assert (=> d!15871 m!68315))

(declare-fun m!68317 () Bool)

(assert (=> b!71251 m!68317))

(declare-fun m!68319 () Bool)

(assert (=> b!71252 m!68319))

(assert (=> b!70755 d!15871))

(declare-fun d!15873 () Bool)

(assert (=> d!15873 (= (apply!74 lt!31245 lt!31251) (get!1139 (getValueByKey!130 (toList!714 lt!31245) lt!31251)))))

(declare-fun bs!3050 () Bool)

(assert (= bs!3050 d!15873))

(declare-fun m!68321 () Bool)

(assert (=> bs!3050 m!68321))

(assert (=> bs!3050 m!68321))

(declare-fun m!68323 () Bool)

(assert (=> bs!3050 m!68323))

(assert (=> b!70755 d!15873))

(declare-fun d!15875 () Bool)

(assert (=> d!15875 (= (apply!74 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31234) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31234)))))

(declare-fun bs!3051 () Bool)

(assert (= bs!3051 d!15875))

(declare-fun m!68325 () Bool)

(assert (=> bs!3051 m!68325))

(assert (=> bs!3051 m!68325))

(declare-fun m!68327 () Bool)

(assert (=> bs!3051 m!68327))

(assert (=> b!70755 d!15875))

(declare-fun d!15877 () Bool)

(assert (=> d!15877 (= (apply!74 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31234) (apply!74 lt!31249 lt!31234))))

(declare-fun lt!31590 () Unit!1989)

(declare-fun choose!411 (ListLongMap!1397 (_ BitVec 64) V!2937 (_ BitVec 64)) Unit!1989)

(assert (=> d!15877 (= lt!31590 (choose!411 lt!31249 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31234))))

(declare-fun e!46661 () Bool)

(assert (=> d!15877 e!46661))

(declare-fun res!37994 () Bool)

(assert (=> d!15877 (=> (not res!37994) (not e!46661))))

(assert (=> d!15877 (= res!37994 (contains!716 lt!31249 lt!31234))))

(assert (=> d!15877 (= (addApplyDifferent!50 lt!31249 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31234) lt!31590)))

(declare-fun b!71256 () Bool)

(assert (=> b!71256 (= e!46661 (not (= lt!31234 lt!31238)))))

(assert (= (and d!15877 res!37994) b!71256))

(declare-fun m!68329 () Bool)

(assert (=> d!15877 m!68329))

(assert (=> d!15877 m!67635))

(declare-fun m!68331 () Bool)

(assert (=> d!15877 m!68331))

(assert (=> d!15877 m!67657))

(assert (=> d!15877 m!67661))

(assert (=> d!15877 m!67657))

(assert (=> b!70755 d!15877))

(declare-fun d!15879 () Bool)

(declare-fun e!46662 () Bool)

(assert (=> d!15879 e!46662))

(declare-fun res!37995 () Bool)

(assert (=> d!15879 (=> (not res!37995) (not e!46662))))

(declare-fun lt!31592 () ListLongMap!1397)

(assert (=> d!15879 (= res!37995 (contains!716 lt!31592 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!31593 () List!1479)

(assert (=> d!15879 (= lt!31592 (ListLongMap!1398 lt!31593))))

(declare-fun lt!31591 () Unit!1989)

(declare-fun lt!31594 () Unit!1989)

(assert (=> d!15879 (= lt!31591 lt!31594)))

(assert (=> d!15879 (= (getValueByKey!130 lt!31593 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15879 (= lt!31594 (lemmaContainsTupThenGetReturnValue!50 lt!31593 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15879 (= lt!31593 (insertStrictlySorted!53 (toList!714 lt!31236) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15879 (= (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31592)))

(declare-fun b!71257 () Bool)

(declare-fun res!37996 () Bool)

(assert (=> b!71257 (=> (not res!37996) (not e!46662))))

(assert (=> b!71257 (= res!37996 (= (getValueByKey!130 (toList!714 lt!31592) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71258 () Bool)

(assert (=> b!71258 (= e!46662 (contains!717 (toList!714 lt!31592) (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!15879 res!37995) b!71257))

(assert (= (and b!71257 res!37996) b!71258))

(declare-fun m!68333 () Bool)

(assert (=> d!15879 m!68333))

(declare-fun m!68335 () Bool)

(assert (=> d!15879 m!68335))

(declare-fun m!68337 () Bool)

(assert (=> d!15879 m!68337))

(declare-fun m!68339 () Bool)

(assert (=> d!15879 m!68339))

(declare-fun m!68341 () Bool)

(assert (=> b!71257 m!68341))

(declare-fun m!68343 () Bool)

(assert (=> b!71258 m!68343))

(assert (=> b!70755 d!15879))

(declare-fun d!15881 () Bool)

(assert (=> d!15881 (= (apply!74 lt!31236 lt!31242) (get!1139 (getValueByKey!130 (toList!714 lt!31236) lt!31242)))))

(declare-fun bs!3052 () Bool)

(assert (= bs!3052 d!15881))

(declare-fun m!68345 () Bool)

(assert (=> bs!3052 m!68345))

(assert (=> bs!3052 m!68345))

(declare-fun m!68347 () Bool)

(assert (=> bs!3052 m!68347))

(assert (=> b!70755 d!15881))

(declare-fun d!15883 () Bool)

(declare-fun e!46664 () Bool)

(assert (=> d!15883 e!46664))

(declare-fun res!37997 () Bool)

(assert (=> d!15883 (=> res!37997 e!46664)))

(declare-fun lt!31597 () Bool)

(assert (=> d!15883 (= res!37997 (not lt!31597))))

(declare-fun lt!31595 () Bool)

(assert (=> d!15883 (= lt!31597 lt!31595)))

(declare-fun lt!31596 () Unit!1989)

(declare-fun e!46663 () Unit!1989)

(assert (=> d!15883 (= lt!31596 e!46663)))

(declare-fun c!10364 () Bool)

(assert (=> d!15883 (= c!10364 lt!31595)))

(assert (=> d!15883 (= lt!31595 (containsKey!134 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231))))

(assert (=> d!15883 (= (contains!716 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31231) lt!31597)))

(declare-fun b!71259 () Bool)

(declare-fun lt!31598 () Unit!1989)

(assert (=> b!71259 (= e!46663 lt!31598)))

(assert (=> b!71259 (= lt!31598 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231))))

(assert (=> b!71259 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231))))

(declare-fun b!71260 () Bool)

(declare-fun Unit!2011 () Unit!1989)

(assert (=> b!71260 (= e!46663 Unit!2011)))

(declare-fun b!71261 () Bool)

(assert (=> b!71261 (= e!46664 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231)))))

(assert (= (and d!15883 c!10364) b!71259))

(assert (= (and d!15883 (not c!10364)) b!71260))

(assert (= (and d!15883 (not res!37997)) b!71261))

(declare-fun m!68349 () Bool)

(assert (=> d!15883 m!68349))

(declare-fun m!68351 () Bool)

(assert (=> b!71259 m!68351))

(declare-fun m!68353 () Bool)

(assert (=> b!71259 m!68353))

(assert (=> b!71259 m!68353))

(declare-fun m!68355 () Bool)

(assert (=> b!71259 m!68355))

(assert (=> b!71261 m!68353))

(assert (=> b!71261 m!68353))

(assert (=> b!71261 m!68355))

(assert (=> b!70755 d!15883))

(declare-fun d!15885 () Bool)

(assert (=> d!15885 (= (apply!74 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31242) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31242)))))

(declare-fun bs!3053 () Bool)

(assert (= bs!3053 d!15885))

(declare-fun m!68357 () Bool)

(assert (=> bs!3053 m!68357))

(assert (=> bs!3053 m!68357))

(declare-fun m!68359 () Bool)

(assert (=> bs!3053 m!68359))

(assert (=> b!70755 d!15885))

(declare-fun d!15887 () Bool)

(assert (=> d!15887 (= (apply!74 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31251) (apply!74 lt!31245 lt!31251))))

(declare-fun lt!31599 () Unit!1989)

(assert (=> d!15887 (= lt!31599 (choose!411 lt!31245 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31251))))

(declare-fun e!46665 () Bool)

(assert (=> d!15887 e!46665))

(declare-fun res!37998 () Bool)

(assert (=> d!15887 (=> (not res!37998) (not e!46665))))

(assert (=> d!15887 (= res!37998 (contains!716 lt!31245 lt!31251))))

(assert (=> d!15887 (= (addApplyDifferent!50 lt!31245 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31251) lt!31599)))

(declare-fun b!71262 () Bool)

(assert (=> b!71262 (= e!46665 (not (= lt!31251 lt!31247)))))

(assert (= (and d!15887 res!37998) b!71262))

(declare-fun m!68361 () Bool)

(assert (=> d!15887 m!68361))

(assert (=> d!15887 m!67655))

(declare-fun m!68363 () Bool)

(assert (=> d!15887 m!68363))

(assert (=> d!15887 m!67649))

(assert (=> d!15887 m!67659))

(assert (=> d!15887 m!67649))

(assert (=> b!70755 d!15887))

(declare-fun d!15889 () Bool)

(declare-fun e!46666 () Bool)

(assert (=> d!15889 e!46666))

(declare-fun res!37999 () Bool)

(assert (=> d!15889 (=> (not res!37999) (not e!46666))))

(declare-fun lt!31601 () ListLongMap!1397)

(assert (=> d!15889 (= res!37999 (contains!716 lt!31601 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!31602 () List!1479)

(assert (=> d!15889 (= lt!31601 (ListLongMap!1398 lt!31602))))

(declare-fun lt!31600 () Unit!1989)

(declare-fun lt!31603 () Unit!1989)

(assert (=> d!15889 (= lt!31600 lt!31603)))

(assert (=> d!15889 (= (getValueByKey!130 lt!31602 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15889 (= lt!31603 (lemmaContainsTupThenGetReturnValue!50 lt!31602 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15889 (= lt!31602 (insertStrictlySorted!53 (toList!714 lt!31249) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15889 (= (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31601)))

(declare-fun b!71263 () Bool)

(declare-fun res!38000 () Bool)

(assert (=> b!71263 (=> (not res!38000) (not e!46666))))

(assert (=> b!71263 (= res!38000 (= (getValueByKey!130 (toList!714 lt!31601) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71264 () Bool)

(assert (=> b!71264 (= e!46666 (contains!717 (toList!714 lt!31601) (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!15889 res!37999) b!71263))

(assert (= (and b!71263 res!38000) b!71264))

(declare-fun m!68365 () Bool)

(assert (=> d!15889 m!68365))

(declare-fun m!68367 () Bool)

(assert (=> d!15889 m!68367))

(declare-fun m!68369 () Bool)

(assert (=> d!15889 m!68369))

(declare-fun m!68371 () Bool)

(assert (=> d!15889 m!68371))

(declare-fun m!68373 () Bool)

(assert (=> b!71263 m!68373))

(declare-fun m!68375 () Bool)

(assert (=> b!71264 m!68375))

(assert (=> b!70755 d!15889))

(declare-fun d!15891 () Bool)

(assert (=> d!15891 (= (apply!74 lt!31249 lt!31234) (get!1139 (getValueByKey!130 (toList!714 lt!31249) lt!31234)))))

(declare-fun bs!3054 () Bool)

(assert (= bs!3054 d!15891))

(declare-fun m!68377 () Bool)

(assert (=> bs!3054 m!68377))

(assert (=> bs!3054 m!68377))

(declare-fun m!68379 () Bool)

(assert (=> bs!3054 m!68379))

(assert (=> b!70755 d!15891))

(declare-fun d!15893 () Bool)

(assert (=> d!15893 (= (apply!74 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31242) (apply!74 lt!31236 lt!31242))))

(declare-fun lt!31604 () Unit!1989)

(assert (=> d!15893 (= lt!31604 (choose!411 lt!31236 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31242))))

(declare-fun e!46667 () Bool)

(assert (=> d!15893 e!46667))

(declare-fun res!38001 () Bool)

(assert (=> d!15893 (=> (not res!38001) (not e!46667))))

(assert (=> d!15893 (= res!38001 (contains!716 lt!31236 lt!31242))))

(assert (=> d!15893 (= (addApplyDifferent!50 lt!31236 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31242) lt!31604)))

(declare-fun b!71265 () Bool)

(assert (=> b!71265 (= e!46667 (not (= lt!31242 lt!31241)))))

(assert (= (and d!15893 res!38001) b!71265))

(declare-fun m!68381 () Bool)

(assert (=> d!15893 m!68381))

(assert (=> d!15893 m!67637))

(declare-fun m!68383 () Bool)

(assert (=> d!15893 m!68383))

(assert (=> d!15893 m!67641))

(assert (=> d!15893 m!67647))

(assert (=> d!15893 m!67641))

(assert (=> b!70755 d!15893))

(declare-fun d!15895 () Bool)

(declare-fun e!46669 () Bool)

(assert (=> d!15895 e!46669))

(declare-fun res!38002 () Bool)

(assert (=> d!15895 (=> res!38002 e!46669)))

(declare-fun lt!31607 () Bool)

(assert (=> d!15895 (= res!38002 (not lt!31607))))

(declare-fun lt!31605 () Bool)

(assert (=> d!15895 (= lt!31607 lt!31605)))

(declare-fun lt!31606 () Unit!1989)

(declare-fun e!46668 () Unit!1989)

(assert (=> d!15895 (= lt!31606 e!46668)))

(declare-fun c!10365 () Bool)

(assert (=> d!15895 (= c!10365 lt!31605)))

(assert (=> d!15895 (= lt!31605 (containsKey!134 (toList!714 lt!31369) (_1!1067 lt!31103)))))

(assert (=> d!15895 (= (contains!716 lt!31369 (_1!1067 lt!31103)) lt!31607)))

(declare-fun b!71266 () Bool)

(declare-fun lt!31608 () Unit!1989)

(assert (=> b!71266 (= e!46668 lt!31608)))

(assert (=> b!71266 (= lt!31608 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31369) (_1!1067 lt!31103)))))

(assert (=> b!71266 (isDefined!84 (getValueByKey!130 (toList!714 lt!31369) (_1!1067 lt!31103)))))

(declare-fun b!71267 () Bool)

(declare-fun Unit!2012 () Unit!1989)

(assert (=> b!71267 (= e!46668 Unit!2012)))

(declare-fun b!71268 () Bool)

(assert (=> b!71268 (= e!46669 (isDefined!84 (getValueByKey!130 (toList!714 lt!31369) (_1!1067 lt!31103))))))

(assert (= (and d!15895 c!10365) b!71266))

(assert (= (and d!15895 (not c!10365)) b!71267))

(assert (= (and d!15895 (not res!38002)) b!71268))

(declare-fun m!68385 () Bool)

(assert (=> d!15895 m!68385))

(declare-fun m!68387 () Bool)

(assert (=> b!71266 m!68387))

(assert (=> b!71266 m!67779))

(assert (=> b!71266 m!67779))

(declare-fun m!68389 () Bool)

(assert (=> b!71266 m!68389))

(assert (=> b!71268 m!67779))

(assert (=> b!71268 m!67779))

(assert (=> b!71268 m!68389))

(assert (=> d!15747 d!15895))

(declare-fun b!71269 () Bool)

(declare-fun e!46670 () Option!136)

(assert (=> b!71269 (= e!46670 (Some!135 (_2!1067 (h!2061 lt!31370))))))

(declare-fun d!15897 () Bool)

(declare-fun c!10366 () Bool)

(assert (=> d!15897 (= c!10366 (and ((_ is Cons!1475) lt!31370) (= (_1!1067 (h!2061 lt!31370)) (_1!1067 lt!31103))))))

(assert (=> d!15897 (= (getValueByKey!130 lt!31370 (_1!1067 lt!31103)) e!46670)))

(declare-fun b!71270 () Bool)

(declare-fun e!46671 () Option!136)

(assert (=> b!71270 (= e!46670 e!46671)))

(declare-fun c!10367 () Bool)

(assert (=> b!71270 (= c!10367 (and ((_ is Cons!1475) lt!31370) (not (= (_1!1067 (h!2061 lt!31370)) (_1!1067 lt!31103)))))))

(declare-fun b!71272 () Bool)

(assert (=> b!71272 (= e!46671 None!134)))

(declare-fun b!71271 () Bool)

(assert (=> b!71271 (= e!46671 (getValueByKey!130 (t!5006 lt!31370) (_1!1067 lt!31103)))))

(assert (= (and d!15897 c!10366) b!71269))

(assert (= (and d!15897 (not c!10366)) b!71270))

(assert (= (and b!71270 c!10367) b!71271))

(assert (= (and b!71270 (not c!10367)) b!71272))

(declare-fun m!68391 () Bool)

(assert (=> b!71271 m!68391))

(assert (=> d!15747 d!15897))

(declare-fun d!15899 () Bool)

(assert (=> d!15899 (= (getValueByKey!130 lt!31370 (_1!1067 lt!31103)) (Some!135 (_2!1067 lt!31103)))))

(declare-fun lt!31609 () Unit!1989)

(assert (=> d!15899 (= lt!31609 (choose!404 lt!31370 (_1!1067 lt!31103) (_2!1067 lt!31103)))))

(declare-fun e!46672 () Bool)

(assert (=> d!15899 e!46672))

(declare-fun res!38003 () Bool)

(assert (=> d!15899 (=> (not res!38003) (not e!46672))))

(assert (=> d!15899 (= res!38003 (isStrictlySorted!286 lt!31370))))

(assert (=> d!15899 (= (lemmaContainsTupThenGetReturnValue!50 lt!31370 (_1!1067 lt!31103) (_2!1067 lt!31103)) lt!31609)))

(declare-fun b!71273 () Bool)

(declare-fun res!38004 () Bool)

(assert (=> b!71273 (=> (not res!38004) (not e!46672))))

(assert (=> b!71273 (= res!38004 (containsKey!134 lt!31370 (_1!1067 lt!31103)))))

(declare-fun b!71274 () Bool)

(assert (=> b!71274 (= e!46672 (contains!717 lt!31370 (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(assert (= (and d!15899 res!38003) b!71273))

(assert (= (and b!71273 res!38004) b!71274))

(assert (=> d!15899 m!67773))

(declare-fun m!68393 () Bool)

(assert (=> d!15899 m!68393))

(declare-fun m!68395 () Bool)

(assert (=> d!15899 m!68395))

(declare-fun m!68397 () Bool)

(assert (=> b!71273 m!68397))

(declare-fun m!68399 () Bool)

(assert (=> b!71274 m!68399))

(assert (=> d!15747 d!15899))

(declare-fun b!71275 () Bool)

(declare-fun e!46675 () Bool)

(declare-fun lt!31610 () List!1479)

(assert (=> b!71275 (= e!46675 (contains!717 lt!31610 (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun b!71276 () Bool)

(declare-fun e!46673 () List!1479)

(assert (=> b!71276 (= e!46673 (insertStrictlySorted!53 (t!5006 (toList!714 (+!91 lt!31105 lt!31109))) (_1!1067 lt!31103) (_2!1067 lt!31103)))))

(declare-fun d!15901 () Bool)

(assert (=> d!15901 e!46675))

(declare-fun res!38006 () Bool)

(assert (=> d!15901 (=> (not res!38006) (not e!46675))))

(assert (=> d!15901 (= res!38006 (isStrictlySorted!286 lt!31610))))

(declare-fun e!46674 () List!1479)

(assert (=> d!15901 (= lt!31610 e!46674)))

(declare-fun c!10371 () Bool)

(assert (=> d!15901 (= c!10371 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 lt!31109))) (bvslt (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 lt!31109)))) (_1!1067 lt!31103))))))

(assert (=> d!15901 (isStrictlySorted!286 (toList!714 (+!91 lt!31105 lt!31109)))))

(assert (=> d!15901 (= (insertStrictlySorted!53 (toList!714 (+!91 lt!31105 lt!31109)) (_1!1067 lt!31103) (_2!1067 lt!31103)) lt!31610)))

(declare-fun c!10370 () Bool)

(declare-fun b!71277 () Bool)

(assert (=> b!71277 (= c!10370 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 lt!31109))) (bvsgt (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 lt!31109)))) (_1!1067 lt!31103))))))

(declare-fun e!46677 () List!1479)

(declare-fun e!46676 () List!1479)

(assert (=> b!71277 (= e!46677 e!46676)))

(declare-fun b!71278 () Bool)

(assert (=> b!71278 (= e!46674 e!46677)))

(declare-fun c!10369 () Bool)

(assert (=> b!71278 (= c!10369 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 lt!31109))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 lt!31109)))) (_1!1067 lt!31103))))))

(declare-fun b!71279 () Bool)

(declare-fun call!6176 () List!1479)

(assert (=> b!71279 (= e!46677 call!6176)))

(declare-fun b!71280 () Bool)

(declare-fun res!38005 () Bool)

(assert (=> b!71280 (=> (not res!38005) (not e!46675))))

(assert (=> b!71280 (= res!38005 (containsKey!134 lt!31610 (_1!1067 lt!31103)))))

(declare-fun b!71281 () Bool)

(assert (=> b!71281 (= e!46673 (ite c!10369 (t!5006 (toList!714 (+!91 lt!31105 lt!31109))) (ite c!10370 (Cons!1475 (h!2061 (toList!714 (+!91 lt!31105 lt!31109))) (t!5006 (toList!714 (+!91 lt!31105 lt!31109)))) Nil!1476)))))

(declare-fun b!71282 () Bool)

(declare-fun call!6175 () List!1479)

(assert (=> b!71282 (= e!46674 call!6175)))

(declare-fun b!71283 () Bool)

(declare-fun call!6174 () List!1479)

(assert (=> b!71283 (= e!46676 call!6174)))

(declare-fun bm!6171 () Bool)

(assert (=> bm!6171 (= call!6174 call!6176)))

(declare-fun bm!6172 () Bool)

(assert (=> bm!6172 (= call!6176 call!6175)))

(declare-fun bm!6173 () Bool)

(assert (=> bm!6173 (= call!6175 ($colon$colon!64 e!46673 (ite c!10371 (h!2061 (toList!714 (+!91 lt!31105 lt!31109))) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103)))))))

(declare-fun c!10368 () Bool)

(assert (=> bm!6173 (= c!10368 c!10371)))

(declare-fun b!71284 () Bool)

(assert (=> b!71284 (= e!46676 call!6174)))

(assert (= (and d!15901 c!10371) b!71282))

(assert (= (and d!15901 (not c!10371)) b!71278))

(assert (= (and b!71278 c!10369) b!71279))

(assert (= (and b!71278 (not c!10369)) b!71277))

(assert (= (and b!71277 c!10370) b!71283))

(assert (= (and b!71277 (not c!10370)) b!71284))

(assert (= (or b!71283 b!71284) bm!6171))

(assert (= (or b!71279 bm!6171) bm!6172))

(assert (= (or b!71282 bm!6172) bm!6173))

(assert (= (and bm!6173 c!10368) b!71276))

(assert (= (and bm!6173 (not c!10368)) b!71281))

(assert (= (and d!15901 res!38006) b!71280))

(assert (= (and b!71280 res!38005) b!71275))

(declare-fun m!68401 () Bool)

(assert (=> b!71275 m!68401))

(declare-fun m!68403 () Bool)

(assert (=> b!71276 m!68403))

(declare-fun m!68405 () Bool)

(assert (=> b!71280 m!68405))

(declare-fun m!68407 () Bool)

(assert (=> bm!6173 m!68407))

(declare-fun m!68409 () Bool)

(assert (=> d!15901 m!68409))

(declare-fun m!68411 () Bool)

(assert (=> d!15901 m!68411))

(assert (=> d!15747 d!15901))

(declare-fun d!15903 () Bool)

(declare-fun lt!31611 () Bool)

(assert (=> d!15903 (= lt!31611 (select (content!76 (toList!714 lt!31354)) lt!31103))))

(declare-fun e!46678 () Bool)

(assert (=> d!15903 (= lt!31611 e!46678)))

(declare-fun res!38008 () Bool)

(assert (=> d!15903 (=> (not res!38008) (not e!46678))))

(assert (=> d!15903 (= res!38008 ((_ is Cons!1475) (toList!714 lt!31354)))))

(assert (=> d!15903 (= (contains!717 (toList!714 lt!31354) lt!31103) lt!31611)))

(declare-fun b!71285 () Bool)

(declare-fun e!46679 () Bool)

(assert (=> b!71285 (= e!46678 e!46679)))

(declare-fun res!38007 () Bool)

(assert (=> b!71285 (=> res!38007 e!46679)))

(assert (=> b!71285 (= res!38007 (= (h!2061 (toList!714 lt!31354)) lt!31103))))

(declare-fun b!71286 () Bool)

(assert (=> b!71286 (= e!46679 (contains!717 (t!5006 (toList!714 lt!31354)) lt!31103))))

(assert (= (and d!15903 res!38008) b!71285))

(assert (= (and b!71285 (not res!38007)) b!71286))

(declare-fun m!68413 () Bool)

(assert (=> d!15903 m!68413))

(declare-fun m!68415 () Bool)

(assert (=> d!15903 m!68415))

(declare-fun m!68417 () Bool)

(assert (=> b!71286 m!68417))

(assert (=> b!70901 d!15903))

(declare-fun d!15905 () Bool)

(declare-fun res!38013 () Bool)

(declare-fun e!46684 () Bool)

(assert (=> d!15905 (=> res!38013 e!46684)))

(assert (=> d!15905 (= res!38013 (and ((_ is Cons!1475) (toList!714 lt!31108)) (= (_1!1067 (h!2061 (toList!714 lt!31108))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!15905 (= (containsKey!134 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) e!46684)))

(declare-fun b!71291 () Bool)

(declare-fun e!46685 () Bool)

(assert (=> b!71291 (= e!46684 e!46685)))

(declare-fun res!38014 () Bool)

(assert (=> b!71291 (=> (not res!38014) (not e!46685))))

(assert (=> b!71291 (= res!38014 (and (or (not ((_ is Cons!1475) (toList!714 lt!31108))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31108))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1475) (toList!714 lt!31108)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31108))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!71292 () Bool)

(assert (=> b!71292 (= e!46685 (containsKey!134 (t!5006 (toList!714 lt!31108)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!15905 (not res!38013)) b!71291))

(assert (= (and b!71291 res!38014) b!71292))

(assert (=> b!71292 m!67435))

(declare-fun m!68419 () Bool)

(assert (=> b!71292 m!68419))

(assert (=> d!15733 d!15905))

(declare-fun d!15907 () Bool)

(declare-fun e!46686 () Bool)

(assert (=> d!15907 e!46686))

(declare-fun res!38015 () Bool)

(assert (=> d!15907 (=> (not res!38015) (not e!46686))))

(declare-fun lt!31613 () ListLongMap!1397)

(assert (=> d!15907 (= res!38015 (contains!716 lt!31613 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun lt!31614 () List!1479)

(assert (=> d!15907 (= lt!31613 (ListLongMap!1398 lt!31614))))

(declare-fun lt!31612 () Unit!1989)

(declare-fun lt!31615 () Unit!1989)

(assert (=> d!15907 (= lt!31612 lt!31615)))

(assert (=> d!15907 (= (getValueByKey!130 lt!31614 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) (Some!135 (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!15907 (= lt!31615 (lemmaContainsTupThenGetReturnValue!50 lt!31614 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!15907 (= lt!31614 (insertStrictlySorted!53 (toList!714 e!46423) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!15907 (= (+!91 e!46423 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!31613)))

(declare-fun b!71293 () Bool)

(declare-fun res!38016 () Bool)

(assert (=> b!71293 (=> (not res!38016) (not e!46686))))

(assert (=> b!71293 (= res!38016 (= (getValueByKey!130 (toList!714 lt!31613) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) (Some!135 (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun b!71294 () Bool)

(assert (=> b!71294 (= e!46686 (contains!717 (toList!714 lt!31613) (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (= (and d!15907 res!38015) b!71293))

(assert (= (and b!71293 res!38016) b!71294))

(declare-fun m!68421 () Bool)

(assert (=> d!15907 m!68421))

(declare-fun m!68423 () Bool)

(assert (=> d!15907 m!68423))

(declare-fun m!68425 () Bool)

(assert (=> d!15907 m!68425))

(declare-fun m!68427 () Bool)

(assert (=> d!15907 m!68427))

(declare-fun m!68429 () Bool)

(assert (=> b!71293 m!68429))

(declare-fun m!68431 () Bool)

(assert (=> b!71294 m!68431))

(assert (=> bm!6109 d!15907))

(assert (=> b!70881 d!15819))

(declare-fun d!15909 () Bool)

(declare-fun e!46689 () Bool)

(assert (=> d!15909 e!46689))

(declare-fun res!38021 () Bool)

(assert (=> d!15909 (=> (not res!38021) (not e!46689))))

(declare-fun lt!31621 () SeekEntryResult!238)

(assert (=> d!15909 (= res!38021 ((_ is Found!238) lt!31621))))

(assert (=> d!15909 (= lt!31621 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(declare-fun lt!31620 () Unit!1989)

(declare-fun choose!412 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) Int) Unit!1989)

(assert (=> d!15909 (= lt!31620 (choose!412 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(assert (=> d!15909 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15909 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)) lt!31620)))

(declare-fun b!71299 () Bool)

(declare-fun res!38022 () Bool)

(assert (=> b!71299 (=> (not res!38022) (not e!46689))))

(assert (=> b!71299 (= res!38022 (inRange!0 (index!3083 lt!31621) (mask!6147 newMap!16)))))

(declare-fun b!71300 () Bool)

(assert (=> b!71300 (= e!46689 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31621)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!71300 (and (bvsge (index!3083 lt!31621) #b00000000000000000000000000000000) (bvslt (index!3083 lt!31621) (size!2078 (_keys!3838 newMap!16))))))

(assert (= (and d!15909 res!38021) b!71299))

(assert (= (and b!71299 res!38022) b!71300))

(assert (=> d!15909 m!67435))

(assert (=> d!15909 m!67689))

(assert (=> d!15909 m!67435))

(declare-fun m!68433 () Bool)

(assert (=> d!15909 m!68433))

(assert (=> d!15909 m!67873))

(declare-fun m!68435 () Bool)

(assert (=> b!71299 m!68435))

(declare-fun m!68437 () Bool)

(assert (=> b!71300 m!68437))

(assert (=> bm!6117 d!15909))

(assert (=> b!70940 d!15795))

(declare-fun bm!6176 () Bool)

(declare-fun call!6179 () Bool)

(assert (=> bm!6176 (= call!6179 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(declare-fun b!71309 () Bool)

(declare-fun e!46697 () Bool)

(declare-fun e!46698 () Bool)

(assert (=> b!71309 (= e!46697 e!46698)))

(declare-fun lt!31629 () (_ BitVec 64))

(assert (=> b!71309 (= lt!31629 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31630 () Unit!1989)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3857 (_ BitVec 64) (_ BitVec 32)) Unit!1989)

(assert (=> b!71309 (= lt!31630 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3838 newMap!16) lt!31629 #b00000000000000000000000000000000))))

(assert (=> b!71309 (arrayContainsKey!0 (_keys!3838 newMap!16) lt!31629 #b00000000000000000000000000000000)))

(declare-fun lt!31628 () Unit!1989)

(assert (=> b!71309 (= lt!31628 lt!31630)))

(declare-fun res!38027 () Bool)

(assert (=> b!71309 (= res!38027 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) (_keys!3838 newMap!16) (mask!6147 newMap!16)) (Found!238 #b00000000000000000000000000000000)))))

(assert (=> b!71309 (=> (not res!38027) (not e!46698))))

(declare-fun b!71310 () Bool)

(assert (=> b!71310 (= e!46698 call!6179)))

(declare-fun d!15911 () Bool)

(declare-fun res!38028 () Bool)

(declare-fun e!46696 () Bool)

(assert (=> d!15911 (=> res!38028 e!46696)))

(assert (=> d!15911 (= res!38028 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!15911 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3838 newMap!16) (mask!6147 newMap!16)) e!46696)))

(declare-fun b!71311 () Bool)

(assert (=> b!71311 (= e!46696 e!46697)))

(declare-fun c!10374 () Bool)

(assert (=> b!71311 (= c!10374 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71312 () Bool)

(assert (=> b!71312 (= e!46697 call!6179)))

(assert (= (and d!15911 (not res!38028)) b!71311))

(assert (= (and b!71311 c!10374) b!71309))

(assert (= (and b!71311 (not c!10374)) b!71312))

(assert (= (and b!71309 res!38027) b!71310))

(assert (= (or b!71310 b!71312) bm!6176))

(declare-fun m!68439 () Bool)

(assert (=> bm!6176 m!68439))

(assert (=> b!71309 m!67861))

(declare-fun m!68441 () Bool)

(assert (=> b!71309 m!68441))

(declare-fun m!68443 () Bool)

(assert (=> b!71309 m!68443))

(assert (=> b!71309 m!67861))

(declare-fun m!68445 () Bool)

(assert (=> b!71309 m!68445))

(assert (=> b!71311 m!67861))

(assert (=> b!71311 m!67861))

(assert (=> b!71311 m!67863))

(assert (=> b!70978 d!15911))

(declare-fun d!15913 () Bool)

(declare-fun e!46700 () Bool)

(assert (=> d!15913 e!46700))

(declare-fun res!38029 () Bool)

(assert (=> d!15913 (=> res!38029 e!46700)))

(declare-fun lt!31633 () Bool)

(assert (=> d!15913 (= res!38029 (not lt!31633))))

(declare-fun lt!31631 () Bool)

(assert (=> d!15913 (= lt!31633 lt!31631)))

(declare-fun lt!31632 () Unit!1989)

(declare-fun e!46699 () Unit!1989)

(assert (=> d!15913 (= lt!31632 e!46699)))

(declare-fun c!10375 () Bool)

(assert (=> d!15913 (= c!10375 lt!31631)))

(assert (=> d!15913 (= lt!31631 (containsKey!134 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15913 (= (contains!716 lt!31388 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31633)))

(declare-fun b!71313 () Bool)

(declare-fun lt!31634 () Unit!1989)

(assert (=> b!71313 (= e!46699 lt!31634)))

(assert (=> b!71313 (= lt!31634 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71313 (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71314 () Bool)

(declare-fun Unit!2013 () Unit!1989)

(assert (=> b!71314 (= e!46699 Unit!2013)))

(declare-fun b!71315 () Bool)

(assert (=> b!71315 (= e!46700 (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15913 c!10375) b!71313))

(assert (= (and d!15913 (not c!10375)) b!71314))

(assert (= (and d!15913 (not res!38029)) b!71315))

(declare-fun m!68447 () Bool)

(assert (=> d!15913 m!68447))

(declare-fun m!68449 () Bool)

(assert (=> b!71313 m!68449))

(declare-fun m!68451 () Bool)

(assert (=> b!71313 m!68451))

(assert (=> b!71313 m!68451))

(declare-fun m!68453 () Bool)

(assert (=> b!71313 m!68453))

(assert (=> b!71315 m!68451))

(assert (=> b!71315 m!68451))

(assert (=> b!71315 m!68453))

(assert (=> b!70937 d!15913))

(declare-fun d!15915 () Bool)

(assert (=> d!15915 (= (map!1145 (_2!1068 lt!31326)) (getCurrentListMap!407 (_keys!3838 (_2!1068 lt!31326)) (_values!2174 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326)) (extraKeys!2054 (_2!1068 lt!31326)) (zeroValue!2095 (_2!1068 lt!31326)) (minValue!2095 (_2!1068 lt!31326)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1068 lt!31326))))))

(declare-fun bs!3055 () Bool)

(assert (= bs!3055 d!15915))

(declare-fun m!68455 () Bool)

(assert (=> bs!3055 m!68455))

(assert (=> bm!6107 d!15915))

(assert (=> bm!6129 d!15793))

(declare-fun d!15917 () Bool)

(declare-fun lt!31635 () Bool)

(assert (=> d!15917 (= lt!31635 (select (content!76 (toList!714 lt!31369)) lt!31103))))

(declare-fun e!46701 () Bool)

(assert (=> d!15917 (= lt!31635 e!46701)))

(declare-fun res!38031 () Bool)

(assert (=> d!15917 (=> (not res!38031) (not e!46701))))

(assert (=> d!15917 (= res!38031 ((_ is Cons!1475) (toList!714 lt!31369)))))

(assert (=> d!15917 (= (contains!717 (toList!714 lt!31369) lt!31103) lt!31635)))

(declare-fun b!71316 () Bool)

(declare-fun e!46702 () Bool)

(assert (=> b!71316 (= e!46701 e!46702)))

(declare-fun res!38030 () Bool)

(assert (=> b!71316 (=> res!38030 e!46702)))

(assert (=> b!71316 (= res!38030 (= (h!2061 (toList!714 lt!31369)) lt!31103))))

(declare-fun b!71317 () Bool)

(assert (=> b!71317 (= e!46702 (contains!717 (t!5006 (toList!714 lt!31369)) lt!31103))))

(assert (= (and d!15917 res!38031) b!71316))

(assert (= (and b!71316 (not res!38030)) b!71317))

(declare-fun m!68457 () Bool)

(assert (=> d!15917 m!68457))

(declare-fun m!68459 () Bool)

(assert (=> d!15917 m!68459))

(declare-fun m!68461 () Bool)

(assert (=> b!71317 m!68461))

(assert (=> b!70907 d!15917))

(declare-fun d!15919 () Bool)

(declare-fun e!46704 () Bool)

(assert (=> d!15919 e!46704))

(declare-fun res!38032 () Bool)

(assert (=> d!15919 (=> res!38032 e!46704)))

(declare-fun lt!31638 () Bool)

(assert (=> d!15919 (= res!38032 (not lt!31638))))

(declare-fun lt!31636 () Bool)

(assert (=> d!15919 (= lt!31638 lt!31636)))

(declare-fun lt!31637 () Unit!1989)

(declare-fun e!46703 () Unit!1989)

(assert (=> d!15919 (= lt!31637 e!46703)))

(declare-fun c!10376 () Bool)

(assert (=> d!15919 (= c!10376 lt!31636)))

(assert (=> d!15919 (= lt!31636 (containsKey!134 (toList!714 lt!31354) (_1!1067 lt!31103)))))

(assert (=> d!15919 (= (contains!716 lt!31354 (_1!1067 lt!31103)) lt!31638)))

(declare-fun b!71318 () Bool)

(declare-fun lt!31639 () Unit!1989)

(assert (=> b!71318 (= e!46703 lt!31639)))

(assert (=> b!71318 (= lt!31639 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31354) (_1!1067 lt!31103)))))

(assert (=> b!71318 (isDefined!84 (getValueByKey!130 (toList!714 lt!31354) (_1!1067 lt!31103)))))

(declare-fun b!71319 () Bool)

(declare-fun Unit!2014 () Unit!1989)

(assert (=> b!71319 (= e!46703 Unit!2014)))

(declare-fun b!71320 () Bool)

(assert (=> b!71320 (= e!46704 (isDefined!84 (getValueByKey!130 (toList!714 lt!31354) (_1!1067 lt!31103))))))

(assert (= (and d!15919 c!10376) b!71318))

(assert (= (and d!15919 (not c!10376)) b!71319))

(assert (= (and d!15919 (not res!38032)) b!71320))

(declare-fun m!68463 () Bool)

(assert (=> d!15919 m!68463))

(declare-fun m!68465 () Bool)

(assert (=> b!71318 m!68465))

(assert (=> b!71318 m!67733))

(assert (=> b!71318 m!67733))

(declare-fun m!68467 () Bool)

(assert (=> b!71318 m!68467))

(assert (=> b!71320 m!67733))

(assert (=> b!71320 m!67733))

(assert (=> b!71320 m!68467))

(assert (=> d!15737 d!15919))

(declare-fun b!71321 () Bool)

(declare-fun e!46705 () Option!136)

(assert (=> b!71321 (= e!46705 (Some!135 (_2!1067 (h!2061 lt!31355))))))

(declare-fun d!15921 () Bool)

(declare-fun c!10377 () Bool)

(assert (=> d!15921 (= c!10377 (and ((_ is Cons!1475) lt!31355) (= (_1!1067 (h!2061 lt!31355)) (_1!1067 lt!31103))))))

(assert (=> d!15921 (= (getValueByKey!130 lt!31355 (_1!1067 lt!31103)) e!46705)))

(declare-fun b!71322 () Bool)

(declare-fun e!46706 () Option!136)

(assert (=> b!71322 (= e!46705 e!46706)))

(declare-fun c!10378 () Bool)

(assert (=> b!71322 (= c!10378 (and ((_ is Cons!1475) lt!31355) (not (= (_1!1067 (h!2061 lt!31355)) (_1!1067 lt!31103)))))))

(declare-fun b!71324 () Bool)

(assert (=> b!71324 (= e!46706 None!134)))

(declare-fun b!71323 () Bool)

(assert (=> b!71323 (= e!46706 (getValueByKey!130 (t!5006 lt!31355) (_1!1067 lt!31103)))))

(assert (= (and d!15921 c!10377) b!71321))

(assert (= (and d!15921 (not c!10377)) b!71322))

(assert (= (and b!71322 c!10378) b!71323))

(assert (= (and b!71322 (not c!10378)) b!71324))

(declare-fun m!68469 () Bool)

(assert (=> b!71323 m!68469))

(assert (=> d!15737 d!15921))

(declare-fun d!15923 () Bool)

(assert (=> d!15923 (= (getValueByKey!130 lt!31355 (_1!1067 lt!31103)) (Some!135 (_2!1067 lt!31103)))))

(declare-fun lt!31640 () Unit!1989)

(assert (=> d!15923 (= lt!31640 (choose!404 lt!31355 (_1!1067 lt!31103) (_2!1067 lt!31103)))))

(declare-fun e!46707 () Bool)

(assert (=> d!15923 e!46707))

(declare-fun res!38033 () Bool)

(assert (=> d!15923 (=> (not res!38033) (not e!46707))))

(assert (=> d!15923 (= res!38033 (isStrictlySorted!286 lt!31355))))

(assert (=> d!15923 (= (lemmaContainsTupThenGetReturnValue!50 lt!31355 (_1!1067 lt!31103) (_2!1067 lt!31103)) lt!31640)))

(declare-fun b!71325 () Bool)

(declare-fun res!38034 () Bool)

(assert (=> b!71325 (=> (not res!38034) (not e!46707))))

(assert (=> b!71325 (= res!38034 (containsKey!134 lt!31355 (_1!1067 lt!31103)))))

(declare-fun b!71326 () Bool)

(assert (=> b!71326 (= e!46707 (contains!717 lt!31355 (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(assert (= (and d!15923 res!38033) b!71325))

(assert (= (and b!71325 res!38034) b!71326))

(assert (=> d!15923 m!67727))

(declare-fun m!68471 () Bool)

(assert (=> d!15923 m!68471))

(declare-fun m!68473 () Bool)

(assert (=> d!15923 m!68473))

(declare-fun m!68475 () Bool)

(assert (=> b!71325 m!68475))

(declare-fun m!68477 () Bool)

(assert (=> b!71326 m!68477))

(assert (=> d!15737 d!15923))

(declare-fun b!71327 () Bool)

(declare-fun e!46710 () Bool)

(declare-fun lt!31641 () List!1479)

(assert (=> b!71327 (= e!46710 (contains!717 lt!31641 (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun b!71328 () Bool)

(declare-fun e!46708 () List!1479)

(assert (=> b!71328 (= e!46708 (insertStrictlySorted!53 (t!5006 (toList!714 lt!31105)) (_1!1067 lt!31103) (_2!1067 lt!31103)))))

(declare-fun d!15925 () Bool)

(assert (=> d!15925 e!46710))

(declare-fun res!38036 () Bool)

(assert (=> d!15925 (=> (not res!38036) (not e!46710))))

(assert (=> d!15925 (= res!38036 (isStrictlySorted!286 lt!31641))))

(declare-fun e!46709 () List!1479)

(assert (=> d!15925 (= lt!31641 e!46709)))

(declare-fun c!10382 () Bool)

(assert (=> d!15925 (= c!10382 (and ((_ is Cons!1475) (toList!714 lt!31105)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 lt!31103))))))

(assert (=> d!15925 (isStrictlySorted!286 (toList!714 lt!31105))))

(assert (=> d!15925 (= (insertStrictlySorted!53 (toList!714 lt!31105) (_1!1067 lt!31103) (_2!1067 lt!31103)) lt!31641)))

(declare-fun b!71329 () Bool)

(declare-fun c!10381 () Bool)

(assert (=> b!71329 (= c!10381 (and ((_ is Cons!1475) (toList!714 lt!31105)) (bvsgt (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 lt!31103))))))

(declare-fun e!46712 () List!1479)

(declare-fun e!46711 () List!1479)

(assert (=> b!71329 (= e!46712 e!46711)))

(declare-fun b!71330 () Bool)

(assert (=> b!71330 (= e!46709 e!46712)))

(declare-fun c!10380 () Bool)

(assert (=> b!71330 (= c!10380 (and ((_ is Cons!1475) (toList!714 lt!31105)) (= (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 lt!31103))))))

(declare-fun b!71331 () Bool)

(declare-fun call!6182 () List!1479)

(assert (=> b!71331 (= e!46712 call!6182)))

(declare-fun b!71332 () Bool)

(declare-fun res!38035 () Bool)

(assert (=> b!71332 (=> (not res!38035) (not e!46710))))

(assert (=> b!71332 (= res!38035 (containsKey!134 lt!31641 (_1!1067 lt!31103)))))

(declare-fun b!71333 () Bool)

(assert (=> b!71333 (= e!46708 (ite c!10380 (t!5006 (toList!714 lt!31105)) (ite c!10381 (Cons!1475 (h!2061 (toList!714 lt!31105)) (t!5006 (toList!714 lt!31105))) Nil!1476)))))

(declare-fun b!71334 () Bool)

(declare-fun call!6181 () List!1479)

(assert (=> b!71334 (= e!46709 call!6181)))

(declare-fun b!71335 () Bool)

(declare-fun call!6180 () List!1479)

(assert (=> b!71335 (= e!46711 call!6180)))

(declare-fun bm!6177 () Bool)

(assert (=> bm!6177 (= call!6180 call!6182)))

(declare-fun bm!6178 () Bool)

(assert (=> bm!6178 (= call!6182 call!6181)))

(declare-fun bm!6179 () Bool)

(assert (=> bm!6179 (= call!6181 ($colon$colon!64 e!46708 (ite c!10382 (h!2061 (toList!714 lt!31105)) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103)))))))

(declare-fun c!10379 () Bool)

(assert (=> bm!6179 (= c!10379 c!10382)))

(declare-fun b!71336 () Bool)

(assert (=> b!71336 (= e!46711 call!6180)))

(assert (= (and d!15925 c!10382) b!71334))

(assert (= (and d!15925 (not c!10382)) b!71330))

(assert (= (and b!71330 c!10380) b!71331))

(assert (= (and b!71330 (not c!10380)) b!71329))

(assert (= (and b!71329 c!10381) b!71335))

(assert (= (and b!71329 (not c!10381)) b!71336))

(assert (= (or b!71335 b!71336) bm!6177))

(assert (= (or b!71331 bm!6177) bm!6178))

(assert (= (or b!71334 bm!6178) bm!6179))

(assert (= (and bm!6179 c!10379) b!71328))

(assert (= (and bm!6179 (not c!10379)) b!71333))

(assert (= (and d!15925 res!38036) b!71332))

(assert (= (and b!71332 res!38035) b!71327))

(declare-fun m!68479 () Bool)

(assert (=> b!71327 m!68479))

(declare-fun m!68481 () Bool)

(assert (=> b!71328 m!68481))

(declare-fun m!68483 () Bool)

(assert (=> b!71332 m!68483))

(declare-fun m!68485 () Bool)

(assert (=> bm!6179 m!68485))

(declare-fun m!68487 () Bool)

(assert (=> d!15925 m!68487))

(assert (=> d!15925 m!68041))

(assert (=> d!15737 d!15925))

(declare-fun d!15927 () Bool)

(declare-fun e!46713 () Bool)

(assert (=> d!15927 e!46713))

(declare-fun res!38037 () Bool)

(assert (=> d!15927 (=> (not res!38037) (not e!46713))))

(declare-fun lt!31643 () ListLongMap!1397)

(assert (=> d!15927 (= res!38037 (contains!716 lt!31643 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun lt!31644 () List!1479)

(assert (=> d!15927 (= lt!31643 (ListLongMap!1398 lt!31644))))

(declare-fun lt!31642 () Unit!1989)

(declare-fun lt!31645 () Unit!1989)

(assert (=> d!15927 (= lt!31642 lt!31645)))

(assert (=> d!15927 (= (getValueByKey!130 lt!31644 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) (Some!135 (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!15927 (= lt!31645 (lemmaContainsTupThenGetReturnValue!50 lt!31644 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!15927 (= lt!31644 (insertStrictlySorted!53 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052))) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!15927 (= (+!91 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052)) (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31643)))

(declare-fun b!71337 () Bool)

(declare-fun res!38038 () Bool)

(assert (=> b!71337 (=> (not res!38038) (not e!46713))))

(assert (=> b!71337 (= res!38038 (= (getValueByKey!130 (toList!714 lt!31643) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) (Some!135 (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!71338 () Bool)

(assert (=> b!71338 (= e!46713 (contains!717 (toList!714 lt!31643) (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!15927 res!38037) b!71337))

(assert (= (and b!71337 res!38038) b!71338))

(declare-fun m!68489 () Bool)

(assert (=> d!15927 m!68489))

(declare-fun m!68491 () Bool)

(assert (=> d!15927 m!68491))

(declare-fun m!68493 () Bool)

(assert (=> d!15927 m!68493))

(declare-fun m!68495 () Bool)

(assert (=> d!15927 m!68495))

(declare-fun m!68497 () Bool)

(assert (=> b!71337 m!68497))

(declare-fun m!68499 () Bool)

(assert (=> b!71338 m!68499))

(assert (=> bm!6050 d!15927))

(declare-fun b!71355 () Bool)

(declare-fun e!46725 () Bool)

(declare-fun call!6188 () Bool)

(assert (=> b!71355 (= e!46725 (not call!6188))))

(declare-fun b!71356 () Bool)

(declare-fun e!46722 () Bool)

(declare-fun lt!31650 () SeekEntryResult!238)

(assert (=> b!71356 (= e!46722 ((_ is Undefined!238) lt!31650))))

(declare-fun d!15929 () Bool)

(declare-fun e!46723 () Bool)

(assert (=> d!15929 e!46723))

(declare-fun c!10388 () Bool)

(assert (=> d!15929 (= c!10388 ((_ is MissingZero!238) lt!31650))))

(assert (=> d!15929 (= lt!31650 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(declare-fun lt!31651 () Unit!1989)

(declare-fun choose!413 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) Int) Unit!1989)

(assert (=> d!15929 (= lt!31651 (choose!413 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(assert (=> d!15929 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15929 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)) lt!31651)))

(declare-fun b!71357 () Bool)

(declare-fun e!46724 () Bool)

(assert (=> b!71357 (= e!46724 (not call!6188))))

(declare-fun b!71358 () Bool)

(assert (=> b!71358 (= e!46723 e!46724)))

(declare-fun res!38048 () Bool)

(declare-fun call!6187 () Bool)

(assert (=> b!71358 (= res!38048 call!6187)))

(assert (=> b!71358 (=> (not res!38048) (not e!46724))))

(declare-fun bm!6184 () Bool)

(assert (=> bm!6184 (= call!6187 (inRange!0 (ite c!10388 (index!3082 lt!31650) (index!3085 lt!31650)) (mask!6147 newMap!16)))))

(declare-fun b!71359 () Bool)

(assert (=> b!71359 (and (bvsge (index!3082 lt!31650) #b00000000000000000000000000000000) (bvslt (index!3082 lt!31650) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun res!38049 () Bool)

(assert (=> b!71359 (= res!38049 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3082 lt!31650)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71359 (=> (not res!38049) (not e!46724))))

(declare-fun b!71360 () Bool)

(declare-fun res!38050 () Bool)

(assert (=> b!71360 (=> (not res!38050) (not e!46725))))

(assert (=> b!71360 (= res!38050 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3085 lt!31650)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71360 (and (bvsge (index!3085 lt!31650) #b00000000000000000000000000000000) (bvslt (index!3085 lt!31650) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun bm!6185 () Bool)

(assert (=> bm!6185 (= call!6188 (arrayContainsKey!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!71361 () Bool)

(assert (=> b!71361 (= e!46723 e!46722)))

(declare-fun c!10387 () Bool)

(assert (=> b!71361 (= c!10387 ((_ is MissingVacant!238) lt!31650))))

(declare-fun b!71362 () Bool)

(declare-fun res!38047 () Bool)

(assert (=> b!71362 (=> (not res!38047) (not e!46725))))

(assert (=> b!71362 (= res!38047 call!6187)))

(assert (=> b!71362 (= e!46722 e!46725)))

(assert (= (and d!15929 c!10388) b!71358))

(assert (= (and d!15929 (not c!10388)) b!71361))

(assert (= (and b!71358 res!38048) b!71359))

(assert (= (and b!71359 res!38049) b!71357))

(assert (= (and b!71361 c!10387) b!71362))

(assert (= (and b!71361 (not c!10387)) b!71356))

(assert (= (and b!71362 res!38047) b!71360))

(assert (= (and b!71360 res!38050) b!71355))

(assert (= (or b!71358 b!71362) bm!6184))

(assert (= (or b!71357 b!71355) bm!6185))

(assert (=> d!15929 m!67435))

(assert (=> d!15929 m!67689))

(assert (=> d!15929 m!67435))

(declare-fun m!68501 () Bool)

(assert (=> d!15929 m!68501))

(assert (=> d!15929 m!67873))

(declare-fun m!68503 () Bool)

(assert (=> b!71359 m!68503))

(declare-fun m!68505 () Bool)

(assert (=> b!71360 m!68505))

(assert (=> bm!6185 m!67435))

(assert (=> bm!6185 m!67699))

(declare-fun m!68507 () Bool)

(assert (=> bm!6184 m!68507))

(assert (=> bm!6114 d!15929))

(assert (=> bm!6049 d!15749))

(declare-fun d!15931 () Bool)

(assert (=> d!15931 (= (get!1137 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) from!355) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2506 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!70696 d!15931))

(declare-fun b!71372 () Bool)

(declare-fun res!38059 () Bool)

(declare-fun e!46728 () Bool)

(assert (=> b!71372 (=> (not res!38059) (not e!46728))))

(declare-fun size!2084 (LongMapFixedSize!688) (_ BitVec 32))

(assert (=> b!71372 (= res!38059 (bvsge (size!2084 newMap!16) (_size!393 newMap!16)))))

(declare-fun b!71371 () Bool)

(declare-fun res!38060 () Bool)

(assert (=> b!71371 (=> (not res!38060) (not e!46728))))

(assert (=> b!71371 (= res!38060 (and (= (size!2079 (_values!2174 newMap!16)) (bvadd (mask!6147 newMap!16) #b00000000000000000000000000000001)) (= (size!2078 (_keys!3838 newMap!16)) (size!2079 (_values!2174 newMap!16))) (bvsge (_size!393 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!393 newMap!16) (bvadd (mask!6147 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!71374 () Bool)

(assert (=> b!71374 (= e!46728 (and (bvsge (extraKeys!2054 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2054 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!393 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!71373 () Bool)

(declare-fun res!38062 () Bool)

(assert (=> b!71373 (=> (not res!38062) (not e!46728))))

(assert (=> b!71373 (= res!38062 (= (size!2084 newMap!16) (bvadd (_size!393 newMap!16) (bvsdiv (bvadd (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!15933 () Bool)

(declare-fun res!38061 () Bool)

(assert (=> d!15933 (=> (not res!38061) (not e!46728))))

(assert (=> d!15933 (= res!38061 (validMask!0 (mask!6147 newMap!16)))))

(assert (=> d!15933 (= (simpleValid!50 newMap!16) e!46728)))

(assert (= (and d!15933 res!38061) b!71371))

(assert (= (and b!71371 res!38060) b!71372))

(assert (= (and b!71372 res!38059) b!71373))

(assert (= (and b!71373 res!38062) b!71374))

(declare-fun m!68509 () Bool)

(assert (=> b!71372 m!68509))

(assert (=> b!71373 m!68509))

(assert (=> d!15933 m!67873))

(assert (=> d!15763 d!15933))

(assert (=> b!70888 d!15821))

(declare-fun d!15935 () Bool)

(declare-fun e!46730 () Bool)

(assert (=> d!15935 e!46730))

(declare-fun res!38063 () Bool)

(assert (=> d!15935 (=> res!38063 e!46730)))

(declare-fun lt!31654 () Bool)

(assert (=> d!15935 (= res!38063 (not lt!31654))))

(declare-fun lt!31652 () Bool)

(assert (=> d!15935 (= lt!31654 lt!31652)))

(declare-fun lt!31653 () Unit!1989)

(declare-fun e!46729 () Unit!1989)

(assert (=> d!15935 (= lt!31653 e!46729)))

(declare-fun c!10389 () Bool)

(assert (=> d!15935 (= c!10389 lt!31652)))

(assert (=> d!15935 (= lt!31652 (containsKey!134 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!15935 (= (contains!716 lt!31248 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!31654)))

(declare-fun b!71375 () Bool)

(declare-fun lt!31655 () Unit!1989)

(assert (=> b!71375 (= e!46729 lt!31655)))

(assert (=> b!71375 (= lt!31655 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71375 (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!71376 () Bool)

(declare-fun Unit!2015 () Unit!1989)

(assert (=> b!71376 (= e!46729 Unit!2015)))

(declare-fun b!71377 () Bool)

(assert (=> b!71377 (= e!46730 (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!15935 c!10389) b!71375))

(assert (= (and d!15935 (not c!10389)) b!71376))

(assert (= (and d!15935 (not res!38063)) b!71377))

(assert (=> d!15935 m!67611))

(declare-fun m!68511 () Bool)

(assert (=> d!15935 m!68511))

(assert (=> b!71375 m!67611))

(declare-fun m!68513 () Bool)

(assert (=> b!71375 m!68513))

(assert (=> b!71375 m!67611))

(assert (=> b!71375 m!68047))

(assert (=> b!71375 m!68047))

(declare-fun m!68515 () Bool)

(assert (=> b!71375 m!68515))

(assert (=> b!71377 m!67611))

(assert (=> b!71377 m!68047))

(assert (=> b!71377 m!68047))

(assert (=> b!71377 m!68515))

(assert (=> b!70743 d!15935))

(declare-fun bm!6186 () Bool)

(declare-fun call!6189 () Bool)

(declare-fun c!10390 () Bool)

(assert (=> bm!6186 (= call!6189 (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10390 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477))))))

(declare-fun b!71378 () Bool)

(declare-fun e!46731 () Bool)

(declare-fun e!46732 () Bool)

(assert (=> b!71378 (= e!46731 e!46732)))

(assert (=> b!71378 (= c!10390 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!15937 () Bool)

(declare-fun res!38065 () Bool)

(declare-fun e!46733 () Bool)

(assert (=> d!15937 (=> res!38065 e!46733)))

(assert (=> d!15937 (= res!38065 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!15937 (= (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)) e!46733)))

(declare-fun b!71379 () Bool)

(assert (=> b!71379 (= e!46732 call!6189)))

(declare-fun b!71380 () Bool)

(declare-fun e!46734 () Bool)

(assert (=> b!71380 (= e!46734 (contains!718 (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71381 () Bool)

(assert (=> b!71381 (= e!46732 call!6189)))

(declare-fun b!71382 () Bool)

(assert (=> b!71382 (= e!46733 e!46731)))

(declare-fun res!38066 () Bool)

(assert (=> b!71382 (=> (not res!38066) (not e!46731))))

(assert (=> b!71382 (= res!38066 (not e!46734))))

(declare-fun res!38064 () Bool)

(assert (=> b!71382 (=> (not res!38064) (not e!46734))))

(assert (=> b!71382 (= res!38064 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!15937 (not res!38065)) b!71382))

(assert (= (and b!71382 res!38064) b!71380))

(assert (= (and b!71382 res!38066) b!71378))

(assert (= (and b!71378 c!10390) b!71379))

(assert (= (and b!71378 (not c!10390)) b!71381))

(assert (= (or b!71379 b!71381) bm!6186))

(declare-fun m!68517 () Bool)

(assert (=> bm!6186 m!68517))

(declare-fun m!68519 () Bool)

(assert (=> bm!6186 m!68519))

(assert (=> b!71378 m!68517))

(assert (=> b!71378 m!68517))

(declare-fun m!68521 () Bool)

(assert (=> b!71378 m!68521))

(assert (=> b!71380 m!68517))

(assert (=> b!71380 m!68517))

(declare-fun m!68523 () Bool)

(assert (=> b!71380 m!68523))

(assert (=> b!71382 m!68517))

(assert (=> b!71382 m!68517))

(assert (=> b!71382 m!68521))

(assert (=> bm!6132 d!15937))

(declare-fun d!15939 () Bool)

(declare-fun res!38067 () Bool)

(declare-fun e!46735 () Bool)

(assert (=> d!15939 (=> res!38067 e!46735)))

(assert (=> d!15939 (= res!38067 (= (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15939 (= (arrayContainsKey!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000) e!46735)))

(declare-fun b!71383 () Bool)

(declare-fun e!46736 () Bool)

(assert (=> b!71383 (= e!46735 e!46736)))

(declare-fun res!38068 () Bool)

(assert (=> b!71383 (=> (not res!38068) (not e!46736))))

(assert (=> b!71383 (= res!38068 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71384 () Bool)

(assert (=> b!71384 (= e!46736 (arrayContainsKey!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!15939 (not res!38067)) b!71383))

(assert (= (and b!71383 res!38068) b!71384))

(assert (=> d!15939 m!67861))

(assert (=> b!71384 m!67435))

(declare-fun m!68525 () Bool)

(assert (=> b!71384 m!68525))

(assert (=> bm!6113 d!15939))

(declare-fun d!15941 () Bool)

(declare-fun e!46737 () Bool)

(assert (=> d!15941 e!46737))

(declare-fun res!38069 () Bool)

(assert (=> d!15941 (=> (not res!38069) (not e!46737))))

(declare-fun lt!31657 () ListLongMap!1397)

(assert (=> d!15941 (= res!38069 (contains!716 lt!31657 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!31658 () List!1479)

(assert (=> d!15941 (= lt!31657 (ListLongMap!1398 lt!31658))))

(declare-fun lt!31656 () Unit!1989)

(declare-fun lt!31659 () Unit!1989)

(assert (=> d!15941 (= lt!31656 lt!31659)))

(assert (=> d!15941 (= (getValueByKey!130 lt!31658 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15941 (= lt!31659 (lemmaContainsTupThenGetReturnValue!50 lt!31658 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15941 (= lt!31658 (insertStrictlySorted!53 (toList!714 call!6055) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!15941 (= (+!91 call!6055 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31657)))

(declare-fun b!71385 () Bool)

(declare-fun res!38070 () Bool)

(assert (=> b!71385 (=> (not res!38070) (not e!46737))))

(assert (=> b!71385 (= res!38070 (= (getValueByKey!130 (toList!714 lt!31657) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71386 () Bool)

(assert (=> b!71386 (= e!46737 (contains!717 (toList!714 lt!31657) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!15941 res!38069) b!71385))

(assert (= (and b!71385 res!38070) b!71386))

(declare-fun m!68527 () Bool)

(assert (=> d!15941 m!68527))

(declare-fun m!68529 () Bool)

(assert (=> d!15941 m!68529))

(declare-fun m!68531 () Bool)

(assert (=> d!15941 m!68531))

(declare-fun m!68533 () Bool)

(assert (=> d!15941 m!68533))

(declare-fun m!68535 () Bool)

(assert (=> b!71385 m!68535))

(declare-fun m!68537 () Bool)

(assert (=> b!71386 m!68537))

(assert (=> b!70760 d!15941))

(declare-fun bm!6195 () Bool)

(declare-fun call!6199 () Bool)

(declare-fun call!6201 () Bool)

(assert (=> bm!6195 (= call!6199 call!6201)))

(declare-fun bm!6196 () Bool)

(declare-fun call!6200 () SeekEntryResult!238)

(assert (=> bm!6196 (= call!6200 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(declare-fun b!71422 () Bool)

(declare-fun e!46760 () Unit!1989)

(declare-fun Unit!2016 () Unit!1989)

(assert (=> b!71422 (= e!46760 Unit!2016)))

(declare-fun b!71423 () Bool)

(declare-fun e!46758 () Unit!1989)

(declare-fun lt!31730 () Unit!1989)

(assert (=> b!71423 (= e!46758 lt!31730)))

(assert (=> b!71423 (= lt!31730 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31743 () SeekEntryResult!238)

(assert (=> b!71423 (= lt!31743 call!6200)))

(declare-fun c!10400 () Bool)

(assert (=> b!71423 (= c!10400 ((_ is MissingZero!238) lt!31743))))

(declare-fun e!46755 () Bool)

(assert (=> b!71423 e!46755))

(declare-fun b!71424 () Bool)

(declare-fun res!38090 () Bool)

(assert (=> b!71424 (= res!38090 call!6201)))

(declare-fun e!46754 () Bool)

(assert (=> b!71424 (=> (not res!38090) (not e!46754))))

(declare-fun b!71425 () Bool)

(declare-fun e!46759 () Bool)

(assert (=> b!71425 (= e!46759 ((_ is Undefined!238) lt!31743))))

(declare-fun c!10401 () Bool)

(declare-fun bm!6197 () Bool)

(declare-fun lt!31739 () SeekEntryResult!238)

(assert (=> bm!6197 (= call!6201 (inRange!0 (ite c!10401 (index!3083 lt!31739) (ite c!10400 (index!3082 lt!31743) (index!3085 lt!31743))) (mask!6147 newMap!16)))))

(declare-fun b!71426 () Bool)

(declare-fun e!46756 () Bool)

(declare-fun call!6198 () Bool)

(assert (=> b!71426 (= e!46756 (not call!6198))))

(declare-fun b!71427 () Bool)

(declare-fun res!38095 () Bool)

(declare-fun e!46761 () Bool)

(assert (=> b!71427 (=> (not res!38095) (not e!46761))))

(assert (=> b!71427 (= res!38095 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3082 lt!31743)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71428 () Bool)

(declare-fun res!38091 () Bool)

(declare-fun e!46757 () Bool)

(assert (=> b!71428 (=> (not res!38091) (not e!46757))))

(declare-fun lt!31724 () tuple2!2114)

(assert (=> b!71428 (= res!38091 (valid!296 (_2!1068 lt!31724)))))

(declare-fun b!71429 () Bool)

(declare-fun res!38093 () Bool)

(assert (=> b!71429 (=> (not res!38093) (not e!46757))))

(assert (=> b!71429 (= res!38093 (contains!716 (map!1145 (_2!1068 lt!31724)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun d!15943 () Bool)

(assert (=> d!15943 e!46757))

(declare-fun res!38092 () Bool)

(assert (=> d!15943 (=> (not res!38092) (not e!46757))))

(assert (=> d!15943 (= res!38092 (_1!1068 lt!31724))))

(assert (=> d!15943 (= lt!31724 (tuple2!2115 true (LongMapFixedSize!689 (defaultEntry!2191 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (bvadd (_size!393 newMap!16) #b00000000000000000000000000000001) (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (_vacant!393 newMap!16))))))

(declare-fun lt!31734 () Unit!1989)

(declare-fun lt!31735 () Unit!1989)

(assert (=> d!15943 (= lt!31734 lt!31735)))

(declare-fun lt!31740 () array!3857)

(declare-fun lt!31738 () array!3859)

(assert (=> d!15943 (contains!716 (getCurrentListMap!407 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))))))

(assert (=> d!15943 (= lt!31735 (lemmaValidKeyInArrayIsInListMap!82 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (defaultEntry!2191 newMap!16)))))

(assert (=> d!15943 (= lt!31738 (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))))

(assert (=> d!15943 (= lt!31740 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun lt!31726 () Unit!1989)

(declare-fun lt!31736 () Unit!1989)

(assert (=> d!15943 (= lt!31726 lt!31736)))

(declare-fun lt!31720 () array!3857)

(assert (=> d!15943 (= (arrayCountValidKeys!0 lt!31720 (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (bvadd (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3857 (_ BitVec 32)) Unit!1989)

(assert (=> d!15943 (= lt!31736 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!31720 (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))))))

(assert (=> d!15943 (= lt!31720 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun lt!31746 () Unit!1989)

(declare-fun lt!31748 () Unit!1989)

(assert (=> d!15943 (= lt!31746 lt!31748)))

(declare-fun lt!31747 () array!3857)

(assert (=> d!15943 (arrayContainsKey!0 lt!31747 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!15943 (= lt!31748 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!31747 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))))))

(assert (=> d!15943 (= lt!31747 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun lt!31744 () Unit!1989)

(declare-fun lt!31727 () Unit!1989)

(assert (=> d!15943 (= lt!31744 lt!31727)))

(assert (=> d!15943 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (getCurrentListMap!407 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!12 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) (_ BitVec 64) V!2937 Int) Unit!1989)

(assert (=> d!15943 (= lt!31727 (lemmaAddValidKeyToArrayThenAddPairToListMap!12 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31721 () Unit!1989)

(declare-fun lt!31728 () Unit!1989)

(assert (=> d!15943 (= lt!31721 lt!31728)))

(assert (=> d!15943 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (mask!6147 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3857 (_ BitVec 32) (_ BitVec 32)) Unit!1989)

(assert (=> d!15943 (= lt!31728 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (mask!6147 newMap!16)))))

(declare-fun lt!31723 () Unit!1989)

(declare-fun lt!31737 () Unit!1989)

(assert (=> d!15943 (= lt!31723 lt!31737)))

(assert (=> d!15943 (= (arrayCountValidKeys!0 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3838 newMap!16) #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3857 (_ BitVec 32) (_ BitVec 64)) Unit!1989)

(assert (=> d!15943 (= lt!31737 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3838 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!31731 () Unit!1989)

(declare-fun lt!31749 () Unit!1989)

(assert (=> d!15943 (= lt!31731 lt!31749)))

(declare-fun lt!31725 () (_ BitVec 32))

(declare-fun lt!31745 () List!1480)

(assert (=> d!15943 (arrayNoDuplicates!0 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) lt!31725 lt!31745)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3857 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1480) Unit!1989)

(assert (=> d!15943 (= lt!31749 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) lt!31725 lt!31745))))

(assert (=> d!15943 (= lt!31745 Nil!1477)))

(assert (=> d!15943 (= lt!31725 #b00000000000000000000000000000000)))

(declare-fun lt!31729 () Unit!1989)

(assert (=> d!15943 (= lt!31729 e!46760)))

(declare-fun c!10399 () Bool)

(assert (=> d!15943 (= c!10399 (arrayContainsKey!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!31741 () Unit!1989)

(assert (=> d!15943 (= lt!31741 e!46758)))

(assert (=> d!15943 (= c!10401 (contains!716 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15943 (valid!296 newMap!16)))

(assert (=> d!15943 (= (updateHelperNewKey!23 newMap!16 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))) lt!31724)))

(declare-fun b!71421 () Bool)

(declare-fun res!38094 () Bool)

(assert (=> b!71421 (=> (not res!38094) (not e!46761))))

(assert (=> b!71421 (= res!38094 call!6199)))

(assert (=> b!71421 (= e!46755 e!46761)))

(declare-fun b!71430 () Bool)

(declare-fun Unit!2017 () Unit!1989)

(assert (=> b!71430 (= e!46758 Unit!2017)))

(declare-fun lt!31722 () Unit!1989)

(assert (=> b!71430 (= lt!31722 (lemmaInListMapThenSeekEntryOrOpenFindsIt!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)))))

(assert (=> b!71430 (= lt!31739 call!6200)))

(declare-fun res!38096 () Bool)

(assert (=> b!71430 (= res!38096 ((_ is Found!238) lt!31739))))

(assert (=> b!71430 (=> (not res!38096) (not e!46754))))

(assert (=> b!71430 e!46754))

(declare-fun lt!31733 () Unit!1989)

(assert (=> b!71430 (= lt!31733 lt!31722)))

(assert (=> b!71430 false))

(declare-fun b!71431 () Bool)

(assert (=> b!71431 (= e!46754 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31739)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!71432 () Bool)

(assert (=> b!71432 (= e!46759 e!46756)))

(declare-fun res!38089 () Bool)

(assert (=> b!71432 (= res!38089 call!6199)))

(assert (=> b!71432 (=> (not res!38089) (not e!46756))))

(declare-fun b!71433 () Bool)

(assert (=> b!71433 (= e!46761 (not call!6198))))

(declare-fun b!71434 () Bool)

(declare-fun res!38097 () Bool)

(assert (=> b!71434 (= res!38097 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3085 lt!31743)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71434 (=> (not res!38097) (not e!46756))))

(declare-fun b!71435 () Bool)

(assert (=> b!71435 (= e!46757 (= (map!1145 (_2!1068 lt!31724)) (+!91 (map!1145 newMap!16) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!71436 () Bool)

(declare-fun c!10402 () Bool)

(assert (=> b!71436 (= c!10402 ((_ is MissingVacant!238) lt!31743))))

(assert (=> b!71436 (= e!46755 e!46759)))

(declare-fun b!71437 () Bool)

(declare-fun Unit!2018 () Unit!1989)

(assert (=> b!71437 (= e!46760 Unit!2018)))

(declare-fun lt!31742 () Unit!1989)

(declare-fun lemmaArrayContainsKeyThenInListMap!12 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) (_ BitVec 32) Int) Unit!1989)

(assert (=> b!71437 (= lt!31742 (lemmaArrayContainsKeyThenInListMap!12 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (=> b!71437 (contains!716 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))

(declare-fun lt!31732 () Unit!1989)

(assert (=> b!71437 (= lt!31732 lt!31742)))

(assert (=> b!71437 false))

(declare-fun bm!6198 () Bool)

(assert (=> bm!6198 (= call!6198 (arrayContainsKey!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!15943 c!10401) b!71430))

(assert (= (and d!15943 (not c!10401)) b!71423))

(assert (= (and b!71430 res!38096) b!71424))

(assert (= (and b!71424 res!38090) b!71431))

(assert (= (and b!71423 c!10400) b!71421))

(assert (= (and b!71423 (not c!10400)) b!71436))

(assert (= (and b!71421 res!38094) b!71427))

(assert (= (and b!71427 res!38095) b!71433))

(assert (= (and b!71436 c!10402) b!71432))

(assert (= (and b!71436 (not c!10402)) b!71425))

(assert (= (and b!71432 res!38089) b!71434))

(assert (= (and b!71434 res!38097) b!71426))

(assert (= (or b!71421 b!71432) bm!6195))

(assert (= (or b!71433 b!71426) bm!6198))

(assert (= (or b!71424 bm!6195) bm!6197))

(assert (= (or b!71430 b!71423) bm!6196))

(assert (= (and d!15943 c!10399) b!71437))

(assert (= (and d!15943 (not c!10399)) b!71422))

(assert (= (and d!15943 res!38092) b!71428))

(assert (= (and b!71428 res!38091) b!71429))

(assert (= (and b!71429 res!38093) b!71435))

(declare-fun m!68539 () Bool)

(assert (=> b!71429 m!68539))

(assert (=> b!71429 m!68539))

(assert (=> b!71429 m!67435))

(declare-fun m!68541 () Bool)

(assert (=> b!71429 m!68541))

(assert (=> b!71435 m!68539))

(assert (=> b!71435 m!67445))

(assert (=> b!71435 m!67445))

(declare-fun m!68543 () Bool)

(assert (=> b!71435 m!68543))

(assert (=> bm!6198 m!67435))

(assert (=> bm!6198 m!67699))

(assert (=> b!71430 m!67435))

(assert (=> b!71430 m!67723))

(assert (=> b!71423 m!67435))

(assert (=> b!71423 m!67685))

(declare-fun m!68545 () Bool)

(assert (=> bm!6197 m!68545))

(declare-fun m!68547 () Bool)

(assert (=> b!71428 m!68547))

(declare-fun m!68549 () Bool)

(assert (=> b!71431 m!68549))

(declare-fun m!68551 () Bool)

(assert (=> b!71434 m!68551))

(assert (=> bm!6196 m!67435))

(assert (=> bm!6196 m!67689))

(assert (=> b!71437 m!67435))

(declare-fun m!68553 () Bool)

(assert (=> b!71437 m!68553))

(assert (=> b!71437 m!67607))

(assert (=> b!71437 m!67607))

(assert (=> b!71437 m!67435))

(declare-fun m!68555 () Bool)

(assert (=> b!71437 m!68555))

(declare-fun m!68557 () Bool)

(assert (=> d!15943 m!68557))

(assert (=> d!15943 m!67435))

(declare-fun m!68559 () Bool)

(assert (=> d!15943 m!68559))

(assert (=> d!15943 m!67821))

(assert (=> d!15943 m!67607))

(assert (=> d!15943 m!68135))

(declare-fun m!68561 () Bool)

(assert (=> d!15943 m!68561))

(declare-fun m!68563 () Bool)

(assert (=> d!15943 m!68563))

(declare-fun m!68565 () Bool)

(assert (=> d!15943 m!68565))

(assert (=> d!15943 m!67455))

(declare-fun m!68567 () Bool)

(assert (=> d!15943 m!68567))

(declare-fun m!68569 () Bool)

(assert (=> d!15943 m!68569))

(declare-fun m!68571 () Bool)

(assert (=> d!15943 m!68571))

(assert (=> d!15943 m!68561))

(declare-fun m!68573 () Bool)

(assert (=> d!15943 m!68573))

(declare-fun m!68575 () Bool)

(assert (=> d!15943 m!68575))

(assert (=> d!15943 m!68563))

(assert (=> d!15943 m!67435))

(assert (=> d!15943 m!67699))

(assert (=> d!15943 m!67607))

(assert (=> d!15943 m!67435))

(declare-fun m!68577 () Bool)

(assert (=> d!15943 m!68577))

(assert (=> d!15943 m!67607))

(assert (=> d!15943 m!67435))

(assert (=> d!15943 m!68555))

(assert (=> d!15943 m!67435))

(declare-fun m!68579 () Bool)

(assert (=> d!15943 m!68579))

(declare-fun m!68581 () Bool)

(assert (=> d!15943 m!68581))

(declare-fun m!68583 () Bool)

(assert (=> d!15943 m!68583))

(assert (=> d!15943 m!67435))

(declare-fun m!68585 () Bool)

(assert (=> d!15943 m!68585))

(declare-fun m!68587 () Bool)

(assert (=> d!15943 m!68587))

(assert (=> d!15943 m!67435))

(declare-fun m!68589 () Bool)

(assert (=> d!15943 m!68589))

(assert (=> d!15943 m!67435))

(declare-fun m!68591 () Bool)

(assert (=> d!15943 m!68591))

(declare-fun m!68593 () Bool)

(assert (=> b!71427 m!68593))

(assert (=> bm!6120 d!15943))

(declare-fun d!15945 () Bool)

(assert (=> d!15945 (= (apply!74 lt!31248 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1139 (getValueByKey!130 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3056 () Bool)

(assert (= bs!3056 d!15945))

(assert (=> bs!3056 m!68143))

(assert (=> bs!3056 m!68143))

(declare-fun m!68595 () Bool)

(assert (=> bs!3056 m!68595))

(assert (=> b!70740 d!15945))

(declare-fun d!15947 () Bool)

(assert (=> d!15947 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31323 lt!31106 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31752 () Unit!1989)

(declare-fun choose!414 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 V!2937 Int) Unit!1989)

(assert (=> d!15947 (= lt!31752 (choose!414 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) lt!31323 (zeroValue!2095 newMap!16) lt!31106 (minValue!2095 newMap!16) (defaultEntry!2191 newMap!16)))))

(assert (=> d!15947 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15947 (= (lemmaChangeZeroKeyThenAddPairToListMap!23 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) lt!31323 (zeroValue!2095 newMap!16) lt!31106 (minValue!2095 newMap!16) (defaultEntry!2191 newMap!16)) lt!31752)))

(declare-fun bs!3057 () Bool)

(assert (= bs!3057 d!15947))

(declare-fun m!68597 () Bool)

(assert (=> bs!3057 m!68597))

(assert (=> bs!3057 m!67607))

(assert (=> bs!3057 m!67607))

(declare-fun m!68599 () Bool)

(assert (=> bs!3057 m!68599))

(declare-fun m!68601 () Bool)

(assert (=> bs!3057 m!68601))

(assert (=> bs!3057 m!67873))

(assert (=> b!70874 d!15947))

(declare-fun d!15949 () Bool)

(declare-fun res!38098 () Bool)

(declare-fun e!46762 () Bool)

(assert (=> d!15949 (=> (not res!38098) (not e!46762))))

(assert (=> d!15949 (= res!38098 (simpleValid!50 (_2!1068 lt!31326)))))

(assert (=> d!15949 (= (valid!296 (_2!1068 lt!31326)) e!46762)))

(declare-fun b!71438 () Bool)

(declare-fun res!38099 () Bool)

(assert (=> b!71438 (=> (not res!38099) (not e!46762))))

(assert (=> b!71438 (= res!38099 (= (arrayCountValidKeys!0 (_keys!3838 (_2!1068 lt!31326)) #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))) (_size!393 (_2!1068 lt!31326))))))

(declare-fun b!71439 () Bool)

(declare-fun res!38100 () Bool)

(assert (=> b!71439 (=> (not res!38100) (not e!46762))))

(assert (=> b!71439 (= res!38100 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3838 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326))))))

(declare-fun b!71440 () Bool)

(assert (=> b!71440 (= e!46762 (arrayNoDuplicates!0 (_keys!3838 (_2!1068 lt!31326)) #b00000000000000000000000000000000 Nil!1477))))

(assert (= (and d!15949 res!38098) b!71438))

(assert (= (and b!71438 res!38099) b!71439))

(assert (= (and b!71439 res!38100) b!71440))

(declare-fun m!68603 () Bool)

(assert (=> d!15949 m!68603))

(declare-fun m!68605 () Bool)

(assert (=> b!71438 m!68605))

(declare-fun m!68607 () Bool)

(assert (=> b!71439 m!68607))

(declare-fun m!68609 () Bool)

(assert (=> b!71440 m!68609))

(assert (=> d!15735 d!15949))

(assert (=> d!15735 d!15763))

(declare-fun b!71441 () Bool)

(declare-fun e!46763 () Option!136)

(assert (=> b!71441 (= e!46763 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31365)))))))

(declare-fun d!15951 () Bool)

(declare-fun c!10403 () Bool)

(assert (=> d!15951 (= c!10403 (and ((_ is Cons!1475) (toList!714 lt!31365)) (= (_1!1067 (h!2061 (toList!714 lt!31365))) (_1!1067 lt!31109))))))

(assert (=> d!15951 (= (getValueByKey!130 (toList!714 lt!31365) (_1!1067 lt!31109)) e!46763)))

(declare-fun b!71442 () Bool)

(declare-fun e!46764 () Option!136)

(assert (=> b!71442 (= e!46763 e!46764)))

(declare-fun c!10404 () Bool)

(assert (=> b!71442 (= c!10404 (and ((_ is Cons!1475) (toList!714 lt!31365)) (not (= (_1!1067 (h!2061 (toList!714 lt!31365))) (_1!1067 lt!31109)))))))

(declare-fun b!71444 () Bool)

(assert (=> b!71444 (= e!46764 None!134)))

(declare-fun b!71443 () Bool)

(assert (=> b!71443 (= e!46764 (getValueByKey!130 (t!5006 (toList!714 lt!31365)) (_1!1067 lt!31109)))))

(assert (= (and d!15951 c!10403) b!71441))

(assert (= (and d!15951 (not c!10403)) b!71442))

(assert (= (and b!71442 c!10404) b!71443))

(assert (= (and b!71442 (not c!10404)) b!71444))

(declare-fun m!68611 () Bool)

(assert (=> b!71443 m!68611))

(assert (=> b!70904 d!15951))

(declare-fun d!15953 () Bool)

(assert (=> d!15953 (= (apply!74 lt!31248 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1139 (getValueByKey!130 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3058 () Bool)

(assert (= bs!3058 d!15953))

(assert (=> bs!3058 m!68285))

(assert (=> bs!3058 m!68285))

(declare-fun m!68613 () Bool)

(assert (=> bs!3058 m!68613))

(assert (=> b!70758 d!15953))

(declare-fun d!15955 () Bool)

(declare-fun isEmpty!319 (List!1479) Bool)

(assert (=> d!15955 (= (isEmpty!317 lt!31388) (isEmpty!319 (toList!714 lt!31388)))))

(declare-fun bs!3059 () Bool)

(assert (= bs!3059 d!15955))

(declare-fun m!68615 () Bool)

(assert (=> bs!3059 m!68615))

(assert (=> b!70933 d!15955))

(assert (=> b!70954 d!15755))

(declare-fun d!15957 () Bool)

(declare-fun e!46765 () Bool)

(assert (=> d!15957 e!46765))

(declare-fun res!38101 () Bool)

(assert (=> d!15957 (=> (not res!38101) (not e!46765))))

(declare-fun lt!31754 () ListLongMap!1397)

(assert (=> d!15957 (= res!38101 (contains!716 lt!31754 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun lt!31755 () List!1479)

(assert (=> d!15957 (= lt!31754 (ListLongMap!1398 lt!31755))))

(declare-fun lt!31753 () Unit!1989)

(declare-fun lt!31756 () Unit!1989)

(assert (=> d!15957 (= lt!31753 lt!31756)))

(assert (=> d!15957 (= (getValueByKey!130 lt!31755 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!15957 (= lt!31756 (lemmaContainsTupThenGetReturnValue!50 lt!31755 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!15957 (= lt!31755 (insertStrictlySorted!53 (toList!714 call!6126) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!15957 (= (+!91 call!6126 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) lt!31754)))

(declare-fun b!71445 () Bool)

(declare-fun res!38102 () Bool)

(assert (=> b!71445 (=> (not res!38102) (not e!46765))))

(assert (=> b!71445 (= res!38102 (= (getValueByKey!130 (toList!714 lt!31754) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!71446 () Bool)

(assert (=> b!71446 (= e!46765 (contains!717 (toList!714 lt!31754) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(assert (= (and d!15957 res!38101) b!71445))

(assert (= (and b!71445 res!38102) b!71446))

(declare-fun m!68617 () Bool)

(assert (=> d!15957 m!68617))

(declare-fun m!68619 () Bool)

(assert (=> d!15957 m!68619))

(declare-fun m!68621 () Bool)

(assert (=> d!15957 m!68621))

(declare-fun m!68623 () Bool)

(assert (=> d!15957 m!68623))

(declare-fun m!68625 () Bool)

(assert (=> b!71445 m!68625))

(declare-fun m!68627 () Bool)

(assert (=> b!71446 m!68627))

(assert (=> b!70858 d!15957))

(declare-fun b!71447 () Bool)

(declare-fun e!46766 () Option!136)

(assert (=> b!71447 (= e!46766 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31354)))))))

(declare-fun d!15959 () Bool)

(declare-fun c!10405 () Bool)

(assert (=> d!15959 (= c!10405 (and ((_ is Cons!1475) (toList!714 lt!31354)) (= (_1!1067 (h!2061 (toList!714 lt!31354))) (_1!1067 lt!31103))))))

(assert (=> d!15959 (= (getValueByKey!130 (toList!714 lt!31354) (_1!1067 lt!31103)) e!46766)))

(declare-fun b!71448 () Bool)

(declare-fun e!46767 () Option!136)

(assert (=> b!71448 (= e!46766 e!46767)))

(declare-fun c!10406 () Bool)

(assert (=> b!71448 (= c!10406 (and ((_ is Cons!1475) (toList!714 lt!31354)) (not (= (_1!1067 (h!2061 (toList!714 lt!31354))) (_1!1067 lt!31103)))))))

(declare-fun b!71450 () Bool)

(assert (=> b!71450 (= e!46767 None!134)))

(declare-fun b!71449 () Bool)

(assert (=> b!71449 (= e!46767 (getValueByKey!130 (t!5006 (toList!714 lt!31354)) (_1!1067 lt!31103)))))

(assert (= (and d!15959 c!10405) b!71447))

(assert (= (and d!15959 (not c!10405)) b!71448))

(assert (= (and b!71448 c!10406) b!71449))

(assert (= (and b!71448 (not c!10406)) b!71450))

(declare-fun m!68629 () Bool)

(assert (=> b!71449 m!68629))

(assert (=> b!70900 d!15959))

(declare-fun d!15961 () Bool)

(declare-fun res!38103 () Bool)

(declare-fun e!46768 () Bool)

(assert (=> d!15961 (=> (not res!38103) (not e!46768))))

(assert (=> d!15961 (= res!38103 (simpleValid!50 (v!2507 (underlying!253 thiss!992))))))

(assert (=> d!15961 (= (valid!296 (v!2507 (underlying!253 thiss!992))) e!46768)))

(declare-fun b!71451 () Bool)

(declare-fun res!38104 () Bool)

(assert (=> b!71451 (=> (not res!38104) (not e!46768))))

(assert (=> b!71451 (= res!38104 (= (arrayCountValidKeys!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000 (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))) (_size!393 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!71452 () Bool)

(declare-fun res!38105 () Bool)

(assert (=> b!71452 (=> (not res!38105) (not e!46768))))

(assert (=> b!71452 (= res!38105 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!71453 () Bool)

(assert (=> b!71453 (= e!46768 (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000 Nil!1477))))

(assert (= (and d!15961 res!38103) b!71451))

(assert (= (and b!71451 res!38104) b!71452))

(assert (= (and b!71452 res!38105) b!71453))

(declare-fun m!68631 () Bool)

(assert (=> d!15961 m!68631))

(declare-fun m!68633 () Bool)

(assert (=> b!71451 m!68633))

(declare-fun m!68635 () Bool)

(assert (=> b!71452 m!68635))

(declare-fun m!68637 () Bool)

(assert (=> b!71453 m!68637))

(assert (=> d!15761 d!15961))

(assert (=> d!15753 d!15759))

(declare-fun d!15963 () Bool)

(assert (=> d!15963 (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) from!355 Nil!1477)))

(assert (=> d!15963 true))

(declare-fun _$71!93 () Unit!1989)

(assert (=> d!15963 (= (choose!39 (_keys!3838 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!93)))

(declare-fun bs!3060 () Bool)

(assert (= bs!3060 d!15963))

(assert (=> bs!3060 m!67465))

(assert (=> d!15753 d!15963))

(declare-fun b!71454 () Bool)

(declare-fun e!46769 () Option!136)

(assert (=> b!71454 (= e!46769 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31358)))))))

(declare-fun d!15965 () Bool)

(declare-fun c!10407 () Bool)

(assert (=> d!15965 (= c!10407 (and ((_ is Cons!1475) (toList!714 lt!31358)) (= (_1!1067 (h!2061 (toList!714 lt!31358))) (_1!1067 lt!31109))))))

(assert (=> d!15965 (= (getValueByKey!130 (toList!714 lt!31358) (_1!1067 lt!31109)) e!46769)))

(declare-fun b!71455 () Bool)

(declare-fun e!46770 () Option!136)

(assert (=> b!71455 (= e!46769 e!46770)))

(declare-fun c!10408 () Bool)

(assert (=> b!71455 (= c!10408 (and ((_ is Cons!1475) (toList!714 lt!31358)) (not (= (_1!1067 (h!2061 (toList!714 lt!31358))) (_1!1067 lt!31109)))))))

(declare-fun b!71457 () Bool)

(assert (=> b!71457 (= e!46770 None!134)))

(declare-fun b!71456 () Bool)

(assert (=> b!71456 (= e!46770 (getValueByKey!130 (t!5006 (toList!714 lt!31358)) (_1!1067 lt!31109)))))

(assert (= (and d!15965 c!10407) b!71454))

(assert (= (and d!15965 (not c!10407)) b!71455))

(assert (= (and b!71455 c!10408) b!71456))

(assert (= (and b!71455 (not c!10408)) b!71457))

(declare-fun m!68639 () Bool)

(assert (=> b!71456 m!68639))

(assert (=> b!70902 d!15965))

(declare-fun d!15967 () Bool)

(declare-fun e!46772 () Bool)

(assert (=> d!15967 e!46772))

(declare-fun res!38106 () Bool)

(assert (=> d!15967 (=> res!38106 e!46772)))

(declare-fun lt!31759 () Bool)

(assert (=> d!15967 (= res!38106 (not lt!31759))))

(declare-fun lt!31757 () Bool)

(assert (=> d!15967 (= lt!31759 lt!31757)))

(declare-fun lt!31758 () Unit!1989)

(declare-fun e!46771 () Unit!1989)

(assert (=> d!15967 (= lt!31758 e!46771)))

(declare-fun c!10409 () Bool)

(assert (=> d!15967 (= c!10409 lt!31757)))

(assert (=> d!15967 (= lt!31757 (containsKey!134 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!15967 (= (contains!716 e!46437 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) lt!31759)))

(declare-fun b!71458 () Bool)

(declare-fun lt!31760 () Unit!1989)

(assert (=> b!71458 (= e!46771 lt!31760)))

(assert (=> b!71458 (= lt!31760 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!71458 (isDefined!84 (getValueByKey!130 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!71459 () Bool)

(declare-fun Unit!2019 () Unit!1989)

(assert (=> b!71459 (= e!46771 Unit!2019)))

(declare-fun b!71460 () Bool)

(assert (=> b!71460 (= e!46772 (isDefined!84 (getValueByKey!130 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!15967 c!10409) b!71458))

(assert (= (and d!15967 (not c!10409)) b!71459))

(assert (= (and d!15967 (not res!38106)) b!71460))

(assert (=> d!15967 m!67435))

(declare-fun m!68641 () Bool)

(assert (=> d!15967 m!68641))

(assert (=> b!71458 m!67435))

(declare-fun m!68643 () Bool)

(assert (=> b!71458 m!68643))

(assert (=> b!71458 m!67435))

(declare-fun m!68645 () Bool)

(assert (=> b!71458 m!68645))

(assert (=> b!71458 m!68645))

(declare-fun m!68647 () Bool)

(assert (=> b!71458 m!68647))

(assert (=> b!71460 m!67435))

(assert (=> b!71460 m!68645))

(assert (=> b!71460 m!68645))

(assert (=> b!71460 m!68647))

(assert (=> bm!6111 d!15967))

(assert (=> d!15723 d!15745))

(declare-fun mapIsEmpty!3157 () Bool)

(declare-fun mapRes!3157 () Bool)

(assert (=> mapIsEmpty!3157 mapRes!3157))

(declare-fun condMapEmpty!3157 () Bool)

(declare-fun mapDefault!3157 () ValueCell!890)

(assert (=> mapNonEmpty!3155 (= condMapEmpty!3157 (= mapRest!3155 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3157)))))

(declare-fun e!46774 () Bool)

(assert (=> mapNonEmpty!3155 (= tp!8501 (and e!46774 mapRes!3157))))

(declare-fun b!71461 () Bool)

(declare-fun e!46773 () Bool)

(assert (=> b!71461 (= e!46773 tp_is_empty!2467)))

(declare-fun b!71462 () Bool)

(assert (=> b!71462 (= e!46774 tp_is_empty!2467)))

(declare-fun mapNonEmpty!3157 () Bool)

(declare-fun tp!8503 () Bool)

(assert (=> mapNonEmpty!3157 (= mapRes!3157 (and tp!8503 e!46773))))

(declare-fun mapValue!3157 () ValueCell!890)

(declare-fun mapRest!3157 () (Array (_ BitVec 32) ValueCell!890))

(declare-fun mapKey!3157 () (_ BitVec 32))

(assert (=> mapNonEmpty!3157 (= mapRest!3155 (store mapRest!3157 mapKey!3157 mapValue!3157))))

(assert (= (and mapNonEmpty!3155 condMapEmpty!3157) mapIsEmpty!3157))

(assert (= (and mapNonEmpty!3155 (not condMapEmpty!3157)) mapNonEmpty!3157))

(assert (= (and mapNonEmpty!3157 ((_ is ValueCellFull!890) mapValue!3157)) b!71461))

(assert (= (and mapNonEmpty!3155 ((_ is ValueCellFull!890) mapDefault!3157)) b!71462))

(declare-fun m!68649 () Bool)

(assert (=> mapNonEmpty!3157 m!68649))

(declare-fun mapIsEmpty!3158 () Bool)

(declare-fun mapRes!3158 () Bool)

(assert (=> mapIsEmpty!3158 mapRes!3158))

(declare-fun condMapEmpty!3158 () Bool)

(declare-fun mapDefault!3158 () ValueCell!890)

(assert (=> mapNonEmpty!3156 (= condMapEmpty!3158 (= mapRest!3156 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3158)))))

(declare-fun e!46776 () Bool)

(assert (=> mapNonEmpty!3156 (= tp!8502 (and e!46776 mapRes!3158))))

(declare-fun b!71463 () Bool)

(declare-fun e!46775 () Bool)

(assert (=> b!71463 (= e!46775 tp_is_empty!2467)))

(declare-fun b!71464 () Bool)

(assert (=> b!71464 (= e!46776 tp_is_empty!2467)))

(declare-fun mapNonEmpty!3158 () Bool)

(declare-fun tp!8504 () Bool)

(assert (=> mapNonEmpty!3158 (= mapRes!3158 (and tp!8504 e!46775))))

(declare-fun mapKey!3158 () (_ BitVec 32))

(declare-fun mapValue!3158 () ValueCell!890)

(declare-fun mapRest!3158 () (Array (_ BitVec 32) ValueCell!890))

(assert (=> mapNonEmpty!3158 (= mapRest!3156 (store mapRest!3158 mapKey!3158 mapValue!3158))))

(assert (= (and mapNonEmpty!3156 condMapEmpty!3158) mapIsEmpty!3158))

(assert (= (and mapNonEmpty!3156 (not condMapEmpty!3158)) mapNonEmpty!3158))

(assert (= (and mapNonEmpty!3158 ((_ is ValueCellFull!890) mapValue!3158)) b!71463))

(assert (= (and mapNonEmpty!3156 ((_ is ValueCellFull!890) mapDefault!3158)) b!71464))

(declare-fun m!68651 () Bool)

(assert (=> mapNonEmpty!3158 m!68651))

(declare-fun b_lambda!3191 () Bool)

(assert (= b_lambda!3189 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3191)))

(declare-fun b_lambda!3193 () Bool)

(assert (= b_lambda!3181 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3193)))

(declare-fun b_lambda!3195 () Bool)

(assert (= b_lambda!3185 (or (and b!70564 b_free!2101) (and b!70563 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))) b_lambda!3195)))

(declare-fun b_lambda!3197 () Bool)

(assert (= b_lambda!3187 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3197)))

(declare-fun b_lambda!3199 () Bool)

(assert (= b_lambda!3183 (or (and b!70564 b_free!2101) (and b!70563 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))) b_lambda!3199)))

(check-sat (not bm!6154) (not b!71074) (not d!15775) (not b!71320) (not b!71266) (not bm!6149) (not b!71172) (not b!71050) (not d!15917) (not d!15891) (not b!71449) (not bm!6167) (not b!71102) (not d!15771) (not b!71332) (not b!71111) (not b!71445) (not bm!6144) (not b!71430) (not b!71237) (not b!71435) (not b!71192) (not b!71384) (not b!71107) (not b!71263) (not b!71075) (not b!71109) (not d!15869) (not d!15883) (not b!71062) (not b_lambda!3195) (not b!71139) (not d!15947) (not b!71198) (not d!15855) (not bm!6197) (not d!15895) (not d!15853) (not bm!6162) (not b!71084) (not b!71423) (not b!71261) (not b!71191) (not b!71142) (not b!71373) (not b!71112) (not b!71076) (not b!71087) (not b!71212) (not b!71116) (not b!71215) (not b!71440) (not d!15765) (not b!71078) (not b!71065) (not b!71010) (not d!15835) (not d!15831) (not b!71101) (not d!15955) (not d!15787) (not d!15927) (not b!71309) (not d!15961) (not d!15817) (not d!15865) (not d!15875) (not b!71275) (not b!71137) (not d!15793) (not d!15811) (not bm!6145) (not b!71032) (not b!70992) (not b!71294) (not b!71104) (not d!15863) (not b!71311) (not bm!6198) (not b_lambda!3179) (not d!15777) (not b!71446) (not b!71460) (not b!71230) tp_is_empty!2467 (not b!71130) (not bm!6166) (not b!71124) (not b!71251) (not b!71083) (not b!71195) (not d!15907) (not b!71451) (not d!15919) (not bm!6185) (not d!15885) (not b!71245) (not b!71047) (not b!71210) (not b!71456) (not b_lambda!3191) (not b!71081) (not d!15943) (not d!15821) (not d!15913) (not bm!6156) (not d!15857) (not b!71211) (not bm!6186) b_and!4387 (not b_lambda!3199) (not b_lambda!3167) (not b!71079) (not b!71372) (not b!71180) (not b!71452) (not b!71276) (not d!15861) (not b!71123) (not d!15769) (not b!71258) (not b_next!2103) (not b!71094) (not b!70990) (not b!71327) (not b!71187) (not b!71293) (not d!15849) (not d!15789) (not b!71249) (not b!71286) (not bm!6179) (not b!71274) (not b!71317) (not b!71003) (not d!15871) (not b!71091) (not b!71060) (not b!71239) (not d!15877) (not b!71036) (not b!71252) (not b!71328) (not b!71242) (not b!71183) (not b!71318) (not b!71325) (not b!71271) (not d!15791) (not b!71220) (not d!15887) (not b!71218) (not b!71429) (not d!15923) (not b!71090) (not b!71386) (not b!71382) (not d!15901) (not bm!6142) (not d!15963) (not bm!6164) (not b!71070) (not bm!6163) (not d!15945) (not d!15837) (not b_next!2101) (not d!15813) (not b!71031) (not b!71177) (not b!71247) (not b!71053) (not b!71184) (not b!71323) (not b!71224) (not d!15819) (not b!71259) (not d!15827) (not b!71089) (not d!15957) (not b!71093) (not bm!6165) (not d!15785) (not b!71095) (not bm!6153) (not b_lambda!3193) (not b!71375) (not d!15807) (not b!71205) (not d!15843) b_and!4385 (not d!15941) (not b!71240) (not b!71337) (not d!15851) (not b!71175) (not b!71315) (not d!15873) (not b!71127) (not d!15881) (not b!71066) (not b!71378) (not d!15879) (not b!71380) (not b!71144) (not d!15799) (not b!71073) (not b!71244) (not b!71385) (not b!71458) (not d!15935) (not d!15825) (not b!71189) (not bm!6143) (not b!71428) (not b!71453) (not d!15829) (not b!71213) (not d!15867) (not d!15909) (not bm!6155) (not b!71292) (not d!15893) (not b!71221) (not b_lambda!3175) (not b!71437) (not b!71438) (not b!71439) (not b!71186) (not b!71326) (not b!71443) (not b!71067) (not d!15903) (not b!71077) (not d!15899) (not b!71143) (not b_lambda!3177) (not d!15953) (not b_lambda!3197) (not bm!6141) (not d!15967) (not b!71088) (not b!71229) (not b!71264) (not b!71273) (not d!15803) (not d!15859) (not d!15933) (not b!71222) (not d!15929) (not d!15889) (not bm!6152) (not b!71313) (not d!15845) (not bm!6184) (not b!71299) (not bm!6173) (not b!71207) (not b!71377) (not b!71268) (not b!71280) (not b!71009) (not d!15949) (not d!15915) (not b!71250) (not d!15925) (not b!71236) (not b!71257) (not d!15783) (not b!71110) (not d!15815) (not mapNonEmpty!3157) (not b!71338) (not b!71158) (not bm!6196) (not bm!6176) (not d!15847) (not b!71080) (not mapNonEmpty!3158) (not b!71045))
(check-sat b_and!4385 b_and!4387 (not b_next!2101) (not b_next!2103))
(get-model)

(declare-fun d!15969 () Bool)

(declare-fun e!46778 () Bool)

(assert (=> d!15969 e!46778))

(declare-fun res!38107 () Bool)

(assert (=> d!15969 (=> res!38107 e!46778)))

(declare-fun lt!31763 () Bool)

(assert (=> d!15969 (= res!38107 (not lt!31763))))

(declare-fun lt!31761 () Bool)

(assert (=> d!15969 (= lt!31763 lt!31761)))

(declare-fun lt!31762 () Unit!1989)

(declare-fun e!46777 () Unit!1989)

(assert (=> d!15969 (= lt!31762 e!46777)))

(declare-fun c!10410 () Bool)

(assert (=> d!15969 (= c!10410 lt!31761)))

(assert (=> d!15969 (= lt!31761 (containsKey!134 (toList!714 lt!31535) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!15969 (= (contains!716 lt!31535 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31763)))

(declare-fun b!71465 () Bool)

(declare-fun lt!31764 () Unit!1989)

(assert (=> b!71465 (= e!46777 lt!31764)))

(assert (=> b!71465 (= lt!31764 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31535) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71465 (isDefined!84 (getValueByKey!130 (toList!714 lt!31535) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71466 () Bool)

(declare-fun Unit!2020 () Unit!1989)

(assert (=> b!71466 (= e!46777 Unit!2020)))

(declare-fun b!71467 () Bool)

(assert (=> b!71467 (= e!46778 (isDefined!84 (getValueByKey!130 (toList!714 lt!31535) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15969 c!10410) b!71465))

(assert (= (and d!15969 (not c!10410)) b!71466))

(assert (= (and d!15969 (not res!38107)) b!71467))

(declare-fun m!68653 () Bool)

(assert (=> d!15969 m!68653))

(declare-fun m!68655 () Bool)

(assert (=> b!71465 m!68655))

(declare-fun m!68657 () Bool)

(assert (=> b!71465 m!68657))

(assert (=> b!71465 m!68657))

(declare-fun m!68659 () Bool)

(assert (=> b!71465 m!68659))

(assert (=> b!71467 m!68657))

(assert (=> b!71467 m!68657))

(assert (=> b!71467 m!68659))

(assert (=> bm!6164 d!15969))

(declare-fun b!71468 () Bool)

(declare-fun e!46779 () Option!136)

(assert (=> b!71468 (= e!46779 (Some!135 (_2!1067 (h!2061 (t!5006 (toList!714 lt!31358))))))))

(declare-fun d!15971 () Bool)

(declare-fun c!10411 () Bool)

(assert (=> d!15971 (= c!10411 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31358))) (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31358)))) (_1!1067 lt!31109))))))

(assert (=> d!15971 (= (getValueByKey!130 (t!5006 (toList!714 lt!31358)) (_1!1067 lt!31109)) e!46779)))

(declare-fun b!71469 () Bool)

(declare-fun e!46780 () Option!136)

(assert (=> b!71469 (= e!46779 e!46780)))

(declare-fun c!10412 () Bool)

(assert (=> b!71469 (= c!10412 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31358))) (not (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31358)))) (_1!1067 lt!31109)))))))

(declare-fun b!71471 () Bool)

(assert (=> b!71471 (= e!46780 None!134)))

(declare-fun b!71470 () Bool)

(assert (=> b!71470 (= e!46780 (getValueByKey!130 (t!5006 (t!5006 (toList!714 lt!31358))) (_1!1067 lt!31109)))))

(assert (= (and d!15971 c!10411) b!71468))

(assert (= (and d!15971 (not c!10411)) b!71469))

(assert (= (and b!71469 c!10412) b!71470))

(assert (= (and b!71469 (not c!10412)) b!71471))

(declare-fun m!68661 () Bool)

(assert (=> b!71470 m!68661))

(assert (=> b!71456 d!15971))

(declare-fun d!15973 () Bool)

(declare-fun e!46782 () Bool)

(assert (=> d!15973 e!46782))

(declare-fun res!38108 () Bool)

(assert (=> d!15973 (=> res!38108 e!46782)))

(declare-fun lt!31767 () Bool)

(assert (=> d!15973 (= res!38108 (not lt!31767))))

(declare-fun lt!31765 () Bool)

(assert (=> d!15973 (= lt!31767 lt!31765)))

(declare-fun lt!31766 () Unit!1989)

(declare-fun e!46781 () Unit!1989)

(assert (=> d!15973 (= lt!31766 e!46781)))

(declare-fun c!10413 () Bool)

(assert (=> d!15973 (= c!10413 lt!31765)))

(assert (=> d!15973 (= lt!31765 (containsKey!134 (toList!714 (+!91 lt!31469 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16)))) lt!31470))))

(assert (=> d!15973 (= (contains!716 (+!91 lt!31469 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16))) lt!31470) lt!31767)))

(declare-fun b!71472 () Bool)

(declare-fun lt!31768 () Unit!1989)

(assert (=> b!71472 (= e!46781 lt!31768)))

(assert (=> b!71472 (= lt!31768 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (+!91 lt!31469 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16)))) lt!31470))))

(assert (=> b!71472 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31469 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16)))) lt!31470))))

(declare-fun b!71473 () Bool)

(declare-fun Unit!2021 () Unit!1989)

(assert (=> b!71473 (= e!46781 Unit!2021)))

(declare-fun b!71474 () Bool)

(assert (=> b!71474 (= e!46782 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31469 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16)))) lt!31470)))))

(assert (= (and d!15973 c!10413) b!71472))

(assert (= (and d!15973 (not c!10413)) b!71473))

(assert (= (and d!15973 (not res!38108)) b!71474))

(declare-fun m!68663 () Bool)

(assert (=> d!15973 m!68663))

(declare-fun m!68665 () Bool)

(assert (=> b!71472 m!68665))

(declare-fun m!68667 () Bool)

(assert (=> b!71472 m!68667))

(assert (=> b!71472 m!68667))

(declare-fun m!68669 () Bool)

(assert (=> b!71472 m!68669))

(assert (=> b!71474 m!68667))

(assert (=> b!71474 m!68667))

(assert (=> b!71474 m!68669))

(assert (=> b!71139 d!15973))

(declare-fun d!15975 () Bool)

(assert (=> d!15975 (= (apply!74 (+!91 lt!31484 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16))) lt!31490) (apply!74 lt!31484 lt!31490))))

(declare-fun lt!31769 () Unit!1989)

(assert (=> d!15975 (= lt!31769 (choose!411 lt!31484 lt!31486 (zeroValue!2095 newMap!16) lt!31490))))

(declare-fun e!46783 () Bool)

(assert (=> d!15975 e!46783))

(declare-fun res!38109 () Bool)

(assert (=> d!15975 (=> (not res!38109) (not e!46783))))

(assert (=> d!15975 (= res!38109 (contains!716 lt!31484 lt!31490))))

(assert (=> d!15975 (= (addApplyDifferent!50 lt!31484 lt!31486 (zeroValue!2095 newMap!16) lt!31490) lt!31769)))

(declare-fun b!71475 () Bool)

(assert (=> b!71475 (= e!46783 (not (= lt!31490 lt!31486)))))

(assert (= (and d!15975 res!38109) b!71475))

(declare-fun m!68671 () Bool)

(assert (=> d!15975 m!68671))

(assert (=> d!15975 m!68095))

(declare-fun m!68673 () Bool)

(assert (=> d!15975 m!68673))

(assert (=> d!15975 m!68089))

(assert (=> d!15975 m!68099))

(assert (=> d!15975 m!68089))

(assert (=> b!71139 d!15975))

(declare-fun d!15977 () Bool)

(declare-fun e!46784 () Bool)

(assert (=> d!15977 e!46784))

(declare-fun res!38110 () Bool)

(assert (=> d!15977 (=> (not res!38110) (not e!46784))))

(declare-fun lt!31771 () ListLongMap!1397)

(assert (=> d!15977 (= res!38110 (contains!716 lt!31771 (_1!1067 (tuple2!2113 lt!31480 (minValue!2095 newMap!16)))))))

(declare-fun lt!31772 () List!1479)

(assert (=> d!15977 (= lt!31771 (ListLongMap!1398 lt!31772))))

(declare-fun lt!31770 () Unit!1989)

(declare-fun lt!31773 () Unit!1989)

(assert (=> d!15977 (= lt!31770 lt!31773)))

(assert (=> d!15977 (= (getValueByKey!130 lt!31772 (_1!1067 (tuple2!2113 lt!31480 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31480 (minValue!2095 newMap!16)))))))

(assert (=> d!15977 (= lt!31773 (lemmaContainsTupThenGetReturnValue!50 lt!31772 (_1!1067 (tuple2!2113 lt!31480 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31480 (minValue!2095 newMap!16)))))))

(assert (=> d!15977 (= lt!31772 (insertStrictlySorted!53 (toList!714 lt!31475) (_1!1067 (tuple2!2113 lt!31480 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31480 (minValue!2095 newMap!16)))))))

(assert (=> d!15977 (= (+!91 lt!31475 (tuple2!2113 lt!31480 (minValue!2095 newMap!16))) lt!31771)))

(declare-fun b!71476 () Bool)

(declare-fun res!38111 () Bool)

(assert (=> b!71476 (=> (not res!38111) (not e!46784))))

(assert (=> b!71476 (= res!38111 (= (getValueByKey!130 (toList!714 lt!31771) (_1!1067 (tuple2!2113 lt!31480 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31480 (minValue!2095 newMap!16))))))))

(declare-fun b!71477 () Bool)

(assert (=> b!71477 (= e!46784 (contains!717 (toList!714 lt!31771) (tuple2!2113 lt!31480 (minValue!2095 newMap!16))))))

(assert (= (and d!15977 res!38110) b!71476))

(assert (= (and b!71476 res!38111) b!71477))

(declare-fun m!68675 () Bool)

(assert (=> d!15977 m!68675))

(declare-fun m!68677 () Bool)

(assert (=> d!15977 m!68677))

(declare-fun m!68679 () Bool)

(assert (=> d!15977 m!68679))

(declare-fun m!68681 () Bool)

(assert (=> d!15977 m!68681))

(declare-fun m!68683 () Bool)

(assert (=> b!71476 m!68683))

(declare-fun m!68685 () Bool)

(assert (=> b!71477 m!68685))

(assert (=> b!71139 d!15977))

(declare-fun d!15979 () Bool)

(assert (=> d!15979 (= (apply!74 lt!31475 lt!31481) (get!1139 (getValueByKey!130 (toList!714 lt!31475) lt!31481)))))

(declare-fun bs!3061 () Bool)

(assert (= bs!3061 d!15979))

(declare-fun m!68687 () Bool)

(assert (=> bs!3061 m!68687))

(assert (=> bs!3061 m!68687))

(declare-fun m!68689 () Bool)

(assert (=> bs!3061 m!68689))

(assert (=> b!71139 d!15979))

(declare-fun d!15981 () Bool)

(assert (=> d!15981 (= (apply!74 lt!31488 lt!31473) (get!1139 (getValueByKey!130 (toList!714 lt!31488) lt!31473)))))

(declare-fun bs!3062 () Bool)

(assert (= bs!3062 d!15981))

(declare-fun m!68691 () Bool)

(assert (=> bs!3062 m!68691))

(assert (=> bs!3062 m!68691))

(declare-fun m!68693 () Bool)

(assert (=> bs!3062 m!68693))

(assert (=> b!71139 d!15981))

(declare-fun d!15983 () Bool)

(declare-fun e!46785 () Bool)

(assert (=> d!15983 e!46785))

(declare-fun res!38112 () Bool)

(assert (=> d!15983 (=> (not res!38112) (not e!46785))))

(declare-fun lt!31775 () ListLongMap!1397)

(assert (=> d!15983 (= res!38112 (contains!716 lt!31775 (_1!1067 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16)))))))

(declare-fun lt!31776 () List!1479)

(assert (=> d!15983 (= lt!31775 (ListLongMap!1398 lt!31776))))

(declare-fun lt!31774 () Unit!1989)

(declare-fun lt!31777 () Unit!1989)

(assert (=> d!15983 (= lt!31774 lt!31777)))

(assert (=> d!15983 (= (getValueByKey!130 lt!31776 (_1!1067 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16)))))))

(assert (=> d!15983 (= lt!31777 (lemmaContainsTupThenGetReturnValue!50 lt!31776 (_1!1067 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16)))))))

(assert (=> d!15983 (= lt!31776 (insertStrictlySorted!53 (toList!714 lt!31484) (_1!1067 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16)))))))

(assert (=> d!15983 (= (+!91 lt!31484 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16))) lt!31775)))

(declare-fun b!71478 () Bool)

(declare-fun res!38113 () Bool)

(assert (=> b!71478 (=> (not res!38113) (not e!46785))))

(assert (=> b!71478 (= res!38113 (= (getValueByKey!130 (toList!714 lt!31775) (_1!1067 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16))))))))

(declare-fun b!71479 () Bool)

(assert (=> b!71479 (= e!46785 (contains!717 (toList!714 lt!31775) (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16))))))

(assert (= (and d!15983 res!38112) b!71478))

(assert (= (and b!71478 res!38113) b!71479))

(declare-fun m!68695 () Bool)

(assert (=> d!15983 m!68695))

(declare-fun m!68697 () Bool)

(assert (=> d!15983 m!68697))

(declare-fun m!68699 () Bool)

(assert (=> d!15983 m!68699))

(declare-fun m!68701 () Bool)

(assert (=> d!15983 m!68701))

(declare-fun m!68703 () Bool)

(assert (=> b!71478 m!68703))

(declare-fun m!68705 () Bool)

(assert (=> b!71479 m!68705))

(assert (=> b!71139 d!15983))

(declare-fun d!15985 () Bool)

(assert (=> d!15985 (= (apply!74 (+!91 lt!31488 (tuple2!2113 lt!31477 (minValue!2095 newMap!16))) lt!31473) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31488 (tuple2!2113 lt!31477 (minValue!2095 newMap!16)))) lt!31473)))))

(declare-fun bs!3063 () Bool)

(assert (= bs!3063 d!15985))

(declare-fun m!68707 () Bool)

(assert (=> bs!3063 m!68707))

(assert (=> bs!3063 m!68707))

(declare-fun m!68709 () Bool)

(assert (=> bs!3063 m!68709))

(assert (=> b!71139 d!15985))

(declare-fun d!15987 () Bool)

(assert (=> d!15987 (= (apply!74 lt!31484 lt!31490) (get!1139 (getValueByKey!130 (toList!714 lt!31484) lt!31490)))))

(declare-fun bs!3064 () Bool)

(assert (= bs!3064 d!15987))

(declare-fun m!68711 () Bool)

(assert (=> bs!3064 m!68711))

(assert (=> bs!3064 m!68711))

(declare-fun m!68713 () Bool)

(assert (=> bs!3064 m!68713))

(assert (=> b!71139 d!15987))

(declare-fun d!15989 () Bool)

(assert (=> d!15989 (= (apply!74 (+!91 lt!31475 (tuple2!2113 lt!31480 (minValue!2095 newMap!16))) lt!31481) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31475 (tuple2!2113 lt!31480 (minValue!2095 newMap!16)))) lt!31481)))))

(declare-fun bs!3065 () Bool)

(assert (= bs!3065 d!15989))

(declare-fun m!68715 () Bool)

(assert (=> bs!3065 m!68715))

(assert (=> bs!3065 m!68715))

(declare-fun m!68717 () Bool)

(assert (=> bs!3065 m!68717))

(assert (=> b!71139 d!15989))

(declare-fun d!15991 () Bool)

(assert (=> d!15991 (= (apply!74 (+!91 lt!31488 (tuple2!2113 lt!31477 (minValue!2095 newMap!16))) lt!31473) (apply!74 lt!31488 lt!31473))))

(declare-fun lt!31778 () Unit!1989)

(assert (=> d!15991 (= lt!31778 (choose!411 lt!31488 lt!31477 (minValue!2095 newMap!16) lt!31473))))

(declare-fun e!46786 () Bool)

(assert (=> d!15991 e!46786))

(declare-fun res!38114 () Bool)

(assert (=> d!15991 (=> (not res!38114) (not e!46786))))

(assert (=> d!15991 (= res!38114 (contains!716 lt!31488 lt!31473))))

(assert (=> d!15991 (= (addApplyDifferent!50 lt!31488 lt!31477 (minValue!2095 newMap!16) lt!31473) lt!31778)))

(declare-fun b!71480 () Bool)

(assert (=> b!71480 (= e!46786 (not (= lt!31473 lt!31477)))))

(assert (= (and d!15991 res!38114) b!71480))

(declare-fun m!68719 () Bool)

(assert (=> d!15991 m!68719))

(assert (=> d!15991 m!68075))

(declare-fun m!68721 () Bool)

(assert (=> d!15991 m!68721))

(assert (=> d!15991 m!68097))

(assert (=> d!15991 m!68101))

(assert (=> d!15991 m!68097))

(assert (=> b!71139 d!15991))

(declare-fun d!15993 () Bool)

(assert (=> d!15993 (= (apply!74 (+!91 lt!31475 (tuple2!2113 lt!31480 (minValue!2095 newMap!16))) lt!31481) (apply!74 lt!31475 lt!31481))))

(declare-fun lt!31779 () Unit!1989)

(assert (=> d!15993 (= lt!31779 (choose!411 lt!31475 lt!31480 (minValue!2095 newMap!16) lt!31481))))

(declare-fun e!46787 () Bool)

(assert (=> d!15993 e!46787))

(declare-fun res!38115 () Bool)

(assert (=> d!15993 (=> (not res!38115) (not e!46787))))

(assert (=> d!15993 (= res!38115 (contains!716 lt!31475 lt!31481))))

(assert (=> d!15993 (= (addApplyDifferent!50 lt!31475 lt!31480 (minValue!2095 newMap!16) lt!31481) lt!31779)))

(declare-fun b!71481 () Bool)

(assert (=> b!71481 (= e!46787 (not (= lt!31481 lt!31480)))))

(assert (= (and d!15993 res!38115) b!71481))

(declare-fun m!68723 () Bool)

(assert (=> d!15993 m!68723))

(assert (=> d!15993 m!68077))

(declare-fun m!68725 () Bool)

(assert (=> d!15993 m!68725))

(assert (=> d!15993 m!68081))

(assert (=> d!15993 m!68087))

(assert (=> d!15993 m!68081))

(assert (=> b!71139 d!15993))

(declare-fun b!71482 () Bool)

(declare-fun e!46790 () ListLongMap!1397)

(assert (=> b!71482 (= e!46790 (ListLongMap!1398 Nil!1476))))

(declare-fun b!71483 () Bool)

(declare-fun e!46789 () Bool)

(declare-fun lt!31782 () ListLongMap!1397)

(assert (=> b!71483 (= e!46789 (isEmpty!317 lt!31782))))

(declare-fun b!71484 () Bool)

(declare-fun lt!31786 () Unit!1989)

(declare-fun lt!31785 () Unit!1989)

(assert (=> b!71484 (= lt!31786 lt!31785)))

(declare-fun lt!31781 () (_ BitVec 64))

(declare-fun lt!31783 () (_ BitVec 64))

(declare-fun lt!31784 () ListLongMap!1397)

(declare-fun lt!31780 () V!2937)

(assert (=> b!71484 (not (contains!716 (+!91 lt!31784 (tuple2!2113 lt!31781 lt!31780)) lt!31783))))

(assert (=> b!71484 (= lt!31785 (addStillNotContains!24 lt!31784 lt!31781 lt!31780 lt!31783))))

(assert (=> b!71484 (= lt!31783 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71484 (= lt!31780 (get!1136 (select (arr!1841 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71484 (= lt!31781 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!6202 () ListLongMap!1397)

(assert (=> b!71484 (= lt!31784 call!6202)))

(declare-fun e!46791 () ListLongMap!1397)

(assert (=> b!71484 (= e!46791 (+!91 call!6202 (tuple2!2113 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) (get!1136 (select (arr!1841 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71485 () Bool)

(declare-fun e!46793 () Bool)

(declare-fun e!46794 () Bool)

(assert (=> b!71485 (= e!46793 e!46794)))

(declare-fun c!10415 () Bool)

(declare-fun e!46792 () Bool)

(assert (=> b!71485 (= c!10415 e!46792)))

(declare-fun res!38116 () Bool)

(assert (=> b!71485 (=> (not res!38116) (not e!46792))))

(assert (=> b!71485 (= res!38116 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71486 () Bool)

(assert (=> b!71486 (= e!46791 call!6202)))

(declare-fun b!71488 () Bool)

(declare-fun e!46788 () Bool)

(assert (=> b!71488 (= e!46794 e!46788)))

(assert (=> b!71488 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun res!38119 () Bool)

(assert (=> b!71488 (= res!38119 (contains!716 lt!31782 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71488 (=> (not res!38119) (not e!46788))))

(declare-fun bm!6199 () Bool)

(assert (=> bm!6199 (= call!6202 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16)))))

(declare-fun b!71489 () Bool)

(assert (=> b!71489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> b!71489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (_values!2174 newMap!16))))))

(assert (=> b!71489 (= e!46788 (= (apply!74 lt!31782 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71490 () Bool)

(assert (=> b!71490 (= e!46790 e!46791)))

(declare-fun c!10414 () Bool)

(assert (=> b!71490 (= c!10414 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71491 () Bool)

(assert (=> b!71491 (= e!46789 (= lt!31782 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16))))))

(declare-fun b!71492 () Bool)

(assert (=> b!71492 (= e!46794 e!46789)))

(declare-fun c!10416 () Bool)

(assert (=> b!71492 (= c!10416 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71493 () Bool)

(assert (=> b!71493 (= e!46792 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71493 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!15995 () Bool)

(assert (=> d!15995 e!46793))

(declare-fun res!38118 () Bool)

(assert (=> d!15995 (=> (not res!38118) (not e!46793))))

(assert (=> d!15995 (= res!38118 (not (contains!716 lt!31782 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15995 (= lt!31782 e!46790)))

(declare-fun c!10417 () Bool)

(assert (=> d!15995 (= c!10417 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!15995 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!15995 (= (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31782)))

(declare-fun b!71487 () Bool)

(declare-fun res!38117 () Bool)

(assert (=> b!71487 (=> (not res!38117) (not e!46793))))

(assert (=> b!71487 (= res!38117 (not (contains!716 lt!31782 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!15995 c!10417) b!71482))

(assert (= (and d!15995 (not c!10417)) b!71490))

(assert (= (and b!71490 c!10414) b!71484))

(assert (= (and b!71490 (not c!10414)) b!71486))

(assert (= (or b!71484 b!71486) bm!6199))

(assert (= (and d!15995 res!38118) b!71487))

(assert (= (and b!71487 res!38117) b!71485))

(assert (= (and b!71485 res!38116) b!71493))

(assert (= (and b!71485 c!10415) b!71488))

(assert (= (and b!71485 (not c!10415)) b!71492))

(assert (= (and b!71488 res!38119) b!71489))

(assert (= (and b!71492 c!10416) b!71491))

(assert (= (and b!71492 (not c!10416)) b!71483))

(declare-fun b_lambda!3201 () Bool)

(assert (=> (not b_lambda!3201) (not b!71484)))

(assert (=> b!71484 t!5019))

(declare-fun b_and!4389 () Bool)

(assert (= b_and!4385 (and (=> t!5019 result!2661) b_and!4389)))

(assert (=> b!71484 t!5021))

(declare-fun b_and!4391 () Bool)

(assert (= b_and!4387 (and (=> t!5021 result!2663) b_and!4391)))

(declare-fun b_lambda!3203 () Bool)

(assert (=> (not b_lambda!3203) (not b!71489)))

(assert (=> b!71489 t!5019))

(declare-fun b_and!4393 () Bool)

(assert (= b_and!4389 (and (=> t!5019 result!2661) b_and!4393)))

(assert (=> b!71489 t!5021))

(declare-fun b_and!4395 () Bool)

(assert (= b_and!4391 (and (=> t!5021 result!2663) b_and!4395)))

(declare-fun m!68727 () Bool)

(assert (=> d!15995 m!68727))

(assert (=> d!15995 m!67873))

(assert (=> b!71488 m!67861))

(assert (=> b!71488 m!67861))

(declare-fun m!68729 () Bool)

(assert (=> b!71488 m!68729))

(declare-fun m!68731 () Bool)

(assert (=> bm!6199 m!68731))

(assert (=> b!71489 m!67861))

(assert (=> b!71489 m!67861))

(declare-fun m!68733 () Bool)

(assert (=> b!71489 m!68733))

(assert (=> b!71489 m!68053))

(assert (=> b!71489 m!67865))

(assert (=> b!71489 m!68053))

(assert (=> b!71489 m!67865))

(assert (=> b!71489 m!68055))

(declare-fun m!68735 () Bool)

(assert (=> b!71483 m!68735))

(assert (=> b!71491 m!68731))

(assert (=> b!71490 m!67861))

(assert (=> b!71490 m!67861))

(assert (=> b!71490 m!67863))

(declare-fun m!68737 () Bool)

(assert (=> b!71487 m!68737))

(assert (=> b!71493 m!67861))

(assert (=> b!71493 m!67861))

(assert (=> b!71493 m!67863))

(assert (=> b!71484 m!67861))

(declare-fun m!68739 () Bool)

(assert (=> b!71484 m!68739))

(declare-fun m!68741 () Bool)

(assert (=> b!71484 m!68741))

(assert (=> b!71484 m!68739))

(declare-fun m!68743 () Bool)

(assert (=> b!71484 m!68743))

(declare-fun m!68745 () Bool)

(assert (=> b!71484 m!68745))

(assert (=> b!71484 m!68053))

(assert (=> b!71484 m!67865))

(assert (=> b!71484 m!68053))

(assert (=> b!71484 m!67865))

(assert (=> b!71484 m!68055))

(assert (=> b!71139 d!15995))

(declare-fun d!15997 () Bool)

(assert (=> d!15997 (= (apply!74 (+!91 lt!31484 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16))) lt!31490) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31484 (tuple2!2113 lt!31486 (zeroValue!2095 newMap!16)))) lt!31490)))))

(declare-fun bs!3066 () Bool)

(assert (= bs!3066 d!15997))

(declare-fun m!68747 () Bool)

(assert (=> bs!3066 m!68747))

(assert (=> bs!3066 m!68747))

(declare-fun m!68749 () Bool)

(assert (=> bs!3066 m!68749))

(assert (=> b!71139 d!15997))

(declare-fun d!15999 () Bool)

(assert (=> d!15999 (contains!716 (+!91 lt!31469 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16))) lt!31470)))

(declare-fun lt!31787 () Unit!1989)

(assert (=> d!15999 (= lt!31787 (choose!410 lt!31469 lt!31483 (zeroValue!2095 newMap!16) lt!31470))))

(assert (=> d!15999 (contains!716 lt!31469 lt!31470)))

(assert (=> d!15999 (= (addStillContains!50 lt!31469 lt!31483 (zeroValue!2095 newMap!16) lt!31470) lt!31787)))

(declare-fun bs!3067 () Bool)

(assert (= bs!3067 d!15999))

(assert (=> bs!3067 m!68079))

(assert (=> bs!3067 m!68079))

(assert (=> bs!3067 m!68083))

(declare-fun m!68751 () Bool)

(assert (=> bs!3067 m!68751))

(declare-fun m!68753 () Bool)

(assert (=> bs!3067 m!68753))

(assert (=> b!71139 d!15999))

(declare-fun d!16001 () Bool)

(declare-fun e!46795 () Bool)

(assert (=> d!16001 e!46795))

(declare-fun res!38120 () Bool)

(assert (=> d!16001 (=> (not res!38120) (not e!46795))))

(declare-fun lt!31789 () ListLongMap!1397)

(assert (=> d!16001 (= res!38120 (contains!716 lt!31789 (_1!1067 (tuple2!2113 lt!31477 (minValue!2095 newMap!16)))))))

(declare-fun lt!31790 () List!1479)

(assert (=> d!16001 (= lt!31789 (ListLongMap!1398 lt!31790))))

(declare-fun lt!31788 () Unit!1989)

(declare-fun lt!31791 () Unit!1989)

(assert (=> d!16001 (= lt!31788 lt!31791)))

(assert (=> d!16001 (= (getValueByKey!130 lt!31790 (_1!1067 (tuple2!2113 lt!31477 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31477 (minValue!2095 newMap!16)))))))

(assert (=> d!16001 (= lt!31791 (lemmaContainsTupThenGetReturnValue!50 lt!31790 (_1!1067 (tuple2!2113 lt!31477 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31477 (minValue!2095 newMap!16)))))))

(assert (=> d!16001 (= lt!31790 (insertStrictlySorted!53 (toList!714 lt!31488) (_1!1067 (tuple2!2113 lt!31477 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31477 (minValue!2095 newMap!16)))))))

(assert (=> d!16001 (= (+!91 lt!31488 (tuple2!2113 lt!31477 (minValue!2095 newMap!16))) lt!31789)))

(declare-fun b!71494 () Bool)

(declare-fun res!38121 () Bool)

(assert (=> b!71494 (=> (not res!38121) (not e!46795))))

(assert (=> b!71494 (= res!38121 (= (getValueByKey!130 (toList!714 lt!31789) (_1!1067 (tuple2!2113 lt!31477 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31477 (minValue!2095 newMap!16))))))))

(declare-fun b!71495 () Bool)

(assert (=> b!71495 (= e!46795 (contains!717 (toList!714 lt!31789) (tuple2!2113 lt!31477 (minValue!2095 newMap!16))))))

(assert (= (and d!16001 res!38120) b!71494))

(assert (= (and b!71494 res!38121) b!71495))

(declare-fun m!68755 () Bool)

(assert (=> d!16001 m!68755))

(declare-fun m!68757 () Bool)

(assert (=> d!16001 m!68757))

(declare-fun m!68759 () Bool)

(assert (=> d!16001 m!68759))

(declare-fun m!68761 () Bool)

(assert (=> d!16001 m!68761))

(declare-fun m!68763 () Bool)

(assert (=> b!71494 m!68763))

(declare-fun m!68765 () Bool)

(assert (=> b!71495 m!68765))

(assert (=> b!71139 d!16001))

(declare-fun d!16003 () Bool)

(declare-fun e!46796 () Bool)

(assert (=> d!16003 e!46796))

(declare-fun res!38122 () Bool)

(assert (=> d!16003 (=> (not res!38122) (not e!46796))))

(declare-fun lt!31793 () ListLongMap!1397)

(assert (=> d!16003 (= res!38122 (contains!716 lt!31793 (_1!1067 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16)))))))

(declare-fun lt!31794 () List!1479)

(assert (=> d!16003 (= lt!31793 (ListLongMap!1398 lt!31794))))

(declare-fun lt!31792 () Unit!1989)

(declare-fun lt!31795 () Unit!1989)

(assert (=> d!16003 (= lt!31792 lt!31795)))

(assert (=> d!16003 (= (getValueByKey!130 lt!31794 (_1!1067 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16003 (= lt!31795 (lemmaContainsTupThenGetReturnValue!50 lt!31794 (_1!1067 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16003 (= lt!31794 (insertStrictlySorted!53 (toList!714 lt!31469) (_1!1067 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16003 (= (+!91 lt!31469 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16))) lt!31793)))

(declare-fun b!71496 () Bool)

(declare-fun res!38123 () Bool)

(assert (=> b!71496 (=> (not res!38123) (not e!46796))))

(assert (=> b!71496 (= res!38123 (= (getValueByKey!130 (toList!714 lt!31793) (_1!1067 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16))))))))

(declare-fun b!71497 () Bool)

(assert (=> b!71497 (= e!46796 (contains!717 (toList!714 lt!31793) (tuple2!2113 lt!31483 (zeroValue!2095 newMap!16))))))

(assert (= (and d!16003 res!38122) b!71496))

(assert (= (and b!71496 res!38123) b!71497))

(declare-fun m!68767 () Bool)

(assert (=> d!16003 m!68767))

(declare-fun m!68769 () Bool)

(assert (=> d!16003 m!68769))

(declare-fun m!68771 () Bool)

(assert (=> d!16003 m!68771))

(declare-fun m!68773 () Bool)

(assert (=> d!16003 m!68773))

(declare-fun m!68775 () Bool)

(assert (=> b!71496 m!68775))

(declare-fun m!68777 () Bool)

(assert (=> b!71497 m!68777))

(assert (=> b!71139 d!16003))

(declare-fun d!16005 () Bool)

(declare-fun lt!31796 () Bool)

(assert (=> d!16005 (= lt!31796 (select (content!76 (toList!714 lt!31581)) (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun e!46797 () Bool)

(assert (=> d!16005 (= lt!31796 e!46797)))

(declare-fun res!38125 () Bool)

(assert (=> d!16005 (=> (not res!38125) (not e!46797))))

(assert (=> d!16005 (= res!38125 ((_ is Cons!1475) (toList!714 lt!31581)))))

(assert (=> d!16005 (= (contains!717 (toList!714 lt!31581) (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31796)))

(declare-fun b!71498 () Bool)

(declare-fun e!46798 () Bool)

(assert (=> b!71498 (= e!46797 e!46798)))

(declare-fun res!38124 () Bool)

(assert (=> b!71498 (=> res!38124 e!46798)))

(assert (=> b!71498 (= res!38124 (= (h!2061 (toList!714 lt!31581)) (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71499 () Bool)

(assert (=> b!71499 (= e!46798 (contains!717 (t!5006 (toList!714 lt!31581)) (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!16005 res!38125) b!71498))

(assert (= (and b!71498 (not res!38124)) b!71499))

(declare-fun m!68779 () Bool)

(assert (=> d!16005 m!68779))

(declare-fun m!68781 () Bool)

(assert (=> d!16005 m!68781))

(declare-fun m!68783 () Bool)

(assert (=> b!71499 m!68783))

(assert (=> b!71250 d!16005))

(assert (=> d!15847 d!15845))

(assert (=> d!15847 d!15849))

(declare-fun d!16007 () Bool)

(assert (=> d!16007 (not (contains!716 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)) lt!31389))))

(assert (=> d!16007 true))

(declare-fun _$36!298 () Unit!1989)

(assert (=> d!16007 (= (choose!408 lt!31390 lt!31387 lt!31386 lt!31389) _$36!298)))

(declare-fun bs!3068 () Bool)

(assert (= bs!3068 d!16007))

(assert (=> bs!3068 m!67795))

(assert (=> bs!3068 m!67795))

(assert (=> bs!3068 m!67799))

(assert (=> d!15847 d!16007))

(declare-fun d!16009 () Bool)

(declare-fun e!46800 () Bool)

(assert (=> d!16009 e!46800))

(declare-fun res!38126 () Bool)

(assert (=> d!16009 (=> res!38126 e!46800)))

(declare-fun lt!31799 () Bool)

(assert (=> d!16009 (= res!38126 (not lt!31799))))

(declare-fun lt!31797 () Bool)

(assert (=> d!16009 (= lt!31799 lt!31797)))

(declare-fun lt!31798 () Unit!1989)

(declare-fun e!46799 () Unit!1989)

(assert (=> d!16009 (= lt!31798 e!46799)))

(declare-fun c!10418 () Bool)

(assert (=> d!16009 (= c!10418 lt!31797)))

(assert (=> d!16009 (= lt!31797 (containsKey!134 (toList!714 lt!31390) lt!31389))))

(assert (=> d!16009 (= (contains!716 lt!31390 lt!31389) lt!31799)))

(declare-fun b!71501 () Bool)

(declare-fun lt!31800 () Unit!1989)

(assert (=> b!71501 (= e!46799 lt!31800)))

(assert (=> b!71501 (= lt!31800 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31390) lt!31389))))

(assert (=> b!71501 (isDefined!84 (getValueByKey!130 (toList!714 lt!31390) lt!31389))))

(declare-fun b!71502 () Bool)

(declare-fun Unit!2022 () Unit!1989)

(assert (=> b!71502 (= e!46799 Unit!2022)))

(declare-fun b!71503 () Bool)

(assert (=> b!71503 (= e!46800 (isDefined!84 (getValueByKey!130 (toList!714 lt!31390) lt!31389)))))

(assert (= (and d!16009 c!10418) b!71501))

(assert (= (and d!16009 (not c!10418)) b!71502))

(assert (= (and d!16009 (not res!38126)) b!71503))

(declare-fun m!68785 () Bool)

(assert (=> d!16009 m!68785))

(declare-fun m!68787 () Bool)

(assert (=> b!71501 m!68787))

(declare-fun m!68789 () Bool)

(assert (=> b!71501 m!68789))

(assert (=> b!71501 m!68789))

(declare-fun m!68791 () Bool)

(assert (=> b!71501 m!68791))

(assert (=> b!71503 m!68789))

(assert (=> b!71503 m!68789))

(assert (=> b!71503 m!68791))

(assert (=> d!15847 d!16009))

(assert (=> d!15865 d!15883))

(assert (=> d!15865 d!15871))

(declare-fun d!16011 () Bool)

(assert (=> d!16011 (contains!716 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31231)))

(assert (=> d!16011 true))

(declare-fun _$35!315 () Unit!1989)

(assert (=> d!16011 (= (choose!410 lt!31230 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31231) _$35!315)))

(declare-fun bs!3069 () Bool)

(assert (= bs!3069 d!16011))

(assert (=> bs!3069 m!67639))

(assert (=> bs!3069 m!67639))

(assert (=> bs!3069 m!67643))

(assert (=> d!15865 d!16011))

(declare-fun d!16013 () Bool)

(declare-fun e!46802 () Bool)

(assert (=> d!16013 e!46802))

(declare-fun res!38127 () Bool)

(assert (=> d!16013 (=> res!38127 e!46802)))

(declare-fun lt!31803 () Bool)

(assert (=> d!16013 (= res!38127 (not lt!31803))))

(declare-fun lt!31801 () Bool)

(assert (=> d!16013 (= lt!31803 lt!31801)))

(declare-fun lt!31802 () Unit!1989)

(declare-fun e!46801 () Unit!1989)

(assert (=> d!16013 (= lt!31802 e!46801)))

(declare-fun c!10419 () Bool)

(assert (=> d!16013 (= c!10419 lt!31801)))

(assert (=> d!16013 (= lt!31801 (containsKey!134 (toList!714 lt!31230) lt!31231))))

(assert (=> d!16013 (= (contains!716 lt!31230 lt!31231) lt!31803)))

(declare-fun b!71505 () Bool)

(declare-fun lt!31804 () Unit!1989)

(assert (=> b!71505 (= e!46801 lt!31804)))

(assert (=> b!71505 (= lt!31804 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31230) lt!31231))))

(assert (=> b!71505 (isDefined!84 (getValueByKey!130 (toList!714 lt!31230) lt!31231))))

(declare-fun b!71506 () Bool)

(declare-fun Unit!2023 () Unit!1989)

(assert (=> b!71506 (= e!46801 Unit!2023)))

(declare-fun b!71507 () Bool)

(assert (=> b!71507 (= e!46802 (isDefined!84 (getValueByKey!130 (toList!714 lt!31230) lt!31231)))))

(assert (= (and d!16013 c!10419) b!71505))

(assert (= (and d!16013 (not c!10419)) b!71506))

(assert (= (and d!16013 (not res!38127)) b!71507))

(declare-fun m!68793 () Bool)

(assert (=> d!16013 m!68793))

(declare-fun m!68795 () Bool)

(assert (=> b!71505 m!68795))

(declare-fun m!68797 () Bool)

(assert (=> b!71505 m!68797))

(assert (=> b!71505 m!68797))

(declare-fun m!68799 () Bool)

(assert (=> b!71505 m!68799))

(assert (=> b!71507 m!68797))

(assert (=> b!71507 m!68797))

(assert (=> b!71507 m!68799))

(assert (=> d!15865 d!16013))

(declare-fun d!16015 () Bool)

(declare-fun e!46804 () Bool)

(assert (=> d!16015 e!46804))

(declare-fun res!38128 () Bool)

(assert (=> d!16015 (=> res!38128 e!46804)))

(declare-fun lt!31807 () Bool)

(assert (=> d!16015 (= res!38128 (not lt!31807))))

(declare-fun lt!31805 () Bool)

(assert (=> d!16015 (= lt!31807 lt!31805)))

(declare-fun lt!31806 () Unit!1989)

(declare-fun e!46803 () Unit!1989)

(assert (=> d!16015 (= lt!31806 e!46803)))

(declare-fun c!10420 () Bool)

(assert (=> d!16015 (= c!10420 lt!31805)))

(assert (=> d!16015 (= lt!31805 (containsKey!134 (toList!714 lt!31430) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16015 (= (contains!716 lt!31430 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) lt!31807)))

(declare-fun b!71508 () Bool)

(declare-fun lt!31808 () Unit!1989)

(assert (=> b!71508 (= e!46803 lt!31808)))

(assert (=> b!71508 (= lt!31808 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31430) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71508 (isDefined!84 (getValueByKey!130 (toList!714 lt!31430) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71509 () Bool)

(declare-fun Unit!2024 () Unit!1989)

(assert (=> b!71509 (= e!46803 Unit!2024)))

(declare-fun b!71510 () Bool)

(assert (=> b!71510 (= e!46804 (isDefined!84 (getValueByKey!130 (toList!714 lt!31430) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16015 c!10420) b!71508))

(assert (= (and d!16015 (not c!10420)) b!71509))

(assert (= (and d!16015 (not res!38128)) b!71510))

(assert (=> d!16015 m!67861))

(declare-fun m!68801 () Bool)

(assert (=> d!16015 m!68801))

(assert (=> b!71508 m!67861))

(declare-fun m!68803 () Bool)

(assert (=> b!71508 m!68803))

(assert (=> b!71508 m!67861))

(declare-fun m!68805 () Bool)

(assert (=> b!71508 m!68805))

(assert (=> b!71508 m!68805))

(declare-fun m!68807 () Bool)

(assert (=> b!71508 m!68807))

(assert (=> b!71510 m!67861))

(assert (=> b!71510 m!68805))

(assert (=> b!71510 m!68805))

(assert (=> b!71510 m!68807))

(assert (=> b!71050 d!16015))

(assert (=> b!71123 d!15905))

(declare-fun d!16017 () Bool)

(declare-fun lt!31809 () Bool)

(assert (=> d!16017 (= lt!31809 (select (content!76 lt!31465) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun e!46805 () Bool)

(assert (=> d!16017 (= lt!31809 e!46805)))

(declare-fun res!38130 () Bool)

(assert (=> d!16017 (=> (not res!38130) (not e!46805))))

(assert (=> d!16017 (= res!38130 ((_ is Cons!1475) lt!31465))))

(assert (=> d!16017 (= (contains!717 lt!31465 (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))) lt!31809)))

(declare-fun b!71511 () Bool)

(declare-fun e!46806 () Bool)

(assert (=> b!71511 (= e!46805 e!46806)))

(declare-fun res!38129 () Bool)

(assert (=> b!71511 (=> res!38129 e!46806)))

(assert (=> b!71511 (= res!38129 (= (h!2061 lt!31465) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun b!71512 () Bool)

(assert (=> b!71512 (= e!46806 (contains!717 (t!5006 lt!31465) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(assert (= (and d!16017 res!38130) b!71511))

(assert (= (and b!71511 (not res!38129)) b!71512))

(declare-fun m!68809 () Bool)

(assert (=> d!16017 m!68809))

(declare-fun m!68811 () Bool)

(assert (=> d!16017 m!68811))

(declare-fun m!68813 () Bool)

(assert (=> b!71512 m!68813))

(assert (=> b!71111 d!16017))

(declare-fun d!16019 () Bool)

(declare-fun lt!31810 () Bool)

(assert (=> d!16019 (= lt!31810 (select (content!76 lt!31641) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun e!46807 () Bool)

(assert (=> d!16019 (= lt!31810 e!46807)))

(declare-fun res!38132 () Bool)

(assert (=> d!16019 (=> (not res!38132) (not e!46807))))

(assert (=> d!16019 (= res!38132 ((_ is Cons!1475) lt!31641))))

(assert (=> d!16019 (= (contains!717 lt!31641 (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))) lt!31810)))

(declare-fun b!71513 () Bool)

(declare-fun e!46808 () Bool)

(assert (=> b!71513 (= e!46807 e!46808)))

(declare-fun res!38131 () Bool)

(assert (=> b!71513 (=> res!38131 e!46808)))

(assert (=> b!71513 (= res!38131 (= (h!2061 lt!31641) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun b!71514 () Bool)

(assert (=> b!71514 (= e!46808 (contains!717 (t!5006 lt!31641) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(assert (= (and d!16019 res!38132) b!71513))

(assert (= (and b!71513 (not res!38131)) b!71514))

(declare-fun m!68815 () Bool)

(assert (=> d!16019 m!68815))

(declare-fun m!68817 () Bool)

(assert (=> d!16019 m!68817))

(declare-fun m!68819 () Bool)

(assert (=> b!71514 m!68819))

(assert (=> b!71327 d!16019))

(declare-fun d!16021 () Bool)

(declare-fun lt!31811 () Bool)

(assert (=> d!16021 (= lt!31811 (select (content!76 (t!5006 (toList!714 lt!31365))) lt!31109))))

(declare-fun e!46809 () Bool)

(assert (=> d!16021 (= lt!31811 e!46809)))

(declare-fun res!38134 () Bool)

(assert (=> d!16021 (=> (not res!38134) (not e!46809))))

(assert (=> d!16021 (= res!38134 ((_ is Cons!1475) (t!5006 (toList!714 lt!31365))))))

(assert (=> d!16021 (= (contains!717 (t!5006 (toList!714 lt!31365)) lt!31109) lt!31811)))

(declare-fun b!71515 () Bool)

(declare-fun e!46810 () Bool)

(assert (=> b!71515 (= e!46809 e!46810)))

(declare-fun res!38133 () Bool)

(assert (=> b!71515 (=> res!38133 e!46810)))

(assert (=> b!71515 (= res!38133 (= (h!2061 (t!5006 (toList!714 lt!31365))) lt!31109))))

(declare-fun b!71516 () Bool)

(assert (=> b!71516 (= e!46810 (contains!717 (t!5006 (t!5006 (toList!714 lt!31365))) lt!31109))))

(assert (= (and d!16021 res!38134) b!71515))

(assert (= (and b!71515 (not res!38133)) b!71516))

(declare-fun m!68821 () Bool)

(assert (=> d!16021 m!68821))

(declare-fun m!68823 () Bool)

(assert (=> d!16021 m!68823))

(declare-fun m!68825 () Bool)

(assert (=> b!71516 m!68825))

(assert (=> b!71236 d!16021))

(declare-fun lt!31812 () Bool)

(declare-fun d!16023 () Bool)

(assert (=> d!16023 (= lt!31812 (select (content!76 (toList!714 lt!31435)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(declare-fun e!46811 () Bool)

(assert (=> d!16023 (= lt!31812 e!46811)))

(declare-fun res!38136 () Bool)

(assert (=> d!16023 (=> (not res!38136) (not e!46811))))

(assert (=> d!16023 (= res!38136 ((_ is Cons!1475) (toList!714 lt!31435)))))

(assert (=> d!16023 (= (contains!717 (toList!714 lt!31435) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) lt!31812)))

(declare-fun b!71517 () Bool)

(declare-fun e!46812 () Bool)

(assert (=> b!71517 (= e!46811 e!46812)))

(declare-fun res!38135 () Bool)

(assert (=> b!71517 (=> res!38135 e!46812)))

(assert (=> b!71517 (= res!38135 (= (h!2061 (toList!714 lt!31435)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(declare-fun b!71518 () Bool)

(assert (=> b!71518 (= e!46812 (contains!717 (t!5006 (toList!714 lt!31435)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(assert (= (and d!16023 res!38136) b!71517))

(assert (= (and b!71517 (not res!38135)) b!71518))

(declare-fun m!68827 () Bool)

(assert (=> d!16023 m!68827))

(declare-fun m!68829 () Bool)

(assert (=> d!16023 m!68829))

(declare-fun m!68831 () Bool)

(assert (=> b!71518 m!68831))

(assert (=> b!71075 d!16023))

(declare-fun d!16025 () Bool)

(declare-fun c!10423 () Bool)

(assert (=> d!16025 (= c!10423 ((_ is Nil!1476) (toList!714 lt!31365)))))

(declare-fun e!46815 () (InoxSet tuple2!2112))

(assert (=> d!16025 (= (content!76 (toList!714 lt!31365)) e!46815)))

(declare-fun b!71523 () Bool)

(assert (=> b!71523 (= e!46815 ((as const (Array tuple2!2112 Bool)) false))))

(declare-fun b!71524 () Bool)

(assert (=> b!71524 (= e!46815 ((_ map or) (store ((as const (Array tuple2!2112 Bool)) false) (h!2061 (toList!714 lt!31365)) true) (content!76 (t!5006 (toList!714 lt!31365)))))))

(assert (= (and d!16025 c!10423) b!71523))

(assert (= (and d!16025 (not c!10423)) b!71524))

(declare-fun m!68833 () Bool)

(assert (=> b!71524 m!68833))

(assert (=> b!71524 m!68821))

(assert (=> d!15853 d!16025))

(declare-fun d!16027 () Bool)

(declare-fun lt!31813 () Bool)

(assert (=> d!16027 (= lt!31813 (select (content!76 lt!31370) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun e!46816 () Bool)

(assert (=> d!16027 (= lt!31813 e!46816)))

(declare-fun res!38138 () Bool)

(assert (=> d!16027 (=> (not res!38138) (not e!46816))))

(assert (=> d!16027 (= res!38138 ((_ is Cons!1475) lt!31370))))

(assert (=> d!16027 (= (contains!717 lt!31370 (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))) lt!31813)))

(declare-fun b!71525 () Bool)

(declare-fun e!46817 () Bool)

(assert (=> b!71525 (= e!46816 e!46817)))

(declare-fun res!38137 () Bool)

(assert (=> b!71525 (=> res!38137 e!46817)))

(assert (=> b!71525 (= res!38137 (= (h!2061 lt!31370) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun b!71526 () Bool)

(assert (=> b!71526 (= e!46817 (contains!717 (t!5006 lt!31370) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(assert (= (and d!16027 res!38138) b!71525))

(assert (= (and b!71525 (not res!38137)) b!71526))

(declare-fun m!68835 () Bool)

(assert (=> d!16027 m!68835))

(declare-fun m!68837 () Bool)

(assert (=> d!16027 m!68837))

(declare-fun m!68839 () Bool)

(assert (=> b!71526 m!68839))

(assert (=> b!71274 d!16027))

(declare-fun d!16029 () Bool)

(declare-fun lt!31814 () Bool)

(assert (=> d!16029 (= lt!31814 (select (content!76 (t!5006 (toList!714 lt!31354))) lt!31103))))

(declare-fun e!46818 () Bool)

(assert (=> d!16029 (= lt!31814 e!46818)))

(declare-fun res!38140 () Bool)

(assert (=> d!16029 (=> (not res!38140) (not e!46818))))

(assert (=> d!16029 (= res!38140 ((_ is Cons!1475) (t!5006 (toList!714 lt!31354))))))

(assert (=> d!16029 (= (contains!717 (t!5006 (toList!714 lt!31354)) lt!31103) lt!31814)))

(declare-fun b!71527 () Bool)

(declare-fun e!46819 () Bool)

(assert (=> b!71527 (= e!46818 e!46819)))

(declare-fun res!38139 () Bool)

(assert (=> b!71527 (=> res!38139 e!46819)))

(assert (=> b!71527 (= res!38139 (= (h!2061 (t!5006 (toList!714 lt!31354))) lt!31103))))

(declare-fun b!71528 () Bool)

(assert (=> b!71528 (= e!46819 (contains!717 (t!5006 (t!5006 (toList!714 lt!31354))) lt!31103))))

(assert (= (and d!16029 res!38140) b!71527))

(assert (= (and b!71527 (not res!38139)) b!71528))

(declare-fun m!68841 () Bool)

(assert (=> d!16029 m!68841))

(declare-fun m!68843 () Bool)

(assert (=> d!16029 m!68843))

(declare-fun m!68845 () Bool)

(assert (=> b!71528 m!68845))

(assert (=> b!71286 d!16029))

(declare-fun d!16031 () Bool)

(declare-fun e!46821 () Bool)

(assert (=> d!16031 e!46821))

(declare-fun res!38141 () Bool)

(assert (=> d!16031 (=> res!38141 e!46821)))

(declare-fun lt!31817 () Bool)

(assert (=> d!16031 (= res!38141 (not lt!31817))))

(declare-fun lt!31815 () Bool)

(assert (=> d!16031 (= lt!31817 lt!31815)))

(declare-fun lt!31816 () Unit!1989)

(declare-fun e!46820 () Unit!1989)

(assert (=> d!16031 (= lt!31816 e!46820)))

(declare-fun c!10424 () Bool)

(assert (=> d!16031 (= c!10424 lt!31815)))

(assert (=> d!16031 (= lt!31815 (containsKey!134 (toList!714 lt!31452) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!16031 (= (contains!716 lt!31452 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!31817)))

(declare-fun b!71529 () Bool)

(declare-fun lt!31818 () Unit!1989)

(assert (=> b!71529 (= e!46820 lt!31818)))

(assert (=> b!71529 (= lt!31818 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31452) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!71529 (isDefined!84 (getValueByKey!130 (toList!714 lt!31452) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71530 () Bool)

(declare-fun Unit!2025 () Unit!1989)

(assert (=> b!71530 (= e!46820 Unit!2025)))

(declare-fun b!71531 () Bool)

(assert (=> b!71531 (= e!46821 (isDefined!84 (getValueByKey!130 (toList!714 lt!31452) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!16031 c!10424) b!71529))

(assert (= (and d!16031 (not c!10424)) b!71530))

(assert (= (and d!16031 (not res!38141)) b!71531))

(assert (=> d!16031 m!67923))

(declare-fun m!68847 () Bool)

(assert (=> d!16031 m!68847))

(assert (=> b!71529 m!67923))

(declare-fun m!68849 () Bool)

(assert (=> b!71529 m!68849))

(assert (=> b!71529 m!67923))

(declare-fun m!68851 () Bool)

(assert (=> b!71529 m!68851))

(assert (=> b!71529 m!68851))

(declare-fun m!68853 () Bool)

(assert (=> b!71529 m!68853))

(assert (=> b!71531 m!67923))

(assert (=> b!71531 m!68851))

(assert (=> b!71531 m!68851))

(assert (=> b!71531 m!68853))

(assert (=> b!71088 d!16031))

(declare-fun d!16033 () Bool)

(assert (=> d!16033 (isDefined!84 (getValueByKey!130 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!31819 () Unit!1989)

(assert (=> d!16033 (= lt!31819 (choose!405 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!46822 () Bool)

(assert (=> d!16033 e!46822))

(declare-fun res!38142 () Bool)

(assert (=> d!16033 (=> (not res!38142) (not e!46822))))

(assert (=> d!16033 (= res!38142 (isStrictlySorted!286 (toList!714 call!6109)))))

(assert (=> d!16033 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) lt!31819)))

(declare-fun b!71532 () Bool)

(assert (=> b!71532 (= e!46822 (containsKey!134 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!16033 res!38142) b!71532))

(assert (=> d!16033 m!67435))

(assert (=> d!16033 m!68257))

(assert (=> d!16033 m!68257))

(assert (=> d!16033 m!68259))

(assert (=> d!16033 m!67435))

(declare-fun m!68855 () Bool)

(assert (=> d!16033 m!68855))

(declare-fun m!68857 () Bool)

(assert (=> d!16033 m!68857))

(assert (=> b!71532 m!67435))

(assert (=> b!71532 m!68253))

(assert (=> b!71237 d!16033))

(declare-fun d!16035 () Bool)

(assert (=> d!16035 (= (isDefined!84 (getValueByKey!130 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))) (not (isEmpty!318 (getValueByKey!130 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun bs!3070 () Bool)

(assert (= bs!3070 d!16035))

(assert (=> bs!3070 m!68257))

(declare-fun m!68859 () Bool)

(assert (=> bs!3070 m!68859))

(assert (=> b!71237 d!16035))

(declare-fun b!71533 () Bool)

(declare-fun e!46823 () Option!136)

(assert (=> b!71533 (= e!46823 (Some!135 (_2!1067 (h!2061 (toList!714 call!6109)))))))

(declare-fun c!10425 () Bool)

(declare-fun d!16037 () Bool)

(assert (=> d!16037 (= c!10425 (and ((_ is Cons!1475) (toList!714 call!6109)) (= (_1!1067 (h!2061 (toList!714 call!6109))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!16037 (= (getValueByKey!130 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) e!46823)))

(declare-fun b!71534 () Bool)

(declare-fun e!46824 () Option!136)

(assert (=> b!71534 (= e!46823 e!46824)))

(declare-fun c!10426 () Bool)

(assert (=> b!71534 (= c!10426 (and ((_ is Cons!1475) (toList!714 call!6109)) (not (= (_1!1067 (h!2061 (toList!714 call!6109))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun b!71536 () Bool)

(assert (=> b!71536 (= e!46824 None!134)))

(declare-fun b!71535 () Bool)

(assert (=> b!71535 (= e!46824 (getValueByKey!130 (t!5006 (toList!714 call!6109)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!16037 c!10425) b!71533))

(assert (= (and d!16037 (not c!10425)) b!71534))

(assert (= (and b!71534 c!10426) b!71535))

(assert (= (and b!71534 (not c!10426)) b!71536))

(assert (=> b!71535 m!67435))

(declare-fun m!68861 () Bool)

(assert (=> b!71535 m!68861))

(assert (=> b!71237 d!16037))

(declare-fun d!16039 () Bool)

(declare-fun res!38143 () Bool)

(declare-fun e!46825 () Bool)

(assert (=> d!16039 (=> res!38143 e!46825)))

(assert (=> d!16039 (= res!38143 (and ((_ is Cons!1475) (toList!714 call!6111)) (= (_1!1067 (h!2061 (toList!714 call!6111))) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341)))))))

(assert (=> d!16039 (= (containsKey!134 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))) e!46825)))

(declare-fun b!71537 () Bool)

(declare-fun e!46826 () Bool)

(assert (=> b!71537 (= e!46825 e!46826)))

(declare-fun res!38144 () Bool)

(assert (=> b!71537 (=> (not res!38144) (not e!46826))))

(assert (=> b!71537 (= res!38144 (and (or (not ((_ is Cons!1475) (toList!714 call!6111))) (bvsle (_1!1067 (h!2061 (toList!714 call!6111))) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341)))) ((_ is Cons!1475) (toList!714 call!6111)) (bvslt (_1!1067 (h!2061 (toList!714 call!6111))) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341)))))))

(declare-fun b!71538 () Bool)

(assert (=> b!71538 (= e!46826 (containsKey!134 (t!5006 (toList!714 call!6111)) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(assert (= (and d!16039 (not res!38143)) b!71537))

(assert (= (and b!71537 res!38144) b!71538))

(assert (=> b!71538 m!67679))

(declare-fun m!68863 () Bool)

(assert (=> b!71538 m!68863))

(assert (=> d!15825 d!16039))

(declare-fun d!16041 () Bool)

(declare-fun lt!31820 () Bool)

(assert (=> d!16041 (= lt!31820 (select (content!76 lt!31411) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun e!46827 () Bool)

(assert (=> d!16041 (= lt!31820 e!46827)))

(declare-fun res!38146 () Bool)

(assert (=> d!16041 (=> (not res!38146) (not e!46827))))

(assert (=> d!16041 (= res!38146 ((_ is Cons!1475) lt!31411))))

(assert (=> d!16041 (= (contains!717 lt!31411 (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))) lt!31820)))

(declare-fun b!71539 () Bool)

(declare-fun e!46828 () Bool)

(assert (=> b!71539 (= e!46827 e!46828)))

(declare-fun res!38145 () Bool)

(assert (=> b!71539 (=> res!38145 e!46828)))

(assert (=> b!71539 (= res!38145 (= (h!2061 lt!31411) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun b!71540 () Bool)

(assert (=> b!71540 (= e!46828 (contains!717 (t!5006 lt!31411) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(assert (= (and d!16041 res!38146) b!71539))

(assert (= (and b!71539 (not res!38145)) b!71540))

(declare-fun m!68865 () Bool)

(assert (=> d!16041 m!68865))

(declare-fun m!68867 () Bool)

(assert (=> d!16041 m!68867))

(declare-fun m!68869 () Bool)

(assert (=> b!71540 m!68869))

(assert (=> b!71031 d!16041))

(declare-fun b!71541 () Bool)

(declare-fun e!46829 () Option!136)

(assert (=> b!71541 (= e!46829 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31613)))))))

(declare-fun c!10427 () Bool)

(declare-fun d!16043 () Bool)

(assert (=> d!16043 (= c!10427 (and ((_ is Cons!1475) (toList!714 lt!31613)) (= (_1!1067 (h!2061 (toList!714 lt!31613))) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(assert (=> d!16043 (= (getValueByKey!130 (toList!714 lt!31613) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) e!46829)))

(declare-fun b!71542 () Bool)

(declare-fun e!46830 () Option!136)

(assert (=> b!71542 (= e!46829 e!46830)))

(declare-fun c!10428 () Bool)

(assert (=> b!71542 (= c!10428 (and ((_ is Cons!1475) (toList!714 lt!31613)) (not (= (_1!1067 (h!2061 (toList!714 lt!31613))) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))))

(declare-fun b!71544 () Bool)

(assert (=> b!71544 (= e!46830 None!134)))

(declare-fun b!71543 () Bool)

(assert (=> b!71543 (= e!46830 (getValueByKey!130 (t!5006 (toList!714 lt!31613)) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (= (and d!16043 c!10427) b!71541))

(assert (= (and d!16043 (not c!10427)) b!71542))

(assert (= (and b!71542 c!10428) b!71543))

(assert (= (and b!71542 (not c!10428)) b!71544))

(declare-fun m!68871 () Bool)

(assert (=> b!71543 m!68871))

(assert (=> b!71293 d!16043))

(declare-fun d!16045 () Bool)

(assert (=> d!16045 (= (map!1145 (_2!1068 lt!31724)) (getCurrentListMap!407 (_keys!3838 (_2!1068 lt!31724)) (_values!2174 (_2!1068 lt!31724)) (mask!6147 (_2!1068 lt!31724)) (extraKeys!2054 (_2!1068 lt!31724)) (zeroValue!2095 (_2!1068 lt!31724)) (minValue!2095 (_2!1068 lt!31724)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1068 lt!31724))))))

(declare-fun bs!3071 () Bool)

(assert (= bs!3071 d!16045))

(declare-fun m!68873 () Bool)

(assert (=> bs!3071 m!68873))

(assert (=> b!71435 d!16045))

(declare-fun d!16047 () Bool)

(declare-fun e!46831 () Bool)

(assert (=> d!16047 e!46831))

(declare-fun res!38147 () Bool)

(assert (=> d!16047 (=> (not res!38147) (not e!46831))))

(declare-fun lt!31822 () ListLongMap!1397)

(assert (=> d!16047 (= res!38147 (contains!716 lt!31822 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun lt!31823 () List!1479)

(assert (=> d!16047 (= lt!31822 (ListLongMap!1398 lt!31823))))

(declare-fun lt!31821 () Unit!1989)

(declare-fun lt!31824 () Unit!1989)

(assert (=> d!16047 (= lt!31821 lt!31824)))

(assert (=> d!16047 (= (getValueByKey!130 lt!31823 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!16047 (= lt!31824 (lemmaContainsTupThenGetReturnValue!50 lt!31823 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!16047 (= lt!31823 (insertStrictlySorted!53 (toList!714 (map!1145 newMap!16)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!16047 (= (+!91 (map!1145 newMap!16) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) lt!31822)))

(declare-fun b!71545 () Bool)

(declare-fun res!38148 () Bool)

(assert (=> b!71545 (=> (not res!38148) (not e!46831))))

(assert (=> b!71545 (= res!38148 (= (getValueByKey!130 (toList!714 lt!31822) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!71546 () Bool)

(assert (=> b!71546 (= e!46831 (contains!717 (toList!714 lt!31822) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(assert (= (and d!16047 res!38147) b!71545))

(assert (= (and b!71545 res!38148) b!71546))

(declare-fun m!68875 () Bool)

(assert (=> d!16047 m!68875))

(declare-fun m!68877 () Bool)

(assert (=> d!16047 m!68877))

(declare-fun m!68879 () Bool)

(assert (=> d!16047 m!68879))

(declare-fun m!68881 () Bool)

(assert (=> d!16047 m!68881))

(declare-fun m!68883 () Bool)

(assert (=> b!71545 m!68883))

(declare-fun m!68885 () Bool)

(assert (=> b!71546 m!68885))

(assert (=> b!71435 d!16047))

(assert (=> b!71435 d!15721))

(declare-fun d!16049 () Bool)

(assert (=> d!16049 (= (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31234)) (v!2513 (getValueByKey!130 (toList!714 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31234)))))

(assert (=> d!15875 d!16049))

(declare-fun b!71547 () Bool)

(declare-fun e!46832 () Option!136)

(assert (=> b!71547 (= e!46832 (Some!135 (_2!1067 (h!2061 (toList!714 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))))

(declare-fun c!10429 () Bool)

(declare-fun d!16051 () Bool)

(assert (=> d!16051 (= c!10429 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31234)))))

(assert (=> d!16051 (= (getValueByKey!130 (toList!714 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31234) e!46832)))

(declare-fun b!71548 () Bool)

(declare-fun e!46833 () Option!136)

(assert (=> b!71548 (= e!46832 e!46833)))

(declare-fun c!10430 () Bool)

(assert (=> b!71548 (= c!10430 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) (not (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31234))))))

(declare-fun b!71550 () Bool)

(assert (=> b!71550 (= e!46833 None!134)))

(declare-fun b!71549 () Bool)

(assert (=> b!71549 (= e!46833 (getValueByKey!130 (t!5006 (toList!714 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) lt!31234))))

(assert (= (and d!16051 c!10429) b!71547))

(assert (= (and d!16051 (not c!10429)) b!71548))

(assert (= (and b!71548 c!10430) b!71549))

(assert (= (and b!71548 (not c!10430)) b!71550))

(declare-fun m!68887 () Bool)

(assert (=> b!71549 m!68887))

(assert (=> d!15875 d!16051))

(declare-fun d!16053 () Bool)

(assert (=> d!16053 (= (validMask!0 (mask!6147 newMap!16)) (and (or (= (mask!6147 newMap!16) #b00000000000000000000000000000111) (= (mask!6147 newMap!16) #b00000000000000000000000000001111) (= (mask!6147 newMap!16) #b00000000000000000000000000011111) (= (mask!6147 newMap!16) #b00000000000000000000000000111111) (= (mask!6147 newMap!16) #b00000000000000000000000001111111) (= (mask!6147 newMap!16) #b00000000000000000000000011111111) (= (mask!6147 newMap!16) #b00000000000000000000000111111111) (= (mask!6147 newMap!16) #b00000000000000000000001111111111) (= (mask!6147 newMap!16) #b00000000000000000000011111111111) (= (mask!6147 newMap!16) #b00000000000000000000111111111111) (= (mask!6147 newMap!16) #b00000000000000000001111111111111) (= (mask!6147 newMap!16) #b00000000000000000011111111111111) (= (mask!6147 newMap!16) #b00000000000000000111111111111111) (= (mask!6147 newMap!16) #b00000000000000001111111111111111) (= (mask!6147 newMap!16) #b00000000000000011111111111111111) (= (mask!6147 newMap!16) #b00000000000000111111111111111111) (= (mask!6147 newMap!16) #b00000000000001111111111111111111) (= (mask!6147 newMap!16) #b00000000000011111111111111111111) (= (mask!6147 newMap!16) #b00000000000111111111111111111111) (= (mask!6147 newMap!16) #b00000000001111111111111111111111) (= (mask!6147 newMap!16) #b00000000011111111111111111111111) (= (mask!6147 newMap!16) #b00000000111111111111111111111111) (= (mask!6147 newMap!16) #b00000001111111111111111111111111) (= (mask!6147 newMap!16) #b00000011111111111111111111111111) (= (mask!6147 newMap!16) #b00000111111111111111111111111111) (= (mask!6147 newMap!16) #b00001111111111111111111111111111) (= (mask!6147 newMap!16) #b00011111111111111111111111111111) (= (mask!6147 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6147 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!15835 d!16053))

(declare-fun d!16055 () Bool)

(declare-fun e!46835 () Bool)

(assert (=> d!16055 e!46835))

(declare-fun res!38149 () Bool)

(assert (=> d!16055 (=> res!38149 e!46835)))

(declare-fun lt!31827 () Bool)

(assert (=> d!16055 (= res!38149 (not lt!31827))))

(declare-fun lt!31825 () Bool)

(assert (=> d!16055 (= lt!31827 lt!31825)))

(declare-fun lt!31826 () Unit!1989)

(declare-fun e!46834 () Unit!1989)

(assert (=> d!16055 (= lt!31826 e!46834)))

(declare-fun c!10431 () Bool)

(assert (=> d!16055 (= c!10431 lt!31825)))

(assert (=> d!16055 (= lt!31825 (containsKey!134 (toList!714 lt!31487) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16055 (= (contains!716 lt!31487 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) lt!31827)))

(declare-fun b!71551 () Bool)

(declare-fun lt!31828 () Unit!1989)

(assert (=> b!71551 (= e!46834 lt!31828)))

(assert (=> b!71551 (= lt!31828 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31487) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71551 (isDefined!84 (getValueByKey!130 (toList!714 lt!31487) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71552 () Bool)

(declare-fun Unit!2026 () Unit!1989)

(assert (=> b!71552 (= e!46834 Unit!2026)))

(declare-fun b!71553 () Bool)

(assert (=> b!71553 (= e!46835 (isDefined!84 (getValueByKey!130 (toList!714 lt!31487) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16055 c!10431) b!71551))

(assert (= (and d!16055 (not c!10431)) b!71552))

(assert (= (and d!16055 (not res!38149)) b!71553))

(assert (=> d!16055 m!67861))

(declare-fun m!68889 () Bool)

(assert (=> d!16055 m!68889))

(assert (=> b!71551 m!67861))

(declare-fun m!68891 () Bool)

(assert (=> b!71551 m!68891))

(assert (=> b!71551 m!67861))

(declare-fun m!68893 () Bool)

(assert (=> b!71551 m!68893))

(assert (=> b!71551 m!68893))

(declare-fun m!68895 () Bool)

(assert (=> b!71551 m!68895))

(assert (=> b!71553 m!67861))

(assert (=> b!71553 m!68893))

(assert (=> b!71553 m!68893))

(assert (=> b!71553 m!68895))

(assert (=> b!71127 d!16055))

(declare-fun d!16057 () Bool)

(declare-fun res!38150 () Bool)

(declare-fun e!46836 () Bool)

(assert (=> d!16057 (=> res!38150 e!46836)))

(assert (=> d!16057 (= res!38150 (and ((_ is Cons!1475) (toList!714 lt!31248)) (= (_1!1067 (h!2061 (toList!714 lt!31248))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16057 (= (containsKey!134 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000) e!46836)))

(declare-fun b!71554 () Bool)

(declare-fun e!46837 () Bool)

(assert (=> b!71554 (= e!46836 e!46837)))

(declare-fun res!38151 () Bool)

(assert (=> b!71554 (=> (not res!38151) (not e!46837))))

(assert (=> b!71554 (= res!38151 (and (or (not ((_ is Cons!1475) (toList!714 lt!31248))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31248))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1475) (toList!714 lt!31248)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31248))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71555 () Bool)

(assert (=> b!71555 (= e!46837 (containsKey!134 (t!5006 (toList!714 lt!31248)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16057 (not res!38150)) b!71554))

(assert (= (and b!71554 res!38151) b!71555))

(declare-fun m!68897 () Bool)

(assert (=> b!71555 m!68897))

(assert (=> d!15831 d!16057))

(declare-fun d!16059 () Bool)

(assert (=> d!16059 (arrayContainsKey!0 (_keys!3838 newMap!16) lt!31629 #b00000000000000000000000000000000)))

(declare-fun lt!31831 () Unit!1989)

(declare-fun choose!13 (array!3857 (_ BitVec 64) (_ BitVec 32)) Unit!1989)

(assert (=> d!16059 (= lt!31831 (choose!13 (_keys!3838 newMap!16) lt!31629 #b00000000000000000000000000000000))))

(assert (=> d!16059 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!16059 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3838 newMap!16) lt!31629 #b00000000000000000000000000000000) lt!31831)))

(declare-fun bs!3072 () Bool)

(assert (= bs!3072 d!16059))

(assert (=> bs!3072 m!68443))

(declare-fun m!68899 () Bool)

(assert (=> bs!3072 m!68899))

(assert (=> b!71309 d!16059))

(declare-fun d!16061 () Bool)

(declare-fun res!38152 () Bool)

(declare-fun e!46838 () Bool)

(assert (=> d!16061 (=> res!38152 e!46838)))

(assert (=> d!16061 (= res!38152 (= (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) lt!31629))))

(assert (=> d!16061 (= (arrayContainsKey!0 (_keys!3838 newMap!16) lt!31629 #b00000000000000000000000000000000) e!46838)))

(declare-fun b!71556 () Bool)

(declare-fun e!46839 () Bool)

(assert (=> b!71556 (= e!46838 e!46839)))

(declare-fun res!38153 () Bool)

(assert (=> b!71556 (=> (not res!38153) (not e!46839))))

(assert (=> b!71556 (= res!38153 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71557 () Bool)

(assert (=> b!71557 (= e!46839 (arrayContainsKey!0 (_keys!3838 newMap!16) lt!31629 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16061 (not res!38152)) b!71556))

(assert (= (and b!71556 res!38153) b!71557))

(assert (=> d!16061 m!67861))

(declare-fun m!68901 () Bool)

(assert (=> b!71557 m!68901))

(assert (=> b!71309 d!16061))

(declare-fun b!71558 () Bool)

(declare-fun e!46842 () SeekEntryResult!238)

(assert (=> b!71558 (= e!46842 Undefined!238)))

(declare-fun b!71559 () Bool)

(declare-fun e!46840 () SeekEntryResult!238)

(declare-fun lt!31834 () SeekEntryResult!238)

(assert (=> b!71559 (= e!46840 (seekKeyOrZeroReturnVacant!0 (x!11009 lt!31834) (index!3084 lt!31834) (index!3084 lt!31834) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(declare-fun b!71560 () Bool)

(declare-fun e!46841 () SeekEntryResult!238)

(assert (=> b!71560 (= e!46842 e!46841)))

(declare-fun lt!31833 () (_ BitVec 64))

(assert (=> b!71560 (= lt!31833 (select (arr!1840 (_keys!3838 newMap!16)) (index!3084 lt!31834)))))

(declare-fun c!10432 () Bool)

(assert (=> b!71560 (= c!10432 (= lt!31833 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!16063 () Bool)

(declare-fun lt!31832 () SeekEntryResult!238)

(assert (=> d!16063 (and (or ((_ is Undefined!238) lt!31832) (not ((_ is Found!238) lt!31832)) (and (bvsge (index!3083 lt!31832) #b00000000000000000000000000000000) (bvslt (index!3083 lt!31832) (size!2078 (_keys!3838 newMap!16))))) (or ((_ is Undefined!238) lt!31832) ((_ is Found!238) lt!31832) (not ((_ is MissingZero!238) lt!31832)) (and (bvsge (index!3082 lt!31832) #b00000000000000000000000000000000) (bvslt (index!3082 lt!31832) (size!2078 (_keys!3838 newMap!16))))) (or ((_ is Undefined!238) lt!31832) ((_ is Found!238) lt!31832) ((_ is MissingZero!238) lt!31832) (not ((_ is MissingVacant!238) lt!31832)) (and (bvsge (index!3085 lt!31832) #b00000000000000000000000000000000) (bvslt (index!3085 lt!31832) (size!2078 (_keys!3838 newMap!16))))) (or ((_ is Undefined!238) lt!31832) (ite ((_ is Found!238) lt!31832) (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31832)) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!238) lt!31832) (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3082 lt!31832)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!238) lt!31832) (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3085 lt!31832)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16063 (= lt!31832 e!46842)))

(declare-fun c!10433 () Bool)

(assert (=> d!16063 (= c!10433 (and ((_ is Intermediate!238) lt!31834) (undefined!1050 lt!31834)))))

(assert (=> d!16063 (= lt!31834 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) (mask!6147 newMap!16)) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(assert (=> d!16063 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16063 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) (_keys!3838 newMap!16) (mask!6147 newMap!16)) lt!31832)))

(declare-fun b!71561 () Bool)

(assert (=> b!71561 (= e!46841 (Found!238 (index!3084 lt!31834)))))

(declare-fun b!71562 () Bool)

(declare-fun c!10434 () Bool)

(assert (=> b!71562 (= c!10434 (= lt!31833 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71562 (= e!46841 e!46840)))

(declare-fun b!71563 () Bool)

(assert (=> b!71563 (= e!46840 (MissingZero!238 (index!3084 lt!31834)))))

(assert (= (and d!16063 c!10433) b!71558))

(assert (= (and d!16063 (not c!10433)) b!71560))

(assert (= (and b!71560 c!10432) b!71561))

(assert (= (and b!71560 (not c!10432)) b!71562))

(assert (= (and b!71562 c!10434) b!71563))

(assert (= (and b!71562 (not c!10434)) b!71559))

(assert (=> b!71559 m!67861))

(declare-fun m!68903 () Bool)

(assert (=> b!71559 m!68903))

(declare-fun m!68905 () Bool)

(assert (=> b!71560 m!68905))

(declare-fun m!68907 () Bool)

(assert (=> d!16063 m!68907))

(assert (=> d!16063 m!67861))

(declare-fun m!68909 () Bool)

(assert (=> d!16063 m!68909))

(declare-fun m!68911 () Bool)

(assert (=> d!16063 m!68911))

(declare-fun m!68913 () Bool)

(assert (=> d!16063 m!68913))

(assert (=> d!16063 m!67861))

(assert (=> d!16063 m!68907))

(assert (=> d!16063 m!67873))

(declare-fun m!68915 () Bool)

(assert (=> d!16063 m!68915))

(assert (=> b!71309 d!16063))

(declare-fun d!16065 () Bool)

(declare-fun e!46843 () Bool)

(assert (=> d!16065 e!46843))

(declare-fun res!38154 () Bool)

(assert (=> d!16065 (=> (not res!38154) (not e!46843))))

(declare-fun lt!31836 () ListLongMap!1397)

(assert (=> d!16065 (= res!38154 (contains!716 lt!31836 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun lt!31837 () List!1479)

(assert (=> d!16065 (= lt!31836 (ListLongMap!1398 lt!31837))))

(declare-fun lt!31835 () Unit!1989)

(declare-fun lt!31838 () Unit!1989)

(assert (=> d!16065 (= lt!31835 lt!31838)))

(assert (=> d!16065 (= (getValueByKey!130 lt!31837 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16065 (= lt!31838 (lemmaContainsTupThenGetReturnValue!50 lt!31837 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16065 (= lt!31837 (insertStrictlySorted!53 (toList!714 call!6171) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16065 (= (+!91 call!6171 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) lt!31836)))

(declare-fun b!71564 () Bool)

(declare-fun res!38155 () Bool)

(assert (=> b!71564 (=> (not res!38155) (not e!46843))))

(assert (=> b!71564 (= res!38155 (= (getValueByKey!130 (toList!714 lt!31836) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(declare-fun b!71565 () Bool)

(assert (=> b!71565 (= e!46843 (contains!717 (toList!714 lt!31836) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(assert (= (and d!16065 res!38154) b!71564))

(assert (= (and b!71564 res!38155) b!71565))

(declare-fun m!68917 () Bool)

(assert (=> d!16065 m!68917))

(declare-fun m!68919 () Bool)

(assert (=> d!16065 m!68919))

(declare-fun m!68921 () Bool)

(assert (=> d!16065 m!68921))

(declare-fun m!68923 () Bool)

(assert (=> d!16065 m!68923))

(declare-fun m!68925 () Bool)

(assert (=> b!71564 m!68925))

(declare-fun m!68927 () Bool)

(assert (=> b!71565 m!68927))

(assert (=> b!71212 d!16065))

(assert (=> d!15815 d!15777))

(assert (=> d!15815 d!15779))

(declare-fun d!16067 () Bool)

(assert (=> d!16067 (isDefined!84 (getValueByKey!130 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!16067 true))

(declare-fun _$12!320 () Unit!1989)

(assert (=> d!16067 (= (choose!405 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) _$12!320)))

(declare-fun bs!3073 () Bool)

(assert (= bs!3073 d!16067))

(assert (=> bs!3073 m!67435))

(assert (=> bs!3073 m!67667))

(assert (=> bs!3073 m!67667))

(assert (=> bs!3073 m!67669))

(assert (=> d!15815 d!16067))

(declare-fun d!16069 () Bool)

(declare-fun res!38160 () Bool)

(declare-fun e!46848 () Bool)

(assert (=> d!16069 (=> res!38160 e!46848)))

(assert (=> d!16069 (= res!38160 (or ((_ is Nil!1476) (toList!714 lt!31108)) ((_ is Nil!1476) (t!5006 (toList!714 lt!31108)))))))

(assert (=> d!16069 (= (isStrictlySorted!286 (toList!714 lt!31108)) e!46848)))

(declare-fun b!71570 () Bool)

(declare-fun e!46849 () Bool)

(assert (=> b!71570 (= e!46848 e!46849)))

(declare-fun res!38161 () Bool)

(assert (=> b!71570 (=> (not res!38161) (not e!46849))))

(assert (=> b!71570 (= res!38161 (bvslt (_1!1067 (h!2061 (toList!714 lt!31108))) (_1!1067 (h!2061 (t!5006 (toList!714 lt!31108))))))))

(declare-fun b!71571 () Bool)

(assert (=> b!71571 (= e!46849 (isStrictlySorted!286 (t!5006 (toList!714 lt!31108))))))

(assert (= (and d!16069 (not res!38160)) b!71570))

(assert (= (and b!71570 res!38161) b!71571))

(declare-fun m!68929 () Bool)

(assert (=> b!71571 m!68929))

(assert (=> d!15815 d!16069))

(declare-fun d!16071 () Bool)

(declare-fun res!38162 () Bool)

(declare-fun e!46850 () Bool)

(assert (=> d!16071 (=> res!38162 e!46850)))

(assert (=> d!16071 (= res!38162 (or ((_ is Nil!1476) lt!31465) ((_ is Nil!1476) (t!5006 lt!31465))))))

(assert (=> d!16071 (= (isStrictlySorted!286 lt!31465) e!46850)))

(declare-fun b!71572 () Bool)

(declare-fun e!46851 () Bool)

(assert (=> b!71572 (= e!46850 e!46851)))

(declare-fun res!38163 () Bool)

(assert (=> b!71572 (=> (not res!38163) (not e!46851))))

(assert (=> b!71572 (= res!38163 (bvslt (_1!1067 (h!2061 lt!31465)) (_1!1067 (h!2061 (t!5006 lt!31465)))))))

(declare-fun b!71573 () Bool)

(assert (=> b!71573 (= e!46851 (isStrictlySorted!286 (t!5006 lt!31465)))))

(assert (= (and d!16071 (not res!38162)) b!71572))

(assert (= (and b!71572 res!38163) b!71573))

(declare-fun m!68931 () Bool)

(assert (=> b!71573 m!68931))

(assert (=> d!15813 d!16071))

(declare-fun d!16073 () Bool)

(declare-fun res!38164 () Bool)

(declare-fun e!46852 () Bool)

(assert (=> d!16073 (=> res!38164 e!46852)))

(assert (=> d!16073 (= res!38164 (or ((_ is Nil!1476) (toList!714 lt!31105)) ((_ is Nil!1476) (t!5006 (toList!714 lt!31105)))))))

(assert (=> d!16073 (= (isStrictlySorted!286 (toList!714 lt!31105)) e!46852)))

(declare-fun b!71574 () Bool)

(declare-fun e!46853 () Bool)

(assert (=> b!71574 (= e!46852 e!46853)))

(declare-fun res!38165 () Bool)

(assert (=> b!71574 (=> (not res!38165) (not e!46853))))

(assert (=> b!71574 (= res!38165 (bvslt (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 (h!2061 (t!5006 (toList!714 lt!31105))))))))

(declare-fun b!71575 () Bool)

(assert (=> b!71575 (= e!46853 (isStrictlySorted!286 (t!5006 (toList!714 lt!31105))))))

(assert (= (and d!16073 (not res!38164)) b!71574))

(assert (= (and b!71574 res!38165) b!71575))

(declare-fun m!68933 () Bool)

(assert (=> b!71575 m!68933))

(assert (=> d!15813 d!16073))

(declare-fun d!16075 () Bool)

(assert (=> d!16075 (= (apply!74 lt!31535 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1139 (getValueByKey!130 (toList!714 lt!31535) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3074 () Bool)

(assert (= bs!3074 d!16075))

(declare-fun m!68935 () Bool)

(assert (=> bs!3074 m!68935))

(assert (=> bs!3074 m!68935))

(declare-fun m!68937 () Bool)

(assert (=> bs!3074 m!68937))

(assert (=> b!71192 d!16075))

(declare-fun d!16077 () Bool)

(declare-fun res!38166 () Bool)

(declare-fun e!46854 () Bool)

(assert (=> d!16077 (=> res!38166 e!46854)))

(assert (=> d!16077 (= res!38166 (or ((_ is Nil!1476) lt!31641) ((_ is Nil!1476) (t!5006 lt!31641))))))

(assert (=> d!16077 (= (isStrictlySorted!286 lt!31641) e!46854)))

(declare-fun b!71576 () Bool)

(declare-fun e!46855 () Bool)

(assert (=> b!71576 (= e!46854 e!46855)))

(declare-fun res!38167 () Bool)

(assert (=> b!71576 (=> (not res!38167) (not e!46855))))

(assert (=> b!71576 (= res!38167 (bvslt (_1!1067 (h!2061 lt!31641)) (_1!1067 (h!2061 (t!5006 lt!31641)))))))

(declare-fun b!71577 () Bool)

(assert (=> b!71577 (= e!46855 (isStrictlySorted!286 (t!5006 lt!31641)))))

(assert (= (and d!16077 (not res!38166)) b!71576))

(assert (= (and b!71576 res!38167) b!71577))

(declare-fun m!68939 () Bool)

(assert (=> b!71577 m!68939))

(assert (=> d!15925 d!16077))

(assert (=> d!15925 d!16073))

(declare-fun d!16079 () Bool)

(declare-fun e!46857 () Bool)

(assert (=> d!16079 e!46857))

(declare-fun res!38168 () Bool)

(assert (=> d!16079 (=> res!38168 e!46857)))

(declare-fun lt!31841 () Bool)

(assert (=> d!16079 (= res!38168 (not lt!31841))))

(declare-fun lt!31839 () Bool)

(assert (=> d!16079 (= lt!31841 lt!31839)))

(declare-fun lt!31840 () Unit!1989)

(declare-fun e!46856 () Unit!1989)

(assert (=> d!16079 (= lt!31840 e!46856)))

(declare-fun c!10435 () Bool)

(assert (=> d!16079 (= c!10435 lt!31839)))

(assert (=> d!16079 (= lt!31839 (containsKey!134 (toList!714 lt!31613) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!16079 (= (contains!716 lt!31613 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) lt!31841)))

(declare-fun b!71578 () Bool)

(declare-fun lt!31842 () Unit!1989)

(assert (=> b!71578 (= e!46856 lt!31842)))

(assert (=> b!71578 (= lt!31842 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31613) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> b!71578 (isDefined!84 (getValueByKey!130 (toList!714 lt!31613) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!71579 () Bool)

(declare-fun Unit!2027 () Unit!1989)

(assert (=> b!71579 (= e!46856 Unit!2027)))

(declare-fun b!71580 () Bool)

(assert (=> b!71580 (= e!46857 (isDefined!84 (getValueByKey!130 (toList!714 lt!31613) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(assert (= (and d!16079 c!10435) b!71578))

(assert (= (and d!16079 (not c!10435)) b!71579))

(assert (= (and d!16079 (not res!38168)) b!71580))

(declare-fun m!68941 () Bool)

(assert (=> d!16079 m!68941))

(declare-fun m!68943 () Bool)

(assert (=> b!71578 m!68943))

(assert (=> b!71578 m!68429))

(assert (=> b!71578 m!68429))

(declare-fun m!68945 () Bool)

(assert (=> b!71578 m!68945))

(assert (=> b!71580 m!68429))

(assert (=> b!71580 m!68429))

(assert (=> b!71580 m!68945))

(assert (=> d!15907 d!16079))

(declare-fun b!71581 () Bool)

(declare-fun e!46858 () Option!136)

(assert (=> b!71581 (= e!46858 (Some!135 (_2!1067 (h!2061 lt!31614))))))

(declare-fun d!16081 () Bool)

(declare-fun c!10436 () Bool)

(assert (=> d!16081 (= c!10436 (and ((_ is Cons!1475) lt!31614) (= (_1!1067 (h!2061 lt!31614)) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(assert (=> d!16081 (= (getValueByKey!130 lt!31614 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) e!46858)))

(declare-fun b!71582 () Bool)

(declare-fun e!46859 () Option!136)

(assert (=> b!71582 (= e!46858 e!46859)))

(declare-fun c!10437 () Bool)

(assert (=> b!71582 (= c!10437 (and ((_ is Cons!1475) lt!31614) (not (= (_1!1067 (h!2061 lt!31614)) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))))

(declare-fun b!71584 () Bool)

(assert (=> b!71584 (= e!46859 None!134)))

(declare-fun b!71583 () Bool)

(assert (=> b!71583 (= e!46859 (getValueByKey!130 (t!5006 lt!31614) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (= (and d!16081 c!10436) b!71581))

(assert (= (and d!16081 (not c!10436)) b!71582))

(assert (= (and b!71582 c!10437) b!71583))

(assert (= (and b!71582 (not c!10437)) b!71584))

(declare-fun m!68947 () Bool)

(assert (=> b!71583 m!68947))

(assert (=> d!15907 d!16081))

(declare-fun d!16083 () Bool)

(assert (=> d!16083 (= (getValueByKey!130 lt!31614 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) (Some!135 (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun lt!31843 () Unit!1989)

(assert (=> d!16083 (= lt!31843 (choose!404 lt!31614 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun e!46860 () Bool)

(assert (=> d!16083 e!46860))

(declare-fun res!38169 () Bool)

(assert (=> d!16083 (=> (not res!38169) (not e!46860))))

(assert (=> d!16083 (= res!38169 (isStrictlySorted!286 lt!31614))))

(assert (=> d!16083 (= (lemmaContainsTupThenGetReturnValue!50 lt!31614 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) lt!31843)))

(declare-fun b!71585 () Bool)

(declare-fun res!38170 () Bool)

(assert (=> b!71585 (=> (not res!38170) (not e!46860))))

(assert (=> b!71585 (= res!38170 (containsKey!134 lt!31614 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!71586 () Bool)

(assert (=> b!71586 (= e!46860 (contains!717 lt!31614 (tuple2!2113 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(assert (= (and d!16083 res!38169) b!71585))

(assert (= (and b!71585 res!38170) b!71586))

(assert (=> d!16083 m!68423))

(declare-fun m!68949 () Bool)

(assert (=> d!16083 m!68949))

(declare-fun m!68951 () Bool)

(assert (=> d!16083 m!68951))

(declare-fun m!68953 () Bool)

(assert (=> b!71585 m!68953))

(declare-fun m!68955 () Bool)

(assert (=> b!71586 m!68955))

(assert (=> d!15907 d!16083))

(declare-fun e!46863 () Bool)

(declare-fun b!71587 () Bool)

(declare-fun lt!31844 () List!1479)

(assert (=> b!71587 (= e!46863 (contains!717 lt!31844 (tuple2!2113 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun b!71588 () Bool)

(declare-fun e!46861 () List!1479)

(assert (=> b!71588 (= e!46861 (insertStrictlySorted!53 (t!5006 (toList!714 e!46423)) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun d!16085 () Bool)

(assert (=> d!16085 e!46863))

(declare-fun res!38172 () Bool)

(assert (=> d!16085 (=> (not res!38172) (not e!46863))))

(assert (=> d!16085 (= res!38172 (isStrictlySorted!286 lt!31844))))

(declare-fun e!46862 () List!1479)

(assert (=> d!16085 (= lt!31844 e!46862)))

(declare-fun c!10441 () Bool)

(assert (=> d!16085 (= c!10441 (and ((_ is Cons!1475) (toList!714 e!46423)) (bvslt (_1!1067 (h!2061 (toList!714 e!46423))) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(assert (=> d!16085 (isStrictlySorted!286 (toList!714 e!46423))))

(assert (=> d!16085 (= (insertStrictlySorted!53 (toList!714 e!46423) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) lt!31844)))

(declare-fun b!71589 () Bool)

(declare-fun c!10440 () Bool)

(assert (=> b!71589 (= c!10440 (and ((_ is Cons!1475) (toList!714 e!46423)) (bvsgt (_1!1067 (h!2061 (toList!714 e!46423))) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun e!46865 () List!1479)

(declare-fun e!46864 () List!1479)

(assert (=> b!71589 (= e!46865 e!46864)))

(declare-fun b!71590 () Bool)

(assert (=> b!71590 (= e!46862 e!46865)))

(declare-fun c!10439 () Bool)

(assert (=> b!71590 (= c!10439 (and ((_ is Cons!1475) (toList!714 e!46423)) (= (_1!1067 (h!2061 (toList!714 e!46423))) (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun b!71591 () Bool)

(declare-fun call!6205 () List!1479)

(assert (=> b!71591 (= e!46865 call!6205)))

(declare-fun b!71592 () Bool)

(declare-fun res!38171 () Bool)

(assert (=> b!71592 (=> (not res!38171) (not e!46863))))

(assert (=> b!71592 (= res!38171 (containsKey!134 lt!31844 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!71593 () Bool)

(assert (=> b!71593 (= e!46861 (ite c!10439 (t!5006 (toList!714 e!46423)) (ite c!10440 (Cons!1475 (h!2061 (toList!714 e!46423)) (t!5006 (toList!714 e!46423))) Nil!1476)))))

(declare-fun b!71594 () Bool)

(declare-fun call!6204 () List!1479)

(assert (=> b!71594 (= e!46862 call!6204)))

(declare-fun b!71595 () Bool)

(declare-fun call!6203 () List!1479)

(assert (=> b!71595 (= e!46864 call!6203)))

(declare-fun bm!6200 () Bool)

(assert (=> bm!6200 (= call!6203 call!6205)))

(declare-fun bm!6201 () Bool)

(assert (=> bm!6201 (= call!6205 call!6204)))

(declare-fun bm!6202 () Bool)

(assert (=> bm!6202 (= call!6204 ($colon$colon!64 e!46861 (ite c!10441 (h!2061 (toList!714 e!46423)) (tuple2!2113 (_1!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_2!1067 (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))))

(declare-fun c!10438 () Bool)

(assert (=> bm!6202 (= c!10438 c!10441)))

(declare-fun b!71596 () Bool)

(assert (=> b!71596 (= e!46864 call!6203)))

(assert (= (and d!16085 c!10441) b!71594))

(assert (= (and d!16085 (not c!10441)) b!71590))

(assert (= (and b!71590 c!10439) b!71591))

(assert (= (and b!71590 (not c!10439)) b!71589))

(assert (= (and b!71589 c!10440) b!71595))

(assert (= (and b!71589 (not c!10440)) b!71596))

(assert (= (or b!71595 b!71596) bm!6200))

(assert (= (or b!71591 bm!6200) bm!6201))

(assert (= (or b!71594 bm!6201) bm!6202))

(assert (= (and bm!6202 c!10438) b!71588))

(assert (= (and bm!6202 (not c!10438)) b!71593))

(assert (= (and d!16085 res!38172) b!71592))

(assert (= (and b!71592 res!38171) b!71587))

(declare-fun m!68957 () Bool)

(assert (=> b!71587 m!68957))

(declare-fun m!68959 () Bool)

(assert (=> b!71588 m!68959))

(declare-fun m!68961 () Bool)

(assert (=> b!71592 m!68961))

(declare-fun m!68963 () Bool)

(assert (=> bm!6202 m!68963))

(declare-fun m!68965 () Bool)

(assert (=> d!16085 m!68965))

(declare-fun m!68967 () Bool)

(assert (=> d!16085 m!68967))

(assert (=> d!15907 d!16085))

(declare-fun d!16087 () Bool)

(declare-fun lt!31845 () Bool)

(assert (=> d!16087 (= lt!31845 (select (content!75 Nil!1477) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!46867 () Bool)

(assert (=> d!16087 (= lt!31845 e!46867)))

(declare-fun res!38173 () Bool)

(assert (=> d!16087 (=> (not res!38173) (not e!46867))))

(assert (=> d!16087 (= res!38173 ((_ is Cons!1476) Nil!1477))))

(assert (=> d!16087 (= (contains!718 Nil!1477 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) lt!31845)))

(declare-fun b!71597 () Bool)

(declare-fun e!46866 () Bool)

(assert (=> b!71597 (= e!46867 e!46866)))

(declare-fun res!38174 () Bool)

(assert (=> b!71597 (=> res!38174 e!46866)))

(assert (=> b!71597 (= res!38174 (= (h!2062 Nil!1477) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71598 () Bool)

(assert (=> b!71598 (= e!46866 (contains!718 (t!5007 Nil!1477) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!16087 res!38173) b!71597))

(assert (= (and b!71597 (not res!38174)) b!71598))

(assert (=> d!16087 m!68009))

(assert (=> d!16087 m!67861))

(declare-fun m!68969 () Bool)

(assert (=> d!16087 m!68969))

(assert (=> b!71598 m!67861))

(declare-fun m!68971 () Bool)

(assert (=> b!71598 m!68971))

(assert (=> b!71189 d!16087))

(declare-fun d!16089 () Bool)

(declare-fun e!46868 () Bool)

(assert (=> d!16089 e!46868))

(declare-fun res!38175 () Bool)

(assert (=> d!16089 (=> (not res!38175) (not e!46868))))

(declare-fun lt!31847 () ListLongMap!1397)

(assert (=> d!16089 (= res!38175 (contains!716 lt!31847 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun lt!31848 () List!1479)

(assert (=> d!16089 (= lt!31847 (ListLongMap!1398 lt!31848))))

(declare-fun lt!31846 () Unit!1989)

(declare-fun lt!31849 () Unit!1989)

(assert (=> d!16089 (= lt!31846 lt!31849)))

(assert (=> d!16089 (= (getValueByKey!130 lt!31848 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!16089 (= lt!31849 (lemmaContainsTupThenGetReturnValue!50 lt!31848 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!16089 (= lt!31848 (insertStrictlySorted!53 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!16089 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) lt!31847)))

(declare-fun b!71599 () Bool)

(declare-fun res!38176 () Bool)

(assert (=> b!71599 (=> (not res!38176) (not e!46868))))

(assert (=> b!71599 (= res!38176 (= (getValueByKey!130 (toList!714 lt!31847) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!71600 () Bool)

(assert (=> b!71600 (= e!46868 (contains!717 (toList!714 lt!31847) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(assert (= (and d!16089 res!38175) b!71599))

(assert (= (and b!71599 res!38176) b!71600))

(declare-fun m!68973 () Bool)

(assert (=> d!16089 m!68973))

(declare-fun m!68975 () Bool)

(assert (=> d!16089 m!68975))

(declare-fun m!68977 () Bool)

(assert (=> d!16089 m!68977))

(declare-fun m!68979 () Bool)

(assert (=> d!16089 m!68979))

(declare-fun m!68981 () Bool)

(assert (=> b!71599 m!68981))

(declare-fun m!68983 () Bool)

(assert (=> b!71600 m!68983))

(assert (=> b!71183 d!16089))

(assert (=> b!71183 d!15819))

(declare-fun bm!6203 () Bool)

(declare-fun call!6212 () Bool)

(declare-fun lt!31868 () ListLongMap!1397)

(assert (=> bm!6203 (= call!6212 (contains!716 lt!31868 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71601 () Bool)

(declare-fun e!46869 () Bool)

(assert (=> b!71601 (= e!46869 (= (apply!74 lt!31868 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!71602 () Bool)

(declare-fun e!46875 () ListLongMap!1397)

(declare-fun call!6208 () ListLongMap!1397)

(assert (=> b!71602 (= e!46875 call!6208)))

(declare-fun call!6206 () ListLongMap!1397)

(declare-fun bm!6204 () Bool)

(assert (=> bm!6204 (= call!6206 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71603 () Bool)

(declare-fun e!46879 () Unit!1989)

(declare-fun Unit!2028 () Unit!1989)

(assert (=> b!71603 (= e!46879 Unit!2028)))

(declare-fun b!71604 () Bool)

(declare-fun e!46880 () Bool)

(declare-fun e!46874 () Bool)

(assert (=> b!71604 (= e!46880 e!46874)))

(declare-fun res!38183 () Bool)

(assert (=> b!71604 (=> (not res!38183) (not e!46874))))

(assert (=> b!71604 (= res!38183 (contains!716 lt!31868 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71604 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71605 () Bool)

(declare-fun c!10443 () Bool)

(assert (=> b!71605 (= c!10443 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46870 () ListLongMap!1397)

(assert (=> b!71605 (= e!46870 e!46875)))

(declare-fun c!10446 () Bool)

(declare-fun call!6210 () ListLongMap!1397)

(declare-fun bm!6205 () Bool)

(declare-fun c!10444 () Bool)

(declare-fun call!6207 () ListLongMap!1397)

(declare-fun call!6211 () ListLongMap!1397)

(assert (=> bm!6205 (= call!6210 (+!91 (ite c!10446 call!6206 (ite c!10444 call!6211 call!6207)) (ite (or c!10446 c!10444) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun bm!6206 () Bool)

(declare-fun call!6209 () Bool)

(assert (=> bm!6206 (= call!6209 (contains!716 lt!31868 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71606 () Bool)

(declare-fun e!46873 () Bool)

(assert (=> b!71606 (= e!46873 (not call!6209))))

(declare-fun b!71607 () Bool)

(assert (=> b!71607 (= e!46874 (= (apply!74 lt!31868 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71607 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))))))

(assert (=> b!71607 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71608 () Bool)

(declare-fun e!46881 () Bool)

(assert (=> b!71608 (= e!46881 (not call!6212))))

(declare-fun b!71609 () Bool)

(declare-fun e!46876 () ListLongMap!1397)

(assert (=> b!71609 (= e!46876 e!46870)))

(assert (=> b!71609 (= c!10444 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71610 () Bool)

(assert (=> b!71610 (= e!46875 call!6207)))

(declare-fun bm!6207 () Bool)

(assert (=> bm!6207 (= call!6208 call!6210)))

(declare-fun b!71611 () Bool)

(declare-fun e!46871 () Bool)

(assert (=> b!71611 (= e!46871 e!46881)))

(declare-fun c!10447 () Bool)

(assert (=> b!71611 (= c!10447 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6208 () Bool)

(assert (=> bm!6208 (= call!6211 call!6206)))

(declare-fun b!71612 () Bool)

(assert (=> b!71612 (= e!46870 call!6208)))

(declare-fun b!71613 () Bool)

(declare-fun res!38179 () Bool)

(assert (=> b!71613 (=> (not res!38179) (not e!46871))))

(assert (=> b!71613 (= res!38179 e!46880)))

(declare-fun res!38178 () Bool)

(assert (=> b!71613 (=> res!38178 e!46880)))

(declare-fun e!46878 () Bool)

(assert (=> b!71613 (= res!38178 (not e!46878))))

(declare-fun res!38180 () Bool)

(assert (=> b!71613 (=> (not res!38180) (not e!46878))))

(assert (=> b!71613 (= res!38180 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71614 () Bool)

(assert (=> b!71614 (= e!46878 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71615 () Bool)

(declare-fun res!38184 () Bool)

(assert (=> b!71615 (=> (not res!38184) (not e!46871))))

(assert (=> b!71615 (= res!38184 e!46873)))

(declare-fun c!10445 () Bool)

(assert (=> b!71615 (= c!10445 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!71616 () Bool)

(declare-fun lt!31866 () Unit!1989)

(assert (=> b!71616 (= e!46879 lt!31866)))

(declare-fun lt!31850 () ListLongMap!1397)

(assert (=> b!71616 (= lt!31850 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31864 () (_ BitVec 64))

(assert (=> b!71616 (= lt!31864 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31851 () (_ BitVec 64))

(assert (=> b!71616 (= lt!31851 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31852 () Unit!1989)

(assert (=> b!71616 (= lt!31852 (addStillContains!50 lt!31850 lt!31864 (zeroValue!2095 newMap!16) lt!31851))))

(assert (=> b!71616 (contains!716 (+!91 lt!31850 (tuple2!2113 lt!31864 (zeroValue!2095 newMap!16))) lt!31851)))

(declare-fun lt!31863 () Unit!1989)

(assert (=> b!71616 (= lt!31863 lt!31852)))

(declare-fun lt!31856 () ListLongMap!1397)

(assert (=> b!71616 (= lt!31856 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31861 () (_ BitVec 64))

(assert (=> b!71616 (= lt!31861 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31862 () (_ BitVec 64))

(assert (=> b!71616 (= lt!31862 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31859 () Unit!1989)

(assert (=> b!71616 (= lt!31859 (addApplyDifferent!50 lt!31856 lt!31861 (minValue!2095 newMap!16) lt!31862))))

(assert (=> b!71616 (= (apply!74 (+!91 lt!31856 (tuple2!2113 lt!31861 (minValue!2095 newMap!16))) lt!31862) (apply!74 lt!31856 lt!31862))))

(declare-fun lt!31853 () Unit!1989)

(assert (=> b!71616 (= lt!31853 lt!31859)))

(declare-fun lt!31865 () ListLongMap!1397)

(assert (=> b!71616 (= lt!31865 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31867 () (_ BitVec 64))

(assert (=> b!71616 (= lt!31867 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31871 () (_ BitVec 64))

(assert (=> b!71616 (= lt!31871 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31860 () Unit!1989)

(assert (=> b!71616 (= lt!31860 (addApplyDifferent!50 lt!31865 lt!31867 (zeroValue!2095 newMap!16) lt!31871))))

(assert (=> b!71616 (= (apply!74 (+!91 lt!31865 (tuple2!2113 lt!31867 (zeroValue!2095 newMap!16))) lt!31871) (apply!74 lt!31865 lt!31871))))

(declare-fun lt!31870 () Unit!1989)

(assert (=> b!71616 (= lt!31870 lt!31860)))

(declare-fun lt!31869 () ListLongMap!1397)

(assert (=> b!71616 (= lt!31869 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31858 () (_ BitVec 64))

(assert (=> b!71616 (= lt!31858 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31854 () (_ BitVec 64))

(assert (=> b!71616 (= lt!31854 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71616 (= lt!31866 (addApplyDifferent!50 lt!31869 lt!31858 (minValue!2095 newMap!16) lt!31854))))

(assert (=> b!71616 (= (apply!74 (+!91 lt!31869 (tuple2!2113 lt!31858 (minValue!2095 newMap!16))) lt!31854) (apply!74 lt!31869 lt!31854))))

(declare-fun b!71617 () Bool)

(declare-fun e!46877 () Bool)

(assert (=> b!71617 (= e!46881 e!46877)))

(declare-fun res!38177 () Bool)

(assert (=> b!71617 (= res!38177 call!6212)))

(assert (=> b!71617 (=> (not res!38177) (not e!46877))))

(declare-fun b!71618 () Bool)

(assert (=> b!71618 (= e!46873 e!46869)))

(declare-fun res!38185 () Bool)

(assert (=> b!71618 (= res!38185 call!6209)))

(assert (=> b!71618 (=> (not res!38185) (not e!46869))))

(declare-fun d!16091 () Bool)

(assert (=> d!16091 e!46871))

(declare-fun res!38181 () Bool)

(assert (=> d!16091 (=> (not res!38181) (not e!46871))))

(assert (=> d!16091 (= res!38181 (or (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))))

(declare-fun lt!31857 () ListLongMap!1397)

(assert (=> d!16091 (= lt!31868 lt!31857)))

(declare-fun lt!31855 () Unit!1989)

(assert (=> d!16091 (= lt!31855 e!46879)))

(declare-fun c!10442 () Bool)

(declare-fun e!46872 () Bool)

(assert (=> d!16091 (= c!10442 e!46872)))

(declare-fun res!38182 () Bool)

(assert (=> d!16091 (=> (not res!38182) (not e!46872))))

(assert (=> d!16091 (= res!38182 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16091 (= lt!31857 e!46876)))

(assert (=> d!16091 (= c!10446 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16091 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16091 (= (getCurrentListMap!407 (_keys!3838 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31868)))

(declare-fun b!71619 () Bool)

(assert (=> b!71619 (= e!46877 (= (apply!74 lt!31868 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun b!71620 () Bool)

(assert (=> b!71620 (= e!46872 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71621 () Bool)

(assert (=> b!71621 (= e!46876 (+!91 call!6210 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun bm!6209 () Bool)

(assert (=> bm!6209 (= call!6207 call!6211)))

(assert (= (and d!16091 c!10446) b!71621))

(assert (= (and d!16091 (not c!10446)) b!71609))

(assert (= (and b!71609 c!10444) b!71612))

(assert (= (and b!71609 (not c!10444)) b!71605))

(assert (= (and b!71605 c!10443) b!71602))

(assert (= (and b!71605 (not c!10443)) b!71610))

(assert (= (or b!71602 b!71610) bm!6209))

(assert (= (or b!71612 bm!6209) bm!6208))

(assert (= (or b!71612 b!71602) bm!6207))

(assert (= (or b!71621 bm!6208) bm!6204))

(assert (= (or b!71621 bm!6207) bm!6205))

(assert (= (and d!16091 res!38182) b!71620))

(assert (= (and d!16091 c!10442) b!71616))

(assert (= (and d!16091 (not c!10442)) b!71603))

(assert (= (and d!16091 res!38181) b!71613))

(assert (= (and b!71613 res!38180) b!71614))

(assert (= (and b!71613 (not res!38178)) b!71604))

(assert (= (and b!71604 res!38183) b!71607))

(assert (= (and b!71613 res!38179) b!71615))

(assert (= (and b!71615 c!10445) b!71618))

(assert (= (and b!71615 (not c!10445)) b!71606))

(assert (= (and b!71618 res!38185) b!71601))

(assert (= (or b!71618 b!71606) bm!6206))

(assert (= (and b!71615 res!38184) b!71611))

(assert (= (and b!71611 c!10447) b!71617))

(assert (= (and b!71611 (not c!10447)) b!71608))

(assert (= (and b!71617 res!38177) b!71619))

(assert (= (or b!71617 b!71608) bm!6203))

(declare-fun b_lambda!3205 () Bool)

(assert (=> (not b_lambda!3205) (not b!71607)))

(assert (=> b!71607 t!5019))

(declare-fun b_and!4397 () Bool)

(assert (= b_and!4393 (and (=> t!5019 result!2661) b_and!4397)))

(assert (=> b!71607 t!5021))

(declare-fun b_and!4399 () Bool)

(assert (= b_and!4395 (and (=> t!5021 result!2663) b_and!4399)))

(declare-fun m!68985 () Bool)

(assert (=> b!71621 m!68985))

(assert (=> b!71620 m!67861))

(assert (=> b!71620 m!67861))

(assert (=> b!71620 m!67863))

(assert (=> b!71607 m!67865))

(assert (=> b!71607 m!67861))

(declare-fun m!68987 () Bool)

(assert (=> b!71607 m!68987))

(assert (=> b!71607 m!67865))

(declare-fun m!68989 () Bool)

(assert (=> b!71607 m!68989))

(assert (=> b!71607 m!67861))

(declare-fun m!68991 () Bool)

(assert (=> b!71607 m!68991))

(assert (=> b!71607 m!68987))

(assert (=> b!71614 m!67861))

(assert (=> b!71614 m!67861))

(assert (=> b!71614 m!67863))

(assert (=> d!16091 m!67873))

(assert (=> b!71604 m!67861))

(assert (=> b!71604 m!67861))

(declare-fun m!68993 () Bool)

(assert (=> b!71604 m!68993))

(declare-fun m!68995 () Bool)

(assert (=> b!71601 m!68995))

(declare-fun m!68997 () Bool)

(assert (=> bm!6206 m!68997))

(declare-fun m!68999 () Bool)

(assert (=> bm!6205 m!68999))

(declare-fun m!69001 () Bool)

(assert (=> bm!6204 m!69001))

(declare-fun m!69003 () Bool)

(assert (=> bm!6203 m!69003))

(declare-fun m!69005 () Bool)

(assert (=> b!71619 m!69005))

(declare-fun m!69007 () Bool)

(assert (=> b!71616 m!69007))

(declare-fun m!69009 () Bool)

(assert (=> b!71616 m!69009))

(declare-fun m!69011 () Bool)

(assert (=> b!71616 m!69011))

(assert (=> b!71616 m!69001))

(assert (=> b!71616 m!67861))

(declare-fun m!69013 () Bool)

(assert (=> b!71616 m!69013))

(declare-fun m!69015 () Bool)

(assert (=> b!71616 m!69015))

(assert (=> b!71616 m!69013))

(declare-fun m!69017 () Bool)

(assert (=> b!71616 m!69017))

(declare-fun m!69019 () Bool)

(assert (=> b!71616 m!69019))

(assert (=> b!71616 m!69015))

(declare-fun m!69021 () Bool)

(assert (=> b!71616 m!69021))

(declare-fun m!69023 () Bool)

(assert (=> b!71616 m!69023))

(declare-fun m!69025 () Bool)

(assert (=> b!71616 m!69025))

(declare-fun m!69027 () Bool)

(assert (=> b!71616 m!69027))

(declare-fun m!69029 () Bool)

(assert (=> b!71616 m!69029))

(declare-fun m!69031 () Bool)

(assert (=> b!71616 m!69031))

(assert (=> b!71616 m!69023))

(declare-fun m!69033 () Bool)

(assert (=> b!71616 m!69033))

(assert (=> b!71616 m!69031))

(declare-fun m!69035 () Bool)

(assert (=> b!71616 m!69035))

(assert (=> b!71183 d!16091))

(declare-fun d!16093 () Bool)

(assert (=> d!16093 (= (get!1139 (getValueByKey!130 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2513 (getValueByKey!130 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15953 d!16093))

(declare-fun b!71622 () Bool)

(declare-fun e!46882 () Option!136)

(assert (=> b!71622 (= e!46882 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31248)))))))

(declare-fun d!16095 () Bool)

(declare-fun c!10448 () Bool)

(assert (=> d!16095 (= c!10448 (and ((_ is Cons!1475) (toList!714 lt!31248)) (= (_1!1067 (h!2061 (toList!714 lt!31248))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16095 (= (getValueByKey!130 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000) e!46882)))

(declare-fun b!71623 () Bool)

(declare-fun e!46883 () Option!136)

(assert (=> b!71623 (= e!46882 e!46883)))

(declare-fun c!10449 () Bool)

(assert (=> b!71623 (= c!10449 (and ((_ is Cons!1475) (toList!714 lt!31248)) (not (= (_1!1067 (h!2061 (toList!714 lt!31248))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71625 () Bool)

(assert (=> b!71625 (= e!46883 None!134)))

(declare-fun b!71624 () Bool)

(assert (=> b!71624 (= e!46883 (getValueByKey!130 (t!5006 (toList!714 lt!31248)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16095 c!10448) b!71622))

(assert (= (and d!16095 (not c!10448)) b!71623))

(assert (= (and b!71623 c!10449) b!71624))

(assert (= (and b!71623 (not c!10449)) b!71625))

(declare-fun m!69037 () Bool)

(assert (=> b!71624 m!69037))

(assert (=> d!15953 d!16095))

(declare-fun d!16097 () Bool)

(declare-fun lt!31872 () Bool)

(assert (=> d!16097 (= lt!31872 (select (content!76 lt!31610) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun e!46884 () Bool)

(assert (=> d!16097 (= lt!31872 e!46884)))

(declare-fun res!38187 () Bool)

(assert (=> d!16097 (=> (not res!38187) (not e!46884))))

(assert (=> d!16097 (= res!38187 ((_ is Cons!1475) lt!31610))))

(assert (=> d!16097 (= (contains!717 lt!31610 (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))) lt!31872)))

(declare-fun b!71626 () Bool)

(declare-fun e!46885 () Bool)

(assert (=> b!71626 (= e!46884 e!46885)))

(declare-fun res!38186 () Bool)

(assert (=> b!71626 (=> res!38186 e!46885)))

(assert (=> b!71626 (= res!38186 (= (h!2061 lt!31610) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun b!71627 () Bool)

(assert (=> b!71627 (= e!46885 (contains!717 (t!5006 lt!31610) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(assert (= (and d!16097 res!38187) b!71626))

(assert (= (and b!71626 (not res!38186)) b!71627))

(declare-fun m!69039 () Bool)

(assert (=> d!16097 m!69039))

(declare-fun m!69041 () Bool)

(assert (=> d!16097 m!69041))

(declare-fun m!69043 () Bool)

(assert (=> b!71627 m!69043))

(assert (=> b!71275 d!16097))

(declare-fun b!71628 () Bool)

(declare-fun e!46888 () Bool)

(declare-fun lt!31873 () List!1479)

(assert (=> b!71628 (= e!46888 (contains!717 lt!31873 (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun b!71629 () Bool)

(declare-fun e!46886 () List!1479)

(assert (=> b!71629 (= e!46886 (insertStrictlySorted!53 (t!5006 (t!5006 (toList!714 lt!31105))) (_1!1067 lt!31103) (_2!1067 lt!31103)))))

(declare-fun d!16099 () Bool)

(assert (=> d!16099 e!46888))

(declare-fun res!38189 () Bool)

(assert (=> d!16099 (=> (not res!38189) (not e!46888))))

(assert (=> d!16099 (= res!38189 (isStrictlySorted!286 lt!31873))))

(declare-fun e!46887 () List!1479)

(assert (=> d!16099 (= lt!31873 e!46887)))

(declare-fun c!10453 () Bool)

(assert (=> d!16099 (= c!10453 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31105))) (bvslt (_1!1067 (h!2061 (t!5006 (toList!714 lt!31105)))) (_1!1067 lt!31103))))))

(assert (=> d!16099 (isStrictlySorted!286 (t!5006 (toList!714 lt!31105)))))

(assert (=> d!16099 (= (insertStrictlySorted!53 (t!5006 (toList!714 lt!31105)) (_1!1067 lt!31103) (_2!1067 lt!31103)) lt!31873)))

(declare-fun b!71630 () Bool)

(declare-fun c!10452 () Bool)

(assert (=> b!71630 (= c!10452 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31105))) (bvsgt (_1!1067 (h!2061 (t!5006 (toList!714 lt!31105)))) (_1!1067 lt!31103))))))

(declare-fun e!46890 () List!1479)

(declare-fun e!46889 () List!1479)

(assert (=> b!71630 (= e!46890 e!46889)))

(declare-fun b!71631 () Bool)

(assert (=> b!71631 (= e!46887 e!46890)))

(declare-fun c!10451 () Bool)

(assert (=> b!71631 (= c!10451 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31105))) (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31105)))) (_1!1067 lt!31103))))))

(declare-fun b!71632 () Bool)

(declare-fun call!6215 () List!1479)

(assert (=> b!71632 (= e!46890 call!6215)))

(declare-fun b!71633 () Bool)

(declare-fun res!38188 () Bool)

(assert (=> b!71633 (=> (not res!38188) (not e!46888))))

(assert (=> b!71633 (= res!38188 (containsKey!134 lt!31873 (_1!1067 lt!31103)))))

(declare-fun b!71634 () Bool)

(assert (=> b!71634 (= e!46886 (ite c!10451 (t!5006 (t!5006 (toList!714 lt!31105))) (ite c!10452 (Cons!1475 (h!2061 (t!5006 (toList!714 lt!31105))) (t!5006 (t!5006 (toList!714 lt!31105)))) Nil!1476)))))

(declare-fun b!71635 () Bool)

(declare-fun call!6214 () List!1479)

(assert (=> b!71635 (= e!46887 call!6214)))

(declare-fun b!71636 () Bool)

(declare-fun call!6213 () List!1479)

(assert (=> b!71636 (= e!46889 call!6213)))

(declare-fun bm!6210 () Bool)

(assert (=> bm!6210 (= call!6213 call!6215)))

(declare-fun bm!6211 () Bool)

(assert (=> bm!6211 (= call!6215 call!6214)))

(declare-fun bm!6212 () Bool)

(assert (=> bm!6212 (= call!6214 ($colon$colon!64 e!46886 (ite c!10453 (h!2061 (t!5006 (toList!714 lt!31105))) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103)))))))

(declare-fun c!10450 () Bool)

(assert (=> bm!6212 (= c!10450 c!10453)))

(declare-fun b!71637 () Bool)

(assert (=> b!71637 (= e!46889 call!6213)))

(assert (= (and d!16099 c!10453) b!71635))

(assert (= (and d!16099 (not c!10453)) b!71631))

(assert (= (and b!71631 c!10451) b!71632))

(assert (= (and b!71631 (not c!10451)) b!71630))

(assert (= (and b!71630 c!10452) b!71636))

(assert (= (and b!71630 (not c!10452)) b!71637))

(assert (= (or b!71636 b!71637) bm!6210))

(assert (= (or b!71632 bm!6210) bm!6211))

(assert (= (or b!71635 bm!6211) bm!6212))

(assert (= (and bm!6212 c!10450) b!71629))

(assert (= (and bm!6212 (not c!10450)) b!71634))

(assert (= (and d!16099 res!38189) b!71633))

(assert (= (and b!71633 res!38188) b!71628))

(declare-fun m!69045 () Bool)

(assert (=> b!71628 m!69045))

(declare-fun m!69047 () Bool)

(assert (=> b!71629 m!69047))

(declare-fun m!69049 () Bool)

(assert (=> b!71633 m!69049))

(declare-fun m!69051 () Bool)

(assert (=> bm!6212 m!69051))

(declare-fun m!69053 () Bool)

(assert (=> d!16099 m!69053))

(assert (=> d!16099 m!68933))

(assert (=> b!71328 d!16099))

(declare-fun d!16101 () Bool)

(assert (=> d!16101 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (getCurrentListMap!407 (_keys!3838 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16101 true))

(declare-fun _$5!77 () Unit!1989)

(assert (=> d!16101 (= (choose!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3083 lt!31341) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 (defaultEntry!2191 newMap!16)) _$5!77)))

(declare-fun bs!3075 () Bool)

(assert (= bs!3075 d!16101))

(assert (=> bs!3075 m!67607))

(assert (=> bs!3075 m!67607))

(assert (=> bs!3075 m!68135))

(assert (=> bs!3075 m!67675))

(assert (=> bs!3075 m!68137))

(assert (=> d!15829 d!16101))

(assert (=> d!15829 d!16053))

(declare-fun d!16103 () Bool)

(assert (=> d!16103 (isDefined!84 (getValueByKey!130 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(declare-fun lt!31874 () Unit!1989)

(assert (=> d!16103 (= lt!31874 (choose!405 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(declare-fun e!46891 () Bool)

(assert (=> d!16103 e!46891))

(declare-fun res!38190 () Bool)

(assert (=> d!16103 (=> (not res!38190) (not e!46891))))

(assert (=> d!16103 (= res!38190 (isStrictlySorted!286 (toList!714 call!6111)))))

(assert (=> d!16103 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))) lt!31874)))

(declare-fun b!71638 () Bool)

(assert (=> b!71638 (= e!46891 (containsKey!134 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(assert (= (and d!16103 res!38190) b!71638))

(assert (=> d!16103 m!67679))

(assert (=> d!16103 m!68123))

(assert (=> d!16103 m!68123))

(assert (=> d!16103 m!68125))

(assert (=> d!16103 m!67679))

(declare-fun m!69055 () Bool)

(assert (=> d!16103 m!69055))

(declare-fun m!69057 () Bool)

(assert (=> d!16103 m!69057))

(assert (=> b!71638 m!67679))

(assert (=> b!71638 m!68119))

(assert (=> b!71175 d!16103))

(declare-fun d!16105 () Bool)

(assert (=> d!16105 (= (isDefined!84 (getValueByKey!130 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341)))) (not (isEmpty!318 (getValueByKey!130 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))))

(declare-fun bs!3076 () Bool)

(assert (= bs!3076 d!16105))

(assert (=> bs!3076 m!68123))

(declare-fun m!69059 () Bool)

(assert (=> bs!3076 m!69059))

(assert (=> b!71175 d!16105))

(declare-fun b!71639 () Bool)

(declare-fun e!46892 () Option!136)

(assert (=> b!71639 (= e!46892 (Some!135 (_2!1067 (h!2061 (toList!714 call!6111)))))))

(declare-fun d!16107 () Bool)

(declare-fun c!10454 () Bool)

(assert (=> d!16107 (= c!10454 (and ((_ is Cons!1475) (toList!714 call!6111)) (= (_1!1067 (h!2061 (toList!714 call!6111))) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341)))))))

(assert (=> d!16107 (= (getValueByKey!130 (toList!714 call!6111) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))) e!46892)))

(declare-fun b!71640 () Bool)

(declare-fun e!46893 () Option!136)

(assert (=> b!71640 (= e!46892 e!46893)))

(declare-fun c!10455 () Bool)

(assert (=> b!71640 (= c!10455 (and ((_ is Cons!1475) (toList!714 call!6111)) (not (= (_1!1067 (h!2061 (toList!714 call!6111))) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))))

(declare-fun b!71642 () Bool)

(assert (=> b!71642 (= e!46893 None!134)))

(declare-fun b!71641 () Bool)

(assert (=> b!71641 (= e!46893 (getValueByKey!130 (t!5006 (toList!714 call!6111)) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(assert (= (and d!16107 c!10454) b!71639))

(assert (= (and d!16107 (not c!10454)) b!71640))

(assert (= (and b!71640 c!10455) b!71641))

(assert (= (and b!71640 (not c!10455)) b!71642))

(assert (=> b!71641 m!67679))

(declare-fun m!69061 () Bool)

(assert (=> b!71641 m!69061))

(assert (=> b!71175 d!16107))

(declare-fun b!71643 () Bool)

(declare-fun e!46894 () Option!136)

(assert (=> b!71643 (= e!46894 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31447)))))))

(declare-fun c!10456 () Bool)

(declare-fun d!16109 () Bool)

(assert (=> d!16109 (= c!10456 (and ((_ is Cons!1475) (toList!714 lt!31447)) (= (_1!1067 (h!2061 (toList!714 lt!31447))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!16109 (= (getValueByKey!130 (toList!714 lt!31447) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) e!46894)))

(declare-fun b!71644 () Bool)

(declare-fun e!46895 () Option!136)

(assert (=> b!71644 (= e!46894 e!46895)))

(declare-fun c!10457 () Bool)

(assert (=> b!71644 (= c!10457 (and ((_ is Cons!1475) (toList!714 lt!31447)) (not (= (_1!1067 (h!2061 (toList!714 lt!31447))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun b!71646 () Bool)

(assert (=> b!71646 (= e!46895 None!134)))

(declare-fun b!71645 () Bool)

(assert (=> b!71645 (= e!46895 (getValueByKey!130 (t!5006 (toList!714 lt!31447)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (= (and d!16109 c!10456) b!71643))

(assert (= (and d!16109 (not c!10456)) b!71644))

(assert (= (and b!71644 c!10457) b!71645))

(assert (= (and b!71644 (not c!10457)) b!71646))

(declare-fun m!69063 () Bool)

(assert (=> b!71645 m!69063))

(assert (=> b!71080 d!16109))

(assert (=> bm!6185 d!15939))

(declare-fun b!71647 () Bool)

(declare-fun e!46898 () Bool)

(declare-fun lt!31875 () List!1479)

(assert (=> b!71647 (= e!46898 (contains!717 lt!31875 (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun b!71648 () Bool)

(declare-fun e!46896 () List!1479)

(assert (=> b!71648 (= e!46896 (insertStrictlySorted!53 (t!5006 (t!5006 (toList!714 lt!31105))) (_1!1067 lt!31109) (_2!1067 lt!31109)))))

(declare-fun d!16111 () Bool)

(assert (=> d!16111 e!46898))

(declare-fun res!38192 () Bool)

(assert (=> d!16111 (=> (not res!38192) (not e!46898))))

(assert (=> d!16111 (= res!38192 (isStrictlySorted!286 lt!31875))))

(declare-fun e!46897 () List!1479)

(assert (=> d!16111 (= lt!31875 e!46897)))

(declare-fun c!10461 () Bool)

(assert (=> d!16111 (= c!10461 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31105))) (bvslt (_1!1067 (h!2061 (t!5006 (toList!714 lt!31105)))) (_1!1067 lt!31109))))))

(assert (=> d!16111 (isStrictlySorted!286 (t!5006 (toList!714 lt!31105)))))

(assert (=> d!16111 (= (insertStrictlySorted!53 (t!5006 (toList!714 lt!31105)) (_1!1067 lt!31109) (_2!1067 lt!31109)) lt!31875)))

(declare-fun b!71649 () Bool)

(declare-fun c!10460 () Bool)

(assert (=> b!71649 (= c!10460 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31105))) (bvsgt (_1!1067 (h!2061 (t!5006 (toList!714 lt!31105)))) (_1!1067 lt!31109))))))

(declare-fun e!46900 () List!1479)

(declare-fun e!46899 () List!1479)

(assert (=> b!71649 (= e!46900 e!46899)))

(declare-fun b!71650 () Bool)

(assert (=> b!71650 (= e!46897 e!46900)))

(declare-fun c!10459 () Bool)

(assert (=> b!71650 (= c!10459 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31105))) (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31105)))) (_1!1067 lt!31109))))))

(declare-fun b!71651 () Bool)

(declare-fun call!6218 () List!1479)

(assert (=> b!71651 (= e!46900 call!6218)))

(declare-fun b!71652 () Bool)

(declare-fun res!38191 () Bool)

(assert (=> b!71652 (=> (not res!38191) (not e!46898))))

(assert (=> b!71652 (= res!38191 (containsKey!134 lt!31875 (_1!1067 lt!31109)))))

(declare-fun b!71653 () Bool)

(assert (=> b!71653 (= e!46896 (ite c!10459 (t!5006 (t!5006 (toList!714 lt!31105))) (ite c!10460 (Cons!1475 (h!2061 (t!5006 (toList!714 lt!31105))) (t!5006 (t!5006 (toList!714 lt!31105)))) Nil!1476)))))

(declare-fun b!71654 () Bool)

(declare-fun call!6217 () List!1479)

(assert (=> b!71654 (= e!46897 call!6217)))

(declare-fun b!71655 () Bool)

(declare-fun call!6216 () List!1479)

(assert (=> b!71655 (= e!46899 call!6216)))

(declare-fun bm!6213 () Bool)

(assert (=> bm!6213 (= call!6216 call!6218)))

(declare-fun bm!6214 () Bool)

(assert (=> bm!6214 (= call!6218 call!6217)))

(declare-fun bm!6215 () Bool)

(assert (=> bm!6215 (= call!6217 ($colon$colon!64 e!46896 (ite c!10461 (h!2061 (t!5006 (toList!714 lt!31105))) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109)))))))

(declare-fun c!10458 () Bool)

(assert (=> bm!6215 (= c!10458 c!10461)))

(declare-fun b!71656 () Bool)

(assert (=> b!71656 (= e!46899 call!6216)))

(assert (= (and d!16111 c!10461) b!71654))

(assert (= (and d!16111 (not c!10461)) b!71650))

(assert (= (and b!71650 c!10459) b!71651))

(assert (= (and b!71650 (not c!10459)) b!71649))

(assert (= (and b!71649 c!10460) b!71655))

(assert (= (and b!71649 (not c!10460)) b!71656))

(assert (= (or b!71655 b!71656) bm!6213))

(assert (= (or b!71651 bm!6213) bm!6214))

(assert (= (or b!71654 bm!6214) bm!6215))

(assert (= (and bm!6215 c!10458) b!71648))

(assert (= (and bm!6215 (not c!10458)) b!71653))

(assert (= (and d!16111 res!38192) b!71652))

(assert (= (and b!71652 res!38191) b!71647))

(declare-fun m!69065 () Bool)

(assert (=> b!71647 m!69065))

(declare-fun m!69067 () Bool)

(assert (=> b!71648 m!69067))

(declare-fun m!69069 () Bool)

(assert (=> b!71652 m!69069))

(declare-fun m!69071 () Bool)

(assert (=> bm!6215 m!69071))

(declare-fun m!69073 () Bool)

(assert (=> d!16111 m!69073))

(assert (=> d!16111 m!68933))

(assert (=> b!71112 d!16111))

(assert (=> b!71045 d!15755))

(declare-fun bm!6216 () Bool)

(declare-fun call!6225 () Bool)

(declare-fun lt!31894 () ListLongMap!1397)

(assert (=> bm!6216 (= call!6225 (contains!716 lt!31894 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71657 () Bool)

(declare-fun e!46901 () Bool)

(assert (=> b!71657 (= e!46901 (= (apply!74 lt!31894 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 (_2!1068 lt!31326))))))

(declare-fun b!71658 () Bool)

(declare-fun e!46907 () ListLongMap!1397)

(declare-fun call!6221 () ListLongMap!1397)

(assert (=> b!71658 (= e!46907 call!6221)))

(declare-fun bm!6217 () Bool)

(declare-fun call!6219 () ListLongMap!1397)

(assert (=> bm!6217 (= call!6219 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (_2!1068 lt!31326)) (_values!2174 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326)) (extraKeys!2054 (_2!1068 lt!31326)) (zeroValue!2095 (_2!1068 lt!31326)) (minValue!2095 (_2!1068 lt!31326)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1068 lt!31326))))))

(declare-fun b!71659 () Bool)

(declare-fun e!46911 () Unit!1989)

(declare-fun Unit!2029 () Unit!1989)

(assert (=> b!71659 (= e!46911 Unit!2029)))

(declare-fun b!71660 () Bool)

(declare-fun e!46912 () Bool)

(declare-fun e!46906 () Bool)

(assert (=> b!71660 (= e!46912 e!46906)))

(declare-fun res!38199 () Bool)

(assert (=> b!71660 (=> (not res!38199) (not e!46906))))

(assert (=> b!71660 (= res!38199 (contains!716 lt!31894 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000)))))

(assert (=> b!71660 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))))))

(declare-fun b!71661 () Bool)

(declare-fun c!10463 () Bool)

(assert (=> b!71661 (= c!10463 (and (not (= (bvand (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46902 () ListLongMap!1397)

(assert (=> b!71661 (= e!46902 e!46907)))

(declare-fun call!6224 () ListLongMap!1397)

(declare-fun c!10464 () Bool)

(declare-fun call!6220 () ListLongMap!1397)

(declare-fun c!10466 () Bool)

(declare-fun call!6223 () ListLongMap!1397)

(declare-fun bm!6218 () Bool)

(assert (=> bm!6218 (= call!6223 (+!91 (ite c!10466 call!6219 (ite c!10464 call!6224 call!6220)) (ite (or c!10466 c!10464) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (_2!1068 lt!31326))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (_2!1068 lt!31326))))))))

(declare-fun bm!6219 () Bool)

(declare-fun call!6222 () Bool)

(assert (=> bm!6219 (= call!6222 (contains!716 lt!31894 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71662 () Bool)

(declare-fun e!46905 () Bool)

(assert (=> b!71662 (= e!46905 (not call!6222))))

(declare-fun b!71663 () Bool)

(assert (=> b!71663 (= e!46906 (= (apply!74 lt!31894 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (_values!2174 (_2!1068 lt!31326))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 (_2!1068 lt!31326)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71663 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (_values!2174 (_2!1068 lt!31326)))))))

(assert (=> b!71663 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))))))

(declare-fun b!71664 () Bool)

(declare-fun e!46913 () Bool)

(assert (=> b!71664 (= e!46913 (not call!6225))))

(declare-fun b!71665 () Bool)

(declare-fun e!46908 () ListLongMap!1397)

(assert (=> b!71665 (= e!46908 e!46902)))

(assert (=> b!71665 (= c!10464 (and (not (= (bvand (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71666 () Bool)

(assert (=> b!71666 (= e!46907 call!6220)))

(declare-fun bm!6220 () Bool)

(assert (=> bm!6220 (= call!6221 call!6223)))

(declare-fun b!71667 () Bool)

(declare-fun e!46903 () Bool)

(assert (=> b!71667 (= e!46903 e!46913)))

(declare-fun c!10467 () Bool)

(assert (=> b!71667 (= c!10467 (not (= (bvand (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6221 () Bool)

(assert (=> bm!6221 (= call!6224 call!6219)))

(declare-fun b!71668 () Bool)

(assert (=> b!71668 (= e!46902 call!6221)))

(declare-fun b!71669 () Bool)

(declare-fun res!38195 () Bool)

(assert (=> b!71669 (=> (not res!38195) (not e!46903))))

(assert (=> b!71669 (= res!38195 e!46912)))

(declare-fun res!38194 () Bool)

(assert (=> b!71669 (=> res!38194 e!46912)))

(declare-fun e!46910 () Bool)

(assert (=> b!71669 (= res!38194 (not e!46910))))

(declare-fun res!38196 () Bool)

(assert (=> b!71669 (=> (not res!38196) (not e!46910))))

(assert (=> b!71669 (= res!38196 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))))))

(declare-fun b!71670 () Bool)

(assert (=> b!71670 (= e!46910 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000)))))

(declare-fun b!71671 () Bool)

(declare-fun res!38200 () Bool)

(assert (=> b!71671 (=> (not res!38200) (not e!46903))))

(assert (=> b!71671 (= res!38200 e!46905)))

(declare-fun c!10465 () Bool)

(assert (=> b!71671 (= c!10465 (not (= (bvand (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!71672 () Bool)

(declare-fun lt!31892 () Unit!1989)

(assert (=> b!71672 (= e!46911 lt!31892)))

(declare-fun lt!31876 () ListLongMap!1397)

(assert (=> b!71672 (= lt!31876 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (_2!1068 lt!31326)) (_values!2174 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326)) (extraKeys!2054 (_2!1068 lt!31326)) (zeroValue!2095 (_2!1068 lt!31326)) (minValue!2095 (_2!1068 lt!31326)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1068 lt!31326))))))

(declare-fun lt!31890 () (_ BitVec 64))

(assert (=> b!71672 (= lt!31890 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31877 () (_ BitVec 64))

(assert (=> b!71672 (= lt!31877 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000))))

(declare-fun lt!31878 () Unit!1989)

(assert (=> b!71672 (= lt!31878 (addStillContains!50 lt!31876 lt!31890 (zeroValue!2095 (_2!1068 lt!31326)) lt!31877))))

(assert (=> b!71672 (contains!716 (+!91 lt!31876 (tuple2!2113 lt!31890 (zeroValue!2095 (_2!1068 lt!31326)))) lt!31877)))

(declare-fun lt!31889 () Unit!1989)

(assert (=> b!71672 (= lt!31889 lt!31878)))

(declare-fun lt!31882 () ListLongMap!1397)

(assert (=> b!71672 (= lt!31882 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (_2!1068 lt!31326)) (_values!2174 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326)) (extraKeys!2054 (_2!1068 lt!31326)) (zeroValue!2095 (_2!1068 lt!31326)) (minValue!2095 (_2!1068 lt!31326)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1068 lt!31326))))))

(declare-fun lt!31887 () (_ BitVec 64))

(assert (=> b!71672 (= lt!31887 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31888 () (_ BitVec 64))

(assert (=> b!71672 (= lt!31888 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000))))

(declare-fun lt!31885 () Unit!1989)

(assert (=> b!71672 (= lt!31885 (addApplyDifferent!50 lt!31882 lt!31887 (minValue!2095 (_2!1068 lt!31326)) lt!31888))))

(assert (=> b!71672 (= (apply!74 (+!91 lt!31882 (tuple2!2113 lt!31887 (minValue!2095 (_2!1068 lt!31326)))) lt!31888) (apply!74 lt!31882 lt!31888))))

(declare-fun lt!31879 () Unit!1989)

(assert (=> b!71672 (= lt!31879 lt!31885)))

(declare-fun lt!31891 () ListLongMap!1397)

(assert (=> b!71672 (= lt!31891 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (_2!1068 lt!31326)) (_values!2174 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326)) (extraKeys!2054 (_2!1068 lt!31326)) (zeroValue!2095 (_2!1068 lt!31326)) (minValue!2095 (_2!1068 lt!31326)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1068 lt!31326))))))

(declare-fun lt!31893 () (_ BitVec 64))

(assert (=> b!71672 (= lt!31893 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31897 () (_ BitVec 64))

(assert (=> b!71672 (= lt!31897 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000))))

(declare-fun lt!31886 () Unit!1989)

(assert (=> b!71672 (= lt!31886 (addApplyDifferent!50 lt!31891 lt!31893 (zeroValue!2095 (_2!1068 lt!31326)) lt!31897))))

(assert (=> b!71672 (= (apply!74 (+!91 lt!31891 (tuple2!2113 lt!31893 (zeroValue!2095 (_2!1068 lt!31326)))) lt!31897) (apply!74 lt!31891 lt!31897))))

(declare-fun lt!31896 () Unit!1989)

(assert (=> b!71672 (= lt!31896 lt!31886)))

(declare-fun lt!31895 () ListLongMap!1397)

(assert (=> b!71672 (= lt!31895 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (_2!1068 lt!31326)) (_values!2174 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326)) (extraKeys!2054 (_2!1068 lt!31326)) (zeroValue!2095 (_2!1068 lt!31326)) (minValue!2095 (_2!1068 lt!31326)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1068 lt!31326))))))

(declare-fun lt!31884 () (_ BitVec 64))

(assert (=> b!71672 (= lt!31884 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31880 () (_ BitVec 64))

(assert (=> b!71672 (= lt!31880 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000))))

(assert (=> b!71672 (= lt!31892 (addApplyDifferent!50 lt!31895 lt!31884 (minValue!2095 (_2!1068 lt!31326)) lt!31880))))

(assert (=> b!71672 (= (apply!74 (+!91 lt!31895 (tuple2!2113 lt!31884 (minValue!2095 (_2!1068 lt!31326)))) lt!31880) (apply!74 lt!31895 lt!31880))))

(declare-fun b!71673 () Bool)

(declare-fun e!46909 () Bool)

(assert (=> b!71673 (= e!46913 e!46909)))

(declare-fun res!38193 () Bool)

(assert (=> b!71673 (= res!38193 call!6225)))

(assert (=> b!71673 (=> (not res!38193) (not e!46909))))

(declare-fun b!71674 () Bool)

(assert (=> b!71674 (= e!46905 e!46901)))

(declare-fun res!38201 () Bool)

(assert (=> b!71674 (= res!38201 call!6222)))

(assert (=> b!71674 (=> (not res!38201) (not e!46901))))

(declare-fun d!16113 () Bool)

(assert (=> d!16113 e!46903))

(declare-fun res!38197 () Bool)

(assert (=> d!16113 (=> (not res!38197) (not e!46903))))

(assert (=> d!16113 (= res!38197 (or (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))))))))

(declare-fun lt!31883 () ListLongMap!1397)

(assert (=> d!16113 (= lt!31894 lt!31883)))

(declare-fun lt!31881 () Unit!1989)

(assert (=> d!16113 (= lt!31881 e!46911)))

(declare-fun c!10462 () Bool)

(declare-fun e!46904 () Bool)

(assert (=> d!16113 (= c!10462 e!46904)))

(declare-fun res!38198 () Bool)

(assert (=> d!16113 (=> (not res!38198) (not e!46904))))

(assert (=> d!16113 (= res!38198 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))))))

(assert (=> d!16113 (= lt!31883 e!46908)))

(assert (=> d!16113 (= c!10466 (and (not (= (bvand (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16113 (validMask!0 (mask!6147 (_2!1068 lt!31326)))))

(assert (=> d!16113 (= (getCurrentListMap!407 (_keys!3838 (_2!1068 lt!31326)) (_values!2174 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326)) (extraKeys!2054 (_2!1068 lt!31326)) (zeroValue!2095 (_2!1068 lt!31326)) (minValue!2095 (_2!1068 lt!31326)) #b00000000000000000000000000000000 (defaultEntry!2191 (_2!1068 lt!31326))) lt!31894)))

(declare-fun b!71675 () Bool)

(assert (=> b!71675 (= e!46909 (= (apply!74 lt!31894 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 (_2!1068 lt!31326))))))

(declare-fun b!71676 () Bool)

(assert (=> b!71676 (= e!46904 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000)))))

(declare-fun b!71677 () Bool)

(assert (=> b!71677 (= e!46908 (+!91 call!6223 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (_2!1068 lt!31326)))))))

(declare-fun bm!6222 () Bool)

(assert (=> bm!6222 (= call!6220 call!6224)))

(assert (= (and d!16113 c!10466) b!71677))

(assert (= (and d!16113 (not c!10466)) b!71665))

(assert (= (and b!71665 c!10464) b!71668))

(assert (= (and b!71665 (not c!10464)) b!71661))

(assert (= (and b!71661 c!10463) b!71658))

(assert (= (and b!71661 (not c!10463)) b!71666))

(assert (= (or b!71658 b!71666) bm!6222))

(assert (= (or b!71668 bm!6222) bm!6221))

(assert (= (or b!71668 b!71658) bm!6220))

(assert (= (or b!71677 bm!6221) bm!6217))

(assert (= (or b!71677 bm!6220) bm!6218))

(assert (= (and d!16113 res!38198) b!71676))

(assert (= (and d!16113 c!10462) b!71672))

(assert (= (and d!16113 (not c!10462)) b!71659))

(assert (= (and d!16113 res!38197) b!71669))

(assert (= (and b!71669 res!38196) b!71670))

(assert (= (and b!71669 (not res!38194)) b!71660))

(assert (= (and b!71660 res!38199) b!71663))

(assert (= (and b!71669 res!38195) b!71671))

(assert (= (and b!71671 c!10465) b!71674))

(assert (= (and b!71671 (not c!10465)) b!71662))

(assert (= (and b!71674 res!38201) b!71657))

(assert (= (or b!71674 b!71662) bm!6219))

(assert (= (and b!71671 res!38200) b!71667))

(assert (= (and b!71667 c!10467) b!71673))

(assert (= (and b!71667 (not c!10467)) b!71664))

(assert (= (and b!71673 res!38193) b!71675))

(assert (= (or b!71673 b!71664) bm!6216))

(declare-fun b_lambda!3207 () Bool)

(assert (=> (not b_lambda!3207) (not b!71663)))

(declare-fun t!5023 () Bool)

(declare-fun tb!1517 () Bool)

(assert (=> (and b!70564 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 (_2!1068 lt!31326))) t!5023) tb!1517))

(declare-fun result!2665 () Bool)

(assert (=> tb!1517 (= result!2665 tp_is_empty!2467)))

(assert (=> b!71663 t!5023))

(declare-fun b_and!4401 () Bool)

(assert (= b_and!4397 (and (=> t!5023 result!2665) b_and!4401)))

(declare-fun tb!1519 () Bool)

(declare-fun t!5025 () Bool)

(assert (=> (and b!70563 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (_2!1068 lt!31326))) t!5025) tb!1519))

(declare-fun result!2667 () Bool)

(assert (= result!2667 result!2665))

(assert (=> b!71663 t!5025))

(declare-fun b_and!4403 () Bool)

(assert (= b_and!4399 (and (=> t!5025 result!2667) b_and!4403)))

(declare-fun m!69075 () Bool)

(assert (=> b!71677 m!69075))

(declare-fun m!69077 () Bool)

(assert (=> b!71676 m!69077))

(assert (=> b!71676 m!69077))

(declare-fun m!69079 () Bool)

(assert (=> b!71676 m!69079))

(declare-fun m!69081 () Bool)

(assert (=> b!71663 m!69081))

(assert (=> b!71663 m!69077))

(declare-fun m!69083 () Bool)

(assert (=> b!71663 m!69083))

(assert (=> b!71663 m!69081))

(declare-fun m!69085 () Bool)

(assert (=> b!71663 m!69085))

(assert (=> b!71663 m!69077))

(declare-fun m!69087 () Bool)

(assert (=> b!71663 m!69087))

(assert (=> b!71663 m!69083))

(assert (=> b!71670 m!69077))

(assert (=> b!71670 m!69077))

(assert (=> b!71670 m!69079))

(declare-fun m!69089 () Bool)

(assert (=> d!16113 m!69089))

(assert (=> b!71660 m!69077))

(assert (=> b!71660 m!69077))

(declare-fun m!69091 () Bool)

(assert (=> b!71660 m!69091))

(declare-fun m!69093 () Bool)

(assert (=> b!71657 m!69093))

(declare-fun m!69095 () Bool)

(assert (=> bm!6219 m!69095))

(declare-fun m!69097 () Bool)

(assert (=> bm!6218 m!69097))

(declare-fun m!69099 () Bool)

(assert (=> bm!6217 m!69099))

(declare-fun m!69101 () Bool)

(assert (=> bm!6216 m!69101))

(declare-fun m!69103 () Bool)

(assert (=> b!71675 m!69103))

(declare-fun m!69105 () Bool)

(assert (=> b!71672 m!69105))

(declare-fun m!69107 () Bool)

(assert (=> b!71672 m!69107))

(declare-fun m!69109 () Bool)

(assert (=> b!71672 m!69109))

(assert (=> b!71672 m!69099))

(assert (=> b!71672 m!69077))

(declare-fun m!69111 () Bool)

(assert (=> b!71672 m!69111))

(declare-fun m!69113 () Bool)

(assert (=> b!71672 m!69113))

(assert (=> b!71672 m!69111))

(declare-fun m!69115 () Bool)

(assert (=> b!71672 m!69115))

(declare-fun m!69117 () Bool)

(assert (=> b!71672 m!69117))

(assert (=> b!71672 m!69113))

(declare-fun m!69119 () Bool)

(assert (=> b!71672 m!69119))

(declare-fun m!69121 () Bool)

(assert (=> b!71672 m!69121))

(declare-fun m!69123 () Bool)

(assert (=> b!71672 m!69123))

(declare-fun m!69125 () Bool)

(assert (=> b!71672 m!69125))

(declare-fun m!69127 () Bool)

(assert (=> b!71672 m!69127))

(declare-fun m!69129 () Bool)

(assert (=> b!71672 m!69129))

(assert (=> b!71672 m!69121))

(declare-fun m!69131 () Bool)

(assert (=> b!71672 m!69131))

(assert (=> b!71672 m!69129))

(declare-fun m!69133 () Bool)

(assert (=> b!71672 m!69133))

(assert (=> d!15915 d!16113))

(declare-fun d!16115 () Bool)

(assert (=> d!16115 (= (isEmpty!318 (getValueByKey!130 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))) (not ((_ is Some!135) (getValueByKey!130 (toList!714 lt!31108) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))))

(assert (=> d!15777 d!16115))

(declare-fun d!16117 () Bool)

(assert (=> d!16117 (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!31898 () Unit!1989)

(assert (=> d!16117 (= lt!31898 (choose!405 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!46914 () Bool)

(assert (=> d!16117 e!46914))

(declare-fun res!38202 () Bool)

(assert (=> d!16117 (=> (not res!38202) (not e!46914))))

(assert (=> d!16117 (= res!38202 (isStrictlySorted!286 (toList!714 lt!31248)))))

(assert (=> d!16117 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000) lt!31898)))

(declare-fun b!71678 () Bool)

(assert (=> b!71678 (= e!46914 (containsKey!134 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16117 res!38202) b!71678))

(assert (=> d!16117 m!68143))

(assert (=> d!16117 m!68143))

(assert (=> d!16117 m!68145))

(declare-fun m!69135 () Bool)

(assert (=> d!16117 m!69135))

(declare-fun m!69137 () Bool)

(assert (=> d!16117 m!69137))

(assert (=> b!71678 m!68139))

(assert (=> b!71184 d!16117))

(declare-fun d!16119 () Bool)

(assert (=> d!16119 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3077 () Bool)

(assert (= bs!3077 d!16119))

(assert (=> bs!3077 m!68143))

(declare-fun m!69139 () Bool)

(assert (=> bs!3077 m!69139))

(assert (=> b!71184 d!16119))

(declare-fun b!71679 () Bool)

(declare-fun e!46915 () Option!136)

(assert (=> b!71679 (= e!46915 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31248)))))))

(declare-fun d!16121 () Bool)

(declare-fun c!10468 () Bool)

(assert (=> d!16121 (= c!10468 (and ((_ is Cons!1475) (toList!714 lt!31248)) (= (_1!1067 (h!2061 (toList!714 lt!31248))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16121 (= (getValueByKey!130 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000) e!46915)))

(declare-fun b!71680 () Bool)

(declare-fun e!46916 () Option!136)

(assert (=> b!71680 (= e!46915 e!46916)))

(declare-fun c!10469 () Bool)

(assert (=> b!71680 (= c!10469 (and ((_ is Cons!1475) (toList!714 lt!31248)) (not (= (_1!1067 (h!2061 (toList!714 lt!31248))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71682 () Bool)

(assert (=> b!71682 (= e!46916 None!134)))

(declare-fun b!71681 () Bool)

(assert (=> b!71681 (= e!46916 (getValueByKey!130 (t!5006 (toList!714 lt!31248)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16121 c!10468) b!71679))

(assert (= (and d!16121 (not c!10468)) b!71680))

(assert (= (and b!71680 c!10469) b!71681))

(assert (= (and b!71680 (not c!10469)) b!71682))

(declare-fun m!69141 () Bool)

(assert (=> b!71681 m!69141))

(assert (=> b!71184 d!16121))

(declare-fun b!71683 () Bool)

(declare-fun e!46919 () Bool)

(declare-fun lt!31899 () List!1479)

(assert (=> b!71683 (= e!46919 (contains!717 lt!31899 (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun e!46917 () List!1479)

(declare-fun b!71684 () Bool)

(assert (=> b!71684 (= e!46917 (insertStrictlySorted!53 (t!5006 (t!5006 (toList!714 (+!91 lt!31105 lt!31103)))) (_1!1067 lt!31109) (_2!1067 lt!31109)))))

(declare-fun d!16123 () Bool)

(assert (=> d!16123 e!46919))

(declare-fun res!38204 () Bool)

(assert (=> d!16123 (=> (not res!38204) (not e!46919))))

(assert (=> d!16123 (= res!38204 (isStrictlySorted!286 lt!31899))))

(declare-fun e!46918 () List!1479)

(assert (=> d!16123 (= lt!31899 e!46918)))

(declare-fun c!10473 () Bool)

(assert (=> d!16123 (= c!10473 (and ((_ is Cons!1475) (t!5006 (toList!714 (+!91 lt!31105 lt!31103)))) (bvslt (_1!1067 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31103))))) (_1!1067 lt!31109))))))

(assert (=> d!16123 (isStrictlySorted!286 (t!5006 (toList!714 (+!91 lt!31105 lt!31103))))))

(assert (=> d!16123 (= (insertStrictlySorted!53 (t!5006 (toList!714 (+!91 lt!31105 lt!31103))) (_1!1067 lt!31109) (_2!1067 lt!31109)) lt!31899)))

(declare-fun c!10472 () Bool)

(declare-fun b!71685 () Bool)

(assert (=> b!71685 (= c!10472 (and ((_ is Cons!1475) (t!5006 (toList!714 (+!91 lt!31105 lt!31103)))) (bvsgt (_1!1067 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31103))))) (_1!1067 lt!31109))))))

(declare-fun e!46921 () List!1479)

(declare-fun e!46920 () List!1479)

(assert (=> b!71685 (= e!46921 e!46920)))

(declare-fun b!71686 () Bool)

(assert (=> b!71686 (= e!46918 e!46921)))

(declare-fun c!10471 () Bool)

(assert (=> b!71686 (= c!10471 (and ((_ is Cons!1475) (t!5006 (toList!714 (+!91 lt!31105 lt!31103)))) (= (_1!1067 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31103))))) (_1!1067 lt!31109))))))

(declare-fun b!71687 () Bool)

(declare-fun call!6228 () List!1479)

(assert (=> b!71687 (= e!46921 call!6228)))

(declare-fun b!71688 () Bool)

(declare-fun res!38203 () Bool)

(assert (=> b!71688 (=> (not res!38203) (not e!46919))))

(assert (=> b!71688 (= res!38203 (containsKey!134 lt!31899 (_1!1067 lt!31109)))))

(declare-fun b!71689 () Bool)

(assert (=> b!71689 (= e!46917 (ite c!10471 (t!5006 (t!5006 (toList!714 (+!91 lt!31105 lt!31103)))) (ite c!10472 (Cons!1475 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31103)))) (t!5006 (t!5006 (toList!714 (+!91 lt!31105 lt!31103))))) Nil!1476)))))

(declare-fun b!71690 () Bool)

(declare-fun call!6227 () List!1479)

(assert (=> b!71690 (= e!46918 call!6227)))

(declare-fun b!71691 () Bool)

(declare-fun call!6226 () List!1479)

(assert (=> b!71691 (= e!46920 call!6226)))

(declare-fun bm!6223 () Bool)

(assert (=> bm!6223 (= call!6226 call!6228)))

(declare-fun bm!6224 () Bool)

(assert (=> bm!6224 (= call!6228 call!6227)))

(declare-fun bm!6225 () Bool)

(assert (=> bm!6225 (= call!6227 ($colon$colon!64 e!46917 (ite c!10473 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31103)))) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109)))))))

(declare-fun c!10470 () Bool)

(assert (=> bm!6225 (= c!10470 c!10473)))

(declare-fun b!71692 () Bool)

(assert (=> b!71692 (= e!46920 call!6226)))

(assert (= (and d!16123 c!10473) b!71690))

(assert (= (and d!16123 (not c!10473)) b!71686))

(assert (= (and b!71686 c!10471) b!71687))

(assert (= (and b!71686 (not c!10471)) b!71685))

(assert (= (and b!71685 c!10472) b!71691))

(assert (= (and b!71685 (not c!10472)) b!71692))

(assert (= (or b!71691 b!71692) bm!6223))

(assert (= (or b!71687 bm!6223) bm!6224))

(assert (= (or b!71690 bm!6224) bm!6225))

(assert (= (and bm!6225 c!10470) b!71684))

(assert (= (and bm!6225 (not c!10470)) b!71689))

(assert (= (and d!16123 res!38204) b!71688))

(assert (= (and b!71688 res!38203) b!71683))

(declare-fun m!69143 () Bool)

(assert (=> b!71683 m!69143))

(declare-fun m!69145 () Bool)

(assert (=> b!71684 m!69145))

(declare-fun m!69147 () Bool)

(assert (=> b!71688 m!69147))

(declare-fun m!69149 () Bool)

(assert (=> bm!6225 m!69149))

(declare-fun m!69151 () Bool)

(assert (=> d!16123 m!69151))

(declare-fun m!69153 () Bool)

(assert (=> d!16123 m!69153))

(assert (=> b!71032 d!16123))

(declare-fun lt!31900 () Bool)

(declare-fun d!16125 () Bool)

(assert (=> d!16125 (= lt!31900 (select (content!76 (toList!714 lt!31613)) (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun e!46922 () Bool)

(assert (=> d!16125 (= lt!31900 e!46922)))

(declare-fun res!38206 () Bool)

(assert (=> d!16125 (=> (not res!38206) (not e!46922))))

(assert (=> d!16125 (= res!38206 ((_ is Cons!1475) (toList!714 lt!31613)))))

(assert (=> d!16125 (= (contains!717 (toList!714 lt!31613) (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!31900)))

(declare-fun b!71693 () Bool)

(declare-fun e!46923 () Bool)

(assert (=> b!71693 (= e!46922 e!46923)))

(declare-fun res!38205 () Bool)

(assert (=> b!71693 (=> res!38205 e!46923)))

(assert (=> b!71693 (= res!38205 (= (h!2061 (toList!714 lt!31613)) (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!71694 () Bool)

(assert (=> b!71694 (= e!46923 (contains!717 (t!5006 (toList!714 lt!31613)) (ite c!10263 (ite c!10265 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (= (and d!16125 res!38206) b!71693))

(assert (= (and b!71693 (not res!38205)) b!71694))

(declare-fun m!69155 () Bool)

(assert (=> d!16125 m!69155))

(declare-fun m!69157 () Bool)

(assert (=> d!16125 m!69157))

(declare-fun m!69159 () Bool)

(assert (=> b!71694 m!69159))

(assert (=> b!71294 d!16125))

(declare-fun b!71695 () Bool)

(declare-fun e!46926 () ListLongMap!1397)

(assert (=> b!71695 (= e!46926 (ListLongMap!1398 Nil!1476))))

(declare-fun b!71696 () Bool)

(declare-fun e!46925 () Bool)

(declare-fun lt!31903 () ListLongMap!1397)

(assert (=> b!71696 (= e!46925 (isEmpty!317 lt!31903))))

(declare-fun b!71697 () Bool)

(declare-fun lt!31907 () Unit!1989)

(declare-fun lt!31906 () Unit!1989)

(assert (=> b!71697 (= lt!31907 lt!31906)))

(declare-fun lt!31901 () V!2937)

(declare-fun lt!31902 () (_ BitVec 64))

(declare-fun lt!31904 () (_ BitVec 64))

(declare-fun lt!31905 () ListLongMap!1397)

(assert (=> b!71697 (not (contains!716 (+!91 lt!31905 (tuple2!2113 lt!31902 lt!31901)) lt!31904))))

(assert (=> b!71697 (= lt!31906 (addStillNotContains!24 lt!31905 lt!31902 lt!31901 lt!31904))))

(assert (=> b!71697 (= lt!31904 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71697 (= lt!31901 (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71697 (= lt!31902 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!6229 () ListLongMap!1397)

(assert (=> b!71697 (= lt!31905 call!6229)))

(declare-fun e!46927 () ListLongMap!1397)

(assert (=> b!71697 (= e!46927 (+!91 call!6229 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71698 () Bool)

(declare-fun e!46929 () Bool)

(declare-fun e!46930 () Bool)

(assert (=> b!71698 (= e!46929 e!46930)))

(declare-fun c!10475 () Bool)

(declare-fun e!46928 () Bool)

(assert (=> b!71698 (= c!10475 e!46928)))

(declare-fun res!38207 () Bool)

(assert (=> b!71698 (=> (not res!38207) (not e!46928))))

(assert (=> b!71698 (= res!38207 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71699 () Bool)

(assert (=> b!71699 (= e!46927 call!6229)))

(declare-fun b!71701 () Bool)

(declare-fun e!46924 () Bool)

(assert (=> b!71701 (= e!46930 e!46924)))

(assert (=> b!71701 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun res!38210 () Bool)

(assert (=> b!71701 (= res!38210 (contains!716 lt!31903 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!71701 (=> (not res!38210) (not e!46924))))

(declare-fun bm!6226 () Bool)

(assert (=> bm!6226 (= call!6229 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!71702 () Bool)

(assert (=> b!71702 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> b!71702 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2079 (_values!2174 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> b!71702 (= e!46924 (= (apply!74 lt!31903 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71703 () Bool)

(assert (=> b!71703 (= e!46926 e!46927)))

(declare-fun c!10474 () Bool)

(assert (=> b!71703 (= c!10474 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!71704 () Bool)

(assert (=> b!71704 (= e!46925 (= lt!31903 (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71705 () Bool)

(assert (=> b!71705 (= e!46930 e!46925)))

(declare-fun c!10476 () Bool)

(assert (=> b!71705 (= c!10476 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71706 () Bool)

(assert (=> b!71706 (= e!46928 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!71706 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!16127 () Bool)

(assert (=> d!16127 e!46929))

(declare-fun res!38209 () Bool)

(assert (=> d!16127 (=> (not res!38209) (not e!46929))))

(assert (=> d!16127 (= res!38209 (not (contains!716 lt!31903 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16127 (= lt!31903 e!46926)))

(declare-fun c!10477 () Bool)

(assert (=> d!16127 (= c!10477 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!16127 (validMask!0 (mask!6147 (v!2507 (underlying!253 thiss!992))))))

(assert (=> d!16127 (= (getCurrentListMapNoExtraKeys!55 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (_values!2174 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992))) (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) (minValue!2095 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992)))) lt!31903)))

(declare-fun b!71700 () Bool)

(declare-fun res!38208 () Bool)

(assert (=> b!71700 (=> (not res!38208) (not e!46929))))

(assert (=> b!71700 (= res!38208 (not (contains!716 lt!31903 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16127 c!10477) b!71695))

(assert (= (and d!16127 (not c!10477)) b!71703))

(assert (= (and b!71703 c!10474) b!71697))

(assert (= (and b!71703 (not c!10474)) b!71699))

(assert (= (or b!71697 b!71699) bm!6226))

(assert (= (and d!16127 res!38209) b!71700))

(assert (= (and b!71700 res!38208) b!71698))

(assert (= (and b!71698 res!38207) b!71706))

(assert (= (and b!71698 c!10475) b!71701))

(assert (= (and b!71698 (not c!10475)) b!71705))

(assert (= (and b!71701 res!38210) b!71702))

(assert (= (and b!71705 c!10476) b!71704))

(assert (= (and b!71705 (not c!10476)) b!71696))

(declare-fun b_lambda!3209 () Bool)

(assert (=> (not b_lambda!3209) (not b!71697)))

(assert (=> b!71697 t!5003))

(declare-fun b_and!4405 () Bool)

(assert (= b_and!4401 (and (=> t!5003 result!2641) b_and!4405)))

(assert (=> b!71697 t!5005))

(declare-fun b_and!4407 () Bool)

(assert (= b_and!4403 (and (=> t!5005 result!2645) b_and!4407)))

(declare-fun b_lambda!3211 () Bool)

(assert (=> (not b_lambda!3211) (not b!71702)))

(assert (=> b!71702 t!5003))

(declare-fun b_and!4409 () Bool)

(assert (= b_and!4405 (and (=> t!5003 result!2641) b_and!4409)))

(assert (=> b!71702 t!5005))

(declare-fun b_and!4411 () Bool)

(assert (= b_and!4407 (and (=> t!5005 result!2645) b_and!4411)))

(declare-fun m!69161 () Bool)

(assert (=> d!16127 m!69161))

(assert (=> d!16127 m!67477))

(declare-fun m!69163 () Bool)

(assert (=> b!71701 m!69163))

(assert (=> b!71701 m!69163))

(declare-fun m!69165 () Bool)

(assert (=> b!71701 m!69165))

(declare-fun m!69167 () Bool)

(assert (=> bm!6226 m!69167))

(assert (=> b!71702 m!69163))

(assert (=> b!71702 m!69163))

(declare-fun m!69169 () Bool)

(assert (=> b!71702 m!69169))

(declare-fun m!69171 () Bool)

(assert (=> b!71702 m!69171))

(assert (=> b!71702 m!67459))

(assert (=> b!71702 m!69171))

(assert (=> b!71702 m!67459))

(declare-fun m!69173 () Bool)

(assert (=> b!71702 m!69173))

(declare-fun m!69175 () Bool)

(assert (=> b!71696 m!69175))

(assert (=> b!71704 m!69167))

(assert (=> b!71703 m!69163))

(assert (=> b!71703 m!69163))

(declare-fun m!69177 () Bool)

(assert (=> b!71703 m!69177))

(declare-fun m!69179 () Bool)

(assert (=> b!71700 m!69179))

(assert (=> b!71706 m!69163))

(assert (=> b!71706 m!69163))

(assert (=> b!71706 m!69177))

(assert (=> b!71697 m!69163))

(declare-fun m!69181 () Bool)

(assert (=> b!71697 m!69181))

(declare-fun m!69183 () Bool)

(assert (=> b!71697 m!69183))

(assert (=> b!71697 m!69181))

(declare-fun m!69185 () Bool)

(assert (=> b!71697 m!69185))

(declare-fun m!69187 () Bool)

(assert (=> b!71697 m!69187))

(assert (=> b!71697 m!69171))

(assert (=> b!71697 m!67459))

(assert (=> b!71697 m!69171))

(assert (=> b!71697 m!67459))

(assert (=> b!71697 m!69173))

(assert (=> bm!6149 d!16127))

(declare-fun d!16129 () Bool)

(declare-fun e!46932 () Bool)

(assert (=> d!16129 e!46932))

(declare-fun res!38211 () Bool)

(assert (=> d!16129 (=> res!38211 e!46932)))

(declare-fun lt!31910 () Bool)

(assert (=> d!16129 (= res!38211 (not lt!31910))))

(declare-fun lt!31908 () Bool)

(assert (=> d!16129 (= lt!31910 lt!31908)))

(declare-fun lt!31909 () Unit!1989)

(declare-fun e!46931 () Unit!1989)

(assert (=> d!16129 (= lt!31909 e!46931)))

(declare-fun c!10478 () Bool)

(assert (=> d!16129 (= c!10478 lt!31908)))

(assert (=> d!16129 (= lt!31908 (containsKey!134 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(assert (=> d!16129 (= (contains!716 (getCurrentListMap!407 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))) lt!31910)))

(declare-fun b!71707 () Bool)

(declare-fun lt!31911 () Unit!1989)

(assert (=> b!71707 (= e!46931 lt!31911)))

(assert (=> b!71707 (= lt!31911 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(assert (=> b!71707 (isDefined!84 (getValueByKey!130 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341))))))

(declare-fun b!71708 () Bool)

(declare-fun Unit!2030 () Unit!1989)

(assert (=> b!71708 (= e!46931 Unit!2030)))

(declare-fun b!71709 () Bool)

(assert (=> b!71709 (= e!46932 (isDefined!84 (getValueByKey!130 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341)))))))

(assert (= (and d!16129 c!10478) b!71707))

(assert (= (and d!16129 (not c!10478)) b!71708))

(assert (= (and d!16129 (not res!38211)) b!71709))

(assert (=> d!16129 m!67679))

(declare-fun m!69189 () Bool)

(assert (=> d!16129 m!69189))

(assert (=> b!71707 m!67679))

(declare-fun m!69191 () Bool)

(assert (=> b!71707 m!69191))

(assert (=> b!71707 m!67679))

(declare-fun m!69193 () Bool)

(assert (=> b!71707 m!69193))

(assert (=> b!71707 m!69193))

(declare-fun m!69195 () Bool)

(assert (=> b!71707 m!69195))

(assert (=> b!71709 m!67679))

(assert (=> b!71709 m!69193))

(assert (=> b!71709 m!69193))

(assert (=> b!71709 m!69195))

(assert (=> b!71180 d!16129))

(declare-fun bm!6227 () Bool)

(declare-fun call!6236 () Bool)

(declare-fun lt!31930 () ListLongMap!1397)

(assert (=> bm!6227 (= call!6236 (contains!716 lt!31930 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71710 () Bool)

(declare-fun e!46933 () Bool)

(assert (=> b!71710 (= e!46933 (= (apply!74 lt!31930 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!71711 () Bool)

(declare-fun e!46939 () ListLongMap!1397)

(declare-fun call!6232 () ListLongMap!1397)

(assert (=> b!71711 (= e!46939 call!6232)))

(declare-fun bm!6228 () Bool)

(declare-fun call!6230 () ListLongMap!1397)

(assert (=> bm!6228 (= call!6230 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!71712 () Bool)

(declare-fun e!46943 () Unit!1989)

(declare-fun Unit!2031 () Unit!1989)

(assert (=> b!71712 (= e!46943 Unit!2031)))

(declare-fun b!71713 () Bool)

(declare-fun e!46944 () Bool)

(declare-fun e!46938 () Bool)

(assert (=> b!71713 (= e!46944 e!46938)))

(declare-fun res!38218 () Bool)

(assert (=> b!71713 (=> (not res!38218) (not e!46938))))

(assert (=> b!71713 (= res!38218 (contains!716 lt!31930 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71713 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71714 () Bool)

(declare-fun c!10480 () Bool)

(assert (=> b!71714 (= c!10480 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!46934 () ListLongMap!1397)

(assert (=> b!71714 (= e!46934 e!46939)))

(declare-fun bm!6229 () Bool)

(declare-fun c!10481 () Bool)

(declare-fun c!10483 () Bool)

(declare-fun call!6234 () ListLongMap!1397)

(declare-fun call!6235 () ListLongMap!1397)

(declare-fun call!6231 () ListLongMap!1397)

(assert (=> bm!6229 (= call!6234 (+!91 (ite c!10483 call!6230 (ite c!10481 call!6235 call!6231)) (ite (or c!10483 c!10481) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun bm!6230 () Bool)

(declare-fun call!6233 () Bool)

(assert (=> bm!6230 (= call!6233 (contains!716 lt!31930 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71715 () Bool)

(declare-fun e!46937 () Bool)

(assert (=> b!71715 (= e!46937 (not call!6233))))

(declare-fun b!71716 () Bool)

(assert (=> b!71716 (= e!46938 (= (apply!74 lt!31930 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 lt!31332) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71716 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 lt!31332)))))

(assert (=> b!71716 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71717 () Bool)

(declare-fun e!46945 () Bool)

(assert (=> b!71717 (= e!46945 (not call!6236))))

(declare-fun b!71718 () Bool)

(declare-fun e!46940 () ListLongMap!1397)

(assert (=> b!71718 (= e!46940 e!46934)))

(assert (=> b!71718 (= c!10481 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!71719 () Bool)

(assert (=> b!71719 (= e!46939 call!6231)))

(declare-fun bm!6231 () Bool)

(assert (=> bm!6231 (= call!6232 call!6234)))

(declare-fun b!71720 () Bool)

(declare-fun e!46935 () Bool)

(assert (=> b!71720 (= e!46935 e!46945)))

(declare-fun c!10484 () Bool)

(assert (=> b!71720 (= c!10484 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6232 () Bool)

(assert (=> bm!6232 (= call!6235 call!6230)))

(declare-fun b!71721 () Bool)

(assert (=> b!71721 (= e!46934 call!6232)))

(declare-fun b!71722 () Bool)

(declare-fun res!38214 () Bool)

(assert (=> b!71722 (=> (not res!38214) (not e!46935))))

(assert (=> b!71722 (= res!38214 e!46944)))

(declare-fun res!38213 () Bool)

(assert (=> b!71722 (=> res!38213 e!46944)))

(declare-fun e!46942 () Bool)

(assert (=> b!71722 (= res!38213 (not e!46942))))

(declare-fun res!38215 () Bool)

(assert (=> b!71722 (=> (not res!38215) (not e!46942))))

(assert (=> b!71722 (= res!38215 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71723 () Bool)

(assert (=> b!71723 (= e!46942 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71724 () Bool)

(declare-fun res!38219 () Bool)

(assert (=> b!71724 (=> (not res!38219) (not e!46935))))

(assert (=> b!71724 (= res!38219 e!46937)))

(declare-fun c!10482 () Bool)

(assert (=> b!71724 (= c!10482 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!71725 () Bool)

(declare-fun lt!31928 () Unit!1989)

(assert (=> b!71725 (= e!46943 lt!31928)))

(declare-fun lt!31912 () ListLongMap!1397)

(assert (=> b!71725 (= lt!31912 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31926 () (_ BitVec 64))

(assert (=> b!71725 (= lt!31926 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31913 () (_ BitVec 64))

(assert (=> b!71725 (= lt!31913 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31914 () Unit!1989)

(assert (=> b!71725 (= lt!31914 (addStillContains!50 lt!31912 lt!31926 (zeroValue!2095 newMap!16) lt!31913))))

(assert (=> b!71725 (contains!716 (+!91 lt!31912 (tuple2!2113 lt!31926 (zeroValue!2095 newMap!16))) lt!31913)))

(declare-fun lt!31925 () Unit!1989)

(assert (=> b!71725 (= lt!31925 lt!31914)))

(declare-fun lt!31918 () ListLongMap!1397)

(assert (=> b!71725 (= lt!31918 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31923 () (_ BitVec 64))

(assert (=> b!71725 (= lt!31923 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31924 () (_ BitVec 64))

(assert (=> b!71725 (= lt!31924 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31921 () Unit!1989)

(assert (=> b!71725 (= lt!31921 (addApplyDifferent!50 lt!31918 lt!31923 (minValue!2095 newMap!16) lt!31924))))

(assert (=> b!71725 (= (apply!74 (+!91 lt!31918 (tuple2!2113 lt!31923 (minValue!2095 newMap!16))) lt!31924) (apply!74 lt!31918 lt!31924))))

(declare-fun lt!31915 () Unit!1989)

(assert (=> b!71725 (= lt!31915 lt!31921)))

(declare-fun lt!31927 () ListLongMap!1397)

(assert (=> b!71725 (= lt!31927 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31929 () (_ BitVec 64))

(assert (=> b!71725 (= lt!31929 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31933 () (_ BitVec 64))

(assert (=> b!71725 (= lt!31933 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!31922 () Unit!1989)

(assert (=> b!71725 (= lt!31922 (addApplyDifferent!50 lt!31927 lt!31929 (zeroValue!2095 newMap!16) lt!31933))))

(assert (=> b!71725 (= (apply!74 (+!91 lt!31927 (tuple2!2113 lt!31929 (zeroValue!2095 newMap!16))) lt!31933) (apply!74 lt!31927 lt!31933))))

(declare-fun lt!31932 () Unit!1989)

(assert (=> b!71725 (= lt!31932 lt!31922)))

(declare-fun lt!31931 () ListLongMap!1397)

(assert (=> b!71725 (= lt!31931 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!31920 () (_ BitVec 64))

(assert (=> b!71725 (= lt!31920 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!31916 () (_ BitVec 64))

(assert (=> b!71725 (= lt!31916 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!71725 (= lt!31928 (addApplyDifferent!50 lt!31931 lt!31920 (minValue!2095 newMap!16) lt!31916))))

(assert (=> b!71725 (= (apply!74 (+!91 lt!31931 (tuple2!2113 lt!31920 (minValue!2095 newMap!16))) lt!31916) (apply!74 lt!31931 lt!31916))))

(declare-fun b!71726 () Bool)

(declare-fun e!46941 () Bool)

(assert (=> b!71726 (= e!46945 e!46941)))

(declare-fun res!38212 () Bool)

(assert (=> b!71726 (= res!38212 call!6236)))

(assert (=> b!71726 (=> (not res!38212) (not e!46941))))

(declare-fun b!71727 () Bool)

(assert (=> b!71727 (= e!46937 e!46933)))

(declare-fun res!38220 () Bool)

(assert (=> b!71727 (= res!38220 call!6233)))

(assert (=> b!71727 (=> (not res!38220) (not e!46933))))

(declare-fun d!16131 () Bool)

(assert (=> d!16131 e!46935))

(declare-fun res!38216 () Bool)

(assert (=> d!16131 (=> (not res!38216) (not e!46935))))

(assert (=> d!16131 (= res!38216 (or (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))))

(declare-fun lt!31919 () ListLongMap!1397)

(assert (=> d!16131 (= lt!31930 lt!31919)))

(declare-fun lt!31917 () Unit!1989)

(assert (=> d!16131 (= lt!31917 e!46943)))

(declare-fun c!10479 () Bool)

(declare-fun e!46936 () Bool)

(assert (=> d!16131 (= c!10479 e!46936)))

(declare-fun res!38217 () Bool)

(assert (=> d!16131 (=> (not res!38217) (not e!46936))))

(assert (=> d!16131 (= res!38217 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16131 (= lt!31919 e!46940)))

(assert (=> d!16131 (= c!10483 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16131 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16131 (= (getCurrentListMap!407 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31930)))

(declare-fun b!71728 () Bool)

(assert (=> b!71728 (= e!46941 (= (apply!74 lt!31930 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun b!71729 () Bool)

(assert (=> b!71729 (= e!46936 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71730 () Bool)

(assert (=> b!71730 (= e!46940 (+!91 call!6234 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun bm!6233 () Bool)

(assert (=> bm!6233 (= call!6231 call!6235)))

(assert (= (and d!16131 c!10483) b!71730))

(assert (= (and d!16131 (not c!10483)) b!71718))

(assert (= (and b!71718 c!10481) b!71721))

(assert (= (and b!71718 (not c!10481)) b!71714))

(assert (= (and b!71714 c!10480) b!71711))

(assert (= (and b!71714 (not c!10480)) b!71719))

(assert (= (or b!71711 b!71719) bm!6233))

(assert (= (or b!71721 bm!6233) bm!6232))

(assert (= (or b!71721 b!71711) bm!6231))

(assert (= (or b!71730 bm!6232) bm!6228))

(assert (= (or b!71730 bm!6231) bm!6229))

(assert (= (and d!16131 res!38217) b!71729))

(assert (= (and d!16131 c!10479) b!71725))

(assert (= (and d!16131 (not c!10479)) b!71712))

(assert (= (and d!16131 res!38216) b!71722))

(assert (= (and b!71722 res!38215) b!71723))

(assert (= (and b!71722 (not res!38213)) b!71713))

(assert (= (and b!71713 res!38218) b!71716))

(assert (= (and b!71722 res!38214) b!71724))

(assert (= (and b!71724 c!10482) b!71727))

(assert (= (and b!71724 (not c!10482)) b!71715))

(assert (= (and b!71727 res!38220) b!71710))

(assert (= (or b!71727 b!71715) bm!6230))

(assert (= (and b!71724 res!38219) b!71720))

(assert (= (and b!71720 c!10484) b!71726))

(assert (= (and b!71720 (not c!10484)) b!71717))

(assert (= (and b!71726 res!38212) b!71728))

(assert (= (or b!71726 b!71717) bm!6227))

(declare-fun b_lambda!3213 () Bool)

(assert (=> (not b_lambda!3213) (not b!71716)))

(assert (=> b!71716 t!5019))

(declare-fun b_and!4413 () Bool)

(assert (= b_and!4409 (and (=> t!5019 result!2661) b_and!4413)))

(assert (=> b!71716 t!5021))

(declare-fun b_and!4415 () Bool)

(assert (= b_and!4411 (and (=> t!5021 result!2663) b_and!4415)))

(declare-fun m!69197 () Bool)

(assert (=> b!71730 m!69197))

(assert (=> b!71729 m!67861))

(assert (=> b!71729 m!67861))

(assert (=> b!71729 m!67863))

(assert (=> b!71716 m!67865))

(assert (=> b!71716 m!67861))

(declare-fun m!69199 () Bool)

(assert (=> b!71716 m!69199))

(assert (=> b!71716 m!67865))

(declare-fun m!69201 () Bool)

(assert (=> b!71716 m!69201))

(assert (=> b!71716 m!67861))

(declare-fun m!69203 () Bool)

(assert (=> b!71716 m!69203))

(assert (=> b!71716 m!69199))

(assert (=> b!71723 m!67861))

(assert (=> b!71723 m!67861))

(assert (=> b!71723 m!67863))

(assert (=> d!16131 m!67873))

(assert (=> b!71713 m!67861))

(assert (=> b!71713 m!67861))

(declare-fun m!69205 () Bool)

(assert (=> b!71713 m!69205))

(declare-fun m!69207 () Bool)

(assert (=> b!71710 m!69207))

(declare-fun m!69209 () Bool)

(assert (=> bm!6230 m!69209))

(declare-fun m!69211 () Bool)

(assert (=> bm!6229 m!69211))

(declare-fun m!69213 () Bool)

(assert (=> bm!6228 m!69213))

(declare-fun m!69215 () Bool)

(assert (=> bm!6227 m!69215))

(declare-fun m!69217 () Bool)

(assert (=> b!71728 m!69217))

(declare-fun m!69219 () Bool)

(assert (=> b!71725 m!69219))

(declare-fun m!69221 () Bool)

(assert (=> b!71725 m!69221))

(declare-fun m!69223 () Bool)

(assert (=> b!71725 m!69223))

(assert (=> b!71725 m!69213))

(assert (=> b!71725 m!67861))

(declare-fun m!69225 () Bool)

(assert (=> b!71725 m!69225))

(declare-fun m!69227 () Bool)

(assert (=> b!71725 m!69227))

(assert (=> b!71725 m!69225))

(declare-fun m!69229 () Bool)

(assert (=> b!71725 m!69229))

(declare-fun m!69231 () Bool)

(assert (=> b!71725 m!69231))

(assert (=> b!71725 m!69227))

(declare-fun m!69233 () Bool)

(assert (=> b!71725 m!69233))

(declare-fun m!69235 () Bool)

(assert (=> b!71725 m!69235))

(declare-fun m!69237 () Bool)

(assert (=> b!71725 m!69237))

(declare-fun m!69239 () Bool)

(assert (=> b!71725 m!69239))

(declare-fun m!69241 () Bool)

(assert (=> b!71725 m!69241))

(declare-fun m!69243 () Bool)

(assert (=> b!71725 m!69243))

(assert (=> b!71725 m!69235))

(declare-fun m!69245 () Bool)

(assert (=> b!71725 m!69245))

(assert (=> b!71725 m!69243))

(declare-fun m!69247 () Bool)

(assert (=> b!71725 m!69247))

(assert (=> b!71180 d!16131))

(declare-fun d!16133 () Bool)

(assert (=> d!16133 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31365) (_1!1067 lt!31109))) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31365) (_1!1067 lt!31109)))))))

(declare-fun bs!3078 () Bool)

(assert (= bs!3078 d!16133))

(assert (=> bs!3078 m!67767))

(declare-fun m!69249 () Bool)

(assert (=> bs!3078 m!69249))

(assert (=> b!70992 d!16133))

(assert (=> b!70992 d!15951))

(declare-fun d!16135 () Bool)

(declare-fun lt!31934 () Bool)

(assert (=> d!16135 (= lt!31934 (select (content!75 (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!46947 () Bool)

(assert (=> d!16135 (= lt!31934 e!46947)))

(declare-fun res!38221 () Bool)

(assert (=> d!16135 (=> (not res!38221) (not e!46947))))

(assert (=> d!16135 (= res!38221 ((_ is Cons!1476) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)))))

(assert (=> d!16135 (= (contains!718 (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!31934)))

(declare-fun b!71731 () Bool)

(declare-fun e!46946 () Bool)

(assert (=> b!71731 (= e!46947 e!46946)))

(declare-fun res!38222 () Bool)

(assert (=> b!71731 (=> res!38222 e!46946)))

(assert (=> b!71731 (= res!38222 (= (h!2062 (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!71732 () Bool)

(assert (=> b!71732 (= e!46946 (contains!718 (t!5007 (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!16135 res!38221) b!71731))

(assert (= (and b!71731 (not res!38222)) b!71732))

(declare-fun m!69251 () Bool)

(assert (=> d!16135 m!69251))

(assert (=> d!16135 m!68517))

(declare-fun m!69253 () Bool)

(assert (=> d!16135 m!69253))

(assert (=> b!71732 m!68517))

(declare-fun m!69255 () Bool)

(assert (=> b!71732 m!69255))

(assert (=> b!71380 d!16135))

(declare-fun d!16137 () Bool)

(declare-fun e!46949 () Bool)

(assert (=> d!16137 e!46949))

(declare-fun res!38223 () Bool)

(assert (=> d!16137 (=> res!38223 e!46949)))

(declare-fun lt!31937 () Bool)

(assert (=> d!16137 (= res!38223 (not lt!31937))))

(declare-fun lt!31935 () Bool)

(assert (=> d!16137 (= lt!31937 lt!31935)))

(declare-fun lt!31936 () Unit!1989)

(declare-fun e!46948 () Unit!1989)

(assert (=> d!16137 (= lt!31936 e!46948)))

(declare-fun c!10485 () Bool)

(assert (=> d!16137 (= c!10485 lt!31935)))

(assert (=> d!16137 (= lt!31935 (containsKey!134 (toList!714 lt!31447) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!16137 (= (contains!716 lt!31447 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!31937)))

(declare-fun b!71733 () Bool)

(declare-fun lt!31938 () Unit!1989)

(assert (=> b!71733 (= e!46948 lt!31938)))

(assert (=> b!71733 (= lt!31938 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31447) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> b!71733 (isDefined!84 (getValueByKey!130 (toList!714 lt!31447) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!71734 () Bool)

(declare-fun Unit!2032 () Unit!1989)

(assert (=> b!71734 (= e!46948 Unit!2032)))

(declare-fun b!71735 () Bool)

(assert (=> b!71735 (= e!46949 (isDefined!84 (getValueByKey!130 (toList!714 lt!31447) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (= (and d!16137 c!10485) b!71733))

(assert (= (and d!16137 (not c!10485)) b!71734))

(assert (= (and d!16137 (not res!38223)) b!71735))

(declare-fun m!69257 () Bool)

(assert (=> d!16137 m!69257))

(declare-fun m!69259 () Bool)

(assert (=> b!71733 m!69259))

(assert (=> b!71733 m!67971))

(assert (=> b!71733 m!67971))

(declare-fun m!69261 () Bool)

(assert (=> b!71733 m!69261))

(assert (=> b!71735 m!67971))

(assert (=> b!71735 m!67971))

(assert (=> b!71735 m!69261))

(assert (=> d!15789 d!16137))

(declare-fun b!71736 () Bool)

(declare-fun e!46950 () Option!136)

(assert (=> b!71736 (= e!46950 (Some!135 (_2!1067 (h!2061 lt!31448))))))

(declare-fun d!16139 () Bool)

(declare-fun c!10486 () Bool)

(assert (=> d!16139 (= c!10486 (and ((_ is Cons!1475) lt!31448) (= (_1!1067 (h!2061 lt!31448)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!16139 (= (getValueByKey!130 lt!31448 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) e!46950)))

(declare-fun b!71737 () Bool)

(declare-fun e!46951 () Option!136)

(assert (=> b!71737 (= e!46950 e!46951)))

(declare-fun c!10487 () Bool)

(assert (=> b!71737 (= c!10487 (and ((_ is Cons!1475) lt!31448) (not (= (_1!1067 (h!2061 lt!31448)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun b!71739 () Bool)

(assert (=> b!71739 (= e!46951 None!134)))

(declare-fun b!71738 () Bool)

(assert (=> b!71738 (= e!46951 (getValueByKey!130 (t!5006 lt!31448) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (= (and d!16139 c!10486) b!71736))

(assert (= (and d!16139 (not c!10486)) b!71737))

(assert (= (and b!71737 c!10487) b!71738))

(assert (= (and b!71737 (not c!10487)) b!71739))

(declare-fun m!69263 () Bool)

(assert (=> b!71738 m!69263))

(assert (=> d!15789 d!16139))

(declare-fun d!16141 () Bool)

(assert (=> d!16141 (= (getValueByKey!130 lt!31448 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun lt!31939 () Unit!1989)

(assert (=> d!16141 (= lt!31939 (choose!404 lt!31448 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun e!46952 () Bool)

(assert (=> d!16141 e!46952))

(declare-fun res!38224 () Bool)

(assert (=> d!16141 (=> (not res!38224) (not e!46952))))

(assert (=> d!16141 (= res!38224 (isStrictlySorted!286 lt!31448))))

(assert (=> d!16141 (= (lemmaContainsTupThenGetReturnValue!50 lt!31448 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!31939)))

(declare-fun b!71740 () Bool)

(declare-fun res!38225 () Bool)

(assert (=> b!71740 (=> (not res!38225) (not e!46952))))

(assert (=> b!71740 (= res!38225 (containsKey!134 lt!31448 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!71741 () Bool)

(assert (=> b!71741 (= e!46952 (contains!717 lt!31448 (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (= (and d!16141 res!38224) b!71740))

(assert (= (and b!71740 res!38225) b!71741))

(assert (=> d!16141 m!67965))

(declare-fun m!69265 () Bool)

(assert (=> d!16141 m!69265))

(declare-fun m!69267 () Bool)

(assert (=> d!16141 m!69267))

(declare-fun m!69269 () Bool)

(assert (=> b!71740 m!69269))

(declare-fun m!69271 () Bool)

(assert (=> b!71741 m!69271))

(assert (=> d!15789 d!16141))

(declare-fun lt!31940 () List!1479)

(declare-fun b!71742 () Bool)

(declare-fun e!46955 () Bool)

(assert (=> b!71742 (= e!46955 (contains!717 lt!31940 (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!71743 () Bool)

(declare-fun e!46953 () List!1479)

(assert (=> b!71743 (= e!46953 (insertStrictlySorted!53 (t!5006 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun d!16143 () Bool)

(assert (=> d!16143 e!46955))

(declare-fun res!38227 () Bool)

(assert (=> d!16143 (=> (not res!38227) (not e!46955))))

(assert (=> d!16143 (= res!38227 (isStrictlySorted!286 lt!31940))))

(declare-fun e!46954 () List!1479)

(assert (=> d!16143 (= lt!31940 e!46954)))

(declare-fun c!10491 () Bool)

(assert (=> d!16143 (= c!10491 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (bvslt (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!16143 (isStrictlySorted!286 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!16143 (= (insertStrictlySorted!53 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!31940)))

(declare-fun b!71744 () Bool)

(declare-fun c!10490 () Bool)

(assert (=> b!71744 (= c!10490 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (bvsgt (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun e!46957 () List!1479)

(declare-fun e!46956 () List!1479)

(assert (=> b!71744 (= e!46957 e!46956)))

(declare-fun b!71745 () Bool)

(assert (=> b!71745 (= e!46954 e!46957)))

(declare-fun c!10489 () Bool)

(assert (=> b!71745 (= c!10489 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!71746 () Bool)

(declare-fun call!6239 () List!1479)

(assert (=> b!71746 (= e!46957 call!6239)))

(declare-fun b!71747 () Bool)

(declare-fun res!38226 () Bool)

(assert (=> b!71747 (=> (not res!38226) (not e!46955))))

(assert (=> b!71747 (= res!38226 (containsKey!134 lt!31940 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!71748 () Bool)

(assert (=> b!71748 (= e!46953 (ite c!10489 (t!5006 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (ite c!10490 (Cons!1475 (h!2061 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (t!5006 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) Nil!1476)))))

(declare-fun b!71749 () Bool)

(declare-fun call!6238 () List!1479)

(assert (=> b!71749 (= e!46954 call!6238)))

(declare-fun b!71750 () Bool)

(declare-fun call!6237 () List!1479)

(assert (=> b!71750 (= e!46956 call!6237)))

(declare-fun bm!6234 () Bool)

(assert (=> bm!6234 (= call!6237 call!6239)))

(declare-fun bm!6235 () Bool)

(assert (=> bm!6235 (= call!6239 call!6238)))

(declare-fun bm!6236 () Bool)

(assert (=> bm!6236 (= call!6238 ($colon$colon!64 e!46953 (ite c!10491 (h!2061 (toList!714 (+!91 lt!31105 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun c!10488 () Bool)

(assert (=> bm!6236 (= c!10488 c!10491)))

(declare-fun b!71751 () Bool)

(assert (=> b!71751 (= e!46956 call!6237)))

(assert (= (and d!16143 c!10491) b!71749))

(assert (= (and d!16143 (not c!10491)) b!71745))

(assert (= (and b!71745 c!10489) b!71746))

(assert (= (and b!71745 (not c!10489)) b!71744))

(assert (= (and b!71744 c!10490) b!71750))

(assert (= (and b!71744 (not c!10490)) b!71751))

(assert (= (or b!71750 b!71751) bm!6234))

(assert (= (or b!71746 bm!6234) bm!6235))

(assert (= (or b!71749 bm!6235) bm!6236))

(assert (= (and bm!6236 c!10488) b!71743))

(assert (= (and bm!6236 (not c!10488)) b!71748))

(assert (= (and d!16143 res!38227) b!71747))

(assert (= (and b!71747 res!38226) b!71742))

(declare-fun m!69273 () Bool)

(assert (=> b!71742 m!69273))

(declare-fun m!69275 () Bool)

(assert (=> b!71743 m!69275))

(declare-fun m!69277 () Bool)

(assert (=> b!71747 m!69277))

(declare-fun m!69279 () Bool)

(assert (=> bm!6236 m!69279))

(declare-fun m!69281 () Bool)

(assert (=> d!16143 m!69281))

(declare-fun m!69283 () Bool)

(assert (=> d!16143 m!69283))

(assert (=> d!15789 d!16143))

(declare-fun d!16145 () Bool)

(assert (=> d!16145 (= (apply!74 lt!31535 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (getValueByKey!130 (toList!714 lt!31535) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3079 () Bool)

(assert (= bs!3079 d!16145))

(assert (=> bs!3079 m!67861))

(declare-fun m!69285 () Bool)

(assert (=> bs!3079 m!69285))

(assert (=> bs!3079 m!69285))

(declare-fun m!69287 () Bool)

(assert (=> bs!3079 m!69287))

(assert (=> b!71198 d!16145))

(declare-fun d!16147 () Bool)

(declare-fun c!10492 () Bool)

(assert (=> d!16147 (= c!10492 ((_ is ValueCellFull!890) (select (arr!1841 (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332)) #b00000000000000000000000000000000)))))

(declare-fun e!46958 () V!2937)

(assert (=> d!16147 (= (get!1136 (select (arr!1841 (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46958)))

(declare-fun b!71752 () Bool)

(assert (=> b!71752 (= e!46958 (get!1137 (select (arr!1841 (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71753 () Bool)

(assert (=> b!71753 (= e!46958 (get!1138 (select (arr!1841 (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16147 c!10492) b!71752))

(assert (= (and d!16147 (not c!10492)) b!71753))

(assert (=> b!71752 m!68153))

(assert (=> b!71752 m!67865))

(declare-fun m!69289 () Bool)

(assert (=> b!71752 m!69289))

(assert (=> b!71753 m!68153))

(assert (=> b!71753 m!67865))

(declare-fun m!69291 () Bool)

(assert (=> b!71753 m!69291))

(assert (=> b!71198 d!16147))

(assert (=> d!15811 d!15809))

(declare-fun d!16149 () Bool)

(assert (=> d!16149 (= (getValueByKey!130 lt!31359 (_1!1067 lt!31109)) (Some!135 (_2!1067 lt!31109)))))

(assert (=> d!16149 true))

(declare-fun _$22!379 () Unit!1989)

(assert (=> d!16149 (= (choose!404 lt!31359 (_1!1067 lt!31109) (_2!1067 lt!31109)) _$22!379)))

(declare-fun bs!3080 () Bool)

(assert (= bs!3080 d!16149))

(assert (=> bs!3080 m!67739))

(assert (=> d!15811 d!16149))

(declare-fun d!16151 () Bool)

(declare-fun res!38228 () Bool)

(declare-fun e!46959 () Bool)

(assert (=> d!16151 (=> res!38228 e!46959)))

(assert (=> d!16151 (= res!38228 (or ((_ is Nil!1476) lt!31359) ((_ is Nil!1476) (t!5006 lt!31359))))))

(assert (=> d!16151 (= (isStrictlySorted!286 lt!31359) e!46959)))

(declare-fun b!71754 () Bool)

(declare-fun e!46960 () Bool)

(assert (=> b!71754 (= e!46959 e!46960)))

(declare-fun res!38229 () Bool)

(assert (=> b!71754 (=> (not res!38229) (not e!46960))))

(assert (=> b!71754 (= res!38229 (bvslt (_1!1067 (h!2061 lt!31359)) (_1!1067 (h!2061 (t!5006 lt!31359)))))))

(declare-fun b!71755 () Bool)

(assert (=> b!71755 (= e!46960 (isStrictlySorted!286 (t!5006 lt!31359)))))

(assert (= (and d!16151 (not res!38228)) b!71754))

(assert (= (and b!71754 res!38229) b!71755))

(declare-fun m!69293 () Bool)

(assert (=> b!71755 m!69293))

(assert (=> d!15811 d!16151))

(declare-fun d!16153 () Bool)

(declare-fun res!38230 () Bool)

(declare-fun e!46961 () Bool)

(assert (=> d!16153 (=> (not res!38230) (not e!46961))))

(assert (=> d!16153 (= res!38230 (simpleValid!50 (_2!1068 lt!31724)))))

(assert (=> d!16153 (= (valid!296 (_2!1068 lt!31724)) e!46961)))

(declare-fun b!71756 () Bool)

(declare-fun res!38231 () Bool)

(assert (=> b!71756 (=> (not res!38231) (not e!46961))))

(assert (=> b!71756 (= res!38231 (= (arrayCountValidKeys!0 (_keys!3838 (_2!1068 lt!31724)) #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31724)))) (_size!393 (_2!1068 lt!31724))))))

(declare-fun b!71757 () Bool)

(declare-fun res!38232 () Bool)

(assert (=> b!71757 (=> (not res!38232) (not e!46961))))

(assert (=> b!71757 (= res!38232 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3838 (_2!1068 lt!31724)) (mask!6147 (_2!1068 lt!31724))))))

(declare-fun b!71758 () Bool)

(assert (=> b!71758 (= e!46961 (arrayNoDuplicates!0 (_keys!3838 (_2!1068 lt!31724)) #b00000000000000000000000000000000 Nil!1477))))

(assert (= (and d!16153 res!38230) b!71756))

(assert (= (and b!71756 res!38231) b!71757))

(assert (= (and b!71757 res!38232) b!71758))

(declare-fun m!69295 () Bool)

(assert (=> d!16153 m!69295))

(declare-fun m!69297 () Bool)

(assert (=> b!71756 m!69297))

(declare-fun m!69299 () Bool)

(assert (=> b!71757 m!69299))

(declare-fun m!69301 () Bool)

(assert (=> b!71758 m!69301))

(assert (=> b!71428 d!16153))

(assert (=> d!15923 d!15921))

(declare-fun d!16155 () Bool)

(assert (=> d!16155 (= (getValueByKey!130 lt!31355 (_1!1067 lt!31103)) (Some!135 (_2!1067 lt!31103)))))

(assert (=> d!16155 true))

(declare-fun _$22!380 () Unit!1989)

(assert (=> d!16155 (= (choose!404 lt!31355 (_1!1067 lt!31103) (_2!1067 lt!31103)) _$22!380)))

(declare-fun bs!3081 () Bool)

(assert (= bs!3081 d!16155))

(assert (=> bs!3081 m!67727))

(assert (=> d!15923 d!16155))

(declare-fun d!16157 () Bool)

(declare-fun res!38233 () Bool)

(declare-fun e!46962 () Bool)

(assert (=> d!16157 (=> res!38233 e!46962)))

(assert (=> d!16157 (= res!38233 (or ((_ is Nil!1476) lt!31355) ((_ is Nil!1476) (t!5006 lt!31355))))))

(assert (=> d!16157 (= (isStrictlySorted!286 lt!31355) e!46962)))

(declare-fun b!71759 () Bool)

(declare-fun e!46963 () Bool)

(assert (=> b!71759 (= e!46962 e!46963)))

(declare-fun res!38234 () Bool)

(assert (=> b!71759 (=> (not res!38234) (not e!46963))))

(assert (=> b!71759 (= res!38234 (bvslt (_1!1067 (h!2061 lt!31355)) (_1!1067 (h!2061 (t!5006 lt!31355)))))))

(declare-fun b!71760 () Bool)

(assert (=> b!71760 (= e!46963 (isStrictlySorted!286 (t!5006 lt!31355)))))

(assert (= (and d!16157 (not res!38233)) b!71759))

(assert (= (and b!71759 res!38234) b!71760))

(declare-fun m!69303 () Bool)

(assert (=> b!71760 m!69303))

(assert (=> d!15923 d!16157))

(declare-fun d!16159 () Bool)

(assert (=> d!16159 (= (get!1139 (getValueByKey!130 (toList!714 lt!31245) lt!31251)) (v!2513 (getValueByKey!130 (toList!714 lt!31245) lt!31251)))))

(assert (=> d!15873 d!16159))

(declare-fun b!71761 () Bool)

(declare-fun e!46964 () Option!136)

(assert (=> b!71761 (= e!46964 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31245)))))))

(declare-fun d!16161 () Bool)

(declare-fun c!10493 () Bool)

(assert (=> d!16161 (= c!10493 (and ((_ is Cons!1475) (toList!714 lt!31245)) (= (_1!1067 (h!2061 (toList!714 lt!31245))) lt!31251)))))

(assert (=> d!16161 (= (getValueByKey!130 (toList!714 lt!31245) lt!31251) e!46964)))

(declare-fun b!71762 () Bool)

(declare-fun e!46965 () Option!136)

(assert (=> b!71762 (= e!46964 e!46965)))

(declare-fun c!10494 () Bool)

(assert (=> b!71762 (= c!10494 (and ((_ is Cons!1475) (toList!714 lt!31245)) (not (= (_1!1067 (h!2061 (toList!714 lt!31245))) lt!31251))))))

(declare-fun b!71764 () Bool)

(assert (=> b!71764 (= e!46965 None!134)))

(declare-fun b!71763 () Bool)

(assert (=> b!71763 (= e!46965 (getValueByKey!130 (t!5006 (toList!714 lt!31245)) lt!31251))))

(assert (= (and d!16161 c!10493) b!71761))

(assert (= (and d!16161 (not c!10493)) b!71762))

(assert (= (and b!71762 c!10494) b!71763))

(assert (= (and b!71762 (not c!10494)) b!71764))

(declare-fun m!69305 () Bool)

(assert (=> b!71763 m!69305))

(assert (=> d!15873 d!16161))

(declare-fun d!16163 () Bool)

(declare-fun c!10495 () Bool)

(assert (=> d!16163 (= c!10495 ((_ is Nil!1476) (toList!714 lt!31354)))))

(declare-fun e!46966 () (InoxSet tuple2!2112))

(assert (=> d!16163 (= (content!76 (toList!714 lt!31354)) e!46966)))

(declare-fun b!71765 () Bool)

(assert (=> b!71765 (= e!46966 ((as const (Array tuple2!2112 Bool)) false))))

(declare-fun b!71766 () Bool)

(assert (=> b!71766 (= e!46966 ((_ map or) (store ((as const (Array tuple2!2112 Bool)) false) (h!2061 (toList!714 lt!31354)) true) (content!76 (t!5006 (toList!714 lt!31354)))))))

(assert (= (and d!16163 c!10495) b!71765))

(assert (= (and d!16163 (not c!10495)) b!71766))

(declare-fun m!69307 () Bool)

(assert (=> b!71766 m!69307))

(assert (=> b!71766 m!68841))

(assert (=> d!15903 d!16163))

(declare-fun d!16165 () Bool)

(declare-fun res!38235 () Bool)

(declare-fun e!46967 () Bool)

(assert (=> d!16165 (=> res!38235 e!46967)))

(assert (=> d!16165 (= res!38235 (or ((_ is Nil!1476) lt!31610) ((_ is Nil!1476) (t!5006 lt!31610))))))

(assert (=> d!16165 (= (isStrictlySorted!286 lt!31610) e!46967)))

(declare-fun b!71767 () Bool)

(declare-fun e!46968 () Bool)

(assert (=> b!71767 (= e!46967 e!46968)))

(declare-fun res!38236 () Bool)

(assert (=> b!71767 (=> (not res!38236) (not e!46968))))

(assert (=> b!71767 (= res!38236 (bvslt (_1!1067 (h!2061 lt!31610)) (_1!1067 (h!2061 (t!5006 lt!31610)))))))

(declare-fun b!71768 () Bool)

(assert (=> b!71768 (= e!46968 (isStrictlySorted!286 (t!5006 lt!31610)))))

(assert (= (and d!16165 (not res!38235)) b!71767))

(assert (= (and b!71767 res!38236) b!71768))

(declare-fun m!69309 () Bool)

(assert (=> b!71768 m!69309))

(assert (=> d!15901 d!16165))

(declare-fun d!16167 () Bool)

(declare-fun res!38237 () Bool)

(declare-fun e!46969 () Bool)

(assert (=> d!16167 (=> res!38237 e!46969)))

(assert (=> d!16167 (= res!38237 (or ((_ is Nil!1476) (toList!714 (+!91 lt!31105 lt!31109))) ((_ is Nil!1476) (t!5006 (toList!714 (+!91 lt!31105 lt!31109))))))))

(assert (=> d!16167 (= (isStrictlySorted!286 (toList!714 (+!91 lt!31105 lt!31109))) e!46969)))

(declare-fun b!71769 () Bool)

(declare-fun e!46970 () Bool)

(assert (=> b!71769 (= e!46969 e!46970)))

(declare-fun res!38238 () Bool)

(assert (=> b!71769 (=> (not res!38238) (not e!46970))))

(assert (=> b!71769 (= res!38238 (bvslt (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 lt!31109)))) (_1!1067 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31109)))))))))

(declare-fun b!71770 () Bool)

(assert (=> b!71770 (= e!46970 (isStrictlySorted!286 (t!5006 (toList!714 (+!91 lt!31105 lt!31109)))))))

(assert (= (and d!16167 (not res!38237)) b!71769))

(assert (= (and b!71769 res!38238) b!71770))

(declare-fun m!69311 () Bool)

(assert (=> b!71770 m!69311))

(assert (=> d!15901 d!16167))

(declare-fun b!71771 () Bool)

(declare-fun e!46973 () Bool)

(declare-fun lt!31941 () List!1479)

(assert (=> b!71771 (= e!46973 (contains!717 lt!31941 (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun b!71772 () Bool)

(declare-fun e!46971 () List!1479)

(assert (=> b!71772 (= e!46971 (insertStrictlySorted!53 (t!5006 (t!5006 (toList!714 (+!91 lt!31105 lt!31109)))) (_1!1067 lt!31103) (_2!1067 lt!31103)))))

(declare-fun d!16169 () Bool)

(assert (=> d!16169 e!46973))

(declare-fun res!38240 () Bool)

(assert (=> d!16169 (=> (not res!38240) (not e!46973))))

(assert (=> d!16169 (= res!38240 (isStrictlySorted!286 lt!31941))))

(declare-fun e!46972 () List!1479)

(assert (=> d!16169 (= lt!31941 e!46972)))

(declare-fun c!10499 () Bool)

(assert (=> d!16169 (= c!10499 (and ((_ is Cons!1475) (t!5006 (toList!714 (+!91 lt!31105 lt!31109)))) (bvslt (_1!1067 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31109))))) (_1!1067 lt!31103))))))

(assert (=> d!16169 (isStrictlySorted!286 (t!5006 (toList!714 (+!91 lt!31105 lt!31109))))))

(assert (=> d!16169 (= (insertStrictlySorted!53 (t!5006 (toList!714 (+!91 lt!31105 lt!31109))) (_1!1067 lt!31103) (_2!1067 lt!31103)) lt!31941)))

(declare-fun c!10498 () Bool)

(declare-fun b!71773 () Bool)

(assert (=> b!71773 (= c!10498 (and ((_ is Cons!1475) (t!5006 (toList!714 (+!91 lt!31105 lt!31109)))) (bvsgt (_1!1067 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31109))))) (_1!1067 lt!31103))))))

(declare-fun e!46975 () List!1479)

(declare-fun e!46974 () List!1479)

(assert (=> b!71773 (= e!46975 e!46974)))

(declare-fun b!71774 () Bool)

(assert (=> b!71774 (= e!46972 e!46975)))

(declare-fun c!10497 () Bool)

(assert (=> b!71774 (= c!10497 (and ((_ is Cons!1475) (t!5006 (toList!714 (+!91 lt!31105 lt!31109)))) (= (_1!1067 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31109))))) (_1!1067 lt!31103))))))

(declare-fun b!71775 () Bool)

(declare-fun call!6242 () List!1479)

(assert (=> b!71775 (= e!46975 call!6242)))

(declare-fun b!71776 () Bool)

(declare-fun res!38239 () Bool)

(assert (=> b!71776 (=> (not res!38239) (not e!46973))))

(assert (=> b!71776 (= res!38239 (containsKey!134 lt!31941 (_1!1067 lt!31103)))))

(declare-fun b!71777 () Bool)

(assert (=> b!71777 (= e!46971 (ite c!10497 (t!5006 (t!5006 (toList!714 (+!91 lt!31105 lt!31109)))) (ite c!10498 (Cons!1475 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31109)))) (t!5006 (t!5006 (toList!714 (+!91 lt!31105 lt!31109))))) Nil!1476)))))

(declare-fun b!71778 () Bool)

(declare-fun call!6241 () List!1479)

(assert (=> b!71778 (= e!46972 call!6241)))

(declare-fun b!71779 () Bool)

(declare-fun call!6240 () List!1479)

(assert (=> b!71779 (= e!46974 call!6240)))

(declare-fun bm!6237 () Bool)

(assert (=> bm!6237 (= call!6240 call!6242)))

(declare-fun bm!6238 () Bool)

(assert (=> bm!6238 (= call!6242 call!6241)))

(declare-fun bm!6239 () Bool)

(assert (=> bm!6239 (= call!6241 ($colon$colon!64 e!46971 (ite c!10499 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31109)))) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103)))))))

(declare-fun c!10496 () Bool)

(assert (=> bm!6239 (= c!10496 c!10499)))

(declare-fun b!71780 () Bool)

(assert (=> b!71780 (= e!46974 call!6240)))

(assert (= (and d!16169 c!10499) b!71778))

(assert (= (and d!16169 (not c!10499)) b!71774))

(assert (= (and b!71774 c!10497) b!71775))

(assert (= (and b!71774 (not c!10497)) b!71773))

(assert (= (and b!71773 c!10498) b!71779))

(assert (= (and b!71773 (not c!10498)) b!71780))

(assert (= (or b!71779 b!71780) bm!6237))

(assert (= (or b!71775 bm!6237) bm!6238))

(assert (= (or b!71778 bm!6238) bm!6239))

(assert (= (and bm!6239 c!10496) b!71772))

(assert (= (and bm!6239 (not c!10496)) b!71777))

(assert (= (and d!16169 res!38240) b!71776))

(assert (= (and b!71776 res!38239) b!71771))

(declare-fun m!69313 () Bool)

(assert (=> b!71771 m!69313))

(declare-fun m!69315 () Bool)

(assert (=> b!71772 m!69315))

(declare-fun m!69317 () Bool)

(assert (=> b!71776 m!69317))

(declare-fun m!69319 () Bool)

(assert (=> bm!6239 m!69319))

(declare-fun m!69321 () Bool)

(assert (=> d!16169 m!69321))

(assert (=> d!16169 m!69311))

(assert (=> b!71276 d!16169))

(declare-fun d!16171 () Bool)

(declare-fun e!46976 () Bool)

(assert (=> d!16171 e!46976))

(declare-fun res!38241 () Bool)

(assert (=> d!16171 (=> (not res!38241) (not e!46976))))

(declare-fun lt!31943 () ListLongMap!1397)

(assert (=> d!16171 (= res!38241 (contains!716 lt!31943 (_1!1067 (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))))

(declare-fun lt!31944 () List!1479)

(assert (=> d!16171 (= lt!31943 (ListLongMap!1398 lt!31944))))

(declare-fun lt!31942 () Unit!1989)

(declare-fun lt!31945 () Unit!1989)

(assert (=> d!16171 (= lt!31942 lt!31945)))

(assert (=> d!16171 (= (getValueByKey!130 lt!31944 (_1!1067 (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))) (Some!135 (_2!1067 (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))))

(assert (=> d!16171 (= lt!31945 (lemmaContainsTupThenGetReturnValue!50 lt!31944 (_1!1067 (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) (_2!1067 (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))))

(assert (=> d!16171 (= lt!31944 (insertStrictlySorted!53 (toList!714 (ite c!10311 call!6145 (ite c!10309 call!6150 call!6146))) (_1!1067 (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) (_2!1067 (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))))

(assert (=> d!16171 (= (+!91 (ite c!10311 call!6145 (ite c!10309 call!6150 call!6146)) (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) lt!31943)))

(declare-fun b!71781 () Bool)

(declare-fun res!38242 () Bool)

(assert (=> b!71781 (=> (not res!38242) (not e!46976))))

(assert (=> b!71781 (= res!38242 (= (getValueByKey!130 (toList!714 lt!31943) (_1!1067 (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))) (Some!135 (_2!1067 (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))))

(declare-fun b!71782 () Bool)

(assert (=> b!71782 (= e!46976 (contains!717 (toList!714 lt!31943) (ite (or c!10311 c!10309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(assert (= (and d!16171 res!38241) b!71781))

(assert (= (and b!71781 res!38242) b!71782))

(declare-fun m!69323 () Bool)

(assert (=> d!16171 m!69323))

(declare-fun m!69325 () Bool)

(assert (=> d!16171 m!69325))

(declare-fun m!69327 () Bool)

(assert (=> d!16171 m!69327))

(declare-fun m!69329 () Bool)

(assert (=> d!16171 m!69329))

(declare-fun m!69331 () Bool)

(assert (=> b!71781 m!69331))

(declare-fun m!69333 () Bool)

(assert (=> b!71782 m!69333))

(assert (=> bm!6144 d!16171))

(declare-fun d!16173 () Bool)

(assert (=> d!16173 (= (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71172 d!16173))

(declare-fun b!71783 () Bool)

(declare-fun e!46977 () (_ BitVec 32))

(declare-fun call!6243 () (_ BitVec 32))

(assert (=> b!71783 (= e!46977 (bvadd #b00000000000000000000000000000001 call!6243))))

(declare-fun b!71784 () Bool)

(declare-fun e!46978 () (_ BitVec 32))

(assert (=> b!71784 (= e!46978 e!46977)))

(declare-fun c!10500 () Bool)

(assert (=> b!71784 (= c!10500 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000)))))

(declare-fun bm!6240 () Bool)

(assert (=> bm!6240 (= call!6243 (arrayCountValidKeys!0 (_keys!3838 (_2!1068 lt!31326)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (_2!1068 lt!31326)))))))

(declare-fun b!71785 () Bool)

(assert (=> b!71785 (= e!46978 #b00000000000000000000000000000000)))

(declare-fun d!16175 () Bool)

(declare-fun lt!31946 () (_ BitVec 32))

(assert (=> d!16175 (and (bvsge lt!31946 #b00000000000000000000000000000000) (bvsle lt!31946 (bvsub (size!2078 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000)))))

(assert (=> d!16175 (= lt!31946 e!46978)))

(declare-fun c!10501 () Bool)

(assert (=> d!16175 (= c!10501 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))))))

(assert (=> d!16175 (and (bvsle #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2078 (_keys!3838 (_2!1068 lt!31326))) (size!2078 (_keys!3838 (_2!1068 lt!31326)))))))

(assert (=> d!16175 (= (arrayCountValidKeys!0 (_keys!3838 (_2!1068 lt!31326)) #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))) lt!31946)))

(declare-fun b!71786 () Bool)

(assert (=> b!71786 (= e!46977 call!6243)))

(assert (= (and d!16175 c!10501) b!71785))

(assert (= (and d!16175 (not c!10501)) b!71784))

(assert (= (and b!71784 c!10500) b!71783))

(assert (= (and b!71784 (not c!10500)) b!71786))

(assert (= (or b!71783 b!71786) bm!6240))

(assert (=> b!71784 m!69077))

(assert (=> b!71784 m!69077))

(assert (=> b!71784 m!69079))

(declare-fun m!69335 () Bool)

(assert (=> bm!6240 m!69335))

(assert (=> b!71438 d!16175))

(declare-fun lt!31947 () Bool)

(declare-fun d!16177 () Bool)

(assert (=> d!16177 (= lt!31947 (select (content!76 (toList!714 lt!31447)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(declare-fun e!46979 () Bool)

(assert (=> d!16177 (= lt!31947 e!46979)))

(declare-fun res!38244 () Bool)

(assert (=> d!16177 (=> (not res!38244) (not e!46979))))

(assert (=> d!16177 (= res!38244 ((_ is Cons!1475) (toList!714 lt!31447)))))

(assert (=> d!16177 (= (contains!717 (toList!714 lt!31447) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) lt!31947)))

(declare-fun b!71787 () Bool)

(declare-fun e!46980 () Bool)

(assert (=> b!71787 (= e!46979 e!46980)))

(declare-fun res!38243 () Bool)

(assert (=> b!71787 (=> res!38243 e!46980)))

(assert (=> b!71787 (= res!38243 (= (h!2061 (toList!714 lt!31447)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(declare-fun b!71788 () Bool)

(assert (=> b!71788 (= e!46980 (contains!717 (t!5006 (toList!714 lt!31447)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(assert (= (and d!16177 res!38244) b!71787))

(assert (= (and b!71787 (not res!38243)) b!71788))

(declare-fun m!69337 () Bool)

(assert (=> d!16177 m!69337))

(declare-fun m!69339 () Bool)

(assert (=> d!16177 m!69339))

(declare-fun m!69341 () Bool)

(assert (=> b!71788 m!69341))

(assert (=> b!71081 d!16177))

(assert (=> b!71205 d!16173))

(declare-fun b!71789 () Bool)

(declare-fun e!46981 () Option!136)

(assert (=> b!71789 (= e!46981 (Some!135 (_2!1067 (h!2061 (t!5006 (toList!714 lt!31354))))))))

(declare-fun d!16179 () Bool)

(declare-fun c!10502 () Bool)

(assert (=> d!16179 (= c!10502 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31354))) (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31354)))) (_1!1067 lt!31103))))))

(assert (=> d!16179 (= (getValueByKey!130 (t!5006 (toList!714 lt!31354)) (_1!1067 lt!31103)) e!46981)))

(declare-fun b!71790 () Bool)

(declare-fun e!46982 () Option!136)

(assert (=> b!71790 (= e!46981 e!46982)))

(declare-fun c!10503 () Bool)

(assert (=> b!71790 (= c!10503 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31354))) (not (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31354)))) (_1!1067 lt!31103)))))))

(declare-fun b!71792 () Bool)

(assert (=> b!71792 (= e!46982 None!134)))

(declare-fun b!71791 () Bool)

(assert (=> b!71791 (= e!46982 (getValueByKey!130 (t!5006 (t!5006 (toList!714 lt!31354))) (_1!1067 lt!31103)))))

(assert (= (and d!16179 c!10502) b!71789))

(assert (= (and d!16179 (not c!10502)) b!71790))

(assert (= (and b!71790 c!10503) b!71791))

(assert (= (and b!71790 (not c!10503)) b!71792))

(declare-fun m!69343 () Bool)

(assert (=> b!71791 m!69343))

(assert (=> b!71449 d!16179))

(declare-fun d!16181 () Bool)

(declare-fun res!38245 () Bool)

(declare-fun e!46983 () Bool)

(assert (=> d!16181 (=> res!38245 e!46983)))

(assert (=> d!16181 (= res!38245 (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!16181 (= (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!46983)))

(declare-fun b!71793 () Bool)

(declare-fun e!46984 () Bool)

(assert (=> b!71793 (= e!46983 e!46984)))

(declare-fun res!38246 () Bool)

(assert (=> b!71793 (=> (not res!38246) (not e!46984))))

(assert (=> b!71793 (= res!38246 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71794 () Bool)

(assert (=> b!71794 (= e!46984 (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16181 (not res!38245)) b!71793))

(assert (= (and b!71793 res!38246) b!71794))

(assert (=> d!16181 m!69163))

(assert (=> b!71794 m!67435))

(declare-fun m!69345 () Bool)

(assert (=> b!71794 m!69345))

(assert (=> b!71073 d!16181))

(declare-fun d!16183 () Bool)

(assert (=> d!16183 (= (apply!74 lt!31430 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1139 (getValueByKey!130 (toList!714 lt!31430) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3082 () Bool)

(assert (= bs!3082 d!16183))

(declare-fun m!69347 () Bool)

(assert (=> bs!3082 m!69347))

(assert (=> bs!3082 m!69347))

(declare-fun m!69349 () Bool)

(assert (=> bs!3082 m!69349))

(assert (=> b!71065 d!16183))

(declare-fun d!16185 () Bool)

(assert (=> d!16185 (= (apply!74 lt!31452 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1139 (getValueByKey!130 (toList!714 lt!31452) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3083 () Bool)

(assert (= bs!3083 d!16185))

(assert (=> bs!3083 m!67923))

(assert (=> bs!3083 m!68851))

(assert (=> bs!3083 m!68851))

(declare-fun m!69351 () Bool)

(assert (=> bs!3083 m!69351))

(assert (=> b!71089 d!16185))

(declare-fun d!16187 () Bool)

(declare-fun c!10504 () Bool)

(assert (=> d!16187 (= c!10504 ((_ is ValueCellFull!890) (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!46985 () V!2937)

(assert (=> d!16187 (= (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!46985)))

(declare-fun b!71795 () Bool)

(assert (=> b!71795 (= e!46985 (get!1137 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71796 () Bool)

(assert (=> b!71796 (= e!46985 (get!1138 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16187 c!10504) b!71795))

(assert (= (and d!16187 (not c!10504)) b!71796))

(assert (=> b!71795 m!67983))

(assert (=> b!71795 m!67459))

(declare-fun m!69353 () Bool)

(assert (=> b!71795 m!69353))

(assert (=> b!71796 m!67983))

(assert (=> b!71796 m!67459))

(declare-fun m!69355 () Bool)

(assert (=> b!71796 m!69355))

(assert (=> b!71089 d!16187))

(assert (=> bm!6196 d!15821))

(assert (=> b!71239 d!16035))

(assert (=> b!71239 d!16037))

(assert (=> d!15933 d!16053))

(declare-fun d!16189 () Bool)

(declare-fun res!38247 () Bool)

(declare-fun e!46986 () Bool)

(assert (=> d!16189 (=> res!38247 e!46986)))

(assert (=> d!16189 (= res!38247 (= (select (arr!1840 (_keys!3838 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!16189 (= (arrayContainsKey!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!46986)))

(declare-fun b!71797 () Bool)

(declare-fun e!46987 () Bool)

(assert (=> b!71797 (= e!46986 e!46987)))

(declare-fun res!38248 () Bool)

(assert (=> b!71797 (=> (not res!38248) (not e!46987))))

(assert (=> b!71797 (= res!38248 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71798 () Bool)

(assert (=> b!71798 (= e!46987 (arrayContainsKey!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16189 (not res!38247)) b!71797))

(assert (= (and b!71797 res!38248) b!71798))

(declare-fun m!69357 () Bool)

(assert (=> d!16189 m!69357))

(assert (=> b!71798 m!67435))

(declare-fun m!69359 () Bool)

(assert (=> b!71798 m!69359))

(assert (=> b!71384 d!16189))

(declare-fun d!16191 () Bool)

(assert (=> d!16191 (= (get!1139 (getValueByKey!130 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2513 (getValueByKey!130 (toList!714 lt!31248) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!15945 d!16191))

(assert (=> d!15945 d!16121))

(declare-fun d!16193 () Bool)

(assert (=> d!16193 (contains!716 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))

(declare-fun lt!31950 () Unit!1989)

(declare-fun choose!415 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 64) (_ BitVec 32) Int) Unit!1989)

(assert (=> d!16193 (= lt!31950 (choose!415 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16193 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16193 (= (lemmaArrayContainsKeyThenInListMap!12 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31950)))

(declare-fun bs!3084 () Bool)

(assert (= bs!3084 d!16193))

(assert (=> bs!3084 m!67607))

(assert (=> bs!3084 m!67607))

(assert (=> bs!3084 m!67435))

(assert (=> bs!3084 m!68555))

(assert (=> bs!3084 m!67435))

(declare-fun m!69361 () Bool)

(assert (=> bs!3084 m!69361))

(assert (=> bs!3084 m!67873))

(assert (=> b!71437 d!16193))

(declare-fun d!16195 () Bool)

(declare-fun e!46989 () Bool)

(assert (=> d!16195 e!46989))

(declare-fun res!38249 () Bool)

(assert (=> d!16195 (=> res!38249 e!46989)))

(declare-fun lt!31953 () Bool)

(assert (=> d!16195 (= res!38249 (not lt!31953))))

(declare-fun lt!31951 () Bool)

(assert (=> d!16195 (= lt!31953 lt!31951)))

(declare-fun lt!31952 () Unit!1989)

(declare-fun e!46988 () Unit!1989)

(assert (=> d!16195 (= lt!31952 e!46988)))

(declare-fun c!10505 () Bool)

(assert (=> d!16195 (= c!10505 lt!31951)))

(assert (=> d!16195 (= lt!31951 (containsKey!134 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!16195 (= (contains!716 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) lt!31953)))

(declare-fun b!71799 () Bool)

(declare-fun lt!31954 () Unit!1989)

(assert (=> b!71799 (= e!46988 lt!31954)))

(assert (=> b!71799 (= lt!31954 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!71799 (isDefined!84 (getValueByKey!130 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!71800 () Bool)

(declare-fun Unit!2033 () Unit!1989)

(assert (=> b!71800 (= e!46988 Unit!2033)))

(declare-fun b!71801 () Bool)

(assert (=> b!71801 (= e!46989 (isDefined!84 (getValueByKey!130 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!16195 c!10505) b!71799))

(assert (= (and d!16195 (not c!10505)) b!71800))

(assert (= (and d!16195 (not res!38249)) b!71801))

(assert (=> d!16195 m!67435))

(declare-fun m!69363 () Bool)

(assert (=> d!16195 m!69363))

(assert (=> b!71799 m!67435))

(declare-fun m!69365 () Bool)

(assert (=> b!71799 m!69365))

(assert (=> b!71799 m!67435))

(declare-fun m!69367 () Bool)

(assert (=> b!71799 m!69367))

(assert (=> b!71799 m!69367))

(declare-fun m!69369 () Bool)

(assert (=> b!71799 m!69369))

(assert (=> b!71801 m!67435))

(assert (=> b!71801 m!69367))

(assert (=> b!71801 m!69367))

(assert (=> b!71801 m!69369))

(assert (=> b!71437 d!16195))

(assert (=> b!71437 d!15819))

(declare-fun d!16197 () Bool)

(assert (not d!16197))

(assert (=> b!71101 d!16197))

(declare-fun d!16199 () Bool)

(declare-fun e!46990 () Bool)

(assert (=> d!16199 e!46990))

(declare-fun res!38250 () Bool)

(assert (=> d!16199 (=> (not res!38250) (not e!46990))))

(declare-fun lt!31956 () ListLongMap!1397)

(assert (=> d!16199 (= res!38250 (contains!716 lt!31956 (_1!1067 (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(declare-fun lt!31957 () List!1479)

(assert (=> d!16199 (= lt!31956 (ListLongMap!1398 lt!31957))))

(declare-fun lt!31955 () Unit!1989)

(declare-fun lt!31958 () Unit!1989)

(assert (=> d!16199 (= lt!31955 lt!31958)))

(assert (=> d!16199 (= (getValueByKey!130 lt!31957 (_1!1067 (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))) (Some!135 (_2!1067 (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16199 (= lt!31958 (lemmaContainsTupThenGetReturnValue!50 lt!31957 (_1!1067 (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (_2!1067 (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16199 (= lt!31957 (insertStrictlySorted!53 (toList!714 (ite c!10331 call!6156 (ite c!10329 call!6161 call!6157))) (_1!1067 (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (_2!1067 (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16199 (= (+!91 (ite c!10331 call!6156 (ite c!10329 call!6161 call!6157)) (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) lt!31956)))

(declare-fun b!71802 () Bool)

(declare-fun res!38251 () Bool)

(assert (=> b!71802 (=> (not res!38251) (not e!46990))))

(assert (=> b!71802 (= res!38251 (= (getValueByKey!130 (toList!714 lt!31956) (_1!1067 (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))) (Some!135 (_2!1067 (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))))

(declare-fun b!71803 () Bool)

(assert (=> b!71803 (= e!46990 (contains!717 (toList!714 lt!31956) (ite (or c!10331 c!10329) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (= (and d!16199 res!38250) b!71802))

(assert (= (and b!71802 res!38251) b!71803))

(declare-fun m!69371 () Bool)

(assert (=> d!16199 m!69371))

(declare-fun m!69373 () Bool)

(assert (=> d!16199 m!69373))

(declare-fun m!69375 () Bool)

(assert (=> d!16199 m!69375))

(declare-fun m!69377 () Bool)

(assert (=> d!16199 m!69377))

(declare-fun m!69379 () Bool)

(assert (=> b!71802 m!69379))

(declare-fun m!69381 () Bool)

(assert (=> b!71803 m!69381))

(assert (=> bm!6155 d!16199))

(assert (=> d!15899 d!15897))

(declare-fun d!16201 () Bool)

(assert (=> d!16201 (= (getValueByKey!130 lt!31370 (_1!1067 lt!31103)) (Some!135 (_2!1067 lt!31103)))))

(assert (=> d!16201 true))

(declare-fun _$22!381 () Unit!1989)

(assert (=> d!16201 (= (choose!404 lt!31370 (_1!1067 lt!31103) (_2!1067 lt!31103)) _$22!381)))

(declare-fun bs!3085 () Bool)

(assert (= bs!3085 d!16201))

(assert (=> bs!3085 m!67773))

(assert (=> d!15899 d!16201))

(declare-fun d!16203 () Bool)

(declare-fun res!38252 () Bool)

(declare-fun e!46991 () Bool)

(assert (=> d!16203 (=> res!38252 e!46991)))

(assert (=> d!16203 (= res!38252 (or ((_ is Nil!1476) lt!31370) ((_ is Nil!1476) (t!5006 lt!31370))))))

(assert (=> d!16203 (= (isStrictlySorted!286 lt!31370) e!46991)))

(declare-fun b!71804 () Bool)

(declare-fun e!46992 () Bool)

(assert (=> b!71804 (= e!46991 e!46992)))

(declare-fun res!38253 () Bool)

(assert (=> b!71804 (=> (not res!38253) (not e!46992))))

(assert (=> b!71804 (= res!38253 (bvslt (_1!1067 (h!2061 lt!31370)) (_1!1067 (h!2061 (t!5006 lt!31370)))))))

(declare-fun b!71805 () Bool)

(assert (=> b!71805 (= e!46992 (isStrictlySorted!286 (t!5006 lt!31370)))))

(assert (= (and d!16203 (not res!38252)) b!71804))

(assert (= (and b!71804 res!38253) b!71805))

(declare-fun m!69383 () Bool)

(assert (=> b!71805 m!69383))

(assert (=> d!15899 d!16203))

(declare-fun d!16205 () Bool)

(declare-fun e!46994 () Bool)

(assert (=> d!16205 e!46994))

(declare-fun res!38254 () Bool)

(assert (=> d!16205 (=> res!38254 e!46994)))

(declare-fun lt!31961 () Bool)

(assert (=> d!16205 (= res!38254 (not lt!31961))))

(declare-fun lt!31959 () Bool)

(assert (=> d!16205 (= lt!31961 lt!31959)))

(declare-fun lt!31960 () Unit!1989)

(declare-fun e!46993 () Unit!1989)

(assert (=> d!16205 (= lt!31960 e!46993)))

(declare-fun c!10506 () Bool)

(assert (=> d!16205 (= c!10506 lt!31959)))

(assert (=> d!16205 (= lt!31959 (containsKey!134 (toList!714 (map!1145 (_2!1068 lt!31724))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!16205 (= (contains!716 (map!1145 (_2!1068 lt!31724)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) lt!31961)))

(declare-fun b!71806 () Bool)

(declare-fun lt!31962 () Unit!1989)

(assert (=> b!71806 (= e!46993 lt!31962)))

(assert (=> b!71806 (= lt!31962 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (map!1145 (_2!1068 lt!31724))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!71806 (isDefined!84 (getValueByKey!130 (toList!714 (map!1145 (_2!1068 lt!31724))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!71807 () Bool)

(declare-fun Unit!2034 () Unit!1989)

(assert (=> b!71807 (= e!46993 Unit!2034)))

(declare-fun b!71808 () Bool)

(assert (=> b!71808 (= e!46994 (isDefined!84 (getValueByKey!130 (toList!714 (map!1145 (_2!1068 lt!31724))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (= (and d!16205 c!10506) b!71806))

(assert (= (and d!16205 (not c!10506)) b!71807))

(assert (= (and d!16205 (not res!38254)) b!71808))

(assert (=> d!16205 m!67435))

(declare-fun m!69385 () Bool)

(assert (=> d!16205 m!69385))

(assert (=> b!71806 m!67435))

(declare-fun m!69387 () Bool)

(assert (=> b!71806 m!69387))

(assert (=> b!71806 m!67435))

(declare-fun m!69389 () Bool)

(assert (=> b!71806 m!69389))

(assert (=> b!71806 m!69389))

(declare-fun m!69391 () Bool)

(assert (=> b!71806 m!69391))

(assert (=> b!71808 m!67435))

(assert (=> b!71808 m!69389))

(assert (=> b!71808 m!69389))

(assert (=> b!71808 m!69391))

(assert (=> b!71429 d!16205))

(assert (=> b!71429 d!16045))

(declare-fun d!16207 () Bool)

(assert (=> d!16207 (= ($colon$colon!64 e!46708 (ite c!10382 (h!2061 (toList!714 lt!31105)) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103)))) (Cons!1475 (ite c!10382 (h!2061 (toList!714 lt!31105)) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))) e!46708))))

(assert (=> bm!6179 d!16207))

(assert (=> b!71311 d!16173))

(declare-fun d!16209 () Bool)

(assert (=> d!16209 (= ($colon$colon!64 e!46569 (ite c!10326 (h!2061 (toList!714 lt!31105)) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109)))) (Cons!1475 (ite c!10326 (h!2061 (toList!714 lt!31105)) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))) e!46569))))

(assert (=> bm!6152 d!16209))

(declare-fun d!16211 () Bool)

(declare-fun res!38255 () Bool)

(declare-fun e!46995 () Bool)

(assert (=> d!16211 (=> res!38255 e!46995)))

(assert (=> d!16211 (= res!38255 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31231)))))

(assert (=> d!16211 (= (containsKey!134 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231) e!46995)))

(declare-fun b!71809 () Bool)

(declare-fun e!46996 () Bool)

(assert (=> b!71809 (= e!46995 e!46996)))

(declare-fun res!38256 () Bool)

(assert (=> b!71809 (=> (not res!38256) (not e!46996))))

(assert (=> b!71809 (= res!38256 (and (or (not ((_ is Cons!1475) (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) (bvsle (_1!1067 (h!2061 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31231)) ((_ is Cons!1475) (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (bvslt (_1!1067 (h!2061 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31231)))))

(declare-fun b!71810 () Bool)

(assert (=> b!71810 (= e!46996 (containsKey!134 (t!5006 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) lt!31231))))

(assert (= (and d!16211 (not res!38255)) b!71809))

(assert (= (and b!71809 res!38256) b!71810))

(declare-fun m!69393 () Bool)

(assert (=> b!71810 m!69393))

(assert (=> d!15883 d!16211))

(declare-fun b!71811 () Bool)

(declare-fun e!46999 () ListLongMap!1397)

(assert (=> b!71811 (= e!46999 (ListLongMap!1398 Nil!1476))))

(declare-fun b!71812 () Bool)

(declare-fun e!46998 () Bool)

(declare-fun lt!31965 () ListLongMap!1397)

(assert (=> b!71812 (= e!46998 (isEmpty!317 lt!31965))))

(declare-fun b!71813 () Bool)

(declare-fun lt!31969 () Unit!1989)

(declare-fun lt!31968 () Unit!1989)

(assert (=> b!71813 (= lt!31969 lt!31968)))

(declare-fun lt!31964 () (_ BitVec 64))

(declare-fun lt!31966 () (_ BitVec 64))

(declare-fun lt!31967 () ListLongMap!1397)

(declare-fun lt!31963 () V!2937)

(assert (=> b!71813 (not (contains!716 (+!91 lt!31967 (tuple2!2113 lt!31964 lt!31963)) lt!31966))))

(assert (=> b!71813 (= lt!31968 (addStillNotContains!24 lt!31967 lt!31964 lt!31963 lt!31966))))

(assert (=> b!71813 (= lt!31966 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!71813 (= lt!31963 (get!1136 (select (arr!1841 (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!71813 (= lt!31964 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!6244 () ListLongMap!1397)

(assert (=> b!71813 (= lt!31967 call!6244)))

(declare-fun e!47000 () ListLongMap!1397)

(assert (=> b!71813 (= e!47000 (+!91 call!6244 (tuple2!2113 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) (get!1136 (select (arr!1841 (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!71814 () Bool)

(declare-fun e!47002 () Bool)

(declare-fun e!47003 () Bool)

(assert (=> b!71814 (= e!47002 e!47003)))

(declare-fun c!10508 () Bool)

(declare-fun e!47001 () Bool)

(assert (=> b!71814 (= c!10508 e!47001)))

(declare-fun res!38257 () Bool)

(assert (=> b!71814 (=> (not res!38257) (not e!47001))))

(assert (=> b!71814 (= res!38257 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71815 () Bool)

(assert (=> b!71815 (= e!47000 call!6244)))

(declare-fun b!71817 () Bool)

(declare-fun e!46997 () Bool)

(assert (=> b!71817 (= e!47003 e!46997)))

(assert (=> b!71817 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun res!38260 () Bool)

(assert (=> b!71817 (= res!38260 (contains!716 lt!31965 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71817 (=> (not res!38260) (not e!46997))))

(declare-fun bm!6241 () Bool)

(assert (=> bm!6241 (= call!6244 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16)))))

(declare-fun b!71818 () Bool)

(assert (=> b!71818 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> b!71818 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332))))))

(assert (=> b!71818 (= e!46997 (= (apply!74 lt!31965 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!71819 () Bool)

(assert (=> b!71819 (= e!46999 e!47000)))

(declare-fun c!10507 () Bool)

(assert (=> b!71819 (= c!10507 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!71820 () Bool)

(assert (=> b!71820 (= e!46998 (= lt!31965 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16))))))

(declare-fun b!71821 () Bool)

(assert (=> b!71821 (= e!47003 e!46998)))

(declare-fun c!10509 () Bool)

(assert (=> b!71821 (= c!10509 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71822 () Bool)

(assert (=> b!71822 (= e!47001 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!71822 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!16213 () Bool)

(assert (=> d!16213 e!47002))

(declare-fun res!38259 () Bool)

(assert (=> d!16213 (=> (not res!38259) (not e!47002))))

(assert (=> d!16213 (= res!38259 (not (contains!716 lt!31965 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16213 (= lt!31965 e!46999)))

(declare-fun c!10510 () Bool)

(assert (=> d!16213 (= c!10510 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16213 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16213 (= (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite (or c!10263 c!10259) (_values!2174 newMap!16) lt!31332) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!31965)))

(declare-fun b!71816 () Bool)

(declare-fun res!38258 () Bool)

(assert (=> b!71816 (=> (not res!38258) (not e!47002))))

(assert (=> b!71816 (= res!38258 (not (contains!716 lt!31965 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16213 c!10510) b!71811))

(assert (= (and d!16213 (not c!10510)) b!71819))

(assert (= (and b!71819 c!10507) b!71813))

(assert (= (and b!71819 (not c!10507)) b!71815))

(assert (= (or b!71813 b!71815) bm!6241))

(assert (= (and d!16213 res!38259) b!71816))

(assert (= (and b!71816 res!38258) b!71814))

(assert (= (and b!71814 res!38257) b!71822))

(assert (= (and b!71814 c!10508) b!71817))

(assert (= (and b!71814 (not c!10508)) b!71821))

(assert (= (and b!71817 res!38260) b!71818))

(assert (= (and b!71821 c!10509) b!71820))

(assert (= (and b!71821 (not c!10509)) b!71812))

(declare-fun b_lambda!3215 () Bool)

(assert (=> (not b_lambda!3215) (not b!71813)))

(assert (=> b!71813 t!5019))

(declare-fun b_and!4417 () Bool)

(assert (= b_and!4413 (and (=> t!5019 result!2661) b_and!4417)))

(assert (=> b!71813 t!5021))

(declare-fun b_and!4419 () Bool)

(assert (= b_and!4415 (and (=> t!5021 result!2663) b_and!4419)))

(declare-fun b_lambda!3217 () Bool)

(assert (=> (not b_lambda!3217) (not b!71818)))

(assert (=> b!71818 t!5019))

(declare-fun b_and!4421 () Bool)

(assert (= b_and!4417 (and (=> t!5019 result!2661) b_and!4421)))

(assert (=> b!71818 t!5021))

(declare-fun b_and!4423 () Bool)

(assert (= b_and!4419 (and (=> t!5021 result!2663) b_and!4423)))

(declare-fun m!69395 () Bool)

(assert (=> d!16213 m!69395))

(assert (=> d!16213 m!67873))

(assert (=> b!71817 m!67861))

(assert (=> b!71817 m!67861))

(declare-fun m!69397 () Bool)

(assert (=> b!71817 m!69397))

(declare-fun m!69399 () Bool)

(assert (=> bm!6241 m!69399))

(assert (=> b!71818 m!67861))

(assert (=> b!71818 m!67861))

(declare-fun m!69401 () Bool)

(assert (=> b!71818 m!69401))

(assert (=> b!71818 m!68153))

(assert (=> b!71818 m!67865))

(assert (=> b!71818 m!68153))

(assert (=> b!71818 m!67865))

(assert (=> b!71818 m!68155))

(declare-fun m!69403 () Bool)

(assert (=> b!71812 m!69403))

(assert (=> b!71820 m!69399))

(assert (=> b!71819 m!67861))

(assert (=> b!71819 m!67861))

(assert (=> b!71819 m!67863))

(declare-fun m!69405 () Bool)

(assert (=> b!71816 m!69405))

(assert (=> b!71822 m!67861))

(assert (=> b!71822 m!67861))

(assert (=> b!71822 m!67863))

(assert (=> b!71813 m!67861))

(declare-fun m!69407 () Bool)

(assert (=> b!71813 m!69407))

(declare-fun m!69409 () Bool)

(assert (=> b!71813 m!69409))

(assert (=> b!71813 m!69407))

(declare-fun m!69411 () Bool)

(assert (=> b!71813 m!69411))

(declare-fun m!69413 () Bool)

(assert (=> b!71813 m!69413))

(assert (=> b!71813 m!68153))

(assert (=> b!71813 m!67865))

(assert (=> b!71813 m!68153))

(assert (=> b!71813 m!67865))

(assert (=> b!71813 m!68155))

(assert (=> bm!6165 d!16213))

(declare-fun d!16215 () Bool)

(assert (=> d!16215 (= (content!75 Nil!1477) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!15803 d!16215))

(declare-fun d!16217 () Bool)

(assert (=> d!16217 (= (apply!74 lt!31487 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1139 (getValueByKey!130 (toList!714 lt!31487) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3086 () Bool)

(assert (= bs!3086 d!16217))

(declare-fun m!69415 () Bool)

(assert (=> bs!3086 m!69415))

(assert (=> bs!3086 m!69415))

(declare-fun m!69417 () Bool)

(assert (=> bs!3086 m!69417))

(assert (=> b!71142 d!16217))

(assert (=> b!71191 d!16173))

(declare-fun bm!6242 () Bool)

(declare-fun call!6245 () Bool)

(assert (=> bm!6242 (= call!6245 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3838 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326))))))

(declare-fun b!71823 () Bool)

(declare-fun e!47005 () Bool)

(declare-fun e!47006 () Bool)

(assert (=> b!71823 (= e!47005 e!47006)))

(declare-fun lt!31971 () (_ BitVec 64))

(assert (=> b!71823 (= lt!31971 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000))))

(declare-fun lt!31972 () Unit!1989)

(assert (=> b!71823 (= lt!31972 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3838 (_2!1068 lt!31326)) lt!31971 #b00000000000000000000000000000000))))

(assert (=> b!71823 (arrayContainsKey!0 (_keys!3838 (_2!1068 lt!31326)) lt!31971 #b00000000000000000000000000000000)))

(declare-fun lt!31970 () Unit!1989)

(assert (=> b!71823 (= lt!31970 lt!31972)))

(declare-fun res!38261 () Bool)

(assert (=> b!71823 (= res!38261 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000) (_keys!3838 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326))) (Found!238 #b00000000000000000000000000000000)))))

(assert (=> b!71823 (=> (not res!38261) (not e!47006))))

(declare-fun b!71824 () Bool)

(assert (=> b!71824 (= e!47006 call!6245)))

(declare-fun d!16219 () Bool)

(declare-fun res!38262 () Bool)

(declare-fun e!47004 () Bool)

(assert (=> d!16219 (=> res!38262 e!47004)))

(assert (=> d!16219 (= res!38262 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))))))

(assert (=> d!16219 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3838 (_2!1068 lt!31326)) (mask!6147 (_2!1068 lt!31326))) e!47004)))

(declare-fun b!71825 () Bool)

(assert (=> b!71825 (= e!47004 e!47005)))

(declare-fun c!10511 () Bool)

(assert (=> b!71825 (= c!10511 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000)))))

(declare-fun b!71826 () Bool)

(assert (=> b!71826 (= e!47005 call!6245)))

(assert (= (and d!16219 (not res!38262)) b!71825))

(assert (= (and b!71825 c!10511) b!71823))

(assert (= (and b!71825 (not c!10511)) b!71826))

(assert (= (and b!71823 res!38261) b!71824))

(assert (= (or b!71824 b!71826) bm!6242))

(declare-fun m!69419 () Bool)

(assert (=> bm!6242 m!69419))

(assert (=> b!71823 m!69077))

(declare-fun m!69421 () Bool)

(assert (=> b!71823 m!69421))

(declare-fun m!69423 () Bool)

(assert (=> b!71823 m!69423))

(assert (=> b!71823 m!69077))

(declare-fun m!69425 () Bool)

(assert (=> b!71823 m!69425))

(assert (=> b!71825 m!69077))

(assert (=> b!71825 m!69077))

(assert (=> b!71825 m!69079))

(assert (=> b!71439 d!16219))

(declare-fun d!16221 () Bool)

(declare-fun e!47008 () Bool)

(assert (=> d!16221 e!47008))

(declare-fun res!38263 () Bool)

(assert (=> d!16221 (=> res!38263 e!47008)))

(declare-fun lt!31975 () Bool)

(assert (=> d!16221 (= res!38263 (not lt!31975))))

(declare-fun lt!31973 () Bool)

(assert (=> d!16221 (= lt!31975 lt!31973)))

(declare-fun lt!31974 () Unit!1989)

(declare-fun e!47007 () Unit!1989)

(assert (=> d!16221 (= lt!31974 e!47007)))

(declare-fun c!10512 () Bool)

(assert (=> d!16221 (= c!10512 lt!31973)))

(assert (=> d!16221 (= lt!31973 (containsKey!134 (toList!714 lt!31430) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16221 (= (contains!716 lt!31430 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31975)))

(declare-fun b!71827 () Bool)

(declare-fun lt!31976 () Unit!1989)

(assert (=> b!71827 (= e!47007 lt!31976)))

(assert (=> b!71827 (= lt!31976 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31430) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71827 (isDefined!84 (getValueByKey!130 (toList!714 lt!31430) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71828 () Bool)

(declare-fun Unit!2035 () Unit!1989)

(assert (=> b!71828 (= e!47007 Unit!2035)))

(declare-fun b!71829 () Bool)

(assert (=> b!71829 (= e!47008 (isDefined!84 (getValueByKey!130 (toList!714 lt!31430) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16221 c!10512) b!71827))

(assert (= (and d!16221 (not c!10512)) b!71828))

(assert (= (and d!16221 (not res!38263)) b!71829))

(declare-fun m!69427 () Bool)

(assert (=> d!16221 m!69427))

(declare-fun m!69429 () Bool)

(assert (=> b!71827 m!69429))

(declare-fun m!69431 () Bool)

(assert (=> b!71827 m!69431))

(assert (=> b!71827 m!69431))

(declare-fun m!69433 () Bool)

(assert (=> b!71827 m!69433))

(assert (=> b!71829 m!69431))

(assert (=> b!71829 m!69431))

(assert (=> b!71829 m!69433))

(assert (=> bm!6145 d!16221))

(declare-fun b!71830 () Bool)

(declare-fun e!47009 () Option!136)

(assert (=> b!71830 (= e!47009 (Some!135 (_2!1067 (h!2061 (t!5006 lt!31366)))))))

(declare-fun d!16223 () Bool)

(declare-fun c!10513 () Bool)

(assert (=> d!16223 (= c!10513 (and ((_ is Cons!1475) (t!5006 lt!31366)) (= (_1!1067 (h!2061 (t!5006 lt!31366))) (_1!1067 lt!31109))))))

(assert (=> d!16223 (= (getValueByKey!130 (t!5006 lt!31366) (_1!1067 lt!31109)) e!47009)))

(declare-fun b!71831 () Bool)

(declare-fun e!47010 () Option!136)

(assert (=> b!71831 (= e!47009 e!47010)))

(declare-fun c!10514 () Bool)

(assert (=> b!71831 (= c!10514 (and ((_ is Cons!1475) (t!5006 lt!31366)) (not (= (_1!1067 (h!2061 (t!5006 lt!31366))) (_1!1067 lt!31109)))))))

(declare-fun b!71833 () Bool)

(assert (=> b!71833 (= e!47010 None!134)))

(declare-fun b!71832 () Bool)

(assert (=> b!71832 (= e!47010 (getValueByKey!130 (t!5006 (t!5006 lt!31366)) (_1!1067 lt!31109)))))

(assert (= (and d!16223 c!10513) b!71830))

(assert (= (and d!16223 (not c!10513)) b!71831))

(assert (= (and b!71831 c!10514) b!71832))

(assert (= (and b!71831 (not c!10514)) b!71833))

(declare-fun m!69435 () Bool)

(assert (=> b!71832 m!69435))

(assert (=> b!71003 d!16223))

(declare-fun d!16225 () Bool)

(declare-fun res!38264 () Bool)

(declare-fun e!47011 () Bool)

(assert (=> d!16225 (=> res!38264 e!47011)))

(assert (=> d!16225 (= res!38264 (and ((_ is Cons!1475) (toList!714 lt!31388)) (= (_1!1067 (h!2061 (toList!714 lt!31388))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16225 (= (containsKey!134 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47011)))

(declare-fun b!71834 () Bool)

(declare-fun e!47012 () Bool)

(assert (=> b!71834 (= e!47011 e!47012)))

(declare-fun res!38265 () Bool)

(assert (=> b!71834 (=> (not res!38265) (not e!47012))))

(assert (=> b!71834 (= res!38265 (and (or (not ((_ is Cons!1475) (toList!714 lt!31388))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31388))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1475) (toList!714 lt!31388)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31388))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!71835 () Bool)

(assert (=> b!71835 (= e!47012 (containsKey!134 (t!5006 (toList!714 lt!31388)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16225 (not res!38264)) b!71834))

(assert (= (and b!71834 res!38265) b!71835))

(assert (=> b!71835 m!67611))

(declare-fun m!69437 () Bool)

(assert (=> b!71835 m!69437))

(assert (=> d!15837 d!16225))

(declare-fun b!71836 () Bool)

(declare-fun e!47013 () (_ BitVec 32))

(declare-fun call!6246 () (_ BitVec 32))

(assert (=> b!71836 (= e!47013 (bvadd #b00000000000000000000000000000001 call!6246))))

(declare-fun b!71837 () Bool)

(declare-fun e!47014 () (_ BitVec 32))

(assert (=> b!71837 (= e!47014 e!47013)))

(declare-fun c!10515 () Bool)

(assert (=> b!71837 (= c!10515 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!6243 () Bool)

(assert (=> bm!6243 (= call!6246 (arrayCountValidKeys!0 (_keys!3838 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71838 () Bool)

(assert (=> b!71838 (= e!47014 #b00000000000000000000000000000000)))

(declare-fun d!16227 () Bool)

(declare-fun lt!31977 () (_ BitVec 32))

(assert (=> d!16227 (and (bvsge lt!31977 #b00000000000000000000000000000000) (bvsle lt!31977 (bvsub (size!2078 (_keys!3838 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!16227 (= lt!31977 e!47014)))

(declare-fun c!10516 () Bool)

(assert (=> d!16227 (= c!10516 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16227 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2078 (_keys!3838 newMap!16)) (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16227 (= (arrayCountValidKeys!0 (_keys!3838 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))) lt!31977)))

(declare-fun b!71839 () Bool)

(assert (=> b!71839 (= e!47013 call!6246)))

(assert (= (and d!16227 c!10516) b!71838))

(assert (= (and d!16227 (not c!10516)) b!71837))

(assert (= (and b!71837 c!10515) b!71836))

(assert (= (and b!71837 (not c!10515)) b!71839))

(assert (= (or b!71836 b!71839) bm!6243))

(assert (=> b!71837 m!69357))

(assert (=> b!71837 m!69357))

(declare-fun m!69439 () Bool)

(assert (=> b!71837 m!69439))

(declare-fun m!69441 () Bool)

(assert (=> bm!6243 m!69441))

(assert (=> bm!6162 d!16227))

(assert (=> b!71066 d!16173))

(assert (=> b!71177 d!16105))

(assert (=> b!71177 d!16107))

(declare-fun d!16229 () Bool)

(declare-fun res!38266 () Bool)

(declare-fun e!47015 () Bool)

(assert (=> d!16229 (=> res!38266 e!47015)))

(assert (=> d!16229 (= res!38266 (and ((_ is Cons!1475) (toList!714 lt!31248)) (= (_1!1067 (h!2061 (toList!714 lt!31248))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16229 (= (containsKey!134 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47015)))

(declare-fun b!71840 () Bool)

(declare-fun e!47016 () Bool)

(assert (=> b!71840 (= e!47015 e!47016)))

(declare-fun res!38267 () Bool)

(assert (=> b!71840 (=> (not res!38267) (not e!47016))))

(assert (=> b!71840 (= res!38267 (and (or (not ((_ is Cons!1475) (toList!714 lt!31248))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31248))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1475) (toList!714 lt!31248)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31248))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!71841 () Bool)

(assert (=> b!71841 (= e!47016 (containsKey!134 (t!5006 (toList!714 lt!31248)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16229 (not res!38266)) b!71840))

(assert (= (and b!71840 res!38267) b!71841))

(assert (=> b!71841 m!67611))

(declare-fun m!69443 () Bool)

(assert (=> b!71841 m!69443))

(assert (=> d!15935 d!16229))

(declare-fun d!16231 () Bool)

(assert (=> d!16231 (= ($colon$colon!64 e!46521 (ite c!10303 (h!2061 (toList!714 (+!91 lt!31105 lt!31103))) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109)))) (Cons!1475 (ite c!10303 (h!2061 (toList!714 (+!91 lt!31105 lt!31103))) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))) e!46521))))

(assert (=> bm!6141 d!16231))

(declare-fun b!71842 () Bool)

(declare-fun e!47017 () Option!136)

(assert (=> b!71842 (= e!47017 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31443)))))))

(declare-fun d!16233 () Bool)

(declare-fun c!10517 () Bool)

(assert (=> d!16233 (= c!10517 (and ((_ is Cons!1475) (toList!714 lt!31443)) (= (_1!1067 (h!2061 (toList!714 lt!31443))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16233 (= (getValueByKey!130 (toList!714 lt!31443) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47017)))

(declare-fun b!71843 () Bool)

(declare-fun e!47018 () Option!136)

(assert (=> b!71843 (= e!47017 e!47018)))

(declare-fun c!10518 () Bool)

(assert (=> b!71843 (= c!10518 (and ((_ is Cons!1475) (toList!714 lt!31443)) (not (= (_1!1067 (h!2061 (toList!714 lt!31443))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!71845 () Bool)

(assert (=> b!71845 (= e!47018 None!134)))

(declare-fun b!71844 () Bool)

(assert (=> b!71844 (= e!47018 (getValueByKey!130 (t!5006 (toList!714 lt!31443)) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16233 c!10517) b!71842))

(assert (= (and d!16233 (not c!10517)) b!71843))

(assert (= (and b!71843 c!10518) b!71844))

(assert (= (and b!71843 (not c!10518)) b!71845))

(declare-fun m!69445 () Bool)

(assert (=> b!71844 m!69445))

(assert (=> b!71078 d!16233))

(declare-fun d!16235 () Bool)

(assert (=> d!16235 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231))))

(declare-fun lt!31978 () Unit!1989)

(assert (=> d!16235 (= lt!31978 (choose!405 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231))))

(declare-fun e!47019 () Bool)

(assert (=> d!16235 e!47019))

(declare-fun res!38268 () Bool)

(assert (=> d!16235 (=> (not res!38268) (not e!47019))))

(assert (=> d!16235 (= res!38268 (isStrictlySorted!286 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16235 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231) lt!31978)))

(declare-fun b!71846 () Bool)

(assert (=> b!71846 (= e!47019 (containsKey!134 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231))))

(assert (= (and d!16235 res!38268) b!71846))

(assert (=> d!16235 m!68353))

(assert (=> d!16235 m!68353))

(assert (=> d!16235 m!68355))

(declare-fun m!69447 () Bool)

(assert (=> d!16235 m!69447))

(declare-fun m!69449 () Bool)

(assert (=> d!16235 m!69449))

(assert (=> b!71846 m!68349))

(assert (=> b!71259 d!16235))

(declare-fun d!16237 () Bool)

(assert (=> d!16237 (= (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231)) (not (isEmpty!318 (getValueByKey!130 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231))))))

(declare-fun bs!3087 () Bool)

(assert (= bs!3087 d!16237))

(assert (=> bs!3087 m!68353))

(declare-fun m!69451 () Bool)

(assert (=> bs!3087 m!69451))

(assert (=> b!71259 d!16237))

(declare-fun e!47020 () Option!136)

(declare-fun b!71847 () Bool)

(assert (=> b!71847 (= e!47020 (Some!135 (_2!1067 (h!2061 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))))

(declare-fun d!16239 () Bool)

(declare-fun c!10519 () Bool)

(assert (=> d!16239 (= c!10519 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31231)))))

(assert (=> d!16239 (= (getValueByKey!130 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31231) e!47020)))

(declare-fun b!71848 () Bool)

(declare-fun e!47021 () Option!136)

(assert (=> b!71848 (= e!47020 e!47021)))

(declare-fun c!10520 () Bool)

(assert (=> b!71848 (= c!10520 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (not (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31231))))))

(declare-fun b!71850 () Bool)

(assert (=> b!71850 (= e!47021 None!134)))

(declare-fun b!71849 () Bool)

(assert (=> b!71849 (= e!47021 (getValueByKey!130 (t!5006 (toList!714 (+!91 lt!31230 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) lt!31231))))

(assert (= (and d!16239 c!10519) b!71847))

(assert (= (and d!16239 (not c!10519)) b!71848))

(assert (= (and b!71848 c!10520) b!71849))

(assert (= (and b!71848 (not c!10520)) b!71850))

(declare-fun m!69453 () Bool)

(assert (=> b!71849 m!69453))

(assert (=> b!71259 d!16239))

(declare-fun d!16241 () Bool)

(assert (=> d!16241 (= (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71382 d!16241))

(assert (=> b!71186 d!16119))

(assert (=> b!71186 d!16121))

(assert (=> bm!6198 d!15939))

(declare-fun d!16243 () Bool)

(declare-fun e!47023 () Bool)

(assert (=> d!16243 e!47023))

(declare-fun res!38269 () Bool)

(assert (=> d!16243 (=> res!38269 e!47023)))

(declare-fun lt!31981 () Bool)

(assert (=> d!16243 (= res!38269 (not lt!31981))))

(declare-fun lt!31979 () Bool)

(assert (=> d!16243 (= lt!31981 lt!31979)))

(declare-fun lt!31980 () Unit!1989)

(declare-fun e!47022 () Unit!1989)

(assert (=> d!16243 (= lt!31980 e!47022)))

(declare-fun c!10521 () Bool)

(assert (=> d!16243 (= c!10521 lt!31979)))

(assert (=> d!16243 (= lt!31979 (containsKey!134 (toList!714 lt!31430) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16243 (= (contains!716 lt!31430 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31981)))

(declare-fun b!71851 () Bool)

(declare-fun lt!31982 () Unit!1989)

(assert (=> b!71851 (= e!47022 lt!31982)))

(assert (=> b!71851 (= lt!31982 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31430) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71851 (isDefined!84 (getValueByKey!130 (toList!714 lt!31430) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71852 () Bool)

(declare-fun Unit!2036 () Unit!1989)

(assert (=> b!71852 (= e!47022 Unit!2036)))

(declare-fun b!71853 () Bool)

(assert (=> b!71853 (= e!47023 (isDefined!84 (getValueByKey!130 (toList!714 lt!31430) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16243 c!10521) b!71851))

(assert (= (and d!16243 (not c!10521)) b!71852))

(assert (= (and d!16243 (not res!38269)) b!71853))

(declare-fun m!69455 () Bool)

(assert (=> d!16243 m!69455))

(declare-fun m!69457 () Bool)

(assert (=> b!71851 m!69457))

(assert (=> b!71851 m!69347))

(assert (=> b!71851 m!69347))

(declare-fun m!69459 () Bool)

(assert (=> b!71851 m!69459))

(assert (=> b!71853 m!69347))

(assert (=> b!71853 m!69347))

(assert (=> b!71853 m!69459))

(assert (=> bm!6142 d!16243))

(declare-fun d!16245 () Bool)

(assert (=> d!16245 (= (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!71090 d!16245))

(declare-fun d!16247 () Bool)

(assert (=> d!16247 (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!31983 () Unit!1989)

(assert (=> d!16247 (= lt!31983 (choose!405 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47024 () Bool)

(assert (=> d!16247 e!47024))

(declare-fun res!38270 () Bool)

(assert (=> d!16247 (=> (not res!38270) (not e!47024))))

(assert (=> d!16247 (= res!38270 (isStrictlySorted!286 (toList!714 lt!31388)))))

(assert (=> d!16247 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!31983)))

(declare-fun b!71854 () Bool)

(assert (=> b!71854 (= e!47024 (containsKey!134 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16247 res!38270) b!71854))

(assert (=> d!16247 m!67611))

(assert (=> d!16247 m!68001))

(assert (=> d!16247 m!68001))

(assert (=> d!16247 m!68207))

(assert (=> d!16247 m!67611))

(declare-fun m!69461 () Bool)

(assert (=> d!16247 m!69461))

(declare-fun m!69463 () Bool)

(assert (=> d!16247 m!69463))

(assert (=> b!71854 m!67611))

(assert (=> b!71854 m!68203))

(assert (=> b!71213 d!16247))

(declare-fun d!16249 () Bool)

(assert (=> d!16249 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3088 () Bool)

(assert (= bs!3088 d!16249))

(assert (=> bs!3088 m!68001))

(declare-fun m!69465 () Bool)

(assert (=> bs!3088 m!69465))

(assert (=> b!71213 d!16249))

(declare-fun b!71855 () Bool)

(declare-fun e!47025 () Option!136)

(assert (=> b!71855 (= e!47025 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31388)))))))

(declare-fun d!16251 () Bool)

(declare-fun c!10522 () Bool)

(assert (=> d!16251 (= c!10522 (and ((_ is Cons!1475) (toList!714 lt!31388)) (= (_1!1067 (h!2061 (toList!714 lt!31388))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16251 (= (getValueByKey!130 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47025)))

(declare-fun b!71856 () Bool)

(declare-fun e!47026 () Option!136)

(assert (=> b!71856 (= e!47025 e!47026)))

(declare-fun c!10523 () Bool)

(assert (=> b!71856 (= c!10523 (and ((_ is Cons!1475) (toList!714 lt!31388)) (not (= (_1!1067 (h!2061 (toList!714 lt!31388))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!71858 () Bool)

(assert (=> b!71858 (= e!47026 None!134)))

(declare-fun b!71857 () Bool)

(assert (=> b!71857 (= e!47026 (getValueByKey!130 (t!5006 (toList!714 lt!31388)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16251 c!10522) b!71855))

(assert (= (and d!16251 (not c!10522)) b!71856))

(assert (= (and b!71856 c!10523) b!71857))

(assert (= (and b!71856 (not c!10523)) b!71858))

(assert (=> b!71857 m!67611))

(declare-fun m!69467 () Bool)

(assert (=> b!71857 m!69467))

(assert (=> b!71213 d!16251))

(declare-fun d!16253 () Bool)

(assert (=> d!16253 (= (apply!74 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31242) (apply!74 lt!31236 lt!31242))))

(assert (=> d!16253 true))

(declare-fun _$34!799 () Unit!1989)

(assert (=> d!16253 (= (choose!411 lt!31236 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31242) _$34!799)))

(declare-fun bs!3089 () Bool)

(assert (= bs!3089 d!16253))

(assert (=> bs!3089 m!67641))

(assert (=> bs!3089 m!67641))

(assert (=> bs!3089 m!67647))

(assert (=> bs!3089 m!67637))

(assert (=> d!15893 d!16253))

(assert (=> d!15893 d!15885))

(assert (=> d!15893 d!15879))

(assert (=> d!15893 d!15881))

(declare-fun d!16255 () Bool)

(declare-fun e!47028 () Bool)

(assert (=> d!16255 e!47028))

(declare-fun res!38271 () Bool)

(assert (=> d!16255 (=> res!38271 e!47028)))

(declare-fun lt!31986 () Bool)

(assert (=> d!16255 (= res!38271 (not lt!31986))))

(declare-fun lt!31984 () Bool)

(assert (=> d!16255 (= lt!31986 lt!31984)))

(declare-fun lt!31985 () Unit!1989)

(declare-fun e!47027 () Unit!1989)

(assert (=> d!16255 (= lt!31985 e!47027)))

(declare-fun c!10524 () Bool)

(assert (=> d!16255 (= c!10524 lt!31984)))

(assert (=> d!16255 (= lt!31984 (containsKey!134 (toList!714 lt!31236) lt!31242))))

(assert (=> d!16255 (= (contains!716 lt!31236 lt!31242) lt!31986)))

(declare-fun b!71860 () Bool)

(declare-fun lt!31987 () Unit!1989)

(assert (=> b!71860 (= e!47027 lt!31987)))

(assert (=> b!71860 (= lt!31987 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31236) lt!31242))))

(assert (=> b!71860 (isDefined!84 (getValueByKey!130 (toList!714 lt!31236) lt!31242))))

(declare-fun b!71861 () Bool)

(declare-fun Unit!2037 () Unit!1989)

(assert (=> b!71861 (= e!47027 Unit!2037)))

(declare-fun b!71862 () Bool)

(assert (=> b!71862 (= e!47028 (isDefined!84 (getValueByKey!130 (toList!714 lt!31236) lt!31242)))))

(assert (= (and d!16255 c!10524) b!71860))

(assert (= (and d!16255 (not c!10524)) b!71861))

(assert (= (and d!16255 (not res!38271)) b!71862))

(declare-fun m!69469 () Bool)

(assert (=> d!16255 m!69469))

(declare-fun m!69471 () Bool)

(assert (=> b!71860 m!69471))

(assert (=> b!71860 m!68345))

(assert (=> b!71860 m!68345))

(declare-fun m!69473 () Bool)

(assert (=> b!71860 m!69473))

(assert (=> b!71862 m!68345))

(assert (=> b!71862 m!68345))

(assert (=> b!71862 m!69473))

(assert (=> d!15893 d!16255))

(declare-fun d!16257 () Bool)

(assert (=> d!16257 (= (inRange!0 (index!3083 lt!31621) (mask!6147 newMap!16)) (and (bvsge (index!3083 lt!31621) #b00000000000000000000000000000000) (bvslt (index!3083 lt!31621) (bvadd (mask!6147 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!71299 d!16257))

(declare-fun d!16259 () Bool)

(declare-fun e!47030 () Bool)

(assert (=> d!16259 e!47030))

(declare-fun res!38272 () Bool)

(assert (=> d!16259 (=> res!38272 e!47030)))

(declare-fun lt!31990 () Bool)

(assert (=> d!16259 (= res!38272 (not lt!31990))))

(declare-fun lt!31988 () Bool)

(assert (=> d!16259 (= lt!31990 lt!31988)))

(declare-fun lt!31989 () Unit!1989)

(declare-fun e!47029 () Unit!1989)

(assert (=> d!16259 (= lt!31989 e!47029)))

(declare-fun c!10525 () Bool)

(assert (=> d!16259 (= c!10525 lt!31988)))

(assert (=> d!16259 (= lt!31988 (containsKey!134 (toList!714 lt!31443) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!16259 (= (contains!716 lt!31443 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31990)))

(declare-fun b!71863 () Bool)

(declare-fun lt!31991 () Unit!1989)

(assert (=> b!71863 (= e!47029 lt!31991)))

(assert (=> b!71863 (= lt!31991 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31443) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> b!71863 (isDefined!84 (getValueByKey!130 (toList!714 lt!31443) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!71864 () Bool)

(declare-fun Unit!2038 () Unit!1989)

(assert (=> b!71864 (= e!47029 Unit!2038)))

(declare-fun b!71865 () Bool)

(assert (=> b!71865 (= e!47030 (isDefined!84 (getValueByKey!130 (toList!714 lt!31443) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16259 c!10525) b!71863))

(assert (= (and d!16259 (not c!10525)) b!71864))

(assert (= (and d!16259 (not res!38272)) b!71865))

(declare-fun m!69475 () Bool)

(assert (=> d!16259 m!69475))

(declare-fun m!69477 () Bool)

(assert (=> b!71863 m!69477))

(assert (=> b!71863 m!67959))

(assert (=> b!71863 m!67959))

(declare-fun m!69479 () Bool)

(assert (=> b!71863 m!69479))

(assert (=> b!71865 m!67959))

(assert (=> b!71865 m!67959))

(assert (=> b!71865 m!69479))

(assert (=> d!15787 d!16259))

(declare-fun b!71866 () Bool)

(declare-fun e!47031 () Option!136)

(assert (=> b!71866 (= e!47031 (Some!135 (_2!1067 (h!2061 lt!31444))))))

(declare-fun d!16261 () Bool)

(declare-fun c!10526 () Bool)

(assert (=> d!16261 (= c!10526 (and ((_ is Cons!1475) lt!31444) (= (_1!1067 (h!2061 lt!31444)) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16261 (= (getValueByKey!130 lt!31444 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47031)))

(declare-fun b!71867 () Bool)

(declare-fun e!47032 () Option!136)

(assert (=> b!71867 (= e!47031 e!47032)))

(declare-fun c!10527 () Bool)

(assert (=> b!71867 (= c!10527 (and ((_ is Cons!1475) lt!31444) (not (= (_1!1067 (h!2061 lt!31444)) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!71869 () Bool)

(assert (=> b!71869 (= e!47032 None!134)))

(declare-fun b!71868 () Bool)

(assert (=> b!71868 (= e!47032 (getValueByKey!130 (t!5006 lt!31444) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16261 c!10526) b!71866))

(assert (= (and d!16261 (not c!10526)) b!71867))

(assert (= (and b!71867 c!10527) b!71868))

(assert (= (and b!71867 (not c!10527)) b!71869))

(declare-fun m!69481 () Bool)

(assert (=> b!71868 m!69481))

(assert (=> d!15787 d!16261))

(declare-fun d!16263 () Bool)

(assert (=> d!16263 (= (getValueByKey!130 lt!31444 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!31992 () Unit!1989)

(assert (=> d!16263 (= lt!31992 (choose!404 lt!31444 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun e!47033 () Bool)

(assert (=> d!16263 e!47033))

(declare-fun res!38273 () Bool)

(assert (=> d!16263 (=> (not res!38273) (not e!47033))))

(assert (=> d!16263 (= res!38273 (isStrictlySorted!286 lt!31444))))

(assert (=> d!16263 (= (lemmaContainsTupThenGetReturnValue!50 lt!31444 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31992)))

(declare-fun b!71870 () Bool)

(declare-fun res!38274 () Bool)

(assert (=> b!71870 (=> (not res!38274) (not e!47033))))

(assert (=> b!71870 (= res!38274 (containsKey!134 lt!31444 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!71871 () Bool)

(assert (=> b!71871 (= e!47033 (contains!717 lt!31444 (tuple2!2113 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16263 res!38273) b!71870))

(assert (= (and b!71870 res!38274) b!71871))

(assert (=> d!16263 m!67953))

(declare-fun m!69483 () Bool)

(assert (=> d!16263 m!69483))

(declare-fun m!69485 () Bool)

(assert (=> d!16263 m!69485))

(declare-fun m!69487 () Bool)

(assert (=> b!71870 m!69487))

(declare-fun m!69489 () Bool)

(assert (=> b!71871 m!69489))

(assert (=> d!15787 d!16263))

(declare-fun b!71872 () Bool)

(declare-fun e!47036 () Bool)

(declare-fun lt!31993 () List!1479)

(assert (=> b!71872 (= e!47036 (contains!717 lt!31993 (tuple2!2113 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71873 () Bool)

(declare-fun e!47034 () List!1479)

(assert (=> b!71873 (= e!47034 (insertStrictlySorted!53 (t!5006 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun d!16265 () Bool)

(assert (=> d!16265 e!47036))

(declare-fun res!38276 () Bool)

(assert (=> d!16265 (=> (not res!38276) (not e!47036))))

(assert (=> d!16265 (= res!38276 (isStrictlySorted!286 lt!31993))))

(declare-fun e!47035 () List!1479)

(assert (=> d!16265 (= lt!31993 e!47035)))

(declare-fun c!10531 () Bool)

(assert (=> d!16265 (= c!10531 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) (bvslt (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16265 (isStrictlySorted!286 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!16265 (= (insertStrictlySorted!53 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31993)))

(declare-fun c!10530 () Bool)

(declare-fun b!71874 () Bool)

(assert (=> b!71874 (= c!10530 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) (bvsgt (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun e!47038 () List!1479)

(declare-fun e!47037 () List!1479)

(assert (=> b!71874 (= e!47038 e!47037)))

(declare-fun b!71875 () Bool)

(assert (=> b!71875 (= e!47035 e!47038)))

(declare-fun c!10529 () Bool)

(assert (=> b!71875 (= c!10529 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71876 () Bool)

(declare-fun call!6249 () List!1479)

(assert (=> b!71876 (= e!47038 call!6249)))

(declare-fun b!71877 () Bool)

(declare-fun res!38275 () Bool)

(assert (=> b!71877 (=> (not res!38275) (not e!47036))))

(assert (=> b!71877 (= res!38275 (containsKey!134 lt!31993 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!71878 () Bool)

(assert (=> b!71878 (= e!47034 (ite c!10529 (t!5006 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) (ite c!10530 (Cons!1475 (h!2061 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) (t!5006 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))) Nil!1476)))))

(declare-fun b!71879 () Bool)

(declare-fun call!6248 () List!1479)

(assert (=> b!71879 (= e!47035 call!6248)))

(declare-fun b!71880 () Bool)

(declare-fun call!6247 () List!1479)

(assert (=> b!71880 (= e!47037 call!6247)))

(declare-fun bm!6244 () Bool)

(assert (=> bm!6244 (= call!6247 call!6249)))

(declare-fun bm!6245 () Bool)

(assert (=> bm!6245 (= call!6249 call!6248)))

(declare-fun bm!6246 () Bool)

(assert (=> bm!6246 (= call!6248 ($colon$colon!64 e!47034 (ite c!10531 (h!2061 (toList!714 (+!91 lt!31105 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))) (tuple2!2113 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun c!10528 () Bool)

(assert (=> bm!6246 (= c!10528 c!10531)))

(declare-fun b!71881 () Bool)

(assert (=> b!71881 (= e!47037 call!6247)))

(assert (= (and d!16265 c!10531) b!71879))

(assert (= (and d!16265 (not c!10531)) b!71875))

(assert (= (and b!71875 c!10529) b!71876))

(assert (= (and b!71875 (not c!10529)) b!71874))

(assert (= (and b!71874 c!10530) b!71880))

(assert (= (and b!71874 (not c!10530)) b!71881))

(assert (= (or b!71880 b!71881) bm!6244))

(assert (= (or b!71876 bm!6244) bm!6245))

(assert (= (or b!71879 bm!6245) bm!6246))

(assert (= (and bm!6246 c!10528) b!71873))

(assert (= (and bm!6246 (not c!10528)) b!71878))

(assert (= (and d!16265 res!38276) b!71877))

(assert (= (and b!71877 res!38275) b!71872))

(declare-fun m!69491 () Bool)

(assert (=> b!71872 m!69491))

(declare-fun m!69493 () Bool)

(assert (=> b!71873 m!69493))

(declare-fun m!69495 () Bool)

(assert (=> b!71877 m!69495))

(declare-fun m!69497 () Bool)

(assert (=> bm!6246 m!69497))

(declare-fun m!69499 () Bool)

(assert (=> d!16265 m!69499))

(declare-fun m!69501 () Bool)

(assert (=> d!16265 m!69501))

(assert (=> d!15787 d!16265))

(declare-fun b!71882 () Bool)

(declare-fun e!47039 () Option!136)

(assert (=> b!71882 (= e!47039 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31585)))))))

(declare-fun d!16267 () Bool)

(declare-fun c!10532 () Bool)

(assert (=> d!16267 (= c!10532 (and ((_ is Cons!1475) (toList!714 lt!31585)) (= (_1!1067 (h!2061 (toList!714 lt!31585))) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16267 (= (getValueByKey!130 (toList!714 lt!31585) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47039)))

(declare-fun b!71883 () Bool)

(declare-fun e!47040 () Option!136)

(assert (=> b!71883 (= e!47039 e!47040)))

(declare-fun c!10533 () Bool)

(assert (=> b!71883 (= c!10533 (and ((_ is Cons!1475) (toList!714 lt!31585)) (not (= (_1!1067 (h!2061 (toList!714 lt!31585))) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!71885 () Bool)

(assert (=> b!71885 (= e!47040 None!134)))

(declare-fun b!71884 () Bool)

(assert (=> b!71884 (= e!47040 (getValueByKey!130 (t!5006 (toList!714 lt!31585)) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16267 c!10532) b!71882))

(assert (= (and d!16267 (not c!10532)) b!71883))

(assert (= (and b!71883 c!10533) b!71884))

(assert (= (and b!71883 (not c!10533)) b!71885))

(declare-fun m!69503 () Bool)

(assert (=> b!71884 m!69503))

(assert (=> b!71251 d!16267))

(declare-fun b!71886 () Bool)

(declare-fun e!47041 () (_ BitVec 32))

(declare-fun call!6250 () (_ BitVec 32))

(assert (=> b!71886 (= e!47041 (bvadd #b00000000000000000000000000000001 call!6250))))

(declare-fun b!71887 () Bool)

(declare-fun e!47042 () (_ BitVec 32))

(assert (=> b!71887 (= e!47042 e!47041)))

(declare-fun c!10534 () Bool)

(assert (=> b!71887 (= c!10534 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6247 () Bool)

(assert (=> bm!6247 (= call!6250 (arrayCountValidKeys!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71888 () Bool)

(assert (=> b!71888 (= e!47042 #b00000000000000000000000000000000)))

(declare-fun d!16269 () Bool)

(declare-fun lt!31994 () (_ BitVec 32))

(assert (=> d!16269 (and (bvsge lt!31994 #b00000000000000000000000000000000) (bvsle lt!31994 (bvsub (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!16269 (= lt!31994 e!47042)))

(declare-fun c!10535 () Bool)

(assert (=> d!16269 (= c!10535 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!16269 (and (bvsle #b00000000000000000000000000000000 (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!16269 (= (arrayCountValidKeys!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000 (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))) lt!31994)))

(declare-fun b!71889 () Bool)

(assert (=> b!71889 (= e!47041 call!6250)))

(assert (= (and d!16269 c!10535) b!71888))

(assert (= (and d!16269 (not c!10535)) b!71887))

(assert (= (and b!71887 c!10534) b!71886))

(assert (= (and b!71887 (not c!10534)) b!71889))

(assert (= (or b!71886 b!71889) bm!6247))

(declare-fun m!69505 () Bool)

(assert (=> b!71887 m!69505))

(assert (=> b!71887 m!69505))

(declare-fun m!69507 () Bool)

(assert (=> b!71887 m!69507))

(declare-fun m!69509 () Bool)

(assert (=> bm!6247 m!69509))

(assert (=> b!71451 d!16269))

(declare-fun d!16271 () Bool)

(assert (=> d!16271 (= ($colon$colon!64 e!46673 (ite c!10371 (h!2061 (toList!714 (+!91 lt!31105 lt!31109))) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103)))) (Cons!1475 (ite c!10371 (h!2061 (toList!714 (+!91 lt!31105 lt!31109))) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))) e!46673))))

(assert (=> bm!6173 d!16271))

(declare-fun d!16273 () Bool)

(declare-fun e!47044 () Bool)

(assert (=> d!16273 e!47044))

(declare-fun res!38277 () Bool)

(assert (=> d!16273 (=> res!38277 e!47044)))

(declare-fun lt!31997 () Bool)

(assert (=> d!16273 (= res!38277 (not lt!31997))))

(declare-fun lt!31995 () Bool)

(assert (=> d!16273 (= lt!31997 lt!31995)))

(declare-fun lt!31996 () Unit!1989)

(declare-fun e!47043 () Unit!1989)

(assert (=> d!16273 (= lt!31996 e!47043)))

(declare-fun c!10536 () Bool)

(assert (=> d!16273 (= c!10536 lt!31995)))

(assert (=> d!16273 (= lt!31995 (containsKey!134 (toList!714 lt!31487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16273 (= (contains!716 lt!31487 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31997)))

(declare-fun b!71890 () Bool)

(declare-fun lt!31998 () Unit!1989)

(assert (=> b!71890 (= e!47043 lt!31998)))

(assert (=> b!71890 (= lt!31998 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71890 (isDefined!84 (getValueByKey!130 (toList!714 lt!31487) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71891 () Bool)

(declare-fun Unit!2039 () Unit!1989)

(assert (=> b!71891 (= e!47043 Unit!2039)))

(declare-fun b!71892 () Bool)

(assert (=> b!71892 (= e!47044 (isDefined!84 (getValueByKey!130 (toList!714 lt!31487) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16273 c!10536) b!71890))

(assert (= (and d!16273 (not c!10536)) b!71891))

(assert (= (and d!16273 (not res!38277)) b!71892))

(declare-fun m!69511 () Bool)

(assert (=> d!16273 m!69511))

(declare-fun m!69513 () Bool)

(assert (=> b!71890 m!69513))

(declare-fun m!69515 () Bool)

(assert (=> b!71890 m!69515))

(assert (=> b!71890 m!69515))

(declare-fun m!69517 () Bool)

(assert (=> b!71890 m!69517))

(assert (=> b!71892 m!69515))

(assert (=> b!71892 m!69515))

(assert (=> b!71892 m!69517))

(assert (=> bm!6156 d!16273))

(declare-fun d!16275 () Bool)

(assert (=> d!16275 (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!31999 () Unit!1989)

(assert (=> d!16275 (= lt!31999 (choose!405 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47045 () Bool)

(assert (=> d!16275 e!47045))

(declare-fun res!38278 () Bool)

(assert (=> d!16275 (=> (not res!38278) (not e!47045))))

(assert (=> d!16275 (= res!38278 (isStrictlySorted!286 (toList!714 lt!31248)))))

(assert (=> d!16275 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!31999)))

(declare-fun b!71893 () Bool)

(assert (=> b!71893 (= e!47045 (containsKey!134 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16275 res!38278) b!71893))

(assert (=> d!16275 m!67611))

(assert (=> d!16275 m!68047))

(assert (=> d!16275 m!68047))

(assert (=> d!16275 m!68515))

(assert (=> d!16275 m!67611))

(declare-fun m!69519 () Bool)

(assert (=> d!16275 m!69519))

(assert (=> d!16275 m!69137))

(assert (=> b!71893 m!67611))

(assert (=> b!71893 m!68511))

(assert (=> b!71375 d!16275))

(declare-fun d!16277 () Bool)

(assert (=> d!16277 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3090 () Bool)

(assert (= bs!3090 d!16277))

(assert (=> bs!3090 m!68047))

(declare-fun m!69521 () Bool)

(assert (=> bs!3090 m!69521))

(assert (=> b!71375 d!16277))

(declare-fun b!71894 () Bool)

(declare-fun e!47046 () Option!136)

(assert (=> b!71894 (= e!47046 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31248)))))))

(declare-fun c!10537 () Bool)

(declare-fun d!16279 () Bool)

(assert (=> d!16279 (= c!10537 (and ((_ is Cons!1475) (toList!714 lt!31248)) (= (_1!1067 (h!2061 (toList!714 lt!31248))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16279 (= (getValueByKey!130 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!47046)))

(declare-fun b!71895 () Bool)

(declare-fun e!47047 () Option!136)

(assert (=> b!71895 (= e!47046 e!47047)))

(declare-fun c!10538 () Bool)

(assert (=> b!71895 (= c!10538 (and ((_ is Cons!1475) (toList!714 lt!31248)) (not (= (_1!1067 (h!2061 (toList!714 lt!31248))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!71897 () Bool)

(assert (=> b!71897 (= e!47047 None!134)))

(declare-fun b!71896 () Bool)

(assert (=> b!71896 (= e!47047 (getValueByKey!130 (t!5006 (toList!714 lt!31248)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!16279 c!10537) b!71894))

(assert (= (and d!16279 (not c!10537)) b!71895))

(assert (= (and b!71895 c!10538) b!71896))

(assert (= (and b!71895 (not c!10538)) b!71897))

(assert (=> b!71896 m!67611))

(declare-fun m!69523 () Bool)

(assert (=> b!71896 m!69523))

(assert (=> b!71375 d!16279))

(assert (=> b!71143 d!16173))

(declare-fun b!71898 () Bool)

(declare-fun e!47048 () Option!136)

(assert (=> b!71898 (= e!47048 (Some!135 (_2!1067 (h!2061 (t!5006 (toList!714 lt!31369))))))))

(declare-fun d!16281 () Bool)

(declare-fun c!10539 () Bool)

(assert (=> d!16281 (= c!10539 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31369))) (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31369)))) (_1!1067 lt!31103))))))

(assert (=> d!16281 (= (getValueByKey!130 (t!5006 (toList!714 lt!31369)) (_1!1067 lt!31103)) e!47048)))

(declare-fun b!71899 () Bool)

(declare-fun e!47049 () Option!136)

(assert (=> b!71899 (= e!47048 e!47049)))

(declare-fun c!10540 () Bool)

(assert (=> b!71899 (= c!10540 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31369))) (not (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31369)))) (_1!1067 lt!31103)))))))

(declare-fun b!71901 () Bool)

(assert (=> b!71901 (= e!47049 None!134)))

(declare-fun b!71900 () Bool)

(assert (=> b!71900 (= e!47049 (getValueByKey!130 (t!5006 (t!5006 (toList!714 lt!31369))) (_1!1067 lt!31103)))))

(assert (= (and d!16281 c!10539) b!71898))

(assert (= (and d!16281 (not c!10539)) b!71899))

(assert (= (and b!71899 c!10540) b!71900))

(assert (= (and b!71899 (not c!10540)) b!71901))

(declare-fun m!69525 () Bool)

(assert (=> b!71900 m!69525))

(assert (=> b!71218 d!16281))

(declare-fun d!16283 () Bool)

(assert (=> d!16283 (= (isEmpty!317 lt!31452) (isEmpty!319 (toList!714 lt!31452)))))

(declare-fun bs!3091 () Bool)

(assert (= bs!3091 d!16283))

(declare-fun m!69527 () Bool)

(assert (=> bs!3091 m!69527))

(assert (=> b!71083 d!16283))

(declare-fun d!16285 () Bool)

(declare-fun e!47051 () Bool)

(assert (=> d!16285 e!47051))

(declare-fun res!38279 () Bool)

(assert (=> d!16285 (=> res!38279 e!47051)))

(declare-fun lt!32002 () Bool)

(assert (=> d!16285 (= res!38279 (not lt!32002))))

(declare-fun lt!32000 () Bool)

(assert (=> d!16285 (= lt!32002 lt!32000)))

(declare-fun lt!32001 () Unit!1989)

(declare-fun e!47050 () Unit!1989)

(assert (=> d!16285 (= lt!32001 e!47050)))

(declare-fun c!10541 () Bool)

(assert (=> d!16285 (= c!10541 lt!32000)))

(assert (=> d!16285 (= lt!32000 (containsKey!134 (toList!714 lt!31452) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16285 (= (contains!716 lt!31452 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32002)))

(declare-fun b!71902 () Bool)

(declare-fun lt!32003 () Unit!1989)

(assert (=> b!71902 (= e!47050 lt!32003)))

(assert (=> b!71902 (= lt!32003 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31452) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71902 (isDefined!84 (getValueByKey!130 (toList!714 lt!31452) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71903 () Bool)

(declare-fun Unit!2040 () Unit!1989)

(assert (=> b!71903 (= e!47050 Unit!2040)))

(declare-fun b!71904 () Bool)

(assert (=> b!71904 (= e!47051 (isDefined!84 (getValueByKey!130 (toList!714 lt!31452) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16285 c!10541) b!71902))

(assert (= (and d!16285 (not c!10541)) b!71903))

(assert (= (and d!16285 (not res!38279)) b!71904))

(declare-fun m!69529 () Bool)

(assert (=> d!16285 m!69529))

(declare-fun m!69531 () Bool)

(assert (=> b!71902 m!69531))

(declare-fun m!69533 () Bool)

(assert (=> b!71902 m!69533))

(assert (=> b!71902 m!69533))

(declare-fun m!69535 () Bool)

(assert (=> b!71902 m!69535))

(assert (=> b!71904 m!69533))

(assert (=> b!71904 m!69533))

(assert (=> b!71904 m!69535))

(assert (=> d!15793 d!16285))

(assert (=> d!15793 d!15745))

(declare-fun d!16287 () Bool)

(declare-fun res!38280 () Bool)

(declare-fun e!47052 () Bool)

(assert (=> d!16287 (=> res!38280 e!47052)))

(assert (=> d!16287 (= res!38280 (and ((_ is Cons!1475) (toList!714 lt!31388)) (= (_1!1067 (h!2061 (toList!714 lt!31388))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16287 (= (containsKey!134 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000) e!47052)))

(declare-fun b!71905 () Bool)

(declare-fun e!47053 () Bool)

(assert (=> b!71905 (= e!47052 e!47053)))

(declare-fun res!38281 () Bool)

(assert (=> b!71905 (=> (not res!38281) (not e!47053))))

(assert (=> b!71905 (= res!38281 (and (or (not ((_ is Cons!1475) (toList!714 lt!31388))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31388))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1475) (toList!714 lt!31388)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31388))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71906 () Bool)

(assert (=> b!71906 (= e!47053 (containsKey!134 (t!5006 (toList!714 lt!31388)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16287 (not res!38280)) b!71905))

(assert (= (and b!71905 res!38281) b!71906))

(declare-fun m!69537 () Bool)

(assert (=> b!71906 m!69537))

(assert (=> d!15857 d!16287))

(assert (=> b!71430 d!15909))

(declare-fun d!16289 () Bool)

(assert (=> d!16289 (= (get!1139 (getValueByKey!130 (toList!714 lt!31236) lt!31242)) (v!2513 (getValueByKey!130 (toList!714 lt!31236) lt!31242)))))

(assert (=> d!15881 d!16289))

(declare-fun b!71907 () Bool)

(declare-fun e!47054 () Option!136)

(assert (=> b!71907 (= e!47054 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31236)))))))

(declare-fun d!16291 () Bool)

(declare-fun c!10542 () Bool)

(assert (=> d!16291 (= c!10542 (and ((_ is Cons!1475) (toList!714 lt!31236)) (= (_1!1067 (h!2061 (toList!714 lt!31236))) lt!31242)))))

(assert (=> d!16291 (= (getValueByKey!130 (toList!714 lt!31236) lt!31242) e!47054)))

(declare-fun b!71908 () Bool)

(declare-fun e!47055 () Option!136)

(assert (=> b!71908 (= e!47054 e!47055)))

(declare-fun c!10543 () Bool)

(assert (=> b!71908 (= c!10543 (and ((_ is Cons!1475) (toList!714 lt!31236)) (not (= (_1!1067 (h!2061 (toList!714 lt!31236))) lt!31242))))))

(declare-fun b!71910 () Bool)

(assert (=> b!71910 (= e!47055 None!134)))

(declare-fun b!71909 () Bool)

(assert (=> b!71909 (= e!47055 (getValueByKey!130 (t!5006 (toList!714 lt!31236)) lt!31242))))

(assert (= (and d!16291 c!10542) b!71907))

(assert (= (and d!16291 (not c!10542)) b!71908))

(assert (= (and b!71908 c!10543) b!71909))

(assert (= (and b!71908 (not c!10543)) b!71910))

(declare-fun m!69539 () Bool)

(assert (=> b!71909 m!69539))

(assert (=> d!15881 d!16291))

(declare-fun d!16293 () Bool)

(declare-fun e!47057 () Bool)

(assert (=> d!16293 e!47057))

(declare-fun res!38282 () Bool)

(assert (=> d!16293 (=> res!38282 e!47057)))

(declare-fun lt!32006 () Bool)

(assert (=> d!16293 (= res!38282 (not lt!32006))))

(declare-fun lt!32004 () Bool)

(assert (=> d!16293 (= lt!32006 lt!32004)))

(declare-fun lt!32005 () Unit!1989)

(declare-fun e!47056 () Unit!1989)

(assert (=> d!16293 (= lt!32005 e!47056)))

(declare-fun c!10544 () Bool)

(assert (=> d!16293 (= c!10544 lt!32004)))

(assert (=> d!16293 (= lt!32004 (containsKey!134 (toList!714 lt!31585) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!16293 (= (contains!716 lt!31585 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32006)))

(declare-fun b!71911 () Bool)

(declare-fun lt!32007 () Unit!1989)

(assert (=> b!71911 (= e!47056 lt!32007)))

(assert (=> b!71911 (= lt!32007 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31585) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> b!71911 (isDefined!84 (getValueByKey!130 (toList!714 lt!31585) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!71912 () Bool)

(declare-fun Unit!2041 () Unit!1989)

(assert (=> b!71912 (= e!47056 Unit!2041)))

(declare-fun b!71913 () Bool)

(assert (=> b!71913 (= e!47057 (isDefined!84 (getValueByKey!130 (toList!714 lt!31585) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16293 c!10544) b!71911))

(assert (= (and d!16293 (not c!10544)) b!71912))

(assert (= (and d!16293 (not res!38282)) b!71913))

(declare-fun m!69541 () Bool)

(assert (=> d!16293 m!69541))

(declare-fun m!69543 () Bool)

(assert (=> b!71911 m!69543))

(assert (=> b!71911 m!68317))

(assert (=> b!71911 m!68317))

(declare-fun m!69545 () Bool)

(assert (=> b!71911 m!69545))

(assert (=> b!71913 m!68317))

(assert (=> b!71913 m!68317))

(assert (=> b!71913 m!69545))

(assert (=> d!15871 d!16293))

(declare-fun b!71914 () Bool)

(declare-fun e!47058 () Option!136)

(assert (=> b!71914 (= e!47058 (Some!135 (_2!1067 (h!2061 lt!31586))))))

(declare-fun c!10545 () Bool)

(declare-fun d!16295 () Bool)

(assert (=> d!16295 (= c!10545 (and ((_ is Cons!1475) lt!31586) (= (_1!1067 (h!2061 lt!31586)) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16295 (= (getValueByKey!130 lt!31586 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47058)))

(declare-fun b!71915 () Bool)

(declare-fun e!47059 () Option!136)

(assert (=> b!71915 (= e!47058 e!47059)))

(declare-fun c!10546 () Bool)

(assert (=> b!71915 (= c!10546 (and ((_ is Cons!1475) lt!31586) (not (= (_1!1067 (h!2061 lt!31586)) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!71917 () Bool)

(assert (=> b!71917 (= e!47059 None!134)))

(declare-fun b!71916 () Bool)

(assert (=> b!71916 (= e!47059 (getValueByKey!130 (t!5006 lt!31586) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16295 c!10545) b!71914))

(assert (= (and d!16295 (not c!10545)) b!71915))

(assert (= (and b!71915 c!10546) b!71916))

(assert (= (and b!71915 (not c!10546)) b!71917))

(declare-fun m!69547 () Bool)

(assert (=> b!71916 m!69547))

(assert (=> d!15871 d!16295))

(declare-fun d!16297 () Bool)

(assert (=> d!16297 (= (getValueByKey!130 lt!31586 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!32008 () Unit!1989)

(assert (=> d!16297 (= lt!32008 (choose!404 lt!31586 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun e!47060 () Bool)

(assert (=> d!16297 e!47060))

(declare-fun res!38283 () Bool)

(assert (=> d!16297 (=> (not res!38283) (not e!47060))))

(assert (=> d!16297 (= res!38283 (isStrictlySorted!286 lt!31586))))

(assert (=> d!16297 (= (lemmaContainsTupThenGetReturnValue!50 lt!31586 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32008)))

(declare-fun b!71918 () Bool)

(declare-fun res!38284 () Bool)

(assert (=> b!71918 (=> (not res!38284) (not e!47060))))

(assert (=> b!71918 (= res!38284 (containsKey!134 lt!31586 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!71919 () Bool)

(assert (=> b!71919 (= e!47060 (contains!717 lt!31586 (tuple2!2113 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16297 res!38283) b!71918))

(assert (= (and b!71918 res!38284) b!71919))

(assert (=> d!16297 m!68311))

(declare-fun m!69549 () Bool)

(assert (=> d!16297 m!69549))

(declare-fun m!69551 () Bool)

(assert (=> d!16297 m!69551))

(declare-fun m!69553 () Bool)

(assert (=> b!71918 m!69553))

(declare-fun m!69555 () Bool)

(assert (=> b!71919 m!69555))

(assert (=> d!15871 d!16297))

(declare-fun lt!32009 () List!1479)

(declare-fun b!71920 () Bool)

(declare-fun e!47063 () Bool)

(assert (=> b!71920 (= e!47063 (contains!717 lt!32009 (tuple2!2113 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71921 () Bool)

(declare-fun e!47061 () List!1479)

(assert (=> b!71921 (= e!47061 (insertStrictlySorted!53 (t!5006 (toList!714 lt!31230)) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun d!16299 () Bool)

(assert (=> d!16299 e!47063))

(declare-fun res!38286 () Bool)

(assert (=> d!16299 (=> (not res!38286) (not e!47063))))

(assert (=> d!16299 (= res!38286 (isStrictlySorted!286 lt!32009))))

(declare-fun e!47062 () List!1479)

(assert (=> d!16299 (= lt!32009 e!47062)))

(declare-fun c!10550 () Bool)

(assert (=> d!16299 (= c!10550 (and ((_ is Cons!1475) (toList!714 lt!31230)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31230))) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16299 (isStrictlySorted!286 (toList!714 lt!31230))))

(assert (=> d!16299 (= (insertStrictlySorted!53 (toList!714 lt!31230) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32009)))

(declare-fun c!10549 () Bool)

(declare-fun b!71922 () Bool)

(assert (=> b!71922 (= c!10549 (and ((_ is Cons!1475) (toList!714 lt!31230)) (bvsgt (_1!1067 (h!2061 (toList!714 lt!31230))) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun e!47065 () List!1479)

(declare-fun e!47064 () List!1479)

(assert (=> b!71922 (= e!47065 e!47064)))

(declare-fun b!71923 () Bool)

(assert (=> b!71923 (= e!47062 e!47065)))

(declare-fun c!10548 () Bool)

(assert (=> b!71923 (= c!10548 (and ((_ is Cons!1475) (toList!714 lt!31230)) (= (_1!1067 (h!2061 (toList!714 lt!31230))) (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!71924 () Bool)

(declare-fun call!6253 () List!1479)

(assert (=> b!71924 (= e!47065 call!6253)))

(declare-fun b!71925 () Bool)

(declare-fun res!38285 () Bool)

(assert (=> b!71925 (=> (not res!38285) (not e!47063))))

(assert (=> b!71925 (= res!38285 (containsKey!134 lt!32009 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!71926 () Bool)

(assert (=> b!71926 (= e!47061 (ite c!10548 (t!5006 (toList!714 lt!31230)) (ite c!10549 (Cons!1475 (h!2061 (toList!714 lt!31230)) (t!5006 (toList!714 lt!31230))) Nil!1476)))))

(declare-fun b!71927 () Bool)

(declare-fun call!6252 () List!1479)

(assert (=> b!71927 (= e!47062 call!6252)))

(declare-fun b!71928 () Bool)

(declare-fun call!6251 () List!1479)

(assert (=> b!71928 (= e!47064 call!6251)))

(declare-fun bm!6248 () Bool)

(assert (=> bm!6248 (= call!6251 call!6253)))

(declare-fun bm!6249 () Bool)

(assert (=> bm!6249 (= call!6253 call!6252)))

(declare-fun bm!6250 () Bool)

(assert (=> bm!6250 (= call!6252 ($colon$colon!64 e!47061 (ite c!10550 (h!2061 (toList!714 lt!31230)) (tuple2!2113 (_1!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun c!10547 () Bool)

(assert (=> bm!6250 (= c!10547 c!10550)))

(declare-fun b!71929 () Bool)

(assert (=> b!71929 (= e!47064 call!6251)))

(assert (= (and d!16299 c!10550) b!71927))

(assert (= (and d!16299 (not c!10550)) b!71923))

(assert (= (and b!71923 c!10548) b!71924))

(assert (= (and b!71923 (not c!10548)) b!71922))

(assert (= (and b!71922 c!10549) b!71928))

(assert (= (and b!71922 (not c!10549)) b!71929))

(assert (= (or b!71928 b!71929) bm!6248))

(assert (= (or b!71924 bm!6248) bm!6249))

(assert (= (or b!71927 bm!6249) bm!6250))

(assert (= (and bm!6250 c!10547) b!71921))

(assert (= (and bm!6250 (not c!10547)) b!71926))

(assert (= (and d!16299 res!38286) b!71925))

(assert (= (and b!71925 res!38285) b!71920))

(declare-fun m!69557 () Bool)

(assert (=> b!71920 m!69557))

(declare-fun m!69559 () Bool)

(assert (=> b!71921 m!69559))

(declare-fun m!69561 () Bool)

(assert (=> b!71925 m!69561))

(declare-fun m!69563 () Bool)

(assert (=> bm!6250 m!69563))

(declare-fun m!69565 () Bool)

(assert (=> d!16299 m!69565))

(declare-fun m!69567 () Bool)

(assert (=> d!16299 m!69567))

(assert (=> d!15871 d!16299))

(assert (=> b!71423 d!15929))

(declare-fun d!16301 () Bool)

(declare-fun e!47067 () Bool)

(assert (=> d!16301 e!47067))

(declare-fun res!38287 () Bool)

(assert (=> d!16301 (=> res!38287 e!47067)))

(declare-fun lt!32012 () Bool)

(assert (=> d!16301 (= res!38287 (not lt!32012))))

(declare-fun lt!32010 () Bool)

(assert (=> d!16301 (= lt!32012 lt!32010)))

(declare-fun lt!32011 () Unit!1989)

(declare-fun e!47066 () Unit!1989)

(assert (=> d!16301 (= lt!32011 e!47066)))

(declare-fun c!10551 () Bool)

(assert (=> d!16301 (= c!10551 lt!32010)))

(assert (=> d!16301 (= lt!32010 (containsKey!134 (toList!714 lt!31487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16301 (= (contains!716 lt!31487 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32012)))

(declare-fun b!71930 () Bool)

(declare-fun lt!32013 () Unit!1989)

(assert (=> b!71930 (= e!47066 lt!32013)))

(assert (=> b!71930 (= lt!32013 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71930 (isDefined!84 (getValueByKey!130 (toList!714 lt!31487) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!71931 () Bool)

(declare-fun Unit!2042 () Unit!1989)

(assert (=> b!71931 (= e!47066 Unit!2042)))

(declare-fun b!71932 () Bool)

(assert (=> b!71932 (= e!47067 (isDefined!84 (getValueByKey!130 (toList!714 lt!31487) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16301 c!10551) b!71930))

(assert (= (and d!16301 (not c!10551)) b!71931))

(assert (= (and d!16301 (not res!38287)) b!71932))

(declare-fun m!69569 () Bool)

(assert (=> d!16301 m!69569))

(declare-fun m!69571 () Bool)

(assert (=> b!71930 m!69571))

(assert (=> b!71930 m!69415))

(assert (=> b!71930 m!69415))

(declare-fun m!69573 () Bool)

(assert (=> b!71930 m!69573))

(assert (=> b!71932 m!69415))

(assert (=> b!71932 m!69415))

(assert (=> b!71932 m!69573))

(assert (=> bm!6153 d!16301))

(declare-fun d!16303 () Bool)

(assert (=> d!16303 (= (get!1137 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2506 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!71094 d!16303))

(declare-fun d!16305 () Bool)

(declare-fun res!38288 () Bool)

(declare-fun e!47068 () Bool)

(assert (=> d!16305 (=> res!38288 e!47068)))

(assert (=> d!16305 (= res!38288 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))))) lt!31389)))))

(assert (=> d!16305 (= (containsKey!134 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389) e!47068)))

(declare-fun b!71933 () Bool)

(declare-fun e!47069 () Bool)

(assert (=> b!71933 (= e!47068 e!47069)))

(declare-fun res!38289 () Bool)

(assert (=> b!71933 (=> (not res!38289) (not e!47069))))

(assert (=> b!71933 (= res!38289 (and (or (not ((_ is Cons!1475) (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))))) (bvsle (_1!1067 (h!2061 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))))) lt!31389)) ((_ is Cons!1475) (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)))) (bvslt (_1!1067 (h!2061 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))))) lt!31389)))))

(declare-fun b!71934 () Bool)

(assert (=> b!71934 (= e!47069 (containsKey!134 (t!5006 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)))) lt!31389))))

(assert (= (and d!16305 (not res!38288)) b!71933))

(assert (= (and b!71933 res!38289) b!71934))

(declare-fun m!69575 () Bool)

(assert (=> b!71934 m!69575))

(assert (=> d!15845 d!16305))

(declare-fun d!16307 () Bool)

(declare-fun e!47070 () Bool)

(assert (=> d!16307 e!47070))

(declare-fun res!38290 () Bool)

(assert (=> d!16307 (=> (not res!38290) (not e!47070))))

(declare-fun lt!32015 () ListLongMap!1397)

(assert (=> d!16307 (= res!38290 (contains!716 lt!32015 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(declare-fun lt!32016 () List!1479)

(assert (=> d!16307 (= lt!32015 (ListLongMap!1398 lt!32016))))

(declare-fun lt!32014 () Unit!1989)

(declare-fun lt!32017 () Unit!1989)

(assert (=> d!16307 (= lt!32014 lt!32017)))

(assert (=> d!16307 (= (getValueByKey!130 lt!32016 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(assert (=> d!16307 (= lt!32017 (lemmaContainsTupThenGetReturnValue!50 lt!32016 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(assert (=> d!16307 (= lt!32016 (insertStrictlySorted!53 (toList!714 call!6149) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(assert (=> d!16307 (= (+!91 call!6149 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) lt!32015)))

(declare-fun b!71935 () Bool)

(declare-fun res!38291 () Bool)

(assert (=> b!71935 (=> (not res!38291) (not e!47070))))

(assert (=> b!71935 (= res!38291 (= (getValueByKey!130 (toList!714 lt!32015) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))))

(declare-fun b!71936 () Bool)

(assert (=> b!71936 (= e!47070 (contains!717 (toList!714 lt!32015) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))

(assert (= (and d!16307 res!38290) b!71935))

(assert (= (and b!71935 res!38291) b!71936))

(declare-fun m!69577 () Bool)

(assert (=> d!16307 m!69577))

(declare-fun m!69579 () Bool)

(assert (=> d!16307 m!69579))

(declare-fun m!69581 () Bool)

(assert (=> d!16307 m!69581))

(declare-fun m!69583 () Bool)

(assert (=> d!16307 m!69583))

(declare-fun m!69585 () Bool)

(assert (=> b!71935 m!69585))

(declare-fun m!69587 () Bool)

(assert (=> b!71936 m!69587))

(assert (=> b!71067 d!16307))

(declare-fun d!16309 () Bool)

(declare-fun res!38292 () Bool)

(declare-fun e!47071 () Bool)

(assert (=> d!16309 (=> res!38292 e!47071)))

(assert (=> d!16309 (= res!38292 (and ((_ is Cons!1475) (toList!714 lt!31248)) (= (_1!1067 (h!2061 (toList!714 lt!31248))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16309 (= (containsKey!134 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000) e!47071)))

(declare-fun b!71937 () Bool)

(declare-fun e!47072 () Bool)

(assert (=> b!71937 (= e!47071 e!47072)))

(declare-fun res!38293 () Bool)

(assert (=> b!71937 (=> (not res!38293) (not e!47072))))

(assert (=> b!71937 (= res!38293 (and (or (not ((_ is Cons!1475) (toList!714 lt!31248))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31248))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1475) (toList!714 lt!31248)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31248))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!71938 () Bool)

(assert (=> b!71938 (= e!47072 (containsKey!134 (t!5006 (toList!714 lt!31248)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16309 (not res!38292)) b!71937))

(assert (= (and b!71937 res!38293) b!71938))

(declare-fun m!69589 () Bool)

(assert (=> b!71938 m!69589))

(assert (=> d!15863 d!16309))

(assert (=> d!15775 d!16053))

(declare-fun bm!6251 () Bool)

(declare-fun call!6254 () Bool)

(declare-fun c!10552 () Bool)

(assert (=> bm!6251 (= call!6254 (arrayNoDuplicates!0 (_keys!3838 (_2!1068 lt!31326)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10552 (Cons!1476 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000) Nil!1477) Nil!1477)))))

(declare-fun b!71939 () Bool)

(declare-fun e!47073 () Bool)

(declare-fun e!47074 () Bool)

(assert (=> b!71939 (= e!47073 e!47074)))

(assert (=> b!71939 (= c!10552 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000)))))

(declare-fun d!16311 () Bool)

(declare-fun res!38295 () Bool)

(declare-fun e!47075 () Bool)

(assert (=> d!16311 (=> res!38295 e!47075)))

(assert (=> d!16311 (= res!38295 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 (_2!1068 lt!31326)))))))

(assert (=> d!16311 (= (arrayNoDuplicates!0 (_keys!3838 (_2!1068 lt!31326)) #b00000000000000000000000000000000 Nil!1477) e!47075)))

(declare-fun b!71940 () Bool)

(assert (=> b!71940 (= e!47074 call!6254)))

(declare-fun b!71941 () Bool)

(declare-fun e!47076 () Bool)

(assert (=> b!71941 (= e!47076 (contains!718 Nil!1477 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000)))))

(declare-fun b!71942 () Bool)

(assert (=> b!71942 (= e!47074 call!6254)))

(declare-fun b!71943 () Bool)

(assert (=> b!71943 (= e!47075 e!47073)))

(declare-fun res!38296 () Bool)

(assert (=> b!71943 (=> (not res!38296) (not e!47073))))

(assert (=> b!71943 (= res!38296 (not e!47076))))

(declare-fun res!38294 () Bool)

(assert (=> b!71943 (=> (not res!38294) (not e!47076))))

(assert (=> b!71943 (= res!38294 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (_2!1068 lt!31326))) #b00000000000000000000000000000000)))))

(assert (= (and d!16311 (not res!38295)) b!71943))

(assert (= (and b!71943 res!38294) b!71941))

(assert (= (and b!71943 res!38296) b!71939))

(assert (= (and b!71939 c!10552) b!71940))

(assert (= (and b!71939 (not c!10552)) b!71942))

(assert (= (or b!71940 b!71942) bm!6251))

(assert (=> bm!6251 m!69077))

(declare-fun m!69591 () Bool)

(assert (=> bm!6251 m!69591))

(assert (=> b!71939 m!69077))

(assert (=> b!71939 m!69077))

(assert (=> b!71939 m!69079))

(assert (=> b!71941 m!69077))

(assert (=> b!71941 m!69077))

(declare-fun m!69593 () Bool)

(assert (=> b!71941 m!69593))

(assert (=> b!71943 m!69077))

(assert (=> b!71943 m!69077))

(assert (=> b!71943 m!69079))

(assert (=> b!71440 d!16311))

(declare-fun d!16313 () Bool)

(assert (=> d!16313 (contains!716 (+!91 lt!31517 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16))) lt!31518)))

(declare-fun lt!32018 () Unit!1989)

(assert (=> d!16313 (= lt!32018 (choose!410 lt!31517 lt!31531 (zeroValue!2095 newMap!16) lt!31518))))

(assert (=> d!16313 (contains!716 lt!31517 lt!31518)))

(assert (=> d!16313 (= (addStillContains!50 lt!31517 lt!31531 (zeroValue!2095 newMap!16) lt!31518) lt!32018)))

(declare-fun bs!3092 () Bool)

(assert (= bs!3092 d!16313))

(assert (=> bs!3092 m!68179))

(assert (=> bs!3092 m!68179))

(assert (=> bs!3092 m!68183))

(declare-fun m!69595 () Bool)

(assert (=> bs!3092 m!69595))

(declare-fun m!69597 () Bool)

(assert (=> bs!3092 m!69597))

(assert (=> b!71207 d!16313))

(declare-fun d!16315 () Bool)

(assert (=> d!16315 (= (apply!74 (+!91 lt!31536 (tuple2!2113 lt!31525 (minValue!2095 newMap!16))) lt!31521) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31536 (tuple2!2113 lt!31525 (minValue!2095 newMap!16)))) lt!31521)))))

(declare-fun bs!3093 () Bool)

(assert (= bs!3093 d!16315))

(declare-fun m!69599 () Bool)

(assert (=> bs!3093 m!69599))

(assert (=> bs!3093 m!69599))

(declare-fun m!69601 () Bool)

(assert (=> bs!3093 m!69601))

(assert (=> b!71207 d!16315))

(declare-fun d!16317 () Bool)

(assert (=> d!16317 (= (apply!74 (+!91 lt!31523 (tuple2!2113 lt!31528 (minValue!2095 newMap!16))) lt!31529) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31523 (tuple2!2113 lt!31528 (minValue!2095 newMap!16)))) lt!31529)))))

(declare-fun bs!3094 () Bool)

(assert (= bs!3094 d!16317))

(declare-fun m!69603 () Bool)

(assert (=> bs!3094 m!69603))

(assert (=> bs!3094 m!69603))

(declare-fun m!69605 () Bool)

(assert (=> bs!3094 m!69605))

(assert (=> b!71207 d!16317))

(declare-fun d!16319 () Bool)

(assert (=> d!16319 (= (apply!74 (+!91 lt!31536 (tuple2!2113 lt!31525 (minValue!2095 newMap!16))) lt!31521) (apply!74 lt!31536 lt!31521))))

(declare-fun lt!32019 () Unit!1989)

(assert (=> d!16319 (= lt!32019 (choose!411 lt!31536 lt!31525 (minValue!2095 newMap!16) lt!31521))))

(declare-fun e!47077 () Bool)

(assert (=> d!16319 e!47077))

(declare-fun res!38297 () Bool)

(assert (=> d!16319 (=> (not res!38297) (not e!47077))))

(assert (=> d!16319 (= res!38297 (contains!716 lt!31536 lt!31521))))

(assert (=> d!16319 (= (addApplyDifferent!50 lt!31536 lt!31525 (minValue!2095 newMap!16) lt!31521) lt!32019)))

(declare-fun b!71944 () Bool)

(assert (=> b!71944 (= e!47077 (not (= lt!31521 lt!31525)))))

(assert (= (and d!16319 res!38297) b!71944))

(declare-fun m!69607 () Bool)

(assert (=> d!16319 m!69607))

(assert (=> d!16319 m!68175))

(declare-fun m!69609 () Bool)

(assert (=> d!16319 m!69609))

(assert (=> d!16319 m!68197))

(assert (=> d!16319 m!68201))

(assert (=> d!16319 m!68197))

(assert (=> b!71207 d!16319))

(declare-fun d!16321 () Bool)

(declare-fun e!47078 () Bool)

(assert (=> d!16321 e!47078))

(declare-fun res!38298 () Bool)

(assert (=> d!16321 (=> (not res!38298) (not e!47078))))

(declare-fun lt!32021 () ListLongMap!1397)

(assert (=> d!16321 (= res!38298 (contains!716 lt!32021 (_1!1067 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16)))))))

(declare-fun lt!32022 () List!1479)

(assert (=> d!16321 (= lt!32021 (ListLongMap!1398 lt!32022))))

(declare-fun lt!32020 () Unit!1989)

(declare-fun lt!32023 () Unit!1989)

(assert (=> d!16321 (= lt!32020 lt!32023)))

(assert (=> d!16321 (= (getValueByKey!130 lt!32022 (_1!1067 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16321 (= lt!32023 (lemmaContainsTupThenGetReturnValue!50 lt!32022 (_1!1067 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16321 (= lt!32022 (insertStrictlySorted!53 (toList!714 lt!31517) (_1!1067 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16321 (= (+!91 lt!31517 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16))) lt!32021)))

(declare-fun b!71945 () Bool)

(declare-fun res!38299 () Bool)

(assert (=> b!71945 (=> (not res!38299) (not e!47078))))

(assert (=> b!71945 (= res!38299 (= (getValueByKey!130 (toList!714 lt!32021) (_1!1067 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16))))))))

(declare-fun b!71946 () Bool)

(assert (=> b!71946 (= e!47078 (contains!717 (toList!714 lt!32021) (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16))))))

(assert (= (and d!16321 res!38298) b!71945))

(assert (= (and b!71945 res!38299) b!71946))

(declare-fun m!69611 () Bool)

(assert (=> d!16321 m!69611))

(declare-fun m!69613 () Bool)

(assert (=> d!16321 m!69613))

(declare-fun m!69615 () Bool)

(assert (=> d!16321 m!69615))

(declare-fun m!69617 () Bool)

(assert (=> d!16321 m!69617))

(declare-fun m!69619 () Bool)

(assert (=> b!71945 m!69619))

(declare-fun m!69621 () Bool)

(assert (=> b!71946 m!69621))

(assert (=> b!71207 d!16321))

(declare-fun d!16323 () Bool)

(assert (=> d!16323 (= (apply!74 lt!31523 lt!31529) (get!1139 (getValueByKey!130 (toList!714 lt!31523) lt!31529)))))

(declare-fun bs!3095 () Bool)

(assert (= bs!3095 d!16323))

(declare-fun m!69623 () Bool)

(assert (=> bs!3095 m!69623))

(assert (=> bs!3095 m!69623))

(declare-fun m!69625 () Bool)

(assert (=> bs!3095 m!69625))

(assert (=> b!71207 d!16323))

(declare-fun d!16325 () Bool)

(declare-fun e!47079 () Bool)

(assert (=> d!16325 e!47079))

(declare-fun res!38300 () Bool)

(assert (=> d!16325 (=> (not res!38300) (not e!47079))))

(declare-fun lt!32025 () ListLongMap!1397)

(assert (=> d!16325 (= res!38300 (contains!716 lt!32025 (_1!1067 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16)))))))

(declare-fun lt!32026 () List!1479)

(assert (=> d!16325 (= lt!32025 (ListLongMap!1398 lt!32026))))

(declare-fun lt!32024 () Unit!1989)

(declare-fun lt!32027 () Unit!1989)

(assert (=> d!16325 (= lt!32024 lt!32027)))

(assert (=> d!16325 (= (getValueByKey!130 lt!32026 (_1!1067 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16325 (= lt!32027 (lemmaContainsTupThenGetReturnValue!50 lt!32026 (_1!1067 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16325 (= lt!32026 (insertStrictlySorted!53 (toList!714 lt!31532) (_1!1067 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16)))))))

(assert (=> d!16325 (= (+!91 lt!31532 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16))) lt!32025)))

(declare-fun b!71947 () Bool)

(declare-fun res!38301 () Bool)

(assert (=> b!71947 (=> (not res!38301) (not e!47079))))

(assert (=> b!71947 (= res!38301 (= (getValueByKey!130 (toList!714 lt!32025) (_1!1067 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16))))))))

(declare-fun b!71948 () Bool)

(assert (=> b!71948 (= e!47079 (contains!717 (toList!714 lt!32025) (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16))))))

(assert (= (and d!16325 res!38300) b!71947))

(assert (= (and b!71947 res!38301) b!71948))

(declare-fun m!69627 () Bool)

(assert (=> d!16325 m!69627))

(declare-fun m!69629 () Bool)

(assert (=> d!16325 m!69629))

(declare-fun m!69631 () Bool)

(assert (=> d!16325 m!69631))

(declare-fun m!69633 () Bool)

(assert (=> d!16325 m!69633))

(declare-fun m!69635 () Bool)

(assert (=> b!71947 m!69635))

(declare-fun m!69637 () Bool)

(assert (=> b!71948 m!69637))

(assert (=> b!71207 d!16325))

(declare-fun d!16327 () Bool)

(declare-fun e!47080 () Bool)

(assert (=> d!16327 e!47080))

(declare-fun res!38302 () Bool)

(assert (=> d!16327 (=> (not res!38302) (not e!47080))))

(declare-fun lt!32029 () ListLongMap!1397)

(assert (=> d!16327 (= res!38302 (contains!716 lt!32029 (_1!1067 (tuple2!2113 lt!31525 (minValue!2095 newMap!16)))))))

(declare-fun lt!32030 () List!1479)

(assert (=> d!16327 (= lt!32029 (ListLongMap!1398 lt!32030))))

(declare-fun lt!32028 () Unit!1989)

(declare-fun lt!32031 () Unit!1989)

(assert (=> d!16327 (= lt!32028 lt!32031)))

(assert (=> d!16327 (= (getValueByKey!130 lt!32030 (_1!1067 (tuple2!2113 lt!31525 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31525 (minValue!2095 newMap!16)))))))

(assert (=> d!16327 (= lt!32031 (lemmaContainsTupThenGetReturnValue!50 lt!32030 (_1!1067 (tuple2!2113 lt!31525 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31525 (minValue!2095 newMap!16)))))))

(assert (=> d!16327 (= lt!32030 (insertStrictlySorted!53 (toList!714 lt!31536) (_1!1067 (tuple2!2113 lt!31525 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31525 (minValue!2095 newMap!16)))))))

(assert (=> d!16327 (= (+!91 lt!31536 (tuple2!2113 lt!31525 (minValue!2095 newMap!16))) lt!32029)))

(declare-fun b!71949 () Bool)

(declare-fun res!38303 () Bool)

(assert (=> b!71949 (=> (not res!38303) (not e!47080))))

(assert (=> b!71949 (= res!38303 (= (getValueByKey!130 (toList!714 lt!32029) (_1!1067 (tuple2!2113 lt!31525 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31525 (minValue!2095 newMap!16))))))))

(declare-fun b!71950 () Bool)

(assert (=> b!71950 (= e!47080 (contains!717 (toList!714 lt!32029) (tuple2!2113 lt!31525 (minValue!2095 newMap!16))))))

(assert (= (and d!16327 res!38302) b!71949))

(assert (= (and b!71949 res!38303) b!71950))

(declare-fun m!69639 () Bool)

(assert (=> d!16327 m!69639))

(declare-fun m!69641 () Bool)

(assert (=> d!16327 m!69641))

(declare-fun m!69643 () Bool)

(assert (=> d!16327 m!69643))

(declare-fun m!69645 () Bool)

(assert (=> d!16327 m!69645))

(declare-fun m!69647 () Bool)

(assert (=> b!71949 m!69647))

(declare-fun m!69649 () Bool)

(assert (=> b!71950 m!69649))

(assert (=> b!71207 d!16327))

(declare-fun d!16329 () Bool)

(assert (=> d!16329 (= (apply!74 (+!91 lt!31523 (tuple2!2113 lt!31528 (minValue!2095 newMap!16))) lt!31529) (apply!74 lt!31523 lt!31529))))

(declare-fun lt!32032 () Unit!1989)

(assert (=> d!16329 (= lt!32032 (choose!411 lt!31523 lt!31528 (minValue!2095 newMap!16) lt!31529))))

(declare-fun e!47081 () Bool)

(assert (=> d!16329 e!47081))

(declare-fun res!38304 () Bool)

(assert (=> d!16329 (=> (not res!38304) (not e!47081))))

(assert (=> d!16329 (= res!38304 (contains!716 lt!31523 lt!31529))))

(assert (=> d!16329 (= (addApplyDifferent!50 lt!31523 lt!31528 (minValue!2095 newMap!16) lt!31529) lt!32032)))

(declare-fun b!71951 () Bool)

(assert (=> b!71951 (= e!47081 (not (= lt!31529 lt!31528)))))

(assert (= (and d!16329 res!38304) b!71951))

(declare-fun m!69651 () Bool)

(assert (=> d!16329 m!69651))

(assert (=> d!16329 m!68177))

(declare-fun m!69653 () Bool)

(assert (=> d!16329 m!69653))

(assert (=> d!16329 m!68181))

(assert (=> d!16329 m!68187))

(assert (=> d!16329 m!68181))

(assert (=> b!71207 d!16329))

(declare-fun d!16331 () Bool)

(declare-fun e!47083 () Bool)

(assert (=> d!16331 e!47083))

(declare-fun res!38305 () Bool)

(assert (=> d!16331 (=> res!38305 e!47083)))

(declare-fun lt!32035 () Bool)

(assert (=> d!16331 (= res!38305 (not lt!32035))))

(declare-fun lt!32033 () Bool)

(assert (=> d!16331 (= lt!32035 lt!32033)))

(declare-fun lt!32034 () Unit!1989)

(declare-fun e!47082 () Unit!1989)

(assert (=> d!16331 (= lt!32034 e!47082)))

(declare-fun c!10553 () Bool)

(assert (=> d!16331 (= c!10553 lt!32033)))

(assert (=> d!16331 (= lt!32033 (containsKey!134 (toList!714 (+!91 lt!31517 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16)))) lt!31518))))

(assert (=> d!16331 (= (contains!716 (+!91 lt!31517 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16))) lt!31518) lt!32035)))

(declare-fun b!71952 () Bool)

(declare-fun lt!32036 () Unit!1989)

(assert (=> b!71952 (= e!47082 lt!32036)))

(assert (=> b!71952 (= lt!32036 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (+!91 lt!31517 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16)))) lt!31518))))

(assert (=> b!71952 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31517 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16)))) lt!31518))))

(declare-fun b!71953 () Bool)

(declare-fun Unit!2043 () Unit!1989)

(assert (=> b!71953 (= e!47082 Unit!2043)))

(declare-fun b!71954 () Bool)

(assert (=> b!71954 (= e!47083 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31517 (tuple2!2113 lt!31531 (zeroValue!2095 newMap!16)))) lt!31518)))))

(assert (= (and d!16331 c!10553) b!71952))

(assert (= (and d!16331 (not c!10553)) b!71953))

(assert (= (and d!16331 (not res!38305)) b!71954))

(declare-fun m!69655 () Bool)

(assert (=> d!16331 m!69655))

(declare-fun m!69657 () Bool)

(assert (=> b!71952 m!69657))

(declare-fun m!69659 () Bool)

(assert (=> b!71952 m!69659))

(assert (=> b!71952 m!69659))

(declare-fun m!69661 () Bool)

(assert (=> b!71952 m!69661))

(assert (=> b!71954 m!69659))

(assert (=> b!71954 m!69659))

(assert (=> b!71954 m!69661))

(assert (=> b!71207 d!16331))

(assert (=> b!71207 d!16213))

(declare-fun d!16333 () Bool)

(declare-fun e!47084 () Bool)

(assert (=> d!16333 e!47084))

(declare-fun res!38306 () Bool)

(assert (=> d!16333 (=> (not res!38306) (not e!47084))))

(declare-fun lt!32038 () ListLongMap!1397)

(assert (=> d!16333 (= res!38306 (contains!716 lt!32038 (_1!1067 (tuple2!2113 lt!31528 (minValue!2095 newMap!16)))))))

(declare-fun lt!32039 () List!1479)

(assert (=> d!16333 (= lt!32038 (ListLongMap!1398 lt!32039))))

(declare-fun lt!32037 () Unit!1989)

(declare-fun lt!32040 () Unit!1989)

(assert (=> d!16333 (= lt!32037 lt!32040)))

(assert (=> d!16333 (= (getValueByKey!130 lt!32039 (_1!1067 (tuple2!2113 lt!31528 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31528 (minValue!2095 newMap!16)))))))

(assert (=> d!16333 (= lt!32040 (lemmaContainsTupThenGetReturnValue!50 lt!32039 (_1!1067 (tuple2!2113 lt!31528 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31528 (minValue!2095 newMap!16)))))))

(assert (=> d!16333 (= lt!32039 (insertStrictlySorted!53 (toList!714 lt!31523) (_1!1067 (tuple2!2113 lt!31528 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 lt!31528 (minValue!2095 newMap!16)))))))

(assert (=> d!16333 (= (+!91 lt!31523 (tuple2!2113 lt!31528 (minValue!2095 newMap!16))) lt!32038)))

(declare-fun b!71955 () Bool)

(declare-fun res!38307 () Bool)

(assert (=> b!71955 (=> (not res!38307) (not e!47084))))

(assert (=> b!71955 (= res!38307 (= (getValueByKey!130 (toList!714 lt!32038) (_1!1067 (tuple2!2113 lt!31528 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 lt!31528 (minValue!2095 newMap!16))))))))

(declare-fun b!71956 () Bool)

(assert (=> b!71956 (= e!47084 (contains!717 (toList!714 lt!32038) (tuple2!2113 lt!31528 (minValue!2095 newMap!16))))))

(assert (= (and d!16333 res!38306) b!71955))

(assert (= (and b!71955 res!38307) b!71956))

(declare-fun m!69663 () Bool)

(assert (=> d!16333 m!69663))

(declare-fun m!69665 () Bool)

(assert (=> d!16333 m!69665))

(declare-fun m!69667 () Bool)

(assert (=> d!16333 m!69667))

(declare-fun m!69669 () Bool)

(assert (=> d!16333 m!69669))

(declare-fun m!69671 () Bool)

(assert (=> b!71955 m!69671))

(declare-fun m!69673 () Bool)

(assert (=> b!71956 m!69673))

(assert (=> b!71207 d!16333))

(declare-fun d!16335 () Bool)

(assert (=> d!16335 (= (apply!74 lt!31536 lt!31521) (get!1139 (getValueByKey!130 (toList!714 lt!31536) lt!31521)))))

(declare-fun bs!3096 () Bool)

(assert (= bs!3096 d!16335))

(declare-fun m!69675 () Bool)

(assert (=> bs!3096 m!69675))

(assert (=> bs!3096 m!69675))

(declare-fun m!69677 () Bool)

(assert (=> bs!3096 m!69677))

(assert (=> b!71207 d!16335))

(declare-fun d!16337 () Bool)

(assert (=> d!16337 (= (apply!74 (+!91 lt!31532 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16))) lt!31538) (apply!74 lt!31532 lt!31538))))

(declare-fun lt!32041 () Unit!1989)

(assert (=> d!16337 (= lt!32041 (choose!411 lt!31532 lt!31534 (zeroValue!2095 newMap!16) lt!31538))))

(declare-fun e!47085 () Bool)

(assert (=> d!16337 e!47085))

(declare-fun res!38308 () Bool)

(assert (=> d!16337 (=> (not res!38308) (not e!47085))))

(assert (=> d!16337 (= res!38308 (contains!716 lt!31532 lt!31538))))

(assert (=> d!16337 (= (addApplyDifferent!50 lt!31532 lt!31534 (zeroValue!2095 newMap!16) lt!31538) lt!32041)))

(declare-fun b!71957 () Bool)

(assert (=> b!71957 (= e!47085 (not (= lt!31538 lt!31534)))))

(assert (= (and d!16337 res!38308) b!71957))

(declare-fun m!69679 () Bool)

(assert (=> d!16337 m!69679))

(assert (=> d!16337 m!68195))

(declare-fun m!69681 () Bool)

(assert (=> d!16337 m!69681))

(assert (=> d!16337 m!68189))

(assert (=> d!16337 m!68199))

(assert (=> d!16337 m!68189))

(assert (=> b!71207 d!16337))

(declare-fun d!16339 () Bool)

(assert (=> d!16339 (= (apply!74 lt!31532 lt!31538) (get!1139 (getValueByKey!130 (toList!714 lt!31532) lt!31538)))))

(declare-fun bs!3097 () Bool)

(assert (= bs!3097 d!16339))

(declare-fun m!69683 () Bool)

(assert (=> bs!3097 m!69683))

(assert (=> bs!3097 m!69683))

(declare-fun m!69685 () Bool)

(assert (=> bs!3097 m!69685))

(assert (=> b!71207 d!16339))

(declare-fun d!16341 () Bool)

(assert (=> d!16341 (= (apply!74 (+!91 lt!31532 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16))) lt!31538) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31532 (tuple2!2113 lt!31534 (zeroValue!2095 newMap!16)))) lt!31538)))))

(declare-fun bs!3098 () Bool)

(assert (= bs!3098 d!16341))

(declare-fun m!69687 () Bool)

(assert (=> bs!3098 m!69687))

(assert (=> bs!3098 m!69687))

(declare-fun m!69689 () Bool)

(assert (=> bs!3098 m!69689))

(assert (=> b!71207 d!16341))

(declare-fun d!16343 () Bool)

(declare-fun res!38309 () Bool)

(declare-fun e!47086 () Bool)

(assert (=> d!16343 (=> res!38309 e!47086)))

(assert (=> d!16343 (= res!38309 (and ((_ is Cons!1475) (toList!714 lt!31354)) (= (_1!1067 (h!2061 (toList!714 lt!31354))) (_1!1067 lt!31103))))))

(assert (=> d!16343 (= (containsKey!134 (toList!714 lt!31354) (_1!1067 lt!31103)) e!47086)))

(declare-fun b!71958 () Bool)

(declare-fun e!47087 () Bool)

(assert (=> b!71958 (= e!47086 e!47087)))

(declare-fun res!38310 () Bool)

(assert (=> b!71958 (=> (not res!38310) (not e!47087))))

(assert (=> b!71958 (= res!38310 (and (or (not ((_ is Cons!1475) (toList!714 lt!31354))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31354))) (_1!1067 lt!31103))) ((_ is Cons!1475) (toList!714 lt!31354)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31354))) (_1!1067 lt!31103))))))

(declare-fun b!71959 () Bool)

(assert (=> b!71959 (= e!47087 (containsKey!134 (t!5006 (toList!714 lt!31354)) (_1!1067 lt!31103)))))

(assert (= (and d!16343 (not res!38309)) b!71958))

(assert (= (and b!71958 res!38310) b!71959))

(declare-fun m!69691 () Bool)

(assert (=> b!71959 m!69691))

(assert (=> d!15919 d!16343))

(declare-fun d!16345 () Bool)

(assert (=> d!16345 (= (apply!74 lt!31430 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1139 (getValueByKey!130 (toList!714 lt!31430) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3099 () Bool)

(assert (= bs!3099 d!16345))

(assert (=> bs!3099 m!69431))

(assert (=> bs!3099 m!69431))

(declare-fun m!69693 () Bool)

(assert (=> bs!3099 m!69693))

(assert (=> b!71047 d!16345))

(declare-fun d!16347 () Bool)

(declare-fun lt!32042 () Bool)

(assert (=> d!16347 (= lt!32042 (select (content!76 (toList!714 lt!31443)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun e!47088 () Bool)

(assert (=> d!16347 (= lt!32042 e!47088)))

(declare-fun res!38312 () Bool)

(assert (=> d!16347 (=> (not res!38312) (not e!47088))))

(assert (=> d!16347 (= res!38312 ((_ is Cons!1475) (toList!714 lt!31443)))))

(assert (=> d!16347 (= (contains!717 (toList!714 lt!31443) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!32042)))

(declare-fun b!71960 () Bool)

(declare-fun e!47089 () Bool)

(assert (=> b!71960 (= e!47088 e!47089)))

(declare-fun res!38311 () Bool)

(assert (=> b!71960 (=> res!38311 e!47089)))

(assert (=> b!71960 (= res!38311 (= (h!2061 (toList!714 lt!31443)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!71961 () Bool)

(assert (=> b!71961 (= e!47089 (contains!717 (t!5006 (toList!714 lt!31443)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!16347 res!38312) b!71960))

(assert (= (and b!71960 (not res!38311)) b!71961))

(declare-fun m!69695 () Bool)

(assert (=> d!16347 m!69695))

(declare-fun m!69697 () Bool)

(assert (=> d!16347 m!69697))

(declare-fun m!69699 () Bool)

(assert (=> b!71961 m!69699))

(assert (=> b!71079 d!16347))

(declare-fun d!16349 () Bool)

(declare-fun e!47090 () Bool)

(assert (=> d!16349 e!47090))

(declare-fun res!38313 () Bool)

(assert (=> d!16349 (=> (not res!38313) (not e!47090))))

(assert (=> d!16349 (= res!38313 (and (bvsge (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000000) (bvslt (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (size!2078 lt!31740))))))

(declare-fun lt!32043 () Unit!1989)

(assert (=> d!16349 (= lt!32043 (choose!406 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (defaultEntry!2191 newMap!16)))))

(assert (=> d!16349 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16349 (= (lemmaValidKeyInArrayIsInListMap!82 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (defaultEntry!2191 newMap!16)) lt!32043)))

(declare-fun b!71962 () Bool)

(assert (=> b!71962 (= e!47090 (contains!716 (getCurrentListMap!407 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1840 lt!31740) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)))))))

(assert (= (and d!16349 res!38313) b!71962))

(declare-fun m!69701 () Bool)

(assert (=> d!16349 m!69701))

(assert (=> d!16349 m!67873))

(assert (=> b!71962 m!68561))

(declare-fun m!69703 () Bool)

(assert (=> b!71962 m!69703))

(assert (=> b!71962 m!68561))

(assert (=> b!71962 m!69703))

(declare-fun m!69705 () Bool)

(assert (=> b!71962 m!69705))

(assert (=> d!15943 d!16349))

(declare-fun d!16351 () Bool)

(declare-fun e!47093 () Bool)

(assert (=> d!16351 e!47093))

(declare-fun res!38316 () Bool)

(assert (=> d!16351 (=> (not res!38316) (not e!47093))))

(assert (=> d!16351 (= res!38316 (and (bvsge (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000000) (bvslt (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (size!2078 (_keys!3838 newMap!16))) (bvslt (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (size!2079 (_values!2174 newMap!16)))))))

(declare-fun lt!32046 () Unit!1989)

(declare-fun choose!416 (array!3857 array!3859 (_ BitVec 32) (_ BitVec 32) V!2937 V!2937 (_ BitVec 32) (_ BitVec 64) V!2937 Int) Unit!1989)

(assert (=> d!16351 (= lt!32046 (choose!416 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16351 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16351 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!12 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106 (defaultEntry!2191 newMap!16)) lt!32046)))

(declare-fun b!71965 () Bool)

(assert (=> b!71965 (= e!47093 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (getCurrentListMap!407 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))))))

(assert (= (and d!16351 res!38316) b!71965))

(assert (=> d!16351 m!67435))

(declare-fun m!69707 () Bool)

(assert (=> d!16351 m!69707))

(assert (=> d!16351 m!67873))

(assert (=> b!71965 m!68557))

(assert (=> b!71965 m!68571))

(assert (=> b!71965 m!67607))

(assert (=> b!71965 m!68135))

(assert (=> b!71965 m!68581))

(assert (=> b!71965 m!67607))

(assert (=> d!15943 d!16351))

(declare-fun call!6255 () Bool)

(declare-fun bm!6252 () Bool)

(assert (=> bm!6252 (= call!6255 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (mask!6147 newMap!16)))))

(declare-fun b!71966 () Bool)

(declare-fun e!47095 () Bool)

(declare-fun e!47096 () Bool)

(assert (=> b!71966 (= e!47095 e!47096)))

(declare-fun lt!32048 () (_ BitVec 64))

(assert (=> b!71966 (= lt!32048 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32049 () Unit!1989)

(assert (=> b!71966 (= lt!32049 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) lt!32048 #b00000000000000000000000000000000))))

(assert (=> b!71966 (arrayContainsKey!0 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) lt!32048 #b00000000000000000000000000000000)))

(declare-fun lt!32047 () Unit!1989)

(assert (=> b!71966 (= lt!32047 lt!32049)))

(declare-fun res!38317 () Bool)

(assert (=> b!71966 (= res!38317 (= (seekEntryOrOpen!0 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000) (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (mask!6147 newMap!16)) (Found!238 #b00000000000000000000000000000000)))))

(assert (=> b!71966 (=> (not res!38317) (not e!47096))))

(declare-fun b!71967 () Bool)

(assert (=> b!71967 (= e!47096 call!6255)))

(declare-fun d!16353 () Bool)

(declare-fun res!38318 () Bool)

(declare-fun e!47094 () Bool)

(assert (=> d!16353 (=> res!38318 e!47094)))

(assert (=> d!16353 (= res!38318 (bvsge #b00000000000000000000000000000000 (size!2078 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))))

(assert (=> d!16353 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (mask!6147 newMap!16)) e!47094)))

(declare-fun b!71968 () Bool)

(assert (=> b!71968 (= e!47094 e!47095)))

(declare-fun c!10554 () Bool)

(assert (=> b!71968 (= c!10554 (validKeyInArray!0 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!71969 () Bool)

(assert (=> b!71969 (= e!47095 call!6255)))

(assert (= (and d!16353 (not res!38318)) b!71968))

(assert (= (and b!71968 c!10554) b!71966))

(assert (= (and b!71968 (not c!10554)) b!71969))

(assert (= (and b!71966 res!38317) b!71967))

(assert (= (or b!71967 b!71969) bm!6252))

(declare-fun m!69709 () Bool)

(assert (=> bm!6252 m!69709))

(declare-fun m!69711 () Bool)

(assert (=> b!71966 m!69711))

(declare-fun m!69713 () Bool)

(assert (=> b!71966 m!69713))

(declare-fun m!69715 () Bool)

(assert (=> b!71966 m!69715))

(assert (=> b!71966 m!69711))

(declare-fun m!69717 () Bool)

(assert (=> b!71966 m!69717))

(assert (=> b!71968 m!69711))

(assert (=> b!71968 m!69711))

(declare-fun m!69719 () Bool)

(assert (=> b!71968 m!69719))

(assert (=> d!15943 d!16353))

(declare-fun b!71970 () Bool)

(declare-fun e!47097 () (_ BitVec 32))

(declare-fun call!6256 () (_ BitVec 32))

(assert (=> b!71970 (= e!47097 (bvadd #b00000000000000000000000000000001 call!6256))))

(declare-fun b!71971 () Bool)

(declare-fun e!47098 () (_ BitVec 32))

(assert (=> b!71971 (= e!47098 e!47097)))

(declare-fun c!10555 () Bool)

(assert (=> b!71971 (= c!10555 (validKeyInArray!0 (select (arr!1840 lt!31720) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)))))))

(declare-fun bm!6253 () Bool)

(assert (=> bm!6253 (= call!6256 (arrayCountValidKeys!0 lt!31720 (bvadd (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000001) (bvadd (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000001)))))

(declare-fun b!71972 () Bool)

(assert (=> b!71972 (= e!47098 #b00000000000000000000000000000000)))

(declare-fun d!16355 () Bool)

(declare-fun lt!32050 () (_ BitVec 32))

(assert (=> d!16355 (and (bvsge lt!32050 #b00000000000000000000000000000000) (bvsle lt!32050 (bvsub (size!2078 lt!31720) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)))))))

(assert (=> d!16355 (= lt!32050 e!47098)))

(declare-fun c!10556 () Bool)

(assert (=> d!16355 (= c!10556 (bvsge (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (bvadd (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000001)))))

(assert (=> d!16355 (and (bvsle (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (bvadd (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000001)) (bvsge (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000001) (size!2078 lt!31720)))))

(assert (=> d!16355 (= (arrayCountValidKeys!0 lt!31720 (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (bvadd (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000001)) lt!32050)))

(declare-fun b!71973 () Bool)

(assert (=> b!71973 (= e!47097 call!6256)))

(assert (= (and d!16355 c!10556) b!71972))

(assert (= (and d!16355 (not c!10556)) b!71971))

(assert (= (and b!71971 c!10555) b!71970))

(assert (= (and b!71971 (not c!10555)) b!71973))

(assert (= (or b!71970 b!71973) bm!6253))

(declare-fun m!69721 () Bool)

(assert (=> b!71971 m!69721))

(assert (=> b!71971 m!69721))

(declare-fun m!69723 () Bool)

(assert (=> b!71971 m!69723))

(declare-fun m!69725 () Bool)

(assert (=> bm!6253 m!69725))

(assert (=> d!15943 d!16355))

(assert (=> d!15943 d!16195))

(assert (=> d!15943 d!15819))

(assert (=> d!15943 d!15939))

(assert (=> d!15943 d!15823))

(declare-fun d!16357 () Bool)

(assert (=> d!16357 (= (arrayCountValidKeys!0 lt!31720 (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (bvadd (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!32053 () Unit!1989)

(declare-fun choose!2 (array!3857 (_ BitVec 32)) Unit!1989)

(assert (=> d!16357 (= lt!32053 (choose!2 lt!31720 (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))))))

(declare-fun e!47101 () Bool)

(assert (=> d!16357 e!47101))

(declare-fun res!38323 () Bool)

(assert (=> d!16357 (=> (not res!38323) (not e!47101))))

(assert (=> d!16357 (= res!38323 (and (bvsge (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000000) (bvslt (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (size!2078 lt!31720))))))

(assert (=> d!16357 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!31720 (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))) lt!32053)))

(declare-fun b!71978 () Bool)

(declare-fun res!38324 () Bool)

(assert (=> b!71978 (=> (not res!38324) (not e!47101))))

(assert (=> b!71978 (= res!38324 (validKeyInArray!0 (select (arr!1840 lt!31720) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)))))))

(declare-fun b!71979 () Bool)

(assert (=> b!71979 (= e!47101 (bvslt (size!2078 lt!31720) #b01111111111111111111111111111111))))

(assert (= (and d!16357 res!38323) b!71978))

(assert (= (and b!71978 res!38324) b!71979))

(assert (=> d!16357 m!68583))

(declare-fun m!69727 () Bool)

(assert (=> d!16357 m!69727))

(assert (=> b!71978 m!69721))

(assert (=> b!71978 m!69721))

(assert (=> b!71978 m!69723))

(assert (=> d!15943 d!16357))

(declare-fun b!71980 () Bool)

(declare-fun e!47102 () (_ BitVec 32))

(declare-fun call!6257 () (_ BitVec 32))

(assert (=> b!71980 (= e!47102 (bvadd #b00000000000000000000000000000001 call!6257))))

(declare-fun b!71981 () Bool)

(declare-fun e!47103 () (_ BitVec 32))

(assert (=> b!71981 (= e!47103 e!47102)))

(declare-fun c!10557 () Bool)

(assert (=> b!71981 (= c!10557 (validKeyInArray!0 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6254 () Bool)

(assert (=> bm!6254 (= call!6257 (arrayCountValidKeys!0 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!71982 () Bool)

(assert (=> b!71982 (= e!47103 #b00000000000000000000000000000000)))

(declare-fun d!16359 () Bool)

(declare-fun lt!32054 () (_ BitVec 32))

(assert (=> d!16359 (and (bvsge lt!32054 #b00000000000000000000000000000000) (bvsle lt!32054 (bvsub (size!2078 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!16359 (= lt!32054 e!47103)))

(declare-fun c!10558 () Bool)

(assert (=> d!16359 (= c!10558 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16359 (and (bvsle #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2078 (_keys!3838 newMap!16)) (size!2078 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))))

(assert (=> d!16359 (= (arrayCountValidKeys!0 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) lt!32054)))

(declare-fun b!71983 () Bool)

(assert (=> b!71983 (= e!47102 call!6257)))

(assert (= (and d!16359 c!10558) b!71982))

(assert (= (and d!16359 (not c!10558)) b!71981))

(assert (= (and b!71981 c!10557) b!71980))

(assert (= (and b!71981 (not c!10557)) b!71983))

(assert (= (or b!71980 b!71983) bm!6254))

(assert (=> b!71981 m!69711))

(assert (=> b!71981 m!69711))

(assert (=> b!71981 m!69719))

(declare-fun m!69729 () Bool)

(assert (=> bm!6254 m!69729))

(assert (=> d!15943 d!16359))

(declare-fun d!16361 () Bool)

(declare-fun e!47105 () Bool)

(assert (=> d!16361 e!47105))

(declare-fun res!38325 () Bool)

(assert (=> d!16361 (=> res!38325 e!47105)))

(declare-fun lt!32057 () Bool)

(assert (=> d!16361 (= res!38325 (not lt!32057))))

(declare-fun lt!32055 () Bool)

(assert (=> d!16361 (= lt!32057 lt!32055)))

(declare-fun lt!32056 () Unit!1989)

(declare-fun e!47104 () Unit!1989)

(assert (=> d!16361 (= lt!32056 e!47104)))

(declare-fun c!10559 () Bool)

(assert (=> d!16361 (= c!10559 lt!32055)))

(assert (=> d!16361 (= lt!32055 (containsKey!134 (toList!714 (getCurrentListMap!407 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)))))))

(assert (=> d!16361 (= (contains!716 (getCurrentListMap!407 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)))) lt!32057)))

(declare-fun b!71984 () Bool)

(declare-fun lt!32058 () Unit!1989)

(assert (=> b!71984 (= e!47104 lt!32058)))

(assert (=> b!71984 (= lt!32058 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (getCurrentListMap!407 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)))))))

(assert (=> b!71984 (isDefined!84 (getValueByKey!130 (toList!714 (getCurrentListMap!407 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)))))))

(declare-fun b!71985 () Bool)

(declare-fun Unit!2044 () Unit!1989)

(assert (=> b!71985 (= e!47104 Unit!2044)))

(declare-fun b!71986 () Bool)

(assert (=> b!71986 (= e!47105 (isDefined!84 (getValueByKey!130 (toList!714 (getCurrentListMap!407 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (select (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))))))))

(assert (= (and d!16361 c!10559) b!71984))

(assert (= (and d!16361 (not c!10559)) b!71985))

(assert (= (and d!16361 (not res!38325)) b!71986))

(assert (=> d!16361 m!68563))

(declare-fun m!69731 () Bool)

(assert (=> d!16361 m!69731))

(assert (=> b!71984 m!68563))

(declare-fun m!69733 () Bool)

(assert (=> b!71984 m!69733))

(assert (=> b!71984 m!68563))

(declare-fun m!69735 () Bool)

(assert (=> b!71984 m!69735))

(assert (=> b!71984 m!69735))

(declare-fun m!69737 () Bool)

(assert (=> b!71984 m!69737))

(assert (=> b!71986 m!68563))

(assert (=> b!71986 m!69735))

(assert (=> b!71986 m!69735))

(assert (=> b!71986 m!69737))

(assert (=> d!15943 d!16361))

(declare-fun d!16363 () Bool)

(declare-fun e!47108 () Bool)

(assert (=> d!16363 e!47108))

(declare-fun res!38328 () Bool)

(assert (=> d!16363 (=> (not res!38328) (not e!47108))))

(assert (=> d!16363 (= res!38328 (and (bvsge (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000000) (bvslt (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (size!2078 (_keys!3838 newMap!16)))))))

(declare-fun lt!32061 () Unit!1989)

(declare-fun choose!102 ((_ BitVec 64) array!3857 (_ BitVec 32) (_ BitVec 32)) Unit!1989)

(assert (=> d!16363 (= lt!32061 (choose!102 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (mask!6147 newMap!16)))))

(assert (=> d!16363 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16363 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (mask!6147 newMap!16)) lt!32061)))

(declare-fun b!71989 () Bool)

(assert (=> b!71989 (= e!47108 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (mask!6147 newMap!16)))))

(assert (= (and d!16363 res!38328) b!71989))

(assert (=> d!16363 m!67435))

(declare-fun m!69739 () Bool)

(assert (=> d!16363 m!69739))

(assert (=> d!16363 m!67873))

(assert (=> b!71989 m!68571))

(assert (=> b!71989 m!68569))

(assert (=> d!15943 d!16363))

(declare-fun b!71999 () Bool)

(declare-fun res!38338 () Bool)

(declare-fun e!47114 () Bool)

(assert (=> b!71999 (=> (not res!38338) (not e!47114))))

(assert (=> b!71999 (= res!38338 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!72000 () Bool)

(assert (=> b!72000 (= e!47114 (bvslt (size!2078 (_keys!3838 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!72001 () Bool)

(declare-fun e!47113 () Bool)

(assert (=> b!72001 (= e!47113 (= (arrayCountValidKeys!0 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3838 newMap!16) #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!16365 () Bool)

(assert (=> d!16365 e!47113))

(declare-fun res!38337 () Bool)

(assert (=> d!16365 (=> (not res!38337) (not e!47113))))

(assert (=> d!16365 (= res!38337 (and (bvsge (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000000) (bvslt (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (size!2078 (_keys!3838 newMap!16)))))))

(declare-fun lt!32064 () Unit!1989)

(declare-fun choose!1 (array!3857 (_ BitVec 32) (_ BitVec 64)) Unit!1989)

(assert (=> d!16365 (= lt!32064 (choose!1 (_keys!3838 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!16365 e!47114))

(declare-fun res!38340 () Bool)

(assert (=> d!16365 (=> (not res!38340) (not e!47114))))

(assert (=> d!16365 (= res!38340 (and (bvsge (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000000) (bvslt (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (size!2078 (_keys!3838 newMap!16)))))))

(assert (=> d!16365 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3838 newMap!16) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) lt!32064)))

(declare-fun b!71998 () Bool)

(declare-fun res!38339 () Bool)

(assert (=> b!71998 (=> (not res!38339) (not e!47114))))

(assert (=> b!71998 (= res!38339 (not (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))))))))

(assert (= (and d!16365 res!38340) b!71998))

(assert (= (and b!71998 res!38339) b!71999))

(assert (= (and b!71999 res!38338) b!72000))

(assert (= (and d!16365 res!38337) b!72001))

(assert (=> b!71999 m!67435))

(assert (=> b!71999 m!67813))

(assert (=> b!72001 m!68571))

(assert (=> b!72001 m!68573))

(assert (=> b!72001 m!67821))

(assert (=> d!16365 m!67435))

(declare-fun m!69741 () Bool)

(assert (=> d!16365 m!69741))

(declare-fun m!69743 () Bool)

(assert (=> b!71998 m!69743))

(assert (=> b!71998 m!69743))

(declare-fun m!69745 () Bool)

(assert (=> b!71998 m!69745))

(assert (=> d!15943 d!16365))

(declare-fun bm!6255 () Bool)

(declare-fun c!10560 () Bool)

(declare-fun call!6258 () Bool)

(assert (=> bm!6255 (= call!6258 (arrayNoDuplicates!0 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (bvadd lt!31725 #b00000000000000000000000000000001) (ite c!10560 (Cons!1476 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) lt!31725) lt!31745) lt!31745)))))

(declare-fun b!72002 () Bool)

(declare-fun e!47115 () Bool)

(declare-fun e!47116 () Bool)

(assert (=> b!72002 (= e!47115 e!47116)))

(assert (=> b!72002 (= c!10560 (validKeyInArray!0 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) lt!31725)))))

(declare-fun d!16367 () Bool)

(declare-fun res!38342 () Bool)

(declare-fun e!47117 () Bool)

(assert (=> d!16367 (=> res!38342 e!47117)))

(assert (=> d!16367 (= res!38342 (bvsge lt!31725 (size!2078 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))))

(assert (=> d!16367 (= (arrayNoDuplicates!0 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) lt!31725 lt!31745) e!47117)))

(declare-fun b!72003 () Bool)

(assert (=> b!72003 (= e!47116 call!6258)))

(declare-fun b!72004 () Bool)

(declare-fun e!47118 () Bool)

(assert (=> b!72004 (= e!47118 (contains!718 lt!31745 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) lt!31725)))))

(declare-fun b!72005 () Bool)

(assert (=> b!72005 (= e!47116 call!6258)))

(declare-fun b!72006 () Bool)

(assert (=> b!72006 (= e!47117 e!47115)))

(declare-fun res!38343 () Bool)

(assert (=> b!72006 (=> (not res!38343) (not e!47115))))

(assert (=> b!72006 (= res!38343 (not e!47118))))

(declare-fun res!38341 () Bool)

(assert (=> b!72006 (=> (not res!38341) (not e!47118))))

(assert (=> b!72006 (= res!38341 (validKeyInArray!0 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) lt!31725)))))

(assert (= (and d!16367 (not res!38342)) b!72006))

(assert (= (and b!72006 res!38341) b!72004))

(assert (= (and b!72006 res!38343) b!72002))

(assert (= (and b!72002 c!10560) b!72003))

(assert (= (and b!72002 (not c!10560)) b!72005))

(assert (= (or b!72003 b!72005) bm!6255))

(declare-fun m!69747 () Bool)

(assert (=> bm!6255 m!69747))

(declare-fun m!69749 () Bool)

(assert (=> bm!6255 m!69749))

(assert (=> b!72002 m!69747))

(assert (=> b!72002 m!69747))

(declare-fun m!69751 () Bool)

(assert (=> b!72002 m!69751))

(assert (=> b!72004 m!69747))

(assert (=> b!72004 m!69747))

(declare-fun m!69753 () Bool)

(assert (=> b!72004 m!69753))

(assert (=> b!72006 m!69747))

(assert (=> b!72006 m!69747))

(assert (=> b!72006 m!69751))

(assert (=> d!15943 d!16367))

(declare-fun bm!6256 () Bool)

(declare-fun call!6265 () Bool)

(declare-fun lt!32083 () ListLongMap!1397)

(assert (=> bm!6256 (= call!6265 (contains!716 lt!32083 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72007 () Bool)

(declare-fun e!47119 () Bool)

(assert (=> b!72007 (= e!47119 (= (apply!74 lt!32083 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!72008 () Bool)

(declare-fun e!47125 () ListLongMap!1397)

(declare-fun call!6261 () ListLongMap!1397)

(assert (=> b!72008 (= e!47125 call!6261)))

(declare-fun call!6259 () ListLongMap!1397)

(declare-fun bm!6257 () Bool)

(assert (=> bm!6257 (= call!6259 (getCurrentListMapNoExtraKeys!55 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!72009 () Bool)

(declare-fun e!47129 () Unit!1989)

(declare-fun Unit!2045 () Unit!1989)

(assert (=> b!72009 (= e!47129 Unit!2045)))

(declare-fun b!72010 () Bool)

(declare-fun e!47130 () Bool)

(declare-fun e!47124 () Bool)

(assert (=> b!72010 (= e!47130 e!47124)))

(declare-fun res!38350 () Bool)

(assert (=> b!72010 (=> (not res!38350) (not e!47124))))

(assert (=> b!72010 (= res!38350 (contains!716 lt!32083 (select (arr!1840 lt!31740) #b00000000000000000000000000000000)))))

(assert (=> b!72010 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 lt!31740)))))

(declare-fun b!72011 () Bool)

(declare-fun c!10562 () Bool)

(assert (=> b!72011 (= c!10562 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47120 () ListLongMap!1397)

(assert (=> b!72011 (= e!47120 e!47125)))

(declare-fun call!6264 () ListLongMap!1397)

(declare-fun c!10563 () Bool)

(declare-fun call!6260 () ListLongMap!1397)

(declare-fun c!10565 () Bool)

(declare-fun bm!6258 () Bool)

(declare-fun call!6263 () ListLongMap!1397)

(assert (=> bm!6258 (= call!6263 (+!91 (ite c!10565 call!6259 (ite c!10563 call!6264 call!6260)) (ite (or c!10565 c!10563) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun bm!6259 () Bool)

(declare-fun call!6262 () Bool)

(assert (=> bm!6259 (= call!6262 (contains!716 lt!32083 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72012 () Bool)

(declare-fun e!47123 () Bool)

(assert (=> b!72012 (= e!47123 (not call!6262))))

(declare-fun b!72013 () Bool)

(assert (=> b!72013 (= e!47124 (= (apply!74 lt!32083 (select (arr!1840 lt!31740) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 lt!31738) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72013 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 lt!31738)))))

(assert (=> b!72013 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 lt!31740)))))

(declare-fun b!72014 () Bool)

(declare-fun e!47131 () Bool)

(assert (=> b!72014 (= e!47131 (not call!6265))))

(declare-fun b!72015 () Bool)

(declare-fun e!47126 () ListLongMap!1397)

(assert (=> b!72015 (= e!47126 e!47120)))

(assert (=> b!72015 (= c!10563 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72016 () Bool)

(assert (=> b!72016 (= e!47125 call!6260)))

(declare-fun bm!6260 () Bool)

(assert (=> bm!6260 (= call!6261 call!6263)))

(declare-fun b!72017 () Bool)

(declare-fun e!47121 () Bool)

(assert (=> b!72017 (= e!47121 e!47131)))

(declare-fun c!10566 () Bool)

(assert (=> b!72017 (= c!10566 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6261 () Bool)

(assert (=> bm!6261 (= call!6264 call!6259)))

(declare-fun b!72018 () Bool)

(assert (=> b!72018 (= e!47120 call!6261)))

(declare-fun b!72019 () Bool)

(declare-fun res!38346 () Bool)

(assert (=> b!72019 (=> (not res!38346) (not e!47121))))

(assert (=> b!72019 (= res!38346 e!47130)))

(declare-fun res!38345 () Bool)

(assert (=> b!72019 (=> res!38345 e!47130)))

(declare-fun e!47128 () Bool)

(assert (=> b!72019 (= res!38345 (not e!47128))))

(declare-fun res!38347 () Bool)

(assert (=> b!72019 (=> (not res!38347) (not e!47128))))

(assert (=> b!72019 (= res!38347 (bvslt #b00000000000000000000000000000000 (size!2078 lt!31740)))))

(declare-fun b!72020 () Bool)

(assert (=> b!72020 (= e!47128 (validKeyInArray!0 (select (arr!1840 lt!31740) #b00000000000000000000000000000000)))))

(declare-fun b!72021 () Bool)

(declare-fun res!38351 () Bool)

(assert (=> b!72021 (=> (not res!38351) (not e!47121))))

(assert (=> b!72021 (= res!38351 e!47123)))

(declare-fun c!10564 () Bool)

(assert (=> b!72021 (= c!10564 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!72022 () Bool)

(declare-fun lt!32081 () Unit!1989)

(assert (=> b!72022 (= e!47129 lt!32081)))

(declare-fun lt!32065 () ListLongMap!1397)

(assert (=> b!72022 (= lt!32065 (getCurrentListMapNoExtraKeys!55 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32079 () (_ BitVec 64))

(assert (=> b!72022 (= lt!32079 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32066 () (_ BitVec 64))

(assert (=> b!72022 (= lt!32066 (select (arr!1840 lt!31740) #b00000000000000000000000000000000))))

(declare-fun lt!32067 () Unit!1989)

(assert (=> b!72022 (= lt!32067 (addStillContains!50 lt!32065 lt!32079 (zeroValue!2095 newMap!16) lt!32066))))

(assert (=> b!72022 (contains!716 (+!91 lt!32065 (tuple2!2113 lt!32079 (zeroValue!2095 newMap!16))) lt!32066)))

(declare-fun lt!32078 () Unit!1989)

(assert (=> b!72022 (= lt!32078 lt!32067)))

(declare-fun lt!32071 () ListLongMap!1397)

(assert (=> b!72022 (= lt!32071 (getCurrentListMapNoExtraKeys!55 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32076 () (_ BitVec 64))

(assert (=> b!72022 (= lt!32076 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32077 () (_ BitVec 64))

(assert (=> b!72022 (= lt!32077 (select (arr!1840 lt!31740) #b00000000000000000000000000000000))))

(declare-fun lt!32074 () Unit!1989)

(assert (=> b!72022 (= lt!32074 (addApplyDifferent!50 lt!32071 lt!32076 (minValue!2095 newMap!16) lt!32077))))

(assert (=> b!72022 (= (apply!74 (+!91 lt!32071 (tuple2!2113 lt!32076 (minValue!2095 newMap!16))) lt!32077) (apply!74 lt!32071 lt!32077))))

(declare-fun lt!32068 () Unit!1989)

(assert (=> b!72022 (= lt!32068 lt!32074)))

(declare-fun lt!32080 () ListLongMap!1397)

(assert (=> b!72022 (= lt!32080 (getCurrentListMapNoExtraKeys!55 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32082 () (_ BitVec 64))

(assert (=> b!72022 (= lt!32082 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32086 () (_ BitVec 64))

(assert (=> b!72022 (= lt!32086 (select (arr!1840 lt!31740) #b00000000000000000000000000000000))))

(declare-fun lt!32075 () Unit!1989)

(assert (=> b!72022 (= lt!32075 (addApplyDifferent!50 lt!32080 lt!32082 (zeroValue!2095 newMap!16) lt!32086))))

(assert (=> b!72022 (= (apply!74 (+!91 lt!32080 (tuple2!2113 lt!32082 (zeroValue!2095 newMap!16))) lt!32086) (apply!74 lt!32080 lt!32086))))

(declare-fun lt!32085 () Unit!1989)

(assert (=> b!72022 (= lt!32085 lt!32075)))

(declare-fun lt!32084 () ListLongMap!1397)

(assert (=> b!72022 (= lt!32084 (getCurrentListMapNoExtraKeys!55 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32073 () (_ BitVec 64))

(assert (=> b!72022 (= lt!32073 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32069 () (_ BitVec 64))

(assert (=> b!72022 (= lt!32069 (select (arr!1840 lt!31740) #b00000000000000000000000000000000))))

(assert (=> b!72022 (= lt!32081 (addApplyDifferent!50 lt!32084 lt!32073 (minValue!2095 newMap!16) lt!32069))))

(assert (=> b!72022 (= (apply!74 (+!91 lt!32084 (tuple2!2113 lt!32073 (minValue!2095 newMap!16))) lt!32069) (apply!74 lt!32084 lt!32069))))

(declare-fun b!72023 () Bool)

(declare-fun e!47127 () Bool)

(assert (=> b!72023 (= e!47131 e!47127)))

(declare-fun res!38344 () Bool)

(assert (=> b!72023 (= res!38344 call!6265)))

(assert (=> b!72023 (=> (not res!38344) (not e!47127))))

(declare-fun b!72024 () Bool)

(assert (=> b!72024 (= e!47123 e!47119)))

(declare-fun res!38352 () Bool)

(assert (=> b!72024 (= res!38352 call!6262)))

(assert (=> b!72024 (=> (not res!38352) (not e!47119))))

(declare-fun d!16369 () Bool)

(assert (=> d!16369 e!47121))

(declare-fun res!38348 () Bool)

(assert (=> d!16369 (=> (not res!38348) (not e!47121))))

(assert (=> d!16369 (= res!38348 (or (bvsge #b00000000000000000000000000000000 (size!2078 lt!31740)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 lt!31740)))))))

(declare-fun lt!32072 () ListLongMap!1397)

(assert (=> d!16369 (= lt!32083 lt!32072)))

(declare-fun lt!32070 () Unit!1989)

(assert (=> d!16369 (= lt!32070 e!47129)))

(declare-fun c!10561 () Bool)

(declare-fun e!47122 () Bool)

(assert (=> d!16369 (= c!10561 e!47122)))

(declare-fun res!38349 () Bool)

(assert (=> d!16369 (=> (not res!38349) (not e!47122))))

(assert (=> d!16369 (= res!38349 (bvslt #b00000000000000000000000000000000 (size!2078 lt!31740)))))

(assert (=> d!16369 (= lt!32072 e!47126)))

(assert (=> d!16369 (= c!10565 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16369 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16369 (= (getCurrentListMap!407 lt!31740 lt!31738 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32083)))

(declare-fun b!72025 () Bool)

(assert (=> b!72025 (= e!47127 (= (apply!74 lt!32083 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun b!72026 () Bool)

(assert (=> b!72026 (= e!47122 (validKeyInArray!0 (select (arr!1840 lt!31740) #b00000000000000000000000000000000)))))

(declare-fun b!72027 () Bool)

(assert (=> b!72027 (= e!47126 (+!91 call!6263 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun bm!6262 () Bool)

(assert (=> bm!6262 (= call!6260 call!6264)))

(assert (= (and d!16369 c!10565) b!72027))

(assert (= (and d!16369 (not c!10565)) b!72015))

(assert (= (and b!72015 c!10563) b!72018))

(assert (= (and b!72015 (not c!10563)) b!72011))

(assert (= (and b!72011 c!10562) b!72008))

(assert (= (and b!72011 (not c!10562)) b!72016))

(assert (= (or b!72008 b!72016) bm!6262))

(assert (= (or b!72018 bm!6262) bm!6261))

(assert (= (or b!72018 b!72008) bm!6260))

(assert (= (or b!72027 bm!6261) bm!6257))

(assert (= (or b!72027 bm!6260) bm!6258))

(assert (= (and d!16369 res!38349) b!72026))

(assert (= (and d!16369 c!10561) b!72022))

(assert (= (and d!16369 (not c!10561)) b!72009))

(assert (= (and d!16369 res!38348) b!72019))

(assert (= (and b!72019 res!38347) b!72020))

(assert (= (and b!72019 (not res!38345)) b!72010))

(assert (= (and b!72010 res!38350) b!72013))

(assert (= (and b!72019 res!38346) b!72021))

(assert (= (and b!72021 c!10564) b!72024))

(assert (= (and b!72021 (not c!10564)) b!72012))

(assert (= (and b!72024 res!38352) b!72007))

(assert (= (or b!72024 b!72012) bm!6259))

(assert (= (and b!72021 res!38351) b!72017))

(assert (= (and b!72017 c!10566) b!72023))

(assert (= (and b!72017 (not c!10566)) b!72014))

(assert (= (and b!72023 res!38344) b!72025))

(assert (= (or b!72023 b!72014) bm!6256))

(declare-fun b_lambda!3219 () Bool)

(assert (=> (not b_lambda!3219) (not b!72013)))

(assert (=> b!72013 t!5019))

(declare-fun b_and!4425 () Bool)

(assert (= b_and!4421 (and (=> t!5019 result!2661) b_and!4425)))

(assert (=> b!72013 t!5021))

(declare-fun b_and!4427 () Bool)

(assert (= b_and!4423 (and (=> t!5021 result!2663) b_and!4427)))

(declare-fun m!69755 () Bool)

(assert (=> b!72027 m!69755))

(declare-fun m!69757 () Bool)

(assert (=> b!72026 m!69757))

(assert (=> b!72026 m!69757))

(declare-fun m!69759 () Bool)

(assert (=> b!72026 m!69759))

(assert (=> b!72013 m!67865))

(assert (=> b!72013 m!69757))

(declare-fun m!69761 () Bool)

(assert (=> b!72013 m!69761))

(assert (=> b!72013 m!67865))

(declare-fun m!69763 () Bool)

(assert (=> b!72013 m!69763))

(assert (=> b!72013 m!69757))

(declare-fun m!69765 () Bool)

(assert (=> b!72013 m!69765))

(assert (=> b!72013 m!69761))

(assert (=> b!72020 m!69757))

(assert (=> b!72020 m!69757))

(assert (=> b!72020 m!69759))

(assert (=> d!16369 m!67873))

(assert (=> b!72010 m!69757))

(assert (=> b!72010 m!69757))

(declare-fun m!69767 () Bool)

(assert (=> b!72010 m!69767))

(declare-fun m!69769 () Bool)

(assert (=> b!72007 m!69769))

(declare-fun m!69771 () Bool)

(assert (=> bm!6259 m!69771))

(declare-fun m!69773 () Bool)

(assert (=> bm!6258 m!69773))

(declare-fun m!69775 () Bool)

(assert (=> bm!6257 m!69775))

(declare-fun m!69777 () Bool)

(assert (=> bm!6256 m!69777))

(declare-fun m!69779 () Bool)

(assert (=> b!72025 m!69779))

(declare-fun m!69781 () Bool)

(assert (=> b!72022 m!69781))

(declare-fun m!69783 () Bool)

(assert (=> b!72022 m!69783))

(declare-fun m!69785 () Bool)

(assert (=> b!72022 m!69785))

(assert (=> b!72022 m!69775))

(assert (=> b!72022 m!69757))

(declare-fun m!69787 () Bool)

(assert (=> b!72022 m!69787))

(declare-fun m!69789 () Bool)

(assert (=> b!72022 m!69789))

(assert (=> b!72022 m!69787))

(declare-fun m!69791 () Bool)

(assert (=> b!72022 m!69791))

(declare-fun m!69793 () Bool)

(assert (=> b!72022 m!69793))

(assert (=> b!72022 m!69789))

(declare-fun m!69795 () Bool)

(assert (=> b!72022 m!69795))

(declare-fun m!69797 () Bool)

(assert (=> b!72022 m!69797))

(declare-fun m!69799 () Bool)

(assert (=> b!72022 m!69799))

(declare-fun m!69801 () Bool)

(assert (=> b!72022 m!69801))

(declare-fun m!69803 () Bool)

(assert (=> b!72022 m!69803))

(declare-fun m!69805 () Bool)

(assert (=> b!72022 m!69805))

(assert (=> b!72022 m!69797))

(declare-fun m!69807 () Bool)

(assert (=> b!72022 m!69807))

(assert (=> b!72022 m!69805))

(declare-fun m!69809 () Bool)

(assert (=> b!72022 m!69809))

(assert (=> d!15943 d!16369))

(assert (=> d!15943 d!15763))

(assert (=> d!15943 d!16089))

(declare-fun d!16371 () Bool)

(assert (=> d!16371 (arrayContainsKey!0 lt!31747 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!32087 () Unit!1989)

(assert (=> d!16371 (= lt!32087 (choose!13 lt!31747 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))))))

(assert (=> d!16371 (bvsge (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000000)))

(assert (=> d!16371 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!31747 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341))) lt!32087)))

(declare-fun bs!3100 () Bool)

(assert (= bs!3100 d!16371))

(assert (=> bs!3100 m!67435))

(assert (=> bs!3100 m!68585))

(assert (=> bs!3100 m!67435))

(declare-fun m!69811 () Bool)

(assert (=> bs!3100 m!69811))

(assert (=> d!15943 d!16371))

(declare-fun d!16373 () Bool)

(declare-fun res!38353 () Bool)

(declare-fun e!47132 () Bool)

(assert (=> d!16373 (=> res!38353 e!47132)))

(assert (=> d!16373 (= res!38353 (= (select (arr!1840 lt!31747) #b00000000000000000000000000000000) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> d!16373 (= (arrayContainsKey!0 lt!31747 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000) e!47132)))

(declare-fun b!72028 () Bool)

(declare-fun e!47133 () Bool)

(assert (=> b!72028 (= e!47132 e!47133)))

(declare-fun res!38354 () Bool)

(assert (=> b!72028 (=> (not res!38354) (not e!47133))))

(assert (=> b!72028 (= res!38354 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 lt!31747)))))

(declare-fun b!72029 () Bool)

(assert (=> b!72029 (= e!47133 (arrayContainsKey!0 lt!31747 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16373 (not res!38353)) b!72028))

(assert (= (and b!72028 res!38354) b!72029))

(declare-fun m!69813 () Bool)

(assert (=> d!16373 m!69813))

(assert (=> b!72029 m!67435))

(declare-fun m!69815 () Bool)

(assert (=> b!72029 m!69815))

(assert (=> d!15943 d!16373))

(declare-fun bm!6263 () Bool)

(declare-fun call!6272 () Bool)

(declare-fun lt!32106 () ListLongMap!1397)

(assert (=> bm!6263 (= call!6272 (contains!716 lt!32106 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72030 () Bool)

(declare-fun e!47134 () Bool)

(assert (=> b!72030 (= e!47134 (= (apply!74 lt!32106 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!72031 () Bool)

(declare-fun e!47140 () ListLongMap!1397)

(declare-fun call!6268 () ListLongMap!1397)

(assert (=> b!72031 (= e!47140 call!6268)))

(declare-fun bm!6264 () Bool)

(declare-fun call!6266 () ListLongMap!1397)

(assert (=> bm!6264 (= call!6266 (getCurrentListMapNoExtraKeys!55 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!72032 () Bool)

(declare-fun e!47144 () Unit!1989)

(declare-fun Unit!2046 () Unit!1989)

(assert (=> b!72032 (= e!47144 Unit!2046)))

(declare-fun b!72033 () Bool)

(declare-fun e!47145 () Bool)

(declare-fun e!47139 () Bool)

(assert (=> b!72033 (= e!47145 e!47139)))

(declare-fun res!38361 () Bool)

(assert (=> b!72033 (=> (not res!38361) (not e!47139))))

(assert (=> b!72033 (= res!38361 (contains!716 lt!32106 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!72033 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))))

(declare-fun b!72034 () Bool)

(declare-fun c!10568 () Bool)

(assert (=> b!72034 (= c!10568 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47135 () ListLongMap!1397)

(assert (=> b!72034 (= e!47135 e!47140)))

(declare-fun call!6270 () ListLongMap!1397)

(declare-fun bm!6265 () Bool)

(declare-fun call!6267 () ListLongMap!1397)

(declare-fun c!10569 () Bool)

(declare-fun call!6271 () ListLongMap!1397)

(declare-fun c!10571 () Bool)

(assert (=> bm!6265 (= call!6270 (+!91 (ite c!10571 call!6266 (ite c!10569 call!6271 call!6267)) (ite (or c!10571 c!10569) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun bm!6266 () Bool)

(declare-fun call!6269 () Bool)

(assert (=> bm!6266 (= call!6269 (contains!716 lt!32106 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72035 () Bool)

(declare-fun e!47138 () Bool)

(assert (=> b!72035 (= e!47138 (not call!6269))))

(declare-fun b!72036 () Bool)

(assert (=> b!72036 (= e!47139 (= (apply!74 lt!32106 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72036 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))))))

(assert (=> b!72036 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))))

(declare-fun b!72037 () Bool)

(declare-fun e!47146 () Bool)

(assert (=> b!72037 (= e!47146 (not call!6272))))

(declare-fun b!72038 () Bool)

(declare-fun e!47141 () ListLongMap!1397)

(assert (=> b!72038 (= e!47141 e!47135)))

(assert (=> b!72038 (= c!10569 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72039 () Bool)

(assert (=> b!72039 (= e!47140 call!6267)))

(declare-fun bm!6267 () Bool)

(assert (=> bm!6267 (= call!6268 call!6270)))

(declare-fun b!72040 () Bool)

(declare-fun e!47136 () Bool)

(assert (=> b!72040 (= e!47136 e!47146)))

(declare-fun c!10572 () Bool)

(assert (=> b!72040 (= c!10572 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6268 () Bool)

(assert (=> bm!6268 (= call!6271 call!6266)))

(declare-fun b!72041 () Bool)

(assert (=> b!72041 (= e!47135 call!6268)))

(declare-fun b!72042 () Bool)

(declare-fun res!38357 () Bool)

(assert (=> b!72042 (=> (not res!38357) (not e!47136))))

(assert (=> b!72042 (= res!38357 e!47145)))

(declare-fun res!38356 () Bool)

(assert (=> b!72042 (=> res!38356 e!47145)))

(declare-fun e!47143 () Bool)

(assert (=> b!72042 (= res!38356 (not e!47143))))

(declare-fun res!38358 () Bool)

(assert (=> b!72042 (=> (not res!38358) (not e!47143))))

(assert (=> b!72042 (= res!38358 (bvslt #b00000000000000000000000000000000 (size!2078 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))))

(declare-fun b!72043 () Bool)

(assert (=> b!72043 (= e!47143 (validKeyInArray!0 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!72044 () Bool)

(declare-fun res!38362 () Bool)

(assert (=> b!72044 (=> (not res!38362) (not e!47136))))

(assert (=> b!72044 (= res!38362 e!47138)))

(declare-fun c!10570 () Bool)

(assert (=> b!72044 (= c!10570 (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!72045 () Bool)

(declare-fun lt!32104 () Unit!1989)

(assert (=> b!72045 (= e!47144 lt!32104)))

(declare-fun lt!32088 () ListLongMap!1397)

(assert (=> b!72045 (= lt!32088 (getCurrentListMapNoExtraKeys!55 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32102 () (_ BitVec 64))

(assert (=> b!72045 (= lt!32102 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32089 () (_ BitVec 64))

(assert (=> b!72045 (= lt!32089 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32090 () Unit!1989)

(assert (=> b!72045 (= lt!32090 (addStillContains!50 lt!32088 lt!32102 (zeroValue!2095 newMap!16) lt!32089))))

(assert (=> b!72045 (contains!716 (+!91 lt!32088 (tuple2!2113 lt!32102 (zeroValue!2095 newMap!16))) lt!32089)))

(declare-fun lt!32101 () Unit!1989)

(assert (=> b!72045 (= lt!32101 lt!32090)))

(declare-fun lt!32094 () ListLongMap!1397)

(assert (=> b!72045 (= lt!32094 (getCurrentListMapNoExtraKeys!55 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32099 () (_ BitVec 64))

(assert (=> b!72045 (= lt!32099 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32100 () (_ BitVec 64))

(assert (=> b!72045 (= lt!32100 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32097 () Unit!1989)

(assert (=> b!72045 (= lt!32097 (addApplyDifferent!50 lt!32094 lt!32099 (minValue!2095 newMap!16) lt!32100))))

(assert (=> b!72045 (= (apply!74 (+!91 lt!32094 (tuple2!2113 lt!32099 (minValue!2095 newMap!16))) lt!32100) (apply!74 lt!32094 lt!32100))))

(declare-fun lt!32091 () Unit!1989)

(assert (=> b!72045 (= lt!32091 lt!32097)))

(declare-fun lt!32103 () ListLongMap!1397)

(assert (=> b!72045 (= lt!32103 (getCurrentListMapNoExtraKeys!55 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32105 () (_ BitVec 64))

(assert (=> b!72045 (= lt!32105 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32109 () (_ BitVec 64))

(assert (=> b!72045 (= lt!32109 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!32098 () Unit!1989)

(assert (=> b!72045 (= lt!32098 (addApplyDifferent!50 lt!32103 lt!32105 (zeroValue!2095 newMap!16) lt!32109))))

(assert (=> b!72045 (= (apply!74 (+!91 lt!32103 (tuple2!2113 lt!32105 (zeroValue!2095 newMap!16))) lt!32109) (apply!74 lt!32103 lt!32109))))

(declare-fun lt!32108 () Unit!1989)

(assert (=> b!72045 (= lt!32108 lt!32098)))

(declare-fun lt!32107 () ListLongMap!1397)

(assert (=> b!72045 (= lt!32107 (getCurrentListMapNoExtraKeys!55 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32096 () (_ BitVec 64))

(assert (=> b!72045 (= lt!32096 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32092 () (_ BitVec 64))

(assert (=> b!72045 (= lt!32092 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!72045 (= lt!32104 (addApplyDifferent!50 lt!32107 lt!32096 (minValue!2095 newMap!16) lt!32092))))

(assert (=> b!72045 (= (apply!74 (+!91 lt!32107 (tuple2!2113 lt!32096 (minValue!2095 newMap!16))) lt!32092) (apply!74 lt!32107 lt!32092))))

(declare-fun b!72046 () Bool)

(declare-fun e!47142 () Bool)

(assert (=> b!72046 (= e!47146 e!47142)))

(declare-fun res!38355 () Bool)

(assert (=> b!72046 (= res!38355 call!6272)))

(assert (=> b!72046 (=> (not res!38355) (not e!47142))))

(declare-fun b!72047 () Bool)

(assert (=> b!72047 (= e!47138 e!47134)))

(declare-fun res!38363 () Bool)

(assert (=> b!72047 (= res!38363 call!6269)))

(assert (=> b!72047 (=> (not res!38363) (not e!47134))))

(declare-fun d!16375 () Bool)

(assert (=> d!16375 e!47136))

(declare-fun res!38359 () Bool)

(assert (=> d!16375 (=> (not res!38359) (not e!47136))))

(assert (=> d!16375 (= res!38359 (or (bvsge #b00000000000000000000000000000000 (size!2078 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))))))

(declare-fun lt!32095 () ListLongMap!1397)

(assert (=> d!16375 (= lt!32106 lt!32095)))

(declare-fun lt!32093 () Unit!1989)

(assert (=> d!16375 (= lt!32093 e!47144)))

(declare-fun c!10567 () Bool)

(declare-fun e!47137 () Bool)

(assert (=> d!16375 (= c!10567 e!47137)))

(declare-fun res!38360 () Bool)

(assert (=> d!16375 (=> (not res!38360) (not e!47137))))

(assert (=> d!16375 (= res!38360 (bvslt #b00000000000000000000000000000000 (size!2078 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))))))))

(assert (=> d!16375 (= lt!32095 e!47141)))

(assert (=> d!16375 (= c!10571 (and (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2054 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16375 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16375 (= (getCurrentListMap!407 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32106)))

(declare-fun b!72048 () Bool)

(assert (=> b!72048 (= e!47142 (= (apply!74 lt!32106 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun b!72049 () Bool)

(assert (=> b!72049 (= e!47137 (validKeyInArray!0 (select (arr!1840 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!72050 () Bool)

(assert (=> b!72050 (= e!47141 (+!91 call!6270 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun bm!6269 () Bool)

(assert (=> bm!6269 (= call!6267 call!6271)))

(assert (= (and d!16375 c!10571) b!72050))

(assert (= (and d!16375 (not c!10571)) b!72038))

(assert (= (and b!72038 c!10569) b!72041))

(assert (= (and b!72038 (not c!10569)) b!72034))

(assert (= (and b!72034 c!10568) b!72031))

(assert (= (and b!72034 (not c!10568)) b!72039))

(assert (= (or b!72031 b!72039) bm!6269))

(assert (= (or b!72041 bm!6269) bm!6268))

(assert (= (or b!72041 b!72031) bm!6267))

(assert (= (or b!72050 bm!6268) bm!6264))

(assert (= (or b!72050 bm!6267) bm!6265))

(assert (= (and d!16375 res!38360) b!72049))

(assert (= (and d!16375 c!10567) b!72045))

(assert (= (and d!16375 (not c!10567)) b!72032))

(assert (= (and d!16375 res!38359) b!72042))

(assert (= (and b!72042 res!38358) b!72043))

(assert (= (and b!72042 (not res!38356)) b!72033))

(assert (= (and b!72033 res!38361) b!72036))

(assert (= (and b!72042 res!38357) b!72044))

(assert (= (and b!72044 c!10570) b!72047))

(assert (= (and b!72044 (not c!10570)) b!72035))

(assert (= (and b!72047 res!38363) b!72030))

(assert (= (or b!72047 b!72035) bm!6266))

(assert (= (and b!72044 res!38362) b!72040))

(assert (= (and b!72040 c!10572) b!72046))

(assert (= (and b!72040 (not c!10572)) b!72037))

(assert (= (and b!72046 res!38355) b!72048))

(assert (= (or b!72046 b!72037) bm!6263))

(declare-fun b_lambda!3221 () Bool)

(assert (=> (not b_lambda!3221) (not b!72036)))

(assert (=> b!72036 t!5019))

(declare-fun b_and!4429 () Bool)

(assert (= b_and!4425 (and (=> t!5019 result!2661) b_and!4429)))

(assert (=> b!72036 t!5021))

(declare-fun b_and!4431 () Bool)

(assert (= b_and!4427 (and (=> t!5021 result!2663) b_and!4431)))

(declare-fun m!69817 () Bool)

(assert (=> b!72050 m!69817))

(assert (=> b!72049 m!69711))

(assert (=> b!72049 m!69711))

(assert (=> b!72049 m!69719))

(assert (=> b!72036 m!67865))

(assert (=> b!72036 m!69711))

(declare-fun m!69819 () Bool)

(assert (=> b!72036 m!69819))

(assert (=> b!72036 m!67865))

(declare-fun m!69821 () Bool)

(assert (=> b!72036 m!69821))

(assert (=> b!72036 m!69711))

(declare-fun m!69823 () Bool)

(assert (=> b!72036 m!69823))

(assert (=> b!72036 m!69819))

(assert (=> b!72043 m!69711))

(assert (=> b!72043 m!69711))

(assert (=> b!72043 m!69719))

(assert (=> d!16375 m!67873))

(assert (=> b!72033 m!69711))

(assert (=> b!72033 m!69711))

(declare-fun m!69825 () Bool)

(assert (=> b!72033 m!69825))

(declare-fun m!69827 () Bool)

(assert (=> b!72030 m!69827))

(declare-fun m!69829 () Bool)

(assert (=> bm!6266 m!69829))

(declare-fun m!69831 () Bool)

(assert (=> bm!6265 m!69831))

(declare-fun m!69833 () Bool)

(assert (=> bm!6264 m!69833))

(declare-fun m!69835 () Bool)

(assert (=> bm!6263 m!69835))

(declare-fun m!69837 () Bool)

(assert (=> b!72048 m!69837))

(declare-fun m!69839 () Bool)

(assert (=> b!72045 m!69839))

(declare-fun m!69841 () Bool)

(assert (=> b!72045 m!69841))

(declare-fun m!69843 () Bool)

(assert (=> b!72045 m!69843))

(assert (=> b!72045 m!69833))

(assert (=> b!72045 m!69711))

(declare-fun m!69845 () Bool)

(assert (=> b!72045 m!69845))

(declare-fun m!69847 () Bool)

(assert (=> b!72045 m!69847))

(assert (=> b!72045 m!69845))

(declare-fun m!69849 () Bool)

(assert (=> b!72045 m!69849))

(declare-fun m!69851 () Bool)

(assert (=> b!72045 m!69851))

(assert (=> b!72045 m!69847))

(declare-fun m!69853 () Bool)

(assert (=> b!72045 m!69853))

(declare-fun m!69855 () Bool)

(assert (=> b!72045 m!69855))

(declare-fun m!69857 () Bool)

(assert (=> b!72045 m!69857))

(declare-fun m!69859 () Bool)

(assert (=> b!72045 m!69859))

(declare-fun m!69861 () Bool)

(assert (=> b!72045 m!69861))

(declare-fun m!69863 () Bool)

(assert (=> b!72045 m!69863))

(assert (=> b!72045 m!69855))

(declare-fun m!69865 () Bool)

(assert (=> b!72045 m!69865))

(assert (=> b!72045 m!69863))

(declare-fun m!69867 () Bool)

(assert (=> b!72045 m!69867))

(assert (=> d!15943 d!16375))

(declare-fun d!16377 () Bool)

(declare-fun e!47149 () Bool)

(assert (=> d!16377 e!47149))

(declare-fun res!38366 () Bool)

(assert (=> d!16377 (=> (not res!38366) (not e!47149))))

(assert (=> d!16377 (= res!38366 (and (bvsge (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) #b00000000000000000000000000000000) (bvslt (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (size!2078 (_keys!3838 newMap!16)))))))

(declare-fun lt!32112 () Unit!1989)

(declare-fun choose!41 (array!3857 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1480) Unit!1989)

(assert (=> d!16377 (= lt!32112 (choose!41 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) lt!31725 lt!31745))))

(assert (=> d!16377 (bvslt (size!2078 (_keys!3838 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!16377 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) lt!31725 lt!31745) lt!32112)))

(declare-fun b!72053 () Bool)

(assert (=> b!72053 (= e!47149 (arrayNoDuplicates!0 (array!3858 (store (arr!1840 (_keys!3838 newMap!16)) (ite c!10255 (index!3085 lt!31341) (index!3082 lt!31341)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (size!2078 (_keys!3838 newMap!16))) lt!31725 lt!31745))))

(assert (= (and d!16377 res!38366) b!72053))

(assert (=> d!16377 m!67435))

(declare-fun m!69869 () Bool)

(assert (=> d!16377 m!69869))

(assert (=> b!72053 m!68571))

(assert (=> b!72053 m!68587))

(assert (=> d!15943 d!16377))

(declare-fun d!16379 () Bool)

(declare-fun res!38367 () Bool)

(declare-fun e!47150 () Bool)

(assert (=> d!16379 (=> res!38367 e!47150)))

(assert (=> d!16379 (= res!38367 (and ((_ is Cons!1475) (toList!714 lt!31358)) (= (_1!1067 (h!2061 (toList!714 lt!31358))) (_1!1067 lt!31109))))))

(assert (=> d!16379 (= (containsKey!134 (toList!714 lt!31358) (_1!1067 lt!31109)) e!47150)))

(declare-fun b!72054 () Bool)

(declare-fun e!47151 () Bool)

(assert (=> b!72054 (= e!47150 e!47151)))

(declare-fun res!38368 () Bool)

(assert (=> b!72054 (=> (not res!38368) (not e!47151))))

(assert (=> b!72054 (= res!38368 (and (or (not ((_ is Cons!1475) (toList!714 lt!31358))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31358))) (_1!1067 lt!31109))) ((_ is Cons!1475) (toList!714 lt!31358)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31358))) (_1!1067 lt!31109))))))

(declare-fun b!72055 () Bool)

(assert (=> b!72055 (= e!47151 (containsKey!134 (t!5006 (toList!714 lt!31358)) (_1!1067 lt!31109)))))

(assert (= (and d!16379 (not res!38367)) b!72054))

(assert (= (and b!72054 res!38368) b!72055))

(declare-fun m!69871 () Bool)

(assert (=> b!72055 m!69871))

(assert (=> d!15807 d!16379))

(declare-fun b!72056 () Bool)

(declare-fun e!47152 () Option!136)

(assert (=> b!72056 (= e!47152 (Some!135 (_2!1067 (h!2061 (t!5006 (toList!714 lt!31365))))))))

(declare-fun d!16381 () Bool)

(declare-fun c!10573 () Bool)

(assert (=> d!16381 (= c!10573 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31365))) (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31365)))) (_1!1067 lt!31109))))))

(assert (=> d!16381 (= (getValueByKey!130 (t!5006 (toList!714 lt!31365)) (_1!1067 lt!31109)) e!47152)))

(declare-fun b!72057 () Bool)

(declare-fun e!47153 () Option!136)

(assert (=> b!72057 (= e!47152 e!47153)))

(declare-fun c!10574 () Bool)

(assert (=> b!72057 (= c!10574 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31365))) (not (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31365)))) (_1!1067 lt!31109)))))))

(declare-fun b!72059 () Bool)

(assert (=> b!72059 (= e!47153 None!134)))

(declare-fun b!72058 () Bool)

(assert (=> b!72058 (= e!47153 (getValueByKey!130 (t!5006 (t!5006 (toList!714 lt!31365))) (_1!1067 lt!31109)))))

(assert (= (and d!16381 c!10573) b!72056))

(assert (= (and d!16381 (not c!10573)) b!72057))

(assert (= (and b!72057 c!10574) b!72058))

(assert (= (and b!72057 (not c!10574)) b!72059))

(declare-fun m!69873 () Bool)

(assert (=> b!72058 m!69873))

(assert (=> b!71443 d!16381))

(assert (=> b!71091 d!16127))

(declare-fun lt!32113 () Bool)

(declare-fun d!16383 () Bool)

(assert (=> d!16383 (= lt!32113 (select (content!76 (toList!714 lt!31585)) (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun e!47154 () Bool)

(assert (=> d!16383 (= lt!32113 e!47154)))

(declare-fun res!38370 () Bool)

(assert (=> d!16383 (=> (not res!38370) (not e!47154))))

(assert (=> d!16383 (= res!38370 ((_ is Cons!1475) (toList!714 lt!31585)))))

(assert (=> d!16383 (= (contains!717 (toList!714 lt!31585) (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!32113)))

(declare-fun b!72060 () Bool)

(declare-fun e!47155 () Bool)

(assert (=> b!72060 (= e!47154 e!47155)))

(declare-fun res!38369 () Bool)

(assert (=> b!72060 (=> res!38369 e!47155)))

(assert (=> b!72060 (= res!38369 (= (h!2061 (toList!714 lt!31585)) (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!72061 () Bool)

(assert (=> b!72061 (= e!47155 (contains!717 (t!5006 (toList!714 lt!31585)) (tuple2!2113 lt!31244 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!16383 res!38370) b!72060))

(assert (= (and b!72060 (not res!38369)) b!72061))

(declare-fun m!69875 () Bool)

(assert (=> d!16383 m!69875))

(declare-fun m!69877 () Bool)

(assert (=> d!16383 m!69877))

(declare-fun m!69879 () Bool)

(assert (=> b!72061 m!69879))

(assert (=> b!71252 d!16383))

(declare-fun d!16385 () Bool)

(declare-fun lt!32114 () Bool)

(assert (=> d!16385 (= lt!32114 (select (content!76 (t!5006 (toList!714 lt!31358))) lt!31109))))

(declare-fun e!47156 () Bool)

(assert (=> d!16385 (= lt!32114 e!47156)))

(declare-fun res!38372 () Bool)

(assert (=> d!16385 (=> (not res!38372) (not e!47156))))

(assert (=> d!16385 (= res!38372 ((_ is Cons!1475) (t!5006 (toList!714 lt!31358))))))

(assert (=> d!16385 (= (contains!717 (t!5006 (toList!714 lt!31358)) lt!31109) lt!32114)))

(declare-fun b!72062 () Bool)

(declare-fun e!47157 () Bool)

(assert (=> b!72062 (= e!47156 e!47157)))

(declare-fun res!38371 () Bool)

(assert (=> b!72062 (=> res!38371 e!47157)))

(assert (=> b!72062 (= res!38371 (= (h!2061 (t!5006 (toList!714 lt!31358))) lt!31109))))

(declare-fun b!72063 () Bool)

(assert (=> b!72063 (= e!47157 (contains!717 (t!5006 (t!5006 (toList!714 lt!31358))) lt!31109))))

(assert (= (and d!16385 res!38372) b!72062))

(assert (= (and b!72062 (not res!38371)) b!72063))

(declare-fun m!69881 () Bool)

(assert (=> d!16385 m!69881))

(declare-fun m!69883 () Bool)

(assert (=> d!16385 m!69883))

(declare-fun m!69885 () Bool)

(assert (=> b!72063 m!69885))

(assert (=> b!71244 d!16385))

(declare-fun d!16387 () Bool)

(assert (=> d!16387 (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32115 () Unit!1989)

(assert (=> d!16387 (= lt!32115 (choose!405 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47158 () Bool)

(assert (=> d!16387 e!47158))

(declare-fun res!38373 () Bool)

(assert (=> d!16387 (=> (not res!38373) (not e!47158))))

(assert (=> d!16387 (= res!38373 (isStrictlySorted!286 (toList!714 lt!31388)))))

(assert (=> d!16387 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000) lt!32115)))

(declare-fun b!72064 () Bool)

(assert (=> b!72064 (= e!47158 (containsKey!134 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16387 res!38373) b!72064))

(assert (=> d!16387 m!68265))

(assert (=> d!16387 m!68265))

(assert (=> d!16387 m!68267))

(declare-fun m!69887 () Bool)

(assert (=> d!16387 m!69887))

(assert (=> d!16387 m!69463))

(assert (=> b!72064 m!68261))

(assert (=> b!71240 d!16387))

(declare-fun d!16389 () Bool)

(assert (=> d!16389 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3101 () Bool)

(assert (= bs!3101 d!16389))

(assert (=> bs!3101 m!68265))

(declare-fun m!69889 () Bool)

(assert (=> bs!3101 m!69889))

(assert (=> b!71240 d!16389))

(declare-fun b!72065 () Bool)

(declare-fun e!47159 () Option!136)

(assert (=> b!72065 (= e!47159 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31388)))))))

(declare-fun d!16391 () Bool)

(declare-fun c!10575 () Bool)

(assert (=> d!16391 (= c!10575 (and ((_ is Cons!1475) (toList!714 lt!31388)) (= (_1!1067 (h!2061 (toList!714 lt!31388))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16391 (= (getValueByKey!130 (toList!714 lt!31388) #b0000000000000000000000000000000000000000000000000000000000000000) e!47159)))

(declare-fun b!72066 () Bool)

(declare-fun e!47160 () Option!136)

(assert (=> b!72066 (= e!47159 e!47160)))

(declare-fun c!10576 () Bool)

(assert (=> b!72066 (= c!10576 (and ((_ is Cons!1475) (toList!714 lt!31388)) (not (= (_1!1067 (h!2061 (toList!714 lt!31388))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!72068 () Bool)

(assert (=> b!72068 (= e!47160 None!134)))

(declare-fun b!72067 () Bool)

(assert (=> b!72067 (= e!47160 (getValueByKey!130 (t!5006 (toList!714 lt!31388)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16391 c!10575) b!72065))

(assert (= (and d!16391 (not c!10575)) b!72066))

(assert (= (and b!72066 c!10576) b!72067))

(assert (= (and b!72066 (not c!10576)) b!72068))

(declare-fun m!69891 () Bool)

(assert (=> b!72067 m!69891))

(assert (=> b!71240 d!16391))

(assert (=> d!15819 d!16053))

(declare-fun bm!6270 () Bool)

(declare-fun call!6273 () Bool)

(assert (=> bm!6270 (= call!6273 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3838 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!72069 () Bool)

(declare-fun e!47162 () Bool)

(declare-fun e!47163 () Bool)

(assert (=> b!72069 (= e!47162 e!47163)))

(declare-fun lt!32117 () (_ BitVec 64))

(assert (=> b!72069 (= lt!32117 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!32118 () Unit!1989)

(assert (=> b!72069 (= lt!32118 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) lt!32117 #b00000000000000000000000000000000))))

(assert (=> b!72069 (arrayContainsKey!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) lt!32117 #b00000000000000000000000000000000)))

(declare-fun lt!32116 () Unit!1989)

(assert (=> b!72069 (= lt!32116 lt!32118)))

(declare-fun res!38374 () Bool)

(assert (=> b!72069 (= res!38374 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000) (_keys!3838 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992)))) (Found!238 #b00000000000000000000000000000000)))))

(assert (=> b!72069 (=> (not res!38374) (not e!47163))))

(declare-fun b!72070 () Bool)

(assert (=> b!72070 (= e!47163 call!6273)))

(declare-fun d!16393 () Bool)

(declare-fun res!38375 () Bool)

(declare-fun e!47161 () Bool)

(assert (=> d!16393 (=> res!38375 e!47161)))

(assert (=> d!16393 (= res!38375 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!16393 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (mask!6147 (v!2507 (underlying!253 thiss!992)))) e!47161)))

(declare-fun b!72071 () Bool)

(assert (=> b!72071 (= e!47161 e!47162)))

(declare-fun c!10577 () Bool)

(assert (=> b!72071 (= c!10577 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!72072 () Bool)

(assert (=> b!72072 (= e!47162 call!6273)))

(assert (= (and d!16393 (not res!38375)) b!72071))

(assert (= (and b!72071 c!10577) b!72069))

(assert (= (and b!72071 (not c!10577)) b!72072))

(assert (= (and b!72069 res!38374) b!72070))

(assert (= (or b!72070 b!72072) bm!6270))

(declare-fun m!69893 () Bool)

(assert (=> bm!6270 m!69893))

(assert (=> b!72069 m!69505))

(declare-fun m!69895 () Bool)

(assert (=> b!72069 m!69895))

(declare-fun m!69897 () Bool)

(assert (=> b!72069 m!69897))

(assert (=> b!72069 m!69505))

(declare-fun m!69899 () Bool)

(assert (=> b!72069 m!69899))

(assert (=> b!72071 m!69505))

(assert (=> b!72071 m!69505))

(assert (=> b!72071 m!69507))

(assert (=> b!71452 d!16393))

(declare-fun d!16395 () Bool)

(assert (=> d!16395 (isDefined!84 (getValueByKey!130 (toList!714 lt!31358) (_1!1067 lt!31109)))))

(declare-fun lt!32119 () Unit!1989)

(assert (=> d!16395 (= lt!32119 (choose!405 (toList!714 lt!31358) (_1!1067 lt!31109)))))

(declare-fun e!47164 () Bool)

(assert (=> d!16395 e!47164))

(declare-fun res!38376 () Bool)

(assert (=> d!16395 (=> (not res!38376) (not e!47164))))

(assert (=> d!16395 (= res!38376 (isStrictlySorted!286 (toList!714 lt!31358)))))

(assert (=> d!16395 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31358) (_1!1067 lt!31109)) lt!32119)))

(declare-fun b!72073 () Bool)

(assert (=> b!72073 (= e!47164 (containsKey!134 (toList!714 lt!31358) (_1!1067 lt!31109)))))

(assert (= (and d!16395 res!38376) b!72073))

(assert (=> d!16395 m!67745))

(assert (=> d!16395 m!67745))

(assert (=> d!16395 m!68019))

(declare-fun m!69901 () Bool)

(assert (=> d!16395 m!69901))

(declare-fun m!69903 () Bool)

(assert (=> d!16395 m!69903))

(assert (=> b!72073 m!68015))

(assert (=> b!71102 d!16395))

(declare-fun d!16397 () Bool)

(assert (=> d!16397 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31358) (_1!1067 lt!31109))) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31358) (_1!1067 lt!31109)))))))

(declare-fun bs!3102 () Bool)

(assert (= bs!3102 d!16397))

(assert (=> bs!3102 m!67745))

(declare-fun m!69905 () Bool)

(assert (=> bs!3102 m!69905))

(assert (=> b!71102 d!16397))

(assert (=> b!71102 d!15965))

(declare-fun d!16399 () Bool)

(declare-fun res!38377 () Bool)

(declare-fun e!47165 () Bool)

(assert (=> d!16399 (=> res!38377 e!47165)))

(assert (=> d!16399 (= res!38377 (and ((_ is Cons!1475) lt!31366) (= (_1!1067 (h!2061 lt!31366)) (_1!1067 lt!31109))))))

(assert (=> d!16399 (= (containsKey!134 lt!31366 (_1!1067 lt!31109)) e!47165)))

(declare-fun b!72074 () Bool)

(declare-fun e!47166 () Bool)

(assert (=> b!72074 (= e!47165 e!47166)))

(declare-fun res!38378 () Bool)

(assert (=> b!72074 (=> (not res!38378) (not e!47166))))

(assert (=> b!72074 (= res!38378 (and (or (not ((_ is Cons!1475) lt!31366)) (bvsle (_1!1067 (h!2061 lt!31366)) (_1!1067 lt!31109))) ((_ is Cons!1475) lt!31366) (bvslt (_1!1067 (h!2061 lt!31366)) (_1!1067 lt!31109))))))

(declare-fun b!72075 () Bool)

(assert (=> b!72075 (= e!47166 (containsKey!134 (t!5006 lt!31366) (_1!1067 lt!31109)))))

(assert (= (and d!16399 (not res!38377)) b!72074))

(assert (= (and b!72074 res!38378) b!72075))

(declare-fun m!69907 () Bool)

(assert (=> b!72075 m!69907))

(assert (=> b!71009 d!16399))

(declare-fun d!16401 () Bool)

(assert (=> d!16401 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389))))

(declare-fun lt!32120 () Unit!1989)

(assert (=> d!16401 (= lt!32120 (choose!405 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389))))

(declare-fun e!47167 () Bool)

(assert (=> d!16401 e!47167))

(declare-fun res!38379 () Bool)

(assert (=> d!16401 (=> (not res!38379) (not e!47167))))

(assert (=> d!16401 (= res!38379 (isStrictlySorted!286 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)))))))

(assert (=> d!16401 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389) lt!32120)))

(declare-fun b!72076 () Bool)

(assert (=> b!72076 (= e!47167 (containsKey!134 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389))))

(assert (= (and d!16401 res!38379) b!72076))

(assert (=> d!16401 m!68227))

(assert (=> d!16401 m!68227))

(assert (=> d!16401 m!68229))

(declare-fun m!69909 () Bool)

(assert (=> d!16401 m!69909))

(declare-fun m!69911 () Bool)

(assert (=> d!16401 m!69911))

(assert (=> b!72076 m!68223))

(assert (=> b!71222 d!16401))

(declare-fun d!16403 () Bool)

(assert (=> d!16403 (= (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389)) (not (isEmpty!318 (getValueByKey!130 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389))))))

(declare-fun bs!3103 () Bool)

(assert (= bs!3103 d!16403))

(assert (=> bs!3103 m!68227))

(declare-fun m!69913 () Bool)

(assert (=> bs!3103 m!69913))

(assert (=> b!71222 d!16403))

(declare-fun e!47168 () Option!136)

(declare-fun b!72077 () Bool)

(assert (=> b!72077 (= e!47168 (Some!135 (_2!1067 (h!2061 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)))))))))

(declare-fun d!16405 () Bool)

(declare-fun c!10578 () Bool)

(assert (=> d!16405 (= c!10578 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))))) lt!31389)))))

(assert (=> d!16405 (= (getValueByKey!130 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))) lt!31389) e!47168)))

(declare-fun b!72078 () Bool)

(declare-fun e!47169 () Option!136)

(assert (=> b!72078 (= e!47168 e!47169)))

(declare-fun c!10579 () Bool)

(assert (=> b!72078 (= c!10579 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)))) (not (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386))))) lt!31389))))))

(declare-fun b!72080 () Bool)

(assert (=> b!72080 (= e!47169 None!134)))

(declare-fun b!72079 () Bool)

(assert (=> b!72079 (= e!47169 (getValueByKey!130 (t!5006 (toList!714 (+!91 lt!31390 (tuple2!2113 lt!31387 lt!31386)))) lt!31389))))

(assert (= (and d!16405 c!10578) b!72077))

(assert (= (and d!16405 (not c!10578)) b!72078))

(assert (= (and b!72078 c!10579) b!72079))

(assert (= (and b!72078 (not c!10579)) b!72080))

(declare-fun m!69915 () Bool)

(assert (=> b!72079 m!69915))

(assert (=> b!71222 d!16405))

(declare-fun d!16407 () Bool)

(declare-fun res!38380 () Bool)

(declare-fun e!47170 () Bool)

(assert (=> d!16407 (=> res!38380 e!47170)))

(assert (=> d!16407 (= res!38380 (and ((_ is Cons!1475) (toList!714 e!46437)) (= (_1!1067 (h!2061 (toList!714 e!46437))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!16407 (= (containsKey!134 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) e!47170)))

(declare-fun b!72081 () Bool)

(declare-fun e!47171 () Bool)

(assert (=> b!72081 (= e!47170 e!47171)))

(declare-fun res!38381 () Bool)

(assert (=> b!72081 (=> (not res!38381) (not e!47171))))

(assert (=> b!72081 (= res!38381 (and (or (not ((_ is Cons!1475) (toList!714 e!46437))) (bvsle (_1!1067 (h!2061 (toList!714 e!46437))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1475) (toList!714 e!46437)) (bvslt (_1!1067 (h!2061 (toList!714 e!46437))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!72082 () Bool)

(assert (=> b!72082 (= e!47171 (containsKey!134 (t!5006 (toList!714 e!46437)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!16407 (not res!38380)) b!72081))

(assert (= (and b!72081 res!38381) b!72082))

(assert (=> b!72082 m!67435))

(declare-fun m!69917 () Bool)

(assert (=> b!72082 m!69917))

(assert (=> d!15967 d!16407))

(declare-fun d!16409 () Bool)

(declare-fun e!47172 () Bool)

(assert (=> d!16409 e!47172))

(declare-fun res!38382 () Bool)

(assert (=> d!16409 (=> (not res!38382) (not e!47172))))

(declare-fun lt!32122 () ListLongMap!1397)

(assert (=> d!16409 (= res!38382 (contains!716 lt!32122 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun lt!32123 () List!1479)

(assert (=> d!16409 (= lt!32122 (ListLongMap!1398 lt!32123))))

(declare-fun lt!32121 () Unit!1989)

(declare-fun lt!32124 () Unit!1989)

(assert (=> d!16409 (= lt!32121 lt!32124)))

(assert (=> d!16409 (= (getValueByKey!130 lt!32123 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16409 (= lt!32124 (lemmaContainsTupThenGetReturnValue!50 lt!32123 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16409 (= lt!32123 (insertStrictlySorted!53 (toList!714 call!6160) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (=> d!16409 (= (+!91 call!6160 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))) lt!32122)))

(declare-fun b!72083 () Bool)

(declare-fun res!38383 () Bool)

(assert (=> b!72083 (=> (not res!38383) (not e!47172))))

(assert (=> b!72083 (= res!38383 (= (getValueByKey!130 (toList!714 lt!32122) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(declare-fun b!72084 () Bool)

(assert (=> b!72084 (= e!47172 (contains!717 (toList!714 lt!32122) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(assert (= (and d!16409 res!38382) b!72083))

(assert (= (and b!72083 res!38383) b!72084))

(declare-fun m!69919 () Bool)

(assert (=> d!16409 m!69919))

(declare-fun m!69921 () Bool)

(assert (=> d!16409 m!69921))

(declare-fun m!69923 () Bool)

(assert (=> d!16409 m!69923))

(declare-fun m!69925 () Bool)

(assert (=> d!16409 m!69925))

(declare-fun m!69927 () Bool)

(assert (=> b!72083 m!69927))

(declare-fun m!69929 () Bool)

(assert (=> b!72084 m!69929))

(assert (=> b!71144 d!16409))

(declare-fun d!16411 () Bool)

(assert (=> d!16411 (isDefined!84 (getValueByKey!130 (toList!714 lt!31354) (_1!1067 lt!31103)))))

(declare-fun lt!32125 () Unit!1989)

(assert (=> d!16411 (= lt!32125 (choose!405 (toList!714 lt!31354) (_1!1067 lt!31103)))))

(declare-fun e!47173 () Bool)

(assert (=> d!16411 e!47173))

(declare-fun res!38384 () Bool)

(assert (=> d!16411 (=> (not res!38384) (not e!47173))))

(assert (=> d!16411 (= res!38384 (isStrictlySorted!286 (toList!714 lt!31354)))))

(assert (=> d!16411 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31354) (_1!1067 lt!31103)) lt!32125)))

(declare-fun b!72085 () Bool)

(assert (=> b!72085 (= e!47173 (containsKey!134 (toList!714 lt!31354) (_1!1067 lt!31103)))))

(assert (= (and d!16411 res!38384) b!72085))

(assert (=> d!16411 m!67733))

(assert (=> d!16411 m!67733))

(assert (=> d!16411 m!68467))

(declare-fun m!69931 () Bool)

(assert (=> d!16411 m!69931))

(declare-fun m!69933 () Bool)

(assert (=> d!16411 m!69933))

(assert (=> b!72085 m!68463))

(assert (=> b!71318 d!16411))

(declare-fun d!16413 () Bool)

(assert (=> d!16413 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31354) (_1!1067 lt!31103))) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31354) (_1!1067 lt!31103)))))))

(declare-fun bs!3104 () Bool)

(assert (= bs!3104 d!16413))

(assert (=> bs!3104 m!67733))

(declare-fun m!69935 () Bool)

(assert (=> bs!3104 m!69935))

(assert (=> b!71318 d!16413))

(assert (=> b!71318 d!15959))

(assert (=> b!71084 d!16187))

(declare-fun d!16415 () Bool)

(assert (=> d!16415 (not (contains!716 (+!91 lt!31454 (tuple2!2113 lt!31451 lt!31450)) lt!31453))))

(declare-fun lt!32126 () Unit!1989)

(assert (=> d!16415 (= lt!32126 (choose!408 lt!31454 lt!31451 lt!31450 lt!31453))))

(declare-fun e!47174 () Bool)

(assert (=> d!16415 e!47174))

(declare-fun res!38385 () Bool)

(assert (=> d!16415 (=> (not res!38385) (not e!47174))))

(assert (=> d!16415 (= res!38385 (not (contains!716 lt!31454 lt!31453)))))

(assert (=> d!16415 (= (addStillNotContains!24 lt!31454 lt!31451 lt!31450 lt!31453) lt!32126)))

(declare-fun b!72086 () Bool)

(assert (=> b!72086 (= e!47174 (not (= lt!31451 lt!31453)))))

(assert (= (and d!16415 res!38385) b!72086))

(assert (=> d!16415 m!67993))

(assert (=> d!16415 m!67993))

(assert (=> d!16415 m!67997))

(declare-fun m!69937 () Bool)

(assert (=> d!16415 m!69937))

(declare-fun m!69939 () Bool)

(assert (=> d!16415 m!69939))

(assert (=> b!71084 d!16415))

(declare-fun d!16417 () Bool)

(declare-fun e!47175 () Bool)

(assert (=> d!16417 e!47175))

(declare-fun res!38386 () Bool)

(assert (=> d!16417 (=> (not res!38386) (not e!47175))))

(declare-fun lt!32128 () ListLongMap!1397)

(assert (=> d!16417 (= res!38386 (contains!716 lt!32128 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!32129 () List!1479)

(assert (=> d!16417 (= lt!32128 (ListLongMap!1398 lt!32129))))

(declare-fun lt!32127 () Unit!1989)

(declare-fun lt!32130 () Unit!1989)

(assert (=> d!16417 (= lt!32127 lt!32130)))

(assert (=> d!16417 (= (getValueByKey!130 lt!32129 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16417 (= lt!32130 (lemmaContainsTupThenGetReturnValue!50 lt!32129 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16417 (= lt!32129 (insertStrictlySorted!53 (toList!714 call!6152) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16417 (= (+!91 call!6152 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!32128)))

(declare-fun b!72087 () Bool)

(declare-fun res!38387 () Bool)

(assert (=> b!72087 (=> (not res!38387) (not e!47175))))

(assert (=> b!72087 (= res!38387 (= (getValueByKey!130 (toList!714 lt!32128) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!72088 () Bool)

(assert (=> b!72088 (= e!47175 (contains!717 (toList!714 lt!32128) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16417 res!38386) b!72087))

(assert (= (and b!72087 res!38387) b!72088))

(declare-fun m!69941 () Bool)

(assert (=> d!16417 m!69941))

(declare-fun m!69943 () Bool)

(assert (=> d!16417 m!69943))

(declare-fun m!69945 () Bool)

(assert (=> d!16417 m!69945))

(declare-fun m!69947 () Bool)

(assert (=> d!16417 m!69947))

(declare-fun m!69949 () Bool)

(assert (=> b!72087 m!69949))

(declare-fun m!69951 () Bool)

(assert (=> b!72088 m!69951))

(assert (=> b!71084 d!16417))

(declare-fun d!16419 () Bool)

(declare-fun e!47177 () Bool)

(assert (=> d!16419 e!47177))

(declare-fun res!38388 () Bool)

(assert (=> d!16419 (=> res!38388 e!47177)))

(declare-fun lt!32133 () Bool)

(assert (=> d!16419 (= res!38388 (not lt!32133))))

(declare-fun lt!32131 () Bool)

(assert (=> d!16419 (= lt!32133 lt!32131)))

(declare-fun lt!32132 () Unit!1989)

(declare-fun e!47176 () Unit!1989)

(assert (=> d!16419 (= lt!32132 e!47176)))

(declare-fun c!10580 () Bool)

(assert (=> d!16419 (= c!10580 lt!32131)))

(assert (=> d!16419 (= lt!32131 (containsKey!134 (toList!714 (+!91 lt!31454 (tuple2!2113 lt!31451 lt!31450))) lt!31453))))

(assert (=> d!16419 (= (contains!716 (+!91 lt!31454 (tuple2!2113 lt!31451 lt!31450)) lt!31453) lt!32133)))

(declare-fun b!72089 () Bool)

(declare-fun lt!32134 () Unit!1989)

(assert (=> b!72089 (= e!47176 lt!32134)))

(assert (=> b!72089 (= lt!32134 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (+!91 lt!31454 (tuple2!2113 lt!31451 lt!31450))) lt!31453))))

(assert (=> b!72089 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31454 (tuple2!2113 lt!31451 lt!31450))) lt!31453))))

(declare-fun b!72090 () Bool)

(declare-fun Unit!2047 () Unit!1989)

(assert (=> b!72090 (= e!47176 Unit!2047)))

(declare-fun b!72091 () Bool)

(assert (=> b!72091 (= e!47177 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31454 (tuple2!2113 lt!31451 lt!31450))) lt!31453)))))

(assert (= (and d!16419 c!10580) b!72089))

(assert (= (and d!16419 (not c!10580)) b!72090))

(assert (= (and d!16419 (not res!38388)) b!72091))

(declare-fun m!69953 () Bool)

(assert (=> d!16419 m!69953))

(declare-fun m!69955 () Bool)

(assert (=> b!72089 m!69955))

(declare-fun m!69957 () Bool)

(assert (=> b!72089 m!69957))

(assert (=> b!72089 m!69957))

(declare-fun m!69959 () Bool)

(assert (=> b!72089 m!69959))

(assert (=> b!72091 m!69957))

(assert (=> b!72091 m!69957))

(assert (=> b!72091 m!69959))

(assert (=> b!71084 d!16419))

(declare-fun d!16421 () Bool)

(declare-fun e!47178 () Bool)

(assert (=> d!16421 e!47178))

(declare-fun res!38389 () Bool)

(assert (=> d!16421 (=> (not res!38389) (not e!47178))))

(declare-fun lt!32136 () ListLongMap!1397)

(assert (=> d!16421 (= res!38389 (contains!716 lt!32136 (_1!1067 (tuple2!2113 lt!31451 lt!31450))))))

(declare-fun lt!32137 () List!1479)

(assert (=> d!16421 (= lt!32136 (ListLongMap!1398 lt!32137))))

(declare-fun lt!32135 () Unit!1989)

(declare-fun lt!32138 () Unit!1989)

(assert (=> d!16421 (= lt!32135 lt!32138)))

(assert (=> d!16421 (= (getValueByKey!130 lt!32137 (_1!1067 (tuple2!2113 lt!31451 lt!31450))) (Some!135 (_2!1067 (tuple2!2113 lt!31451 lt!31450))))))

(assert (=> d!16421 (= lt!32138 (lemmaContainsTupThenGetReturnValue!50 lt!32137 (_1!1067 (tuple2!2113 lt!31451 lt!31450)) (_2!1067 (tuple2!2113 lt!31451 lt!31450))))))

(assert (=> d!16421 (= lt!32137 (insertStrictlySorted!53 (toList!714 lt!31454) (_1!1067 (tuple2!2113 lt!31451 lt!31450)) (_2!1067 (tuple2!2113 lt!31451 lt!31450))))))

(assert (=> d!16421 (= (+!91 lt!31454 (tuple2!2113 lt!31451 lt!31450)) lt!32136)))

(declare-fun b!72092 () Bool)

(declare-fun res!38390 () Bool)

(assert (=> b!72092 (=> (not res!38390) (not e!47178))))

(assert (=> b!72092 (= res!38390 (= (getValueByKey!130 (toList!714 lt!32136) (_1!1067 (tuple2!2113 lt!31451 lt!31450))) (Some!135 (_2!1067 (tuple2!2113 lt!31451 lt!31450)))))))

(declare-fun b!72093 () Bool)

(assert (=> b!72093 (= e!47178 (contains!717 (toList!714 lt!32136) (tuple2!2113 lt!31451 lt!31450)))))

(assert (= (and d!16421 res!38389) b!72092))

(assert (= (and b!72092 res!38390) b!72093))

(declare-fun m!69961 () Bool)

(assert (=> d!16421 m!69961))

(declare-fun m!69963 () Bool)

(assert (=> d!16421 m!69963))

(declare-fun m!69965 () Bool)

(assert (=> d!16421 m!69965))

(declare-fun m!69967 () Bool)

(assert (=> d!16421 m!69967))

(declare-fun m!69969 () Bool)

(assert (=> b!72092 m!69969))

(declare-fun m!69971 () Bool)

(assert (=> b!72093 m!69971))

(assert (=> b!71084 d!16421))

(declare-fun d!16423 () Bool)

(assert (=> d!16423 (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32139 () Unit!1989)

(assert (=> d!16423 (= lt!32139 (choose!405 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47179 () Bool)

(assert (=> d!16423 e!47179))

(declare-fun res!38391 () Bool)

(assert (=> d!16423 (=> (not res!38391) (not e!47179))))

(assert (=> d!16423 (= res!38391 (isStrictlySorted!286 (toList!714 lt!31248)))))

(assert (=> d!16423 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000) lt!32139)))

(declare-fun b!72094 () Bool)

(assert (=> b!72094 (= e!47179 (containsKey!134 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16423 res!38391) b!72094))

(assert (=> d!16423 m!68285))

(assert (=> d!16423 m!68285))

(assert (=> d!16423 m!68287))

(declare-fun m!69973 () Bool)

(assert (=> d!16423 m!69973))

(assert (=> d!16423 m!69137))

(assert (=> b!72094 m!68281))

(assert (=> b!71245 d!16423))

(declare-fun d!16425 () Bool)

(assert (=> d!16425 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31248) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3105 () Bool)

(assert (= bs!3105 d!16425))

(assert (=> bs!3105 m!68285))

(declare-fun m!69975 () Bool)

(assert (=> bs!3105 m!69975))

(assert (=> b!71245 d!16425))

(assert (=> b!71245 d!16095))

(declare-fun d!16427 () Bool)

(assert (=> d!16427 (contains!716 (getCurrentListMap!407 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!31341)))))

(assert (=> d!16427 true))

(declare-fun _$16!93 () Unit!1989)

(assert (=> d!16427 (= (choose!406 (_keys!3838 newMap!16) lt!31332 (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (index!3083 lt!31341) (defaultEntry!2191 newMap!16)) _$16!93)))

(declare-fun bs!3106 () Bool)

(assert (= bs!3106 d!16427))

(assert (=> bs!3106 m!68129))

(assert (=> bs!3106 m!67679))

(assert (=> bs!3106 m!68129))

(assert (=> bs!3106 m!67679))

(assert (=> bs!3106 m!68131))

(assert (=> d!15827 d!16427))

(assert (=> d!15827 d!16053))

(declare-fun d!16429 () Bool)

(assert (=> d!16429 (= (apply!74 lt!31487 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1139 (getValueByKey!130 (toList!714 lt!31487) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3107 () Bool)

(assert (= bs!3107 d!16429))

(assert (=> bs!3107 m!69515))

(assert (=> bs!3107 m!69515))

(declare-fun m!69977 () Bool)

(assert (=> bs!3107 m!69977))

(assert (=> b!71124 d!16429))

(declare-fun d!16431 () Bool)

(declare-fun lt!32140 () Bool)

(assert (=> d!16431 (= lt!32140 (select (content!76 (t!5006 (toList!714 lt!31369))) lt!31103))))

(declare-fun e!47180 () Bool)

(assert (=> d!16431 (= lt!32140 e!47180)))

(declare-fun res!38393 () Bool)

(assert (=> d!16431 (=> (not res!38393) (not e!47180))))

(assert (=> d!16431 (= res!38393 ((_ is Cons!1475) (t!5006 (toList!714 lt!31369))))))

(assert (=> d!16431 (= (contains!717 (t!5006 (toList!714 lt!31369)) lt!31103) lt!32140)))

(declare-fun b!72095 () Bool)

(declare-fun e!47181 () Bool)

(assert (=> b!72095 (= e!47180 e!47181)))

(declare-fun res!38392 () Bool)

(assert (=> b!72095 (=> res!38392 e!47181)))

(assert (=> b!72095 (= res!38392 (= (h!2061 (t!5006 (toList!714 lt!31369))) lt!31103))))

(declare-fun b!72096 () Bool)

(assert (=> b!72096 (= e!47181 (contains!717 (t!5006 (t!5006 (toList!714 lt!31369))) lt!31103))))

(assert (= (and d!16431 res!38393) b!72095))

(assert (= (and b!72095 (not res!38392)) b!72096))

(declare-fun m!69979 () Bool)

(assert (=> d!16431 m!69979))

(declare-fun m!69981 () Bool)

(assert (=> d!16431 m!69981))

(declare-fun m!69983 () Bool)

(assert (=> b!72096 m!69983))

(assert (=> b!71317 d!16431))

(declare-fun d!16433 () Bool)

(assert (=> d!16433 (= (apply!74 lt!31430 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (getValueByKey!130 (toList!714 lt!31430) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3108 () Bool)

(assert (= bs!3108 d!16433))

(assert (=> bs!3108 m!67861))

(assert (=> bs!3108 m!68805))

(assert (=> bs!3108 m!68805))

(declare-fun m!69985 () Bool)

(assert (=> bs!3108 m!69985))

(assert (=> b!71053 d!16433))

(declare-fun d!16435 () Bool)

(declare-fun c!10581 () Bool)

(assert (=> d!16435 (= c!10581 ((_ is ValueCellFull!890) (select (arr!1841 (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!47182 () V!2937)

(assert (=> d!16435 (= (get!1136 (select (arr!1841 (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47182)))

(declare-fun b!72097 () Bool)

(assert (=> b!72097 (= e!47182 (get!1137 (select (arr!1841 (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72098 () Bool)

(assert (=> b!72098 (= e!47182 (get!1138 (select (arr!1841 (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16435 c!10581) b!72097))

(assert (= (and d!16435 (not c!10581)) b!72098))

(assert (=> b!72097 m!67867))

(assert (=> b!72097 m!67865))

(declare-fun m!69987 () Bool)

(assert (=> b!72097 m!69987))

(assert (=> b!72098 m!67867))

(assert (=> b!72098 m!67865))

(declare-fun m!69989 () Bool)

(assert (=> b!72098 m!69989))

(assert (=> b!71053 d!16435))

(declare-fun d!16437 () Bool)

(assert (=> d!16437 (= (get!1139 (getValueByKey!130 (toList!714 lt!31249) lt!31234)) (v!2513 (getValueByKey!130 (toList!714 lt!31249) lt!31234)))))

(assert (=> d!15891 d!16437))

(declare-fun b!72099 () Bool)

(declare-fun e!47183 () Option!136)

(assert (=> b!72099 (= e!47183 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31249)))))))

(declare-fun d!16439 () Bool)

(declare-fun c!10582 () Bool)

(assert (=> d!16439 (= c!10582 (and ((_ is Cons!1475) (toList!714 lt!31249)) (= (_1!1067 (h!2061 (toList!714 lt!31249))) lt!31234)))))

(assert (=> d!16439 (= (getValueByKey!130 (toList!714 lt!31249) lt!31234) e!47183)))

(declare-fun b!72100 () Bool)

(declare-fun e!47184 () Option!136)

(assert (=> b!72100 (= e!47183 e!47184)))

(declare-fun c!10583 () Bool)

(assert (=> b!72100 (= c!10583 (and ((_ is Cons!1475) (toList!714 lt!31249)) (not (= (_1!1067 (h!2061 (toList!714 lt!31249))) lt!31234))))))

(declare-fun b!72102 () Bool)

(assert (=> b!72102 (= e!47184 None!134)))

(declare-fun b!72101 () Bool)

(assert (=> b!72101 (= e!47184 (getValueByKey!130 (t!5006 (toList!714 lt!31249)) lt!31234))))

(assert (= (and d!16439 c!10582) b!72099))

(assert (= (and d!16439 (not c!10582)) b!72100))

(assert (= (and b!72100 c!10583) b!72101))

(assert (= (and b!72100 (not c!10583)) b!72102))

(declare-fun m!69991 () Bool)

(assert (=> b!72101 m!69991))

(assert (=> d!15891 d!16439))

(declare-fun d!16441 () Bool)

(declare-fun e!47186 () Bool)

(assert (=> d!16441 e!47186))

(declare-fun res!38394 () Bool)

(assert (=> d!16441 (=> res!38394 e!47186)))

(declare-fun lt!32143 () Bool)

(assert (=> d!16441 (= res!38394 (not lt!32143))))

(declare-fun lt!32141 () Bool)

(assert (=> d!16441 (= lt!32143 lt!32141)))

(declare-fun lt!32142 () Unit!1989)

(declare-fun e!47185 () Unit!1989)

(assert (=> d!16441 (= lt!32142 e!47185)))

(declare-fun c!10584 () Bool)

(assert (=> d!16441 (= c!10584 lt!32141)))

(assert (=> d!16441 (= lt!32141 (containsKey!134 (toList!714 lt!31535) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16441 (= (contains!716 lt!31535 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) lt!32143)))

(declare-fun b!72103 () Bool)

(declare-fun lt!32144 () Unit!1989)

(assert (=> b!72103 (= e!47185 lt!32144)))

(assert (=> b!72103 (= lt!32144 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31535) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72103 (isDefined!84 (getValueByKey!130 (toList!714 lt!31535) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72104 () Bool)

(declare-fun Unit!2048 () Unit!1989)

(assert (=> b!72104 (= e!47185 Unit!2048)))

(declare-fun b!72105 () Bool)

(assert (=> b!72105 (= e!47186 (isDefined!84 (getValueByKey!130 (toList!714 lt!31535) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!16441 c!10584) b!72103))

(assert (= (and d!16441 (not c!10584)) b!72104))

(assert (= (and d!16441 (not res!38394)) b!72105))

(assert (=> d!16441 m!67861))

(declare-fun m!69993 () Bool)

(assert (=> d!16441 m!69993))

(assert (=> b!72103 m!67861))

(declare-fun m!69995 () Bool)

(assert (=> b!72103 m!69995))

(assert (=> b!72103 m!67861))

(assert (=> b!72103 m!69285))

(assert (=> b!72103 m!69285))

(declare-fun m!69997 () Bool)

(assert (=> b!72103 m!69997))

(assert (=> b!72105 m!67861))

(assert (=> b!72105 m!69285))

(assert (=> b!72105 m!69285))

(assert (=> b!72105 m!69997))

(assert (=> b!71195 d!16441))

(declare-fun d!16443 () Bool)

(declare-fun res!38395 () Bool)

(declare-fun e!47187 () Bool)

(assert (=> d!16443 (=> res!38395 e!47187)))

(assert (=> d!16443 (= res!38395 (and ((_ is Cons!1475) (toList!714 lt!31369)) (= (_1!1067 (h!2061 (toList!714 lt!31369))) (_1!1067 lt!31103))))))

(assert (=> d!16443 (= (containsKey!134 (toList!714 lt!31369) (_1!1067 lt!31103)) e!47187)))

(declare-fun b!72106 () Bool)

(declare-fun e!47188 () Bool)

(assert (=> b!72106 (= e!47187 e!47188)))

(declare-fun res!38396 () Bool)

(assert (=> b!72106 (=> (not res!38396) (not e!47188))))

(assert (=> b!72106 (= res!38396 (and (or (not ((_ is Cons!1475) (toList!714 lt!31369))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31369))) (_1!1067 lt!31103))) ((_ is Cons!1475) (toList!714 lt!31369)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31369))) (_1!1067 lt!31103))))))

(declare-fun b!72107 () Bool)

(assert (=> b!72107 (= e!47188 (containsKey!134 (t!5006 (toList!714 lt!31369)) (_1!1067 lt!31103)))))

(assert (= (and d!16443 (not res!38395)) b!72106))

(assert (= (and b!72106 res!38396) b!72107))

(declare-fun m!69999 () Bool)

(assert (=> b!72107 m!69999))

(assert (=> d!15895 d!16443))

(declare-fun b!72108 () Bool)

(declare-fun e!47189 () Option!136)

(assert (=> b!72108 (= e!47189 (Some!135 (_2!1067 (h!2061 (t!5006 lt!31355)))))))

(declare-fun d!16445 () Bool)

(declare-fun c!10585 () Bool)

(assert (=> d!16445 (= c!10585 (and ((_ is Cons!1475) (t!5006 lt!31355)) (= (_1!1067 (h!2061 (t!5006 lt!31355))) (_1!1067 lt!31103))))))

(assert (=> d!16445 (= (getValueByKey!130 (t!5006 lt!31355) (_1!1067 lt!31103)) e!47189)))

(declare-fun b!72109 () Bool)

(declare-fun e!47190 () Option!136)

(assert (=> b!72109 (= e!47189 e!47190)))

(declare-fun c!10586 () Bool)

(assert (=> b!72109 (= c!10586 (and ((_ is Cons!1475) (t!5006 lt!31355)) (not (= (_1!1067 (h!2061 (t!5006 lt!31355))) (_1!1067 lt!31103)))))))

(declare-fun b!72111 () Bool)

(assert (=> b!72111 (= e!47190 None!134)))

(declare-fun b!72110 () Bool)

(assert (=> b!72110 (= e!47190 (getValueByKey!130 (t!5006 (t!5006 lt!31355)) (_1!1067 lt!31103)))))

(assert (= (and d!16445 c!10585) b!72108))

(assert (= (and d!16445 (not c!10585)) b!72109))

(assert (= (and b!72109 c!10586) b!72110))

(assert (= (and b!72109 (not c!10586)) b!72111))

(declare-fun m!70001 () Bool)

(assert (=> b!72110 m!70001))

(assert (=> b!71323 d!16445))

(declare-fun d!16447 () Bool)

(declare-fun res!38397 () Bool)

(declare-fun e!47191 () Bool)

(assert (=> d!16447 (=> res!38397 e!47191)))

(assert (=> d!16447 (= res!38397 (and ((_ is Cons!1475) lt!31465) (= (_1!1067 (h!2061 lt!31465)) (_1!1067 lt!31109))))))

(assert (=> d!16447 (= (containsKey!134 lt!31465 (_1!1067 lt!31109)) e!47191)))

(declare-fun b!72112 () Bool)

(declare-fun e!47192 () Bool)

(assert (=> b!72112 (= e!47191 e!47192)))

(declare-fun res!38398 () Bool)

(assert (=> b!72112 (=> (not res!38398) (not e!47192))))

(assert (=> b!72112 (= res!38398 (and (or (not ((_ is Cons!1475) lt!31465)) (bvsle (_1!1067 (h!2061 lt!31465)) (_1!1067 lt!31109))) ((_ is Cons!1475) lt!31465) (bvslt (_1!1067 (h!2061 lt!31465)) (_1!1067 lt!31109))))))

(declare-fun b!72113 () Bool)

(assert (=> b!72113 (= e!47192 (containsKey!134 (t!5006 lt!31465) (_1!1067 lt!31109)))))

(assert (= (and d!16447 (not res!38397)) b!72112))

(assert (= (and b!72112 res!38398) b!72113))

(declare-fun m!70003 () Bool)

(assert (=> b!72113 m!70003))

(assert (=> b!71116 d!16447))

(declare-fun d!16449 () Bool)

(declare-fun res!38399 () Bool)

(declare-fun e!47193 () Bool)

(assert (=> d!16449 (=> res!38399 e!47193)))

(assert (=> d!16449 (= res!38399 (and ((_ is Cons!1475) lt!31641) (= (_1!1067 (h!2061 lt!31641)) (_1!1067 lt!31103))))))

(assert (=> d!16449 (= (containsKey!134 lt!31641 (_1!1067 lt!31103)) e!47193)))

(declare-fun b!72114 () Bool)

(declare-fun e!47194 () Bool)

(assert (=> b!72114 (= e!47193 e!47194)))

(declare-fun res!38400 () Bool)

(assert (=> b!72114 (=> (not res!38400) (not e!47194))))

(assert (=> b!72114 (= res!38400 (and (or (not ((_ is Cons!1475) lt!31641)) (bvsle (_1!1067 (h!2061 lt!31641)) (_1!1067 lt!31103))) ((_ is Cons!1475) lt!31641) (bvslt (_1!1067 (h!2061 lt!31641)) (_1!1067 lt!31103))))))

(declare-fun b!72115 () Bool)

(assert (=> b!72115 (= e!47194 (containsKey!134 (t!5006 lt!31641) (_1!1067 lt!31103)))))

(assert (= (and d!16449 (not res!38399)) b!72114))

(assert (= (and b!72114 res!38400) b!72115))

(declare-fun m!70005 () Bool)

(assert (=> b!72115 m!70005))

(assert (=> b!71332 d!16449))

(declare-fun b!72116 () Bool)

(declare-fun e!47195 () Option!136)

(assert (=> b!72116 (= e!47195 (Some!135 (_2!1067 (h!2061 (t!5006 lt!31359)))))))

(declare-fun d!16451 () Bool)

(declare-fun c!10587 () Bool)

(assert (=> d!16451 (= c!10587 (and ((_ is Cons!1475) (t!5006 lt!31359)) (= (_1!1067 (h!2061 (t!5006 lt!31359))) (_1!1067 lt!31109))))))

(assert (=> d!16451 (= (getValueByKey!130 (t!5006 lt!31359) (_1!1067 lt!31109)) e!47195)))

(declare-fun b!72117 () Bool)

(declare-fun e!47196 () Option!136)

(assert (=> b!72117 (= e!47195 e!47196)))

(declare-fun c!10588 () Bool)

(assert (=> b!72117 (= c!10588 (and ((_ is Cons!1475) (t!5006 lt!31359)) (not (= (_1!1067 (h!2061 (t!5006 lt!31359))) (_1!1067 lt!31109)))))))

(declare-fun b!72119 () Bool)

(assert (=> b!72119 (= e!47196 None!134)))

(declare-fun b!72118 () Bool)

(assert (=> b!72118 (= e!47196 (getValueByKey!130 (t!5006 (t!5006 lt!31359)) (_1!1067 lt!31109)))))

(assert (= (and d!16451 c!10587) b!72116))

(assert (= (and d!16451 (not c!10587)) b!72117))

(assert (= (and b!72117 c!10588) b!72118))

(assert (= (and b!72117 (not c!10588)) b!72119))

(declare-fun m!70007 () Bool)

(assert (=> b!72118 m!70007))

(assert (=> b!71107 d!16451))

(assert (=> d!15851 d!15755))

(assert (=> d!15929 d!15821))

(declare-fun b!72136 () Bool)

(declare-fun res!38412 () Bool)

(declare-fun e!47205 () Bool)

(assert (=> b!72136 (=> (not res!38412) (not e!47205))))

(declare-fun call!6279 () Bool)

(assert (=> b!72136 (= res!38412 call!6279)))

(declare-fun e!47208 () Bool)

(assert (=> b!72136 (= e!47208 e!47205)))

(declare-fun d!16453 () Bool)

(declare-fun e!47206 () Bool)

(assert (=> d!16453 e!47206))

(declare-fun c!10593 () Bool)

(declare-fun lt!32147 () SeekEntryResult!238)

(assert (=> d!16453 (= c!10593 ((_ is MissingZero!238) lt!32147))))

(assert (=> d!16453 (= lt!32147 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(assert (=> d!16453 true))

(declare-fun _$34!802 () Unit!1989)

(assert (=> d!16453 (= (choose!413 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)) _$34!802)))

(declare-fun call!6278 () Bool)

(declare-fun bm!6275 () Bool)

(assert (=> bm!6275 (= call!6278 (arrayContainsKey!0 (_keys!3838 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!72137 () Bool)

(assert (=> b!72137 (= e!47208 ((_ is Undefined!238) lt!32147))))

(declare-fun b!72138 () Bool)

(declare-fun res!38411 () Bool)

(assert (=> b!72138 (=> (not res!38411) (not e!47205))))

(assert (=> b!72138 (= res!38411 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3085 lt!32147)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6276 () Bool)

(assert (=> bm!6276 (= call!6279 (inRange!0 (ite c!10593 (index!3082 lt!32147) (index!3085 lt!32147)) (mask!6147 newMap!16)))))

(declare-fun b!72139 () Bool)

(assert (=> b!72139 (= e!47206 e!47208)))

(declare-fun c!10594 () Bool)

(assert (=> b!72139 (= c!10594 ((_ is MissingVacant!238) lt!32147))))

(declare-fun b!72140 () Bool)

(declare-fun e!47207 () Bool)

(assert (=> b!72140 (= e!47206 e!47207)))

(declare-fun res!38410 () Bool)

(assert (=> b!72140 (= res!38410 call!6279)))

(assert (=> b!72140 (=> (not res!38410) (not e!47207))))

(declare-fun b!72141 () Bool)

(assert (=> b!72141 (= e!47205 (not call!6278))))

(declare-fun b!72142 () Bool)

(declare-fun res!38409 () Bool)

(assert (=> b!72142 (= res!38409 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3082 lt!32147)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72142 (=> (not res!38409) (not e!47207))))

(declare-fun b!72143 () Bool)

(assert (=> b!72143 (= e!47207 (not call!6278))))

(assert (= (and d!16453 c!10593) b!72140))

(assert (= (and d!16453 (not c!10593)) b!72139))

(assert (= (and b!72140 res!38410) b!72142))

(assert (= (and b!72142 res!38409) b!72143))

(assert (= (and b!72139 c!10594) b!72136))

(assert (= (and b!72139 (not c!10594)) b!72137))

(assert (= (and b!72136 res!38412) b!72138))

(assert (= (and b!72138 res!38411) b!72141))

(assert (= (or b!72140 b!72136) bm!6276))

(assert (= (or b!72143 b!72141) bm!6275))

(assert (=> d!16453 m!67435))

(assert (=> d!16453 m!67689))

(assert (=> bm!6275 m!67435))

(assert (=> bm!6275 m!67699))

(declare-fun m!70009 () Bool)

(assert (=> bm!6276 m!70009))

(declare-fun m!70011 () Bool)

(assert (=> b!72142 m!70011))

(declare-fun m!70013 () Bool)

(assert (=> b!72138 m!70013))

(assert (=> d!15929 d!16453))

(assert (=> d!15929 d!16053))

(declare-fun d!16455 () Bool)

(assert (=> d!16455 (= (get!1138 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!71095 d!16455))

(declare-fun d!16457 () Bool)

(declare-fun res!38413 () Bool)

(declare-fun e!47209 () Bool)

(assert (=> d!16457 (=> res!38413 e!47209)))

(assert (=> d!16457 (= res!38413 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31108))) (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31108)))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!16457 (= (containsKey!134 (t!5006 (toList!714 lt!31108)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) e!47209)))

(declare-fun b!72144 () Bool)

(declare-fun e!47210 () Bool)

(assert (=> b!72144 (= e!47209 e!47210)))

(declare-fun res!38414 () Bool)

(assert (=> b!72144 (=> (not res!38414) (not e!47210))))

(assert (=> b!72144 (= res!38414 (and (or (not ((_ is Cons!1475) (t!5006 (toList!714 lt!31108)))) (bvsle (_1!1067 (h!2061 (t!5006 (toList!714 lt!31108)))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1475) (t!5006 (toList!714 lt!31108))) (bvslt (_1!1067 (h!2061 (t!5006 (toList!714 lt!31108)))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!72145 () Bool)

(assert (=> b!72145 (= e!47210 (containsKey!134 (t!5006 (t!5006 (toList!714 lt!31108))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!16457 (not res!38413)) b!72144))

(assert (= (and b!72144 res!38414) b!72145))

(assert (=> b!72145 m!67435))

(declare-fun m!70015 () Bool)

(assert (=> b!72145 m!70015))

(assert (=> b!71292 d!16457))

(declare-fun b!72146 () Bool)

(declare-fun e!47211 () Option!136)

(assert (=> b!72146 (= e!47211 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31754)))))))

(declare-fun c!10595 () Bool)

(declare-fun d!16459 () Bool)

(assert (=> d!16459 (= c!10595 (and ((_ is Cons!1475) (toList!714 lt!31754)) (= (_1!1067 (h!2061 (toList!714 lt!31754))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!16459 (= (getValueByKey!130 (toList!714 lt!31754) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) e!47211)))

(declare-fun b!72147 () Bool)

(declare-fun e!47212 () Option!136)

(assert (=> b!72147 (= e!47211 e!47212)))

(declare-fun c!10596 () Bool)

(assert (=> b!72147 (= c!10596 (and ((_ is Cons!1475) (toList!714 lt!31754)) (not (= (_1!1067 (h!2061 (toList!714 lt!31754))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun b!72149 () Bool)

(assert (=> b!72149 (= e!47212 None!134)))

(declare-fun b!72148 () Bool)

(assert (=> b!72148 (= e!47212 (getValueByKey!130 (t!5006 (toList!714 lt!31754)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (= (and d!16459 c!10595) b!72146))

(assert (= (and d!16459 (not c!10595)) b!72147))

(assert (= (and b!72147 c!10596) b!72148))

(assert (= (and b!72147 (not c!10596)) b!72149))

(declare-fun m!70017 () Bool)

(assert (=> b!72148 m!70017))

(assert (=> b!71445 d!16459))

(declare-fun d!16461 () Bool)

(assert (=> d!16461 (= (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31251)) (v!2513 (getValueByKey!130 (toList!714 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31251)))))

(assert (=> d!15869 d!16461))

(declare-fun b!72150 () Bool)

(declare-fun e!47213 () Option!136)

(assert (=> b!72150 (= e!47213 (Some!135 (_2!1067 (h!2061 (toList!714 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))))

(declare-fun d!16463 () Bool)

(declare-fun c!10597 () Bool)

(assert (=> d!16463 (= c!10597 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31251)))))

(assert (=> d!16463 (= (getValueByKey!130 (toList!714 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31251) e!47213)))

(declare-fun b!72151 () Bool)

(declare-fun e!47214 () Option!136)

(assert (=> b!72151 (= e!47213 e!47214)))

(declare-fun c!10598 () Bool)

(assert (=> b!72151 (= c!10598 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) (not (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31251))))))

(declare-fun b!72153 () Bool)

(assert (=> b!72153 (= e!47214 None!134)))

(declare-fun b!72152 () Bool)

(assert (=> b!72152 (= e!47214 (getValueByKey!130 (t!5006 (toList!714 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))) lt!31251))))

(assert (= (and d!16463 c!10597) b!72150))

(assert (= (and d!16463 (not c!10597)) b!72151))

(assert (= (and b!72151 c!10598) b!72152))

(assert (= (and b!72151 (not c!10598)) b!72153))

(declare-fun m!70019 () Bool)

(assert (=> b!72152 m!70019))

(assert (=> d!15869 d!16463))

(declare-fun b!72155 () Bool)

(declare-fun res!38415 () Bool)

(declare-fun e!47215 () Bool)

(assert (=> b!72155 (=> (not res!38415) (not e!47215))))

(assert (=> b!72155 (= res!38415 (bvsge (size!2084 (_2!1068 lt!31326)) (_size!393 (_2!1068 lt!31326))))))

(declare-fun b!72154 () Bool)

(declare-fun res!38416 () Bool)

(assert (=> b!72154 (=> (not res!38416) (not e!47215))))

(assert (=> b!72154 (= res!38416 (and (= (size!2079 (_values!2174 (_2!1068 lt!31326))) (bvadd (mask!6147 (_2!1068 lt!31326)) #b00000000000000000000000000000001)) (= (size!2078 (_keys!3838 (_2!1068 lt!31326))) (size!2079 (_values!2174 (_2!1068 lt!31326)))) (bvsge (_size!393 (_2!1068 lt!31326)) #b00000000000000000000000000000000) (bvsle (_size!393 (_2!1068 lt!31326)) (bvadd (mask!6147 (_2!1068 lt!31326)) #b00000000000000000000000000000001))))))

(declare-fun b!72157 () Bool)

(assert (=> b!72157 (= e!47215 (and (bvsge (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000000) (bvsle (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000011) (bvsge (_vacant!393 (_2!1068 lt!31326)) #b00000000000000000000000000000000)))))

(declare-fun b!72156 () Bool)

(declare-fun res!38418 () Bool)

(assert (=> b!72156 (=> (not res!38418) (not e!47215))))

(assert (=> b!72156 (= res!38418 (= (size!2084 (_2!1068 lt!31326)) (bvadd (_size!393 (_2!1068 lt!31326)) (bvsdiv (bvadd (extraKeys!2054 (_2!1068 lt!31326)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!16465 () Bool)

(declare-fun res!38417 () Bool)

(assert (=> d!16465 (=> (not res!38417) (not e!47215))))

(assert (=> d!16465 (= res!38417 (validMask!0 (mask!6147 (_2!1068 lt!31326))))))

(assert (=> d!16465 (= (simpleValid!50 (_2!1068 lt!31326)) e!47215)))

(assert (= (and d!16465 res!38417) b!72154))

(assert (= (and b!72154 res!38416) b!72155))

(assert (= (and b!72155 res!38415) b!72156))

(assert (= (and b!72156 res!38418) b!72157))

(declare-fun m!70021 () Bool)

(assert (=> b!72155 m!70021))

(assert (=> b!72156 m!70021))

(assert (=> d!16465 m!69089))

(assert (=> d!15949 d!16465))

(declare-fun d!16467 () Bool)

(declare-fun res!38419 () Bool)

(declare-fun e!47216 () Bool)

(assert (=> d!16467 (=> res!38419 e!47216)))

(assert (=> d!16467 (= res!38419 (and ((_ is Cons!1475) (toList!714 lt!31388)) (= (_1!1067 (h!2061 (toList!714 lt!31388))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16467 (= (containsKey!134 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000) e!47216)))

(declare-fun b!72158 () Bool)

(declare-fun e!47217 () Bool)

(assert (=> b!72158 (= e!47216 e!47217)))

(declare-fun res!38420 () Bool)

(assert (=> b!72158 (=> (not res!38420) (not e!47217))))

(assert (=> b!72158 (= res!38420 (and (or (not ((_ is Cons!1475) (toList!714 lt!31388))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31388))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1475) (toList!714 lt!31388)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31388))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72159 () Bool)

(assert (=> b!72159 (= e!47217 (containsKey!134 (t!5006 (toList!714 lt!31388)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16467 (not res!38419)) b!72158))

(assert (= (and b!72158 res!38420) b!72159))

(declare-fun m!70023 () Bool)

(assert (=> b!72159 m!70023))

(assert (=> d!15913 d!16467))

(declare-fun d!16469 () Bool)

(declare-fun e!47219 () Bool)

(assert (=> d!16469 e!47219))

(declare-fun res!38421 () Bool)

(assert (=> d!16469 (=> res!38421 e!47219)))

(declare-fun lt!32150 () Bool)

(assert (=> d!16469 (= res!38421 (not lt!32150))))

(declare-fun lt!32148 () Bool)

(assert (=> d!16469 (= lt!32150 lt!32148)))

(declare-fun lt!32149 () Unit!1989)

(declare-fun e!47218 () Unit!1989)

(assert (=> d!16469 (= lt!32149 e!47218)))

(declare-fun c!10599 () Bool)

(assert (=> d!16469 (= c!10599 lt!32148)))

(assert (=> d!16469 (= lt!32148 (containsKey!134 (toList!714 lt!31754) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!16469 (= (contains!716 lt!31754 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!32150)))

(declare-fun b!72160 () Bool)

(declare-fun lt!32151 () Unit!1989)

(assert (=> b!72160 (= e!47218 lt!32151)))

(assert (=> b!72160 (= lt!32151 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31754) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> b!72160 (isDefined!84 (getValueByKey!130 (toList!714 lt!31754) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!72161 () Bool)

(declare-fun Unit!2049 () Unit!1989)

(assert (=> b!72161 (= e!47218 Unit!2049)))

(declare-fun b!72162 () Bool)

(assert (=> b!72162 (= e!47219 (isDefined!84 (getValueByKey!130 (toList!714 lt!31754) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (= (and d!16469 c!10599) b!72160))

(assert (= (and d!16469 (not c!10599)) b!72161))

(assert (= (and d!16469 (not res!38421)) b!72162))

(declare-fun m!70025 () Bool)

(assert (=> d!16469 m!70025))

(declare-fun m!70027 () Bool)

(assert (=> b!72160 m!70027))

(assert (=> b!72160 m!68625))

(assert (=> b!72160 m!68625))

(declare-fun m!70029 () Bool)

(assert (=> b!72160 m!70029))

(assert (=> b!72162 m!68625))

(assert (=> b!72162 m!68625))

(assert (=> b!72162 m!70029))

(assert (=> d!15957 d!16469))

(declare-fun b!72163 () Bool)

(declare-fun e!47220 () Option!136)

(assert (=> b!72163 (= e!47220 (Some!135 (_2!1067 (h!2061 lt!31755))))))

(declare-fun d!16471 () Bool)

(declare-fun c!10600 () Bool)

(assert (=> d!16471 (= c!10600 (and ((_ is Cons!1475) lt!31755) (= (_1!1067 (h!2061 lt!31755)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!16471 (= (getValueByKey!130 lt!31755 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) e!47220)))

(declare-fun b!72164 () Bool)

(declare-fun e!47221 () Option!136)

(assert (=> b!72164 (= e!47220 e!47221)))

(declare-fun c!10601 () Bool)

(assert (=> b!72164 (= c!10601 (and ((_ is Cons!1475) lt!31755) (not (= (_1!1067 (h!2061 lt!31755)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun b!72166 () Bool)

(assert (=> b!72166 (= e!47221 None!134)))

(declare-fun b!72165 () Bool)

(assert (=> b!72165 (= e!47221 (getValueByKey!130 (t!5006 lt!31755) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (= (and d!16471 c!10600) b!72163))

(assert (= (and d!16471 (not c!10600)) b!72164))

(assert (= (and b!72164 c!10601) b!72165))

(assert (= (and b!72164 (not c!10601)) b!72166))

(declare-fun m!70031 () Bool)

(assert (=> b!72165 m!70031))

(assert (=> d!15957 d!16471))

(declare-fun d!16473 () Bool)

(assert (=> d!16473 (= (getValueByKey!130 lt!31755 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun lt!32152 () Unit!1989)

(assert (=> d!16473 (= lt!32152 (choose!404 lt!31755 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun e!47222 () Bool)

(assert (=> d!16473 e!47222))

(declare-fun res!38422 () Bool)

(assert (=> d!16473 (=> (not res!38422) (not e!47222))))

(assert (=> d!16473 (= res!38422 (isStrictlySorted!286 lt!31755))))

(assert (=> d!16473 (= (lemmaContainsTupThenGetReturnValue!50 lt!31755 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!32152)))

(declare-fun b!72167 () Bool)

(declare-fun res!38423 () Bool)

(assert (=> b!72167 (=> (not res!38423) (not e!47222))))

(assert (=> b!72167 (= res!38423 (containsKey!134 lt!31755 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!72168 () Bool)

(assert (=> b!72168 (= e!47222 (contains!717 lt!31755 (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (= (and d!16473 res!38422) b!72167))

(assert (= (and b!72167 res!38423) b!72168))

(assert (=> d!16473 m!68619))

(declare-fun m!70033 () Bool)

(assert (=> d!16473 m!70033))

(declare-fun m!70035 () Bool)

(assert (=> d!16473 m!70035))

(declare-fun m!70037 () Bool)

(assert (=> b!72167 m!70037))

(declare-fun m!70039 () Bool)

(assert (=> b!72168 m!70039))

(assert (=> d!15957 d!16473))

(declare-fun b!72169 () Bool)

(declare-fun e!47225 () Bool)

(declare-fun lt!32153 () List!1479)

(assert (=> b!72169 (= e!47225 (contains!717 lt!32153 (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun e!47223 () List!1479)

(declare-fun b!72170 () Bool)

(assert (=> b!72170 (= e!47223 (insertStrictlySorted!53 (t!5006 (toList!714 call!6126)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun d!16475 () Bool)

(assert (=> d!16475 e!47225))

(declare-fun res!38425 () Bool)

(assert (=> d!16475 (=> (not res!38425) (not e!47225))))

(assert (=> d!16475 (= res!38425 (isStrictlySorted!286 lt!32153))))

(declare-fun e!47224 () List!1479)

(assert (=> d!16475 (= lt!32153 e!47224)))

(declare-fun c!10605 () Bool)

(assert (=> d!16475 (= c!10605 (and ((_ is Cons!1475) (toList!714 call!6126)) (bvslt (_1!1067 (h!2061 (toList!714 call!6126))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!16475 (isStrictlySorted!286 (toList!714 call!6126))))

(assert (=> d!16475 (= (insertStrictlySorted!53 (toList!714 call!6126) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!32153)))

(declare-fun c!10604 () Bool)

(declare-fun b!72171 () Bool)

(assert (=> b!72171 (= c!10604 (and ((_ is Cons!1475) (toList!714 call!6126)) (bvsgt (_1!1067 (h!2061 (toList!714 call!6126))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun e!47227 () List!1479)

(declare-fun e!47226 () List!1479)

(assert (=> b!72171 (= e!47227 e!47226)))

(declare-fun b!72172 () Bool)

(assert (=> b!72172 (= e!47224 e!47227)))

(declare-fun c!10603 () Bool)

(assert (=> b!72172 (= c!10603 (and ((_ is Cons!1475) (toList!714 call!6126)) (= (_1!1067 (h!2061 (toList!714 call!6126))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!72173 () Bool)

(declare-fun call!6282 () List!1479)

(assert (=> b!72173 (= e!47227 call!6282)))

(declare-fun b!72174 () Bool)

(declare-fun res!38424 () Bool)

(assert (=> b!72174 (=> (not res!38424) (not e!47225))))

(assert (=> b!72174 (= res!38424 (containsKey!134 lt!32153 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!72175 () Bool)

(assert (=> b!72175 (= e!47223 (ite c!10603 (t!5006 (toList!714 call!6126)) (ite c!10604 (Cons!1475 (h!2061 (toList!714 call!6126)) (t!5006 (toList!714 call!6126))) Nil!1476)))))

(declare-fun b!72176 () Bool)

(declare-fun call!6281 () List!1479)

(assert (=> b!72176 (= e!47224 call!6281)))

(declare-fun b!72177 () Bool)

(declare-fun call!6280 () List!1479)

(assert (=> b!72177 (= e!47226 call!6280)))

(declare-fun bm!6277 () Bool)

(assert (=> bm!6277 (= call!6280 call!6282)))

(declare-fun bm!6278 () Bool)

(assert (=> bm!6278 (= call!6282 call!6281)))

(declare-fun bm!6279 () Bool)

(assert (=> bm!6279 (= call!6281 ($colon$colon!64 e!47223 (ite c!10605 (h!2061 (toList!714 call!6126)) (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun c!10602 () Bool)

(assert (=> bm!6279 (= c!10602 c!10605)))

(declare-fun b!72178 () Bool)

(assert (=> b!72178 (= e!47226 call!6280)))

(assert (= (and d!16475 c!10605) b!72176))

(assert (= (and d!16475 (not c!10605)) b!72172))

(assert (= (and b!72172 c!10603) b!72173))

(assert (= (and b!72172 (not c!10603)) b!72171))

(assert (= (and b!72171 c!10604) b!72177))

(assert (= (and b!72171 (not c!10604)) b!72178))

(assert (= (or b!72177 b!72178) bm!6277))

(assert (= (or b!72173 bm!6277) bm!6278))

(assert (= (or b!72176 bm!6278) bm!6279))

(assert (= (and bm!6279 c!10602) b!72170))

(assert (= (and bm!6279 (not c!10602)) b!72175))

(assert (= (and d!16475 res!38425) b!72174))

(assert (= (and b!72174 res!38424) b!72169))

(declare-fun m!70041 () Bool)

(assert (=> b!72169 m!70041))

(declare-fun m!70043 () Bool)

(assert (=> b!72170 m!70043))

(declare-fun m!70045 () Bool)

(assert (=> b!72174 m!70045))

(declare-fun m!70047 () Bool)

(assert (=> bm!6279 m!70047))

(declare-fun m!70049 () Bool)

(assert (=> d!16475 m!70049))

(declare-fun m!70051 () Bool)

(assert (=> d!16475 m!70051))

(assert (=> d!15957 d!16475))

(assert (=> b!71261 d!16237))

(assert (=> b!71261 d!16239))

(declare-fun bm!6280 () Bool)

(declare-fun call!6283 () Bool)

(declare-fun c!10606 () Bool)

(assert (=> bm!6280 (= call!6283 (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10606 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000) Nil!1477) Nil!1477)))))

(declare-fun b!72179 () Bool)

(declare-fun e!47228 () Bool)

(declare-fun e!47229 () Bool)

(assert (=> b!72179 (= e!47228 e!47229)))

(assert (=> b!72179 (= c!10606 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!16477 () Bool)

(declare-fun res!38427 () Bool)

(declare-fun e!47230 () Bool)

(assert (=> d!16477 (=> res!38427 e!47230)))

(assert (=> d!16477 (= res!38427 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!16477 (= (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000 Nil!1477) e!47230)))

(declare-fun b!72180 () Bool)

(assert (=> b!72180 (= e!47229 call!6283)))

(declare-fun b!72181 () Bool)

(declare-fun e!47231 () Bool)

(assert (=> b!72181 (= e!47231 (contains!718 Nil!1477 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!72182 () Bool)

(assert (=> b!72182 (= e!47229 call!6283)))

(declare-fun b!72183 () Bool)

(assert (=> b!72183 (= e!47230 e!47228)))

(declare-fun res!38428 () Bool)

(assert (=> b!72183 (=> (not res!38428) (not e!47228))))

(assert (=> b!72183 (= res!38428 (not e!47231))))

(declare-fun res!38426 () Bool)

(assert (=> b!72183 (=> (not res!38426) (not e!47231))))

(assert (=> b!72183 (= res!38426 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!16477 (not res!38427)) b!72183))

(assert (= (and b!72183 res!38426) b!72181))

(assert (= (and b!72183 res!38428) b!72179))

(assert (= (and b!72179 c!10606) b!72180))

(assert (= (and b!72179 (not c!10606)) b!72182))

(assert (= (or b!72180 b!72182) bm!6280))

(assert (=> bm!6280 m!69505))

(declare-fun m!70053 () Bool)

(assert (=> bm!6280 m!70053))

(assert (=> b!72179 m!69505))

(assert (=> b!72179 m!69505))

(assert (=> b!72179 m!69507))

(assert (=> b!72181 m!69505))

(assert (=> b!72181 m!69505))

(declare-fun m!70055 () Bool)

(assert (=> b!72181 m!70055))

(assert (=> b!72183 m!69505))

(assert (=> b!72183 m!69505))

(assert (=> b!72183 m!69507))

(assert (=> b!71453 d!16477))

(declare-fun b!72184 () Bool)

(declare-fun e!47232 () Option!136)

(assert (=> b!72184 (= e!47232 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31439)))))))

(declare-fun d!16479 () Bool)

(declare-fun c!10607 () Bool)

(assert (=> d!16479 (= c!10607 (and ((_ is Cons!1475) (toList!714 lt!31439)) (= (_1!1067 (h!2061 (toList!714 lt!31439))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16479 (= (getValueByKey!130 (toList!714 lt!31439) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47232)))

(declare-fun b!72185 () Bool)

(declare-fun e!47233 () Option!136)

(assert (=> b!72185 (= e!47232 e!47233)))

(declare-fun c!10608 () Bool)

(assert (=> b!72185 (= c!10608 (and ((_ is Cons!1475) (toList!714 lt!31439)) (not (= (_1!1067 (h!2061 (toList!714 lt!31439))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72187 () Bool)

(assert (=> b!72187 (= e!47233 None!134)))

(declare-fun b!72186 () Bool)

(assert (=> b!72186 (= e!47233 (getValueByKey!130 (t!5006 (toList!714 lt!31439)) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16479 c!10607) b!72184))

(assert (= (and d!16479 (not c!10607)) b!72185))

(assert (= (and b!72185 c!10608) b!72186))

(assert (= (and b!72185 (not c!10608)) b!72187))

(declare-fun m!70057 () Bool)

(assert (=> b!72186 m!70057))

(assert (=> b!71076 d!16479))

(declare-fun d!16481 () Bool)

(declare-fun e!47235 () Bool)

(assert (=> d!16481 e!47235))

(declare-fun res!38429 () Bool)

(assert (=> d!16481 (=> res!38429 e!47235)))

(declare-fun lt!32156 () Bool)

(assert (=> d!16481 (= res!38429 (not lt!32156))))

(declare-fun lt!32154 () Bool)

(assert (=> d!16481 (= lt!32156 lt!32154)))

(declare-fun lt!32155 () Unit!1989)

(declare-fun e!47234 () Unit!1989)

(assert (=> d!16481 (= lt!32155 e!47234)))

(declare-fun c!10609 () Bool)

(assert (=> d!16481 (= c!10609 lt!32154)))

(assert (=> d!16481 (= lt!32154 (containsKey!134 (toList!714 lt!31245) lt!31251))))

(assert (=> d!16481 (= (contains!716 lt!31245 lt!31251) lt!32156)))

(declare-fun b!72188 () Bool)

(declare-fun lt!32157 () Unit!1989)

(assert (=> b!72188 (= e!47234 lt!32157)))

(assert (=> b!72188 (= lt!32157 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31245) lt!31251))))

(assert (=> b!72188 (isDefined!84 (getValueByKey!130 (toList!714 lt!31245) lt!31251))))

(declare-fun b!72189 () Bool)

(declare-fun Unit!2050 () Unit!1989)

(assert (=> b!72189 (= e!47234 Unit!2050)))

(declare-fun b!72190 () Bool)

(assert (=> b!72190 (= e!47235 (isDefined!84 (getValueByKey!130 (toList!714 lt!31245) lt!31251)))))

(assert (= (and d!16481 c!10609) b!72188))

(assert (= (and d!16481 (not c!10609)) b!72189))

(assert (= (and d!16481 (not res!38429)) b!72190))

(declare-fun m!70059 () Bool)

(assert (=> d!16481 m!70059))

(declare-fun m!70061 () Bool)

(assert (=> b!72188 m!70061))

(assert (=> b!72188 m!68321))

(assert (=> b!72188 m!68321))

(declare-fun m!70063 () Bool)

(assert (=> b!72188 m!70063))

(assert (=> b!72190 m!68321))

(assert (=> b!72190 m!68321))

(assert (=> b!72190 m!70063))

(assert (=> d!15887 d!16481))

(assert (=> d!15887 d!15867))

(assert (=> d!15887 d!15869))

(assert (=> d!15887 d!15873))

(declare-fun d!16483 () Bool)

(assert (=> d!16483 (= (apply!74 (+!91 lt!31245 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31251) (apply!74 lt!31245 lt!31251))))

(assert (=> d!16483 true))

(declare-fun _$34!803 () Unit!1989)

(assert (=> d!16483 (= (choose!411 lt!31245 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31251) _$34!803)))

(declare-fun bs!3109 () Bool)

(assert (= bs!3109 d!16483))

(assert (=> bs!3109 m!67649))

(assert (=> bs!3109 m!67649))

(assert (=> bs!3109 m!67659))

(assert (=> bs!3109 m!67655))

(assert (=> d!15887 d!16483))

(declare-fun d!16485 () Bool)

(assert (=> d!16485 (= (size!2084 newMap!16) (bvadd (_size!393 newMap!16) (bvsdiv (bvadd (extraKeys!2054 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!71372 d!16485))

(declare-fun d!16487 () Bool)

(declare-fun res!38430 () Bool)

(declare-fun e!47236 () Bool)

(assert (=> d!16487 (=> res!38430 e!47236)))

(assert (=> d!16487 (= res!38430 (and ((_ is Cons!1475) lt!31411) (= (_1!1067 (h!2061 lt!31411)) (_1!1067 lt!31109))))))

(assert (=> d!16487 (= (containsKey!134 lt!31411 (_1!1067 lt!31109)) e!47236)))

(declare-fun b!72191 () Bool)

(declare-fun e!47237 () Bool)

(assert (=> b!72191 (= e!47236 e!47237)))

(declare-fun res!38431 () Bool)

(assert (=> b!72191 (=> (not res!38431) (not e!47237))))

(assert (=> b!72191 (= res!38431 (and (or (not ((_ is Cons!1475) lt!31411)) (bvsle (_1!1067 (h!2061 lt!31411)) (_1!1067 lt!31109))) ((_ is Cons!1475) lt!31411) (bvslt (_1!1067 (h!2061 lt!31411)) (_1!1067 lt!31109))))))

(declare-fun b!72192 () Bool)

(assert (=> b!72192 (= e!47237 (containsKey!134 (t!5006 lt!31411) (_1!1067 lt!31109)))))

(assert (= (and d!16487 (not res!38430)) b!72191))

(assert (= (and b!72191 res!38431) b!72192))

(declare-fun m!70065 () Bool)

(assert (=> b!72192 m!70065))

(assert (=> b!71036 d!16487))

(declare-fun d!16489 () Bool)

(assert (=> d!16489 (= (apply!74 lt!31487 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1139 (getValueByKey!130 (toList!714 lt!31487) (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3110 () Bool)

(assert (= bs!3110 d!16489))

(assert (=> bs!3110 m!67861))

(assert (=> bs!3110 m!68893))

(assert (=> bs!3110 m!68893))

(declare-fun m!70067 () Bool)

(assert (=> bs!3110 m!70067))

(assert (=> b!71130 d!16489))

(declare-fun d!16491 () Bool)

(declare-fun c!10610 () Bool)

(assert (=> d!16491 (= c!10610 ((_ is ValueCellFull!890) (select (arr!1841 (_values!2174 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!47238 () V!2937)

(assert (=> d!16491 (= (get!1136 (select (arr!1841 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47238)))

(declare-fun b!72193 () Bool)

(assert (=> b!72193 (= e!47238 (get!1137 (select (arr!1841 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72194 () Bool)

(assert (=> b!72194 (= e!47238 (get!1138 (select (arr!1841 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16491 c!10610) b!72193))

(assert (= (and d!16491 (not c!10610)) b!72194))

(assert (=> b!72193 m!68053))

(assert (=> b!72193 m!67865))

(declare-fun m!70069 () Bool)

(assert (=> b!72193 m!70069))

(assert (=> b!72194 m!68053))

(assert (=> b!72194 m!67865))

(declare-fun m!70071 () Bool)

(assert (=> b!72194 m!70071))

(assert (=> b!71130 d!16491))

(assert (=> b!71215 d!16249))

(assert (=> b!71215 d!16251))

(assert (=> b!71060 d!16173))

(declare-fun d!16493 () Bool)

(declare-fun lt!32158 () Bool)

(assert (=> d!16493 (= lt!32158 (select (content!76 lt!31366) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun e!47239 () Bool)

(assert (=> d!16493 (= lt!32158 e!47239)))

(declare-fun res!38433 () Bool)

(assert (=> d!16493 (=> (not res!38433) (not e!47239))))

(assert (=> d!16493 (= res!38433 ((_ is Cons!1475) lt!31366))))

(assert (=> d!16493 (= (contains!717 lt!31366 (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))) lt!32158)))

(declare-fun b!72195 () Bool)

(declare-fun e!47240 () Bool)

(assert (=> b!72195 (= e!47239 e!47240)))

(declare-fun res!38432 () Bool)

(assert (=> b!72195 (=> res!38432 e!47240)))

(assert (=> b!72195 (= res!38432 (= (h!2061 lt!31366) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun b!72196 () Bool)

(assert (=> b!72196 (= e!47240 (contains!717 (t!5006 lt!31366) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(assert (= (and d!16493 res!38433) b!72195))

(assert (= (and b!72195 (not res!38432)) b!72196))

(declare-fun m!70073 () Bool)

(assert (=> d!16493 m!70073))

(declare-fun m!70075 () Bool)

(assert (=> d!16493 m!70075))

(declare-fun m!70077 () Bool)

(assert (=> b!72196 m!70077))

(assert (=> b!71010 d!16493))

(declare-fun d!16495 () Bool)

(assert (=> d!16495 (isDefined!84 (getValueByKey!130 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun lt!32159 () Unit!1989)

(assert (=> d!16495 (= lt!32159 (choose!405 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun e!47241 () Bool)

(assert (=> d!16495 e!47241))

(declare-fun res!38434 () Bool)

(assert (=> d!16495 (=> (not res!38434) (not e!47241))))

(assert (=> d!16495 (= res!38434 (isStrictlySorted!286 (toList!714 e!46437)))))

(assert (=> d!16495 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) lt!32159)))

(declare-fun b!72197 () Bool)

(assert (=> b!72197 (= e!47241 (containsKey!134 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!16495 res!38434) b!72197))

(assert (=> d!16495 m!67435))

(assert (=> d!16495 m!68645))

(assert (=> d!16495 m!68645))

(assert (=> d!16495 m!68647))

(assert (=> d!16495 m!67435))

(declare-fun m!70079 () Bool)

(assert (=> d!16495 m!70079))

(declare-fun m!70081 () Bool)

(assert (=> d!16495 m!70081))

(assert (=> b!72197 m!67435))

(assert (=> b!72197 m!68641))

(assert (=> b!71458 d!16495))

(declare-fun d!16497 () Bool)

(assert (=> d!16497 (= (isDefined!84 (getValueByKey!130 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))) (not (isEmpty!318 (getValueByKey!130 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun bs!3111 () Bool)

(assert (= bs!3111 d!16497))

(assert (=> bs!3111 m!68645))

(declare-fun m!70083 () Bool)

(assert (=> bs!3111 m!70083))

(assert (=> b!71458 d!16497))

(declare-fun b!72198 () Bool)

(declare-fun e!47242 () Option!136)

(assert (=> b!72198 (= e!47242 (Some!135 (_2!1067 (h!2061 (toList!714 e!46437)))))))

(declare-fun c!10611 () Bool)

(declare-fun d!16499 () Bool)

(assert (=> d!16499 (= c!10611 (and ((_ is Cons!1475) (toList!714 e!46437)) (= (_1!1067 (h!2061 (toList!714 e!46437))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!16499 (= (getValueByKey!130 (toList!714 e!46437) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) e!47242)))

(declare-fun b!72199 () Bool)

(declare-fun e!47243 () Option!136)

(assert (=> b!72199 (= e!47242 e!47243)))

(declare-fun c!10612 () Bool)

(assert (=> b!72199 (= c!10612 (and ((_ is Cons!1475) (toList!714 e!46437)) (not (= (_1!1067 (h!2061 (toList!714 e!46437))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun b!72201 () Bool)

(assert (=> b!72201 (= e!47243 None!134)))

(declare-fun b!72200 () Bool)

(assert (=> b!72200 (= e!47243 (getValueByKey!130 (t!5006 (toList!714 e!46437)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!16499 c!10611) b!72198))

(assert (= (and d!16499 (not c!10611)) b!72199))

(assert (= (and b!72199 c!10612) b!72200))

(assert (= (and b!72199 (not c!10612)) b!72201))

(assert (=> b!72200 m!67435))

(declare-fun m!70085 () Bool)

(assert (=> b!72200 m!70085))

(assert (=> b!71458 d!16499))

(assert (=> b!71377 d!16277))

(assert (=> b!71377 d!16279))

(declare-fun d!16501 () Bool)

(assert (=> d!16501 (isDefined!84 (getValueByKey!130 (toList!714 lt!31369) (_1!1067 lt!31103)))))

(declare-fun lt!32160 () Unit!1989)

(assert (=> d!16501 (= lt!32160 (choose!405 (toList!714 lt!31369) (_1!1067 lt!31103)))))

(declare-fun e!47244 () Bool)

(assert (=> d!16501 e!47244))

(declare-fun res!38435 () Bool)

(assert (=> d!16501 (=> (not res!38435) (not e!47244))))

(assert (=> d!16501 (= res!38435 (isStrictlySorted!286 (toList!714 lt!31369)))))

(assert (=> d!16501 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31369) (_1!1067 lt!31103)) lt!32160)))

(declare-fun b!72202 () Bool)

(assert (=> b!72202 (= e!47244 (containsKey!134 (toList!714 lt!31369) (_1!1067 lt!31103)))))

(assert (= (and d!16501 res!38435) b!72202))

(assert (=> d!16501 m!67779))

(assert (=> d!16501 m!67779))

(assert (=> d!16501 m!68389))

(declare-fun m!70087 () Bool)

(assert (=> d!16501 m!70087))

(declare-fun m!70089 () Bool)

(assert (=> d!16501 m!70089))

(assert (=> b!72202 m!68385))

(assert (=> b!71266 d!16501))

(declare-fun d!16503 () Bool)

(assert (=> d!16503 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31369) (_1!1067 lt!31103))) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31369) (_1!1067 lt!31103)))))))

(declare-fun bs!3112 () Bool)

(assert (= bs!3112 d!16503))

(assert (=> bs!3112 m!67779))

(declare-fun m!70091 () Bool)

(assert (=> bs!3112 m!70091))

(assert (=> b!71266 d!16503))

(assert (=> b!71266 d!15839))

(declare-fun b!72215 () Bool)

(declare-fun e!47251 () SeekEntryResult!238)

(declare-fun e!47253 () SeekEntryResult!238)

(assert (=> b!72215 (= e!47251 e!47253)))

(declare-fun lt!32166 () (_ BitVec 64))

(declare-fun c!10620 () Bool)

(assert (=> b!72215 (= c!10620 (= lt!32166 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(declare-fun b!72216 () Bool)

(declare-fun e!47252 () SeekEntryResult!238)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!72216 (= e!47252 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11009 lt!31499) #b00000000000000000000000000000001) (nextIndex!0 (index!3084 lt!31499) (x!11009 lt!31499) (mask!6147 newMap!16)) (index!3084 lt!31499) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(declare-fun b!72217 () Bool)

(declare-fun c!10621 () Bool)

(assert (=> b!72217 (= c!10621 (= lt!32166 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72217 (= e!47253 e!47252)))

(declare-fun d!16505 () Bool)

(declare-fun lt!32165 () SeekEntryResult!238)

(assert (=> d!16505 (and (or ((_ is Undefined!238) lt!32165) (not ((_ is Found!238) lt!32165)) (and (bvsge (index!3083 lt!32165) #b00000000000000000000000000000000) (bvslt (index!3083 lt!32165) (size!2078 (_keys!3838 newMap!16))))) (or ((_ is Undefined!238) lt!32165) ((_ is Found!238) lt!32165) (not ((_ is MissingVacant!238) lt!32165)) (not (= (index!3085 lt!32165) (index!3084 lt!31499))) (and (bvsge (index!3085 lt!32165) #b00000000000000000000000000000000) (bvslt (index!3085 lt!32165) (size!2078 (_keys!3838 newMap!16))))) (or ((_ is Undefined!238) lt!32165) (ite ((_ is Found!238) lt!32165) (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!32165)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (and ((_ is MissingVacant!238) lt!32165) (= (index!3085 lt!32165) (index!3084 lt!31499)) (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3085 lt!32165)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!16505 (= lt!32165 e!47251)))

(declare-fun c!10619 () Bool)

(assert (=> d!16505 (= c!10619 (bvsge (x!11009 lt!31499) #b01111111111111111111111111111110))))

(assert (=> d!16505 (= lt!32166 (select (arr!1840 (_keys!3838 newMap!16)) (index!3084 lt!31499)))))

(assert (=> d!16505 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16505 (= (seekKeyOrZeroReturnVacant!0 (x!11009 lt!31499) (index!3084 lt!31499) (index!3084 lt!31499) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)) lt!32165)))

(declare-fun b!72218 () Bool)

(assert (=> b!72218 (= e!47252 (MissingVacant!238 (index!3084 lt!31499)))))

(declare-fun b!72219 () Bool)

(assert (=> b!72219 (= e!47251 Undefined!238)))

(declare-fun b!72220 () Bool)

(assert (=> b!72220 (= e!47253 (Found!238 (index!3084 lt!31499)))))

(assert (= (and d!16505 c!10619) b!72219))

(assert (= (and d!16505 (not c!10619)) b!72215))

(assert (= (and b!72215 c!10620) b!72220))

(assert (= (and b!72215 (not c!10620)) b!72217))

(assert (= (and b!72217 c!10621) b!72218))

(assert (= (and b!72217 (not c!10621)) b!72216))

(declare-fun m!70093 () Bool)

(assert (=> b!72216 m!70093))

(assert (=> b!72216 m!70093))

(assert (=> b!72216 m!67435))

(declare-fun m!70095 () Bool)

(assert (=> b!72216 m!70095))

(declare-fun m!70097 () Bool)

(assert (=> d!16505 m!70097))

(declare-fun m!70099 () Bool)

(assert (=> d!16505 m!70099))

(assert (=> d!16505 m!68105))

(assert (=> d!16505 m!67873))

(assert (=> b!71158 d!16505))

(declare-fun d!16507 () Bool)

(assert (=> d!16507 (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!32167 () Unit!1989)

(assert (=> d!16507 (= lt!32167 (choose!405 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47254 () Bool)

(assert (=> d!16507 e!47254))

(declare-fun res!38436 () Bool)

(assert (=> d!16507 (=> (not res!38436) (not e!47254))))

(assert (=> d!16507 (= res!38436 (isStrictlySorted!286 (toList!714 lt!31388)))))

(assert (=> d!16507 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000) lt!32167)))

(declare-fun b!72221 () Bool)

(assert (=> b!72221 (= e!47254 (containsKey!134 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16507 res!38436) b!72221))

(assert (=> d!16507 m!68451))

(assert (=> d!16507 m!68451))

(assert (=> d!16507 m!68453))

(declare-fun m!70101 () Bool)

(assert (=> d!16507 m!70101))

(assert (=> d!16507 m!69463))

(assert (=> b!72221 m!68447))

(assert (=> b!71313 d!16507))

(declare-fun d!16509 () Bool)

(assert (=> d!16509 (= (isDefined!84 (getValueByKey!130 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!318 (getValueByKey!130 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3113 () Bool)

(assert (= bs!3113 d!16509))

(assert (=> bs!3113 m!68451))

(declare-fun m!70103 () Bool)

(assert (=> bs!3113 m!70103))

(assert (=> b!71313 d!16509))

(declare-fun b!72222 () Bool)

(declare-fun e!47255 () Option!136)

(assert (=> b!72222 (= e!47255 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31388)))))))

(declare-fun d!16511 () Bool)

(declare-fun c!10622 () Bool)

(assert (=> d!16511 (= c!10622 (and ((_ is Cons!1475) (toList!714 lt!31388)) (= (_1!1067 (h!2061 (toList!714 lt!31388))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16511 (= (getValueByKey!130 (toList!714 lt!31388) #b1000000000000000000000000000000000000000000000000000000000000000) e!47255)))

(declare-fun b!72223 () Bool)

(declare-fun e!47256 () Option!136)

(assert (=> b!72223 (= e!47255 e!47256)))

(declare-fun c!10623 () Bool)

(assert (=> b!72223 (= c!10623 (and ((_ is Cons!1475) (toList!714 lt!31388)) (not (= (_1!1067 (h!2061 (toList!714 lt!31388))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!72225 () Bool)

(assert (=> b!72225 (= e!47256 None!134)))

(declare-fun b!72224 () Bool)

(assert (=> b!72224 (= e!47256 (getValueByKey!130 (t!5006 (toList!714 lt!31388)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!16511 c!10622) b!72222))

(assert (= (and d!16511 (not c!10622)) b!72223))

(assert (= (and b!72223 c!10623) b!72224))

(assert (= (and b!72223 (not c!10623)) b!72225))

(declare-fun m!70105 () Bool)

(assert (=> b!72224 m!70105))

(assert (=> b!71313 d!16511))

(declare-fun d!16513 () Bool)

(declare-fun e!47258 () Bool)

(assert (=> d!16513 e!47258))

(declare-fun res!38437 () Bool)

(assert (=> d!16513 (=> res!38437 e!47258)))

(declare-fun lt!32170 () Bool)

(assert (=> d!16513 (= res!38437 (not lt!32170))))

(declare-fun lt!32168 () Bool)

(assert (=> d!16513 (= lt!32170 lt!32168)))

(declare-fun lt!32169 () Unit!1989)

(declare-fun e!47257 () Unit!1989)

(assert (=> d!16513 (= lt!32169 e!47257)))

(declare-fun c!10624 () Bool)

(assert (=> d!16513 (= c!10624 lt!32168)))

(assert (=> d!16513 (= lt!32168 (containsKey!134 (toList!714 lt!31439) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!16513 (= (contains!716 lt!31439 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32170)))

(declare-fun b!72226 () Bool)

(declare-fun lt!32171 () Unit!1989)

(assert (=> b!72226 (= e!47257 lt!32171)))

(assert (=> b!72226 (= lt!32171 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31439) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> b!72226 (isDefined!84 (getValueByKey!130 (toList!714 lt!31439) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72227 () Bool)

(declare-fun Unit!2051 () Unit!1989)

(assert (=> b!72227 (= e!47257 Unit!2051)))

(declare-fun b!72228 () Bool)

(assert (=> b!72228 (= e!47258 (isDefined!84 (getValueByKey!130 (toList!714 lt!31439) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16513 c!10624) b!72226))

(assert (= (and d!16513 (not c!10624)) b!72227))

(assert (= (and d!16513 (not res!38437)) b!72228))

(declare-fun m!70107 () Bool)

(assert (=> d!16513 m!70107))

(declare-fun m!70109 () Bool)

(assert (=> b!72226 m!70109))

(assert (=> b!72226 m!67947))

(assert (=> b!72226 m!67947))

(declare-fun m!70111 () Bool)

(assert (=> b!72226 m!70111))

(assert (=> b!72228 m!67947))

(assert (=> b!72228 m!67947))

(assert (=> b!72228 m!70111))

(assert (=> d!15785 d!16513))

(declare-fun b!72229 () Bool)

(declare-fun e!47259 () Option!136)

(assert (=> b!72229 (= e!47259 (Some!135 (_2!1067 (h!2061 lt!31440))))))

(declare-fun d!16515 () Bool)

(declare-fun c!10625 () Bool)

(assert (=> d!16515 (= c!10625 (and ((_ is Cons!1475) lt!31440) (= (_1!1067 (h!2061 lt!31440)) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16515 (= (getValueByKey!130 lt!31440 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47259)))

(declare-fun b!72230 () Bool)

(declare-fun e!47260 () Option!136)

(assert (=> b!72230 (= e!47259 e!47260)))

(declare-fun c!10626 () Bool)

(assert (=> b!72230 (= c!10626 (and ((_ is Cons!1475) lt!31440) (not (= (_1!1067 (h!2061 lt!31440)) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72232 () Bool)

(assert (=> b!72232 (= e!47260 None!134)))

(declare-fun b!72231 () Bool)

(assert (=> b!72231 (= e!47260 (getValueByKey!130 (t!5006 lt!31440) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16515 c!10625) b!72229))

(assert (= (and d!16515 (not c!10625)) b!72230))

(assert (= (and b!72230 c!10626) b!72231))

(assert (= (and b!72230 (not c!10626)) b!72232))

(declare-fun m!70113 () Bool)

(assert (=> b!72231 m!70113))

(assert (=> d!15785 d!16515))

(declare-fun d!16517 () Bool)

(assert (=> d!16517 (= (getValueByKey!130 lt!31440 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!32172 () Unit!1989)

(assert (=> d!16517 (= lt!32172 (choose!404 lt!31440 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun e!47261 () Bool)

(assert (=> d!16517 e!47261))

(declare-fun res!38438 () Bool)

(assert (=> d!16517 (=> (not res!38438) (not e!47261))))

(assert (=> d!16517 (= res!38438 (isStrictlySorted!286 lt!31440))))

(assert (=> d!16517 (= (lemmaContainsTupThenGetReturnValue!50 lt!31440 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32172)))

(declare-fun b!72233 () Bool)

(declare-fun res!38439 () Bool)

(assert (=> b!72233 (=> (not res!38439) (not e!47261))))

(assert (=> b!72233 (= res!38439 (containsKey!134 lt!31440 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72234 () Bool)

(assert (=> b!72234 (= e!47261 (contains!717 lt!31440 (tuple2!2113 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16517 res!38438) b!72233))

(assert (= (and b!72233 res!38439) b!72234))

(assert (=> d!16517 m!67941))

(declare-fun m!70115 () Bool)

(assert (=> d!16517 m!70115))

(declare-fun m!70117 () Bool)

(assert (=> d!16517 m!70117))

(declare-fun m!70119 () Bool)

(assert (=> b!72233 m!70119))

(declare-fun m!70121 () Bool)

(assert (=> b!72234 m!70121))

(assert (=> d!15785 d!16517))

(declare-fun b!72235 () Bool)

(declare-fun e!47264 () Bool)

(declare-fun lt!32173 () List!1479)

(assert (=> b!72235 (= e!47264 (contains!717 lt!32173 (tuple2!2113 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72236 () Bool)

(declare-fun e!47262 () List!1479)

(assert (=> b!72236 (= e!47262 (insertStrictlySorted!53 (t!5006 (toList!714 lt!31105)) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun d!16519 () Bool)

(assert (=> d!16519 e!47264))

(declare-fun res!38441 () Bool)

(assert (=> d!16519 (=> (not res!38441) (not e!47264))))

(assert (=> d!16519 (= res!38441 (isStrictlySorted!286 lt!32173))))

(declare-fun e!47263 () List!1479)

(assert (=> d!16519 (= lt!32173 e!47263)))

(declare-fun c!10630 () Bool)

(assert (=> d!16519 (= c!10630 (and ((_ is Cons!1475) (toList!714 lt!31105)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16519 (isStrictlySorted!286 (toList!714 lt!31105))))

(assert (=> d!16519 (= (insertStrictlySorted!53 (toList!714 lt!31105) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32173)))

(declare-fun b!72237 () Bool)

(declare-fun c!10629 () Bool)

(assert (=> b!72237 (= c!10629 (and ((_ is Cons!1475) (toList!714 lt!31105)) (bvsgt (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun e!47266 () List!1479)

(declare-fun e!47265 () List!1479)

(assert (=> b!72237 (= e!47266 e!47265)))

(declare-fun b!72238 () Bool)

(assert (=> b!72238 (= e!47263 e!47266)))

(declare-fun c!10628 () Bool)

(assert (=> b!72238 (= c!10628 (and ((_ is Cons!1475) (toList!714 lt!31105)) (= (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72239 () Bool)

(declare-fun call!6286 () List!1479)

(assert (=> b!72239 (= e!47266 call!6286)))

(declare-fun b!72240 () Bool)

(declare-fun res!38440 () Bool)

(assert (=> b!72240 (=> (not res!38440) (not e!47264))))

(assert (=> b!72240 (= res!38440 (containsKey!134 lt!32173 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72241 () Bool)

(assert (=> b!72241 (= e!47262 (ite c!10628 (t!5006 (toList!714 lt!31105)) (ite c!10629 (Cons!1475 (h!2061 (toList!714 lt!31105)) (t!5006 (toList!714 lt!31105))) Nil!1476)))))

(declare-fun b!72242 () Bool)

(declare-fun call!6285 () List!1479)

(assert (=> b!72242 (= e!47263 call!6285)))

(declare-fun b!72243 () Bool)

(declare-fun call!6284 () List!1479)

(assert (=> b!72243 (= e!47265 call!6284)))

(declare-fun bm!6281 () Bool)

(assert (=> bm!6281 (= call!6284 call!6286)))

(declare-fun bm!6282 () Bool)

(assert (=> bm!6282 (= call!6286 call!6285)))

(declare-fun bm!6283 () Bool)

(assert (=> bm!6283 (= call!6285 ($colon$colon!64 e!47262 (ite c!10630 (h!2061 (toList!714 lt!31105)) (tuple2!2113 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun c!10627 () Bool)

(assert (=> bm!6283 (= c!10627 c!10630)))

(declare-fun b!72244 () Bool)

(assert (=> b!72244 (= e!47265 call!6284)))

(assert (= (and d!16519 c!10630) b!72242))

(assert (= (and d!16519 (not c!10630)) b!72238))

(assert (= (and b!72238 c!10628) b!72239))

(assert (= (and b!72238 (not c!10628)) b!72237))

(assert (= (and b!72237 c!10629) b!72243))

(assert (= (and b!72237 (not c!10629)) b!72244))

(assert (= (or b!72243 b!72244) bm!6281))

(assert (= (or b!72239 bm!6281) bm!6282))

(assert (= (or b!72242 bm!6282) bm!6283))

(assert (= (and bm!6283 c!10627) b!72236))

(assert (= (and bm!6283 (not c!10627)) b!72241))

(assert (= (and d!16519 res!38441) b!72240))

(assert (= (and b!72240 res!38440) b!72235))

(declare-fun m!70123 () Bool)

(assert (=> b!72235 m!70123))

(declare-fun m!70125 () Bool)

(assert (=> b!72236 m!70125))

(declare-fun m!70127 () Bool)

(assert (=> b!72240 m!70127))

(declare-fun m!70129 () Bool)

(assert (=> bm!6283 m!70129))

(declare-fun m!70131 () Bool)

(assert (=> d!16519 m!70131))

(assert (=> d!16519 m!68041))

(assert (=> d!15785 d!16519))

(declare-fun b!72245 () Bool)

(declare-fun e!47267 () Option!136)

(assert (=> b!72245 (= e!47267 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31592)))))))

(declare-fun d!16521 () Bool)

(declare-fun c!10631 () Bool)

(assert (=> d!16521 (= c!10631 (and ((_ is Cons!1475) (toList!714 lt!31592)) (= (_1!1067 (h!2061 (toList!714 lt!31592))) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16521 (= (getValueByKey!130 (toList!714 lt!31592) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47267)))

(declare-fun b!72246 () Bool)

(declare-fun e!47268 () Option!136)

(assert (=> b!72246 (= e!47267 e!47268)))

(declare-fun c!10632 () Bool)

(assert (=> b!72246 (= c!10632 (and ((_ is Cons!1475) (toList!714 lt!31592)) (not (= (_1!1067 (h!2061 (toList!714 lt!31592))) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72248 () Bool)

(assert (=> b!72248 (= e!47268 None!134)))

(declare-fun b!72247 () Bool)

(assert (=> b!72247 (= e!47268 (getValueByKey!130 (t!5006 (toList!714 lt!31592)) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16521 c!10631) b!72245))

(assert (= (and d!16521 (not c!10631)) b!72246))

(assert (= (and b!72246 c!10632) b!72247))

(assert (= (and b!72246 (not c!10632)) b!72248))

(declare-fun m!70133 () Bool)

(assert (=> b!72247 m!70133))

(assert (=> b!71257 d!16521))

(declare-fun d!16523 () Bool)

(declare-fun res!38442 () Bool)

(declare-fun e!47269 () Bool)

(assert (=> d!16523 (=> res!38442 e!47269)))

(assert (=> d!16523 (= res!38442 (and ((_ is Cons!1475) lt!31610) (= (_1!1067 (h!2061 lt!31610)) (_1!1067 lt!31103))))))

(assert (=> d!16523 (= (containsKey!134 lt!31610 (_1!1067 lt!31103)) e!47269)))

(declare-fun b!72249 () Bool)

(declare-fun e!47270 () Bool)

(assert (=> b!72249 (= e!47269 e!47270)))

(declare-fun res!38443 () Bool)

(assert (=> b!72249 (=> (not res!38443) (not e!47270))))

(assert (=> b!72249 (= res!38443 (and (or (not ((_ is Cons!1475) lt!31610)) (bvsle (_1!1067 (h!2061 lt!31610)) (_1!1067 lt!31103))) ((_ is Cons!1475) lt!31610) (bvslt (_1!1067 (h!2061 lt!31610)) (_1!1067 lt!31103))))))

(declare-fun b!72250 () Bool)

(assert (=> b!72250 (= e!47270 (containsKey!134 (t!5006 lt!31610) (_1!1067 lt!31103)))))

(assert (= (and d!16523 (not res!38442)) b!72249))

(assert (= (and b!72249 res!38443) b!72250))

(declare-fun m!70135 () Bool)

(assert (=> b!72250 m!70135))

(assert (=> b!71280 d!16523))

(declare-fun b!72251 () Bool)

(declare-fun e!47271 () Option!136)

(assert (=> b!72251 (= e!47271 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31544)))))))

(declare-fun c!10633 () Bool)

(declare-fun d!16525 () Bool)

(assert (=> d!16525 (= c!10633 (and ((_ is Cons!1475) (toList!714 lt!31544)) (= (_1!1067 (h!2061 (toList!714 lt!31544))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!16525 (= (getValueByKey!130 (toList!714 lt!31544) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!47271)))

(declare-fun b!72252 () Bool)

(declare-fun e!47272 () Option!136)

(assert (=> b!72252 (= e!47271 e!47272)))

(declare-fun c!10634 () Bool)

(assert (=> b!72252 (= c!10634 (and ((_ is Cons!1475) (toList!714 lt!31544)) (not (= (_1!1067 (h!2061 (toList!714 lt!31544))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!72254 () Bool)

(assert (=> b!72254 (= e!47272 None!134)))

(declare-fun b!72253 () Bool)

(assert (=> b!72253 (= e!47272 (getValueByKey!130 (t!5006 (toList!714 lt!31544)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!16525 c!10633) b!72251))

(assert (= (and d!16525 (not c!10633)) b!72252))

(assert (= (and b!72252 c!10634) b!72253))

(assert (= (and b!72252 (not c!10634)) b!72254))

(declare-fun m!70137 () Bool)

(assert (=> b!72253 m!70137))

(assert (=> b!71220 d!16525))

(declare-fun d!16527 () Bool)

(assert (=> d!16527 (= (isEmpty!319 (toList!714 lt!31388)) ((_ is Nil!1476) (toList!714 lt!31388)))))

(assert (=> d!15955 d!16527))

(declare-fun b!72255 () Bool)

(declare-fun e!47273 () Option!136)

(assert (=> b!72255 (= e!47273 (Some!135 (_2!1067 (h!2061 (t!5006 lt!31370)))))))

(declare-fun d!16529 () Bool)

(declare-fun c!10635 () Bool)

(assert (=> d!16529 (= c!10635 (and ((_ is Cons!1475) (t!5006 lt!31370)) (= (_1!1067 (h!2061 (t!5006 lt!31370))) (_1!1067 lt!31103))))))

(assert (=> d!16529 (= (getValueByKey!130 (t!5006 lt!31370) (_1!1067 lt!31103)) e!47273)))

(declare-fun b!72256 () Bool)

(declare-fun e!47274 () Option!136)

(assert (=> b!72256 (= e!47273 e!47274)))

(declare-fun c!10636 () Bool)

(assert (=> b!72256 (= c!10636 (and ((_ is Cons!1475) (t!5006 lt!31370)) (not (= (_1!1067 (h!2061 (t!5006 lt!31370))) (_1!1067 lt!31103)))))))

(declare-fun b!72258 () Bool)

(assert (=> b!72258 (= e!47274 None!134)))

(declare-fun b!72257 () Bool)

(assert (=> b!72257 (= e!47274 (getValueByKey!130 (t!5006 (t!5006 lt!31370)) (_1!1067 lt!31103)))))

(assert (= (and d!16529 c!10635) b!72255))

(assert (= (and d!16529 (not c!10635)) b!72256))

(assert (= (and b!72256 c!10636) b!72257))

(assert (= (and b!72256 (not c!10636)) b!72258))

(declare-fun m!70139 () Bool)

(assert (=> b!72257 m!70139))

(assert (=> b!71271 d!16529))

(declare-fun d!16531 () Bool)

(declare-fun c!10637 () Bool)

(assert (=> d!16531 (= c!10637 ((_ is Nil!1476) (toList!714 lt!31358)))))

(declare-fun e!47275 () (InoxSet tuple2!2112))

(assert (=> d!16531 (= (content!76 (toList!714 lt!31358)) e!47275)))

(declare-fun b!72259 () Bool)

(assert (=> b!72259 (= e!47275 ((as const (Array tuple2!2112 Bool)) false))))

(declare-fun b!72260 () Bool)

(assert (=> b!72260 (= e!47275 ((_ map or) (store ((as const (Array tuple2!2112 Bool)) false) (h!2061 (toList!714 lt!31358)) true) (content!76 (t!5006 (toList!714 lt!31358)))))))

(assert (= (and d!16531 c!10637) b!72259))

(assert (= (and d!16531 (not c!10637)) b!72260))

(declare-fun m!70141 () Bool)

(assert (=> b!72260 m!70141))

(assert (=> b!72260 m!69881))

(assert (=> d!15861 d!16531))

(declare-fun b!72261 () Bool)

(declare-fun e!47276 () Option!136)

(assert (=> b!72261 (= e!47276 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31657)))))))

(declare-fun d!16533 () Bool)

(declare-fun c!10638 () Bool)

(assert (=> d!16533 (= c!10638 (and ((_ is Cons!1475) (toList!714 lt!31657)) (= (_1!1067 (h!2061 (toList!714 lt!31657))) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16533 (= (getValueByKey!130 (toList!714 lt!31657) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47276)))

(declare-fun b!72262 () Bool)

(declare-fun e!47277 () Option!136)

(assert (=> b!72262 (= e!47276 e!47277)))

(declare-fun c!10639 () Bool)

(assert (=> b!72262 (= c!10639 (and ((_ is Cons!1475) (toList!714 lt!31657)) (not (= (_1!1067 (h!2061 (toList!714 lt!31657))) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72264 () Bool)

(assert (=> b!72264 (= e!47277 None!134)))

(declare-fun b!72263 () Bool)

(assert (=> b!72263 (= e!47277 (getValueByKey!130 (t!5006 (toList!714 lt!31657)) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16533 c!10638) b!72261))

(assert (= (and d!16533 (not c!10638)) b!72262))

(assert (= (and b!72262 c!10639) b!72263))

(assert (= (and b!72262 (not c!10639)) b!72264))

(declare-fun m!70143 () Bool)

(assert (=> b!72263 m!70143))

(assert (=> b!71385 d!16533))

(declare-fun d!16535 () Bool)

(assert (=> d!16535 (= (get!1139 (getValueByKey!130 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2513 (getValueByKey!130 (toList!714 lt!31248) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15817 d!16535))

(assert (=> d!15817 d!16279))

(declare-fun d!16537 () Bool)

(declare-fun lt!32174 () Bool)

(assert (=> d!16537 (= lt!32174 (select (content!76 (toList!714 lt!31754)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(declare-fun e!47278 () Bool)

(assert (=> d!16537 (= lt!32174 e!47278)))

(declare-fun res!38445 () Bool)

(assert (=> d!16537 (=> (not res!38445) (not e!47278))))

(assert (=> d!16537 (= res!38445 ((_ is Cons!1475) (toList!714 lt!31754)))))

(assert (=> d!16537 (= (contains!717 (toList!714 lt!31754) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) lt!32174)))

(declare-fun b!72265 () Bool)

(declare-fun e!47279 () Bool)

(assert (=> b!72265 (= e!47278 e!47279)))

(declare-fun res!38444 () Bool)

(assert (=> b!72265 (=> res!38444 e!47279)))

(assert (=> b!72265 (= res!38444 (= (h!2061 (toList!714 lt!31754)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(declare-fun b!72266 () Bool)

(assert (=> b!72266 (= e!47279 (contains!717 (t!5006 (toList!714 lt!31754)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))

(assert (= (and d!16537 res!38445) b!72265))

(assert (= (and b!72265 (not res!38444)) b!72266))

(declare-fun m!70145 () Bool)

(assert (=> d!16537 m!70145))

(declare-fun m!70147 () Bool)

(assert (=> d!16537 m!70147))

(declare-fun m!70149 () Bool)

(assert (=> b!72266 m!70149))

(assert (=> b!71446 d!16537))

(declare-fun d!16539 () Bool)

(declare-fun e!47281 () Bool)

(assert (=> d!16539 e!47281))

(declare-fun res!38446 () Bool)

(assert (=> d!16539 (=> res!38446 e!47281)))

(declare-fun lt!32177 () Bool)

(assert (=> d!16539 (= res!38446 (not lt!32177))))

(declare-fun lt!32175 () Bool)

(assert (=> d!16539 (= lt!32177 lt!32175)))

(declare-fun lt!32176 () Unit!1989)

(declare-fun e!47280 () Unit!1989)

(assert (=> d!16539 (= lt!32176 e!47280)))

(declare-fun c!10640 () Bool)

(assert (=> d!16539 (= c!10640 lt!32175)))

(assert (=> d!16539 (= lt!32175 (containsKey!134 (toList!714 lt!31592) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!16539 (= (contains!716 lt!31592 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32177)))

(declare-fun b!72267 () Bool)

(declare-fun lt!32178 () Unit!1989)

(assert (=> b!72267 (= e!47280 lt!32178)))

(assert (=> b!72267 (= lt!32178 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31592) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> b!72267 (isDefined!84 (getValueByKey!130 (toList!714 lt!31592) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72268 () Bool)

(declare-fun Unit!2052 () Unit!1989)

(assert (=> b!72268 (= e!47280 Unit!2052)))

(declare-fun b!72269 () Bool)

(assert (=> b!72269 (= e!47281 (isDefined!84 (getValueByKey!130 (toList!714 lt!31592) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16539 c!10640) b!72267))

(assert (= (and d!16539 (not c!10640)) b!72268))

(assert (= (and d!16539 (not res!38446)) b!72269))

(declare-fun m!70151 () Bool)

(assert (=> d!16539 m!70151))

(declare-fun m!70153 () Bool)

(assert (=> b!72267 m!70153))

(assert (=> b!72267 m!68341))

(assert (=> b!72267 m!68341))

(declare-fun m!70155 () Bool)

(assert (=> b!72267 m!70155))

(assert (=> b!72269 m!68341))

(assert (=> b!72269 m!68341))

(assert (=> b!72269 m!70155))

(assert (=> d!15879 d!16539))

(declare-fun b!72270 () Bool)

(declare-fun e!47282 () Option!136)

(assert (=> b!72270 (= e!47282 (Some!135 (_2!1067 (h!2061 lt!31593))))))

(declare-fun c!10641 () Bool)

(declare-fun d!16541 () Bool)

(assert (=> d!16541 (= c!10641 (and ((_ is Cons!1475) lt!31593) (= (_1!1067 (h!2061 lt!31593)) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16541 (= (getValueByKey!130 lt!31593 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47282)))

(declare-fun b!72271 () Bool)

(declare-fun e!47283 () Option!136)

(assert (=> b!72271 (= e!47282 e!47283)))

(declare-fun c!10642 () Bool)

(assert (=> b!72271 (= c!10642 (and ((_ is Cons!1475) lt!31593) (not (= (_1!1067 (h!2061 lt!31593)) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72273 () Bool)

(assert (=> b!72273 (= e!47283 None!134)))

(declare-fun b!72272 () Bool)

(assert (=> b!72272 (= e!47283 (getValueByKey!130 (t!5006 lt!31593) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16541 c!10641) b!72270))

(assert (= (and d!16541 (not c!10641)) b!72271))

(assert (= (and b!72271 c!10642) b!72272))

(assert (= (and b!72271 (not c!10642)) b!72273))

(declare-fun m!70157 () Bool)

(assert (=> b!72272 m!70157))

(assert (=> d!15879 d!16541))

(declare-fun d!16543 () Bool)

(assert (=> d!16543 (= (getValueByKey!130 lt!31593 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!32179 () Unit!1989)

(assert (=> d!16543 (= lt!32179 (choose!404 lt!31593 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun e!47284 () Bool)

(assert (=> d!16543 e!47284))

(declare-fun res!38447 () Bool)

(assert (=> d!16543 (=> (not res!38447) (not e!47284))))

(assert (=> d!16543 (= res!38447 (isStrictlySorted!286 lt!31593))))

(assert (=> d!16543 (= (lemmaContainsTupThenGetReturnValue!50 lt!31593 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32179)))

(declare-fun b!72274 () Bool)

(declare-fun res!38448 () Bool)

(assert (=> b!72274 (=> (not res!38448) (not e!47284))))

(assert (=> b!72274 (= res!38448 (containsKey!134 lt!31593 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72275 () Bool)

(assert (=> b!72275 (= e!47284 (contains!717 lt!31593 (tuple2!2113 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16543 res!38447) b!72274))

(assert (= (and b!72274 res!38448) b!72275))

(assert (=> d!16543 m!68335))

(declare-fun m!70159 () Bool)

(assert (=> d!16543 m!70159))

(declare-fun m!70161 () Bool)

(assert (=> d!16543 m!70161))

(declare-fun m!70163 () Bool)

(assert (=> b!72274 m!70163))

(declare-fun m!70165 () Bool)

(assert (=> b!72275 m!70165))

(assert (=> d!15879 d!16543))

(declare-fun lt!32180 () List!1479)

(declare-fun b!72276 () Bool)

(declare-fun e!47287 () Bool)

(assert (=> b!72276 (= e!47287 (contains!717 lt!32180 (tuple2!2113 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72277 () Bool)

(declare-fun e!47285 () List!1479)

(assert (=> b!72277 (= e!47285 (insertStrictlySorted!53 (t!5006 (toList!714 lt!31236)) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun d!16545 () Bool)

(assert (=> d!16545 e!47287))

(declare-fun res!38450 () Bool)

(assert (=> d!16545 (=> (not res!38450) (not e!47287))))

(assert (=> d!16545 (= res!38450 (isStrictlySorted!286 lt!32180))))

(declare-fun e!47286 () List!1479)

(assert (=> d!16545 (= lt!32180 e!47286)))

(declare-fun c!10646 () Bool)

(assert (=> d!16545 (= c!10646 (and ((_ is Cons!1475) (toList!714 lt!31236)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31236))) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16545 (isStrictlySorted!286 (toList!714 lt!31236))))

(assert (=> d!16545 (= (insertStrictlySorted!53 (toList!714 lt!31236) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32180)))

(declare-fun b!72278 () Bool)

(declare-fun c!10645 () Bool)

(assert (=> b!72278 (= c!10645 (and ((_ is Cons!1475) (toList!714 lt!31236)) (bvsgt (_1!1067 (h!2061 (toList!714 lt!31236))) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun e!47289 () List!1479)

(declare-fun e!47288 () List!1479)

(assert (=> b!72278 (= e!47289 e!47288)))

(declare-fun b!72279 () Bool)

(assert (=> b!72279 (= e!47286 e!47289)))

(declare-fun c!10644 () Bool)

(assert (=> b!72279 (= c!10644 (and ((_ is Cons!1475) (toList!714 lt!31236)) (= (_1!1067 (h!2061 (toList!714 lt!31236))) (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72280 () Bool)

(declare-fun call!6289 () List!1479)

(assert (=> b!72280 (= e!47289 call!6289)))

(declare-fun b!72281 () Bool)

(declare-fun res!38449 () Bool)

(assert (=> b!72281 (=> (not res!38449) (not e!47287))))

(assert (=> b!72281 (= res!38449 (containsKey!134 lt!32180 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72282 () Bool)

(assert (=> b!72282 (= e!47285 (ite c!10644 (t!5006 (toList!714 lt!31236)) (ite c!10645 (Cons!1475 (h!2061 (toList!714 lt!31236)) (t!5006 (toList!714 lt!31236))) Nil!1476)))))

(declare-fun b!72283 () Bool)

(declare-fun call!6288 () List!1479)

(assert (=> b!72283 (= e!47286 call!6288)))

(declare-fun b!72284 () Bool)

(declare-fun call!6287 () List!1479)

(assert (=> b!72284 (= e!47288 call!6287)))

(declare-fun bm!6284 () Bool)

(assert (=> bm!6284 (= call!6287 call!6289)))

(declare-fun bm!6285 () Bool)

(assert (=> bm!6285 (= call!6289 call!6288)))

(declare-fun bm!6286 () Bool)

(assert (=> bm!6286 (= call!6288 ($colon$colon!64 e!47285 (ite c!10646 (h!2061 (toList!714 lt!31236)) (tuple2!2113 (_1!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun c!10643 () Bool)

(assert (=> bm!6286 (= c!10643 c!10646)))

(declare-fun b!72285 () Bool)

(assert (=> b!72285 (= e!47288 call!6287)))

(assert (= (and d!16545 c!10646) b!72283))

(assert (= (and d!16545 (not c!10646)) b!72279))

(assert (= (and b!72279 c!10644) b!72280))

(assert (= (and b!72279 (not c!10644)) b!72278))

(assert (= (and b!72278 c!10645) b!72284))

(assert (= (and b!72278 (not c!10645)) b!72285))

(assert (= (or b!72284 b!72285) bm!6284))

(assert (= (or b!72280 bm!6284) bm!6285))

(assert (= (or b!72283 bm!6285) bm!6286))

(assert (= (and bm!6286 c!10643) b!72277))

(assert (= (and bm!6286 (not c!10643)) b!72282))

(assert (= (and d!16545 res!38450) b!72281))

(assert (= (and b!72281 res!38449) b!72276))

(declare-fun m!70167 () Bool)

(assert (=> b!72276 m!70167))

(declare-fun m!70169 () Bool)

(assert (=> b!72277 m!70169))

(declare-fun m!70171 () Bool)

(assert (=> b!72281 m!70171))

(declare-fun m!70173 () Bool)

(assert (=> bm!6286 m!70173))

(declare-fun m!70175 () Bool)

(assert (=> d!16545 m!70175))

(declare-fun m!70177 () Bool)

(assert (=> d!16545 m!70177))

(assert (=> d!15879 d!16545))

(declare-fun d!16547 () Bool)

(declare-fun c!10647 () Bool)

(assert (=> d!16547 (= c!10647 ((_ is Nil!1476) (toList!714 lt!31369)))))

(declare-fun e!47290 () (InoxSet tuple2!2112))

(assert (=> d!16547 (= (content!76 (toList!714 lt!31369)) e!47290)))

(declare-fun b!72286 () Bool)

(assert (=> b!72286 (= e!47290 ((as const (Array tuple2!2112 Bool)) false))))

(declare-fun b!72287 () Bool)

(assert (=> b!72287 (= e!47290 ((_ map or) (store ((as const (Array tuple2!2112 Bool)) false) (h!2061 (toList!714 lt!31369)) true) (content!76 (t!5006 (toList!714 lt!31369)))))))

(assert (= (and d!16547 c!10647) b!72286))

(assert (= (and d!16547 (not c!10647)) b!72287))

(declare-fun m!70179 () Bool)

(assert (=> b!72287 m!70179))

(assert (=> b!72287 m!69979))

(assert (=> d!15917 d!16547))

(assert (=> b!71137 d!16173))

(declare-fun call!6290 () Bool)

(declare-fun bm!6287 () Bool)

(declare-fun c!10648 () Bool)

(assert (=> bm!6287 (= call!6290 (arrayNoDuplicates!0 (_keys!3838 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10648 (Cons!1476 (select (arr!1840 (_keys!3838 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!10350 (Cons!1476 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) Nil!1477) Nil!1477)) (ite c!10350 (Cons!1476 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) Nil!1477) Nil!1477))))))

(declare-fun b!72288 () Bool)

(declare-fun e!47291 () Bool)

(declare-fun e!47292 () Bool)

(assert (=> b!72288 (= e!47291 e!47292)))

(assert (=> b!72288 (= c!10648 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!16549 () Bool)

(declare-fun res!38452 () Bool)

(declare-fun e!47293 () Bool)

(assert (=> d!16549 (=> res!38452 e!47293)))

(assert (=> d!16549 (= res!38452 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16549 (= (arrayNoDuplicates!0 (_keys!3838 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10350 (Cons!1476 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) Nil!1477) Nil!1477)) e!47293)))

(declare-fun b!72289 () Bool)

(assert (=> b!72289 (= e!47292 call!6290)))

(declare-fun b!72290 () Bool)

(declare-fun e!47294 () Bool)

(assert (=> b!72290 (= e!47294 (contains!718 (ite c!10350 (Cons!1476 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) Nil!1477) Nil!1477) (select (arr!1840 (_keys!3838 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!72291 () Bool)

(assert (=> b!72291 (= e!47292 call!6290)))

(declare-fun b!72292 () Bool)

(assert (=> b!72292 (= e!47293 e!47291)))

(declare-fun res!38453 () Bool)

(assert (=> b!72292 (=> (not res!38453) (not e!47291))))

(assert (=> b!72292 (= res!38453 (not e!47294))))

(declare-fun res!38451 () Bool)

(assert (=> b!72292 (=> (not res!38451) (not e!47294))))

(assert (=> b!72292 (= res!38451 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!16549 (not res!38452)) b!72292))

(assert (= (and b!72292 res!38451) b!72290))

(assert (= (and b!72292 res!38453) b!72288))

(assert (= (and b!72288 c!10648) b!72289))

(assert (= (and b!72288 (not c!10648)) b!72291))

(assert (= (or b!72289 b!72291) bm!6287))

(assert (=> bm!6287 m!69357))

(declare-fun m!70181 () Bool)

(assert (=> bm!6287 m!70181))

(assert (=> b!72288 m!69357))

(assert (=> b!72288 m!69357))

(assert (=> b!72288 m!69439))

(assert (=> b!72290 m!69357))

(assert (=> b!72290 m!69357))

(declare-fun m!70183 () Bool)

(assert (=> b!72290 m!70183))

(assert (=> b!72292 m!69357))

(assert (=> b!72292 m!69357))

(assert (=> b!72292 m!69439))

(assert (=> bm!6163 d!16549))

(assert (=> b!71093 d!16245))

(declare-fun d!16551 () Bool)

(declare-fun e!47296 () Bool)

(assert (=> d!16551 e!47296))

(declare-fun res!38454 () Bool)

(assert (=> d!16551 (=> res!38454 e!47296)))

(declare-fun lt!32183 () Bool)

(assert (=> d!16551 (= res!38454 (not lt!32183))))

(declare-fun lt!32181 () Bool)

(assert (=> d!16551 (= lt!32183 lt!32181)))

(declare-fun lt!32182 () Unit!1989)

(declare-fun e!47295 () Unit!1989)

(assert (=> d!16551 (= lt!32182 e!47295)))

(declare-fun c!10649 () Bool)

(assert (=> d!16551 (= c!10649 lt!32181)))

(assert (=> d!16551 (= lt!32181 (containsKey!134 (toList!714 lt!31544) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16551 (= (contains!716 lt!31544 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!32183)))

(declare-fun b!72293 () Bool)

(declare-fun lt!32184 () Unit!1989)

(assert (=> b!72293 (= e!47295 lt!32184)))

(assert (=> b!72293 (= lt!32184 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31544) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!72293 (isDefined!84 (getValueByKey!130 (toList!714 lt!31544) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!72294 () Bool)

(declare-fun Unit!2053 () Unit!1989)

(assert (=> b!72294 (= e!47295 Unit!2053)))

(declare-fun b!72295 () Bool)

(assert (=> b!72295 (= e!47296 (isDefined!84 (getValueByKey!130 (toList!714 lt!31544) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!16551 c!10649) b!72293))

(assert (= (and d!16551 (not c!10649)) b!72294))

(assert (= (and d!16551 (not res!38454)) b!72295))

(declare-fun m!70185 () Bool)

(assert (=> d!16551 m!70185))

(declare-fun m!70187 () Bool)

(assert (=> b!72293 m!70187))

(assert (=> b!72293 m!68219))

(assert (=> b!72293 m!68219))

(declare-fun m!70189 () Bool)

(assert (=> b!72293 m!70189))

(assert (=> b!72295 m!68219))

(assert (=> b!72295 m!68219))

(assert (=> b!72295 m!70189))

(assert (=> d!15843 d!16551))

(declare-fun b!72296 () Bool)

(declare-fun e!47297 () Option!136)

(assert (=> b!72296 (= e!47297 (Some!135 (_2!1067 (h!2061 lt!31545))))))

(declare-fun c!10650 () Bool)

(declare-fun d!16553 () Bool)

(assert (=> d!16553 (= c!10650 (and ((_ is Cons!1475) lt!31545) (= (_1!1067 (h!2061 lt!31545)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!16553 (= (getValueByKey!130 lt!31545 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!47297)))

(declare-fun b!72297 () Bool)

(declare-fun e!47298 () Option!136)

(assert (=> b!72297 (= e!47297 e!47298)))

(declare-fun c!10651 () Bool)

(assert (=> b!72297 (= c!10651 (and ((_ is Cons!1475) lt!31545) (not (= (_1!1067 (h!2061 lt!31545)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!72299 () Bool)

(assert (=> b!72299 (= e!47298 None!134)))

(declare-fun b!72298 () Bool)

(assert (=> b!72298 (= e!47298 (getValueByKey!130 (t!5006 lt!31545) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!16553 c!10650) b!72296))

(assert (= (and d!16553 (not c!10650)) b!72297))

(assert (= (and b!72297 c!10651) b!72298))

(assert (= (and b!72297 (not c!10651)) b!72299))

(declare-fun m!70191 () Bool)

(assert (=> b!72298 m!70191))

(assert (=> d!15843 d!16553))

(declare-fun d!16555 () Bool)

(assert (=> d!16555 (= (getValueByKey!130 lt!31545 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!32185 () Unit!1989)

(assert (=> d!16555 (= lt!32185 (choose!404 lt!31545 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!47299 () Bool)

(assert (=> d!16555 e!47299))

(declare-fun res!38455 () Bool)

(assert (=> d!16555 (=> (not res!38455) (not e!47299))))

(assert (=> d!16555 (= res!38455 (isStrictlySorted!286 lt!31545))))

(assert (=> d!16555 (= (lemmaContainsTupThenGetReturnValue!50 lt!31545 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!32185)))

(declare-fun b!72300 () Bool)

(declare-fun res!38456 () Bool)

(assert (=> b!72300 (=> (not res!38456) (not e!47299))))

(assert (=> b!72300 (= res!38456 (containsKey!134 lt!31545 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!72301 () Bool)

(assert (=> b!72301 (= e!47299 (contains!717 lt!31545 (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!16555 res!38455) b!72300))

(assert (= (and b!72300 res!38456) b!72301))

(assert (=> d!16555 m!68213))

(declare-fun m!70193 () Bool)

(assert (=> d!16555 m!70193))

(declare-fun m!70195 () Bool)

(assert (=> d!16555 m!70195))

(declare-fun m!70197 () Bool)

(assert (=> b!72300 m!70197))

(declare-fun m!70199 () Bool)

(assert (=> b!72301 m!70199))

(assert (=> d!15843 d!16555))

(declare-fun b!72302 () Bool)

(declare-fun e!47302 () Bool)

(declare-fun lt!32186 () List!1479)

(assert (=> b!72302 (= e!47302 (contains!717 lt!32186 (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!47300 () List!1479)

(declare-fun b!72303 () Bool)

(assert (=> b!72303 (= e!47300 (insertStrictlySorted!53 (t!5006 (toList!714 call!6132)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!16557 () Bool)

(assert (=> d!16557 e!47302))

(declare-fun res!38458 () Bool)

(assert (=> d!16557 (=> (not res!38458) (not e!47302))))

(assert (=> d!16557 (= res!38458 (isStrictlySorted!286 lt!32186))))

(declare-fun e!47301 () List!1479)

(assert (=> d!16557 (= lt!32186 e!47301)))

(declare-fun c!10655 () Bool)

(assert (=> d!16557 (= c!10655 (and ((_ is Cons!1475) (toList!714 call!6132)) (bvslt (_1!1067 (h!2061 (toList!714 call!6132))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!16557 (isStrictlySorted!286 (toList!714 call!6132))))

(assert (=> d!16557 (= (insertStrictlySorted!53 (toList!714 call!6132) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!32186)))

(declare-fun b!72304 () Bool)

(declare-fun c!10654 () Bool)

(assert (=> b!72304 (= c!10654 (and ((_ is Cons!1475) (toList!714 call!6132)) (bvsgt (_1!1067 (h!2061 (toList!714 call!6132))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!47304 () List!1479)

(declare-fun e!47303 () List!1479)

(assert (=> b!72304 (= e!47304 e!47303)))

(declare-fun b!72305 () Bool)

(assert (=> b!72305 (= e!47301 e!47304)))

(declare-fun c!10653 () Bool)

(assert (=> b!72305 (= c!10653 (and ((_ is Cons!1475) (toList!714 call!6132)) (= (_1!1067 (h!2061 (toList!714 call!6132))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!72306 () Bool)

(declare-fun call!6293 () List!1479)

(assert (=> b!72306 (= e!47304 call!6293)))

(declare-fun b!72307 () Bool)

(declare-fun res!38457 () Bool)

(assert (=> b!72307 (=> (not res!38457) (not e!47302))))

(assert (=> b!72307 (= res!38457 (containsKey!134 lt!32186 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!72308 () Bool)

(assert (=> b!72308 (= e!47300 (ite c!10653 (t!5006 (toList!714 call!6132)) (ite c!10654 (Cons!1475 (h!2061 (toList!714 call!6132)) (t!5006 (toList!714 call!6132))) Nil!1476)))))

(declare-fun b!72309 () Bool)

(declare-fun call!6292 () List!1479)

(assert (=> b!72309 (= e!47301 call!6292)))

(declare-fun b!72310 () Bool)

(declare-fun call!6291 () List!1479)

(assert (=> b!72310 (= e!47303 call!6291)))

(declare-fun bm!6288 () Bool)

(assert (=> bm!6288 (= call!6291 call!6293)))

(declare-fun bm!6289 () Bool)

(assert (=> bm!6289 (= call!6293 call!6292)))

(declare-fun bm!6290 () Bool)

(assert (=> bm!6290 (= call!6292 ($colon$colon!64 e!47300 (ite c!10655 (h!2061 (toList!714 call!6132)) (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!10652 () Bool)

(assert (=> bm!6290 (= c!10652 c!10655)))

(declare-fun b!72311 () Bool)

(assert (=> b!72311 (= e!47303 call!6291)))

(assert (= (and d!16557 c!10655) b!72309))

(assert (= (and d!16557 (not c!10655)) b!72305))

(assert (= (and b!72305 c!10653) b!72306))

(assert (= (and b!72305 (not c!10653)) b!72304))

(assert (= (and b!72304 c!10654) b!72310))

(assert (= (and b!72304 (not c!10654)) b!72311))

(assert (= (or b!72310 b!72311) bm!6288))

(assert (= (or b!72306 bm!6288) bm!6289))

(assert (= (or b!72309 bm!6289) bm!6290))

(assert (= (and bm!6290 c!10652) b!72303))

(assert (= (and bm!6290 (not c!10652)) b!72308))

(assert (= (and d!16557 res!38458) b!72307))

(assert (= (and b!72307 res!38457) b!72302))

(declare-fun m!70201 () Bool)

(assert (=> b!72302 m!70201))

(declare-fun m!70203 () Bool)

(assert (=> b!72303 m!70203))

(declare-fun m!70205 () Bool)

(assert (=> b!72307 m!70205))

(declare-fun m!70207 () Bool)

(assert (=> bm!6290 m!70207))

(declare-fun m!70209 () Bool)

(assert (=> d!16557 m!70209))

(declare-fun m!70211 () Bool)

(assert (=> d!16557 m!70211))

(assert (=> d!15843 d!16557))

(declare-fun b!72312 () Bool)

(declare-fun e!47307 () ListLongMap!1397)

(assert (=> b!72312 (= e!47307 (ListLongMap!1398 Nil!1476))))

(declare-fun b!72313 () Bool)

(declare-fun e!47306 () Bool)

(declare-fun lt!32189 () ListLongMap!1397)

(assert (=> b!72313 (= e!47306 (isEmpty!317 lt!32189))))

(declare-fun b!72314 () Bool)

(declare-fun lt!32193 () Unit!1989)

(declare-fun lt!32192 () Unit!1989)

(assert (=> b!72314 (= lt!32193 lt!32192)))

(declare-fun lt!32191 () ListLongMap!1397)

(declare-fun lt!32190 () (_ BitVec 64))

(declare-fun lt!32188 () (_ BitVec 64))

(declare-fun lt!32187 () V!2937)

(assert (=> b!72314 (not (contains!716 (+!91 lt!32191 (tuple2!2113 lt!32188 lt!32187)) lt!32190))))

(assert (=> b!72314 (= lt!32192 (addStillNotContains!24 lt!32191 lt!32188 lt!32187 lt!32190))))

(assert (=> b!72314 (= lt!32190 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!72314 (= lt!32187 (get!1136 (select (arr!1841 (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!72314 (= lt!32188 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!6294 () ListLongMap!1397)

(assert (=> b!72314 (= lt!32191 call!6294)))

(declare-fun e!47308 () ListLongMap!1397)

(assert (=> b!72314 (= e!47308 (+!91 call!6294 (tuple2!2113 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000) (get!1136 (select (arr!1841 (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!72315 () Bool)

(declare-fun e!47310 () Bool)

(declare-fun e!47311 () Bool)

(assert (=> b!72315 (= e!47310 e!47311)))

(declare-fun c!10657 () Bool)

(declare-fun e!47309 () Bool)

(assert (=> b!72315 (= c!10657 e!47309)))

(declare-fun res!38459 () Bool)

(assert (=> b!72315 (=> (not res!38459) (not e!47309))))

(assert (=> b!72315 (= res!38459 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!72316 () Bool)

(assert (=> b!72316 (= e!47308 call!6294)))

(declare-fun b!72318 () Bool)

(declare-fun e!47305 () Bool)

(assert (=> b!72318 (= e!47311 e!47305)))

(assert (=> b!72318 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun res!38462 () Bool)

(assert (=> b!72318 (= res!38462 (contains!716 lt!32189 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72318 (=> (not res!38462) (not e!47305))))

(declare-fun bm!6291 () Bool)

(assert (=> bm!6291 (= call!6294 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) (mask!6147 newMap!16) (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16)))))

(declare-fun b!72319 () Bool)

(assert (=> b!72319 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> b!72319 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))))))))

(assert (=> b!72319 (= e!47305 (= (apply!74 lt!32189 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!72320 () Bool)

(assert (=> b!72320 (= e!47307 e!47308)))

(declare-fun c!10656 () Bool)

(assert (=> b!72320 (= c!10656 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72321 () Bool)

(assert (=> b!72321 (= e!47306 (= lt!32189 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) (mask!6147 newMap!16) (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2191 newMap!16))))))

(declare-fun b!72322 () Bool)

(assert (=> b!72322 (= e!47311 e!47306)))

(declare-fun c!10658 () Bool)

(assert (=> b!72322 (= c!10658 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!72323 () Bool)

(assert (=> b!72323 (= e!47309 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72323 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!16559 () Bool)

(assert (=> d!16559 e!47310))

(declare-fun res!38461 () Bool)

(assert (=> d!16559 (=> (not res!38461) (not e!47310))))

(assert (=> d!16559 (= res!38461 (not (contains!716 lt!32189 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16559 (= lt!32189 e!47307)))

(declare-fun c!10659 () Bool)

(assert (=> d!16559 (= c!10659 (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16559 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16559 (= (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (ite c!10263 (_values!2174 newMap!16) (array!3860 (store (arr!1841 (_values!2174 newMap!16)) (index!3083 lt!31341) (ValueCellFull!890 lt!31106)) (size!2079 (_values!2174 newMap!16)))) (mask!6147 newMap!16) (ite c!10263 (ite c!10265 lt!31323 lt!31329) (extraKeys!2054 newMap!16)) (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32189)))

(declare-fun b!72317 () Bool)

(declare-fun res!38460 () Bool)

(assert (=> b!72317 (=> (not res!38460) (not e!47310))))

(assert (=> b!72317 (= res!38460 (not (contains!716 lt!32189 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16559 c!10659) b!72312))

(assert (= (and d!16559 (not c!10659)) b!72320))

(assert (= (and b!72320 c!10656) b!72314))

(assert (= (and b!72320 (not c!10656)) b!72316))

(assert (= (or b!72314 b!72316) bm!6291))

(assert (= (and d!16559 res!38461) b!72317))

(assert (= (and b!72317 res!38460) b!72315))

(assert (= (and b!72315 res!38459) b!72323))

(assert (= (and b!72315 c!10657) b!72318))

(assert (= (and b!72315 (not c!10657)) b!72322))

(assert (= (and b!72318 res!38462) b!72319))

(assert (= (and b!72322 c!10658) b!72321))

(assert (= (and b!72322 (not c!10658)) b!72313))

(declare-fun b_lambda!3223 () Bool)

(assert (=> (not b_lambda!3223) (not b!72314)))

(assert (=> b!72314 t!5019))

(declare-fun b_and!4433 () Bool)

(assert (= b_and!4429 (and (=> t!5019 result!2661) b_and!4433)))

(assert (=> b!72314 t!5021))

(declare-fun b_and!4435 () Bool)

(assert (= b_and!4431 (and (=> t!5021 result!2663) b_and!4435)))

(declare-fun b_lambda!3225 () Bool)

(assert (=> (not b_lambda!3225) (not b!72319)))

(assert (=> b!72319 t!5019))

(declare-fun b_and!4437 () Bool)

(assert (= b_and!4433 (and (=> t!5019 result!2661) b_and!4437)))

(assert (=> b!72319 t!5021))

(declare-fun b_and!4439 () Bool)

(assert (= b_and!4435 (and (=> t!5021 result!2663) b_and!4439)))

(declare-fun m!70213 () Bool)

(assert (=> d!16559 m!70213))

(assert (=> d!16559 m!67873))

(assert (=> b!72318 m!67861))

(assert (=> b!72318 m!67861))

(declare-fun m!70215 () Bool)

(assert (=> b!72318 m!70215))

(declare-fun m!70217 () Bool)

(assert (=> bm!6291 m!70217))

(assert (=> b!72319 m!67861))

(assert (=> b!72319 m!67861))

(declare-fun m!70219 () Bool)

(assert (=> b!72319 m!70219))

(assert (=> b!72319 m!67867))

(assert (=> b!72319 m!67865))

(assert (=> b!72319 m!67867))

(assert (=> b!72319 m!67865))

(assert (=> b!72319 m!67869))

(declare-fun m!70221 () Bool)

(assert (=> b!72313 m!70221))

(assert (=> b!72321 m!70217))

(assert (=> b!72320 m!67861))

(assert (=> b!72320 m!67861))

(assert (=> b!72320 m!67863))

(declare-fun m!70223 () Bool)

(assert (=> b!72317 m!70223))

(assert (=> b!72323 m!67861))

(assert (=> b!72323 m!67861))

(assert (=> b!72323 m!67863))

(assert (=> b!72314 m!67861))

(declare-fun m!70225 () Bool)

(assert (=> b!72314 m!70225))

(declare-fun m!70227 () Bool)

(assert (=> b!72314 m!70227))

(assert (=> b!72314 m!70225))

(declare-fun m!70229 () Bool)

(assert (=> b!72314 m!70229))

(declare-fun m!70231 () Bool)

(assert (=> b!72314 m!70231))

(assert (=> b!72314 m!67867))

(assert (=> b!72314 m!67865))

(assert (=> b!72314 m!67867))

(assert (=> b!72314 m!67865))

(assert (=> b!72314 m!67869))

(assert (=> bm!6143 d!16559))

(assert (=> b!71373 d!16485))

(assert (=> b!71242 d!16389))

(assert (=> b!71242 d!16391))

(declare-fun d!16561 () Bool)

(declare-fun lt!32194 () Bool)

(assert (=> d!16561 (= lt!32194 (select (content!76 (toList!714 lt!31439)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun e!47312 () Bool)

(assert (=> d!16561 (= lt!32194 e!47312)))

(declare-fun res!38464 () Bool)

(assert (=> d!16561 (=> (not res!38464) (not e!47312))))

(assert (=> d!16561 (= res!38464 ((_ is Cons!1475) (toList!714 lt!31439)))))

(assert (=> d!16561 (= (contains!717 (toList!714 lt!31439) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!32194)))

(declare-fun b!72324 () Bool)

(declare-fun e!47313 () Bool)

(assert (=> b!72324 (= e!47312 e!47313)))

(declare-fun res!38463 () Bool)

(assert (=> b!72324 (=> res!38463 e!47313)))

(assert (=> b!72324 (= res!38463 (= (h!2061 (toList!714 lt!31439)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!72325 () Bool)

(assert (=> b!72325 (= e!47313 (contains!717 (t!5006 (toList!714 lt!31439)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!16561 res!38464) b!72324))

(assert (= (and b!72324 (not res!38463)) b!72325))

(declare-fun m!70233 () Bool)

(assert (=> d!16561 m!70233))

(declare-fun m!70235 () Bool)

(assert (=> d!16561 m!70235))

(declare-fun m!70237 () Bool)

(assert (=> b!72325 m!70237))

(assert (=> b!71077 d!16561))

(declare-fun b!72326 () Bool)

(declare-fun e!47314 () Option!136)

(assert (=> b!72326 (= e!47314 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31601)))))))

(declare-fun c!10660 () Bool)

(declare-fun d!16563 () Bool)

(assert (=> d!16563 (= c!10660 (and ((_ is Cons!1475) (toList!714 lt!31601)) (= (_1!1067 (h!2061 (toList!714 lt!31601))) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16563 (= (getValueByKey!130 (toList!714 lt!31601) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47314)))

(declare-fun b!72327 () Bool)

(declare-fun e!47315 () Option!136)

(assert (=> b!72327 (= e!47314 e!47315)))

(declare-fun c!10661 () Bool)

(assert (=> b!72327 (= c!10661 (and ((_ is Cons!1475) (toList!714 lt!31601)) (not (= (_1!1067 (h!2061 (toList!714 lt!31601))) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72329 () Bool)

(assert (=> b!72329 (= e!47315 None!134)))

(declare-fun b!72328 () Bool)

(assert (=> b!72328 (= e!47315 (getValueByKey!130 (t!5006 (toList!714 lt!31601)) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16563 c!10660) b!72326))

(assert (= (and d!16563 (not c!10660)) b!72327))

(assert (= (and b!72327 c!10661) b!72328))

(assert (= (and b!72327 (not c!10661)) b!72329))

(declare-fun m!70239 () Bool)

(assert (=> b!72328 m!70239))

(assert (=> b!71263 d!16563))

(declare-fun d!16565 () Bool)

(declare-fun res!38465 () Bool)

(declare-fun e!47316 () Bool)

(assert (=> d!16565 (=> res!38465 e!47316)))

(assert (=> d!16565 (= res!38465 (and ((_ is Cons!1475) lt!31359) (= (_1!1067 (h!2061 lt!31359)) (_1!1067 lt!31109))))))

(assert (=> d!16565 (= (containsKey!134 lt!31359 (_1!1067 lt!31109)) e!47316)))

(declare-fun b!72330 () Bool)

(declare-fun e!47317 () Bool)

(assert (=> b!72330 (= e!47316 e!47317)))

(declare-fun res!38466 () Bool)

(assert (=> b!72330 (=> (not res!38466) (not e!47317))))

(assert (=> b!72330 (= res!38466 (and (or (not ((_ is Cons!1475) lt!31359)) (bvsle (_1!1067 (h!2061 lt!31359)) (_1!1067 lt!31109))) ((_ is Cons!1475) lt!31359) (bvslt (_1!1067 (h!2061 lt!31359)) (_1!1067 lt!31109))))))

(declare-fun b!72331 () Bool)

(assert (=> b!72331 (= e!47317 (containsKey!134 (t!5006 lt!31359) (_1!1067 lt!31109)))))

(assert (= (and d!16565 (not res!38465)) b!72330))

(assert (= (and b!72330 res!38466) b!72331))

(declare-fun m!70241 () Bool)

(assert (=> b!72331 m!70241))

(assert (=> b!71109 d!16565))

(declare-fun c!10662 () Bool)

(declare-fun call!6295 () Bool)

(declare-fun bm!6292 () Bool)

(assert (=> bm!6292 (= call!6295 (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10662 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!10390 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477))) (ite c!10390 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)))))))

(declare-fun b!72332 () Bool)

(declare-fun e!47318 () Bool)

(declare-fun e!47319 () Bool)

(assert (=> b!72332 (= e!47318 e!47319)))

(assert (=> b!72332 (= c!10662 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!16567 () Bool)

(declare-fun res!38468 () Bool)

(declare-fun e!47320 () Bool)

(assert (=> d!16567 (=> res!38468 e!47320)))

(assert (=> d!16567 (= res!38468 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992))))))))

(assert (=> d!16567 (= (arrayNoDuplicates!0 (_keys!3838 (v!2507 (underlying!253 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10390 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477))) e!47320)))

(declare-fun b!72333 () Bool)

(assert (=> b!72333 (= e!47319 call!6295)))

(declare-fun e!47321 () Bool)

(declare-fun b!72334 () Bool)

(assert (=> b!72334 (= e!47321 (contains!718 (ite c!10390 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)) (ite c!10284 (Cons!1476 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) Nil!1477) Nil!1477)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!72335 () Bool)

(assert (=> b!72335 (= e!47319 call!6295)))

(declare-fun b!72336 () Bool)

(assert (=> b!72336 (= e!47320 e!47318)))

(declare-fun res!38469 () Bool)

(assert (=> b!72336 (=> (not res!38469) (not e!47318))))

(assert (=> b!72336 (= res!38469 (not e!47321))))

(declare-fun res!38467 () Bool)

(assert (=> b!72336 (=> (not res!38467) (not e!47321))))

(assert (=> b!72336 (= res!38467 (validKeyInArray!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!16567 (not res!38468)) b!72336))

(assert (= (and b!72336 res!38467) b!72334))

(assert (= (and b!72336 res!38469) b!72332))

(assert (= (and b!72332 c!10662) b!72333))

(assert (= (and b!72332 (not c!10662)) b!72335))

(assert (= (or b!72333 b!72335) bm!6292))

(declare-fun m!70243 () Bool)

(assert (=> bm!6292 m!70243))

(declare-fun m!70245 () Bool)

(assert (=> bm!6292 m!70245))

(assert (=> b!72332 m!70243))

(assert (=> b!72332 m!70243))

(declare-fun m!70247 () Bool)

(assert (=> b!72332 m!70247))

(assert (=> b!72334 m!70243))

(assert (=> b!72334 m!70243))

(declare-fun m!70249 () Bool)

(assert (=> b!72334 m!70249))

(assert (=> b!72336 m!70243))

(assert (=> b!72336 m!70243))

(assert (=> b!72336 m!70247))

(assert (=> bm!6186 d!16567))

(declare-fun d!16569 () Bool)

(declare-fun res!38470 () Bool)

(declare-fun e!47322 () Bool)

(assert (=> d!16569 (=> res!38470 e!47322)))

(assert (=> d!16569 (= res!38470 (and ((_ is Cons!1475) lt!31355) (= (_1!1067 (h!2061 lt!31355)) (_1!1067 lt!31103))))))

(assert (=> d!16569 (= (containsKey!134 lt!31355 (_1!1067 lt!31103)) e!47322)))

(declare-fun b!72337 () Bool)

(declare-fun e!47323 () Bool)

(assert (=> b!72337 (= e!47322 e!47323)))

(declare-fun res!38471 () Bool)

(assert (=> b!72337 (=> (not res!38471) (not e!47323))))

(assert (=> b!72337 (= res!38471 (and (or (not ((_ is Cons!1475) lt!31355)) (bvsle (_1!1067 (h!2061 lt!31355)) (_1!1067 lt!31103))) ((_ is Cons!1475) lt!31355) (bvslt (_1!1067 (h!2061 lt!31355)) (_1!1067 lt!31103))))))

(declare-fun b!72338 () Bool)

(assert (=> b!72338 (= e!47323 (containsKey!134 (t!5006 lt!31355) (_1!1067 lt!31103)))))

(assert (= (and d!16569 (not res!38470)) b!72337))

(assert (= (and b!72337 res!38471) b!72338))

(declare-fun m!70251 () Bool)

(assert (=> b!72338 m!70251))

(assert (=> b!71325 d!16569))

(declare-fun b!72339 () Bool)

(declare-fun e!47324 () Option!136)

(assert (=> b!72339 (= e!47324 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31555)))))))

(declare-fun d!16571 () Bool)

(declare-fun c!10663 () Bool)

(assert (=> d!16571 (= c!10663 (and ((_ is Cons!1475) (toList!714 lt!31555)) (= (_1!1067 (h!2061 (toList!714 lt!31555))) (_1!1067 (tuple2!2113 lt!31387 lt!31386)))))))

(assert (=> d!16571 (= (getValueByKey!130 (toList!714 lt!31555) (_1!1067 (tuple2!2113 lt!31387 lt!31386))) e!47324)))

(declare-fun b!72340 () Bool)

(declare-fun e!47325 () Option!136)

(assert (=> b!72340 (= e!47324 e!47325)))

(declare-fun c!10664 () Bool)

(assert (=> b!72340 (= c!10664 (and ((_ is Cons!1475) (toList!714 lt!31555)) (not (= (_1!1067 (h!2061 (toList!714 lt!31555))) (_1!1067 (tuple2!2113 lt!31387 lt!31386))))))))

(declare-fun b!72342 () Bool)

(assert (=> b!72342 (= e!47325 None!134)))

(declare-fun b!72341 () Bool)

(assert (=> b!72341 (= e!47325 (getValueByKey!130 (t!5006 (toList!714 lt!31555)) (_1!1067 (tuple2!2113 lt!31387 lt!31386))))))

(assert (= (and d!16571 c!10663) b!72339))

(assert (= (and d!16571 (not c!10663)) b!72340))

(assert (= (and b!72340 c!10664) b!72341))

(assert (= (and b!72340 (not c!10664)) b!72342))

(declare-fun m!70253 () Bool)

(assert (=> b!72341 m!70253))

(assert (=> b!71229 d!16571))

(declare-fun d!16573 () Bool)

(declare-fun e!47327 () Bool)

(assert (=> d!16573 e!47327))

(declare-fun res!38472 () Bool)

(assert (=> d!16573 (=> res!38472 e!47327)))

(declare-fun lt!32197 () Bool)

(assert (=> d!16573 (= res!38472 (not lt!32197))))

(declare-fun lt!32195 () Bool)

(assert (=> d!16573 (= lt!32197 lt!32195)))

(declare-fun lt!32196 () Unit!1989)

(declare-fun e!47326 () Unit!1989)

(assert (=> d!16573 (= lt!32196 e!47326)))

(declare-fun c!10665 () Bool)

(assert (=> d!16573 (= c!10665 lt!32195)))

(assert (=> d!16573 (= lt!32195 (containsKey!134 (toList!714 lt!31657) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!16573 (= (contains!716 lt!31657 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32197)))

(declare-fun b!72343 () Bool)

(declare-fun lt!32198 () Unit!1989)

(assert (=> b!72343 (= e!47326 lt!32198)))

(assert (=> b!72343 (= lt!32198 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31657) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> b!72343 (isDefined!84 (getValueByKey!130 (toList!714 lt!31657) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72344 () Bool)

(declare-fun Unit!2054 () Unit!1989)

(assert (=> b!72344 (= e!47326 Unit!2054)))

(declare-fun b!72345 () Bool)

(assert (=> b!72345 (= e!47327 (isDefined!84 (getValueByKey!130 (toList!714 lt!31657) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16573 c!10665) b!72343))

(assert (= (and d!16573 (not c!10665)) b!72344))

(assert (= (and d!16573 (not res!38472)) b!72345))

(declare-fun m!70255 () Bool)

(assert (=> d!16573 m!70255))

(declare-fun m!70257 () Bool)

(assert (=> b!72343 m!70257))

(assert (=> b!72343 m!68535))

(assert (=> b!72343 m!68535))

(declare-fun m!70259 () Bool)

(assert (=> b!72343 m!70259))

(assert (=> b!72345 m!68535))

(assert (=> b!72345 m!68535))

(assert (=> b!72345 m!70259))

(assert (=> d!15941 d!16573))

(declare-fun b!72346 () Bool)

(declare-fun e!47328 () Option!136)

(assert (=> b!72346 (= e!47328 (Some!135 (_2!1067 (h!2061 lt!31658))))))

(declare-fun d!16575 () Bool)

(declare-fun c!10666 () Bool)

(assert (=> d!16575 (= c!10666 (and ((_ is Cons!1475) lt!31658) (= (_1!1067 (h!2061 lt!31658)) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16575 (= (getValueByKey!130 lt!31658 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47328)))

(declare-fun b!72347 () Bool)

(declare-fun e!47329 () Option!136)

(assert (=> b!72347 (= e!47328 e!47329)))

(declare-fun c!10667 () Bool)

(assert (=> b!72347 (= c!10667 (and ((_ is Cons!1475) lt!31658) (not (= (_1!1067 (h!2061 lt!31658)) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72349 () Bool)

(assert (=> b!72349 (= e!47329 None!134)))

(declare-fun b!72348 () Bool)

(assert (=> b!72348 (= e!47329 (getValueByKey!130 (t!5006 lt!31658) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16575 c!10666) b!72346))

(assert (= (and d!16575 (not c!10666)) b!72347))

(assert (= (and b!72347 c!10667) b!72348))

(assert (= (and b!72347 (not c!10667)) b!72349))

(declare-fun m!70261 () Bool)

(assert (=> b!72348 m!70261))

(assert (=> d!15941 d!16575))

(declare-fun d!16577 () Bool)

(assert (=> d!16577 (= (getValueByKey!130 lt!31658 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!32199 () Unit!1989)

(assert (=> d!16577 (= lt!32199 (choose!404 lt!31658 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun e!47330 () Bool)

(assert (=> d!16577 e!47330))

(declare-fun res!38473 () Bool)

(assert (=> d!16577 (=> (not res!38473) (not e!47330))))

(assert (=> d!16577 (= res!38473 (isStrictlySorted!286 lt!31658))))

(assert (=> d!16577 (= (lemmaContainsTupThenGetReturnValue!50 lt!31658 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32199)))

(declare-fun b!72350 () Bool)

(declare-fun res!38474 () Bool)

(assert (=> b!72350 (=> (not res!38474) (not e!47330))))

(assert (=> b!72350 (= res!38474 (containsKey!134 lt!31658 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72351 () Bool)

(assert (=> b!72351 (= e!47330 (contains!717 lt!31658 (tuple2!2113 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16577 res!38473) b!72350))

(assert (= (and b!72350 res!38474) b!72351))

(assert (=> d!16577 m!68529))

(declare-fun m!70263 () Bool)

(assert (=> d!16577 m!70263))

(declare-fun m!70265 () Bool)

(assert (=> d!16577 m!70265))

(declare-fun m!70267 () Bool)

(assert (=> b!72350 m!70267))

(declare-fun m!70269 () Bool)

(assert (=> b!72351 m!70269))

(assert (=> d!15941 d!16577))

(declare-fun b!72352 () Bool)

(declare-fun e!47333 () Bool)

(declare-fun lt!32200 () List!1479)

(assert (=> b!72352 (= e!47333 (contains!717 lt!32200 (tuple2!2113 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72353 () Bool)

(declare-fun e!47331 () List!1479)

(assert (=> b!72353 (= e!47331 (insertStrictlySorted!53 (t!5006 (toList!714 call!6055)) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun d!16579 () Bool)

(assert (=> d!16579 e!47333))

(declare-fun res!38476 () Bool)

(assert (=> d!16579 (=> (not res!38476) (not e!47333))))

(assert (=> d!16579 (= res!38476 (isStrictlySorted!286 lt!32200))))

(declare-fun e!47332 () List!1479)

(assert (=> d!16579 (= lt!32200 e!47332)))

(declare-fun c!10671 () Bool)

(assert (=> d!16579 (= c!10671 (and ((_ is Cons!1475) (toList!714 call!6055)) (bvslt (_1!1067 (h!2061 (toList!714 call!6055))) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16579 (isStrictlySorted!286 (toList!714 call!6055))))

(assert (=> d!16579 (= (insertStrictlySorted!53 (toList!714 call!6055) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32200)))

(declare-fun b!72354 () Bool)

(declare-fun c!10670 () Bool)

(assert (=> b!72354 (= c!10670 (and ((_ is Cons!1475) (toList!714 call!6055)) (bvsgt (_1!1067 (h!2061 (toList!714 call!6055))) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun e!47335 () List!1479)

(declare-fun e!47334 () List!1479)

(assert (=> b!72354 (= e!47335 e!47334)))

(declare-fun b!72355 () Bool)

(assert (=> b!72355 (= e!47332 e!47335)))

(declare-fun c!10669 () Bool)

(assert (=> b!72355 (= c!10669 (and ((_ is Cons!1475) (toList!714 call!6055)) (= (_1!1067 (h!2061 (toList!714 call!6055))) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72356 () Bool)

(declare-fun call!6298 () List!1479)

(assert (=> b!72356 (= e!47335 call!6298)))

(declare-fun b!72357 () Bool)

(declare-fun res!38475 () Bool)

(assert (=> b!72357 (=> (not res!38475) (not e!47333))))

(assert (=> b!72357 (= res!38475 (containsKey!134 lt!32200 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72358 () Bool)

(assert (=> b!72358 (= e!47331 (ite c!10669 (t!5006 (toList!714 call!6055)) (ite c!10670 (Cons!1475 (h!2061 (toList!714 call!6055)) (t!5006 (toList!714 call!6055))) Nil!1476)))))

(declare-fun b!72359 () Bool)

(declare-fun call!6297 () List!1479)

(assert (=> b!72359 (= e!47332 call!6297)))

(declare-fun b!72360 () Bool)

(declare-fun call!6296 () List!1479)

(assert (=> b!72360 (= e!47334 call!6296)))

(declare-fun bm!6293 () Bool)

(assert (=> bm!6293 (= call!6296 call!6298)))

(declare-fun bm!6294 () Bool)

(assert (=> bm!6294 (= call!6298 call!6297)))

(declare-fun bm!6295 () Bool)

(assert (=> bm!6295 (= call!6297 ($colon$colon!64 e!47331 (ite c!10671 (h!2061 (toList!714 call!6055)) (tuple2!2113 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun c!10668 () Bool)

(assert (=> bm!6295 (= c!10668 c!10671)))

(declare-fun b!72361 () Bool)

(assert (=> b!72361 (= e!47334 call!6296)))

(assert (= (and d!16579 c!10671) b!72359))

(assert (= (and d!16579 (not c!10671)) b!72355))

(assert (= (and b!72355 c!10669) b!72356))

(assert (= (and b!72355 (not c!10669)) b!72354))

(assert (= (and b!72354 c!10670) b!72360))

(assert (= (and b!72354 (not c!10670)) b!72361))

(assert (= (or b!72360 b!72361) bm!6293))

(assert (= (or b!72356 bm!6293) bm!6294))

(assert (= (or b!72359 bm!6294) bm!6295))

(assert (= (and bm!6295 c!10668) b!72353))

(assert (= (and bm!6295 (not c!10668)) b!72358))

(assert (= (and d!16579 res!38476) b!72357))

(assert (= (and b!72357 res!38475) b!72352))

(declare-fun m!70271 () Bool)

(assert (=> b!72352 m!70271))

(declare-fun m!70273 () Bool)

(assert (=> b!72353 m!70273))

(declare-fun m!70275 () Bool)

(assert (=> b!72357 m!70275))

(declare-fun m!70277 () Bool)

(assert (=> bm!6295 m!70277))

(declare-fun m!70279 () Bool)

(assert (=> d!16579 m!70279))

(declare-fun m!70281 () Bool)

(assert (=> d!16579 m!70281))

(assert (=> d!15941 d!16579))

(assert (=> b!71224 d!16403))

(assert (=> b!71224 d!16405))

(assert (=> b!71247 d!16425))

(assert (=> b!71247 d!16095))

(declare-fun d!16581 () Bool)

(assert (=> d!16581 (= (inRange!0 (ite c!10388 (index!3082 lt!31650) (index!3085 lt!31650)) (mask!6147 newMap!16)) (and (bvsge (ite c!10388 (index!3082 lt!31650) (index!3085 lt!31650)) #b00000000000000000000000000000000) (bvslt (ite c!10388 (index!3082 lt!31650) (index!3085 lt!31650)) (bvadd (mask!6147 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6184 d!16581))

(declare-fun b!72362 () Bool)

(declare-fun e!47336 () Option!136)

(assert (=> b!72362 (= e!47336 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31643)))))))

(declare-fun c!10672 () Bool)

(declare-fun d!16583 () Bool)

(assert (=> d!16583 (= c!10672 (and ((_ is Cons!1475) (toList!714 lt!31643)) (= (_1!1067 (h!2061 (toList!714 lt!31643))) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(assert (=> d!16583 (= (getValueByKey!130 (toList!714 lt!31643) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) e!47336)))

(declare-fun b!72363 () Bool)

(declare-fun e!47337 () Option!136)

(assert (=> b!72363 (= e!47336 e!47337)))

(declare-fun c!10673 () Bool)

(assert (=> b!72363 (= c!10673 (and ((_ is Cons!1475) (toList!714 lt!31643)) (not (= (_1!1067 (h!2061 (toList!714 lt!31643))) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))))

(declare-fun b!72365 () Bool)

(assert (=> b!72365 (= e!47337 None!134)))

(declare-fun b!72364 () Bool)

(assert (=> b!72364 (= e!47337 (getValueByKey!130 (t!5006 (toList!714 lt!31643)) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16583 c!10672) b!72362))

(assert (= (and d!16583 (not c!10672)) b!72363))

(assert (= (and b!72363 c!10673) b!72364))

(assert (= (and b!72363 (not c!10673)) b!72365))

(declare-fun m!70283 () Bool)

(assert (=> b!72364 m!70283))

(assert (=> b!71337 d!16583))

(declare-fun d!16585 () Bool)

(assert (=> d!16585 (= (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31242)) (v!2513 (getValueByKey!130 (toList!714 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31242)))))

(assert (=> d!15885 d!16585))

(declare-fun e!47338 () Option!136)

(declare-fun b!72366 () Bool)

(assert (=> b!72366 (= e!47338 (Some!135 (_2!1067 (h!2061 (toList!714 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))))

(declare-fun c!10674 () Bool)

(declare-fun d!16587 () Bool)

(assert (=> d!16587 (= c!10674 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31242)))))

(assert (=> d!16587 (= (getValueByKey!130 (toList!714 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!31242) e!47338)))

(declare-fun b!72367 () Bool)

(declare-fun e!47339 () Option!136)

(assert (=> b!72367 (= e!47338 e!47339)))

(declare-fun c!10675 () Bool)

(assert (=> b!72367 (= c!10675 (and ((_ is Cons!1475) (toList!714 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) (not (= (_1!1067 (h!2061 (toList!714 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))) lt!31242))))))

(declare-fun b!72369 () Bool)

(assert (=> b!72369 (= e!47339 None!134)))

(declare-fun b!72368 () Bool)

(assert (=> b!72368 (= e!47339 (getValueByKey!130 (t!5006 (toList!714 (+!91 lt!31236 (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) lt!31242))))

(assert (= (and d!16587 c!10674) b!72366))

(assert (= (and d!16587 (not c!10674)) b!72367))

(assert (= (and b!72367 c!10675) b!72368))

(assert (= (and b!72367 (not c!10675)) b!72369))

(declare-fun m!70285 () Bool)

(assert (=> b!72368 m!70285))

(assert (=> d!15885 d!16587))

(declare-fun d!16589 () Bool)

(declare-fun e!47340 () Bool)

(assert (=> d!16589 e!47340))

(declare-fun res!38477 () Bool)

(assert (=> d!16589 (=> (not res!38477) (not e!47340))))

(declare-fun lt!32202 () ListLongMap!1397)

(assert (=> d!16589 (= res!38477 (contains!716 lt!32202 (_1!1067 (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(declare-fun lt!32203 () List!1479)

(assert (=> d!16589 (= lt!32202 (ListLongMap!1398 lt!32203))))

(declare-fun lt!32201 () Unit!1989)

(declare-fun lt!32204 () Unit!1989)

(assert (=> d!16589 (= lt!32201 lt!32204)))

(assert (=> d!16589 (= (getValueByKey!130 lt!32203 (_1!1067 (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))) (Some!135 (_2!1067 (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16589 (= lt!32204 (lemmaContainsTupThenGetReturnValue!50 lt!32203 (_1!1067 (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (_2!1067 (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16589 (= lt!32203 (insertStrictlySorted!53 (toList!714 (ite c!10355 call!6167 (ite c!10353 call!6172 call!6168))) (_1!1067 (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) (_2!1067 (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))))

(assert (=> d!16589 (= (+!91 (ite c!10355 call!6167 (ite c!10353 call!6172 call!6168)) (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))) lt!32202)))

(declare-fun b!72370 () Bool)

(declare-fun res!38478 () Bool)

(assert (=> b!72370 (=> (not res!38478) (not e!47340))))

(assert (=> b!72370 (= res!38478 (= (getValueByKey!130 (toList!714 lt!32202) (_1!1067 (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))) (Some!135 (_2!1067 (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))))

(declare-fun b!72371 () Bool)

(assert (=> b!72371 (= e!47340 (contains!717 (toList!714 lt!32202) (ite (or c!10355 c!10353) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(assert (= (and d!16589 res!38477) b!72370))

(assert (= (and b!72370 res!38478) b!72371))

(declare-fun m!70287 () Bool)

(assert (=> d!16589 m!70287))

(declare-fun m!70289 () Bool)

(assert (=> d!16589 m!70289))

(declare-fun m!70291 () Bool)

(assert (=> d!16589 m!70291))

(declare-fun m!70293 () Bool)

(assert (=> d!16589 m!70293))

(declare-fun m!70295 () Bool)

(assert (=> b!72370 m!70295))

(declare-fun m!70297 () Bool)

(assert (=> b!72371 m!70297))

(assert (=> bm!6166 d!16589))

(assert (=> b!71104 d!16397))

(assert (=> b!71104 d!15965))

(declare-fun lt!32205 () Bool)

(declare-fun d!16591 () Bool)

(assert (=> d!16591 (= lt!32205 (select (content!76 (toList!714 lt!31592)) (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun e!47341 () Bool)

(assert (=> d!16591 (= lt!32205 e!47341)))

(declare-fun res!38480 () Bool)

(assert (=> d!16591 (=> (not res!38480) (not e!47341))))

(assert (=> d!16591 (= res!38480 ((_ is Cons!1475) (toList!714 lt!31592)))))

(assert (=> d!16591 (= (contains!717 (toList!714 lt!31592) (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!32205)))

(declare-fun b!72372 () Bool)

(declare-fun e!47342 () Bool)

(assert (=> b!72372 (= e!47341 e!47342)))

(declare-fun res!38479 () Bool)

(assert (=> b!72372 (=> res!38479 e!47342)))

(assert (=> b!72372 (= res!38479 (= (h!2061 (toList!714 lt!31592)) (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!72373 () Bool)

(assert (=> b!72373 (= e!47342 (contains!717 (t!5006 (toList!714 lt!31592)) (tuple2!2113 lt!31241 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!16591 res!38480) b!72372))

(assert (= (and b!72372 (not res!38479)) b!72373))

(declare-fun m!70299 () Bool)

(assert (=> d!16591 m!70299))

(declare-fun m!70301 () Bool)

(assert (=> d!16591 m!70301))

(declare-fun m!70303 () Bool)

(assert (=> b!72373 m!70303))

(assert (=> b!71258 d!16591))

(declare-fun d!16593 () Bool)

(declare-fun e!47344 () Bool)

(assert (=> d!16593 e!47344))

(declare-fun res!38481 () Bool)

(assert (=> d!16593 (=> res!38481 e!47344)))

(declare-fun lt!32208 () Bool)

(assert (=> d!16593 (= res!38481 (not lt!32208))))

(declare-fun lt!32206 () Bool)

(assert (=> d!16593 (= lt!32208 lt!32206)))

(declare-fun lt!32207 () Unit!1989)

(declare-fun e!47343 () Unit!1989)

(assert (=> d!16593 (= lt!32207 e!47343)))

(declare-fun c!10676 () Bool)

(assert (=> d!16593 (= c!10676 lt!32206)))

(assert (=> d!16593 (= lt!32206 (containsKey!134 (toList!714 lt!31601) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!16593 (= (contains!716 lt!31601 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32208)))

(declare-fun b!72374 () Bool)

(declare-fun lt!32209 () Unit!1989)

(assert (=> b!72374 (= e!47343 lt!32209)))

(assert (=> b!72374 (= lt!32209 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31601) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> b!72374 (isDefined!84 (getValueByKey!130 (toList!714 lt!31601) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72375 () Bool)

(declare-fun Unit!2055 () Unit!1989)

(assert (=> b!72375 (= e!47343 Unit!2055)))

(declare-fun b!72376 () Bool)

(assert (=> b!72376 (= e!47344 (isDefined!84 (getValueByKey!130 (toList!714 lt!31601) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16593 c!10676) b!72374))

(assert (= (and d!16593 (not c!10676)) b!72375))

(assert (= (and d!16593 (not res!38481)) b!72376))

(declare-fun m!70305 () Bool)

(assert (=> d!16593 m!70305))

(declare-fun m!70307 () Bool)

(assert (=> b!72374 m!70307))

(assert (=> b!72374 m!68373))

(assert (=> b!72374 m!68373))

(declare-fun m!70309 () Bool)

(assert (=> b!72374 m!70309))

(assert (=> b!72376 m!68373))

(assert (=> b!72376 m!68373))

(assert (=> b!72376 m!70309))

(assert (=> d!15889 d!16593))

(declare-fun b!72377 () Bool)

(declare-fun e!47345 () Option!136)

(assert (=> b!72377 (= e!47345 (Some!135 (_2!1067 (h!2061 lt!31602))))))

(declare-fun c!10677 () Bool)

(declare-fun d!16595 () Bool)

(assert (=> d!16595 (= c!10677 (and ((_ is Cons!1475) lt!31602) (= (_1!1067 (h!2061 lt!31602)) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16595 (= (getValueByKey!130 lt!31602 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47345)))

(declare-fun b!72378 () Bool)

(declare-fun e!47346 () Option!136)

(assert (=> b!72378 (= e!47345 e!47346)))

(declare-fun c!10678 () Bool)

(assert (=> b!72378 (= c!10678 (and ((_ is Cons!1475) lt!31602) (not (= (_1!1067 (h!2061 lt!31602)) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72380 () Bool)

(assert (=> b!72380 (= e!47346 None!134)))

(declare-fun b!72379 () Bool)

(assert (=> b!72379 (= e!47346 (getValueByKey!130 (t!5006 lt!31602) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16595 c!10677) b!72377))

(assert (= (and d!16595 (not c!10677)) b!72378))

(assert (= (and b!72378 c!10678) b!72379))

(assert (= (and b!72378 (not c!10678)) b!72380))

(declare-fun m!70311 () Bool)

(assert (=> b!72379 m!70311))

(assert (=> d!15889 d!16595))

(declare-fun d!16597 () Bool)

(assert (=> d!16597 (= (getValueByKey!130 lt!31602 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!32210 () Unit!1989)

(assert (=> d!16597 (= lt!32210 (choose!404 lt!31602 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun e!47347 () Bool)

(assert (=> d!16597 e!47347))

(declare-fun res!38482 () Bool)

(assert (=> d!16597 (=> (not res!38482) (not e!47347))))

(assert (=> d!16597 (= res!38482 (isStrictlySorted!286 lt!31602))))

(assert (=> d!16597 (= (lemmaContainsTupThenGetReturnValue!50 lt!31602 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32210)))

(declare-fun b!72381 () Bool)

(declare-fun res!38483 () Bool)

(assert (=> b!72381 (=> (not res!38483) (not e!47347))))

(assert (=> b!72381 (= res!38483 (containsKey!134 lt!31602 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72382 () Bool)

(assert (=> b!72382 (= e!47347 (contains!717 lt!31602 (tuple2!2113 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16597 res!38482) b!72381))

(assert (= (and b!72381 res!38483) b!72382))

(assert (=> d!16597 m!68367))

(declare-fun m!70313 () Bool)

(assert (=> d!16597 m!70313))

(declare-fun m!70315 () Bool)

(assert (=> d!16597 m!70315))

(declare-fun m!70317 () Bool)

(assert (=> b!72381 m!70317))

(declare-fun m!70319 () Bool)

(assert (=> b!72382 m!70319))

(assert (=> d!15889 d!16597))

(declare-fun lt!32211 () List!1479)

(declare-fun e!47350 () Bool)

(declare-fun b!72383 () Bool)

(assert (=> b!72383 (= e!47350 (contains!717 lt!32211 (tuple2!2113 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun e!47348 () List!1479)

(declare-fun b!72384 () Bool)

(assert (=> b!72384 (= e!47348 (insertStrictlySorted!53 (t!5006 (toList!714 lt!31249)) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun d!16599 () Bool)

(assert (=> d!16599 e!47350))

(declare-fun res!38485 () Bool)

(assert (=> d!16599 (=> (not res!38485) (not e!47350))))

(assert (=> d!16599 (= res!38485 (isStrictlySorted!286 lt!32211))))

(declare-fun e!47349 () List!1479)

(assert (=> d!16599 (= lt!32211 e!47349)))

(declare-fun c!10682 () Bool)

(assert (=> d!16599 (= c!10682 (and ((_ is Cons!1475) (toList!714 lt!31249)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31249))) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16599 (isStrictlySorted!286 (toList!714 lt!31249))))

(assert (=> d!16599 (= (insertStrictlySorted!53 (toList!714 lt!31249) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32211)))

(declare-fun c!10681 () Bool)

(declare-fun b!72385 () Bool)

(assert (=> b!72385 (= c!10681 (and ((_ is Cons!1475) (toList!714 lt!31249)) (bvsgt (_1!1067 (h!2061 (toList!714 lt!31249))) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun e!47352 () List!1479)

(declare-fun e!47351 () List!1479)

(assert (=> b!72385 (= e!47352 e!47351)))

(declare-fun b!72386 () Bool)

(assert (=> b!72386 (= e!47349 e!47352)))

(declare-fun c!10680 () Bool)

(assert (=> b!72386 (= c!10680 (and ((_ is Cons!1475) (toList!714 lt!31249)) (= (_1!1067 (h!2061 (toList!714 lt!31249))) (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72387 () Bool)

(declare-fun call!6301 () List!1479)

(assert (=> b!72387 (= e!47352 call!6301)))

(declare-fun b!72388 () Bool)

(declare-fun res!38484 () Bool)

(assert (=> b!72388 (=> (not res!38484) (not e!47350))))

(assert (=> b!72388 (= res!38484 (containsKey!134 lt!32211 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72389 () Bool)

(assert (=> b!72389 (= e!47348 (ite c!10680 (t!5006 (toList!714 lt!31249)) (ite c!10681 (Cons!1475 (h!2061 (toList!714 lt!31249)) (t!5006 (toList!714 lt!31249))) Nil!1476)))))

(declare-fun b!72390 () Bool)

(declare-fun call!6300 () List!1479)

(assert (=> b!72390 (= e!47349 call!6300)))

(declare-fun b!72391 () Bool)

(declare-fun call!6299 () List!1479)

(assert (=> b!72391 (= e!47351 call!6299)))

(declare-fun bm!6296 () Bool)

(assert (=> bm!6296 (= call!6299 call!6301)))

(declare-fun bm!6297 () Bool)

(assert (=> bm!6297 (= call!6301 call!6300)))

(declare-fun bm!6298 () Bool)

(assert (=> bm!6298 (= call!6300 ($colon$colon!64 e!47348 (ite c!10682 (h!2061 (toList!714 lt!31249)) (tuple2!2113 (_1!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun c!10679 () Bool)

(assert (=> bm!6298 (= c!10679 c!10682)))

(declare-fun b!72392 () Bool)

(assert (=> b!72392 (= e!47351 call!6299)))

(assert (= (and d!16599 c!10682) b!72390))

(assert (= (and d!16599 (not c!10682)) b!72386))

(assert (= (and b!72386 c!10680) b!72387))

(assert (= (and b!72386 (not c!10680)) b!72385))

(assert (= (and b!72385 c!10681) b!72391))

(assert (= (and b!72385 (not c!10681)) b!72392))

(assert (= (or b!72391 b!72392) bm!6296))

(assert (= (or b!72387 bm!6296) bm!6297))

(assert (= (or b!72390 bm!6297) bm!6298))

(assert (= (and bm!6298 c!10679) b!72384))

(assert (= (and bm!6298 (not c!10679)) b!72389))

(assert (= (and d!16599 res!38485) b!72388))

(assert (= (and b!72388 res!38484) b!72383))

(declare-fun m!70321 () Bool)

(assert (=> b!72383 m!70321))

(declare-fun m!70323 () Bool)

(assert (=> b!72384 m!70323))

(declare-fun m!70325 () Bool)

(assert (=> b!72388 m!70325))

(declare-fun m!70327 () Bool)

(assert (=> bm!6298 m!70327))

(declare-fun m!70329 () Bool)

(assert (=> d!16599 m!70329))

(declare-fun m!70331 () Bool)

(assert (=> d!16599 m!70331))

(assert (=> d!15889 d!16599))

(declare-fun d!16601 () Bool)

(assert (=> d!16601 (= (apply!74 lt!31535 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1139 (getValueByKey!130 (toList!714 lt!31535) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3114 () Bool)

(assert (= bs!3114 d!16601))

(assert (=> bs!3114 m!68657))

(assert (=> bs!3114 m!68657))

(declare-fun m!70333 () Bool)

(assert (=> bs!3114 m!70333))

(assert (=> b!71210 d!16601))

(declare-fun b!72411 () Bool)

(declare-fun e!47366 () SeekEntryResult!238)

(assert (=> b!72411 (= e!47366 (Intermediate!238 false (toIndex!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (mask!6147 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!72412 () Bool)

(declare-fun e!47364 () Bool)

(declare-fun e!47367 () Bool)

(assert (=> b!72412 (= e!47364 e!47367)))

(declare-fun res!38492 () Bool)

(declare-fun lt!32217 () SeekEntryResult!238)

(assert (=> b!72412 (= res!38492 (and ((_ is Intermediate!238) lt!32217) (not (undefined!1050 lt!32217)) (bvslt (x!11009 lt!32217) #b01111111111111111111111111111110) (bvsge (x!11009 lt!32217) #b00000000000000000000000000000000) (bvsge (x!11009 lt!32217) #b00000000000000000000000000000000)))))

(assert (=> b!72412 (=> (not res!38492) (not e!47367))))

(declare-fun d!16603 () Bool)

(assert (=> d!16603 e!47364))

(declare-fun c!10690 () Bool)

(assert (=> d!16603 (= c!10690 (and ((_ is Intermediate!238) lt!32217) (undefined!1050 lt!32217)))))

(declare-fun e!47365 () SeekEntryResult!238)

(assert (=> d!16603 (= lt!32217 e!47365)))

(declare-fun c!10689 () Bool)

(assert (=> d!16603 (= c!10689 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!32216 () (_ BitVec 64))

(assert (=> d!16603 (= lt!32216 (select (arr!1840 (_keys!3838 newMap!16)) (toIndex!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (mask!6147 newMap!16))))))

(assert (=> d!16603 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16603 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (mask!6147 newMap!16)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)) lt!32217)))

(declare-fun b!72413 () Bool)

(assert (=> b!72413 (and (bvsge (index!3084 lt!32217) #b00000000000000000000000000000000) (bvslt (index!3084 lt!32217) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun res!38494 () Bool)

(assert (=> b!72413 (= res!38494 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3084 lt!32217)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47363 () Bool)

(assert (=> b!72413 (=> res!38494 e!47363)))

(declare-fun b!72414 () Bool)

(assert (=> b!72414 (and (bvsge (index!3084 lt!32217) #b00000000000000000000000000000000) (bvslt (index!3084 lt!32217) (size!2078 (_keys!3838 newMap!16))))))

(assert (=> b!72414 (= e!47363 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3084 lt!32217)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72415 () Bool)

(assert (=> b!72415 (= e!47365 (Intermediate!238 true (toIndex!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (mask!6147 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!72416 () Bool)

(assert (=> b!72416 (= e!47364 (bvsge (x!11009 lt!32217) #b01111111111111111111111111111110))))

(declare-fun b!72417 () Bool)

(assert (=> b!72417 (= e!47365 e!47366)))

(declare-fun c!10691 () Bool)

(assert (=> b!72417 (= c!10691 (or (= lt!32216 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) (= (bvadd lt!32216 lt!32216) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72418 () Bool)

(assert (=> b!72418 (and (bvsge (index!3084 lt!32217) #b00000000000000000000000000000000) (bvslt (index!3084 lt!32217) (size!2078 (_keys!3838 newMap!16))))))

(declare-fun res!38493 () Bool)

(assert (=> b!72418 (= res!38493 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3084 lt!32217)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (=> b!72418 (=> res!38493 e!47363)))

(assert (=> b!72418 (= e!47367 e!47363)))

(declare-fun b!72419 () Bool)

(assert (=> b!72419 (= e!47366 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (mask!6147 newMap!16)) #b00000000000000000000000000000000 (mask!6147 newMap!16)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(assert (= (and d!16603 c!10689) b!72415))

(assert (= (and d!16603 (not c!10689)) b!72417))

(assert (= (and b!72417 c!10691) b!72411))

(assert (= (and b!72417 (not c!10691)) b!72419))

(assert (= (and d!16603 c!10690) b!72416))

(assert (= (and d!16603 (not c!10690)) b!72412))

(assert (= (and b!72412 res!38492) b!72418))

(assert (= (and b!72418 (not res!38493)) b!72413))

(assert (= (and b!72413 (not res!38494)) b!72414))

(declare-fun m!70335 () Bool)

(assert (=> b!72414 m!70335))

(assert (=> b!72413 m!70335))

(assert (=> b!72418 m!70335))

(assert (=> d!16603 m!68107))

(declare-fun m!70337 () Bool)

(assert (=> d!16603 m!70337))

(assert (=> d!16603 m!67873))

(assert (=> b!72419 m!68107))

(declare-fun m!70339 () Bool)

(assert (=> b!72419 m!70339))

(assert (=> b!72419 m!70339))

(assert (=> b!72419 m!67435))

(declare-fun m!70341 () Bool)

(assert (=> b!72419 m!70341))

(assert (=> d!15821 d!16603))

(declare-fun d!16605 () Bool)

(declare-fun lt!32223 () (_ BitVec 32))

(declare-fun lt!32222 () (_ BitVec 32))

(assert (=> d!16605 (= lt!32223 (bvmul (bvxor lt!32222 (bvlshr lt!32222 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!16605 (= lt!32222 ((_ extract 31 0) (bvand (bvxor (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvlshr (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!16605 (and (bvsge (mask!6147 newMap!16) #b00000000000000000000000000000000) (let ((res!38495 (let ((h!2065 ((_ extract 31 0) (bvand (bvxor (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (bvlshr (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11112 (bvmul (bvxor h!2065 (bvlshr h!2065 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11112 (bvlshr x!11112 #b00000000000000000000000000001101)) (mask!6147 newMap!16)))))) (and (bvslt res!38495 (bvadd (mask!6147 newMap!16) #b00000000000000000000000000000001)) (bvsge res!38495 #b00000000000000000000000000000000))))))

(assert (=> d!16605 (= (toIndex!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (mask!6147 newMap!16)) (bvand (bvxor lt!32223 (bvlshr lt!32223 #b00000000000000000000000000001101)) (mask!6147 newMap!16)))))

(assert (=> d!15821 d!16605))

(assert (=> d!15821 d!16053))

(assert (=> d!15909 d!15821))

(declare-fun d!16607 () Bool)

(declare-fun e!47370 () Bool)

(assert (=> d!16607 e!47370))

(declare-fun res!38501 () Bool)

(assert (=> d!16607 (=> (not res!38501) (not e!47370))))

(declare-fun lt!32226 () SeekEntryResult!238)

(assert (=> d!16607 (= res!38501 ((_ is Found!238) lt!32226))))

(assert (=> d!16607 (= lt!32226 (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(assert (=> d!16607 true))

(declare-fun _$33!57 () Unit!1989)

(assert (=> d!16607 (= (choose!412 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) (defaultEntry!2191 newMap!16)) _$33!57)))

(declare-fun b!72424 () Bool)

(declare-fun res!38500 () Bool)

(assert (=> b!72424 (=> (not res!38500) (not e!47370))))

(assert (=> b!72424 (= res!38500 (inRange!0 (index!3083 lt!32226) (mask!6147 newMap!16)))))

(declare-fun b!72425 () Bool)

(assert (=> b!72425 (= e!47370 (= (select (arr!1840 (_keys!3838 newMap!16)) (index!3083 lt!32226)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!16607 res!38501) b!72424))

(assert (= (and b!72424 res!38500) b!72425))

(assert (=> d!16607 m!67435))

(assert (=> d!16607 m!67689))

(declare-fun m!70343 () Bool)

(assert (=> b!72424 m!70343))

(declare-fun m!70345 () Bool)

(assert (=> b!72425 m!70345))

(assert (=> d!15909 d!16607))

(assert (=> d!15909 d!16053))

(declare-fun b!72427 () Bool)

(declare-fun res!38502 () Bool)

(declare-fun e!47371 () Bool)

(assert (=> b!72427 (=> (not res!38502) (not e!47371))))

(assert (=> b!72427 (= res!38502 (bvsge (size!2084 (v!2507 (underlying!253 thiss!992))) (_size!393 (v!2507 (underlying!253 thiss!992)))))))

(declare-fun b!72426 () Bool)

(declare-fun res!38503 () Bool)

(assert (=> b!72426 (=> (not res!38503) (not e!47371))))

(assert (=> b!72426 (= res!38503 (and (= (size!2079 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000001)) (= (size!2078 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (size!2079 (_values!2174 (v!2507 (underlying!253 thiss!992))))) (bvsge (_size!393 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!393 (v!2507 (underlying!253 thiss!992))) (bvadd (mask!6147 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!72429 () Bool)

(assert (=> b!72429 (= e!47371 (and (bvsge (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!393 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!72428 () Bool)

(declare-fun res!38505 () Bool)

(assert (=> b!72428 (=> (not res!38505) (not e!47371))))

(assert (=> b!72428 (= res!38505 (= (size!2084 (v!2507 (underlying!253 thiss!992))) (bvadd (_size!393 (v!2507 (underlying!253 thiss!992))) (bvsdiv (bvadd (extraKeys!2054 (v!2507 (underlying!253 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun d!16609 () Bool)

(declare-fun res!38504 () Bool)

(assert (=> d!16609 (=> (not res!38504) (not e!47371))))

(assert (=> d!16609 (= res!38504 (validMask!0 (mask!6147 (v!2507 (underlying!253 thiss!992)))))))

(assert (=> d!16609 (= (simpleValid!50 (v!2507 (underlying!253 thiss!992))) e!47371)))

(assert (= (and d!16609 res!38504) b!72426))

(assert (= (and b!72426 res!38503) b!72427))

(assert (= (and b!72427 res!38502) b!72428))

(assert (= (and b!72428 res!38505) b!72429))

(declare-fun m!70347 () Bool)

(assert (=> b!72427 m!70347))

(assert (=> b!72428 m!70347))

(assert (=> d!16609 m!67477))

(assert (=> d!15961 d!16609))

(assert (=> bm!6154 d!15995))

(declare-fun d!16611 () Bool)

(assert (=> d!16611 (= (get!1139 (getValueByKey!130 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2513 (getValueByKey!130 (toList!714 lt!31388) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!15799 d!16611))

(assert (=> d!15799 d!16251))

(declare-fun lt!32227 () Bool)

(declare-fun d!16613 () Bool)

(assert (=> d!16613 (= lt!32227 (select (content!76 (toList!714 lt!31544)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!47372 () Bool)

(assert (=> d!16613 (= lt!32227 e!47372)))

(declare-fun res!38507 () Bool)

(assert (=> d!16613 (=> (not res!38507) (not e!47372))))

(assert (=> d!16613 (= res!38507 ((_ is Cons!1475) (toList!714 lt!31544)))))

(assert (=> d!16613 (= (contains!717 (toList!714 lt!31544) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!32227)))

(declare-fun b!72430 () Bool)

(declare-fun e!47373 () Bool)

(assert (=> b!72430 (= e!47372 e!47373)))

(declare-fun res!38506 () Bool)

(assert (=> b!72430 (=> res!38506 e!47373)))

(assert (=> b!72430 (= res!38506 (= (h!2061 (toList!714 lt!31544)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!72431 () Bool)

(assert (=> b!72431 (= e!47373 (contains!717 (t!5006 (toList!714 lt!31544)) (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1136 (select (arr!1841 (_values!2174 (v!2507 (underlying!253 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!324 (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16613 res!38507) b!72430))

(assert (= (and b!72430 (not res!38506)) b!72431))

(declare-fun m!70349 () Bool)

(assert (=> d!16613 m!70349))

(declare-fun m!70351 () Bool)

(assert (=> d!16613 m!70351))

(declare-fun m!70353 () Bool)

(assert (=> b!72431 m!70353))

(assert (=> b!71221 d!16613))

(assert (=> b!71320 d!16413))

(assert (=> b!71320 d!15959))

(declare-fun d!16615 () Bool)

(declare-fun e!47375 () Bool)

(assert (=> d!16615 e!47375))

(declare-fun res!38508 () Bool)

(assert (=> d!16615 (=> res!38508 e!47375)))

(declare-fun lt!32230 () Bool)

(assert (=> d!16615 (= res!38508 (not lt!32230))))

(declare-fun lt!32228 () Bool)

(assert (=> d!16615 (= lt!32230 lt!32228)))

(declare-fun lt!32229 () Unit!1989)

(declare-fun e!47374 () Unit!1989)

(assert (=> d!16615 (= lt!32229 e!47374)))

(declare-fun c!10692 () Bool)

(assert (=> d!16615 (= c!10692 lt!32228)))

(assert (=> d!16615 (= lt!32228 (containsKey!134 (toList!714 lt!31555) (_1!1067 (tuple2!2113 lt!31387 lt!31386))))))

(assert (=> d!16615 (= (contains!716 lt!31555 (_1!1067 (tuple2!2113 lt!31387 lt!31386))) lt!32230)))

(declare-fun b!72432 () Bool)

(declare-fun lt!32231 () Unit!1989)

(assert (=> b!72432 (= e!47374 lt!32231)))

(assert (=> b!72432 (= lt!32231 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31555) (_1!1067 (tuple2!2113 lt!31387 lt!31386))))))

(assert (=> b!72432 (isDefined!84 (getValueByKey!130 (toList!714 lt!31555) (_1!1067 (tuple2!2113 lt!31387 lt!31386))))))

(declare-fun b!72433 () Bool)

(declare-fun Unit!2056 () Unit!1989)

(assert (=> b!72433 (= e!47374 Unit!2056)))

(declare-fun b!72434 () Bool)

(assert (=> b!72434 (= e!47375 (isDefined!84 (getValueByKey!130 (toList!714 lt!31555) (_1!1067 (tuple2!2113 lt!31387 lt!31386)))))))

(assert (= (and d!16615 c!10692) b!72432))

(assert (= (and d!16615 (not c!10692)) b!72433))

(assert (= (and d!16615 (not res!38508)) b!72434))

(declare-fun m!70355 () Bool)

(assert (=> d!16615 m!70355))

(declare-fun m!70357 () Bool)

(assert (=> b!72432 m!70357))

(assert (=> b!72432 m!68243))

(assert (=> b!72432 m!68243))

(declare-fun m!70359 () Bool)

(assert (=> b!72432 m!70359))

(assert (=> b!72434 m!68243))

(assert (=> b!72434 m!68243))

(assert (=> b!72434 m!70359))

(assert (=> d!15849 d!16615))

(declare-fun b!72435 () Bool)

(declare-fun e!47376 () Option!136)

(assert (=> b!72435 (= e!47376 (Some!135 (_2!1067 (h!2061 lt!31556))))))

(declare-fun c!10693 () Bool)

(declare-fun d!16617 () Bool)

(assert (=> d!16617 (= c!10693 (and ((_ is Cons!1475) lt!31556) (= (_1!1067 (h!2061 lt!31556)) (_1!1067 (tuple2!2113 lt!31387 lt!31386)))))))

(assert (=> d!16617 (= (getValueByKey!130 lt!31556 (_1!1067 (tuple2!2113 lt!31387 lt!31386))) e!47376)))

(declare-fun b!72436 () Bool)

(declare-fun e!47377 () Option!136)

(assert (=> b!72436 (= e!47376 e!47377)))

(declare-fun c!10694 () Bool)

(assert (=> b!72436 (= c!10694 (and ((_ is Cons!1475) lt!31556) (not (= (_1!1067 (h!2061 lt!31556)) (_1!1067 (tuple2!2113 lt!31387 lt!31386))))))))

(declare-fun b!72438 () Bool)

(assert (=> b!72438 (= e!47377 None!134)))

(declare-fun b!72437 () Bool)

(assert (=> b!72437 (= e!47377 (getValueByKey!130 (t!5006 lt!31556) (_1!1067 (tuple2!2113 lt!31387 lt!31386))))))

(assert (= (and d!16617 c!10693) b!72435))

(assert (= (and d!16617 (not c!10693)) b!72436))

(assert (= (and b!72436 c!10694) b!72437))

(assert (= (and b!72436 (not c!10694)) b!72438))

(declare-fun m!70361 () Bool)

(assert (=> b!72437 m!70361))

(assert (=> d!15849 d!16617))

(declare-fun d!16619 () Bool)

(assert (=> d!16619 (= (getValueByKey!130 lt!31556 (_1!1067 (tuple2!2113 lt!31387 lt!31386))) (Some!135 (_2!1067 (tuple2!2113 lt!31387 lt!31386))))))

(declare-fun lt!32232 () Unit!1989)

(assert (=> d!16619 (= lt!32232 (choose!404 lt!31556 (_1!1067 (tuple2!2113 lt!31387 lt!31386)) (_2!1067 (tuple2!2113 lt!31387 lt!31386))))))

(declare-fun e!47378 () Bool)

(assert (=> d!16619 e!47378))

(declare-fun res!38509 () Bool)

(assert (=> d!16619 (=> (not res!38509) (not e!47378))))

(assert (=> d!16619 (= res!38509 (isStrictlySorted!286 lt!31556))))

(assert (=> d!16619 (= (lemmaContainsTupThenGetReturnValue!50 lt!31556 (_1!1067 (tuple2!2113 lt!31387 lt!31386)) (_2!1067 (tuple2!2113 lt!31387 lt!31386))) lt!32232)))

(declare-fun b!72439 () Bool)

(declare-fun res!38510 () Bool)

(assert (=> b!72439 (=> (not res!38510) (not e!47378))))

(assert (=> b!72439 (= res!38510 (containsKey!134 lt!31556 (_1!1067 (tuple2!2113 lt!31387 lt!31386))))))

(declare-fun b!72440 () Bool)

(assert (=> b!72440 (= e!47378 (contains!717 lt!31556 (tuple2!2113 (_1!1067 (tuple2!2113 lt!31387 lt!31386)) (_2!1067 (tuple2!2113 lt!31387 lt!31386)))))))

(assert (= (and d!16619 res!38509) b!72439))

(assert (= (and b!72439 res!38510) b!72440))

(assert (=> d!16619 m!68237))

(declare-fun m!70363 () Bool)

(assert (=> d!16619 m!70363))

(declare-fun m!70365 () Bool)

(assert (=> d!16619 m!70365))

(declare-fun m!70367 () Bool)

(assert (=> b!72439 m!70367))

(declare-fun m!70369 () Bool)

(assert (=> b!72440 m!70369))

(assert (=> d!15849 d!16619))

(declare-fun e!47381 () Bool)

(declare-fun b!72441 () Bool)

(declare-fun lt!32233 () List!1479)

(assert (=> b!72441 (= e!47381 (contains!717 lt!32233 (tuple2!2113 (_1!1067 (tuple2!2113 lt!31387 lt!31386)) (_2!1067 (tuple2!2113 lt!31387 lt!31386)))))))

(declare-fun e!47379 () List!1479)

(declare-fun b!72442 () Bool)

(assert (=> b!72442 (= e!47379 (insertStrictlySorted!53 (t!5006 (toList!714 lt!31390)) (_1!1067 (tuple2!2113 lt!31387 lt!31386)) (_2!1067 (tuple2!2113 lt!31387 lt!31386))))))

(declare-fun d!16621 () Bool)

(assert (=> d!16621 e!47381))

(declare-fun res!38512 () Bool)

(assert (=> d!16621 (=> (not res!38512) (not e!47381))))

(assert (=> d!16621 (= res!38512 (isStrictlySorted!286 lt!32233))))

(declare-fun e!47380 () List!1479)

(assert (=> d!16621 (= lt!32233 e!47380)))

(declare-fun c!10698 () Bool)

(assert (=> d!16621 (= c!10698 (and ((_ is Cons!1475) (toList!714 lt!31390)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31390))) (_1!1067 (tuple2!2113 lt!31387 lt!31386)))))))

(assert (=> d!16621 (isStrictlySorted!286 (toList!714 lt!31390))))

(assert (=> d!16621 (= (insertStrictlySorted!53 (toList!714 lt!31390) (_1!1067 (tuple2!2113 lt!31387 lt!31386)) (_2!1067 (tuple2!2113 lt!31387 lt!31386))) lt!32233)))

(declare-fun b!72443 () Bool)

(declare-fun c!10697 () Bool)

(assert (=> b!72443 (= c!10697 (and ((_ is Cons!1475) (toList!714 lt!31390)) (bvsgt (_1!1067 (h!2061 (toList!714 lt!31390))) (_1!1067 (tuple2!2113 lt!31387 lt!31386)))))))

(declare-fun e!47383 () List!1479)

(declare-fun e!47382 () List!1479)

(assert (=> b!72443 (= e!47383 e!47382)))

(declare-fun b!72444 () Bool)

(assert (=> b!72444 (= e!47380 e!47383)))

(declare-fun c!10696 () Bool)

(assert (=> b!72444 (= c!10696 (and ((_ is Cons!1475) (toList!714 lt!31390)) (= (_1!1067 (h!2061 (toList!714 lt!31390))) (_1!1067 (tuple2!2113 lt!31387 lt!31386)))))))

(declare-fun b!72445 () Bool)

(declare-fun call!6304 () List!1479)

(assert (=> b!72445 (= e!47383 call!6304)))

(declare-fun b!72446 () Bool)

(declare-fun res!38511 () Bool)

(assert (=> b!72446 (=> (not res!38511) (not e!47381))))

(assert (=> b!72446 (= res!38511 (containsKey!134 lt!32233 (_1!1067 (tuple2!2113 lt!31387 lt!31386))))))

(declare-fun b!72447 () Bool)

(assert (=> b!72447 (= e!47379 (ite c!10696 (t!5006 (toList!714 lt!31390)) (ite c!10697 (Cons!1475 (h!2061 (toList!714 lt!31390)) (t!5006 (toList!714 lt!31390))) Nil!1476)))))

(declare-fun b!72448 () Bool)

(declare-fun call!6303 () List!1479)

(assert (=> b!72448 (= e!47380 call!6303)))

(declare-fun b!72449 () Bool)

(declare-fun call!6302 () List!1479)

(assert (=> b!72449 (= e!47382 call!6302)))

(declare-fun bm!6299 () Bool)

(assert (=> bm!6299 (= call!6302 call!6304)))

(declare-fun bm!6300 () Bool)

(assert (=> bm!6300 (= call!6304 call!6303)))

(declare-fun bm!6301 () Bool)

(assert (=> bm!6301 (= call!6303 ($colon$colon!64 e!47379 (ite c!10698 (h!2061 (toList!714 lt!31390)) (tuple2!2113 (_1!1067 (tuple2!2113 lt!31387 lt!31386)) (_2!1067 (tuple2!2113 lt!31387 lt!31386))))))))

(declare-fun c!10695 () Bool)

(assert (=> bm!6301 (= c!10695 c!10698)))

(declare-fun b!72450 () Bool)

(assert (=> b!72450 (= e!47382 call!6302)))

(assert (= (and d!16621 c!10698) b!72448))

(assert (= (and d!16621 (not c!10698)) b!72444))

(assert (= (and b!72444 c!10696) b!72445))

(assert (= (and b!72444 (not c!10696)) b!72443))

(assert (= (and b!72443 c!10697) b!72449))

(assert (= (and b!72443 (not c!10697)) b!72450))

(assert (= (or b!72449 b!72450) bm!6299))

(assert (= (or b!72445 bm!6299) bm!6300))

(assert (= (or b!72448 bm!6300) bm!6301))

(assert (= (and bm!6301 c!10695) b!72442))

(assert (= (and bm!6301 (not c!10695)) b!72447))

(assert (= (and d!16621 res!38512) b!72446))

(assert (= (and b!72446 res!38511) b!72441))

(declare-fun m!70371 () Bool)

(assert (=> b!72441 m!70371))

(declare-fun m!70373 () Bool)

(assert (=> b!72442 m!70373))

(declare-fun m!70375 () Bool)

(assert (=> b!72446 m!70375))

(declare-fun m!70377 () Bool)

(assert (=> bm!6301 m!70377))

(declare-fun m!70379 () Bool)

(assert (=> d!16621 m!70379))

(declare-fun m!70381 () Bool)

(assert (=> d!16621 m!70381))

(assert (=> d!15849 d!16621))

(declare-fun b!72451 () Bool)

(declare-fun e!47384 () Option!136)

(assert (=> b!72451 (= e!47384 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31581)))))))

(declare-fun d!16623 () Bool)

(declare-fun c!10699 () Bool)

(assert (=> d!16623 (= c!10699 (and ((_ is Cons!1475) (toList!714 lt!31581)) (= (_1!1067 (h!2061 (toList!714 lt!31581))) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16623 (= (getValueByKey!130 (toList!714 lt!31581) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47384)))

(declare-fun b!72452 () Bool)

(declare-fun e!47385 () Option!136)

(assert (=> b!72452 (= e!47384 e!47385)))

(declare-fun c!10700 () Bool)

(assert (=> b!72452 (= c!10700 (and ((_ is Cons!1475) (toList!714 lt!31581)) (not (= (_1!1067 (h!2061 (toList!714 lt!31581))) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72454 () Bool)

(assert (=> b!72454 (= e!47385 None!134)))

(declare-fun b!72453 () Bool)

(assert (=> b!72453 (= e!47385 (getValueByKey!130 (t!5006 (toList!714 lt!31581)) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16623 c!10699) b!72451))

(assert (= (and d!16623 (not c!10699)) b!72452))

(assert (= (and b!72452 c!10700) b!72453))

(assert (= (and b!72452 (not c!10700)) b!72454))

(declare-fun m!70383 () Bool)

(assert (=> b!72453 m!70383))

(assert (=> b!71249 d!16623))

(assert (=> d!15963 d!15759))

(declare-fun d!16625 () Bool)

(declare-fun res!38513 () Bool)

(declare-fun e!47386 () Bool)

(assert (=> d!16625 (=> res!38513 e!47386)))

(assert (=> d!16625 (= res!38513 (and ((_ is Cons!1475) (toList!714 lt!31365)) (= (_1!1067 (h!2061 (toList!714 lt!31365))) (_1!1067 lt!31109))))))

(assert (=> d!16625 (= (containsKey!134 (toList!714 lt!31365) (_1!1067 lt!31109)) e!47386)))

(declare-fun b!72455 () Bool)

(declare-fun e!47387 () Bool)

(assert (=> b!72455 (= e!47386 e!47387)))

(declare-fun res!38514 () Bool)

(assert (=> b!72455 (=> (not res!38514) (not e!47387))))

(assert (=> b!72455 (= res!38514 (and (or (not ((_ is Cons!1475) (toList!714 lt!31365))) (bvsle (_1!1067 (h!2061 (toList!714 lt!31365))) (_1!1067 lt!31109))) ((_ is Cons!1475) (toList!714 lt!31365)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31365))) (_1!1067 lt!31109))))))

(declare-fun b!72456 () Bool)

(assert (=> b!72456 (= e!47387 (containsKey!134 (t!5006 (toList!714 lt!31365)) (_1!1067 lt!31109)))))

(assert (= (and d!16625 (not res!38513)) b!72455))

(assert (= (and b!72455 res!38514) b!72456))

(declare-fun m!70385 () Bool)

(assert (=> b!72456 m!70385))

(assert (=> d!15765 d!16625))

(declare-fun d!16627 () Bool)

(assert (=> d!16627 (= (inRange!0 (ite c!10401 (index!3083 lt!31739) (ite c!10400 (index!3082 lt!31743) (index!3085 lt!31743))) (mask!6147 newMap!16)) (and (bvsge (ite c!10401 (index!3083 lt!31739) (ite c!10400 (index!3082 lt!31743) (index!3085 lt!31743))) #b00000000000000000000000000000000) (bvslt (ite c!10401 (index!3083 lt!31739) (ite c!10400 (index!3082 lt!31743) (index!3085 lt!31743))) (bvadd (mask!6147 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6197 d!16627))

(declare-fun d!16629 () Bool)

(declare-fun lt!32234 () Bool)

(assert (=> d!16629 (= lt!32234 (select (content!76 (toList!714 lt!31657)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun e!47388 () Bool)

(assert (=> d!16629 (= lt!32234 e!47388)))

(declare-fun res!38516 () Bool)

(assert (=> d!16629 (=> (not res!38516) (not e!47388))))

(assert (=> d!16629 (= res!38516 ((_ is Cons!1475) (toList!714 lt!31657)))))

(assert (=> d!16629 (= (contains!717 (toList!714 lt!31657) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!32234)))

(declare-fun b!72457 () Bool)

(declare-fun e!47389 () Bool)

(assert (=> b!72457 (= e!47388 e!47389)))

(declare-fun res!38515 () Bool)

(assert (=> b!72457 (=> res!38515 e!47389)))

(assert (=> b!72457 (= res!38515 (= (h!2061 (toList!714 lt!31657)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!72458 () Bool)

(assert (=> b!72458 (= e!47389 (contains!717 (t!5006 (toList!714 lt!31657)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!16629 res!38516) b!72457))

(assert (= (and b!72457 (not res!38515)) b!72458))

(declare-fun m!70387 () Bool)

(assert (=> d!16629 m!70387))

(declare-fun m!70389 () Bool)

(assert (=> d!16629 m!70389))

(declare-fun m!70391 () Bool)

(assert (=> b!72458 m!70391))

(assert (=> b!71386 d!16629))

(assert (=> b!71460 d!16497))

(assert (=> b!71460 d!16499))

(declare-fun d!16631 () Bool)

(declare-fun e!47391 () Bool)

(assert (=> d!16631 e!47391))

(declare-fun res!38517 () Bool)

(assert (=> d!16631 (=> res!38517 e!47391)))

(declare-fun lt!32237 () Bool)

(assert (=> d!16631 (= res!38517 (not lt!32237))))

(declare-fun lt!32235 () Bool)

(assert (=> d!16631 (= lt!32237 lt!32235)))

(declare-fun lt!32236 () Unit!1989)

(declare-fun e!47390 () Unit!1989)

(assert (=> d!16631 (= lt!32236 e!47390)))

(declare-fun c!10701 () Bool)

(assert (=> d!16631 (= c!10701 lt!32235)))

(assert (=> d!16631 (= lt!32235 (containsKey!134 (toList!714 lt!31249) lt!31234))))

(assert (=> d!16631 (= (contains!716 lt!31249 lt!31234) lt!32237)))

(declare-fun b!72459 () Bool)

(declare-fun lt!32238 () Unit!1989)

(assert (=> b!72459 (= e!47390 lt!32238)))

(assert (=> b!72459 (= lt!32238 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31249) lt!31234))))

(assert (=> b!72459 (isDefined!84 (getValueByKey!130 (toList!714 lt!31249) lt!31234))))

(declare-fun b!72460 () Bool)

(declare-fun Unit!2057 () Unit!1989)

(assert (=> b!72460 (= e!47390 Unit!2057)))

(declare-fun b!72461 () Bool)

(assert (=> b!72461 (= e!47391 (isDefined!84 (getValueByKey!130 (toList!714 lt!31249) lt!31234)))))

(assert (= (and d!16631 c!10701) b!72459))

(assert (= (and d!16631 (not c!10701)) b!72460))

(assert (= (and d!16631 (not res!38517)) b!72461))

(declare-fun m!70393 () Bool)

(assert (=> d!16631 m!70393))

(declare-fun m!70395 () Bool)

(assert (=> b!72459 m!70395))

(assert (=> b!72459 m!68377))

(assert (=> b!72459 m!68377))

(declare-fun m!70397 () Bool)

(assert (=> b!72459 m!70397))

(assert (=> b!72461 m!68377))

(assert (=> b!72461 m!68377))

(assert (=> b!72461 m!70397))

(assert (=> d!15877 d!16631))

(declare-fun d!16633 () Bool)

(assert (=> d!16633 (= (apply!74 (+!91 lt!31249 (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!31234) (apply!74 lt!31249 lt!31234))))

(assert (=> d!16633 true))

(declare-fun _$34!804 () Unit!1989)

(assert (=> d!16633 (= (choose!411 lt!31249 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))) lt!31234) _$34!804)))

(declare-fun bs!3115 () Bool)

(assert (= bs!3115 d!16633))

(assert (=> bs!3115 m!67657))

(assert (=> bs!3115 m!67657))

(assert (=> bs!3115 m!67661))

(assert (=> bs!3115 m!67635))

(assert (=> d!15877 d!16633))

(assert (=> d!15877 d!15875))

(assert (=> d!15877 d!15889))

(assert (=> d!15877 d!15891))

(assert (=> b!71187 d!16173))

(declare-fun d!16635 () Bool)

(declare-fun res!38518 () Bool)

(declare-fun e!47392 () Bool)

(assert (=> d!16635 (=> res!38518 e!47392)))

(assert (=> d!16635 (= res!38518 (or ((_ is Nil!1476) lt!31411) ((_ is Nil!1476) (t!5006 lt!31411))))))

(assert (=> d!16635 (= (isStrictlySorted!286 lt!31411) e!47392)))

(declare-fun b!72462 () Bool)

(declare-fun e!47393 () Bool)

(assert (=> b!72462 (= e!47392 e!47393)))

(declare-fun res!38519 () Bool)

(assert (=> b!72462 (=> (not res!38519) (not e!47393))))

(assert (=> b!72462 (= res!38519 (bvslt (_1!1067 (h!2061 lt!31411)) (_1!1067 (h!2061 (t!5006 lt!31411)))))))

(declare-fun b!72463 () Bool)

(assert (=> b!72463 (= e!47393 (isStrictlySorted!286 (t!5006 lt!31411)))))

(assert (= (and d!16635 (not res!38518)) b!72462))

(assert (= (and b!72462 res!38519) b!72463))

(declare-fun m!70399 () Bool)

(assert (=> b!72463 m!70399))

(assert (=> d!15771 d!16635))

(declare-fun d!16637 () Bool)

(declare-fun res!38520 () Bool)

(declare-fun e!47394 () Bool)

(assert (=> d!16637 (=> res!38520 e!47394)))

(assert (=> d!16637 (= res!38520 (or ((_ is Nil!1476) (toList!714 (+!91 lt!31105 lt!31103))) ((_ is Nil!1476) (t!5006 (toList!714 (+!91 lt!31105 lt!31103))))))))

(assert (=> d!16637 (= (isStrictlySorted!286 (toList!714 (+!91 lt!31105 lt!31103))) e!47394)))

(declare-fun b!72464 () Bool)

(declare-fun e!47395 () Bool)

(assert (=> b!72464 (= e!47394 e!47395)))

(declare-fun res!38521 () Bool)

(assert (=> b!72464 (=> (not res!38521) (not e!47395))))

(assert (=> b!72464 (= res!38521 (bvslt (_1!1067 (h!2061 (toList!714 (+!91 lt!31105 lt!31103)))) (_1!1067 (h!2061 (t!5006 (toList!714 (+!91 lt!31105 lt!31103)))))))))

(declare-fun b!72465 () Bool)

(assert (=> b!72465 (= e!47395 (isStrictlySorted!286 (t!5006 (toList!714 (+!91 lt!31105 lt!31103)))))))

(assert (= (and d!16637 (not res!38520)) b!72464))

(assert (= (and b!72464 res!38521) b!72465))

(assert (=> b!72465 m!69153))

(assert (=> d!15771 d!16637))

(declare-fun d!16639 () Bool)

(declare-fun e!47397 () Bool)

(assert (=> d!16639 e!47397))

(declare-fun res!38522 () Bool)

(assert (=> d!16639 (=> res!38522 e!47397)))

(declare-fun lt!32241 () Bool)

(assert (=> d!16639 (= res!38522 (not lt!32241))))

(declare-fun lt!32239 () Bool)

(assert (=> d!16639 (= lt!32241 lt!32239)))

(declare-fun lt!32240 () Unit!1989)

(declare-fun e!47396 () Unit!1989)

(assert (=> d!16639 (= lt!32240 e!47396)))

(declare-fun c!10702 () Bool)

(assert (=> d!16639 (= c!10702 lt!32239)))

(assert (=> d!16639 (= lt!32239 (containsKey!134 (toList!714 lt!31581) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> d!16639 (= (contains!716 lt!31581 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32241)))

(declare-fun b!72466 () Bool)

(declare-fun lt!32242 () Unit!1989)

(assert (=> b!72466 (= e!47396 lt!32242)))

(assert (=> b!72466 (= lt!32242 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31581) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (=> b!72466 (isDefined!84 (getValueByKey!130 (toList!714 lt!31581) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72467 () Bool)

(declare-fun Unit!2058 () Unit!1989)

(assert (=> b!72467 (= e!47396 Unit!2058)))

(declare-fun b!72468 () Bool)

(assert (=> b!72468 (= e!47397 (isDefined!84 (getValueByKey!130 (toList!714 lt!31581) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16639 c!10702) b!72466))

(assert (= (and d!16639 (not c!10702)) b!72467))

(assert (= (and d!16639 (not res!38522)) b!72468))

(declare-fun m!70401 () Bool)

(assert (=> d!16639 m!70401))

(declare-fun m!70403 () Bool)

(assert (=> b!72466 m!70403))

(assert (=> b!72466 m!68301))

(assert (=> b!72466 m!68301))

(declare-fun m!70405 () Bool)

(assert (=> b!72466 m!70405))

(assert (=> b!72468 m!68301))

(assert (=> b!72468 m!68301))

(assert (=> b!72468 m!70405))

(assert (=> d!15867 d!16639))

(declare-fun b!72469 () Bool)

(declare-fun e!47398 () Option!136)

(assert (=> b!72469 (= e!47398 (Some!135 (_2!1067 (h!2061 lt!31582))))))

(declare-fun d!16641 () Bool)

(declare-fun c!10703 () Bool)

(assert (=> d!16641 (= c!10703 (and ((_ is Cons!1475) lt!31582) (= (_1!1067 (h!2061 lt!31582)) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16641 (= (getValueByKey!130 lt!31582 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) e!47398)))

(declare-fun b!72470 () Bool)

(declare-fun e!47399 () Option!136)

(assert (=> b!72470 (= e!47398 e!47399)))

(declare-fun c!10704 () Bool)

(assert (=> b!72470 (= c!10704 (and ((_ is Cons!1475) lt!31582) (not (= (_1!1067 (h!2061 lt!31582)) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72472 () Bool)

(assert (=> b!72472 (= e!47399 None!134)))

(declare-fun b!72471 () Bool)

(assert (=> b!72471 (= e!47399 (getValueByKey!130 (t!5006 lt!31582) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16641 c!10703) b!72469))

(assert (= (and d!16641 (not c!10703)) b!72470))

(assert (= (and b!72470 c!10704) b!72471))

(assert (= (and b!72470 (not c!10704)) b!72472))

(declare-fun m!70407 () Bool)

(assert (=> b!72471 m!70407))

(assert (=> d!15867 d!16641))

(declare-fun d!16643 () Bool)

(assert (=> d!16643 (= (getValueByKey!130 lt!31582 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) (Some!135 (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun lt!32243 () Unit!1989)

(assert (=> d!16643 (= lt!32243 (choose!404 lt!31582 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun e!47400 () Bool)

(assert (=> d!16643 e!47400))

(declare-fun res!38523 () Bool)

(assert (=> d!16643 (=> (not res!38523) (not e!47400))))

(assert (=> d!16643 (= res!38523 (isStrictlySorted!286 lt!31582))))

(assert (=> d!16643 (= (lemmaContainsTupThenGetReturnValue!50 lt!31582 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32243)))

(declare-fun b!72473 () Bool)

(declare-fun res!38524 () Bool)

(assert (=> b!72473 (=> (not res!38524) (not e!47400))))

(assert (=> b!72473 (= res!38524 (containsKey!134 lt!31582 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72474 () Bool)

(assert (=> b!72474 (= e!47400 (contains!717 lt!31582 (tuple2!2113 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16643 res!38523) b!72473))

(assert (= (and b!72473 res!38524) b!72474))

(assert (=> d!16643 m!68295))

(declare-fun m!70409 () Bool)

(assert (=> d!16643 m!70409))

(declare-fun m!70411 () Bool)

(assert (=> d!16643 m!70411))

(declare-fun m!70413 () Bool)

(assert (=> b!72473 m!70413))

(declare-fun m!70415 () Bool)

(assert (=> b!72474 m!70415))

(assert (=> d!15867 d!16643))

(declare-fun b!72475 () Bool)

(declare-fun lt!32244 () List!1479)

(declare-fun e!47403 () Bool)

(assert (=> b!72475 (= e!47403 (contains!717 lt!32244 (tuple2!2113 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun e!47401 () List!1479)

(declare-fun b!72476 () Bool)

(assert (=> b!72476 (= e!47401 (insertStrictlySorted!53 (t!5006 (toList!714 lt!31245)) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun d!16645 () Bool)

(assert (=> d!16645 e!47403))

(declare-fun res!38526 () Bool)

(assert (=> d!16645 (=> (not res!38526) (not e!47403))))

(assert (=> d!16645 (= res!38526 (isStrictlySorted!286 lt!32244))))

(declare-fun e!47402 () List!1479)

(assert (=> d!16645 (= lt!32244 e!47402)))

(declare-fun c!10708 () Bool)

(assert (=> d!16645 (= c!10708 (and ((_ is Cons!1475) (toList!714 lt!31245)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31245))) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16645 (isStrictlySorted!286 (toList!714 lt!31245))))

(assert (=> d!16645 (= (insertStrictlySorted!53 (toList!714 lt!31245) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32244)))

(declare-fun c!10707 () Bool)

(declare-fun b!72477 () Bool)

(assert (=> b!72477 (= c!10707 (and ((_ is Cons!1475) (toList!714 lt!31245)) (bvsgt (_1!1067 (h!2061 (toList!714 lt!31245))) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun e!47405 () List!1479)

(declare-fun e!47404 () List!1479)

(assert (=> b!72477 (= e!47405 e!47404)))

(declare-fun b!72478 () Bool)

(assert (=> b!72478 (= e!47402 e!47405)))

(declare-fun c!10706 () Bool)

(assert (=> b!72478 (= c!10706 (and ((_ is Cons!1475) (toList!714 lt!31245)) (= (_1!1067 (h!2061 (toList!714 lt!31245))) (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72479 () Bool)

(declare-fun call!6307 () List!1479)

(assert (=> b!72479 (= e!47405 call!6307)))

(declare-fun b!72480 () Bool)

(declare-fun res!38525 () Bool)

(assert (=> b!72480 (=> (not res!38525) (not e!47403))))

(assert (=> b!72480 (= res!38525 (containsKey!134 lt!32244 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72481 () Bool)

(assert (=> b!72481 (= e!47401 (ite c!10706 (t!5006 (toList!714 lt!31245)) (ite c!10707 (Cons!1475 (h!2061 (toList!714 lt!31245)) (t!5006 (toList!714 lt!31245))) Nil!1476)))))

(declare-fun b!72482 () Bool)

(declare-fun call!6306 () List!1479)

(assert (=> b!72482 (= e!47402 call!6306)))

(declare-fun b!72483 () Bool)

(declare-fun call!6305 () List!1479)

(assert (=> b!72483 (= e!47404 call!6305)))

(declare-fun bm!6302 () Bool)

(assert (=> bm!6302 (= call!6305 call!6307)))

(declare-fun bm!6303 () Bool)

(assert (=> bm!6303 (= call!6307 call!6306)))

(declare-fun bm!6304 () Bool)

(assert (=> bm!6304 (= call!6306 ($colon$colon!64 e!47401 (ite c!10708 (h!2061 (toList!714 lt!31245)) (tuple2!2113 (_1!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992))))) (_2!1067 (tuple2!2113 lt!31247 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun c!10705 () Bool)

(assert (=> bm!6304 (= c!10705 c!10708)))

(declare-fun b!72484 () Bool)

(assert (=> b!72484 (= e!47404 call!6305)))

(assert (= (and d!16645 c!10708) b!72482))

(assert (= (and d!16645 (not c!10708)) b!72478))

(assert (= (and b!72478 c!10706) b!72479))

(assert (= (and b!72478 (not c!10706)) b!72477))

(assert (= (and b!72477 c!10707) b!72483))

(assert (= (and b!72477 (not c!10707)) b!72484))

(assert (= (or b!72483 b!72484) bm!6302))

(assert (= (or b!72479 bm!6302) bm!6303))

(assert (= (or b!72482 bm!6303) bm!6304))

(assert (= (and bm!6304 c!10705) b!72476))

(assert (= (and bm!6304 (not c!10705)) b!72481))

(assert (= (and d!16645 res!38526) b!72480))

(assert (= (and b!72480 res!38525) b!72475))

(declare-fun m!70417 () Bool)

(assert (=> b!72475 m!70417))

(declare-fun m!70419 () Bool)

(assert (=> b!72476 m!70419))

(declare-fun m!70421 () Bool)

(assert (=> b!72480 m!70421))

(declare-fun m!70423 () Bool)

(assert (=> bm!6304 m!70423))

(declare-fun m!70425 () Bool)

(assert (=> d!16645 m!70425))

(declare-fun m!70427 () Bool)

(assert (=> d!16645 m!70427))

(assert (=> d!15867 d!16645))

(declare-fun d!16647 () Bool)

(declare-fun e!47407 () Bool)

(assert (=> d!16647 e!47407))

(declare-fun res!38527 () Bool)

(assert (=> d!16647 (=> res!38527 e!47407)))

(declare-fun lt!32247 () Bool)

(assert (=> d!16647 (= res!38527 (not lt!32247))))

(declare-fun lt!32245 () Bool)

(assert (=> d!16647 (= lt!32247 lt!32245)))

(declare-fun lt!32246 () Unit!1989)

(declare-fun e!47406 () Unit!1989)

(assert (=> d!16647 (= lt!32246 e!47406)))

(declare-fun c!10709 () Bool)

(assert (=> d!16647 (= c!10709 lt!32245)))

(assert (=> d!16647 (= lt!32245 (containsKey!134 (toList!714 lt!31643) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> d!16647 (= (contains!716 lt!31643 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) lt!32247)))

(declare-fun b!72485 () Bool)

(declare-fun lt!32248 () Unit!1989)

(assert (=> b!72485 (= e!47406 lt!32248)))

(assert (=> b!72485 (= lt!32248 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31643) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (=> b!72485 (isDefined!84 (getValueByKey!130 (toList!714 lt!31643) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72486 () Bool)

(declare-fun Unit!2059 () Unit!1989)

(assert (=> b!72486 (= e!47406 Unit!2059)))

(declare-fun b!72487 () Bool)

(assert (=> b!72487 (= e!47407 (isDefined!84 (getValueByKey!130 (toList!714 lt!31643) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(assert (= (and d!16647 c!10709) b!72485))

(assert (= (and d!16647 (not c!10709)) b!72486))

(assert (= (and d!16647 (not res!38527)) b!72487))

(declare-fun m!70429 () Bool)

(assert (=> d!16647 m!70429))

(declare-fun m!70431 () Bool)

(assert (=> b!72485 m!70431))

(assert (=> b!72485 m!68497))

(assert (=> b!72485 m!68497))

(declare-fun m!70433 () Bool)

(assert (=> b!72485 m!70433))

(assert (=> b!72487 m!68497))

(assert (=> b!72487 m!68497))

(assert (=> b!72487 m!70433))

(assert (=> d!15927 d!16647))

(declare-fun b!72488 () Bool)

(declare-fun e!47408 () Option!136)

(assert (=> b!72488 (= e!47408 (Some!135 (_2!1067 (h!2061 lt!31644))))))

(declare-fun d!16649 () Bool)

(declare-fun c!10710 () Bool)

(assert (=> d!16649 (= c!10710 (and ((_ is Cons!1475) lt!31644) (= (_1!1067 (h!2061 lt!31644)) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(assert (=> d!16649 (= (getValueByKey!130 lt!31644 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) e!47408)))

(declare-fun b!72489 () Bool)

(declare-fun e!47409 () Option!136)

(assert (=> b!72489 (= e!47408 e!47409)))

(declare-fun c!10711 () Bool)

(assert (=> b!72489 (= c!10711 (and ((_ is Cons!1475) lt!31644) (not (= (_1!1067 (h!2061 lt!31644)) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))))

(declare-fun b!72491 () Bool)

(assert (=> b!72491 (= e!47409 None!134)))

(declare-fun b!72490 () Bool)

(assert (=> b!72490 (= e!47409 (getValueByKey!130 (t!5006 lt!31644) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(assert (= (and d!16649 c!10710) b!72488))

(assert (= (and d!16649 (not c!10710)) b!72489))

(assert (= (and b!72489 c!10711) b!72490))

(assert (= (and b!72489 (not c!10711)) b!72491))

(declare-fun m!70435 () Bool)

(assert (=> b!72490 m!70435))

(assert (=> d!15927 d!16649))

(declare-fun d!16651 () Bool)

(assert (=> d!16651 (= (getValueByKey!130 lt!31644 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) (Some!135 (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun lt!32249 () Unit!1989)

(assert (=> d!16651 (= lt!32249 (choose!404 lt!31644 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun e!47410 () Bool)

(assert (=> d!16651 e!47410))

(declare-fun res!38528 () Bool)

(assert (=> d!16651 (=> (not res!38528) (not e!47410))))

(assert (=> d!16651 (= res!38528 (isStrictlySorted!286 lt!31644))))

(assert (=> d!16651 (= (lemmaContainsTupThenGetReturnValue!50 lt!31644 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) lt!32249)))

(declare-fun b!72492 () Bool)

(declare-fun res!38529 () Bool)

(assert (=> b!72492 (=> (not res!38529) (not e!47410))))

(assert (=> b!72492 (= res!38529 (containsKey!134 lt!31644 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72493 () Bool)

(assert (=> b!72493 (= e!47410 (contains!717 lt!31644 (tuple2!2113 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(assert (= (and d!16651 res!38528) b!72492))

(assert (= (and b!72492 res!38529) b!72493))

(assert (=> d!16651 m!68491))

(declare-fun m!70437 () Bool)

(assert (=> d!16651 m!70437))

(declare-fun m!70439 () Bool)

(assert (=> d!16651 m!70439))

(declare-fun m!70441 () Bool)

(assert (=> b!72492 m!70441))

(declare-fun m!70443 () Bool)

(assert (=> b!72493 m!70443))

(assert (=> d!15927 d!16651))

(declare-fun b!72494 () Bool)

(declare-fun e!47413 () Bool)

(declare-fun lt!32250 () List!1479)

(assert (=> b!72494 (= e!47413 (contains!717 lt!32250 (tuple2!2113 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72495 () Bool)

(declare-fun e!47411 () List!1479)

(assert (=> b!72495 (= e!47411 (insertStrictlySorted!53 (t!5006 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052)))) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun d!16653 () Bool)

(assert (=> d!16653 e!47413))

(declare-fun res!38531 () Bool)

(assert (=> d!16653 (=> (not res!38531) (not e!47413))))

(assert (=> d!16653 (= res!38531 (isStrictlySorted!286 lt!32250))))

(declare-fun e!47412 () List!1479)

(assert (=> d!16653 (= lt!32250 e!47412)))

(declare-fun c!10715 () Bool)

(assert (=> d!16653 (= c!10715 (and ((_ is Cons!1475) (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052)))) (bvslt (_1!1067 (h!2061 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052))))) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(assert (=> d!16653 (isStrictlySorted!286 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052))))))

(assert (=> d!16653 (= (insertStrictlySorted!53 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052))) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))) lt!32250)))

(declare-fun b!72496 () Bool)

(declare-fun c!10714 () Bool)

(assert (=> b!72496 (= c!10714 (and ((_ is Cons!1475) (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052)))) (bvsgt (_1!1067 (h!2061 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052))))) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun e!47415 () List!1479)

(declare-fun e!47414 () List!1479)

(assert (=> b!72496 (= e!47415 e!47414)))

(declare-fun b!72497 () Bool)

(assert (=> b!72497 (= e!47412 e!47415)))

(declare-fun c!10713 () Bool)

(assert (=> b!72497 (= c!10713 (and ((_ is Cons!1475) (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052)))) (= (_1!1067 (h!2061 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052))))) (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))))

(declare-fun b!72498 () Bool)

(declare-fun call!6310 () List!1479)

(assert (=> b!72498 (= e!47415 call!6310)))

(declare-fun b!72499 () Bool)

(declare-fun res!38530 () Bool)

(assert (=> b!72499 (=> (not res!38530) (not e!47413))))

(assert (=> b!72499 (= res!38530 (containsKey!134 lt!32250 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))

(declare-fun b!72500 () Bool)

(assert (=> b!72500 (= e!47411 (ite c!10713 (t!5006 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052)))) (ite c!10714 (Cons!1475 (h!2061 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052)))) (t!5006 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052))))) Nil!1476)))))

(declare-fun b!72501 () Bool)

(declare-fun call!6309 () List!1479)

(assert (=> b!72501 (= e!47412 call!6309)))

(declare-fun b!72502 () Bool)

(declare-fun call!6308 () List!1479)

(assert (=> b!72502 (= e!47414 call!6308)))

(declare-fun bm!6305 () Bool)

(assert (=> bm!6305 (= call!6308 call!6310)))

(declare-fun bm!6306 () Bool)

(assert (=> bm!6306 (= call!6310 call!6309)))

(declare-fun bm!6307 () Bool)

(assert (=> bm!6307 (= call!6309 ($colon$colon!64 e!47411 (ite c!10715 (h!2061 (toList!714 (ite c!10220 call!6051 (ite c!10218 call!6056 call!6052)))) (tuple2!2113 (_1!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) (_2!1067 (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))))))

(declare-fun c!10712 () Bool)

(assert (=> bm!6307 (= c!10712 c!10715)))

(declare-fun b!72503 () Bool)

(assert (=> b!72503 (= e!47414 call!6308)))

(assert (= (and d!16653 c!10715) b!72501))

(assert (= (and d!16653 (not c!10715)) b!72497))

(assert (= (and b!72497 c!10713) b!72498))

(assert (= (and b!72497 (not c!10713)) b!72496))

(assert (= (and b!72496 c!10714) b!72502))

(assert (= (and b!72496 (not c!10714)) b!72503))

(assert (= (or b!72502 b!72503) bm!6305))

(assert (= (or b!72498 bm!6305) bm!6306))

(assert (= (or b!72501 bm!6306) bm!6307))

(assert (= (and bm!6307 c!10712) b!72495))

(assert (= (and bm!6307 (not c!10712)) b!72500))

(assert (= (and d!16653 res!38531) b!72499))

(assert (= (and b!72499 res!38530) b!72494))

(declare-fun m!70445 () Bool)

(assert (=> b!72494 m!70445))

(declare-fun m!70447 () Bool)

(assert (=> b!72495 m!70447))

(declare-fun m!70449 () Bool)

(assert (=> b!72499 m!70449))

(declare-fun m!70451 () Bool)

(assert (=> bm!6307 m!70451))

(declare-fun m!70453 () Bool)

(assert (=> d!16653 m!70453))

(declare-fun m!70455 () Bool)

(assert (=> d!16653 m!70455))

(assert (=> d!15927 d!16653))

(declare-fun d!16655 () Bool)

(declare-fun res!38532 () Bool)

(declare-fun e!47416 () Bool)

(assert (=> d!16655 (=> res!38532 e!47416)))

(assert (=> d!16655 (= res!38532 (and ((_ is Cons!1475) lt!31370) (= (_1!1067 (h!2061 lt!31370)) (_1!1067 lt!31103))))))

(assert (=> d!16655 (= (containsKey!134 lt!31370 (_1!1067 lt!31103)) e!47416)))

(declare-fun b!72504 () Bool)

(declare-fun e!47417 () Bool)

(assert (=> b!72504 (= e!47416 e!47417)))

(declare-fun res!38533 () Bool)

(assert (=> b!72504 (=> (not res!38533) (not e!47417))))

(assert (=> b!72504 (= res!38533 (and (or (not ((_ is Cons!1475) lt!31370)) (bvsle (_1!1067 (h!2061 lt!31370)) (_1!1067 lt!31103))) ((_ is Cons!1475) lt!31370) (bvslt (_1!1067 (h!2061 lt!31370)) (_1!1067 lt!31103))))))

(declare-fun b!72505 () Bool)

(assert (=> b!72505 (= e!47417 (containsKey!134 (t!5006 lt!31370) (_1!1067 lt!31103)))))

(assert (= (and d!16655 (not res!38532)) b!72504))

(assert (= (and b!72504 res!38533) b!72505))

(declare-fun m!70457 () Bool)

(assert (=> b!72505 m!70457))

(assert (=> b!71273 d!16655))

(declare-fun d!16657 () Bool)

(assert (=> d!16657 (= (apply!74 (+!91 lt!31431 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) lt!31416) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31431 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) lt!31416)))))

(declare-fun bs!3116 () Bool)

(assert (= bs!3116 d!16657))

(declare-fun m!70459 () Bool)

(assert (=> bs!3116 m!70459))

(assert (=> bs!3116 m!70459))

(declare-fun m!70461 () Bool)

(assert (=> bs!3116 m!70461))

(assert (=> b!71062 d!16657))

(declare-fun d!16659 () Bool)

(declare-fun e!47418 () Bool)

(assert (=> d!16659 e!47418))

(declare-fun res!38534 () Bool)

(assert (=> d!16659 (=> (not res!38534) (not e!47418))))

(declare-fun lt!32252 () ListLongMap!1397)

(assert (=> d!16659 (= res!38534 (contains!716 lt!32252 (_1!1067 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(declare-fun lt!32253 () List!1479)

(assert (=> d!16659 (= lt!32252 (ListLongMap!1398 lt!32253))))

(declare-fun lt!32251 () Unit!1989)

(declare-fun lt!32254 () Unit!1989)

(assert (=> d!16659 (= lt!32251 lt!32254)))

(assert (=> d!16659 (= (getValueByKey!130 lt!32253 (_1!1067 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) (Some!135 (_2!1067 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(assert (=> d!16659 (= lt!32254 (lemmaContainsTupThenGetReturnValue!50 lt!32253 (_1!1067 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) (_2!1067 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(assert (=> d!16659 (= lt!32253 (insertStrictlySorted!53 (toList!714 lt!31418) (_1!1067 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) (_2!1067 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(assert (=> d!16659 (= (+!91 lt!31418 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) lt!32252)))

(declare-fun b!72506 () Bool)

(declare-fun res!38535 () Bool)

(assert (=> b!72506 (=> (not res!38535) (not e!47418))))

(assert (=> b!72506 (= res!38535 (= (getValueByKey!130 (toList!714 lt!32252) (_1!1067 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) (Some!135 (_2!1067 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))))

(declare-fun b!72507 () Bool)

(assert (=> b!72507 (= e!47418 (contains!717 (toList!714 lt!32252) (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))

(assert (= (and d!16659 res!38534) b!72506))

(assert (= (and b!72506 res!38535) b!72507))

(declare-fun m!70463 () Bool)

(assert (=> d!16659 m!70463))

(declare-fun m!70465 () Bool)

(assert (=> d!16659 m!70465))

(declare-fun m!70467 () Bool)

(assert (=> d!16659 m!70467))

(declare-fun m!70469 () Bool)

(assert (=> d!16659 m!70469))

(declare-fun m!70471 () Bool)

(assert (=> b!72506 m!70471))

(declare-fun m!70473 () Bool)

(assert (=> b!72507 m!70473))

(assert (=> b!71062 d!16659))

(declare-fun d!16661 () Bool)

(assert (=> d!16661 (= (apply!74 (+!91 lt!31418 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) lt!31424) (apply!74 lt!31418 lt!31424))))

(declare-fun lt!32255 () Unit!1989)

(assert (=> d!16661 (= lt!32255 (choose!411 lt!31418 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) lt!31424))))

(declare-fun e!47419 () Bool)

(assert (=> d!16661 e!47419))

(declare-fun res!38536 () Bool)

(assert (=> d!16661 (=> (not res!38536) (not e!47419))))

(assert (=> d!16661 (= res!38536 (contains!716 lt!31418 lt!31424))))

(assert (=> d!16661 (= (addApplyDifferent!50 lt!31418 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) lt!31424) lt!32255)))

(declare-fun b!72508 () Bool)

(assert (=> b!72508 (= e!47419 (not (= lt!31424 lt!31423)))))

(assert (= (and d!16661 res!38536) b!72508))

(declare-fun m!70475 () Bool)

(assert (=> d!16661 m!70475))

(assert (=> d!16661 m!67893))

(declare-fun m!70477 () Bool)

(assert (=> d!16661 m!70477))

(assert (=> d!16661 m!67897))

(assert (=> d!16661 m!67903))

(assert (=> d!16661 m!67897))

(assert (=> b!71062 d!16661))

(declare-fun d!16663 () Bool)

(assert (=> d!16663 (= (apply!74 lt!31427 lt!31433) (get!1139 (getValueByKey!130 (toList!714 lt!31427) lt!31433)))))

(declare-fun bs!3117 () Bool)

(assert (= bs!3117 d!16663))

(declare-fun m!70479 () Bool)

(assert (=> bs!3117 m!70479))

(assert (=> bs!3117 m!70479))

(declare-fun m!70481 () Bool)

(assert (=> bs!3117 m!70481))

(assert (=> b!71062 d!16663))

(declare-fun d!16665 () Bool)

(assert (=> d!16665 (contains!716 (+!91 lt!31412 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) lt!31413)))

(declare-fun lt!32256 () Unit!1989)

(assert (=> d!16665 (= lt!32256 (choose!410 lt!31412 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) lt!31413))))

(assert (=> d!16665 (contains!716 lt!31412 lt!31413)))

(assert (=> d!16665 (= (addStillContains!50 lt!31412 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) lt!31413) lt!32256)))

(declare-fun bs!3118 () Bool)

(assert (= bs!3118 d!16665))

(assert (=> bs!3118 m!67895))

(assert (=> bs!3118 m!67895))

(assert (=> bs!3118 m!67899))

(declare-fun m!70483 () Bool)

(assert (=> bs!3118 m!70483))

(declare-fun m!70485 () Bool)

(assert (=> bs!3118 m!70485))

(assert (=> b!71062 d!16665))

(declare-fun d!16667 () Bool)

(assert (=> d!16667 (= (apply!74 (+!91 lt!31431 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) lt!31416) (apply!74 lt!31431 lt!31416))))

(declare-fun lt!32257 () Unit!1989)

(assert (=> d!16667 (= lt!32257 (choose!411 lt!31431 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) lt!31416))))

(declare-fun e!47420 () Bool)

(assert (=> d!16667 e!47420))

(declare-fun res!38537 () Bool)

(assert (=> d!16667 (=> (not res!38537) (not e!47420))))

(assert (=> d!16667 (= res!38537 (contains!716 lt!31431 lt!31416))))

(assert (=> d!16667 (= (addApplyDifferent!50 lt!31431 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)) lt!31416) lt!32257)))

(declare-fun b!72509 () Bool)

(assert (=> b!72509 (= e!47420 (not (= lt!31416 lt!31420)))))

(assert (= (and d!16667 res!38537) b!72509))

(declare-fun m!70487 () Bool)

(assert (=> d!16667 m!70487))

(assert (=> d!16667 m!67891))

(declare-fun m!70489 () Bool)

(assert (=> d!16667 m!70489))

(assert (=> d!16667 m!67913))

(assert (=> d!16667 m!67917))

(assert (=> d!16667 m!67913))

(assert (=> b!71062 d!16667))

(declare-fun d!16669 () Bool)

(declare-fun e!47421 () Bool)

(assert (=> d!16669 e!47421))

(declare-fun res!38538 () Bool)

(assert (=> d!16669 (=> (not res!38538) (not e!47421))))

(declare-fun lt!32259 () ListLongMap!1397)

(assert (=> d!16669 (= res!38538 (contains!716 lt!32259 (_1!1067 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))))))

(declare-fun lt!32260 () List!1479)

(assert (=> d!16669 (= lt!32259 (ListLongMap!1398 lt!32260))))

(declare-fun lt!32258 () Unit!1989)

(declare-fun lt!32261 () Unit!1989)

(assert (=> d!16669 (= lt!32258 lt!32261)))

(assert (=> d!16669 (= (getValueByKey!130 lt!32260 (_1!1067 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))) (Some!135 (_2!1067 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16669 (= lt!32261 (lemmaContainsTupThenGetReturnValue!50 lt!32260 (_1!1067 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) (_2!1067 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16669 (= lt!32260 (insertStrictlySorted!53 (toList!714 lt!31427) (_1!1067 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) (_2!1067 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16669 (= (+!91 lt!31427 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) lt!32259)))

(declare-fun b!72510 () Bool)

(declare-fun res!38539 () Bool)

(assert (=> b!72510 (=> (not res!38539) (not e!47421))))

(assert (=> b!72510 (= res!38539 (= (getValueByKey!130 (toList!714 lt!32259) (_1!1067 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))) (Some!135 (_2!1067 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))))))))

(declare-fun b!72511 () Bool)

(assert (=> b!72511 (= e!47421 (contains!717 (toList!714 lt!32259) (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))))))

(assert (= (and d!16669 res!38538) b!72510))

(assert (= (and b!72510 res!38539) b!72511))

(declare-fun m!70491 () Bool)

(assert (=> d!16669 m!70491))

(declare-fun m!70493 () Bool)

(assert (=> d!16669 m!70493))

(declare-fun m!70495 () Bool)

(assert (=> d!16669 m!70495))

(declare-fun m!70497 () Bool)

(assert (=> d!16669 m!70497))

(declare-fun m!70499 () Bool)

(assert (=> b!72510 m!70499))

(declare-fun m!70501 () Bool)

(assert (=> b!72511 m!70501))

(assert (=> b!71062 d!16669))

(declare-fun d!16671 () Bool)

(declare-fun e!47422 () Bool)

(assert (=> d!16671 e!47422))

(declare-fun res!38540 () Bool)

(assert (=> d!16671 (=> (not res!38540) (not e!47422))))

(declare-fun lt!32263 () ListLongMap!1397)

(assert (=> d!16671 (= res!38540 (contains!716 lt!32263 (_1!1067 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(declare-fun lt!32264 () List!1479)

(assert (=> d!16671 (= lt!32263 (ListLongMap!1398 lt!32264))))

(declare-fun lt!32262 () Unit!1989)

(declare-fun lt!32265 () Unit!1989)

(assert (=> d!16671 (= lt!32262 lt!32265)))

(assert (=> d!16671 (= (getValueByKey!130 lt!32264 (_1!1067 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) (Some!135 (_2!1067 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(assert (=> d!16671 (= lt!32265 (lemmaContainsTupThenGetReturnValue!50 lt!32264 (_1!1067 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) (_2!1067 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(assert (=> d!16671 (= lt!32264 (insertStrictlySorted!53 (toList!714 lt!31431) (_1!1067 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) (_2!1067 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))))))

(assert (=> d!16671 (= (+!91 lt!31431 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) lt!32263)))

(declare-fun b!72512 () Bool)

(declare-fun res!38541 () Bool)

(assert (=> b!72512 (=> (not res!38541) (not e!47422))))

(assert (=> b!72512 (= res!38541 (= (getValueByKey!130 (toList!714 lt!32263) (_1!1067 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) (Some!135 (_2!1067 (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))))

(declare-fun b!72513 () Bool)

(assert (=> b!72513 (= e!47422 (contains!717 (toList!714 lt!32263) (tuple2!2113 lt!31420 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))))))

(assert (= (and d!16671 res!38540) b!72512))

(assert (= (and b!72512 res!38541) b!72513))

(declare-fun m!70503 () Bool)

(assert (=> d!16671 m!70503))

(declare-fun m!70505 () Bool)

(assert (=> d!16671 m!70505))

(declare-fun m!70507 () Bool)

(assert (=> d!16671 m!70507))

(declare-fun m!70509 () Bool)

(assert (=> d!16671 m!70509))

(declare-fun m!70511 () Bool)

(assert (=> b!72512 m!70511))

(declare-fun m!70513 () Bool)

(assert (=> b!72513 m!70513))

(assert (=> b!71062 d!16671))

(declare-fun d!16673 () Bool)

(assert (=> d!16673 (= (apply!74 (+!91 lt!31427 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) lt!31433) (apply!74 lt!31427 lt!31433))))

(declare-fun lt!32266 () Unit!1989)

(assert (=> d!16673 (= lt!32266 (choose!411 lt!31427 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) lt!31433))))

(declare-fun e!47423 () Bool)

(assert (=> d!16673 e!47423))

(declare-fun res!38542 () Bool)

(assert (=> d!16673 (=> (not res!38542) (not e!47423))))

(assert (=> d!16673 (= res!38542 (contains!716 lt!31427 lt!31433))))

(assert (=> d!16673 (= (addApplyDifferent!50 lt!31427 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)) lt!31433) lt!32266)))

(declare-fun b!72514 () Bool)

(assert (=> b!72514 (= e!47423 (not (= lt!31433 lt!31429)))))

(assert (= (and d!16673 res!38542) b!72514))

(declare-fun m!70515 () Bool)

(assert (=> d!16673 m!70515))

(assert (=> d!16673 m!67911))

(declare-fun m!70517 () Bool)

(assert (=> d!16673 m!70517))

(assert (=> d!16673 m!67905))

(assert (=> d!16673 m!67915))

(assert (=> d!16673 m!67905))

(assert (=> b!71062 d!16673))

(declare-fun d!16675 () Bool)

(assert (=> d!16675 (= (apply!74 (+!91 lt!31418 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16)))) lt!31424) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31418 (tuple2!2113 lt!31423 (ite c!10263 (ite c!10265 (minValue!2095 newMap!16) lt!31106) (minValue!2095 newMap!16))))) lt!31424)))))

(declare-fun bs!3119 () Bool)

(assert (= bs!3119 d!16675))

(declare-fun m!70519 () Bool)

(assert (=> bs!3119 m!70519))

(assert (=> bs!3119 m!70519))

(declare-fun m!70521 () Bool)

(assert (=> bs!3119 m!70521))

(assert (=> b!71062 d!16675))

(declare-fun d!16677 () Bool)

(declare-fun e!47424 () Bool)

(assert (=> d!16677 e!47424))

(declare-fun res!38543 () Bool)

(assert (=> d!16677 (=> (not res!38543) (not e!47424))))

(declare-fun lt!32268 () ListLongMap!1397)

(assert (=> d!16677 (= res!38543 (contains!716 lt!32268 (_1!1067 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))))))

(declare-fun lt!32269 () List!1479)

(assert (=> d!16677 (= lt!32268 (ListLongMap!1398 lt!32269))))

(declare-fun lt!32267 () Unit!1989)

(declare-fun lt!32270 () Unit!1989)

(assert (=> d!16677 (= lt!32267 lt!32270)))

(assert (=> d!16677 (= (getValueByKey!130 lt!32269 (_1!1067 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))) (Some!135 (_2!1067 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16677 (= lt!32270 (lemmaContainsTupThenGetReturnValue!50 lt!32269 (_1!1067 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) (_2!1067 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16677 (= lt!32269 (insertStrictlySorted!53 (toList!714 lt!31412) (_1!1067 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) (_2!1067 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))))))

(assert (=> d!16677 (= (+!91 lt!31412 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) lt!32268)))

(declare-fun b!72515 () Bool)

(declare-fun res!38544 () Bool)

(assert (=> b!72515 (=> (not res!38544) (not e!47424))))

(assert (=> b!72515 (= res!38544 (= (getValueByKey!130 (toList!714 lt!32268) (_1!1067 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))) (Some!135 (_2!1067 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))))))))

(declare-fun b!72516 () Bool)

(assert (=> b!72516 (= e!47424 (contains!717 (toList!714 lt!32268) (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))))))

(assert (= (and d!16677 res!38543) b!72515))

(assert (= (and b!72515 res!38544) b!72516))

(declare-fun m!70523 () Bool)

(assert (=> d!16677 m!70523))

(declare-fun m!70525 () Bool)

(assert (=> d!16677 m!70525))

(declare-fun m!70527 () Bool)

(assert (=> d!16677 m!70527))

(declare-fun m!70529 () Bool)

(assert (=> d!16677 m!70529))

(declare-fun m!70531 () Bool)

(assert (=> b!72515 m!70531))

(declare-fun m!70533 () Bool)

(assert (=> b!72516 m!70533))

(assert (=> b!71062 d!16677))

(declare-fun d!16679 () Bool)

(assert (=> d!16679 (= (apply!74 lt!31431 lt!31416) (get!1139 (getValueByKey!130 (toList!714 lt!31431) lt!31416)))))

(declare-fun bs!3120 () Bool)

(assert (= bs!3120 d!16679))

(declare-fun m!70535 () Bool)

(assert (=> bs!3120 m!70535))

(assert (=> bs!3120 m!70535))

(declare-fun m!70537 () Bool)

(assert (=> bs!3120 m!70537))

(assert (=> b!71062 d!16679))

(declare-fun d!16681 () Bool)

(assert (=> d!16681 (= (apply!74 (+!91 lt!31427 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) lt!31433) (get!1139 (getValueByKey!130 (toList!714 (+!91 lt!31427 (tuple2!2113 lt!31429 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))) lt!31433)))))

(declare-fun bs!3121 () Bool)

(assert (= bs!3121 d!16681))

(declare-fun m!70539 () Bool)

(assert (=> bs!3121 m!70539))

(assert (=> bs!3121 m!70539))

(declare-fun m!70541 () Bool)

(assert (=> bs!3121 m!70541))

(assert (=> b!71062 d!16681))

(assert (=> b!71062 d!16559))

(declare-fun d!16683 () Bool)

(declare-fun e!47426 () Bool)

(assert (=> d!16683 e!47426))

(declare-fun res!38545 () Bool)

(assert (=> d!16683 (=> res!38545 e!47426)))

(declare-fun lt!32273 () Bool)

(assert (=> d!16683 (= res!38545 (not lt!32273))))

(declare-fun lt!32271 () Bool)

(assert (=> d!16683 (= lt!32273 lt!32271)))

(declare-fun lt!32272 () Unit!1989)

(declare-fun e!47425 () Unit!1989)

(assert (=> d!16683 (= lt!32272 e!47425)))

(declare-fun c!10716 () Bool)

(assert (=> d!16683 (= c!10716 lt!32271)))

(assert (=> d!16683 (= lt!32271 (containsKey!134 (toList!714 (+!91 lt!31412 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))) lt!31413))))

(assert (=> d!16683 (= (contains!716 (+!91 lt!31412 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16)))) lt!31413) lt!32273)))

(declare-fun b!72517 () Bool)

(declare-fun lt!32274 () Unit!1989)

(assert (=> b!72517 (= e!47425 lt!32274)))

(assert (=> b!72517 (= lt!32274 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 (+!91 lt!31412 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))) lt!31413))))

(assert (=> b!72517 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31412 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))) lt!31413))))

(declare-fun b!72518 () Bool)

(declare-fun Unit!2060 () Unit!1989)

(assert (=> b!72518 (= e!47425 Unit!2060)))

(declare-fun b!72519 () Bool)

(assert (=> b!72519 (= e!47426 (isDefined!84 (getValueByKey!130 (toList!714 (+!91 lt!31412 (tuple2!2113 lt!31426 (ite (and c!10263 c!10265) lt!31106 (zeroValue!2095 newMap!16))))) lt!31413)))))

(assert (= (and d!16683 c!10716) b!72517))

(assert (= (and d!16683 (not c!10716)) b!72518))

(assert (= (and d!16683 (not res!38545)) b!72519))

(declare-fun m!70543 () Bool)

(assert (=> d!16683 m!70543))

(declare-fun m!70545 () Bool)

(assert (=> b!72517 m!70545))

(declare-fun m!70547 () Bool)

(assert (=> b!72517 m!70547))

(assert (=> b!72517 m!70547))

(declare-fun m!70549 () Bool)

(assert (=> b!72517 m!70549))

(assert (=> b!72519 m!70547))

(assert (=> b!72519 m!70547))

(assert (=> b!72519 m!70549))

(assert (=> b!71062 d!16683))

(declare-fun d!16685 () Bool)

(assert (=> d!16685 (= (apply!74 lt!31418 lt!31424) (get!1139 (getValueByKey!130 (toList!714 lt!31418) lt!31424)))))

(declare-fun bs!3122 () Bool)

(assert (= bs!3122 d!16685))

(declare-fun m!70551 () Bool)

(assert (=> bs!3122 m!70551))

(assert (=> bs!3122 m!70551))

(declare-fun m!70553 () Bool)

(assert (=> bs!3122 m!70553))

(assert (=> b!71062 d!16685))

(assert (=> b!71378 d!16241))

(declare-fun d!16687 () Bool)

(declare-fun e!47428 () Bool)

(assert (=> d!16687 e!47428))

(declare-fun res!38546 () Bool)

(assert (=> d!16687 (=> res!38546 e!47428)))

(declare-fun lt!32277 () Bool)

(assert (=> d!16687 (= res!38546 (not lt!32277))))

(declare-fun lt!32275 () Bool)

(assert (=> d!16687 (= lt!32277 lt!32275)))

(declare-fun lt!32276 () Unit!1989)

(declare-fun e!47427 () Unit!1989)

(assert (=> d!16687 (= lt!32276 e!47427)))

(declare-fun c!10717 () Bool)

(assert (=> d!16687 (= c!10717 lt!32275)))

(assert (=> d!16687 (= lt!32275 (containsKey!134 (toList!714 lt!31452) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16687 (= (contains!716 lt!31452 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32277)))

(declare-fun b!72520 () Bool)

(declare-fun lt!32278 () Unit!1989)

(assert (=> b!72520 (= e!47427 lt!32278)))

(assert (=> b!72520 (= lt!32278 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31452) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72520 (isDefined!84 (getValueByKey!130 (toList!714 lt!31452) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72521 () Bool)

(declare-fun Unit!2061 () Unit!1989)

(assert (=> b!72521 (= e!47427 Unit!2061)))

(declare-fun b!72522 () Bool)

(assert (=> b!72522 (= e!47428 (isDefined!84 (getValueByKey!130 (toList!714 lt!31452) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16687 c!10717) b!72520))

(assert (= (and d!16687 (not c!10717)) b!72521))

(assert (= (and d!16687 (not res!38546)) b!72522))

(declare-fun m!70555 () Bool)

(assert (=> d!16687 m!70555))

(declare-fun m!70557 () Bool)

(assert (=> b!72520 m!70557))

(declare-fun m!70559 () Bool)

(assert (=> b!72520 m!70559))

(assert (=> b!72520 m!70559))

(declare-fun m!70561 () Bool)

(assert (=> b!72520 m!70561))

(assert (=> b!72522 m!70559))

(assert (=> b!72522 m!70559))

(assert (=> b!72522 m!70561))

(assert (=> b!71087 d!16687))

(assert (=> b!71268 d!16503))

(assert (=> b!71268 d!15839))

(declare-fun d!16689 () Bool)

(declare-fun lt!32279 () Bool)

(assert (=> d!16689 (= lt!32279 (select (content!76 lt!31355) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun e!47429 () Bool)

(assert (=> d!16689 (= lt!32279 e!47429)))

(declare-fun res!38548 () Bool)

(assert (=> d!16689 (=> (not res!38548) (not e!47429))))

(assert (=> d!16689 (= res!38548 ((_ is Cons!1475) lt!31355))))

(assert (=> d!16689 (= (contains!717 lt!31355 (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))) lt!32279)))

(declare-fun b!72523 () Bool)

(declare-fun e!47430 () Bool)

(assert (=> b!72523 (= e!47429 e!47430)))

(declare-fun res!38547 () Bool)

(assert (=> b!72523 (=> res!38547 e!47430)))

(assert (=> b!72523 (= res!38547 (= (h!2061 lt!31355) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(declare-fun b!72524 () Bool)

(assert (=> b!72524 (= e!47430 (contains!717 (t!5006 lt!31355) (tuple2!2113 (_1!1067 lt!31103) (_2!1067 lt!31103))))))

(assert (= (and d!16689 res!38548) b!72523))

(assert (= (and b!72523 (not res!38547)) b!72524))

(declare-fun m!70563 () Bool)

(assert (=> d!16689 m!70563))

(declare-fun m!70565 () Bool)

(assert (=> d!16689 m!70565))

(declare-fun m!70567 () Bool)

(assert (=> b!72524 m!70567))

(assert (=> b!71326 d!16689))

(assert (=> d!15791 d!15787))

(assert (=> d!15791 d!15783))

(assert (=> d!15791 d!15789))

(assert (=> d!15791 d!15785))

(declare-fun d!16691 () Bool)

(declare-fun lt!32280 () Bool)

(assert (=> d!16691 (= lt!32280 (select (content!76 (toList!714 lt!31601)) (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun e!47431 () Bool)

(assert (=> d!16691 (= lt!32280 e!47431)))

(declare-fun res!38550 () Bool)

(assert (=> d!16691 (=> (not res!38550) (not e!47431))))

(assert (=> d!16691 (= res!38550 ((_ is Cons!1475) (toList!714 lt!31601)))))

(assert (=> d!16691 (= (contains!717 (toList!714 lt!31601) (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))) lt!32280)))

(declare-fun b!72525 () Bool)

(declare-fun e!47432 () Bool)

(assert (=> b!72525 (= e!47431 e!47432)))

(declare-fun res!38549 () Bool)

(assert (=> b!72525 (=> res!38549 e!47432)))

(assert (=> b!72525 (= res!38549 (= (h!2061 (toList!714 lt!31601)) (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(declare-fun b!72526 () Bool)

(assert (=> b!72526 (= e!47432 (contains!717 (t!5006 (toList!714 lt!31601)) (tuple2!2113 lt!31238 (minValue!2095 (v!2507 (underlying!253 thiss!992))))))))

(assert (= (and d!16691 res!38550) b!72525))

(assert (= (and b!72525 (not res!38549)) b!72526))

(declare-fun m!70569 () Bool)

(assert (=> d!16691 m!70569))

(declare-fun m!70571 () Bool)

(assert (=> d!16691 m!70571))

(declare-fun m!70573 () Bool)

(assert (=> b!72526 m!70573))

(assert (=> b!71264 d!16691))

(declare-fun d!16693 () Bool)

(declare-fun lt!32281 () Bool)

(assert (=> d!16693 (= lt!32281 (select (content!76 lt!31359) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun e!47433 () Bool)

(assert (=> d!16693 (= lt!32281 e!47433)))

(declare-fun res!38552 () Bool)

(assert (=> d!16693 (=> (not res!38552) (not e!47433))))

(assert (=> d!16693 (= res!38552 ((_ is Cons!1475) lt!31359))))

(assert (=> d!16693 (= (contains!717 lt!31359 (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))) lt!32281)))

(declare-fun b!72527 () Bool)

(declare-fun e!47434 () Bool)

(assert (=> b!72527 (= e!47433 e!47434)))

(declare-fun res!38551 () Bool)

(assert (=> b!72527 (=> res!38551 e!47434)))

(assert (=> b!72527 (= res!38551 (= (h!2061 lt!31359) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(declare-fun b!72528 () Bool)

(assert (=> b!72528 (= e!47434 (contains!717 (t!5006 lt!31359) (tuple2!2113 (_1!1067 lt!31109) (_2!1067 lt!31109))))))

(assert (= (and d!16693 res!38552) b!72527))

(assert (= (and b!72527 (not res!38551)) b!72528))

(declare-fun m!70575 () Bool)

(assert (=> d!16693 m!70575))

(declare-fun m!70577 () Bool)

(assert (=> d!16693 m!70577))

(declare-fun m!70579 () Bool)

(assert (=> b!72528 m!70579))

(assert (=> b!71110 d!16693))

(declare-fun b!72529 () Bool)

(declare-fun e!47435 () Option!136)

(assert (=> b!72529 (= e!47435 (Some!135 (_2!1067 (h!2061 (toList!714 lt!31435)))))))

(declare-fun d!16695 () Bool)

(declare-fun c!10718 () Bool)

(assert (=> d!16695 (= c!10718 (and ((_ is Cons!1475) (toList!714 lt!31435)) (= (_1!1067 (h!2061 (toList!714 lt!31435))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!16695 (= (getValueByKey!130 (toList!714 lt!31435) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) e!47435)))

(declare-fun b!72530 () Bool)

(declare-fun e!47436 () Option!136)

(assert (=> b!72530 (= e!47435 e!47436)))

(declare-fun c!10719 () Bool)

(assert (=> b!72530 (= c!10719 (and ((_ is Cons!1475) (toList!714 lt!31435)) (not (= (_1!1067 (h!2061 (toList!714 lt!31435))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun b!72532 () Bool)

(assert (=> b!72532 (= e!47436 None!134)))

(declare-fun b!72531 () Bool)

(assert (=> b!72531 (= e!47436 (getValueByKey!130 (t!5006 (toList!714 lt!31435)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (= (and d!16695 c!10718) b!72529))

(assert (= (and d!16695 (not c!10718)) b!72530))

(assert (= (and b!72530 c!10719) b!72531))

(assert (= (and b!72530 (not c!10719)) b!72532))

(declare-fun m!70581 () Bool)

(assert (=> b!72531 m!70581))

(assert (=> b!71074 d!16695))

(declare-fun d!16697 () Bool)

(declare-fun e!47438 () Bool)

(assert (=> d!16697 e!47438))

(declare-fun res!38553 () Bool)

(assert (=> d!16697 (=> res!38553 e!47438)))

(declare-fun lt!32284 () Bool)

(assert (=> d!16697 (= res!38553 (not lt!32284))))

(declare-fun lt!32282 () Bool)

(assert (=> d!16697 (= lt!32284 lt!32282)))

(declare-fun lt!32283 () Unit!1989)

(declare-fun e!47437 () Unit!1989)

(assert (=> d!16697 (= lt!32283 e!47437)))

(declare-fun c!10720 () Bool)

(assert (=> d!16697 (= c!10720 lt!32282)))

(assert (=> d!16697 (= lt!32282 (containsKey!134 (toList!714 lt!31535) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16697 (= (contains!716 lt!31535 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32284)))

(declare-fun b!72533 () Bool)

(declare-fun lt!32285 () Unit!1989)

(assert (=> b!72533 (= e!47437 lt!32285)))

(assert (=> b!72533 (= lt!32285 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31535) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72533 (isDefined!84 (getValueByKey!130 (toList!714 lt!31535) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72534 () Bool)

(declare-fun Unit!2062 () Unit!1989)

(assert (=> b!72534 (= e!47437 Unit!2062)))

(declare-fun b!72535 () Bool)

(assert (=> b!72535 (= e!47438 (isDefined!84 (getValueByKey!130 (toList!714 lt!31535) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16697 c!10720) b!72533))

(assert (= (and d!16697 (not c!10720)) b!72534))

(assert (= (and d!16697 (not res!38553)) b!72535))

(declare-fun m!70583 () Bool)

(assert (=> d!16697 m!70583))

(declare-fun m!70585 () Bool)

(assert (=> b!72533 m!70585))

(assert (=> b!72533 m!68935))

(assert (=> b!72533 m!68935))

(declare-fun m!70587 () Bool)

(assert (=> b!72533 m!70587))

(assert (=> b!72535 m!68935))

(assert (=> b!72535 m!68935))

(assert (=> b!72535 m!70587))

(assert (=> bm!6167 d!16697))

(declare-fun d!16699 () Bool)

(assert (=> d!16699 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31323 lt!31106 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16699 true))

(declare-fun _$7!59 () Unit!1989)

(assert (=> d!16699 (= (choose!414 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) lt!31323 (zeroValue!2095 newMap!16) lt!31106 (minValue!2095 newMap!16) (defaultEntry!2191 newMap!16)) _$7!59)))

(declare-fun bs!3123 () Bool)

(assert (= bs!3123 d!16699))

(assert (=> bs!3123 m!67607))

(assert (=> bs!3123 m!67607))

(assert (=> bs!3123 m!68599))

(assert (=> bs!3123 m!68601))

(assert (=> d!15947 d!16699))

(declare-fun bm!6308 () Bool)

(declare-fun call!6317 () Bool)

(declare-fun lt!32304 () ListLongMap!1397)

(assert (=> bm!6308 (= call!6317 (contains!716 lt!32304 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72536 () Bool)

(declare-fun e!47439 () Bool)

(assert (=> b!72536 (= e!47439 (= (apply!74 lt!32304 #b0000000000000000000000000000000000000000000000000000000000000000) lt!31106))))

(declare-fun b!72537 () Bool)

(declare-fun e!47445 () ListLongMap!1397)

(declare-fun call!6313 () ListLongMap!1397)

(assert (=> b!72537 (= e!47445 call!6313)))

(declare-fun call!6311 () ListLongMap!1397)

(declare-fun bm!6309 () Bool)

(assert (=> bm!6309 (= call!6311 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31323 lt!31106 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!72538 () Bool)

(declare-fun e!47449 () Unit!1989)

(declare-fun Unit!2063 () Unit!1989)

(assert (=> b!72538 (= e!47449 Unit!2063)))

(declare-fun b!72539 () Bool)

(declare-fun e!47450 () Bool)

(declare-fun e!47444 () Bool)

(assert (=> b!72539 (= e!47450 e!47444)))

(declare-fun res!38560 () Bool)

(assert (=> b!72539 (=> (not res!38560) (not e!47444))))

(assert (=> b!72539 (= res!38560 (contains!716 lt!32304 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72539 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!72540 () Bool)

(declare-fun c!10722 () Bool)

(assert (=> b!72540 (= c!10722 (and (not (= (bvand lt!31323 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!31323 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47440 () ListLongMap!1397)

(assert (=> b!72540 (= e!47440 e!47445)))

(declare-fun c!10725 () Bool)

(declare-fun bm!6310 () Bool)

(declare-fun call!6315 () ListLongMap!1397)

(declare-fun call!6316 () ListLongMap!1397)

(declare-fun call!6312 () ListLongMap!1397)

(declare-fun c!10723 () Bool)

(assert (=> bm!6310 (= call!6315 (+!91 (ite c!10725 call!6311 (ite c!10723 call!6316 call!6312)) (ite (or c!10725 c!10723) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16)))))))

(declare-fun bm!6311 () Bool)

(declare-fun call!6314 () Bool)

(assert (=> bm!6311 (= call!6314 (contains!716 lt!32304 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72541 () Bool)

(declare-fun e!47443 () Bool)

(assert (=> b!72541 (= e!47443 (not call!6314))))

(declare-fun b!72542 () Bool)

(assert (=> b!72542 (= e!47444 (= (apply!74 lt!32304 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72542 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (_values!2174 newMap!16))))))

(assert (=> b!72542 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!72543 () Bool)

(declare-fun e!47451 () Bool)

(assert (=> b!72543 (= e!47451 (not call!6317))))

(declare-fun b!72544 () Bool)

(declare-fun e!47446 () ListLongMap!1397)

(assert (=> b!72544 (= e!47446 e!47440)))

(assert (=> b!72544 (= c!10723 (and (not (= (bvand lt!31323 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!31323 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72545 () Bool)

(assert (=> b!72545 (= e!47445 call!6312)))

(declare-fun bm!6312 () Bool)

(assert (=> bm!6312 (= call!6313 call!6315)))

(declare-fun b!72546 () Bool)

(declare-fun e!47441 () Bool)

(assert (=> b!72546 (= e!47441 e!47451)))

(declare-fun c!10726 () Bool)

(assert (=> b!72546 (= c!10726 (not (= (bvand lt!31323 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6313 () Bool)

(assert (=> bm!6313 (= call!6316 call!6311)))

(declare-fun b!72547 () Bool)

(assert (=> b!72547 (= e!47440 call!6313)))

(declare-fun b!72548 () Bool)

(declare-fun res!38556 () Bool)

(assert (=> b!72548 (=> (not res!38556) (not e!47441))))

(assert (=> b!72548 (= res!38556 e!47450)))

(declare-fun res!38555 () Bool)

(assert (=> b!72548 (=> res!38555 e!47450)))

(declare-fun e!47448 () Bool)

(assert (=> b!72548 (= res!38555 (not e!47448))))

(declare-fun res!38557 () Bool)

(assert (=> b!72548 (=> (not res!38557) (not e!47448))))

(assert (=> b!72548 (= res!38557 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!72549 () Bool)

(assert (=> b!72549 (= e!47448 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72550 () Bool)

(declare-fun res!38561 () Bool)

(assert (=> b!72550 (=> (not res!38561) (not e!47441))))

(assert (=> b!72550 (= res!38561 e!47443)))

(declare-fun c!10724 () Bool)

(assert (=> b!72550 (= c!10724 (not (= (bvand lt!31323 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!72551 () Bool)

(declare-fun lt!32302 () Unit!1989)

(assert (=> b!72551 (= e!47449 lt!32302)))

(declare-fun lt!32286 () ListLongMap!1397)

(assert (=> b!72551 (= lt!32286 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31323 lt!31106 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32300 () (_ BitVec 64))

(assert (=> b!72551 (= lt!32300 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32287 () (_ BitVec 64))

(assert (=> b!72551 (= lt!32287 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32288 () Unit!1989)

(assert (=> b!72551 (= lt!32288 (addStillContains!50 lt!32286 lt!32300 lt!31106 lt!32287))))

(assert (=> b!72551 (contains!716 (+!91 lt!32286 (tuple2!2113 lt!32300 lt!31106)) lt!32287)))

(declare-fun lt!32299 () Unit!1989)

(assert (=> b!72551 (= lt!32299 lt!32288)))

(declare-fun lt!32292 () ListLongMap!1397)

(assert (=> b!72551 (= lt!32292 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31323 lt!31106 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32297 () (_ BitVec 64))

(assert (=> b!72551 (= lt!32297 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32298 () (_ BitVec 64))

(assert (=> b!72551 (= lt!32298 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32295 () Unit!1989)

(assert (=> b!72551 (= lt!32295 (addApplyDifferent!50 lt!32292 lt!32297 (minValue!2095 newMap!16) lt!32298))))

(assert (=> b!72551 (= (apply!74 (+!91 lt!32292 (tuple2!2113 lt!32297 (minValue!2095 newMap!16))) lt!32298) (apply!74 lt!32292 lt!32298))))

(declare-fun lt!32289 () Unit!1989)

(assert (=> b!72551 (= lt!32289 lt!32295)))

(declare-fun lt!32301 () ListLongMap!1397)

(assert (=> b!72551 (= lt!32301 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31323 lt!31106 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32303 () (_ BitVec 64))

(assert (=> b!72551 (= lt!32303 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32307 () (_ BitVec 64))

(assert (=> b!72551 (= lt!32307 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32296 () Unit!1989)

(assert (=> b!72551 (= lt!32296 (addApplyDifferent!50 lt!32301 lt!32303 lt!31106 lt!32307))))

(assert (=> b!72551 (= (apply!74 (+!91 lt!32301 (tuple2!2113 lt!32303 lt!31106)) lt!32307) (apply!74 lt!32301 lt!32307))))

(declare-fun lt!32306 () Unit!1989)

(assert (=> b!72551 (= lt!32306 lt!32296)))

(declare-fun lt!32305 () ListLongMap!1397)

(assert (=> b!72551 (= lt!32305 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31323 lt!31106 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32294 () (_ BitVec 64))

(assert (=> b!72551 (= lt!32294 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32290 () (_ BitVec 64))

(assert (=> b!72551 (= lt!32290 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72551 (= lt!32302 (addApplyDifferent!50 lt!32305 lt!32294 (minValue!2095 newMap!16) lt!32290))))

(assert (=> b!72551 (= (apply!74 (+!91 lt!32305 (tuple2!2113 lt!32294 (minValue!2095 newMap!16))) lt!32290) (apply!74 lt!32305 lt!32290))))

(declare-fun b!72552 () Bool)

(declare-fun e!47447 () Bool)

(assert (=> b!72552 (= e!47451 e!47447)))

(declare-fun res!38554 () Bool)

(assert (=> b!72552 (= res!38554 call!6317)))

(assert (=> b!72552 (=> (not res!38554) (not e!47447))))

(declare-fun b!72553 () Bool)

(assert (=> b!72553 (= e!47443 e!47439)))

(declare-fun res!38562 () Bool)

(assert (=> b!72553 (= res!38562 call!6314)))

(assert (=> b!72553 (=> (not res!38562) (not e!47439))))

(declare-fun d!16701 () Bool)

(assert (=> d!16701 e!47441))

(declare-fun res!38558 () Bool)

(assert (=> d!16701 (=> (not res!38558) (not e!47441))))

(assert (=> d!16701 (= res!38558 (or (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))))

(declare-fun lt!32293 () ListLongMap!1397)

(assert (=> d!16701 (= lt!32304 lt!32293)))

(declare-fun lt!32291 () Unit!1989)

(assert (=> d!16701 (= lt!32291 e!47449)))

(declare-fun c!10721 () Bool)

(declare-fun e!47442 () Bool)

(assert (=> d!16701 (= c!10721 e!47442)))

(declare-fun res!38559 () Bool)

(assert (=> d!16701 (=> (not res!38559) (not e!47442))))

(assert (=> d!16701 (= res!38559 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16701 (= lt!32293 e!47446)))

(assert (=> d!16701 (= c!10725 (and (not (= (bvand lt!31323 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!31323 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16701 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16701 (= (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31323 lt!31106 (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32304)))

(declare-fun b!72554 () Bool)

(assert (=> b!72554 (= e!47447 (= (apply!74 lt!32304 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2095 newMap!16)))))

(declare-fun b!72555 () Bool)

(assert (=> b!72555 (= e!47442 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72556 () Bool)

(assert (=> b!72556 (= e!47446 (+!91 call!6315 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 newMap!16))))))

(declare-fun bm!6314 () Bool)

(assert (=> bm!6314 (= call!6312 call!6316)))

(assert (= (and d!16701 c!10725) b!72556))

(assert (= (and d!16701 (not c!10725)) b!72544))

(assert (= (and b!72544 c!10723) b!72547))

(assert (= (and b!72544 (not c!10723)) b!72540))

(assert (= (and b!72540 c!10722) b!72537))

(assert (= (and b!72540 (not c!10722)) b!72545))

(assert (= (or b!72537 b!72545) bm!6314))

(assert (= (or b!72547 bm!6314) bm!6313))

(assert (= (or b!72547 b!72537) bm!6312))

(assert (= (or b!72556 bm!6313) bm!6309))

(assert (= (or b!72556 bm!6312) bm!6310))

(assert (= (and d!16701 res!38559) b!72555))

(assert (= (and d!16701 c!10721) b!72551))

(assert (= (and d!16701 (not c!10721)) b!72538))

(assert (= (and d!16701 res!38558) b!72548))

(assert (= (and b!72548 res!38557) b!72549))

(assert (= (and b!72548 (not res!38555)) b!72539))

(assert (= (and b!72539 res!38560) b!72542))

(assert (= (and b!72548 res!38556) b!72550))

(assert (= (and b!72550 c!10724) b!72553))

(assert (= (and b!72550 (not c!10724)) b!72541))

(assert (= (and b!72553 res!38562) b!72536))

(assert (= (or b!72553 b!72541) bm!6311))

(assert (= (and b!72550 res!38561) b!72546))

(assert (= (and b!72546 c!10726) b!72552))

(assert (= (and b!72546 (not c!10726)) b!72543))

(assert (= (and b!72552 res!38554) b!72554))

(assert (= (or b!72552 b!72543) bm!6308))

(declare-fun b_lambda!3227 () Bool)

(assert (=> (not b_lambda!3227) (not b!72542)))

(assert (=> b!72542 t!5019))

(declare-fun b_and!4441 () Bool)

(assert (= b_and!4437 (and (=> t!5019 result!2661) b_and!4441)))

(assert (=> b!72542 t!5021))

(declare-fun b_and!4443 () Bool)

(assert (= b_and!4439 (and (=> t!5021 result!2663) b_and!4443)))

(declare-fun m!70589 () Bool)

(assert (=> b!72556 m!70589))

(assert (=> b!72555 m!67861))

(assert (=> b!72555 m!67861))

(assert (=> b!72555 m!67863))

(assert (=> b!72542 m!67865))

(assert (=> b!72542 m!67861))

(assert (=> b!72542 m!68053))

(assert (=> b!72542 m!67865))

(assert (=> b!72542 m!68055))

(assert (=> b!72542 m!67861))

(declare-fun m!70591 () Bool)

(assert (=> b!72542 m!70591))

(assert (=> b!72542 m!68053))

(assert (=> b!72549 m!67861))

(assert (=> b!72549 m!67861))

(assert (=> b!72549 m!67863))

(assert (=> d!16701 m!67873))

(assert (=> b!72539 m!67861))

(assert (=> b!72539 m!67861))

(declare-fun m!70593 () Bool)

(assert (=> b!72539 m!70593))

(declare-fun m!70595 () Bool)

(assert (=> b!72536 m!70595))

(declare-fun m!70597 () Bool)

(assert (=> bm!6311 m!70597))

(declare-fun m!70599 () Bool)

(assert (=> bm!6310 m!70599))

(declare-fun m!70601 () Bool)

(assert (=> bm!6309 m!70601))

(declare-fun m!70603 () Bool)

(assert (=> bm!6308 m!70603))

(declare-fun m!70605 () Bool)

(assert (=> b!72554 m!70605))

(declare-fun m!70607 () Bool)

(assert (=> b!72551 m!70607))

(declare-fun m!70609 () Bool)

(assert (=> b!72551 m!70609))

(declare-fun m!70611 () Bool)

(assert (=> b!72551 m!70611))

(assert (=> b!72551 m!70601))

(assert (=> b!72551 m!67861))

(declare-fun m!70613 () Bool)

(assert (=> b!72551 m!70613))

(declare-fun m!70615 () Bool)

(assert (=> b!72551 m!70615))

(assert (=> b!72551 m!70613))

(declare-fun m!70617 () Bool)

(assert (=> b!72551 m!70617))

(declare-fun m!70619 () Bool)

(assert (=> b!72551 m!70619))

(assert (=> b!72551 m!70615))

(declare-fun m!70621 () Bool)

(assert (=> b!72551 m!70621))

(declare-fun m!70623 () Bool)

(assert (=> b!72551 m!70623))

(declare-fun m!70625 () Bool)

(assert (=> b!72551 m!70625))

(declare-fun m!70627 () Bool)

(assert (=> b!72551 m!70627))

(declare-fun m!70629 () Bool)

(assert (=> b!72551 m!70629))

(declare-fun m!70631 () Bool)

(assert (=> b!72551 m!70631))

(assert (=> b!72551 m!70623))

(declare-fun m!70633 () Bool)

(assert (=> b!72551 m!70633))

(assert (=> b!72551 m!70631))

(declare-fun m!70635 () Bool)

(assert (=> b!72551 m!70635))

(assert (=> d!15947 d!16701))

(assert (=> d!15947 d!15819))

(assert (=> d!15947 d!16053))

(declare-fun d!16703 () Bool)

(declare-fun e!47452 () Bool)

(assert (=> d!16703 e!47452))

(declare-fun res!38563 () Bool)

(assert (=> d!16703 (=> (not res!38563) (not e!47452))))

(declare-fun lt!32309 () ListLongMap!1397)

(assert (=> d!16703 (= res!38563 (contains!716 lt!32309 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106))))))

(declare-fun lt!32310 () List!1479)

(assert (=> d!16703 (= lt!32309 (ListLongMap!1398 lt!32310))))

(declare-fun lt!32308 () Unit!1989)

(declare-fun lt!32311 () Unit!1989)

(assert (=> d!16703 (= lt!32308 lt!32311)))

(assert (=> d!16703 (= (getValueByKey!130 lt!32310 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106))) (Some!135 (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106))))))

(assert (=> d!16703 (= lt!32311 (lemmaContainsTupThenGetReturnValue!50 lt!32310 (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106))))))

(assert (=> d!16703 (= lt!32310 (insertStrictlySorted!53 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106))))))

(assert (=> d!16703 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106)) lt!32309)))

(declare-fun b!72557 () Bool)

(declare-fun res!38564 () Bool)

(assert (=> b!72557 (=> (not res!38564) (not e!47452))))

(assert (=> b!72557 (= res!38564 (= (getValueByKey!130 (toList!714 lt!32309) (_1!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106))) (Some!135 (_2!1067 (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106)))))))

(declare-fun b!72558 () Bool)

(assert (=> b!72558 (= e!47452 (contains!717 (toList!714 lt!32309) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 lt!31106)))))

(assert (= (and d!16703 res!38563) b!72557))

(assert (= (and b!72557 res!38564) b!72558))

(declare-fun m!70637 () Bool)

(assert (=> d!16703 m!70637))

(declare-fun m!70639 () Bool)

(assert (=> d!16703 m!70639))

(declare-fun m!70641 () Bool)

(assert (=> d!16703 m!70641))

(declare-fun m!70643 () Bool)

(assert (=> d!16703 m!70643))

(declare-fun m!70645 () Bool)

(assert (=> b!72557 m!70645))

(declare-fun m!70647 () Bool)

(assert (=> b!72558 m!70647))

(assert (=> d!15947 d!16703))

(declare-fun b!72559 () Bool)

(declare-fun e!47453 () Option!136)

(assert (=> b!72559 (= e!47453 (Some!135 (_2!1067 (h!2061 (t!5006 (toList!714 lt!31108))))))))

(declare-fun d!16705 () Bool)

(declare-fun c!10727 () Bool)

(assert (=> d!16705 (= c!10727 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31108))) (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31108)))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!16705 (= (getValueByKey!130 (t!5006 (toList!714 lt!31108)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) e!47453)))

(declare-fun b!72560 () Bool)

(declare-fun e!47454 () Option!136)

(assert (=> b!72560 (= e!47453 e!47454)))

(declare-fun c!10728 () Bool)

(assert (=> b!72560 (= c!10728 (and ((_ is Cons!1475) (t!5006 (toList!714 lt!31108))) (not (= (_1!1067 (h!2061 (t!5006 (toList!714 lt!31108)))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))))

(declare-fun b!72562 () Bool)

(assert (=> b!72562 (= e!47454 None!134)))

(declare-fun b!72561 () Bool)

(assert (=> b!72561 (= e!47454 (getValueByKey!130 (t!5006 (t!5006 (toList!714 lt!31108))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!16705 c!10727) b!72559))

(assert (= (and d!16705 (not c!10727)) b!72560))

(assert (= (and b!72560 c!10728) b!72561))

(assert (= (and b!72560 (not c!10728)) b!72562))

(assert (=> b!72561 m!67435))

(declare-fun m!70649 () Bool)

(assert (=> b!72561 m!70649))

(assert (=> b!71070 d!16705))

(declare-fun d!16707 () Bool)

(declare-fun lt!32312 () Bool)

(assert (=> d!16707 (= lt!32312 (select (content!76 (toList!714 lt!31555)) (tuple2!2113 lt!31387 lt!31386)))))

(declare-fun e!47455 () Bool)

(assert (=> d!16707 (= lt!32312 e!47455)))

(declare-fun res!38566 () Bool)

(assert (=> d!16707 (=> (not res!38566) (not e!47455))))

(assert (=> d!16707 (= res!38566 ((_ is Cons!1475) (toList!714 lt!31555)))))

(assert (=> d!16707 (= (contains!717 (toList!714 lt!31555) (tuple2!2113 lt!31387 lt!31386)) lt!32312)))

(declare-fun b!72563 () Bool)

(declare-fun e!47456 () Bool)

(assert (=> b!72563 (= e!47455 e!47456)))

(declare-fun res!38565 () Bool)

(assert (=> b!72563 (=> res!38565 e!47456)))

(assert (=> b!72563 (= res!38565 (= (h!2061 (toList!714 lt!31555)) (tuple2!2113 lt!31387 lt!31386)))))

(declare-fun b!72564 () Bool)

(assert (=> b!72564 (= e!47456 (contains!717 (t!5006 (toList!714 lt!31555)) (tuple2!2113 lt!31387 lt!31386)))))

(assert (= (and d!16707 res!38566) b!72563))

(assert (= (and b!72563 (not res!38565)) b!72564))

(declare-fun m!70651 () Bool)

(assert (=> d!16707 m!70651))

(declare-fun m!70653 () Bool)

(assert (=> d!16707 m!70653))

(declare-fun m!70655 () Bool)

(assert (=> b!72564 m!70655))

(assert (=> b!71230 d!16707))

(declare-fun lt!32313 () Bool)

(declare-fun d!16709 () Bool)

(assert (=> d!16709 (= lt!32313 (select (content!76 (toList!714 lt!31643)) (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun e!47457 () Bool)

(assert (=> d!16709 (= lt!32313 e!47457)))

(declare-fun res!38568 () Bool)

(assert (=> d!16709 (=> (not res!38568) (not e!47457))))

(assert (=> d!16709 (= res!38568 ((_ is Cons!1475) (toList!714 lt!31643)))))

(assert (=> d!16709 (= (contains!717 (toList!714 lt!31643) (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))) lt!32313)))

(declare-fun b!72565 () Bool)

(declare-fun e!47458 () Bool)

(assert (=> b!72565 (= e!47457 e!47458)))

(declare-fun res!38567 () Bool)

(assert (=> b!72565 (=> res!38567 e!47458)))

(assert (=> b!72565 (= res!38567 (= (h!2061 (toList!714 lt!31643)) (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(declare-fun b!72566 () Bool)

(assert (=> b!72566 (= e!47458 (contains!717 (t!5006 (toList!714 lt!31643)) (ite (or c!10220 c!10218) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 (v!2507 (underlying!253 thiss!992)))) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2095 (v!2507 (underlying!253 thiss!992)))))))))

(assert (= (and d!16709 res!38568) b!72565))

(assert (= (and b!72565 (not res!38567)) b!72566))

(declare-fun m!70657 () Bool)

(assert (=> d!16709 m!70657))

(declare-fun m!70659 () Bool)

(assert (=> d!16709 m!70659))

(declare-fun m!70661 () Bool)

(assert (=> b!72566 m!70661))

(assert (=> b!71338 d!16709))

(assert (=> d!15769 d!15767))

(declare-fun d!16711 () Bool)

(assert (=> d!16711 (= (getValueByKey!130 lt!31366 (_1!1067 lt!31109)) (Some!135 (_2!1067 lt!31109)))))

(assert (=> d!16711 true))

(declare-fun _$22!382 () Unit!1989)

(assert (=> d!16711 (= (choose!404 lt!31366 (_1!1067 lt!31109) (_2!1067 lt!31109)) _$22!382)))

(declare-fun bs!3124 () Bool)

(assert (= bs!3124 d!16711))

(assert (=> bs!3124 m!67761))

(assert (=> d!15769 d!16711))

(declare-fun d!16713 () Bool)

(declare-fun res!38569 () Bool)

(declare-fun e!47459 () Bool)

(assert (=> d!16713 (=> res!38569 e!47459)))

(assert (=> d!16713 (= res!38569 (or ((_ is Nil!1476) lt!31366) ((_ is Nil!1476) (t!5006 lt!31366))))))

(assert (=> d!16713 (= (isStrictlySorted!286 lt!31366) e!47459)))

(declare-fun b!72567 () Bool)

(declare-fun e!47460 () Bool)

(assert (=> b!72567 (= e!47459 e!47460)))

(declare-fun res!38570 () Bool)

(assert (=> b!72567 (=> (not res!38570) (not e!47460))))

(assert (=> b!72567 (= res!38570 (bvslt (_1!1067 (h!2061 lt!31366)) (_1!1067 (h!2061 (t!5006 lt!31366)))))))

(declare-fun b!72568 () Bool)

(assert (=> b!72568 (= e!47460 (isStrictlySorted!286 (t!5006 lt!31366)))))

(assert (= (and d!16713 (not res!38569)) b!72567))

(assert (= (and b!72567 res!38570) b!72568))

(declare-fun m!70663 () Bool)

(assert (=> b!72568 m!70663))

(assert (=> d!15769 d!16713))

(declare-fun d!16715 () Bool)

(assert (=> d!16715 (isDefined!84 (getValueByKey!130 (toList!714 lt!31365) (_1!1067 lt!31109)))))

(declare-fun lt!32314 () Unit!1989)

(assert (=> d!16715 (= lt!32314 (choose!405 (toList!714 lt!31365) (_1!1067 lt!31109)))))

(declare-fun e!47461 () Bool)

(assert (=> d!16715 e!47461))

(declare-fun res!38571 () Bool)

(assert (=> d!16715 (=> (not res!38571) (not e!47461))))

(assert (=> d!16715 (= res!38571 (isStrictlySorted!286 (toList!714 lt!31365)))))

(assert (=> d!16715 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31365) (_1!1067 lt!31109)) lt!32314)))

(declare-fun b!72569 () Bool)

(assert (=> b!72569 (= e!47461 (containsKey!134 (toList!714 lt!31365) (_1!1067 lt!31109)))))

(assert (= (and d!16715 res!38571) b!72569))

(assert (=> d!16715 m!67767))

(assert (=> d!16715 m!67767))

(assert (=> d!16715 m!67835))

(declare-fun m!70665 () Bool)

(assert (=> d!16715 m!70665))

(declare-fun m!70667 () Bool)

(assert (=> d!16715 m!70667))

(assert (=> b!72569 m!67831))

(assert (=> b!70990 d!16715))

(assert (=> b!70990 d!16133))

(assert (=> b!70990 d!15951))

(declare-fun bm!6315 () Bool)

(declare-fun call!6318 () Bool)

(assert (=> bm!6315 (= call!6318 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3838 newMap!16) (mask!6147 newMap!16)))))

(declare-fun b!72570 () Bool)

(declare-fun e!47463 () Bool)

(declare-fun e!47464 () Bool)

(assert (=> b!72570 (= e!47463 e!47464)))

(declare-fun lt!32316 () (_ BitVec 64))

(assert (=> b!72570 (= lt!32316 (select (arr!1840 (_keys!3838 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!32317 () Unit!1989)

(assert (=> b!72570 (= lt!32317 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3838 newMap!16) lt!32316 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!72570 (arrayContainsKey!0 (_keys!3838 newMap!16) lt!32316 #b00000000000000000000000000000000)))

(declare-fun lt!32315 () Unit!1989)

(assert (=> b!72570 (= lt!32315 lt!32317)))

(declare-fun res!38572 () Bool)

(assert (=> b!72570 (= res!38572 (= (seekEntryOrOpen!0 (select (arr!1840 (_keys!3838 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3838 newMap!16) (mask!6147 newMap!16)) (Found!238 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!72570 (=> (not res!38572) (not e!47464))))

(declare-fun b!72571 () Bool)

(assert (=> b!72571 (= e!47464 call!6318)))

(declare-fun d!16717 () Bool)

(declare-fun res!38573 () Bool)

(declare-fun e!47462 () Bool)

(assert (=> d!16717 (=> res!38573 e!47462)))

(assert (=> d!16717 (= res!38573 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16717 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3838 newMap!16) (mask!6147 newMap!16)) e!47462)))

(declare-fun b!72572 () Bool)

(assert (=> b!72572 (= e!47462 e!47463)))

(declare-fun c!10729 () Bool)

(assert (=> b!72572 (= c!10729 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!72573 () Bool)

(assert (=> b!72573 (= e!47463 call!6318)))

(assert (= (and d!16717 (not res!38573)) b!72572))

(assert (= (and b!72572 c!10729) b!72570))

(assert (= (and b!72572 (not c!10729)) b!72573))

(assert (= (and b!72570 res!38572) b!72571))

(assert (= (or b!72571 b!72573) bm!6315))

(declare-fun m!70669 () Bool)

(assert (=> bm!6315 m!70669))

(assert (=> b!72570 m!69357))

(declare-fun m!70671 () Bool)

(assert (=> b!72570 m!70671))

(declare-fun m!70673 () Bool)

(assert (=> b!72570 m!70673))

(assert (=> b!72570 m!69357))

(declare-fun m!70675 () Bool)

(assert (=> b!72570 m!70675))

(assert (=> b!72572 m!69357))

(assert (=> b!72572 m!69357))

(assert (=> b!72572 m!69439))

(assert (=> bm!6176 d!16717))

(declare-fun bm!6316 () Bool)

(declare-fun call!6325 () Bool)

(declare-fun lt!32336 () ListLongMap!1397)

(assert (=> bm!6316 (= call!6325 (contains!716 lt!32336 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72574 () Bool)

(declare-fun e!47465 () Bool)

(assert (=> b!72574 (= e!47465 (= (apply!74 lt!32336 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2095 newMap!16)))))

(declare-fun b!72575 () Bool)

(declare-fun e!47471 () ListLongMap!1397)

(declare-fun call!6321 () ListLongMap!1397)

(assert (=> b!72575 (= e!47471 call!6321)))

(declare-fun call!6319 () ListLongMap!1397)

(declare-fun bm!6317 () Bool)

(assert (=> bm!6317 (= call!6319 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31329 (zeroValue!2095 newMap!16) lt!31106 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun b!72576 () Bool)

(declare-fun e!47475 () Unit!1989)

(declare-fun Unit!2064 () Unit!1989)

(assert (=> b!72576 (= e!47475 Unit!2064)))

(declare-fun b!72577 () Bool)

(declare-fun e!47476 () Bool)

(declare-fun e!47470 () Bool)

(assert (=> b!72577 (= e!47476 e!47470)))

(declare-fun res!38580 () Bool)

(assert (=> b!72577 (=> (not res!38580) (not e!47470))))

(assert (=> b!72577 (= res!38580 (contains!716 lt!32336 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!72577 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!72578 () Bool)

(declare-fun c!10731 () Bool)

(assert (=> b!72578 (= c!10731 (and (not (= (bvand lt!31329 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!31329 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!47466 () ListLongMap!1397)

(assert (=> b!72578 (= e!47466 e!47471)))

(declare-fun call!6320 () ListLongMap!1397)

(declare-fun c!10734 () Bool)

(declare-fun call!6323 () ListLongMap!1397)

(declare-fun c!10732 () Bool)

(declare-fun bm!6318 () Bool)

(declare-fun call!6324 () ListLongMap!1397)

(assert (=> bm!6318 (= call!6323 (+!91 (ite c!10734 call!6319 (ite c!10732 call!6324 call!6320)) (ite (or c!10734 c!10732) (tuple2!2113 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2095 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106))))))

(declare-fun bm!6319 () Bool)

(declare-fun call!6322 () Bool)

(assert (=> bm!6319 (= call!6322 (contains!716 lt!32336 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72579 () Bool)

(declare-fun e!47469 () Bool)

(assert (=> b!72579 (= e!47469 (not call!6322))))

(declare-fun b!72580 () Bool)

(assert (=> b!72580 (= e!47470 (= (apply!74 lt!32336 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)) (get!1136 (select (arr!1841 (_values!2174 newMap!16)) #b00000000000000000000000000000000) (dynLambda!324 (defaultEntry!2191 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72580 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2079 (_values!2174 newMap!16))))))

(assert (=> b!72580 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!72581 () Bool)

(declare-fun e!47477 () Bool)

(assert (=> b!72581 (= e!47477 (not call!6325))))

(declare-fun b!72582 () Bool)

(declare-fun e!47472 () ListLongMap!1397)

(assert (=> b!72582 (= e!47472 e!47466)))

(assert (=> b!72582 (= c!10732 (and (not (= (bvand lt!31329 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!31329 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!72583 () Bool)

(assert (=> b!72583 (= e!47471 call!6320)))

(declare-fun bm!6320 () Bool)

(assert (=> bm!6320 (= call!6321 call!6323)))

(declare-fun b!72584 () Bool)

(declare-fun e!47467 () Bool)

(assert (=> b!72584 (= e!47467 e!47477)))

(declare-fun c!10735 () Bool)

(assert (=> b!72584 (= c!10735 (not (= (bvand lt!31329 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6321 () Bool)

(assert (=> bm!6321 (= call!6324 call!6319)))

(declare-fun b!72585 () Bool)

(assert (=> b!72585 (= e!47466 call!6321)))

(declare-fun b!72586 () Bool)

(declare-fun res!38576 () Bool)

(assert (=> b!72586 (=> (not res!38576) (not e!47467))))

(assert (=> b!72586 (= res!38576 e!47476)))

(declare-fun res!38575 () Bool)

(assert (=> b!72586 (=> res!38575 e!47476)))

(declare-fun e!47474 () Bool)

(assert (=> b!72586 (= res!38575 (not e!47474))))

(declare-fun res!38577 () Bool)

(assert (=> b!72586 (=> (not res!38577) (not e!47474))))

(assert (=> b!72586 (= res!38577 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(declare-fun b!72587 () Bool)

(assert (=> b!72587 (= e!47474 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72588 () Bool)

(declare-fun res!38581 () Bool)

(assert (=> b!72588 (=> (not res!38581) (not e!47467))))

(assert (=> b!72588 (= res!38581 e!47469)))

(declare-fun c!10733 () Bool)

(assert (=> b!72588 (= c!10733 (not (= (bvand lt!31329 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!72589 () Bool)

(declare-fun lt!32334 () Unit!1989)

(assert (=> b!72589 (= e!47475 lt!32334)))

(declare-fun lt!32318 () ListLongMap!1397)

(assert (=> b!72589 (= lt!32318 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31329 (zeroValue!2095 newMap!16) lt!31106 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32332 () (_ BitVec 64))

(assert (=> b!72589 (= lt!32332 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32319 () (_ BitVec 64))

(assert (=> b!72589 (= lt!32319 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32320 () Unit!1989)

(assert (=> b!72589 (= lt!32320 (addStillContains!50 lt!32318 lt!32332 (zeroValue!2095 newMap!16) lt!32319))))

(assert (=> b!72589 (contains!716 (+!91 lt!32318 (tuple2!2113 lt!32332 (zeroValue!2095 newMap!16))) lt!32319)))

(declare-fun lt!32331 () Unit!1989)

(assert (=> b!72589 (= lt!32331 lt!32320)))

(declare-fun lt!32324 () ListLongMap!1397)

(assert (=> b!72589 (= lt!32324 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31329 (zeroValue!2095 newMap!16) lt!31106 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32329 () (_ BitVec 64))

(assert (=> b!72589 (= lt!32329 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32330 () (_ BitVec 64))

(assert (=> b!72589 (= lt!32330 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32327 () Unit!1989)

(assert (=> b!72589 (= lt!32327 (addApplyDifferent!50 lt!32324 lt!32329 lt!31106 lt!32330))))

(assert (=> b!72589 (= (apply!74 (+!91 lt!32324 (tuple2!2113 lt!32329 lt!31106)) lt!32330) (apply!74 lt!32324 lt!32330))))

(declare-fun lt!32321 () Unit!1989)

(assert (=> b!72589 (= lt!32321 lt!32327)))

(declare-fun lt!32333 () ListLongMap!1397)

(assert (=> b!72589 (= lt!32333 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31329 (zeroValue!2095 newMap!16) lt!31106 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32335 () (_ BitVec 64))

(assert (=> b!72589 (= lt!32335 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32339 () (_ BitVec 64))

(assert (=> b!72589 (= lt!32339 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32328 () Unit!1989)

(assert (=> b!72589 (= lt!32328 (addApplyDifferent!50 lt!32333 lt!32335 (zeroValue!2095 newMap!16) lt!32339))))

(assert (=> b!72589 (= (apply!74 (+!91 lt!32333 (tuple2!2113 lt!32335 (zeroValue!2095 newMap!16))) lt!32339) (apply!74 lt!32333 lt!32339))))

(declare-fun lt!32338 () Unit!1989)

(assert (=> b!72589 (= lt!32338 lt!32328)))

(declare-fun lt!32337 () ListLongMap!1397)

(assert (=> b!72589 (= lt!32337 (getCurrentListMapNoExtraKeys!55 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31329 (zeroValue!2095 newMap!16) lt!31106 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(declare-fun lt!32326 () (_ BitVec 64))

(assert (=> b!72589 (= lt!32326 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32322 () (_ BitVec 64))

(assert (=> b!72589 (= lt!32322 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72589 (= lt!32334 (addApplyDifferent!50 lt!32337 lt!32326 lt!31106 lt!32322))))

(assert (=> b!72589 (= (apply!74 (+!91 lt!32337 (tuple2!2113 lt!32326 lt!31106)) lt!32322) (apply!74 lt!32337 lt!32322))))

(declare-fun b!72590 () Bool)

(declare-fun e!47473 () Bool)

(assert (=> b!72590 (= e!47477 e!47473)))

(declare-fun res!38574 () Bool)

(assert (=> b!72590 (= res!38574 call!6325)))

(assert (=> b!72590 (=> (not res!38574) (not e!47473))))

(declare-fun b!72591 () Bool)

(assert (=> b!72591 (= e!47469 e!47465)))

(declare-fun res!38582 () Bool)

(assert (=> b!72591 (= res!38582 call!6322)))

(assert (=> b!72591 (=> (not res!38582) (not e!47465))))

(declare-fun d!16719 () Bool)

(assert (=> d!16719 e!47467))

(declare-fun res!38578 () Bool)

(assert (=> d!16719 (=> (not res!38578) (not e!47467))))

(assert (=> d!16719 (= res!38578 (or (bvsge #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))))

(declare-fun lt!32325 () ListLongMap!1397)

(assert (=> d!16719 (= lt!32336 lt!32325)))

(declare-fun lt!32323 () Unit!1989)

(assert (=> d!16719 (= lt!32323 e!47475)))

(declare-fun c!10730 () Bool)

(declare-fun e!47468 () Bool)

(assert (=> d!16719 (= c!10730 e!47468)))

(declare-fun res!38579 () Bool)

(assert (=> d!16719 (=> (not res!38579) (not e!47468))))

(assert (=> d!16719 (= res!38579 (bvslt #b00000000000000000000000000000000 (size!2078 (_keys!3838 newMap!16))))))

(assert (=> d!16719 (= lt!32325 e!47472)))

(assert (=> d!16719 (= c!10734 (and (not (= (bvand lt!31329 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!31329 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16719 (validMask!0 (mask!6147 newMap!16))))

(assert (=> d!16719 (= (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31329 (zeroValue!2095 newMap!16) lt!31106 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) lt!32336)))

(declare-fun b!72592 () Bool)

(assert (=> b!72592 (= e!47473 (= (apply!74 lt!32336 #b1000000000000000000000000000000000000000000000000000000000000000) lt!31106))))

(declare-fun b!72593 () Bool)

(assert (=> b!72593 (= e!47468 (validKeyInArray!0 (select (arr!1840 (_keys!3838 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!72594 () Bool)

(assert (=> b!72594 (= e!47472 (+!91 call!6323 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)))))

(declare-fun bm!6322 () Bool)

(assert (=> bm!6322 (= call!6320 call!6324)))

(assert (= (and d!16719 c!10734) b!72594))

(assert (= (and d!16719 (not c!10734)) b!72582))

(assert (= (and b!72582 c!10732) b!72585))

(assert (= (and b!72582 (not c!10732)) b!72578))

(assert (= (and b!72578 c!10731) b!72575))

(assert (= (and b!72578 (not c!10731)) b!72583))

(assert (= (or b!72575 b!72583) bm!6322))

(assert (= (or b!72585 bm!6322) bm!6321))

(assert (= (or b!72585 b!72575) bm!6320))

(assert (= (or b!72594 bm!6321) bm!6317))

(assert (= (or b!72594 bm!6320) bm!6318))

(assert (= (and d!16719 res!38579) b!72593))

(assert (= (and d!16719 c!10730) b!72589))

(assert (= (and d!16719 (not c!10730)) b!72576))

(assert (= (and d!16719 res!38578) b!72586))

(assert (= (and b!72586 res!38577) b!72587))

(assert (= (and b!72586 (not res!38575)) b!72577))

(assert (= (and b!72577 res!38580) b!72580))

(assert (= (and b!72586 res!38576) b!72588))

(assert (= (and b!72588 c!10733) b!72591))

(assert (= (and b!72588 (not c!10733)) b!72579))

(assert (= (and b!72591 res!38582) b!72574))

(assert (= (or b!72591 b!72579) bm!6319))

(assert (= (and b!72588 res!38581) b!72584))

(assert (= (and b!72584 c!10735) b!72590))

(assert (= (and b!72584 (not c!10735)) b!72581))

(assert (= (and b!72590 res!38574) b!72592))

(assert (= (or b!72590 b!72581) bm!6316))

(declare-fun b_lambda!3229 () Bool)

(assert (=> (not b_lambda!3229) (not b!72580)))

(assert (=> b!72580 t!5019))

(declare-fun b_and!4445 () Bool)

(assert (= b_and!4441 (and (=> t!5019 result!2661) b_and!4445)))

(assert (=> b!72580 t!5021))

(declare-fun b_and!4447 () Bool)

(assert (= b_and!4443 (and (=> t!5021 result!2663) b_and!4447)))

(declare-fun m!70677 () Bool)

(assert (=> b!72594 m!70677))

(assert (=> b!72593 m!67861))

(assert (=> b!72593 m!67861))

(assert (=> b!72593 m!67863))

(assert (=> b!72580 m!67865))

(assert (=> b!72580 m!67861))

(assert (=> b!72580 m!68053))

(assert (=> b!72580 m!67865))

(assert (=> b!72580 m!68055))

(assert (=> b!72580 m!67861))

(declare-fun m!70679 () Bool)

(assert (=> b!72580 m!70679))

(assert (=> b!72580 m!68053))

(assert (=> b!72587 m!67861))

(assert (=> b!72587 m!67861))

(assert (=> b!72587 m!67863))

(assert (=> d!16719 m!67873))

(assert (=> b!72577 m!67861))

(assert (=> b!72577 m!67861))

(declare-fun m!70681 () Bool)

(assert (=> b!72577 m!70681))

(declare-fun m!70683 () Bool)

(assert (=> b!72574 m!70683))

(declare-fun m!70685 () Bool)

(assert (=> bm!6319 m!70685))

(declare-fun m!70687 () Bool)

(assert (=> bm!6318 m!70687))

(declare-fun m!70689 () Bool)

(assert (=> bm!6317 m!70689))

(declare-fun m!70691 () Bool)

(assert (=> bm!6316 m!70691))

(declare-fun m!70693 () Bool)

(assert (=> b!72592 m!70693))

(declare-fun m!70695 () Bool)

(assert (=> b!72589 m!70695))

(declare-fun m!70697 () Bool)

(assert (=> b!72589 m!70697))

(declare-fun m!70699 () Bool)

(assert (=> b!72589 m!70699))

(assert (=> b!72589 m!70689))

(assert (=> b!72589 m!67861))

(declare-fun m!70701 () Bool)

(assert (=> b!72589 m!70701))

(declare-fun m!70703 () Bool)

(assert (=> b!72589 m!70703))

(assert (=> b!72589 m!70701))

(declare-fun m!70705 () Bool)

(assert (=> b!72589 m!70705))

(declare-fun m!70707 () Bool)

(assert (=> b!72589 m!70707))

(assert (=> b!72589 m!70703))

(declare-fun m!70709 () Bool)

(assert (=> b!72589 m!70709))

(declare-fun m!70711 () Bool)

(assert (=> b!72589 m!70711))

(declare-fun m!70713 () Bool)

(assert (=> b!72589 m!70713))

(declare-fun m!70715 () Bool)

(assert (=> b!72589 m!70715))

(declare-fun m!70717 () Bool)

(assert (=> b!72589 m!70717))

(declare-fun m!70719 () Bool)

(assert (=> b!72589 m!70719))

(assert (=> b!72589 m!70711))

(declare-fun m!70721 () Bool)

(assert (=> b!72589 m!70721))

(assert (=> b!72589 m!70719))

(declare-fun m!70723 () Bool)

(assert (=> b!72589 m!70723))

(assert (=> d!15859 d!16719))

(assert (=> d!15859 d!15819))

(declare-fun d!16721 () Bool)

(assert (=> d!16721 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) lt!31329 (zeroValue!2095 newMap!16) lt!31106 #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)))))

(assert (=> d!16721 true))

(declare-fun _$8!61 () Unit!1989)

(assert (=> d!16721 (= (choose!409 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) lt!31329 (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) lt!31106 (defaultEntry!2191 newMap!16)) _$8!61)))

(declare-fun bs!3125 () Bool)

(assert (= bs!3125 d!16721))

(assert (=> bs!3125 m!67607))

(assert (=> bs!3125 m!67607))

(assert (=> bs!3125 m!68269))

(assert (=> bs!3125 m!68271))

(assert (=> d!15859 d!16721))

(declare-fun d!16723 () Bool)

(declare-fun e!47478 () Bool)

(assert (=> d!16723 e!47478))

(declare-fun res!38583 () Bool)

(assert (=> d!16723 (=> (not res!38583) (not e!47478))))

(declare-fun lt!32341 () ListLongMap!1397)

(assert (=> d!16723 (= res!38583 (contains!716 lt!32341 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106))))))

(declare-fun lt!32342 () List!1479)

(assert (=> d!16723 (= lt!32341 (ListLongMap!1398 lt!32342))))

(declare-fun lt!32340 () Unit!1989)

(declare-fun lt!32343 () Unit!1989)

(assert (=> d!16723 (= lt!32340 lt!32343)))

(assert (=> d!16723 (= (getValueByKey!130 lt!32342 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106))))))

(assert (=> d!16723 (= lt!32343 (lemmaContainsTupThenGetReturnValue!50 lt!32342 (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106))))))

(assert (=> d!16723 (= lt!32342 (insertStrictlySorted!53 (toList!714 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16))) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106))))))

(assert (=> d!16723 (= (+!91 (getCurrentListMap!407 (_keys!3838 newMap!16) (_values!2174 newMap!16) (mask!6147 newMap!16) (extraKeys!2054 newMap!16) (zeroValue!2095 newMap!16) (minValue!2095 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2191 newMap!16)) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)) lt!32341)))

(declare-fun b!72595 () Bool)

(declare-fun res!38584 () Bool)

(assert (=> b!72595 (=> (not res!38584) (not e!47478))))

(assert (=> b!72595 (= res!38584 (= (getValueByKey!130 (toList!714 lt!32341) (_1!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106))) (Some!135 (_2!1067 (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)))))))

(declare-fun b!72596 () Bool)

(assert (=> b!72596 (= e!47478 (contains!717 (toList!714 lt!32341) (tuple2!2113 #b1000000000000000000000000000000000000000000000000000000000000000 lt!31106)))))

(assert (= (and d!16723 res!38583) b!72595))

(assert (= (and b!72595 res!38584) b!72596))

(declare-fun m!70725 () Bool)

(assert (=> d!16723 m!70725))

(declare-fun m!70727 () Bool)

(assert (=> d!16723 m!70727))

(declare-fun m!70729 () Bool)

(assert (=> d!16723 m!70729))

(declare-fun m!70731 () Bool)

(assert (=> d!16723 m!70731))

(declare-fun m!70733 () Bool)

(assert (=> b!72595 m!70733))

(declare-fun m!70735 () Bool)

(assert (=> b!72596 m!70735))

(assert (=> d!15859 d!16723))

(assert (=> d!15859 d!16053))

(assert (=> b!71315 d!16509))

(assert (=> b!71315 d!16511))

(assert (=> b!71211 d!16173))

(declare-fun d!16725 () Bool)

(declare-fun res!38585 () Bool)

(declare-fun e!47479 () Bool)

(assert (=> d!16725 (=> res!38585 e!47479)))

(assert (=> d!16725 (= res!38585 (and ((_ is Cons!1475) (toList!714 call!6109)) (= (_1!1067 (h!2061 (toList!714 call!6109))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(assert (=> d!16725 (= (containsKey!134 (toList!714 call!6109) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)) e!47479)))

(declare-fun b!72597 () Bool)

(declare-fun e!47480 () Bool)

(assert (=> b!72597 (= e!47479 e!47480)))

(declare-fun res!38586 () Bool)

(assert (=> b!72597 (=> (not res!38586) (not e!47480))))

(assert (=> b!72597 (= res!38586 (and (or (not ((_ is Cons!1475) (toList!714 call!6109))) (bvsle (_1!1067 (h!2061 (toList!714 call!6109))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))) ((_ is Cons!1475) (toList!714 call!6109)) (bvslt (_1!1067 (h!2061 (toList!714 call!6109))) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355))))))

(declare-fun b!72598 () Bool)

(assert (=> b!72598 (= e!47480 (containsKey!134 (t!5006 (toList!714 call!6109)) (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355)))))

(assert (= (and d!16725 (not res!38585)) b!72597))

(assert (= (and b!72597 res!38586) b!72598))

(assert (=> b!72598 m!67435))

(declare-fun m!70737 () Bool)

(assert (=> b!72598 m!70737))

(assert (=> d!15855 d!16725))

(declare-fun d!16727 () Bool)

(declare-fun e!47482 () Bool)

(assert (=> d!16727 e!47482))

(declare-fun res!38587 () Bool)

(assert (=> d!16727 (=> res!38587 e!47482)))

(declare-fun lt!32346 () Bool)

(assert (=> d!16727 (= res!38587 (not lt!32346))))

(declare-fun lt!32344 () Bool)

(assert (=> d!16727 (= lt!32346 lt!32344)))

(declare-fun lt!32345 () Unit!1989)

(declare-fun e!47481 () Unit!1989)

(assert (=> d!16727 (= lt!32345 e!47481)))

(declare-fun c!10736 () Bool)

(assert (=> d!16727 (= c!10736 lt!32344)))

(assert (=> d!16727 (= lt!32344 (containsKey!134 (toList!714 lt!31435) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> d!16727 (= (contains!716 lt!31435 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!32346)))

(declare-fun b!72599 () Bool)

(declare-fun lt!32347 () Unit!1989)

(assert (=> b!72599 (= e!47481 lt!32347)))

(assert (=> b!72599 (= lt!32347 (lemmaContainsKeyImpliesGetValueByKeyDefined!83 (toList!714 lt!31435) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (=> b!72599 (isDefined!84 (getValueByKey!130 (toList!714 lt!31435) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!72600 () Bool)

(declare-fun Unit!2065 () Unit!1989)

(assert (=> b!72600 (= e!47481 Unit!2065)))

(declare-fun b!72601 () Bool)

(assert (=> b!72601 (= e!47482 (isDefined!84 (getValueByKey!130 (toList!714 lt!31435) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (= (and d!16727 c!10736) b!72599))

(assert (= (and d!16727 (not c!10736)) b!72600))

(assert (= (and d!16727 (not res!38587)) b!72601))

(declare-fun m!70739 () Bool)

(assert (=> d!16727 m!70739))

(declare-fun m!70741 () Bool)

(assert (=> b!72599 m!70741))

(assert (=> b!72599 m!67935))

(assert (=> b!72599 m!67935))

(declare-fun m!70743 () Bool)

(assert (=> b!72599 m!70743))

(assert (=> b!72601 m!67935))

(assert (=> b!72601 m!67935))

(assert (=> b!72601 m!70743))

(assert (=> d!15783 d!16727))

(declare-fun b!72602 () Bool)

(declare-fun e!47483 () Option!136)

(assert (=> b!72602 (= e!47483 (Some!135 (_2!1067 (h!2061 lt!31436))))))

(declare-fun d!16729 () Bool)

(declare-fun c!10737 () Bool)

(assert (=> d!16729 (= c!10737 (and ((_ is Cons!1475) lt!31436) (= (_1!1067 (h!2061 lt!31436)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!16729 (= (getValueByKey!130 lt!31436 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) e!47483)))

(declare-fun b!72603 () Bool)

(declare-fun e!47484 () Option!136)

(assert (=> b!72603 (= e!47483 e!47484)))

(declare-fun c!10738 () Bool)

(assert (=> b!72603 (= c!10738 (and ((_ is Cons!1475) lt!31436) (not (= (_1!1067 (h!2061 lt!31436)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun b!72605 () Bool)

(assert (=> b!72605 (= e!47484 None!134)))

(declare-fun b!72604 () Bool)

(assert (=> b!72604 (= e!47484 (getValueByKey!130 (t!5006 lt!31436) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(assert (= (and d!16729 c!10737) b!72602))

(assert (= (and d!16729 (not c!10737)) b!72603))

(assert (= (and b!72603 c!10738) b!72604))

(assert (= (and b!72603 (not c!10738)) b!72605))

(declare-fun m!70745 () Bool)

(assert (=> b!72604 m!70745))

(assert (=> d!15783 d!16729))

(declare-fun d!16731 () Bool)

(assert (=> d!16731 (= (getValueByKey!130 lt!31436 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) (Some!135 (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun lt!32348 () Unit!1989)

(assert (=> d!16731 (= lt!32348 (choose!404 lt!31436 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun e!47485 () Bool)

(assert (=> d!16731 e!47485))

(declare-fun res!38588 () Bool)

(assert (=> d!16731 (=> (not res!38588) (not e!47485))))

(assert (=> d!16731 (= res!38588 (isStrictlySorted!286 lt!31436))))

(assert (=> d!16731 (= (lemmaContainsTupThenGetReturnValue!50 lt!31436 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!32348)))

(declare-fun b!72606 () Bool)

(declare-fun res!38589 () Bool)

(assert (=> b!72606 (=> (not res!38589) (not e!47485))))

(assert (=> b!72606 (= res!38589 (containsKey!134 lt!31436 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!72607 () Bool)

(assert (=> b!72607 (= e!47485 (contains!717 lt!31436 (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (= (and d!16731 res!38588) b!72606))

(assert (= (and b!72606 res!38589) b!72607))

(assert (=> d!16731 m!67929))

(declare-fun m!70747 () Bool)

(assert (=> d!16731 m!70747))

(declare-fun m!70749 () Bool)

(assert (=> d!16731 m!70749))

(declare-fun m!70751 () Bool)

(assert (=> b!72606 m!70751))

(declare-fun m!70753 () Bool)

(assert (=> b!72607 m!70753))

(assert (=> d!15783 d!16731))

(declare-fun b!72608 () Bool)

(declare-fun lt!32349 () List!1479)

(declare-fun e!47488 () Bool)

(assert (=> b!72608 (= e!47488 (contains!717 lt!32349 (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun e!47486 () List!1479)

(declare-fun b!72609 () Bool)

(assert (=> b!72609 (= e!47486 (insertStrictlySorted!53 (t!5006 (toList!714 lt!31105)) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun d!16733 () Bool)

(assert (=> d!16733 e!47488))

(declare-fun res!38591 () Bool)

(assert (=> d!16733 (=> (not res!38591) (not e!47488))))

(assert (=> d!16733 (= res!38591 (isStrictlySorted!286 lt!32349))))

(declare-fun e!47487 () List!1479)

(assert (=> d!16733 (= lt!32349 e!47487)))

(declare-fun c!10742 () Bool)

(assert (=> d!16733 (= c!10742 (and ((_ is Cons!1475) (toList!714 lt!31105)) (bvslt (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(assert (=> d!16733 (isStrictlySorted!286 (toList!714 lt!31105))))

(assert (=> d!16733 (= (insertStrictlySorted!53 (toList!714 lt!31105) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))) lt!32349)))

(declare-fun c!10741 () Bool)

(declare-fun b!72610 () Bool)

(assert (=> b!72610 (= c!10741 (and ((_ is Cons!1475) (toList!714 lt!31105)) (bvsgt (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun e!47490 () List!1479)

(declare-fun e!47489 () List!1479)

(assert (=> b!72610 (= e!47490 e!47489)))

(declare-fun b!72611 () Bool)

(assert (=> b!72611 (= e!47487 e!47490)))

(declare-fun c!10740 () Bool)

(assert (=> b!72611 (= c!10740 (and ((_ is Cons!1475) (toList!714 lt!31105)) (= (_1!1067 (h!2061 (toList!714 lt!31105))) (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)))))))

(declare-fun b!72612 () Bool)

(declare-fun call!6328 () List!1479)

(assert (=> b!72612 (= e!47490 call!6328)))

(declare-fun b!72613 () Bool)

(declare-fun res!38590 () Bool)

(assert (=> b!72613 (=> (not res!38590) (not e!47488))))

(assert (=> b!72613 (= res!38590 (containsKey!134 lt!32349 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))

(declare-fun b!72614 () Bool)

(assert (=> b!72614 (= e!47486 (ite c!10740 (t!5006 (toList!714 lt!31105)) (ite c!10741 (Cons!1475 (h!2061 (toList!714 lt!31105)) (t!5006 (toList!714 lt!31105))) Nil!1476)))))

(declare-fun b!72615 () Bool)

(declare-fun call!6327 () List!1479)

(assert (=> b!72615 (= e!47487 call!6327)))

(declare-fun b!72616 () Bool)

(declare-fun call!6326 () List!1479)

(assert (=> b!72616 (= e!47489 call!6326)))

(declare-fun bm!6323 () Bool)

(assert (=> bm!6323 (= call!6326 call!6328)))

(declare-fun bm!6324 () Bool)

(assert (=> bm!6324 (= call!6328 call!6327)))

(declare-fun bm!6325 () Bool)

(assert (=> bm!6325 (= call!6327 ($colon$colon!64 e!47486 (ite c!10742 (h!2061 (toList!714 lt!31105)) (tuple2!2113 (_1!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106)) (_2!1067 (tuple2!2113 (select (arr!1840 (_keys!3838 (v!2507 (underlying!253 thiss!992)))) from!355) lt!31106))))))))

(declare-fun c!10739 () Bool)

(assert (=> bm!6325 (= c!10739 c!10742)))

(declare-fun b!72617 () Bool)

(assert (=> b!72617 (= e!47489 call!6326)))

(assert (= (and d!16733 c!10742) b!72615))

(assert (= (and d!16733 (not c!10742)) b!72611))

(assert (= (and b!72611 c!10740) b!72612))

(assert (= (and b!72611 (not c!10740)) b!72610))

(assert (= (and b!72610 c!10741) b!72616))

(assert (= (and b!72610 (not c!10741)) b!72617))

(assert (= (or b!72616 b!72617) bm!6323))

(assert (= (or b!72612 bm!6323) bm!6324))

(assert (= (or b!72615 bm!6324) bm!6325))

(assert (= (and bm!6325 c!10739) b!72609))

(assert (= (and bm!6325 (not c!10739)) b!72614))

(assert (= (and d!16733 res!38591) b!72613))

(assert (= (and b!72613 res!38590) b!72608))

(declare-fun m!70755 () Bool)

(assert (=> b!72608 m!70755))

(declare-fun m!70757 () Bool)

(assert (=> b!72609 m!70757))

(declare-fun m!70759 () Bool)

(assert (=> b!72613 m!70759))

(declare-fun m!70761 () Bool)

(assert (=> bm!6325 m!70761))

(declare-fun m!70763 () Bool)

(assert (=> d!16733 m!70763))

(assert (=> d!16733 m!68041))

(assert (=> d!15783 d!16733))

(declare-fun mapIsEmpty!3159 () Bool)

(declare-fun mapRes!3159 () Bool)

(assert (=> mapIsEmpty!3159 mapRes!3159))

(declare-fun condMapEmpty!3159 () Bool)

(declare-fun mapDefault!3159 () ValueCell!890)

(assert (=> mapNonEmpty!3157 (= condMapEmpty!3159 (= mapRest!3157 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3159)))))

(declare-fun e!47492 () Bool)

(assert (=> mapNonEmpty!3157 (= tp!8503 (and e!47492 mapRes!3159))))

(declare-fun b!72618 () Bool)

(declare-fun e!47491 () Bool)

(assert (=> b!72618 (= e!47491 tp_is_empty!2467)))

(declare-fun b!72619 () Bool)

(assert (=> b!72619 (= e!47492 tp_is_empty!2467)))

(declare-fun mapNonEmpty!3159 () Bool)

(declare-fun tp!8505 () Bool)

(assert (=> mapNonEmpty!3159 (= mapRes!3159 (and tp!8505 e!47491))))

(declare-fun mapRest!3159 () (Array (_ BitVec 32) ValueCell!890))

(declare-fun mapKey!3159 () (_ BitVec 32))

(declare-fun mapValue!3159 () ValueCell!890)

(assert (=> mapNonEmpty!3159 (= mapRest!3157 (store mapRest!3159 mapKey!3159 mapValue!3159))))

(assert (= (and mapNonEmpty!3157 condMapEmpty!3159) mapIsEmpty!3159))

(assert (= (and mapNonEmpty!3157 (not condMapEmpty!3159)) mapNonEmpty!3159))

(assert (= (and mapNonEmpty!3159 ((_ is ValueCellFull!890) mapValue!3159)) b!72618))

(assert (= (and mapNonEmpty!3157 ((_ is ValueCellFull!890) mapDefault!3159)) b!72619))

(declare-fun m!70765 () Bool)

(assert (=> mapNonEmpty!3159 m!70765))

(declare-fun mapIsEmpty!3160 () Bool)

(declare-fun mapRes!3160 () Bool)

(assert (=> mapIsEmpty!3160 mapRes!3160))

(declare-fun condMapEmpty!3160 () Bool)

(declare-fun mapDefault!3160 () ValueCell!890)

(assert (=> mapNonEmpty!3158 (= condMapEmpty!3160 (= mapRest!3158 ((as const (Array (_ BitVec 32) ValueCell!890)) mapDefault!3160)))))

(declare-fun e!47494 () Bool)

(assert (=> mapNonEmpty!3158 (= tp!8504 (and e!47494 mapRes!3160))))

(declare-fun b!72620 () Bool)

(declare-fun e!47493 () Bool)

(assert (=> b!72620 (= e!47493 tp_is_empty!2467)))

(declare-fun b!72621 () Bool)

(assert (=> b!72621 (= e!47494 tp_is_empty!2467)))

(declare-fun mapNonEmpty!3160 () Bool)

(declare-fun tp!8506 () Bool)

(assert (=> mapNonEmpty!3160 (= mapRes!3160 (and tp!8506 e!47493))))

(declare-fun mapRest!3160 () (Array (_ BitVec 32) ValueCell!890))

(declare-fun mapKey!3160 () (_ BitVec 32))

(declare-fun mapValue!3160 () ValueCell!890)

(assert (=> mapNonEmpty!3160 (= mapRest!3158 (store mapRest!3160 mapKey!3160 mapValue!3160))))

(assert (= (and mapNonEmpty!3158 condMapEmpty!3160) mapIsEmpty!3160))

(assert (= (and mapNonEmpty!3158 (not condMapEmpty!3160)) mapNonEmpty!3160))

(assert (= (and mapNonEmpty!3160 ((_ is ValueCellFull!890) mapValue!3160)) b!72620))

(assert (= (and mapNonEmpty!3158 ((_ is ValueCellFull!890) mapDefault!3160)) b!72621))

(declare-fun m!70767 () Bool)

(assert (=> mapNonEmpty!3160 m!70767))

(declare-fun b_lambda!3231 () Bool)

(assert (= b_lambda!3201 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3231)))

(declare-fun b_lambda!3233 () Bool)

(assert (= b_lambda!3205 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3233)))

(declare-fun b_lambda!3235 () Bool)

(assert (= b_lambda!3203 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3235)))

(declare-fun b_lambda!3237 () Bool)

(assert (= b_lambda!3229 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3237)))

(declare-fun b_lambda!3239 () Bool)

(assert (= b_lambda!3219 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3239)))

(declare-fun b_lambda!3241 () Bool)

(assert (= b_lambda!3223 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3241)))

(declare-fun b_lambda!3243 () Bool)

(assert (= b_lambda!3211 (or (and b!70564 b_free!2101) (and b!70563 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))) b_lambda!3243)))

(declare-fun b_lambda!3245 () Bool)

(assert (= b_lambda!3209 (or (and b!70564 b_free!2101) (and b!70563 b_free!2103 (= (defaultEntry!2191 newMap!16) (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))))) b_lambda!3245)))

(declare-fun b_lambda!3247 () Bool)

(assert (= b_lambda!3221 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3247)))

(declare-fun b_lambda!3249 () Bool)

(assert (= b_lambda!3213 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3249)))

(declare-fun b_lambda!3251 () Bool)

(assert (= b_lambda!3215 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3251)))

(declare-fun b_lambda!3253 () Bool)

(assert (= b_lambda!3225 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3253)))

(declare-fun b_lambda!3255 () Bool)

(assert (= b_lambda!3227 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3255)))

(declare-fun b_lambda!3257 () Bool)

(assert (= b_lambda!3217 (or (and b!70564 b_free!2101 (= (defaultEntry!2191 (v!2507 (underlying!253 thiss!992))) (defaultEntry!2191 newMap!16))) (and b!70563 b_free!2103) b_lambda!3257)))

(check-sat (not d!16697) (not d!16579) (not b!72096) (not b!71820) (not b!72276) (not b!72520) (not b!71580) (not b!71968) b_and!4445 (not b!72341) (not bm!6325) (not b!72263) (not b!71756) (not b!72577) (not b!72317) (not b!72235) (not b!72499) (not b!72440) (not d!16387) (not b!71860) (not bm!6219) (not b!71700) (not b!71491) (not bm!6283) (not b!72343) (not b!71592) (not b!72228) (not d!16677) (not d!16441) (not b!72474) (not bm!6227) (not bm!6310) (not b!72022) (not d!16205) (not b!72572) (not b!71601) (not d!16719) (not b!72463) (not b!72075) (not b!71645) (not d!16645) (not b!72568) (not d!16385) (not d!16265) (not b!71738) (not d!16409) (not b!71916) (not d!16493) (not b!72020) (not b_lambda!3251) (not d!16041) (not b!71518) (not b_lambda!3245) (not b!71760) (not d!15995) (not b!71531) (not b!71819) (not d!16031) (not b!72512) (not b!72485) (not d!16551) (not b!72480) (not b!72233) (not bm!6226) (not b!71835) (not d!16425) (not d!16085) (not bm!6246) (not b!71697) (not d!16589) (not b!71624) (not b!71583) (not d!16129) (not bm!6258) (not b!71816) (not b_lambda!3243) (not bm!6315) (not d!15997) (not b!72067) (not b_lambda!3195) (not b!71713) (not bm!6228) (not d!16577) (not d!16483) (not b!72557) (not b!71801) (not b!72043) (not d!16401) (not d!16657) (not d!16495) (not d!16733) (not d!16035) (not b!72564) (not b!71496) (not b!71629) (not b!71490) (not b!71822) (not b!71862) (not d!16307) (not d!16475) (not b!71986) (not b!71538) (not d!16255) (not bm!6279) (not b!71962) (not b!71978) (not b!71791) (not b!72089) (not b!72026) (not d!16505) (not b!71470) (not b!72558) (not mapNonEmpty!3159) (not d!16285) (not d!16217) (not d!16423) (not b!72148) (not d!16383) (not b!72103) (not b!72350) (not d!16029) (not d!16715) (not d!16183) (not d!16429) (not bm!6319) (not d!16699) (not d!16685) (not d!16111) (not b!72105) (not d!16653) (not b!71796) (not b!72345) (not d!15999) (not d!16275) (not b!72379) (not d!16433) (not d!16119) (not d!16731) (not bm!6236) (not d!16201) (not b!72234) (not d!16597) (not bm!6212) (not b!72437) (not d!16213) (not b!72319) (not b!72159) (not d!15985) (not b!71607) (not d!16691) (not b!72613) (not b!71483) (not b!72073) (not d!16067) (not b!72313) (not d!16377) (not b!71989) (not d!16317) (not d!16075) (not b!71487) (not b!71812) (not d!16299) (not d!16235) (not b!71849) (not b!72607) (not b!71798) (not b!72533) (not b!71810) (not d!16117) (not d!16099) (not b!71776) (not d!16415) (not b!71575) (not b!72281) (not b!72027) (not d!16561) (not b!72461) (not bm!6255) (not b!71657) (not b!72224) (not b!72441) (not b!71808) (not b!71871) (not b!71505) (not bm!6247) (not d!15979) (not b!72495) (not b!72064) (not d!16629) (not b!72595) (not b!71794) (not b!71472) (not d!16105) (not d!16647) (not d!16573) (not b!72604) (not b!71672) (not b!72594) (not d!16411) (not b!71733) (not b!72050) (not b!72082) (not d!16417) (not b!72091) (not b!72348) (not d!16603) (not b!72487) (not b!72446) (not d!16689) (not b!71945) (not d!16663) (not d!16145) (not bm!6202) (not d!16721) (not bm!6259) (not d!16643) (not b_lambda!3179) (not bm!6230) (not bm!6280) (not b!72118) (not b!71757) (not d!16633) (not b!72531) (not b!71806) (not b!71573) (not d!16247) (not d!16707) (not d!16021) (not b!71497) (not b!71795) (not b!72079) (not b!71932) (not d!16519) (not d!16055) (not d!16619) (not b!71981) (not b!72110) (not b!71555) (not b!72524) tp_is_empty!2467 (not bm!6309) (not b!71516) (not b!71709) (not b!71913) (not b!71553) (not d!16259) (not d!16137) (not b!71805) (not b!72458) (not d!16621) (not b!72364) (not d!16009) (not b!72170) (not b_lambda!3235) (not bm!6263) (not d!16153) (not b!72554) (not b!71857) (not b!72522) (not d!16661) (not d!16091) (not d!16199) (not b!72357) (not d!16143) (not b!72071) (not d!16431) (not b!71599) (not b!72536) (not b!71841) (not b!72002) (not b!72388) (not b!71586) (not b!71999) (not b!72098) (not d!16539) (not b!72088) (not d!16559) (not d!16453) (not b!72515) (not bm!6316) (not b!71784) (not b_lambda!3233) (not d!16301) (not b!72165) (not d!16001) (not b!71557) (not d!16631) (not d!16517) (not b!71532) (not b!71477) (not b!72298) (not b!71873) (not bm!6307) (not b!72269) (not b!71936) (not b!71535) (not b!72468) (not d!16675) (not b!71493) (not d!16195) (not b!72598) (not b!72318) (not d!16149) (not b!71952) (not b!72609) (not d!16545) (not d!16263) (not d!16659) (not d!16615) (not b!71740) (not b!71965) (not b!72266) (not b!71694) (not b!72539) (not b!71930) (not b!71741) (not bm!6240) (not b!72272) (not b!71677) (not b!72307) (not bm!6218) (not d!16293) (not b!72013) (not d!16273) (not b!72240) (not b!72323) (not bm!6291) (not bm!6308) (not b!72169) (not b_lambda!3191) (not d!16079) (not b!71954) (not b!72063) (not b!72456) (not b!71887) (not d!16083) (not b!71938) (not d!16369) (not b!71683) (not d!15983) (not bm!6257) (not d!16599) (not b!71495) (not bm!6265) (not b!72383) (not b!72519) (not b!71633) (not b!71494) (not b!72334) (not bm!6241) (not b!71675) (not d!16667) (not b!72493) (not b!71984) (not b!72186) (not b!71678) (not b!72303) (not d!16171) (not b!72466) (not d!16005) (not b!71832) (not b!71966) (not b_lambda!3167) (not mapNonEmpty!3160) (not d!16509) (not b!72587) (not d!16681) (not b!72113) (not b!72535) (not b!71971) (not b!72352) (not b!72555) (not b!71627) (not b_lambda!3199) (not b!72197) (not bm!6317) (not b!71725) (not b!72574) (not d!16047) (not b!71707) (not b!72513) (not b!72453) (not b!71959) (not bm!6216) (not b!72507) (not d!16341) (not b!71853) (not b!71872) (not b!71768) (not d!16601) (not bm!6292) (not b!72033) (not b!72155) (not d!16361) (not d!16059) (not b!71701) (not bm!6225) (not b_next!2103) (not b!72094) (not d!16481) (not b!72608) (not b!72589) (not bm!6251) (not bm!6275) (not b!72476) (not b!71621) (not b!72085) (not d!16237) (not bm!6264) (not d!16017) (not b!71614) (not b!72331) (not b!72288) (not d!16711) (not d!16243) (not d!16473) (not bm!6301) (not d!16185) (not b!72505) (not d!16019) (not bm!6290) (not b!71588) (not b!71893) (not d!16249) (not b_lambda!3237) (not b!71660) (not b!71955) (not d!16651) (not b!71817) (not b!72601) (not b!71870) (not b!71904) (not bm!6199) (not b!72570) (not b!71628) (not bm!6250) (not d!16613) (not d!16349) (not b!71528) (not b!71730) (not d!16131) (not b!72419) (not b!71803) (not b!72353) (not d!16665) (not b!71782) (not b!72287) (not d!15991) (not b!72260) (not b!71770) (not b!71934) (not b!71743) (not b!72025) (not b!72556) (not b!72293) (not d!15987) (not b!71802) (not b!71943) (not d!16033) (not d!16097) (not b!71911) (not b!71676) (not b!71474) (not d!16357) (not b!71616) (not b!71598) (not d!16683) (not b!71998) (not b!72370) (not bm!6206) (not b!71499) (not b!72036) (not b!71585) (not d!16669) (not b!71728) (not d!16557) (not b!71755) (not b!71489) (not b!72599) (not d!16703) (not b!72231) (not b!72115) (not b!71906) (not d!16089) (not d!16103) (not b!72490) (not b!72275) (not b!71529) (not d!16315) (not b!72376) (not b!72188) (not b!72382) (not b!72328) (not b!72475) (not d!16127) (not bm!6295) (not d!16679) (not b!72053) (not b!72471) (not b!71587) (not b!71696) (not b!72442) (not d!16673) (not d!16427) (not b!72300) (not b!71902) (not b!72526) (not b!72506) (not b!71890) (not b!72516) (not b!72179) (not b!71865) (not b!71851) (not bm!6254) (not d!16113) (not b!72374) (not b!72424) (not d!16333) (not b!71918) (not d!15975) (not d!15969) (not d!16371) (not b!71863) (not b!71732) (not b!71735) (not b!72325) (not d!16723) (not b!71545) (not b!72010) (not b!72549) (not d!16347) (not d!15977) (not b!72301) (not b!72292) (not d!16141) (not b!71771) (not d!16319) (not d!16687) (not b!71950) (not b!71565) (not b!72351) (not b!72001) (not b!71868) (not b!71763) (not d!16593) (not b!71742) (not b!72384) (not b!71479) (not b!71578) (not b!72084) (not b!71716) (not b!72332) (not bm!6203) (not b!72381) (not b!71752) (not b!72459) (not b!71652) (not d!16013) (not b!72593) (not b!72221) (not b!72569) (not b!72181) (not b_next!2101) (not b!71772) (not d!16607) (not b!72439) (not b!72192) (not b!71846) (not d!16727) (not d!16489) (not b!72434) (not d!16513) (not b!71704) (not b!72045) (not b!71939) (not bm!6217) (not b!71543) (not b!71559) (not d!15981) (not b!72087) (not b!72048) (not b!71935) (not bm!6304) (not b!72145) (not d!16337) (not b!71503) (not d!16497) (not b!72267) (not d!16693) (not bm!6239) (not d!16297) (not b!72596) (not b!71488) (not d!16015) (not bm!6287) (not d!16503) (not b!71684) (not d!16339) (not b_lambda!3193) (not b!72373) (not b!71507) (not b!71710) (not d!16345) (not b!71619) (not b!72580) (not b!72156) (not d!16135) (not bm!6243) (not b!72368) (not b!71829) (not b!71703) (not d!16639) (not d!16329) (not b!72160) (not b!72101) (not bm!6318) (not b!71947) (not d!16671) (not b!71501) (not d!16537) (not d!16413) (not d!16403) (not b!72528) (not b!72551) (not b!71484) (not d!16591) (not b!72247) (not d!16177) (not d!16389) (not b!72511) (not b!72055) (not d!16335) (not d!16501) (not b!71663) (not d!16543) (not d!16365) (not b!72167) (not b!71604) (not d!16045) (not b!71549) (not d!16469) (not b!72193) (not b!71723) (not b!71540) (not d!16395) (not b!72253) (not b!71647) (not b!72606) (not d!16063) (not b!72473) (not b!72061) (not d!16701) (not b_lambda!3241) (not b!72093) (not d!16555) (not d!16101) (not b!72277) (not b!71577) (not b!71837) (not b!71546) (not d!16193) (not b!72190) (not b!71478) (not b!72257) (not b!71941) (not b!71799) (not b_lambda!3257) (not d!16397) (not b!72162) (not b!71948) (not b!72236) (not b!71892) (not b!71620) (not b!71946) (not bm!6266) (not b!72216) (not b!71813) (not b!72494) (not bm!6229) (not b!71702) (not bm!6252) (not b!71827) (not b!72007) (not b!71571) (not b!71921) (not b!71681) (not b!71884) (not b!72058) (not b!72226) (not bm!6298) (not b!71825) (not d!16419) (not b!72069) (not b!72097) (not b!72295) (not b!72194) (not b_lambda!3207) (not b!71747) (not b_lambda!3249) (not b!72542) (not b!72030) (not d!16421) (not b!72290) (not d!16709) (not d!16253) (not d!16155) (not b!71949) (not d!15973) (not b!71909) (not d!16331) (not d!16277) (not d!16283) (not b!72302) (not b_lambda!3175) (not b_lambda!3253) (not d!16321) (not b!71956) (not bm!6215) (not b!72432) (not b!72510) (not b!72183) (not d!16169) (not b!71564) (not b!71729) (not d!15989) (not b!72274) (not bm!6253) (not b!71920) (not d!16351) (not b!72049) (not b!71641) (not d!16133) (not bm!6286) (not b!72314) (not b!71818) (not bm!6311) (not d!16011) (not bm!6205) (not b!72029) (not b_lambda!3177) (not b!72004) (not b!72427) (not b!71900) (not bm!6256) (not b!71510) (not b!72561) (not b!72431) (not b!72196) (not b!71854) (not d!16465) (not b!71788) (not b!72200) (not b!71638) (not b!71688) (not b!71823) (not b!72202) (not d!16609) (not d!16363) (not b!71508) (not b_lambda!3197) (not d!16325) (not bm!6276) (not d!16313) (not b!71925) (not b!72076) (not d!16123) (not d!16065) (not b!72107) (not b!72321) (not b!71551) (not b!72492) (not b!72336) (not b_lambda!3255) (not d!16125) b_and!4447 (not b!72006) (not b!71919) (not b!72092) (not b!71961) (not b!72152) (not b!71465) (not b!71753) (not b!72250) (not b!72465) (not b!72338) (not d!16327) (not b!71526) (not d!16027) (not b!71648) (not b!71670) (not b!72320) (not b!71706) (not b_lambda!3239) (not b!71758) (not d!16507) (not b!71476) (not b!71896) (not d!16375) (not d!16003) (not b!71524) (not b!71877) (not b_lambda!3231) (not d!16323) (not bm!6270) (not b!71512) (not b!72517) (not d!16221) (not b!72083) (not b!71514) (not b!72168) (not b!71781) (not d!16007) (not b!71766) (not b!72566) (not bm!6242) (not b!71467) (not b!72592) (not b!72428) (not d!15993) (not b!72174) (not d!16023) (not b!72371) (not b!71600) (not bm!6204) (not b_lambda!3247) (not d!16087) (not b!71844))
(check-sat b_and!4445 b_and!4447 (not b_next!2101) (not b_next!2103))
