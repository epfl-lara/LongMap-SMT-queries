; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9756 () Bool)

(assert start!9756)

(declare-fun b!72793 () Bool)

(declare-fun b_free!2113 () Bool)

(declare-fun b_next!2113 () Bool)

(assert (=> b!72793 (= b_free!2113 (not b_next!2113))))

(declare-fun tp!8516 () Bool)

(declare-fun b_and!4469 () Bool)

(assert (=> b!72793 (= tp!8516 b_and!4469)))

(declare-fun b!72792 () Bool)

(declare-fun b_free!2115 () Bool)

(declare-fun b_next!2115 () Bool)

(assert (=> b!72792 (= b_free!2115 (not b_next!2115))))

(declare-fun tp!8518 () Bool)

(declare-fun b_and!4471 () Bool)

(assert (=> b!72792 (= tp!8518 b_and!4471)))

(declare-fun b!72791 () Bool)

(declare-fun res!38671 () Bool)

(declare-fun e!47613 () Bool)

(assert (=> b!72791 (=> (not res!38671) (not e!47613))))

(declare-fun from!355 () (_ BitVec 32))

(declare-datatypes ((V!2945 0))(
  ( (V!2946 (val!1281 Int)) )
))
(declare-datatypes ((array!3877 0))(
  ( (array!3878 (arr!1850 (Array (_ BitVec 32) (_ BitVec 64))) (size!2088 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!893 0))(
  ( (ValueCellFull!893 (v!2531 V!2945)) (EmptyCell!893) )
))
(declare-datatypes ((array!3879 0))(
  ( (array!3880 (arr!1851 (Array (_ BitVec 32) ValueCell!893)) (size!2089 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!694 0))(
  ( (LongMapFixedSize!695 (defaultEntry!2212 Int) (mask!6179 (_ BitVec 32)) (extraKeys!2071 (_ BitVec 32)) (zeroValue!2114 V!2945) (minValue!2114 V!2945) (_size!396 (_ BitVec 32)) (_keys!3864 array!3877) (_values!2195 array!3879) (_vacant!396 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!502 0))(
  ( (Cell!503 (v!2532 LongMapFixedSize!694)) )
))
(declare-datatypes ((LongMap!502 0))(
  ( (LongMap!503 (underlying!262 Cell!502)) )
))
(declare-fun thiss!992 () LongMap!502)

(assert (=> b!72791 (= res!38671 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun e!47618 () Bool)

(declare-fun tp_is_empty!2473 () Bool)

(declare-fun e!47616 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!694)

(declare-fun array_inv!1139 (array!3877) Bool)

(declare-fun array_inv!1140 (array!3879) Bool)

(assert (=> b!72792 (= e!47618 (and tp!8518 tp_is_empty!2473 (array_inv!1139 (_keys!3864 newMap!16)) (array_inv!1140 (_values!2195 newMap!16)) e!47616))))

(declare-fun mapNonEmpty!3165 () Bool)

(declare-fun mapRes!3166 () Bool)

(declare-fun tp!8517 () Bool)

(declare-fun e!47614 () Bool)

(assert (=> mapNonEmpty!3165 (= mapRes!3166 (and tp!8517 e!47614))))

(declare-fun mapValue!3165 () ValueCell!893)

(declare-fun mapRest!3165 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapKey!3166 () (_ BitVec 32))

(assert (=> mapNonEmpty!3165 (= (arr!1851 (_values!2195 newMap!16)) (store mapRest!3165 mapKey!3166 mapValue!3165))))

(declare-fun e!47621 () Bool)

(declare-fun e!47624 () Bool)

(assert (=> b!72793 (= e!47624 (and tp!8516 tp_is_empty!2473 (array_inv!1139 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (array_inv!1140 (_values!2195 (v!2532 (underlying!262 thiss!992)))) e!47621))))

(declare-fun b!72794 () Bool)

(assert (=> b!72794 (= e!47614 tp_is_empty!2473)))

(declare-fun b!72795 () Bool)

(declare-datatypes ((Unit!2076 0))(
  ( (Unit!2077) )
))
(declare-fun e!47627 () Unit!2076)

(declare-fun Unit!2078 () Unit!2076)

(assert (=> b!72795 (= e!47627 Unit!2078)))

(declare-fun lt!32490 () Unit!2076)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!44 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) (_ BitVec 32) Int) Unit!2076)

(assert (=> b!72795 (= lt!32490 (lemmaListMapContainsThenArrayContainsFrom!44 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3877 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!72795 (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!32486 () Unit!2076)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3877 (_ BitVec 32) (_ BitVec 32)) Unit!2076)

(assert (=> b!72795 (= lt!32486 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1473 0))(
  ( (Nil!1470) (Cons!1469 (h!2056 (_ BitVec 64)) (t!5022 List!1473)) )
))
(declare-fun arrayNoDuplicates!0 (array!3877 (_ BitVec 32) List!1473) Bool)

(assert (=> b!72795 (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) from!355 Nil!1470)))

(declare-fun lt!32496 () Unit!2076)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3877 (_ BitVec 32) (_ BitVec 64) List!1473) Unit!2076)

(assert (=> b!72795 (= lt!32496 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470)))))

(assert (=> b!72795 false))

(declare-fun b!72796 () Bool)

(declare-fun e!47620 () Bool)

(assert (=> b!72796 (= e!47616 (and e!47620 mapRes!3166))))

(declare-fun condMapEmpty!3165 () Bool)

(declare-fun mapDefault!3166 () ValueCell!893)

(assert (=> b!72796 (= condMapEmpty!3165 (= (arr!1851 (_values!2195 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3166)))))

(declare-fun b!72797 () Bool)

(declare-fun e!47612 () Bool)

(assert (=> b!72797 (= e!47612 tp_is_empty!2473)))

(declare-fun b!72798 () Bool)

(declare-fun e!47625 () Bool)

(declare-fun mapRes!3165 () Bool)

(assert (=> b!72798 (= e!47621 (and e!47625 mapRes!3165))))

(declare-fun condMapEmpty!3166 () Bool)

(declare-fun mapDefault!3165 () ValueCell!893)

(assert (=> b!72798 (= condMapEmpty!3166 (= (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3165)))))

(declare-fun b!72799 () Bool)

(declare-fun Unit!2079 () Unit!2076)

(assert (=> b!72799 (= e!47627 Unit!2079)))

(declare-fun b!72800 () Bool)

(declare-fun e!47623 () Bool)

(declare-fun e!47611 () Bool)

(assert (=> b!72800 (= e!47623 e!47611)))

(declare-fun mapIsEmpty!3165 () Bool)

(assert (=> mapIsEmpty!3165 mapRes!3166))

(declare-fun b!72801 () Bool)

(declare-fun res!38665 () Bool)

(assert (=> b!72801 (=> (not res!38665) (not e!47613))))

(assert (=> b!72801 (= res!38665 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6179 newMap!16)) (_size!396 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!72802 () Bool)

(assert (=> b!72802 (= e!47625 tp_is_empty!2473)))

(declare-fun b!72803 () Bool)

(declare-fun e!47622 () Bool)

(declare-fun e!47615 () Bool)

(assert (=> b!72803 (= e!47622 (not e!47615))))

(declare-fun res!38667 () Bool)

(assert (=> b!72803 (=> res!38667 e!47615)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!72803 (= res!38667 (not (validMask!0 (mask!6179 (v!2532 (underlying!262 thiss!992))))))))

(declare-datatypes ((tuple2!2120 0))(
  ( (tuple2!2121 (_1!1071 (_ BitVec 64)) (_2!1071 V!2945)) )
))
(declare-datatypes ((List!1474 0))(
  ( (Nil!1471) (Cons!1470 (h!2057 tuple2!2120) (t!5023 List!1474)) )
))
(declare-datatypes ((ListLongMap!1401 0))(
  ( (ListLongMap!1402 (toList!716 List!1474)) )
))
(declare-fun lt!32489 () ListLongMap!1401)

(declare-fun lt!32485 () tuple2!2120)

(declare-fun lt!32492 () tuple2!2120)

(declare-fun +!93 (ListLongMap!1401 tuple2!2120) ListLongMap!1401)

(assert (=> b!72803 (= (+!93 (+!93 lt!32489 lt!32485) lt!32492) (+!93 (+!93 lt!32489 lt!32492) lt!32485))))

(assert (=> b!72803 (= lt!32492 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun lt!32495 () V!2945)

(assert (=> b!72803 (= lt!32485 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))

(declare-fun lt!32493 () Unit!2076)

(declare-fun addCommutativeForDiffKeys!13 (ListLongMap!1401 (_ BitVec 64) V!2945 (_ BitVec 64) V!2945) Unit!2076)

(assert (=> b!72803 (= lt!32493 (addCommutativeForDiffKeys!13 lt!32489 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!58 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) Int) ListLongMap!1401)

(assert (=> b!72803 (= lt!32489 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!72804 () Bool)

(declare-fun e!47617 () Bool)

(assert (=> b!72804 (= e!47617 e!47622)))

(declare-fun res!38672 () Bool)

(assert (=> b!72804 (=> (not res!38672) (not e!47622))))

(declare-datatypes ((tuple2!2122 0))(
  ( (tuple2!2123 (_1!1072 Bool) (_2!1072 LongMapFixedSize!694)) )
))
(declare-fun lt!32487 () tuple2!2122)

(assert (=> b!72804 (= res!38672 (and (_1!1072 lt!32487) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!32494 () Unit!2076)

(assert (=> b!72804 (= lt!32494 e!47627)))

(declare-fun lt!32488 () ListLongMap!1401)

(declare-fun c!10781 () Bool)

(declare-fun contains!720 (ListLongMap!1401 (_ BitVec 64)) Bool)

(assert (=> b!72804 (= c!10781 (contains!720 lt!32488 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun update!110 (LongMapFixedSize!694 (_ BitVec 64) V!2945) tuple2!2122)

(assert (=> b!72804 (= lt!32487 (update!110 newMap!16 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))

(declare-fun b!72805 () Bool)

(declare-fun e!47619 () Bool)

(assert (=> b!72805 (= e!47613 e!47619)))

(declare-fun res!38670 () Bool)

(assert (=> b!72805 (=> (not res!38670) (not e!47619))))

(declare-fun lt!32491 () ListLongMap!1401)

(assert (=> b!72805 (= res!38670 (= lt!32491 lt!32488))))

(declare-fun map!1160 (LongMapFixedSize!694) ListLongMap!1401)

(assert (=> b!72805 (= lt!32488 (map!1160 newMap!16))))

(declare-fun getCurrentListMap!414 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) Int) ListLongMap!1401)

(assert (=> b!72805 (= lt!32491 (getCurrentListMap!414 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun mapNonEmpty!3166 () Bool)

(declare-fun tp!8515 () Bool)

(assert (=> mapNonEmpty!3166 (= mapRes!3165 (and tp!8515 e!47612))))

(declare-fun mapRest!3166 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapValue!3166 () ValueCell!893)

(declare-fun mapKey!3165 () (_ BitVec 32))

(assert (=> mapNonEmpty!3166 (= (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (store mapRest!3166 mapKey!3165 mapValue!3166))))

(declare-fun res!38669 () Bool)

(assert (=> start!9756 (=> (not res!38669) (not e!47613))))

(declare-fun valid!306 (LongMap!502) Bool)

(assert (=> start!9756 (= res!38669 (valid!306 thiss!992))))

(assert (=> start!9756 e!47613))

(assert (=> start!9756 e!47623))

(assert (=> start!9756 true))

(assert (=> start!9756 e!47618))

(declare-fun b!72806 () Bool)

(assert (=> b!72806 (= e!47619 e!47617)))

(declare-fun res!38666 () Bool)

(assert (=> b!72806 (=> (not res!38666) (not e!47617))))

(assert (=> b!72806 (= res!38666 (and (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1149 (ValueCell!893 V!2945) V!2945)

(declare-fun dynLambda!329 (Int (_ BitVec 64)) V!2945)

(assert (=> b!72806 (= lt!32495 (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) from!355) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72807 () Bool)

(assert (=> b!72807 (= e!47611 e!47624)))

(declare-fun b!72808 () Bool)

(assert (=> b!72808 (= e!47615 (or (not (= (size!2089 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6179 (v!2532 (underlying!262 thiss!992)))))) (not (= (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (size!2089 (_values!2195 (v!2532 (underlying!262 thiss!992)))))) (bvslt (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!72809 () Bool)

(declare-fun res!38668 () Bool)

(assert (=> b!72809 (=> (not res!38668) (not e!47613))))

(declare-fun valid!307 (LongMapFixedSize!694) Bool)

(assert (=> b!72809 (= res!38668 (valid!307 newMap!16))))

(declare-fun mapIsEmpty!3166 () Bool)

(assert (=> mapIsEmpty!3166 mapRes!3165))

(declare-fun b!72810 () Bool)

(assert (=> b!72810 (= e!47620 tp_is_empty!2473)))

(assert (= (and start!9756 res!38669) b!72791))

(assert (= (and b!72791 res!38671) b!72809))

(assert (= (and b!72809 res!38668) b!72801))

(assert (= (and b!72801 res!38665) b!72805))

(assert (= (and b!72805 res!38670) b!72806))

(assert (= (and b!72806 res!38666) b!72804))

(assert (= (and b!72804 c!10781) b!72795))

(assert (= (and b!72804 (not c!10781)) b!72799))

(assert (= (and b!72804 res!38672) b!72803))

(assert (= (and b!72803 (not res!38667)) b!72808))

(assert (= (and b!72798 condMapEmpty!3166) mapIsEmpty!3166))

(assert (= (and b!72798 (not condMapEmpty!3166)) mapNonEmpty!3166))

(get-info :version)

(assert (= (and mapNonEmpty!3166 ((_ is ValueCellFull!893) mapValue!3166)) b!72797))

(assert (= (and b!72798 ((_ is ValueCellFull!893) mapDefault!3165)) b!72802))

(assert (= b!72793 b!72798))

(assert (= b!72807 b!72793))

(assert (= b!72800 b!72807))

(assert (= start!9756 b!72800))

(assert (= (and b!72796 condMapEmpty!3165) mapIsEmpty!3165))

(assert (= (and b!72796 (not condMapEmpty!3165)) mapNonEmpty!3165))

(assert (= (and mapNonEmpty!3165 ((_ is ValueCellFull!893) mapValue!3165)) b!72794))

(assert (= (and b!72796 ((_ is ValueCellFull!893) mapDefault!3166)) b!72810))

(assert (= b!72792 b!72796))

(assert (= start!9756 b!72792))

(declare-fun b_lambda!3279 () Bool)

(assert (=> (not b_lambda!3279) (not b!72806)))

(declare-fun t!5019 () Bool)

(declare-fun tb!1521 () Bool)

(assert (=> (and b!72793 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))) t!5019) tb!1521))

(declare-fun result!2669 () Bool)

(assert (=> tb!1521 (= result!2669 tp_is_empty!2473)))

(assert (=> b!72806 t!5019))

(declare-fun b_and!4473 () Bool)

(assert (= b_and!4469 (and (=> t!5019 result!2669) b_and!4473)))

(declare-fun tb!1523 () Bool)

(declare-fun t!5021 () Bool)

(assert (=> (and b!72792 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))) t!5021) tb!1523))

(declare-fun result!2673 () Bool)

(assert (= result!2673 result!2669))

(assert (=> b!72806 t!5021))

(declare-fun b_and!4475 () Bool)

(assert (= b_and!4471 (and (=> t!5021 result!2673) b_and!4475)))

(declare-fun m!71143 () Bool)

(assert (=> b!72806 m!71143))

(declare-fun m!71145 () Bool)

(assert (=> b!72806 m!71145))

(declare-fun m!71147 () Bool)

(assert (=> b!72806 m!71147))

(assert (=> b!72806 m!71145))

(assert (=> b!72806 m!71147))

(declare-fun m!71149 () Bool)

(assert (=> b!72806 m!71149))

(declare-fun m!71151 () Bool)

(assert (=> b!72803 m!71151))

(assert (=> b!72803 m!71143))

(declare-fun m!71153 () Bool)

(assert (=> b!72803 m!71153))

(declare-fun m!71155 () Bool)

(assert (=> b!72803 m!71155))

(declare-fun m!71157 () Bool)

(assert (=> b!72803 m!71157))

(declare-fun m!71159 () Bool)

(assert (=> b!72803 m!71159))

(assert (=> b!72803 m!71159))

(declare-fun m!71161 () Bool)

(assert (=> b!72803 m!71161))

(assert (=> b!72803 m!71143))

(assert (=> b!72803 m!71157))

(declare-fun m!71163 () Bool)

(assert (=> b!72803 m!71163))

(declare-fun m!71165 () Bool)

(assert (=> b!72809 m!71165))

(declare-fun m!71167 () Bool)

(assert (=> b!72792 m!71167))

(declare-fun m!71169 () Bool)

(assert (=> b!72792 m!71169))

(declare-fun m!71171 () Bool)

(assert (=> mapNonEmpty!3166 m!71171))

(declare-fun m!71173 () Bool)

(assert (=> b!72793 m!71173))

(declare-fun m!71175 () Bool)

(assert (=> b!72793 m!71175))

(assert (=> b!72804 m!71143))

(assert (=> b!72804 m!71143))

(declare-fun m!71177 () Bool)

(assert (=> b!72804 m!71177))

(assert (=> b!72804 m!71143))

(declare-fun m!71179 () Bool)

(assert (=> b!72804 m!71179))

(declare-fun m!71181 () Bool)

(assert (=> mapNonEmpty!3165 m!71181))

(declare-fun m!71183 () Bool)

(assert (=> b!72795 m!71183))

(declare-fun m!71185 () Bool)

(assert (=> b!72795 m!71185))

(assert (=> b!72795 m!71143))

(declare-fun m!71187 () Bool)

(assert (=> b!72795 m!71187))

(assert (=> b!72795 m!71143))

(assert (=> b!72795 m!71143))

(declare-fun m!71189 () Bool)

(assert (=> b!72795 m!71189))

(assert (=> b!72795 m!71143))

(declare-fun m!71191 () Bool)

(assert (=> b!72795 m!71191))

(declare-fun m!71193 () Bool)

(assert (=> start!9756 m!71193))

(declare-fun m!71195 () Bool)

(assert (=> b!72805 m!71195))

(declare-fun m!71197 () Bool)

(assert (=> b!72805 m!71197))

(check-sat (not b_lambda!3279) (not b!72805) (not mapNonEmpty!3166) tp_is_empty!2473 (not b!72795) (not b_next!2113) b_and!4473 (not b!72792) (not b!72806) (not start!9756) (not b_next!2115) (not b!72804) (not b!72809) (not b!72803) b_and!4475 (not mapNonEmpty!3165) (not b!72793))
(check-sat b_and!4473 b_and!4475 (not b_next!2113) (not b_next!2115))
(get-model)

(declare-fun b_lambda!3285 () Bool)

(assert (= b_lambda!3279 (or (and b!72793 b_free!2113) (and b!72792 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))) b_lambda!3285)))

(check-sat (not b_lambda!3285) (not b!72805) (not mapNonEmpty!3166) tp_is_empty!2473 (not b!72795) (not b_next!2113) b_and!4473 (not b!72792) (not b!72806) (not start!9756) (not b_next!2115) (not b!72804) (not b!72809) (not b!72803) b_and!4475 (not mapNonEmpty!3165) (not b!72793))
(check-sat b_and!4473 b_and!4475 (not b_next!2113) (not b_next!2115))
(get-model)

(declare-fun d!16843 () Bool)

(declare-fun e!47738 () Bool)

(assert (=> d!16843 e!47738))

(declare-fun res!38725 () Bool)

(assert (=> d!16843 (=> (not res!38725) (not e!47738))))

(declare-fun lt!32579 () ListLongMap!1401)

(assert (=> d!16843 (= res!38725 (contains!720 lt!32579 (_1!1071 lt!32492)))))

(declare-fun lt!32580 () List!1474)

(assert (=> d!16843 (= lt!32579 (ListLongMap!1402 lt!32580))))

(declare-fun lt!32578 () Unit!2076)

(declare-fun lt!32577 () Unit!2076)

(assert (=> d!16843 (= lt!32578 lt!32577)))

(declare-datatypes ((Option!140 0))(
  ( (Some!139 (v!2538 V!2945)) (None!138) )
))
(declare-fun getValueByKey!134 (List!1474 (_ BitVec 64)) Option!140)

(assert (=> d!16843 (= (getValueByKey!134 lt!32580 (_1!1071 lt!32492)) (Some!139 (_2!1071 lt!32492)))))

(declare-fun lemmaContainsTupThenGetReturnValue!51 (List!1474 (_ BitVec 64) V!2945) Unit!2076)

(assert (=> d!16843 (= lt!32577 (lemmaContainsTupThenGetReturnValue!51 lt!32580 (_1!1071 lt!32492) (_2!1071 lt!32492)))))

(declare-fun insertStrictlySorted!54 (List!1474 (_ BitVec 64) V!2945) List!1474)

(assert (=> d!16843 (= lt!32580 (insertStrictlySorted!54 (toList!716 lt!32489) (_1!1071 lt!32492) (_2!1071 lt!32492)))))

(assert (=> d!16843 (= (+!93 lt!32489 lt!32492) lt!32579)))

(declare-fun b!72941 () Bool)

(declare-fun res!38726 () Bool)

(assert (=> b!72941 (=> (not res!38726) (not e!47738))))

(assert (=> b!72941 (= res!38726 (= (getValueByKey!134 (toList!716 lt!32579) (_1!1071 lt!32492)) (Some!139 (_2!1071 lt!32492))))))

(declare-fun b!72942 () Bool)

(declare-fun contains!721 (List!1474 tuple2!2120) Bool)

(assert (=> b!72942 (= e!47738 (contains!721 (toList!716 lt!32579) lt!32492))))

(assert (= (and d!16843 res!38725) b!72941))

(assert (= (and b!72941 res!38726) b!72942))

(declare-fun m!71311 () Bool)

(assert (=> d!16843 m!71311))

(declare-fun m!71313 () Bool)

(assert (=> d!16843 m!71313))

(declare-fun m!71315 () Bool)

(assert (=> d!16843 m!71315))

(declare-fun m!71317 () Bool)

(assert (=> d!16843 m!71317))

(declare-fun m!71319 () Bool)

(assert (=> b!72941 m!71319))

(declare-fun m!71321 () Bool)

(assert (=> b!72942 m!71321))

(assert (=> b!72803 d!16843))

(declare-fun d!16845 () Bool)

(declare-fun e!47739 () Bool)

(assert (=> d!16845 e!47739))

(declare-fun res!38727 () Bool)

(assert (=> d!16845 (=> (not res!38727) (not e!47739))))

(declare-fun lt!32583 () ListLongMap!1401)

(assert (=> d!16845 (= res!38727 (contains!720 lt!32583 (_1!1071 lt!32485)))))

(declare-fun lt!32584 () List!1474)

(assert (=> d!16845 (= lt!32583 (ListLongMap!1402 lt!32584))))

(declare-fun lt!32582 () Unit!2076)

(declare-fun lt!32581 () Unit!2076)

(assert (=> d!16845 (= lt!32582 lt!32581)))

(assert (=> d!16845 (= (getValueByKey!134 lt!32584 (_1!1071 lt!32485)) (Some!139 (_2!1071 lt!32485)))))

(assert (=> d!16845 (= lt!32581 (lemmaContainsTupThenGetReturnValue!51 lt!32584 (_1!1071 lt!32485) (_2!1071 lt!32485)))))

(assert (=> d!16845 (= lt!32584 (insertStrictlySorted!54 (toList!716 lt!32489) (_1!1071 lt!32485) (_2!1071 lt!32485)))))

(assert (=> d!16845 (= (+!93 lt!32489 lt!32485) lt!32583)))

(declare-fun b!72943 () Bool)

(declare-fun res!38728 () Bool)

(assert (=> b!72943 (=> (not res!38728) (not e!47739))))

(assert (=> b!72943 (= res!38728 (= (getValueByKey!134 (toList!716 lt!32583) (_1!1071 lt!32485)) (Some!139 (_2!1071 lt!32485))))))

(declare-fun b!72944 () Bool)

(assert (=> b!72944 (= e!47739 (contains!721 (toList!716 lt!32583) lt!32485))))

(assert (= (and d!16845 res!38727) b!72943))

(assert (= (and b!72943 res!38728) b!72944))

(declare-fun m!71323 () Bool)

(assert (=> d!16845 m!71323))

(declare-fun m!71325 () Bool)

(assert (=> d!16845 m!71325))

(declare-fun m!71327 () Bool)

(assert (=> d!16845 m!71327))

(declare-fun m!71329 () Bool)

(assert (=> d!16845 m!71329))

(declare-fun m!71331 () Bool)

(assert (=> b!72943 m!71331))

(declare-fun m!71333 () Bool)

(assert (=> b!72944 m!71333))

(assert (=> b!72803 d!16845))

(declare-fun d!16847 () Bool)

(assert (=> d!16847 (= (+!93 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (+!93 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(declare-fun lt!32587 () Unit!2076)

(declare-fun choose!417 (ListLongMap!1401 (_ BitVec 64) V!2945 (_ BitVec 64) V!2945) Unit!2076)

(assert (=> d!16847 (= lt!32587 (choose!417 lt!32489 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))

(assert (=> d!16847 (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16847 (= (addCommutativeForDiffKeys!13 lt!32489 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) lt!32587)))

(declare-fun bs!3150 () Bool)

(assert (= bs!3150 d!16847))

(declare-fun m!71335 () Bool)

(assert (=> bs!3150 m!71335))

(declare-fun m!71337 () Bool)

(assert (=> bs!3150 m!71337))

(declare-fun m!71339 () Bool)

(assert (=> bs!3150 m!71339))

(assert (=> bs!3150 m!71143))

(declare-fun m!71341 () Bool)

(assert (=> bs!3150 m!71341))

(assert (=> bs!3150 m!71337))

(assert (=> bs!3150 m!71335))

(declare-fun m!71343 () Bool)

(assert (=> bs!3150 m!71343))

(assert (=> b!72803 d!16847))

(declare-fun d!16849 () Bool)

(declare-fun e!47740 () Bool)

(assert (=> d!16849 e!47740))

(declare-fun res!38729 () Bool)

(assert (=> d!16849 (=> (not res!38729) (not e!47740))))

(declare-fun lt!32590 () ListLongMap!1401)

(assert (=> d!16849 (= res!38729 (contains!720 lt!32590 (_1!1071 lt!32492)))))

(declare-fun lt!32591 () List!1474)

(assert (=> d!16849 (= lt!32590 (ListLongMap!1402 lt!32591))))

(declare-fun lt!32589 () Unit!2076)

(declare-fun lt!32588 () Unit!2076)

(assert (=> d!16849 (= lt!32589 lt!32588)))

(assert (=> d!16849 (= (getValueByKey!134 lt!32591 (_1!1071 lt!32492)) (Some!139 (_2!1071 lt!32492)))))

(assert (=> d!16849 (= lt!32588 (lemmaContainsTupThenGetReturnValue!51 lt!32591 (_1!1071 lt!32492) (_2!1071 lt!32492)))))

(assert (=> d!16849 (= lt!32591 (insertStrictlySorted!54 (toList!716 (+!93 lt!32489 lt!32485)) (_1!1071 lt!32492) (_2!1071 lt!32492)))))

(assert (=> d!16849 (= (+!93 (+!93 lt!32489 lt!32485) lt!32492) lt!32590)))

(declare-fun b!72945 () Bool)

(declare-fun res!38730 () Bool)

(assert (=> b!72945 (=> (not res!38730) (not e!47740))))

(assert (=> b!72945 (= res!38730 (= (getValueByKey!134 (toList!716 lt!32590) (_1!1071 lt!32492)) (Some!139 (_2!1071 lt!32492))))))

(declare-fun b!72946 () Bool)

(assert (=> b!72946 (= e!47740 (contains!721 (toList!716 lt!32590) lt!32492))))

(assert (= (and d!16849 res!38729) b!72945))

(assert (= (and b!72945 res!38730) b!72946))

(declare-fun m!71345 () Bool)

(assert (=> d!16849 m!71345))

(declare-fun m!71347 () Bool)

(assert (=> d!16849 m!71347))

(declare-fun m!71349 () Bool)

(assert (=> d!16849 m!71349))

(declare-fun m!71351 () Bool)

(assert (=> d!16849 m!71351))

(declare-fun m!71353 () Bool)

(assert (=> b!72945 m!71353))

(declare-fun m!71355 () Bool)

(assert (=> b!72946 m!71355))

(assert (=> b!72803 d!16849))

(declare-fun d!16851 () Bool)

(assert (=> d!16851 (= (validMask!0 (mask!6179 (v!2532 (underlying!262 thiss!992)))) (and (or (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000001111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000011111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000001111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000011111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000001111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000011111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000001111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000011111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000001111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000011111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000001111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000011111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000111111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000001111111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000011111111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000111111111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000001111111111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000011111111111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000111111111111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00001111111111111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00011111111111111111111111111111) (= (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!72803 d!16851))

(declare-fun d!16853 () Bool)

(declare-fun e!47741 () Bool)

(assert (=> d!16853 e!47741))

(declare-fun res!38731 () Bool)

(assert (=> d!16853 (=> (not res!38731) (not e!47741))))

(declare-fun lt!32594 () ListLongMap!1401)

(assert (=> d!16853 (= res!38731 (contains!720 lt!32594 (_1!1071 lt!32485)))))

(declare-fun lt!32595 () List!1474)

(assert (=> d!16853 (= lt!32594 (ListLongMap!1402 lt!32595))))

(declare-fun lt!32593 () Unit!2076)

(declare-fun lt!32592 () Unit!2076)

(assert (=> d!16853 (= lt!32593 lt!32592)))

(assert (=> d!16853 (= (getValueByKey!134 lt!32595 (_1!1071 lt!32485)) (Some!139 (_2!1071 lt!32485)))))

(assert (=> d!16853 (= lt!32592 (lemmaContainsTupThenGetReturnValue!51 lt!32595 (_1!1071 lt!32485) (_2!1071 lt!32485)))))

(assert (=> d!16853 (= lt!32595 (insertStrictlySorted!54 (toList!716 (+!93 lt!32489 lt!32492)) (_1!1071 lt!32485) (_2!1071 lt!32485)))))

(assert (=> d!16853 (= (+!93 (+!93 lt!32489 lt!32492) lt!32485) lt!32594)))

(declare-fun b!72947 () Bool)

(declare-fun res!38732 () Bool)

(assert (=> b!72947 (=> (not res!38732) (not e!47741))))

(assert (=> b!72947 (= res!38732 (= (getValueByKey!134 (toList!716 lt!32594) (_1!1071 lt!32485)) (Some!139 (_2!1071 lt!32485))))))

(declare-fun b!72948 () Bool)

(assert (=> b!72948 (= e!47741 (contains!721 (toList!716 lt!32594) lt!32485))))

(assert (= (and d!16853 res!38731) b!72947))

(assert (= (and b!72947 res!38732) b!72948))

(declare-fun m!71357 () Bool)

(assert (=> d!16853 m!71357))

(declare-fun m!71359 () Bool)

(assert (=> d!16853 m!71359))

(declare-fun m!71361 () Bool)

(assert (=> d!16853 m!71361))

(declare-fun m!71363 () Bool)

(assert (=> d!16853 m!71363))

(declare-fun m!71365 () Bool)

(assert (=> b!72947 m!71365))

(declare-fun m!71367 () Bool)

(assert (=> b!72948 m!71367))

(assert (=> b!72803 d!16853))

(declare-fun d!16855 () Bool)

(declare-fun e!47761 () Bool)

(assert (=> d!16855 e!47761))

(declare-fun res!38741 () Bool)

(assert (=> d!16855 (=> (not res!38741) (not e!47761))))

(declare-fun lt!32614 () ListLongMap!1401)

(assert (=> d!16855 (= res!38741 (not (contains!720 lt!32614 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!47762 () ListLongMap!1401)

(assert (=> d!16855 (= lt!32614 e!47762)))

(declare-fun c!10799 () Bool)

(assert (=> d!16855 (= c!10799 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!16855 (validMask!0 (mask!6179 (v!2532 (underlying!262 thiss!992))))))

(assert (=> d!16855 (= (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))) lt!32614)))

(declare-fun b!72973 () Bool)

(declare-fun e!47760 () ListLongMap!1401)

(declare-fun call!6334 () ListLongMap!1401)

(assert (=> b!72973 (= e!47760 call!6334)))

(declare-fun bm!6331 () Bool)

(assert (=> bm!6331 (= call!6334 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!72974 () Bool)

(declare-fun lt!32611 () Unit!2076)

(declare-fun lt!32610 () Unit!2076)

(assert (=> b!72974 (= lt!32611 lt!32610)))

(declare-fun lt!32613 () ListLongMap!1401)

(declare-fun lt!32612 () (_ BitVec 64))

(declare-fun lt!32615 () (_ BitVec 64))

(declare-fun lt!32616 () V!2945)

(assert (=> b!72974 (not (contains!720 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)) lt!32615))))

(declare-fun addStillNotContains!26 (ListLongMap!1401 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2076)

(assert (=> b!72974 (= lt!32610 (addStillNotContains!26 lt!32613 lt!32612 lt!32616 lt!32615))))

(assert (=> b!72974 (= lt!32615 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!72974 (= lt!32616 (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!72974 (= lt!32612 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!72974 (= lt!32613 call!6334)))

(assert (=> b!72974 (= e!47760 (+!93 call!6334 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!72975 () Bool)

(declare-fun e!47757 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!72975 (= e!47757 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!72975 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!72976 () Bool)

(declare-fun e!47759 () Bool)

(assert (=> b!72976 (= e!47761 e!47759)))

(declare-fun c!10798 () Bool)

(assert (=> b!72976 (= c!10798 e!47757)))

(declare-fun res!38744 () Bool)

(assert (=> b!72976 (=> (not res!38744) (not e!47757))))

(assert (=> b!72976 (= res!38744 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!72977 () Bool)

(declare-fun res!38743 () Bool)

(assert (=> b!72977 (=> (not res!38743) (not e!47761))))

(assert (=> b!72977 (= res!38743 (not (contains!720 lt!32614 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72978 () Bool)

(declare-fun e!47758 () Bool)

(assert (=> b!72978 (= e!47759 e!47758)))

(assert (=> b!72978 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun res!38742 () Bool)

(assert (=> b!72978 (= res!38742 (contains!720 lt!32614 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!72978 (=> (not res!38742) (not e!47758))))

(declare-fun b!72979 () Bool)

(assert (=> b!72979 (= e!47762 e!47760)))

(declare-fun c!10796 () Bool)

(assert (=> b!72979 (= c!10796 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!72980 () Bool)

(declare-fun e!47756 () Bool)

(assert (=> b!72980 (= e!47759 e!47756)))

(declare-fun c!10797 () Bool)

(assert (=> b!72980 (= c!10797 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!72981 () Bool)

(assert (=> b!72981 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> b!72981 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_values!2195 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun apply!75 (ListLongMap!1401 (_ BitVec 64)) V!2945)

(assert (=> b!72981 (= e!47758 (= (apply!75 lt!32614 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!72982 () Bool)

(declare-fun isEmpty!322 (ListLongMap!1401) Bool)

(assert (=> b!72982 (= e!47756 (isEmpty!322 lt!32614))))

(declare-fun b!72983 () Bool)

(assert (=> b!72983 (= e!47762 (ListLongMap!1402 Nil!1471))))

(declare-fun b!72984 () Bool)

(assert (=> b!72984 (= e!47756 (= lt!32614 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!16855 c!10799) b!72983))

(assert (= (and d!16855 (not c!10799)) b!72979))

(assert (= (and b!72979 c!10796) b!72974))

(assert (= (and b!72979 (not c!10796)) b!72973))

(assert (= (or b!72974 b!72973) bm!6331))

(assert (= (and d!16855 res!38741) b!72977))

(assert (= (and b!72977 res!38743) b!72976))

(assert (= (and b!72976 res!38744) b!72975))

(assert (= (and b!72976 c!10798) b!72978))

(assert (= (and b!72976 (not c!10798)) b!72980))

(assert (= (and b!72978 res!38742) b!72981))

(assert (= (and b!72980 c!10797) b!72984))

(assert (= (and b!72980 (not c!10797)) b!72982))

(declare-fun b_lambda!3287 () Bool)

(assert (=> (not b_lambda!3287) (not b!72974)))

(assert (=> b!72974 t!5019))

(declare-fun b_and!4493 () Bool)

(assert (= b_and!4473 (and (=> t!5019 result!2669) b_and!4493)))

(assert (=> b!72974 t!5021))

(declare-fun b_and!4495 () Bool)

(assert (= b_and!4475 (and (=> t!5021 result!2673) b_and!4495)))

(declare-fun b_lambda!3289 () Bool)

(assert (=> (not b_lambda!3289) (not b!72981)))

(assert (=> b!72981 t!5019))

(declare-fun b_and!4497 () Bool)

(assert (= b_and!4493 (and (=> t!5019 result!2669) b_and!4497)))

(assert (=> b!72981 t!5021))

(declare-fun b_and!4499 () Bool)

(assert (= b_and!4495 (and (=> t!5021 result!2673) b_and!4499)))

(declare-fun m!71369 () Bool)

(assert (=> b!72982 m!71369))

(declare-fun m!71371 () Bool)

(assert (=> b!72984 m!71371))

(declare-fun m!71373 () Bool)

(assert (=> b!72974 m!71373))

(assert (=> b!72974 m!71147))

(declare-fun m!71375 () Bool)

(assert (=> b!72974 m!71375))

(declare-fun m!71377 () Bool)

(assert (=> b!72974 m!71377))

(assert (=> b!72974 m!71377))

(declare-fun m!71379 () Bool)

(assert (=> b!72974 m!71379))

(declare-fun m!71381 () Bool)

(assert (=> b!72974 m!71381))

(declare-fun m!71383 () Bool)

(assert (=> b!72974 m!71383))

(declare-fun m!71385 () Bool)

(assert (=> b!72974 m!71385))

(assert (=> b!72974 m!71373))

(assert (=> b!72974 m!71147))

(assert (=> b!72981 m!71373))

(assert (=> b!72981 m!71147))

(assert (=> b!72981 m!71375))

(assert (=> b!72981 m!71385))

(assert (=> b!72981 m!71385))

(declare-fun m!71387 () Bool)

(assert (=> b!72981 m!71387))

(assert (=> b!72981 m!71373))

(assert (=> b!72981 m!71147))

(declare-fun m!71389 () Bool)

(assert (=> d!16855 m!71389))

(assert (=> d!16855 m!71151))

(assert (=> bm!6331 m!71371))

(assert (=> b!72978 m!71385))

(assert (=> b!72978 m!71385))

(declare-fun m!71391 () Bool)

(assert (=> b!72978 m!71391))

(assert (=> b!72975 m!71385))

(assert (=> b!72975 m!71385))

(declare-fun m!71393 () Bool)

(assert (=> b!72975 m!71393))

(declare-fun m!71395 () Bool)

(assert (=> b!72977 m!71395))

(assert (=> b!72979 m!71385))

(assert (=> b!72979 m!71385))

(assert (=> b!72979 m!71393))

(assert (=> b!72803 d!16855))

(declare-fun d!16857 () Bool)

(assert (=> d!16857 (= (array_inv!1139 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvsge (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!72793 d!16857))

(declare-fun d!16859 () Bool)

(assert (=> d!16859 (= (array_inv!1140 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvsge (size!2089 (_values!2195 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!72793 d!16859))

(declare-fun d!16861 () Bool)

(assert (=> d!16861 (= (valid!306 thiss!992) (valid!307 (v!2532 (underlying!262 thiss!992))))))

(declare-fun bs!3151 () Bool)

(assert (= bs!3151 d!16861))

(declare-fun m!71397 () Bool)

(assert (=> bs!3151 m!71397))

(assert (=> start!9756 d!16861))

(declare-fun d!16863 () Bool)

(declare-fun c!10802 () Bool)

(assert (=> d!16863 (= c!10802 ((_ is ValueCellFull!893) (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun e!47765 () V!2945)

(assert (=> d!16863 (= (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) from!355) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47765)))

(declare-fun b!72989 () Bool)

(declare-fun get!1151 (ValueCell!893 V!2945) V!2945)

(assert (=> b!72989 (= e!47765 (get!1151 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) from!355) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72990 () Bool)

(declare-fun get!1152 (ValueCell!893 V!2945) V!2945)

(assert (=> b!72990 (= e!47765 (get!1152 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) from!355) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16863 c!10802) b!72989))

(assert (= (and d!16863 (not c!10802)) b!72990))

(assert (=> b!72989 m!71145))

(assert (=> b!72989 m!71147))

(declare-fun m!71399 () Bool)

(assert (=> b!72989 m!71399))

(assert (=> b!72990 m!71145))

(assert (=> b!72990 m!71147))

(declare-fun m!71401 () Bool)

(assert (=> b!72990 m!71401))

(assert (=> b!72806 d!16863))

(declare-fun d!16865 () Bool)

(assert (=> d!16865 (= (array_inv!1139 (_keys!3864 newMap!16)) (bvsge (size!2088 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72792 d!16865))

(declare-fun d!16867 () Bool)

(assert (=> d!16867 (= (array_inv!1140 (_values!2195 newMap!16)) (bvsge (size!2089 (_values!2195 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72792 d!16867))

(declare-fun d!16869 () Bool)

(assert (=> d!16869 (= (map!1160 newMap!16) (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun bs!3152 () Bool)

(assert (= bs!3152 d!16869))

(declare-fun m!71403 () Bool)

(assert (=> bs!3152 m!71403))

(assert (=> b!72805 d!16869))

(declare-fun b!73033 () Bool)

(declare-fun e!47799 () Bool)

(assert (=> b!73033 (= e!47799 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73034 () Bool)

(declare-fun e!47802 () Bool)

(declare-fun e!47797 () Bool)

(assert (=> b!73034 (= e!47802 e!47797)))

(declare-fun c!10820 () Bool)

(assert (=> b!73034 (= c!10820 (not (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73035 () Bool)

(declare-fun e!47800 () Bool)

(declare-fun call!6353 () Bool)

(assert (=> b!73035 (= e!47800 (not call!6353))))

(declare-fun b!73036 () Bool)

(declare-fun e!47804 () Unit!2076)

(declare-fun Unit!2086 () Unit!2076)

(assert (=> b!73036 (= e!47804 Unit!2086)))

(declare-fun bm!6346 () Bool)

(declare-fun call!6354 () ListLongMap!1401)

(assert (=> bm!6346 (= call!6354 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!73037 () Bool)

(declare-fun e!47796 () Bool)

(assert (=> b!73037 (= e!47800 e!47796)))

(declare-fun res!38765 () Bool)

(assert (=> b!73037 (= res!38765 call!6353)))

(assert (=> b!73037 (=> (not res!38765) (not e!47796))))

(declare-fun bm!6347 () Bool)

(declare-fun call!6349 () ListLongMap!1401)

(declare-fun call!6355 () ListLongMap!1401)

(assert (=> bm!6347 (= call!6349 call!6355)))

(declare-fun b!73038 () Bool)

(declare-fun e!47793 () Bool)

(declare-fun e!47792 () Bool)

(assert (=> b!73038 (= e!47793 e!47792)))

(declare-fun res!38764 () Bool)

(assert (=> b!73038 (=> (not res!38764) (not e!47792))))

(declare-fun lt!32666 () ListLongMap!1401)

(assert (=> b!73038 (= res!38764 (contains!720 lt!32666 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73038 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun bm!6348 () Bool)

(assert (=> bm!6348 (= call!6355 call!6354)))

(declare-fun b!73039 () Bool)

(declare-fun lt!32662 () Unit!2076)

(assert (=> b!73039 (= e!47804 lt!32662)))

(declare-fun lt!32676 () ListLongMap!1401)

(assert (=> b!73039 (= lt!32676 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun lt!32681 () (_ BitVec 64))

(assert (=> b!73039 (= lt!32681 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32661 () (_ BitVec 64))

(assert (=> b!73039 (= lt!32661 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32675 () Unit!2076)

(declare-fun addStillContains!51 (ListLongMap!1401 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2076)

(assert (=> b!73039 (= lt!32675 (addStillContains!51 lt!32676 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32661))))

(assert (=> b!73039 (contains!720 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32661)))

(declare-fun lt!32670 () Unit!2076)

(assert (=> b!73039 (= lt!32670 lt!32675)))

(declare-fun lt!32679 () ListLongMap!1401)

(assert (=> b!73039 (= lt!32679 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun lt!32674 () (_ BitVec 64))

(assert (=> b!73039 (= lt!32674 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32678 () (_ BitVec 64))

(assert (=> b!73039 (= lt!32678 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32677 () Unit!2076)

(declare-fun addApplyDifferent!51 (ListLongMap!1401 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2076)

(assert (=> b!73039 (= lt!32677 (addApplyDifferent!51 lt!32679 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32678))))

(assert (=> b!73039 (= (apply!75 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32678) (apply!75 lt!32679 lt!32678))))

(declare-fun lt!32667 () Unit!2076)

(assert (=> b!73039 (= lt!32667 lt!32677)))

(declare-fun lt!32664 () ListLongMap!1401)

(assert (=> b!73039 (= lt!32664 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun lt!32665 () (_ BitVec 64))

(assert (=> b!73039 (= lt!32665 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32672 () (_ BitVec 64))

(assert (=> b!73039 (= lt!32672 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32680 () Unit!2076)

(assert (=> b!73039 (= lt!32680 (addApplyDifferent!51 lt!32664 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32672))))

(assert (=> b!73039 (= (apply!75 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32672) (apply!75 lt!32664 lt!32672))))

(declare-fun lt!32663 () Unit!2076)

(assert (=> b!73039 (= lt!32663 lt!32680)))

(declare-fun lt!32668 () ListLongMap!1401)

(assert (=> b!73039 (= lt!32668 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun lt!32673 () (_ BitVec 64))

(assert (=> b!73039 (= lt!32673 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32682 () (_ BitVec 64))

(assert (=> b!73039 (= lt!32682 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!73039 (= lt!32662 (addApplyDifferent!51 lt!32668 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32682))))

(assert (=> b!73039 (= (apply!75 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32682) (apply!75 lt!32668 lt!32682))))

(declare-fun bm!6349 () Bool)

(declare-fun call!6352 () ListLongMap!1401)

(declare-fun call!6351 () ListLongMap!1401)

(assert (=> bm!6349 (= call!6352 call!6351)))

(declare-fun b!73040 () Bool)

(declare-fun e!47794 () ListLongMap!1401)

(assert (=> b!73040 (= e!47794 call!6352)))

(declare-fun b!73041 () Bool)

(declare-fun res!38770 () Bool)

(assert (=> b!73041 (=> (not res!38770) (not e!47802))))

(assert (=> b!73041 (= res!38770 e!47800)))

(declare-fun c!10816 () Bool)

(assert (=> b!73041 (= c!10816 (not (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!73042 () Bool)

(declare-fun call!6350 () Bool)

(assert (=> b!73042 (= e!47797 (not call!6350))))

(declare-fun b!73043 () Bool)

(declare-fun e!47803 () ListLongMap!1401)

(assert (=> b!73043 (= e!47803 (+!93 call!6351 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!73044 () Bool)

(assert (=> b!73044 (= e!47803 e!47794)))

(declare-fun c!10817 () Bool)

(assert (=> b!73044 (= c!10817 (and (not (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!10815 () Bool)

(declare-fun bm!6350 () Bool)

(assert (=> bm!6350 (= call!6351 (+!93 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349)) (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73045 () Bool)

(declare-fun res!38763 () Bool)

(assert (=> b!73045 (=> (not res!38763) (not e!47802))))

(assert (=> b!73045 (= res!38763 e!47793)))

(declare-fun res!38768 () Bool)

(assert (=> b!73045 (=> res!38768 e!47793)))

(declare-fun e!47798 () Bool)

(assert (=> b!73045 (= res!38768 (not e!47798))))

(declare-fun res!38771 () Bool)

(assert (=> b!73045 (=> (not res!38771) (not e!47798))))

(assert (=> b!73045 (= res!38771 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!73046 () Bool)

(assert (=> b!73046 (= e!47796 (= (apply!75 lt!32666 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!73047 () Bool)

(declare-fun e!47801 () ListLongMap!1401)

(assert (=> b!73047 (= e!47801 call!6349)))

(declare-fun b!73048 () Bool)

(declare-fun e!47795 () Bool)

(assert (=> b!73048 (= e!47797 e!47795)))

(declare-fun res!38767 () Bool)

(assert (=> b!73048 (= res!38767 call!6350)))

(assert (=> b!73048 (=> (not res!38767) (not e!47795))))

(declare-fun bm!6351 () Bool)

(assert (=> bm!6351 (= call!6353 (contains!720 lt!32666 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16871 () Bool)

(assert (=> d!16871 e!47802))

(declare-fun res!38769 () Bool)

(assert (=> d!16871 (=> (not res!38769) (not e!47802))))

(assert (=> d!16871 (= res!38769 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun lt!32671 () ListLongMap!1401)

(assert (=> d!16871 (= lt!32666 lt!32671)))

(declare-fun lt!32669 () Unit!2076)

(assert (=> d!16871 (= lt!32669 e!47804)))

(declare-fun c!10818 () Bool)

(assert (=> d!16871 (= c!10818 e!47799)))

(declare-fun res!38766 () Bool)

(assert (=> d!16871 (=> (not res!38766) (not e!47799))))

(assert (=> d!16871 (= res!38766 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!16871 (= lt!32671 e!47803)))

(assert (=> d!16871 (= c!10815 (and (not (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16871 (validMask!0 (mask!6179 (v!2532 (underlying!262 thiss!992))))))

(assert (=> d!16871 (= (getCurrentListMap!414 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))) lt!32666)))

(declare-fun bm!6352 () Bool)

(assert (=> bm!6352 (= call!6350 (contains!720 lt!32666 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73049 () Bool)

(assert (=> b!73049 (= e!47801 call!6352)))

(declare-fun b!73050 () Bool)

(assert (=> b!73050 (= e!47792 (= (apply!75 lt!32666 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73050 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2089 (_values!2195 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> b!73050 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!73051 () Bool)

(assert (=> b!73051 (= e!47795 (= (apply!75 lt!32666 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!73052 () Bool)

(assert (=> b!73052 (= e!47798 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73053 () Bool)

(declare-fun c!10819 () Bool)

(assert (=> b!73053 (= c!10819 (and (not (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73053 (= e!47794 e!47801)))

(assert (= (and d!16871 c!10815) b!73043))

(assert (= (and d!16871 (not c!10815)) b!73044))

(assert (= (and b!73044 c!10817) b!73040))

(assert (= (and b!73044 (not c!10817)) b!73053))

(assert (= (and b!73053 c!10819) b!73049))

(assert (= (and b!73053 (not c!10819)) b!73047))

(assert (= (or b!73049 b!73047) bm!6347))

(assert (= (or b!73040 bm!6347) bm!6348))

(assert (= (or b!73040 b!73049) bm!6349))

(assert (= (or b!73043 bm!6348) bm!6346))

(assert (= (or b!73043 bm!6349) bm!6350))

(assert (= (and d!16871 res!38766) b!73033))

(assert (= (and d!16871 c!10818) b!73039))

(assert (= (and d!16871 (not c!10818)) b!73036))

(assert (= (and d!16871 res!38769) b!73045))

(assert (= (and b!73045 res!38771) b!73052))

(assert (= (and b!73045 (not res!38768)) b!73038))

(assert (= (and b!73038 res!38764) b!73050))

(assert (= (and b!73045 res!38763) b!73041))

(assert (= (and b!73041 c!10816) b!73037))

(assert (= (and b!73041 (not c!10816)) b!73035))

(assert (= (and b!73037 res!38765) b!73046))

(assert (= (or b!73037 b!73035) bm!6351))

(assert (= (and b!73041 res!38770) b!73034))

(assert (= (and b!73034 c!10820) b!73048))

(assert (= (and b!73034 (not c!10820)) b!73042))

(assert (= (and b!73048 res!38767) b!73051))

(assert (= (or b!73048 b!73042) bm!6352))

(declare-fun b_lambda!3291 () Bool)

(assert (=> (not b_lambda!3291) (not b!73050)))

(assert (=> b!73050 t!5019))

(declare-fun b_and!4501 () Bool)

(assert (= b_and!4497 (and (=> t!5019 result!2669) b_and!4501)))

(assert (=> b!73050 t!5021))

(declare-fun b_and!4503 () Bool)

(assert (= b_and!4499 (and (=> t!5021 result!2673) b_and!4503)))

(assert (=> b!73038 m!71385))

(assert (=> b!73038 m!71385))

(declare-fun m!71405 () Bool)

(assert (=> b!73038 m!71405))

(declare-fun m!71407 () Bool)

(assert (=> b!73039 m!71407))

(declare-fun m!71409 () Bool)

(assert (=> b!73039 m!71409))

(declare-fun m!71411 () Bool)

(assert (=> b!73039 m!71411))

(assert (=> b!73039 m!71385))

(declare-fun m!71413 () Bool)

(assert (=> b!73039 m!71413))

(declare-fun m!71415 () Bool)

(assert (=> b!73039 m!71415))

(declare-fun m!71417 () Bool)

(assert (=> b!73039 m!71417))

(declare-fun m!71419 () Bool)

(assert (=> b!73039 m!71419))

(declare-fun m!71421 () Bool)

(assert (=> b!73039 m!71421))

(declare-fun m!71423 () Bool)

(assert (=> b!73039 m!71423))

(assert (=> b!73039 m!71421))

(assert (=> b!73039 m!71407))

(declare-fun m!71425 () Bool)

(assert (=> b!73039 m!71425))

(declare-fun m!71427 () Bool)

(assert (=> b!73039 m!71427))

(assert (=> b!73039 m!71413))

(declare-fun m!71429 () Bool)

(assert (=> b!73039 m!71429))

(assert (=> b!73039 m!71425))

(declare-fun m!71431 () Bool)

(assert (=> b!73039 m!71431))

(assert (=> b!73039 m!71155))

(declare-fun m!71433 () Bool)

(assert (=> b!73039 m!71433))

(declare-fun m!71435 () Bool)

(assert (=> b!73039 m!71435))

(assert (=> b!73033 m!71385))

(assert (=> b!73033 m!71385))

(assert (=> b!73033 m!71393))

(declare-fun m!71437 () Bool)

(assert (=> bm!6352 m!71437))

(assert (=> bm!6346 m!71155))

(declare-fun m!71439 () Bool)

(assert (=> bm!6351 m!71439))

(assert (=> d!16871 m!71151))

(declare-fun m!71441 () Bool)

(assert (=> bm!6350 m!71441))

(declare-fun m!71443 () Bool)

(assert (=> b!73043 m!71443))

(declare-fun m!71445 () Bool)

(assert (=> b!73051 m!71445))

(assert (=> b!73052 m!71385))

(assert (=> b!73052 m!71385))

(assert (=> b!73052 m!71393))

(assert (=> b!73050 m!71147))

(assert (=> b!73050 m!71385))

(assert (=> b!73050 m!71385))

(declare-fun m!71447 () Bool)

(assert (=> b!73050 m!71447))

(assert (=> b!73050 m!71373))

(assert (=> b!73050 m!71147))

(assert (=> b!73050 m!71375))

(assert (=> b!73050 m!71373))

(declare-fun m!71449 () Bool)

(assert (=> b!73046 m!71449))

(assert (=> b!72805 d!16871))

(declare-fun d!16873 () Bool)

(declare-fun res!38778 () Bool)

(declare-fun e!47807 () Bool)

(assert (=> d!16873 (=> (not res!38778) (not e!47807))))

(declare-fun simpleValid!51 (LongMapFixedSize!694) Bool)

(assert (=> d!16873 (= res!38778 (simpleValid!51 newMap!16))))

(assert (=> d!16873 (= (valid!307 newMap!16) e!47807)))

(declare-fun b!73060 () Bool)

(declare-fun res!38779 () Bool)

(assert (=> b!73060 (=> (not res!38779) (not e!47807))))

(declare-fun arrayCountValidKeys!0 (array!3877 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!73060 (= res!38779 (= (arrayCountValidKeys!0 (_keys!3864 newMap!16) #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (_size!396 newMap!16)))))

(declare-fun b!73061 () Bool)

(declare-fun res!38780 () Bool)

(assert (=> b!73061 (=> (not res!38780) (not e!47807))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3877 (_ BitVec 32)) Bool)

(assert (=> b!73061 (= res!38780 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun b!73062 () Bool)

(assert (=> b!73062 (= e!47807 (arrayNoDuplicates!0 (_keys!3864 newMap!16) #b00000000000000000000000000000000 Nil!1470))))

(assert (= (and d!16873 res!38778) b!73060))

(assert (= (and b!73060 res!38779) b!73061))

(assert (= (and b!73061 res!38780) b!73062))

(declare-fun m!71451 () Bool)

(assert (=> d!16873 m!71451))

(declare-fun m!71453 () Bool)

(assert (=> b!73060 m!71453))

(declare-fun m!71455 () Bool)

(assert (=> b!73061 m!71455))

(declare-fun m!71457 () Bool)

(assert (=> b!73062 m!71457))

(assert (=> b!72809 d!16873))

(declare-fun d!16875 () Bool)

(assert (=> d!16875 (not (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32685 () Unit!2076)

(declare-fun choose!68 (array!3877 (_ BitVec 32) (_ BitVec 64) List!1473) Unit!2076)

(assert (=> d!16875 (= lt!32685 (choose!68 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470)))))

(assert (=> d!16875 (bvslt (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!16875 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470)) lt!32685)))

(declare-fun bs!3153 () Bool)

(assert (= bs!3153 d!16875))

(assert (=> bs!3153 m!71143))

(assert (=> bs!3153 m!71189))

(assert (=> bs!3153 m!71143))

(declare-fun m!71459 () Bool)

(assert (=> bs!3153 m!71459))

(assert (=> b!72795 d!16875))

(declare-fun d!16877 () Bool)

(assert (=> d!16877 (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) from!355 Nil!1470)))

(declare-fun lt!32688 () Unit!2076)

(declare-fun choose!39 (array!3877 (_ BitVec 32) (_ BitVec 32)) Unit!2076)

(assert (=> d!16877 (= lt!32688 (choose!39 (_keys!3864 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!16877 (bvslt (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!16877 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000 from!355) lt!32688)))

(declare-fun bs!3154 () Bool)

(assert (= bs!3154 d!16877))

(assert (=> bs!3154 m!71185))

(declare-fun m!71461 () Bool)

(assert (=> bs!3154 m!71461))

(assert (=> b!72795 d!16877))

(declare-fun d!16879 () Bool)

(declare-fun res!38785 () Bool)

(declare-fun e!47812 () Bool)

(assert (=> d!16879 (=> res!38785 e!47812)))

(assert (=> d!16879 (= res!38785 (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!16879 (= (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!47812)))

(declare-fun b!73067 () Bool)

(declare-fun e!47813 () Bool)

(assert (=> b!73067 (= e!47812 e!47813)))

(declare-fun res!38786 () Bool)

(assert (=> b!73067 (=> (not res!38786) (not e!47813))))

(assert (=> b!73067 (= res!38786 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!73068 () Bool)

(assert (=> b!73068 (= e!47813 (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!16879 (not res!38785)) b!73067))

(assert (= (and b!73067 res!38786) b!73068))

(assert (=> d!16879 m!71385))

(assert (=> b!73068 m!71143))

(declare-fun m!71463 () Bool)

(assert (=> b!73068 m!71463))

(assert (=> b!72795 d!16879))

(declare-fun d!16881 () Bool)

(declare-fun e!47816 () Bool)

(assert (=> d!16881 e!47816))

(declare-fun c!10823 () Bool)

(assert (=> d!16881 (= c!10823 (and (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!32691 () Unit!2076)

(declare-fun choose!418 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) (_ BitVec 32) Int) Unit!2076)

(assert (=> d!16881 (= lt!32691 (choose!418 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(assert (=> d!16881 (validMask!0 (mask!6179 (v!2532 (underlying!262 thiss!992))))))

(assert (=> d!16881 (= (lemmaListMapContainsThenArrayContainsFrom!44 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))) lt!32691)))

(declare-fun b!73073 () Bool)

(assert (=> b!73073 (= e!47816 (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!73074 () Bool)

(assert (=> b!73074 (= e!47816 (ite (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!16881 c!10823) b!73073))

(assert (= (and d!16881 (not c!10823)) b!73074))

(assert (=> d!16881 m!71143))

(declare-fun m!71465 () Bool)

(assert (=> d!16881 m!71465))

(assert (=> d!16881 m!71151))

(assert (=> b!73073 m!71143))

(assert (=> b!73073 m!71189))

(assert (=> b!72795 d!16881))

(declare-fun b!73085 () Bool)

(declare-fun e!47827 () Bool)

(declare-fun e!47828 () Bool)

(assert (=> b!73085 (= e!47827 e!47828)))

(declare-fun res!38794 () Bool)

(assert (=> b!73085 (=> (not res!38794) (not e!47828))))

(declare-fun e!47826 () Bool)

(assert (=> b!73085 (= res!38794 (not e!47826))))

(declare-fun res!38795 () Bool)

(assert (=> b!73085 (=> (not res!38795) (not e!47826))))

(assert (=> b!73085 (= res!38795 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun c!10826 () Bool)

(declare-fun call!6358 () Bool)

(declare-fun bm!6355 () Bool)

(assert (=> bm!6355 (= call!6358 (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)))))

(declare-fun b!73086 () Bool)

(declare-fun e!47825 () Bool)

(assert (=> b!73086 (= e!47828 e!47825)))

(assert (=> b!73086 (= c!10826 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun d!16883 () Bool)

(declare-fun res!38793 () Bool)

(assert (=> d!16883 (=> res!38793 e!47827)))

(assert (=> d!16883 (= res!38793 (bvsge from!355 (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!16883 (= (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) from!355 Nil!1470) e!47827)))

(declare-fun b!73087 () Bool)

(assert (=> b!73087 (= e!47825 call!6358)))

(declare-fun b!73088 () Bool)

(assert (=> b!73088 (= e!47825 call!6358)))

(declare-fun b!73089 () Bool)

(declare-fun contains!722 (List!1473 (_ BitVec 64)) Bool)

(assert (=> b!73089 (= e!47826 (contains!722 Nil!1470 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (= (and d!16883 (not res!38793)) b!73085))

(assert (= (and b!73085 res!38795) b!73089))

(assert (= (and b!73085 res!38794) b!73086))

(assert (= (and b!73086 c!10826) b!73088))

(assert (= (and b!73086 (not c!10826)) b!73087))

(assert (= (or b!73088 b!73087) bm!6355))

(assert (=> b!73085 m!71143))

(assert (=> b!73085 m!71143))

(declare-fun m!71467 () Bool)

(assert (=> b!73085 m!71467))

(assert (=> bm!6355 m!71143))

(declare-fun m!71469 () Bool)

(assert (=> bm!6355 m!71469))

(assert (=> b!73086 m!71143))

(assert (=> b!73086 m!71143))

(assert (=> b!73086 m!71467))

(assert (=> b!73089 m!71143))

(assert (=> b!73089 m!71143))

(declare-fun m!71471 () Bool)

(assert (=> b!73089 m!71471))

(assert (=> b!72795 d!16883))

(declare-fun d!16885 () Bool)

(declare-fun e!47833 () Bool)

(assert (=> d!16885 e!47833))

(declare-fun res!38798 () Bool)

(assert (=> d!16885 (=> res!38798 e!47833)))

(declare-fun lt!32701 () Bool)

(assert (=> d!16885 (= res!38798 (not lt!32701))))

(declare-fun lt!32703 () Bool)

(assert (=> d!16885 (= lt!32701 lt!32703)))

(declare-fun lt!32702 () Unit!2076)

(declare-fun e!47834 () Unit!2076)

(assert (=> d!16885 (= lt!32702 e!47834)))

(declare-fun c!10829 () Bool)

(assert (=> d!16885 (= c!10829 lt!32703)))

(declare-fun containsKey!137 (List!1474 (_ BitVec 64)) Bool)

(assert (=> d!16885 (= lt!32703 (containsKey!137 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!16885 (= (contains!720 lt!32488 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) lt!32701)))

(declare-fun b!73096 () Bool)

(declare-fun lt!32700 () Unit!2076)

(assert (=> b!73096 (= e!47834 lt!32700)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!85 (List!1474 (_ BitVec 64)) Unit!2076)

(assert (=> b!73096 (= lt!32700 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun isDefined!86 (Option!140) Bool)

(assert (=> b!73096 (isDefined!86 (getValueByKey!134 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73097 () Bool)

(declare-fun Unit!2087 () Unit!2076)

(assert (=> b!73097 (= e!47834 Unit!2087)))

(declare-fun b!73098 () Bool)

(assert (=> b!73098 (= e!47833 (isDefined!86 (getValueByKey!134 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (= (and d!16885 c!10829) b!73096))

(assert (= (and d!16885 (not c!10829)) b!73097))

(assert (= (and d!16885 (not res!38798)) b!73098))

(assert (=> d!16885 m!71143))

(declare-fun m!71473 () Bool)

(assert (=> d!16885 m!71473))

(assert (=> b!73096 m!71143))

(declare-fun m!71475 () Bool)

(assert (=> b!73096 m!71475))

(assert (=> b!73096 m!71143))

(declare-fun m!71477 () Bool)

(assert (=> b!73096 m!71477))

(assert (=> b!73096 m!71477))

(declare-fun m!71479 () Bool)

(assert (=> b!73096 m!71479))

(assert (=> b!73098 m!71143))

(assert (=> b!73098 m!71477))

(assert (=> b!73098 m!71477))

(assert (=> b!73098 m!71479))

(assert (=> b!72804 d!16885))

(declare-fun b!73183 () Bool)

(declare-fun lt!32777 () Unit!2076)

(declare-fun lt!32762 () Unit!2076)

(assert (=> b!73183 (= lt!32777 lt!32762)))

(declare-fun call!6429 () ListLongMap!1401)

(declare-datatypes ((SeekEntryResult!230 0))(
  ( (MissingZero!230 (index!3051 (_ BitVec 32))) (Found!230 (index!3052 (_ BitVec 32))) (Intermediate!230 (undefined!1042 Bool) (index!3053 (_ BitVec 32)) (x!11146 (_ BitVec 32))) (Undefined!230) (MissingVacant!230 (index!3054 (_ BitVec 32))) )
))
(declare-fun lt!32773 () SeekEntryResult!230)

(assert (=> b!73183 (contains!720 call!6429 (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773)))))

(declare-fun lt!32775 () array!3879)

(declare-fun lemmaValidKeyInArrayIsInListMap!84 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) Int) Unit!2076)

(assert (=> b!73183 (= lt!32762 (lemmaValidKeyInArrayIsInListMap!84 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3052 lt!32773) (defaultEntry!2212 newMap!16)))))

(assert (=> b!73183 (= lt!32775 (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))))

(declare-fun lt!32761 () Unit!2076)

(declare-fun lt!32758 () Unit!2076)

(assert (=> b!73183 (= lt!32761 lt!32758)))

(declare-fun call!6430 () ListLongMap!1401)

(declare-fun call!6409 () ListLongMap!1401)

(assert (=> b!73183 (= call!6430 call!6409)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) (_ BitVec 64) V!2945 Int) Unit!2076)

(assert (=> b!73183 (= lt!32758 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3052 lt!32773) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32778 () Unit!2076)

(declare-fun e!47892 () Unit!2076)

(assert (=> b!73183 (= lt!32778 e!47892)))

(declare-fun c!10865 () Bool)

(declare-fun call!6420 () Bool)

(assert (=> b!73183 (= c!10865 call!6420)))

(declare-fun e!47894 () tuple2!2122)

(assert (=> b!73183 (= e!47894 (tuple2!2123 true (LongMapFixedSize!695 (defaultEntry!2212 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (_size!396 newMap!16) (_keys!3864 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (_vacant!396 newMap!16))))))

(declare-fun bm!6404 () Bool)

(declare-fun c!10870 () Bool)

(declare-fun c!10859 () Bool)

(assert (=> bm!6404 (= c!10870 c!10859)))

(declare-fun e!47885 () ListLongMap!1401)

(assert (=> bm!6404 (= call!6420 (contains!720 e!47885 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73184 () Bool)

(declare-fun e!47882 () tuple2!2122)

(assert (=> b!73184 (= e!47882 e!47894)))

(declare-fun c!10866 () Bool)

(assert (=> b!73184 (= c!10866 ((_ is MissingZero!230) lt!32773))))

(declare-fun b!73185 () Bool)

(assert (=> b!73185 (= e!47885 call!6429)))

(declare-fun b!73186 () Bool)

(declare-fun e!47889 () Bool)

(declare-fun lt!32776 () SeekEntryResult!230)

(assert (=> b!73186 (= e!47889 ((_ is Undefined!230) lt!32776))))

(declare-fun b!73187 () Bool)

(declare-fun e!47900 () Bool)

(declare-fun e!47897 () Bool)

(assert (=> b!73187 (= e!47900 e!47897)))

(declare-fun c!10869 () Bool)

(declare-fun lt!32783 () tuple2!2122)

(assert (=> b!73187 (= c!10869 (_1!1072 lt!32783))))

(declare-fun b!73188 () Bool)

(declare-fun lt!32766 () Unit!2076)

(declare-fun e!47881 () Unit!2076)

(assert (=> b!73188 (= lt!32766 e!47881)))

(declare-fun c!10862 () Bool)

(assert (=> b!73188 (= c!10862 call!6420)))

(declare-fun e!47884 () tuple2!2122)

(assert (=> b!73188 (= e!47884 (tuple2!2123 false newMap!16))))

(declare-fun call!6410 () Bool)

(declare-fun bm!6405 () Bool)

(assert (=> bm!6405 (= call!6410 (arrayContainsKey!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!73189 () Bool)

(declare-fun e!47887 () ListLongMap!1401)

(assert (=> b!73189 (= e!47887 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!73190 () Bool)

(declare-fun lt!32769 () Unit!2076)

(assert (=> b!73190 (= e!47881 lt!32769)))

(declare-fun call!6426 () Unit!2076)

(assert (=> b!73190 (= lt!32769 call!6426)))

(declare-fun lt!32782 () SeekEntryResult!230)

(declare-fun call!6419 () SeekEntryResult!230)

(assert (=> b!73190 (= lt!32782 call!6419)))

(declare-fun c!10863 () Bool)

(assert (=> b!73190 (= c!10863 ((_ is MissingZero!230) lt!32782))))

(declare-fun e!47890 () Bool)

(assert (=> b!73190 e!47890))

(declare-fun bm!6406 () Bool)

(declare-fun call!6422 () ListLongMap!1401)

(declare-fun call!6415 () ListLongMap!1401)

(assert (=> bm!6406 (= call!6422 call!6415)))

(declare-fun call!6418 () tuple2!2122)

(declare-fun c!10861 () Bool)

(declare-fun bm!6407 () Bool)

(declare-fun updateHelperNewKey!24 (LongMapFixedSize!694 (_ BitVec 64) V!2945 (_ BitVec 32)) tuple2!2122)

(assert (=> bm!6407 (= call!6418 (updateHelperNewKey!24 newMap!16 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))))))

(declare-fun b!73191 () Bool)

(assert (=> b!73191 (= c!10861 ((_ is MissingVacant!230) lt!32773))))

(assert (=> b!73191 (= e!47884 e!47882)))

(declare-fun b!73192 () Bool)

(declare-fun lt!32771 () tuple2!2122)

(assert (=> b!73192 (= lt!32771 call!6418)))

(assert (=> b!73192 (= e!47894 (tuple2!2123 (_1!1072 lt!32771) (_2!1072 lt!32771)))))

(declare-fun bm!6408 () Bool)

(declare-fun call!6413 () ListLongMap!1401)

(assert (=> bm!6408 (= call!6413 call!6430)))

(declare-fun bm!6409 () Bool)

(declare-fun call!6427 () Bool)

(declare-fun call!6414 () Bool)

(assert (=> bm!6409 (= call!6427 call!6414)))

(declare-fun call!6408 () SeekEntryResult!230)

(declare-fun bm!6410 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3877 (_ BitVec 32)) SeekEntryResult!230)

(assert (=> bm!6410 (= call!6408 (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun b!73193 () Bool)

(declare-fun res!38828 () Bool)

(assert (=> b!73193 (= res!38828 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3054 lt!32776)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!47899 () Bool)

(assert (=> b!73193 (=> (not res!38828) (not e!47899))))

(declare-fun bm!6411 () Bool)

(declare-fun call!6425 () Bool)

(assert (=> bm!6411 (= call!6425 call!6410)))

(declare-fun bm!6412 () Bool)

(assert (=> bm!6412 (= call!6429 call!6415)))

(declare-fun b!73194 () Bool)

(declare-fun lt!32780 () Unit!2076)

(declare-fun lt!32772 () Unit!2076)

(assert (=> b!73194 (= lt!32780 lt!32772)))

(assert (=> b!73194 (= call!6413 call!6422)))

(declare-fun lt!32770 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!24 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 V!2945 Int) Unit!2076)

(assert (=> b!73194 (= lt!32772 (lemmaChangeZeroKeyThenAddPairToListMap!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) lt!32770 (zeroValue!2114 newMap!16) lt!32495 (minValue!2114 newMap!16) (defaultEntry!2212 newMap!16)))))

(assert (=> b!73194 (= lt!32770 (bvor (extraKeys!2071 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!47898 () tuple2!2122)

(assert (=> b!73194 (= e!47898 (tuple2!2123 true (LongMapFixedSize!695 (defaultEntry!2212 newMap!16) (mask!6179 newMap!16) (bvor (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) lt!32495 (minValue!2114 newMap!16) (_size!396 newMap!16) (_keys!3864 newMap!16) (_values!2195 newMap!16) (_vacant!396 newMap!16))))))

(declare-fun b!73195 () Bool)

(declare-fun res!38831 () Bool)

(declare-fun e!47895 () Bool)

(assert (=> b!73195 (=> (not res!38831) (not e!47895))))

(assert (=> b!73195 (= res!38831 call!6427)))

(declare-fun e!47893 () Bool)

(assert (=> b!73195 (= e!47893 e!47895)))

(declare-fun b!73196 () Bool)

(declare-fun lt!32784 () Unit!2076)

(declare-fun lt!32759 () Unit!2076)

(assert (=> b!73196 (= lt!32784 lt!32759)))

(assert (=> b!73196 (= call!6413 call!6422)))

(declare-fun lt!32763 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 V!2945 Int) Unit!2076)

(assert (=> b!73196 (= lt!32759 (lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) lt!32763 (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) lt!32495 (defaultEntry!2212 newMap!16)))))

(assert (=> b!73196 (= lt!32763 (bvor (extraKeys!2071 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!73196 (= e!47898 (tuple2!2123 true (LongMapFixedSize!695 (defaultEntry!2212 newMap!16) (mask!6179 newMap!16) (bvor (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) (zeroValue!2114 newMap!16) lt!32495 (_size!396 newMap!16) (_keys!3864 newMap!16) (_values!2195 newMap!16) (_vacant!396 newMap!16))))))

(declare-fun b!73197 () Bool)

(assert (=> b!73197 (= e!47895 (not call!6425))))

(declare-fun b!73198 () Bool)

(declare-fun lt!32781 () SeekEntryResult!230)

(declare-fun e!47886 () Bool)

(assert (=> b!73198 (= e!47886 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32781)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun bm!6413 () Bool)

(declare-fun call!6428 () Bool)

(assert (=> bm!6413 (= call!6414 call!6428)))

(declare-fun call!6417 () ListLongMap!1401)

(declare-fun e!47896 () Bool)

(declare-fun call!6407 () ListLongMap!1401)

(declare-fun b!73199 () Bool)

(assert (=> b!73199 (= e!47896 (= call!6407 (+!93 call!6417 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun bm!6414 () Bool)

(declare-fun call!6412 () ListLongMap!1401)

(assert (=> bm!6414 (= call!6412 call!6409)))

(declare-fun bm!6415 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) Int) Unit!2076)

(assert (=> bm!6415 (= call!6426 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(declare-fun b!73200 () Bool)

(assert (=> b!73200 (= e!47889 e!47899)))

(declare-fun res!38840 () Bool)

(assert (=> b!73200 (= res!38840 call!6427)))

(assert (=> b!73200 (=> (not res!38840) (not e!47899))))

(declare-fun b!73201 () Bool)

(declare-fun res!38833 () Bool)

(assert (=> b!73201 (= res!38833 call!6414)))

(assert (=> b!73201 (=> (not res!38833) (not e!47886))))

(declare-fun c!10871 () Bool)

(declare-fun bm!6416 () Bool)

(declare-fun lt!32760 () SeekEntryResult!230)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!6416 (= call!6428 (inRange!0 (ite c!10859 (ite c!10862 (index!3052 lt!32760) (ite c!10863 (index!3051 lt!32782) (index!3054 lt!32782))) (ite c!10865 (index!3052 lt!32781) (ite c!10871 (index!3051 lt!32776) (index!3054 lt!32776)))) (mask!6179 newMap!16)))))

(declare-fun b!73202 () Bool)

(declare-fun lt!32764 () Unit!2076)

(assert (=> b!73202 (= e!47892 lt!32764)))

(declare-fun call!6423 () Unit!2076)

(assert (=> b!73202 (= lt!32764 call!6423)))

(declare-fun call!6424 () SeekEntryResult!230)

(assert (=> b!73202 (= lt!32781 call!6424)))

(declare-fun res!38836 () Bool)

(assert (=> b!73202 (= res!38836 ((_ is Found!230) lt!32781))))

(assert (=> b!73202 (=> (not res!38836) (not e!47886))))

(assert (=> b!73202 e!47886))

(declare-fun b!73203 () Bool)

(declare-fun e!47888 () Bool)

(assert (=> b!73203 (= e!47888 ((_ is Undefined!230) lt!32782))))

(declare-fun c!10858 () Bool)

(declare-fun c!10868 () Bool)

(declare-fun bm!6417 () Bool)

(assert (=> bm!6417 (= call!6415 (getCurrentListMap!414 (_keys!3864 newMap!16) (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775) (mask!6179 newMap!16) (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!73204 () Bool)

(declare-fun e!47883 () Bool)

(assert (=> b!73204 (= e!47888 e!47883)))

(declare-fun res!38834 () Bool)

(declare-fun call!6411 () Bool)

(assert (=> b!73204 (= res!38834 call!6411)))

(assert (=> b!73204 (=> (not res!38834) (not e!47883))))

(declare-fun b!73205 () Bool)

(declare-fun res!38835 () Bool)

(declare-fun e!47891 () Bool)

(assert (=> b!73205 (=> (not res!38835) (not e!47891))))

(assert (=> b!73205 (= res!38835 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3051 lt!32782)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6418 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) Int) Unit!2076)

(assert (=> bm!6418 (= call!6423 (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(declare-fun bm!6419 () Bool)

(assert (=> bm!6419 (= call!6409 (getCurrentListMap!414 (_keys!3864 newMap!16) (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun bm!6420 () Bool)

(assert (=> bm!6420 (= call!6424 call!6408)))

(declare-fun b!73206 () Bool)

(declare-fun res!38827 () Bool)

(assert (=> b!73206 (= res!38827 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3054 lt!32782)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73206 (=> (not res!38827) (not e!47883))))

(declare-fun b!73207 () Bool)

(assert (=> b!73207 (= e!47885 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun bm!6421 () Bool)

(declare-fun call!6421 () Bool)

(assert (=> bm!6421 (= call!6421 call!6410)))

(declare-fun b!73208 () Bool)

(declare-fun res!38839 () Bool)

(declare-fun call!6416 () Bool)

(assert (=> b!73208 (= res!38839 call!6416)))

(declare-fun e!47879 () Bool)

(assert (=> b!73208 (=> (not res!38839) (not e!47879))))

(declare-fun b!73209 () Bool)

(declare-fun Unit!2088 () Unit!2076)

(assert (=> b!73209 (= e!47892 Unit!2088)))

(declare-fun lt!32767 () Unit!2076)

(assert (=> b!73209 (= lt!32767 call!6426)))

(assert (=> b!73209 (= lt!32776 call!6424)))

(assert (=> b!73209 (= c!10871 ((_ is MissingZero!230) lt!32776))))

(assert (=> b!73209 e!47893))

(declare-fun lt!32774 () Unit!2076)

(assert (=> b!73209 (= lt!32774 lt!32767)))

(assert (=> b!73209 false))

(declare-fun b!73210 () Bool)

(declare-fun res!38830 () Bool)

(assert (=> b!73210 (=> (not res!38830) (not e!47895))))

(assert (=> b!73210 (= res!38830 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3051 lt!32776)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73211 () Bool)

(assert (=> b!73211 (= e!47891 (not call!6421))))

(declare-fun bm!6422 () Bool)

(assert (=> bm!6422 (= call!6430 (+!93 e!47887 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun c!10860 () Bool)

(assert (=> bm!6422 (= c!10860 c!10868)))

(declare-fun b!73212 () Bool)

(assert (=> b!73212 (= e!47899 (not call!6425))))

(declare-fun b!73213 () Bool)

(assert (=> b!73213 (= e!47883 (not call!6421))))

(declare-fun bm!6423 () Bool)

(assert (=> bm!6423 (= call!6419 call!6408)))

(declare-fun bm!6424 () Bool)

(assert (=> bm!6424 (= call!6416 call!6428)))

(declare-fun b!73214 () Bool)

(declare-fun c!10864 () Bool)

(assert (=> b!73214 (= c!10864 ((_ is MissingVacant!230) lt!32782))))

(assert (=> b!73214 (= e!47890 e!47888)))

(declare-fun bm!6425 () Bool)

(assert (=> bm!6425 (= call!6407 (map!1160 (_2!1072 lt!32783)))))

(declare-fun bm!6426 () Bool)

(assert (=> bm!6426 (= call!6417 (map!1160 newMap!16))))

(declare-fun b!73215 () Bool)

(declare-fun Unit!2089 () Unit!2076)

(assert (=> b!73215 (= e!47881 Unit!2089)))

(declare-fun lt!32765 () Unit!2076)

(assert (=> b!73215 (= lt!32765 call!6423)))

(assert (=> b!73215 (= lt!32760 call!6419)))

(declare-fun res!38837 () Bool)

(assert (=> b!73215 (= res!38837 ((_ is Found!230) lt!32760))))

(assert (=> b!73215 (=> (not res!38837) (not e!47879))))

(assert (=> b!73215 e!47879))

(declare-fun lt!32779 () Unit!2076)

(assert (=> b!73215 (= lt!32779 lt!32765)))

(assert (=> b!73215 false))

(declare-fun b!73216 () Bool)

(declare-fun lt!32768 () tuple2!2122)

(assert (=> b!73216 (= e!47882 (tuple2!2123 (_1!1072 lt!32768) (_2!1072 lt!32768)))))

(assert (=> b!73216 (= lt!32768 call!6418)))

(declare-fun b!73217 () Bool)

(assert (=> b!73217 (= e!47897 (= call!6407 call!6417))))

(declare-fun b!73218 () Bool)

(assert (=> b!73218 (= e!47887 call!6412)))

(declare-fun b!73219 () Bool)

(assert (=> b!73219 (= e!47879 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32760)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73220 () Bool)

(assert (=> b!73220 (= e!47897 e!47896)))

(declare-fun res!38829 () Bool)

(assert (=> b!73220 (= res!38829 (contains!720 call!6407 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> b!73220 (=> (not res!38829) (not e!47896))))

(declare-fun b!73221 () Bool)

(declare-fun res!38832 () Bool)

(assert (=> b!73221 (=> (not res!38832) (not e!47891))))

(assert (=> b!73221 (= res!38832 call!6411)))

(assert (=> b!73221 (= e!47890 e!47891)))

(declare-fun b!73222 () Bool)

(declare-fun e!47880 () tuple2!2122)

(assert (=> b!73222 (= e!47880 e!47898)))

(assert (=> b!73222 (= c!10858 (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16887 () Bool)

(assert (=> d!16887 e!47900))

(declare-fun res!38838 () Bool)

(assert (=> d!16887 (=> (not res!38838) (not e!47900))))

(assert (=> d!16887 (= res!38838 (valid!307 (_2!1072 lt!32783)))))

(assert (=> d!16887 (= lt!32783 e!47880)))

(assert (=> d!16887 (= c!10868 (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvneg (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (=> d!16887 (valid!307 newMap!16)))

(assert (=> d!16887 (= (update!110 newMap!16 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495) lt!32783)))

(declare-fun b!73223 () Bool)

(assert (=> b!73223 (= e!47880 e!47884)))

(assert (=> b!73223 (= lt!32773 (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(assert (=> b!73223 (= c!10859 ((_ is Undefined!230) lt!32773))))

(declare-fun bm!6427 () Bool)

(assert (=> bm!6427 (= call!6411 call!6416)))

(declare-fun b!73224 () Bool)

(declare-fun c!10867 () Bool)

(assert (=> b!73224 (= c!10867 ((_ is MissingVacant!230) lt!32776))))

(assert (=> b!73224 (= e!47893 e!47889)))

(assert (= (and d!16887 c!10868) b!73222))

(assert (= (and d!16887 (not c!10868)) b!73223))

(assert (= (and b!73222 c!10858) b!73194))

(assert (= (and b!73222 (not c!10858)) b!73196))

(assert (= (or b!73194 b!73196) bm!6414))

(assert (= (or b!73194 b!73196) bm!6406))

(assert (= (or b!73194 b!73196) bm!6408))

(assert (= (and b!73223 c!10859) b!73188))

(assert (= (and b!73223 (not c!10859)) b!73191))

(assert (= (and b!73188 c!10862) b!73215))

(assert (= (and b!73188 (not c!10862)) b!73190))

(assert (= (and b!73215 res!38837) b!73208))

(assert (= (and b!73208 res!38839) b!73219))

(assert (= (and b!73190 c!10863) b!73221))

(assert (= (and b!73190 (not c!10863)) b!73214))

(assert (= (and b!73221 res!38832) b!73205))

(assert (= (and b!73205 res!38835) b!73211))

(assert (= (and b!73214 c!10864) b!73204))

(assert (= (and b!73214 (not c!10864)) b!73203))

(assert (= (and b!73204 res!38834) b!73206))

(assert (= (and b!73206 res!38827) b!73213))

(assert (= (or b!73221 b!73204) bm!6427))

(assert (= (or b!73211 b!73213) bm!6421))

(assert (= (or b!73208 bm!6427) bm!6424))

(assert (= (or b!73215 b!73190) bm!6423))

(assert (= (and b!73191 c!10861) b!73216))

(assert (= (and b!73191 (not c!10861)) b!73184))

(assert (= (and b!73184 c!10866) b!73192))

(assert (= (and b!73184 (not c!10866)) b!73183))

(assert (= (and b!73183 c!10865) b!73202))

(assert (= (and b!73183 (not c!10865)) b!73209))

(assert (= (and b!73202 res!38836) b!73201))

(assert (= (and b!73201 res!38833) b!73198))

(assert (= (and b!73209 c!10871) b!73195))

(assert (= (and b!73209 (not c!10871)) b!73224))

(assert (= (and b!73195 res!38831) b!73210))

(assert (= (and b!73210 res!38830) b!73197))

(assert (= (and b!73224 c!10867) b!73200))

(assert (= (and b!73224 (not c!10867)) b!73186))

(assert (= (and b!73200 res!38840) b!73193))

(assert (= (and b!73193 res!38828) b!73212))

(assert (= (or b!73195 b!73200) bm!6409))

(assert (= (or b!73197 b!73212) bm!6411))

(assert (= (or b!73201 bm!6409) bm!6413))

(assert (= (or b!73202 b!73209) bm!6420))

(assert (= (or b!73216 b!73192) bm!6407))

(assert (= (or b!73188 b!73183) bm!6412))

(assert (= (or bm!6423 bm!6420) bm!6410))

(assert (= (or bm!6424 bm!6413) bm!6416))

(assert (= (or b!73190 b!73209) bm!6415))

(assert (= (or b!73215 b!73202) bm!6418))

(assert (= (or bm!6421 bm!6411) bm!6405))

(assert (= (or b!73188 b!73183) bm!6404))

(assert (= (and bm!6404 c!10870) b!73185))

(assert (= (and bm!6404 (not c!10870)) b!73207))

(assert (= (or bm!6414 b!73183) bm!6419))

(assert (= (or bm!6406 bm!6412) bm!6417))

(assert (= (or bm!6408 b!73183) bm!6422))

(assert (= (and bm!6422 c!10860) b!73218))

(assert (= (and bm!6422 (not c!10860)) b!73189))

(assert (= (and d!16887 res!38838) b!73187))

(assert (= (and b!73187 c!10869) b!73220))

(assert (= (and b!73187 (not c!10869)) b!73217))

(assert (= (and b!73220 res!38829) b!73199))

(assert (= (or b!73220 b!73199 b!73217) bm!6425))

(assert (= (or b!73199 b!73217) bm!6426))

(declare-fun m!71481 () Bool)

(assert (=> bm!6416 m!71481))

(declare-fun m!71483 () Bool)

(assert (=> b!73183 m!71483))

(declare-fun m!71485 () Bool)

(assert (=> b!73183 m!71485))

(assert (=> b!73183 m!71485))

(declare-fun m!71487 () Bool)

(assert (=> b!73183 m!71487))

(assert (=> b!73183 m!71143))

(declare-fun m!71489 () Bool)

(assert (=> b!73183 m!71489))

(declare-fun m!71491 () Bool)

(assert (=> b!73183 m!71491))

(declare-fun m!71493 () Bool)

(assert (=> bm!6417 m!71493))

(assert (=> b!73220 m!71143))

(declare-fun m!71495 () Bool)

(assert (=> b!73220 m!71495))

(assert (=> b!73207 m!71403))

(declare-fun m!71497 () Bool)

(assert (=> b!73198 m!71497))

(assert (=> b!73223 m!71143))

(declare-fun m!71499 () Bool)

(assert (=> b!73223 m!71499))

(declare-fun m!71501 () Bool)

(assert (=> b!73205 m!71501))

(declare-fun m!71503 () Bool)

(assert (=> bm!6422 m!71503))

(declare-fun m!71505 () Bool)

(assert (=> b!73206 m!71505))

(declare-fun m!71507 () Bool)

(assert (=> b!73193 m!71507))

(declare-fun m!71509 () Bool)

(assert (=> b!73210 m!71509))

(declare-fun m!71511 () Bool)

(assert (=> b!73219 m!71511))

(assert (=> bm!6405 m!71143))

(declare-fun m!71513 () Bool)

(assert (=> bm!6405 m!71513))

(assert (=> bm!6410 m!71143))

(assert (=> bm!6410 m!71499))

(assert (=> bm!6419 m!71483))

(declare-fun m!71515 () Bool)

(assert (=> bm!6419 m!71515))

(assert (=> bm!6407 m!71143))

(declare-fun m!71517 () Bool)

(assert (=> bm!6407 m!71517))

(assert (=> bm!6415 m!71143))

(declare-fun m!71519 () Bool)

(assert (=> bm!6415 m!71519))

(declare-fun m!71521 () Bool)

(assert (=> b!73194 m!71521))

(assert (=> bm!6404 m!71143))

(declare-fun m!71523 () Bool)

(assert (=> bm!6404 m!71523))

(declare-fun m!71525 () Bool)

(assert (=> d!16887 m!71525))

(assert (=> d!16887 m!71165))

(declare-fun m!71527 () Bool)

(assert (=> bm!6425 m!71527))

(assert (=> bm!6418 m!71143))

(declare-fun m!71529 () Bool)

(assert (=> bm!6418 m!71529))

(declare-fun m!71531 () Bool)

(assert (=> b!73196 m!71531))

(declare-fun m!71533 () Bool)

(assert (=> b!73199 m!71533))

(assert (=> bm!6426 m!71195))

(assert (=> b!73189 m!71403))

(assert (=> b!72804 d!16887))

(declare-fun condMapEmpty!3181 () Bool)

(declare-fun mapDefault!3181 () ValueCell!893)

(assert (=> mapNonEmpty!3165 (= condMapEmpty!3181 (= mapRest!3165 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3181)))))

(declare-fun e!47906 () Bool)

(declare-fun mapRes!3181 () Bool)

(assert (=> mapNonEmpty!3165 (= tp!8517 (and e!47906 mapRes!3181))))

(declare-fun mapIsEmpty!3181 () Bool)

(assert (=> mapIsEmpty!3181 mapRes!3181))

(declare-fun b!73231 () Bool)

(declare-fun e!47905 () Bool)

(assert (=> b!73231 (= e!47905 tp_is_empty!2473)))

(declare-fun mapNonEmpty!3181 () Bool)

(declare-fun tp!8545 () Bool)

(assert (=> mapNonEmpty!3181 (= mapRes!3181 (and tp!8545 e!47905))))

(declare-fun mapRest!3181 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapKey!3181 () (_ BitVec 32))

(declare-fun mapValue!3181 () ValueCell!893)

(assert (=> mapNonEmpty!3181 (= mapRest!3165 (store mapRest!3181 mapKey!3181 mapValue!3181))))

(declare-fun b!73232 () Bool)

(assert (=> b!73232 (= e!47906 tp_is_empty!2473)))

(assert (= (and mapNonEmpty!3165 condMapEmpty!3181) mapIsEmpty!3181))

(assert (= (and mapNonEmpty!3165 (not condMapEmpty!3181)) mapNonEmpty!3181))

(assert (= (and mapNonEmpty!3181 ((_ is ValueCellFull!893) mapValue!3181)) b!73231))

(assert (= (and mapNonEmpty!3165 ((_ is ValueCellFull!893) mapDefault!3181)) b!73232))

(declare-fun m!71535 () Bool)

(assert (=> mapNonEmpty!3181 m!71535))

(declare-fun condMapEmpty!3182 () Bool)

(declare-fun mapDefault!3182 () ValueCell!893)

(assert (=> mapNonEmpty!3166 (= condMapEmpty!3182 (= mapRest!3166 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3182)))))

(declare-fun e!47908 () Bool)

(declare-fun mapRes!3182 () Bool)

(assert (=> mapNonEmpty!3166 (= tp!8515 (and e!47908 mapRes!3182))))

(declare-fun mapIsEmpty!3182 () Bool)

(assert (=> mapIsEmpty!3182 mapRes!3182))

(declare-fun b!73233 () Bool)

(declare-fun e!47907 () Bool)

(assert (=> b!73233 (= e!47907 tp_is_empty!2473)))

(declare-fun mapNonEmpty!3182 () Bool)

(declare-fun tp!8546 () Bool)

(assert (=> mapNonEmpty!3182 (= mapRes!3182 (and tp!8546 e!47907))))

(declare-fun mapKey!3182 () (_ BitVec 32))

(declare-fun mapValue!3182 () ValueCell!893)

(declare-fun mapRest!3182 () (Array (_ BitVec 32) ValueCell!893))

(assert (=> mapNonEmpty!3182 (= mapRest!3166 (store mapRest!3182 mapKey!3182 mapValue!3182))))

(declare-fun b!73234 () Bool)

(assert (=> b!73234 (= e!47908 tp_is_empty!2473)))

(assert (= (and mapNonEmpty!3166 condMapEmpty!3182) mapIsEmpty!3182))

(assert (= (and mapNonEmpty!3166 (not condMapEmpty!3182)) mapNonEmpty!3182))

(assert (= (and mapNonEmpty!3182 ((_ is ValueCellFull!893) mapValue!3182)) b!73233))

(assert (= (and mapNonEmpty!3166 ((_ is ValueCellFull!893) mapDefault!3182)) b!73234))

(declare-fun m!71537 () Bool)

(assert (=> mapNonEmpty!3182 m!71537))

(declare-fun b_lambda!3293 () Bool)

(assert (= b_lambda!3291 (or (and b!72793 b_free!2113) (and b!72792 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))) b_lambda!3293)))

(declare-fun b_lambda!3295 () Bool)

(assert (= b_lambda!3287 (or (and b!72793 b_free!2113) (and b!72792 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))) b_lambda!3295)))

(declare-fun b_lambda!3297 () Bool)

(assert (= b_lambda!3289 (or (and b!72793 b_free!2113) (and b!72792 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))) b_lambda!3297)))

(check-sat (not b!73196) (not b!73073) (not b!73050) (not b!72978) (not d!16877) (not b!73043) (not d!16845) b_and!4501 (not b!72941) (not b!73207) (not b_lambda!3285) (not b!72946) (not b!73068) (not bm!6419) (not bm!6407) (not b!73038) (not d!16875) (not b!72977) (not bm!6418) (not bm!6404) (not mapNonEmpty!3181) (not d!16855) (not b!73033) (not b!73223) (not b!73089) (not b!73051) (not b!73062) (not b!72981) (not bm!6416) (not b_lambda!3297) (not b!73220) (not d!16853) (not d!16849) (not b!73052) (not b!72942) tp_is_empty!2473 (not b!73096) (not bm!6422) (not b!72943) (not b!72945) (not b!73060) (not b!72979) (not b_next!2113) (not d!16869) (not b!72984) (not d!16873) (not bm!6417) (not b!72948) (not b_lambda!3295) (not bm!6426) (not b!72982) (not b!72975) (not b_lambda!3293) (not d!16887) (not bm!6410) (not d!16847) (not b!72944) (not mapNonEmpty!3182) (not b!72989) (not b!73061) (not b!73039) (not bm!6352) (not b!73046) (not b!73098) (not b!73199) (not bm!6425) (not d!16871) (not d!16881) (not bm!6351) (not bm!6331) (not b!73189) (not bm!6346) (not d!16861) (not bm!6405) (not d!16843) (not bm!6355) (not b!72990) (not bm!6350) (not b!72947) (not d!16885) b_and!4503 (not b!73086) (not bm!6415) (not b!72974) (not b!73194) (not b!73183) (not b!73085) (not b_next!2115))
(check-sat b_and!4501 b_and!4503 (not b_next!2113) (not b_next!2115))
(get-model)

(declare-fun d!16889 () Bool)

(declare-fun lt!32787 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!78 (List!1474) (InoxSet tuple2!2120))

(assert (=> d!16889 (= lt!32787 (select (content!78 (toList!716 lt!32590)) lt!32492))))

(declare-fun e!47914 () Bool)

(assert (=> d!16889 (= lt!32787 e!47914)))

(declare-fun res!38845 () Bool)

(assert (=> d!16889 (=> (not res!38845) (not e!47914))))

(assert (=> d!16889 (= res!38845 ((_ is Cons!1470) (toList!716 lt!32590)))))

(assert (=> d!16889 (= (contains!721 (toList!716 lt!32590) lt!32492) lt!32787)))

(declare-fun b!73239 () Bool)

(declare-fun e!47913 () Bool)

(assert (=> b!73239 (= e!47914 e!47913)))

(declare-fun res!38846 () Bool)

(assert (=> b!73239 (=> res!38846 e!47913)))

(assert (=> b!73239 (= res!38846 (= (h!2057 (toList!716 lt!32590)) lt!32492))))

(declare-fun b!73240 () Bool)

(assert (=> b!73240 (= e!47913 (contains!721 (t!5023 (toList!716 lt!32590)) lt!32492))))

(assert (= (and d!16889 res!38845) b!73239))

(assert (= (and b!73239 (not res!38846)) b!73240))

(declare-fun m!71539 () Bool)

(assert (=> d!16889 m!71539))

(declare-fun m!71541 () Bool)

(assert (=> d!16889 m!71541))

(declare-fun m!71543 () Bool)

(assert (=> b!73240 m!71543))

(assert (=> b!72946 d!16889))

(declare-fun d!16891 () Bool)

(declare-fun e!47915 () Bool)

(assert (=> d!16891 e!47915))

(declare-fun res!38847 () Bool)

(assert (=> d!16891 (=> res!38847 e!47915)))

(declare-fun lt!32789 () Bool)

(assert (=> d!16891 (= res!38847 (not lt!32789))))

(declare-fun lt!32791 () Bool)

(assert (=> d!16891 (= lt!32789 lt!32791)))

(declare-fun lt!32790 () Unit!2076)

(declare-fun e!47916 () Unit!2076)

(assert (=> d!16891 (= lt!32790 e!47916)))

(declare-fun c!10872 () Bool)

(assert (=> d!16891 (= c!10872 lt!32791)))

(assert (=> d!16891 (= lt!32791 (containsKey!137 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16891 (= (contains!720 lt!32614 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32789)))

(declare-fun b!73241 () Bool)

(declare-fun lt!32788 () Unit!2076)

(assert (=> b!73241 (= e!47916 lt!32788)))

(assert (=> b!73241 (= lt!32788 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73241 (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73242 () Bool)

(declare-fun Unit!2090 () Unit!2076)

(assert (=> b!73242 (= e!47916 Unit!2090)))

(declare-fun b!73243 () Bool)

(assert (=> b!73243 (= e!47915 (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16891 c!10872) b!73241))

(assert (= (and d!16891 (not c!10872)) b!73242))

(assert (= (and d!16891 (not res!38847)) b!73243))

(declare-fun m!71545 () Bool)

(assert (=> d!16891 m!71545))

(declare-fun m!71547 () Bool)

(assert (=> b!73241 m!71547))

(declare-fun m!71549 () Bool)

(assert (=> b!73241 m!71549))

(assert (=> b!73241 m!71549))

(declare-fun m!71551 () Bool)

(assert (=> b!73241 m!71551))

(assert (=> b!73243 m!71549))

(assert (=> b!73243 m!71549))

(assert (=> b!73243 m!71551))

(assert (=> d!16855 d!16891))

(assert (=> d!16855 d!16851))

(declare-fun b!73256 () Bool)

(declare-fun e!47925 () SeekEntryResult!230)

(declare-fun e!47924 () SeekEntryResult!230)

(assert (=> b!73256 (= e!47925 e!47924)))

(declare-fun lt!32799 () (_ BitVec 64))

(declare-fun lt!32800 () SeekEntryResult!230)

(assert (=> b!73256 (= lt!32799 (select (arr!1850 (_keys!3864 newMap!16)) (index!3053 lt!32800)))))

(declare-fun c!10881 () Bool)

(assert (=> b!73256 (= c!10881 (= lt!32799 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun e!47923 () SeekEntryResult!230)

(declare-fun b!73257 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3877 (_ BitVec 32)) SeekEntryResult!230)

(assert (=> b!73257 (= e!47923 (seekKeyOrZeroReturnVacant!0 (x!11146 lt!32800) (index!3053 lt!32800) (index!3053 lt!32800) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun b!73258 () Bool)

(assert (=> b!73258 (= e!47923 (MissingZero!230 (index!3053 lt!32800)))))

(declare-fun b!73259 () Bool)

(declare-fun c!10880 () Bool)

(assert (=> b!73259 (= c!10880 (= lt!32799 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73259 (= e!47924 e!47923)))

(declare-fun d!16893 () Bool)

(declare-fun lt!32798 () SeekEntryResult!230)

(assert (=> d!16893 (and (or ((_ is Undefined!230) lt!32798) (not ((_ is Found!230) lt!32798)) (and (bvsge (index!3052 lt!32798) #b00000000000000000000000000000000) (bvslt (index!3052 lt!32798) (size!2088 (_keys!3864 newMap!16))))) (or ((_ is Undefined!230) lt!32798) ((_ is Found!230) lt!32798) (not ((_ is MissingZero!230) lt!32798)) (and (bvsge (index!3051 lt!32798) #b00000000000000000000000000000000) (bvslt (index!3051 lt!32798) (size!2088 (_keys!3864 newMap!16))))) (or ((_ is Undefined!230) lt!32798) ((_ is Found!230) lt!32798) ((_ is MissingZero!230) lt!32798) (not ((_ is MissingVacant!230) lt!32798)) (and (bvsge (index!3054 lt!32798) #b00000000000000000000000000000000) (bvslt (index!3054 lt!32798) (size!2088 (_keys!3864 newMap!16))))) (or ((_ is Undefined!230) lt!32798) (ite ((_ is Found!230) lt!32798) (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32798)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (ite ((_ is MissingZero!230) lt!32798) (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3051 lt!32798)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!230) lt!32798) (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3054 lt!32798)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16893 (= lt!32798 e!47925)))

(declare-fun c!10879 () Bool)

(assert (=> d!16893 (= c!10879 (and ((_ is Intermediate!230) lt!32800) (undefined!1042 lt!32800)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3877 (_ BitVec 32)) SeekEntryResult!230)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!16893 (= lt!32800 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (mask!6179 newMap!16)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(assert (=> d!16893 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!16893 (= (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)) lt!32798)))

(declare-fun b!73260 () Bool)

(assert (=> b!73260 (= e!47924 (Found!230 (index!3053 lt!32800)))))

(declare-fun b!73261 () Bool)

(assert (=> b!73261 (= e!47925 Undefined!230)))

(assert (= (and d!16893 c!10879) b!73261))

(assert (= (and d!16893 (not c!10879)) b!73256))

(assert (= (and b!73256 c!10881) b!73260))

(assert (= (and b!73256 (not c!10881)) b!73259))

(assert (= (and b!73259 c!10880) b!73258))

(assert (= (and b!73259 (not c!10880)) b!73257))

(declare-fun m!71553 () Bool)

(assert (=> b!73256 m!71553))

(assert (=> b!73257 m!71143))

(declare-fun m!71555 () Bool)

(assert (=> b!73257 m!71555))

(declare-fun m!71557 () Bool)

(assert (=> d!16893 m!71557))

(assert (=> d!16893 m!71143))

(declare-fun m!71559 () Bool)

(assert (=> d!16893 m!71559))

(declare-fun m!71561 () Bool)

(assert (=> d!16893 m!71561))

(declare-fun m!71563 () Bool)

(assert (=> d!16893 m!71563))

(declare-fun m!71565 () Bool)

(assert (=> d!16893 m!71565))

(assert (=> d!16893 m!71559))

(assert (=> d!16893 m!71143))

(declare-fun m!71567 () Bool)

(assert (=> d!16893 m!71567))

(assert (=> b!73223 d!16893))

(declare-fun d!16895 () Bool)

(declare-fun isEmpty!323 (Option!140) Bool)

(assert (=> d!16895 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))))

(declare-fun bs!3155 () Bool)

(assert (= bs!3155 d!16895))

(assert (=> bs!3155 m!71477))

(declare-fun m!71569 () Bool)

(assert (=> bs!3155 m!71569))

(assert (=> b!73098 d!16895))

(declare-fun b!73271 () Bool)

(declare-fun e!47930 () Option!140)

(declare-fun e!47931 () Option!140)

(assert (=> b!73271 (= e!47930 e!47931)))

(declare-fun c!10887 () Bool)

(assert (=> b!73271 (= c!10887 (and ((_ is Cons!1470) (toList!716 lt!32488)) (not (= (_1!1071 (h!2057 (toList!716 lt!32488))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))))

(declare-fun b!73270 () Bool)

(assert (=> b!73270 (= e!47930 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32488)))))))

(declare-fun c!10886 () Bool)

(declare-fun d!16897 () Bool)

(assert (=> d!16897 (= c!10886 (and ((_ is Cons!1470) (toList!716 lt!32488)) (= (_1!1071 (h!2057 (toList!716 lt!32488))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (=> d!16897 (= (getValueByKey!134 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) e!47930)))

(declare-fun b!73272 () Bool)

(assert (=> b!73272 (= e!47931 (getValueByKey!134 (t!5023 (toList!716 lt!32488)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73273 () Bool)

(assert (=> b!73273 (= e!47931 None!138)))

(assert (= (and d!16897 c!10886) b!73270))

(assert (= (and d!16897 (not c!10886)) b!73271))

(assert (= (and b!73271 c!10887) b!73272))

(assert (= (and b!73271 (not c!10887)) b!73273))

(assert (=> b!73272 m!71143))

(declare-fun m!71571 () Bool)

(assert (=> b!73272 m!71571))

(assert (=> b!73098 d!16897))

(declare-fun d!16899 () Bool)

(declare-fun e!47932 () Bool)

(assert (=> d!16899 e!47932))

(declare-fun res!38848 () Bool)

(assert (=> d!16899 (=> res!38848 e!47932)))

(declare-fun lt!32802 () Bool)

(assert (=> d!16899 (= res!38848 (not lt!32802))))

(declare-fun lt!32804 () Bool)

(assert (=> d!16899 (= lt!32802 lt!32804)))

(declare-fun lt!32803 () Unit!2076)

(declare-fun e!47933 () Unit!2076)

(assert (=> d!16899 (= lt!32803 e!47933)))

(declare-fun c!10888 () Bool)

(assert (=> d!16899 (= c!10888 lt!32804)))

(assert (=> d!16899 (= lt!32804 (containsKey!137 (toList!716 lt!32594) (_1!1071 lt!32485)))))

(assert (=> d!16899 (= (contains!720 lt!32594 (_1!1071 lt!32485)) lt!32802)))

(declare-fun b!73274 () Bool)

(declare-fun lt!32801 () Unit!2076)

(assert (=> b!73274 (= e!47933 lt!32801)))

(assert (=> b!73274 (= lt!32801 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32594) (_1!1071 lt!32485)))))

(assert (=> b!73274 (isDefined!86 (getValueByKey!134 (toList!716 lt!32594) (_1!1071 lt!32485)))))

(declare-fun b!73275 () Bool)

(declare-fun Unit!2091 () Unit!2076)

(assert (=> b!73275 (= e!47933 Unit!2091)))

(declare-fun b!73276 () Bool)

(assert (=> b!73276 (= e!47932 (isDefined!86 (getValueByKey!134 (toList!716 lt!32594) (_1!1071 lt!32485))))))

(assert (= (and d!16899 c!10888) b!73274))

(assert (= (and d!16899 (not c!10888)) b!73275))

(assert (= (and d!16899 (not res!38848)) b!73276))

(declare-fun m!71573 () Bool)

(assert (=> d!16899 m!71573))

(declare-fun m!71575 () Bool)

(assert (=> b!73274 m!71575))

(assert (=> b!73274 m!71365))

(assert (=> b!73274 m!71365))

(declare-fun m!71577 () Bool)

(assert (=> b!73274 m!71577))

(assert (=> b!73276 m!71365))

(assert (=> b!73276 m!71365))

(assert (=> b!73276 m!71577))

(assert (=> d!16853 d!16899))

(declare-fun b!73278 () Bool)

(declare-fun e!47934 () Option!140)

(declare-fun e!47935 () Option!140)

(assert (=> b!73278 (= e!47934 e!47935)))

(declare-fun c!10890 () Bool)

(assert (=> b!73278 (= c!10890 (and ((_ is Cons!1470) lt!32595) (not (= (_1!1071 (h!2057 lt!32595)) (_1!1071 lt!32485)))))))

(declare-fun b!73277 () Bool)

(assert (=> b!73277 (= e!47934 (Some!139 (_2!1071 (h!2057 lt!32595))))))

(declare-fun d!16901 () Bool)

(declare-fun c!10889 () Bool)

(assert (=> d!16901 (= c!10889 (and ((_ is Cons!1470) lt!32595) (= (_1!1071 (h!2057 lt!32595)) (_1!1071 lt!32485))))))

(assert (=> d!16901 (= (getValueByKey!134 lt!32595 (_1!1071 lt!32485)) e!47934)))

(declare-fun b!73279 () Bool)

(assert (=> b!73279 (= e!47935 (getValueByKey!134 (t!5023 lt!32595) (_1!1071 lt!32485)))))

(declare-fun b!73280 () Bool)

(assert (=> b!73280 (= e!47935 None!138)))

(assert (= (and d!16901 c!10889) b!73277))

(assert (= (and d!16901 (not c!10889)) b!73278))

(assert (= (and b!73278 c!10890) b!73279))

(assert (= (and b!73278 (not c!10890)) b!73280))

(declare-fun m!71579 () Bool)

(assert (=> b!73279 m!71579))

(assert (=> d!16853 d!16901))

(declare-fun d!16903 () Bool)

(assert (=> d!16903 (= (getValueByKey!134 lt!32595 (_1!1071 lt!32485)) (Some!139 (_2!1071 lt!32485)))))

(declare-fun lt!32807 () Unit!2076)

(declare-fun choose!419 (List!1474 (_ BitVec 64) V!2945) Unit!2076)

(assert (=> d!16903 (= lt!32807 (choose!419 lt!32595 (_1!1071 lt!32485) (_2!1071 lt!32485)))))

(declare-fun e!47938 () Bool)

(assert (=> d!16903 e!47938))

(declare-fun res!38853 () Bool)

(assert (=> d!16903 (=> (not res!38853) (not e!47938))))

(declare-fun isStrictlySorted!279 (List!1474) Bool)

(assert (=> d!16903 (= res!38853 (isStrictlySorted!279 lt!32595))))

(assert (=> d!16903 (= (lemmaContainsTupThenGetReturnValue!51 lt!32595 (_1!1071 lt!32485) (_2!1071 lt!32485)) lt!32807)))

(declare-fun b!73285 () Bool)

(declare-fun res!38854 () Bool)

(assert (=> b!73285 (=> (not res!38854) (not e!47938))))

(assert (=> b!73285 (= res!38854 (containsKey!137 lt!32595 (_1!1071 lt!32485)))))

(declare-fun b!73286 () Bool)

(assert (=> b!73286 (= e!47938 (contains!721 lt!32595 (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(assert (= (and d!16903 res!38853) b!73285))

(assert (= (and b!73285 res!38854) b!73286))

(assert (=> d!16903 m!71359))

(declare-fun m!71581 () Bool)

(assert (=> d!16903 m!71581))

(declare-fun m!71583 () Bool)

(assert (=> d!16903 m!71583))

(declare-fun m!71585 () Bool)

(assert (=> b!73285 m!71585))

(declare-fun m!71587 () Bool)

(assert (=> b!73286 m!71587))

(assert (=> d!16853 d!16903))

(declare-fun b!73307 () Bool)

(declare-fun e!47953 () List!1474)

(assert (=> b!73307 (= e!47953 (insertStrictlySorted!54 (t!5023 (toList!716 (+!93 lt!32489 lt!32492))) (_1!1071 lt!32485) (_2!1071 lt!32485)))))

(declare-fun c!10900 () Bool)

(declare-fun b!73308 () Bool)

(declare-fun c!10899 () Bool)

(assert (=> b!73308 (= e!47953 (ite c!10900 (t!5023 (toList!716 (+!93 lt!32489 lt!32492))) (ite c!10899 (Cons!1470 (h!2057 (toList!716 (+!93 lt!32489 lt!32492))) (t!5023 (toList!716 (+!93 lt!32489 lt!32492)))) Nil!1471)))))

(declare-fun bm!6434 () Bool)

(declare-fun call!6438 () List!1474)

(declare-fun call!6439 () List!1474)

(assert (=> bm!6434 (= call!6438 call!6439)))

(declare-fun b!73309 () Bool)

(declare-fun e!47952 () Bool)

(declare-fun lt!32810 () List!1474)

(assert (=> b!73309 (= e!47952 (contains!721 lt!32810 (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun b!73310 () Bool)

(declare-fun e!47949 () List!1474)

(assert (=> b!73310 (= e!47949 call!6438)))

(declare-fun b!73311 () Bool)

(declare-fun e!47950 () List!1474)

(declare-fun e!47951 () List!1474)

(assert (=> b!73311 (= e!47950 e!47951)))

(assert (=> b!73311 (= c!10900 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 lt!32492))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 lt!32492)))) (_1!1071 lt!32485))))))

(declare-fun d!16905 () Bool)

(assert (=> d!16905 e!47952))

(declare-fun res!38859 () Bool)

(assert (=> d!16905 (=> (not res!38859) (not e!47952))))

(assert (=> d!16905 (= res!38859 (isStrictlySorted!279 lt!32810))))

(assert (=> d!16905 (= lt!32810 e!47950)))

(declare-fun c!10901 () Bool)

(assert (=> d!16905 (= c!10901 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 lt!32492))) (bvslt (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 lt!32492)))) (_1!1071 lt!32485))))))

(assert (=> d!16905 (isStrictlySorted!279 (toList!716 (+!93 lt!32489 lt!32492)))))

(assert (=> d!16905 (= (insertStrictlySorted!54 (toList!716 (+!93 lt!32489 lt!32492)) (_1!1071 lt!32485) (_2!1071 lt!32485)) lt!32810)))

(declare-fun bm!6435 () Bool)

(declare-fun call!6437 () List!1474)

(declare-fun $colon$colon!65 (List!1474 tuple2!2120) List!1474)

(assert (=> bm!6435 (= call!6437 ($colon$colon!65 e!47953 (ite c!10901 (h!2057 (toList!716 (+!93 lt!32489 lt!32492))) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485)))))))

(declare-fun c!10902 () Bool)

(assert (=> bm!6435 (= c!10902 c!10901)))

(declare-fun b!73312 () Bool)

(assert (=> b!73312 (= e!47951 call!6439)))

(declare-fun b!73313 () Bool)

(assert (=> b!73313 (= e!47949 call!6438)))

(declare-fun b!73314 () Bool)

(assert (=> b!73314 (= c!10899 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 lt!32492))) (bvsgt (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 lt!32492)))) (_1!1071 lt!32485))))))

(assert (=> b!73314 (= e!47951 e!47949)))

(declare-fun b!73315 () Bool)

(assert (=> b!73315 (= e!47950 call!6437)))

(declare-fun bm!6436 () Bool)

(assert (=> bm!6436 (= call!6439 call!6437)))

(declare-fun b!73316 () Bool)

(declare-fun res!38860 () Bool)

(assert (=> b!73316 (=> (not res!38860) (not e!47952))))

(assert (=> b!73316 (= res!38860 (containsKey!137 lt!32810 (_1!1071 lt!32485)))))

(assert (= (and d!16905 c!10901) b!73315))

(assert (= (and d!16905 (not c!10901)) b!73311))

(assert (= (and b!73311 c!10900) b!73312))

(assert (= (and b!73311 (not c!10900)) b!73314))

(assert (= (and b!73314 c!10899) b!73310))

(assert (= (and b!73314 (not c!10899)) b!73313))

(assert (= (or b!73310 b!73313) bm!6434))

(assert (= (or b!73312 bm!6434) bm!6436))

(assert (= (or b!73315 bm!6436) bm!6435))

(assert (= (and bm!6435 c!10902) b!73307))

(assert (= (and bm!6435 (not c!10902)) b!73308))

(assert (= (and d!16905 res!38859) b!73316))

(assert (= (and b!73316 res!38860) b!73309))

(declare-fun m!71589 () Bool)

(assert (=> b!73307 m!71589))

(declare-fun m!71591 () Bool)

(assert (=> b!73309 m!71591))

(declare-fun m!71593 () Bool)

(assert (=> d!16905 m!71593))

(declare-fun m!71595 () Bool)

(assert (=> d!16905 m!71595))

(declare-fun m!71597 () Bool)

(assert (=> bm!6435 m!71597))

(declare-fun m!71599 () Bool)

(assert (=> b!73316 m!71599))

(assert (=> d!16853 d!16905))

(declare-fun bm!6439 () Bool)

(declare-fun call!6442 () (_ BitVec 32))

(assert (=> bm!6439 (= call!6442 (arrayCountValidKeys!0 (_keys!3864 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73325 () Bool)

(declare-fun e!47959 () (_ BitVec 32))

(assert (=> b!73325 (= e!47959 (bvadd #b00000000000000000000000000000001 call!6442))))

(declare-fun b!73326 () Bool)

(declare-fun e!47958 () (_ BitVec 32))

(assert (=> b!73326 (= e!47958 e!47959)))

(declare-fun c!10907 () Bool)

(assert (=> b!73326 (= c!10907 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!16907 () Bool)

(declare-fun lt!32813 () (_ BitVec 32))

(assert (=> d!16907 (and (bvsge lt!32813 #b00000000000000000000000000000000) (bvsle lt!32813 (bvsub (size!2088 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16907 (= lt!32813 e!47958)))

(declare-fun c!10908 () Bool)

(assert (=> d!16907 (= c!10908 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!16907 (and (bvsle #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2088 (_keys!3864 newMap!16)) (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!16907 (= (arrayCountValidKeys!0 (_keys!3864 newMap!16) #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) lt!32813)))

(declare-fun b!73327 () Bool)

(assert (=> b!73327 (= e!47959 call!6442)))

(declare-fun b!73328 () Bool)

(assert (=> b!73328 (= e!47958 #b00000000000000000000000000000000)))

(assert (= (and d!16907 c!10908) b!73328))

(assert (= (and d!16907 (not c!10908)) b!73326))

(assert (= (and b!73326 c!10907) b!73325))

(assert (= (and b!73326 (not c!10907)) b!73327))

(assert (= (or b!73325 b!73327) bm!6439))

(declare-fun m!71601 () Bool)

(assert (=> bm!6439 m!71601))

(declare-fun m!71603 () Bool)

(assert (=> b!73326 m!71603))

(assert (=> b!73326 m!71603))

(declare-fun m!71605 () Bool)

(assert (=> b!73326 m!71605))

(assert (=> b!73060 d!16907))

(declare-fun d!16909 () Bool)

(declare-fun lt!32814 () Bool)

(assert (=> d!16909 (= lt!32814 (select (content!78 (toList!716 lt!32583)) lt!32485))))

(declare-fun e!47961 () Bool)

(assert (=> d!16909 (= lt!32814 e!47961)))

(declare-fun res!38861 () Bool)

(assert (=> d!16909 (=> (not res!38861) (not e!47961))))

(assert (=> d!16909 (= res!38861 ((_ is Cons!1470) (toList!716 lt!32583)))))

(assert (=> d!16909 (= (contains!721 (toList!716 lt!32583) lt!32485) lt!32814)))

(declare-fun b!73329 () Bool)

(declare-fun e!47960 () Bool)

(assert (=> b!73329 (= e!47961 e!47960)))

(declare-fun res!38862 () Bool)

(assert (=> b!73329 (=> res!38862 e!47960)))

(assert (=> b!73329 (= res!38862 (= (h!2057 (toList!716 lt!32583)) lt!32485))))

(declare-fun b!73330 () Bool)

(assert (=> b!73330 (= e!47960 (contains!721 (t!5023 (toList!716 lt!32583)) lt!32485))))

(assert (= (and d!16909 res!38861) b!73329))

(assert (= (and b!73329 (not res!38862)) b!73330))

(declare-fun m!71607 () Bool)

(assert (=> d!16909 m!71607))

(declare-fun m!71609 () Bool)

(assert (=> d!16909 m!71609))

(declare-fun m!71611 () Bool)

(assert (=> b!73330 m!71611))

(assert (=> b!72944 d!16909))

(declare-fun d!16911 () Bool)

(declare-fun lt!32815 () Bool)

(assert (=> d!16911 (= lt!32815 (select (content!78 (toList!716 lt!32579)) lt!32492))))

(declare-fun e!47963 () Bool)

(assert (=> d!16911 (= lt!32815 e!47963)))

(declare-fun res!38863 () Bool)

(assert (=> d!16911 (=> (not res!38863) (not e!47963))))

(assert (=> d!16911 (= res!38863 ((_ is Cons!1470) (toList!716 lt!32579)))))

(assert (=> d!16911 (= (contains!721 (toList!716 lt!32579) lt!32492) lt!32815)))

(declare-fun b!73331 () Bool)

(declare-fun e!47962 () Bool)

(assert (=> b!73331 (= e!47963 e!47962)))

(declare-fun res!38864 () Bool)

(assert (=> b!73331 (=> res!38864 e!47962)))

(assert (=> b!73331 (= res!38864 (= (h!2057 (toList!716 lt!32579)) lt!32492))))

(declare-fun b!73332 () Bool)

(assert (=> b!73332 (= e!47962 (contains!721 (t!5023 (toList!716 lt!32579)) lt!32492))))

(assert (= (and d!16911 res!38863) b!73331))

(assert (= (and b!73331 (not res!38864)) b!73332))

(declare-fun m!71613 () Bool)

(assert (=> d!16911 m!71613))

(declare-fun m!71615 () Bool)

(assert (=> d!16911 m!71615))

(declare-fun m!71617 () Bool)

(assert (=> b!73332 m!71617))

(assert (=> b!72942 d!16911))

(declare-fun b!73333 () Bool)

(declare-fun e!47971 () Bool)

(assert (=> b!73333 (= e!47971 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73334 () Bool)

(declare-fun e!47974 () Bool)

(declare-fun e!47969 () Bool)

(assert (=> b!73334 (= e!47974 e!47969)))

(declare-fun c!10914 () Bool)

(assert (=> b!73334 (= c!10914 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73335 () Bool)

(declare-fun e!47972 () Bool)

(declare-fun call!6447 () Bool)

(assert (=> b!73335 (= e!47972 (not call!6447))))

(declare-fun b!73336 () Bool)

(declare-fun e!47976 () Unit!2076)

(declare-fun Unit!2092 () Unit!2076)

(assert (=> b!73336 (= e!47976 Unit!2092)))

(declare-fun call!6448 () ListLongMap!1401)

(declare-fun bm!6440 () Bool)

(assert (=> bm!6440 (= call!6448 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!73337 () Bool)

(declare-fun e!47968 () Bool)

(assert (=> b!73337 (= e!47972 e!47968)))

(declare-fun res!38867 () Bool)

(assert (=> b!73337 (= res!38867 call!6447)))

(assert (=> b!73337 (=> (not res!38867) (not e!47968))))

(declare-fun bm!6441 () Bool)

(declare-fun call!6443 () ListLongMap!1401)

(declare-fun call!6449 () ListLongMap!1401)

(assert (=> bm!6441 (= call!6443 call!6449)))

(declare-fun b!73338 () Bool)

(declare-fun e!47965 () Bool)

(declare-fun e!47964 () Bool)

(assert (=> b!73338 (= e!47965 e!47964)))

(declare-fun res!38866 () Bool)

(assert (=> b!73338 (=> (not res!38866) (not e!47964))))

(declare-fun lt!32821 () ListLongMap!1401)

(assert (=> b!73338 (= res!38866 (contains!720 lt!32821 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73338 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun bm!6442 () Bool)

(assert (=> bm!6442 (= call!6449 call!6448)))

(declare-fun b!73339 () Bool)

(declare-fun lt!32817 () Unit!2076)

(assert (=> b!73339 (= e!47976 lt!32817)))

(declare-fun lt!32831 () ListLongMap!1401)

(assert (=> b!73339 (= lt!32831 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32836 () (_ BitVec 64))

(assert (=> b!73339 (= lt!32836 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32816 () (_ BitVec 64))

(assert (=> b!73339 (= lt!32816 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32830 () Unit!2076)

(assert (=> b!73339 (= lt!32830 (addStillContains!51 lt!32831 lt!32836 (zeroValue!2114 newMap!16) lt!32816))))

(assert (=> b!73339 (contains!720 (+!93 lt!32831 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16))) lt!32816)))

(declare-fun lt!32825 () Unit!2076)

(assert (=> b!73339 (= lt!32825 lt!32830)))

(declare-fun lt!32834 () ListLongMap!1401)

(assert (=> b!73339 (= lt!32834 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32829 () (_ BitVec 64))

(assert (=> b!73339 (= lt!32829 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32833 () (_ BitVec 64))

(assert (=> b!73339 (= lt!32833 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32832 () Unit!2076)

(assert (=> b!73339 (= lt!32832 (addApplyDifferent!51 lt!32834 lt!32829 (minValue!2114 newMap!16) lt!32833))))

(assert (=> b!73339 (= (apply!75 (+!93 lt!32834 (tuple2!2121 lt!32829 (minValue!2114 newMap!16))) lt!32833) (apply!75 lt!32834 lt!32833))))

(declare-fun lt!32822 () Unit!2076)

(assert (=> b!73339 (= lt!32822 lt!32832)))

(declare-fun lt!32819 () ListLongMap!1401)

(assert (=> b!73339 (= lt!32819 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32820 () (_ BitVec 64))

(assert (=> b!73339 (= lt!32820 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32827 () (_ BitVec 64))

(assert (=> b!73339 (= lt!32827 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32835 () Unit!2076)

(assert (=> b!73339 (= lt!32835 (addApplyDifferent!51 lt!32819 lt!32820 (zeroValue!2114 newMap!16) lt!32827))))

(assert (=> b!73339 (= (apply!75 (+!93 lt!32819 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16))) lt!32827) (apply!75 lt!32819 lt!32827))))

(declare-fun lt!32818 () Unit!2076)

(assert (=> b!73339 (= lt!32818 lt!32835)))

(declare-fun lt!32823 () ListLongMap!1401)

(assert (=> b!73339 (= lt!32823 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32828 () (_ BitVec 64))

(assert (=> b!73339 (= lt!32828 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32837 () (_ BitVec 64))

(assert (=> b!73339 (= lt!32837 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73339 (= lt!32817 (addApplyDifferent!51 lt!32823 lt!32828 (minValue!2114 newMap!16) lt!32837))))

(assert (=> b!73339 (= (apply!75 (+!93 lt!32823 (tuple2!2121 lt!32828 (minValue!2114 newMap!16))) lt!32837) (apply!75 lt!32823 lt!32837))))

(declare-fun bm!6443 () Bool)

(declare-fun call!6446 () ListLongMap!1401)

(declare-fun call!6445 () ListLongMap!1401)

(assert (=> bm!6443 (= call!6446 call!6445)))

(declare-fun b!73340 () Bool)

(declare-fun e!47966 () ListLongMap!1401)

(assert (=> b!73340 (= e!47966 call!6446)))

(declare-fun b!73341 () Bool)

(declare-fun res!38872 () Bool)

(assert (=> b!73341 (=> (not res!38872) (not e!47974))))

(assert (=> b!73341 (= res!38872 e!47972)))

(declare-fun c!10910 () Bool)

(assert (=> b!73341 (= c!10910 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!73342 () Bool)

(declare-fun call!6444 () Bool)

(assert (=> b!73342 (= e!47969 (not call!6444))))

(declare-fun b!73343 () Bool)

(declare-fun e!47975 () ListLongMap!1401)

(assert (=> b!73343 (= e!47975 (+!93 call!6445 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!73344 () Bool)

(assert (=> b!73344 (= e!47975 e!47966)))

(declare-fun c!10911 () Bool)

(assert (=> b!73344 (= c!10911 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!10909 () Bool)

(declare-fun bm!6444 () Bool)

(assert (=> bm!6444 (= call!6445 (+!93 (ite c!10909 call!6448 (ite c!10911 call!6449 call!6443)) (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!73345 () Bool)

(declare-fun res!38865 () Bool)

(assert (=> b!73345 (=> (not res!38865) (not e!47974))))

(assert (=> b!73345 (= res!38865 e!47965)))

(declare-fun res!38870 () Bool)

(assert (=> b!73345 (=> res!38870 e!47965)))

(declare-fun e!47970 () Bool)

(assert (=> b!73345 (= res!38870 (not e!47970))))

(declare-fun res!38873 () Bool)

(assert (=> b!73345 (=> (not res!38873) (not e!47970))))

(assert (=> b!73345 (= res!38873 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73346 () Bool)

(assert (=> b!73346 (= e!47968 (= (apply!75 lt!32821 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!73347 () Bool)

(declare-fun e!47973 () ListLongMap!1401)

(assert (=> b!73347 (= e!47973 call!6443)))

(declare-fun b!73348 () Bool)

(declare-fun e!47967 () Bool)

(assert (=> b!73348 (= e!47969 e!47967)))

(declare-fun res!38869 () Bool)

(assert (=> b!73348 (= res!38869 call!6444)))

(assert (=> b!73348 (=> (not res!38869) (not e!47967))))

(declare-fun bm!6445 () Bool)

(assert (=> bm!6445 (= call!6447 (contains!720 lt!32821 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16913 () Bool)

(assert (=> d!16913 e!47974))

(declare-fun res!38871 () Bool)

(assert (=> d!16913 (=> (not res!38871) (not e!47974))))

(assert (=> d!16913 (= res!38871 (or (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))))

(declare-fun lt!32826 () ListLongMap!1401)

(assert (=> d!16913 (= lt!32821 lt!32826)))

(declare-fun lt!32824 () Unit!2076)

(assert (=> d!16913 (= lt!32824 e!47976)))

(declare-fun c!10912 () Bool)

(assert (=> d!16913 (= c!10912 e!47971)))

(declare-fun res!38868 () Bool)

(assert (=> d!16913 (=> (not res!38868) (not e!47971))))

(assert (=> d!16913 (= res!38868 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!16913 (= lt!32826 e!47975)))

(assert (=> d!16913 (= c!10909 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16913 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!16913 (= (getCurrentListMap!414 (_keys!3864 newMap!16) (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!32821)))

(declare-fun bm!6446 () Bool)

(assert (=> bm!6446 (= call!6444 (contains!720 lt!32821 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73349 () Bool)

(assert (=> b!73349 (= e!47973 call!6446)))

(declare-fun b!73350 () Bool)

(assert (=> b!73350 (= e!47964 (= (apply!75 lt!32821 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73350 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))))))))

(assert (=> b!73350 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73351 () Bool)

(assert (=> b!73351 (= e!47967 (= (apply!75 lt!32821 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun b!73352 () Bool)

(assert (=> b!73352 (= e!47970 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73353 () Bool)

(declare-fun c!10913 () Bool)

(assert (=> b!73353 (= c!10913 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73353 (= e!47966 e!47973)))

(assert (= (and d!16913 c!10909) b!73343))

(assert (= (and d!16913 (not c!10909)) b!73344))

(assert (= (and b!73344 c!10911) b!73340))

(assert (= (and b!73344 (not c!10911)) b!73353))

(assert (= (and b!73353 c!10913) b!73349))

(assert (= (and b!73353 (not c!10913)) b!73347))

(assert (= (or b!73349 b!73347) bm!6441))

(assert (= (or b!73340 bm!6441) bm!6442))

(assert (= (or b!73340 b!73349) bm!6443))

(assert (= (or b!73343 bm!6442) bm!6440))

(assert (= (or b!73343 bm!6443) bm!6444))

(assert (= (and d!16913 res!38868) b!73333))

(assert (= (and d!16913 c!10912) b!73339))

(assert (= (and d!16913 (not c!10912)) b!73336))

(assert (= (and d!16913 res!38871) b!73345))

(assert (= (and b!73345 res!38873) b!73352))

(assert (= (and b!73345 (not res!38870)) b!73338))

(assert (= (and b!73338 res!38866) b!73350))

(assert (= (and b!73345 res!38865) b!73341))

(assert (= (and b!73341 c!10910) b!73337))

(assert (= (and b!73341 (not c!10910)) b!73335))

(assert (= (and b!73337 res!38867) b!73346))

(assert (= (or b!73337 b!73335) bm!6445))

(assert (= (and b!73341 res!38872) b!73334))

(assert (= (and b!73334 c!10914) b!73348))

(assert (= (and b!73334 (not c!10914)) b!73342))

(assert (= (and b!73348 res!38869) b!73351))

(assert (= (or b!73348 b!73342) bm!6446))

(declare-fun b_lambda!3299 () Bool)

(assert (=> (not b_lambda!3299) (not b!73350)))

(declare-fun t!5036 () Bool)

(declare-fun tb!1533 () Bool)

(assert (=> (and b!72793 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16)) t!5036) tb!1533))

(declare-fun result!2689 () Bool)

(assert (=> tb!1533 (= result!2689 tp_is_empty!2473)))

(assert (=> b!73350 t!5036))

(declare-fun b_and!4505 () Bool)

(assert (= b_and!4501 (and (=> t!5036 result!2689) b_and!4505)))

(declare-fun t!5038 () Bool)

(declare-fun tb!1535 () Bool)

(assert (=> (and b!72792 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 newMap!16)) t!5038) tb!1535))

(declare-fun result!2691 () Bool)

(assert (= result!2691 result!2689))

(assert (=> b!73350 t!5038))

(declare-fun b_and!4507 () Bool)

(assert (= b_and!4503 (and (=> t!5038 result!2691) b_and!4507)))

(assert (=> b!73338 m!71603))

(assert (=> b!73338 m!71603))

(declare-fun m!71619 () Bool)

(assert (=> b!73338 m!71619))

(declare-fun m!71621 () Bool)

(assert (=> b!73339 m!71621))

(declare-fun m!71623 () Bool)

(assert (=> b!73339 m!71623))

(declare-fun m!71625 () Bool)

(assert (=> b!73339 m!71625))

(assert (=> b!73339 m!71603))

(declare-fun m!71627 () Bool)

(assert (=> b!73339 m!71627))

(declare-fun m!71629 () Bool)

(assert (=> b!73339 m!71629))

(declare-fun m!71631 () Bool)

(assert (=> b!73339 m!71631))

(declare-fun m!71633 () Bool)

(assert (=> b!73339 m!71633))

(declare-fun m!71635 () Bool)

(assert (=> b!73339 m!71635))

(declare-fun m!71637 () Bool)

(assert (=> b!73339 m!71637))

(assert (=> b!73339 m!71635))

(assert (=> b!73339 m!71621))

(declare-fun m!71639 () Bool)

(assert (=> b!73339 m!71639))

(declare-fun m!71641 () Bool)

(assert (=> b!73339 m!71641))

(assert (=> b!73339 m!71627))

(declare-fun m!71643 () Bool)

(assert (=> b!73339 m!71643))

(assert (=> b!73339 m!71639))

(declare-fun m!71645 () Bool)

(assert (=> b!73339 m!71645))

(declare-fun m!71647 () Bool)

(assert (=> b!73339 m!71647))

(declare-fun m!71649 () Bool)

(assert (=> b!73339 m!71649))

(declare-fun m!71651 () Bool)

(assert (=> b!73339 m!71651))

(assert (=> b!73333 m!71603))

(assert (=> b!73333 m!71603))

(assert (=> b!73333 m!71605))

(declare-fun m!71653 () Bool)

(assert (=> bm!6446 m!71653))

(assert (=> bm!6440 m!71647))

(declare-fun m!71655 () Bool)

(assert (=> bm!6445 m!71655))

(assert (=> d!16913 m!71557))

(declare-fun m!71657 () Bool)

(assert (=> bm!6444 m!71657))

(declare-fun m!71659 () Bool)

(assert (=> b!73343 m!71659))

(declare-fun m!71661 () Bool)

(assert (=> b!73351 m!71661))

(assert (=> b!73352 m!71603))

(assert (=> b!73352 m!71603))

(assert (=> b!73352 m!71605))

(declare-fun m!71663 () Bool)

(assert (=> b!73350 m!71663))

(assert (=> b!73350 m!71603))

(assert (=> b!73350 m!71603))

(declare-fun m!71665 () Bool)

(assert (=> b!73350 m!71665))

(declare-fun m!71667 () Bool)

(assert (=> b!73350 m!71667))

(assert (=> b!73350 m!71663))

(declare-fun m!71669 () Bool)

(assert (=> b!73350 m!71669))

(assert (=> b!73350 m!71667))

(declare-fun m!71671 () Bool)

(assert (=> b!73346 m!71671))

(assert (=> bm!6419 d!16913))

(declare-fun d!16915 () Bool)

(assert (=> d!16915 (isDefined!86 (getValueByKey!134 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun lt!32840 () Unit!2076)

(declare-fun choose!420 (List!1474 (_ BitVec 64)) Unit!2076)

(assert (=> d!16915 (= lt!32840 (choose!420 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun e!47979 () Bool)

(assert (=> d!16915 e!47979))

(declare-fun res!38876 () Bool)

(assert (=> d!16915 (=> (not res!38876) (not e!47979))))

(assert (=> d!16915 (= res!38876 (isStrictlySorted!279 (toList!716 lt!32488)))))

(assert (=> d!16915 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) lt!32840)))

(declare-fun b!73356 () Bool)

(assert (=> b!73356 (= e!47979 (containsKey!137 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (= (and d!16915 res!38876) b!73356))

(assert (=> d!16915 m!71143))

(assert (=> d!16915 m!71477))

(assert (=> d!16915 m!71477))

(assert (=> d!16915 m!71479))

(assert (=> d!16915 m!71143))

(declare-fun m!71673 () Bool)

(assert (=> d!16915 m!71673))

(declare-fun m!71675 () Bool)

(assert (=> d!16915 m!71675))

(assert (=> b!73356 m!71143))

(assert (=> b!73356 m!71473))

(assert (=> b!73096 d!16915))

(assert (=> b!73096 d!16895))

(assert (=> b!73096 d!16897))

(declare-fun d!16917 () Bool)

(assert (=> d!16917 (= (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73033 d!16917))

(declare-fun d!16919 () Bool)

(assert (=> d!16919 (= (get!1152 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) from!355) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72990 d!16919))

(declare-fun d!16921 () Bool)

(declare-fun e!47980 () Bool)

(assert (=> d!16921 e!47980))

(declare-fun res!38877 () Bool)

(assert (=> d!16921 (=> res!38877 e!47980)))

(declare-fun lt!32842 () Bool)

(assert (=> d!16921 (= res!38877 (not lt!32842))))

(declare-fun lt!32844 () Bool)

(assert (=> d!16921 (= lt!32842 lt!32844)))

(declare-fun lt!32843 () Unit!2076)

(declare-fun e!47981 () Unit!2076)

(assert (=> d!16921 (= lt!32843 e!47981)))

(declare-fun c!10915 () Bool)

(assert (=> d!16921 (= c!10915 lt!32844)))

(assert (=> d!16921 (= lt!32844 (containsKey!137 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16921 (= (contains!720 lt!32666 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32842)))

(declare-fun b!73357 () Bool)

(declare-fun lt!32841 () Unit!2076)

(assert (=> b!73357 (= e!47981 lt!32841)))

(assert (=> b!73357 (= lt!32841 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73357 (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73358 () Bool)

(declare-fun Unit!2093 () Unit!2076)

(assert (=> b!73358 (= e!47981 Unit!2093)))

(declare-fun b!73359 () Bool)

(assert (=> b!73359 (= e!47980 (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16921 c!10915) b!73357))

(assert (= (and d!16921 (not c!10915)) b!73358))

(assert (= (and d!16921 (not res!38877)) b!73359))

(declare-fun m!71677 () Bool)

(assert (=> d!16921 m!71677))

(declare-fun m!71679 () Bool)

(assert (=> b!73357 m!71679))

(declare-fun m!71681 () Bool)

(assert (=> b!73357 m!71681))

(assert (=> b!73357 m!71681))

(declare-fun m!71683 () Bool)

(assert (=> b!73357 m!71683))

(assert (=> b!73359 m!71681))

(assert (=> b!73359 m!71681))

(assert (=> b!73359 m!71683))

(assert (=> bm!6351 d!16921))

(declare-fun d!16923 () Bool)

(declare-fun c!10916 () Bool)

(assert (=> d!16923 (= c!10916 ((_ is ValueCellFull!893) (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47982 () V!2945)

(assert (=> d!16923 (= (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47982)))

(declare-fun b!73360 () Bool)

(assert (=> b!73360 (= e!47982 (get!1151 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73361 () Bool)

(assert (=> b!73361 (= e!47982 (get!1152 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16923 c!10916) b!73360))

(assert (= (and d!16923 (not c!10916)) b!73361))

(assert (=> b!73360 m!71373))

(assert (=> b!73360 m!71147))

(declare-fun m!71685 () Bool)

(assert (=> b!73360 m!71685))

(assert (=> b!73361 m!71373))

(assert (=> b!73361 m!71147))

(declare-fun m!71687 () Bool)

(assert (=> b!73361 m!71687))

(assert (=> b!72974 d!16923))

(declare-fun d!16925 () Bool)

(declare-fun e!47983 () Bool)

(assert (=> d!16925 e!47983))

(declare-fun res!38878 () Bool)

(assert (=> d!16925 (=> (not res!38878) (not e!47983))))

(declare-fun lt!32847 () ListLongMap!1401)

(assert (=> d!16925 (= res!38878 (contains!720 lt!32847 (_1!1071 (tuple2!2121 lt!32612 lt!32616))))))

(declare-fun lt!32848 () List!1474)

(assert (=> d!16925 (= lt!32847 (ListLongMap!1402 lt!32848))))

(declare-fun lt!32846 () Unit!2076)

(declare-fun lt!32845 () Unit!2076)

(assert (=> d!16925 (= lt!32846 lt!32845)))

(assert (=> d!16925 (= (getValueByKey!134 lt!32848 (_1!1071 (tuple2!2121 lt!32612 lt!32616))) (Some!139 (_2!1071 (tuple2!2121 lt!32612 lt!32616))))))

(assert (=> d!16925 (= lt!32845 (lemmaContainsTupThenGetReturnValue!51 lt!32848 (_1!1071 (tuple2!2121 lt!32612 lt!32616)) (_2!1071 (tuple2!2121 lt!32612 lt!32616))))))

(assert (=> d!16925 (= lt!32848 (insertStrictlySorted!54 (toList!716 lt!32613) (_1!1071 (tuple2!2121 lt!32612 lt!32616)) (_2!1071 (tuple2!2121 lt!32612 lt!32616))))))

(assert (=> d!16925 (= (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)) lt!32847)))

(declare-fun b!73362 () Bool)

(declare-fun res!38879 () Bool)

(assert (=> b!73362 (=> (not res!38879) (not e!47983))))

(assert (=> b!73362 (= res!38879 (= (getValueByKey!134 (toList!716 lt!32847) (_1!1071 (tuple2!2121 lt!32612 lt!32616))) (Some!139 (_2!1071 (tuple2!2121 lt!32612 lt!32616)))))))

(declare-fun b!73363 () Bool)

(assert (=> b!73363 (= e!47983 (contains!721 (toList!716 lt!32847) (tuple2!2121 lt!32612 lt!32616)))))

(assert (= (and d!16925 res!38878) b!73362))

(assert (= (and b!73362 res!38879) b!73363))

(declare-fun m!71689 () Bool)

(assert (=> d!16925 m!71689))

(declare-fun m!71691 () Bool)

(assert (=> d!16925 m!71691))

(declare-fun m!71693 () Bool)

(assert (=> d!16925 m!71693))

(declare-fun m!71695 () Bool)

(assert (=> d!16925 m!71695))

(declare-fun m!71697 () Bool)

(assert (=> b!73362 m!71697))

(declare-fun m!71699 () Bool)

(assert (=> b!73363 m!71699))

(assert (=> b!72974 d!16925))

(declare-fun d!16927 () Bool)

(assert (=> d!16927 (not (contains!720 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)) lt!32615))))

(declare-fun lt!32851 () Unit!2076)

(declare-fun choose!421 (ListLongMap!1401 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2076)

(assert (=> d!16927 (= lt!32851 (choose!421 lt!32613 lt!32612 lt!32616 lt!32615))))

(declare-fun e!47986 () Bool)

(assert (=> d!16927 e!47986))

(declare-fun res!38882 () Bool)

(assert (=> d!16927 (=> (not res!38882) (not e!47986))))

(assert (=> d!16927 (= res!38882 (not (contains!720 lt!32613 lt!32615)))))

(assert (=> d!16927 (= (addStillNotContains!26 lt!32613 lt!32612 lt!32616 lt!32615) lt!32851)))

(declare-fun b!73367 () Bool)

(assert (=> b!73367 (= e!47986 (not (= lt!32612 lt!32615)))))

(assert (= (and d!16927 res!38882) b!73367))

(assert (=> d!16927 m!71377))

(assert (=> d!16927 m!71377))

(assert (=> d!16927 m!71379))

(declare-fun m!71701 () Bool)

(assert (=> d!16927 m!71701))

(declare-fun m!71703 () Bool)

(assert (=> d!16927 m!71703))

(assert (=> b!72974 d!16927))

(declare-fun d!16929 () Bool)

(declare-fun e!47987 () Bool)

(assert (=> d!16929 e!47987))

(declare-fun res!38883 () Bool)

(assert (=> d!16929 (=> (not res!38883) (not e!47987))))

(declare-fun lt!32854 () ListLongMap!1401)

(assert (=> d!16929 (= res!38883 (contains!720 lt!32854 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!32855 () List!1474)

(assert (=> d!16929 (= lt!32854 (ListLongMap!1402 lt!32855))))

(declare-fun lt!32853 () Unit!2076)

(declare-fun lt!32852 () Unit!2076)

(assert (=> d!16929 (= lt!32853 lt!32852)))

(assert (=> d!16929 (= (getValueByKey!134 lt!32855 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16929 (= lt!32852 (lemmaContainsTupThenGetReturnValue!51 lt!32855 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16929 (= lt!32855 (insertStrictlySorted!54 (toList!716 call!6334) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16929 (= (+!93 call!6334 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!32854)))

(declare-fun b!73368 () Bool)

(declare-fun res!38884 () Bool)

(assert (=> b!73368 (=> (not res!38884) (not e!47987))))

(assert (=> b!73368 (= res!38884 (= (getValueByKey!134 (toList!716 lt!32854) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!73369 () Bool)

(assert (=> b!73369 (= e!47987 (contains!721 (toList!716 lt!32854) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16929 res!38883) b!73368))

(assert (= (and b!73368 res!38884) b!73369))

(declare-fun m!71705 () Bool)

(assert (=> d!16929 m!71705))

(declare-fun m!71707 () Bool)

(assert (=> d!16929 m!71707))

(declare-fun m!71709 () Bool)

(assert (=> d!16929 m!71709))

(declare-fun m!71711 () Bool)

(assert (=> d!16929 m!71711))

(declare-fun m!71713 () Bool)

(assert (=> b!73368 m!71713))

(declare-fun m!71715 () Bool)

(assert (=> b!73369 m!71715))

(assert (=> b!72974 d!16929))

(declare-fun d!16931 () Bool)

(declare-fun e!47988 () Bool)

(assert (=> d!16931 e!47988))

(declare-fun res!38885 () Bool)

(assert (=> d!16931 (=> res!38885 e!47988)))

(declare-fun lt!32857 () Bool)

(assert (=> d!16931 (= res!38885 (not lt!32857))))

(declare-fun lt!32859 () Bool)

(assert (=> d!16931 (= lt!32857 lt!32859)))

(declare-fun lt!32858 () Unit!2076)

(declare-fun e!47989 () Unit!2076)

(assert (=> d!16931 (= lt!32858 e!47989)))

(declare-fun c!10917 () Bool)

(assert (=> d!16931 (= c!10917 lt!32859)))

(assert (=> d!16931 (= lt!32859 (containsKey!137 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615))))

(assert (=> d!16931 (= (contains!720 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)) lt!32615) lt!32857)))

(declare-fun b!73370 () Bool)

(declare-fun lt!32856 () Unit!2076)

(assert (=> b!73370 (= e!47989 lt!32856)))

(assert (=> b!73370 (= lt!32856 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615))))

(assert (=> b!73370 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615))))

(declare-fun b!73371 () Bool)

(declare-fun Unit!2094 () Unit!2076)

(assert (=> b!73371 (= e!47989 Unit!2094)))

(declare-fun b!73372 () Bool)

(assert (=> b!73372 (= e!47988 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615)))))

(assert (= (and d!16931 c!10917) b!73370))

(assert (= (and d!16931 (not c!10917)) b!73371))

(assert (= (and d!16931 (not res!38885)) b!73372))

(declare-fun m!71717 () Bool)

(assert (=> d!16931 m!71717))

(declare-fun m!71719 () Bool)

(assert (=> b!73370 m!71719))

(declare-fun m!71721 () Bool)

(assert (=> b!73370 m!71721))

(assert (=> b!73370 m!71721))

(declare-fun m!71723 () Bool)

(assert (=> b!73370 m!71723))

(assert (=> b!73372 m!71721))

(assert (=> b!73372 m!71721))

(assert (=> b!73372 m!71723))

(assert (=> b!72974 d!16931))

(declare-fun d!16933 () Bool)

(declare-fun e!47990 () Bool)

(assert (=> d!16933 e!47990))

(declare-fun res!38886 () Bool)

(assert (=> d!16933 (=> res!38886 e!47990)))

(declare-fun lt!32861 () Bool)

(assert (=> d!16933 (= res!38886 (not lt!32861))))

(declare-fun lt!32863 () Bool)

(assert (=> d!16933 (= lt!32861 lt!32863)))

(declare-fun lt!32862 () Unit!2076)

(declare-fun e!47991 () Unit!2076)

(assert (=> d!16933 (= lt!32862 e!47991)))

(declare-fun c!10918 () Bool)

(assert (=> d!16933 (= c!10918 lt!32863)))

(assert (=> d!16933 (= lt!32863 (containsKey!137 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(assert (=> d!16933 (= (contains!720 call!6429 (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))) lt!32861)))

(declare-fun b!73373 () Bool)

(declare-fun lt!32860 () Unit!2076)

(assert (=> b!73373 (= e!47991 lt!32860)))

(assert (=> b!73373 (= lt!32860 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(assert (=> b!73373 (isDefined!86 (getValueByKey!134 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(declare-fun b!73374 () Bool)

(declare-fun Unit!2095 () Unit!2076)

(assert (=> b!73374 (= e!47991 Unit!2095)))

(declare-fun b!73375 () Bool)

(assert (=> b!73375 (= e!47990 (isDefined!86 (getValueByKey!134 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773)))))))

(assert (= (and d!16933 c!10918) b!73373))

(assert (= (and d!16933 (not c!10918)) b!73374))

(assert (= (and d!16933 (not res!38886)) b!73375))

(assert (=> d!16933 m!71485))

(declare-fun m!71725 () Bool)

(assert (=> d!16933 m!71725))

(assert (=> b!73373 m!71485))

(declare-fun m!71727 () Bool)

(assert (=> b!73373 m!71727))

(assert (=> b!73373 m!71485))

(declare-fun m!71729 () Bool)

(assert (=> b!73373 m!71729))

(assert (=> b!73373 m!71729))

(declare-fun m!71731 () Bool)

(assert (=> b!73373 m!71731))

(assert (=> b!73375 m!71485))

(assert (=> b!73375 m!71729))

(assert (=> b!73375 m!71729))

(assert (=> b!73375 m!71731))

(assert (=> b!73183 d!16933))

(declare-fun d!16935 () Bool)

(declare-fun e!47994 () Bool)

(assert (=> d!16935 e!47994))

(declare-fun res!38889 () Bool)

(assert (=> d!16935 (=> (not res!38889) (not e!47994))))

(assert (=> d!16935 (= res!38889 (and (bvsge (index!3052 lt!32773) #b00000000000000000000000000000000) (bvslt (index!3052 lt!32773) (size!2088 (_keys!3864 newMap!16)))))))

(declare-fun lt!32866 () Unit!2076)

(declare-fun choose!422 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) Int) Unit!2076)

(assert (=> d!16935 (= lt!32866 (choose!422 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3052 lt!32773) (defaultEntry!2212 newMap!16)))))

(assert (=> d!16935 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!16935 (= (lemmaValidKeyInArrayIsInListMap!84 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3052 lt!32773) (defaultEntry!2212 newMap!16)) lt!32866)))

(declare-fun b!73378 () Bool)

(assert (=> b!73378 (= e!47994 (contains!720 (getCurrentListMap!414 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(assert (= (and d!16935 res!38889) b!73378))

(declare-fun m!71733 () Bool)

(assert (=> d!16935 m!71733))

(assert (=> d!16935 m!71557))

(declare-fun m!71735 () Bool)

(assert (=> b!73378 m!71735))

(assert (=> b!73378 m!71485))

(assert (=> b!73378 m!71735))

(assert (=> b!73378 m!71485))

(declare-fun m!71737 () Bool)

(assert (=> b!73378 m!71737))

(assert (=> b!73183 d!16935))

(declare-fun d!16937 () Bool)

(declare-fun e!47997 () Bool)

(assert (=> d!16937 e!47997))

(declare-fun res!38892 () Bool)

(assert (=> d!16937 (=> (not res!38892) (not e!47997))))

(assert (=> d!16937 (= res!38892 (and (bvsge (index!3052 lt!32773) #b00000000000000000000000000000000) (bvslt (index!3052 lt!32773) (size!2089 (_values!2195 newMap!16)))))))

(declare-fun lt!32869 () Unit!2076)

(declare-fun choose!423 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) (_ BitVec 64) V!2945 Int) Unit!2076)

(assert (=> d!16937 (= lt!32869 (choose!423 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3052 lt!32773) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 (defaultEntry!2212 newMap!16)))))

(assert (=> d!16937 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!16937 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3052 lt!32773) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 (defaultEntry!2212 newMap!16)) lt!32869)))

(declare-fun b!73381 () Bool)

(assert (=> b!73381 (= e!47997 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (getCurrentListMap!414 (_keys!3864 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))))))

(assert (= (and d!16937 res!38892) b!73381))

(assert (=> d!16937 m!71143))

(declare-fun m!71739 () Bool)

(assert (=> d!16937 m!71739))

(assert (=> d!16937 m!71557))

(assert (=> b!73381 m!71403))

(assert (=> b!73381 m!71403))

(declare-fun m!71741 () Bool)

(assert (=> b!73381 m!71741))

(assert (=> b!73381 m!71483))

(declare-fun m!71743 () Bool)

(assert (=> b!73381 m!71743))

(assert (=> b!73183 d!16937))

(declare-fun b!73382 () Bool)

(declare-fun e!48000 () Bool)

(declare-fun e!48001 () Bool)

(assert (=> b!73382 (= e!48000 e!48001)))

(declare-fun res!38894 () Bool)

(assert (=> b!73382 (=> (not res!38894) (not e!48001))))

(declare-fun e!47999 () Bool)

(assert (=> b!73382 (= res!38894 (not e!47999))))

(declare-fun res!38895 () Bool)

(assert (=> b!73382 (=> (not res!38895) (not e!47999))))

(assert (=> b!73382 (= res!38895 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6447 () Bool)

(declare-fun call!6450 () Bool)

(declare-fun c!10919 () Bool)

(assert (=> bm!6447 (= call!6450 (arrayNoDuplicates!0 (_keys!3864 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10919 (Cons!1469 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) Nil!1470) Nil!1470)))))

(declare-fun b!73383 () Bool)

(declare-fun e!47998 () Bool)

(assert (=> b!73383 (= e!48001 e!47998)))

(assert (=> b!73383 (= c!10919 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!16939 () Bool)

(declare-fun res!38893 () Bool)

(assert (=> d!16939 (=> res!38893 e!48000)))

(assert (=> d!16939 (= res!38893 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!16939 (= (arrayNoDuplicates!0 (_keys!3864 newMap!16) #b00000000000000000000000000000000 Nil!1470) e!48000)))

(declare-fun b!73384 () Bool)

(assert (=> b!73384 (= e!47998 call!6450)))

(declare-fun b!73385 () Bool)

(assert (=> b!73385 (= e!47998 call!6450)))

(declare-fun b!73386 () Bool)

(assert (=> b!73386 (= e!47999 (contains!722 Nil!1470 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!16939 (not res!38893)) b!73382))

(assert (= (and b!73382 res!38895) b!73386))

(assert (= (and b!73382 res!38894) b!73383))

(assert (= (and b!73383 c!10919) b!73385))

(assert (= (and b!73383 (not c!10919)) b!73384))

(assert (= (or b!73385 b!73384) bm!6447))

(assert (=> b!73382 m!71603))

(assert (=> b!73382 m!71603))

(assert (=> b!73382 m!71605))

(assert (=> bm!6447 m!71603))

(declare-fun m!71745 () Bool)

(assert (=> bm!6447 m!71745))

(assert (=> b!73383 m!71603))

(assert (=> b!73383 m!71603))

(assert (=> b!73383 m!71605))

(assert (=> b!73386 m!71603))

(assert (=> b!73386 m!71603))

(declare-fun m!71747 () Bool)

(assert (=> b!73386 m!71747))

(assert (=> b!73062 d!16939))

(declare-fun d!16941 () Bool)

(declare-fun e!48002 () Bool)

(assert (=> d!16941 e!48002))

(declare-fun res!38896 () Bool)

(assert (=> d!16941 (=> res!38896 e!48002)))

(declare-fun lt!32871 () Bool)

(assert (=> d!16941 (= res!38896 (not lt!32871))))

(declare-fun lt!32873 () Bool)

(assert (=> d!16941 (= lt!32871 lt!32873)))

(declare-fun lt!32872 () Unit!2076)

(declare-fun e!48003 () Unit!2076)

(assert (=> d!16941 (= lt!32872 e!48003)))

(declare-fun c!10920 () Bool)

(assert (=> d!16941 (= c!10920 lt!32873)))

(assert (=> d!16941 (= lt!32873 (containsKey!137 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!16941 (= (contains!720 lt!32666 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32871)))

(declare-fun b!73387 () Bool)

(declare-fun lt!32870 () Unit!2076)

(assert (=> b!73387 (= e!48003 lt!32870)))

(assert (=> b!73387 (= lt!32870 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73387 (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73388 () Bool)

(declare-fun Unit!2096 () Unit!2076)

(assert (=> b!73388 (= e!48003 Unit!2096)))

(declare-fun b!73389 () Bool)

(assert (=> b!73389 (= e!48002 (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!16941 c!10920) b!73387))

(assert (= (and d!16941 (not c!10920)) b!73388))

(assert (= (and d!16941 (not res!38896)) b!73389))

(assert (=> d!16941 m!71385))

(declare-fun m!71749 () Bool)

(assert (=> d!16941 m!71749))

(assert (=> b!73387 m!71385))

(declare-fun m!71751 () Bool)

(assert (=> b!73387 m!71751))

(assert (=> b!73387 m!71385))

(declare-fun m!71753 () Bool)

(assert (=> b!73387 m!71753))

(assert (=> b!73387 m!71753))

(declare-fun m!71755 () Bool)

(assert (=> b!73387 m!71755))

(assert (=> b!73389 m!71385))

(assert (=> b!73389 m!71753))

(assert (=> b!73389 m!71753))

(assert (=> b!73389 m!71755))

(assert (=> b!73038 d!16941))

(declare-fun d!16943 () Bool)

(declare-fun get!1153 (Option!140) V!2945)

(assert (=> d!16943 (= (apply!75 lt!32614 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1153 (getValueByKey!134 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3156 () Bool)

(assert (= bs!3156 d!16943))

(assert (=> bs!3156 m!71385))

(declare-fun m!71757 () Bool)

(assert (=> bs!3156 m!71757))

(assert (=> bs!3156 m!71757))

(declare-fun m!71759 () Bool)

(assert (=> bs!3156 m!71759))

(assert (=> b!72981 d!16943))

(assert (=> b!72981 d!16923))

(declare-fun b!73406 () Bool)

(declare-fun res!38908 () Bool)

(declare-fun e!48014 () Bool)

(assert (=> b!73406 (=> (not res!38908) (not e!48014))))

(declare-fun call!6456 () Bool)

(assert (=> b!73406 (= res!38908 call!6456)))

(declare-fun e!48013 () Bool)

(assert (=> b!73406 (= e!48013 e!48014)))

(declare-fun b!73407 () Bool)

(declare-fun lt!32879 () SeekEntryResult!230)

(assert (=> b!73407 (= e!48013 ((_ is Undefined!230) lt!32879))))

(declare-fun b!73408 () Bool)

(declare-fun e!48015 () Bool)

(declare-fun call!6455 () Bool)

(assert (=> b!73408 (= e!48015 (not call!6455))))

(declare-fun b!73409 () Bool)

(declare-fun e!48012 () Bool)

(assert (=> b!73409 (= e!48012 e!48015)))

(declare-fun res!38906 () Bool)

(assert (=> b!73409 (= res!38906 call!6456)))

(assert (=> b!73409 (=> (not res!38906) (not e!48015))))

(declare-fun d!16945 () Bool)

(assert (=> d!16945 e!48012))

(declare-fun c!10925 () Bool)

(assert (=> d!16945 (= c!10925 ((_ is MissingZero!230) lt!32879))))

(assert (=> d!16945 (= lt!32879 (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun lt!32878 () Unit!2076)

(declare-fun choose!424 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) Int) Unit!2076)

(assert (=> d!16945 (= lt!32878 (choose!424 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(assert (=> d!16945 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!16945 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)) lt!32878)))

(declare-fun b!73410 () Bool)

(declare-fun res!38907 () Bool)

(assert (=> b!73410 (=> (not res!38907) (not e!48014))))

(assert (=> b!73410 (= res!38907 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3054 lt!32879)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73410 (and (bvsge (index!3054 lt!32879) #b00000000000000000000000000000000) (bvslt (index!3054 lt!32879) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73411 () Bool)

(assert (=> b!73411 (and (bvsge (index!3051 lt!32879) #b00000000000000000000000000000000) (bvslt (index!3051 lt!32879) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun res!38905 () Bool)

(assert (=> b!73411 (= res!38905 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3051 lt!32879)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73411 (=> (not res!38905) (not e!48015))))

(declare-fun b!73412 () Bool)

(assert (=> b!73412 (= e!48014 (not call!6455))))

(declare-fun bm!6452 () Bool)

(assert (=> bm!6452 (= call!6455 (arrayContainsKey!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!6453 () Bool)

(assert (=> bm!6453 (= call!6456 (inRange!0 (ite c!10925 (index!3051 lt!32879) (index!3054 lt!32879)) (mask!6179 newMap!16)))))

(declare-fun b!73413 () Bool)

(assert (=> b!73413 (= e!48012 e!48013)))

(declare-fun c!10926 () Bool)

(assert (=> b!73413 (= c!10926 ((_ is MissingVacant!230) lt!32879))))

(assert (= (and d!16945 c!10925) b!73409))

(assert (= (and d!16945 (not c!10925)) b!73413))

(assert (= (and b!73409 res!38906) b!73411))

(assert (= (and b!73411 res!38905) b!73408))

(assert (= (and b!73413 c!10926) b!73406))

(assert (= (and b!73413 (not c!10926)) b!73407))

(assert (= (and b!73406 res!38908) b!73410))

(assert (= (and b!73410 res!38907) b!73412))

(assert (= (or b!73409 b!73406) bm!6453))

(assert (= (or b!73408 b!73412) bm!6452))

(declare-fun m!71761 () Bool)

(assert (=> b!73411 m!71761))

(declare-fun m!71763 () Bool)

(assert (=> bm!6453 m!71763))

(declare-fun m!71765 () Bool)

(assert (=> b!73410 m!71765))

(assert (=> bm!6452 m!71143))

(assert (=> bm!6452 m!71513))

(assert (=> d!16945 m!71143))

(assert (=> d!16945 m!71499))

(assert (=> d!16945 m!71143))

(declare-fun m!71767 () Bool)

(assert (=> d!16945 m!71767))

(assert (=> d!16945 m!71557))

(assert (=> bm!6415 d!16945))

(assert (=> b!73052 d!16917))

(declare-fun d!16947 () Bool)

(declare-fun res!38909 () Bool)

(declare-fun e!48016 () Bool)

(assert (=> d!16947 (=> res!38909 e!48016)))

(assert (=> d!16947 (= res!38909 (= (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!16947 (= (arrayContainsKey!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000) e!48016)))

(declare-fun b!73414 () Bool)

(declare-fun e!48017 () Bool)

(assert (=> b!73414 (= e!48016 e!48017)))

(declare-fun res!38910 () Bool)

(assert (=> b!73414 (=> (not res!38910) (not e!48017))))

(assert (=> b!73414 (= res!38910 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73415 () Bool)

(assert (=> b!73415 (= e!48017 (arrayContainsKey!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16947 (not res!38909)) b!73414))

(assert (= (and b!73414 res!38910) b!73415))

(assert (=> d!16947 m!71603))

(assert (=> b!73415 m!71143))

(declare-fun m!71769 () Bool)

(assert (=> b!73415 m!71769))

(assert (=> bm!6405 d!16947))

(assert (=> b!72979 d!16917))

(declare-fun d!16949 () Bool)

(declare-fun lt!32880 () Bool)

(assert (=> d!16949 (= lt!32880 (select (content!78 (toList!716 lt!32594)) lt!32485))))

(declare-fun e!48019 () Bool)

(assert (=> d!16949 (= lt!32880 e!48019)))

(declare-fun res!38911 () Bool)

(assert (=> d!16949 (=> (not res!38911) (not e!48019))))

(assert (=> d!16949 (= res!38911 ((_ is Cons!1470) (toList!716 lt!32594)))))

(assert (=> d!16949 (= (contains!721 (toList!716 lt!32594) lt!32485) lt!32880)))

(declare-fun b!73416 () Bool)

(declare-fun e!48018 () Bool)

(assert (=> b!73416 (= e!48019 e!48018)))

(declare-fun res!38912 () Bool)

(assert (=> b!73416 (=> res!38912 e!48018)))

(assert (=> b!73416 (= res!38912 (= (h!2057 (toList!716 lt!32594)) lt!32485))))

(declare-fun b!73417 () Bool)

(assert (=> b!73417 (= e!48018 (contains!721 (t!5023 (toList!716 lt!32594)) lt!32485))))

(assert (= (and d!16949 res!38911) b!73416))

(assert (= (and b!73416 (not res!38912)) b!73417))

(declare-fun m!71771 () Bool)

(assert (=> d!16949 m!71771))

(declare-fun m!71773 () Bool)

(assert (=> d!16949 m!71773))

(declare-fun m!71775 () Bool)

(assert (=> b!73417 m!71775))

(assert (=> b!72948 d!16949))

(declare-fun d!16951 () Bool)

(declare-fun e!48020 () Bool)

(assert (=> d!16951 e!48020))

(declare-fun res!38913 () Bool)

(assert (=> d!16951 (=> res!38913 e!48020)))

(declare-fun lt!32882 () Bool)

(assert (=> d!16951 (= res!38913 (not lt!32882))))

(declare-fun lt!32884 () Bool)

(assert (=> d!16951 (= lt!32882 lt!32884)))

(declare-fun lt!32883 () Unit!2076)

(declare-fun e!48021 () Unit!2076)

(assert (=> d!16951 (= lt!32883 e!48021)))

(declare-fun c!10927 () Bool)

(assert (=> d!16951 (= c!10927 lt!32884)))

(assert (=> d!16951 (= lt!32884 (containsKey!137 (toList!716 lt!32579) (_1!1071 lt!32492)))))

(assert (=> d!16951 (= (contains!720 lt!32579 (_1!1071 lt!32492)) lt!32882)))

(declare-fun b!73418 () Bool)

(declare-fun lt!32881 () Unit!2076)

(assert (=> b!73418 (= e!48021 lt!32881)))

(assert (=> b!73418 (= lt!32881 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32579) (_1!1071 lt!32492)))))

(assert (=> b!73418 (isDefined!86 (getValueByKey!134 (toList!716 lt!32579) (_1!1071 lt!32492)))))

(declare-fun b!73419 () Bool)

(declare-fun Unit!2097 () Unit!2076)

(assert (=> b!73419 (= e!48021 Unit!2097)))

(declare-fun b!73420 () Bool)

(assert (=> b!73420 (= e!48020 (isDefined!86 (getValueByKey!134 (toList!716 lt!32579) (_1!1071 lt!32492))))))

(assert (= (and d!16951 c!10927) b!73418))

(assert (= (and d!16951 (not c!10927)) b!73419))

(assert (= (and d!16951 (not res!38913)) b!73420))

(declare-fun m!71777 () Bool)

(assert (=> d!16951 m!71777))

(declare-fun m!71779 () Bool)

(assert (=> b!73418 m!71779))

(assert (=> b!73418 m!71319))

(assert (=> b!73418 m!71319))

(declare-fun m!71781 () Bool)

(assert (=> b!73418 m!71781))

(assert (=> b!73420 m!71319))

(assert (=> b!73420 m!71319))

(assert (=> b!73420 m!71781))

(assert (=> d!16843 d!16951))

(declare-fun b!73422 () Bool)

(declare-fun e!48022 () Option!140)

(declare-fun e!48023 () Option!140)

(assert (=> b!73422 (= e!48022 e!48023)))

(declare-fun c!10929 () Bool)

(assert (=> b!73422 (= c!10929 (and ((_ is Cons!1470) lt!32580) (not (= (_1!1071 (h!2057 lt!32580)) (_1!1071 lt!32492)))))))

(declare-fun b!73421 () Bool)

(assert (=> b!73421 (= e!48022 (Some!139 (_2!1071 (h!2057 lt!32580))))))

(declare-fun d!16953 () Bool)

(declare-fun c!10928 () Bool)

(assert (=> d!16953 (= c!10928 (and ((_ is Cons!1470) lt!32580) (= (_1!1071 (h!2057 lt!32580)) (_1!1071 lt!32492))))))

(assert (=> d!16953 (= (getValueByKey!134 lt!32580 (_1!1071 lt!32492)) e!48022)))

(declare-fun b!73423 () Bool)

(assert (=> b!73423 (= e!48023 (getValueByKey!134 (t!5023 lt!32580) (_1!1071 lt!32492)))))

(declare-fun b!73424 () Bool)

(assert (=> b!73424 (= e!48023 None!138)))

(assert (= (and d!16953 c!10928) b!73421))

(assert (= (and d!16953 (not c!10928)) b!73422))

(assert (= (and b!73422 c!10929) b!73423))

(assert (= (and b!73422 (not c!10929)) b!73424))

(declare-fun m!71783 () Bool)

(assert (=> b!73423 m!71783))

(assert (=> d!16843 d!16953))

(declare-fun d!16955 () Bool)

(assert (=> d!16955 (= (getValueByKey!134 lt!32580 (_1!1071 lt!32492)) (Some!139 (_2!1071 lt!32492)))))

(declare-fun lt!32885 () Unit!2076)

(assert (=> d!16955 (= lt!32885 (choose!419 lt!32580 (_1!1071 lt!32492) (_2!1071 lt!32492)))))

(declare-fun e!48024 () Bool)

(assert (=> d!16955 e!48024))

(declare-fun res!38914 () Bool)

(assert (=> d!16955 (=> (not res!38914) (not e!48024))))

(assert (=> d!16955 (= res!38914 (isStrictlySorted!279 lt!32580))))

(assert (=> d!16955 (= (lemmaContainsTupThenGetReturnValue!51 lt!32580 (_1!1071 lt!32492) (_2!1071 lt!32492)) lt!32885)))

(declare-fun b!73425 () Bool)

(declare-fun res!38915 () Bool)

(assert (=> b!73425 (=> (not res!38915) (not e!48024))))

(assert (=> b!73425 (= res!38915 (containsKey!137 lt!32580 (_1!1071 lt!32492)))))

(declare-fun b!73426 () Bool)

(assert (=> b!73426 (= e!48024 (contains!721 lt!32580 (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(assert (= (and d!16955 res!38914) b!73425))

(assert (= (and b!73425 res!38915) b!73426))

(assert (=> d!16955 m!71313))

(declare-fun m!71785 () Bool)

(assert (=> d!16955 m!71785))

(declare-fun m!71787 () Bool)

(assert (=> d!16955 m!71787))

(declare-fun m!71789 () Bool)

(assert (=> b!73425 m!71789))

(declare-fun m!71791 () Bool)

(assert (=> b!73426 m!71791))

(assert (=> d!16843 d!16955))

(declare-fun b!73427 () Bool)

(declare-fun e!48029 () List!1474)

(assert (=> b!73427 (= e!48029 (insertStrictlySorted!54 (t!5023 (toList!716 lt!32489)) (_1!1071 lt!32492) (_2!1071 lt!32492)))))

(declare-fun b!73428 () Bool)

(declare-fun c!10930 () Bool)

(declare-fun c!10931 () Bool)

(assert (=> b!73428 (= e!48029 (ite c!10931 (t!5023 (toList!716 lt!32489)) (ite c!10930 (Cons!1470 (h!2057 (toList!716 lt!32489)) (t!5023 (toList!716 lt!32489))) Nil!1471)))))

(declare-fun bm!6454 () Bool)

(declare-fun call!6458 () List!1474)

(declare-fun call!6459 () List!1474)

(assert (=> bm!6454 (= call!6458 call!6459)))

(declare-fun b!73429 () Bool)

(declare-fun e!48028 () Bool)

(declare-fun lt!32886 () List!1474)

(assert (=> b!73429 (= e!48028 (contains!721 lt!32886 (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun b!73430 () Bool)

(declare-fun e!48025 () List!1474)

(assert (=> b!73430 (= e!48025 call!6458)))

(declare-fun b!73431 () Bool)

(declare-fun e!48026 () List!1474)

(declare-fun e!48027 () List!1474)

(assert (=> b!73431 (= e!48026 e!48027)))

(assert (=> b!73431 (= c!10931 (and ((_ is Cons!1470) (toList!716 lt!32489)) (= (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 lt!32492))))))

(declare-fun d!16957 () Bool)

(assert (=> d!16957 e!48028))

(declare-fun res!38916 () Bool)

(assert (=> d!16957 (=> (not res!38916) (not e!48028))))

(assert (=> d!16957 (= res!38916 (isStrictlySorted!279 lt!32886))))

(assert (=> d!16957 (= lt!32886 e!48026)))

(declare-fun c!10932 () Bool)

(assert (=> d!16957 (= c!10932 (and ((_ is Cons!1470) (toList!716 lt!32489)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 lt!32492))))))

(assert (=> d!16957 (isStrictlySorted!279 (toList!716 lt!32489))))

(assert (=> d!16957 (= (insertStrictlySorted!54 (toList!716 lt!32489) (_1!1071 lt!32492) (_2!1071 lt!32492)) lt!32886)))

(declare-fun call!6457 () List!1474)

(declare-fun bm!6455 () Bool)

(assert (=> bm!6455 (= call!6457 ($colon$colon!65 e!48029 (ite c!10932 (h!2057 (toList!716 lt!32489)) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492)))))))

(declare-fun c!10933 () Bool)

(assert (=> bm!6455 (= c!10933 c!10932)))

(declare-fun b!73432 () Bool)

(assert (=> b!73432 (= e!48027 call!6459)))

(declare-fun b!73433 () Bool)

(assert (=> b!73433 (= e!48025 call!6458)))

(declare-fun b!73434 () Bool)

(assert (=> b!73434 (= c!10930 (and ((_ is Cons!1470) (toList!716 lt!32489)) (bvsgt (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 lt!32492))))))

(assert (=> b!73434 (= e!48027 e!48025)))

(declare-fun b!73435 () Bool)

(assert (=> b!73435 (= e!48026 call!6457)))

(declare-fun bm!6456 () Bool)

(assert (=> bm!6456 (= call!6459 call!6457)))

(declare-fun b!73436 () Bool)

(declare-fun res!38917 () Bool)

(assert (=> b!73436 (=> (not res!38917) (not e!48028))))

(assert (=> b!73436 (= res!38917 (containsKey!137 lt!32886 (_1!1071 lt!32492)))))

(assert (= (and d!16957 c!10932) b!73435))

(assert (= (and d!16957 (not c!10932)) b!73431))

(assert (= (and b!73431 c!10931) b!73432))

(assert (= (and b!73431 (not c!10931)) b!73434))

(assert (= (and b!73434 c!10930) b!73430))

(assert (= (and b!73434 (not c!10930)) b!73433))

(assert (= (or b!73430 b!73433) bm!6454))

(assert (= (or b!73432 bm!6454) bm!6456))

(assert (= (or b!73435 bm!6456) bm!6455))

(assert (= (and bm!6455 c!10933) b!73427))

(assert (= (and bm!6455 (not c!10933)) b!73428))

(assert (= (and d!16957 res!38916) b!73436))

(assert (= (and b!73436 res!38917) b!73429))

(declare-fun m!71793 () Bool)

(assert (=> b!73427 m!71793))

(declare-fun m!71795 () Bool)

(assert (=> b!73429 m!71795))

(declare-fun m!71797 () Bool)

(assert (=> d!16957 m!71797))

(declare-fun m!71799 () Bool)

(assert (=> d!16957 m!71799))

(declare-fun m!71801 () Bool)

(assert (=> bm!6455 m!71801))

(declare-fun m!71803 () Bool)

(assert (=> b!73436 m!71803))

(assert (=> d!16843 d!16957))

(declare-fun d!16959 () Bool)

(assert (=> d!16959 (= (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (and (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73086 d!16959))

(declare-fun b!73437 () Bool)

(declare-fun e!48037 () Bool)

(assert (=> b!73437 (= e!48037 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73438 () Bool)

(declare-fun e!48040 () Bool)

(declare-fun e!48035 () Bool)

(assert (=> b!73438 (= e!48040 e!48035)))

(declare-fun c!10939 () Bool)

(assert (=> b!73438 (= c!10939 (not (= (bvand (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73439 () Bool)

(declare-fun e!48038 () Bool)

(declare-fun call!6464 () Bool)

(assert (=> b!73439 (= e!48038 (not call!6464))))

(declare-fun b!73440 () Bool)

(declare-fun e!48042 () Unit!2076)

(declare-fun Unit!2098 () Unit!2076)

(assert (=> b!73440 (= e!48042 Unit!2098)))

(declare-fun bm!6457 () Bool)

(declare-fun call!6465 () ListLongMap!1401)

(assert (=> bm!6457 (= call!6465 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775) (mask!6179 newMap!16) (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!73441 () Bool)

(declare-fun e!48034 () Bool)

(assert (=> b!73441 (= e!48038 e!48034)))

(declare-fun res!38920 () Bool)

(assert (=> b!73441 (= res!38920 call!6464)))

(assert (=> b!73441 (=> (not res!38920) (not e!48034))))

(declare-fun bm!6458 () Bool)

(declare-fun call!6460 () ListLongMap!1401)

(declare-fun call!6466 () ListLongMap!1401)

(assert (=> bm!6458 (= call!6460 call!6466)))

(declare-fun b!73442 () Bool)

(declare-fun e!48031 () Bool)

(declare-fun e!48030 () Bool)

(assert (=> b!73442 (= e!48031 e!48030)))

(declare-fun res!38919 () Bool)

(assert (=> b!73442 (=> (not res!38919) (not e!48030))))

(declare-fun lt!32892 () ListLongMap!1401)

(assert (=> b!73442 (= res!38919 (contains!720 lt!32892 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73442 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun bm!6459 () Bool)

(assert (=> bm!6459 (= call!6466 call!6465)))

(declare-fun b!73443 () Bool)

(declare-fun lt!32888 () Unit!2076)

(assert (=> b!73443 (= e!48042 lt!32888)))

(declare-fun lt!32902 () ListLongMap!1401)

(assert (=> b!73443 (= lt!32902 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775) (mask!6179 newMap!16) (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32907 () (_ BitVec 64))

(assert (=> b!73443 (= lt!32907 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32887 () (_ BitVec 64))

(assert (=> b!73443 (= lt!32887 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32901 () Unit!2076)

(assert (=> b!73443 (= lt!32901 (addStillContains!51 lt!32902 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) lt!32887))))

(assert (=> b!73443 (contains!720 (+!93 lt!32902 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) lt!32887)))

(declare-fun lt!32896 () Unit!2076)

(assert (=> b!73443 (= lt!32896 lt!32901)))

(declare-fun lt!32905 () ListLongMap!1401)

(assert (=> b!73443 (= lt!32905 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775) (mask!6179 newMap!16) (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32900 () (_ BitVec 64))

(assert (=> b!73443 (= lt!32900 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32904 () (_ BitVec 64))

(assert (=> b!73443 (= lt!32904 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32903 () Unit!2076)

(assert (=> b!73443 (= lt!32903 (addApplyDifferent!51 lt!32905 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) lt!32904))))

(assert (=> b!73443 (= (apply!75 (+!93 lt!32905 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) lt!32904) (apply!75 lt!32905 lt!32904))))

(declare-fun lt!32893 () Unit!2076)

(assert (=> b!73443 (= lt!32893 lt!32903)))

(declare-fun lt!32890 () ListLongMap!1401)

(assert (=> b!73443 (= lt!32890 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775) (mask!6179 newMap!16) (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32891 () (_ BitVec 64))

(assert (=> b!73443 (= lt!32891 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32898 () (_ BitVec 64))

(assert (=> b!73443 (= lt!32898 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32906 () Unit!2076)

(assert (=> b!73443 (= lt!32906 (addApplyDifferent!51 lt!32890 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) lt!32898))))

(assert (=> b!73443 (= (apply!75 (+!93 lt!32890 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) lt!32898) (apply!75 lt!32890 lt!32898))))

(declare-fun lt!32889 () Unit!2076)

(assert (=> b!73443 (= lt!32889 lt!32906)))

(declare-fun lt!32894 () ListLongMap!1401)

(assert (=> b!73443 (= lt!32894 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775) (mask!6179 newMap!16) (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32899 () (_ BitVec 64))

(assert (=> b!73443 (= lt!32899 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32908 () (_ BitVec 64))

(assert (=> b!73443 (= lt!32908 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73443 (= lt!32888 (addApplyDifferent!51 lt!32894 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) lt!32908))))

(assert (=> b!73443 (= (apply!75 (+!93 lt!32894 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) lt!32908) (apply!75 lt!32894 lt!32908))))

(declare-fun bm!6460 () Bool)

(declare-fun call!6463 () ListLongMap!1401)

(declare-fun call!6462 () ListLongMap!1401)

(assert (=> bm!6460 (= call!6463 call!6462)))

(declare-fun b!73444 () Bool)

(declare-fun e!48032 () ListLongMap!1401)

(assert (=> b!73444 (= e!48032 call!6463)))

(declare-fun b!73445 () Bool)

(declare-fun res!38925 () Bool)

(assert (=> b!73445 (=> (not res!38925) (not e!48040))))

(assert (=> b!73445 (= res!38925 e!48038)))

(declare-fun c!10935 () Bool)

(assert (=> b!73445 (= c!10935 (not (= (bvand (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!73446 () Bool)

(declare-fun call!6461 () Bool)

(assert (=> b!73446 (= e!48035 (not call!6461))))

(declare-fun b!73447 () Bool)

(declare-fun e!48041 () ListLongMap!1401)

(assert (=> b!73447 (= e!48041 (+!93 call!6462 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))

(declare-fun b!73448 () Bool)

(assert (=> b!73448 (= e!48041 e!48032)))

(declare-fun c!10936 () Bool)

(assert (=> b!73448 (= c!10936 (and (not (= (bvand (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6461 () Bool)

(declare-fun c!10934 () Bool)

(assert (=> bm!6461 (= call!6462 (+!93 (ite c!10934 call!6465 (ite c!10936 call!6466 call!6460)) (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(declare-fun b!73449 () Bool)

(declare-fun res!38918 () Bool)

(assert (=> b!73449 (=> (not res!38918) (not e!48040))))

(assert (=> b!73449 (= res!38918 e!48031)))

(declare-fun res!38923 () Bool)

(assert (=> b!73449 (=> res!38923 e!48031)))

(declare-fun e!48036 () Bool)

(assert (=> b!73449 (= res!38923 (not e!48036))))

(declare-fun res!38926 () Bool)

(assert (=> b!73449 (=> (not res!38926) (not e!48036))))

(assert (=> b!73449 (= res!38926 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73450 () Bool)

(assert (=> b!73450 (= e!48034 (= (apply!75 lt!32892 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))))

(declare-fun b!73451 () Bool)

(declare-fun e!48039 () ListLongMap!1401)

(assert (=> b!73451 (= e!48039 call!6460)))

(declare-fun b!73452 () Bool)

(declare-fun e!48033 () Bool)

(assert (=> b!73452 (= e!48035 e!48033)))

(declare-fun res!38922 () Bool)

(assert (=> b!73452 (= res!38922 call!6461)))

(assert (=> b!73452 (=> (not res!38922) (not e!48033))))

(declare-fun bm!6462 () Bool)

(assert (=> bm!6462 (= call!6464 (contains!720 lt!32892 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!16961 () Bool)

(assert (=> d!16961 e!48040))

(declare-fun res!38924 () Bool)

(assert (=> d!16961 (=> (not res!38924) (not e!48040))))

(assert (=> d!16961 (= res!38924 (or (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))))

(declare-fun lt!32897 () ListLongMap!1401)

(assert (=> d!16961 (= lt!32892 lt!32897)))

(declare-fun lt!32895 () Unit!2076)

(assert (=> d!16961 (= lt!32895 e!48042)))

(declare-fun c!10937 () Bool)

(assert (=> d!16961 (= c!10937 e!48037)))

(declare-fun res!38921 () Bool)

(assert (=> d!16961 (=> (not res!38921) (not e!48037))))

(assert (=> d!16961 (= res!38921 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!16961 (= lt!32897 e!48041)))

(assert (=> d!16961 (= c!10934 (and (not (= (bvand (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16961 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!16961 (= (getCurrentListMap!414 (_keys!3864 newMap!16) (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775) (mask!6179 newMap!16) (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!32892)))

(declare-fun bm!6463 () Bool)

(assert (=> bm!6463 (= call!6461 (contains!720 lt!32892 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73453 () Bool)

(assert (=> b!73453 (= e!48039 call!6463)))

(declare-fun b!73454 () Bool)

(assert (=> b!73454 (= e!48030 (= (apply!75 lt!32892 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73454 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775))))))

(assert (=> b!73454 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73455 () Bool)

(assert (=> b!73455 (= e!48033 (= (apply!75 lt!32892 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))

(declare-fun b!73456 () Bool)

(assert (=> b!73456 (= e!48036 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73457 () Bool)

(declare-fun c!10938 () Bool)

(assert (=> b!73457 (= c!10938 (and (not (= (bvand (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73457 (= e!48032 e!48039)))

(assert (= (and d!16961 c!10934) b!73447))

(assert (= (and d!16961 (not c!10934)) b!73448))

(assert (= (and b!73448 c!10936) b!73444))

(assert (= (and b!73448 (not c!10936)) b!73457))

(assert (= (and b!73457 c!10938) b!73453))

(assert (= (and b!73457 (not c!10938)) b!73451))

(assert (= (or b!73453 b!73451) bm!6458))

(assert (= (or b!73444 bm!6458) bm!6459))

(assert (= (or b!73444 b!73453) bm!6460))

(assert (= (or b!73447 bm!6459) bm!6457))

(assert (= (or b!73447 bm!6460) bm!6461))

(assert (= (and d!16961 res!38921) b!73437))

(assert (= (and d!16961 c!10937) b!73443))

(assert (= (and d!16961 (not c!10937)) b!73440))

(assert (= (and d!16961 res!38924) b!73449))

(assert (= (and b!73449 res!38926) b!73456))

(assert (= (and b!73449 (not res!38923)) b!73442))

(assert (= (and b!73442 res!38919) b!73454))

(assert (= (and b!73449 res!38918) b!73445))

(assert (= (and b!73445 c!10935) b!73441))

(assert (= (and b!73445 (not c!10935)) b!73439))

(assert (= (and b!73441 res!38920) b!73450))

(assert (= (or b!73441 b!73439) bm!6462))

(assert (= (and b!73445 res!38925) b!73438))

(assert (= (and b!73438 c!10939) b!73452))

(assert (= (and b!73438 (not c!10939)) b!73446))

(assert (= (and b!73452 res!38922) b!73455))

(assert (= (or b!73452 b!73446) bm!6463))

(declare-fun b_lambda!3301 () Bool)

(assert (=> (not b_lambda!3301) (not b!73454)))

(assert (=> b!73454 t!5036))

(declare-fun b_and!4509 () Bool)

(assert (= b_and!4505 (and (=> t!5036 result!2689) b_and!4509)))

(assert (=> b!73454 t!5038))

(declare-fun b_and!4511 () Bool)

(assert (= b_and!4507 (and (=> t!5038 result!2691) b_and!4511)))

(assert (=> b!73442 m!71603))

(assert (=> b!73442 m!71603))

(declare-fun m!71805 () Bool)

(assert (=> b!73442 m!71805))

(declare-fun m!71807 () Bool)

(assert (=> b!73443 m!71807))

(declare-fun m!71809 () Bool)

(assert (=> b!73443 m!71809))

(declare-fun m!71811 () Bool)

(assert (=> b!73443 m!71811))

(assert (=> b!73443 m!71603))

(declare-fun m!71813 () Bool)

(assert (=> b!73443 m!71813))

(declare-fun m!71815 () Bool)

(assert (=> b!73443 m!71815))

(declare-fun m!71817 () Bool)

(assert (=> b!73443 m!71817))

(declare-fun m!71819 () Bool)

(assert (=> b!73443 m!71819))

(declare-fun m!71821 () Bool)

(assert (=> b!73443 m!71821))

(declare-fun m!71823 () Bool)

(assert (=> b!73443 m!71823))

(assert (=> b!73443 m!71821))

(assert (=> b!73443 m!71807))

(declare-fun m!71825 () Bool)

(assert (=> b!73443 m!71825))

(declare-fun m!71827 () Bool)

(assert (=> b!73443 m!71827))

(assert (=> b!73443 m!71813))

(declare-fun m!71829 () Bool)

(assert (=> b!73443 m!71829))

(assert (=> b!73443 m!71825))

(declare-fun m!71831 () Bool)

(assert (=> b!73443 m!71831))

(declare-fun m!71833 () Bool)

(assert (=> b!73443 m!71833))

(declare-fun m!71835 () Bool)

(assert (=> b!73443 m!71835))

(declare-fun m!71837 () Bool)

(assert (=> b!73443 m!71837))

(assert (=> b!73437 m!71603))

(assert (=> b!73437 m!71603))

(assert (=> b!73437 m!71605))

(declare-fun m!71839 () Bool)

(assert (=> bm!6463 m!71839))

(assert (=> bm!6457 m!71833))

(declare-fun m!71841 () Bool)

(assert (=> bm!6462 m!71841))

(assert (=> d!16961 m!71557))

(declare-fun m!71843 () Bool)

(assert (=> bm!6461 m!71843))

(declare-fun m!71845 () Bool)

(assert (=> b!73447 m!71845))

(declare-fun m!71847 () Bool)

(assert (=> b!73455 m!71847))

(assert (=> b!73456 m!71603))

(assert (=> b!73456 m!71603))

(assert (=> b!73456 m!71605))

(assert (=> b!73454 m!71663))

(assert (=> b!73454 m!71603))

(assert (=> b!73454 m!71603))

(declare-fun m!71849 () Bool)

(assert (=> b!73454 m!71849))

(declare-fun m!71851 () Bool)

(assert (=> b!73454 m!71851))

(assert (=> b!73454 m!71663))

(declare-fun m!71853 () Bool)

(assert (=> b!73454 m!71853))

(assert (=> b!73454 m!71851))

(declare-fun m!71855 () Bool)

(assert (=> b!73450 m!71855))

(assert (=> bm!6417 d!16961))

(declare-fun d!16963 () Bool)

(assert (=> d!16963 (= (map!1160 (_2!1072 lt!32783)) (getCurrentListMap!414 (_keys!3864 (_2!1072 lt!32783)) (_values!2195 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783)) (extraKeys!2071 (_2!1072 lt!32783)) (zeroValue!2114 (_2!1072 lt!32783)) (minValue!2114 (_2!1072 lt!32783)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32783))))))

(declare-fun bs!3157 () Bool)

(assert (= bs!3157 d!16963))

(declare-fun m!71857 () Bool)

(assert (=> bs!3157 m!71857))

(assert (=> bm!6425 d!16963))

(declare-fun d!16965 () Bool)

(declare-fun e!48043 () Bool)

(assert (=> d!16965 e!48043))

(declare-fun res!38927 () Bool)

(assert (=> d!16965 (=> (not res!38927) (not e!48043))))

(declare-fun lt!32911 () ListLongMap!1401)

(assert (=> d!16965 (= res!38927 (contains!720 lt!32911 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!32912 () List!1474)

(assert (=> d!16965 (= lt!32911 (ListLongMap!1402 lt!32912))))

(declare-fun lt!32910 () Unit!2076)

(declare-fun lt!32909 () Unit!2076)

(assert (=> d!16965 (= lt!32910 lt!32909)))

(assert (=> d!16965 (= (getValueByKey!134 lt!32912 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16965 (= lt!32909 (lemmaContainsTupThenGetReturnValue!51 lt!32912 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16965 (= lt!32912 (insertStrictlySorted!54 (toList!716 lt!32679) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16965 (= (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32911)))

(declare-fun b!73458 () Bool)

(declare-fun res!38928 () Bool)

(assert (=> b!73458 (=> (not res!38928) (not e!48043))))

(assert (=> b!73458 (= res!38928 (= (getValueByKey!134 (toList!716 lt!32911) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!73459 () Bool)

(assert (=> b!73459 (= e!48043 (contains!721 (toList!716 lt!32911) (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!16965 res!38927) b!73458))

(assert (= (and b!73458 res!38928) b!73459))

(declare-fun m!71859 () Bool)

(assert (=> d!16965 m!71859))

(declare-fun m!71861 () Bool)

(assert (=> d!16965 m!71861))

(declare-fun m!71863 () Bool)

(assert (=> d!16965 m!71863))

(declare-fun m!71865 () Bool)

(assert (=> d!16965 m!71865))

(declare-fun m!71867 () Bool)

(assert (=> b!73458 m!71867))

(declare-fun m!71869 () Bool)

(assert (=> b!73459 m!71869))

(assert (=> b!73039 d!16965))

(declare-fun d!16967 () Bool)

(assert (=> d!16967 (contains!720 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32661)))

(declare-fun lt!32915 () Unit!2076)

(declare-fun choose!425 (ListLongMap!1401 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2076)

(assert (=> d!16967 (= lt!32915 (choose!425 lt!32676 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32661))))

(assert (=> d!16967 (contains!720 lt!32676 lt!32661)))

(assert (=> d!16967 (= (addStillContains!51 lt!32676 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32661) lt!32915)))

(declare-fun bs!3158 () Bool)

(assert (= bs!3158 d!16967))

(assert (=> bs!3158 m!71425))

(assert (=> bs!3158 m!71425))

(assert (=> bs!3158 m!71427))

(declare-fun m!71871 () Bool)

(assert (=> bs!3158 m!71871))

(declare-fun m!71873 () Bool)

(assert (=> bs!3158 m!71873))

(assert (=> b!73039 d!16967))

(declare-fun d!16969 () Bool)

(assert (=> d!16969 (= (apply!75 lt!32668 lt!32682) (get!1153 (getValueByKey!134 (toList!716 lt!32668) lt!32682)))))

(declare-fun bs!3159 () Bool)

(assert (= bs!3159 d!16969))

(declare-fun m!71875 () Bool)

(assert (=> bs!3159 m!71875))

(assert (=> bs!3159 m!71875))

(declare-fun m!71877 () Bool)

(assert (=> bs!3159 m!71877))

(assert (=> b!73039 d!16969))

(declare-fun d!16971 () Bool)

(assert (=> d!16971 (= (apply!75 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32678) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32678)))))

(declare-fun bs!3160 () Bool)

(assert (= bs!3160 d!16971))

(declare-fun m!71879 () Bool)

(assert (=> bs!3160 m!71879))

(assert (=> bs!3160 m!71879))

(declare-fun m!71881 () Bool)

(assert (=> bs!3160 m!71881))

(assert (=> b!73039 d!16971))

(declare-fun d!16973 () Bool)

(assert (=> d!16973 (= (apply!75 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32682) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32682)))))

(declare-fun bs!3161 () Bool)

(assert (= bs!3161 d!16973))

(declare-fun m!71883 () Bool)

(assert (=> bs!3161 m!71883))

(assert (=> bs!3161 m!71883))

(declare-fun m!71885 () Bool)

(assert (=> bs!3161 m!71885))

(assert (=> b!73039 d!16973))

(declare-fun d!16975 () Bool)

(assert (=> d!16975 (= (apply!75 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32672) (apply!75 lt!32664 lt!32672))))

(declare-fun lt!32918 () Unit!2076)

(declare-fun choose!426 (ListLongMap!1401 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2076)

(assert (=> d!16975 (= lt!32918 (choose!426 lt!32664 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32672))))

(declare-fun e!48046 () Bool)

(assert (=> d!16975 e!48046))

(declare-fun res!38931 () Bool)

(assert (=> d!16975 (=> (not res!38931) (not e!48046))))

(assert (=> d!16975 (= res!38931 (contains!720 lt!32664 lt!32672))))

(assert (=> d!16975 (= (addApplyDifferent!51 lt!32664 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32672) lt!32918)))

(declare-fun b!73464 () Bool)

(assert (=> b!73464 (= e!48046 (not (= lt!32672 lt!32665)))))

(assert (= (and d!16975 res!38931) b!73464))

(declare-fun m!71887 () Bool)

(assert (=> d!16975 m!71887))

(declare-fun m!71889 () Bool)

(assert (=> d!16975 m!71889))

(assert (=> d!16975 m!71421))

(assert (=> d!16975 m!71423))

(assert (=> d!16975 m!71433))

(assert (=> d!16975 m!71421))

(assert (=> b!73039 d!16975))

(declare-fun d!16977 () Bool)

(assert (=> d!16977 (= (apply!75 lt!32679 lt!32678) (get!1153 (getValueByKey!134 (toList!716 lt!32679) lt!32678)))))

(declare-fun bs!3162 () Bool)

(assert (= bs!3162 d!16977))

(declare-fun m!71891 () Bool)

(assert (=> bs!3162 m!71891))

(assert (=> bs!3162 m!71891))

(declare-fun m!71893 () Bool)

(assert (=> bs!3162 m!71893))

(assert (=> b!73039 d!16977))

(declare-fun d!16979 () Bool)

(assert (=> d!16979 (= (apply!75 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32682) (apply!75 lt!32668 lt!32682))))

(declare-fun lt!32919 () Unit!2076)

(assert (=> d!16979 (= lt!32919 (choose!426 lt!32668 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32682))))

(declare-fun e!48047 () Bool)

(assert (=> d!16979 e!48047))

(declare-fun res!38932 () Bool)

(assert (=> d!16979 (=> (not res!38932) (not e!48047))))

(assert (=> d!16979 (= res!38932 (contains!720 lt!32668 lt!32682))))

(assert (=> d!16979 (= (addApplyDifferent!51 lt!32668 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32682) lt!32919)))

(declare-fun b!73465 () Bool)

(assert (=> b!73465 (= e!48047 (not (= lt!32682 lt!32673)))))

(assert (= (and d!16979 res!38932) b!73465))

(declare-fun m!71895 () Bool)

(assert (=> d!16979 m!71895))

(declare-fun m!71897 () Bool)

(assert (=> d!16979 m!71897))

(assert (=> d!16979 m!71407))

(assert (=> d!16979 m!71409))

(assert (=> d!16979 m!71415))

(assert (=> d!16979 m!71407))

(assert (=> b!73039 d!16979))

(declare-fun d!16981 () Bool)

(assert (=> d!16981 (= (apply!75 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32672) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32672)))))

(declare-fun bs!3163 () Bool)

(assert (= bs!3163 d!16981))

(declare-fun m!71899 () Bool)

(assert (=> bs!3163 m!71899))

(assert (=> bs!3163 m!71899))

(declare-fun m!71901 () Bool)

(assert (=> bs!3163 m!71901))

(assert (=> b!73039 d!16981))

(declare-fun d!16983 () Bool)

(declare-fun e!48048 () Bool)

(assert (=> d!16983 e!48048))

(declare-fun res!38933 () Bool)

(assert (=> d!16983 (=> res!38933 e!48048)))

(declare-fun lt!32921 () Bool)

(assert (=> d!16983 (= res!38933 (not lt!32921))))

(declare-fun lt!32923 () Bool)

(assert (=> d!16983 (= lt!32921 lt!32923)))

(declare-fun lt!32922 () Unit!2076)

(declare-fun e!48049 () Unit!2076)

(assert (=> d!16983 (= lt!32922 e!48049)))

(declare-fun c!10940 () Bool)

(assert (=> d!16983 (= c!10940 lt!32923)))

(assert (=> d!16983 (= lt!32923 (containsKey!137 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661))))

(assert (=> d!16983 (= (contains!720 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32661) lt!32921)))

(declare-fun b!73466 () Bool)

(declare-fun lt!32920 () Unit!2076)

(assert (=> b!73466 (= e!48049 lt!32920)))

(assert (=> b!73466 (= lt!32920 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661))))

(assert (=> b!73466 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661))))

(declare-fun b!73467 () Bool)

(declare-fun Unit!2099 () Unit!2076)

(assert (=> b!73467 (= e!48049 Unit!2099)))

(declare-fun b!73468 () Bool)

(assert (=> b!73468 (= e!48048 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661)))))

(assert (= (and d!16983 c!10940) b!73466))

(assert (= (and d!16983 (not c!10940)) b!73467))

(assert (= (and d!16983 (not res!38933)) b!73468))

(declare-fun m!71903 () Bool)

(assert (=> d!16983 m!71903))

(declare-fun m!71905 () Bool)

(assert (=> b!73466 m!71905))

(declare-fun m!71907 () Bool)

(assert (=> b!73466 m!71907))

(assert (=> b!73466 m!71907))

(declare-fun m!71909 () Bool)

(assert (=> b!73466 m!71909))

(assert (=> b!73468 m!71907))

(assert (=> b!73468 m!71907))

(assert (=> b!73468 m!71909))

(assert (=> b!73039 d!16983))

(assert (=> b!73039 d!16855))

(declare-fun d!16985 () Bool)

(declare-fun e!48050 () Bool)

(assert (=> d!16985 e!48050))

(declare-fun res!38934 () Bool)

(assert (=> d!16985 (=> (not res!38934) (not e!48050))))

(declare-fun lt!32926 () ListLongMap!1401)

(assert (=> d!16985 (= res!38934 (contains!720 lt!32926 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!32927 () List!1474)

(assert (=> d!16985 (= lt!32926 (ListLongMap!1402 lt!32927))))

(declare-fun lt!32925 () Unit!2076)

(declare-fun lt!32924 () Unit!2076)

(assert (=> d!16985 (= lt!32925 lt!32924)))

(assert (=> d!16985 (= (getValueByKey!134 lt!32927 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16985 (= lt!32924 (lemmaContainsTupThenGetReturnValue!51 lt!32927 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16985 (= lt!32927 (insertStrictlySorted!54 (toList!716 lt!32664) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16985 (= (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32926)))

(declare-fun b!73469 () Bool)

(declare-fun res!38935 () Bool)

(assert (=> b!73469 (=> (not res!38935) (not e!48050))))

(assert (=> b!73469 (= res!38935 (= (getValueByKey!134 (toList!716 lt!32926) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!73470 () Bool)

(assert (=> b!73470 (= e!48050 (contains!721 (toList!716 lt!32926) (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!16985 res!38934) b!73469))

(assert (= (and b!73469 res!38935) b!73470))

(declare-fun m!71911 () Bool)

(assert (=> d!16985 m!71911))

(declare-fun m!71913 () Bool)

(assert (=> d!16985 m!71913))

(declare-fun m!71915 () Bool)

(assert (=> d!16985 m!71915))

(declare-fun m!71917 () Bool)

(assert (=> d!16985 m!71917))

(declare-fun m!71919 () Bool)

(assert (=> b!73469 m!71919))

(declare-fun m!71921 () Bool)

(assert (=> b!73470 m!71921))

(assert (=> b!73039 d!16985))

(declare-fun d!16987 () Bool)

(assert (=> d!16987 (= (apply!75 lt!32664 lt!32672) (get!1153 (getValueByKey!134 (toList!716 lt!32664) lt!32672)))))

(declare-fun bs!3164 () Bool)

(assert (= bs!3164 d!16987))

(declare-fun m!71923 () Bool)

(assert (=> bs!3164 m!71923))

(assert (=> bs!3164 m!71923))

(declare-fun m!71925 () Bool)

(assert (=> bs!3164 m!71925))

(assert (=> b!73039 d!16987))

(declare-fun d!16989 () Bool)

(declare-fun e!48051 () Bool)

(assert (=> d!16989 e!48051))

(declare-fun res!38936 () Bool)

(assert (=> d!16989 (=> (not res!38936) (not e!48051))))

(declare-fun lt!32930 () ListLongMap!1401)

(assert (=> d!16989 (= res!38936 (contains!720 lt!32930 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!32931 () List!1474)

(assert (=> d!16989 (= lt!32930 (ListLongMap!1402 lt!32931))))

(declare-fun lt!32929 () Unit!2076)

(declare-fun lt!32928 () Unit!2076)

(assert (=> d!16989 (= lt!32929 lt!32928)))

(assert (=> d!16989 (= (getValueByKey!134 lt!32931 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16989 (= lt!32928 (lemmaContainsTupThenGetReturnValue!51 lt!32931 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16989 (= lt!32931 (insertStrictlySorted!54 (toList!716 lt!32676) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16989 (= (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32930)))

(declare-fun b!73471 () Bool)

(declare-fun res!38937 () Bool)

(assert (=> b!73471 (=> (not res!38937) (not e!48051))))

(assert (=> b!73471 (= res!38937 (= (getValueByKey!134 (toList!716 lt!32930) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!73472 () Bool)

(assert (=> b!73472 (= e!48051 (contains!721 (toList!716 lt!32930) (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!16989 res!38936) b!73471))

(assert (= (and b!73471 res!38937) b!73472))

(declare-fun m!71927 () Bool)

(assert (=> d!16989 m!71927))

(declare-fun m!71929 () Bool)

(assert (=> d!16989 m!71929))

(declare-fun m!71931 () Bool)

(assert (=> d!16989 m!71931))

(declare-fun m!71933 () Bool)

(assert (=> d!16989 m!71933))

(declare-fun m!71935 () Bool)

(assert (=> b!73471 m!71935))

(declare-fun m!71937 () Bool)

(assert (=> b!73472 m!71937))

(assert (=> b!73039 d!16989))

(declare-fun d!16991 () Bool)

(assert (=> d!16991 (= (apply!75 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32678) (apply!75 lt!32679 lt!32678))))

(declare-fun lt!32932 () Unit!2076)

(assert (=> d!16991 (= lt!32932 (choose!426 lt!32679 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32678))))

(declare-fun e!48052 () Bool)

(assert (=> d!16991 e!48052))

(declare-fun res!38938 () Bool)

(assert (=> d!16991 (=> (not res!38938) (not e!48052))))

(assert (=> d!16991 (= res!38938 (contains!720 lt!32679 lt!32678))))

(assert (=> d!16991 (= (addApplyDifferent!51 lt!32679 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32678) lt!32932)))

(declare-fun b!73473 () Bool)

(assert (=> b!73473 (= e!48052 (not (= lt!32678 lt!32674)))))

(assert (= (and d!16991 res!38938) b!73473))

(declare-fun m!71939 () Bool)

(assert (=> d!16991 m!71939))

(declare-fun m!71941 () Bool)

(assert (=> d!16991 m!71941))

(assert (=> d!16991 m!71413))

(assert (=> d!16991 m!71429))

(assert (=> d!16991 m!71417))

(assert (=> d!16991 m!71413))

(assert (=> b!73039 d!16991))

(declare-fun d!16993 () Bool)

(declare-fun e!48053 () Bool)

(assert (=> d!16993 e!48053))

(declare-fun res!38939 () Bool)

(assert (=> d!16993 (=> (not res!38939) (not e!48053))))

(declare-fun lt!32935 () ListLongMap!1401)

(assert (=> d!16993 (= res!38939 (contains!720 lt!32935 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!32936 () List!1474)

(assert (=> d!16993 (= lt!32935 (ListLongMap!1402 lt!32936))))

(declare-fun lt!32934 () Unit!2076)

(declare-fun lt!32933 () Unit!2076)

(assert (=> d!16993 (= lt!32934 lt!32933)))

(assert (=> d!16993 (= (getValueByKey!134 lt!32936 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16993 (= lt!32933 (lemmaContainsTupThenGetReturnValue!51 lt!32936 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16993 (= lt!32936 (insertStrictlySorted!54 (toList!716 lt!32668) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!16993 (= (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32935)))

(declare-fun b!73474 () Bool)

(declare-fun res!38940 () Bool)

(assert (=> b!73474 (=> (not res!38940) (not e!48053))))

(assert (=> b!73474 (= res!38940 (= (getValueByKey!134 (toList!716 lt!32935) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!73475 () Bool)

(assert (=> b!73475 (= e!48053 (contains!721 (toList!716 lt!32935) (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!16993 res!38939) b!73474))

(assert (= (and b!73474 res!38940) b!73475))

(declare-fun m!71943 () Bool)

(assert (=> d!16993 m!71943))

(declare-fun m!71945 () Bool)

(assert (=> d!16993 m!71945))

(declare-fun m!71947 () Bool)

(assert (=> d!16993 m!71947))

(declare-fun m!71949 () Bool)

(assert (=> d!16993 m!71949))

(declare-fun m!71951 () Bool)

(assert (=> b!73474 m!71951))

(declare-fun m!71953 () Bool)

(assert (=> b!73475 m!71953))

(assert (=> b!73039 d!16993))

(declare-fun e!48077 () Bool)

(declare-fun lt!33014 () SeekEntryResult!230)

(declare-fun b!73510 () Bool)

(assert (=> b!73510 (= e!48077 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!33014)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73511 () Bool)

(declare-fun res!38959 () Bool)

(declare-fun e!48074 () Bool)

(assert (=> b!73511 (=> (not res!38959) (not e!48074))))

(declare-fun lt!33009 () tuple2!2122)

(assert (=> b!73511 (= res!38959 (contains!720 (map!1160 (_2!1072 lt!33009)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73512 () Bool)

(declare-fun e!48076 () Unit!2076)

(declare-fun Unit!2100 () Unit!2076)

(assert (=> b!73512 (= e!48076 Unit!2100)))

(declare-fun b!73513 () Bool)

(declare-fun res!38964 () Bool)

(declare-fun e!48071 () Bool)

(assert (=> b!73513 (=> (not res!38964) (not e!48071))))

(declare-fun call!6477 () Bool)

(assert (=> b!73513 (= res!38964 call!6477)))

(declare-fun e!48073 () Bool)

(assert (=> b!73513 (= e!48073 e!48071)))

(declare-fun b!73514 () Bool)

(declare-fun res!38963 () Bool)

(declare-fun lt!33023 () SeekEntryResult!230)

(assert (=> b!73514 (= res!38963 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3054 lt!33023)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48070 () Bool)

(assert (=> b!73514 (=> (not res!38963) (not e!48070))))

(declare-fun b!73515 () Bool)

(declare-fun res!38962 () Bool)

(assert (=> b!73515 (=> (not res!38962) (not e!48074))))

(assert (=> b!73515 (= res!38962 (valid!307 (_2!1072 lt!33009)))))

(declare-fun b!73516 () Bool)

(declare-fun call!6476 () Bool)

(assert (=> b!73516 (= e!48071 (not call!6476))))

(declare-fun b!73517 () Bool)

(declare-fun e!48075 () Bool)

(assert (=> b!73517 (= e!48075 e!48070)))

(declare-fun res!38965 () Bool)

(assert (=> b!73517 (= res!38965 call!6477)))

(assert (=> b!73517 (=> (not res!38965) (not e!48070))))

(declare-fun b!73518 () Bool)

(declare-fun e!48072 () Unit!2076)

(declare-fun Unit!2101 () Unit!2076)

(assert (=> b!73518 (= e!48072 Unit!2101)))

(declare-fun lt!33005 () Unit!2076)

(assert (=> b!73518 (= lt!33005 (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(declare-fun call!6475 () SeekEntryResult!230)

(assert (=> b!73518 (= lt!33014 call!6475)))

(declare-fun res!38967 () Bool)

(assert (=> b!73518 (= res!38967 ((_ is Found!230) lt!33014))))

(assert (=> b!73518 (=> (not res!38967) (not e!48077))))

(assert (=> b!73518 e!48077))

(declare-fun lt!33020 () Unit!2076)

(assert (=> b!73518 (= lt!33020 lt!33005)))

(assert (=> b!73518 false))

(declare-fun b!73519 () Bool)

(declare-fun c!10952 () Bool)

(assert (=> b!73519 (= c!10952 ((_ is MissingVacant!230) lt!33023))))

(assert (=> b!73519 (= e!48073 e!48075)))

(declare-fun d!16995 () Bool)

(assert (=> d!16995 e!48074))

(declare-fun res!38966 () Bool)

(assert (=> d!16995 (=> (not res!38966) (not e!48074))))

(assert (=> d!16995 (= res!38966 (_1!1072 lt!33009))))

(assert (=> d!16995 (= lt!33009 (tuple2!2123 true (LongMapFixedSize!695 (defaultEntry!2212 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (bvadd (_size!396 newMap!16) #b00000000000000000000000000000001) (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (_vacant!396 newMap!16))))))

(declare-fun lt!33000 () Unit!2076)

(declare-fun lt!33019 () Unit!2076)

(assert (=> d!16995 (= lt!33000 lt!33019)))

(declare-fun lt!33004 () array!3879)

(declare-fun lt!33012 () array!3877)

(assert (=> d!16995 (contains!720 (getCurrentListMap!414 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))))))

(assert (=> d!16995 (= lt!33019 (lemmaValidKeyInArrayIsInListMap!84 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (defaultEntry!2212 newMap!16)))))

(assert (=> d!16995 (= lt!33004 (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))))

(assert (=> d!16995 (= lt!33012 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun lt!33007 () Unit!2076)

(declare-fun lt!33010 () Unit!2076)

(assert (=> d!16995 (= lt!33007 lt!33010)))

(declare-fun lt!33024 () array!3877)

(assert (=> d!16995 (= (arrayCountValidKeys!0 lt!33024 (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (bvadd (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3877 (_ BitVec 32)) Unit!2076)

(assert (=> d!16995 (= lt!33010 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!33024 (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))))))

(assert (=> d!16995 (= lt!33024 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun lt!33016 () Unit!2076)

(declare-fun lt!32999 () Unit!2076)

(assert (=> d!16995 (= lt!33016 lt!32999)))

(declare-fun lt!33001 () array!3877)

(assert (=> d!16995 (arrayContainsKey!0 lt!33001 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3877 (_ BitVec 64) (_ BitVec 32)) Unit!2076)

(assert (=> d!16995 (= lt!32999 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!33001 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))))))

(assert (=> d!16995 (= lt!33001 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun lt!33026 () Unit!2076)

(declare-fun lt!33006 () Unit!2076)

(assert (=> d!16995 (= lt!33026 lt!33006)))

(assert (=> d!16995 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (getCurrentListMap!414 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!13 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) (_ BitVec 64) V!2945 Int) Unit!2076)

(assert (=> d!16995 (= lt!33006 (lemmaAddValidKeyToArrayThenAddPairToListMap!13 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33017 () Unit!2076)

(declare-fun lt!32997 () Unit!2076)

(assert (=> d!16995 (= lt!33017 lt!32997)))

(assert (=> d!16995 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (mask!6179 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3877 (_ BitVec 32) (_ BitVec 32)) Unit!2076)

(assert (=> d!16995 (= lt!32997 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (mask!6179 newMap!16)))))

(declare-fun lt!33018 () Unit!2076)

(declare-fun lt!33003 () Unit!2076)

(assert (=> d!16995 (= lt!33018 lt!33003)))

(assert (=> d!16995 (= (arrayCountValidKeys!0 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3864 newMap!16) #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3877 (_ BitVec 32) (_ BitVec 64)) Unit!2076)

(assert (=> d!16995 (= lt!33003 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3864 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun lt!33011 () Unit!2076)

(declare-fun lt!33021 () Unit!2076)

(assert (=> d!16995 (= lt!33011 lt!33021)))

(declare-fun lt!33002 () (_ BitVec 32))

(declare-fun lt!33013 () List!1473)

(assert (=> d!16995 (arrayNoDuplicates!0 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) lt!33002 lt!33013)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3877 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1473) Unit!2076)

(assert (=> d!16995 (= lt!33021 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) lt!33002 lt!33013))))

(assert (=> d!16995 (= lt!33013 Nil!1470)))

(assert (=> d!16995 (= lt!33002 #b00000000000000000000000000000000)))

(declare-fun lt!33015 () Unit!2076)

(assert (=> d!16995 (= lt!33015 e!48076)))

(declare-fun c!10949 () Bool)

(assert (=> d!16995 (= c!10949 (arrayContainsKey!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!32998 () Unit!2076)

(assert (=> d!16995 (= lt!32998 e!48072)))

(declare-fun c!10950 () Bool)

(assert (=> d!16995 (= c!10950 (contains!720 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!16995 (valid!307 newMap!16)))

(assert (=> d!16995 (= (updateHelperNewKey!24 newMap!16 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))) lt!33009)))

(declare-fun bm!6472 () Bool)

(declare-fun call!6478 () Bool)

(assert (=> bm!6472 (= call!6477 call!6478)))

(declare-fun bm!6473 () Bool)

(assert (=> bm!6473 (= call!6475 (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun b!73520 () Bool)

(declare-fun res!38961 () Bool)

(assert (=> b!73520 (= res!38961 call!6478)))

(assert (=> b!73520 (=> (not res!38961) (not e!48077))))

(declare-fun b!73521 () Bool)

(assert (=> b!73521 (= e!48075 ((_ is Undefined!230) lt!33023))))

(declare-fun b!73522 () Bool)

(declare-fun Unit!2102 () Unit!2076)

(assert (=> b!73522 (= e!48076 Unit!2102)))

(declare-fun lt!33022 () Unit!2076)

(declare-fun lemmaArrayContainsKeyThenInListMap!13 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) (_ BitVec 32) Int) Unit!2076)

(assert (=> b!73522 (= lt!33022 (lemmaArrayContainsKeyThenInListMap!13 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (=> b!73522 (contains!720 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))

(declare-fun lt!33008 () Unit!2076)

(assert (=> b!73522 (= lt!33008 lt!33022)))

(assert (=> b!73522 false))

(declare-fun b!73523 () Bool)

(declare-fun lt!33025 () Unit!2076)

(assert (=> b!73523 (= e!48072 lt!33025)))

(assert (=> b!73523 (= lt!33025 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(assert (=> b!73523 (= lt!33023 call!6475)))

(declare-fun c!10951 () Bool)

(assert (=> b!73523 (= c!10951 ((_ is MissingZero!230) lt!33023))))

(assert (=> b!73523 e!48073))

(declare-fun bm!6474 () Bool)

(assert (=> bm!6474 (= call!6478 (inRange!0 (ite c!10950 (index!3052 lt!33014) (ite c!10951 (index!3051 lt!33023) (index!3054 lt!33023))) (mask!6179 newMap!16)))))

(declare-fun b!73524 () Bool)

(declare-fun res!38960 () Bool)

(assert (=> b!73524 (=> (not res!38960) (not e!48071))))

(assert (=> b!73524 (= res!38960 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3051 lt!33023)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73525 () Bool)

(assert (=> b!73525 (= e!48070 (not call!6476))))

(declare-fun bm!6475 () Bool)

(assert (=> bm!6475 (= call!6476 (arrayContainsKey!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!73526 () Bool)

(assert (=> b!73526 (= e!48074 (= (map!1160 (_2!1072 lt!33009)) (+!93 (map!1160 newMap!16) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (= (and d!16995 c!10950) b!73518))

(assert (= (and d!16995 (not c!10950)) b!73523))

(assert (= (and b!73518 res!38967) b!73520))

(assert (= (and b!73520 res!38961) b!73510))

(assert (= (and b!73523 c!10951) b!73513))

(assert (= (and b!73523 (not c!10951)) b!73519))

(assert (= (and b!73513 res!38964) b!73524))

(assert (= (and b!73524 res!38960) b!73516))

(assert (= (and b!73519 c!10952) b!73517))

(assert (= (and b!73519 (not c!10952)) b!73521))

(assert (= (and b!73517 res!38965) b!73514))

(assert (= (and b!73514 res!38963) b!73525))

(assert (= (or b!73513 b!73517) bm!6472))

(assert (= (or b!73516 b!73525) bm!6475))

(assert (= (or b!73520 bm!6472) bm!6474))

(assert (= (or b!73518 b!73523) bm!6473))

(assert (= (and d!16995 c!10949) b!73522))

(assert (= (and d!16995 (not c!10949)) b!73512))

(assert (= (and d!16995 res!38966) b!73515))

(assert (= (and b!73515 res!38962) b!73511))

(assert (= (and b!73511 res!38959) b!73526))

(assert (=> b!73523 m!71143))

(assert (=> b!73523 m!71519))

(assert (=> bm!6473 m!71143))

(assert (=> bm!6473 m!71499))

(assert (=> bm!6475 m!71143))

(assert (=> bm!6475 m!71513))

(declare-fun m!71955 () Bool)

(assert (=> b!73510 m!71955))

(declare-fun m!71957 () Bool)

(assert (=> b!73514 m!71957))

(declare-fun m!71959 () Bool)

(assert (=> b!73524 m!71959))

(declare-fun m!71961 () Bool)

(assert (=> d!16995 m!71961))

(assert (=> d!16995 m!71165))

(assert (=> d!16995 m!71143))

(declare-fun m!71963 () Bool)

(assert (=> d!16995 m!71963))

(declare-fun m!71965 () Bool)

(assert (=> d!16995 m!71965))

(declare-fun m!71967 () Bool)

(assert (=> d!16995 m!71967))

(assert (=> d!16995 m!71143))

(declare-fun m!71969 () Bool)

(assert (=> d!16995 m!71969))

(assert (=> d!16995 m!71143))

(assert (=> d!16995 m!71513))

(declare-fun m!71971 () Bool)

(assert (=> d!16995 m!71971))

(declare-fun m!71973 () Bool)

(assert (=> d!16995 m!71973))

(declare-fun m!71975 () Bool)

(assert (=> d!16995 m!71975))

(assert (=> d!16995 m!71971))

(assert (=> d!16995 m!71453))

(assert (=> d!16995 m!71143))

(declare-fun m!71977 () Bool)

(assert (=> d!16995 m!71977))

(assert (=> d!16995 m!71143))

(declare-fun m!71979 () Bool)

(assert (=> d!16995 m!71979))

(assert (=> d!16995 m!71143))

(declare-fun m!71981 () Bool)

(assert (=> d!16995 m!71981))

(assert (=> d!16995 m!71973))

(declare-fun m!71983 () Bool)

(assert (=> d!16995 m!71983))

(declare-fun m!71985 () Bool)

(assert (=> d!16995 m!71985))

(declare-fun m!71987 () Bool)

(assert (=> d!16995 m!71987))

(declare-fun m!71989 () Bool)

(assert (=> d!16995 m!71989))

(assert (=> d!16995 m!71403))

(assert (=> d!16995 m!71143))

(declare-fun m!71991 () Bool)

(assert (=> d!16995 m!71991))

(assert (=> d!16995 m!71403))

(assert (=> d!16995 m!71741))

(declare-fun m!71993 () Bool)

(assert (=> d!16995 m!71993))

(assert (=> d!16995 m!71143))

(declare-fun m!71995 () Bool)

(assert (=> d!16995 m!71995))

(declare-fun m!71997 () Bool)

(assert (=> d!16995 m!71997))

(assert (=> d!16995 m!71403))

(assert (=> b!73518 m!71143))

(assert (=> b!73518 m!71529))

(declare-fun m!71999 () Bool)

(assert (=> b!73515 m!71999))

(declare-fun m!72001 () Bool)

(assert (=> b!73526 m!72001))

(assert (=> b!73526 m!71195))

(assert (=> b!73526 m!71195))

(declare-fun m!72003 () Bool)

(assert (=> b!73526 m!72003))

(declare-fun m!72005 () Bool)

(assert (=> bm!6474 m!72005))

(assert (=> b!73511 m!72001))

(assert (=> b!73511 m!72001))

(assert (=> b!73511 m!71143))

(declare-fun m!72007 () Bool)

(assert (=> b!73511 m!72007))

(assert (=> b!73522 m!71143))

(declare-fun m!72009 () Bool)

(assert (=> b!73522 m!72009))

(assert (=> b!73522 m!71403))

(assert (=> b!73522 m!71403))

(assert (=> b!73522 m!71143))

(assert (=> b!73522 m!71991))

(assert (=> bm!6407 d!16995))

(assert (=> b!73085 d!16959))

(declare-fun d!16997 () Bool)

(declare-fun res!38968 () Bool)

(declare-fun e!48078 () Bool)

(assert (=> d!16997 (=> (not res!38968) (not e!48078))))

(assert (=> d!16997 (= res!38968 (simpleValid!51 (v!2532 (underlying!262 thiss!992))))))

(assert (=> d!16997 (= (valid!307 (v!2532 (underlying!262 thiss!992))) e!48078)))

(declare-fun b!73527 () Bool)

(declare-fun res!38969 () Bool)

(assert (=> b!73527 (=> (not res!38969) (not e!48078))))

(assert (=> b!73527 (= res!38969 (= (arrayCountValidKeys!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000 (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))) (_size!396 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!73528 () Bool)

(declare-fun res!38970 () Bool)

(assert (=> b!73528 (=> (not res!38970) (not e!48078))))

(assert (=> b!73528 (= res!38970 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!73529 () Bool)

(assert (=> b!73529 (= e!48078 (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000 Nil!1470))))

(assert (= (and d!16997 res!38968) b!73527))

(assert (= (and b!73527 res!38969) b!73528))

(assert (= (and b!73528 res!38970) b!73529))

(declare-fun m!72011 () Bool)

(assert (=> d!16997 m!72011))

(declare-fun m!72013 () Bool)

(assert (=> b!73527 m!72013))

(declare-fun m!72015 () Bool)

(assert (=> b!73528 m!72015))

(declare-fun m!72017 () Bool)

(assert (=> b!73529 m!72017))

(assert (=> d!16861 d!16997))

(declare-fun d!16999 () Bool)

(assert (=> d!16999 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32770 lt!32495 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33029 () Unit!2076)

(declare-fun choose!427 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 V!2945 Int) Unit!2076)

(assert (=> d!16999 (= lt!33029 (choose!427 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) lt!32770 (zeroValue!2114 newMap!16) lt!32495 (minValue!2114 newMap!16) (defaultEntry!2212 newMap!16)))))

(assert (=> d!16999 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!16999 (= (lemmaChangeZeroKeyThenAddPairToListMap!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) lt!32770 (zeroValue!2114 newMap!16) lt!32495 (minValue!2114 newMap!16) (defaultEntry!2212 newMap!16)) lt!33029)))

(declare-fun bs!3165 () Bool)

(assert (= bs!3165 d!16999))

(assert (=> bs!3165 m!71403))

(assert (=> bs!3165 m!71557))

(declare-fun m!72019 () Bool)

(assert (=> bs!3165 m!72019))

(declare-fun m!72021 () Bool)

(assert (=> bs!3165 m!72021))

(assert (=> bs!3165 m!71403))

(declare-fun m!72023 () Bool)

(assert (=> bs!3165 m!72023))

(assert (=> b!73194 d!16999))

(declare-fun b!73530 () Bool)

(declare-fun e!48086 () Bool)

(assert (=> b!73530 (= e!48086 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73531 () Bool)

(declare-fun e!48089 () Bool)

(declare-fun e!48084 () Bool)

(assert (=> b!73531 (= e!48089 e!48084)))

(declare-fun c!10958 () Bool)

(assert (=> b!73531 (= c!10958 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73532 () Bool)

(declare-fun e!48087 () Bool)

(declare-fun call!6483 () Bool)

(assert (=> b!73532 (= e!48087 (not call!6483))))

(declare-fun b!73533 () Bool)

(declare-fun e!48091 () Unit!2076)

(declare-fun Unit!2103 () Unit!2076)

(assert (=> b!73533 (= e!48091 Unit!2103)))

(declare-fun bm!6476 () Bool)

(declare-fun call!6484 () ListLongMap!1401)

(assert (=> bm!6476 (= call!6484 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!73534 () Bool)

(declare-fun e!48083 () Bool)

(assert (=> b!73534 (= e!48087 e!48083)))

(declare-fun res!38973 () Bool)

(assert (=> b!73534 (= res!38973 call!6483)))

(assert (=> b!73534 (=> (not res!38973) (not e!48083))))

(declare-fun bm!6477 () Bool)

(declare-fun call!6479 () ListLongMap!1401)

(declare-fun call!6485 () ListLongMap!1401)

(assert (=> bm!6477 (= call!6479 call!6485)))

(declare-fun b!73535 () Bool)

(declare-fun e!48080 () Bool)

(declare-fun e!48079 () Bool)

(assert (=> b!73535 (= e!48080 e!48079)))

(declare-fun res!38972 () Bool)

(assert (=> b!73535 (=> (not res!38972) (not e!48079))))

(declare-fun lt!33035 () ListLongMap!1401)

(assert (=> b!73535 (= res!38972 (contains!720 lt!33035 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73535 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun bm!6478 () Bool)

(assert (=> bm!6478 (= call!6485 call!6484)))

(declare-fun b!73536 () Bool)

(declare-fun lt!33031 () Unit!2076)

(assert (=> b!73536 (= e!48091 lt!33031)))

(declare-fun lt!33045 () ListLongMap!1401)

(assert (=> b!73536 (= lt!33045 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33050 () (_ BitVec 64))

(assert (=> b!73536 (= lt!33050 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33030 () (_ BitVec 64))

(assert (=> b!73536 (= lt!33030 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33044 () Unit!2076)

(assert (=> b!73536 (= lt!33044 (addStillContains!51 lt!33045 lt!33050 (zeroValue!2114 newMap!16) lt!33030))))

(assert (=> b!73536 (contains!720 (+!93 lt!33045 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16))) lt!33030)))

(declare-fun lt!33039 () Unit!2076)

(assert (=> b!73536 (= lt!33039 lt!33044)))

(declare-fun lt!33048 () ListLongMap!1401)

(assert (=> b!73536 (= lt!33048 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33043 () (_ BitVec 64))

(assert (=> b!73536 (= lt!33043 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33047 () (_ BitVec 64))

(assert (=> b!73536 (= lt!33047 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33046 () Unit!2076)

(assert (=> b!73536 (= lt!33046 (addApplyDifferent!51 lt!33048 lt!33043 (minValue!2114 newMap!16) lt!33047))))

(assert (=> b!73536 (= (apply!75 (+!93 lt!33048 (tuple2!2121 lt!33043 (minValue!2114 newMap!16))) lt!33047) (apply!75 lt!33048 lt!33047))))

(declare-fun lt!33036 () Unit!2076)

(assert (=> b!73536 (= lt!33036 lt!33046)))

(declare-fun lt!33033 () ListLongMap!1401)

(assert (=> b!73536 (= lt!33033 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33034 () (_ BitVec 64))

(assert (=> b!73536 (= lt!33034 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33041 () (_ BitVec 64))

(assert (=> b!73536 (= lt!33041 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33049 () Unit!2076)

(assert (=> b!73536 (= lt!33049 (addApplyDifferent!51 lt!33033 lt!33034 (zeroValue!2114 newMap!16) lt!33041))))

(assert (=> b!73536 (= (apply!75 (+!93 lt!33033 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16))) lt!33041) (apply!75 lt!33033 lt!33041))))

(declare-fun lt!33032 () Unit!2076)

(assert (=> b!73536 (= lt!33032 lt!33049)))

(declare-fun lt!33037 () ListLongMap!1401)

(assert (=> b!73536 (= lt!33037 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33042 () (_ BitVec 64))

(assert (=> b!73536 (= lt!33042 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33051 () (_ BitVec 64))

(assert (=> b!73536 (= lt!33051 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73536 (= lt!33031 (addApplyDifferent!51 lt!33037 lt!33042 (minValue!2114 newMap!16) lt!33051))))

(assert (=> b!73536 (= (apply!75 (+!93 lt!33037 (tuple2!2121 lt!33042 (minValue!2114 newMap!16))) lt!33051) (apply!75 lt!33037 lt!33051))))

(declare-fun bm!6479 () Bool)

(declare-fun call!6482 () ListLongMap!1401)

(declare-fun call!6481 () ListLongMap!1401)

(assert (=> bm!6479 (= call!6482 call!6481)))

(declare-fun b!73537 () Bool)

(declare-fun e!48081 () ListLongMap!1401)

(assert (=> b!73537 (= e!48081 call!6482)))

(declare-fun b!73538 () Bool)

(declare-fun res!38978 () Bool)

(assert (=> b!73538 (=> (not res!38978) (not e!48089))))

(assert (=> b!73538 (= res!38978 e!48087)))

(declare-fun c!10954 () Bool)

(assert (=> b!73538 (= c!10954 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!73539 () Bool)

(declare-fun call!6480 () Bool)

(assert (=> b!73539 (= e!48084 (not call!6480))))

(declare-fun b!73540 () Bool)

(declare-fun e!48090 () ListLongMap!1401)

(assert (=> b!73540 (= e!48090 (+!93 call!6481 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!73541 () Bool)

(assert (=> b!73541 (= e!48090 e!48081)))

(declare-fun c!10955 () Bool)

(assert (=> b!73541 (= c!10955 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6480 () Bool)

(declare-fun c!10953 () Bool)

(assert (=> bm!6480 (= call!6481 (+!93 (ite c!10953 call!6484 (ite c!10955 call!6485 call!6479)) (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!73542 () Bool)

(declare-fun res!38971 () Bool)

(assert (=> b!73542 (=> (not res!38971) (not e!48089))))

(assert (=> b!73542 (= res!38971 e!48080)))

(declare-fun res!38976 () Bool)

(assert (=> b!73542 (=> res!38976 e!48080)))

(declare-fun e!48085 () Bool)

(assert (=> b!73542 (= res!38976 (not e!48085))))

(declare-fun res!38979 () Bool)

(assert (=> b!73542 (=> (not res!38979) (not e!48085))))

(assert (=> b!73542 (= res!38979 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73543 () Bool)

(assert (=> b!73543 (= e!48083 (= (apply!75 lt!33035 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!73544 () Bool)

(declare-fun e!48088 () ListLongMap!1401)

(assert (=> b!73544 (= e!48088 call!6479)))

(declare-fun b!73545 () Bool)

(declare-fun e!48082 () Bool)

(assert (=> b!73545 (= e!48084 e!48082)))

(declare-fun res!38975 () Bool)

(assert (=> b!73545 (= res!38975 call!6480)))

(assert (=> b!73545 (=> (not res!38975) (not e!48082))))

(declare-fun bm!6481 () Bool)

(assert (=> bm!6481 (= call!6483 (contains!720 lt!33035 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17001 () Bool)

(assert (=> d!17001 e!48089))

(declare-fun res!38977 () Bool)

(assert (=> d!17001 (=> (not res!38977) (not e!48089))))

(assert (=> d!17001 (= res!38977 (or (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))))

(declare-fun lt!33040 () ListLongMap!1401)

(assert (=> d!17001 (= lt!33035 lt!33040)))

(declare-fun lt!33038 () Unit!2076)

(assert (=> d!17001 (= lt!33038 e!48091)))

(declare-fun c!10956 () Bool)

(assert (=> d!17001 (= c!10956 e!48086)))

(declare-fun res!38974 () Bool)

(assert (=> d!17001 (=> (not res!38974) (not e!48086))))

(assert (=> d!17001 (= res!38974 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17001 (= lt!33040 e!48090)))

(assert (=> d!17001 (= c!10953 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17001 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17001 (= (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33035)))

(declare-fun bm!6482 () Bool)

(assert (=> bm!6482 (= call!6480 (contains!720 lt!33035 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73546 () Bool)

(assert (=> b!73546 (= e!48088 call!6482)))

(declare-fun b!73547 () Bool)

(assert (=> b!73547 (= e!48079 (= (apply!75 lt!33035 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73547 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_values!2195 newMap!16))))))

(assert (=> b!73547 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73548 () Bool)

(assert (=> b!73548 (= e!48082 (= (apply!75 lt!33035 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun b!73549 () Bool)

(assert (=> b!73549 (= e!48085 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73550 () Bool)

(declare-fun c!10957 () Bool)

(assert (=> b!73550 (= c!10957 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73550 (= e!48081 e!48088)))

(assert (= (and d!17001 c!10953) b!73540))

(assert (= (and d!17001 (not c!10953)) b!73541))

(assert (= (and b!73541 c!10955) b!73537))

(assert (= (and b!73541 (not c!10955)) b!73550))

(assert (= (and b!73550 c!10957) b!73546))

(assert (= (and b!73550 (not c!10957)) b!73544))

(assert (= (or b!73546 b!73544) bm!6477))

(assert (= (or b!73537 bm!6477) bm!6478))

(assert (= (or b!73537 b!73546) bm!6479))

(assert (= (or b!73540 bm!6478) bm!6476))

(assert (= (or b!73540 bm!6479) bm!6480))

(assert (= (and d!17001 res!38974) b!73530))

(assert (= (and d!17001 c!10956) b!73536))

(assert (= (and d!17001 (not c!10956)) b!73533))

(assert (= (and d!17001 res!38977) b!73542))

(assert (= (and b!73542 res!38979) b!73549))

(assert (= (and b!73542 (not res!38976)) b!73535))

(assert (= (and b!73535 res!38972) b!73547))

(assert (= (and b!73542 res!38971) b!73538))

(assert (= (and b!73538 c!10954) b!73534))

(assert (= (and b!73538 (not c!10954)) b!73532))

(assert (= (and b!73534 res!38973) b!73543))

(assert (= (or b!73534 b!73532) bm!6481))

(assert (= (and b!73538 res!38978) b!73531))

(assert (= (and b!73531 c!10958) b!73545))

(assert (= (and b!73531 (not c!10958)) b!73539))

(assert (= (and b!73545 res!38975) b!73548))

(assert (= (or b!73545 b!73539) bm!6482))

(declare-fun b_lambda!3303 () Bool)

(assert (=> (not b_lambda!3303) (not b!73547)))

(assert (=> b!73547 t!5036))

(declare-fun b_and!4513 () Bool)

(assert (= b_and!4509 (and (=> t!5036 result!2689) b_and!4513)))

(assert (=> b!73547 t!5038))

(declare-fun b_and!4515 () Bool)

(assert (= b_and!4511 (and (=> t!5038 result!2691) b_and!4515)))

(assert (=> b!73535 m!71603))

(assert (=> b!73535 m!71603))

(declare-fun m!72025 () Bool)

(assert (=> b!73535 m!72025))

(declare-fun m!72027 () Bool)

(assert (=> b!73536 m!72027))

(declare-fun m!72029 () Bool)

(assert (=> b!73536 m!72029))

(declare-fun m!72031 () Bool)

(assert (=> b!73536 m!72031))

(assert (=> b!73536 m!71603))

(declare-fun m!72033 () Bool)

(assert (=> b!73536 m!72033))

(declare-fun m!72035 () Bool)

(assert (=> b!73536 m!72035))

(declare-fun m!72037 () Bool)

(assert (=> b!73536 m!72037))

(declare-fun m!72039 () Bool)

(assert (=> b!73536 m!72039))

(declare-fun m!72041 () Bool)

(assert (=> b!73536 m!72041))

(declare-fun m!72043 () Bool)

(assert (=> b!73536 m!72043))

(assert (=> b!73536 m!72041))

(assert (=> b!73536 m!72027))

(declare-fun m!72045 () Bool)

(assert (=> b!73536 m!72045))

(declare-fun m!72047 () Bool)

(assert (=> b!73536 m!72047))

(assert (=> b!73536 m!72033))

(declare-fun m!72049 () Bool)

(assert (=> b!73536 m!72049))

(assert (=> b!73536 m!72045))

(declare-fun m!72051 () Bool)

(assert (=> b!73536 m!72051))

(declare-fun m!72053 () Bool)

(assert (=> b!73536 m!72053))

(declare-fun m!72055 () Bool)

(assert (=> b!73536 m!72055))

(declare-fun m!72057 () Bool)

(assert (=> b!73536 m!72057))

(assert (=> b!73530 m!71603))

(assert (=> b!73530 m!71603))

(assert (=> b!73530 m!71605))

(declare-fun m!72059 () Bool)

(assert (=> bm!6482 m!72059))

(assert (=> bm!6476 m!72053))

(declare-fun m!72061 () Bool)

(assert (=> bm!6481 m!72061))

(assert (=> d!17001 m!71557))

(declare-fun m!72063 () Bool)

(assert (=> bm!6480 m!72063))

(declare-fun m!72065 () Bool)

(assert (=> b!73540 m!72065))

(declare-fun m!72067 () Bool)

(assert (=> b!73548 m!72067))

(assert (=> b!73549 m!71603))

(assert (=> b!73549 m!71603))

(assert (=> b!73549 m!71605))

(assert (=> b!73547 m!71663))

(assert (=> b!73547 m!71603))

(assert (=> b!73547 m!71603))

(declare-fun m!72069 () Bool)

(assert (=> b!73547 m!72069))

(declare-fun m!72071 () Bool)

(assert (=> b!73547 m!72071))

(assert (=> b!73547 m!71663))

(declare-fun m!72073 () Bool)

(assert (=> b!73547 m!72073))

(assert (=> b!73547 m!72071))

(declare-fun m!72075 () Bool)

(assert (=> b!73543 m!72075))

(assert (=> b!73207 d!17001))

(declare-fun d!17003 () Bool)

(assert (=> d!17003 (= (apply!75 lt!32666 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1153 (getValueByKey!134 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3166 () Bool)

(assert (= bs!3166 d!17003))

(assert (=> bs!3166 m!71681))

(assert (=> bs!3166 m!71681))

(declare-fun m!72077 () Bool)

(assert (=> bs!3166 m!72077))

(assert (=> b!73046 d!17003))

(assert (=> d!16871 d!16851))

(declare-fun b!73552 () Bool)

(declare-fun e!48092 () Option!140)

(declare-fun e!48093 () Option!140)

(assert (=> b!73552 (= e!48092 e!48093)))

(declare-fun c!10960 () Bool)

(assert (=> b!73552 (= c!10960 (and ((_ is Cons!1470) (toList!716 lt!32590)) (not (= (_1!1071 (h!2057 (toList!716 lt!32590))) (_1!1071 lt!32492)))))))

(declare-fun b!73551 () Bool)

(assert (=> b!73551 (= e!48092 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32590)))))))

(declare-fun d!17005 () Bool)

(declare-fun c!10959 () Bool)

(assert (=> d!17005 (= c!10959 (and ((_ is Cons!1470) (toList!716 lt!32590)) (= (_1!1071 (h!2057 (toList!716 lt!32590))) (_1!1071 lt!32492))))))

(assert (=> d!17005 (= (getValueByKey!134 (toList!716 lt!32590) (_1!1071 lt!32492)) e!48092)))

(declare-fun b!73553 () Bool)

(assert (=> b!73553 (= e!48093 (getValueByKey!134 (t!5023 (toList!716 lt!32590)) (_1!1071 lt!32492)))))

(declare-fun b!73554 () Bool)

(assert (=> b!73554 (= e!48093 None!138)))

(assert (= (and d!17005 c!10959) b!73551))

(assert (= (and d!17005 (not c!10959)) b!73552))

(assert (= (and b!73552 c!10960) b!73553))

(assert (= (and b!73552 (not c!10960)) b!73554))

(declare-fun m!72079 () Bool)

(assert (=> b!73553 m!72079))

(assert (=> b!72945 d!17005))

(declare-fun b!73563 () Bool)

(declare-fun e!48101 () Bool)

(declare-fun call!6488 () Bool)

(assert (=> b!73563 (= e!48101 call!6488)))

(declare-fun b!73564 () Bool)

(declare-fun e!48102 () Bool)

(assert (=> b!73564 (= e!48101 e!48102)))

(declare-fun lt!33059 () (_ BitVec 64))

(assert (=> b!73564 (= lt!33059 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33058 () Unit!2076)

(assert (=> b!73564 (= lt!33058 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3864 newMap!16) lt!33059 #b00000000000000000000000000000000))))

(assert (=> b!73564 (arrayContainsKey!0 (_keys!3864 newMap!16) lt!33059 #b00000000000000000000000000000000)))

(declare-fun lt!33060 () Unit!2076)

(assert (=> b!73564 (= lt!33060 lt!33058)))

(declare-fun res!38984 () Bool)

(assert (=> b!73564 (= res!38984 (= (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) (_keys!3864 newMap!16) (mask!6179 newMap!16)) (Found!230 #b00000000000000000000000000000000)))))

(assert (=> b!73564 (=> (not res!38984) (not e!48102))))

(declare-fun d!17007 () Bool)

(declare-fun res!38985 () Bool)

(declare-fun e!48100 () Bool)

(assert (=> d!17007 (=> res!38985 e!48100)))

(assert (=> d!17007 (= res!38985 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17007 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3864 newMap!16) (mask!6179 newMap!16)) e!48100)))

(declare-fun b!73565 () Bool)

(assert (=> b!73565 (= e!48100 e!48101)))

(declare-fun c!10963 () Bool)

(assert (=> b!73565 (= c!10963 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6485 () Bool)

(assert (=> bm!6485 (= call!6488 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun b!73566 () Bool)

(assert (=> b!73566 (= e!48102 call!6488)))

(assert (= (and d!17007 (not res!38985)) b!73565))

(assert (= (and b!73565 c!10963) b!73564))

(assert (= (and b!73565 (not c!10963)) b!73563))

(assert (= (and b!73564 res!38984) b!73566))

(assert (= (or b!73566 b!73563) bm!6485))

(assert (=> b!73564 m!71603))

(declare-fun m!72081 () Bool)

(assert (=> b!73564 m!72081))

(declare-fun m!72083 () Bool)

(assert (=> b!73564 m!72083))

(assert (=> b!73564 m!71603))

(declare-fun m!72085 () Bool)

(assert (=> b!73564 m!72085))

(assert (=> b!73565 m!71603))

(assert (=> b!73565 m!71603))

(assert (=> b!73565 m!71605))

(declare-fun m!72087 () Bool)

(assert (=> bm!6485 m!72087))

(assert (=> b!73061 d!17007))

(declare-fun d!17009 () Bool)

(declare-fun res!38995 () Bool)

(declare-fun e!48105 () Bool)

(assert (=> d!17009 (=> (not res!38995) (not e!48105))))

(assert (=> d!17009 (= res!38995 (validMask!0 (mask!6179 newMap!16)))))

(assert (=> d!17009 (= (simpleValid!51 newMap!16) e!48105)))

(declare-fun b!73577 () Bool)

(declare-fun res!38994 () Bool)

(assert (=> b!73577 (=> (not res!38994) (not e!48105))))

(declare-fun size!2094 (LongMapFixedSize!694) (_ BitVec 32))

(assert (=> b!73577 (= res!38994 (= (size!2094 newMap!16) (bvadd (_size!396 newMap!16) (bvsdiv (bvadd (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!73578 () Bool)

(assert (=> b!73578 (= e!48105 (and (bvsge (extraKeys!2071 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2071 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!396 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!73575 () Bool)

(declare-fun res!38997 () Bool)

(assert (=> b!73575 (=> (not res!38997) (not e!48105))))

(assert (=> b!73575 (= res!38997 (and (= (size!2089 (_values!2195 newMap!16)) (bvadd (mask!6179 newMap!16) #b00000000000000000000000000000001)) (= (size!2088 (_keys!3864 newMap!16)) (size!2089 (_values!2195 newMap!16))) (bvsge (_size!396 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!396 newMap!16) (bvadd (mask!6179 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!73576 () Bool)

(declare-fun res!38996 () Bool)

(assert (=> b!73576 (=> (not res!38996) (not e!48105))))

(assert (=> b!73576 (= res!38996 (bvsge (size!2094 newMap!16) (_size!396 newMap!16)))))

(assert (= (and d!17009 res!38995) b!73575))

(assert (= (and b!73575 res!38997) b!73576))

(assert (= (and b!73576 res!38996) b!73577))

(assert (= (and b!73577 res!38994) b!73578))

(assert (=> d!17009 m!71557))

(declare-fun m!72089 () Bool)

(assert (=> b!73577 m!72089))

(assert (=> b!73576 m!72089))

(assert (=> d!16873 d!17009))

(declare-fun d!17011 () Bool)

(declare-fun e!48106 () Bool)

(assert (=> d!17011 e!48106))

(declare-fun res!38998 () Bool)

(assert (=> d!17011 (=> res!38998 e!48106)))

(declare-fun lt!33062 () Bool)

(assert (=> d!17011 (= res!38998 (not lt!33062))))

(declare-fun lt!33064 () Bool)

(assert (=> d!17011 (= lt!33062 lt!33064)))

(declare-fun lt!33063 () Unit!2076)

(declare-fun e!48107 () Unit!2076)

(assert (=> d!17011 (= lt!33063 e!48107)))

(declare-fun c!10964 () Bool)

(assert (=> d!17011 (= c!10964 lt!33064)))

(assert (=> d!17011 (= lt!33064 (containsKey!137 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!17011 (= (contains!720 call!6407 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) lt!33062)))

(declare-fun b!73579 () Bool)

(declare-fun lt!33061 () Unit!2076)

(assert (=> b!73579 (= e!48107 lt!33061)))

(assert (=> b!73579 (= lt!33061 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> b!73579 (isDefined!86 (getValueByKey!134 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73580 () Bool)

(declare-fun Unit!2104 () Unit!2076)

(assert (=> b!73580 (= e!48107 Unit!2104)))

(declare-fun b!73581 () Bool)

(assert (=> b!73581 (= e!48106 (isDefined!86 (getValueByKey!134 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (= (and d!17011 c!10964) b!73579))

(assert (= (and d!17011 (not c!10964)) b!73580))

(assert (= (and d!17011 (not res!38998)) b!73581))

(assert (=> d!17011 m!71143))

(declare-fun m!72091 () Bool)

(assert (=> d!17011 m!72091))

(assert (=> b!73579 m!71143))

(declare-fun m!72093 () Bool)

(assert (=> b!73579 m!72093))

(assert (=> b!73579 m!71143))

(declare-fun m!72095 () Bool)

(assert (=> b!73579 m!72095))

(assert (=> b!73579 m!72095))

(declare-fun m!72097 () Bool)

(assert (=> b!73579 m!72097))

(assert (=> b!73581 m!71143))

(assert (=> b!73581 m!72095))

(assert (=> b!73581 m!72095))

(assert (=> b!73581 m!72097))

(assert (=> b!73220 d!17011))

(declare-fun d!17013 () Bool)

(declare-fun res!38999 () Bool)

(declare-fun e!48108 () Bool)

(assert (=> d!17013 (=> res!38999 e!48108)))

(assert (=> d!17013 (= res!38999 (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!17013 (= (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!48108)))

(declare-fun b!73582 () Bool)

(declare-fun e!48109 () Bool)

(assert (=> b!73582 (= e!48108 e!48109)))

(declare-fun res!39000 () Bool)

(assert (=> b!73582 (=> (not res!39000) (not e!48109))))

(assert (=> b!73582 (= res!39000 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!73583 () Bool)

(assert (=> b!73583 (= e!48109 (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!17013 (not res!38999)) b!73582))

(assert (= (and b!73582 res!39000) b!73583))

(declare-fun m!72099 () Bool)

(assert (=> d!17013 m!72099))

(assert (=> b!73583 m!71143))

(declare-fun m!72101 () Bool)

(assert (=> b!73583 m!72101))

(assert (=> b!73068 d!17013))

(declare-fun d!17015 () Bool)

(declare-fun e!48110 () Bool)

(assert (=> d!17015 e!48110))

(declare-fun res!39001 () Bool)

(assert (=> d!17015 (=> (not res!39001) (not e!48110))))

(declare-fun lt!33067 () ListLongMap!1401)

(assert (=> d!17015 (= res!39001 (contains!720 lt!33067 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun lt!33068 () List!1474)

(assert (=> d!17015 (= lt!33067 (ListLongMap!1402 lt!33068))))

(declare-fun lt!33066 () Unit!2076)

(declare-fun lt!33065 () Unit!2076)

(assert (=> d!17015 (= lt!33066 lt!33065)))

(assert (=> d!17015 (= (getValueByKey!134 lt!33068 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) (Some!139 (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17015 (= lt!33065 (lemmaContainsTupThenGetReturnValue!51 lt!33068 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17015 (= lt!33068 (insertStrictlySorted!54 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349))) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17015 (= (+!93 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349)) (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33067)))

(declare-fun b!73584 () Bool)

(declare-fun res!39002 () Bool)

(assert (=> b!73584 (=> (not res!39002) (not e!48110))))

(assert (=> b!73584 (= res!39002 (= (getValueByKey!134 (toList!716 lt!33067) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) (Some!139 (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!73585 () Bool)

(assert (=> b!73585 (= e!48110 (contains!721 (toList!716 lt!33067) (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (= (and d!17015 res!39001) b!73584))

(assert (= (and b!73584 res!39002) b!73585))

(declare-fun m!72103 () Bool)

(assert (=> d!17015 m!72103))

(declare-fun m!72105 () Bool)

(assert (=> d!17015 m!72105))

(declare-fun m!72107 () Bool)

(assert (=> d!17015 m!72107))

(declare-fun m!72109 () Bool)

(assert (=> d!17015 m!72109))

(declare-fun m!72111 () Bool)

(assert (=> b!73584 m!72111))

(declare-fun m!72113 () Bool)

(assert (=> b!73585 m!72113))

(assert (=> bm!6350 d!17015))

(declare-fun b!73587 () Bool)

(declare-fun e!48111 () Option!140)

(declare-fun e!48112 () Option!140)

(assert (=> b!73587 (= e!48111 e!48112)))

(declare-fun c!10966 () Bool)

(assert (=> b!73587 (= c!10966 (and ((_ is Cons!1470) (toList!716 lt!32583)) (not (= (_1!1071 (h!2057 (toList!716 lt!32583))) (_1!1071 lt!32485)))))))

(declare-fun b!73586 () Bool)

(assert (=> b!73586 (= e!48111 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32583)))))))

(declare-fun d!17017 () Bool)

(declare-fun c!10965 () Bool)

(assert (=> d!17017 (= c!10965 (and ((_ is Cons!1470) (toList!716 lt!32583)) (= (_1!1071 (h!2057 (toList!716 lt!32583))) (_1!1071 lt!32485))))))

(assert (=> d!17017 (= (getValueByKey!134 (toList!716 lt!32583) (_1!1071 lt!32485)) e!48111)))

(declare-fun b!73588 () Bool)

(assert (=> b!73588 (= e!48112 (getValueByKey!134 (t!5023 (toList!716 lt!32583)) (_1!1071 lt!32485)))))

(declare-fun b!73589 () Bool)

(assert (=> b!73589 (= e!48112 None!138)))

(assert (= (and d!17017 c!10965) b!73586))

(assert (= (and d!17017 (not c!10965)) b!73587))

(assert (= (and b!73587 c!10966) b!73588))

(assert (= (and b!73587 (not c!10966)) b!73589))

(declare-fun m!72115 () Bool)

(assert (=> b!73588 m!72115))

(assert (=> b!72943 d!17017))

(assert (=> bm!6410 d!16893))

(declare-fun d!17019 () Bool)

(declare-fun lt!33071 () Bool)

(declare-fun content!79 (List!1473) (InoxSet (_ BitVec 64)))

(assert (=> d!17019 (= lt!33071 (select (content!79 Nil!1470) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun e!48117 () Bool)

(assert (=> d!17019 (= lt!33071 e!48117)))

(declare-fun res!39008 () Bool)

(assert (=> d!17019 (=> (not res!39008) (not e!48117))))

(assert (=> d!17019 (= res!39008 ((_ is Cons!1469) Nil!1470))))

(assert (=> d!17019 (= (contains!722 Nil!1470 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) lt!33071)))

(declare-fun b!73594 () Bool)

(declare-fun e!48118 () Bool)

(assert (=> b!73594 (= e!48117 e!48118)))

(declare-fun res!39007 () Bool)

(assert (=> b!73594 (=> res!39007 e!48118)))

(assert (=> b!73594 (= res!39007 (= (h!2056 Nil!1470) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73595 () Bool)

(assert (=> b!73595 (= e!48118 (contains!722 (t!5022 Nil!1470) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (= (and d!17019 res!39008) b!73594))

(assert (= (and b!73594 (not res!39007)) b!73595))

(declare-fun m!72117 () Bool)

(assert (=> d!17019 m!72117))

(assert (=> d!17019 m!71143))

(declare-fun m!72119 () Bool)

(assert (=> d!17019 m!72119))

(assert (=> b!73595 m!71143))

(declare-fun m!72121 () Bool)

(assert (=> b!73595 m!72121))

(assert (=> b!73089 d!17019))

(declare-fun d!17021 () Bool)

(declare-fun e!48121 () Bool)

(assert (=> d!17021 e!48121))

(declare-fun res!39013 () Bool)

(assert (=> d!17021 (=> (not res!39013) (not e!48121))))

(declare-fun lt!33076 () SeekEntryResult!230)

(assert (=> d!17021 (= res!39013 ((_ is Found!230) lt!33076))))

(assert (=> d!17021 (= lt!33076 (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun lt!33077 () Unit!2076)

(declare-fun choose!428 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) Int) Unit!2076)

(assert (=> d!17021 (= lt!33077 (choose!428 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(assert (=> d!17021 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17021 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)) lt!33077)))

(declare-fun b!73600 () Bool)

(declare-fun res!39014 () Bool)

(assert (=> b!73600 (=> (not res!39014) (not e!48121))))

(assert (=> b!73600 (= res!39014 (inRange!0 (index!3052 lt!33076) (mask!6179 newMap!16)))))

(declare-fun b!73601 () Bool)

(assert (=> b!73601 (= e!48121 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!33076)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> b!73601 (and (bvsge (index!3052 lt!33076) #b00000000000000000000000000000000) (bvslt (index!3052 lt!33076) (size!2088 (_keys!3864 newMap!16))))))

(assert (= (and d!17021 res!39013) b!73600))

(assert (= (and b!73600 res!39014) b!73601))

(assert (=> d!17021 m!71143))

(assert (=> d!17021 m!71499))

(assert (=> d!17021 m!71143))

(declare-fun m!72123 () Bool)

(assert (=> d!17021 m!72123))

(assert (=> d!17021 m!71557))

(declare-fun m!72125 () Bool)

(assert (=> b!73600 m!72125))

(declare-fun m!72127 () Bool)

(assert (=> b!73601 m!72127))

(assert (=> bm!6418 d!17021))

(declare-fun d!17023 () Bool)

(declare-fun e!48122 () Bool)

(assert (=> d!17023 e!48122))

(declare-fun res!39015 () Bool)

(assert (=> d!17023 (=> (not res!39015) (not e!48122))))

(declare-fun lt!33080 () ListLongMap!1401)

(assert (=> d!17023 (= res!39015 (contains!720 lt!33080 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!33081 () List!1474)

(assert (=> d!17023 (= lt!33080 (ListLongMap!1402 lt!33081))))

(declare-fun lt!33079 () Unit!2076)

(declare-fun lt!33078 () Unit!2076)

(assert (=> d!17023 (= lt!33079 lt!33078)))

(assert (=> d!17023 (= (getValueByKey!134 lt!33081 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17023 (= lt!33078 (lemmaContainsTupThenGetReturnValue!51 lt!33081 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17023 (= lt!33081 (insertStrictlySorted!54 (toList!716 call!6351) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17023 (= (+!93 call!6351 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!33080)))

(declare-fun b!73602 () Bool)

(declare-fun res!39016 () Bool)

(assert (=> b!73602 (=> (not res!39016) (not e!48122))))

(assert (=> b!73602 (= res!39016 (= (getValueByKey!134 (toList!716 lt!33080) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!73603 () Bool)

(assert (=> b!73603 (= e!48122 (contains!721 (toList!716 lt!33080) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17023 res!39015) b!73602))

(assert (= (and b!73602 res!39016) b!73603))

(declare-fun m!72129 () Bool)

(assert (=> d!17023 m!72129))

(declare-fun m!72131 () Bool)

(assert (=> d!17023 m!72131))

(declare-fun m!72133 () Bool)

(assert (=> d!17023 m!72133))

(declare-fun m!72135 () Bool)

(assert (=> d!17023 m!72135))

(declare-fun m!72137 () Bool)

(assert (=> b!73602 m!72137))

(declare-fun m!72139 () Bool)

(assert (=> b!73603 m!72139))

(assert (=> b!73043 d!17023))

(assert (=> b!73073 d!16879))

(declare-fun d!17025 () Bool)

(declare-fun e!48123 () Bool)

(assert (=> d!17025 e!48123))

(declare-fun res!39017 () Bool)

(assert (=> d!17025 (=> (not res!39017) (not e!48123))))

(declare-fun lt!33084 () ListLongMap!1401)

(assert (=> d!17025 (= res!39017 (contains!720 lt!33084 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun lt!33085 () List!1474)

(assert (=> d!17025 (= lt!33084 (ListLongMap!1402 lt!33085))))

(declare-fun lt!33083 () Unit!2076)

(declare-fun lt!33082 () Unit!2076)

(assert (=> d!17025 (= lt!33083 lt!33082)))

(assert (=> d!17025 (= (getValueByKey!134 lt!33085 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17025 (= lt!33082 (lemmaContainsTupThenGetReturnValue!51 lt!33085 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17025 (= lt!33085 (insertStrictlySorted!54 (toList!716 call!6417) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17025 (= (+!93 call!6417 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) lt!33084)))

(declare-fun b!73604 () Bool)

(declare-fun res!39018 () Bool)

(assert (=> b!73604 (=> (not res!39018) (not e!48123))))

(assert (=> b!73604 (= res!39018 (= (getValueByKey!134 (toList!716 lt!33084) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!73605 () Bool)

(assert (=> b!73605 (= e!48123 (contains!721 (toList!716 lt!33084) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(assert (= (and d!17025 res!39017) b!73604))

(assert (= (and b!73604 res!39018) b!73605))

(declare-fun m!72141 () Bool)

(assert (=> d!17025 m!72141))

(declare-fun m!72143 () Bool)

(assert (=> d!17025 m!72143))

(declare-fun m!72145 () Bool)

(assert (=> d!17025 m!72145))

(declare-fun m!72147 () Bool)

(assert (=> d!17025 m!72147))

(declare-fun m!72149 () Bool)

(assert (=> b!73604 m!72149))

(declare-fun m!72151 () Bool)

(assert (=> b!73605 m!72151))

(assert (=> b!73199 d!17025))

(declare-fun d!17027 () Bool)

(declare-fun e!48124 () Bool)

(assert (=> d!17027 e!48124))

(declare-fun res!39019 () Bool)

(assert (=> d!17027 (=> res!39019 e!48124)))

(declare-fun lt!33087 () Bool)

(assert (=> d!17027 (= res!39019 (not lt!33087))))

(declare-fun lt!33089 () Bool)

(assert (=> d!17027 (= lt!33087 lt!33089)))

(declare-fun lt!33088 () Unit!2076)

(declare-fun e!48125 () Unit!2076)

(assert (=> d!17027 (= lt!33088 e!48125)))

(declare-fun c!10967 () Bool)

(assert (=> d!17027 (= c!10967 lt!33089)))

(assert (=> d!17027 (= lt!33089 (containsKey!137 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17027 (= (contains!720 lt!32614 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33087)))

(declare-fun b!73606 () Bool)

(declare-fun lt!33086 () Unit!2076)

(assert (=> b!73606 (= e!48125 lt!33086)))

(assert (=> b!73606 (= lt!33086 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73606 (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73607 () Bool)

(declare-fun Unit!2105 () Unit!2076)

(assert (=> b!73607 (= e!48125 Unit!2105)))

(declare-fun b!73608 () Bool)

(assert (=> b!73608 (= e!48124 (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17027 c!10967) b!73606))

(assert (= (and d!17027 (not c!10967)) b!73607))

(assert (= (and d!17027 (not res!39019)) b!73608))

(declare-fun m!72153 () Bool)

(assert (=> d!17027 m!72153))

(declare-fun m!72155 () Bool)

(assert (=> b!73606 m!72155))

(declare-fun m!72157 () Bool)

(assert (=> b!73606 m!72157))

(assert (=> b!73606 m!72157))

(declare-fun m!72159 () Bool)

(assert (=> b!73606 m!72159))

(assert (=> b!73608 m!72157))

(assert (=> b!73608 m!72157))

(assert (=> b!73608 m!72159))

(assert (=> b!72977 d!17027))

(declare-fun d!17029 () Bool)

(declare-fun e!48126 () Bool)

(assert (=> d!17029 e!48126))

(declare-fun res!39020 () Bool)

(assert (=> d!17029 (=> (not res!39020) (not e!48126))))

(declare-fun lt!33092 () ListLongMap!1401)

(assert (=> d!17029 (= res!39020 (contains!720 lt!33092 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun lt!33093 () List!1474)

(assert (=> d!17029 (= lt!33092 (ListLongMap!1402 lt!33093))))

(declare-fun lt!33091 () Unit!2076)

(declare-fun lt!33090 () Unit!2076)

(assert (=> d!17029 (= lt!33091 lt!33090)))

(assert (=> d!17029 (= (getValueByKey!134 lt!33093 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) (Some!139 (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17029 (= lt!33090 (lemmaContainsTupThenGetReturnValue!51 lt!33093 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17029 (= lt!33093 (insertStrictlySorted!54 (toList!716 e!47887) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17029 (= (+!93 e!47887 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33092)))

(declare-fun b!73609 () Bool)

(declare-fun res!39021 () Bool)

(assert (=> b!73609 (=> (not res!39021) (not e!48126))))

(assert (=> b!73609 (= res!39021 (= (getValueByKey!134 (toList!716 lt!33092) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) (Some!139 (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun b!73610 () Bool)

(assert (=> b!73610 (= e!48126 (contains!721 (toList!716 lt!33092) (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (= (and d!17029 res!39020) b!73609))

(assert (= (and b!73609 res!39021) b!73610))

(declare-fun m!72161 () Bool)

(assert (=> d!17029 m!72161))

(declare-fun m!72163 () Bool)

(assert (=> d!17029 m!72163))

(declare-fun m!72165 () Bool)

(assert (=> d!17029 m!72165))

(declare-fun m!72167 () Bool)

(assert (=> d!17029 m!72167))

(declare-fun m!72169 () Bool)

(assert (=> b!73609 m!72169))

(declare-fun m!72171 () Bool)

(assert (=> b!73610 m!72171))

(assert (=> bm!6422 d!17029))

(declare-fun d!17031 () Bool)

(assert (=> d!17031 (= (apply!75 lt!32666 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1153 (getValueByKey!134 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3167 () Bool)

(assert (= bs!3167 d!17031))

(assert (=> bs!3167 m!71385))

(assert (=> bs!3167 m!71753))

(assert (=> bs!3167 m!71753))

(declare-fun m!72173 () Bool)

(assert (=> bs!3167 m!72173))

(assert (=> b!73050 d!17031))

(assert (=> b!73050 d!16923))

(declare-fun d!17033 () Bool)

(declare-fun res!39026 () Bool)

(declare-fun e!48131 () Bool)

(assert (=> d!17033 (=> res!39026 e!48131)))

(assert (=> d!17033 (= res!39026 (and ((_ is Cons!1470) (toList!716 lt!32488)) (= (_1!1071 (h!2057 (toList!716 lt!32488))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (=> d!17033 (= (containsKey!137 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) e!48131)))

(declare-fun b!73615 () Bool)

(declare-fun e!48132 () Bool)

(assert (=> b!73615 (= e!48131 e!48132)))

(declare-fun res!39027 () Bool)

(assert (=> b!73615 (=> (not res!39027) (not e!48132))))

(assert (=> b!73615 (= res!39027 (and (or (not ((_ is Cons!1470) (toList!716 lt!32488))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32488))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))) ((_ is Cons!1470) (toList!716 lt!32488)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32488))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(declare-fun b!73616 () Bool)

(assert (=> b!73616 (= e!48132 (containsKey!137 (t!5023 (toList!716 lt!32488)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (= (and d!17033 (not res!39026)) b!73615))

(assert (= (and b!73615 res!39027) b!73616))

(assert (=> b!73616 m!71143))

(declare-fun m!72175 () Bool)

(assert (=> b!73616 m!72175))

(assert (=> d!16885 d!17033))

(assert (=> d!16877 d!16883))

(declare-fun d!17035 () Bool)

(assert (=> d!17035 (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) from!355 Nil!1470)))

(assert (=> d!17035 true))

(declare-fun _$71!96 () Unit!2076)

(assert (=> d!17035 (= (choose!39 (_keys!3864 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!96)))

(declare-fun bs!3168 () Bool)

(assert (= bs!3168 d!17035))

(assert (=> bs!3168 m!71185))

(assert (=> d!16877 d!17035))

(declare-fun d!17037 () Bool)

(declare-fun e!48133 () Bool)

(assert (=> d!17037 e!48133))

(declare-fun res!39028 () Bool)

(assert (=> d!17037 (=> res!39028 e!48133)))

(declare-fun lt!33095 () Bool)

(assert (=> d!17037 (= res!39028 (not lt!33095))))

(declare-fun lt!33097 () Bool)

(assert (=> d!17037 (= lt!33095 lt!33097)))

(declare-fun lt!33096 () Unit!2076)

(declare-fun e!48134 () Unit!2076)

(assert (=> d!17037 (= lt!33096 e!48134)))

(declare-fun c!10968 () Bool)

(assert (=> d!17037 (= c!10968 lt!33097)))

(assert (=> d!17037 (= lt!33097 (containsKey!137 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17037 (= (contains!720 lt!32666 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33095)))

(declare-fun b!73617 () Bool)

(declare-fun lt!33094 () Unit!2076)

(assert (=> b!73617 (= e!48134 lt!33094)))

(assert (=> b!73617 (= lt!33094 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73617 (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73618 () Bool)

(declare-fun Unit!2106 () Unit!2076)

(assert (=> b!73618 (= e!48134 Unit!2106)))

(declare-fun b!73619 () Bool)

(assert (=> b!73619 (= e!48133 (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17037 c!10968) b!73617))

(assert (= (and d!17037 (not c!10968)) b!73618))

(assert (= (and d!17037 (not res!39028)) b!73619))

(declare-fun m!72177 () Bool)

(assert (=> d!17037 m!72177))

(declare-fun m!72179 () Bool)

(assert (=> b!73617 m!72179))

(declare-fun m!72181 () Bool)

(assert (=> b!73617 m!72181))

(assert (=> b!73617 m!72181))

(declare-fun m!72183 () Bool)

(assert (=> b!73617 m!72183))

(assert (=> b!73619 m!72181))

(assert (=> b!73619 m!72181))

(assert (=> b!73619 m!72183))

(assert (=> bm!6352 d!17037))

(assert (=> b!72975 d!16917))

(declare-fun d!17039 () Bool)

(declare-fun e!48135 () Bool)

(assert (=> d!17039 e!48135))

(declare-fun res!39029 () Bool)

(assert (=> d!17039 (=> res!39029 e!48135)))

(declare-fun lt!33099 () Bool)

(assert (=> d!17039 (= res!39029 (not lt!33099))))

(declare-fun lt!33101 () Bool)

(assert (=> d!17039 (= lt!33099 lt!33101)))

(declare-fun lt!33100 () Unit!2076)

(declare-fun e!48136 () Unit!2076)

(assert (=> d!17039 (= lt!33100 e!48136)))

(declare-fun c!10969 () Bool)

(assert (=> d!17039 (= c!10969 lt!33101)))

(assert (=> d!17039 (= lt!33101 (containsKey!137 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!17039 (= (contains!720 e!47885 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) lt!33099)))

(declare-fun b!73620 () Bool)

(declare-fun lt!33098 () Unit!2076)

(assert (=> b!73620 (= e!48136 lt!33098)))

(assert (=> b!73620 (= lt!33098 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> b!73620 (isDefined!86 (getValueByKey!134 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73621 () Bool)

(declare-fun Unit!2107 () Unit!2076)

(assert (=> b!73621 (= e!48136 Unit!2107)))

(declare-fun b!73622 () Bool)

(assert (=> b!73622 (= e!48135 (isDefined!86 (getValueByKey!134 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (= (and d!17039 c!10969) b!73620))

(assert (= (and d!17039 (not c!10969)) b!73621))

(assert (= (and d!17039 (not res!39029)) b!73622))

(assert (=> d!17039 m!71143))

(declare-fun m!72185 () Bool)

(assert (=> d!17039 m!72185))

(assert (=> b!73620 m!71143))

(declare-fun m!72187 () Bool)

(assert (=> b!73620 m!72187))

(assert (=> b!73620 m!71143))

(declare-fun m!72189 () Bool)

(assert (=> b!73620 m!72189))

(assert (=> b!73620 m!72189))

(declare-fun m!72191 () Bool)

(assert (=> b!73620 m!72191))

(assert (=> b!73622 m!71143))

(assert (=> b!73622 m!72189))

(assert (=> b!73622 m!72189))

(assert (=> b!73622 m!72191))

(assert (=> bm!6404 d!17039))

(declare-fun d!17041 () Bool)

(declare-fun e!48139 () Bool)

(assert (=> d!17041 e!48139))

(declare-fun c!10972 () Bool)

(assert (=> d!17041 (= c!10972 (and (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!17041 true))

(declare-fun _$29!90 () Unit!2076)

(assert (=> d!17041 (= (choose!418 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))) _$29!90)))

(declare-fun b!73627 () Bool)

(assert (=> b!73627 (= e!48139 (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!73628 () Bool)

(assert (=> b!73628 (= e!48139 (ite (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!17041 c!10972) b!73627))

(assert (= (and d!17041 (not c!10972)) b!73628))

(assert (=> b!73627 m!71143))

(assert (=> b!73627 m!71189))

(assert (=> d!16881 d!17041))

(assert (=> d!16881 d!16851))

(declare-fun d!17043 () Bool)

(assert (=> d!17043 (= (get!1151 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) from!355) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2531 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> b!72989 d!17043))

(declare-fun d!17045 () Bool)

(assert (=> d!17045 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32763 (zeroValue!2114 newMap!16) lt!32495 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33104 () Unit!2076)

(declare-fun choose!429 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 V!2945 Int) Unit!2076)

(assert (=> d!17045 (= lt!33104 (choose!429 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) lt!32763 (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) lt!32495 (defaultEntry!2212 newMap!16)))))

(assert (=> d!17045 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17045 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) lt!32763 (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) lt!32495 (defaultEntry!2212 newMap!16)) lt!33104)))

(declare-fun bs!3169 () Bool)

(assert (= bs!3169 d!17045))

(declare-fun m!72193 () Bool)

(assert (=> bs!3169 m!72193))

(assert (=> bs!3169 m!71557))

(assert (=> bs!3169 m!71403))

(assert (=> bs!3169 m!71403))

(declare-fun m!72195 () Bool)

(assert (=> bs!3169 m!72195))

(declare-fun m!72197 () Bool)

(assert (=> bs!3169 m!72197))

(assert (=> b!73196 d!17045))

(declare-fun d!17047 () Bool)

(declare-fun e!48145 () Bool)

(assert (=> d!17047 e!48145))

(declare-fun res!39030 () Bool)

(assert (=> d!17047 (=> (not res!39030) (not e!48145))))

(declare-fun lt!33109 () ListLongMap!1401)

(assert (=> d!17047 (= res!39030 (not (contains!720 lt!33109 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48146 () ListLongMap!1401)

(assert (=> d!17047 (= lt!33109 e!48146)))

(declare-fun c!10976 () Bool)

(assert (=> d!17047 (= c!10976 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!17047 (validMask!0 (mask!6179 (v!2532 (underlying!262 thiss!992))))))

(assert (=> d!17047 (= (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))) lt!33109)))

(declare-fun b!73629 () Bool)

(declare-fun e!48144 () ListLongMap!1401)

(declare-fun call!6489 () ListLongMap!1401)

(assert (=> b!73629 (= e!48144 call!6489)))

(declare-fun bm!6486 () Bool)

(assert (=> bm!6486 (= call!6489 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!73630 () Bool)

(declare-fun lt!33106 () Unit!2076)

(declare-fun lt!33105 () Unit!2076)

(assert (=> b!73630 (= lt!33106 lt!33105)))

(declare-fun lt!33111 () V!2945)

(declare-fun lt!33108 () ListLongMap!1401)

(declare-fun lt!33110 () (_ BitVec 64))

(declare-fun lt!33107 () (_ BitVec 64))

(assert (=> b!73630 (not (contains!720 (+!93 lt!33108 (tuple2!2121 lt!33107 lt!33111)) lt!33110))))

(assert (=> b!73630 (= lt!33105 (addStillNotContains!26 lt!33108 lt!33107 lt!33111 lt!33110))))

(assert (=> b!73630 (= lt!33110 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73630 (= lt!33111 (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73630 (= lt!33107 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!73630 (= lt!33108 call!6489)))

(assert (=> b!73630 (= e!48144 (+!93 call!6489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!73631 () Bool)

(declare-fun e!48141 () Bool)

(assert (=> b!73631 (= e!48141 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!73631 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!73632 () Bool)

(declare-fun e!48143 () Bool)

(assert (=> b!73632 (= e!48145 e!48143)))

(declare-fun c!10975 () Bool)

(assert (=> b!73632 (= c!10975 e!48141)))

(declare-fun res!39033 () Bool)

(assert (=> b!73632 (=> (not res!39033) (not e!48141))))

(assert (=> b!73632 (= res!39033 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!73633 () Bool)

(declare-fun res!39032 () Bool)

(assert (=> b!73633 (=> (not res!39032) (not e!48145))))

(assert (=> b!73633 (= res!39032 (not (contains!720 lt!33109 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73634 () Bool)

(declare-fun e!48142 () Bool)

(assert (=> b!73634 (= e!48143 e!48142)))

(assert (=> b!73634 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun res!39031 () Bool)

(assert (=> b!73634 (= res!39031 (contains!720 lt!33109 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!73634 (=> (not res!39031) (not e!48142))))

(declare-fun b!73635 () Bool)

(assert (=> b!73635 (= e!48146 e!48144)))

(declare-fun c!10973 () Bool)

(assert (=> b!73635 (= c!10973 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73636 () Bool)

(declare-fun e!48140 () Bool)

(assert (=> b!73636 (= e!48143 e!48140)))

(declare-fun c!10974 () Bool)

(assert (=> b!73636 (= c!10974 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!73637 () Bool)

(assert (=> b!73637 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> b!73637 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2089 (_values!2195 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> b!73637 (= e!48142 (= (apply!75 lt!33109 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73638 () Bool)

(assert (=> b!73638 (= e!48140 (isEmpty!322 lt!33109))))

(declare-fun b!73639 () Bool)

(assert (=> b!73639 (= e!48146 (ListLongMap!1402 Nil!1471))))

(declare-fun b!73640 () Bool)

(assert (=> b!73640 (= e!48140 (= lt!33109 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17047 c!10976) b!73639))

(assert (= (and d!17047 (not c!10976)) b!73635))

(assert (= (and b!73635 c!10973) b!73630))

(assert (= (and b!73635 (not c!10973)) b!73629))

(assert (= (or b!73630 b!73629) bm!6486))

(assert (= (and d!17047 res!39030) b!73633))

(assert (= (and b!73633 res!39032) b!73632))

(assert (= (and b!73632 res!39033) b!73631))

(assert (= (and b!73632 c!10975) b!73634))

(assert (= (and b!73632 (not c!10975)) b!73636))

(assert (= (and b!73634 res!39031) b!73637))

(assert (= (and b!73636 c!10974) b!73640))

(assert (= (and b!73636 (not c!10974)) b!73638))

(declare-fun b_lambda!3305 () Bool)

(assert (=> (not b_lambda!3305) (not b!73630)))

(assert (=> b!73630 t!5019))

(declare-fun b_and!4517 () Bool)

(assert (= b_and!4513 (and (=> t!5019 result!2669) b_and!4517)))

(assert (=> b!73630 t!5021))

(declare-fun b_and!4519 () Bool)

(assert (= b_and!4515 (and (=> t!5021 result!2673) b_and!4519)))

(declare-fun b_lambda!3307 () Bool)

(assert (=> (not b_lambda!3307) (not b!73637)))

(assert (=> b!73637 t!5019))

(declare-fun b_and!4521 () Bool)

(assert (= b_and!4517 (and (=> t!5019 result!2669) b_and!4521)))

(assert (=> b!73637 t!5021))

(declare-fun b_and!4523 () Bool)

(assert (= b_and!4519 (and (=> t!5021 result!2673) b_and!4523)))

(declare-fun m!72199 () Bool)

(assert (=> b!73638 m!72199))

(declare-fun m!72201 () Bool)

(assert (=> b!73640 m!72201))

(declare-fun m!72203 () Bool)

(assert (=> b!73630 m!72203))

(assert (=> b!73630 m!71147))

(declare-fun m!72205 () Bool)

(assert (=> b!73630 m!72205))

(declare-fun m!72207 () Bool)

(assert (=> b!73630 m!72207))

(assert (=> b!73630 m!72207))

(declare-fun m!72209 () Bool)

(assert (=> b!73630 m!72209))

(declare-fun m!72211 () Bool)

(assert (=> b!73630 m!72211))

(declare-fun m!72213 () Bool)

(assert (=> b!73630 m!72213))

(assert (=> b!73630 m!72099))

(assert (=> b!73630 m!72203))

(assert (=> b!73630 m!71147))

(assert (=> b!73637 m!72203))

(assert (=> b!73637 m!71147))

(assert (=> b!73637 m!72205))

(assert (=> b!73637 m!72099))

(assert (=> b!73637 m!72099))

(declare-fun m!72215 () Bool)

(assert (=> b!73637 m!72215))

(assert (=> b!73637 m!72203))

(assert (=> b!73637 m!71147))

(declare-fun m!72217 () Bool)

(assert (=> d!17047 m!72217))

(assert (=> d!17047 m!71151))

(assert (=> bm!6486 m!72201))

(assert (=> b!73634 m!72099))

(assert (=> b!73634 m!72099))

(declare-fun m!72219 () Bool)

(assert (=> b!73634 m!72219))

(assert (=> b!73631 m!72099))

(assert (=> b!73631 m!72099))

(declare-fun m!72221 () Bool)

(assert (=> b!73631 m!72221))

(declare-fun m!72223 () Bool)

(assert (=> b!73633 m!72223))

(assert (=> b!73635 m!72099))

(assert (=> b!73635 m!72099))

(assert (=> b!73635 m!72221))

(assert (=> bm!6331 d!17047))

(declare-fun d!17049 () Bool)

(declare-fun e!48147 () Bool)

(assert (=> d!17049 e!48147))

(declare-fun res!39034 () Bool)

(assert (=> d!17049 (=> (not res!39034) (not e!48147))))

(declare-fun lt!33114 () ListLongMap!1401)

(assert (=> d!17049 (= res!39034 (contains!720 lt!33114 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!33115 () List!1474)

(assert (=> d!17049 (= lt!33114 (ListLongMap!1402 lt!33115))))

(declare-fun lt!33113 () Unit!2076)

(declare-fun lt!33112 () Unit!2076)

(assert (=> d!17049 (= lt!33113 lt!33112)))

(assert (=> d!17049 (= (getValueByKey!134 lt!33115 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17049 (= lt!33112 (lemmaContainsTupThenGetReturnValue!51 lt!33115 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17049 (= lt!33115 (insertStrictlySorted!54 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17049 (= (+!93 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!33114)))

(declare-fun b!73641 () Bool)

(declare-fun res!39035 () Bool)

(assert (=> b!73641 (=> (not res!39035) (not e!48147))))

(assert (=> b!73641 (= res!39035 (= (getValueByKey!134 (toList!716 lt!33114) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!73642 () Bool)

(assert (=> b!73642 (= e!48147 (contains!721 (toList!716 lt!33114) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17049 res!39034) b!73641))

(assert (= (and b!73641 res!39035) b!73642))

(declare-fun m!72225 () Bool)

(assert (=> d!17049 m!72225))

(declare-fun m!72227 () Bool)

(assert (=> d!17049 m!72227))

(declare-fun m!72229 () Bool)

(assert (=> d!17049 m!72229))

(declare-fun m!72231 () Bool)

(assert (=> d!17049 m!72231))

(declare-fun m!72233 () Bool)

(assert (=> b!73641 m!72233))

(declare-fun m!72235 () Bool)

(assert (=> b!73642 m!72235))

(assert (=> d!16847 d!17049))

(declare-fun d!17051 () Bool)

(assert (=> d!17051 (= (+!93 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (+!93 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(assert (=> d!17051 true))

(declare-fun _$28!121 () Unit!2076)

(assert (=> d!17051 (= (choose!417 lt!32489 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) _$28!121)))

(declare-fun bs!3170 () Bool)

(assert (= bs!3170 d!17051))

(assert (=> bs!3170 m!71337))

(assert (=> bs!3170 m!71337))

(assert (=> bs!3170 m!71339))

(assert (=> bs!3170 m!71335))

(assert (=> bs!3170 m!71335))

(assert (=> bs!3170 m!71343))

(assert (=> d!16847 d!17051))

(declare-fun d!17053 () Bool)

(declare-fun e!48148 () Bool)

(assert (=> d!17053 e!48148))

(declare-fun res!39036 () Bool)

(assert (=> d!17053 (=> (not res!39036) (not e!48148))))

(declare-fun lt!33118 () ListLongMap!1401)

(assert (=> d!17053 (= res!39036 (contains!720 lt!33118 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun lt!33119 () List!1474)

(assert (=> d!17053 (= lt!33118 (ListLongMap!1402 lt!33119))))

(declare-fun lt!33117 () Unit!2076)

(declare-fun lt!33116 () Unit!2076)

(assert (=> d!17053 (= lt!33117 lt!33116)))

(assert (=> d!17053 (= (getValueByKey!134 lt!33119 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17053 (= lt!33116 (lemmaContainsTupThenGetReturnValue!51 lt!33119 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17053 (= lt!33119 (insertStrictlySorted!54 (toList!716 lt!32489) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17053 (= (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) lt!33118)))

(declare-fun b!73643 () Bool)

(declare-fun res!39037 () Bool)

(assert (=> b!73643 (=> (not res!39037) (not e!48148))))

(assert (=> b!73643 (= res!39037 (= (getValueByKey!134 (toList!716 lt!33118) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!73644 () Bool)

(assert (=> b!73644 (= e!48148 (contains!721 (toList!716 lt!33118) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(assert (= (and d!17053 res!39036) b!73643))

(assert (= (and b!73643 res!39037) b!73644))

(declare-fun m!72237 () Bool)

(assert (=> d!17053 m!72237))

(declare-fun m!72239 () Bool)

(assert (=> d!17053 m!72239))

(declare-fun m!72241 () Bool)

(assert (=> d!17053 m!72241))

(declare-fun m!72243 () Bool)

(assert (=> d!17053 m!72243))

(declare-fun m!72245 () Bool)

(assert (=> b!73643 m!72245))

(declare-fun m!72247 () Bool)

(assert (=> b!73644 m!72247))

(assert (=> d!16847 d!17053))

(declare-fun d!17055 () Bool)

(declare-fun e!48149 () Bool)

(assert (=> d!17055 e!48149))

(declare-fun res!39038 () Bool)

(assert (=> d!17055 (=> (not res!39038) (not e!48149))))

(declare-fun lt!33122 () ListLongMap!1401)

(assert (=> d!17055 (= res!39038 (contains!720 lt!33122 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!33123 () List!1474)

(assert (=> d!17055 (= lt!33122 (ListLongMap!1402 lt!33123))))

(declare-fun lt!33121 () Unit!2076)

(declare-fun lt!33120 () Unit!2076)

(assert (=> d!17055 (= lt!33121 lt!33120)))

(assert (=> d!17055 (= (getValueByKey!134 lt!33123 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17055 (= lt!33120 (lemmaContainsTupThenGetReturnValue!51 lt!33123 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17055 (= lt!33123 (insertStrictlySorted!54 (toList!716 lt!32489) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17055 (= (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!33122)))

(declare-fun b!73645 () Bool)

(declare-fun res!39039 () Bool)

(assert (=> b!73645 (=> (not res!39039) (not e!48149))))

(assert (=> b!73645 (= res!39039 (= (getValueByKey!134 (toList!716 lt!33122) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!73646 () Bool)

(assert (=> b!73646 (= e!48149 (contains!721 (toList!716 lt!33122) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17055 res!39038) b!73645))

(assert (= (and b!73645 res!39039) b!73646))

(declare-fun m!72249 () Bool)

(assert (=> d!17055 m!72249))

(declare-fun m!72251 () Bool)

(assert (=> d!17055 m!72251))

(declare-fun m!72253 () Bool)

(assert (=> d!17055 m!72253))

(declare-fun m!72255 () Bool)

(assert (=> d!17055 m!72255))

(declare-fun m!72257 () Bool)

(assert (=> b!73645 m!72257))

(declare-fun m!72259 () Bool)

(assert (=> b!73646 m!72259))

(assert (=> d!16847 d!17055))

(declare-fun d!17057 () Bool)

(declare-fun e!48150 () Bool)

(assert (=> d!17057 e!48150))

(declare-fun res!39040 () Bool)

(assert (=> d!17057 (=> (not res!39040) (not e!48150))))

(declare-fun lt!33126 () ListLongMap!1401)

(assert (=> d!17057 (= res!39040 (contains!720 lt!33126 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun lt!33127 () List!1474)

(assert (=> d!17057 (= lt!33126 (ListLongMap!1402 lt!33127))))

(declare-fun lt!33125 () Unit!2076)

(declare-fun lt!33124 () Unit!2076)

(assert (=> d!17057 (= lt!33125 lt!33124)))

(assert (=> d!17057 (= (getValueByKey!134 lt!33127 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17057 (= lt!33124 (lemmaContainsTupThenGetReturnValue!51 lt!33127 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17057 (= lt!33127 (insertStrictlySorted!54 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17057 (= (+!93 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) lt!33126)))

(declare-fun b!73647 () Bool)

(declare-fun res!39041 () Bool)

(assert (=> b!73647 (=> (not res!39041) (not e!48150))))

(assert (=> b!73647 (= res!39041 (= (getValueByKey!134 (toList!716 lt!33126) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!73648 () Bool)

(assert (=> b!73648 (= e!48150 (contains!721 (toList!716 lt!33126) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(assert (= (and d!17057 res!39040) b!73647))

(assert (= (and b!73647 res!39041) b!73648))

(declare-fun m!72261 () Bool)

(assert (=> d!17057 m!72261))

(declare-fun m!72263 () Bool)

(assert (=> d!17057 m!72263))

(declare-fun m!72265 () Bool)

(assert (=> d!17057 m!72265))

(declare-fun m!72267 () Bool)

(assert (=> d!17057 m!72267))

(declare-fun m!72269 () Bool)

(assert (=> b!73647 m!72269))

(declare-fun m!72271 () Bool)

(assert (=> b!73648 m!72271))

(assert (=> d!16847 d!17057))

(declare-fun d!17059 () Bool)

(declare-fun isEmpty!324 (List!1474) Bool)

(assert (=> d!17059 (= (isEmpty!322 lt!32614) (isEmpty!324 (toList!716 lt!32614)))))

(declare-fun bs!3171 () Bool)

(assert (= bs!3171 d!17059))

(declare-fun m!72273 () Bool)

(assert (=> bs!3171 m!72273))

(assert (=> b!72982 d!17059))

(assert (=> d!16875 d!16879))

(declare-fun d!17061 () Bool)

(assert (=> d!17061 (not (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!17061 true))

(declare-fun _$68!55 () Unit!2076)

(assert (=> d!17061 (= (choose!68 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470)) _$68!55)))

(declare-fun bs!3172 () Bool)

(assert (= bs!3172 d!17061))

(assert (=> bs!3172 m!71143))

(assert (=> bs!3172 m!71189))

(assert (=> d!16875 d!17061))

(declare-fun d!17063 () Bool)

(assert (=> d!17063 (= (inRange!0 (ite c!10859 (ite c!10862 (index!3052 lt!32760) (ite c!10863 (index!3051 lt!32782) (index!3054 lt!32782))) (ite c!10865 (index!3052 lt!32781) (ite c!10871 (index!3051 lt!32776) (index!3054 lt!32776)))) (mask!6179 newMap!16)) (and (bvsge (ite c!10859 (ite c!10862 (index!3052 lt!32760) (ite c!10863 (index!3051 lt!32782) (index!3054 lt!32782))) (ite c!10865 (index!3052 lt!32781) (ite c!10871 (index!3051 lt!32776) (index!3054 lt!32776)))) #b00000000000000000000000000000000) (bvslt (ite c!10859 (ite c!10862 (index!3052 lt!32760) (ite c!10863 (index!3051 lt!32782) (index!3054 lt!32782))) (ite c!10865 (index!3052 lt!32781) (ite c!10871 (index!3051 lt!32776) (index!3054 lt!32776)))) (bvadd (mask!6179 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6416 d!17063))

(declare-fun d!17065 () Bool)

(declare-fun e!48151 () Bool)

(assert (=> d!17065 e!48151))

(declare-fun res!39042 () Bool)

(assert (=> d!17065 (=> res!39042 e!48151)))

(declare-fun lt!33129 () Bool)

(assert (=> d!17065 (= res!39042 (not lt!33129))))

(declare-fun lt!33131 () Bool)

(assert (=> d!17065 (= lt!33129 lt!33131)))

(declare-fun lt!33130 () Unit!2076)

(declare-fun e!48152 () Unit!2076)

(assert (=> d!17065 (= lt!33130 e!48152)))

(declare-fun c!10977 () Bool)

(assert (=> d!17065 (= c!10977 lt!33131)))

(assert (=> d!17065 (= lt!33131 (containsKey!137 (toList!716 lt!32583) (_1!1071 lt!32485)))))

(assert (=> d!17065 (= (contains!720 lt!32583 (_1!1071 lt!32485)) lt!33129)))

(declare-fun b!73649 () Bool)

(declare-fun lt!33128 () Unit!2076)

(assert (=> b!73649 (= e!48152 lt!33128)))

(assert (=> b!73649 (= lt!33128 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32583) (_1!1071 lt!32485)))))

(assert (=> b!73649 (isDefined!86 (getValueByKey!134 (toList!716 lt!32583) (_1!1071 lt!32485)))))

(declare-fun b!73650 () Bool)

(declare-fun Unit!2108 () Unit!2076)

(assert (=> b!73650 (= e!48152 Unit!2108)))

(declare-fun b!73651 () Bool)

(assert (=> b!73651 (= e!48151 (isDefined!86 (getValueByKey!134 (toList!716 lt!32583) (_1!1071 lt!32485))))))

(assert (= (and d!17065 c!10977) b!73649))

(assert (= (and d!17065 (not c!10977)) b!73650))

(assert (= (and d!17065 (not res!39042)) b!73651))

(declare-fun m!72275 () Bool)

(assert (=> d!17065 m!72275))

(declare-fun m!72277 () Bool)

(assert (=> b!73649 m!72277))

(assert (=> b!73649 m!71331))

(assert (=> b!73649 m!71331))

(declare-fun m!72279 () Bool)

(assert (=> b!73649 m!72279))

(assert (=> b!73651 m!71331))

(assert (=> b!73651 m!71331))

(assert (=> b!73651 m!72279))

(assert (=> d!16845 d!17065))

(declare-fun b!73653 () Bool)

(declare-fun e!48153 () Option!140)

(declare-fun e!48154 () Option!140)

(assert (=> b!73653 (= e!48153 e!48154)))

(declare-fun c!10979 () Bool)

(assert (=> b!73653 (= c!10979 (and ((_ is Cons!1470) lt!32584) (not (= (_1!1071 (h!2057 lt!32584)) (_1!1071 lt!32485)))))))

(declare-fun b!73652 () Bool)

(assert (=> b!73652 (= e!48153 (Some!139 (_2!1071 (h!2057 lt!32584))))))

(declare-fun d!17067 () Bool)

(declare-fun c!10978 () Bool)

(assert (=> d!17067 (= c!10978 (and ((_ is Cons!1470) lt!32584) (= (_1!1071 (h!2057 lt!32584)) (_1!1071 lt!32485))))))

(assert (=> d!17067 (= (getValueByKey!134 lt!32584 (_1!1071 lt!32485)) e!48153)))

(declare-fun b!73654 () Bool)

(assert (=> b!73654 (= e!48154 (getValueByKey!134 (t!5023 lt!32584) (_1!1071 lt!32485)))))

(declare-fun b!73655 () Bool)

(assert (=> b!73655 (= e!48154 None!138)))

(assert (= (and d!17067 c!10978) b!73652))

(assert (= (and d!17067 (not c!10978)) b!73653))

(assert (= (and b!73653 c!10979) b!73654))

(assert (= (and b!73653 (not c!10979)) b!73655))

(declare-fun m!72281 () Bool)

(assert (=> b!73654 m!72281))

(assert (=> d!16845 d!17067))

(declare-fun d!17069 () Bool)

(assert (=> d!17069 (= (getValueByKey!134 lt!32584 (_1!1071 lt!32485)) (Some!139 (_2!1071 lt!32485)))))

(declare-fun lt!33132 () Unit!2076)

(assert (=> d!17069 (= lt!33132 (choose!419 lt!32584 (_1!1071 lt!32485) (_2!1071 lt!32485)))))

(declare-fun e!48155 () Bool)

(assert (=> d!17069 e!48155))

(declare-fun res!39043 () Bool)

(assert (=> d!17069 (=> (not res!39043) (not e!48155))))

(assert (=> d!17069 (= res!39043 (isStrictlySorted!279 lt!32584))))

(assert (=> d!17069 (= (lemmaContainsTupThenGetReturnValue!51 lt!32584 (_1!1071 lt!32485) (_2!1071 lt!32485)) lt!33132)))

(declare-fun b!73656 () Bool)

(declare-fun res!39044 () Bool)

(assert (=> b!73656 (=> (not res!39044) (not e!48155))))

(assert (=> b!73656 (= res!39044 (containsKey!137 lt!32584 (_1!1071 lt!32485)))))

(declare-fun b!73657 () Bool)

(assert (=> b!73657 (= e!48155 (contains!721 lt!32584 (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(assert (= (and d!17069 res!39043) b!73656))

(assert (= (and b!73656 res!39044) b!73657))

(assert (=> d!17069 m!71325))

(declare-fun m!72283 () Bool)

(assert (=> d!17069 m!72283))

(declare-fun m!72285 () Bool)

(assert (=> d!17069 m!72285))

(declare-fun m!72287 () Bool)

(assert (=> b!73656 m!72287))

(declare-fun m!72289 () Bool)

(assert (=> b!73657 m!72289))

(assert (=> d!16845 d!17069))

(declare-fun b!73658 () Bool)

(declare-fun e!48160 () List!1474)

(assert (=> b!73658 (= e!48160 (insertStrictlySorted!54 (t!5023 (toList!716 lt!32489)) (_1!1071 lt!32485) (_2!1071 lt!32485)))))

(declare-fun b!73659 () Bool)

(declare-fun c!10981 () Bool)

(declare-fun c!10980 () Bool)

(assert (=> b!73659 (= e!48160 (ite c!10981 (t!5023 (toList!716 lt!32489)) (ite c!10980 (Cons!1470 (h!2057 (toList!716 lt!32489)) (t!5023 (toList!716 lt!32489))) Nil!1471)))))

(declare-fun bm!6487 () Bool)

(declare-fun call!6491 () List!1474)

(declare-fun call!6492 () List!1474)

(assert (=> bm!6487 (= call!6491 call!6492)))

(declare-fun b!73660 () Bool)

(declare-fun e!48159 () Bool)

(declare-fun lt!33133 () List!1474)

(assert (=> b!73660 (= e!48159 (contains!721 lt!33133 (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun b!73661 () Bool)

(declare-fun e!48156 () List!1474)

(assert (=> b!73661 (= e!48156 call!6491)))

(declare-fun b!73662 () Bool)

(declare-fun e!48157 () List!1474)

(declare-fun e!48158 () List!1474)

(assert (=> b!73662 (= e!48157 e!48158)))

(assert (=> b!73662 (= c!10981 (and ((_ is Cons!1470) (toList!716 lt!32489)) (= (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 lt!32485))))))

(declare-fun d!17071 () Bool)

(assert (=> d!17071 e!48159))

(declare-fun res!39045 () Bool)

(assert (=> d!17071 (=> (not res!39045) (not e!48159))))

(assert (=> d!17071 (= res!39045 (isStrictlySorted!279 lt!33133))))

(assert (=> d!17071 (= lt!33133 e!48157)))

(declare-fun c!10982 () Bool)

(assert (=> d!17071 (= c!10982 (and ((_ is Cons!1470) (toList!716 lt!32489)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 lt!32485))))))

(assert (=> d!17071 (isStrictlySorted!279 (toList!716 lt!32489))))

(assert (=> d!17071 (= (insertStrictlySorted!54 (toList!716 lt!32489) (_1!1071 lt!32485) (_2!1071 lt!32485)) lt!33133)))

(declare-fun bm!6488 () Bool)

(declare-fun call!6490 () List!1474)

(assert (=> bm!6488 (= call!6490 ($colon$colon!65 e!48160 (ite c!10982 (h!2057 (toList!716 lt!32489)) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485)))))))

(declare-fun c!10983 () Bool)

(assert (=> bm!6488 (= c!10983 c!10982)))

(declare-fun b!73663 () Bool)

(assert (=> b!73663 (= e!48158 call!6492)))

(declare-fun b!73664 () Bool)

(assert (=> b!73664 (= e!48156 call!6491)))

(declare-fun b!73665 () Bool)

(assert (=> b!73665 (= c!10980 (and ((_ is Cons!1470) (toList!716 lt!32489)) (bvsgt (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 lt!32485))))))

(assert (=> b!73665 (= e!48158 e!48156)))

(declare-fun b!73666 () Bool)

(assert (=> b!73666 (= e!48157 call!6490)))

(declare-fun bm!6489 () Bool)

(assert (=> bm!6489 (= call!6492 call!6490)))

(declare-fun b!73667 () Bool)

(declare-fun res!39046 () Bool)

(assert (=> b!73667 (=> (not res!39046) (not e!48159))))

(assert (=> b!73667 (= res!39046 (containsKey!137 lt!33133 (_1!1071 lt!32485)))))

(assert (= (and d!17071 c!10982) b!73666))

(assert (= (and d!17071 (not c!10982)) b!73662))

(assert (= (and b!73662 c!10981) b!73663))

(assert (= (and b!73662 (not c!10981)) b!73665))

(assert (= (and b!73665 c!10980) b!73661))

(assert (= (and b!73665 (not c!10980)) b!73664))

(assert (= (or b!73661 b!73664) bm!6487))

(assert (= (or b!73663 bm!6487) bm!6489))

(assert (= (or b!73666 bm!6489) bm!6488))

(assert (= (and bm!6488 c!10983) b!73658))

(assert (= (and bm!6488 (not c!10983)) b!73659))

(assert (= (and d!17071 res!39045) b!73667))

(assert (= (and b!73667 res!39046) b!73660))

(declare-fun m!72291 () Bool)

(assert (=> b!73658 m!72291))

(declare-fun m!72293 () Bool)

(assert (=> b!73660 m!72293))

(declare-fun m!72295 () Bool)

(assert (=> d!17071 m!72295))

(assert (=> d!17071 m!71799))

(declare-fun m!72297 () Bool)

(assert (=> bm!6488 m!72297))

(declare-fun m!72299 () Bool)

(assert (=> b!73667 m!72299))

(assert (=> d!16845 d!17071))

(assert (=> b!73189 d!17001))

(declare-fun d!17073 () Bool)

(declare-fun res!39047 () Bool)

(declare-fun e!48161 () Bool)

(assert (=> d!17073 (=> (not res!39047) (not e!48161))))

(assert (=> d!17073 (= res!39047 (simpleValid!51 (_2!1072 lt!32783)))))

(assert (=> d!17073 (= (valid!307 (_2!1072 lt!32783)) e!48161)))

(declare-fun b!73668 () Bool)

(declare-fun res!39048 () Bool)

(assert (=> b!73668 (=> (not res!39048) (not e!48161))))

(assert (=> b!73668 (= res!39048 (= (arrayCountValidKeys!0 (_keys!3864 (_2!1072 lt!32783)) #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))) (_size!396 (_2!1072 lt!32783))))))

(declare-fun b!73669 () Bool)

(declare-fun res!39049 () Bool)

(assert (=> b!73669 (=> (not res!39049) (not e!48161))))

(assert (=> b!73669 (= res!39049 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3864 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783))))))

(declare-fun b!73670 () Bool)

(assert (=> b!73670 (= e!48161 (arrayNoDuplicates!0 (_keys!3864 (_2!1072 lt!32783)) #b00000000000000000000000000000000 Nil!1470))))

(assert (= (and d!17073 res!39047) b!73668))

(assert (= (and b!73668 res!39048) b!73669))

(assert (= (and b!73669 res!39049) b!73670))

(declare-fun m!72301 () Bool)

(assert (=> d!17073 m!72301))

(declare-fun m!72303 () Bool)

(assert (=> b!73668 m!72303))

(declare-fun m!72305 () Bool)

(assert (=> b!73669 m!72305))

(declare-fun m!72307 () Bool)

(assert (=> b!73670 m!72307))

(assert (=> d!16887 d!17073))

(assert (=> d!16887 d!16873))

(assert (=> bm!6346 d!16855))

(declare-fun d!17075 () Bool)

(assert (=> d!17075 (= (apply!75 lt!32666 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1153 (getValueByKey!134 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3173 () Bool)

(assert (= bs!3173 d!17075))

(assert (=> bs!3173 m!72181))

(assert (=> bs!3173 m!72181))

(declare-fun m!72309 () Bool)

(assert (=> bs!3173 m!72309))

(assert (=> b!73051 d!17075))

(declare-fun d!17077 () Bool)

(declare-fun e!48162 () Bool)

(assert (=> d!17077 e!48162))

(declare-fun res!39050 () Bool)

(assert (=> d!17077 (=> res!39050 e!48162)))

(declare-fun lt!33135 () Bool)

(assert (=> d!17077 (= res!39050 (not lt!33135))))

(declare-fun lt!33137 () Bool)

(assert (=> d!17077 (= lt!33135 lt!33137)))

(declare-fun lt!33136 () Unit!2076)

(declare-fun e!48163 () Unit!2076)

(assert (=> d!17077 (= lt!33136 e!48163)))

(declare-fun c!10984 () Bool)

(assert (=> d!17077 (= c!10984 lt!33137)))

(assert (=> d!17077 (= lt!33137 (containsKey!137 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!17077 (= (contains!720 lt!32614 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!33135)))

(declare-fun b!73671 () Bool)

(declare-fun lt!33134 () Unit!2076)

(assert (=> b!73671 (= e!48163 lt!33134)))

(assert (=> b!73671 (= lt!33134 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73671 (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73672 () Bool)

(declare-fun Unit!2109 () Unit!2076)

(assert (=> b!73672 (= e!48163 Unit!2109)))

(declare-fun b!73673 () Bool)

(assert (=> b!73673 (= e!48162 (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!17077 c!10984) b!73671))

(assert (= (and d!17077 (not c!10984)) b!73672))

(assert (= (and d!17077 (not res!39050)) b!73673))

(assert (=> d!17077 m!71385))

(declare-fun m!72311 () Bool)

(assert (=> d!17077 m!72311))

(assert (=> b!73671 m!71385))

(declare-fun m!72313 () Bool)

(assert (=> b!73671 m!72313))

(assert (=> b!73671 m!71385))

(assert (=> b!73671 m!71757))

(assert (=> b!73671 m!71757))

(declare-fun m!72315 () Bool)

(assert (=> b!73671 m!72315))

(assert (=> b!73673 m!71385))

(assert (=> b!73673 m!71757))

(assert (=> b!73673 m!71757))

(assert (=> b!73673 m!72315))

(assert (=> b!72978 d!17077))

(declare-fun b!73675 () Bool)

(declare-fun e!48164 () Option!140)

(declare-fun e!48165 () Option!140)

(assert (=> b!73675 (= e!48164 e!48165)))

(declare-fun c!10986 () Bool)

(assert (=> b!73675 (= c!10986 (and ((_ is Cons!1470) (toList!716 lt!32594)) (not (= (_1!1071 (h!2057 (toList!716 lt!32594))) (_1!1071 lt!32485)))))))

(declare-fun b!73674 () Bool)

(assert (=> b!73674 (= e!48164 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32594)))))))

(declare-fun d!17079 () Bool)

(declare-fun c!10985 () Bool)

(assert (=> d!17079 (= c!10985 (and ((_ is Cons!1470) (toList!716 lt!32594)) (= (_1!1071 (h!2057 (toList!716 lt!32594))) (_1!1071 lt!32485))))))

(assert (=> d!17079 (= (getValueByKey!134 (toList!716 lt!32594) (_1!1071 lt!32485)) e!48164)))

(declare-fun b!73676 () Bool)

(assert (=> b!73676 (= e!48165 (getValueByKey!134 (t!5023 (toList!716 lt!32594)) (_1!1071 lt!32485)))))

(declare-fun b!73677 () Bool)

(assert (=> b!73677 (= e!48165 None!138)))

(assert (= (and d!17079 c!10985) b!73674))

(assert (= (and d!17079 (not c!10985)) b!73675))

(assert (= (and b!73675 c!10986) b!73676))

(assert (= (and b!73675 (not c!10986)) b!73677))

(declare-fun m!72317 () Bool)

(assert (=> b!73676 m!72317))

(assert (=> b!72947 d!17079))

(declare-fun b!73679 () Bool)

(declare-fun e!48166 () Option!140)

(declare-fun e!48167 () Option!140)

(assert (=> b!73679 (= e!48166 e!48167)))

(declare-fun c!10988 () Bool)

(assert (=> b!73679 (= c!10988 (and ((_ is Cons!1470) (toList!716 lt!32579)) (not (= (_1!1071 (h!2057 (toList!716 lt!32579))) (_1!1071 lt!32492)))))))

(declare-fun b!73678 () Bool)

(assert (=> b!73678 (= e!48166 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32579)))))))

(declare-fun d!17081 () Bool)

(declare-fun c!10987 () Bool)

(assert (=> d!17081 (= c!10987 (and ((_ is Cons!1470) (toList!716 lt!32579)) (= (_1!1071 (h!2057 (toList!716 lt!32579))) (_1!1071 lt!32492))))))

(assert (=> d!17081 (= (getValueByKey!134 (toList!716 lt!32579) (_1!1071 lt!32492)) e!48166)))

(declare-fun b!73680 () Bool)

(assert (=> b!73680 (= e!48167 (getValueByKey!134 (t!5023 (toList!716 lt!32579)) (_1!1071 lt!32492)))))

(declare-fun b!73681 () Bool)

(assert (=> b!73681 (= e!48167 None!138)))

(assert (= (and d!17081 c!10987) b!73678))

(assert (= (and d!17081 (not c!10987)) b!73679))

(assert (= (and b!73679 c!10988) b!73680))

(assert (= (and b!73679 (not c!10988)) b!73681))

(declare-fun m!72319 () Bool)

(assert (=> b!73680 m!72319))

(assert (=> b!72941 d!17081))

(declare-fun b!73682 () Bool)

(declare-fun e!48170 () Bool)

(declare-fun e!48171 () Bool)

(assert (=> b!73682 (= e!48170 e!48171)))

(declare-fun res!39052 () Bool)

(assert (=> b!73682 (=> (not res!39052) (not e!48171))))

(declare-fun e!48169 () Bool)

(assert (=> b!73682 (= res!39052 (not e!48169))))

(declare-fun res!39053 () Bool)

(assert (=> b!73682 (=> (not res!39053) (not e!48169))))

(assert (=> b!73682 (= res!39053 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun c!10989 () Bool)

(declare-fun call!6493 () Bool)

(declare-fun bm!6490 () Bool)

(assert (=> bm!6490 (= call!6493 (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10989 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470))))))

(declare-fun b!73683 () Bool)

(declare-fun e!48168 () Bool)

(assert (=> b!73683 (= e!48171 e!48168)))

(assert (=> b!73683 (= c!10989 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!17083 () Bool)

(declare-fun res!39051 () Bool)

(assert (=> d!17083 (=> res!39051 e!48170)))

(assert (=> d!17083 (= res!39051 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!17083 (= (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)) e!48170)))

(declare-fun b!73684 () Bool)

(assert (=> b!73684 (= e!48168 call!6493)))

(declare-fun b!73685 () Bool)

(assert (=> b!73685 (= e!48168 call!6493)))

(declare-fun b!73686 () Bool)

(assert (=> b!73686 (= e!48169 (contains!722 (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!17083 (not res!39051)) b!73682))

(assert (= (and b!73682 res!39053) b!73686))

(assert (= (and b!73682 res!39052) b!73683))

(assert (= (and b!73683 c!10989) b!73685))

(assert (= (and b!73683 (not c!10989)) b!73684))

(assert (= (or b!73685 b!73684) bm!6490))

(declare-fun m!72321 () Bool)

(assert (=> b!73682 m!72321))

(assert (=> b!73682 m!72321))

(declare-fun m!72323 () Bool)

(assert (=> b!73682 m!72323))

(assert (=> bm!6490 m!72321))

(declare-fun m!72325 () Bool)

(assert (=> bm!6490 m!72325))

(assert (=> b!73683 m!72321))

(assert (=> b!73683 m!72321))

(assert (=> b!73683 m!72323))

(assert (=> b!73686 m!72321))

(assert (=> b!73686 m!72321))

(declare-fun m!72327 () Bool)

(assert (=> b!73686 m!72327))

(assert (=> bm!6355 d!17083))

(assert (=> d!16869 d!17001))

(declare-fun d!17085 () Bool)

(declare-fun e!48172 () Bool)

(assert (=> d!17085 e!48172))

(declare-fun res!39054 () Bool)

(assert (=> d!17085 (=> res!39054 e!48172)))

(declare-fun lt!33139 () Bool)

(assert (=> d!17085 (= res!39054 (not lt!33139))))

(declare-fun lt!33141 () Bool)

(assert (=> d!17085 (= lt!33139 lt!33141)))

(declare-fun lt!33140 () Unit!2076)

(declare-fun e!48173 () Unit!2076)

(assert (=> d!17085 (= lt!33140 e!48173)))

(declare-fun c!10990 () Bool)

(assert (=> d!17085 (= c!10990 lt!33141)))

(assert (=> d!17085 (= lt!33141 (containsKey!137 (toList!716 lt!32590) (_1!1071 lt!32492)))))

(assert (=> d!17085 (= (contains!720 lt!32590 (_1!1071 lt!32492)) lt!33139)))

(declare-fun b!73687 () Bool)

(declare-fun lt!33138 () Unit!2076)

(assert (=> b!73687 (= e!48173 lt!33138)))

(assert (=> b!73687 (= lt!33138 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32590) (_1!1071 lt!32492)))))

(assert (=> b!73687 (isDefined!86 (getValueByKey!134 (toList!716 lt!32590) (_1!1071 lt!32492)))))

(declare-fun b!73688 () Bool)

(declare-fun Unit!2110 () Unit!2076)

(assert (=> b!73688 (= e!48173 Unit!2110)))

(declare-fun b!73689 () Bool)

(assert (=> b!73689 (= e!48172 (isDefined!86 (getValueByKey!134 (toList!716 lt!32590) (_1!1071 lt!32492))))))

(assert (= (and d!17085 c!10990) b!73687))

(assert (= (and d!17085 (not c!10990)) b!73688))

(assert (= (and d!17085 (not res!39054)) b!73689))

(declare-fun m!72329 () Bool)

(assert (=> d!17085 m!72329))

(declare-fun m!72331 () Bool)

(assert (=> b!73687 m!72331))

(assert (=> b!73687 m!71353))

(assert (=> b!73687 m!71353))

(declare-fun m!72333 () Bool)

(assert (=> b!73687 m!72333))

(assert (=> b!73689 m!71353))

(assert (=> b!73689 m!71353))

(assert (=> b!73689 m!72333))

(assert (=> d!16849 d!17085))

(declare-fun b!73691 () Bool)

(declare-fun e!48174 () Option!140)

(declare-fun e!48175 () Option!140)

(assert (=> b!73691 (= e!48174 e!48175)))

(declare-fun c!10992 () Bool)

(assert (=> b!73691 (= c!10992 (and ((_ is Cons!1470) lt!32591) (not (= (_1!1071 (h!2057 lt!32591)) (_1!1071 lt!32492)))))))

(declare-fun b!73690 () Bool)

(assert (=> b!73690 (= e!48174 (Some!139 (_2!1071 (h!2057 lt!32591))))))

(declare-fun d!17087 () Bool)

(declare-fun c!10991 () Bool)

(assert (=> d!17087 (= c!10991 (and ((_ is Cons!1470) lt!32591) (= (_1!1071 (h!2057 lt!32591)) (_1!1071 lt!32492))))))

(assert (=> d!17087 (= (getValueByKey!134 lt!32591 (_1!1071 lt!32492)) e!48174)))

(declare-fun b!73692 () Bool)

(assert (=> b!73692 (= e!48175 (getValueByKey!134 (t!5023 lt!32591) (_1!1071 lt!32492)))))

(declare-fun b!73693 () Bool)

(assert (=> b!73693 (= e!48175 None!138)))

(assert (= (and d!17087 c!10991) b!73690))

(assert (= (and d!17087 (not c!10991)) b!73691))

(assert (= (and b!73691 c!10992) b!73692))

(assert (= (and b!73691 (not c!10992)) b!73693))

(declare-fun m!72335 () Bool)

(assert (=> b!73692 m!72335))

(assert (=> d!16849 d!17087))

(declare-fun d!17089 () Bool)

(assert (=> d!17089 (= (getValueByKey!134 lt!32591 (_1!1071 lt!32492)) (Some!139 (_2!1071 lt!32492)))))

(declare-fun lt!33142 () Unit!2076)

(assert (=> d!17089 (= lt!33142 (choose!419 lt!32591 (_1!1071 lt!32492) (_2!1071 lt!32492)))))

(declare-fun e!48176 () Bool)

(assert (=> d!17089 e!48176))

(declare-fun res!39055 () Bool)

(assert (=> d!17089 (=> (not res!39055) (not e!48176))))

(assert (=> d!17089 (= res!39055 (isStrictlySorted!279 lt!32591))))

(assert (=> d!17089 (= (lemmaContainsTupThenGetReturnValue!51 lt!32591 (_1!1071 lt!32492) (_2!1071 lt!32492)) lt!33142)))

(declare-fun b!73694 () Bool)

(declare-fun res!39056 () Bool)

(assert (=> b!73694 (=> (not res!39056) (not e!48176))))

(assert (=> b!73694 (= res!39056 (containsKey!137 lt!32591 (_1!1071 lt!32492)))))

(declare-fun b!73695 () Bool)

(assert (=> b!73695 (= e!48176 (contains!721 lt!32591 (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(assert (= (and d!17089 res!39055) b!73694))

(assert (= (and b!73694 res!39056) b!73695))

(assert (=> d!17089 m!71347))

(declare-fun m!72337 () Bool)

(assert (=> d!17089 m!72337))

(declare-fun m!72339 () Bool)

(assert (=> d!17089 m!72339))

(declare-fun m!72341 () Bool)

(assert (=> b!73694 m!72341))

(declare-fun m!72343 () Bool)

(assert (=> b!73695 m!72343))

(assert (=> d!16849 d!17089))

(declare-fun b!73696 () Bool)

(declare-fun e!48181 () List!1474)

(assert (=> b!73696 (= e!48181 (insertStrictlySorted!54 (t!5023 (toList!716 (+!93 lt!32489 lt!32485))) (_1!1071 lt!32492) (_2!1071 lt!32492)))))

(declare-fun c!10993 () Bool)

(declare-fun b!73697 () Bool)

(declare-fun c!10994 () Bool)

(assert (=> b!73697 (= e!48181 (ite c!10994 (t!5023 (toList!716 (+!93 lt!32489 lt!32485))) (ite c!10993 (Cons!1470 (h!2057 (toList!716 (+!93 lt!32489 lt!32485))) (t!5023 (toList!716 (+!93 lt!32489 lt!32485)))) Nil!1471)))))

(declare-fun bm!6491 () Bool)

(declare-fun call!6495 () List!1474)

(declare-fun call!6496 () List!1474)

(assert (=> bm!6491 (= call!6495 call!6496)))

(declare-fun b!73698 () Bool)

(declare-fun e!48180 () Bool)

(declare-fun lt!33143 () List!1474)

(assert (=> b!73698 (= e!48180 (contains!721 lt!33143 (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun b!73699 () Bool)

(declare-fun e!48177 () List!1474)

(assert (=> b!73699 (= e!48177 call!6495)))

(declare-fun b!73700 () Bool)

(declare-fun e!48178 () List!1474)

(declare-fun e!48179 () List!1474)

(assert (=> b!73700 (= e!48178 e!48179)))

(assert (=> b!73700 (= c!10994 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 lt!32485))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 lt!32485)))) (_1!1071 lt!32492))))))

(declare-fun d!17091 () Bool)

(assert (=> d!17091 e!48180))

(declare-fun res!39057 () Bool)

(assert (=> d!17091 (=> (not res!39057) (not e!48180))))

(assert (=> d!17091 (= res!39057 (isStrictlySorted!279 lt!33143))))

(assert (=> d!17091 (= lt!33143 e!48178)))

(declare-fun c!10995 () Bool)

(assert (=> d!17091 (= c!10995 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 lt!32485))) (bvslt (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 lt!32485)))) (_1!1071 lt!32492))))))

(assert (=> d!17091 (isStrictlySorted!279 (toList!716 (+!93 lt!32489 lt!32485)))))

(assert (=> d!17091 (= (insertStrictlySorted!54 (toList!716 (+!93 lt!32489 lt!32485)) (_1!1071 lt!32492) (_2!1071 lt!32492)) lt!33143)))

(declare-fun call!6494 () List!1474)

(declare-fun bm!6492 () Bool)

(assert (=> bm!6492 (= call!6494 ($colon$colon!65 e!48181 (ite c!10995 (h!2057 (toList!716 (+!93 lt!32489 lt!32485))) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492)))))))

(declare-fun c!10996 () Bool)

(assert (=> bm!6492 (= c!10996 c!10995)))

(declare-fun b!73701 () Bool)

(assert (=> b!73701 (= e!48179 call!6496)))

(declare-fun b!73702 () Bool)

(assert (=> b!73702 (= e!48177 call!6495)))

(declare-fun b!73703 () Bool)

(assert (=> b!73703 (= c!10993 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 lt!32485))) (bvsgt (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 lt!32485)))) (_1!1071 lt!32492))))))

(assert (=> b!73703 (= e!48179 e!48177)))

(declare-fun b!73704 () Bool)

(assert (=> b!73704 (= e!48178 call!6494)))

(declare-fun bm!6493 () Bool)

(assert (=> bm!6493 (= call!6496 call!6494)))

(declare-fun b!73705 () Bool)

(declare-fun res!39058 () Bool)

(assert (=> b!73705 (=> (not res!39058) (not e!48180))))

(assert (=> b!73705 (= res!39058 (containsKey!137 lt!33143 (_1!1071 lt!32492)))))

(assert (= (and d!17091 c!10995) b!73704))

(assert (= (and d!17091 (not c!10995)) b!73700))

(assert (= (and b!73700 c!10994) b!73701))

(assert (= (and b!73700 (not c!10994)) b!73703))

(assert (= (and b!73703 c!10993) b!73699))

(assert (= (and b!73703 (not c!10993)) b!73702))

(assert (= (or b!73699 b!73702) bm!6491))

(assert (= (or b!73701 bm!6491) bm!6493))

(assert (= (or b!73704 bm!6493) bm!6492))

(assert (= (and bm!6492 c!10996) b!73696))

(assert (= (and bm!6492 (not c!10996)) b!73697))

(assert (= (and d!17091 res!39057) b!73705))

(assert (= (and b!73705 res!39058) b!73698))

(declare-fun m!72345 () Bool)

(assert (=> b!73696 m!72345))

(declare-fun m!72347 () Bool)

(assert (=> b!73698 m!72347))

(declare-fun m!72349 () Bool)

(assert (=> d!17091 m!72349))

(declare-fun m!72351 () Bool)

(assert (=> d!17091 m!72351))

(declare-fun m!72353 () Bool)

(assert (=> bm!6492 m!72353))

(declare-fun m!72355 () Bool)

(assert (=> b!73705 m!72355))

(assert (=> d!16849 d!17091))

(assert (=> b!72984 d!17047))

(assert (=> bm!6426 d!16869))

(declare-fun condMapEmpty!3183 () Bool)

(declare-fun mapDefault!3183 () ValueCell!893)

(assert (=> mapNonEmpty!3182 (= condMapEmpty!3183 (= mapRest!3182 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3183)))))

(declare-fun e!48183 () Bool)

(declare-fun mapRes!3183 () Bool)

(assert (=> mapNonEmpty!3182 (= tp!8546 (and e!48183 mapRes!3183))))

(declare-fun mapIsEmpty!3183 () Bool)

(assert (=> mapIsEmpty!3183 mapRes!3183))

(declare-fun b!73706 () Bool)

(declare-fun e!48182 () Bool)

(assert (=> b!73706 (= e!48182 tp_is_empty!2473)))

(declare-fun mapNonEmpty!3183 () Bool)

(declare-fun tp!8547 () Bool)

(assert (=> mapNonEmpty!3183 (= mapRes!3183 (and tp!8547 e!48182))))

(declare-fun mapKey!3183 () (_ BitVec 32))

(declare-fun mapRest!3183 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapValue!3183 () ValueCell!893)

(assert (=> mapNonEmpty!3183 (= mapRest!3182 (store mapRest!3183 mapKey!3183 mapValue!3183))))

(declare-fun b!73707 () Bool)

(assert (=> b!73707 (= e!48183 tp_is_empty!2473)))

(assert (= (and mapNonEmpty!3182 condMapEmpty!3183) mapIsEmpty!3183))

(assert (= (and mapNonEmpty!3182 (not condMapEmpty!3183)) mapNonEmpty!3183))

(assert (= (and mapNonEmpty!3183 ((_ is ValueCellFull!893) mapValue!3183)) b!73706))

(assert (= (and mapNonEmpty!3182 ((_ is ValueCellFull!893) mapDefault!3183)) b!73707))

(declare-fun m!72357 () Bool)

(assert (=> mapNonEmpty!3183 m!72357))

(declare-fun condMapEmpty!3184 () Bool)

(declare-fun mapDefault!3184 () ValueCell!893)

(assert (=> mapNonEmpty!3181 (= condMapEmpty!3184 (= mapRest!3181 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3184)))))

(declare-fun e!48185 () Bool)

(declare-fun mapRes!3184 () Bool)

(assert (=> mapNonEmpty!3181 (= tp!8545 (and e!48185 mapRes!3184))))

(declare-fun mapIsEmpty!3184 () Bool)

(assert (=> mapIsEmpty!3184 mapRes!3184))

(declare-fun b!73708 () Bool)

(declare-fun e!48184 () Bool)

(assert (=> b!73708 (= e!48184 tp_is_empty!2473)))

(declare-fun mapNonEmpty!3184 () Bool)

(declare-fun tp!8548 () Bool)

(assert (=> mapNonEmpty!3184 (= mapRes!3184 (and tp!8548 e!48184))))

(declare-fun mapRest!3184 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapKey!3184 () (_ BitVec 32))

(declare-fun mapValue!3184 () ValueCell!893)

(assert (=> mapNonEmpty!3184 (= mapRest!3181 (store mapRest!3184 mapKey!3184 mapValue!3184))))

(declare-fun b!73709 () Bool)

(assert (=> b!73709 (= e!48185 tp_is_empty!2473)))

(assert (= (and mapNonEmpty!3181 condMapEmpty!3184) mapIsEmpty!3184))

(assert (= (and mapNonEmpty!3181 (not condMapEmpty!3184)) mapNonEmpty!3184))

(assert (= (and mapNonEmpty!3184 ((_ is ValueCellFull!893) mapValue!3184)) b!73708))

(assert (= (and mapNonEmpty!3181 ((_ is ValueCellFull!893) mapDefault!3184)) b!73709))

(declare-fun m!72359 () Bool)

(assert (=> mapNonEmpty!3184 m!72359))

(declare-fun b_lambda!3309 () Bool)

(assert (= b_lambda!3305 (or (and b!72793 b_free!2113) (and b!72792 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))) b_lambda!3309)))

(declare-fun b_lambda!3311 () Bool)

(assert (= b_lambda!3303 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3311)))

(declare-fun b_lambda!3313 () Bool)

(assert (= b_lambda!3307 (or (and b!72793 b_free!2113) (and b!72792 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))) b_lambda!3313)))

(declare-fun b_lambda!3315 () Bool)

(assert (= b_lambda!3301 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3315)))

(declare-fun b_lambda!3317 () Bool)

(assert (= b_lambda!3299 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3317)))

(check-sat (not b!73443) (not b!73692) (not b!73667) (not b!73548) (not b!73375) (not b!73588) (not d!16963) (not b!73656) (not bm!6482) (not b!73276) (not bm!6475) (not b!73648) (not b!73705) (not b!73370) (not d!16999) (not b!73647) (not b_lambda!3317) (not d!17061) (not bm!6488) (not b!73696) (not b!73649) (not d!17055) (not d!16915) (not b!73698) (not b!73359) (not b!73346) (not b!73630) (not d!16941) (not b!73528) (not b!73616) (not b_lambda!3313) (not b_lambda!3285) (not b!73425) (not d!16955) (not b!73651) (not b!73326) (not bm!6447) (not b!73468) (not b!73694) (not d!17069) (not b!73637) (not b!73609) (not d!17001) (not b!73579) (not b!73518) (not d!17053) (not b!73241) (not d!16985) (not d!16899) (not b!73633) (not d!16935) (not b!73660) (not b!73670) (not b!73610) (not d!17025) (not d!16911) (not b!73654) (not b!73417) (not b!73523) (not d!17059) (not b!73372) (not b!73466) (not bm!6439) (not b!73240) (not b!73527) (not b!73338) (not b!73536) (not b!73671) (not d!16937) (not d!16981) (not d!16909) (not b!73361) (not b!73543) (not b!73529) (not d!17073) (not d!17019) (not b!73564) (not b!73272) (not d!16961) (not d!16957) (not b_lambda!3297) (not d!16951) (not d!17049) (not bm!6452) (not b!73285) (not b!73668) (not b!73631) (not b!73387) (not b!73458) (not b!73581) (not b!73627) (not d!16967) (not d!17077) (not b!73389) (not d!17085) (not b!73657) (not b!73617) (not bm!6461) (not b!73357) (not d!16925) (not b!73426) (not b!73436) (not b!73522) (not b!73427) (not b!73363) (not d!16965) (not b!73676) (not b!73447) (not b!73553) (not d!17023) (not bm!6486) (not b!73526) (not bm!6473) tp_is_empty!2473 (not b!73470) (not b!73622) (not b!73383) (not b!73362) (not b!73352) (not bm!6481) (not b!73339) (not d!17071) (not b!73279) (not bm!6445) (not d!16969) (not d!17029) b_and!4521 (not b!73530) (not b!73535) (not bm!6462) (not d!16903) (not d!17065) (not d!17031) (not b!73474) (not b!73565) (not b!73603) (not d!16995) (not b!73332) (not b!73418) (not b!73415) (not b!73600) (not d!17027) (not bm!6474) (not d!17057) (not bm!6444) (not b_next!2113) (not b_lambda!3311) (not d!16997) (not d!16921) (not bm!6480) (not bm!6476) (not b!73695) (not d!17035) (not d!16993) (not b!73511) (not d!16895) (not b!73605) (not d!16973) (not d!16929) (not b!73683) (not b!73585) (not b!73602) (not b!73316) (not bm!6455) (not b_lambda!3295) (not d!16893) (not b!73606) (not b!73309) (not bm!6435) (not b!73640) (not b!73350) (not b!73669) (not d!17047) (not b!73420) (not b!73373) (not b_lambda!3293) (not b!73638) (not b!73423) (not b!73635) (not b!73386) (not b!73243) (not b!73343) (not d!16949) (not mapNonEmpty!3183) (not d!17003) (not d!16983) (not d!16943) (not b!73469) (not d!16971) (not d!16977) (not d!17051) (not d!17037) (not b!73689) (not d!16945) (not bm!6463) (not bm!6457) (not b!73351) (not b!73333) (not b!73645) (not b!73658) (not b!73429) (not b!73583) (not b!73274) (not b!73634) (not b!73369) (not d!17009) (not b!73455) (not b!73619) (not mapNonEmpty!3184) (not b!73330) (not b!73644) (not bm!6453) (not b!73381) (not b!73286) (not d!16989) (not b!73471) (not d!17091) (not b!73356) (not b!73686) (not b!73577) (not bm!6485) b_and!4523 (not b!73456) (not b_lambda!3315) (not b!73576) (not b!73450) (not bm!6492) (not b!73680) (not b!73382) (not b!73515) (not b!73368) (not b!73454) (not d!17075) (not b_lambda!3309) (not bm!6446) (not d!16979) (not b!73547) (not b!73595) (not b!73549) (not d!16931) (not b!73646) (not b!73307) (not d!16927) (not d!17015) (not d!16905) (not d!16933) (not b!73642) (not b!73540) (not d!17089) (not b!73620) (not b!73472) (not d!17011) (not b!73673) (not b!73687) (not d!16913) (not d!16991) (not b!73682) (not b!73442) (not b!73378) (not d!17021) (not b!73604) (not d!16975) (not d!17039) (not b!73608) (not b!73360) (not b!73459) (not d!16889) (not b!73643) (not b!73584) (not d!17045) (not b!73641) (not d!16891) (not d!16987) (not bm!6490) (not b!73257) (not b!73475) (not bm!6440) (not b!73437) (not b_next!2115))
(check-sat b_and!4521 b_and!4523 (not b_next!2113) (not b_next!2115))
(get-model)

(declare-fun d!17093 () Bool)

(declare-fun e!48186 () Bool)

(assert (=> d!17093 e!48186))

(declare-fun res!39059 () Bool)

(assert (=> d!17093 (=> res!39059 e!48186)))

(declare-fun lt!33145 () Bool)

(assert (=> d!17093 (= res!39059 (not lt!33145))))

(declare-fun lt!33147 () Bool)

(assert (=> d!17093 (= lt!33145 lt!33147)))

(declare-fun lt!33146 () Unit!2076)

(declare-fun e!48187 () Unit!2076)

(assert (=> d!17093 (= lt!33146 e!48187)))

(declare-fun c!10997 () Bool)

(assert (=> d!17093 (= c!10997 lt!33147)))

(assert (=> d!17093 (= lt!33147 (containsKey!137 (toList!716 lt!32847) (_1!1071 (tuple2!2121 lt!32612 lt!32616))))))

(assert (=> d!17093 (= (contains!720 lt!32847 (_1!1071 (tuple2!2121 lt!32612 lt!32616))) lt!33145)))

(declare-fun b!73710 () Bool)

(declare-fun lt!33144 () Unit!2076)

(assert (=> b!73710 (= e!48187 lt!33144)))

(assert (=> b!73710 (= lt!33144 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32847) (_1!1071 (tuple2!2121 lt!32612 lt!32616))))))

(assert (=> b!73710 (isDefined!86 (getValueByKey!134 (toList!716 lt!32847) (_1!1071 (tuple2!2121 lt!32612 lt!32616))))))

(declare-fun b!73711 () Bool)

(declare-fun Unit!2111 () Unit!2076)

(assert (=> b!73711 (= e!48187 Unit!2111)))

(declare-fun b!73712 () Bool)

(assert (=> b!73712 (= e!48186 (isDefined!86 (getValueByKey!134 (toList!716 lt!32847) (_1!1071 (tuple2!2121 lt!32612 lt!32616)))))))

(assert (= (and d!17093 c!10997) b!73710))

(assert (= (and d!17093 (not c!10997)) b!73711))

(assert (= (and d!17093 (not res!39059)) b!73712))

(declare-fun m!72361 () Bool)

(assert (=> d!17093 m!72361))

(declare-fun m!72363 () Bool)

(assert (=> b!73710 m!72363))

(assert (=> b!73710 m!71697))

(assert (=> b!73710 m!71697))

(declare-fun m!72365 () Bool)

(assert (=> b!73710 m!72365))

(assert (=> b!73712 m!71697))

(assert (=> b!73712 m!71697))

(assert (=> b!73712 m!72365))

(assert (=> d!16925 d!17093))

(declare-fun b!73714 () Bool)

(declare-fun e!48188 () Option!140)

(declare-fun e!48189 () Option!140)

(assert (=> b!73714 (= e!48188 e!48189)))

(declare-fun c!10999 () Bool)

(assert (=> b!73714 (= c!10999 (and ((_ is Cons!1470) lt!32848) (not (= (_1!1071 (h!2057 lt!32848)) (_1!1071 (tuple2!2121 lt!32612 lt!32616))))))))

(declare-fun b!73713 () Bool)

(assert (=> b!73713 (= e!48188 (Some!139 (_2!1071 (h!2057 lt!32848))))))

(declare-fun d!17095 () Bool)

(declare-fun c!10998 () Bool)

(assert (=> d!17095 (= c!10998 (and ((_ is Cons!1470) lt!32848) (= (_1!1071 (h!2057 lt!32848)) (_1!1071 (tuple2!2121 lt!32612 lt!32616)))))))

(assert (=> d!17095 (= (getValueByKey!134 lt!32848 (_1!1071 (tuple2!2121 lt!32612 lt!32616))) e!48188)))

(declare-fun b!73715 () Bool)

(assert (=> b!73715 (= e!48189 (getValueByKey!134 (t!5023 lt!32848) (_1!1071 (tuple2!2121 lt!32612 lt!32616))))))

(declare-fun b!73716 () Bool)

(assert (=> b!73716 (= e!48189 None!138)))

(assert (= (and d!17095 c!10998) b!73713))

(assert (= (and d!17095 (not c!10998)) b!73714))

(assert (= (and b!73714 c!10999) b!73715))

(assert (= (and b!73714 (not c!10999)) b!73716))

(declare-fun m!72367 () Bool)

(assert (=> b!73715 m!72367))

(assert (=> d!16925 d!17095))

(declare-fun d!17097 () Bool)

(assert (=> d!17097 (= (getValueByKey!134 lt!32848 (_1!1071 (tuple2!2121 lt!32612 lt!32616))) (Some!139 (_2!1071 (tuple2!2121 lt!32612 lt!32616))))))

(declare-fun lt!33148 () Unit!2076)

(assert (=> d!17097 (= lt!33148 (choose!419 lt!32848 (_1!1071 (tuple2!2121 lt!32612 lt!32616)) (_2!1071 (tuple2!2121 lt!32612 lt!32616))))))

(declare-fun e!48190 () Bool)

(assert (=> d!17097 e!48190))

(declare-fun res!39060 () Bool)

(assert (=> d!17097 (=> (not res!39060) (not e!48190))))

(assert (=> d!17097 (= res!39060 (isStrictlySorted!279 lt!32848))))

(assert (=> d!17097 (= (lemmaContainsTupThenGetReturnValue!51 lt!32848 (_1!1071 (tuple2!2121 lt!32612 lt!32616)) (_2!1071 (tuple2!2121 lt!32612 lt!32616))) lt!33148)))

(declare-fun b!73717 () Bool)

(declare-fun res!39061 () Bool)

(assert (=> b!73717 (=> (not res!39061) (not e!48190))))

(assert (=> b!73717 (= res!39061 (containsKey!137 lt!32848 (_1!1071 (tuple2!2121 lt!32612 lt!32616))))))

(declare-fun b!73718 () Bool)

(assert (=> b!73718 (= e!48190 (contains!721 lt!32848 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32612 lt!32616)) (_2!1071 (tuple2!2121 lt!32612 lt!32616)))))))

(assert (= (and d!17097 res!39060) b!73717))

(assert (= (and b!73717 res!39061) b!73718))

(assert (=> d!17097 m!71691))

(declare-fun m!72369 () Bool)

(assert (=> d!17097 m!72369))

(declare-fun m!72371 () Bool)

(assert (=> d!17097 m!72371))

(declare-fun m!72373 () Bool)

(assert (=> b!73717 m!72373))

(declare-fun m!72375 () Bool)

(assert (=> b!73718 m!72375))

(assert (=> d!16925 d!17097))

(declare-fun e!48195 () List!1474)

(declare-fun b!73719 () Bool)

(assert (=> b!73719 (= e!48195 (insertStrictlySorted!54 (t!5023 (toList!716 lt!32613)) (_1!1071 (tuple2!2121 lt!32612 lt!32616)) (_2!1071 (tuple2!2121 lt!32612 lt!32616))))))

(declare-fun c!11001 () Bool)

(declare-fun b!73720 () Bool)

(declare-fun c!11000 () Bool)

(assert (=> b!73720 (= e!48195 (ite c!11001 (t!5023 (toList!716 lt!32613)) (ite c!11000 (Cons!1470 (h!2057 (toList!716 lt!32613)) (t!5023 (toList!716 lt!32613))) Nil!1471)))))

(declare-fun bm!6494 () Bool)

(declare-fun call!6498 () List!1474)

(declare-fun call!6499 () List!1474)

(assert (=> bm!6494 (= call!6498 call!6499)))

(declare-fun e!48194 () Bool)

(declare-fun lt!33149 () List!1474)

(declare-fun b!73721 () Bool)

(assert (=> b!73721 (= e!48194 (contains!721 lt!33149 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32612 lt!32616)) (_2!1071 (tuple2!2121 lt!32612 lt!32616)))))))

(declare-fun b!73722 () Bool)

(declare-fun e!48191 () List!1474)

(assert (=> b!73722 (= e!48191 call!6498)))

(declare-fun b!73723 () Bool)

(declare-fun e!48192 () List!1474)

(declare-fun e!48193 () List!1474)

(assert (=> b!73723 (= e!48192 e!48193)))

(assert (=> b!73723 (= c!11001 (and ((_ is Cons!1470) (toList!716 lt!32613)) (= (_1!1071 (h!2057 (toList!716 lt!32613))) (_1!1071 (tuple2!2121 lt!32612 lt!32616)))))))

(declare-fun d!17099 () Bool)

(assert (=> d!17099 e!48194))

(declare-fun res!39062 () Bool)

(assert (=> d!17099 (=> (not res!39062) (not e!48194))))

(assert (=> d!17099 (= res!39062 (isStrictlySorted!279 lt!33149))))

(assert (=> d!17099 (= lt!33149 e!48192)))

(declare-fun c!11002 () Bool)

(assert (=> d!17099 (= c!11002 (and ((_ is Cons!1470) (toList!716 lt!32613)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32613))) (_1!1071 (tuple2!2121 lt!32612 lt!32616)))))))

(assert (=> d!17099 (isStrictlySorted!279 (toList!716 lt!32613))))

(assert (=> d!17099 (= (insertStrictlySorted!54 (toList!716 lt!32613) (_1!1071 (tuple2!2121 lt!32612 lt!32616)) (_2!1071 (tuple2!2121 lt!32612 lt!32616))) lt!33149)))

(declare-fun bm!6495 () Bool)

(declare-fun call!6497 () List!1474)

(assert (=> bm!6495 (= call!6497 ($colon$colon!65 e!48195 (ite c!11002 (h!2057 (toList!716 lt!32613)) (tuple2!2121 (_1!1071 (tuple2!2121 lt!32612 lt!32616)) (_2!1071 (tuple2!2121 lt!32612 lt!32616))))))))

(declare-fun c!11003 () Bool)

(assert (=> bm!6495 (= c!11003 c!11002)))

(declare-fun b!73724 () Bool)

(assert (=> b!73724 (= e!48193 call!6499)))

(declare-fun b!73725 () Bool)

(assert (=> b!73725 (= e!48191 call!6498)))

(declare-fun b!73726 () Bool)

(assert (=> b!73726 (= c!11000 (and ((_ is Cons!1470) (toList!716 lt!32613)) (bvsgt (_1!1071 (h!2057 (toList!716 lt!32613))) (_1!1071 (tuple2!2121 lt!32612 lt!32616)))))))

(assert (=> b!73726 (= e!48193 e!48191)))

(declare-fun b!73727 () Bool)

(assert (=> b!73727 (= e!48192 call!6497)))

(declare-fun bm!6496 () Bool)

(assert (=> bm!6496 (= call!6499 call!6497)))

(declare-fun b!73728 () Bool)

(declare-fun res!39063 () Bool)

(assert (=> b!73728 (=> (not res!39063) (not e!48194))))

(assert (=> b!73728 (= res!39063 (containsKey!137 lt!33149 (_1!1071 (tuple2!2121 lt!32612 lt!32616))))))

(assert (= (and d!17099 c!11002) b!73727))

(assert (= (and d!17099 (not c!11002)) b!73723))

(assert (= (and b!73723 c!11001) b!73724))

(assert (= (and b!73723 (not c!11001)) b!73726))

(assert (= (and b!73726 c!11000) b!73722))

(assert (= (and b!73726 (not c!11000)) b!73725))

(assert (= (or b!73722 b!73725) bm!6494))

(assert (= (or b!73724 bm!6494) bm!6496))

(assert (= (or b!73727 bm!6496) bm!6495))

(assert (= (and bm!6495 c!11003) b!73719))

(assert (= (and bm!6495 (not c!11003)) b!73720))

(assert (= (and d!17099 res!39062) b!73728))

(assert (= (and b!73728 res!39063) b!73721))

(declare-fun m!72377 () Bool)

(assert (=> b!73719 m!72377))

(declare-fun m!72379 () Bool)

(assert (=> b!73721 m!72379))

(declare-fun m!72381 () Bool)

(assert (=> d!17099 m!72381))

(declare-fun m!72383 () Bool)

(assert (=> d!17099 m!72383))

(declare-fun m!72385 () Bool)

(assert (=> bm!6495 m!72385))

(declare-fun m!72387 () Bool)

(assert (=> b!73728 m!72387))

(assert (=> d!16925 d!17099))

(declare-fun d!17101 () Bool)

(assert (=> d!17101 (= (apply!75 lt!32892 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1153 (getValueByKey!134 (toList!716 lt!32892) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3174 () Bool)

(assert (= bs!3174 d!17101))

(declare-fun m!72389 () Bool)

(assert (=> bs!3174 m!72389))

(assert (=> bs!3174 m!72389))

(declare-fun m!72391 () Bool)

(assert (=> bs!3174 m!72391))

(assert (=> b!73450 d!17101))

(declare-fun d!17103 () Bool)

(declare-fun e!48196 () Bool)

(assert (=> d!17103 e!48196))

(declare-fun res!39064 () Bool)

(assert (=> d!17103 (=> (not res!39064) (not e!48196))))

(declare-fun lt!33152 () ListLongMap!1401)

(assert (=> d!17103 (= res!39064 (contains!720 lt!33152 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun lt!33153 () List!1474)

(assert (=> d!17103 (= lt!33152 (ListLongMap!1402 lt!33153))))

(declare-fun lt!33151 () Unit!2076)

(declare-fun lt!33150 () Unit!2076)

(assert (=> d!17103 (= lt!33151 lt!33150)))

(assert (=> d!17103 (= (getValueByKey!134 lt!33153 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17103 (= lt!33150 (lemmaContainsTupThenGetReturnValue!51 lt!33153 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17103 (= lt!33153 (insertStrictlySorted!54 (toList!716 call!6445) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17103 (= (+!93 call!6445 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) lt!33152)))

(declare-fun b!73729 () Bool)

(declare-fun res!39065 () Bool)

(assert (=> b!73729 (=> (not res!39065) (not e!48196))))

(assert (=> b!73729 (= res!39065 (= (getValueByKey!134 (toList!716 lt!33152) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(declare-fun b!73730 () Bool)

(assert (=> b!73730 (= e!48196 (contains!721 (toList!716 lt!33152) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(assert (= (and d!17103 res!39064) b!73729))

(assert (= (and b!73729 res!39065) b!73730))

(declare-fun m!72393 () Bool)

(assert (=> d!17103 m!72393))

(declare-fun m!72395 () Bool)

(assert (=> d!17103 m!72395))

(declare-fun m!72397 () Bool)

(assert (=> d!17103 m!72397))

(declare-fun m!72399 () Bool)

(assert (=> d!17103 m!72399))

(declare-fun m!72401 () Bool)

(assert (=> b!73729 m!72401))

(declare-fun m!72403 () Bool)

(assert (=> b!73730 m!72403))

(assert (=> b!73343 d!17103))

(declare-fun d!17105 () Bool)

(assert (=> d!17105 (= (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73565 d!17105))

(declare-fun d!17107 () Bool)

(declare-fun lt!33154 () Bool)

(assert (=> d!17107 (= lt!33154 (select (content!78 (toList!716 lt!33084)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(declare-fun e!48198 () Bool)

(assert (=> d!17107 (= lt!33154 e!48198)))

(declare-fun res!39066 () Bool)

(assert (=> d!17107 (=> (not res!39066) (not e!48198))))

(assert (=> d!17107 (= res!39066 ((_ is Cons!1470) (toList!716 lt!33084)))))

(assert (=> d!17107 (= (contains!721 (toList!716 lt!33084) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) lt!33154)))

(declare-fun b!73731 () Bool)

(declare-fun e!48197 () Bool)

(assert (=> b!73731 (= e!48198 e!48197)))

(declare-fun res!39067 () Bool)

(assert (=> b!73731 (=> res!39067 e!48197)))

(assert (=> b!73731 (= res!39067 (= (h!2057 (toList!716 lt!33084)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(declare-fun b!73732 () Bool)

(assert (=> b!73732 (= e!48197 (contains!721 (t!5023 (toList!716 lt!33084)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(assert (= (and d!17107 res!39066) b!73731))

(assert (= (and b!73731 (not res!39067)) b!73732))

(declare-fun m!72405 () Bool)

(assert (=> d!17107 m!72405))

(declare-fun m!72407 () Bool)

(assert (=> d!17107 m!72407))

(declare-fun m!72409 () Bool)

(assert (=> b!73732 m!72409))

(assert (=> b!73605 d!17107))

(declare-fun d!17109 () Bool)

(declare-fun e!48204 () Bool)

(assert (=> d!17109 e!48204))

(declare-fun res!39068 () Bool)

(assert (=> d!17109 (=> (not res!39068) (not e!48204))))

(declare-fun lt!33159 () ListLongMap!1401)

(assert (=> d!17109 (= res!39068 (not (contains!720 lt!33159 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48205 () ListLongMap!1401)

(assert (=> d!17109 (= lt!33159 e!48205)))

(declare-fun c!11007 () Bool)

(assert (=> d!17109 (= c!11007 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!17109 (validMask!0 (mask!6179 (v!2532 (underlying!262 thiss!992))))))

(assert (=> d!17109 (= (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))) lt!33159)))

(declare-fun b!73733 () Bool)

(declare-fun e!48203 () ListLongMap!1401)

(declare-fun call!6500 () ListLongMap!1401)

(assert (=> b!73733 (= e!48203 call!6500)))

(declare-fun bm!6497 () Bool)

(assert (=> bm!6497 (= call!6500 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!73734 () Bool)

(declare-fun lt!33156 () Unit!2076)

(declare-fun lt!33155 () Unit!2076)

(assert (=> b!73734 (= lt!33156 lt!33155)))

(declare-fun lt!33160 () (_ BitVec 64))

(declare-fun lt!33158 () ListLongMap!1401)

(declare-fun lt!33161 () V!2945)

(declare-fun lt!33157 () (_ BitVec 64))

(assert (=> b!73734 (not (contains!720 (+!93 lt!33158 (tuple2!2121 lt!33157 lt!33161)) lt!33160))))

(assert (=> b!73734 (= lt!33155 (addStillNotContains!26 lt!33158 lt!33157 lt!33161 lt!33160))))

(assert (=> b!73734 (= lt!33160 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73734 (= lt!33161 (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73734 (= lt!33157 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!73734 (= lt!33158 call!6500)))

(assert (=> b!73734 (= e!48203 (+!93 call!6500 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!73735 () Bool)

(declare-fun e!48200 () Bool)

(assert (=> b!73735 (= e!48200 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!73735 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!73736 () Bool)

(declare-fun e!48202 () Bool)

(assert (=> b!73736 (= e!48204 e!48202)))

(declare-fun c!11006 () Bool)

(assert (=> b!73736 (= c!11006 e!48200)))

(declare-fun res!39071 () Bool)

(assert (=> b!73736 (=> (not res!39071) (not e!48200))))

(assert (=> b!73736 (= res!39071 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!73737 () Bool)

(declare-fun res!39070 () Bool)

(assert (=> b!73737 (=> (not res!39070) (not e!48204))))

(assert (=> b!73737 (= res!39070 (not (contains!720 lt!33159 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73738 () Bool)

(declare-fun e!48201 () Bool)

(assert (=> b!73738 (= e!48202 e!48201)))

(assert (=> b!73738 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun res!39069 () Bool)

(assert (=> b!73738 (= res!39069 (contains!720 lt!33159 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!73738 (=> (not res!39069) (not e!48201))))

(declare-fun b!73739 () Bool)

(assert (=> b!73739 (= e!48205 e!48203)))

(declare-fun c!11004 () Bool)

(assert (=> b!73739 (= c!11004 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!73740 () Bool)

(declare-fun e!48199 () Bool)

(assert (=> b!73740 (= e!48202 e!48199)))

(declare-fun c!11005 () Bool)

(assert (=> b!73740 (= c!11005 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!73741 () Bool)

(assert (=> b!73741 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> b!73741 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2089 (_values!2195 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> b!73741 (= e!48201 (= (apply!75 lt!33159 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73742 () Bool)

(assert (=> b!73742 (= e!48199 (isEmpty!322 lt!33159))))

(declare-fun b!73743 () Bool)

(assert (=> b!73743 (= e!48205 (ListLongMap!1402 Nil!1471))))

(declare-fun b!73744 () Bool)

(assert (=> b!73744 (= e!48199 (= lt!33159 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (_values!2195 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992))) (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) (minValue!2114 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17109 c!11007) b!73743))

(assert (= (and d!17109 (not c!11007)) b!73739))

(assert (= (and b!73739 c!11004) b!73734))

(assert (= (and b!73739 (not c!11004)) b!73733))

(assert (= (or b!73734 b!73733) bm!6497))

(assert (= (and d!17109 res!39068) b!73737))

(assert (= (and b!73737 res!39070) b!73736))

(assert (= (and b!73736 res!39071) b!73735))

(assert (= (and b!73736 c!11006) b!73738))

(assert (= (and b!73736 (not c!11006)) b!73740))

(assert (= (and b!73738 res!39069) b!73741))

(assert (= (and b!73740 c!11005) b!73744))

(assert (= (and b!73740 (not c!11005)) b!73742))

(declare-fun b_lambda!3319 () Bool)

(assert (=> (not b_lambda!3319) (not b!73734)))

(assert (=> b!73734 t!5019))

(declare-fun b_and!4525 () Bool)

(assert (= b_and!4521 (and (=> t!5019 result!2669) b_and!4525)))

(assert (=> b!73734 t!5021))

(declare-fun b_and!4527 () Bool)

(assert (= b_and!4523 (and (=> t!5021 result!2673) b_and!4527)))

(declare-fun b_lambda!3321 () Bool)

(assert (=> (not b_lambda!3321) (not b!73741)))

(assert (=> b!73741 t!5019))

(declare-fun b_and!4529 () Bool)

(assert (= b_and!4525 (and (=> t!5019 result!2669) b_and!4529)))

(assert (=> b!73741 t!5021))

(declare-fun b_and!4531 () Bool)

(assert (= b_and!4527 (and (=> t!5021 result!2673) b_and!4531)))

(declare-fun m!72411 () Bool)

(assert (=> b!73742 m!72411))

(declare-fun m!72413 () Bool)

(assert (=> b!73744 m!72413))

(declare-fun m!72415 () Bool)

(assert (=> b!73734 m!72415))

(assert (=> b!73734 m!71147))

(declare-fun m!72417 () Bool)

(assert (=> b!73734 m!72417))

(declare-fun m!72419 () Bool)

(assert (=> b!73734 m!72419))

(assert (=> b!73734 m!72419))

(declare-fun m!72421 () Bool)

(assert (=> b!73734 m!72421))

(declare-fun m!72423 () Bool)

(assert (=> b!73734 m!72423))

(declare-fun m!72425 () Bool)

(assert (=> b!73734 m!72425))

(declare-fun m!72427 () Bool)

(assert (=> b!73734 m!72427))

(assert (=> b!73734 m!72415))

(assert (=> b!73734 m!71147))

(assert (=> b!73741 m!72415))

(assert (=> b!73741 m!71147))

(assert (=> b!73741 m!72417))

(assert (=> b!73741 m!72427))

(assert (=> b!73741 m!72427))

(declare-fun m!72429 () Bool)

(assert (=> b!73741 m!72429))

(assert (=> b!73741 m!72415))

(assert (=> b!73741 m!71147))

(declare-fun m!72431 () Bool)

(assert (=> d!17109 m!72431))

(assert (=> d!17109 m!71151))

(assert (=> bm!6497 m!72413))

(assert (=> b!73738 m!72427))

(assert (=> b!73738 m!72427))

(declare-fun m!72433 () Bool)

(assert (=> b!73738 m!72433))

(assert (=> b!73735 m!72427))

(assert (=> b!73735 m!72427))

(declare-fun m!72435 () Bool)

(assert (=> b!73735 m!72435))

(declare-fun m!72437 () Bool)

(assert (=> b!73737 m!72437))

(assert (=> b!73739 m!72427))

(assert (=> b!73739 m!72427))

(assert (=> b!73739 m!72435))

(assert (=> b!73640 d!17109))

(declare-fun d!17111 () Bool)

(declare-fun e!48206 () Bool)

(assert (=> d!17111 e!48206))

(declare-fun res!39072 () Bool)

(assert (=> d!17111 (=> (not res!39072) (not e!48206))))

(declare-fun lt!33164 () ListLongMap!1401)

(assert (=> d!17111 (= res!39072 (contains!720 lt!33164 (_1!1071 (tuple2!2121 lt!33043 (minValue!2114 newMap!16)))))))

(declare-fun lt!33165 () List!1474)

(assert (=> d!17111 (= lt!33164 (ListLongMap!1402 lt!33165))))

(declare-fun lt!33163 () Unit!2076)

(declare-fun lt!33162 () Unit!2076)

(assert (=> d!17111 (= lt!33163 lt!33162)))

(assert (=> d!17111 (= (getValueByKey!134 lt!33165 (_1!1071 (tuple2!2121 lt!33043 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!33043 (minValue!2114 newMap!16)))))))

(assert (=> d!17111 (= lt!33162 (lemmaContainsTupThenGetReturnValue!51 lt!33165 (_1!1071 (tuple2!2121 lt!33043 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!33043 (minValue!2114 newMap!16)))))))

(assert (=> d!17111 (= lt!33165 (insertStrictlySorted!54 (toList!716 lt!33048) (_1!1071 (tuple2!2121 lt!33043 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!33043 (minValue!2114 newMap!16)))))))

(assert (=> d!17111 (= (+!93 lt!33048 (tuple2!2121 lt!33043 (minValue!2114 newMap!16))) lt!33164)))

(declare-fun b!73745 () Bool)

(declare-fun res!39073 () Bool)

(assert (=> b!73745 (=> (not res!39073) (not e!48206))))

(assert (=> b!73745 (= res!39073 (= (getValueByKey!134 (toList!716 lt!33164) (_1!1071 (tuple2!2121 lt!33043 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!33043 (minValue!2114 newMap!16))))))))

(declare-fun b!73746 () Bool)

(assert (=> b!73746 (= e!48206 (contains!721 (toList!716 lt!33164) (tuple2!2121 lt!33043 (minValue!2114 newMap!16))))))

(assert (= (and d!17111 res!39072) b!73745))

(assert (= (and b!73745 res!39073) b!73746))

(declare-fun m!72439 () Bool)

(assert (=> d!17111 m!72439))

(declare-fun m!72441 () Bool)

(assert (=> d!17111 m!72441))

(declare-fun m!72443 () Bool)

(assert (=> d!17111 m!72443))

(declare-fun m!72445 () Bool)

(assert (=> d!17111 m!72445))

(declare-fun m!72447 () Bool)

(assert (=> b!73745 m!72447))

(declare-fun m!72449 () Bool)

(assert (=> b!73746 m!72449))

(assert (=> b!73536 d!17111))

(declare-fun d!17113 () Bool)

(assert (=> d!17113 (= (apply!75 (+!93 lt!33048 (tuple2!2121 lt!33043 (minValue!2114 newMap!16))) lt!33047) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!33048 (tuple2!2121 lt!33043 (minValue!2114 newMap!16)))) lt!33047)))))

(declare-fun bs!3175 () Bool)

(assert (= bs!3175 d!17113))

(declare-fun m!72451 () Bool)

(assert (=> bs!3175 m!72451))

(assert (=> bs!3175 m!72451))

(declare-fun m!72453 () Bool)

(assert (=> bs!3175 m!72453))

(assert (=> b!73536 d!17113))

(declare-fun d!17115 () Bool)

(declare-fun e!48207 () Bool)

(assert (=> d!17115 e!48207))

(declare-fun res!39074 () Bool)

(assert (=> d!17115 (=> (not res!39074) (not e!48207))))

(declare-fun lt!33168 () ListLongMap!1401)

(assert (=> d!17115 (= res!39074 (contains!720 lt!33168 (_1!1071 (tuple2!2121 lt!33042 (minValue!2114 newMap!16)))))))

(declare-fun lt!33169 () List!1474)

(assert (=> d!17115 (= lt!33168 (ListLongMap!1402 lt!33169))))

(declare-fun lt!33167 () Unit!2076)

(declare-fun lt!33166 () Unit!2076)

(assert (=> d!17115 (= lt!33167 lt!33166)))

(assert (=> d!17115 (= (getValueByKey!134 lt!33169 (_1!1071 (tuple2!2121 lt!33042 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!33042 (minValue!2114 newMap!16)))))))

(assert (=> d!17115 (= lt!33166 (lemmaContainsTupThenGetReturnValue!51 lt!33169 (_1!1071 (tuple2!2121 lt!33042 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!33042 (minValue!2114 newMap!16)))))))

(assert (=> d!17115 (= lt!33169 (insertStrictlySorted!54 (toList!716 lt!33037) (_1!1071 (tuple2!2121 lt!33042 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!33042 (minValue!2114 newMap!16)))))))

(assert (=> d!17115 (= (+!93 lt!33037 (tuple2!2121 lt!33042 (minValue!2114 newMap!16))) lt!33168)))

(declare-fun b!73747 () Bool)

(declare-fun res!39075 () Bool)

(assert (=> b!73747 (=> (not res!39075) (not e!48207))))

(assert (=> b!73747 (= res!39075 (= (getValueByKey!134 (toList!716 lt!33168) (_1!1071 (tuple2!2121 lt!33042 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!33042 (minValue!2114 newMap!16))))))))

(declare-fun b!73748 () Bool)

(assert (=> b!73748 (= e!48207 (contains!721 (toList!716 lt!33168) (tuple2!2121 lt!33042 (minValue!2114 newMap!16))))))

(assert (= (and d!17115 res!39074) b!73747))

(assert (= (and b!73747 res!39075) b!73748))

(declare-fun m!72455 () Bool)

(assert (=> d!17115 m!72455))

(declare-fun m!72457 () Bool)

(assert (=> d!17115 m!72457))

(declare-fun m!72459 () Bool)

(assert (=> d!17115 m!72459))

(declare-fun m!72461 () Bool)

(assert (=> d!17115 m!72461))

(declare-fun m!72463 () Bool)

(assert (=> b!73747 m!72463))

(declare-fun m!72465 () Bool)

(assert (=> b!73748 m!72465))

(assert (=> b!73536 d!17115))

(declare-fun d!17117 () Bool)

(assert (=> d!17117 (= (apply!75 lt!33037 lt!33051) (get!1153 (getValueByKey!134 (toList!716 lt!33037) lt!33051)))))

(declare-fun bs!3176 () Bool)

(assert (= bs!3176 d!17117))

(declare-fun m!72467 () Bool)

(assert (=> bs!3176 m!72467))

(assert (=> bs!3176 m!72467))

(declare-fun m!72469 () Bool)

(assert (=> bs!3176 m!72469))

(assert (=> b!73536 d!17117))

(declare-fun d!17119 () Bool)

(assert (=> d!17119 (= (apply!75 (+!93 lt!33037 (tuple2!2121 lt!33042 (minValue!2114 newMap!16))) lt!33051) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!33037 (tuple2!2121 lt!33042 (minValue!2114 newMap!16)))) lt!33051)))))

(declare-fun bs!3177 () Bool)

(assert (= bs!3177 d!17119))

(declare-fun m!72471 () Bool)

(assert (=> bs!3177 m!72471))

(assert (=> bs!3177 m!72471))

(declare-fun m!72473 () Bool)

(assert (=> bs!3177 m!72473))

(assert (=> b!73536 d!17119))

(declare-fun d!17121 () Bool)

(assert (=> d!17121 (= (apply!75 (+!93 lt!33048 (tuple2!2121 lt!33043 (minValue!2114 newMap!16))) lt!33047) (apply!75 lt!33048 lt!33047))))

(declare-fun lt!33170 () Unit!2076)

(assert (=> d!17121 (= lt!33170 (choose!426 lt!33048 lt!33043 (minValue!2114 newMap!16) lt!33047))))

(declare-fun e!48208 () Bool)

(assert (=> d!17121 e!48208))

(declare-fun res!39076 () Bool)

(assert (=> d!17121 (=> (not res!39076) (not e!48208))))

(assert (=> d!17121 (= res!39076 (contains!720 lt!33048 lt!33047))))

(assert (=> d!17121 (= (addApplyDifferent!51 lt!33048 lt!33043 (minValue!2114 newMap!16) lt!33047) lt!33170)))

(declare-fun b!73749 () Bool)

(assert (=> b!73749 (= e!48208 (not (= lt!33047 lt!33043)))))

(assert (= (and d!17121 res!39076) b!73749))

(declare-fun m!72475 () Bool)

(assert (=> d!17121 m!72475))

(declare-fun m!72477 () Bool)

(assert (=> d!17121 m!72477))

(assert (=> d!17121 m!72033))

(assert (=> d!17121 m!72049))

(assert (=> d!17121 m!72037))

(assert (=> d!17121 m!72033))

(assert (=> b!73536 d!17121))

(declare-fun d!17123 () Bool)

(declare-fun e!48209 () Bool)

(assert (=> d!17123 e!48209))

(declare-fun res!39077 () Bool)

(assert (=> d!17123 (=> res!39077 e!48209)))

(declare-fun lt!33172 () Bool)

(assert (=> d!17123 (= res!39077 (not lt!33172))))

(declare-fun lt!33174 () Bool)

(assert (=> d!17123 (= lt!33172 lt!33174)))

(declare-fun lt!33173 () Unit!2076)

(declare-fun e!48210 () Unit!2076)

(assert (=> d!17123 (= lt!33173 e!48210)))

(declare-fun c!11008 () Bool)

(assert (=> d!17123 (= c!11008 lt!33174)))

(assert (=> d!17123 (= lt!33174 (containsKey!137 (toList!716 (+!93 lt!33045 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16)))) lt!33030))))

(assert (=> d!17123 (= (contains!720 (+!93 lt!33045 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16))) lt!33030) lt!33172)))

(declare-fun b!73750 () Bool)

(declare-fun lt!33171 () Unit!2076)

(assert (=> b!73750 (= e!48210 lt!33171)))

(assert (=> b!73750 (= lt!33171 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (+!93 lt!33045 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16)))) lt!33030))))

(assert (=> b!73750 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!33045 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16)))) lt!33030))))

(declare-fun b!73751 () Bool)

(declare-fun Unit!2112 () Unit!2076)

(assert (=> b!73751 (= e!48210 Unit!2112)))

(declare-fun b!73752 () Bool)

(assert (=> b!73752 (= e!48209 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!33045 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16)))) lt!33030)))))

(assert (= (and d!17123 c!11008) b!73750))

(assert (= (and d!17123 (not c!11008)) b!73751))

(assert (= (and d!17123 (not res!39077)) b!73752))

(declare-fun m!72479 () Bool)

(assert (=> d!17123 m!72479))

(declare-fun m!72481 () Bool)

(assert (=> b!73750 m!72481))

(declare-fun m!72483 () Bool)

(assert (=> b!73750 m!72483))

(assert (=> b!73750 m!72483))

(declare-fun m!72485 () Bool)

(assert (=> b!73750 m!72485))

(assert (=> b!73752 m!72483))

(assert (=> b!73752 m!72483))

(assert (=> b!73752 m!72485))

(assert (=> b!73536 d!17123))

(declare-fun d!17125 () Bool)

(declare-fun e!48211 () Bool)

(assert (=> d!17125 e!48211))

(declare-fun res!39078 () Bool)

(assert (=> d!17125 (=> (not res!39078) (not e!48211))))

(declare-fun lt!33177 () ListLongMap!1401)

(assert (=> d!17125 (= res!39078 (contains!720 lt!33177 (_1!1071 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16)))))))

(declare-fun lt!33178 () List!1474)

(assert (=> d!17125 (= lt!33177 (ListLongMap!1402 lt!33178))))

(declare-fun lt!33176 () Unit!2076)

(declare-fun lt!33175 () Unit!2076)

(assert (=> d!17125 (= lt!33176 lt!33175)))

(assert (=> d!17125 (= (getValueByKey!134 lt!33178 (_1!1071 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17125 (= lt!33175 (lemmaContainsTupThenGetReturnValue!51 lt!33178 (_1!1071 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17125 (= lt!33178 (insertStrictlySorted!54 (toList!716 lt!33033) (_1!1071 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17125 (= (+!93 lt!33033 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16))) lt!33177)))

(declare-fun b!73753 () Bool)

(declare-fun res!39079 () Bool)

(assert (=> b!73753 (=> (not res!39079) (not e!48211))))

(assert (=> b!73753 (= res!39079 (= (getValueByKey!134 (toList!716 lt!33177) (_1!1071 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16))))))))

(declare-fun b!73754 () Bool)

(assert (=> b!73754 (= e!48211 (contains!721 (toList!716 lt!33177) (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16))))))

(assert (= (and d!17125 res!39078) b!73753))

(assert (= (and b!73753 res!39079) b!73754))

(declare-fun m!72487 () Bool)

(assert (=> d!17125 m!72487))

(declare-fun m!72489 () Bool)

(assert (=> d!17125 m!72489))

(declare-fun m!72491 () Bool)

(assert (=> d!17125 m!72491))

(declare-fun m!72493 () Bool)

(assert (=> d!17125 m!72493))

(declare-fun m!72495 () Bool)

(assert (=> b!73753 m!72495))

(declare-fun m!72497 () Bool)

(assert (=> b!73754 m!72497))

(assert (=> b!73536 d!17125))

(declare-fun d!17127 () Bool)

(assert (=> d!17127 (= (apply!75 lt!33033 lt!33041) (get!1153 (getValueByKey!134 (toList!716 lt!33033) lt!33041)))))

(declare-fun bs!3178 () Bool)

(assert (= bs!3178 d!17127))

(declare-fun m!72499 () Bool)

(assert (=> bs!3178 m!72499))

(assert (=> bs!3178 m!72499))

(declare-fun m!72501 () Bool)

(assert (=> bs!3178 m!72501))

(assert (=> b!73536 d!17127))

(declare-fun d!17129 () Bool)

(assert (=> d!17129 (= (apply!75 (+!93 lt!33037 (tuple2!2121 lt!33042 (minValue!2114 newMap!16))) lt!33051) (apply!75 lt!33037 lt!33051))))

(declare-fun lt!33179 () Unit!2076)

(assert (=> d!17129 (= lt!33179 (choose!426 lt!33037 lt!33042 (minValue!2114 newMap!16) lt!33051))))

(declare-fun e!48212 () Bool)

(assert (=> d!17129 e!48212))

(declare-fun res!39080 () Bool)

(assert (=> d!17129 (=> (not res!39080) (not e!48212))))

(assert (=> d!17129 (= res!39080 (contains!720 lt!33037 lt!33051))))

(assert (=> d!17129 (= (addApplyDifferent!51 lt!33037 lt!33042 (minValue!2114 newMap!16) lt!33051) lt!33179)))

(declare-fun b!73755 () Bool)

(assert (=> b!73755 (= e!48212 (not (= lt!33051 lt!33042)))))

(assert (= (and d!17129 res!39080) b!73755))

(declare-fun m!72503 () Bool)

(assert (=> d!17129 m!72503))

(declare-fun m!72505 () Bool)

(assert (=> d!17129 m!72505))

(assert (=> d!17129 m!72027))

(assert (=> d!17129 m!72029))

(assert (=> d!17129 m!72035))

(assert (=> d!17129 m!72027))

(assert (=> b!73536 d!17129))

(declare-fun d!17131 () Bool)

(assert (=> d!17131 (= (apply!75 (+!93 lt!33033 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16))) lt!33041) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!33033 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16)))) lt!33041)))))

(declare-fun bs!3179 () Bool)

(assert (= bs!3179 d!17131))

(declare-fun m!72507 () Bool)

(assert (=> bs!3179 m!72507))

(assert (=> bs!3179 m!72507))

(declare-fun m!72509 () Bool)

(assert (=> bs!3179 m!72509))

(assert (=> b!73536 d!17131))

(declare-fun d!17133 () Bool)

(assert (=> d!17133 (= (apply!75 lt!33048 lt!33047) (get!1153 (getValueByKey!134 (toList!716 lt!33048) lt!33047)))))

(declare-fun bs!3180 () Bool)

(assert (= bs!3180 d!17133))

(declare-fun m!72511 () Bool)

(assert (=> bs!3180 m!72511))

(assert (=> bs!3180 m!72511))

(declare-fun m!72513 () Bool)

(assert (=> bs!3180 m!72513))

(assert (=> b!73536 d!17133))

(declare-fun d!17135 () Bool)

(assert (=> d!17135 (contains!720 (+!93 lt!33045 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16))) lt!33030)))

(declare-fun lt!33180 () Unit!2076)

(assert (=> d!17135 (= lt!33180 (choose!425 lt!33045 lt!33050 (zeroValue!2114 newMap!16) lt!33030))))

(assert (=> d!17135 (contains!720 lt!33045 lt!33030)))

(assert (=> d!17135 (= (addStillContains!51 lt!33045 lt!33050 (zeroValue!2114 newMap!16) lt!33030) lt!33180)))

(declare-fun bs!3181 () Bool)

(assert (= bs!3181 d!17135))

(assert (=> bs!3181 m!72045))

(assert (=> bs!3181 m!72045))

(assert (=> bs!3181 m!72047))

(declare-fun m!72515 () Bool)

(assert (=> bs!3181 m!72515))

(declare-fun m!72517 () Bool)

(assert (=> bs!3181 m!72517))

(assert (=> b!73536 d!17135))

(declare-fun d!17137 () Bool)

(declare-fun e!48213 () Bool)

(assert (=> d!17137 e!48213))

(declare-fun res!39081 () Bool)

(assert (=> d!17137 (=> (not res!39081) (not e!48213))))

(declare-fun lt!33183 () ListLongMap!1401)

(assert (=> d!17137 (= res!39081 (contains!720 lt!33183 (_1!1071 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16)))))))

(declare-fun lt!33184 () List!1474)

(assert (=> d!17137 (= lt!33183 (ListLongMap!1402 lt!33184))))

(declare-fun lt!33182 () Unit!2076)

(declare-fun lt!33181 () Unit!2076)

(assert (=> d!17137 (= lt!33182 lt!33181)))

(assert (=> d!17137 (= (getValueByKey!134 lt!33184 (_1!1071 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17137 (= lt!33181 (lemmaContainsTupThenGetReturnValue!51 lt!33184 (_1!1071 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17137 (= lt!33184 (insertStrictlySorted!54 (toList!716 lt!33045) (_1!1071 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17137 (= (+!93 lt!33045 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16))) lt!33183)))

(declare-fun b!73756 () Bool)

(declare-fun res!39082 () Bool)

(assert (=> b!73756 (=> (not res!39082) (not e!48213))))

(assert (=> b!73756 (= res!39082 (= (getValueByKey!134 (toList!716 lt!33183) (_1!1071 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16))))))))

(declare-fun b!73757 () Bool)

(assert (=> b!73757 (= e!48213 (contains!721 (toList!716 lt!33183) (tuple2!2121 lt!33050 (zeroValue!2114 newMap!16))))))

(assert (= (and d!17137 res!39081) b!73756))

(assert (= (and b!73756 res!39082) b!73757))

(declare-fun m!72519 () Bool)

(assert (=> d!17137 m!72519))

(declare-fun m!72521 () Bool)

(assert (=> d!17137 m!72521))

(declare-fun m!72523 () Bool)

(assert (=> d!17137 m!72523))

(declare-fun m!72525 () Bool)

(assert (=> d!17137 m!72525))

(declare-fun m!72527 () Bool)

(assert (=> b!73756 m!72527))

(declare-fun m!72529 () Bool)

(assert (=> b!73757 m!72529))

(assert (=> b!73536 d!17137))

(declare-fun d!17139 () Bool)

(assert (=> d!17139 (= (apply!75 (+!93 lt!33033 (tuple2!2121 lt!33034 (zeroValue!2114 newMap!16))) lt!33041) (apply!75 lt!33033 lt!33041))))

(declare-fun lt!33185 () Unit!2076)

(assert (=> d!17139 (= lt!33185 (choose!426 lt!33033 lt!33034 (zeroValue!2114 newMap!16) lt!33041))))

(declare-fun e!48214 () Bool)

(assert (=> d!17139 e!48214))

(declare-fun res!39083 () Bool)

(assert (=> d!17139 (=> (not res!39083) (not e!48214))))

(assert (=> d!17139 (= res!39083 (contains!720 lt!33033 lt!33041))))

(assert (=> d!17139 (= (addApplyDifferent!51 lt!33033 lt!33034 (zeroValue!2114 newMap!16) lt!33041) lt!33185)))

(declare-fun b!73758 () Bool)

(assert (=> b!73758 (= e!48214 (not (= lt!33041 lt!33034)))))

(assert (= (and d!17139 res!39083) b!73758))

(declare-fun m!72531 () Bool)

(assert (=> d!17139 m!72531))

(declare-fun m!72533 () Bool)

(assert (=> d!17139 m!72533))

(assert (=> d!17139 m!72041))

(assert (=> d!17139 m!72043))

(assert (=> d!17139 m!72055))

(assert (=> d!17139 m!72041))

(assert (=> b!73536 d!17139))

(declare-fun d!17141 () Bool)

(declare-fun e!48220 () Bool)

(assert (=> d!17141 e!48220))

(declare-fun res!39084 () Bool)

(assert (=> d!17141 (=> (not res!39084) (not e!48220))))

(declare-fun lt!33190 () ListLongMap!1401)

(assert (=> d!17141 (= res!39084 (not (contains!720 lt!33190 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48221 () ListLongMap!1401)

(assert (=> d!17141 (= lt!33190 e!48221)))

(declare-fun c!11012 () Bool)

(assert (=> d!17141 (= c!11012 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17141 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17141 (= (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33190)))

(declare-fun b!73759 () Bool)

(declare-fun e!48219 () ListLongMap!1401)

(declare-fun call!6501 () ListLongMap!1401)

(assert (=> b!73759 (= e!48219 call!6501)))

(declare-fun bm!6498 () Bool)

(assert (=> bm!6498 (= call!6501 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16)))))

(declare-fun b!73760 () Bool)

(declare-fun lt!33187 () Unit!2076)

(declare-fun lt!33186 () Unit!2076)

(assert (=> b!73760 (= lt!33187 lt!33186)))

(declare-fun lt!33188 () (_ BitVec 64))

(declare-fun lt!33192 () V!2945)

(declare-fun lt!33189 () ListLongMap!1401)

(declare-fun lt!33191 () (_ BitVec 64))

(assert (=> b!73760 (not (contains!720 (+!93 lt!33189 (tuple2!2121 lt!33188 lt!33192)) lt!33191))))

(assert (=> b!73760 (= lt!33186 (addStillNotContains!26 lt!33189 lt!33188 lt!33192 lt!33191))))

(assert (=> b!73760 (= lt!33191 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73760 (= lt!33192 (get!1149 (select (arr!1851 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73760 (= lt!33188 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73760 (= lt!33189 call!6501)))

(assert (=> b!73760 (= e!48219 (+!93 call!6501 (tuple2!2121 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) (get!1149 (select (arr!1851 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!73761 () Bool)

(declare-fun e!48216 () Bool)

(assert (=> b!73761 (= e!48216 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73761 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!73762 () Bool)

(declare-fun e!48218 () Bool)

(assert (=> b!73762 (= e!48220 e!48218)))

(declare-fun c!11011 () Bool)

(assert (=> b!73762 (= c!11011 e!48216)))

(declare-fun res!39087 () Bool)

(assert (=> b!73762 (=> (not res!39087) (not e!48216))))

(assert (=> b!73762 (= res!39087 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73763 () Bool)

(declare-fun res!39086 () Bool)

(assert (=> b!73763 (=> (not res!39086) (not e!48220))))

(assert (=> b!73763 (= res!39086 (not (contains!720 lt!33190 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73764 () Bool)

(declare-fun e!48217 () Bool)

(assert (=> b!73764 (= e!48218 e!48217)))

(assert (=> b!73764 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun res!39085 () Bool)

(assert (=> b!73764 (= res!39085 (contains!720 lt!33190 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73764 (=> (not res!39085) (not e!48217))))

(declare-fun b!73765 () Bool)

(assert (=> b!73765 (= e!48221 e!48219)))

(declare-fun c!11009 () Bool)

(assert (=> b!73765 (= c!11009 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73766 () Bool)

(declare-fun e!48215 () Bool)

(assert (=> b!73766 (= e!48218 e!48215)))

(declare-fun c!11010 () Bool)

(assert (=> b!73766 (= c!11010 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!73767 () Bool)

(assert (=> b!73767 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> b!73767 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_values!2195 newMap!16))))))

(assert (=> b!73767 (= e!48217 (= (apply!75 lt!33190 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73768 () Bool)

(assert (=> b!73768 (= e!48215 (isEmpty!322 lt!33190))))

(declare-fun b!73769 () Bool)

(assert (=> b!73769 (= e!48221 (ListLongMap!1402 Nil!1471))))

(declare-fun b!73770 () Bool)

(assert (=> b!73770 (= e!48215 (= lt!33190 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16))))))

(assert (= (and d!17141 c!11012) b!73769))

(assert (= (and d!17141 (not c!11012)) b!73765))

(assert (= (and b!73765 c!11009) b!73760))

(assert (= (and b!73765 (not c!11009)) b!73759))

(assert (= (or b!73760 b!73759) bm!6498))

(assert (= (and d!17141 res!39084) b!73763))

(assert (= (and b!73763 res!39086) b!73762))

(assert (= (and b!73762 res!39087) b!73761))

(assert (= (and b!73762 c!11011) b!73764))

(assert (= (and b!73762 (not c!11011)) b!73766))

(assert (= (and b!73764 res!39085) b!73767))

(assert (= (and b!73766 c!11010) b!73770))

(assert (= (and b!73766 (not c!11010)) b!73768))

(declare-fun b_lambda!3323 () Bool)

(assert (=> (not b_lambda!3323) (not b!73760)))

(assert (=> b!73760 t!5036))

(declare-fun b_and!4533 () Bool)

(assert (= b_and!4529 (and (=> t!5036 result!2689) b_and!4533)))

(assert (=> b!73760 t!5038))

(declare-fun b_and!4535 () Bool)

(assert (= b_and!4531 (and (=> t!5038 result!2691) b_and!4535)))

(declare-fun b_lambda!3325 () Bool)

(assert (=> (not b_lambda!3325) (not b!73767)))

(assert (=> b!73767 t!5036))

(declare-fun b_and!4537 () Bool)

(assert (= b_and!4533 (and (=> t!5036 result!2689) b_and!4537)))

(assert (=> b!73767 t!5038))

(declare-fun b_and!4539 () Bool)

(assert (= b_and!4535 (and (=> t!5038 result!2691) b_and!4539)))

(declare-fun m!72535 () Bool)

(assert (=> b!73768 m!72535))

(declare-fun m!72537 () Bool)

(assert (=> b!73770 m!72537))

(assert (=> b!73760 m!72071))

(assert (=> b!73760 m!71663))

(assert (=> b!73760 m!72073))

(declare-fun m!72539 () Bool)

(assert (=> b!73760 m!72539))

(assert (=> b!73760 m!72539))

(declare-fun m!72541 () Bool)

(assert (=> b!73760 m!72541))

(declare-fun m!72543 () Bool)

(assert (=> b!73760 m!72543))

(declare-fun m!72545 () Bool)

(assert (=> b!73760 m!72545))

(assert (=> b!73760 m!71603))

(assert (=> b!73760 m!72071))

(assert (=> b!73760 m!71663))

(assert (=> b!73767 m!72071))

(assert (=> b!73767 m!71663))

(assert (=> b!73767 m!72073))

(assert (=> b!73767 m!71603))

(assert (=> b!73767 m!71603))

(declare-fun m!72547 () Bool)

(assert (=> b!73767 m!72547))

(assert (=> b!73767 m!72071))

(assert (=> b!73767 m!71663))

(declare-fun m!72549 () Bool)

(assert (=> d!17141 m!72549))

(assert (=> d!17141 m!71557))

(assert (=> bm!6498 m!72537))

(assert (=> b!73764 m!71603))

(assert (=> b!73764 m!71603))

(declare-fun m!72551 () Bool)

(assert (=> b!73764 m!72551))

(assert (=> b!73761 m!71603))

(assert (=> b!73761 m!71603))

(assert (=> b!73761 m!71605))

(declare-fun m!72553 () Bool)

(assert (=> b!73763 m!72553))

(assert (=> b!73765 m!71603))

(assert (=> b!73765 m!71603))

(assert (=> b!73765 m!71605))

(assert (=> b!73536 d!17141))

(declare-fun b!73772 () Bool)

(declare-fun e!48222 () Option!140)

(declare-fun e!48223 () Option!140)

(assert (=> b!73772 (= e!48222 e!48223)))

(declare-fun c!11014 () Bool)

(assert (=> b!73772 (= c!11014 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32583))) (not (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32583)))) (_1!1071 lt!32485)))))))

(declare-fun b!73771 () Bool)

(assert (=> b!73771 (= e!48222 (Some!139 (_2!1071 (h!2057 (t!5023 (toList!716 lt!32583))))))))

(declare-fun d!17143 () Bool)

(declare-fun c!11013 () Bool)

(assert (=> d!17143 (= c!11013 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32583))) (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32583)))) (_1!1071 lt!32485))))))

(assert (=> d!17143 (= (getValueByKey!134 (t!5023 (toList!716 lt!32583)) (_1!1071 lt!32485)) e!48222)))

(declare-fun b!73773 () Bool)

(assert (=> b!73773 (= e!48223 (getValueByKey!134 (t!5023 (t!5023 (toList!716 lt!32583))) (_1!1071 lt!32485)))))

(declare-fun b!73774 () Bool)

(assert (=> b!73774 (= e!48223 None!138)))

(assert (= (and d!17143 c!11013) b!73771))

(assert (= (and d!17143 (not c!11013)) b!73772))

(assert (= (and b!73772 c!11014) b!73773))

(assert (= (and b!73772 (not c!11014)) b!73774))

(declare-fun m!72555 () Bool)

(assert (=> b!73773 m!72555))

(assert (=> b!73588 d!17143))

(assert (=> b!73549 d!17105))

(declare-fun d!17145 () Bool)

(assert (=> d!17145 (= (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661)) (not (isEmpty!323 (getValueByKey!134 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661))))))

(declare-fun bs!3182 () Bool)

(assert (= bs!3182 d!17145))

(assert (=> bs!3182 m!71907))

(declare-fun m!72557 () Bool)

(assert (=> bs!3182 m!72557))

(assert (=> b!73468 d!17145))

(declare-fun b!73776 () Bool)

(declare-fun e!48224 () Option!140)

(declare-fun e!48225 () Option!140)

(assert (=> b!73776 (= e!48224 e!48225)))

(declare-fun c!11016 () Bool)

(assert (=> b!73776 (= c!11016 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (not (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32661))))))

(declare-fun b!73775 () Bool)

(assert (=> b!73775 (= e!48224 (Some!139 (_2!1071 (h!2057 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))))

(declare-fun c!11015 () Bool)

(declare-fun d!17147 () Bool)

(assert (=> d!17147 (= c!11015 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32661)))))

(assert (=> d!17147 (= (getValueByKey!134 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661) e!48224)))

(declare-fun b!73777 () Bool)

(assert (=> b!73777 (= e!48225 (getValueByKey!134 (t!5023 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) lt!32661))))

(declare-fun b!73778 () Bool)

(assert (=> b!73778 (= e!48225 None!138)))

(assert (= (and d!17147 c!11015) b!73775))

(assert (= (and d!17147 (not c!11015)) b!73776))

(assert (= (and b!73776 c!11016) b!73777))

(assert (= (and b!73776 (not c!11016)) b!73778))

(declare-fun m!72559 () Bool)

(assert (=> b!73777 m!72559))

(assert (=> b!73468 d!17147))

(declare-fun d!17149 () Bool)

(assert (=> d!17149 (= (validMask!0 (mask!6179 newMap!16)) (and (or (= (mask!6179 newMap!16) #b00000000000000000000000000000111) (= (mask!6179 newMap!16) #b00000000000000000000000000001111) (= (mask!6179 newMap!16) #b00000000000000000000000000011111) (= (mask!6179 newMap!16) #b00000000000000000000000000111111) (= (mask!6179 newMap!16) #b00000000000000000000000001111111) (= (mask!6179 newMap!16) #b00000000000000000000000011111111) (= (mask!6179 newMap!16) #b00000000000000000000000111111111) (= (mask!6179 newMap!16) #b00000000000000000000001111111111) (= (mask!6179 newMap!16) #b00000000000000000000011111111111) (= (mask!6179 newMap!16) #b00000000000000000000111111111111) (= (mask!6179 newMap!16) #b00000000000000000001111111111111) (= (mask!6179 newMap!16) #b00000000000000000011111111111111) (= (mask!6179 newMap!16) #b00000000000000000111111111111111) (= (mask!6179 newMap!16) #b00000000000000001111111111111111) (= (mask!6179 newMap!16) #b00000000000000011111111111111111) (= (mask!6179 newMap!16) #b00000000000000111111111111111111) (= (mask!6179 newMap!16) #b00000000000001111111111111111111) (= (mask!6179 newMap!16) #b00000000000011111111111111111111) (= (mask!6179 newMap!16) #b00000000000111111111111111111111) (= (mask!6179 newMap!16) #b00000000001111111111111111111111) (= (mask!6179 newMap!16) #b00000000011111111111111111111111) (= (mask!6179 newMap!16) #b00000000111111111111111111111111) (= (mask!6179 newMap!16) #b00000001111111111111111111111111) (= (mask!6179 newMap!16) #b00000011111111111111111111111111) (= (mask!6179 newMap!16) #b00000111111111111111111111111111) (= (mask!6179 newMap!16) #b00001111111111111111111111111111) (= (mask!6179 newMap!16) #b00011111111111111111111111111111) (= (mask!6179 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6179 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!17001 d!17149))

(declare-fun b!73780 () Bool)

(declare-fun e!48226 () Option!140)

(declare-fun e!48227 () Option!140)

(assert (=> b!73780 (= e!48226 e!48227)))

(declare-fun c!11018 () Bool)

(assert (=> b!73780 (= c!11018 (and ((_ is Cons!1470) (toList!716 lt!33118)) (not (= (_1!1071 (h!2057 (toList!716 lt!33118))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun b!73779 () Bool)

(assert (=> b!73779 (= e!48226 (Some!139 (_2!1071 (h!2057 (toList!716 lt!33118)))))))

(declare-fun d!17151 () Bool)

(declare-fun c!11017 () Bool)

(assert (=> d!17151 (= c!11017 (and ((_ is Cons!1470) (toList!716 lt!33118)) (= (_1!1071 (h!2057 (toList!716 lt!33118))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17151 (= (getValueByKey!134 (toList!716 lt!33118) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) e!48226)))

(declare-fun b!73781 () Bool)

(assert (=> b!73781 (= e!48227 (getValueByKey!134 (t!5023 (toList!716 lt!33118)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!73782 () Bool)

(assert (=> b!73782 (= e!48227 None!138)))

(assert (= (and d!17151 c!11017) b!73779))

(assert (= (and d!17151 (not c!11017)) b!73780))

(assert (= (and b!73780 c!11018) b!73781))

(assert (= (and b!73780 (not c!11018)) b!73782))

(declare-fun m!72561 () Bool)

(assert (=> b!73781 m!72561))

(assert (=> b!73643 d!17151))

(declare-fun d!17153 () Bool)

(assert (=> d!17153 (= ($colon$colon!65 e!47953 (ite c!10901 (h!2057 (toList!716 (+!93 lt!32489 lt!32492))) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485)))) (Cons!1470 (ite c!10901 (h!2057 (toList!716 (+!93 lt!32489 lt!32492))) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))) e!47953))))

(assert (=> bm!6435 d!17153))

(declare-fun d!17155 () Bool)

(assert (=> d!17155 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3183 () Bool)

(assert (= bs!3183 d!17155))

(assert (=> bs!3183 m!71549))

(declare-fun m!72563 () Bool)

(assert (=> bs!3183 m!72563))

(assert (=> b!73243 d!17155))

(declare-fun b!73784 () Bool)

(declare-fun e!48228 () Option!140)

(declare-fun e!48229 () Option!140)

(assert (=> b!73784 (= e!48228 e!48229)))

(declare-fun c!11020 () Bool)

(assert (=> b!73784 (= c!11020 (and ((_ is Cons!1470) (toList!716 lt!32614)) (not (= (_1!1071 (h!2057 (toList!716 lt!32614))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73783 () Bool)

(assert (=> b!73783 (= e!48228 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32614)))))))

(declare-fun d!17157 () Bool)

(declare-fun c!11019 () Bool)

(assert (=> d!17157 (= c!11019 (and ((_ is Cons!1470) (toList!716 lt!32614)) (= (_1!1071 (h!2057 (toList!716 lt!32614))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17157 (= (getValueByKey!134 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000) e!48228)))

(declare-fun b!73785 () Bool)

(assert (=> b!73785 (= e!48229 (getValueByKey!134 (t!5023 (toList!716 lt!32614)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73786 () Bool)

(assert (=> b!73786 (= e!48229 None!138)))

(assert (= (and d!17157 c!11019) b!73783))

(assert (= (and d!17157 (not c!11019)) b!73784))

(assert (= (and b!73784 c!11020) b!73785))

(assert (= (and b!73784 (not c!11020)) b!73786))

(declare-fun m!72565 () Bool)

(assert (=> b!73785 m!72565))

(assert (=> b!73243 d!17157))

(declare-fun lt!33193 () Bool)

(declare-fun d!17159 () Bool)

(assert (=> d!17159 (= lt!33193 (select (content!78 (toList!716 lt!32847)) (tuple2!2121 lt!32612 lt!32616)))))

(declare-fun e!48231 () Bool)

(assert (=> d!17159 (= lt!33193 e!48231)))

(declare-fun res!39088 () Bool)

(assert (=> d!17159 (=> (not res!39088) (not e!48231))))

(assert (=> d!17159 (= res!39088 ((_ is Cons!1470) (toList!716 lt!32847)))))

(assert (=> d!17159 (= (contains!721 (toList!716 lt!32847) (tuple2!2121 lt!32612 lt!32616)) lt!33193)))

(declare-fun b!73787 () Bool)

(declare-fun e!48230 () Bool)

(assert (=> b!73787 (= e!48231 e!48230)))

(declare-fun res!39089 () Bool)

(assert (=> b!73787 (=> res!39089 e!48230)))

(assert (=> b!73787 (= res!39089 (= (h!2057 (toList!716 lt!32847)) (tuple2!2121 lt!32612 lt!32616)))))

(declare-fun b!73788 () Bool)

(assert (=> b!73788 (= e!48230 (contains!721 (t!5023 (toList!716 lt!32847)) (tuple2!2121 lt!32612 lt!32616)))))

(assert (= (and d!17159 res!39088) b!73787))

(assert (= (and b!73787 (not res!39089)) b!73788))

(declare-fun m!72567 () Bool)

(assert (=> d!17159 m!72567))

(declare-fun m!72569 () Bool)

(assert (=> d!17159 m!72569))

(declare-fun m!72571 () Bool)

(assert (=> b!73788 m!72571))

(assert (=> b!73363 d!17159))

(declare-fun d!17161 () Bool)

(assert (=> d!17161 (= (apply!75 lt!33035 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1153 (getValueByKey!134 (toList!716 lt!33035) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3184 () Bool)

(assert (= bs!3184 d!17161))

(declare-fun m!72573 () Bool)

(assert (=> bs!3184 m!72573))

(assert (=> bs!3184 m!72573))

(declare-fun m!72575 () Bool)

(assert (=> bs!3184 m!72575))

(assert (=> b!73543 d!17161))

(assert (=> d!17069 d!17067))

(declare-fun d!17163 () Bool)

(assert (=> d!17163 (= (getValueByKey!134 lt!32584 (_1!1071 lt!32485)) (Some!139 (_2!1071 lt!32485)))))

(assert (=> d!17163 true))

(declare-fun _$22!385 () Unit!2076)

(assert (=> d!17163 (= (choose!419 lt!32584 (_1!1071 lt!32485) (_2!1071 lt!32485)) _$22!385)))

(declare-fun bs!3185 () Bool)

(assert (= bs!3185 d!17163))

(assert (=> bs!3185 m!71325))

(assert (=> d!17069 d!17163))

(declare-fun d!17165 () Bool)

(declare-fun res!39094 () Bool)

(declare-fun e!48236 () Bool)

(assert (=> d!17165 (=> res!39094 e!48236)))

(assert (=> d!17165 (= res!39094 (or ((_ is Nil!1471) lt!32584) ((_ is Nil!1471) (t!5023 lt!32584))))))

(assert (=> d!17165 (= (isStrictlySorted!279 lt!32584) e!48236)))

(declare-fun b!73793 () Bool)

(declare-fun e!48237 () Bool)

(assert (=> b!73793 (= e!48236 e!48237)))

(declare-fun res!39095 () Bool)

(assert (=> b!73793 (=> (not res!39095) (not e!48237))))

(assert (=> b!73793 (= res!39095 (bvslt (_1!1071 (h!2057 lt!32584)) (_1!1071 (h!2057 (t!5023 lt!32584)))))))

(declare-fun b!73794 () Bool)

(assert (=> b!73794 (= e!48237 (isStrictlySorted!279 (t!5023 lt!32584)))))

(assert (= (and d!17165 (not res!39094)) b!73793))

(assert (= (and b!73793 res!39095) b!73794))

(declare-fun m!72577 () Bool)

(assert (=> b!73794 m!72577))

(assert (=> d!17069 d!17165))

(declare-fun d!17167 () Bool)

(declare-fun e!48238 () Bool)

(assert (=> d!17167 e!48238))

(declare-fun res!39096 () Bool)

(assert (=> d!17167 (=> res!39096 e!48238)))

(declare-fun lt!33195 () Bool)

(assert (=> d!17167 (= res!39096 (not lt!33195))))

(declare-fun lt!33197 () Bool)

(assert (=> d!17167 (= lt!33195 lt!33197)))

(declare-fun lt!33196 () Unit!2076)

(declare-fun e!48239 () Unit!2076)

(assert (=> d!17167 (= lt!33196 e!48239)))

(declare-fun c!11021 () Bool)

(assert (=> d!17167 (= c!11021 lt!33197)))

(assert (=> d!17167 (= lt!33197 (containsKey!137 (toList!716 lt!33118) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17167 (= (contains!720 lt!33118 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33195)))

(declare-fun b!73795 () Bool)

(declare-fun lt!33194 () Unit!2076)

(assert (=> b!73795 (= e!48239 lt!33194)))

(assert (=> b!73795 (= lt!33194 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33118) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> b!73795 (isDefined!86 (getValueByKey!134 (toList!716 lt!33118) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!73796 () Bool)

(declare-fun Unit!2113 () Unit!2076)

(assert (=> b!73796 (= e!48239 Unit!2113)))

(declare-fun b!73797 () Bool)

(assert (=> b!73797 (= e!48238 (isDefined!86 (getValueByKey!134 (toList!716 lt!33118) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (= (and d!17167 c!11021) b!73795))

(assert (= (and d!17167 (not c!11021)) b!73796))

(assert (= (and d!17167 (not res!39096)) b!73797))

(declare-fun m!72579 () Bool)

(assert (=> d!17167 m!72579))

(declare-fun m!72581 () Bool)

(assert (=> b!73795 m!72581))

(assert (=> b!73795 m!72245))

(assert (=> b!73795 m!72245))

(declare-fun m!72583 () Bool)

(assert (=> b!73795 m!72583))

(assert (=> b!73797 m!72245))

(assert (=> b!73797 m!72245))

(assert (=> b!73797 m!72583))

(assert (=> d!17053 d!17167))

(declare-fun b!73799 () Bool)

(declare-fun e!48240 () Option!140)

(declare-fun e!48241 () Option!140)

(assert (=> b!73799 (= e!48240 e!48241)))

(declare-fun c!11023 () Bool)

(assert (=> b!73799 (= c!11023 (and ((_ is Cons!1470) lt!33119) (not (= (_1!1071 (h!2057 lt!33119)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun b!73798 () Bool)

(assert (=> b!73798 (= e!48240 (Some!139 (_2!1071 (h!2057 lt!33119))))))

(declare-fun d!17169 () Bool)

(declare-fun c!11022 () Bool)

(assert (=> d!17169 (= c!11022 (and ((_ is Cons!1470) lt!33119) (= (_1!1071 (h!2057 lt!33119)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17169 (= (getValueByKey!134 lt!33119 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) e!48240)))

(declare-fun b!73800 () Bool)

(assert (=> b!73800 (= e!48241 (getValueByKey!134 (t!5023 lt!33119) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!73801 () Bool)

(assert (=> b!73801 (= e!48241 None!138)))

(assert (= (and d!17169 c!11022) b!73798))

(assert (= (and d!17169 (not c!11022)) b!73799))

(assert (= (and b!73799 c!11023) b!73800))

(assert (= (and b!73799 (not c!11023)) b!73801))

(declare-fun m!72585 () Bool)

(assert (=> b!73800 m!72585))

(assert (=> d!17053 d!17169))

(declare-fun d!17171 () Bool)

(assert (=> d!17171 (= (getValueByKey!134 lt!33119 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun lt!33198 () Unit!2076)

(assert (=> d!17171 (= lt!33198 (choose!419 lt!33119 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun e!48242 () Bool)

(assert (=> d!17171 e!48242))

(declare-fun res!39097 () Bool)

(assert (=> d!17171 (=> (not res!39097) (not e!48242))))

(assert (=> d!17171 (= res!39097 (isStrictlySorted!279 lt!33119))))

(assert (=> d!17171 (= (lemmaContainsTupThenGetReturnValue!51 lt!33119 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33198)))

(declare-fun b!73802 () Bool)

(declare-fun res!39098 () Bool)

(assert (=> b!73802 (=> (not res!39098) (not e!48242))))

(assert (=> b!73802 (= res!39098 (containsKey!137 lt!33119 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!73803 () Bool)

(assert (=> b!73803 (= e!48242 (contains!721 lt!33119 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (= (and d!17171 res!39097) b!73802))

(assert (= (and b!73802 res!39098) b!73803))

(assert (=> d!17171 m!72239))

(declare-fun m!72587 () Bool)

(assert (=> d!17171 m!72587))

(declare-fun m!72589 () Bool)

(assert (=> d!17171 m!72589))

(declare-fun m!72591 () Bool)

(assert (=> b!73802 m!72591))

(declare-fun m!72593 () Bool)

(assert (=> b!73803 m!72593))

(assert (=> d!17053 d!17171))

(declare-fun e!48247 () List!1474)

(declare-fun b!73804 () Bool)

(assert (=> b!73804 (= e!48247 (insertStrictlySorted!54 (t!5023 (toList!716 lt!32489)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!73805 () Bool)

(declare-fun c!11025 () Bool)

(declare-fun c!11024 () Bool)

(assert (=> b!73805 (= e!48247 (ite c!11025 (t!5023 (toList!716 lt!32489)) (ite c!11024 (Cons!1470 (h!2057 (toList!716 lt!32489)) (t!5023 (toList!716 lt!32489))) Nil!1471)))))

(declare-fun bm!6499 () Bool)

(declare-fun call!6503 () List!1474)

(declare-fun call!6504 () List!1474)

(assert (=> bm!6499 (= call!6503 call!6504)))

(declare-fun lt!33199 () List!1474)

(declare-fun e!48246 () Bool)

(declare-fun b!73806 () Bool)

(assert (=> b!73806 (= e!48246 (contains!721 lt!33199 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!73807 () Bool)

(declare-fun e!48243 () List!1474)

(assert (=> b!73807 (= e!48243 call!6503)))

(declare-fun b!73808 () Bool)

(declare-fun e!48244 () List!1474)

(declare-fun e!48245 () List!1474)

(assert (=> b!73808 (= e!48244 e!48245)))

(assert (=> b!73808 (= c!11025 (and ((_ is Cons!1470) (toList!716 lt!32489)) (= (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun d!17173 () Bool)

(assert (=> d!17173 e!48246))

(declare-fun res!39099 () Bool)

(assert (=> d!17173 (=> (not res!39099) (not e!48246))))

(assert (=> d!17173 (= res!39099 (isStrictlySorted!279 lt!33199))))

(assert (=> d!17173 (= lt!33199 e!48244)))

(declare-fun c!11026 () Bool)

(assert (=> d!17173 (= c!11026 (and ((_ is Cons!1470) (toList!716 lt!32489)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17173 (isStrictlySorted!279 (toList!716 lt!32489))))

(assert (=> d!17173 (= (insertStrictlySorted!54 (toList!716 lt!32489) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33199)))

(declare-fun bm!6500 () Bool)

(declare-fun call!6502 () List!1474)

(assert (=> bm!6500 (= call!6502 ($colon$colon!65 e!48247 (ite c!11026 (h!2057 (toList!716 lt!32489)) (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun c!11027 () Bool)

(assert (=> bm!6500 (= c!11027 c!11026)))

(declare-fun b!73809 () Bool)

(assert (=> b!73809 (= e!48245 call!6504)))

(declare-fun b!73810 () Bool)

(assert (=> b!73810 (= e!48243 call!6503)))

(declare-fun b!73811 () Bool)

(assert (=> b!73811 (= c!11024 (and ((_ is Cons!1470) (toList!716 lt!32489)) (bvsgt (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> b!73811 (= e!48245 e!48243)))

(declare-fun b!73812 () Bool)

(assert (=> b!73812 (= e!48244 call!6502)))

(declare-fun bm!6501 () Bool)

(assert (=> bm!6501 (= call!6504 call!6502)))

(declare-fun b!73813 () Bool)

(declare-fun res!39100 () Bool)

(assert (=> b!73813 (=> (not res!39100) (not e!48246))))

(assert (=> b!73813 (= res!39100 (containsKey!137 lt!33199 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (= (and d!17173 c!11026) b!73812))

(assert (= (and d!17173 (not c!11026)) b!73808))

(assert (= (and b!73808 c!11025) b!73809))

(assert (= (and b!73808 (not c!11025)) b!73811))

(assert (= (and b!73811 c!11024) b!73807))

(assert (= (and b!73811 (not c!11024)) b!73810))

(assert (= (or b!73807 b!73810) bm!6499))

(assert (= (or b!73809 bm!6499) bm!6501))

(assert (= (or b!73812 bm!6501) bm!6500))

(assert (= (and bm!6500 c!11027) b!73804))

(assert (= (and bm!6500 (not c!11027)) b!73805))

(assert (= (and d!17173 res!39099) b!73813))

(assert (= (and b!73813 res!39100) b!73806))

(declare-fun m!72595 () Bool)

(assert (=> b!73804 m!72595))

(declare-fun m!72597 () Bool)

(assert (=> b!73806 m!72597))

(declare-fun m!72599 () Bool)

(assert (=> d!17173 m!72599))

(assert (=> d!17173 m!71799))

(declare-fun m!72601 () Bool)

(assert (=> bm!6500 m!72601))

(declare-fun m!72603 () Bool)

(assert (=> b!73813 m!72603))

(assert (=> d!17053 d!17173))

(assert (=> b!73382 d!17105))

(declare-fun d!17175 () Bool)

(declare-fun res!39101 () Bool)

(declare-fun e!48248 () Bool)

(assert (=> d!17175 (=> res!39101 e!48248)))

(assert (=> d!17175 (= res!39101 (or ((_ is Nil!1471) lt!33143) ((_ is Nil!1471) (t!5023 lt!33143))))))

(assert (=> d!17175 (= (isStrictlySorted!279 lt!33143) e!48248)))

(declare-fun b!73814 () Bool)

(declare-fun e!48249 () Bool)

(assert (=> b!73814 (= e!48248 e!48249)))

(declare-fun res!39102 () Bool)

(assert (=> b!73814 (=> (not res!39102) (not e!48249))))

(assert (=> b!73814 (= res!39102 (bvslt (_1!1071 (h!2057 lt!33143)) (_1!1071 (h!2057 (t!5023 lt!33143)))))))

(declare-fun b!73815 () Bool)

(assert (=> b!73815 (= e!48249 (isStrictlySorted!279 (t!5023 lt!33143)))))

(assert (= (and d!17175 (not res!39101)) b!73814))

(assert (= (and b!73814 res!39102) b!73815))

(declare-fun m!72605 () Bool)

(assert (=> b!73815 m!72605))

(assert (=> d!17091 d!17175))

(declare-fun d!17177 () Bool)

(declare-fun res!39103 () Bool)

(declare-fun e!48250 () Bool)

(assert (=> d!17177 (=> res!39103 e!48250)))

(assert (=> d!17177 (= res!39103 (or ((_ is Nil!1471) (toList!716 (+!93 lt!32489 lt!32485))) ((_ is Nil!1471) (t!5023 (toList!716 (+!93 lt!32489 lt!32485))))))))

(assert (=> d!17177 (= (isStrictlySorted!279 (toList!716 (+!93 lt!32489 lt!32485))) e!48250)))

(declare-fun b!73816 () Bool)

(declare-fun e!48251 () Bool)

(assert (=> b!73816 (= e!48250 e!48251)))

(declare-fun res!39104 () Bool)

(assert (=> b!73816 (=> (not res!39104) (not e!48251))))

(assert (=> b!73816 (= res!39104 (bvslt (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 lt!32485)))) (_1!1071 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32485)))))))))

(declare-fun b!73817 () Bool)

(assert (=> b!73817 (= e!48251 (isStrictlySorted!279 (t!5023 (toList!716 (+!93 lt!32489 lt!32485)))))))

(assert (= (and d!17177 (not res!39103)) b!73816))

(assert (= (and b!73816 res!39104) b!73817))

(declare-fun m!72607 () Bool)

(assert (=> b!73817 m!72607))

(assert (=> d!17091 d!17177))

(declare-fun d!17179 () Bool)

(declare-fun res!39105 () Bool)

(declare-fun e!48252 () Bool)

(assert (=> d!17179 (=> res!39105 e!48252)))

(assert (=> d!17179 (= res!39105 (and ((_ is Cons!1470) lt!32886) (= (_1!1071 (h!2057 lt!32886)) (_1!1071 lt!32492))))))

(assert (=> d!17179 (= (containsKey!137 lt!32886 (_1!1071 lt!32492)) e!48252)))

(declare-fun b!73818 () Bool)

(declare-fun e!48253 () Bool)

(assert (=> b!73818 (= e!48252 e!48253)))

(declare-fun res!39106 () Bool)

(assert (=> b!73818 (=> (not res!39106) (not e!48253))))

(assert (=> b!73818 (= res!39106 (and (or (not ((_ is Cons!1470) lt!32886)) (bvsle (_1!1071 (h!2057 lt!32886)) (_1!1071 lt!32492))) ((_ is Cons!1470) lt!32886) (bvslt (_1!1071 (h!2057 lt!32886)) (_1!1071 lt!32492))))))

(declare-fun b!73819 () Bool)

(assert (=> b!73819 (= e!48253 (containsKey!137 (t!5023 lt!32886) (_1!1071 lt!32492)))))

(assert (= (and d!17179 (not res!39105)) b!73818))

(assert (= (and b!73818 res!39106) b!73819))

(declare-fun m!72609 () Bool)

(assert (=> b!73819 m!72609))

(assert (=> b!73436 d!17179))

(declare-fun b!73820 () Bool)

(declare-fun e!48256 () Bool)

(declare-fun e!48257 () Bool)

(assert (=> b!73820 (= e!48256 e!48257)))

(declare-fun res!39108 () Bool)

(assert (=> b!73820 (=> (not res!39108) (not e!48257))))

(declare-fun e!48255 () Bool)

(assert (=> b!73820 (= res!39108 (not e!48255))))

(declare-fun res!39109 () Bool)

(assert (=> b!73820 (=> (not res!39109) (not e!48255))))

(assert (=> b!73820 (= res!39109 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6502 () Bool)

(declare-fun call!6505 () Bool)

(declare-fun c!11028 () Bool)

(assert (=> bm!6502 (= call!6505 (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!11028 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000) Nil!1470) Nil!1470)))))

(declare-fun b!73821 () Bool)

(declare-fun e!48254 () Bool)

(assert (=> b!73821 (= e!48257 e!48254)))

(assert (=> b!73821 (= c!11028 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!17181 () Bool)

(declare-fun res!39107 () Bool)

(assert (=> d!17181 (=> res!39107 e!48256)))

(assert (=> d!17181 (= res!39107 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!17181 (= (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000 Nil!1470) e!48256)))

(declare-fun b!73822 () Bool)

(assert (=> b!73822 (= e!48254 call!6505)))

(declare-fun b!73823 () Bool)

(assert (=> b!73823 (= e!48254 call!6505)))

(declare-fun b!73824 () Bool)

(assert (=> b!73824 (= e!48255 (contains!722 Nil!1470 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!17181 (not res!39107)) b!73820))

(assert (= (and b!73820 res!39109) b!73824))

(assert (= (and b!73820 res!39108) b!73821))

(assert (= (and b!73821 c!11028) b!73823))

(assert (= (and b!73821 (not c!11028)) b!73822))

(assert (= (or b!73823 b!73822) bm!6502))

(declare-fun m!72611 () Bool)

(assert (=> b!73820 m!72611))

(assert (=> b!73820 m!72611))

(declare-fun m!72613 () Bool)

(assert (=> b!73820 m!72613))

(assert (=> bm!6502 m!72611))

(declare-fun m!72615 () Bool)

(assert (=> bm!6502 m!72615))

(assert (=> b!73821 m!72611))

(assert (=> b!73821 m!72611))

(assert (=> b!73821 m!72613))

(assert (=> b!73824 m!72611))

(assert (=> b!73824 m!72611))

(declare-fun m!72617 () Bool)

(assert (=> b!73824 m!72617))

(assert (=> b!73529 d!17181))

(declare-fun d!17183 () Bool)

(declare-fun e!48258 () Bool)

(assert (=> d!17183 e!48258))

(declare-fun res!39110 () Bool)

(assert (=> d!17183 (=> res!39110 e!48258)))

(declare-fun lt!33201 () Bool)

(assert (=> d!17183 (= res!39110 (not lt!33201))))

(declare-fun lt!33203 () Bool)

(assert (=> d!17183 (= lt!33201 lt!33203)))

(declare-fun lt!33202 () Unit!2076)

(declare-fun e!48259 () Unit!2076)

(assert (=> d!17183 (= lt!33202 e!48259)))

(declare-fun c!11029 () Bool)

(assert (=> d!17183 (= c!11029 lt!33203)))

(assert (=> d!17183 (= lt!33203 (containsKey!137 (toList!716 (map!1160 (_2!1072 lt!33009))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!17183 (= (contains!720 (map!1160 (_2!1072 lt!33009)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) lt!33201)))

(declare-fun b!73825 () Bool)

(declare-fun lt!33200 () Unit!2076)

(assert (=> b!73825 (= e!48259 lt!33200)))

(assert (=> b!73825 (= lt!33200 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (map!1160 (_2!1072 lt!33009))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> b!73825 (isDefined!86 (getValueByKey!134 (toList!716 (map!1160 (_2!1072 lt!33009))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73826 () Bool)

(declare-fun Unit!2114 () Unit!2076)

(assert (=> b!73826 (= e!48259 Unit!2114)))

(declare-fun b!73827 () Bool)

(assert (=> b!73827 (= e!48258 (isDefined!86 (getValueByKey!134 (toList!716 (map!1160 (_2!1072 lt!33009))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (= (and d!17183 c!11029) b!73825))

(assert (= (and d!17183 (not c!11029)) b!73826))

(assert (= (and d!17183 (not res!39110)) b!73827))

(assert (=> d!17183 m!71143))

(declare-fun m!72619 () Bool)

(assert (=> d!17183 m!72619))

(assert (=> b!73825 m!71143))

(declare-fun m!72621 () Bool)

(assert (=> b!73825 m!72621))

(assert (=> b!73825 m!71143))

(declare-fun m!72623 () Bool)

(assert (=> b!73825 m!72623))

(assert (=> b!73825 m!72623))

(declare-fun m!72625 () Bool)

(assert (=> b!73825 m!72625))

(assert (=> b!73827 m!71143))

(assert (=> b!73827 m!72623))

(assert (=> b!73827 m!72623))

(assert (=> b!73827 m!72625))

(assert (=> b!73511 d!17183))

(declare-fun d!17185 () Bool)

(assert (=> d!17185 (= (map!1160 (_2!1072 lt!33009)) (getCurrentListMap!414 (_keys!3864 (_2!1072 lt!33009)) (_values!2195 (_2!1072 lt!33009)) (mask!6179 (_2!1072 lt!33009)) (extraKeys!2071 (_2!1072 lt!33009)) (zeroValue!2114 (_2!1072 lt!33009)) (minValue!2114 (_2!1072 lt!33009)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!33009))))))

(declare-fun bs!3186 () Bool)

(assert (= bs!3186 d!17185))

(declare-fun m!72627 () Bool)

(assert (=> bs!3186 m!72627))

(assert (=> b!73511 d!17185))

(declare-fun b!73829 () Bool)

(declare-fun e!48260 () Option!140)

(declare-fun e!48261 () Option!140)

(assert (=> b!73829 (= e!48260 e!48261)))

(declare-fun c!11031 () Bool)

(assert (=> b!73829 (= c!11031 (and ((_ is Cons!1470) (toList!716 lt!32926)) (not (= (_1!1071 (h!2057 (toList!716 lt!32926))) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!73828 () Bool)

(assert (=> b!73828 (= e!48260 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32926)))))))

(declare-fun d!17187 () Bool)

(declare-fun c!11030 () Bool)

(assert (=> d!17187 (= c!11030 (and ((_ is Cons!1470) (toList!716 lt!32926)) (= (_1!1071 (h!2057 (toList!716 lt!32926))) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17187 (= (getValueByKey!134 (toList!716 lt!32926) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48260)))

(declare-fun b!73830 () Bool)

(assert (=> b!73830 (= e!48261 (getValueByKey!134 (t!5023 (toList!716 lt!32926)) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73831 () Bool)

(assert (=> b!73831 (= e!48261 None!138)))

(assert (= (and d!17187 c!11030) b!73828))

(assert (= (and d!17187 (not c!11030)) b!73829))

(assert (= (and b!73829 c!11031) b!73830))

(assert (= (and b!73829 (not c!11031)) b!73831))

(declare-fun m!72629 () Bool)

(assert (=> b!73830 m!72629))

(assert (=> b!73469 d!17187))

(declare-fun b!73832 () Bool)

(declare-fun e!48263 () Bool)

(declare-fun call!6506 () Bool)

(assert (=> b!73832 (= e!48263 call!6506)))

(declare-fun b!73833 () Bool)

(declare-fun e!48264 () Bool)

(assert (=> b!73833 (= e!48263 e!48264)))

(declare-fun lt!33205 () (_ BitVec 64))

(assert (=> b!73833 (= lt!33205 (select (arr!1850 (_keys!3864 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!33204 () Unit!2076)

(assert (=> b!73833 (= lt!33204 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3864 newMap!16) lt!33205 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!73833 (arrayContainsKey!0 (_keys!3864 newMap!16) lt!33205 #b00000000000000000000000000000000)))

(declare-fun lt!33206 () Unit!2076)

(assert (=> b!73833 (= lt!33206 lt!33204)))

(declare-fun res!39111 () Bool)

(assert (=> b!73833 (= res!39111 (= (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3864 newMap!16) (mask!6179 newMap!16)) (Found!230 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!73833 (=> (not res!39111) (not e!48264))))

(declare-fun d!17189 () Bool)

(declare-fun res!39112 () Bool)

(declare-fun e!48262 () Bool)

(assert (=> d!17189 (=> res!39112 e!48262)))

(assert (=> d!17189 (= res!39112 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17189 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3864 newMap!16) (mask!6179 newMap!16)) e!48262)))

(declare-fun b!73834 () Bool)

(assert (=> b!73834 (= e!48262 e!48263)))

(declare-fun c!11032 () Bool)

(assert (=> b!73834 (= c!11032 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!6503 () Bool)

(assert (=> bm!6503 (= call!6506 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun b!73835 () Bool)

(assert (=> b!73835 (= e!48264 call!6506)))

(assert (= (and d!17189 (not res!39112)) b!73834))

(assert (= (and b!73834 c!11032) b!73833))

(assert (= (and b!73834 (not c!11032)) b!73832))

(assert (= (and b!73833 res!39111) b!73835))

(assert (= (or b!73835 b!73832) bm!6503))

(declare-fun m!72631 () Bool)

(assert (=> b!73833 m!72631))

(declare-fun m!72633 () Bool)

(assert (=> b!73833 m!72633))

(declare-fun m!72635 () Bool)

(assert (=> b!73833 m!72635))

(assert (=> b!73833 m!72631))

(declare-fun m!72637 () Bool)

(assert (=> b!73833 m!72637))

(assert (=> b!73834 m!72631))

(assert (=> b!73834 m!72631))

(declare-fun m!72639 () Bool)

(assert (=> b!73834 m!72639))

(declare-fun m!72641 () Bool)

(assert (=> bm!6503 m!72641))

(assert (=> bm!6485 d!17189))

(assert (=> d!17089 d!17087))

(declare-fun d!17191 () Bool)

(assert (=> d!17191 (= (getValueByKey!134 lt!32591 (_1!1071 lt!32492)) (Some!139 (_2!1071 lt!32492)))))

(assert (=> d!17191 true))

(declare-fun _$22!386 () Unit!2076)

(assert (=> d!17191 (= (choose!419 lt!32591 (_1!1071 lt!32492) (_2!1071 lt!32492)) _$22!386)))

(declare-fun bs!3187 () Bool)

(assert (= bs!3187 d!17191))

(assert (=> bs!3187 m!71347))

(assert (=> d!17089 d!17191))

(declare-fun d!17193 () Bool)

(declare-fun res!39113 () Bool)

(declare-fun e!48265 () Bool)

(assert (=> d!17193 (=> res!39113 e!48265)))

(assert (=> d!17193 (= res!39113 (or ((_ is Nil!1471) lt!32591) ((_ is Nil!1471) (t!5023 lt!32591))))))

(assert (=> d!17193 (= (isStrictlySorted!279 lt!32591) e!48265)))

(declare-fun b!73836 () Bool)

(declare-fun e!48266 () Bool)

(assert (=> b!73836 (= e!48265 e!48266)))

(declare-fun res!39114 () Bool)

(assert (=> b!73836 (=> (not res!39114) (not e!48266))))

(assert (=> b!73836 (= res!39114 (bvslt (_1!1071 (h!2057 lt!32591)) (_1!1071 (h!2057 (t!5023 lt!32591)))))))

(declare-fun b!73837 () Bool)

(assert (=> b!73837 (= e!48266 (isStrictlySorted!279 (t!5023 lt!32591)))))

(assert (= (and d!17193 (not res!39113)) b!73836))

(assert (= (and b!73836 res!39114) b!73837))

(declare-fun m!72643 () Bool)

(assert (=> b!73837 m!72643))

(assert (=> d!17089 d!17193))

(declare-fun d!17195 () Bool)

(assert (=> d!17195 (= (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32682)) (v!2538 (getValueByKey!134 (toList!716 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32682)))))

(assert (=> d!16973 d!17195))

(declare-fun b!73839 () Bool)

(declare-fun e!48267 () Option!140)

(declare-fun e!48268 () Option!140)

(assert (=> b!73839 (= e!48267 e!48268)))

(declare-fun c!11034 () Bool)

(assert (=> b!73839 (= c!11034 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) (not (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32682))))))

(declare-fun b!73838 () Bool)

(assert (=> b!73838 (= e!48267 (Some!139 (_2!1071 (h!2057 (toList!716 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))))

(declare-fun d!17197 () Bool)

(declare-fun c!11033 () Bool)

(assert (=> d!17197 (= c!11033 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32682)))))

(assert (=> d!17197 (= (getValueByKey!134 (toList!716 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32682) e!48267)))

(declare-fun b!73840 () Bool)

(assert (=> b!73840 (= e!48268 (getValueByKey!134 (t!5023 (toList!716 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) lt!32682))))

(declare-fun b!73841 () Bool)

(assert (=> b!73841 (= e!48268 None!138)))

(assert (= (and d!17197 c!11033) b!73838))

(assert (= (and d!17197 (not c!11033)) b!73839))

(assert (= (and b!73839 c!11034) b!73840))

(assert (= (and b!73839 (not c!11034)) b!73841))

(declare-fun m!72645 () Bool)

(assert (=> b!73840 m!72645))

(assert (=> d!16973 d!17197))

(declare-fun d!17199 () Bool)

(declare-fun e!48269 () Bool)

(assert (=> d!17199 e!48269))

(declare-fun res!39115 () Bool)

(assert (=> d!17199 (=> res!39115 e!48269)))

(declare-fun lt!33208 () Bool)

(assert (=> d!17199 (= res!39115 (not lt!33208))))

(declare-fun lt!33210 () Bool)

(assert (=> d!17199 (= lt!33208 lt!33210)))

(declare-fun lt!33209 () Unit!2076)

(declare-fun e!48270 () Unit!2076)

(assert (=> d!17199 (= lt!33209 e!48270)))

(declare-fun c!11035 () Bool)

(assert (=> d!17199 (= c!11035 lt!33210)))

(assert (=> d!17199 (= lt!33210 (containsKey!137 (toList!716 lt!33092) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17199 (= (contains!720 lt!33092 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) lt!33208)))

(declare-fun b!73842 () Bool)

(declare-fun lt!33207 () Unit!2076)

(assert (=> b!73842 (= e!48270 lt!33207)))

(assert (=> b!73842 (= lt!33207 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33092) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> b!73842 (isDefined!86 (getValueByKey!134 (toList!716 lt!33092) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!73843 () Bool)

(declare-fun Unit!2115 () Unit!2076)

(assert (=> b!73843 (= e!48270 Unit!2115)))

(declare-fun b!73844 () Bool)

(assert (=> b!73844 (= e!48269 (isDefined!86 (getValueByKey!134 (toList!716 lt!33092) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(assert (= (and d!17199 c!11035) b!73842))

(assert (= (and d!17199 (not c!11035)) b!73843))

(assert (= (and d!17199 (not res!39115)) b!73844))

(declare-fun m!72647 () Bool)

(assert (=> d!17199 m!72647))

(declare-fun m!72649 () Bool)

(assert (=> b!73842 m!72649))

(assert (=> b!73842 m!72169))

(assert (=> b!73842 m!72169))

(declare-fun m!72651 () Bool)

(assert (=> b!73842 m!72651))

(assert (=> b!73844 m!72169))

(assert (=> b!73844 m!72169))

(assert (=> b!73844 m!72651))

(assert (=> d!17029 d!17199))

(declare-fun b!73846 () Bool)

(declare-fun e!48271 () Option!140)

(declare-fun e!48272 () Option!140)

(assert (=> b!73846 (= e!48271 e!48272)))

(declare-fun c!11037 () Bool)

(assert (=> b!73846 (= c!11037 (and ((_ is Cons!1470) lt!33093) (not (= (_1!1071 (h!2057 lt!33093)) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))))

(declare-fun b!73845 () Bool)

(assert (=> b!73845 (= e!48271 (Some!139 (_2!1071 (h!2057 lt!33093))))))

(declare-fun d!17201 () Bool)

(declare-fun c!11036 () Bool)

(assert (=> d!17201 (= c!11036 (and ((_ is Cons!1470) lt!33093) (= (_1!1071 (h!2057 lt!33093)) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(assert (=> d!17201 (= (getValueByKey!134 lt!33093 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) e!48271)))

(declare-fun b!73847 () Bool)

(assert (=> b!73847 (= e!48272 (getValueByKey!134 (t!5023 lt!33093) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!73848 () Bool)

(assert (=> b!73848 (= e!48272 None!138)))

(assert (= (and d!17201 c!11036) b!73845))

(assert (= (and d!17201 (not c!11036)) b!73846))

(assert (= (and b!73846 c!11037) b!73847))

(assert (= (and b!73846 (not c!11037)) b!73848))

(declare-fun m!72653 () Bool)

(assert (=> b!73847 m!72653))

(assert (=> d!17029 d!17201))

(declare-fun d!17203 () Bool)

(assert (=> d!17203 (= (getValueByKey!134 lt!33093 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) (Some!139 (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun lt!33211 () Unit!2076)

(assert (=> d!17203 (= lt!33211 (choose!419 lt!33093 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun e!48273 () Bool)

(assert (=> d!17203 e!48273))

(declare-fun res!39116 () Bool)

(assert (=> d!17203 (=> (not res!39116) (not e!48273))))

(assert (=> d!17203 (= res!39116 (isStrictlySorted!279 lt!33093))))

(assert (=> d!17203 (= (lemmaContainsTupThenGetReturnValue!51 lt!33093 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) lt!33211)))

(declare-fun b!73849 () Bool)

(declare-fun res!39117 () Bool)

(assert (=> b!73849 (=> (not res!39117) (not e!48273))))

(assert (=> b!73849 (= res!39117 (containsKey!137 lt!33093 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!73850 () Bool)

(assert (=> b!73850 (= e!48273 (contains!721 lt!33093 (tuple2!2121 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(assert (= (and d!17203 res!39116) b!73849))

(assert (= (and b!73849 res!39117) b!73850))

(assert (=> d!17203 m!72163))

(declare-fun m!72655 () Bool)

(assert (=> d!17203 m!72655))

(declare-fun m!72657 () Bool)

(assert (=> d!17203 m!72657))

(declare-fun m!72659 () Bool)

(assert (=> b!73849 m!72659))

(declare-fun m!72661 () Bool)

(assert (=> b!73850 m!72661))

(assert (=> d!17029 d!17203))

(declare-fun b!73851 () Bool)

(declare-fun e!48278 () List!1474)

(assert (=> b!73851 (= e!48278 (insertStrictlySorted!54 (t!5023 (toList!716 e!47887)) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!73852 () Bool)

(declare-fun c!11038 () Bool)

(declare-fun c!11039 () Bool)

(assert (=> b!73852 (= e!48278 (ite c!11039 (t!5023 (toList!716 e!47887)) (ite c!11038 (Cons!1470 (h!2057 (toList!716 e!47887)) (t!5023 (toList!716 e!47887))) Nil!1471)))))

(declare-fun bm!6504 () Bool)

(declare-fun call!6508 () List!1474)

(declare-fun call!6509 () List!1474)

(assert (=> bm!6504 (= call!6508 call!6509)))

(declare-fun e!48277 () Bool)

(declare-fun lt!33212 () List!1474)

(declare-fun b!73853 () Bool)

(assert (=> b!73853 (= e!48277 (contains!721 lt!33212 (tuple2!2121 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun b!73854 () Bool)

(declare-fun e!48274 () List!1474)

(assert (=> b!73854 (= e!48274 call!6508)))

(declare-fun b!73855 () Bool)

(declare-fun e!48275 () List!1474)

(declare-fun e!48276 () List!1474)

(assert (=> b!73855 (= e!48275 e!48276)))

(assert (=> b!73855 (= c!11039 (and ((_ is Cons!1470) (toList!716 e!47887)) (= (_1!1071 (h!2057 (toList!716 e!47887))) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun d!17205 () Bool)

(assert (=> d!17205 e!48277))

(declare-fun res!39118 () Bool)

(assert (=> d!17205 (=> (not res!39118) (not e!48277))))

(assert (=> d!17205 (= res!39118 (isStrictlySorted!279 lt!33212))))

(assert (=> d!17205 (= lt!33212 e!48275)))

(declare-fun c!11040 () Bool)

(assert (=> d!17205 (= c!11040 (and ((_ is Cons!1470) (toList!716 e!47887)) (bvslt (_1!1071 (h!2057 (toList!716 e!47887))) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(assert (=> d!17205 (isStrictlySorted!279 (toList!716 e!47887))))

(assert (=> d!17205 (= (insertStrictlySorted!54 (toList!716 e!47887) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) lt!33212)))

(declare-fun bm!6505 () Bool)

(declare-fun call!6507 () List!1474)

(assert (=> bm!6505 (= call!6507 ($colon$colon!65 e!48278 (ite c!11040 (h!2057 (toList!716 e!47887)) (tuple2!2121 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_2!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))))

(declare-fun c!11041 () Bool)

(assert (=> bm!6505 (= c!11041 c!11040)))

(declare-fun b!73856 () Bool)

(assert (=> b!73856 (= e!48276 call!6509)))

(declare-fun b!73857 () Bool)

(assert (=> b!73857 (= e!48274 call!6508)))

(declare-fun b!73858 () Bool)

(assert (=> b!73858 (= c!11038 (and ((_ is Cons!1470) (toList!716 e!47887)) (bvsgt (_1!1071 (h!2057 (toList!716 e!47887))) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(assert (=> b!73858 (= e!48276 e!48274)))

(declare-fun b!73859 () Bool)

(assert (=> b!73859 (= e!48275 call!6507)))

(declare-fun bm!6506 () Bool)

(assert (=> bm!6506 (= call!6509 call!6507)))

(declare-fun b!73860 () Bool)

(declare-fun res!39119 () Bool)

(assert (=> b!73860 (=> (not res!39119) (not e!48277))))

(assert (=> b!73860 (= res!39119 (containsKey!137 lt!33212 (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (= (and d!17205 c!11040) b!73859))

(assert (= (and d!17205 (not c!11040)) b!73855))

(assert (= (and b!73855 c!11039) b!73856))

(assert (= (and b!73855 (not c!11039)) b!73858))

(assert (= (and b!73858 c!11038) b!73854))

(assert (= (and b!73858 (not c!11038)) b!73857))

(assert (= (or b!73854 b!73857) bm!6504))

(assert (= (or b!73856 bm!6504) bm!6506))

(assert (= (or b!73859 bm!6506) bm!6505))

(assert (= (and bm!6505 c!11041) b!73851))

(assert (= (and bm!6505 (not c!11041)) b!73852))

(assert (= (and d!17205 res!39118) b!73860))

(assert (= (and b!73860 res!39119) b!73853))

(declare-fun m!72663 () Bool)

(assert (=> b!73851 m!72663))

(declare-fun m!72665 () Bool)

(assert (=> b!73853 m!72665))

(declare-fun m!72667 () Bool)

(assert (=> d!17205 m!72667))

(declare-fun m!72669 () Bool)

(assert (=> d!17205 m!72669))

(declare-fun m!72671 () Bool)

(assert (=> bm!6505 m!72671))

(declare-fun m!72673 () Bool)

(assert (=> b!73860 m!72673))

(assert (=> d!17029 d!17205))

(declare-fun d!17207 () Bool)

(declare-fun e!48279 () Bool)

(assert (=> d!17207 e!48279))

(declare-fun res!39120 () Bool)

(assert (=> d!17207 (=> res!39120 e!48279)))

(declare-fun lt!33214 () Bool)

(assert (=> d!17207 (= res!39120 (not lt!33214))))

(declare-fun lt!33216 () Bool)

(assert (=> d!17207 (= lt!33214 lt!33216)))

(declare-fun lt!33215 () Unit!2076)

(declare-fun e!48280 () Unit!2076)

(assert (=> d!17207 (= lt!33215 e!48280)))

(declare-fun c!11042 () Bool)

(assert (=> d!17207 (= c!11042 lt!33216)))

(assert (=> d!17207 (= lt!33216 (containsKey!137 (toList!716 lt!33109) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17207 (= (contains!720 lt!33109 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33214)))

(declare-fun b!73861 () Bool)

(declare-fun lt!33213 () Unit!2076)

(assert (=> b!73861 (= e!48280 lt!33213)))

(assert (=> b!73861 (= lt!33213 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33109) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73861 (isDefined!86 (getValueByKey!134 (toList!716 lt!33109) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73862 () Bool)

(declare-fun Unit!2116 () Unit!2076)

(assert (=> b!73862 (= e!48280 Unit!2116)))

(declare-fun b!73863 () Bool)

(assert (=> b!73863 (= e!48279 (isDefined!86 (getValueByKey!134 (toList!716 lt!33109) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17207 c!11042) b!73861))

(assert (= (and d!17207 (not c!11042)) b!73862))

(assert (= (and d!17207 (not res!39120)) b!73863))

(declare-fun m!72675 () Bool)

(assert (=> d!17207 m!72675))

(declare-fun m!72677 () Bool)

(assert (=> b!73861 m!72677))

(declare-fun m!72679 () Bool)

(assert (=> b!73861 m!72679))

(assert (=> b!73861 m!72679))

(declare-fun m!72681 () Bool)

(assert (=> b!73861 m!72681))

(assert (=> b!73863 m!72679))

(assert (=> b!73863 m!72679))

(assert (=> b!73863 m!72681))

(assert (=> b!73633 d!17207))

(declare-fun d!17209 () Bool)

(assert (=> d!17209 (= (isDefined!86 (getValueByKey!134 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773)))) (not (isEmpty!323 (getValueByKey!134 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))))

(declare-fun bs!3188 () Bool)

(assert (= bs!3188 d!17209))

(assert (=> bs!3188 m!71729))

(declare-fun m!72683 () Bool)

(assert (=> bs!3188 m!72683))

(assert (=> b!73375 d!17209))

(declare-fun b!73865 () Bool)

(declare-fun e!48281 () Option!140)

(declare-fun e!48282 () Option!140)

(assert (=> b!73865 (= e!48281 e!48282)))

(declare-fun c!11044 () Bool)

(assert (=> b!73865 (= c!11044 (and ((_ is Cons!1470) (toList!716 call!6429)) (not (= (_1!1071 (h!2057 (toList!716 call!6429))) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))))

(declare-fun b!73864 () Bool)

(assert (=> b!73864 (= e!48281 (Some!139 (_2!1071 (h!2057 (toList!716 call!6429)))))))

(declare-fun c!11043 () Bool)

(declare-fun d!17211 () Bool)

(assert (=> d!17211 (= c!11043 (and ((_ is Cons!1470) (toList!716 call!6429)) (= (_1!1071 (h!2057 (toList!716 call!6429))) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773)))))))

(assert (=> d!17211 (= (getValueByKey!134 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))) e!48281)))

(declare-fun b!73866 () Bool)

(assert (=> b!73866 (= e!48282 (getValueByKey!134 (t!5023 (toList!716 call!6429)) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(declare-fun b!73867 () Bool)

(assert (=> b!73867 (= e!48282 None!138)))

(assert (= (and d!17211 c!11043) b!73864))

(assert (= (and d!17211 (not c!11043)) b!73865))

(assert (= (and b!73865 c!11044) b!73866))

(assert (= (and b!73865 (not c!11044)) b!73867))

(assert (=> b!73866 m!71485))

(declare-fun m!72685 () Bool)

(assert (=> b!73866 m!72685))

(assert (=> b!73375 d!17211))

(declare-fun d!17213 () Bool)

(declare-fun lt!33217 () Bool)

(assert (=> d!17213 (= lt!33217 (select (content!78 (t!5023 (toList!716 lt!32594))) lt!32485))))

(declare-fun e!48284 () Bool)

(assert (=> d!17213 (= lt!33217 e!48284)))

(declare-fun res!39121 () Bool)

(assert (=> d!17213 (=> (not res!39121) (not e!48284))))

(assert (=> d!17213 (= res!39121 ((_ is Cons!1470) (t!5023 (toList!716 lt!32594))))))

(assert (=> d!17213 (= (contains!721 (t!5023 (toList!716 lt!32594)) lt!32485) lt!33217)))

(declare-fun b!73868 () Bool)

(declare-fun e!48283 () Bool)

(assert (=> b!73868 (= e!48284 e!48283)))

(declare-fun res!39122 () Bool)

(assert (=> b!73868 (=> res!39122 e!48283)))

(assert (=> b!73868 (= res!39122 (= (h!2057 (t!5023 (toList!716 lt!32594))) lt!32485))))

(declare-fun b!73869 () Bool)

(assert (=> b!73869 (= e!48283 (contains!721 (t!5023 (t!5023 (toList!716 lt!32594))) lt!32485))))

(assert (= (and d!17213 res!39121) b!73868))

(assert (= (and b!73868 (not res!39122)) b!73869))

(declare-fun m!72687 () Bool)

(assert (=> d!17213 m!72687))

(declare-fun m!72689 () Bool)

(assert (=> d!17213 m!72689))

(declare-fun m!72691 () Bool)

(assert (=> b!73869 m!72691))

(assert (=> b!73417 d!17213))

(declare-fun d!17215 () Bool)

(declare-fun lt!33218 () Bool)

(assert (=> d!17215 (= lt!33218 (select (content!78 (toList!716 lt!33118)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(declare-fun e!48286 () Bool)

(assert (=> d!17215 (= lt!33218 e!48286)))

(declare-fun res!39123 () Bool)

(assert (=> d!17215 (=> (not res!39123) (not e!48286))))

(assert (=> d!17215 (= res!39123 ((_ is Cons!1470) (toList!716 lt!33118)))))

(assert (=> d!17215 (= (contains!721 (toList!716 lt!33118) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) lt!33218)))

(declare-fun b!73870 () Bool)

(declare-fun e!48285 () Bool)

(assert (=> b!73870 (= e!48286 e!48285)))

(declare-fun res!39124 () Bool)

(assert (=> b!73870 (=> res!39124 e!48285)))

(assert (=> b!73870 (= res!39124 (= (h!2057 (toList!716 lt!33118)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(declare-fun b!73871 () Bool)

(assert (=> b!73871 (= e!48285 (contains!721 (t!5023 (toList!716 lt!33118)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(assert (= (and d!17215 res!39123) b!73870))

(assert (= (and b!73870 (not res!39124)) b!73871))

(declare-fun m!72693 () Bool)

(assert (=> d!17215 m!72693))

(declare-fun m!72695 () Bool)

(assert (=> d!17215 m!72695))

(declare-fun m!72697 () Bool)

(assert (=> b!73871 m!72697))

(assert (=> b!73644 d!17215))

(declare-fun b!73873 () Bool)

(declare-fun e!48287 () Option!140)

(declare-fun e!48288 () Option!140)

(assert (=> b!73873 (= e!48287 e!48288)))

(declare-fun c!11046 () Bool)

(assert (=> b!73873 (= c!11046 (and ((_ is Cons!1470) (toList!716 lt!33092)) (not (= (_1!1071 (h!2057 (toList!716 lt!33092))) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))))

(declare-fun b!73872 () Bool)

(assert (=> b!73872 (= e!48287 (Some!139 (_2!1071 (h!2057 (toList!716 lt!33092)))))))

(declare-fun c!11045 () Bool)

(declare-fun d!17217 () Bool)

(assert (=> d!17217 (= c!11045 (and ((_ is Cons!1470) (toList!716 lt!33092)) (= (_1!1071 (h!2057 (toList!716 lt!33092))) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(assert (=> d!17217 (= (getValueByKey!134 (toList!716 lt!33092) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) e!48287)))

(declare-fun b!73874 () Bool)

(assert (=> b!73874 (= e!48288 (getValueByKey!134 (t!5023 (toList!716 lt!33092)) (_1!1071 (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!73875 () Bool)

(assert (=> b!73875 (= e!48288 None!138)))

(assert (= (and d!17217 c!11045) b!73872))

(assert (= (and d!17217 (not c!11045)) b!73873))

(assert (= (and b!73873 c!11046) b!73874))

(assert (= (and b!73873 (not c!11046)) b!73875))

(declare-fun m!72699 () Bool)

(assert (=> b!73874 m!72699))

(assert (=> b!73609 d!17217))

(declare-fun b!73888 () Bool)

(declare-fun c!11054 () Bool)

(declare-fun lt!33223 () (_ BitVec 64))

(assert (=> b!73888 (= c!11054 (= lt!33223 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48297 () SeekEntryResult!230)

(declare-fun e!48295 () SeekEntryResult!230)

(assert (=> b!73888 (= e!48297 e!48295)))

(declare-fun b!73889 () Bool)

(assert (=> b!73889 (= e!48297 (Found!230 (index!3053 lt!32800)))))

(declare-fun b!73890 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!73890 (= e!48295 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11146 lt!32800) #b00000000000000000000000000000001) (nextIndex!0 (index!3053 lt!32800) (bvadd (x!11146 lt!32800) #b00000000000000000000000000000001) (mask!6179 newMap!16)) (index!3053 lt!32800) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun b!73891 () Bool)

(assert (=> b!73891 (= e!48295 (MissingVacant!230 (index!3053 lt!32800)))))

(declare-fun lt!33224 () SeekEntryResult!230)

(declare-fun d!17219 () Bool)

(assert (=> d!17219 (and (or ((_ is Undefined!230) lt!33224) (not ((_ is Found!230) lt!33224)) (and (bvsge (index!3052 lt!33224) #b00000000000000000000000000000000) (bvslt (index!3052 lt!33224) (size!2088 (_keys!3864 newMap!16))))) (or ((_ is Undefined!230) lt!33224) ((_ is Found!230) lt!33224) (not ((_ is MissingVacant!230) lt!33224)) (not (= (index!3054 lt!33224) (index!3053 lt!32800))) (and (bvsge (index!3054 lt!33224) #b00000000000000000000000000000000) (bvslt (index!3054 lt!33224) (size!2088 (_keys!3864 newMap!16))))) (or ((_ is Undefined!230) lt!33224) (ite ((_ is Found!230) lt!33224) (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!33224)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (and ((_ is MissingVacant!230) lt!33224) (= (index!3054 lt!33224) (index!3053 lt!32800)) (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3054 lt!33224)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!48296 () SeekEntryResult!230)

(assert (=> d!17219 (= lt!33224 e!48296)))

(declare-fun c!11053 () Bool)

(assert (=> d!17219 (= c!11053 (bvsge (x!11146 lt!32800) #b01111111111111111111111111111110))))

(assert (=> d!17219 (= lt!33223 (select (arr!1850 (_keys!3864 newMap!16)) (index!3053 lt!32800)))))

(assert (=> d!17219 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17219 (= (seekKeyOrZeroReturnVacant!0 (x!11146 lt!32800) (index!3053 lt!32800) (index!3053 lt!32800) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)) lt!33224)))

(declare-fun b!73892 () Bool)

(assert (=> b!73892 (= e!48296 e!48297)))

(declare-fun c!11055 () Bool)

(assert (=> b!73892 (= c!11055 (= lt!33223 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!73893 () Bool)

(assert (=> b!73893 (= e!48296 Undefined!230)))

(assert (= (and d!17219 c!11053) b!73893))

(assert (= (and d!17219 (not c!11053)) b!73892))

(assert (= (and b!73892 c!11055) b!73889))

(assert (= (and b!73892 (not c!11055)) b!73888))

(assert (= (and b!73888 c!11054) b!73891))

(assert (= (and b!73888 (not c!11054)) b!73890))

(declare-fun m!72701 () Bool)

(assert (=> b!73890 m!72701))

(assert (=> b!73890 m!72701))

(assert (=> b!73890 m!71143))

(declare-fun m!72703 () Bool)

(assert (=> b!73890 m!72703))

(declare-fun m!72705 () Bool)

(assert (=> d!17219 m!72705))

(declare-fun m!72707 () Bool)

(assert (=> d!17219 m!72707))

(assert (=> d!17219 m!71553))

(assert (=> d!17219 m!71557))

(assert (=> b!73257 d!17219))

(declare-fun d!17221 () Bool)

(declare-fun res!39125 () Bool)

(declare-fun e!48298 () Bool)

(assert (=> d!17221 (=> res!39125 e!48298)))

(assert (=> d!17221 (= res!39125 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32488))) (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32488)))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (=> d!17221 (= (containsKey!137 (t!5023 (toList!716 lt!32488)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) e!48298)))

(declare-fun b!73894 () Bool)

(declare-fun e!48299 () Bool)

(assert (=> b!73894 (= e!48298 e!48299)))

(declare-fun res!39126 () Bool)

(assert (=> b!73894 (=> (not res!39126) (not e!48299))))

(assert (=> b!73894 (= res!39126 (and (or (not ((_ is Cons!1470) (t!5023 (toList!716 lt!32488)))) (bvsle (_1!1071 (h!2057 (t!5023 (toList!716 lt!32488)))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))) ((_ is Cons!1470) (t!5023 (toList!716 lt!32488))) (bvslt (_1!1071 (h!2057 (t!5023 (toList!716 lt!32488)))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(declare-fun b!73895 () Bool)

(assert (=> b!73895 (= e!48299 (containsKey!137 (t!5023 (t!5023 (toList!716 lt!32488))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (= (and d!17221 (not res!39125)) b!73894))

(assert (= (and b!73894 res!39126) b!73895))

(assert (=> b!73895 m!71143))

(declare-fun m!72709 () Bool)

(assert (=> b!73895 m!72709))

(assert (=> b!73616 d!17221))

(declare-fun d!17223 () Bool)

(assert (=> d!17223 (= (inRange!0 (index!3052 lt!33076) (mask!6179 newMap!16)) (and (bvsge (index!3052 lt!33076) #b00000000000000000000000000000000) (bvslt (index!3052 lt!33076) (bvadd (mask!6179 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!73600 d!17223))

(declare-fun d!17225 () Bool)

(declare-fun res!39127 () Bool)

(declare-fun e!48300 () Bool)

(assert (=> d!17225 (=> res!39127 e!48300)))

(assert (=> d!17225 (= res!39127 (or ((_ is Nil!1471) lt!32810) ((_ is Nil!1471) (t!5023 lt!32810))))))

(assert (=> d!17225 (= (isStrictlySorted!279 lt!32810) e!48300)))

(declare-fun b!73896 () Bool)

(declare-fun e!48301 () Bool)

(assert (=> b!73896 (= e!48300 e!48301)))

(declare-fun res!39128 () Bool)

(assert (=> b!73896 (=> (not res!39128) (not e!48301))))

(assert (=> b!73896 (= res!39128 (bvslt (_1!1071 (h!2057 lt!32810)) (_1!1071 (h!2057 (t!5023 lt!32810)))))))

(declare-fun b!73897 () Bool)

(assert (=> b!73897 (= e!48301 (isStrictlySorted!279 (t!5023 lt!32810)))))

(assert (= (and d!17225 (not res!39127)) b!73896))

(assert (= (and b!73896 res!39128) b!73897))

(declare-fun m!72711 () Bool)

(assert (=> b!73897 m!72711))

(assert (=> d!16905 d!17225))

(declare-fun d!17227 () Bool)

(declare-fun res!39129 () Bool)

(declare-fun e!48302 () Bool)

(assert (=> d!17227 (=> res!39129 e!48302)))

(assert (=> d!17227 (= res!39129 (or ((_ is Nil!1471) (toList!716 (+!93 lt!32489 lt!32492))) ((_ is Nil!1471) (t!5023 (toList!716 (+!93 lt!32489 lt!32492))))))))

(assert (=> d!17227 (= (isStrictlySorted!279 (toList!716 (+!93 lt!32489 lt!32492))) e!48302)))

(declare-fun b!73898 () Bool)

(declare-fun e!48303 () Bool)

(assert (=> b!73898 (= e!48302 e!48303)))

(declare-fun res!39130 () Bool)

(assert (=> b!73898 (=> (not res!39130) (not e!48303))))

(assert (=> b!73898 (= res!39130 (bvslt (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 lt!32492)))) (_1!1071 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32492)))))))))

(declare-fun b!73899 () Bool)

(assert (=> b!73899 (= e!48303 (isStrictlySorted!279 (t!5023 (toList!716 (+!93 lt!32489 lt!32492)))))))

(assert (= (and d!17227 (not res!39129)) b!73898))

(assert (= (and b!73898 res!39130) b!73899))

(declare-fun m!72713 () Bool)

(assert (=> b!73899 m!72713))

(assert (=> d!16905 d!17227))

(declare-fun d!17229 () Bool)

(declare-fun res!39131 () Bool)

(declare-fun e!48304 () Bool)

(assert (=> d!17229 (=> res!39131 e!48304)))

(assert (=> d!17229 (= res!39131 (and ((_ is Cons!1470) (toList!716 lt!32579)) (= (_1!1071 (h!2057 (toList!716 lt!32579))) (_1!1071 lt!32492))))))

(assert (=> d!17229 (= (containsKey!137 (toList!716 lt!32579) (_1!1071 lt!32492)) e!48304)))

(declare-fun b!73900 () Bool)

(declare-fun e!48305 () Bool)

(assert (=> b!73900 (= e!48304 e!48305)))

(declare-fun res!39132 () Bool)

(assert (=> b!73900 (=> (not res!39132) (not e!48305))))

(assert (=> b!73900 (= res!39132 (and (or (not ((_ is Cons!1470) (toList!716 lt!32579))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32579))) (_1!1071 lt!32492))) ((_ is Cons!1470) (toList!716 lt!32579)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32579))) (_1!1071 lt!32492))))))

(declare-fun b!73901 () Bool)

(assert (=> b!73901 (= e!48305 (containsKey!137 (t!5023 (toList!716 lt!32579)) (_1!1071 lt!32492)))))

(assert (= (and d!17229 (not res!39131)) b!73900))

(assert (= (and b!73900 res!39132) b!73901))

(declare-fun m!72715 () Bool)

(assert (=> b!73901 m!72715))

(assert (=> d!16951 d!17229))

(declare-fun b!73903 () Bool)

(declare-fun e!48306 () Option!140)

(declare-fun e!48307 () Option!140)

(assert (=> b!73903 (= e!48306 e!48307)))

(declare-fun c!11057 () Bool)

(assert (=> b!73903 (= c!11057 (and ((_ is Cons!1470) (toList!716 lt!33080)) (not (= (_1!1071 (h!2057 (toList!716 lt!33080))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!73902 () Bool)

(assert (=> b!73902 (= e!48306 (Some!139 (_2!1071 (h!2057 (toList!716 lt!33080)))))))

(declare-fun d!17231 () Bool)

(declare-fun c!11056 () Bool)

(assert (=> d!17231 (= c!11056 (and ((_ is Cons!1470) (toList!716 lt!33080)) (= (_1!1071 (h!2057 (toList!716 lt!33080))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17231 (= (getValueByKey!134 (toList!716 lt!33080) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48306)))

(declare-fun b!73904 () Bool)

(assert (=> b!73904 (= e!48307 (getValueByKey!134 (t!5023 (toList!716 lt!33080)) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73905 () Bool)

(assert (=> b!73905 (= e!48307 None!138)))

(assert (= (and d!17231 c!11056) b!73902))

(assert (= (and d!17231 (not c!11056)) b!73903))

(assert (= (and b!73903 c!11057) b!73904))

(assert (= (and b!73903 (not c!11057)) b!73905))

(declare-fun m!72717 () Bool)

(assert (=> b!73904 m!72717))

(assert (=> b!73602 d!17231))

(declare-fun b!73907 () Bool)

(declare-fun e!48308 () Option!140)

(declare-fun e!48309 () Option!140)

(assert (=> b!73907 (= e!48308 e!48309)))

(declare-fun c!11059 () Bool)

(assert (=> b!73907 (= c!11059 (and ((_ is Cons!1470) (t!5023 lt!32580)) (not (= (_1!1071 (h!2057 (t!5023 lt!32580))) (_1!1071 lt!32492)))))))

(declare-fun b!73906 () Bool)

(assert (=> b!73906 (= e!48308 (Some!139 (_2!1071 (h!2057 (t!5023 lt!32580)))))))

(declare-fun d!17233 () Bool)

(declare-fun c!11058 () Bool)

(assert (=> d!17233 (= c!11058 (and ((_ is Cons!1470) (t!5023 lt!32580)) (= (_1!1071 (h!2057 (t!5023 lt!32580))) (_1!1071 lt!32492))))))

(assert (=> d!17233 (= (getValueByKey!134 (t!5023 lt!32580) (_1!1071 lt!32492)) e!48308)))

(declare-fun b!73908 () Bool)

(assert (=> b!73908 (= e!48309 (getValueByKey!134 (t!5023 (t!5023 lt!32580)) (_1!1071 lt!32492)))))

(declare-fun b!73909 () Bool)

(assert (=> b!73909 (= e!48309 None!138)))

(assert (= (and d!17233 c!11058) b!73906))

(assert (= (and d!17233 (not c!11058)) b!73907))

(assert (= (and b!73907 c!11059) b!73908))

(assert (= (and b!73907 (not c!11059)) b!73909))

(declare-fun m!72719 () Bool)

(assert (=> b!73908 m!72719))

(assert (=> b!73423 d!17233))

(declare-fun d!17235 () Bool)

(assert (=> d!17235 (= (apply!75 lt!32821 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1153 (getValueByKey!134 (toList!716 lt!32821) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3189 () Bool)

(assert (= bs!3189 d!17235))

(assert (=> bs!3189 m!71603))

(declare-fun m!72721 () Bool)

(assert (=> bs!3189 m!72721))

(assert (=> bs!3189 m!72721))

(declare-fun m!72723 () Bool)

(assert (=> bs!3189 m!72723))

(assert (=> b!73350 d!17235))

(declare-fun d!17237 () Bool)

(declare-fun c!11060 () Bool)

(assert (=> d!17237 (= c!11060 ((_ is ValueCellFull!893) (select (arr!1851 (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!48310 () V!2945)

(assert (=> d!17237 (= (get!1149 (select (arr!1851 (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48310)))

(declare-fun b!73910 () Bool)

(assert (=> b!73910 (= e!48310 (get!1151 (select (arr!1851 (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73911 () Bool)

(assert (=> b!73911 (= e!48310 (get!1152 (select (arr!1851 (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17237 c!11060) b!73910))

(assert (= (and d!17237 (not c!11060)) b!73911))

(assert (=> b!73910 m!71667))

(assert (=> b!73910 m!71663))

(declare-fun m!72725 () Bool)

(assert (=> b!73910 m!72725))

(assert (=> b!73911 m!71667))

(assert (=> b!73911 m!71663))

(declare-fun m!72727 () Bool)

(assert (=> b!73911 m!72727))

(assert (=> b!73350 d!17237))

(assert (=> bm!6475 d!16947))

(declare-fun d!17239 () Bool)

(declare-fun lt!33225 () Bool)

(assert (=> d!17239 (= lt!33225 (select (content!78 lt!33133) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun e!48312 () Bool)

(assert (=> d!17239 (= lt!33225 e!48312)))

(declare-fun res!39133 () Bool)

(assert (=> d!17239 (=> (not res!39133) (not e!48312))))

(assert (=> d!17239 (= res!39133 ((_ is Cons!1470) lt!33133))))

(assert (=> d!17239 (= (contains!721 lt!33133 (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))) lt!33225)))

(declare-fun b!73912 () Bool)

(declare-fun e!48311 () Bool)

(assert (=> b!73912 (= e!48312 e!48311)))

(declare-fun res!39134 () Bool)

(assert (=> b!73912 (=> res!39134 e!48311)))

(assert (=> b!73912 (= res!39134 (= (h!2057 lt!33133) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun b!73913 () Bool)

(assert (=> b!73913 (= e!48311 (contains!721 (t!5023 lt!33133) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(assert (= (and d!17239 res!39133) b!73912))

(assert (= (and b!73912 (not res!39134)) b!73913))

(declare-fun m!72729 () Bool)

(assert (=> d!17239 m!72729))

(declare-fun m!72731 () Bool)

(assert (=> d!17239 m!72731))

(declare-fun m!72733 () Bool)

(assert (=> b!73913 m!72733))

(assert (=> b!73660 d!17239))

(assert (=> d!17061 d!16879))

(declare-fun d!17241 () Bool)

(assert (=> d!17241 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3190 () Bool)

(assert (= bs!3190 d!17241))

(assert (=> bs!3190 m!72181))

(declare-fun m!72735 () Bool)

(assert (=> bs!3190 m!72735))

(assert (=> b!73619 d!17241))

(declare-fun b!73915 () Bool)

(declare-fun e!48313 () Option!140)

(declare-fun e!48314 () Option!140)

(assert (=> b!73915 (= e!48313 e!48314)))

(declare-fun c!11062 () Bool)

(assert (=> b!73915 (= c!11062 (and ((_ is Cons!1470) (toList!716 lt!32666)) (not (= (_1!1071 (h!2057 (toList!716 lt!32666))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73914 () Bool)

(assert (=> b!73914 (= e!48313 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32666)))))))

(declare-fun d!17243 () Bool)

(declare-fun c!11061 () Bool)

(assert (=> d!17243 (= c!11061 (and ((_ is Cons!1470) (toList!716 lt!32666)) (= (_1!1071 (h!2057 (toList!716 lt!32666))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17243 (= (getValueByKey!134 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000) e!48313)))

(declare-fun b!73916 () Bool)

(assert (=> b!73916 (= e!48314 (getValueByKey!134 (t!5023 (toList!716 lt!32666)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73917 () Bool)

(assert (=> b!73917 (= e!48314 None!138)))

(assert (= (and d!17243 c!11061) b!73914))

(assert (= (and d!17243 (not c!11061)) b!73915))

(assert (= (and b!73915 c!11062) b!73916))

(assert (= (and b!73915 (not c!11062)) b!73917))

(declare-fun m!72737 () Bool)

(assert (=> b!73916 m!72737))

(assert (=> b!73619 d!17243))

(declare-fun b!73918 () Bool)

(declare-fun e!48317 () Bool)

(declare-fun e!48318 () Bool)

(assert (=> b!73918 (= e!48317 e!48318)))

(declare-fun res!39136 () Bool)

(assert (=> b!73918 (=> (not res!39136) (not e!48318))))

(declare-fun e!48316 () Bool)

(assert (=> b!73918 (= res!39136 (not e!48316))))

(declare-fun res!39137 () Bool)

(assert (=> b!73918 (=> (not res!39137) (not e!48316))))

(assert (=> b!73918 (= res!39137 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun call!6510 () Bool)

(declare-fun c!11063 () Bool)

(declare-fun bm!6507 () Bool)

(assert (=> bm!6507 (= call!6510 (arrayNoDuplicates!0 (_keys!3864 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!11063 (Cons!1469 (select (arr!1850 (_keys!3864 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!10919 (Cons!1469 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) Nil!1470) Nil!1470)) (ite c!10919 (Cons!1469 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) Nil!1470) Nil!1470))))))

(declare-fun b!73919 () Bool)

(declare-fun e!48315 () Bool)

(assert (=> b!73919 (= e!48318 e!48315)))

(assert (=> b!73919 (= c!11063 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!17245 () Bool)

(declare-fun res!39135 () Bool)

(assert (=> d!17245 (=> res!39135 e!48317)))

(assert (=> d!17245 (= res!39135 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17245 (= (arrayNoDuplicates!0 (_keys!3864 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10919 (Cons!1469 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) Nil!1470) Nil!1470)) e!48317)))

(declare-fun b!73920 () Bool)

(assert (=> b!73920 (= e!48315 call!6510)))

(declare-fun b!73921 () Bool)

(assert (=> b!73921 (= e!48315 call!6510)))

(declare-fun b!73922 () Bool)

(assert (=> b!73922 (= e!48316 (contains!722 (ite c!10919 (Cons!1469 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) Nil!1470) Nil!1470) (select (arr!1850 (_keys!3864 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!17245 (not res!39135)) b!73918))

(assert (= (and b!73918 res!39137) b!73922))

(assert (= (and b!73918 res!39136) b!73919))

(assert (= (and b!73919 c!11063) b!73921))

(assert (= (and b!73919 (not c!11063)) b!73920))

(assert (= (or b!73921 b!73920) bm!6507))

(assert (=> b!73918 m!72631))

(assert (=> b!73918 m!72631))

(assert (=> b!73918 m!72639))

(assert (=> bm!6507 m!72631))

(declare-fun m!72739 () Bool)

(assert (=> bm!6507 m!72739))

(assert (=> b!73919 m!72631))

(assert (=> b!73919 m!72631))

(assert (=> b!73919 m!72639))

(assert (=> b!73922 m!72631))

(assert (=> b!73922 m!72631))

(declare-fun m!72741 () Bool)

(assert (=> b!73922 m!72741))

(assert (=> bm!6447 d!17245))

(declare-fun d!17247 () Bool)

(declare-fun e!48319 () Bool)

(assert (=> d!17247 e!48319))

(declare-fun res!39138 () Bool)

(assert (=> d!17247 (=> res!39138 e!48319)))

(declare-fun lt!33227 () Bool)

(assert (=> d!17247 (= res!39138 (not lt!33227))))

(declare-fun lt!33229 () Bool)

(assert (=> d!17247 (= lt!33227 lt!33229)))

(declare-fun lt!33228 () Unit!2076)

(declare-fun e!48320 () Unit!2076)

(assert (=> d!17247 (= lt!33228 e!48320)))

(declare-fun c!11064 () Bool)

(assert (=> d!17247 (= c!11064 lt!33229)))

(assert (=> d!17247 (= lt!33229 (containsKey!137 (toList!716 lt!33080) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17247 (= (contains!720 lt!33080 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33227)))

(declare-fun b!73923 () Bool)

(declare-fun lt!33226 () Unit!2076)

(assert (=> b!73923 (= e!48320 lt!33226)))

(assert (=> b!73923 (= lt!33226 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33080) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> b!73923 (isDefined!86 (getValueByKey!134 (toList!716 lt!33080) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73924 () Bool)

(declare-fun Unit!2117 () Unit!2076)

(assert (=> b!73924 (= e!48320 Unit!2117)))

(declare-fun b!73925 () Bool)

(assert (=> b!73925 (= e!48319 (isDefined!86 (getValueByKey!134 (toList!716 lt!33080) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17247 c!11064) b!73923))

(assert (= (and d!17247 (not c!11064)) b!73924))

(assert (= (and d!17247 (not res!39138)) b!73925))

(declare-fun m!72743 () Bool)

(assert (=> d!17247 m!72743))

(declare-fun m!72745 () Bool)

(assert (=> b!73923 m!72745))

(assert (=> b!73923 m!72137))

(assert (=> b!73923 m!72137))

(declare-fun m!72747 () Bool)

(assert (=> b!73923 m!72747))

(assert (=> b!73925 m!72137))

(assert (=> b!73925 m!72137))

(assert (=> b!73925 m!72747))

(assert (=> d!17023 d!17247))

(declare-fun b!73927 () Bool)

(declare-fun e!48321 () Option!140)

(declare-fun e!48322 () Option!140)

(assert (=> b!73927 (= e!48321 e!48322)))

(declare-fun c!11066 () Bool)

(assert (=> b!73927 (= c!11066 (and ((_ is Cons!1470) lt!33081) (not (= (_1!1071 (h!2057 lt!33081)) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!73926 () Bool)

(assert (=> b!73926 (= e!48321 (Some!139 (_2!1071 (h!2057 lt!33081))))))

(declare-fun d!17249 () Bool)

(declare-fun c!11065 () Bool)

(assert (=> d!17249 (= c!11065 (and ((_ is Cons!1470) lt!33081) (= (_1!1071 (h!2057 lt!33081)) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17249 (= (getValueByKey!134 lt!33081 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48321)))

(declare-fun b!73928 () Bool)

(assert (=> b!73928 (= e!48322 (getValueByKey!134 (t!5023 lt!33081) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73929 () Bool)

(assert (=> b!73929 (= e!48322 None!138)))

(assert (= (and d!17249 c!11065) b!73926))

(assert (= (and d!17249 (not c!11065)) b!73927))

(assert (= (and b!73927 c!11066) b!73928))

(assert (= (and b!73927 (not c!11066)) b!73929))

(declare-fun m!72749 () Bool)

(assert (=> b!73928 m!72749))

(assert (=> d!17023 d!17249))

(declare-fun d!17251 () Bool)

(assert (=> d!17251 (= (getValueByKey!134 lt!33081 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!33230 () Unit!2076)

(assert (=> d!17251 (= lt!33230 (choose!419 lt!33081 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun e!48323 () Bool)

(assert (=> d!17251 e!48323))

(declare-fun res!39139 () Bool)

(assert (=> d!17251 (=> (not res!39139) (not e!48323))))

(assert (=> d!17251 (= res!39139 (isStrictlySorted!279 lt!33081))))

(assert (=> d!17251 (= (lemmaContainsTupThenGetReturnValue!51 lt!33081 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33230)))

(declare-fun b!73930 () Bool)

(declare-fun res!39140 () Bool)

(assert (=> b!73930 (=> (not res!39140) (not e!48323))))

(assert (=> b!73930 (= res!39140 (containsKey!137 lt!33081 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73931 () Bool)

(assert (=> b!73931 (= e!48323 (contains!721 lt!33081 (tuple2!2121 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17251 res!39139) b!73930))

(assert (= (and b!73930 res!39140) b!73931))

(assert (=> d!17251 m!72131))

(declare-fun m!72751 () Bool)

(assert (=> d!17251 m!72751))

(declare-fun m!72753 () Bool)

(assert (=> d!17251 m!72753))

(declare-fun m!72755 () Bool)

(assert (=> b!73930 m!72755))

(declare-fun m!72757 () Bool)

(assert (=> b!73931 m!72757))

(assert (=> d!17023 d!17251))

(declare-fun b!73932 () Bool)

(declare-fun e!48328 () List!1474)

(assert (=> b!73932 (= e!48328 (insertStrictlySorted!54 (t!5023 (toList!716 call!6351)) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73933 () Bool)

(declare-fun c!11068 () Bool)

(declare-fun c!11067 () Bool)

(assert (=> b!73933 (= e!48328 (ite c!11068 (t!5023 (toList!716 call!6351)) (ite c!11067 (Cons!1470 (h!2057 (toList!716 call!6351)) (t!5023 (toList!716 call!6351))) Nil!1471)))))

(declare-fun bm!6508 () Bool)

(declare-fun call!6512 () List!1474)

(declare-fun call!6513 () List!1474)

(assert (=> bm!6508 (= call!6512 call!6513)))

(declare-fun b!73934 () Bool)

(declare-fun e!48327 () Bool)

(declare-fun lt!33231 () List!1474)

(assert (=> b!73934 (= e!48327 (contains!721 lt!33231 (tuple2!2121 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!73935 () Bool)

(declare-fun e!48324 () List!1474)

(assert (=> b!73935 (= e!48324 call!6512)))

(declare-fun b!73936 () Bool)

(declare-fun e!48325 () List!1474)

(declare-fun e!48326 () List!1474)

(assert (=> b!73936 (= e!48325 e!48326)))

(assert (=> b!73936 (= c!11068 (and ((_ is Cons!1470) (toList!716 call!6351)) (= (_1!1071 (h!2057 (toList!716 call!6351))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun d!17253 () Bool)

(assert (=> d!17253 e!48327))

(declare-fun res!39141 () Bool)

(assert (=> d!17253 (=> (not res!39141) (not e!48327))))

(assert (=> d!17253 (= res!39141 (isStrictlySorted!279 lt!33231))))

(assert (=> d!17253 (= lt!33231 e!48325)))

(declare-fun c!11069 () Bool)

(assert (=> d!17253 (= c!11069 (and ((_ is Cons!1470) (toList!716 call!6351)) (bvslt (_1!1071 (h!2057 (toList!716 call!6351))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17253 (isStrictlySorted!279 (toList!716 call!6351))))

(assert (=> d!17253 (= (insertStrictlySorted!54 (toList!716 call!6351) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33231)))

(declare-fun call!6511 () List!1474)

(declare-fun bm!6509 () Bool)

(assert (=> bm!6509 (= call!6511 ($colon$colon!65 e!48328 (ite c!11069 (h!2057 (toList!716 call!6351)) (tuple2!2121 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun c!11070 () Bool)

(assert (=> bm!6509 (= c!11070 c!11069)))

(declare-fun b!73937 () Bool)

(assert (=> b!73937 (= e!48326 call!6513)))

(declare-fun b!73938 () Bool)

(assert (=> b!73938 (= e!48324 call!6512)))

(declare-fun b!73939 () Bool)

(assert (=> b!73939 (= c!11067 (and ((_ is Cons!1470) (toList!716 call!6351)) (bvsgt (_1!1071 (h!2057 (toList!716 call!6351))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> b!73939 (= e!48326 e!48324)))

(declare-fun b!73940 () Bool)

(assert (=> b!73940 (= e!48325 call!6511)))

(declare-fun bm!6510 () Bool)

(assert (=> bm!6510 (= call!6513 call!6511)))

(declare-fun b!73941 () Bool)

(declare-fun res!39142 () Bool)

(assert (=> b!73941 (=> (not res!39142) (not e!48327))))

(assert (=> b!73941 (= res!39142 (containsKey!137 lt!33231 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (= (and d!17253 c!11069) b!73940))

(assert (= (and d!17253 (not c!11069)) b!73936))

(assert (= (and b!73936 c!11068) b!73937))

(assert (= (and b!73936 (not c!11068)) b!73939))

(assert (= (and b!73939 c!11067) b!73935))

(assert (= (and b!73939 (not c!11067)) b!73938))

(assert (= (or b!73935 b!73938) bm!6508))

(assert (= (or b!73937 bm!6508) bm!6510))

(assert (= (or b!73940 bm!6510) bm!6509))

(assert (= (and bm!6509 c!11070) b!73932))

(assert (= (and bm!6509 (not c!11070)) b!73933))

(assert (= (and d!17253 res!39141) b!73941))

(assert (= (and b!73941 res!39142) b!73934))

(declare-fun m!72759 () Bool)

(assert (=> b!73932 m!72759))

(declare-fun m!72761 () Bool)

(assert (=> b!73934 m!72761))

(declare-fun m!72763 () Bool)

(assert (=> d!17253 m!72763))

(declare-fun m!72765 () Bool)

(assert (=> d!17253 m!72765))

(declare-fun m!72767 () Bool)

(assert (=> bm!6509 m!72767))

(declare-fun m!72769 () Bool)

(assert (=> b!73941 m!72769))

(assert (=> d!17023 d!17253))

(declare-fun d!17255 () Bool)

(assert (=> d!17255 (= (get!1151 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2531 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73360 d!17255))

(assert (=> d!16945 d!16893))

(declare-fun lt!33234 () SeekEntryResult!230)

(declare-fun c!11076 () Bool)

(declare-fun call!6518 () Bool)

(declare-fun bm!6515 () Bool)

(assert (=> bm!6515 (= call!6518 (inRange!0 (ite c!11076 (index!3051 lt!33234) (index!3054 lt!33234)) (mask!6179 newMap!16)))))

(declare-fun b!73958 () Bool)

(declare-fun e!48338 () Bool)

(declare-fun e!48339 () Bool)

(assert (=> b!73958 (= e!48338 e!48339)))

(declare-fun c!11075 () Bool)

(assert (=> b!73958 (= c!11075 ((_ is MissingVacant!230) lt!33234))))

(declare-fun b!73959 () Bool)

(declare-fun e!48340 () Bool)

(declare-fun call!6519 () Bool)

(assert (=> b!73959 (= e!48340 (not call!6519))))

(declare-fun b!73960 () Bool)

(declare-fun res!39151 () Bool)

(assert (=> b!73960 (=> (not res!39151) (not e!48340))))

(assert (=> b!73960 (= res!39151 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3054 lt!33234)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73961 () Bool)

(declare-fun res!39154 () Bool)

(assert (=> b!73961 (= res!39154 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3051 lt!33234)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48337 () Bool)

(assert (=> b!73961 (=> (not res!39154) (not e!48337))))

(declare-fun d!17257 () Bool)

(assert (=> d!17257 e!48338))

(assert (=> d!17257 (= c!11076 ((_ is MissingZero!230) lt!33234))))

(assert (=> d!17257 (= lt!33234 (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(assert (=> d!17257 true))

(declare-fun _$34!807 () Unit!2076)

(assert (=> d!17257 (= (choose!424 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)) _$34!807)))

(declare-fun b!73962 () Bool)

(assert (=> b!73962 (= e!48339 ((_ is Undefined!230) lt!33234))))

(declare-fun b!73963 () Bool)

(declare-fun res!39152 () Bool)

(assert (=> b!73963 (=> (not res!39152) (not e!48340))))

(assert (=> b!73963 (= res!39152 call!6518)))

(assert (=> b!73963 (= e!48339 e!48340)))

(declare-fun b!73964 () Bool)

(assert (=> b!73964 (= e!48338 e!48337)))

(declare-fun res!39153 () Bool)

(assert (=> b!73964 (= res!39153 call!6518)))

(assert (=> b!73964 (=> (not res!39153) (not e!48337))))

(declare-fun bm!6516 () Bool)

(assert (=> bm!6516 (= call!6519 (arrayContainsKey!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!73965 () Bool)

(assert (=> b!73965 (= e!48337 (not call!6519))))

(assert (= (and d!17257 c!11076) b!73964))

(assert (= (and d!17257 (not c!11076)) b!73958))

(assert (= (and b!73964 res!39153) b!73961))

(assert (= (and b!73961 res!39154) b!73965))

(assert (= (and b!73958 c!11075) b!73963))

(assert (= (and b!73958 (not c!11075)) b!73962))

(assert (= (and b!73963 res!39152) b!73960))

(assert (= (and b!73960 res!39151) b!73959))

(assert (= (or b!73964 b!73963) bm!6515))

(assert (= (or b!73965 b!73959) bm!6516))

(declare-fun m!72771 () Bool)

(assert (=> bm!6515 m!72771))

(assert (=> bm!6516 m!71143))

(assert (=> bm!6516 m!71513))

(assert (=> d!17257 m!71143))

(assert (=> d!17257 m!71499))

(declare-fun m!72773 () Bool)

(assert (=> b!73961 m!72773))

(declare-fun m!72775 () Bool)

(assert (=> b!73960 m!72775))

(assert (=> d!16945 d!17257))

(assert (=> d!16945 d!17149))

(declare-fun d!17259 () Bool)

(assert (=> d!17259 (isDefined!86 (getValueByKey!134 (toList!716 lt!32579) (_1!1071 lt!32492)))))

(declare-fun lt!33235 () Unit!2076)

(assert (=> d!17259 (= lt!33235 (choose!420 (toList!716 lt!32579) (_1!1071 lt!32492)))))

(declare-fun e!48341 () Bool)

(assert (=> d!17259 e!48341))

(declare-fun res!39155 () Bool)

(assert (=> d!17259 (=> (not res!39155) (not e!48341))))

(assert (=> d!17259 (= res!39155 (isStrictlySorted!279 (toList!716 lt!32579)))))

(assert (=> d!17259 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32579) (_1!1071 lt!32492)) lt!33235)))

(declare-fun b!73966 () Bool)

(assert (=> b!73966 (= e!48341 (containsKey!137 (toList!716 lt!32579) (_1!1071 lt!32492)))))

(assert (= (and d!17259 res!39155) b!73966))

(assert (=> d!17259 m!71319))

(assert (=> d!17259 m!71319))

(assert (=> d!17259 m!71781))

(declare-fun m!72777 () Bool)

(assert (=> d!17259 m!72777))

(declare-fun m!72779 () Bool)

(assert (=> d!17259 m!72779))

(assert (=> b!73966 m!71777))

(assert (=> b!73418 d!17259))

(declare-fun d!17261 () Bool)

(assert (=> d!17261 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32579) (_1!1071 lt!32492))) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32579) (_1!1071 lt!32492)))))))

(declare-fun bs!3191 () Bool)

(assert (= bs!3191 d!17261))

(assert (=> bs!3191 m!71319))

(declare-fun m!72781 () Bool)

(assert (=> bs!3191 m!72781))

(assert (=> b!73418 d!17261))

(assert (=> b!73418 d!17081))

(declare-fun d!17263 () Bool)

(declare-fun e!48342 () Bool)

(assert (=> d!17263 e!48342))

(declare-fun res!39156 () Bool)

(assert (=> d!17263 (=> res!39156 e!48342)))

(declare-fun lt!33237 () Bool)

(assert (=> d!17263 (= res!39156 (not lt!33237))))

(declare-fun lt!33239 () Bool)

(assert (=> d!17263 (= lt!33237 lt!33239)))

(declare-fun lt!33238 () Unit!2076)

(declare-fun e!48343 () Unit!2076)

(assert (=> d!17263 (= lt!33238 e!48343)))

(declare-fun c!11077 () Bool)

(assert (=> d!17263 (= c!11077 lt!33239)))

(assert (=> d!17263 (= lt!33239 (containsKey!137 (toList!716 lt!32821) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17263 (= (contains!720 lt!32821 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) lt!33237)))

(declare-fun b!73967 () Bool)

(declare-fun lt!33236 () Unit!2076)

(assert (=> b!73967 (= e!48343 lt!33236)))

(assert (=> b!73967 (= lt!33236 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32821) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73967 (isDefined!86 (getValueByKey!134 (toList!716 lt!32821) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73968 () Bool)

(declare-fun Unit!2118 () Unit!2076)

(assert (=> b!73968 (= e!48343 Unit!2118)))

(declare-fun b!73969 () Bool)

(assert (=> b!73969 (= e!48342 (isDefined!86 (getValueByKey!134 (toList!716 lt!32821) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17263 c!11077) b!73967))

(assert (= (and d!17263 (not c!11077)) b!73968))

(assert (= (and d!17263 (not res!39156)) b!73969))

(assert (=> d!17263 m!71603))

(declare-fun m!72783 () Bool)

(assert (=> d!17263 m!72783))

(assert (=> b!73967 m!71603))

(declare-fun m!72785 () Bool)

(assert (=> b!73967 m!72785))

(assert (=> b!73967 m!71603))

(assert (=> b!73967 m!72721))

(assert (=> b!73967 m!72721))

(declare-fun m!72787 () Bool)

(assert (=> b!73967 m!72787))

(assert (=> b!73969 m!71603))

(assert (=> b!73969 m!72721))

(assert (=> b!73969 m!72721))

(assert (=> b!73969 m!72787))

(assert (=> b!73338 d!17263))

(assert (=> d!16903 d!16901))

(declare-fun d!17265 () Bool)

(assert (=> d!17265 (= (getValueByKey!134 lt!32595 (_1!1071 lt!32485)) (Some!139 (_2!1071 lt!32485)))))

(assert (=> d!17265 true))

(declare-fun _$22!387 () Unit!2076)

(assert (=> d!17265 (= (choose!419 lt!32595 (_1!1071 lt!32485) (_2!1071 lt!32485)) _$22!387)))

(declare-fun bs!3192 () Bool)

(assert (= bs!3192 d!17265))

(assert (=> bs!3192 m!71359))

(assert (=> d!16903 d!17265))

(declare-fun d!17267 () Bool)

(declare-fun res!39157 () Bool)

(declare-fun e!48344 () Bool)

(assert (=> d!17267 (=> res!39157 e!48344)))

(assert (=> d!17267 (= res!39157 (or ((_ is Nil!1471) lt!32595) ((_ is Nil!1471) (t!5023 lt!32595))))))

(assert (=> d!17267 (= (isStrictlySorted!279 lt!32595) e!48344)))

(declare-fun b!73970 () Bool)

(declare-fun e!48345 () Bool)

(assert (=> b!73970 (= e!48344 e!48345)))

(declare-fun res!39158 () Bool)

(assert (=> b!73970 (=> (not res!39158) (not e!48345))))

(assert (=> b!73970 (= res!39158 (bvslt (_1!1071 (h!2057 lt!32595)) (_1!1071 (h!2057 (t!5023 lt!32595)))))))

(declare-fun b!73971 () Bool)

(assert (=> b!73971 (= e!48345 (isStrictlySorted!279 (t!5023 lt!32595)))))

(assert (= (and d!17267 (not res!39157)) b!73970))

(assert (= (and b!73970 res!39158) b!73971))

(declare-fun m!72789 () Bool)

(assert (=> b!73971 m!72789))

(assert (=> d!16903 d!17267))

(declare-fun d!17269 () Bool)

(declare-fun e!48346 () Bool)

(assert (=> d!17269 e!48346))

(declare-fun res!39159 () Bool)

(assert (=> d!17269 (=> res!39159 e!48346)))

(declare-fun lt!33241 () Bool)

(assert (=> d!17269 (= res!39159 (not lt!33241))))

(declare-fun lt!33243 () Bool)

(assert (=> d!17269 (= lt!33241 lt!33243)))

(declare-fun lt!33242 () Unit!2076)

(declare-fun e!48347 () Unit!2076)

(assert (=> d!17269 (= lt!33242 e!48347)))

(declare-fun c!11078 () Bool)

(assert (=> d!17269 (= c!11078 lt!33243)))

(assert (=> d!17269 (= lt!33243 (containsKey!137 (toList!716 lt!32926) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17269 (= (contains!720 lt!32926 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33241)))

(declare-fun b!73972 () Bool)

(declare-fun lt!33240 () Unit!2076)

(assert (=> b!73972 (= e!48347 lt!33240)))

(assert (=> b!73972 (= lt!33240 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32926) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> b!73972 (isDefined!86 (getValueByKey!134 (toList!716 lt!32926) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73973 () Bool)

(declare-fun Unit!2119 () Unit!2076)

(assert (=> b!73973 (= e!48347 Unit!2119)))

(declare-fun b!73974 () Bool)

(assert (=> b!73974 (= e!48346 (isDefined!86 (getValueByKey!134 (toList!716 lt!32926) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17269 c!11078) b!73972))

(assert (= (and d!17269 (not c!11078)) b!73973))

(assert (= (and d!17269 (not res!39159)) b!73974))

(declare-fun m!72791 () Bool)

(assert (=> d!17269 m!72791))

(declare-fun m!72793 () Bool)

(assert (=> b!73972 m!72793))

(assert (=> b!73972 m!71919))

(assert (=> b!73972 m!71919))

(declare-fun m!72795 () Bool)

(assert (=> b!73972 m!72795))

(assert (=> b!73974 m!71919))

(assert (=> b!73974 m!71919))

(assert (=> b!73974 m!72795))

(assert (=> d!16985 d!17269))

(declare-fun b!73976 () Bool)

(declare-fun e!48348 () Option!140)

(declare-fun e!48349 () Option!140)

(assert (=> b!73976 (= e!48348 e!48349)))

(declare-fun c!11080 () Bool)

(assert (=> b!73976 (= c!11080 (and ((_ is Cons!1470) lt!32927) (not (= (_1!1071 (h!2057 lt!32927)) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!73975 () Bool)

(assert (=> b!73975 (= e!48348 (Some!139 (_2!1071 (h!2057 lt!32927))))))

(declare-fun d!17271 () Bool)

(declare-fun c!11079 () Bool)

(assert (=> d!17271 (= c!11079 (and ((_ is Cons!1470) lt!32927) (= (_1!1071 (h!2057 lt!32927)) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17271 (= (getValueByKey!134 lt!32927 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48348)))

(declare-fun b!73977 () Bool)

(assert (=> b!73977 (= e!48349 (getValueByKey!134 (t!5023 lt!32927) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73978 () Bool)

(assert (=> b!73978 (= e!48349 None!138)))

(assert (= (and d!17271 c!11079) b!73975))

(assert (= (and d!17271 (not c!11079)) b!73976))

(assert (= (and b!73976 c!11080) b!73977))

(assert (= (and b!73976 (not c!11080)) b!73978))

(declare-fun m!72797 () Bool)

(assert (=> b!73977 m!72797))

(assert (=> d!16985 d!17271))

(declare-fun d!17273 () Bool)

(assert (=> d!17273 (= (getValueByKey!134 lt!32927 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!33244 () Unit!2076)

(assert (=> d!17273 (= lt!33244 (choose!419 lt!32927 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun e!48350 () Bool)

(assert (=> d!17273 e!48350))

(declare-fun res!39160 () Bool)

(assert (=> d!17273 (=> (not res!39160) (not e!48350))))

(assert (=> d!17273 (= res!39160 (isStrictlySorted!279 lt!32927))))

(assert (=> d!17273 (= (lemmaContainsTupThenGetReturnValue!51 lt!32927 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33244)))

(declare-fun b!73979 () Bool)

(declare-fun res!39161 () Bool)

(assert (=> b!73979 (=> (not res!39161) (not e!48350))))

(assert (=> b!73979 (= res!39161 (containsKey!137 lt!32927 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73980 () Bool)

(assert (=> b!73980 (= e!48350 (contains!721 lt!32927 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17273 res!39160) b!73979))

(assert (= (and b!73979 res!39161) b!73980))

(assert (=> d!17273 m!71913))

(declare-fun m!72799 () Bool)

(assert (=> d!17273 m!72799))

(declare-fun m!72801 () Bool)

(assert (=> d!17273 m!72801))

(declare-fun m!72803 () Bool)

(assert (=> b!73979 m!72803))

(declare-fun m!72805 () Bool)

(assert (=> b!73980 m!72805))

(assert (=> d!16985 d!17273))

(declare-fun b!73981 () Bool)

(declare-fun e!48355 () List!1474)

(assert (=> b!73981 (= e!48355 (insertStrictlySorted!54 (t!5023 (toList!716 lt!32664)) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!73982 () Bool)

(declare-fun c!11081 () Bool)

(declare-fun c!11082 () Bool)

(assert (=> b!73982 (= e!48355 (ite c!11082 (t!5023 (toList!716 lt!32664)) (ite c!11081 (Cons!1470 (h!2057 (toList!716 lt!32664)) (t!5023 (toList!716 lt!32664))) Nil!1471)))))

(declare-fun bm!6517 () Bool)

(declare-fun call!6521 () List!1474)

(declare-fun call!6522 () List!1474)

(assert (=> bm!6517 (= call!6521 call!6522)))

(declare-fun e!48354 () Bool)

(declare-fun b!73983 () Bool)

(declare-fun lt!33245 () List!1474)

(assert (=> b!73983 (= e!48354 (contains!721 lt!33245 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!73984 () Bool)

(declare-fun e!48351 () List!1474)

(assert (=> b!73984 (= e!48351 call!6521)))

(declare-fun b!73985 () Bool)

(declare-fun e!48352 () List!1474)

(declare-fun e!48353 () List!1474)

(assert (=> b!73985 (= e!48352 e!48353)))

(assert (=> b!73985 (= c!11082 (and ((_ is Cons!1470) (toList!716 lt!32664)) (= (_1!1071 (h!2057 (toList!716 lt!32664))) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun d!17275 () Bool)

(assert (=> d!17275 e!48354))

(declare-fun res!39162 () Bool)

(assert (=> d!17275 (=> (not res!39162) (not e!48354))))

(assert (=> d!17275 (= res!39162 (isStrictlySorted!279 lt!33245))))

(assert (=> d!17275 (= lt!33245 e!48352)))

(declare-fun c!11083 () Bool)

(assert (=> d!17275 (= c!11083 (and ((_ is Cons!1470) (toList!716 lt!32664)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32664))) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17275 (isStrictlySorted!279 (toList!716 lt!32664))))

(assert (=> d!17275 (= (insertStrictlySorted!54 (toList!716 lt!32664) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33245)))

(declare-fun bm!6518 () Bool)

(declare-fun call!6520 () List!1474)

(assert (=> bm!6518 (= call!6520 ($colon$colon!65 e!48355 (ite c!11083 (h!2057 (toList!716 lt!32664)) (tuple2!2121 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun c!11084 () Bool)

(assert (=> bm!6518 (= c!11084 c!11083)))

(declare-fun b!73986 () Bool)

(assert (=> b!73986 (= e!48353 call!6522)))

(declare-fun b!73987 () Bool)

(assert (=> b!73987 (= e!48351 call!6521)))

(declare-fun b!73988 () Bool)

(assert (=> b!73988 (= c!11081 (and ((_ is Cons!1470) (toList!716 lt!32664)) (bvsgt (_1!1071 (h!2057 (toList!716 lt!32664))) (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> b!73988 (= e!48353 e!48351)))

(declare-fun b!73989 () Bool)

(assert (=> b!73989 (= e!48352 call!6520)))

(declare-fun bm!6519 () Bool)

(assert (=> bm!6519 (= call!6522 call!6520)))

(declare-fun b!73990 () Bool)

(declare-fun res!39163 () Bool)

(assert (=> b!73990 (=> (not res!39163) (not e!48354))))

(assert (=> b!73990 (= res!39163 (containsKey!137 lt!33245 (_1!1071 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (= (and d!17275 c!11083) b!73989))

(assert (= (and d!17275 (not c!11083)) b!73985))

(assert (= (and b!73985 c!11082) b!73986))

(assert (= (and b!73985 (not c!11082)) b!73988))

(assert (= (and b!73988 c!11081) b!73984))

(assert (= (and b!73988 (not c!11081)) b!73987))

(assert (= (or b!73984 b!73987) bm!6517))

(assert (= (or b!73986 bm!6517) bm!6519))

(assert (= (or b!73989 bm!6519) bm!6518))

(assert (= (and bm!6518 c!11084) b!73981))

(assert (= (and bm!6518 (not c!11084)) b!73982))

(assert (= (and d!17275 res!39162) b!73990))

(assert (= (and b!73990 res!39163) b!73983))

(declare-fun m!72807 () Bool)

(assert (=> b!73981 m!72807))

(declare-fun m!72809 () Bool)

(assert (=> b!73983 m!72809))

(declare-fun m!72811 () Bool)

(assert (=> d!17275 m!72811))

(declare-fun m!72813 () Bool)

(assert (=> d!17275 m!72813))

(declare-fun m!72815 () Bool)

(assert (=> bm!6518 m!72815))

(declare-fun m!72817 () Bool)

(assert (=> b!73990 m!72817))

(assert (=> d!16985 d!17275))

(declare-fun b!74009 () Bool)

(declare-fun lt!33250 () SeekEntryResult!230)

(assert (=> b!74009 (and (bvsge (index!3053 lt!33250) #b00000000000000000000000000000000) (bvslt (index!3053 lt!33250) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun e!48369 () Bool)

(assert (=> b!74009 (= e!48369 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3053 lt!33250)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74010 () Bool)

(assert (=> b!74010 (and (bvsge (index!3053 lt!33250) #b00000000000000000000000000000000) (bvslt (index!3053 lt!33250) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun res!39171 () Bool)

(assert (=> b!74010 (= res!39171 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3053 lt!33250)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74010 (=> res!39171 e!48369)))

(declare-fun b!74011 () Bool)

(declare-fun e!48366 () Bool)

(assert (=> b!74011 (= e!48366 (bvsge (x!11146 lt!33250) #b01111111111111111111111111111110))))

(declare-fun e!48368 () SeekEntryResult!230)

(declare-fun b!74012 () Bool)

(assert (=> b!74012 (= e!48368 (Intermediate!230 false (toIndex!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (mask!6179 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!74013 () Bool)

(assert (=> b!74013 (= e!48368 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (mask!6179 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6179 newMap!16)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun b!74014 () Bool)

(declare-fun e!48367 () SeekEntryResult!230)

(assert (=> b!74014 (= e!48367 (Intermediate!230 true (toIndex!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (mask!6179 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!74015 () Bool)

(assert (=> b!74015 (= e!48367 e!48368)))

(declare-fun lt!33251 () (_ BitVec 64))

(declare-fun c!11091 () Bool)

(assert (=> b!74015 (= c!11091 (or (= lt!33251 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (= (bvadd lt!33251 lt!33251) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!17277 () Bool)

(assert (=> d!17277 e!48366))

(declare-fun c!11093 () Bool)

(assert (=> d!17277 (= c!11093 (and ((_ is Intermediate!230) lt!33250) (undefined!1042 lt!33250)))))

(assert (=> d!17277 (= lt!33250 e!48367)))

(declare-fun c!11092 () Bool)

(assert (=> d!17277 (= c!11092 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!17277 (= lt!33251 (select (arr!1850 (_keys!3864 newMap!16)) (toIndex!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (mask!6179 newMap!16))))))

(assert (=> d!17277 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17277 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (mask!6179 newMap!16)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)) lt!33250)))

(declare-fun b!74016 () Bool)

(assert (=> b!74016 (and (bvsge (index!3053 lt!33250) #b00000000000000000000000000000000) (bvslt (index!3053 lt!33250) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun res!39172 () Bool)

(assert (=> b!74016 (= res!39172 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3053 lt!33250)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> b!74016 (=> res!39172 e!48369)))

(declare-fun e!48370 () Bool)

(assert (=> b!74016 (= e!48370 e!48369)))

(declare-fun b!74017 () Bool)

(assert (=> b!74017 (= e!48366 e!48370)))

(declare-fun res!39170 () Bool)

(assert (=> b!74017 (= res!39170 (and ((_ is Intermediate!230) lt!33250) (not (undefined!1042 lt!33250)) (bvslt (x!11146 lt!33250) #b01111111111111111111111111111110) (bvsge (x!11146 lt!33250) #b00000000000000000000000000000000) (bvsge (x!11146 lt!33250) #b00000000000000000000000000000000)))))

(assert (=> b!74017 (=> (not res!39170) (not e!48370))))

(assert (= (and d!17277 c!11092) b!74014))

(assert (= (and d!17277 (not c!11092)) b!74015))

(assert (= (and b!74015 c!11091) b!74012))

(assert (= (and b!74015 (not c!11091)) b!74013))

(assert (= (and d!17277 c!11093) b!74011))

(assert (= (and d!17277 (not c!11093)) b!74017))

(assert (= (and b!74017 res!39170) b!74016))

(assert (= (and b!74016 (not res!39172)) b!74010))

(assert (= (and b!74010 (not res!39171)) b!74009))

(declare-fun m!72819 () Bool)

(assert (=> b!74016 m!72819))

(assert (=> d!17277 m!71559))

(declare-fun m!72821 () Bool)

(assert (=> d!17277 m!72821))

(assert (=> d!17277 m!71557))

(assert (=> b!74013 m!71559))

(declare-fun m!72823 () Bool)

(assert (=> b!74013 m!72823))

(assert (=> b!74013 m!72823))

(assert (=> b!74013 m!71143))

(declare-fun m!72825 () Bool)

(assert (=> b!74013 m!72825))

(assert (=> b!74009 m!72819))

(assert (=> b!74010 m!72819))

(assert (=> d!16893 d!17277))

(declare-fun d!17279 () Bool)

(declare-fun lt!33257 () (_ BitVec 32))

(declare-fun lt!33256 () (_ BitVec 32))

(assert (=> d!17279 (= lt!33257 (bvmul (bvxor lt!33256 (bvlshr lt!33256 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!17279 (= lt!33256 ((_ extract 31 0) (bvand (bvxor (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvlshr (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!17279 (and (bvsge (mask!6179 newMap!16) #b00000000000000000000000000000000) (let ((res!39173 (let ((h!2061 ((_ extract 31 0) (bvand (bvxor (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvlshr (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11249 (bvmul (bvxor h!2061 (bvlshr h!2061 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11249 (bvlshr x!11249 #b00000000000000000000000000001101)) (mask!6179 newMap!16)))))) (and (bvslt res!39173 (bvadd (mask!6179 newMap!16) #b00000000000000000000000000000001)) (bvsge res!39173 #b00000000000000000000000000000000))))))

(assert (=> d!17279 (= (toIndex!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (mask!6179 newMap!16)) (bvand (bvxor lt!33257 (bvlshr lt!33257 #b00000000000000000000000000001101)) (mask!6179 newMap!16)))))

(assert (=> d!16893 d!17279))

(assert (=> d!16893 d!17149))

(declare-fun d!17281 () Bool)

(declare-fun lt!33258 () Bool)

(assert (=> d!17281 (= lt!33258 (select (content!78 (toList!716 lt!32926)) (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun e!48372 () Bool)

(assert (=> d!17281 (= lt!33258 e!48372)))

(declare-fun res!39174 () Bool)

(assert (=> d!17281 (=> (not res!39174) (not e!48372))))

(assert (=> d!17281 (= res!39174 ((_ is Cons!1470) (toList!716 lt!32926)))))

(assert (=> d!17281 (= (contains!721 (toList!716 lt!32926) (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!33258)))

(declare-fun b!74018 () Bool)

(declare-fun e!48371 () Bool)

(assert (=> b!74018 (= e!48372 e!48371)))

(declare-fun res!39175 () Bool)

(assert (=> b!74018 (=> res!39175 e!48371)))

(assert (=> b!74018 (= res!39175 (= (h!2057 (toList!716 lt!32926)) (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!74019 () Bool)

(assert (=> b!74019 (= e!48371 (contains!721 (t!5023 (toList!716 lt!32926)) (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17281 res!39174) b!74018))

(assert (= (and b!74018 (not res!39175)) b!74019))

(declare-fun m!72827 () Bool)

(assert (=> d!17281 m!72827))

(declare-fun m!72829 () Bool)

(assert (=> d!17281 m!72829))

(declare-fun m!72831 () Bool)

(assert (=> b!74019 m!72831))

(assert (=> b!73470 d!17281))

(declare-fun d!17283 () Bool)

(assert (=> d!17283 (= (get!1153 (getValueByKey!134 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2538 (getValueByKey!134 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17003 d!17283))

(declare-fun b!74021 () Bool)

(declare-fun e!48373 () Option!140)

(declare-fun e!48374 () Option!140)

(assert (=> b!74021 (= e!48373 e!48374)))

(declare-fun c!11095 () Bool)

(assert (=> b!74021 (= c!11095 (and ((_ is Cons!1470) (toList!716 lt!32666)) (not (= (_1!1071 (h!2057 (toList!716 lt!32666))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74020 () Bool)

(assert (=> b!74020 (= e!48373 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32666)))))))

(declare-fun d!17285 () Bool)

(declare-fun c!11094 () Bool)

(assert (=> d!17285 (= c!11094 (and ((_ is Cons!1470) (toList!716 lt!32666)) (= (_1!1071 (h!2057 (toList!716 lt!32666))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17285 (= (getValueByKey!134 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000) e!48373)))

(declare-fun b!74022 () Bool)

(assert (=> b!74022 (= e!48374 (getValueByKey!134 (t!5023 (toList!716 lt!32666)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74023 () Bool)

(assert (=> b!74023 (= e!48374 None!138)))

(assert (= (and d!17285 c!11094) b!74020))

(assert (= (and d!17285 (not c!11094)) b!74021))

(assert (= (and b!74021 c!11095) b!74022))

(assert (= (and b!74021 (not c!11095)) b!74023))

(declare-fun m!72833 () Bool)

(assert (=> b!74022 m!72833))

(assert (=> d!17003 d!17285))

(declare-fun d!17287 () Bool)

(declare-fun e!48375 () Bool)

(assert (=> d!17287 e!48375))

(declare-fun res!39176 () Bool)

(assert (=> d!17287 (=> res!39176 e!48375)))

(declare-fun lt!33260 () Bool)

(assert (=> d!17287 (= res!39176 (not lt!33260))))

(declare-fun lt!33262 () Bool)

(assert (=> d!17287 (= lt!33260 lt!33262)))

(declare-fun lt!33261 () Unit!2076)

(declare-fun e!48376 () Unit!2076)

(assert (=> d!17287 (= lt!33261 e!48376)))

(declare-fun c!11096 () Bool)

(assert (=> d!17287 (= c!11096 lt!33262)))

(assert (=> d!17287 (= lt!33262 (containsKey!137 (toList!716 lt!33109) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!17287 (= (contains!720 lt!33109 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!33260)))

(declare-fun b!74024 () Bool)

(declare-fun lt!33259 () Unit!2076)

(assert (=> b!74024 (= e!48376 lt!33259)))

(assert (=> b!74024 (= lt!33259 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33109) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!74024 (isDefined!86 (getValueByKey!134 (toList!716 lt!33109) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!74025 () Bool)

(declare-fun Unit!2120 () Unit!2076)

(assert (=> b!74025 (= e!48376 Unit!2120)))

(declare-fun b!74026 () Bool)

(assert (=> b!74026 (= e!48375 (isDefined!86 (getValueByKey!134 (toList!716 lt!33109) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!17287 c!11096) b!74024))

(assert (= (and d!17287 (not c!11096)) b!74025))

(assert (= (and d!17287 (not res!39176)) b!74026))

(assert (=> d!17287 m!72099))

(declare-fun m!72835 () Bool)

(assert (=> d!17287 m!72835))

(assert (=> b!74024 m!72099))

(declare-fun m!72837 () Bool)

(assert (=> b!74024 m!72837))

(assert (=> b!74024 m!72099))

(declare-fun m!72839 () Bool)

(assert (=> b!74024 m!72839))

(assert (=> b!74024 m!72839))

(declare-fun m!72841 () Bool)

(assert (=> b!74024 m!72841))

(assert (=> b!74026 m!72099))

(assert (=> b!74026 m!72839))

(assert (=> b!74026 m!72839))

(assert (=> b!74026 m!72841))

(assert (=> b!73634 d!17287))

(declare-fun d!17289 () Bool)

(assert (=> d!17289 (= (isEmpty!324 (toList!716 lt!32614)) ((_ is Nil!1471) (toList!716 lt!32614)))))

(assert (=> d!17059 d!17289))

(assert (=> b!73383 d!17105))

(declare-fun b!74027 () Bool)

(declare-fun e!48381 () List!1474)

(assert (=> b!74027 (= e!48381 (insertStrictlySorted!54 (t!5023 (t!5023 (toList!716 (+!93 lt!32489 lt!32492)))) (_1!1071 lt!32485) (_2!1071 lt!32485)))))

(declare-fun c!11097 () Bool)

(declare-fun c!11098 () Bool)

(declare-fun b!74028 () Bool)

(assert (=> b!74028 (= e!48381 (ite c!11098 (t!5023 (t!5023 (toList!716 (+!93 lt!32489 lt!32492)))) (ite c!11097 (Cons!1470 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32492)))) (t!5023 (t!5023 (toList!716 (+!93 lt!32489 lt!32492))))) Nil!1471)))))

(declare-fun bm!6520 () Bool)

(declare-fun call!6524 () List!1474)

(declare-fun call!6525 () List!1474)

(assert (=> bm!6520 (= call!6524 call!6525)))

(declare-fun b!74029 () Bool)

(declare-fun e!48380 () Bool)

(declare-fun lt!33263 () List!1474)

(assert (=> b!74029 (= e!48380 (contains!721 lt!33263 (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun b!74030 () Bool)

(declare-fun e!48377 () List!1474)

(assert (=> b!74030 (= e!48377 call!6524)))

(declare-fun b!74031 () Bool)

(declare-fun e!48378 () List!1474)

(declare-fun e!48379 () List!1474)

(assert (=> b!74031 (= e!48378 e!48379)))

(assert (=> b!74031 (= c!11098 (and ((_ is Cons!1470) (t!5023 (toList!716 (+!93 lt!32489 lt!32492)))) (= (_1!1071 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32492))))) (_1!1071 lt!32485))))))

(declare-fun d!17291 () Bool)

(assert (=> d!17291 e!48380))

(declare-fun res!39177 () Bool)

(assert (=> d!17291 (=> (not res!39177) (not e!48380))))

(assert (=> d!17291 (= res!39177 (isStrictlySorted!279 lt!33263))))

(assert (=> d!17291 (= lt!33263 e!48378)))

(declare-fun c!11099 () Bool)

(assert (=> d!17291 (= c!11099 (and ((_ is Cons!1470) (t!5023 (toList!716 (+!93 lt!32489 lt!32492)))) (bvslt (_1!1071 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32492))))) (_1!1071 lt!32485))))))

(assert (=> d!17291 (isStrictlySorted!279 (t!5023 (toList!716 (+!93 lt!32489 lt!32492))))))

(assert (=> d!17291 (= (insertStrictlySorted!54 (t!5023 (toList!716 (+!93 lt!32489 lt!32492))) (_1!1071 lt!32485) (_2!1071 lt!32485)) lt!33263)))

(declare-fun call!6523 () List!1474)

(declare-fun bm!6521 () Bool)

(assert (=> bm!6521 (= call!6523 ($colon$colon!65 e!48381 (ite c!11099 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32492)))) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485)))))))

(declare-fun c!11100 () Bool)

(assert (=> bm!6521 (= c!11100 c!11099)))

(declare-fun b!74032 () Bool)

(assert (=> b!74032 (= e!48379 call!6525)))

(declare-fun b!74033 () Bool)

(assert (=> b!74033 (= e!48377 call!6524)))

(declare-fun b!74034 () Bool)

(assert (=> b!74034 (= c!11097 (and ((_ is Cons!1470) (t!5023 (toList!716 (+!93 lt!32489 lt!32492)))) (bvsgt (_1!1071 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32492))))) (_1!1071 lt!32485))))))

(assert (=> b!74034 (= e!48379 e!48377)))

(declare-fun b!74035 () Bool)

(assert (=> b!74035 (= e!48378 call!6523)))

(declare-fun bm!6522 () Bool)

(assert (=> bm!6522 (= call!6525 call!6523)))

(declare-fun b!74036 () Bool)

(declare-fun res!39178 () Bool)

(assert (=> b!74036 (=> (not res!39178) (not e!48380))))

(assert (=> b!74036 (= res!39178 (containsKey!137 lt!33263 (_1!1071 lt!32485)))))

(assert (= (and d!17291 c!11099) b!74035))

(assert (= (and d!17291 (not c!11099)) b!74031))

(assert (= (and b!74031 c!11098) b!74032))

(assert (= (and b!74031 (not c!11098)) b!74034))

(assert (= (and b!74034 c!11097) b!74030))

(assert (= (and b!74034 (not c!11097)) b!74033))

(assert (= (or b!74030 b!74033) bm!6520))

(assert (= (or b!74032 bm!6520) bm!6522))

(assert (= (or b!74035 bm!6522) bm!6521))

(assert (= (and bm!6521 c!11100) b!74027))

(assert (= (and bm!6521 (not c!11100)) b!74028))

(assert (= (and d!17291 res!39177) b!74036))

(assert (= (and b!74036 res!39178) b!74029))

(declare-fun m!72843 () Bool)

(assert (=> b!74027 m!72843))

(declare-fun m!72845 () Bool)

(assert (=> b!74029 m!72845))

(declare-fun m!72847 () Bool)

(assert (=> d!17291 m!72847))

(assert (=> d!17291 m!72713))

(declare-fun m!72849 () Bool)

(assert (=> bm!6521 m!72849))

(declare-fun m!72851 () Bool)

(assert (=> b!74036 m!72851))

(assert (=> b!73307 d!17291))

(declare-fun d!17293 () Bool)

(declare-fun lt!33264 () Bool)

(assert (=> d!17293 (= lt!33264 (select (content!78 (toList!716 lt!33092)) (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun e!48383 () Bool)

(assert (=> d!17293 (= lt!33264 e!48383)))

(declare-fun res!39179 () Bool)

(assert (=> d!17293 (=> (not res!39179) (not e!48383))))

(assert (=> d!17293 (= res!39179 ((_ is Cons!1470) (toList!716 lt!33092)))))

(assert (=> d!17293 (= (contains!721 (toList!716 lt!33092) (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33264)))

(declare-fun b!74037 () Bool)

(declare-fun e!48382 () Bool)

(assert (=> b!74037 (= e!48383 e!48382)))

(declare-fun res!39180 () Bool)

(assert (=> b!74037 (=> res!39180 e!48382)))

(assert (=> b!74037 (= res!39180 (= (h!2057 (toList!716 lt!33092)) (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!74038 () Bool)

(assert (=> b!74038 (= e!48382 (contains!721 (t!5023 (toList!716 lt!33092)) (ite c!10868 (ite c!10858 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (= (and d!17293 res!39179) b!74037))

(assert (= (and b!74037 (not res!39180)) b!74038))

(declare-fun m!72853 () Bool)

(assert (=> d!17293 m!72853))

(declare-fun m!72855 () Bool)

(assert (=> d!17293 m!72855))

(declare-fun m!72857 () Bool)

(assert (=> b!74038 m!72857))

(assert (=> b!73610 d!17293))

(declare-fun d!17295 () Bool)

(declare-fun res!39182 () Bool)

(declare-fun e!48384 () Bool)

(assert (=> d!17295 (=> (not res!39182) (not e!48384))))

(assert (=> d!17295 (= res!39182 (validMask!0 (mask!6179 (v!2532 (underlying!262 thiss!992)))))))

(assert (=> d!17295 (= (simpleValid!51 (v!2532 (underlying!262 thiss!992))) e!48384)))

(declare-fun b!74041 () Bool)

(declare-fun res!39181 () Bool)

(assert (=> b!74041 (=> (not res!39181) (not e!48384))))

(assert (=> b!74041 (= res!39181 (= (size!2094 (v!2532 (underlying!262 thiss!992))) (bvadd (_size!396 (v!2532 (underlying!262 thiss!992))) (bvsdiv (bvadd (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!74042 () Bool)

(assert (=> b!74042 (= e!48384 (and (bvsge (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2071 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!396 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!74039 () Bool)

(declare-fun res!39184 () Bool)

(assert (=> b!74039 (=> (not res!39184) (not e!48384))))

(assert (=> b!74039 (= res!39184 (and (= (size!2089 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000001)) (= (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (size!2089 (_values!2195 (v!2532 (underlying!262 thiss!992))))) (bvsge (_size!396 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!396 (v!2532 (underlying!262 thiss!992))) (bvadd (mask!6179 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!74040 () Bool)

(declare-fun res!39183 () Bool)

(assert (=> b!74040 (=> (not res!39183) (not e!48384))))

(assert (=> b!74040 (= res!39183 (bvsge (size!2094 (v!2532 (underlying!262 thiss!992))) (_size!396 (v!2532 (underlying!262 thiss!992)))))))

(assert (= (and d!17295 res!39182) b!74039))

(assert (= (and b!74039 res!39184) b!74040))

(assert (= (and b!74040 res!39183) b!74041))

(assert (= (and b!74041 res!39181) b!74042))

(assert (=> d!17295 m!71151))

(declare-fun m!72859 () Bool)

(assert (=> b!74041 m!72859))

(assert (=> b!74040 m!72859))

(assert (=> d!16997 d!17295))

(declare-fun b!74043 () Bool)

(declare-fun e!48392 () Bool)

(assert (=> b!74043 (= e!48392 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000)))))

(declare-fun b!74044 () Bool)

(declare-fun e!48395 () Bool)

(declare-fun e!48390 () Bool)

(assert (=> b!74044 (= e!48395 e!48390)))

(declare-fun c!11106 () Bool)

(assert (=> b!74044 (= c!11106 (not (= (bvand (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74045 () Bool)

(declare-fun e!48393 () Bool)

(declare-fun call!6530 () Bool)

(assert (=> b!74045 (= e!48393 (not call!6530))))

(declare-fun b!74046 () Bool)

(declare-fun e!48397 () Unit!2076)

(declare-fun Unit!2121 () Unit!2076)

(assert (=> b!74046 (= e!48397 Unit!2121)))

(declare-fun bm!6523 () Bool)

(declare-fun call!6531 () ListLongMap!1401)

(assert (=> bm!6523 (= call!6531 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (_2!1072 lt!32783)) (_values!2195 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783)) (extraKeys!2071 (_2!1072 lt!32783)) (zeroValue!2114 (_2!1072 lt!32783)) (minValue!2114 (_2!1072 lt!32783)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32783))))))

(declare-fun b!74047 () Bool)

(declare-fun e!48389 () Bool)

(assert (=> b!74047 (= e!48393 e!48389)))

(declare-fun res!39187 () Bool)

(assert (=> b!74047 (= res!39187 call!6530)))

(assert (=> b!74047 (=> (not res!39187) (not e!48389))))

(declare-fun bm!6524 () Bool)

(declare-fun call!6526 () ListLongMap!1401)

(declare-fun call!6532 () ListLongMap!1401)

(assert (=> bm!6524 (= call!6526 call!6532)))

(declare-fun b!74048 () Bool)

(declare-fun e!48386 () Bool)

(declare-fun e!48385 () Bool)

(assert (=> b!74048 (= e!48386 e!48385)))

(declare-fun res!39186 () Bool)

(assert (=> b!74048 (=> (not res!39186) (not e!48385))))

(declare-fun lt!33270 () ListLongMap!1401)

(assert (=> b!74048 (= res!39186 (contains!720 lt!33270 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000)))))

(assert (=> b!74048 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))))))

(declare-fun bm!6525 () Bool)

(assert (=> bm!6525 (= call!6532 call!6531)))

(declare-fun b!74049 () Bool)

(declare-fun lt!33266 () Unit!2076)

(assert (=> b!74049 (= e!48397 lt!33266)))

(declare-fun lt!33280 () ListLongMap!1401)

(assert (=> b!74049 (= lt!33280 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (_2!1072 lt!32783)) (_values!2195 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783)) (extraKeys!2071 (_2!1072 lt!32783)) (zeroValue!2114 (_2!1072 lt!32783)) (minValue!2114 (_2!1072 lt!32783)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32783))))))

(declare-fun lt!33285 () (_ BitVec 64))

(assert (=> b!74049 (= lt!33285 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33265 () (_ BitVec 64))

(assert (=> b!74049 (= lt!33265 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000))))

(declare-fun lt!33279 () Unit!2076)

(assert (=> b!74049 (= lt!33279 (addStillContains!51 lt!33280 lt!33285 (zeroValue!2114 (_2!1072 lt!32783)) lt!33265))))

(assert (=> b!74049 (contains!720 (+!93 lt!33280 (tuple2!2121 lt!33285 (zeroValue!2114 (_2!1072 lt!32783)))) lt!33265)))

(declare-fun lt!33274 () Unit!2076)

(assert (=> b!74049 (= lt!33274 lt!33279)))

(declare-fun lt!33283 () ListLongMap!1401)

(assert (=> b!74049 (= lt!33283 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (_2!1072 lt!32783)) (_values!2195 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783)) (extraKeys!2071 (_2!1072 lt!32783)) (zeroValue!2114 (_2!1072 lt!32783)) (minValue!2114 (_2!1072 lt!32783)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32783))))))

(declare-fun lt!33278 () (_ BitVec 64))

(assert (=> b!74049 (= lt!33278 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33282 () (_ BitVec 64))

(assert (=> b!74049 (= lt!33282 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000))))

(declare-fun lt!33281 () Unit!2076)

(assert (=> b!74049 (= lt!33281 (addApplyDifferent!51 lt!33283 lt!33278 (minValue!2114 (_2!1072 lt!32783)) lt!33282))))

(assert (=> b!74049 (= (apply!75 (+!93 lt!33283 (tuple2!2121 lt!33278 (minValue!2114 (_2!1072 lt!32783)))) lt!33282) (apply!75 lt!33283 lt!33282))))

(declare-fun lt!33271 () Unit!2076)

(assert (=> b!74049 (= lt!33271 lt!33281)))

(declare-fun lt!33268 () ListLongMap!1401)

(assert (=> b!74049 (= lt!33268 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (_2!1072 lt!32783)) (_values!2195 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783)) (extraKeys!2071 (_2!1072 lt!32783)) (zeroValue!2114 (_2!1072 lt!32783)) (minValue!2114 (_2!1072 lt!32783)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32783))))))

(declare-fun lt!33269 () (_ BitVec 64))

(assert (=> b!74049 (= lt!33269 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33276 () (_ BitVec 64))

(assert (=> b!74049 (= lt!33276 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000))))

(declare-fun lt!33284 () Unit!2076)

(assert (=> b!74049 (= lt!33284 (addApplyDifferent!51 lt!33268 lt!33269 (zeroValue!2114 (_2!1072 lt!32783)) lt!33276))))

(assert (=> b!74049 (= (apply!75 (+!93 lt!33268 (tuple2!2121 lt!33269 (zeroValue!2114 (_2!1072 lt!32783)))) lt!33276) (apply!75 lt!33268 lt!33276))))

(declare-fun lt!33267 () Unit!2076)

(assert (=> b!74049 (= lt!33267 lt!33284)))

(declare-fun lt!33272 () ListLongMap!1401)

(assert (=> b!74049 (= lt!33272 (getCurrentListMapNoExtraKeys!58 (_keys!3864 (_2!1072 lt!32783)) (_values!2195 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783)) (extraKeys!2071 (_2!1072 lt!32783)) (zeroValue!2114 (_2!1072 lt!32783)) (minValue!2114 (_2!1072 lt!32783)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32783))))))

(declare-fun lt!33277 () (_ BitVec 64))

(assert (=> b!74049 (= lt!33277 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33286 () (_ BitVec 64))

(assert (=> b!74049 (= lt!33286 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000))))

(assert (=> b!74049 (= lt!33266 (addApplyDifferent!51 lt!33272 lt!33277 (minValue!2114 (_2!1072 lt!32783)) lt!33286))))

(assert (=> b!74049 (= (apply!75 (+!93 lt!33272 (tuple2!2121 lt!33277 (minValue!2114 (_2!1072 lt!32783)))) lt!33286) (apply!75 lt!33272 lt!33286))))

(declare-fun bm!6526 () Bool)

(declare-fun call!6529 () ListLongMap!1401)

(declare-fun call!6528 () ListLongMap!1401)

(assert (=> bm!6526 (= call!6529 call!6528)))

(declare-fun b!74050 () Bool)

(declare-fun e!48387 () ListLongMap!1401)

(assert (=> b!74050 (= e!48387 call!6529)))

(declare-fun b!74051 () Bool)

(declare-fun res!39192 () Bool)

(assert (=> b!74051 (=> (not res!39192) (not e!48395))))

(assert (=> b!74051 (= res!39192 e!48393)))

(declare-fun c!11102 () Bool)

(assert (=> b!74051 (= c!11102 (not (= (bvand (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74052 () Bool)

(declare-fun call!6527 () Bool)

(assert (=> b!74052 (= e!48390 (not call!6527))))

(declare-fun b!74053 () Bool)

(declare-fun e!48396 () ListLongMap!1401)

(assert (=> b!74053 (= e!48396 (+!93 call!6528 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (_2!1072 lt!32783)))))))

(declare-fun b!74054 () Bool)

(assert (=> b!74054 (= e!48396 e!48387)))

(declare-fun c!11103 () Bool)

(assert (=> b!74054 (= c!11103 (and (not (= (bvand (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!11101 () Bool)

(declare-fun bm!6527 () Bool)

(assert (=> bm!6527 (= call!6528 (+!93 (ite c!11101 call!6531 (ite c!11103 call!6532 call!6526)) (ite (or c!11101 c!11103) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (_2!1072 lt!32783))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (_2!1072 lt!32783))))))))

(declare-fun b!74055 () Bool)

(declare-fun res!39185 () Bool)

(assert (=> b!74055 (=> (not res!39185) (not e!48395))))

(assert (=> b!74055 (= res!39185 e!48386)))

(declare-fun res!39190 () Bool)

(assert (=> b!74055 (=> res!39190 e!48386)))

(declare-fun e!48391 () Bool)

(assert (=> b!74055 (= res!39190 (not e!48391))))

(declare-fun res!39193 () Bool)

(assert (=> b!74055 (=> (not res!39193) (not e!48391))))

(assert (=> b!74055 (= res!39193 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))))))

(declare-fun b!74056 () Bool)

(assert (=> b!74056 (= e!48389 (= (apply!75 lt!33270 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 (_2!1072 lt!32783))))))

(declare-fun b!74057 () Bool)

(declare-fun e!48394 () ListLongMap!1401)

(assert (=> b!74057 (= e!48394 call!6526)))

(declare-fun b!74058 () Bool)

(declare-fun e!48388 () Bool)

(assert (=> b!74058 (= e!48390 e!48388)))

(declare-fun res!39189 () Bool)

(assert (=> b!74058 (= res!39189 call!6527)))

(assert (=> b!74058 (=> (not res!39189) (not e!48388))))

(declare-fun bm!6528 () Bool)

(assert (=> bm!6528 (= call!6530 (contains!720 lt!33270 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17297 () Bool)

(assert (=> d!17297 e!48395))

(declare-fun res!39191 () Bool)

(assert (=> d!17297 (=> (not res!39191) (not e!48395))))

(assert (=> d!17297 (= res!39191 (or (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))))))))

(declare-fun lt!33275 () ListLongMap!1401)

(assert (=> d!17297 (= lt!33270 lt!33275)))

(declare-fun lt!33273 () Unit!2076)

(assert (=> d!17297 (= lt!33273 e!48397)))

(declare-fun c!11104 () Bool)

(assert (=> d!17297 (= c!11104 e!48392)))

(declare-fun res!39188 () Bool)

(assert (=> d!17297 (=> (not res!39188) (not e!48392))))

(assert (=> d!17297 (= res!39188 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))))))

(assert (=> d!17297 (= lt!33275 e!48396)))

(assert (=> d!17297 (= c!11101 (and (not (= (bvand (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17297 (validMask!0 (mask!6179 (_2!1072 lt!32783)))))

(assert (=> d!17297 (= (getCurrentListMap!414 (_keys!3864 (_2!1072 lt!32783)) (_values!2195 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783)) (extraKeys!2071 (_2!1072 lt!32783)) (zeroValue!2114 (_2!1072 lt!32783)) (minValue!2114 (_2!1072 lt!32783)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32783))) lt!33270)))

(declare-fun bm!6529 () Bool)

(assert (=> bm!6529 (= call!6527 (contains!720 lt!33270 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74059 () Bool)

(assert (=> b!74059 (= e!48394 call!6529)))

(declare-fun b!74060 () Bool)

(assert (=> b!74060 (= e!48385 (= (apply!75 lt!33270 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (_values!2195 (_2!1072 lt!32783))) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 (_2!1072 lt!32783)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74060 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_values!2195 (_2!1072 lt!32783)))))))

(assert (=> b!74060 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))))))

(declare-fun b!74061 () Bool)

(assert (=> b!74061 (= e!48388 (= (apply!75 lt!33270 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 (_2!1072 lt!32783))))))

(declare-fun b!74062 () Bool)

(assert (=> b!74062 (= e!48391 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000)))))

(declare-fun b!74063 () Bool)

(declare-fun c!11105 () Bool)

(assert (=> b!74063 (= c!11105 (and (not (= (bvand (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74063 (= e!48387 e!48394)))

(assert (= (and d!17297 c!11101) b!74053))

(assert (= (and d!17297 (not c!11101)) b!74054))

(assert (= (and b!74054 c!11103) b!74050))

(assert (= (and b!74054 (not c!11103)) b!74063))

(assert (= (and b!74063 c!11105) b!74059))

(assert (= (and b!74063 (not c!11105)) b!74057))

(assert (= (or b!74059 b!74057) bm!6524))

(assert (= (or b!74050 bm!6524) bm!6525))

(assert (= (or b!74050 b!74059) bm!6526))

(assert (= (or b!74053 bm!6525) bm!6523))

(assert (= (or b!74053 bm!6526) bm!6527))

(assert (= (and d!17297 res!39188) b!74043))

(assert (= (and d!17297 c!11104) b!74049))

(assert (= (and d!17297 (not c!11104)) b!74046))

(assert (= (and d!17297 res!39191) b!74055))

(assert (= (and b!74055 res!39193) b!74062))

(assert (= (and b!74055 (not res!39190)) b!74048))

(assert (= (and b!74048 res!39186) b!74060))

(assert (= (and b!74055 res!39185) b!74051))

(assert (= (and b!74051 c!11102) b!74047))

(assert (= (and b!74051 (not c!11102)) b!74045))

(assert (= (and b!74047 res!39187) b!74056))

(assert (= (or b!74047 b!74045) bm!6528))

(assert (= (and b!74051 res!39192) b!74044))

(assert (= (and b!74044 c!11106) b!74058))

(assert (= (and b!74044 (not c!11106)) b!74052))

(assert (= (and b!74058 res!39189) b!74061))

(assert (= (or b!74058 b!74052) bm!6529))

(declare-fun b_lambda!3327 () Bool)

(assert (=> (not b_lambda!3327) (not b!74060)))

(declare-fun t!5041 () Bool)

(declare-fun tb!1537 () Bool)

(assert (=> (and b!72793 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 (_2!1072 lt!32783))) t!5041) tb!1537))

(declare-fun result!2693 () Bool)

(assert (=> tb!1537 (= result!2693 tp_is_empty!2473)))

(assert (=> b!74060 t!5041))

(declare-fun b_and!4541 () Bool)

(assert (= b_and!4537 (and (=> t!5041 result!2693) b_and!4541)))

(declare-fun t!5043 () Bool)

(declare-fun tb!1539 () Bool)

(assert (=> (and b!72792 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (_2!1072 lt!32783))) t!5043) tb!1539))

(declare-fun result!2695 () Bool)

(assert (= result!2695 result!2693))

(assert (=> b!74060 t!5043))

(declare-fun b_and!4543 () Bool)

(assert (= b_and!4539 (and (=> t!5043 result!2695) b_and!4543)))

(declare-fun m!72861 () Bool)

(assert (=> b!74048 m!72861))

(assert (=> b!74048 m!72861))

(declare-fun m!72863 () Bool)

(assert (=> b!74048 m!72863))

(declare-fun m!72865 () Bool)

(assert (=> b!74049 m!72865))

(declare-fun m!72867 () Bool)

(assert (=> b!74049 m!72867))

(declare-fun m!72869 () Bool)

(assert (=> b!74049 m!72869))

(assert (=> b!74049 m!72861))

(declare-fun m!72871 () Bool)

(assert (=> b!74049 m!72871))

(declare-fun m!72873 () Bool)

(assert (=> b!74049 m!72873))

(declare-fun m!72875 () Bool)

(assert (=> b!74049 m!72875))

(declare-fun m!72877 () Bool)

(assert (=> b!74049 m!72877))

(declare-fun m!72879 () Bool)

(assert (=> b!74049 m!72879))

(declare-fun m!72881 () Bool)

(assert (=> b!74049 m!72881))

(assert (=> b!74049 m!72879))

(assert (=> b!74049 m!72865))

(declare-fun m!72883 () Bool)

(assert (=> b!74049 m!72883))

(declare-fun m!72885 () Bool)

(assert (=> b!74049 m!72885))

(assert (=> b!74049 m!72871))

(declare-fun m!72887 () Bool)

(assert (=> b!74049 m!72887))

(assert (=> b!74049 m!72883))

(declare-fun m!72889 () Bool)

(assert (=> b!74049 m!72889))

(declare-fun m!72891 () Bool)

(assert (=> b!74049 m!72891))

(declare-fun m!72893 () Bool)

(assert (=> b!74049 m!72893))

(declare-fun m!72895 () Bool)

(assert (=> b!74049 m!72895))

(assert (=> b!74043 m!72861))

(assert (=> b!74043 m!72861))

(declare-fun m!72897 () Bool)

(assert (=> b!74043 m!72897))

(declare-fun m!72899 () Bool)

(assert (=> bm!6529 m!72899))

(assert (=> bm!6523 m!72891))

(declare-fun m!72901 () Bool)

(assert (=> bm!6528 m!72901))

(declare-fun m!72903 () Bool)

(assert (=> d!17297 m!72903))

(declare-fun m!72905 () Bool)

(assert (=> bm!6527 m!72905))

(declare-fun m!72907 () Bool)

(assert (=> b!74053 m!72907))

(declare-fun m!72909 () Bool)

(assert (=> b!74061 m!72909))

(assert (=> b!74062 m!72861))

(assert (=> b!74062 m!72861))

(assert (=> b!74062 m!72897))

(declare-fun m!72911 () Bool)

(assert (=> b!74060 m!72911))

(assert (=> b!74060 m!72861))

(assert (=> b!74060 m!72861))

(declare-fun m!72913 () Bool)

(assert (=> b!74060 m!72913))

(declare-fun m!72915 () Bool)

(assert (=> b!74060 m!72915))

(assert (=> b!74060 m!72911))

(declare-fun m!72917 () Bool)

(assert (=> b!74060 m!72917))

(assert (=> b!74060 m!72915))

(declare-fun m!72919 () Bool)

(assert (=> b!74056 m!72919))

(assert (=> d!16963 d!17297))

(declare-fun b!74064 () Bool)

(declare-fun e!48405 () Bool)

(assert (=> b!74064 (= e!48405 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74065 () Bool)

(declare-fun e!48408 () Bool)

(declare-fun e!48403 () Bool)

(assert (=> b!74065 (= e!48408 e!48403)))

(declare-fun c!11112 () Bool)

(assert (=> b!74065 (= c!11112 (not (= (bvand lt!32770 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74066 () Bool)

(declare-fun e!48406 () Bool)

(declare-fun call!6537 () Bool)

(assert (=> b!74066 (= e!48406 (not call!6537))))

(declare-fun b!74067 () Bool)

(declare-fun e!48410 () Unit!2076)

(declare-fun Unit!2122 () Unit!2076)

(assert (=> b!74067 (= e!48410 Unit!2122)))

(declare-fun call!6538 () ListLongMap!1401)

(declare-fun bm!6530 () Bool)

(assert (=> bm!6530 (= call!6538 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32770 lt!32495 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!74068 () Bool)

(declare-fun e!48402 () Bool)

(assert (=> b!74068 (= e!48406 e!48402)))

(declare-fun res!39196 () Bool)

(assert (=> b!74068 (= res!39196 call!6537)))

(assert (=> b!74068 (=> (not res!39196) (not e!48402))))

(declare-fun bm!6531 () Bool)

(declare-fun call!6533 () ListLongMap!1401)

(declare-fun call!6539 () ListLongMap!1401)

(assert (=> bm!6531 (= call!6533 call!6539)))

(declare-fun b!74069 () Bool)

(declare-fun e!48399 () Bool)

(declare-fun e!48398 () Bool)

(assert (=> b!74069 (= e!48399 e!48398)))

(declare-fun res!39195 () Bool)

(assert (=> b!74069 (=> (not res!39195) (not e!48398))))

(declare-fun lt!33292 () ListLongMap!1401)

(assert (=> b!74069 (= res!39195 (contains!720 lt!33292 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74069 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun bm!6532 () Bool)

(assert (=> bm!6532 (= call!6539 call!6538)))

(declare-fun b!74070 () Bool)

(declare-fun lt!33288 () Unit!2076)

(assert (=> b!74070 (= e!48410 lt!33288)))

(declare-fun lt!33302 () ListLongMap!1401)

(assert (=> b!74070 (= lt!33302 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32770 lt!32495 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33307 () (_ BitVec 64))

(assert (=> b!74070 (= lt!33307 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33287 () (_ BitVec 64))

(assert (=> b!74070 (= lt!33287 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33301 () Unit!2076)

(assert (=> b!74070 (= lt!33301 (addStillContains!51 lt!33302 lt!33307 lt!32495 lt!33287))))

(assert (=> b!74070 (contains!720 (+!93 lt!33302 (tuple2!2121 lt!33307 lt!32495)) lt!33287)))

(declare-fun lt!33296 () Unit!2076)

(assert (=> b!74070 (= lt!33296 lt!33301)))

(declare-fun lt!33305 () ListLongMap!1401)

(assert (=> b!74070 (= lt!33305 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32770 lt!32495 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33300 () (_ BitVec 64))

(assert (=> b!74070 (= lt!33300 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33304 () (_ BitVec 64))

(assert (=> b!74070 (= lt!33304 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33303 () Unit!2076)

(assert (=> b!74070 (= lt!33303 (addApplyDifferent!51 lt!33305 lt!33300 (minValue!2114 newMap!16) lt!33304))))

(assert (=> b!74070 (= (apply!75 (+!93 lt!33305 (tuple2!2121 lt!33300 (minValue!2114 newMap!16))) lt!33304) (apply!75 lt!33305 lt!33304))))

(declare-fun lt!33293 () Unit!2076)

(assert (=> b!74070 (= lt!33293 lt!33303)))

(declare-fun lt!33290 () ListLongMap!1401)

(assert (=> b!74070 (= lt!33290 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32770 lt!32495 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33291 () (_ BitVec 64))

(assert (=> b!74070 (= lt!33291 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33298 () (_ BitVec 64))

(assert (=> b!74070 (= lt!33298 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33306 () Unit!2076)

(assert (=> b!74070 (= lt!33306 (addApplyDifferent!51 lt!33290 lt!33291 lt!32495 lt!33298))))

(assert (=> b!74070 (= (apply!75 (+!93 lt!33290 (tuple2!2121 lt!33291 lt!32495)) lt!33298) (apply!75 lt!33290 lt!33298))))

(declare-fun lt!33289 () Unit!2076)

(assert (=> b!74070 (= lt!33289 lt!33306)))

(declare-fun lt!33294 () ListLongMap!1401)

(assert (=> b!74070 (= lt!33294 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32770 lt!32495 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33299 () (_ BitVec 64))

(assert (=> b!74070 (= lt!33299 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33308 () (_ BitVec 64))

(assert (=> b!74070 (= lt!33308 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74070 (= lt!33288 (addApplyDifferent!51 lt!33294 lt!33299 (minValue!2114 newMap!16) lt!33308))))

(assert (=> b!74070 (= (apply!75 (+!93 lt!33294 (tuple2!2121 lt!33299 (minValue!2114 newMap!16))) lt!33308) (apply!75 lt!33294 lt!33308))))

(declare-fun bm!6533 () Bool)

(declare-fun call!6536 () ListLongMap!1401)

(declare-fun call!6535 () ListLongMap!1401)

(assert (=> bm!6533 (= call!6536 call!6535)))

(declare-fun b!74071 () Bool)

(declare-fun e!48400 () ListLongMap!1401)

(assert (=> b!74071 (= e!48400 call!6536)))

(declare-fun b!74072 () Bool)

(declare-fun res!39201 () Bool)

(assert (=> b!74072 (=> (not res!39201) (not e!48408))))

(assert (=> b!74072 (= res!39201 e!48406)))

(declare-fun c!11108 () Bool)

(assert (=> b!74072 (= c!11108 (not (= (bvand lt!32770 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74073 () Bool)

(declare-fun call!6534 () Bool)

(assert (=> b!74073 (= e!48403 (not call!6534))))

(declare-fun b!74074 () Bool)

(declare-fun e!48409 () ListLongMap!1401)

(assert (=> b!74074 (= e!48409 (+!93 call!6535 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!74075 () Bool)

(assert (=> b!74075 (= e!48409 e!48400)))

(declare-fun c!11109 () Bool)

(assert (=> b!74075 (= c!11109 (and (not (= (bvand lt!32770 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!32770 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!11107 () Bool)

(declare-fun bm!6534 () Bool)

(assert (=> bm!6534 (= call!6535 (+!93 (ite c!11107 call!6538 (ite c!11109 call!6539 call!6533)) (ite (or c!11107 c!11109) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!74076 () Bool)

(declare-fun res!39194 () Bool)

(assert (=> b!74076 (=> (not res!39194) (not e!48408))))

(assert (=> b!74076 (= res!39194 e!48399)))

(declare-fun res!39199 () Bool)

(assert (=> b!74076 (=> res!39199 e!48399)))

(declare-fun e!48404 () Bool)

(assert (=> b!74076 (= res!39199 (not e!48404))))

(declare-fun res!39202 () Bool)

(assert (=> b!74076 (=> (not res!39202) (not e!48404))))

(assert (=> b!74076 (= res!39202 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74077 () Bool)

(assert (=> b!74077 (= e!48402 (= (apply!75 lt!33292 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32495))))

(declare-fun b!74078 () Bool)

(declare-fun e!48407 () ListLongMap!1401)

(assert (=> b!74078 (= e!48407 call!6533)))

(declare-fun b!74079 () Bool)

(declare-fun e!48401 () Bool)

(assert (=> b!74079 (= e!48403 e!48401)))

(declare-fun res!39198 () Bool)

(assert (=> b!74079 (= res!39198 call!6534)))

(assert (=> b!74079 (=> (not res!39198) (not e!48401))))

(declare-fun bm!6535 () Bool)

(assert (=> bm!6535 (= call!6537 (contains!720 lt!33292 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17299 () Bool)

(assert (=> d!17299 e!48408))

(declare-fun res!39200 () Bool)

(assert (=> d!17299 (=> (not res!39200) (not e!48408))))

(assert (=> d!17299 (= res!39200 (or (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))))

(declare-fun lt!33297 () ListLongMap!1401)

(assert (=> d!17299 (= lt!33292 lt!33297)))

(declare-fun lt!33295 () Unit!2076)

(assert (=> d!17299 (= lt!33295 e!48410)))

(declare-fun c!11110 () Bool)

(assert (=> d!17299 (= c!11110 e!48405)))

(declare-fun res!39197 () Bool)

(assert (=> d!17299 (=> (not res!39197) (not e!48405))))

(assert (=> d!17299 (= res!39197 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17299 (= lt!33297 e!48409)))

(assert (=> d!17299 (= c!11107 (and (not (= (bvand lt!32770 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!32770 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17299 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17299 (= (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32770 lt!32495 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33292)))

(declare-fun bm!6536 () Bool)

(assert (=> bm!6536 (= call!6534 (contains!720 lt!33292 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74080 () Bool)

(assert (=> b!74080 (= e!48407 call!6536)))

(declare-fun b!74081 () Bool)

(assert (=> b!74081 (= e!48398 (= (apply!75 lt!33292 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74081 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_values!2195 newMap!16))))))

(assert (=> b!74081 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74082 () Bool)

(assert (=> b!74082 (= e!48401 (= (apply!75 lt!33292 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun b!74083 () Bool)

(assert (=> b!74083 (= e!48404 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74084 () Bool)

(declare-fun c!11111 () Bool)

(assert (=> b!74084 (= c!11111 (and (not (= (bvand lt!32770 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!32770 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74084 (= e!48400 e!48407)))

(assert (= (and d!17299 c!11107) b!74074))

(assert (= (and d!17299 (not c!11107)) b!74075))

(assert (= (and b!74075 c!11109) b!74071))

(assert (= (and b!74075 (not c!11109)) b!74084))

(assert (= (and b!74084 c!11111) b!74080))

(assert (= (and b!74084 (not c!11111)) b!74078))

(assert (= (or b!74080 b!74078) bm!6531))

(assert (= (or b!74071 bm!6531) bm!6532))

(assert (= (or b!74071 b!74080) bm!6533))

(assert (= (or b!74074 bm!6532) bm!6530))

(assert (= (or b!74074 bm!6533) bm!6534))

(assert (= (and d!17299 res!39197) b!74064))

(assert (= (and d!17299 c!11110) b!74070))

(assert (= (and d!17299 (not c!11110)) b!74067))

(assert (= (and d!17299 res!39200) b!74076))

(assert (= (and b!74076 res!39202) b!74083))

(assert (= (and b!74076 (not res!39199)) b!74069))

(assert (= (and b!74069 res!39195) b!74081))

(assert (= (and b!74076 res!39194) b!74072))

(assert (= (and b!74072 c!11108) b!74068))

(assert (= (and b!74072 (not c!11108)) b!74066))

(assert (= (and b!74068 res!39196) b!74077))

(assert (= (or b!74068 b!74066) bm!6535))

(assert (= (and b!74072 res!39201) b!74065))

(assert (= (and b!74065 c!11112) b!74079))

(assert (= (and b!74065 (not c!11112)) b!74073))

(assert (= (and b!74079 res!39198) b!74082))

(assert (= (or b!74079 b!74073) bm!6536))

(declare-fun b_lambda!3329 () Bool)

(assert (=> (not b_lambda!3329) (not b!74081)))

(assert (=> b!74081 t!5036))

(declare-fun b_and!4545 () Bool)

(assert (= b_and!4541 (and (=> t!5036 result!2689) b_and!4545)))

(assert (=> b!74081 t!5038))

(declare-fun b_and!4547 () Bool)

(assert (= b_and!4543 (and (=> t!5038 result!2691) b_and!4547)))

(assert (=> b!74069 m!71603))

(assert (=> b!74069 m!71603))

(declare-fun m!72921 () Bool)

(assert (=> b!74069 m!72921))

(declare-fun m!72923 () Bool)

(assert (=> b!74070 m!72923))

(declare-fun m!72925 () Bool)

(assert (=> b!74070 m!72925))

(declare-fun m!72927 () Bool)

(assert (=> b!74070 m!72927))

(assert (=> b!74070 m!71603))

(declare-fun m!72929 () Bool)

(assert (=> b!74070 m!72929))

(declare-fun m!72931 () Bool)

(assert (=> b!74070 m!72931))

(declare-fun m!72933 () Bool)

(assert (=> b!74070 m!72933))

(declare-fun m!72935 () Bool)

(assert (=> b!74070 m!72935))

(declare-fun m!72937 () Bool)

(assert (=> b!74070 m!72937))

(declare-fun m!72939 () Bool)

(assert (=> b!74070 m!72939))

(assert (=> b!74070 m!72937))

(assert (=> b!74070 m!72923))

(declare-fun m!72941 () Bool)

(assert (=> b!74070 m!72941))

(declare-fun m!72943 () Bool)

(assert (=> b!74070 m!72943))

(assert (=> b!74070 m!72929))

(declare-fun m!72945 () Bool)

(assert (=> b!74070 m!72945))

(assert (=> b!74070 m!72941))

(declare-fun m!72947 () Bool)

(assert (=> b!74070 m!72947))

(declare-fun m!72949 () Bool)

(assert (=> b!74070 m!72949))

(declare-fun m!72951 () Bool)

(assert (=> b!74070 m!72951))

(declare-fun m!72953 () Bool)

(assert (=> b!74070 m!72953))

(assert (=> b!74064 m!71603))

(assert (=> b!74064 m!71603))

(assert (=> b!74064 m!71605))

(declare-fun m!72955 () Bool)

(assert (=> bm!6536 m!72955))

(assert (=> bm!6530 m!72949))

(declare-fun m!72957 () Bool)

(assert (=> bm!6535 m!72957))

(assert (=> d!17299 m!71557))

(declare-fun m!72959 () Bool)

(assert (=> bm!6534 m!72959))

(declare-fun m!72961 () Bool)

(assert (=> b!74074 m!72961))

(declare-fun m!72963 () Bool)

(assert (=> b!74082 m!72963))

(assert (=> b!74083 m!71603))

(assert (=> b!74083 m!71603))

(assert (=> b!74083 m!71605))

(assert (=> b!74081 m!71663))

(assert (=> b!74081 m!71603))

(assert (=> b!74081 m!71603))

(declare-fun m!72965 () Bool)

(assert (=> b!74081 m!72965))

(assert (=> b!74081 m!72071))

(assert (=> b!74081 m!71663))

(assert (=> b!74081 m!72073))

(assert (=> b!74081 m!72071))

(declare-fun m!72967 () Bool)

(assert (=> b!74077 m!72967))

(assert (=> d!16999 d!17299))

(assert (=> d!16999 d!17001))

(declare-fun d!17301 () Bool)

(assert (=> d!17301 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32770 lt!32495 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (=> d!17301 true))

(declare-fun _$7!62 () Unit!2076)

(assert (=> d!17301 (= (choose!427 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) lt!32770 (zeroValue!2114 newMap!16) lt!32495 (minValue!2114 newMap!16) (defaultEntry!2212 newMap!16)) _$7!62)))

(declare-fun bs!3193 () Bool)

(assert (= bs!3193 d!17301))

(assert (=> bs!3193 m!71403))

(assert (=> bs!3193 m!71403))

(assert (=> bs!3193 m!72023))

(assert (=> bs!3193 m!72021))

(assert (=> d!16999 d!17301))

(assert (=> d!16999 d!17149))

(declare-fun d!17303 () Bool)

(declare-fun e!48411 () Bool)

(assert (=> d!17303 e!48411))

(declare-fun res!39203 () Bool)

(assert (=> d!17303 (=> (not res!39203) (not e!48411))))

(declare-fun lt!33311 () ListLongMap!1401)

(assert (=> d!17303 (= res!39203 (contains!720 lt!33311 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495))))))

(declare-fun lt!33312 () List!1474)

(assert (=> d!17303 (= lt!33311 (ListLongMap!1402 lt!33312))))

(declare-fun lt!33310 () Unit!2076)

(declare-fun lt!33309 () Unit!2076)

(assert (=> d!17303 (= lt!33310 lt!33309)))

(assert (=> d!17303 (= (getValueByKey!134 lt!33312 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495))) (Some!139 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495))))))

(assert (=> d!17303 (= lt!33309 (lemmaContainsTupThenGetReturnValue!51 lt!33312 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495))))))

(assert (=> d!17303 (= lt!33312 (insertStrictlySorted!54 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495))))))

(assert (=> d!17303 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495)) lt!33311)))

(declare-fun b!74085 () Bool)

(declare-fun res!39204 () Bool)

(assert (=> b!74085 (=> (not res!39204) (not e!48411))))

(assert (=> b!74085 (= res!39204 (= (getValueByKey!134 (toList!716 lt!33311) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495))) (Some!139 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495)))))))

(declare-fun b!74086 () Bool)

(assert (=> b!74086 (= e!48411 (contains!721 (toList!716 lt!33311) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32495)))))

(assert (= (and d!17303 res!39203) b!74085))

(assert (= (and b!74085 res!39204) b!74086))

(declare-fun m!72969 () Bool)

(assert (=> d!17303 m!72969))

(declare-fun m!72971 () Bool)

(assert (=> d!17303 m!72971))

(declare-fun m!72973 () Bool)

(assert (=> d!17303 m!72973))

(declare-fun m!72975 () Bool)

(assert (=> d!17303 m!72975))

(declare-fun m!72977 () Bool)

(assert (=> b!74085 m!72977))

(declare-fun m!72979 () Bool)

(assert (=> b!74086 m!72979))

(assert (=> d!16999 d!17303))

(declare-fun lt!33313 () Bool)

(declare-fun d!17305 () Bool)

(assert (=> d!17305 (= lt!33313 (select (content!79 (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!48412 () Bool)

(assert (=> d!17305 (= lt!33313 e!48412)))

(declare-fun res!39206 () Bool)

(assert (=> d!17305 (=> (not res!39206) (not e!48412))))

(assert (=> d!17305 (= res!39206 ((_ is Cons!1469) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)))))

(assert (=> d!17305 (= (contains!722 (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!33313)))

(declare-fun b!74087 () Bool)

(declare-fun e!48413 () Bool)

(assert (=> b!74087 (= e!48412 e!48413)))

(declare-fun res!39205 () Bool)

(assert (=> b!74087 (=> res!39205 e!48413)))

(assert (=> b!74087 (= res!39205 (= (h!2056 (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!74088 () Bool)

(assert (=> b!74088 (= e!48413 (contains!722 (t!5022 (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!17305 res!39206) b!74087))

(assert (= (and b!74087 (not res!39205)) b!74088))

(declare-fun m!72981 () Bool)

(assert (=> d!17305 m!72981))

(assert (=> d!17305 m!72321))

(declare-fun m!72983 () Bool)

(assert (=> d!17305 m!72983))

(assert (=> b!74088 m!72321))

(declare-fun m!72985 () Bool)

(assert (=> b!74088 m!72985))

(assert (=> b!73686 d!17305))

(declare-fun d!17307 () Bool)

(declare-fun e!48414 () Bool)

(assert (=> d!17307 e!48414))

(declare-fun res!39207 () Bool)

(assert (=> d!17307 (=> (not res!39207) (not e!48414))))

(declare-fun lt!33316 () ListLongMap!1401)

(assert (=> d!17307 (= res!39207 (contains!720 lt!33316 (_1!1071 (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(declare-fun lt!33317 () List!1474)

(assert (=> d!17307 (= lt!33316 (ListLongMap!1402 lt!33317))))

(declare-fun lt!33315 () Unit!2076)

(declare-fun lt!33314 () Unit!2076)

(assert (=> d!17307 (= lt!33315 lt!33314)))

(assert (=> d!17307 (= (getValueByKey!134 lt!33317 (_1!1071 (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))) (Some!139 (_2!1071 (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17307 (= lt!33314 (lemmaContainsTupThenGetReturnValue!51 lt!33317 (_1!1071 (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (_2!1071 (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17307 (= lt!33317 (insertStrictlySorted!54 (toList!716 (ite c!10909 call!6448 (ite c!10911 call!6449 call!6443))) (_1!1071 (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (_2!1071 (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17307 (= (+!93 (ite c!10909 call!6448 (ite c!10911 call!6449 call!6443)) (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) lt!33316)))

(declare-fun b!74089 () Bool)

(declare-fun res!39208 () Bool)

(assert (=> b!74089 (=> (not res!39208) (not e!48414))))

(assert (=> b!74089 (= res!39208 (= (getValueByKey!134 (toList!716 lt!33316) (_1!1071 (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))) (Some!139 (_2!1071 (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))))

(declare-fun b!74090 () Bool)

(assert (=> b!74090 (= e!48414 (contains!721 (toList!716 lt!33316) (ite (or c!10909 c!10911) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (= (and d!17307 res!39207) b!74089))

(assert (= (and b!74089 res!39208) b!74090))

(declare-fun m!72987 () Bool)

(assert (=> d!17307 m!72987))

(declare-fun m!72989 () Bool)

(assert (=> d!17307 m!72989))

(declare-fun m!72991 () Bool)

(assert (=> d!17307 m!72991))

(declare-fun m!72993 () Bool)

(assert (=> d!17307 m!72993))

(declare-fun m!72995 () Bool)

(assert (=> b!74089 m!72995))

(declare-fun m!72997 () Bool)

(assert (=> b!74090 m!72997))

(assert (=> bm!6444 d!17307))

(declare-fun d!17309 () Bool)

(declare-fun lt!33318 () Bool)

(assert (=> d!17309 (= lt!33318 (select (content!78 (toList!716 lt!33080)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun e!48416 () Bool)

(assert (=> d!17309 (= lt!33318 e!48416)))

(declare-fun res!39209 () Bool)

(assert (=> d!17309 (=> (not res!39209) (not e!48416))))

(assert (=> d!17309 (= res!39209 ((_ is Cons!1470) (toList!716 lt!33080)))))

(assert (=> d!17309 (= (contains!721 (toList!716 lt!33080) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!33318)))

(declare-fun b!74091 () Bool)

(declare-fun e!48415 () Bool)

(assert (=> b!74091 (= e!48416 e!48415)))

(declare-fun res!39210 () Bool)

(assert (=> b!74091 (=> res!39210 e!48415)))

(assert (=> b!74091 (= res!39210 (= (h!2057 (toList!716 lt!33080)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!74092 () Bool)

(assert (=> b!74092 (= e!48415 (contains!721 (t!5023 (toList!716 lt!33080)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17309 res!39209) b!74091))

(assert (= (and b!74091 (not res!39210)) b!74092))

(declare-fun m!72999 () Bool)

(assert (=> d!17309 m!72999))

(declare-fun m!73001 () Bool)

(assert (=> d!17309 m!73001))

(declare-fun m!73003 () Bool)

(assert (=> b!74092 m!73003))

(assert (=> b!73603 d!17309))

(assert (=> bm!6473 d!16893))

(declare-fun d!17311 () Bool)

(declare-fun c!11115 () Bool)

(assert (=> d!17311 (= c!11115 ((_ is Nil!1471) (toList!716 lt!32594)))))

(declare-fun e!48419 () (InoxSet tuple2!2120))

(assert (=> d!17311 (= (content!78 (toList!716 lt!32594)) e!48419)))

(declare-fun b!74097 () Bool)

(assert (=> b!74097 (= e!48419 ((as const (Array tuple2!2120 Bool)) false))))

(declare-fun b!74098 () Bool)

(assert (=> b!74098 (= e!48419 ((_ map or) (store ((as const (Array tuple2!2120 Bool)) false) (h!2057 (toList!716 lt!32594)) true) (content!78 (t!5023 (toList!716 lt!32594)))))))

(assert (= (and d!17311 c!11115) b!74097))

(assert (= (and d!17311 (not c!11115)) b!74098))

(declare-fun m!73005 () Bool)

(assert (=> b!74098 m!73005))

(assert (=> b!74098 m!72687))

(assert (=> d!16949 d!17311))

(declare-fun d!17313 () Bool)

(assert (=> d!17313 (= ($colon$colon!65 e!48029 (ite c!10932 (h!2057 (toList!716 lt!32489)) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492)))) (Cons!1470 (ite c!10932 (h!2057 (toList!716 lt!32489)) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))) e!48029))))

(assert (=> bm!6455 d!17313))

(declare-fun d!17315 () Bool)

(assert (=> d!17315 (= (apply!75 lt!32821 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1153 (getValueByKey!134 (toList!716 lt!32821) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3194 () Bool)

(assert (= bs!3194 d!17315))

(declare-fun m!73007 () Bool)

(assert (=> bs!3194 m!73007))

(assert (=> bs!3194 m!73007))

(declare-fun m!73009 () Bool)

(assert (=> bs!3194 m!73009))

(assert (=> b!73351 d!17315))

(declare-fun d!17317 () Bool)

(declare-fun res!39211 () Bool)

(declare-fun e!48420 () Bool)

(assert (=> d!17317 (=> res!39211 e!48420)))

(assert (=> d!17317 (= res!39211 (and ((_ is Cons!1470) (toList!716 lt!32614)) (= (_1!1071 (h!2057 (toList!716 lt!32614))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17317 (= (containsKey!137 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48420)))

(declare-fun b!74099 () Bool)

(declare-fun e!48421 () Bool)

(assert (=> b!74099 (= e!48420 e!48421)))

(declare-fun res!39212 () Bool)

(assert (=> b!74099 (=> (not res!39212) (not e!48421))))

(assert (=> b!74099 (= res!39212 (and (or (not ((_ is Cons!1470) (toList!716 lt!32614))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32614))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1470) (toList!716 lt!32614)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32614))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!74100 () Bool)

(assert (=> b!74100 (= e!48421 (containsKey!137 (t!5023 (toList!716 lt!32614)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17317 (not res!39211)) b!74099))

(assert (= (and b!74099 res!39212) b!74100))

(assert (=> b!74100 m!71385))

(declare-fun m!73011 () Bool)

(assert (=> b!74100 m!73011))

(assert (=> d!17077 d!17317))

(assert (=> b!73333 d!17105))

(declare-fun d!17319 () Bool)

(declare-fun res!39213 () Bool)

(declare-fun e!48422 () Bool)

(assert (=> d!17319 (=> res!39213 e!48422)))

(assert (=> d!17319 (= res!39213 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))))) lt!32615)))))

(assert (=> d!17319 (= (containsKey!137 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615) e!48422)))

(declare-fun b!74101 () Bool)

(declare-fun e!48423 () Bool)

(assert (=> b!74101 (= e!48422 e!48423)))

(declare-fun res!39214 () Bool)

(assert (=> b!74101 (=> (not res!39214) (not e!48423))))

(assert (=> b!74101 (= res!39214 (and (or (not ((_ is Cons!1470) (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))))) (bvsle (_1!1071 (h!2057 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))))) lt!32615)) ((_ is Cons!1470) (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)))) (bvslt (_1!1071 (h!2057 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))))) lt!32615)))))

(declare-fun b!74102 () Bool)

(assert (=> b!74102 (= e!48423 (containsKey!137 (t!5023 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)))) lt!32615))))

(assert (= (and d!17319 (not res!39213)) b!74101))

(assert (= (and b!74101 res!39214) b!74102))

(declare-fun m!73013 () Bool)

(assert (=> b!74102 m!73013))

(assert (=> d!16931 d!17319))

(declare-fun d!17321 () Bool)

(declare-fun e!48429 () Bool)

(assert (=> d!17321 e!48429))

(declare-fun res!39215 () Bool)

(assert (=> d!17321 (=> (not res!39215) (not e!48429))))

(declare-fun lt!33323 () ListLongMap!1401)

(assert (=> d!17321 (= res!39215 (not (contains!720 lt!33323 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48430 () ListLongMap!1401)

(assert (=> d!17321 (= lt!33323 e!48430)))

(declare-fun c!11119 () Bool)

(assert (=> d!17321 (= c!11119 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17321 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17321 (= (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775) (mask!6179 newMap!16) (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33323)))

(declare-fun b!74103 () Bool)

(declare-fun e!48428 () ListLongMap!1401)

(declare-fun call!6540 () ListLongMap!1401)

(assert (=> b!74103 (= e!48428 call!6540)))

(declare-fun bm!6537 () Bool)

(assert (=> bm!6537 (= call!6540 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775) (mask!6179 newMap!16) (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16)))))

(declare-fun b!74104 () Bool)

(declare-fun lt!33320 () Unit!2076)

(declare-fun lt!33319 () Unit!2076)

(assert (=> b!74104 (= lt!33320 lt!33319)))

(declare-fun lt!33321 () (_ BitVec 64))

(declare-fun lt!33324 () (_ BitVec 64))

(declare-fun lt!33325 () V!2945)

(declare-fun lt!33322 () ListLongMap!1401)

(assert (=> b!74104 (not (contains!720 (+!93 lt!33322 (tuple2!2121 lt!33321 lt!33325)) lt!33324))))

(assert (=> b!74104 (= lt!33319 (addStillNotContains!26 lt!33322 lt!33321 lt!33325 lt!33324))))

(assert (=> b!74104 (= lt!33324 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!74104 (= lt!33325 (get!1149 (select (arr!1851 (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!74104 (= lt!33321 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74104 (= lt!33322 call!6540)))

(assert (=> b!74104 (= e!48428 (+!93 call!6540 (tuple2!2121 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) (get!1149 (select (arr!1851 (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!74105 () Bool)

(declare-fun e!48425 () Bool)

(assert (=> b!74105 (= e!48425 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74105 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!74106 () Bool)

(declare-fun e!48427 () Bool)

(assert (=> b!74106 (= e!48429 e!48427)))

(declare-fun c!11118 () Bool)

(assert (=> b!74106 (= c!11118 e!48425)))

(declare-fun res!39218 () Bool)

(assert (=> b!74106 (=> (not res!39218) (not e!48425))))

(assert (=> b!74106 (= res!39218 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74107 () Bool)

(declare-fun res!39217 () Bool)

(assert (=> b!74107 (=> (not res!39217) (not e!48429))))

(assert (=> b!74107 (= res!39217 (not (contains!720 lt!33323 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74108 () Bool)

(declare-fun e!48426 () Bool)

(assert (=> b!74108 (= e!48427 e!48426)))

(assert (=> b!74108 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun res!39216 () Bool)

(assert (=> b!74108 (= res!39216 (contains!720 lt!33323 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74108 (=> (not res!39216) (not e!48426))))

(declare-fun b!74109 () Bool)

(assert (=> b!74109 (= e!48430 e!48428)))

(declare-fun c!11116 () Bool)

(assert (=> b!74109 (= c!11116 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74110 () Bool)

(declare-fun e!48424 () Bool)

(assert (=> b!74110 (= e!48427 e!48424)))

(declare-fun c!11117 () Bool)

(assert (=> b!74110 (= c!11117 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74111 () Bool)

(assert (=> b!74111 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> b!74111 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775))))))

(assert (=> b!74111 (= e!48426 (= (apply!75 lt!33323 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74112 () Bool)

(assert (=> b!74112 (= e!48424 (isEmpty!322 lt!33323))))

(declare-fun b!74113 () Bool)

(assert (=> b!74113 (= e!48430 (ListLongMap!1402 Nil!1471))))

(declare-fun b!74114 () Bool)

(assert (=> b!74114 (= e!48424 (= lt!33323 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775) (mask!6179 newMap!16) (ite c!10868 (ite c!10858 lt!32770 lt!32763) (extraKeys!2071 newMap!16)) (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16))))))

(assert (= (and d!17321 c!11119) b!74113))

(assert (= (and d!17321 (not c!11119)) b!74109))

(assert (= (and b!74109 c!11116) b!74104))

(assert (= (and b!74109 (not c!11116)) b!74103))

(assert (= (or b!74104 b!74103) bm!6537))

(assert (= (and d!17321 res!39215) b!74107))

(assert (= (and b!74107 res!39217) b!74106))

(assert (= (and b!74106 res!39218) b!74105))

(assert (= (and b!74106 c!11118) b!74108))

(assert (= (and b!74106 (not c!11118)) b!74110))

(assert (= (and b!74108 res!39216) b!74111))

(assert (= (and b!74110 c!11117) b!74114))

(assert (= (and b!74110 (not c!11117)) b!74112))

(declare-fun b_lambda!3331 () Bool)

(assert (=> (not b_lambda!3331) (not b!74104)))

(assert (=> b!74104 t!5036))

(declare-fun b_and!4549 () Bool)

(assert (= b_and!4545 (and (=> t!5036 result!2689) b_and!4549)))

(assert (=> b!74104 t!5038))

(declare-fun b_and!4551 () Bool)

(assert (= b_and!4547 (and (=> t!5038 result!2691) b_and!4551)))

(declare-fun b_lambda!3333 () Bool)

(assert (=> (not b_lambda!3333) (not b!74111)))

(assert (=> b!74111 t!5036))

(declare-fun b_and!4553 () Bool)

(assert (= b_and!4549 (and (=> t!5036 result!2689) b_and!4553)))

(assert (=> b!74111 t!5038))

(declare-fun b_and!4555 () Bool)

(assert (= b_and!4551 (and (=> t!5038 result!2691) b_and!4555)))

(declare-fun m!73015 () Bool)

(assert (=> b!74112 m!73015))

(declare-fun m!73017 () Bool)

(assert (=> b!74114 m!73017))

(assert (=> b!74104 m!71851))

(assert (=> b!74104 m!71663))

(assert (=> b!74104 m!71853))

(declare-fun m!73019 () Bool)

(assert (=> b!74104 m!73019))

(assert (=> b!74104 m!73019))

(declare-fun m!73021 () Bool)

(assert (=> b!74104 m!73021))

(declare-fun m!73023 () Bool)

(assert (=> b!74104 m!73023))

(declare-fun m!73025 () Bool)

(assert (=> b!74104 m!73025))

(assert (=> b!74104 m!71603))

(assert (=> b!74104 m!71851))

(assert (=> b!74104 m!71663))

(assert (=> b!74111 m!71851))

(assert (=> b!74111 m!71663))

(assert (=> b!74111 m!71853))

(assert (=> b!74111 m!71603))

(assert (=> b!74111 m!71603))

(declare-fun m!73027 () Bool)

(assert (=> b!74111 m!73027))

(assert (=> b!74111 m!71851))

(assert (=> b!74111 m!71663))

(declare-fun m!73029 () Bool)

(assert (=> d!17321 m!73029))

(assert (=> d!17321 m!71557))

(assert (=> bm!6537 m!73017))

(assert (=> b!74108 m!71603))

(assert (=> b!74108 m!71603))

(declare-fun m!73031 () Bool)

(assert (=> b!74108 m!73031))

(assert (=> b!74105 m!71603))

(assert (=> b!74105 m!71603))

(assert (=> b!74105 m!71605))

(declare-fun m!73033 () Bool)

(assert (=> b!74107 m!73033))

(assert (=> b!74109 m!71603))

(assert (=> b!74109 m!71603))

(assert (=> b!74109 m!71605))

(assert (=> bm!6457 d!17321))

(declare-fun d!17323 () Bool)

(assert (=> d!17323 (= (get!1152 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73361 d!17323))

(assert (=> b!73356 d!17033))

(declare-fun d!17325 () Bool)

(declare-fun res!39219 () Bool)

(declare-fun e!48431 () Bool)

(assert (=> d!17325 (=> res!39219 e!48431)))

(assert (=> d!17325 (= res!39219 (and ((_ is Cons!1470) lt!33133) (= (_1!1071 (h!2057 lt!33133)) (_1!1071 lt!32485))))))

(assert (=> d!17325 (= (containsKey!137 lt!33133 (_1!1071 lt!32485)) e!48431)))

(declare-fun b!74115 () Bool)

(declare-fun e!48432 () Bool)

(assert (=> b!74115 (= e!48431 e!48432)))

(declare-fun res!39220 () Bool)

(assert (=> b!74115 (=> (not res!39220) (not e!48432))))

(assert (=> b!74115 (= res!39220 (and (or (not ((_ is Cons!1470) lt!33133)) (bvsle (_1!1071 (h!2057 lt!33133)) (_1!1071 lt!32485))) ((_ is Cons!1470) lt!33133) (bvslt (_1!1071 (h!2057 lt!33133)) (_1!1071 lt!32485))))))

(declare-fun b!74116 () Bool)

(assert (=> b!74116 (= e!48432 (containsKey!137 (t!5023 lt!33133) (_1!1071 lt!32485)))))

(assert (= (and d!17325 (not res!39219)) b!74115))

(assert (= (and b!74115 res!39220) b!74116))

(declare-fun m!73035 () Bool)

(assert (=> b!74116 m!73035))

(assert (=> b!73667 d!17325))

(declare-fun bm!6538 () Bool)

(declare-fun call!6541 () (_ BitVec 32))

(assert (=> bm!6538 (= call!6541 (arrayCountValidKeys!0 (_keys!3864 (_2!1072 lt!32783)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (_2!1072 lt!32783)))))))

(declare-fun b!74117 () Bool)

(declare-fun e!48434 () (_ BitVec 32))

(assert (=> b!74117 (= e!48434 (bvadd #b00000000000000000000000000000001 call!6541))))

(declare-fun b!74118 () Bool)

(declare-fun e!48433 () (_ BitVec 32))

(assert (=> b!74118 (= e!48433 e!48434)))

(declare-fun c!11120 () Bool)

(assert (=> b!74118 (= c!11120 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000)))))

(declare-fun d!17327 () Bool)

(declare-fun lt!33326 () (_ BitVec 32))

(assert (=> d!17327 (and (bvsge lt!33326 #b00000000000000000000000000000000) (bvsle lt!33326 (bvsub (size!2088 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000)))))

(assert (=> d!17327 (= lt!33326 e!48433)))

(declare-fun c!11121 () Bool)

(assert (=> d!17327 (= c!11121 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))))))

(assert (=> d!17327 (and (bvsle #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2088 (_keys!3864 (_2!1072 lt!32783))) (size!2088 (_keys!3864 (_2!1072 lt!32783)))))))

(assert (=> d!17327 (= (arrayCountValidKeys!0 (_keys!3864 (_2!1072 lt!32783)) #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))) lt!33326)))

(declare-fun b!74119 () Bool)

(assert (=> b!74119 (= e!48434 call!6541)))

(declare-fun b!74120 () Bool)

(assert (=> b!74120 (= e!48433 #b00000000000000000000000000000000)))

(assert (= (and d!17327 c!11121) b!74120))

(assert (= (and d!17327 (not c!11121)) b!74118))

(assert (= (and b!74118 c!11120) b!74117))

(assert (= (and b!74118 (not c!11120)) b!74119))

(assert (= (or b!74117 b!74119) bm!6538))

(declare-fun m!73037 () Bool)

(assert (=> bm!6538 m!73037))

(assert (=> b!74118 m!72861))

(assert (=> b!74118 m!72861))

(assert (=> b!74118 m!72897))

(assert (=> b!73668 d!17327))

(assert (=> b!73526 d!17185))

(declare-fun d!17329 () Bool)

(declare-fun e!48435 () Bool)

(assert (=> d!17329 e!48435))

(declare-fun res!39221 () Bool)

(assert (=> d!17329 (=> (not res!39221) (not e!48435))))

(declare-fun lt!33329 () ListLongMap!1401)

(assert (=> d!17329 (= res!39221 (contains!720 lt!33329 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun lt!33330 () List!1474)

(assert (=> d!17329 (= lt!33329 (ListLongMap!1402 lt!33330))))

(declare-fun lt!33328 () Unit!2076)

(declare-fun lt!33327 () Unit!2076)

(assert (=> d!17329 (= lt!33328 lt!33327)))

(assert (=> d!17329 (= (getValueByKey!134 lt!33330 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17329 (= lt!33327 (lemmaContainsTupThenGetReturnValue!51 lt!33330 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17329 (= lt!33330 (insertStrictlySorted!54 (toList!716 (map!1160 newMap!16)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17329 (= (+!93 (map!1160 newMap!16) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) lt!33329)))

(declare-fun b!74121 () Bool)

(declare-fun res!39222 () Bool)

(assert (=> b!74121 (=> (not res!39222) (not e!48435))))

(assert (=> b!74121 (= res!39222 (= (getValueByKey!134 (toList!716 lt!33329) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!74122 () Bool)

(assert (=> b!74122 (= e!48435 (contains!721 (toList!716 lt!33329) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(assert (= (and d!17329 res!39221) b!74121))

(assert (= (and b!74121 res!39222) b!74122))

(declare-fun m!73039 () Bool)

(assert (=> d!17329 m!73039))

(declare-fun m!73041 () Bool)

(assert (=> d!17329 m!73041))

(declare-fun m!73043 () Bool)

(assert (=> d!17329 m!73043))

(declare-fun m!73045 () Bool)

(assert (=> d!17329 m!73045))

(declare-fun m!73047 () Bool)

(assert (=> b!74121 m!73047))

(declare-fun m!73049 () Bool)

(assert (=> b!74122 m!73049))

(assert (=> b!73526 d!17329))

(assert (=> b!73526 d!16869))

(declare-fun d!17331 () Bool)

(assert (=> d!17331 (= (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32678)) (v!2538 (getValueByKey!134 (toList!716 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32678)))))

(assert (=> d!16971 d!17331))

(declare-fun b!74124 () Bool)

(declare-fun e!48436 () Option!140)

(declare-fun e!48437 () Option!140)

(assert (=> b!74124 (= e!48436 e!48437)))

(declare-fun c!11123 () Bool)

(assert (=> b!74124 (= c!11123 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) (not (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32678))))))

(declare-fun b!74123 () Bool)

(assert (=> b!74123 (= e!48436 (Some!139 (_2!1071 (h!2057 (toList!716 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))))

(declare-fun d!17333 () Bool)

(declare-fun c!11122 () Bool)

(assert (=> d!17333 (= c!11122 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32678)))))

(assert (=> d!17333 (= (getValueByKey!134 (toList!716 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32678) e!48436)))

(declare-fun b!74125 () Bool)

(assert (=> b!74125 (= e!48437 (getValueByKey!134 (t!5023 (toList!716 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) lt!32678))))

(declare-fun b!74126 () Bool)

(assert (=> b!74126 (= e!48437 None!138)))

(assert (= (and d!17333 c!11122) b!74123))

(assert (= (and d!17333 (not c!11122)) b!74124))

(assert (= (and b!74124 c!11123) b!74125))

(assert (= (and b!74124 (not c!11123)) b!74126))

(declare-fun m!73051 () Bool)

(assert (=> b!74125 m!73051))

(assert (=> d!16971 d!17333))

(declare-fun d!17335 () Bool)

(declare-fun res!39223 () Bool)

(declare-fun e!48438 () Bool)

(assert (=> d!17335 (=> res!39223 e!48438)))

(assert (=> d!17335 (= res!39223 (and ((_ is Cons!1470) (toList!716 lt!32666)) (= (_1!1071 (h!2057 (toList!716 lt!32666))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17335 (= (containsKey!137 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000) e!48438)))

(declare-fun b!74127 () Bool)

(declare-fun e!48439 () Bool)

(assert (=> b!74127 (= e!48438 e!48439)))

(declare-fun res!39224 () Bool)

(assert (=> b!74127 (=> (not res!39224) (not e!48439))))

(assert (=> b!74127 (= res!39224 (and (or (not ((_ is Cons!1470) (toList!716 lt!32666))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32666))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1470) (toList!716 lt!32666)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32666))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74128 () Bool)

(assert (=> b!74128 (= e!48439 (containsKey!137 (t!5023 (toList!716 lt!32666)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17335 (not res!39223)) b!74127))

(assert (= (and b!74127 res!39224) b!74128))

(declare-fun m!73053 () Bool)

(assert (=> b!74128 m!73053))

(assert (=> d!16921 d!17335))

(declare-fun d!17337 () Bool)

(declare-fun lt!33331 () Bool)

(assert (=> d!17337 (= lt!33331 (select (content!78 lt!33143) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun e!48441 () Bool)

(assert (=> d!17337 (= lt!33331 e!48441)))

(declare-fun res!39225 () Bool)

(assert (=> d!17337 (=> (not res!39225) (not e!48441))))

(assert (=> d!17337 (= res!39225 ((_ is Cons!1470) lt!33143))))

(assert (=> d!17337 (= (contains!721 lt!33143 (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))) lt!33331)))

(declare-fun b!74129 () Bool)

(declare-fun e!48440 () Bool)

(assert (=> b!74129 (= e!48441 e!48440)))

(declare-fun res!39226 () Bool)

(assert (=> b!74129 (=> res!39226 e!48440)))

(assert (=> b!74129 (= res!39226 (= (h!2057 lt!33143) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun b!74130 () Bool)

(assert (=> b!74130 (= e!48440 (contains!721 (t!5023 lt!33143) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(assert (= (and d!17337 res!39225) b!74129))

(assert (= (and b!74129 (not res!39226)) b!74130))

(declare-fun m!73055 () Bool)

(assert (=> d!17337 m!73055))

(declare-fun m!73057 () Bool)

(assert (=> d!17337 m!73057))

(declare-fun m!73059 () Bool)

(assert (=> b!74130 m!73059))

(assert (=> b!73698 d!17337))

(declare-fun d!17339 () Bool)

(assert (=> d!17339 (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33332 () Unit!2076)

(assert (=> d!17339 (= lt!33332 (choose!420 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48442 () Bool)

(assert (=> d!17339 e!48442))

(declare-fun res!39227 () Bool)

(assert (=> d!17339 (=> (not res!39227) (not e!48442))))

(assert (=> d!17339 (= res!39227 (isStrictlySorted!279 (toList!716 lt!32666)))))

(assert (=> d!17339 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000) lt!33332)))

(declare-fun b!74131 () Bool)

(assert (=> b!74131 (= e!48442 (containsKey!137 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17339 res!39227) b!74131))

(assert (=> d!17339 m!71681))

(assert (=> d!17339 m!71681))

(assert (=> d!17339 m!71683))

(declare-fun m!73061 () Bool)

(assert (=> d!17339 m!73061))

(declare-fun m!73063 () Bool)

(assert (=> d!17339 m!73063))

(assert (=> b!74131 m!71677))

(assert (=> b!73357 d!17339))

(declare-fun d!17341 () Bool)

(assert (=> d!17341 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32666) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3195 () Bool)

(assert (= bs!3195 d!17341))

(assert (=> bs!3195 m!71681))

(declare-fun m!73065 () Bool)

(assert (=> bs!3195 m!73065))

(assert (=> b!73357 d!17341))

(assert (=> b!73357 d!17285))

(assert (=> d!16915 d!16895))

(assert (=> d!16915 d!16897))

(declare-fun d!17343 () Bool)

(assert (=> d!17343 (isDefined!86 (getValueByKey!134 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!17343 true))

(declare-fun _$12!323 () Unit!2076)

(assert (=> d!17343 (= (choose!420 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) _$12!323)))

(declare-fun bs!3196 () Bool)

(assert (= bs!3196 d!17343))

(assert (=> bs!3196 m!71143))

(assert (=> bs!3196 m!71477))

(assert (=> bs!3196 m!71477))

(assert (=> bs!3196 m!71479))

(assert (=> d!16915 d!17343))

(declare-fun d!17345 () Bool)

(declare-fun res!39228 () Bool)

(declare-fun e!48443 () Bool)

(assert (=> d!17345 (=> res!39228 e!48443)))

(assert (=> d!17345 (= res!39228 (or ((_ is Nil!1471) (toList!716 lt!32488)) ((_ is Nil!1471) (t!5023 (toList!716 lt!32488)))))))

(assert (=> d!17345 (= (isStrictlySorted!279 (toList!716 lt!32488)) e!48443)))

(declare-fun b!74132 () Bool)

(declare-fun e!48444 () Bool)

(assert (=> b!74132 (= e!48443 e!48444)))

(declare-fun res!39229 () Bool)

(assert (=> b!74132 (=> (not res!39229) (not e!48444))))

(assert (=> b!74132 (= res!39229 (bvslt (_1!1071 (h!2057 (toList!716 lt!32488))) (_1!1071 (h!2057 (t!5023 (toList!716 lt!32488))))))))

(declare-fun b!74133 () Bool)

(assert (=> b!74133 (= e!48444 (isStrictlySorted!279 (t!5023 (toList!716 lt!32488))))))

(assert (= (and d!17345 (not res!39228)) b!74132))

(assert (= (and b!74132 res!39229) b!74133))

(declare-fun m!73067 () Bool)

(assert (=> b!74133 m!73067))

(assert (=> d!16915 d!17345))

(declare-fun d!17347 () Bool)

(assert (=> d!17347 (= (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73635 d!17347))

(declare-fun d!17349 () Bool)

(declare-fun e!48445 () Bool)

(assert (=> d!17349 e!48445))

(declare-fun res!39230 () Bool)

(assert (=> d!17349 (=> res!39230 e!48445)))

(declare-fun lt!33334 () Bool)

(assert (=> d!17349 (= res!39230 (not lt!33334))))

(declare-fun lt!33336 () Bool)

(assert (=> d!17349 (= lt!33334 lt!33336)))

(declare-fun lt!33335 () Unit!2076)

(declare-fun e!48446 () Unit!2076)

(assert (=> d!17349 (= lt!33335 e!48446)))

(declare-fun c!11124 () Bool)

(assert (=> d!17349 (= c!11124 lt!33336)))

(assert (=> d!17349 (= lt!33336 (containsKey!137 (toList!716 lt!33035) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17349 (= (contains!720 lt!33035 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33334)))

(declare-fun b!74134 () Bool)

(declare-fun lt!33333 () Unit!2076)

(assert (=> b!74134 (= e!48446 lt!33333)))

(assert (=> b!74134 (= lt!33333 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33035) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74134 (isDefined!86 (getValueByKey!134 (toList!716 lt!33035) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74135 () Bool)

(declare-fun Unit!2123 () Unit!2076)

(assert (=> b!74135 (= e!48446 Unit!2123)))

(declare-fun b!74136 () Bool)

(assert (=> b!74136 (= e!48445 (isDefined!86 (getValueByKey!134 (toList!716 lt!33035) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17349 c!11124) b!74134))

(assert (= (and d!17349 (not c!11124)) b!74135))

(assert (= (and d!17349 (not res!39230)) b!74136))

(declare-fun m!73069 () Bool)

(assert (=> d!17349 m!73069))

(declare-fun m!73071 () Bool)

(assert (=> b!74134 m!73071))

(assert (=> b!74134 m!72573))

(assert (=> b!74134 m!72573))

(declare-fun m!73073 () Bool)

(assert (=> b!74134 m!73073))

(assert (=> b!74136 m!72573))

(assert (=> b!74136 m!72573))

(assert (=> b!74136 m!73073))

(assert (=> bm!6481 d!17349))

(declare-fun d!17351 () Bool)

(declare-fun res!39231 () Bool)

(declare-fun e!48447 () Bool)

(assert (=> d!17351 (=> res!39231 e!48447)))

(assert (=> d!17351 (= res!39231 (and ((_ is Cons!1470) lt!32580) (= (_1!1071 (h!2057 lt!32580)) (_1!1071 lt!32492))))))

(assert (=> d!17351 (= (containsKey!137 lt!32580 (_1!1071 lt!32492)) e!48447)))

(declare-fun b!74137 () Bool)

(declare-fun e!48448 () Bool)

(assert (=> b!74137 (= e!48447 e!48448)))

(declare-fun res!39232 () Bool)

(assert (=> b!74137 (=> (not res!39232) (not e!48448))))

(assert (=> b!74137 (= res!39232 (and (or (not ((_ is Cons!1470) lt!32580)) (bvsle (_1!1071 (h!2057 lt!32580)) (_1!1071 lt!32492))) ((_ is Cons!1470) lt!32580) (bvslt (_1!1071 (h!2057 lt!32580)) (_1!1071 lt!32492))))))

(declare-fun b!74138 () Bool)

(assert (=> b!74138 (= e!48448 (containsKey!137 (t!5023 lt!32580) (_1!1071 lt!32492)))))

(assert (= (and d!17351 (not res!39231)) b!74137))

(assert (= (and b!74137 res!39232) b!74138))

(declare-fun m!73075 () Bool)

(assert (=> b!74138 m!73075))

(assert (=> b!73425 d!17351))

(declare-fun d!17353 () Bool)

(declare-fun res!39233 () Bool)

(declare-fun e!48449 () Bool)

(assert (=> d!17353 (=> res!39233 e!48449)))

(assert (=> d!17353 (= res!39233 (and ((_ is Cons!1470) (toList!716 e!47885)) (= (_1!1071 (h!2057 (toList!716 e!47885))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (=> d!17353 (= (containsKey!137 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) e!48449)))

(declare-fun b!74139 () Bool)

(declare-fun e!48450 () Bool)

(assert (=> b!74139 (= e!48449 e!48450)))

(declare-fun res!39234 () Bool)

(assert (=> b!74139 (=> (not res!39234) (not e!48450))))

(assert (=> b!74139 (= res!39234 (and (or (not ((_ is Cons!1470) (toList!716 e!47885))) (bvsle (_1!1071 (h!2057 (toList!716 e!47885))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))) ((_ is Cons!1470) (toList!716 e!47885)) (bvslt (_1!1071 (h!2057 (toList!716 e!47885))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(declare-fun b!74140 () Bool)

(assert (=> b!74140 (= e!48450 (containsKey!137 (t!5023 (toList!716 e!47885)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (= (and d!17353 (not res!39233)) b!74139))

(assert (= (and b!74139 res!39234) b!74140))

(assert (=> b!74140 m!71143))

(declare-fun m!73077 () Bool)

(assert (=> b!74140 m!73077))

(assert (=> d!17039 d!17353))

(declare-fun d!17355 () Bool)

(assert (=> d!17355 (contains!720 (getCurrentListMap!414 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773)))))

(assert (=> d!17355 true))

(declare-fun _$16!96 () Unit!2076)

(assert (=> d!17355 (= (choose!422 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3052 lt!32773) (defaultEntry!2212 newMap!16)) _$16!96)))

(declare-fun bs!3197 () Bool)

(assert (= bs!3197 d!17355))

(assert (=> bs!3197 m!71735))

(assert (=> bs!3197 m!71485))

(assert (=> bs!3197 m!71735))

(assert (=> bs!3197 m!71485))

(assert (=> bs!3197 m!71737))

(assert (=> d!16935 d!17355))

(assert (=> d!16935 d!17149))

(declare-fun d!17357 () Bool)

(declare-fun e!48451 () Bool)

(assert (=> d!17357 e!48451))

(declare-fun res!39235 () Bool)

(assert (=> d!17357 (=> res!39235 e!48451)))

(declare-fun lt!33338 () Bool)

(assert (=> d!17357 (= res!39235 (not lt!33338))))

(declare-fun lt!33340 () Bool)

(assert (=> d!17357 (= lt!33338 lt!33340)))

(declare-fun lt!33339 () Unit!2076)

(declare-fun e!48452 () Unit!2076)

(assert (=> d!17357 (= lt!33339 e!48452)))

(declare-fun c!11125 () Bool)

(assert (=> d!17357 (= c!11125 lt!33340)))

(assert (=> d!17357 (= lt!33340 (containsKey!137 (toList!716 lt!32892) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17357 (= (contains!720 lt!32892 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33338)))

(declare-fun b!74141 () Bool)

(declare-fun lt!33337 () Unit!2076)

(assert (=> b!74141 (= e!48452 lt!33337)))

(assert (=> b!74141 (= lt!33337 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32892) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74141 (isDefined!86 (getValueByKey!134 (toList!716 lt!32892) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74142 () Bool)

(declare-fun Unit!2124 () Unit!2076)

(assert (=> b!74142 (= e!48452 Unit!2124)))

(declare-fun b!74143 () Bool)

(assert (=> b!74143 (= e!48451 (isDefined!86 (getValueByKey!134 (toList!716 lt!32892) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17357 c!11125) b!74141))

(assert (= (and d!17357 (not c!11125)) b!74142))

(assert (= (and d!17357 (not res!39235)) b!74143))

(declare-fun m!73079 () Bool)

(assert (=> d!17357 m!73079))

(declare-fun m!73081 () Bool)

(assert (=> b!74141 m!73081))

(assert (=> b!74141 m!72389))

(assert (=> b!74141 m!72389))

(declare-fun m!73083 () Bool)

(assert (=> b!74141 m!73083))

(assert (=> b!74143 m!72389))

(assert (=> b!74143 m!72389))

(assert (=> b!74143 m!73083))

(assert (=> bm!6462 d!17357))

(declare-fun d!17359 () Bool)

(declare-fun res!39236 () Bool)

(declare-fun e!48453 () Bool)

(assert (=> d!17359 (=> res!39236 e!48453)))

(assert (=> d!17359 (= res!39236 (and ((_ is Cons!1470) (toList!716 lt!32583)) (= (_1!1071 (h!2057 (toList!716 lt!32583))) (_1!1071 lt!32485))))))

(assert (=> d!17359 (= (containsKey!137 (toList!716 lt!32583) (_1!1071 lt!32485)) e!48453)))

(declare-fun b!74144 () Bool)

(declare-fun e!48454 () Bool)

(assert (=> b!74144 (= e!48453 e!48454)))

(declare-fun res!39237 () Bool)

(assert (=> b!74144 (=> (not res!39237) (not e!48454))))

(assert (=> b!74144 (= res!39237 (and (or (not ((_ is Cons!1470) (toList!716 lt!32583))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32583))) (_1!1071 lt!32485))) ((_ is Cons!1470) (toList!716 lt!32583)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32583))) (_1!1071 lt!32485))))))

(declare-fun b!74145 () Bool)

(assert (=> b!74145 (= e!48454 (containsKey!137 (t!5023 (toList!716 lt!32583)) (_1!1071 lt!32485)))))

(assert (= (and d!17359 (not res!39236)) b!74144))

(assert (= (and b!74144 res!39237) b!74145))

(declare-fun m!73085 () Bool)

(assert (=> b!74145 m!73085))

(assert (=> d!17065 d!17359))

(declare-fun d!17361 () Bool)

(declare-fun res!39238 () Bool)

(declare-fun e!48455 () Bool)

(assert (=> d!17361 (=> res!39238 e!48455)))

(assert (=> d!17361 (= res!39238 (and ((_ is Cons!1470) (toList!716 lt!32666)) (= (_1!1071 (h!2057 (toList!716 lt!32666))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17361 (= (containsKey!137 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48455)))

(declare-fun b!74146 () Bool)

(declare-fun e!48456 () Bool)

(assert (=> b!74146 (= e!48455 e!48456)))

(declare-fun res!39239 () Bool)

(assert (=> b!74146 (=> (not res!39239) (not e!48456))))

(assert (=> b!74146 (= res!39239 (and (or (not ((_ is Cons!1470) (toList!716 lt!32666))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32666))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1470) (toList!716 lt!32666)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32666))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!74147 () Bool)

(assert (=> b!74147 (= e!48456 (containsKey!137 (t!5023 (toList!716 lt!32666)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17361 (not res!39238)) b!74146))

(assert (= (and b!74146 res!39239) b!74147))

(assert (=> b!74147 m!71385))

(declare-fun m!73087 () Bool)

(assert (=> b!74147 m!73087))

(assert (=> d!16941 d!17361))

(declare-fun b!74149 () Bool)

(declare-fun e!48457 () Option!140)

(declare-fun e!48458 () Option!140)

(assert (=> b!74149 (= e!48457 e!48458)))

(declare-fun c!11127 () Bool)

(assert (=> b!74149 (= c!11127 (and ((_ is Cons!1470) (toList!716 lt!33067)) (not (= (_1!1071 (h!2057 (toList!716 lt!33067))) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))))

(declare-fun b!74148 () Bool)

(assert (=> b!74148 (= e!48457 (Some!139 (_2!1071 (h!2057 (toList!716 lt!33067)))))))

(declare-fun c!11126 () Bool)

(declare-fun d!17363 () Bool)

(assert (=> d!17363 (= c!11126 (and ((_ is Cons!1470) (toList!716 lt!33067)) (= (_1!1071 (h!2057 (toList!716 lt!33067))) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(assert (=> d!17363 (= (getValueByKey!134 (toList!716 lt!33067) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) e!48457)))

(declare-fun b!74150 () Bool)

(assert (=> b!74150 (= e!48458 (getValueByKey!134 (t!5023 (toList!716 lt!33067)) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!74151 () Bool)

(assert (=> b!74151 (= e!48458 None!138)))

(assert (= (and d!17363 c!11126) b!74148))

(assert (= (and d!17363 (not c!11126)) b!74149))

(assert (= (and b!74149 c!11127) b!74150))

(assert (= (and b!74149 (not c!11127)) b!74151))

(declare-fun m!73089 () Bool)

(assert (=> b!74150 m!73089))

(assert (=> b!73584 d!17363))

(declare-fun d!17365 () Bool)

(declare-fun res!39240 () Bool)

(declare-fun e!48459 () Bool)

(assert (=> d!17365 (=> res!39240 e!48459)))

(assert (=> d!17365 (= res!39240 (and ((_ is Cons!1470) lt!33143) (= (_1!1071 (h!2057 lt!33143)) (_1!1071 lt!32492))))))

(assert (=> d!17365 (= (containsKey!137 lt!33143 (_1!1071 lt!32492)) e!48459)))

(declare-fun b!74152 () Bool)

(declare-fun e!48460 () Bool)

(assert (=> b!74152 (= e!48459 e!48460)))

(declare-fun res!39241 () Bool)

(assert (=> b!74152 (=> (not res!39241) (not e!48460))))

(assert (=> b!74152 (= res!39241 (and (or (not ((_ is Cons!1470) lt!33143)) (bvsle (_1!1071 (h!2057 lt!33143)) (_1!1071 lt!32492))) ((_ is Cons!1470) lt!33143) (bvslt (_1!1071 (h!2057 lt!33143)) (_1!1071 lt!32492))))))

(declare-fun b!74153 () Bool)

(assert (=> b!74153 (= e!48460 (containsKey!137 (t!5023 lt!33143) (_1!1071 lt!32492)))))

(assert (= (and d!17365 (not res!39240)) b!74152))

(assert (= (and b!74152 res!39241) b!74153))

(declare-fun m!73091 () Bool)

(assert (=> b!74153 m!73091))

(assert (=> b!73705 d!17365))

(assert (=> bm!6476 d!17141))

(declare-fun b!74155 () Bool)

(declare-fun e!48461 () Option!140)

(declare-fun e!48462 () Option!140)

(assert (=> b!74155 (= e!48461 e!48462)))

(declare-fun c!11129 () Bool)

(assert (=> b!74155 (= c!11129 (and ((_ is Cons!1470) (t!5023 lt!32584)) (not (= (_1!1071 (h!2057 (t!5023 lt!32584))) (_1!1071 lt!32485)))))))

(declare-fun b!74154 () Bool)

(assert (=> b!74154 (= e!48461 (Some!139 (_2!1071 (h!2057 (t!5023 lt!32584)))))))

(declare-fun d!17367 () Bool)

(declare-fun c!11128 () Bool)

(assert (=> d!17367 (= c!11128 (and ((_ is Cons!1470) (t!5023 lt!32584)) (= (_1!1071 (h!2057 (t!5023 lt!32584))) (_1!1071 lt!32485))))))

(assert (=> d!17367 (= (getValueByKey!134 (t!5023 lt!32584) (_1!1071 lt!32485)) e!48461)))

(declare-fun b!74156 () Bool)

(assert (=> b!74156 (= e!48462 (getValueByKey!134 (t!5023 (t!5023 lt!32584)) (_1!1071 lt!32485)))))

(declare-fun b!74157 () Bool)

(assert (=> b!74157 (= e!48462 None!138)))

(assert (= (and d!17367 c!11128) b!74154))

(assert (= (and d!17367 (not c!11128)) b!74155))

(assert (= (and b!74155 c!11129) b!74156))

(assert (= (and b!74155 (not c!11129)) b!74157))

(declare-fun m!73093 () Bool)

(assert (=> b!74156 m!73093))

(assert (=> b!73654 d!17367))

(assert (=> b!73352 d!17105))

(declare-fun d!17369 () Bool)

(declare-fun res!39242 () Bool)

(declare-fun e!48463 () Bool)

(assert (=> d!17369 (=> res!39242 e!48463)))

(assert (=> d!17369 (= res!39242 (and ((_ is Cons!1470) (toList!716 lt!32590)) (= (_1!1071 (h!2057 (toList!716 lt!32590))) (_1!1071 lt!32492))))))

(assert (=> d!17369 (= (containsKey!137 (toList!716 lt!32590) (_1!1071 lt!32492)) e!48463)))

(declare-fun b!74158 () Bool)

(declare-fun e!48464 () Bool)

(assert (=> b!74158 (= e!48463 e!48464)))

(declare-fun res!39243 () Bool)

(assert (=> b!74158 (=> (not res!39243) (not e!48464))))

(assert (=> b!74158 (= res!39243 (and (or (not ((_ is Cons!1470) (toList!716 lt!32590))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32590))) (_1!1071 lt!32492))) ((_ is Cons!1470) (toList!716 lt!32590)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32590))) (_1!1071 lt!32492))))))

(declare-fun b!74159 () Bool)

(assert (=> b!74159 (= e!48464 (containsKey!137 (t!5023 (toList!716 lt!32590)) (_1!1071 lt!32492)))))

(assert (= (and d!17369 (not res!39242)) b!74158))

(assert (= (and b!74158 res!39243) b!74159))

(declare-fun m!73095 () Bool)

(assert (=> b!74159 m!73095))

(assert (=> d!17085 d!17369))

(declare-fun d!17371 () Bool)

(assert (=> d!17371 (= (get!1153 (getValueByKey!134 (toList!716 lt!32668) lt!32682)) (v!2538 (getValueByKey!134 (toList!716 lt!32668) lt!32682)))))

(assert (=> d!16969 d!17371))

(declare-fun b!74161 () Bool)

(declare-fun e!48465 () Option!140)

(declare-fun e!48466 () Option!140)

(assert (=> b!74161 (= e!48465 e!48466)))

(declare-fun c!11131 () Bool)

(assert (=> b!74161 (= c!11131 (and ((_ is Cons!1470) (toList!716 lt!32668)) (not (= (_1!1071 (h!2057 (toList!716 lt!32668))) lt!32682))))))

(declare-fun b!74160 () Bool)

(assert (=> b!74160 (= e!48465 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32668)))))))

(declare-fun d!17373 () Bool)

(declare-fun c!11130 () Bool)

(assert (=> d!17373 (= c!11130 (and ((_ is Cons!1470) (toList!716 lt!32668)) (= (_1!1071 (h!2057 (toList!716 lt!32668))) lt!32682)))))

(assert (=> d!17373 (= (getValueByKey!134 (toList!716 lt!32668) lt!32682) e!48465)))

(declare-fun b!74162 () Bool)

(assert (=> b!74162 (= e!48466 (getValueByKey!134 (t!5023 (toList!716 lt!32668)) lt!32682))))

(declare-fun b!74163 () Bool)

(assert (=> b!74163 (= e!48466 None!138)))

(assert (= (and d!17373 c!11130) b!74160))

(assert (= (and d!17373 (not c!11130)) b!74161))

(assert (= (and b!74161 c!11131) b!74162))

(assert (= (and b!74161 (not c!11131)) b!74163))

(declare-fun m!73097 () Bool)

(assert (=> b!74162 m!73097))

(assert (=> d!16969 d!17373))

(declare-fun d!17375 () Bool)

(assert (=> d!17375 (isDefined!86 (getValueByKey!134 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun lt!33341 () Unit!2076)

(assert (=> d!17375 (= lt!33341 (choose!420 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun e!48467 () Bool)

(assert (=> d!17375 e!48467))

(declare-fun res!39244 () Bool)

(assert (=> d!17375 (=> (not res!39244) (not e!48467))))

(assert (=> d!17375 (= res!39244 (isStrictlySorted!279 (toList!716 e!47885)))))

(assert (=> d!17375 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) lt!33341)))

(declare-fun b!74164 () Bool)

(assert (=> b!74164 (= e!48467 (containsKey!137 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (= (and d!17375 res!39244) b!74164))

(assert (=> d!17375 m!71143))

(assert (=> d!17375 m!72189))

(assert (=> d!17375 m!72189))

(assert (=> d!17375 m!72191))

(assert (=> d!17375 m!71143))

(declare-fun m!73099 () Bool)

(assert (=> d!17375 m!73099))

(declare-fun m!73101 () Bool)

(assert (=> d!17375 m!73101))

(assert (=> b!74164 m!71143))

(assert (=> b!74164 m!72185))

(assert (=> b!73620 d!17375))

(declare-fun d!17377 () Bool)

(assert (=> d!17377 (= (isDefined!86 (getValueByKey!134 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))) (not (isEmpty!323 (getValueByKey!134 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))))

(declare-fun bs!3198 () Bool)

(assert (= bs!3198 d!17377))

(assert (=> bs!3198 m!72189))

(declare-fun m!73103 () Bool)

(assert (=> bs!3198 m!73103))

(assert (=> b!73620 d!17377))

(declare-fun b!74166 () Bool)

(declare-fun e!48468 () Option!140)

(declare-fun e!48469 () Option!140)

(assert (=> b!74166 (= e!48468 e!48469)))

(declare-fun c!11133 () Bool)

(assert (=> b!74166 (= c!11133 (and ((_ is Cons!1470) (toList!716 e!47885)) (not (= (_1!1071 (h!2057 (toList!716 e!47885))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))))

(declare-fun b!74165 () Bool)

(assert (=> b!74165 (= e!48468 (Some!139 (_2!1071 (h!2057 (toList!716 e!47885)))))))

(declare-fun c!11132 () Bool)

(declare-fun d!17379 () Bool)

(assert (=> d!17379 (= c!11132 (and ((_ is Cons!1470) (toList!716 e!47885)) (= (_1!1071 (h!2057 (toList!716 e!47885))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (=> d!17379 (= (getValueByKey!134 (toList!716 e!47885) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) e!48468)))

(declare-fun b!74167 () Bool)

(assert (=> b!74167 (= e!48469 (getValueByKey!134 (t!5023 (toList!716 e!47885)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!74168 () Bool)

(assert (=> b!74168 (= e!48469 None!138)))

(assert (= (and d!17379 c!11132) b!74165))

(assert (= (and d!17379 (not c!11132)) b!74166))

(assert (= (and b!74166 c!11133) b!74167))

(assert (= (and b!74166 (not c!11133)) b!74168))

(assert (=> b!74167 m!71143))

(declare-fun m!73105 () Bool)

(assert (=> b!74167 m!73105))

(assert (=> b!73620 d!17379))

(declare-fun b!74170 () Bool)

(declare-fun e!48470 () Option!140)

(declare-fun e!48471 () Option!140)

(assert (=> b!74170 (= e!48470 e!48471)))

(declare-fun c!11135 () Bool)

(assert (=> b!74170 (= c!11135 (and ((_ is Cons!1470) (toList!716 lt!33126)) (not (= (_1!1071 (h!2057 (toList!716 lt!33126))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun b!74169 () Bool)

(assert (=> b!74169 (= e!48470 (Some!139 (_2!1071 (h!2057 (toList!716 lt!33126)))))))

(declare-fun d!17381 () Bool)

(declare-fun c!11134 () Bool)

(assert (=> d!17381 (= c!11134 (and ((_ is Cons!1470) (toList!716 lt!33126)) (= (_1!1071 (h!2057 (toList!716 lt!33126))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17381 (= (getValueByKey!134 (toList!716 lt!33126) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) e!48470)))

(declare-fun b!74171 () Bool)

(assert (=> b!74171 (= e!48471 (getValueByKey!134 (t!5023 (toList!716 lt!33126)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!74172 () Bool)

(assert (=> b!74172 (= e!48471 None!138)))

(assert (= (and d!17381 c!11134) b!74169))

(assert (= (and d!17381 (not c!11134)) b!74170))

(assert (= (and b!74170 c!11135) b!74171))

(assert (= (and b!74170 (not c!11135)) b!74172))

(declare-fun m!73107 () Bool)

(assert (=> b!74171 m!73107))

(assert (=> b!73647 d!17381))

(declare-fun d!17383 () Bool)

(assert (=> d!17383 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615))))

(declare-fun lt!33342 () Unit!2076)

(assert (=> d!17383 (= lt!33342 (choose!420 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615))))

(declare-fun e!48472 () Bool)

(assert (=> d!17383 e!48472))

(declare-fun res!39245 () Bool)

(assert (=> d!17383 (=> (not res!39245) (not e!48472))))

(assert (=> d!17383 (= res!39245 (isStrictlySorted!279 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)))))))

(assert (=> d!17383 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615) lt!33342)))

(declare-fun b!74173 () Bool)

(assert (=> b!74173 (= e!48472 (containsKey!137 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615))))

(assert (= (and d!17383 res!39245) b!74173))

(assert (=> d!17383 m!71721))

(assert (=> d!17383 m!71721))

(assert (=> d!17383 m!71723))

(declare-fun m!73109 () Bool)

(assert (=> d!17383 m!73109))

(declare-fun m!73111 () Bool)

(assert (=> d!17383 m!73111))

(assert (=> b!74173 m!71717))

(assert (=> b!73370 d!17383))

(declare-fun d!17385 () Bool)

(assert (=> d!17385 (= (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615)) (not (isEmpty!323 (getValueByKey!134 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615))))))

(declare-fun bs!3199 () Bool)

(assert (= bs!3199 d!17385))

(assert (=> bs!3199 m!71721))

(declare-fun m!73113 () Bool)

(assert (=> bs!3199 m!73113))

(assert (=> b!73370 d!17385))

(declare-fun b!74175 () Bool)

(declare-fun e!48473 () Option!140)

(declare-fun e!48474 () Option!140)

(assert (=> b!74175 (= e!48473 e!48474)))

(declare-fun c!11137 () Bool)

(assert (=> b!74175 (= c!11137 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)))) (not (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))))) lt!32615))))))

(declare-fun b!74174 () Bool)

(assert (=> b!74174 (= e!48473 (Some!139 (_2!1071 (h!2057 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)))))))))

(declare-fun d!17387 () Bool)

(declare-fun c!11136 () Bool)

(assert (=> d!17387 (= c!11136 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))))) lt!32615)))))

(assert (=> d!17387 (= (getValueByKey!134 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616))) lt!32615) e!48473)))

(declare-fun b!74176 () Bool)

(assert (=> b!74176 (= e!48474 (getValueByKey!134 (t!5023 (toList!716 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)))) lt!32615))))

(declare-fun b!74177 () Bool)

(assert (=> b!74177 (= e!48474 None!138)))

(assert (= (and d!17387 c!11136) b!74174))

(assert (= (and d!17387 (not c!11136)) b!74175))

(assert (= (and b!74175 c!11137) b!74176))

(assert (= (and b!74175 (not c!11137)) b!74177))

(declare-fun m!73115 () Bool)

(assert (=> b!74176 m!73115))

(assert (=> b!73370 d!17387))

(declare-fun d!17389 () Bool)

(declare-fun e!48475 () Bool)

(assert (=> d!17389 e!48475))

(declare-fun res!39246 () Bool)

(assert (=> d!17389 (=> res!39246 e!48475)))

(declare-fun lt!33344 () Bool)

(assert (=> d!17389 (= res!39246 (not lt!33344))))

(declare-fun lt!33346 () Bool)

(assert (=> d!17389 (= lt!33344 lt!33346)))

(declare-fun lt!33345 () Unit!2076)

(declare-fun e!48476 () Unit!2076)

(assert (=> d!17389 (= lt!33345 e!48476)))

(declare-fun c!11138 () Bool)

(assert (=> d!17389 (= c!11138 lt!33346)))

(assert (=> d!17389 (= lt!33346 (containsKey!137 (toList!716 lt!33067) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17389 (= (contains!720 lt!33067 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) lt!33344)))

(declare-fun b!74178 () Bool)

(declare-fun lt!33343 () Unit!2076)

(assert (=> b!74178 (= e!48476 lt!33343)))

(assert (=> b!74178 (= lt!33343 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33067) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> b!74178 (isDefined!86 (getValueByKey!134 (toList!716 lt!33067) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!74179 () Bool)

(declare-fun Unit!2125 () Unit!2076)

(assert (=> b!74179 (= e!48476 Unit!2125)))

(declare-fun b!74180 () Bool)

(assert (=> b!74180 (= e!48475 (isDefined!86 (getValueByKey!134 (toList!716 lt!33067) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(assert (= (and d!17389 c!11138) b!74178))

(assert (= (and d!17389 (not c!11138)) b!74179))

(assert (= (and d!17389 (not res!39246)) b!74180))

(declare-fun m!73117 () Bool)

(assert (=> d!17389 m!73117))

(declare-fun m!73119 () Bool)

(assert (=> b!74178 m!73119))

(assert (=> b!74178 m!72111))

(assert (=> b!74178 m!72111))

(declare-fun m!73121 () Bool)

(assert (=> b!74178 m!73121))

(assert (=> b!74180 m!72111))

(assert (=> b!74180 m!72111))

(assert (=> b!74180 m!73121))

(assert (=> d!17015 d!17389))

(declare-fun b!74182 () Bool)

(declare-fun e!48477 () Option!140)

(declare-fun e!48478 () Option!140)

(assert (=> b!74182 (= e!48477 e!48478)))

(declare-fun c!11140 () Bool)

(assert (=> b!74182 (= c!11140 (and ((_ is Cons!1470) lt!33068) (not (= (_1!1071 (h!2057 lt!33068)) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))))

(declare-fun b!74181 () Bool)

(assert (=> b!74181 (= e!48477 (Some!139 (_2!1071 (h!2057 lt!33068))))))

(declare-fun c!11139 () Bool)

(declare-fun d!17391 () Bool)

(assert (=> d!17391 (= c!11139 (and ((_ is Cons!1470) lt!33068) (= (_1!1071 (h!2057 lt!33068)) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(assert (=> d!17391 (= (getValueByKey!134 lt!33068 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) e!48477)))

(declare-fun b!74183 () Bool)

(assert (=> b!74183 (= e!48478 (getValueByKey!134 (t!5023 lt!33068) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!74184 () Bool)

(assert (=> b!74184 (= e!48478 None!138)))

(assert (= (and d!17391 c!11139) b!74181))

(assert (= (and d!17391 (not c!11139)) b!74182))

(assert (= (and b!74182 c!11140) b!74183))

(assert (= (and b!74182 (not c!11140)) b!74184))

(declare-fun m!73123 () Bool)

(assert (=> b!74183 m!73123))

(assert (=> d!17015 d!17391))

(declare-fun d!17393 () Bool)

(assert (=> d!17393 (= (getValueByKey!134 lt!33068 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) (Some!139 (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun lt!33347 () Unit!2076)

(assert (=> d!17393 (= lt!33347 (choose!419 lt!33068 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun e!48479 () Bool)

(assert (=> d!17393 e!48479))

(declare-fun res!39247 () Bool)

(assert (=> d!17393 (=> (not res!39247) (not e!48479))))

(assert (=> d!17393 (= res!39247 (isStrictlySorted!279 lt!33068))))

(assert (=> d!17393 (= (lemmaContainsTupThenGetReturnValue!51 lt!33068 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) lt!33347)))

(declare-fun b!74185 () Bool)

(declare-fun res!39248 () Bool)

(assert (=> b!74185 (=> (not res!39248) (not e!48479))))

(assert (=> b!74185 (= res!39248 (containsKey!137 lt!33068 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!74186 () Bool)

(assert (=> b!74186 (= e!48479 (contains!721 lt!33068 (tuple2!2121 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(assert (= (and d!17393 res!39247) b!74185))

(assert (= (and b!74185 res!39248) b!74186))

(assert (=> d!17393 m!72105))

(declare-fun m!73125 () Bool)

(assert (=> d!17393 m!73125))

(declare-fun m!73127 () Bool)

(assert (=> d!17393 m!73127))

(declare-fun m!73129 () Bool)

(assert (=> b!74185 m!73129))

(declare-fun m!73131 () Bool)

(assert (=> b!74186 m!73131))

(assert (=> d!17015 d!17393))

(declare-fun e!48484 () List!1474)

(declare-fun b!74187 () Bool)

(assert (=> b!74187 (= e!48484 (insertStrictlySorted!54 (t!5023 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349)))) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun c!11142 () Bool)

(declare-fun c!11141 () Bool)

(declare-fun b!74188 () Bool)

(assert (=> b!74188 (= e!48484 (ite c!11142 (t!5023 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349)))) (ite c!11141 (Cons!1470 (h!2057 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349)))) (t!5023 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349))))) Nil!1471)))))

(declare-fun bm!6539 () Bool)

(declare-fun call!6543 () List!1474)

(declare-fun call!6544 () List!1474)

(assert (=> bm!6539 (= call!6543 call!6544)))

(declare-fun b!74189 () Bool)

(declare-fun e!48483 () Bool)

(declare-fun lt!33348 () List!1474)

(assert (=> b!74189 (= e!48483 (contains!721 lt!33348 (tuple2!2121 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74190 () Bool)

(declare-fun e!48480 () List!1474)

(assert (=> b!74190 (= e!48480 call!6543)))

(declare-fun b!74191 () Bool)

(declare-fun e!48481 () List!1474)

(declare-fun e!48482 () List!1474)

(assert (=> b!74191 (= e!48481 e!48482)))

(assert (=> b!74191 (= c!11142 (and ((_ is Cons!1470) (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349)))) (= (_1!1071 (h!2057 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349))))) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun d!17395 () Bool)

(assert (=> d!17395 e!48483))

(declare-fun res!39249 () Bool)

(assert (=> d!17395 (=> (not res!39249) (not e!48483))))

(assert (=> d!17395 (= res!39249 (isStrictlySorted!279 lt!33348))))

(assert (=> d!17395 (= lt!33348 e!48481)))

(declare-fun c!11143 () Bool)

(assert (=> d!17395 (= c!11143 (and ((_ is Cons!1470) (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349)))) (bvslt (_1!1071 (h!2057 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349))))) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(assert (=> d!17395 (isStrictlySorted!279 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349))))))

(assert (=> d!17395 (= (insertStrictlySorted!54 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349))) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))) lt!33348)))

(declare-fun call!6542 () List!1474)

(declare-fun bm!6540 () Bool)

(assert (=> bm!6540 (= call!6542 ($colon$colon!65 e!48484 (ite c!11143 (h!2057 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349)))) (tuple2!2121 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_2!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))))

(declare-fun c!11144 () Bool)

(assert (=> bm!6540 (= c!11144 c!11143)))

(declare-fun b!74192 () Bool)

(assert (=> b!74192 (= e!48482 call!6544)))

(declare-fun b!74193 () Bool)

(assert (=> b!74193 (= e!48480 call!6543)))

(declare-fun b!74194 () Bool)

(assert (=> b!74194 (= c!11141 (and ((_ is Cons!1470) (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349)))) (bvsgt (_1!1071 (h!2057 (toList!716 (ite c!10815 call!6354 (ite c!10817 call!6355 call!6349))))) (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(assert (=> b!74194 (= e!48482 e!48480)))

(declare-fun b!74195 () Bool)

(assert (=> b!74195 (= e!48481 call!6542)))

(declare-fun bm!6541 () Bool)

(assert (=> bm!6541 (= call!6544 call!6542)))

(declare-fun b!74196 () Bool)

(declare-fun res!39250 () Bool)

(assert (=> b!74196 (=> (not res!39250) (not e!48483))))

(assert (=> b!74196 (= res!39250 (containsKey!137 lt!33348 (_1!1071 (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17395 c!11143) b!74195))

(assert (= (and d!17395 (not c!11143)) b!74191))

(assert (= (and b!74191 c!11142) b!74192))

(assert (= (and b!74191 (not c!11142)) b!74194))

(assert (= (and b!74194 c!11141) b!74190))

(assert (= (and b!74194 (not c!11141)) b!74193))

(assert (= (or b!74190 b!74193) bm!6539))

(assert (= (or b!74192 bm!6539) bm!6541))

(assert (= (or b!74195 bm!6541) bm!6540))

(assert (= (and bm!6540 c!11144) b!74187))

(assert (= (and bm!6540 (not c!11144)) b!74188))

(assert (= (and d!17395 res!39249) b!74196))

(assert (= (and b!74196 res!39250) b!74189))

(declare-fun m!73133 () Bool)

(assert (=> b!74187 m!73133))

(declare-fun m!73135 () Bool)

(assert (=> b!74189 m!73135))

(declare-fun m!73137 () Bool)

(assert (=> d!17395 m!73137))

(declare-fun m!73139 () Bool)

(assert (=> d!17395 m!73139))

(declare-fun m!73141 () Bool)

(assert (=> bm!6540 m!73141))

(declare-fun m!73143 () Bool)

(assert (=> b!74196 m!73143))

(assert (=> d!17015 d!17395))

(declare-fun d!17397 () Bool)

(assert (=> d!17397 (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!33349 () Unit!2076)

(assert (=> d!17397 (= lt!33349 (choose!420 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!48485 () Bool)

(assert (=> d!17397 e!48485))

(declare-fun res!39251 () Bool)

(assert (=> d!17397 (=> (not res!39251) (not e!48485))))

(assert (=> d!17397 (= res!39251 (isStrictlySorted!279 (toList!716 lt!32614)))))

(assert (=> d!17397 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!33349)))

(declare-fun b!74197 () Bool)

(assert (=> b!74197 (= e!48485 (containsKey!137 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17397 res!39251) b!74197))

(assert (=> d!17397 m!71385))

(assert (=> d!17397 m!71757))

(assert (=> d!17397 m!71757))

(assert (=> d!17397 m!72315))

(assert (=> d!17397 m!71385))

(declare-fun m!73145 () Bool)

(assert (=> d!17397 m!73145))

(declare-fun m!73147 () Bool)

(assert (=> d!17397 m!73147))

(assert (=> b!74197 m!71385))

(assert (=> b!74197 m!72311))

(assert (=> b!73671 d!17397))

(declare-fun d!17399 () Bool)

(assert (=> d!17399 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3200 () Bool)

(assert (= bs!3200 d!17399))

(assert (=> bs!3200 m!71757))

(declare-fun m!73149 () Bool)

(assert (=> bs!3200 m!73149))

(assert (=> b!73671 d!17399))

(declare-fun b!74199 () Bool)

(declare-fun e!48486 () Option!140)

(declare-fun e!48487 () Option!140)

(assert (=> b!74199 (= e!48486 e!48487)))

(declare-fun c!11146 () Bool)

(assert (=> b!74199 (= c!11146 (and ((_ is Cons!1470) (toList!716 lt!32614)) (not (= (_1!1071 (h!2057 (toList!716 lt!32614))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!74198 () Bool)

(assert (=> b!74198 (= e!48486 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32614)))))))

(declare-fun d!17401 () Bool)

(declare-fun c!11145 () Bool)

(assert (=> d!17401 (= c!11145 (and ((_ is Cons!1470) (toList!716 lt!32614)) (= (_1!1071 (h!2057 (toList!716 lt!32614))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17401 (= (getValueByKey!134 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48486)))

(declare-fun b!74200 () Bool)

(assert (=> b!74200 (= e!48487 (getValueByKey!134 (t!5023 (toList!716 lt!32614)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!74201 () Bool)

(assert (=> b!74201 (= e!48487 None!138)))

(assert (= (and d!17401 c!11145) b!74198))

(assert (= (and d!17401 (not c!11145)) b!74199))

(assert (= (and b!74199 c!11146) b!74200))

(assert (= (and b!74199 (not c!11146)) b!74201))

(assert (=> b!74200 m!71385))

(declare-fun m!73151 () Bool)

(assert (=> b!74200 m!73151))

(assert (=> b!73671 d!17401))

(assert (=> b!73420 d!17261))

(assert (=> b!73420 d!17081))

(declare-fun d!17403 () Bool)

(declare-fun e!48488 () Bool)

(assert (=> d!17403 e!48488))

(declare-fun res!39252 () Bool)

(assert (=> d!17403 (=> (not res!39252) (not e!48488))))

(declare-fun lt!33352 () ListLongMap!1401)

(assert (=> d!17403 (= res!39252 (contains!720 lt!33352 (_1!1071 (tuple2!2121 lt!32829 (minValue!2114 newMap!16)))))))

(declare-fun lt!33353 () List!1474)

(assert (=> d!17403 (= lt!33352 (ListLongMap!1402 lt!33353))))

(declare-fun lt!33351 () Unit!2076)

(declare-fun lt!33350 () Unit!2076)

(assert (=> d!17403 (= lt!33351 lt!33350)))

(assert (=> d!17403 (= (getValueByKey!134 lt!33353 (_1!1071 (tuple2!2121 lt!32829 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!32829 (minValue!2114 newMap!16)))))))

(assert (=> d!17403 (= lt!33350 (lemmaContainsTupThenGetReturnValue!51 lt!33353 (_1!1071 (tuple2!2121 lt!32829 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32829 (minValue!2114 newMap!16)))))))

(assert (=> d!17403 (= lt!33353 (insertStrictlySorted!54 (toList!716 lt!32834) (_1!1071 (tuple2!2121 lt!32829 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32829 (minValue!2114 newMap!16)))))))

(assert (=> d!17403 (= (+!93 lt!32834 (tuple2!2121 lt!32829 (minValue!2114 newMap!16))) lt!33352)))

(declare-fun b!74202 () Bool)

(declare-fun res!39253 () Bool)

(assert (=> b!74202 (=> (not res!39253) (not e!48488))))

(assert (=> b!74202 (= res!39253 (= (getValueByKey!134 (toList!716 lt!33352) (_1!1071 (tuple2!2121 lt!32829 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!32829 (minValue!2114 newMap!16))))))))

(declare-fun b!74203 () Bool)

(assert (=> b!74203 (= e!48488 (contains!721 (toList!716 lt!33352) (tuple2!2121 lt!32829 (minValue!2114 newMap!16))))))

(assert (= (and d!17403 res!39252) b!74202))

(assert (= (and b!74202 res!39253) b!74203))

(declare-fun m!73153 () Bool)

(assert (=> d!17403 m!73153))

(declare-fun m!73155 () Bool)

(assert (=> d!17403 m!73155))

(declare-fun m!73157 () Bool)

(assert (=> d!17403 m!73157))

(declare-fun m!73159 () Bool)

(assert (=> d!17403 m!73159))

(declare-fun m!73161 () Bool)

(assert (=> b!74202 m!73161))

(declare-fun m!73163 () Bool)

(assert (=> b!74203 m!73163))

(assert (=> b!73339 d!17403))

(declare-fun d!17405 () Bool)

(assert (=> d!17405 (= (apply!75 (+!93 lt!32819 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16))) lt!32827) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32819 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16)))) lt!32827)))))

(declare-fun bs!3201 () Bool)

(assert (= bs!3201 d!17405))

(declare-fun m!73165 () Bool)

(assert (=> bs!3201 m!73165))

(assert (=> bs!3201 m!73165))

(declare-fun m!73167 () Bool)

(assert (=> bs!3201 m!73167))

(assert (=> b!73339 d!17405))

(declare-fun d!17407 () Bool)

(assert (=> d!17407 (= (apply!75 (+!93 lt!32819 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16))) lt!32827) (apply!75 lt!32819 lt!32827))))

(declare-fun lt!33354 () Unit!2076)

(assert (=> d!17407 (= lt!33354 (choose!426 lt!32819 lt!32820 (zeroValue!2114 newMap!16) lt!32827))))

(declare-fun e!48489 () Bool)

(assert (=> d!17407 e!48489))

(declare-fun res!39254 () Bool)

(assert (=> d!17407 (=> (not res!39254) (not e!48489))))

(assert (=> d!17407 (= res!39254 (contains!720 lt!32819 lt!32827))))

(assert (=> d!17407 (= (addApplyDifferent!51 lt!32819 lt!32820 (zeroValue!2114 newMap!16) lt!32827) lt!33354)))

(declare-fun b!74204 () Bool)

(assert (=> b!74204 (= e!48489 (not (= lt!32827 lt!32820)))))

(assert (= (and d!17407 res!39254) b!74204))

(declare-fun m!73169 () Bool)

(assert (=> d!17407 m!73169))

(declare-fun m!73171 () Bool)

(assert (=> d!17407 m!73171))

(assert (=> d!17407 m!71635))

(assert (=> d!17407 m!71637))

(assert (=> d!17407 m!71649))

(assert (=> d!17407 m!71635))

(assert (=> b!73339 d!17407))

(declare-fun d!17409 () Bool)

(assert (=> d!17409 (= (apply!75 lt!32819 lt!32827) (get!1153 (getValueByKey!134 (toList!716 lt!32819) lt!32827)))))

(declare-fun bs!3202 () Bool)

(assert (= bs!3202 d!17409))

(declare-fun m!73173 () Bool)

(assert (=> bs!3202 m!73173))

(assert (=> bs!3202 m!73173))

(declare-fun m!73175 () Bool)

(assert (=> bs!3202 m!73175))

(assert (=> b!73339 d!17409))

(declare-fun d!17411 () Bool)

(declare-fun e!48490 () Bool)

(assert (=> d!17411 e!48490))

(declare-fun res!39255 () Bool)

(assert (=> d!17411 (=> (not res!39255) (not e!48490))))

(declare-fun lt!33357 () ListLongMap!1401)

(assert (=> d!17411 (= res!39255 (contains!720 lt!33357 (_1!1071 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16)))))))

(declare-fun lt!33358 () List!1474)

(assert (=> d!17411 (= lt!33357 (ListLongMap!1402 lt!33358))))

(declare-fun lt!33356 () Unit!2076)

(declare-fun lt!33355 () Unit!2076)

(assert (=> d!17411 (= lt!33356 lt!33355)))

(assert (=> d!17411 (= (getValueByKey!134 lt!33358 (_1!1071 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17411 (= lt!33355 (lemmaContainsTupThenGetReturnValue!51 lt!33358 (_1!1071 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17411 (= lt!33358 (insertStrictlySorted!54 (toList!716 lt!32819) (_1!1071 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17411 (= (+!93 lt!32819 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16))) lt!33357)))

(declare-fun b!74205 () Bool)

(declare-fun res!39256 () Bool)

(assert (=> b!74205 (=> (not res!39256) (not e!48490))))

(assert (=> b!74205 (= res!39256 (= (getValueByKey!134 (toList!716 lt!33357) (_1!1071 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16))))))))

(declare-fun b!74206 () Bool)

(assert (=> b!74206 (= e!48490 (contains!721 (toList!716 lt!33357) (tuple2!2121 lt!32820 (zeroValue!2114 newMap!16))))))

(assert (= (and d!17411 res!39255) b!74205))

(assert (= (and b!74205 res!39256) b!74206))

(declare-fun m!73177 () Bool)

(assert (=> d!17411 m!73177))

(declare-fun m!73179 () Bool)

(assert (=> d!17411 m!73179))

(declare-fun m!73181 () Bool)

(assert (=> d!17411 m!73181))

(declare-fun m!73183 () Bool)

(assert (=> d!17411 m!73183))

(declare-fun m!73185 () Bool)

(assert (=> b!74205 m!73185))

(declare-fun m!73187 () Bool)

(assert (=> b!74206 m!73187))

(assert (=> b!73339 d!17411))

(declare-fun d!17413 () Bool)

(assert (=> d!17413 (= (apply!75 lt!32834 lt!32833) (get!1153 (getValueByKey!134 (toList!716 lt!32834) lt!32833)))))

(declare-fun bs!3203 () Bool)

(assert (= bs!3203 d!17413))

(declare-fun m!73189 () Bool)

(assert (=> bs!3203 m!73189))

(assert (=> bs!3203 m!73189))

(declare-fun m!73191 () Bool)

(assert (=> bs!3203 m!73191))

(assert (=> b!73339 d!17413))

(declare-fun d!17415 () Bool)

(declare-fun e!48491 () Bool)

(assert (=> d!17415 e!48491))

(declare-fun res!39257 () Bool)

(assert (=> d!17415 (=> (not res!39257) (not e!48491))))

(declare-fun lt!33361 () ListLongMap!1401)

(assert (=> d!17415 (= res!39257 (contains!720 lt!33361 (_1!1071 (tuple2!2121 lt!32828 (minValue!2114 newMap!16)))))))

(declare-fun lt!33362 () List!1474)

(assert (=> d!17415 (= lt!33361 (ListLongMap!1402 lt!33362))))

(declare-fun lt!33360 () Unit!2076)

(declare-fun lt!33359 () Unit!2076)

(assert (=> d!17415 (= lt!33360 lt!33359)))

(assert (=> d!17415 (= (getValueByKey!134 lt!33362 (_1!1071 (tuple2!2121 lt!32828 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!32828 (minValue!2114 newMap!16)))))))

(assert (=> d!17415 (= lt!33359 (lemmaContainsTupThenGetReturnValue!51 lt!33362 (_1!1071 (tuple2!2121 lt!32828 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32828 (minValue!2114 newMap!16)))))))

(assert (=> d!17415 (= lt!33362 (insertStrictlySorted!54 (toList!716 lt!32823) (_1!1071 (tuple2!2121 lt!32828 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32828 (minValue!2114 newMap!16)))))))

(assert (=> d!17415 (= (+!93 lt!32823 (tuple2!2121 lt!32828 (minValue!2114 newMap!16))) lt!33361)))

(declare-fun b!74207 () Bool)

(declare-fun res!39258 () Bool)

(assert (=> b!74207 (=> (not res!39258) (not e!48491))))

(assert (=> b!74207 (= res!39258 (= (getValueByKey!134 (toList!716 lt!33361) (_1!1071 (tuple2!2121 lt!32828 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!32828 (minValue!2114 newMap!16))))))))

(declare-fun b!74208 () Bool)

(assert (=> b!74208 (= e!48491 (contains!721 (toList!716 lt!33361) (tuple2!2121 lt!32828 (minValue!2114 newMap!16))))))

(assert (= (and d!17415 res!39257) b!74207))

(assert (= (and b!74207 res!39258) b!74208))

(declare-fun m!73193 () Bool)

(assert (=> d!17415 m!73193))

(declare-fun m!73195 () Bool)

(assert (=> d!17415 m!73195))

(declare-fun m!73197 () Bool)

(assert (=> d!17415 m!73197))

(declare-fun m!73199 () Bool)

(assert (=> d!17415 m!73199))

(declare-fun m!73201 () Bool)

(assert (=> b!74207 m!73201))

(declare-fun m!73203 () Bool)

(assert (=> b!74208 m!73203))

(assert (=> b!73339 d!17415))

(declare-fun d!17417 () Bool)

(assert (=> d!17417 (= (apply!75 (+!93 lt!32823 (tuple2!2121 lt!32828 (minValue!2114 newMap!16))) lt!32837) (apply!75 lt!32823 lt!32837))))

(declare-fun lt!33363 () Unit!2076)

(assert (=> d!17417 (= lt!33363 (choose!426 lt!32823 lt!32828 (minValue!2114 newMap!16) lt!32837))))

(declare-fun e!48492 () Bool)

(assert (=> d!17417 e!48492))

(declare-fun res!39259 () Bool)

(assert (=> d!17417 (=> (not res!39259) (not e!48492))))

(assert (=> d!17417 (= res!39259 (contains!720 lt!32823 lt!32837))))

(assert (=> d!17417 (= (addApplyDifferent!51 lt!32823 lt!32828 (minValue!2114 newMap!16) lt!32837) lt!33363)))

(declare-fun b!74209 () Bool)

(assert (=> b!74209 (= e!48492 (not (= lt!32837 lt!32828)))))

(assert (= (and d!17417 res!39259) b!74209))

(declare-fun m!73205 () Bool)

(assert (=> d!17417 m!73205))

(declare-fun m!73207 () Bool)

(assert (=> d!17417 m!73207))

(assert (=> d!17417 m!71621))

(assert (=> d!17417 m!71623))

(assert (=> d!17417 m!71629))

(assert (=> d!17417 m!71621))

(assert (=> b!73339 d!17417))

(declare-fun d!17419 () Bool)

(assert (=> d!17419 (contains!720 (+!93 lt!32831 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16))) lt!32816)))

(declare-fun lt!33364 () Unit!2076)

(assert (=> d!17419 (= lt!33364 (choose!425 lt!32831 lt!32836 (zeroValue!2114 newMap!16) lt!32816))))

(assert (=> d!17419 (contains!720 lt!32831 lt!32816)))

(assert (=> d!17419 (= (addStillContains!51 lt!32831 lt!32836 (zeroValue!2114 newMap!16) lt!32816) lt!33364)))

(declare-fun bs!3204 () Bool)

(assert (= bs!3204 d!17419))

(assert (=> bs!3204 m!71639))

(assert (=> bs!3204 m!71639))

(assert (=> bs!3204 m!71641))

(declare-fun m!73209 () Bool)

(assert (=> bs!3204 m!73209))

(declare-fun m!73211 () Bool)

(assert (=> bs!3204 m!73211))

(assert (=> b!73339 d!17419))

(declare-fun d!17421 () Bool)

(assert (=> d!17421 (= (apply!75 (+!93 lt!32834 (tuple2!2121 lt!32829 (minValue!2114 newMap!16))) lt!32833) (apply!75 lt!32834 lt!32833))))

(declare-fun lt!33365 () Unit!2076)

(assert (=> d!17421 (= lt!33365 (choose!426 lt!32834 lt!32829 (minValue!2114 newMap!16) lt!32833))))

(declare-fun e!48493 () Bool)

(assert (=> d!17421 e!48493))

(declare-fun res!39260 () Bool)

(assert (=> d!17421 (=> (not res!39260) (not e!48493))))

(assert (=> d!17421 (= res!39260 (contains!720 lt!32834 lt!32833))))

(assert (=> d!17421 (= (addApplyDifferent!51 lt!32834 lt!32829 (minValue!2114 newMap!16) lt!32833) lt!33365)))

(declare-fun b!74210 () Bool)

(assert (=> b!74210 (= e!48493 (not (= lt!32833 lt!32829)))))

(assert (= (and d!17421 res!39260) b!74210))

(declare-fun m!73213 () Bool)

(assert (=> d!17421 m!73213))

(declare-fun m!73215 () Bool)

(assert (=> d!17421 m!73215))

(assert (=> d!17421 m!71627))

(assert (=> d!17421 m!71643))

(assert (=> d!17421 m!71631))

(assert (=> d!17421 m!71627))

(assert (=> b!73339 d!17421))

(declare-fun d!17423 () Bool)

(declare-fun e!48494 () Bool)

(assert (=> d!17423 e!48494))

(declare-fun res!39261 () Bool)

(assert (=> d!17423 (=> res!39261 e!48494)))

(declare-fun lt!33367 () Bool)

(assert (=> d!17423 (= res!39261 (not lt!33367))))

(declare-fun lt!33369 () Bool)

(assert (=> d!17423 (= lt!33367 lt!33369)))

(declare-fun lt!33368 () Unit!2076)

(declare-fun e!48495 () Unit!2076)

(assert (=> d!17423 (= lt!33368 e!48495)))

(declare-fun c!11147 () Bool)

(assert (=> d!17423 (= c!11147 lt!33369)))

(assert (=> d!17423 (= lt!33369 (containsKey!137 (toList!716 (+!93 lt!32831 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16)))) lt!32816))))

(assert (=> d!17423 (= (contains!720 (+!93 lt!32831 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16))) lt!32816) lt!33367)))

(declare-fun b!74211 () Bool)

(declare-fun lt!33366 () Unit!2076)

(assert (=> b!74211 (= e!48495 lt!33366)))

(assert (=> b!74211 (= lt!33366 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (+!93 lt!32831 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16)))) lt!32816))))

(assert (=> b!74211 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32831 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16)))) lt!32816))))

(declare-fun b!74212 () Bool)

(declare-fun Unit!2126 () Unit!2076)

(assert (=> b!74212 (= e!48495 Unit!2126)))

(declare-fun b!74213 () Bool)

(assert (=> b!74213 (= e!48494 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32831 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16)))) lt!32816)))))

(assert (= (and d!17423 c!11147) b!74211))

(assert (= (and d!17423 (not c!11147)) b!74212))

(assert (= (and d!17423 (not res!39261)) b!74213))

(declare-fun m!73217 () Bool)

(assert (=> d!17423 m!73217))

(declare-fun m!73219 () Bool)

(assert (=> b!74211 m!73219))

(declare-fun m!73221 () Bool)

(assert (=> b!74211 m!73221))

(assert (=> b!74211 m!73221))

(declare-fun m!73223 () Bool)

(assert (=> b!74211 m!73223))

(assert (=> b!74213 m!73221))

(assert (=> b!74213 m!73221))

(assert (=> b!74213 m!73223))

(assert (=> b!73339 d!17423))

(declare-fun d!17425 () Bool)

(assert (=> d!17425 (= (apply!75 (+!93 lt!32834 (tuple2!2121 lt!32829 (minValue!2114 newMap!16))) lt!32833) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32834 (tuple2!2121 lt!32829 (minValue!2114 newMap!16)))) lt!32833)))))

(declare-fun bs!3205 () Bool)

(assert (= bs!3205 d!17425))

(declare-fun m!73225 () Bool)

(assert (=> bs!3205 m!73225))

(assert (=> bs!3205 m!73225))

(declare-fun m!73227 () Bool)

(assert (=> bs!3205 m!73227))

(assert (=> b!73339 d!17425))

(declare-fun d!17427 () Bool)

(declare-fun e!48501 () Bool)

(assert (=> d!17427 e!48501))

(declare-fun res!39262 () Bool)

(assert (=> d!17427 (=> (not res!39262) (not e!48501))))

(declare-fun lt!33374 () ListLongMap!1401)

(assert (=> d!17427 (= res!39262 (not (contains!720 lt!33374 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!48502 () ListLongMap!1401)

(assert (=> d!17427 (= lt!33374 e!48502)))

(declare-fun c!11151 () Bool)

(assert (=> d!17427 (= c!11151 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17427 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17427 (= (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33374)))

(declare-fun b!74214 () Bool)

(declare-fun e!48500 () ListLongMap!1401)

(declare-fun call!6545 () ListLongMap!1401)

(assert (=> b!74214 (= e!48500 call!6545)))

(declare-fun bm!6542 () Bool)

(assert (=> bm!6542 (= call!6545 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16)))))

(declare-fun b!74215 () Bool)

(declare-fun lt!33371 () Unit!2076)

(declare-fun lt!33370 () Unit!2076)

(assert (=> b!74215 (= lt!33371 lt!33370)))

(declare-fun lt!33372 () (_ BitVec 64))

(declare-fun lt!33376 () V!2945)

(declare-fun lt!33373 () ListLongMap!1401)

(declare-fun lt!33375 () (_ BitVec 64))

(assert (=> b!74215 (not (contains!720 (+!93 lt!33373 (tuple2!2121 lt!33372 lt!33376)) lt!33375))))

(assert (=> b!74215 (= lt!33370 (addStillNotContains!26 lt!33373 lt!33372 lt!33376 lt!33375))))

(assert (=> b!74215 (= lt!33375 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!74215 (= lt!33376 (get!1149 (select (arr!1851 (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!74215 (= lt!33372 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74215 (= lt!33373 call!6545)))

(assert (=> b!74215 (= e!48500 (+!93 call!6545 (tuple2!2121 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) (get!1149 (select (arr!1851 (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!74216 () Bool)

(declare-fun e!48497 () Bool)

(assert (=> b!74216 (= e!48497 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74216 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!74217 () Bool)

(declare-fun e!48499 () Bool)

(assert (=> b!74217 (= e!48501 e!48499)))

(declare-fun c!11150 () Bool)

(assert (=> b!74217 (= c!11150 e!48497)))

(declare-fun res!39265 () Bool)

(assert (=> b!74217 (=> (not res!39265) (not e!48497))))

(assert (=> b!74217 (= res!39265 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74218 () Bool)

(declare-fun res!39264 () Bool)

(assert (=> b!74218 (=> (not res!39264) (not e!48501))))

(assert (=> b!74218 (= res!39264 (not (contains!720 lt!33374 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74219 () Bool)

(declare-fun e!48498 () Bool)

(assert (=> b!74219 (= e!48499 e!48498)))

(assert (=> b!74219 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun res!39263 () Bool)

(assert (=> b!74219 (= res!39263 (contains!720 lt!33374 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74219 (=> (not res!39263) (not e!48498))))

(declare-fun b!74220 () Bool)

(assert (=> b!74220 (= e!48502 e!48500)))

(declare-fun c!11148 () Bool)

(assert (=> b!74220 (= c!11148 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74221 () Bool)

(declare-fun e!48496 () Bool)

(assert (=> b!74221 (= e!48499 e!48496)))

(declare-fun c!11149 () Bool)

(assert (=> b!74221 (= c!11149 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74222 () Bool)

(assert (=> b!74222 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> b!74222 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))))))))

(assert (=> b!74222 (= e!48498 (= (apply!75 lt!33374 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74223 () Bool)

(assert (=> b!74223 (= e!48496 (isEmpty!322 lt!33374))))

(declare-fun b!74224 () Bool)

(assert (=> b!74224 (= e!48502 (ListLongMap!1402 Nil!1471))))

(declare-fun b!74225 () Bool)

(assert (=> b!74225 (= e!48496 (= lt!33374 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (ite c!10868 (_values!2195 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16))))))

(assert (= (and d!17427 c!11151) b!74224))

(assert (= (and d!17427 (not c!11151)) b!74220))

(assert (= (and b!74220 c!11148) b!74215))

(assert (= (and b!74220 (not c!11148)) b!74214))

(assert (= (or b!74215 b!74214) bm!6542))

(assert (= (and d!17427 res!39262) b!74218))

(assert (= (and b!74218 res!39264) b!74217))

(assert (= (and b!74217 res!39265) b!74216))

(assert (= (and b!74217 c!11150) b!74219))

(assert (= (and b!74217 (not c!11150)) b!74221))

(assert (= (and b!74219 res!39263) b!74222))

(assert (= (and b!74221 c!11149) b!74225))

(assert (= (and b!74221 (not c!11149)) b!74223))

(declare-fun b_lambda!3335 () Bool)

(assert (=> (not b_lambda!3335) (not b!74215)))

(assert (=> b!74215 t!5036))

(declare-fun b_and!4557 () Bool)

(assert (= b_and!4553 (and (=> t!5036 result!2689) b_and!4557)))

(assert (=> b!74215 t!5038))

(declare-fun b_and!4559 () Bool)

(assert (= b_and!4555 (and (=> t!5038 result!2691) b_and!4559)))

(declare-fun b_lambda!3337 () Bool)

(assert (=> (not b_lambda!3337) (not b!74222)))

(assert (=> b!74222 t!5036))

(declare-fun b_and!4561 () Bool)

(assert (= b_and!4557 (and (=> t!5036 result!2689) b_and!4561)))

(assert (=> b!74222 t!5038))

(declare-fun b_and!4563 () Bool)

(assert (= b_and!4559 (and (=> t!5038 result!2691) b_and!4563)))

(declare-fun m!73229 () Bool)

(assert (=> b!74223 m!73229))

(declare-fun m!73231 () Bool)

(assert (=> b!74225 m!73231))

(assert (=> b!74215 m!71667))

(assert (=> b!74215 m!71663))

(assert (=> b!74215 m!71669))

(declare-fun m!73233 () Bool)

(assert (=> b!74215 m!73233))

(assert (=> b!74215 m!73233))

(declare-fun m!73235 () Bool)

(assert (=> b!74215 m!73235))

(declare-fun m!73237 () Bool)

(assert (=> b!74215 m!73237))

(declare-fun m!73239 () Bool)

(assert (=> b!74215 m!73239))

(assert (=> b!74215 m!71603))

(assert (=> b!74215 m!71667))

(assert (=> b!74215 m!71663))

(assert (=> b!74222 m!71667))

(assert (=> b!74222 m!71663))

(assert (=> b!74222 m!71669))

(assert (=> b!74222 m!71603))

(assert (=> b!74222 m!71603))

(declare-fun m!73241 () Bool)

(assert (=> b!74222 m!73241))

(assert (=> b!74222 m!71667))

(assert (=> b!74222 m!71663))

(declare-fun m!73243 () Bool)

(assert (=> d!17427 m!73243))

(assert (=> d!17427 m!71557))

(assert (=> bm!6542 m!73231))

(assert (=> b!74219 m!71603))

(assert (=> b!74219 m!71603))

(declare-fun m!73245 () Bool)

(assert (=> b!74219 m!73245))

(assert (=> b!74216 m!71603))

(assert (=> b!74216 m!71603))

(assert (=> b!74216 m!71605))

(declare-fun m!73247 () Bool)

(assert (=> b!74218 m!73247))

(assert (=> b!74220 m!71603))

(assert (=> b!74220 m!71603))

(assert (=> b!74220 m!71605))

(assert (=> b!73339 d!17427))

(declare-fun d!17429 () Bool)

(assert (=> d!17429 (= (apply!75 lt!32823 lt!32837) (get!1153 (getValueByKey!134 (toList!716 lt!32823) lt!32837)))))

(declare-fun bs!3206 () Bool)

(assert (= bs!3206 d!17429))

(declare-fun m!73249 () Bool)

(assert (=> bs!3206 m!73249))

(assert (=> bs!3206 m!73249))

(declare-fun m!73251 () Bool)

(assert (=> bs!3206 m!73251))

(assert (=> b!73339 d!17429))

(declare-fun d!17431 () Bool)

(declare-fun e!48503 () Bool)

(assert (=> d!17431 e!48503))

(declare-fun res!39266 () Bool)

(assert (=> d!17431 (=> (not res!39266) (not e!48503))))

(declare-fun lt!33379 () ListLongMap!1401)

(assert (=> d!17431 (= res!39266 (contains!720 lt!33379 (_1!1071 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16)))))))

(declare-fun lt!33380 () List!1474)

(assert (=> d!17431 (= lt!33379 (ListLongMap!1402 lt!33380))))

(declare-fun lt!33378 () Unit!2076)

(declare-fun lt!33377 () Unit!2076)

(assert (=> d!17431 (= lt!33378 lt!33377)))

(assert (=> d!17431 (= (getValueByKey!134 lt!33380 (_1!1071 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17431 (= lt!33377 (lemmaContainsTupThenGetReturnValue!51 lt!33380 (_1!1071 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17431 (= lt!33380 (insertStrictlySorted!54 (toList!716 lt!32831) (_1!1071 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17431 (= (+!93 lt!32831 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16))) lt!33379)))

(declare-fun b!74226 () Bool)

(declare-fun res!39267 () Bool)

(assert (=> b!74226 (=> (not res!39267) (not e!48503))))

(assert (=> b!74226 (= res!39267 (= (getValueByKey!134 (toList!716 lt!33379) (_1!1071 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16))))))))

(declare-fun b!74227 () Bool)

(assert (=> b!74227 (= e!48503 (contains!721 (toList!716 lt!33379) (tuple2!2121 lt!32836 (zeroValue!2114 newMap!16))))))

(assert (= (and d!17431 res!39266) b!74226))

(assert (= (and b!74226 res!39267) b!74227))

(declare-fun m!73253 () Bool)

(assert (=> d!17431 m!73253))

(declare-fun m!73255 () Bool)

(assert (=> d!17431 m!73255))

(declare-fun m!73257 () Bool)

(assert (=> d!17431 m!73257))

(declare-fun m!73259 () Bool)

(assert (=> d!17431 m!73259))

(declare-fun m!73261 () Bool)

(assert (=> b!74226 m!73261))

(declare-fun m!73263 () Bool)

(assert (=> b!74227 m!73263))

(assert (=> b!73339 d!17431))

(declare-fun d!17433 () Bool)

(assert (=> d!17433 (= (apply!75 (+!93 lt!32823 (tuple2!2121 lt!32828 (minValue!2114 newMap!16))) lt!32837) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32823 (tuple2!2121 lt!32828 (minValue!2114 newMap!16)))) lt!32837)))))

(declare-fun bs!3207 () Bool)

(assert (= bs!3207 d!17433))

(declare-fun m!73265 () Bool)

(assert (=> bs!3207 m!73265))

(assert (=> bs!3207 m!73265))

(declare-fun m!73267 () Bool)

(assert (=> bs!3207 m!73267))

(assert (=> b!73339 d!17433))

(declare-fun bm!6543 () Bool)

(declare-fun call!6546 () (_ BitVec 32))

(assert (=> bm!6543 (= call!6546 (arrayCountValidKeys!0 (_keys!3864 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74228 () Bool)

(declare-fun e!48505 () (_ BitVec 32))

(assert (=> b!74228 (= e!48505 (bvadd #b00000000000000000000000000000001 call!6546))))

(declare-fun b!74229 () Bool)

(declare-fun e!48504 () (_ BitVec 32))

(assert (=> b!74229 (= e!48504 e!48505)))

(declare-fun c!11152 () Bool)

(assert (=> b!74229 (= c!11152 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!17435 () Bool)

(declare-fun lt!33381 () (_ BitVec 32))

(assert (=> d!17435 (and (bvsge lt!33381 #b00000000000000000000000000000000) (bvsle lt!33381 (bvsub (size!2088 (_keys!3864 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!17435 (= lt!33381 e!48504)))

(declare-fun c!11153 () Bool)

(assert (=> d!17435 (= c!11153 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17435 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2088 (_keys!3864 newMap!16)) (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17435 (= (arrayCountValidKeys!0 (_keys!3864 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))) lt!33381)))

(declare-fun b!74230 () Bool)

(assert (=> b!74230 (= e!48505 call!6546)))

(declare-fun b!74231 () Bool)

(assert (=> b!74231 (= e!48504 #b00000000000000000000000000000000)))

(assert (= (and d!17435 c!11153) b!74231))

(assert (= (and d!17435 (not c!11153)) b!74229))

(assert (= (and b!74229 c!11152) b!74228))

(assert (= (and b!74229 (not c!11152)) b!74230))

(assert (= (or b!74228 b!74230) bm!6543))

(declare-fun m!73269 () Bool)

(assert (=> bm!6543 m!73269))

(assert (=> b!74229 m!72631))

(assert (=> b!74229 m!72631))

(assert (=> b!74229 m!72639))

(assert (=> bm!6439 d!17435))

(declare-fun d!17437 () Bool)

(declare-fun e!48506 () Bool)

(assert (=> d!17437 e!48506))

(declare-fun res!39268 () Bool)

(assert (=> d!17437 (=> (not res!39268) (not e!48506))))

(assert (=> d!17437 (= res!39268 (and (bvsge (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000000) (bvslt (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (size!2088 lt!33012))))))

(declare-fun lt!33382 () Unit!2076)

(assert (=> d!17437 (= lt!33382 (choose!422 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (defaultEntry!2212 newMap!16)))))

(assert (=> d!17437 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17437 (= (lemmaValidKeyInArrayIsInListMap!84 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (defaultEntry!2212 newMap!16)) lt!33382)))

(declare-fun b!74232 () Bool)

(assert (=> b!74232 (= e!48506 (contains!720 (getCurrentListMap!414 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1850 lt!33012) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)))))))

(assert (= (and d!17437 res!39268) b!74232))

(declare-fun m!73271 () Bool)

(assert (=> d!17437 m!73271))

(assert (=> d!17437 m!71557))

(assert (=> b!74232 m!71971))

(declare-fun m!73273 () Bool)

(assert (=> b!74232 m!73273))

(assert (=> b!74232 m!71971))

(assert (=> b!74232 m!73273))

(declare-fun m!73275 () Bool)

(assert (=> b!74232 m!73275))

(assert (=> d!16995 d!17437))

(declare-fun d!17439 () Bool)

(declare-fun e!48507 () Bool)

(assert (=> d!17439 e!48507))

(declare-fun res!39269 () Bool)

(assert (=> d!17439 (=> res!39269 e!48507)))

(declare-fun lt!33384 () Bool)

(assert (=> d!17439 (= res!39269 (not lt!33384))))

(declare-fun lt!33386 () Bool)

(assert (=> d!17439 (= lt!33384 lt!33386)))

(declare-fun lt!33385 () Unit!2076)

(declare-fun e!48508 () Unit!2076)

(assert (=> d!17439 (= lt!33385 e!48508)))

(declare-fun c!11154 () Bool)

(assert (=> d!17439 (= c!11154 lt!33386)))

(assert (=> d!17439 (= lt!33386 (containsKey!137 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!17439 (= (contains!720 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) lt!33384)))

(declare-fun b!74233 () Bool)

(declare-fun lt!33383 () Unit!2076)

(assert (=> b!74233 (= e!48508 lt!33383)))

(assert (=> b!74233 (= lt!33383 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> b!74233 (isDefined!86 (getValueByKey!134 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!74234 () Bool)

(declare-fun Unit!2127 () Unit!2076)

(assert (=> b!74234 (= e!48508 Unit!2127)))

(declare-fun b!74235 () Bool)

(assert (=> b!74235 (= e!48507 (isDefined!86 (getValueByKey!134 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (= (and d!17439 c!11154) b!74233))

(assert (= (and d!17439 (not c!11154)) b!74234))

(assert (= (and d!17439 (not res!39269)) b!74235))

(assert (=> d!17439 m!71143))

(declare-fun m!73277 () Bool)

(assert (=> d!17439 m!73277))

(assert (=> b!74233 m!71143))

(declare-fun m!73279 () Bool)

(assert (=> b!74233 m!73279))

(assert (=> b!74233 m!71143))

(declare-fun m!73281 () Bool)

(assert (=> b!74233 m!73281))

(assert (=> b!74233 m!73281))

(declare-fun m!73283 () Bool)

(assert (=> b!74233 m!73283))

(assert (=> b!74235 m!71143))

(assert (=> b!74235 m!73281))

(assert (=> b!74235 m!73281))

(assert (=> b!74235 m!73283))

(assert (=> d!16995 d!17439))

(assert (=> d!16995 d!17001))

(assert (=> d!16995 d!16873))

(assert (=> d!16995 d!16947))

(declare-fun e!48516 () Bool)

(declare-fun b!74236 () Bool)

(assert (=> b!74236 (= e!48516 (validKeyInArray!0 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!74237 () Bool)

(declare-fun e!48519 () Bool)

(declare-fun e!48514 () Bool)

(assert (=> b!74237 (= e!48519 e!48514)))

(declare-fun c!11160 () Bool)

(assert (=> b!74237 (= c!11160 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74238 () Bool)

(declare-fun e!48517 () Bool)

(declare-fun call!6551 () Bool)

(assert (=> b!74238 (= e!48517 (not call!6551))))

(declare-fun b!74239 () Bool)

(declare-fun e!48521 () Unit!2076)

(declare-fun Unit!2128 () Unit!2076)

(assert (=> b!74239 (= e!48521 Unit!2128)))

(declare-fun call!6552 () ListLongMap!1401)

(declare-fun bm!6544 () Bool)

(assert (=> bm!6544 (= call!6552 (getCurrentListMapNoExtraKeys!58 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!74240 () Bool)

(declare-fun e!48513 () Bool)

(assert (=> b!74240 (= e!48517 e!48513)))

(declare-fun res!39272 () Bool)

(assert (=> b!74240 (= res!39272 call!6551)))

(assert (=> b!74240 (=> (not res!39272) (not e!48513))))

(declare-fun bm!6545 () Bool)

(declare-fun call!6547 () ListLongMap!1401)

(declare-fun call!6553 () ListLongMap!1401)

(assert (=> bm!6545 (= call!6547 call!6553)))

(declare-fun b!74241 () Bool)

(declare-fun e!48510 () Bool)

(declare-fun e!48509 () Bool)

(assert (=> b!74241 (= e!48510 e!48509)))

(declare-fun res!39271 () Bool)

(assert (=> b!74241 (=> (not res!39271) (not e!48509))))

(declare-fun lt!33392 () ListLongMap!1401)

(assert (=> b!74241 (= res!39271 (contains!720 lt!33392 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!74241 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))))

(declare-fun bm!6546 () Bool)

(assert (=> bm!6546 (= call!6553 call!6552)))

(declare-fun b!74242 () Bool)

(declare-fun lt!33388 () Unit!2076)

(assert (=> b!74242 (= e!48521 lt!33388)))

(declare-fun lt!33402 () ListLongMap!1401)

(assert (=> b!74242 (= lt!33402 (getCurrentListMapNoExtraKeys!58 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33407 () (_ BitVec 64))

(assert (=> b!74242 (= lt!33407 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33387 () (_ BitVec 64))

(assert (=> b!74242 (= lt!33387 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33401 () Unit!2076)

(assert (=> b!74242 (= lt!33401 (addStillContains!51 lt!33402 lt!33407 (zeroValue!2114 newMap!16) lt!33387))))

(assert (=> b!74242 (contains!720 (+!93 lt!33402 (tuple2!2121 lt!33407 (zeroValue!2114 newMap!16))) lt!33387)))

(declare-fun lt!33396 () Unit!2076)

(assert (=> b!74242 (= lt!33396 lt!33401)))

(declare-fun lt!33405 () ListLongMap!1401)

(assert (=> b!74242 (= lt!33405 (getCurrentListMapNoExtraKeys!58 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33400 () (_ BitVec 64))

(assert (=> b!74242 (= lt!33400 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33404 () (_ BitVec 64))

(assert (=> b!74242 (= lt!33404 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33403 () Unit!2076)

(assert (=> b!74242 (= lt!33403 (addApplyDifferent!51 lt!33405 lt!33400 (minValue!2114 newMap!16) lt!33404))))

(assert (=> b!74242 (= (apply!75 (+!93 lt!33405 (tuple2!2121 lt!33400 (minValue!2114 newMap!16))) lt!33404) (apply!75 lt!33405 lt!33404))))

(declare-fun lt!33393 () Unit!2076)

(assert (=> b!74242 (= lt!33393 lt!33403)))

(declare-fun lt!33390 () ListLongMap!1401)

(assert (=> b!74242 (= lt!33390 (getCurrentListMapNoExtraKeys!58 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33391 () (_ BitVec 64))

(assert (=> b!74242 (= lt!33391 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33398 () (_ BitVec 64))

(assert (=> b!74242 (= lt!33398 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33406 () Unit!2076)

(assert (=> b!74242 (= lt!33406 (addApplyDifferent!51 lt!33390 lt!33391 (zeroValue!2114 newMap!16) lt!33398))))

(assert (=> b!74242 (= (apply!75 (+!93 lt!33390 (tuple2!2121 lt!33391 (zeroValue!2114 newMap!16))) lt!33398) (apply!75 lt!33390 lt!33398))))

(declare-fun lt!33389 () Unit!2076)

(assert (=> b!74242 (= lt!33389 lt!33406)))

(declare-fun lt!33394 () ListLongMap!1401)

(assert (=> b!74242 (= lt!33394 (getCurrentListMapNoExtraKeys!58 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33399 () (_ BitVec 64))

(assert (=> b!74242 (= lt!33399 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33408 () (_ BitVec 64))

(assert (=> b!74242 (= lt!33408 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!74242 (= lt!33388 (addApplyDifferent!51 lt!33394 lt!33399 (minValue!2114 newMap!16) lt!33408))))

(assert (=> b!74242 (= (apply!75 (+!93 lt!33394 (tuple2!2121 lt!33399 (minValue!2114 newMap!16))) lt!33408) (apply!75 lt!33394 lt!33408))))

(declare-fun bm!6547 () Bool)

(declare-fun call!6550 () ListLongMap!1401)

(declare-fun call!6549 () ListLongMap!1401)

(assert (=> bm!6547 (= call!6550 call!6549)))

(declare-fun b!74243 () Bool)

(declare-fun e!48511 () ListLongMap!1401)

(assert (=> b!74243 (= e!48511 call!6550)))

(declare-fun b!74244 () Bool)

(declare-fun res!39277 () Bool)

(assert (=> b!74244 (=> (not res!39277) (not e!48519))))

(assert (=> b!74244 (= res!39277 e!48517)))

(declare-fun c!11156 () Bool)

(assert (=> b!74244 (= c!11156 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74245 () Bool)

(declare-fun call!6548 () Bool)

(assert (=> b!74245 (= e!48514 (not call!6548))))

(declare-fun b!74246 () Bool)

(declare-fun e!48520 () ListLongMap!1401)

(assert (=> b!74246 (= e!48520 (+!93 call!6549 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!74247 () Bool)

(assert (=> b!74247 (= e!48520 e!48511)))

(declare-fun c!11157 () Bool)

(assert (=> b!74247 (= c!11157 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!11155 () Bool)

(declare-fun bm!6548 () Bool)

(assert (=> bm!6548 (= call!6549 (+!93 (ite c!11155 call!6552 (ite c!11157 call!6553 call!6547)) (ite (or c!11155 c!11157) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!74248 () Bool)

(declare-fun res!39270 () Bool)

(assert (=> b!74248 (=> (not res!39270) (not e!48519))))

(assert (=> b!74248 (= res!39270 e!48510)))

(declare-fun res!39275 () Bool)

(assert (=> b!74248 (=> res!39275 e!48510)))

(declare-fun e!48515 () Bool)

(assert (=> b!74248 (= res!39275 (not e!48515))))

(declare-fun res!39278 () Bool)

(assert (=> b!74248 (=> (not res!39278) (not e!48515))))

(assert (=> b!74248 (= res!39278 (bvslt #b00000000000000000000000000000000 (size!2088 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))))

(declare-fun b!74249 () Bool)

(assert (=> b!74249 (= e!48513 (= (apply!75 lt!33392 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!74250 () Bool)

(declare-fun e!48518 () ListLongMap!1401)

(assert (=> b!74250 (= e!48518 call!6547)))

(declare-fun b!74251 () Bool)

(declare-fun e!48512 () Bool)

(assert (=> b!74251 (= e!48514 e!48512)))

(declare-fun res!39274 () Bool)

(assert (=> b!74251 (= res!39274 call!6548)))

(assert (=> b!74251 (=> (not res!39274) (not e!48512))))

(declare-fun bm!6549 () Bool)

(assert (=> bm!6549 (= call!6551 (contains!720 lt!33392 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17441 () Bool)

(assert (=> d!17441 e!48519))

(declare-fun res!39276 () Bool)

(assert (=> d!17441 (=> (not res!39276) (not e!48519))))

(assert (=> d!17441 (= res!39276 (or (bvsge #b00000000000000000000000000000000 (size!2088 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))))))

(declare-fun lt!33397 () ListLongMap!1401)

(assert (=> d!17441 (= lt!33392 lt!33397)))

(declare-fun lt!33395 () Unit!2076)

(assert (=> d!17441 (= lt!33395 e!48521)))

(declare-fun c!11158 () Bool)

(assert (=> d!17441 (= c!11158 e!48516)))

(declare-fun res!39273 () Bool)

(assert (=> d!17441 (=> (not res!39273) (not e!48516))))

(assert (=> d!17441 (= res!39273 (bvslt #b00000000000000000000000000000000 (size!2088 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))))

(assert (=> d!17441 (= lt!33397 e!48520)))

(assert (=> d!17441 (= c!11155 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17441 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17441 (= (getCurrentListMap!414 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33392)))

(declare-fun bm!6550 () Bool)

(assert (=> bm!6550 (= call!6548 (contains!720 lt!33392 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74252 () Bool)

(assert (=> b!74252 (= e!48518 call!6550)))

(declare-fun b!74253 () Bool)

(assert (=> b!74253 (= e!48509 (= (apply!75 lt!33392 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74253 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))))))

(assert (=> b!74253 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))))

(declare-fun b!74254 () Bool)

(assert (=> b!74254 (= e!48512 (= (apply!75 lt!33392 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun b!74255 () Bool)

(assert (=> b!74255 (= e!48515 (validKeyInArray!0 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!74256 () Bool)

(declare-fun c!11159 () Bool)

(assert (=> b!74256 (= c!11159 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74256 (= e!48511 e!48518)))

(assert (= (and d!17441 c!11155) b!74246))

(assert (= (and d!17441 (not c!11155)) b!74247))

(assert (= (and b!74247 c!11157) b!74243))

(assert (= (and b!74247 (not c!11157)) b!74256))

(assert (= (and b!74256 c!11159) b!74252))

(assert (= (and b!74256 (not c!11159)) b!74250))

(assert (= (or b!74252 b!74250) bm!6545))

(assert (= (or b!74243 bm!6545) bm!6546))

(assert (= (or b!74243 b!74252) bm!6547))

(assert (= (or b!74246 bm!6546) bm!6544))

(assert (= (or b!74246 bm!6547) bm!6548))

(assert (= (and d!17441 res!39273) b!74236))

(assert (= (and d!17441 c!11158) b!74242))

(assert (= (and d!17441 (not c!11158)) b!74239))

(assert (= (and d!17441 res!39276) b!74248))

(assert (= (and b!74248 res!39278) b!74255))

(assert (= (and b!74248 (not res!39275)) b!74241))

(assert (= (and b!74241 res!39271) b!74253))

(assert (= (and b!74248 res!39270) b!74244))

(assert (= (and b!74244 c!11156) b!74240))

(assert (= (and b!74244 (not c!11156)) b!74238))

(assert (= (and b!74240 res!39272) b!74249))

(assert (= (or b!74240 b!74238) bm!6549))

(assert (= (and b!74244 res!39277) b!74237))

(assert (= (and b!74237 c!11160) b!74251))

(assert (= (and b!74237 (not c!11160)) b!74245))

(assert (= (and b!74251 res!39274) b!74254))

(assert (= (or b!74251 b!74245) bm!6550))

(declare-fun b_lambda!3339 () Bool)

(assert (=> (not b_lambda!3339) (not b!74253)))

(assert (=> b!74253 t!5036))

(declare-fun b_and!4565 () Bool)

(assert (= b_and!4561 (and (=> t!5036 result!2689) b_and!4565)))

(assert (=> b!74253 t!5038))

(declare-fun b_and!4567 () Bool)

(assert (= b_and!4563 (and (=> t!5038 result!2691) b_and!4567)))

(declare-fun m!73285 () Bool)

(assert (=> b!74241 m!73285))

(assert (=> b!74241 m!73285))

(declare-fun m!73287 () Bool)

(assert (=> b!74241 m!73287))

(declare-fun m!73289 () Bool)

(assert (=> b!74242 m!73289))

(declare-fun m!73291 () Bool)

(assert (=> b!74242 m!73291))

(declare-fun m!73293 () Bool)

(assert (=> b!74242 m!73293))

(assert (=> b!74242 m!73285))

(declare-fun m!73295 () Bool)

(assert (=> b!74242 m!73295))

(declare-fun m!73297 () Bool)

(assert (=> b!74242 m!73297))

(declare-fun m!73299 () Bool)

(assert (=> b!74242 m!73299))

(declare-fun m!73301 () Bool)

(assert (=> b!74242 m!73301))

(declare-fun m!73303 () Bool)

(assert (=> b!74242 m!73303))

(declare-fun m!73305 () Bool)

(assert (=> b!74242 m!73305))

(assert (=> b!74242 m!73303))

(assert (=> b!74242 m!73289))

(declare-fun m!73307 () Bool)

(assert (=> b!74242 m!73307))

(declare-fun m!73309 () Bool)

(assert (=> b!74242 m!73309))

(assert (=> b!74242 m!73295))

(declare-fun m!73311 () Bool)

(assert (=> b!74242 m!73311))

(assert (=> b!74242 m!73307))

(declare-fun m!73313 () Bool)

(assert (=> b!74242 m!73313))

(declare-fun m!73315 () Bool)

(assert (=> b!74242 m!73315))

(declare-fun m!73317 () Bool)

(assert (=> b!74242 m!73317))

(declare-fun m!73319 () Bool)

(assert (=> b!74242 m!73319))

(assert (=> b!74236 m!73285))

(assert (=> b!74236 m!73285))

(declare-fun m!73321 () Bool)

(assert (=> b!74236 m!73321))

(declare-fun m!73323 () Bool)

(assert (=> bm!6550 m!73323))

(assert (=> bm!6544 m!73315))

(declare-fun m!73325 () Bool)

(assert (=> bm!6549 m!73325))

(assert (=> d!17441 m!71557))

(declare-fun m!73327 () Bool)

(assert (=> bm!6548 m!73327))

(declare-fun m!73329 () Bool)

(assert (=> b!74246 m!73329))

(declare-fun m!73331 () Bool)

(assert (=> b!74254 m!73331))

(assert (=> b!74255 m!73285))

(assert (=> b!74255 m!73285))

(assert (=> b!74255 m!73321))

(assert (=> b!74253 m!71663))

(assert (=> b!74253 m!73285))

(assert (=> b!74253 m!73285))

(declare-fun m!73333 () Bool)

(assert (=> b!74253 m!73333))

(declare-fun m!73335 () Bool)

(assert (=> b!74253 m!73335))

(assert (=> b!74253 m!71663))

(declare-fun m!73337 () Bool)

(assert (=> b!74253 m!73337))

(assert (=> b!74253 m!73335))

(declare-fun m!73339 () Bool)

(assert (=> b!74249 m!73339))

(assert (=> d!16995 d!17441))

(declare-fun d!17443 () Bool)

(assert (=> d!17443 (= (arrayCountValidKeys!0 lt!33024 (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (bvadd (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!33411 () Unit!2076)

(declare-fun choose!2 (array!3877 (_ BitVec 32)) Unit!2076)

(assert (=> d!17443 (= lt!33411 (choose!2 lt!33024 (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))))))

(declare-fun e!48524 () Bool)

(assert (=> d!17443 e!48524))

(declare-fun res!39283 () Bool)

(assert (=> d!17443 (=> (not res!39283) (not e!48524))))

(assert (=> d!17443 (= res!39283 (and (bvsge (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000000) (bvslt (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (size!2088 lt!33024))))))

(assert (=> d!17443 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!33024 (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))) lt!33411)))

(declare-fun b!74261 () Bool)

(declare-fun res!39284 () Bool)

(assert (=> b!74261 (=> (not res!39284) (not e!48524))))

(assert (=> b!74261 (= res!39284 (validKeyInArray!0 (select (arr!1850 lt!33024) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)))))))

(declare-fun b!74262 () Bool)

(assert (=> b!74262 (= e!48524 (bvslt (size!2088 lt!33024) #b01111111111111111111111111111111))))

(assert (= (and d!17443 res!39283) b!74261))

(assert (= (and b!74261 res!39284) b!74262))

(assert (=> d!17443 m!71989))

(declare-fun m!73341 () Bool)

(assert (=> d!17443 m!73341))

(declare-fun m!73343 () Bool)

(assert (=> b!74261 m!73343))

(assert (=> b!74261 m!73343))

(declare-fun m!73345 () Bool)

(assert (=> b!74261 m!73345))

(assert (=> d!16995 d!17443))

(declare-fun d!17445 () Bool)

(declare-fun e!48525 () Bool)

(assert (=> d!17445 e!48525))

(declare-fun res!39285 () Bool)

(assert (=> d!17445 (=> res!39285 e!48525)))

(declare-fun lt!33413 () Bool)

(assert (=> d!17445 (= res!39285 (not lt!33413))))

(declare-fun lt!33415 () Bool)

(assert (=> d!17445 (= lt!33413 lt!33415)))

(declare-fun lt!33414 () Unit!2076)

(declare-fun e!48526 () Unit!2076)

(assert (=> d!17445 (= lt!33414 e!48526)))

(declare-fun c!11161 () Bool)

(assert (=> d!17445 (= c!11161 lt!33415)))

(assert (=> d!17445 (= lt!33415 (containsKey!137 (toList!716 (getCurrentListMap!414 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)))))))

(assert (=> d!17445 (= (contains!720 (getCurrentListMap!414 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)))) lt!33413)))

(declare-fun b!74263 () Bool)

(declare-fun lt!33412 () Unit!2076)

(assert (=> b!74263 (= e!48526 lt!33412)))

(assert (=> b!74263 (= lt!33412 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (getCurrentListMap!414 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)))))))

(assert (=> b!74263 (isDefined!86 (getValueByKey!134 (toList!716 (getCurrentListMap!414 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)))))))

(declare-fun b!74264 () Bool)

(declare-fun Unit!2129 () Unit!2076)

(assert (=> b!74264 (= e!48526 Unit!2129)))

(declare-fun b!74265 () Bool)

(assert (=> b!74265 (= e!48525 (isDefined!86 (getValueByKey!134 (toList!716 (getCurrentListMap!414 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))))))))

(assert (= (and d!17445 c!11161) b!74263))

(assert (= (and d!17445 (not c!11161)) b!74264))

(assert (= (and d!17445 (not res!39285)) b!74265))

(assert (=> d!17445 m!71973))

(declare-fun m!73347 () Bool)

(assert (=> d!17445 m!73347))

(assert (=> b!74263 m!71973))

(declare-fun m!73349 () Bool)

(assert (=> b!74263 m!73349))

(assert (=> b!74263 m!71973))

(declare-fun m!73351 () Bool)

(assert (=> b!74263 m!73351))

(assert (=> b!74263 m!73351))

(declare-fun m!73353 () Bool)

(assert (=> b!74263 m!73353))

(assert (=> b!74265 m!71973))

(assert (=> b!74265 m!73351))

(assert (=> b!74265 m!73351))

(assert (=> b!74265 m!73353))

(assert (=> d!16995 d!17445))

(declare-fun d!17447 () Bool)

(declare-fun e!48529 () Bool)

(assert (=> d!17447 e!48529))

(declare-fun res!39288 () Bool)

(assert (=> d!17447 (=> (not res!39288) (not e!48529))))

(assert (=> d!17447 (= res!39288 (and (bvsge (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000000) (bvslt (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (size!2088 (_keys!3864 newMap!16)))))))

(declare-fun lt!33418 () Unit!2076)

(declare-fun choose!41 (array!3877 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1473) Unit!2076)

(assert (=> d!17447 (= lt!33418 (choose!41 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) lt!33002 lt!33013))))

(assert (=> d!17447 (bvslt (size!2088 (_keys!3864 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!17447 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) lt!33002 lt!33013) lt!33418)))

(declare-fun b!74268 () Bool)

(assert (=> b!74268 (= e!48529 (arrayNoDuplicates!0 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) lt!33002 lt!33013))))

(assert (= (and d!17447 res!39288) b!74268))

(assert (=> d!17447 m!71143))

(declare-fun m!73355 () Bool)

(assert (=> d!17447 m!73355))

(assert (=> b!74268 m!71987))

(assert (=> b!74268 m!71967))

(assert (=> d!16995 d!17447))

(declare-fun bm!6551 () Bool)

(declare-fun call!6554 () (_ BitVec 32))

(assert (=> bm!6551 (= call!6554 (arrayCountValidKeys!0 lt!33024 (bvadd (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000001) (bvadd (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000001)))))

(declare-fun b!74269 () Bool)

(declare-fun e!48531 () (_ BitVec 32))

(assert (=> b!74269 (= e!48531 (bvadd #b00000000000000000000000000000001 call!6554))))

(declare-fun b!74270 () Bool)

(declare-fun e!48530 () (_ BitVec 32))

(assert (=> b!74270 (= e!48530 e!48531)))

(declare-fun c!11162 () Bool)

(assert (=> b!74270 (= c!11162 (validKeyInArray!0 (select (arr!1850 lt!33024) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)))))))

(declare-fun d!17449 () Bool)

(declare-fun lt!33419 () (_ BitVec 32))

(assert (=> d!17449 (and (bvsge lt!33419 #b00000000000000000000000000000000) (bvsle lt!33419 (bvsub (size!2088 lt!33024) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)))))))

(assert (=> d!17449 (= lt!33419 e!48530)))

(declare-fun c!11163 () Bool)

(assert (=> d!17449 (= c!11163 (bvsge (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (bvadd (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000001)))))

(assert (=> d!17449 (and (bvsle (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (bvadd (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000001)) (bvsge (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000001) (size!2088 lt!33024)))))

(assert (=> d!17449 (= (arrayCountValidKeys!0 lt!33024 (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (bvadd (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000001)) lt!33419)))

(declare-fun b!74271 () Bool)

(assert (=> b!74271 (= e!48531 call!6554)))

(declare-fun b!74272 () Bool)

(assert (=> b!74272 (= e!48530 #b00000000000000000000000000000000)))

(assert (= (and d!17449 c!11163) b!74272))

(assert (= (and d!17449 (not c!11163)) b!74270))

(assert (= (and b!74270 c!11162) b!74269))

(assert (= (and b!74270 (not c!11162)) b!74271))

(assert (= (or b!74269 b!74271) bm!6551))

(declare-fun m!73357 () Bool)

(assert (=> bm!6551 m!73357))

(assert (=> b!74270 m!73343))

(assert (=> b!74270 m!73343))

(assert (=> b!74270 m!73345))

(assert (=> d!16995 d!17449))

(declare-fun d!17451 () Bool)

(declare-fun e!48536 () Bool)

(assert (=> d!17451 e!48536))

(declare-fun res!39297 () Bool)

(assert (=> d!17451 (=> (not res!39297) (not e!48536))))

(assert (=> d!17451 (= res!39297 (and (bvsge (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000000) (bvslt (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (size!2088 (_keys!3864 newMap!16)))))))

(declare-fun lt!33422 () Unit!2076)

(declare-fun choose!1 (array!3877 (_ BitVec 32) (_ BitVec 64)) Unit!2076)

(assert (=> d!17451 (= lt!33422 (choose!1 (_keys!3864 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun e!48537 () Bool)

(assert (=> d!17451 e!48537))

(declare-fun res!39299 () Bool)

(assert (=> d!17451 (=> (not res!39299) (not e!48537))))

(assert (=> d!17451 (= res!39299 (and (bvsge (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000000) (bvslt (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (size!2088 (_keys!3864 newMap!16)))))))

(assert (=> d!17451 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3864 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) lt!33422)))

(declare-fun b!74284 () Bool)

(assert (=> b!74284 (= e!48536 (= (arrayCountValidKeys!0 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3864 newMap!16) #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!74282 () Bool)

(declare-fun res!39298 () Bool)

(assert (=> b!74282 (=> (not res!39298) (not e!48537))))

(assert (=> b!74282 (= res!39298 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!74281 () Bool)

(declare-fun res!39300 () Bool)

(assert (=> b!74281 (=> (not res!39300) (not e!48537))))

(assert (=> b!74281 (= res!39300 (not (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))))))))

(declare-fun b!74283 () Bool)

(assert (=> b!74283 (= e!48537 (bvslt (size!2088 (_keys!3864 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!17451 res!39299) b!74281))

(assert (= (and b!74281 res!39300) b!74282))

(assert (= (and b!74282 res!39298) b!74283))

(assert (= (and d!17451 res!39297) b!74284))

(assert (=> d!17451 m!71143))

(declare-fun m!73359 () Bool)

(assert (=> d!17451 m!73359))

(assert (=> b!74284 m!71987))

(assert (=> b!74284 m!71965))

(assert (=> b!74284 m!71453))

(assert (=> b!74282 m!71143))

(assert (=> b!74282 m!71467))

(declare-fun m!73361 () Bool)

(assert (=> b!74281 m!73361))

(assert (=> b!74281 m!73361))

(declare-fun m!73363 () Bool)

(assert (=> b!74281 m!73363))

(assert (=> d!16995 d!17451))

(declare-fun b!74285 () Bool)

(declare-fun e!48539 () Bool)

(declare-fun call!6555 () Bool)

(assert (=> b!74285 (= e!48539 call!6555)))

(declare-fun b!74286 () Bool)

(declare-fun e!48540 () Bool)

(assert (=> b!74286 (= e!48539 e!48540)))

(declare-fun lt!33424 () (_ BitVec 64))

(assert (=> b!74286 (= lt!33424 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33423 () Unit!2076)

(assert (=> b!74286 (= lt!33423 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) lt!33424 #b00000000000000000000000000000000))))

(assert (=> b!74286 (arrayContainsKey!0 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) lt!33424 #b00000000000000000000000000000000)))

(declare-fun lt!33425 () Unit!2076)

(assert (=> b!74286 (= lt!33425 lt!33423)))

(declare-fun res!39301 () Bool)

(assert (=> b!74286 (= res!39301 (= (seekEntryOrOpen!0 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000) (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (mask!6179 newMap!16)) (Found!230 #b00000000000000000000000000000000)))))

(assert (=> b!74286 (=> (not res!39301) (not e!48540))))

(declare-fun d!17453 () Bool)

(declare-fun res!39302 () Bool)

(declare-fun e!48538 () Bool)

(assert (=> d!17453 (=> res!39302 e!48538)))

(assert (=> d!17453 (= res!39302 (bvsge #b00000000000000000000000000000000 (size!2088 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))))

(assert (=> d!17453 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (mask!6179 newMap!16)) e!48538)))

(declare-fun b!74287 () Bool)

(assert (=> b!74287 (= e!48538 e!48539)))

(declare-fun c!11164 () Bool)

(assert (=> b!74287 (= c!11164 (validKeyInArray!0 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6552 () Bool)

(assert (=> bm!6552 (= call!6555 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (mask!6179 newMap!16)))))

(declare-fun b!74288 () Bool)

(assert (=> b!74288 (= e!48540 call!6555)))

(assert (= (and d!17453 (not res!39302)) b!74287))

(assert (= (and b!74287 c!11164) b!74286))

(assert (= (and b!74287 (not c!11164)) b!74285))

(assert (= (and b!74286 res!39301) b!74288))

(assert (= (or b!74288 b!74285) bm!6552))

(assert (=> b!74286 m!73285))

(declare-fun m!73365 () Bool)

(assert (=> b!74286 m!73365))

(declare-fun m!73367 () Bool)

(assert (=> b!74286 m!73367))

(assert (=> b!74286 m!73285))

(declare-fun m!73369 () Bool)

(assert (=> b!74286 m!73369))

(assert (=> b!74287 m!73285))

(assert (=> b!74287 m!73285))

(assert (=> b!74287 m!73321))

(declare-fun m!73371 () Bool)

(assert (=> bm!6552 m!73371))

(assert (=> d!16995 d!17453))

(declare-fun d!17455 () Bool)

(declare-fun e!48543 () Bool)

(assert (=> d!17455 e!48543))

(declare-fun res!39305 () Bool)

(assert (=> d!17455 (=> (not res!39305) (not e!48543))))

(assert (=> d!17455 (= res!39305 (and (bvsge (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000000) (bvslt (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (size!2088 (_keys!3864 newMap!16)))))))

(declare-fun lt!33428 () Unit!2076)

(declare-fun choose!102 ((_ BitVec 64) array!3877 (_ BitVec 32) (_ BitVec 32)) Unit!2076)

(assert (=> d!17455 (= lt!33428 (choose!102 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (mask!6179 newMap!16)))))

(assert (=> d!17455 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17455 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (mask!6179 newMap!16)) lt!33428)))

(declare-fun b!74291 () Bool)

(assert (=> b!74291 (= e!48543 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (mask!6179 newMap!16)))))

(assert (= (and d!17455 res!39305) b!74291))

(assert (=> d!17455 m!71143))

(declare-fun m!73373 () Bool)

(assert (=> d!17455 m!73373))

(assert (=> d!17455 m!71557))

(assert (=> b!74291 m!71987))

(assert (=> b!74291 m!71997))

(assert (=> d!16995 d!17455))

(declare-fun d!17457 () Bool)

(declare-fun e!48546 () Bool)

(assert (=> d!17457 e!48546))

(declare-fun res!39308 () Bool)

(assert (=> d!17457 (=> (not res!39308) (not e!48546))))

(assert (=> d!17457 (= res!39308 (and (bvsge (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000000) (bvslt (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (size!2088 (_keys!3864 newMap!16))) (bvslt (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (size!2089 (_values!2195 newMap!16)))))))

(declare-fun lt!33431 () Unit!2076)

(declare-fun choose!430 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) (_ BitVec 64) V!2945 Int) Unit!2076)

(assert (=> d!17457 (= lt!33431 (choose!430 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 (defaultEntry!2212 newMap!16)))))

(assert (=> d!17457 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17457 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!13 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 (defaultEntry!2212 newMap!16)) lt!33431)))

(declare-fun b!74294 () Bool)

(assert (=> b!74294 (= e!48546 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (getCurrentListMap!414 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))))))

(assert (= (and d!17457 res!39308) b!74294))

(assert (=> d!17457 m!71143))

(declare-fun m!73375 () Bool)

(assert (=> d!17457 m!73375))

(assert (=> d!17457 m!71557))

(assert (=> b!74294 m!71403))

(assert (=> b!74294 m!71985))

(assert (=> b!74294 m!71987))

(assert (=> b!74294 m!71403))

(assert (=> b!74294 m!71741))

(assert (=> b!74294 m!71993))

(assert (=> d!16995 d!17457))

(declare-fun d!17459 () Bool)

(declare-fun res!39309 () Bool)

(declare-fun e!48547 () Bool)

(assert (=> d!17459 (=> res!39309 e!48547)))

(assert (=> d!17459 (= res!39309 (= (select (arr!1850 lt!33001) #b00000000000000000000000000000000) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!17459 (= (arrayContainsKey!0 lt!33001 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000) e!48547)))

(declare-fun b!74295 () Bool)

(declare-fun e!48548 () Bool)

(assert (=> b!74295 (= e!48547 e!48548)))

(declare-fun res!39310 () Bool)

(assert (=> b!74295 (=> (not res!39310) (not e!48548))))

(assert (=> b!74295 (= res!39310 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 lt!33001)))))

(declare-fun b!74296 () Bool)

(assert (=> b!74296 (= e!48548 (arrayContainsKey!0 lt!33001 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!17459 (not res!39309)) b!74295))

(assert (= (and b!74295 res!39310) b!74296))

(declare-fun m!73377 () Bool)

(assert (=> d!17459 m!73377))

(assert (=> b!74296 m!71143))

(declare-fun m!73379 () Bool)

(assert (=> b!74296 m!73379))

(assert (=> d!16995 d!17459))

(declare-fun call!6556 () (_ BitVec 32))

(declare-fun bm!6553 () Bool)

(assert (=> bm!6553 (= call!6556 (arrayCountValidKeys!0 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74297 () Bool)

(declare-fun e!48550 () (_ BitVec 32))

(assert (=> b!74297 (= e!48550 (bvadd #b00000000000000000000000000000001 call!6556))))

(declare-fun b!74298 () Bool)

(declare-fun e!48549 () (_ BitVec 32))

(assert (=> b!74298 (= e!48549 e!48550)))

(declare-fun c!11165 () Bool)

(assert (=> b!74298 (= c!11165 (validKeyInArray!0 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!17461 () Bool)

(declare-fun lt!33432 () (_ BitVec 32))

(assert (=> d!17461 (and (bvsge lt!33432 #b00000000000000000000000000000000) (bvsle lt!33432 (bvsub (size!2088 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!17461 (= lt!33432 e!48549)))

(declare-fun c!11166 () Bool)

(assert (=> d!17461 (= c!11166 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17461 (and (bvsle #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2088 (_keys!3864 newMap!16)) (size!2088 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))))

(assert (=> d!17461 (= (arrayCountValidKeys!0 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) lt!33432)))

(declare-fun b!74299 () Bool)

(assert (=> b!74299 (= e!48550 call!6556)))

(declare-fun b!74300 () Bool)

(assert (=> b!74300 (= e!48549 #b00000000000000000000000000000000)))

(assert (= (and d!17461 c!11166) b!74300))

(assert (= (and d!17461 (not c!11166)) b!74298))

(assert (= (and b!74298 c!11165) b!74297))

(assert (= (and b!74298 (not c!11165)) b!74299))

(assert (= (or b!74297 b!74299) bm!6553))

(declare-fun m!73381 () Bool)

(assert (=> bm!6553 m!73381))

(assert (=> b!74298 m!73285))

(assert (=> b!74298 m!73285))

(assert (=> b!74298 m!73321))

(assert (=> d!16995 d!17461))

(declare-fun d!17463 () Bool)

(assert (=> d!17463 (arrayContainsKey!0 lt!33001 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!33435 () Unit!2076)

(declare-fun choose!13 (array!3877 (_ BitVec 64) (_ BitVec 32)) Unit!2076)

(assert (=> d!17463 (= lt!33435 (choose!13 lt!33001 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))))))

(assert (=> d!17463 (bvsge (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) #b00000000000000000000000000000000)))

(assert (=> d!17463 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!33001 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773))) lt!33435)))

(declare-fun bs!3208 () Bool)

(assert (= bs!3208 d!17463))

(assert (=> bs!3208 m!71143))

(assert (=> bs!3208 m!71977))

(assert (=> bs!3208 m!71143))

(declare-fun m!73383 () Bool)

(assert (=> bs!3208 m!73383))

(assert (=> d!16995 d!17463))

(declare-fun b!74301 () Bool)

(declare-fun e!48553 () Bool)

(declare-fun e!48554 () Bool)

(assert (=> b!74301 (= e!48553 e!48554)))

(declare-fun res!39312 () Bool)

(assert (=> b!74301 (=> (not res!39312) (not e!48554))))

(declare-fun e!48552 () Bool)

(assert (=> b!74301 (= res!39312 (not e!48552))))

(declare-fun res!39313 () Bool)

(assert (=> b!74301 (=> (not res!39313) (not e!48552))))

(assert (=> b!74301 (= res!39313 (validKeyInArray!0 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) lt!33002)))))

(declare-fun call!6557 () Bool)

(declare-fun bm!6554 () Bool)

(declare-fun c!11167 () Bool)

(assert (=> bm!6554 (= call!6557 (arrayNoDuplicates!0 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) (bvadd lt!33002 #b00000000000000000000000000000001) (ite c!11167 (Cons!1469 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) lt!33002) lt!33013) lt!33013)))))

(declare-fun b!74302 () Bool)

(declare-fun e!48551 () Bool)

(assert (=> b!74302 (= e!48554 e!48551)))

(assert (=> b!74302 (= c!11167 (validKeyInArray!0 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) lt!33002)))))

(declare-fun d!17465 () Bool)

(declare-fun res!39311 () Bool)

(assert (=> d!17465 (=> res!39311 e!48553)))

(assert (=> d!17465 (= res!39311 (bvsge lt!33002 (size!2088 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))))))))

(assert (=> d!17465 (= (arrayNoDuplicates!0 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16))) lt!33002 lt!33013) e!48553)))

(declare-fun b!74303 () Bool)

(assert (=> b!74303 (= e!48551 call!6557)))

(declare-fun b!74304 () Bool)

(assert (=> b!74304 (= e!48551 call!6557)))

(declare-fun b!74305 () Bool)

(assert (=> b!74305 (= e!48552 (contains!722 lt!33013 (select (arr!1850 (array!3878 (store (arr!1850 (_keys!3864 newMap!16)) (ite c!10861 (index!3054 lt!32773) (index!3051 lt!32773)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) (size!2088 (_keys!3864 newMap!16)))) lt!33002)))))

(assert (= (and d!17465 (not res!39311)) b!74301))

(assert (= (and b!74301 res!39313) b!74305))

(assert (= (and b!74301 res!39312) b!74302))

(assert (= (and b!74302 c!11167) b!74304))

(assert (= (and b!74302 (not c!11167)) b!74303))

(assert (= (or b!74304 b!74303) bm!6554))

(declare-fun m!73385 () Bool)

(assert (=> b!74301 m!73385))

(assert (=> b!74301 m!73385))

(declare-fun m!73387 () Bool)

(assert (=> b!74301 m!73387))

(assert (=> bm!6554 m!73385))

(declare-fun m!73389 () Bool)

(assert (=> bm!6554 m!73389))

(assert (=> b!74302 m!73385))

(assert (=> b!74302 m!73385))

(assert (=> b!74302 m!73387))

(assert (=> b!74305 m!73385))

(assert (=> b!74305 m!73385))

(declare-fun m!73391 () Bool)

(assert (=> b!74305 m!73391))

(assert (=> d!16995 d!17465))

(declare-fun b!74306 () Bool)

(declare-fun e!48562 () Bool)

(assert (=> b!74306 (= e!48562 (validKeyInArray!0 (select (arr!1850 lt!33012) #b00000000000000000000000000000000)))))

(declare-fun b!74307 () Bool)

(declare-fun e!48565 () Bool)

(declare-fun e!48560 () Bool)

(assert (=> b!74307 (= e!48565 e!48560)))

(declare-fun c!11173 () Bool)

(assert (=> b!74307 (= c!11173 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74308 () Bool)

(declare-fun e!48563 () Bool)

(declare-fun call!6562 () Bool)

(assert (=> b!74308 (= e!48563 (not call!6562))))

(declare-fun b!74309 () Bool)

(declare-fun e!48567 () Unit!2076)

(declare-fun Unit!2130 () Unit!2076)

(assert (=> b!74309 (= e!48567 Unit!2130)))

(declare-fun bm!6555 () Bool)

(declare-fun call!6563 () ListLongMap!1401)

(assert (=> bm!6555 (= call!6563 (getCurrentListMapNoExtraKeys!58 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!74310 () Bool)

(declare-fun e!48559 () Bool)

(assert (=> b!74310 (= e!48563 e!48559)))

(declare-fun res!39316 () Bool)

(assert (=> b!74310 (= res!39316 call!6562)))

(assert (=> b!74310 (=> (not res!39316) (not e!48559))))

(declare-fun bm!6556 () Bool)

(declare-fun call!6558 () ListLongMap!1401)

(declare-fun call!6564 () ListLongMap!1401)

(assert (=> bm!6556 (= call!6558 call!6564)))

(declare-fun b!74311 () Bool)

(declare-fun e!48556 () Bool)

(declare-fun e!48555 () Bool)

(assert (=> b!74311 (= e!48556 e!48555)))

(declare-fun res!39315 () Bool)

(assert (=> b!74311 (=> (not res!39315) (not e!48555))))

(declare-fun lt!33441 () ListLongMap!1401)

(assert (=> b!74311 (= res!39315 (contains!720 lt!33441 (select (arr!1850 lt!33012) #b00000000000000000000000000000000)))))

(assert (=> b!74311 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 lt!33012)))))

(declare-fun bm!6557 () Bool)

(assert (=> bm!6557 (= call!6564 call!6563)))

(declare-fun b!74312 () Bool)

(declare-fun lt!33437 () Unit!2076)

(assert (=> b!74312 (= e!48567 lt!33437)))

(declare-fun lt!33451 () ListLongMap!1401)

(assert (=> b!74312 (= lt!33451 (getCurrentListMapNoExtraKeys!58 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33456 () (_ BitVec 64))

(assert (=> b!74312 (= lt!33456 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33436 () (_ BitVec 64))

(assert (=> b!74312 (= lt!33436 (select (arr!1850 lt!33012) #b00000000000000000000000000000000))))

(declare-fun lt!33450 () Unit!2076)

(assert (=> b!74312 (= lt!33450 (addStillContains!51 lt!33451 lt!33456 (zeroValue!2114 newMap!16) lt!33436))))

(assert (=> b!74312 (contains!720 (+!93 lt!33451 (tuple2!2121 lt!33456 (zeroValue!2114 newMap!16))) lt!33436)))

(declare-fun lt!33445 () Unit!2076)

(assert (=> b!74312 (= lt!33445 lt!33450)))

(declare-fun lt!33454 () ListLongMap!1401)

(assert (=> b!74312 (= lt!33454 (getCurrentListMapNoExtraKeys!58 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33449 () (_ BitVec 64))

(assert (=> b!74312 (= lt!33449 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33453 () (_ BitVec 64))

(assert (=> b!74312 (= lt!33453 (select (arr!1850 lt!33012) #b00000000000000000000000000000000))))

(declare-fun lt!33452 () Unit!2076)

(assert (=> b!74312 (= lt!33452 (addApplyDifferent!51 lt!33454 lt!33449 (minValue!2114 newMap!16) lt!33453))))

(assert (=> b!74312 (= (apply!75 (+!93 lt!33454 (tuple2!2121 lt!33449 (minValue!2114 newMap!16))) lt!33453) (apply!75 lt!33454 lt!33453))))

(declare-fun lt!33442 () Unit!2076)

(assert (=> b!74312 (= lt!33442 lt!33452)))

(declare-fun lt!33439 () ListLongMap!1401)

(assert (=> b!74312 (= lt!33439 (getCurrentListMapNoExtraKeys!58 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33440 () (_ BitVec 64))

(assert (=> b!74312 (= lt!33440 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33447 () (_ BitVec 64))

(assert (=> b!74312 (= lt!33447 (select (arr!1850 lt!33012) #b00000000000000000000000000000000))))

(declare-fun lt!33455 () Unit!2076)

(assert (=> b!74312 (= lt!33455 (addApplyDifferent!51 lt!33439 lt!33440 (zeroValue!2114 newMap!16) lt!33447))))

(assert (=> b!74312 (= (apply!75 (+!93 lt!33439 (tuple2!2121 lt!33440 (zeroValue!2114 newMap!16))) lt!33447) (apply!75 lt!33439 lt!33447))))

(declare-fun lt!33438 () Unit!2076)

(assert (=> b!74312 (= lt!33438 lt!33455)))

(declare-fun lt!33443 () ListLongMap!1401)

(assert (=> b!74312 (= lt!33443 (getCurrentListMapNoExtraKeys!58 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33448 () (_ BitVec 64))

(assert (=> b!74312 (= lt!33448 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33457 () (_ BitVec 64))

(assert (=> b!74312 (= lt!33457 (select (arr!1850 lt!33012) #b00000000000000000000000000000000))))

(assert (=> b!74312 (= lt!33437 (addApplyDifferent!51 lt!33443 lt!33448 (minValue!2114 newMap!16) lt!33457))))

(assert (=> b!74312 (= (apply!75 (+!93 lt!33443 (tuple2!2121 lt!33448 (minValue!2114 newMap!16))) lt!33457) (apply!75 lt!33443 lt!33457))))

(declare-fun bm!6558 () Bool)

(declare-fun call!6561 () ListLongMap!1401)

(declare-fun call!6560 () ListLongMap!1401)

(assert (=> bm!6558 (= call!6561 call!6560)))

(declare-fun b!74313 () Bool)

(declare-fun e!48557 () ListLongMap!1401)

(assert (=> b!74313 (= e!48557 call!6561)))

(declare-fun b!74314 () Bool)

(declare-fun res!39321 () Bool)

(assert (=> b!74314 (=> (not res!39321) (not e!48565))))

(assert (=> b!74314 (= res!39321 e!48563)))

(declare-fun c!11169 () Bool)

(assert (=> b!74314 (= c!11169 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74315 () Bool)

(declare-fun call!6559 () Bool)

(assert (=> b!74315 (= e!48560 (not call!6559))))

(declare-fun b!74316 () Bool)

(declare-fun e!48566 () ListLongMap!1401)

(assert (=> b!74316 (= e!48566 (+!93 call!6560 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!74317 () Bool)

(assert (=> b!74317 (= e!48566 e!48557)))

(declare-fun c!11170 () Bool)

(assert (=> b!74317 (= c!11170 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun c!11168 () Bool)

(declare-fun bm!6559 () Bool)

(assert (=> bm!6559 (= call!6560 (+!93 (ite c!11168 call!6563 (ite c!11170 call!6564 call!6558)) (ite (or c!11168 c!11170) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!74318 () Bool)

(declare-fun res!39314 () Bool)

(assert (=> b!74318 (=> (not res!39314) (not e!48565))))

(assert (=> b!74318 (= res!39314 e!48556)))

(declare-fun res!39319 () Bool)

(assert (=> b!74318 (=> res!39319 e!48556)))

(declare-fun e!48561 () Bool)

(assert (=> b!74318 (= res!39319 (not e!48561))))

(declare-fun res!39322 () Bool)

(assert (=> b!74318 (=> (not res!39322) (not e!48561))))

(assert (=> b!74318 (= res!39322 (bvslt #b00000000000000000000000000000000 (size!2088 lt!33012)))))

(declare-fun b!74319 () Bool)

(assert (=> b!74319 (= e!48559 (= (apply!75 lt!33441 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!74320 () Bool)

(declare-fun e!48564 () ListLongMap!1401)

(assert (=> b!74320 (= e!48564 call!6558)))

(declare-fun b!74321 () Bool)

(declare-fun e!48558 () Bool)

(assert (=> b!74321 (= e!48560 e!48558)))

(declare-fun res!39318 () Bool)

(assert (=> b!74321 (= res!39318 call!6559)))

(assert (=> b!74321 (=> (not res!39318) (not e!48558))))

(declare-fun bm!6560 () Bool)

(assert (=> bm!6560 (= call!6562 (contains!720 lt!33441 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17467 () Bool)

(assert (=> d!17467 e!48565))

(declare-fun res!39320 () Bool)

(assert (=> d!17467 (=> (not res!39320) (not e!48565))))

(assert (=> d!17467 (= res!39320 (or (bvsge #b00000000000000000000000000000000 (size!2088 lt!33012)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 lt!33012)))))))

(declare-fun lt!33446 () ListLongMap!1401)

(assert (=> d!17467 (= lt!33441 lt!33446)))

(declare-fun lt!33444 () Unit!2076)

(assert (=> d!17467 (= lt!33444 e!48567)))

(declare-fun c!11171 () Bool)

(assert (=> d!17467 (= c!11171 e!48562)))

(declare-fun res!39317 () Bool)

(assert (=> d!17467 (=> (not res!39317) (not e!48562))))

(assert (=> d!17467 (= res!39317 (bvslt #b00000000000000000000000000000000 (size!2088 lt!33012)))))

(assert (=> d!17467 (= lt!33446 e!48566)))

(assert (=> d!17467 (= c!11168 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17467 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17467 (= (getCurrentListMap!414 lt!33012 lt!33004 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33441)))

(declare-fun bm!6561 () Bool)

(assert (=> bm!6561 (= call!6559 (contains!720 lt!33441 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74322 () Bool)

(assert (=> b!74322 (= e!48564 call!6561)))

(declare-fun b!74323 () Bool)

(assert (=> b!74323 (= e!48555 (= (apply!75 lt!33441 (select (arr!1850 lt!33012) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 lt!33004) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74323 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 lt!33004)))))

(assert (=> b!74323 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 lt!33012)))))

(declare-fun b!74324 () Bool)

(assert (=> b!74324 (= e!48558 (= (apply!75 lt!33441 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun b!74325 () Bool)

(assert (=> b!74325 (= e!48561 (validKeyInArray!0 (select (arr!1850 lt!33012) #b00000000000000000000000000000000)))))

(declare-fun b!74326 () Bool)

(declare-fun c!11172 () Bool)

(assert (=> b!74326 (= c!11172 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74326 (= e!48557 e!48564)))

(assert (= (and d!17467 c!11168) b!74316))

(assert (= (and d!17467 (not c!11168)) b!74317))

(assert (= (and b!74317 c!11170) b!74313))

(assert (= (and b!74317 (not c!11170)) b!74326))

(assert (= (and b!74326 c!11172) b!74322))

(assert (= (and b!74326 (not c!11172)) b!74320))

(assert (= (or b!74322 b!74320) bm!6556))

(assert (= (or b!74313 bm!6556) bm!6557))

(assert (= (or b!74313 b!74322) bm!6558))

(assert (= (or b!74316 bm!6557) bm!6555))

(assert (= (or b!74316 bm!6558) bm!6559))

(assert (= (and d!17467 res!39317) b!74306))

(assert (= (and d!17467 c!11171) b!74312))

(assert (= (and d!17467 (not c!11171)) b!74309))

(assert (= (and d!17467 res!39320) b!74318))

(assert (= (and b!74318 res!39322) b!74325))

(assert (= (and b!74318 (not res!39319)) b!74311))

(assert (= (and b!74311 res!39315) b!74323))

(assert (= (and b!74318 res!39314) b!74314))

(assert (= (and b!74314 c!11169) b!74310))

(assert (= (and b!74314 (not c!11169)) b!74308))

(assert (= (and b!74310 res!39316) b!74319))

(assert (= (or b!74310 b!74308) bm!6560))

(assert (= (and b!74314 res!39321) b!74307))

(assert (= (and b!74307 c!11173) b!74321))

(assert (= (and b!74307 (not c!11173)) b!74315))

(assert (= (and b!74321 res!39318) b!74324))

(assert (= (or b!74321 b!74315) bm!6561))

(declare-fun b_lambda!3341 () Bool)

(assert (=> (not b_lambda!3341) (not b!74323)))

(assert (=> b!74323 t!5036))

(declare-fun b_and!4569 () Bool)

(assert (= b_and!4565 (and (=> t!5036 result!2689) b_and!4569)))

(assert (=> b!74323 t!5038))

(declare-fun b_and!4571 () Bool)

(assert (= b_and!4567 (and (=> t!5038 result!2691) b_and!4571)))

(declare-fun m!73393 () Bool)

(assert (=> b!74311 m!73393))

(assert (=> b!74311 m!73393))

(declare-fun m!73395 () Bool)

(assert (=> b!74311 m!73395))

(declare-fun m!73397 () Bool)

(assert (=> b!74312 m!73397))

(declare-fun m!73399 () Bool)

(assert (=> b!74312 m!73399))

(declare-fun m!73401 () Bool)

(assert (=> b!74312 m!73401))

(assert (=> b!74312 m!73393))

(declare-fun m!73403 () Bool)

(assert (=> b!74312 m!73403))

(declare-fun m!73405 () Bool)

(assert (=> b!74312 m!73405))

(declare-fun m!73407 () Bool)

(assert (=> b!74312 m!73407))

(declare-fun m!73409 () Bool)

(assert (=> b!74312 m!73409))

(declare-fun m!73411 () Bool)

(assert (=> b!74312 m!73411))

(declare-fun m!73413 () Bool)

(assert (=> b!74312 m!73413))

(assert (=> b!74312 m!73411))

(assert (=> b!74312 m!73397))

(declare-fun m!73415 () Bool)

(assert (=> b!74312 m!73415))

(declare-fun m!73417 () Bool)

(assert (=> b!74312 m!73417))

(assert (=> b!74312 m!73403))

(declare-fun m!73419 () Bool)

(assert (=> b!74312 m!73419))

(assert (=> b!74312 m!73415))

(declare-fun m!73421 () Bool)

(assert (=> b!74312 m!73421))

(declare-fun m!73423 () Bool)

(assert (=> b!74312 m!73423))

(declare-fun m!73425 () Bool)

(assert (=> b!74312 m!73425))

(declare-fun m!73427 () Bool)

(assert (=> b!74312 m!73427))

(assert (=> b!74306 m!73393))

(assert (=> b!74306 m!73393))

(declare-fun m!73429 () Bool)

(assert (=> b!74306 m!73429))

(declare-fun m!73431 () Bool)

(assert (=> bm!6561 m!73431))

(assert (=> bm!6555 m!73423))

(declare-fun m!73433 () Bool)

(assert (=> bm!6560 m!73433))

(assert (=> d!17467 m!71557))

(declare-fun m!73435 () Bool)

(assert (=> bm!6559 m!73435))

(declare-fun m!73437 () Bool)

(assert (=> b!74316 m!73437))

(declare-fun m!73439 () Bool)

(assert (=> b!74324 m!73439))

(assert (=> b!74325 m!73393))

(assert (=> b!74325 m!73393))

(assert (=> b!74325 m!73429))

(assert (=> b!74323 m!71663))

(assert (=> b!74323 m!73393))

(assert (=> b!74323 m!73393))

(declare-fun m!73441 () Bool)

(assert (=> b!74323 m!73441))

(declare-fun m!73443 () Bool)

(assert (=> b!74323 m!73443))

(assert (=> b!74323 m!71663))

(declare-fun m!73445 () Bool)

(assert (=> b!74323 m!73445))

(assert (=> b!74323 m!73443))

(declare-fun m!73447 () Bool)

(assert (=> b!74319 m!73447))

(assert (=> d!16995 d!17467))

(declare-fun d!17469 () Bool)

(declare-fun e!48568 () Bool)

(assert (=> d!17469 e!48568))

(declare-fun res!39323 () Bool)

(assert (=> d!17469 (=> (not res!39323) (not e!48568))))

(declare-fun lt!33460 () ListLongMap!1401)

(assert (=> d!17469 (= res!39323 (contains!720 lt!33460 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun lt!33461 () List!1474)

(assert (=> d!17469 (= lt!33460 (ListLongMap!1402 lt!33461))))

(declare-fun lt!33459 () Unit!2076)

(declare-fun lt!33458 () Unit!2076)

(assert (=> d!17469 (= lt!33459 lt!33458)))

(assert (=> d!17469 (= (getValueByKey!134 lt!33461 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17469 (= lt!33458 (lemmaContainsTupThenGetReturnValue!51 lt!33461 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17469 (= lt!33461 (insertStrictlySorted!54 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17469 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) lt!33460)))

(declare-fun b!74327 () Bool)

(declare-fun res!39324 () Bool)

(assert (=> b!74327 (=> (not res!39324) (not e!48568))))

(assert (=> b!74327 (= res!39324 (= (getValueByKey!134 (toList!716 lt!33460) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!74328 () Bool)

(assert (=> b!74328 (= e!48568 (contains!721 (toList!716 lt!33460) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(assert (= (and d!17469 res!39323) b!74327))

(assert (= (and b!74327 res!39324) b!74328))

(declare-fun m!73449 () Bool)

(assert (=> d!17469 m!73449))

(declare-fun m!73451 () Bool)

(assert (=> d!17469 m!73451))

(declare-fun m!73453 () Bool)

(assert (=> d!17469 m!73453))

(declare-fun m!73455 () Bool)

(assert (=> d!17469 m!73455))

(declare-fun m!73457 () Bool)

(assert (=> b!74327 m!73457))

(declare-fun m!73459 () Bool)

(assert (=> b!74328 m!73459))

(assert (=> d!16995 d!17469))

(assert (=> d!16995 d!16907))

(declare-fun b!74329 () Bool)

(declare-fun e!48570 () Bool)

(declare-fun call!6565 () Bool)

(assert (=> b!74329 (= e!48570 call!6565)))

(declare-fun b!74330 () Bool)

(declare-fun e!48571 () Bool)

(assert (=> b!74330 (= e!48570 e!48571)))

(declare-fun lt!33463 () (_ BitVec 64))

(assert (=> b!74330 (= lt!33463 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000))))

(declare-fun lt!33462 () Unit!2076)

(assert (=> b!74330 (= lt!33462 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3864 (_2!1072 lt!32783)) lt!33463 #b00000000000000000000000000000000))))

(assert (=> b!74330 (arrayContainsKey!0 (_keys!3864 (_2!1072 lt!32783)) lt!33463 #b00000000000000000000000000000000)))

(declare-fun lt!33464 () Unit!2076)

(assert (=> b!74330 (= lt!33464 lt!33462)))

(declare-fun res!39325 () Bool)

(assert (=> b!74330 (= res!39325 (= (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000) (_keys!3864 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783))) (Found!230 #b00000000000000000000000000000000)))))

(assert (=> b!74330 (=> (not res!39325) (not e!48571))))

(declare-fun d!17471 () Bool)

(declare-fun res!39326 () Bool)

(declare-fun e!48569 () Bool)

(assert (=> d!17471 (=> res!39326 e!48569)))

(assert (=> d!17471 (= res!39326 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))))))

(assert (=> d!17471 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3864 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783))) e!48569)))

(declare-fun b!74331 () Bool)

(assert (=> b!74331 (= e!48569 e!48570)))

(declare-fun c!11174 () Bool)

(assert (=> b!74331 (= c!11174 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000)))))

(declare-fun bm!6562 () Bool)

(assert (=> bm!6562 (= call!6565 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3864 (_2!1072 lt!32783)) (mask!6179 (_2!1072 lt!32783))))))

(declare-fun b!74332 () Bool)

(assert (=> b!74332 (= e!48571 call!6565)))

(assert (= (and d!17471 (not res!39326)) b!74331))

(assert (= (and b!74331 c!11174) b!74330))

(assert (= (and b!74331 (not c!11174)) b!74329))

(assert (= (and b!74330 res!39325) b!74332))

(assert (= (or b!74332 b!74329) bm!6562))

(assert (=> b!74330 m!72861))

(declare-fun m!73461 () Bool)

(assert (=> b!74330 m!73461))

(declare-fun m!73463 () Bool)

(assert (=> b!74330 m!73463))

(assert (=> b!74330 m!72861))

(declare-fun m!73465 () Bool)

(assert (=> b!74330 m!73465))

(assert (=> b!74331 m!72861))

(assert (=> b!74331 m!72861))

(assert (=> b!74331 m!72897))

(declare-fun m!73467 () Bool)

(assert (=> bm!6562 m!73467))

(assert (=> b!73669 d!17471))

(declare-fun d!17473 () Bool)

(assert (=> d!17473 (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!33465 () Unit!2076)

(assert (=> d!17473 (= lt!33465 (choose!420 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!48572 () Bool)

(assert (=> d!17473 e!48572))

(declare-fun res!39327 () Bool)

(assert (=> d!17473 (=> (not res!39327) (not e!48572))))

(assert (=> d!17473 (= res!39327 (isStrictlySorted!279 (toList!716 lt!32666)))))

(assert (=> d!17473 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!33465)))

(declare-fun b!74333 () Bool)

(assert (=> b!74333 (= e!48572 (containsKey!137 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17473 res!39327) b!74333))

(assert (=> d!17473 m!71385))

(assert (=> d!17473 m!71753))

(assert (=> d!17473 m!71753))

(assert (=> d!17473 m!71755))

(assert (=> d!17473 m!71385))

(declare-fun m!73469 () Bool)

(assert (=> d!17473 m!73469))

(assert (=> d!17473 m!73063))

(assert (=> b!74333 m!71385))

(assert (=> b!74333 m!71749))

(assert (=> b!73387 d!17473))

(declare-fun d!17475 () Bool)

(assert (=> d!17475 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3209 () Bool)

(assert (= bs!3209 d!17475))

(assert (=> bs!3209 m!71753))

(declare-fun m!73471 () Bool)

(assert (=> bs!3209 m!73471))

(assert (=> b!73387 d!17475))

(declare-fun b!74335 () Bool)

(declare-fun e!48573 () Option!140)

(declare-fun e!48574 () Option!140)

(assert (=> b!74335 (= e!48573 e!48574)))

(declare-fun c!11176 () Bool)

(assert (=> b!74335 (= c!11176 (and ((_ is Cons!1470) (toList!716 lt!32666)) (not (= (_1!1071 (h!2057 (toList!716 lt!32666))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!74334 () Bool)

(assert (=> b!74334 (= e!48573 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32666)))))))

(declare-fun d!17477 () Bool)

(declare-fun c!11175 () Bool)

(assert (=> d!17477 (= c!11175 (and ((_ is Cons!1470) (toList!716 lt!32666)) (= (_1!1071 (h!2057 (toList!716 lt!32666))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17477 (= (getValueByKey!134 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48573)))

(declare-fun b!74336 () Bool)

(assert (=> b!74336 (= e!48574 (getValueByKey!134 (t!5023 (toList!716 lt!32666)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!74337 () Bool)

(assert (=> b!74337 (= e!48574 None!138)))

(assert (= (and d!17477 c!11175) b!74334))

(assert (= (and d!17477 (not c!11175)) b!74335))

(assert (= (and b!74335 c!11176) b!74336))

(assert (= (and b!74335 (not c!11176)) b!74337))

(assert (=> b!74336 m!71385))

(declare-fun m!73473 () Bool)

(assert (=> b!74336 m!73473))

(assert (=> b!73387 d!17477))

(assert (=> d!17009 d!17149))

(declare-fun b!74339 () Bool)

(declare-fun e!48575 () Option!140)

(declare-fun e!48576 () Option!140)

(assert (=> b!74339 (= e!48575 e!48576)))

(declare-fun c!11178 () Bool)

(assert (=> b!74339 (= c!11178 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32594))) (not (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32594)))) (_1!1071 lt!32485)))))))

(declare-fun b!74338 () Bool)

(assert (=> b!74338 (= e!48575 (Some!139 (_2!1071 (h!2057 (t!5023 (toList!716 lt!32594))))))))

(declare-fun d!17479 () Bool)

(declare-fun c!11177 () Bool)

(assert (=> d!17479 (= c!11177 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32594))) (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32594)))) (_1!1071 lt!32485))))))

(assert (=> d!17479 (= (getValueByKey!134 (t!5023 (toList!716 lt!32594)) (_1!1071 lt!32485)) e!48575)))

(declare-fun b!74340 () Bool)

(assert (=> b!74340 (= e!48576 (getValueByKey!134 (t!5023 (t!5023 (toList!716 lt!32594))) (_1!1071 lt!32485)))))

(declare-fun b!74341 () Bool)

(assert (=> b!74341 (= e!48576 None!138)))

(assert (= (and d!17479 c!11177) b!74338))

(assert (= (and d!17479 (not c!11177)) b!74339))

(assert (= (and b!74339 c!11178) b!74340))

(assert (= (and b!74339 (not c!11178)) b!74341))

(declare-fun m!73475 () Bool)

(assert (=> b!74340 m!73475))

(assert (=> b!73676 d!17479))

(declare-fun d!17481 () Bool)

(assert (=> d!17481 (isDefined!86 (getValueByKey!134 (toList!716 lt!32583) (_1!1071 lt!32485)))))

(declare-fun lt!33466 () Unit!2076)

(assert (=> d!17481 (= lt!33466 (choose!420 (toList!716 lt!32583) (_1!1071 lt!32485)))))

(declare-fun e!48577 () Bool)

(assert (=> d!17481 e!48577))

(declare-fun res!39328 () Bool)

(assert (=> d!17481 (=> (not res!39328) (not e!48577))))

(assert (=> d!17481 (= res!39328 (isStrictlySorted!279 (toList!716 lt!32583)))))

(assert (=> d!17481 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32583) (_1!1071 lt!32485)) lt!33466)))

(declare-fun b!74342 () Bool)

(assert (=> b!74342 (= e!48577 (containsKey!137 (toList!716 lt!32583) (_1!1071 lt!32485)))))

(assert (= (and d!17481 res!39328) b!74342))

(assert (=> d!17481 m!71331))

(assert (=> d!17481 m!71331))

(assert (=> d!17481 m!72279))

(declare-fun m!73477 () Bool)

(assert (=> d!17481 m!73477))

(declare-fun m!73479 () Bool)

(assert (=> d!17481 m!73479))

(assert (=> b!74342 m!72275))

(assert (=> b!73649 d!17481))

(declare-fun d!17483 () Bool)

(assert (=> d!17483 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32583) (_1!1071 lt!32485))) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32583) (_1!1071 lt!32485)))))))

(declare-fun bs!3210 () Bool)

(assert (= bs!3210 d!17483))

(assert (=> bs!3210 m!71331))

(declare-fun m!73481 () Bool)

(assert (=> bs!3210 m!73481))

(assert (=> b!73649 d!17483))

(assert (=> b!73649 d!17017))

(assert (=> d!16913 d!17149))

(declare-fun d!17485 () Bool)

(assert (=> d!17485 (isDefined!86 (getValueByKey!134 (toList!716 lt!32590) (_1!1071 lt!32492)))))

(declare-fun lt!33467 () Unit!2076)

(assert (=> d!17485 (= lt!33467 (choose!420 (toList!716 lt!32590) (_1!1071 lt!32492)))))

(declare-fun e!48578 () Bool)

(assert (=> d!17485 e!48578))

(declare-fun res!39329 () Bool)

(assert (=> d!17485 (=> (not res!39329) (not e!48578))))

(assert (=> d!17485 (= res!39329 (isStrictlySorted!279 (toList!716 lt!32590)))))

(assert (=> d!17485 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32590) (_1!1071 lt!32492)) lt!33467)))

(declare-fun b!74343 () Bool)

(assert (=> b!74343 (= e!48578 (containsKey!137 (toList!716 lt!32590) (_1!1071 lt!32492)))))

(assert (= (and d!17485 res!39329) b!74343))

(assert (=> d!17485 m!71353))

(assert (=> d!17485 m!71353))

(assert (=> d!17485 m!72333))

(declare-fun m!73483 () Bool)

(assert (=> d!17485 m!73483))

(declare-fun m!73485 () Bool)

(assert (=> d!17485 m!73485))

(assert (=> b!74343 m!72329))

(assert (=> b!73687 d!17485))

(declare-fun d!17487 () Bool)

(assert (=> d!17487 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32590) (_1!1071 lt!32492))) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32590) (_1!1071 lt!32492)))))))

(declare-fun bs!3211 () Bool)

(assert (= bs!3211 d!17487))

(assert (=> bs!3211 m!71353))

(declare-fun m!73487 () Bool)

(assert (=> bs!3211 m!73487))

(assert (=> b!73687 d!17487))

(assert (=> b!73687 d!17005))

(declare-fun d!17489 () Bool)

(declare-fun e!48579 () Bool)

(assert (=> d!17489 e!48579))

(declare-fun res!39330 () Bool)

(assert (=> d!17489 (=> res!39330 e!48579)))

(declare-fun lt!33469 () Bool)

(assert (=> d!17489 (= res!39330 (not lt!33469))))

(declare-fun lt!33471 () Bool)

(assert (=> d!17489 (= lt!33469 lt!33471)))

(declare-fun lt!33470 () Unit!2076)

(declare-fun e!48580 () Unit!2076)

(assert (=> d!17489 (= lt!33470 e!48580)))

(declare-fun c!11179 () Bool)

(assert (=> d!17489 (= c!11179 lt!33471)))

(assert (=> d!17489 (= lt!33471 (containsKey!137 (toList!716 lt!33126) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17489 (= (contains!720 lt!33126 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33469)))

(declare-fun b!74344 () Bool)

(declare-fun lt!33468 () Unit!2076)

(assert (=> b!74344 (= e!48580 lt!33468)))

(assert (=> b!74344 (= lt!33468 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33126) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> b!74344 (isDefined!86 (getValueByKey!134 (toList!716 lt!33126) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!74345 () Bool)

(declare-fun Unit!2131 () Unit!2076)

(assert (=> b!74345 (= e!48580 Unit!2131)))

(declare-fun b!74346 () Bool)

(assert (=> b!74346 (= e!48579 (isDefined!86 (getValueByKey!134 (toList!716 lt!33126) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (= (and d!17489 c!11179) b!74344))

(assert (= (and d!17489 (not c!11179)) b!74345))

(assert (= (and d!17489 (not res!39330)) b!74346))

(declare-fun m!73489 () Bool)

(assert (=> d!17489 m!73489))

(declare-fun m!73491 () Bool)

(assert (=> b!74344 m!73491))

(assert (=> b!74344 m!72269))

(assert (=> b!74344 m!72269))

(declare-fun m!73493 () Bool)

(assert (=> b!74344 m!73493))

(assert (=> b!74346 m!72269))

(assert (=> b!74346 m!72269))

(assert (=> b!74346 m!73493))

(assert (=> d!17057 d!17489))

(declare-fun b!74348 () Bool)

(declare-fun e!48581 () Option!140)

(declare-fun e!48582 () Option!140)

(assert (=> b!74348 (= e!48581 e!48582)))

(declare-fun c!11181 () Bool)

(assert (=> b!74348 (= c!11181 (and ((_ is Cons!1470) lt!33127) (not (= (_1!1071 (h!2057 lt!33127)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun b!74347 () Bool)

(assert (=> b!74347 (= e!48581 (Some!139 (_2!1071 (h!2057 lt!33127))))))

(declare-fun c!11180 () Bool)

(declare-fun d!17491 () Bool)

(assert (=> d!17491 (= c!11180 (and ((_ is Cons!1470) lt!33127) (= (_1!1071 (h!2057 lt!33127)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17491 (= (getValueByKey!134 lt!33127 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) e!48581)))

(declare-fun b!74349 () Bool)

(assert (=> b!74349 (= e!48582 (getValueByKey!134 (t!5023 lt!33127) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!74350 () Bool)

(assert (=> b!74350 (= e!48582 None!138)))

(assert (= (and d!17491 c!11180) b!74347))

(assert (= (and d!17491 (not c!11180)) b!74348))

(assert (= (and b!74348 c!11181) b!74349))

(assert (= (and b!74348 (not c!11181)) b!74350))

(declare-fun m!73495 () Bool)

(assert (=> b!74349 m!73495))

(assert (=> d!17057 d!17491))

(declare-fun d!17493 () Bool)

(assert (=> d!17493 (= (getValueByKey!134 lt!33127 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun lt!33472 () Unit!2076)

(assert (=> d!17493 (= lt!33472 (choose!419 lt!33127 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun e!48583 () Bool)

(assert (=> d!17493 e!48583))

(declare-fun res!39331 () Bool)

(assert (=> d!17493 (=> (not res!39331) (not e!48583))))

(assert (=> d!17493 (= res!39331 (isStrictlySorted!279 lt!33127))))

(assert (=> d!17493 (= (lemmaContainsTupThenGetReturnValue!51 lt!33127 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33472)))

(declare-fun b!74351 () Bool)

(declare-fun res!39332 () Bool)

(assert (=> b!74351 (=> (not res!39332) (not e!48583))))

(assert (=> b!74351 (= res!39332 (containsKey!137 lt!33127 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!74352 () Bool)

(assert (=> b!74352 (= e!48583 (contains!721 lt!33127 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (= (and d!17493 res!39331) b!74351))

(assert (= (and b!74351 res!39332) b!74352))

(assert (=> d!17493 m!72263))

(declare-fun m!73497 () Bool)

(assert (=> d!17493 m!73497))

(declare-fun m!73499 () Bool)

(assert (=> d!17493 m!73499))

(declare-fun m!73501 () Bool)

(assert (=> b!74351 m!73501))

(declare-fun m!73503 () Bool)

(assert (=> b!74352 m!73503))

(assert (=> d!17057 d!17493))

(declare-fun e!48588 () List!1474)

(declare-fun b!74353 () Bool)

(assert (=> b!74353 (= e!48588 (insertStrictlySorted!54 (t!5023 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!74354 () Bool)

(declare-fun c!11183 () Bool)

(declare-fun c!11182 () Bool)

(assert (=> b!74354 (= e!48588 (ite c!11183 (t!5023 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (ite c!11182 (Cons!1470 (h!2057 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (t!5023 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) Nil!1471)))))

(declare-fun bm!6563 () Bool)

(declare-fun call!6567 () List!1474)

(declare-fun call!6568 () List!1474)

(assert (=> bm!6563 (= call!6567 call!6568)))

(declare-fun e!48587 () Bool)

(declare-fun b!74355 () Bool)

(declare-fun lt!33473 () List!1474)

(assert (=> b!74355 (= e!48587 (contains!721 lt!33473 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!74356 () Bool)

(declare-fun e!48584 () List!1474)

(assert (=> b!74356 (= e!48584 call!6567)))

(declare-fun b!74357 () Bool)

(declare-fun e!48585 () List!1474)

(declare-fun e!48586 () List!1474)

(assert (=> b!74357 (= e!48585 e!48586)))

(assert (=> b!74357 (= c!11183 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun d!17495 () Bool)

(assert (=> d!17495 e!48587))

(declare-fun res!39333 () Bool)

(assert (=> d!17495 (=> (not res!39333) (not e!48587))))

(assert (=> d!17495 (= res!39333 (isStrictlySorted!279 lt!33473))))

(assert (=> d!17495 (= lt!33473 e!48585)))

(declare-fun c!11184 () Bool)

(assert (=> d!17495 (= c!11184 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (bvslt (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17495 (isStrictlySorted!279 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17495 (= (insertStrictlySorted!54 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33473)))

(declare-fun bm!6564 () Bool)

(declare-fun call!6566 () List!1474)

(assert (=> bm!6564 (= call!6566 ($colon$colon!65 e!48588 (ite c!11184 (h!2057 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun c!11185 () Bool)

(assert (=> bm!6564 (= c!11185 c!11184)))

(declare-fun b!74358 () Bool)

(assert (=> b!74358 (= e!48586 call!6568)))

(declare-fun b!74359 () Bool)

(assert (=> b!74359 (= e!48584 call!6567)))

(declare-fun b!74360 () Bool)

(assert (=> b!74360 (= c!11182 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (bvsgt (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> b!74360 (= e!48586 e!48584)))

(declare-fun b!74361 () Bool)

(assert (=> b!74361 (= e!48585 call!6566)))

(declare-fun bm!6565 () Bool)

(assert (=> bm!6565 (= call!6568 call!6566)))

(declare-fun b!74362 () Bool)

(declare-fun res!39334 () Bool)

(assert (=> b!74362 (=> (not res!39334) (not e!48587))))

(assert (=> b!74362 (= res!39334 (containsKey!137 lt!33473 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (= (and d!17495 c!11184) b!74361))

(assert (= (and d!17495 (not c!11184)) b!74357))

(assert (= (and b!74357 c!11183) b!74358))

(assert (= (and b!74357 (not c!11183)) b!74360))

(assert (= (and b!74360 c!11182) b!74356))

(assert (= (and b!74360 (not c!11182)) b!74359))

(assert (= (or b!74356 b!74359) bm!6563))

(assert (= (or b!74358 bm!6563) bm!6565))

(assert (= (or b!74361 bm!6565) bm!6564))

(assert (= (and bm!6564 c!11185) b!74353))

(assert (= (and bm!6564 (not c!11185)) b!74354))

(assert (= (and d!17495 res!39333) b!74362))

(assert (= (and b!74362 res!39334) b!74355))

(declare-fun m!73505 () Bool)

(assert (=> b!74353 m!73505))

(declare-fun m!73507 () Bool)

(assert (=> b!74355 m!73507))

(declare-fun m!73509 () Bool)

(assert (=> d!17495 m!73509))

(declare-fun m!73511 () Bool)

(assert (=> d!17495 m!73511))

(declare-fun m!73513 () Bool)

(assert (=> bm!6564 m!73513))

(declare-fun m!73515 () Bool)

(assert (=> b!74362 m!73515))

(assert (=> d!17057 d!17495))

(assert (=> d!16991 d!16965))

(declare-fun d!17497 () Bool)

(assert (=> d!17497 (= (apply!75 (+!93 lt!32679 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32678) (apply!75 lt!32679 lt!32678))))

(assert (=> d!17497 true))

(declare-fun _$34!810 () Unit!2076)

(assert (=> d!17497 (= (choose!426 lt!32679 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32678) _$34!810)))

(declare-fun bs!3212 () Bool)

(assert (= bs!3212 d!17497))

(assert (=> bs!3212 m!71413))

(assert (=> bs!3212 m!71413))

(assert (=> bs!3212 m!71429))

(assert (=> bs!3212 m!71417))

(assert (=> d!16991 d!17497))

(assert (=> d!16991 d!16971))

(declare-fun d!17499 () Bool)

(declare-fun e!48589 () Bool)

(assert (=> d!17499 e!48589))

(declare-fun res!39335 () Bool)

(assert (=> d!17499 (=> res!39335 e!48589)))

(declare-fun lt!33475 () Bool)

(assert (=> d!17499 (= res!39335 (not lt!33475))))

(declare-fun lt!33477 () Bool)

(assert (=> d!17499 (= lt!33475 lt!33477)))

(declare-fun lt!33476 () Unit!2076)

(declare-fun e!48590 () Unit!2076)

(assert (=> d!17499 (= lt!33476 e!48590)))

(declare-fun c!11186 () Bool)

(assert (=> d!17499 (= c!11186 lt!33477)))

(assert (=> d!17499 (= lt!33477 (containsKey!137 (toList!716 lt!32679) lt!32678))))

(assert (=> d!17499 (= (contains!720 lt!32679 lt!32678) lt!33475)))

(declare-fun b!74364 () Bool)

(declare-fun lt!33474 () Unit!2076)

(assert (=> b!74364 (= e!48590 lt!33474)))

(assert (=> b!74364 (= lt!33474 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32679) lt!32678))))

(assert (=> b!74364 (isDefined!86 (getValueByKey!134 (toList!716 lt!32679) lt!32678))))

(declare-fun b!74365 () Bool)

(declare-fun Unit!2132 () Unit!2076)

(assert (=> b!74365 (= e!48590 Unit!2132)))

(declare-fun b!74366 () Bool)

(assert (=> b!74366 (= e!48589 (isDefined!86 (getValueByKey!134 (toList!716 lt!32679) lt!32678)))))

(assert (= (and d!17499 c!11186) b!74364))

(assert (= (and d!17499 (not c!11186)) b!74365))

(assert (= (and d!17499 (not res!39335)) b!74366))

(declare-fun m!73517 () Bool)

(assert (=> d!17499 m!73517))

(declare-fun m!73519 () Bool)

(assert (=> b!74364 m!73519))

(assert (=> b!74364 m!71891))

(assert (=> b!74364 m!71891))

(declare-fun m!73521 () Bool)

(assert (=> b!74364 m!73521))

(assert (=> b!74366 m!71891))

(assert (=> b!74366 m!71891))

(assert (=> b!74366 m!73521))

(assert (=> d!16991 d!17499))

(assert (=> d!16991 d!16977))

(declare-fun d!17501 () Bool)

(declare-fun lt!33478 () Bool)

(assert (=> d!17501 (= lt!33478 (select (content!78 lt!32580) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun e!48592 () Bool)

(assert (=> d!17501 (= lt!33478 e!48592)))

(declare-fun res!39336 () Bool)

(assert (=> d!17501 (=> (not res!39336) (not e!48592))))

(assert (=> d!17501 (= res!39336 ((_ is Cons!1470) lt!32580))))

(assert (=> d!17501 (= (contains!721 lt!32580 (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))) lt!33478)))

(declare-fun b!74367 () Bool)

(declare-fun e!48591 () Bool)

(assert (=> b!74367 (= e!48592 e!48591)))

(declare-fun res!39337 () Bool)

(assert (=> b!74367 (=> res!39337 e!48591)))

(assert (=> b!74367 (= res!39337 (= (h!2057 lt!32580) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun b!74368 () Bool)

(assert (=> b!74368 (= e!48591 (contains!721 (t!5023 lt!32580) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(assert (= (and d!17501 res!39336) b!74367))

(assert (= (and b!74367 (not res!39337)) b!74368))

(declare-fun m!73523 () Bool)

(assert (=> d!17501 m!73523))

(declare-fun m!73525 () Bool)

(assert (=> d!17501 m!73525))

(declare-fun m!73527 () Bool)

(assert (=> b!74368 m!73527))

(assert (=> b!73426 d!17501))

(declare-fun d!17503 () Bool)

(declare-fun res!39338 () Bool)

(declare-fun e!48593 () Bool)

(assert (=> d!17503 (=> (not res!39338) (not e!48593))))

(assert (=> d!17503 (= res!39338 (simpleValid!51 (_2!1072 lt!33009)))))

(assert (=> d!17503 (= (valid!307 (_2!1072 lt!33009)) e!48593)))

(declare-fun b!74369 () Bool)

(declare-fun res!39339 () Bool)

(assert (=> b!74369 (=> (not res!39339) (not e!48593))))

(assert (=> b!74369 (= res!39339 (= (arrayCountValidKeys!0 (_keys!3864 (_2!1072 lt!33009)) #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!33009)))) (_size!396 (_2!1072 lt!33009))))))

(declare-fun b!74370 () Bool)

(declare-fun res!39340 () Bool)

(assert (=> b!74370 (=> (not res!39340) (not e!48593))))

(assert (=> b!74370 (= res!39340 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3864 (_2!1072 lt!33009)) (mask!6179 (_2!1072 lt!33009))))))

(declare-fun b!74371 () Bool)

(assert (=> b!74371 (= e!48593 (arrayNoDuplicates!0 (_keys!3864 (_2!1072 lt!33009)) #b00000000000000000000000000000000 Nil!1470))))

(assert (= (and d!17503 res!39338) b!74369))

(assert (= (and b!74369 res!39339) b!74370))

(assert (= (and b!74370 res!39340) b!74371))

(declare-fun m!73529 () Bool)

(assert (=> d!17503 m!73529))

(declare-fun m!73531 () Bool)

(assert (=> b!74369 m!73531))

(declare-fun m!73533 () Bool)

(assert (=> b!74370 m!73533))

(declare-fun m!73535 () Bool)

(assert (=> b!74371 m!73535))

(assert (=> b!73515 d!17503))

(declare-fun d!17505 () Bool)

(declare-fun e!48594 () Bool)

(assert (=> d!17505 e!48594))

(declare-fun res!39341 () Bool)

(assert (=> d!17505 (=> (not res!39341) (not e!48594))))

(declare-fun lt!33481 () ListLongMap!1401)

(assert (=> d!17505 (= res!39341 (contains!720 lt!33481 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(declare-fun lt!33482 () List!1474)

(assert (=> d!17505 (= lt!33481 (ListLongMap!1402 lt!33482))))

(declare-fun lt!33480 () Unit!2076)

(declare-fun lt!33479 () Unit!2076)

(assert (=> d!17505 (= lt!33480 lt!33479)))

(assert (=> d!17505 (= (getValueByKey!134 lt!33482 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(assert (=> d!17505 (= lt!33479 (lemmaContainsTupThenGetReturnValue!51 lt!33482 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(assert (=> d!17505 (= lt!33482 (insertStrictlySorted!54 (toList!716 call!6462) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(assert (=> d!17505 (= (+!93 call!6462 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) lt!33481)))

(declare-fun b!74372 () Bool)

(declare-fun res!39342 () Bool)

(assert (=> b!74372 (=> (not res!39342) (not e!48594))))

(assert (=> b!74372 (= res!39342 (= (getValueByKey!134 (toList!716 lt!33481) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))))

(declare-fun b!74373 () Bool)

(assert (=> b!74373 (= e!48594 (contains!721 (toList!716 lt!33481) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))

(assert (= (and d!17505 res!39341) b!74372))

(assert (= (and b!74372 res!39342) b!74373))

(declare-fun m!73537 () Bool)

(assert (=> d!17505 m!73537))

(declare-fun m!73539 () Bool)

(assert (=> d!17505 m!73539))

(declare-fun m!73541 () Bool)

(assert (=> d!17505 m!73541))

(declare-fun m!73543 () Bool)

(assert (=> d!17505 m!73543))

(declare-fun m!73545 () Bool)

(assert (=> b!74372 m!73545))

(declare-fun m!73547 () Bool)

(assert (=> b!74373 m!73547))

(assert (=> b!73447 d!17505))

(declare-fun d!17507 () Bool)

(declare-fun e!48595 () Bool)

(assert (=> d!17507 e!48595))

(declare-fun res!39343 () Bool)

(assert (=> d!17507 (=> res!39343 e!48595)))

(declare-fun lt!33484 () Bool)

(assert (=> d!17507 (= res!39343 (not lt!33484))))

(declare-fun lt!33486 () Bool)

(assert (=> d!17507 (= lt!33484 lt!33486)))

(declare-fun lt!33485 () Unit!2076)

(declare-fun e!48596 () Unit!2076)

(assert (=> d!17507 (= lt!33485 e!48596)))

(declare-fun c!11187 () Bool)

(assert (=> d!17507 (= c!11187 lt!33486)))

(assert (=> d!17507 (= lt!33486 (containsKey!137 (toList!716 lt!33035) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17507 (= (contains!720 lt!33035 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33484)))

(declare-fun b!74374 () Bool)

(declare-fun lt!33483 () Unit!2076)

(assert (=> b!74374 (= e!48596 lt!33483)))

(assert (=> b!74374 (= lt!33483 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33035) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74374 (isDefined!86 (getValueByKey!134 (toList!716 lt!33035) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74375 () Bool)

(declare-fun Unit!2133 () Unit!2076)

(assert (=> b!74375 (= e!48596 Unit!2133)))

(declare-fun b!74376 () Bool)

(assert (=> b!74376 (= e!48595 (isDefined!86 (getValueByKey!134 (toList!716 lt!33035) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17507 c!11187) b!74374))

(assert (= (and d!17507 (not c!11187)) b!74375))

(assert (= (and d!17507 (not res!39343)) b!74376))

(declare-fun m!73549 () Bool)

(assert (=> d!17507 m!73549))

(declare-fun m!73551 () Bool)

(assert (=> b!74374 m!73551))

(declare-fun m!73553 () Bool)

(assert (=> b!74374 m!73553))

(assert (=> b!74374 m!73553))

(declare-fun m!73555 () Bool)

(assert (=> b!74374 m!73555))

(assert (=> b!74376 m!73553))

(assert (=> b!74376 m!73553))

(assert (=> b!74376 m!73555))

(assert (=> bm!6482 d!17507))

(assert (=> d!17021 d!16893))

(declare-fun d!17509 () Bool)

(declare-fun e!48599 () Bool)

(assert (=> d!17509 e!48599))

(declare-fun res!39349 () Bool)

(assert (=> d!17509 (=> (not res!39349) (not e!48599))))

(declare-fun lt!33489 () SeekEntryResult!230)

(assert (=> d!17509 (= res!39349 ((_ is Found!230) lt!33489))))

(assert (=> d!17509 (= lt!33489 (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(assert (=> d!17509 true))

(declare-fun _$33!60 () Unit!2076)

(assert (=> d!17509 (= (choose!428 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)) _$33!60)))

(declare-fun b!74381 () Bool)

(declare-fun res!39348 () Bool)

(assert (=> b!74381 (=> (not res!39348) (not e!48599))))

(assert (=> b!74381 (= res!39348 (inRange!0 (index!3052 lt!33489) (mask!6179 newMap!16)))))

(declare-fun b!74382 () Bool)

(assert (=> b!74382 (= e!48599 (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!33489)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (= (and d!17509 res!39349) b!74381))

(assert (= (and b!74381 res!39348) b!74382))

(assert (=> d!17509 m!71143))

(assert (=> d!17509 m!71499))

(declare-fun m!73557 () Bool)

(assert (=> b!74381 m!73557))

(declare-fun m!73559 () Bool)

(assert (=> b!74382 m!73559))

(assert (=> d!17021 d!17509))

(assert (=> d!17021 d!17149))

(declare-fun d!17511 () Bool)

(declare-fun e!48600 () Bool)

(assert (=> d!17511 e!48600))

(declare-fun res!39350 () Bool)

(assert (=> d!17511 (=> res!39350 e!48600)))

(declare-fun lt!33491 () Bool)

(assert (=> d!17511 (= res!39350 (not lt!33491))))

(declare-fun lt!33493 () Bool)

(assert (=> d!17511 (= lt!33491 lt!33493)))

(declare-fun lt!33492 () Unit!2076)

(declare-fun e!48601 () Unit!2076)

(assert (=> d!17511 (= lt!33492 e!48601)))

(declare-fun c!11188 () Bool)

(assert (=> d!17511 (= c!11188 lt!33493)))

(assert (=> d!17511 (= lt!33493 (containsKey!137 (toList!716 lt!32892) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17511 (= (contains!720 lt!32892 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33491)))

(declare-fun b!74383 () Bool)

(declare-fun lt!33490 () Unit!2076)

(assert (=> b!74383 (= e!48601 lt!33490)))

(assert (=> b!74383 (= lt!33490 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32892) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74383 (isDefined!86 (getValueByKey!134 (toList!716 lt!32892) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74384 () Bool)

(declare-fun Unit!2134 () Unit!2076)

(assert (=> b!74384 (= e!48601 Unit!2134)))

(declare-fun b!74385 () Bool)

(assert (=> b!74385 (= e!48600 (isDefined!86 (getValueByKey!134 (toList!716 lt!32892) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17511 c!11188) b!74383))

(assert (= (and d!17511 (not c!11188)) b!74384))

(assert (= (and d!17511 (not res!39350)) b!74385))

(declare-fun m!73561 () Bool)

(assert (=> d!17511 m!73561))

(declare-fun m!73563 () Bool)

(assert (=> b!74383 m!73563))

(declare-fun m!73565 () Bool)

(assert (=> b!74383 m!73565))

(assert (=> b!74383 m!73565))

(declare-fun m!73567 () Bool)

(assert (=> b!74383 m!73567))

(assert (=> b!74385 m!73565))

(assert (=> b!74385 m!73565))

(assert (=> b!74385 m!73567))

(assert (=> bm!6463 d!17511))

(assert (=> d!17051 d!17049))

(assert (=> d!17051 d!17053))

(assert (=> d!17051 d!17057))

(assert (=> d!17051 d!17055))

(declare-fun d!17513 () Bool)

(declare-fun res!39351 () Bool)

(declare-fun e!48602 () Bool)

(assert (=> d!17513 (=> res!39351 e!48602)))

(assert (=> d!17513 (= res!39351 (and ((_ is Cons!1470) (toList!716 lt!32594)) (= (_1!1071 (h!2057 (toList!716 lt!32594))) (_1!1071 lt!32485))))))

(assert (=> d!17513 (= (containsKey!137 (toList!716 lt!32594) (_1!1071 lt!32485)) e!48602)))

(declare-fun b!74386 () Bool)

(declare-fun e!48603 () Bool)

(assert (=> b!74386 (= e!48602 e!48603)))

(declare-fun res!39352 () Bool)

(assert (=> b!74386 (=> (not res!39352) (not e!48603))))

(assert (=> b!74386 (= res!39352 (and (or (not ((_ is Cons!1470) (toList!716 lt!32594))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32594))) (_1!1071 lt!32485))) ((_ is Cons!1470) (toList!716 lt!32594)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32594))) (_1!1071 lt!32485))))))

(declare-fun b!74387 () Bool)

(assert (=> b!74387 (= e!48603 (containsKey!137 (t!5023 (toList!716 lt!32594)) (_1!1071 lt!32485)))))

(assert (= (and d!17513 (not res!39351)) b!74386))

(assert (= (and b!74386 res!39352) b!74387))

(declare-fun m!73569 () Bool)

(assert (=> b!74387 m!73569))

(assert (=> d!16899 d!17513))

(declare-fun d!17515 () Bool)

(declare-fun lt!33494 () Bool)

(assert (=> d!17515 (= lt!33494 (select (content!78 (t!5023 (toList!716 lt!32579))) lt!32492))))

(declare-fun e!48605 () Bool)

(assert (=> d!17515 (= lt!33494 e!48605)))

(declare-fun res!39353 () Bool)

(assert (=> d!17515 (=> (not res!39353) (not e!48605))))

(assert (=> d!17515 (= res!39353 ((_ is Cons!1470) (t!5023 (toList!716 lt!32579))))))

(assert (=> d!17515 (= (contains!721 (t!5023 (toList!716 lt!32579)) lt!32492) lt!33494)))

(declare-fun b!74388 () Bool)

(declare-fun e!48604 () Bool)

(assert (=> b!74388 (= e!48605 e!48604)))

(declare-fun res!39354 () Bool)

(assert (=> b!74388 (=> res!39354 e!48604)))

(assert (=> b!74388 (= res!39354 (= (h!2057 (t!5023 (toList!716 lt!32579))) lt!32492))))

(declare-fun b!74389 () Bool)

(assert (=> b!74389 (= e!48604 (contains!721 (t!5023 (t!5023 (toList!716 lt!32579))) lt!32492))))

(assert (= (and d!17515 res!39353) b!74388))

(assert (= (and b!74388 (not res!39354)) b!74389))

(declare-fun m!73571 () Bool)

(assert (=> d!17515 m!73571))

(declare-fun m!73573 () Bool)

(assert (=> d!17515 m!73573))

(declare-fun m!73575 () Bool)

(assert (=> b!74389 m!73575))

(assert (=> b!73332 d!17515))

(declare-fun d!17517 () Bool)

(assert (=> d!17517 (= (apply!75 lt!32821 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1153 (getValueByKey!134 (toList!716 lt!32821) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3213 () Bool)

(assert (= bs!3213 d!17517))

(declare-fun m!73577 () Bool)

(assert (=> bs!3213 m!73577))

(assert (=> bs!3213 m!73577))

(declare-fun m!73579 () Bool)

(assert (=> bs!3213 m!73579))

(assert (=> b!73346 d!17517))

(declare-fun d!17519 () Bool)

(declare-fun res!39355 () Bool)

(declare-fun e!48606 () Bool)

(assert (=> d!17519 (=> res!39355 e!48606)))

(assert (=> d!17519 (= res!39355 (and ((_ is Cons!1470) (toList!716 call!6407)) (= (_1!1071 (h!2057 (toList!716 call!6407))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (=> d!17519 (= (containsKey!137 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) e!48606)))

(declare-fun b!74390 () Bool)

(declare-fun e!48607 () Bool)

(assert (=> b!74390 (= e!48606 e!48607)))

(declare-fun res!39356 () Bool)

(assert (=> b!74390 (=> (not res!39356) (not e!48607))))

(assert (=> b!74390 (= res!39356 (and (or (not ((_ is Cons!1470) (toList!716 call!6407))) (bvsle (_1!1071 (h!2057 (toList!716 call!6407))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))) ((_ is Cons!1470) (toList!716 call!6407)) (bvslt (_1!1071 (h!2057 (toList!716 call!6407))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(declare-fun b!74391 () Bool)

(assert (=> b!74391 (= e!48607 (containsKey!137 (t!5023 (toList!716 call!6407)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (= (and d!17519 (not res!39355)) b!74390))

(assert (= (and b!74390 res!39356) b!74391))

(assert (=> b!74391 m!71143))

(declare-fun m!73581 () Bool)

(assert (=> b!74391 m!73581))

(assert (=> d!17011 d!17519))

(declare-fun lt!33495 () Bool)

(declare-fun d!17521 () Bool)

(assert (=> d!17521 (= lt!33495 (select (content!78 (toList!716 lt!33067)) (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun e!48609 () Bool)

(assert (=> d!17521 (= lt!33495 e!48609)))

(declare-fun res!39357 () Bool)

(assert (=> d!17521 (=> (not res!39357) (not e!48609))))

(assert (=> d!17521 (= res!39357 ((_ is Cons!1470) (toList!716 lt!33067)))))

(assert (=> d!17521 (= (contains!721 (toList!716 lt!33067) (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33495)))

(declare-fun b!74392 () Bool)

(declare-fun e!48608 () Bool)

(assert (=> b!74392 (= e!48609 e!48608)))

(declare-fun res!39358 () Bool)

(assert (=> b!74392 (=> res!39358 e!48608)))

(assert (=> b!74392 (= res!39358 (= (h!2057 (toList!716 lt!33067)) (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74393 () Bool)

(assert (=> b!74393 (= e!48608 (contains!721 (t!5023 (toList!716 lt!33067)) (ite (or c!10815 c!10817) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (= (and d!17521 res!39357) b!74392))

(assert (= (and b!74392 (not res!39358)) b!74393))

(declare-fun m!73583 () Bool)

(assert (=> d!17521 m!73583))

(declare-fun m!73585 () Bool)

(assert (=> d!17521 m!73585))

(declare-fun m!73587 () Bool)

(assert (=> b!74393 m!73587))

(assert (=> b!73585 d!17521))

(declare-fun d!17523 () Bool)

(assert (=> d!17523 (= ($colon$colon!65 e!48160 (ite c!10982 (h!2057 (toList!716 lt!32489)) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485)))) (Cons!1470 (ite c!10982 (h!2057 (toList!716 lt!32489)) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))) e!48160))))

(assert (=> bm!6488 d!17523))

(declare-fun d!17525 () Bool)

(declare-fun e!48610 () Bool)

(assert (=> d!17525 e!48610))

(declare-fun res!39359 () Bool)

(assert (=> d!17525 (=> (not res!39359) (not e!48610))))

(declare-fun lt!33498 () ListLongMap!1401)

(assert (=> d!17525 (= res!39359 (contains!720 lt!33498 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun lt!33499 () List!1474)

(assert (=> d!17525 (= lt!33498 (ListLongMap!1402 lt!33499))))

(declare-fun lt!33497 () Unit!2076)

(declare-fun lt!33496 () Unit!2076)

(assert (=> d!17525 (= lt!33497 lt!33496)))

(assert (=> d!17525 (= (getValueByKey!134 lt!33499 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17525 (= lt!33496 (lemmaContainsTupThenGetReturnValue!51 lt!33499 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17525 (= lt!33499 (insertStrictlySorted!54 (toList!716 call!6481) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17525 (= (+!93 call!6481 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) lt!33498)))

(declare-fun b!74394 () Bool)

(declare-fun res!39360 () Bool)

(assert (=> b!74394 (=> (not res!39360) (not e!48610))))

(assert (=> b!74394 (= res!39360 (= (getValueByKey!134 (toList!716 lt!33498) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(declare-fun b!74395 () Bool)

(assert (=> b!74395 (= e!48610 (contains!721 (toList!716 lt!33498) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(assert (= (and d!17525 res!39359) b!74394))

(assert (= (and b!74394 res!39360) b!74395))

(declare-fun m!73589 () Bool)

(assert (=> d!17525 m!73589))

(declare-fun m!73591 () Bool)

(assert (=> d!17525 m!73591))

(declare-fun m!73593 () Bool)

(assert (=> d!17525 m!73593))

(declare-fun m!73595 () Bool)

(assert (=> d!17525 m!73595))

(declare-fun m!73597 () Bool)

(assert (=> b!74394 m!73597))

(declare-fun m!73599 () Bool)

(assert (=> b!74395 m!73599))

(assert (=> b!73540 d!17525))

(declare-fun d!17527 () Bool)

(assert (not d!17527))

(assert (=> b!73595 d!17527))

(declare-fun d!17529 () Bool)

(assert (=> d!17529 (= (content!79 Nil!1470) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!17019 d!17529))

(declare-fun b!74397 () Bool)

(declare-fun e!48611 () Option!140)

(declare-fun e!48612 () Option!140)

(assert (=> b!74397 (= e!48611 e!48612)))

(declare-fun c!11190 () Bool)

(assert (=> b!74397 (= c!11190 (and ((_ is Cons!1470) (t!5023 lt!32595)) (not (= (_1!1071 (h!2057 (t!5023 lt!32595))) (_1!1071 lt!32485)))))))

(declare-fun b!74396 () Bool)

(assert (=> b!74396 (= e!48611 (Some!139 (_2!1071 (h!2057 (t!5023 lt!32595)))))))

(declare-fun d!17531 () Bool)

(declare-fun c!11189 () Bool)

(assert (=> d!17531 (= c!11189 (and ((_ is Cons!1470) (t!5023 lt!32595)) (= (_1!1071 (h!2057 (t!5023 lt!32595))) (_1!1071 lt!32485))))))

(assert (=> d!17531 (= (getValueByKey!134 (t!5023 lt!32595) (_1!1071 lt!32485)) e!48611)))

(declare-fun b!74398 () Bool)

(assert (=> b!74398 (= e!48612 (getValueByKey!134 (t!5023 (t!5023 lt!32595)) (_1!1071 lt!32485)))))

(declare-fun b!74399 () Bool)

(assert (=> b!74399 (= e!48612 None!138)))

(assert (= (and d!17531 c!11189) b!74396))

(assert (= (and d!17531 (not c!11189)) b!74397))

(assert (= (and b!74397 c!11190) b!74398))

(assert (= (and b!74397 (not c!11190)) b!74399))

(declare-fun m!73601 () Bool)

(assert (=> b!74398 m!73601))

(assert (=> b!73279 d!17531))

(declare-fun d!17533 () Bool)

(declare-fun lt!33500 () Bool)

(assert (=> d!17533 (= lt!33500 (select (content!78 (toList!716 lt!33126)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(declare-fun e!48614 () Bool)

(assert (=> d!17533 (= lt!33500 e!48614)))

(declare-fun res!39361 () Bool)

(assert (=> d!17533 (=> (not res!39361) (not e!48614))))

(assert (=> d!17533 (= res!39361 ((_ is Cons!1470) (toList!716 lt!33126)))))

(assert (=> d!17533 (= (contains!721 (toList!716 lt!33126) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) lt!33500)))

(declare-fun b!74400 () Bool)

(declare-fun e!48613 () Bool)

(assert (=> b!74400 (= e!48614 e!48613)))

(declare-fun res!39362 () Bool)

(assert (=> b!74400 (=> res!39362 e!48613)))

(assert (=> b!74400 (= res!39362 (= (h!2057 (toList!716 lt!33126)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(declare-fun b!74401 () Bool)

(assert (=> b!74401 (= e!48613 (contains!721 (t!5023 (toList!716 lt!33126)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))

(assert (= (and d!17533 res!39361) b!74400))

(assert (= (and b!74400 (not res!39362)) b!74401))

(declare-fun m!73603 () Bool)

(assert (=> d!17533 m!73603))

(declare-fun m!73605 () Bool)

(assert (=> d!17533 m!73605))

(declare-fun m!73607 () Bool)

(assert (=> b!74401 m!73607))

(assert (=> b!73648 d!17533))

(assert (=> d!17035 d!16883))

(declare-fun b!74403 () Bool)

(declare-fun e!48615 () Option!140)

(declare-fun e!48616 () Option!140)

(assert (=> b!74403 (= e!48615 e!48616)))

(declare-fun c!11192 () Bool)

(assert (=> b!74403 (= c!11192 (and ((_ is Cons!1470) (t!5023 lt!32591)) (not (= (_1!1071 (h!2057 (t!5023 lt!32591))) (_1!1071 lt!32492)))))))

(declare-fun b!74402 () Bool)

(assert (=> b!74402 (= e!48615 (Some!139 (_2!1071 (h!2057 (t!5023 lt!32591)))))))

(declare-fun d!17535 () Bool)

(declare-fun c!11191 () Bool)

(assert (=> d!17535 (= c!11191 (and ((_ is Cons!1470) (t!5023 lt!32591)) (= (_1!1071 (h!2057 (t!5023 lt!32591))) (_1!1071 lt!32492))))))

(assert (=> d!17535 (= (getValueByKey!134 (t!5023 lt!32591) (_1!1071 lt!32492)) e!48615)))

(declare-fun b!74404 () Bool)

(assert (=> b!74404 (= e!48616 (getValueByKey!134 (t!5023 (t!5023 lt!32591)) (_1!1071 lt!32492)))))

(declare-fun b!74405 () Bool)

(assert (=> b!74405 (= e!48616 None!138)))

(assert (= (and d!17535 c!11191) b!74402))

(assert (= (and d!17535 (not c!11191)) b!74403))

(assert (= (and b!74403 c!11192) b!74404))

(assert (= (and b!74403 (not c!11192)) b!74405))

(declare-fun m!73609 () Bool)

(assert (=> b!74404 m!73609))

(assert (=> b!73692 d!17535))

(declare-fun b!74407 () Bool)

(declare-fun e!48617 () Option!140)

(declare-fun e!48618 () Option!140)

(assert (=> b!74407 (= e!48617 e!48618)))

(declare-fun c!11194 () Bool)

(assert (=> b!74407 (= c!11194 (and ((_ is Cons!1470) (toList!716 lt!32854)) (not (= (_1!1071 (h!2057 (toList!716 lt!32854))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!74406 () Bool)

(assert (=> b!74406 (= e!48617 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32854)))))))

(declare-fun d!17537 () Bool)

(declare-fun c!11193 () Bool)

(assert (=> d!17537 (= c!11193 (and ((_ is Cons!1470) (toList!716 lt!32854)) (= (_1!1071 (h!2057 (toList!716 lt!32854))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!17537 (= (getValueByKey!134 (toList!716 lt!32854) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!48617)))

(declare-fun b!74408 () Bool)

(assert (=> b!74408 (= e!48618 (getValueByKey!134 (t!5023 (toList!716 lt!32854)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74409 () Bool)

(assert (=> b!74409 (= e!48618 None!138)))

(assert (= (and d!17537 c!11193) b!74406))

(assert (= (and d!17537 (not c!11193)) b!74407))

(assert (= (and b!74407 c!11194) b!74408))

(assert (= (and b!74407 (not c!11194)) b!74409))

(declare-fun m!73611 () Bool)

(assert (=> b!74408 m!73611))

(assert (=> b!73368 d!17537))

(declare-fun d!17539 () Bool)

(assert (=> d!17539 (isDefined!86 (getValueByKey!134 (toList!716 lt!32594) (_1!1071 lt!32485)))))

(declare-fun lt!33501 () Unit!2076)

(assert (=> d!17539 (= lt!33501 (choose!420 (toList!716 lt!32594) (_1!1071 lt!32485)))))

(declare-fun e!48619 () Bool)

(assert (=> d!17539 e!48619))

(declare-fun res!39363 () Bool)

(assert (=> d!17539 (=> (not res!39363) (not e!48619))))

(assert (=> d!17539 (= res!39363 (isStrictlySorted!279 (toList!716 lt!32594)))))

(assert (=> d!17539 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32594) (_1!1071 lt!32485)) lt!33501)))

(declare-fun b!74410 () Bool)

(assert (=> b!74410 (= e!48619 (containsKey!137 (toList!716 lt!32594) (_1!1071 lt!32485)))))

(assert (= (and d!17539 res!39363) b!74410))

(assert (=> d!17539 m!71365))

(assert (=> d!17539 m!71365))

(assert (=> d!17539 m!71577))

(declare-fun m!73613 () Bool)

(assert (=> d!17539 m!73613))

(declare-fun m!73615 () Bool)

(assert (=> d!17539 m!73615))

(assert (=> b!74410 m!71573))

(assert (=> b!73274 d!17539))

(declare-fun d!17541 () Bool)

(assert (=> d!17541 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32594) (_1!1071 lt!32485))) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32594) (_1!1071 lt!32485)))))))

(declare-fun bs!3214 () Bool)

(assert (= bs!3214 d!17541))

(assert (=> bs!3214 m!71365))

(declare-fun m!73617 () Bool)

(assert (=> bs!3214 m!73617))

(assert (=> b!73274 d!17541))

(assert (=> b!73274 d!17079))

(assert (=> d!16967 d!16983))

(assert (=> d!16967 d!16989))

(declare-fun d!17543 () Bool)

(assert (=> d!17543 (contains!720 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32661)))

(assert (=> d!17543 true))

(declare-fun _$35!318 () Unit!2076)

(assert (=> d!17543 (= (choose!425 lt!32676 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32661) _$35!318)))

(declare-fun bs!3215 () Bool)

(assert (= bs!3215 d!17543))

(assert (=> bs!3215 m!71425))

(assert (=> bs!3215 m!71425))

(assert (=> bs!3215 m!71427))

(assert (=> d!16967 d!17543))

(declare-fun d!17545 () Bool)

(declare-fun e!48620 () Bool)

(assert (=> d!17545 e!48620))

(declare-fun res!39364 () Bool)

(assert (=> d!17545 (=> res!39364 e!48620)))

(declare-fun lt!33503 () Bool)

(assert (=> d!17545 (= res!39364 (not lt!33503))))

(declare-fun lt!33505 () Bool)

(assert (=> d!17545 (= lt!33503 lt!33505)))

(declare-fun lt!33504 () Unit!2076)

(declare-fun e!48621 () Unit!2076)

(assert (=> d!17545 (= lt!33504 e!48621)))

(declare-fun c!11195 () Bool)

(assert (=> d!17545 (= c!11195 lt!33505)))

(assert (=> d!17545 (= lt!33505 (containsKey!137 (toList!716 lt!32676) lt!32661))))

(assert (=> d!17545 (= (contains!720 lt!32676 lt!32661) lt!33503)))

(declare-fun b!74412 () Bool)

(declare-fun lt!33502 () Unit!2076)

(assert (=> b!74412 (= e!48621 lt!33502)))

(assert (=> b!74412 (= lt!33502 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32676) lt!32661))))

(assert (=> b!74412 (isDefined!86 (getValueByKey!134 (toList!716 lt!32676) lt!32661))))

(declare-fun b!74413 () Bool)

(declare-fun Unit!2135 () Unit!2076)

(assert (=> b!74413 (= e!48621 Unit!2135)))

(declare-fun b!74414 () Bool)

(assert (=> b!74414 (= e!48620 (isDefined!86 (getValueByKey!134 (toList!716 lt!32676) lt!32661)))))

(assert (= (and d!17545 c!11195) b!74412))

(assert (= (and d!17545 (not c!11195)) b!74413))

(assert (= (and d!17545 (not res!39364)) b!74414))

(declare-fun m!73619 () Bool)

(assert (=> d!17545 m!73619))

(declare-fun m!73621 () Bool)

(assert (=> b!74412 m!73621))

(declare-fun m!73623 () Bool)

(assert (=> b!74412 m!73623))

(assert (=> b!74412 m!73623))

(declare-fun m!73625 () Bool)

(assert (=> b!74412 m!73625))

(assert (=> b!74414 m!73623))

(assert (=> b!74414 m!73623))

(assert (=> b!74414 m!73625))

(assert (=> d!16967 d!17545))

(declare-fun d!17547 () Bool)

(assert (=> d!17547 (isDefined!86 (getValueByKey!134 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun lt!33506 () Unit!2076)

(assert (=> d!17547 (= lt!33506 (choose!420 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun e!48622 () Bool)

(assert (=> d!17547 e!48622))

(declare-fun res!39365 () Bool)

(assert (=> d!17547 (=> (not res!39365) (not e!48622))))

(assert (=> d!17547 (= res!39365 (isStrictlySorted!279 (toList!716 call!6407)))))

(assert (=> d!17547 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) lt!33506)))

(declare-fun b!74415 () Bool)

(assert (=> b!74415 (= e!48622 (containsKey!137 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (= (and d!17547 res!39365) b!74415))

(assert (=> d!17547 m!71143))

(assert (=> d!17547 m!72095))

(assert (=> d!17547 m!72095))

(assert (=> d!17547 m!72097))

(assert (=> d!17547 m!71143))

(declare-fun m!73627 () Bool)

(assert (=> d!17547 m!73627))

(declare-fun m!73629 () Bool)

(assert (=> d!17547 m!73629))

(assert (=> b!74415 m!71143))

(assert (=> b!74415 m!72091))

(assert (=> b!73579 d!17547))

(declare-fun d!17549 () Bool)

(assert (=> d!17549 (= (isDefined!86 (getValueByKey!134 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))) (not (isEmpty!323 (getValueByKey!134 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))))

(declare-fun bs!3216 () Bool)

(assert (= bs!3216 d!17549))

(assert (=> bs!3216 m!72095))

(declare-fun m!73631 () Bool)

(assert (=> bs!3216 m!73631))

(assert (=> b!73579 d!17549))

(declare-fun b!74417 () Bool)

(declare-fun e!48623 () Option!140)

(declare-fun e!48624 () Option!140)

(assert (=> b!74417 (= e!48623 e!48624)))

(declare-fun c!11197 () Bool)

(assert (=> b!74417 (= c!11197 (and ((_ is Cons!1470) (toList!716 call!6407)) (not (= (_1!1071 (h!2057 (toList!716 call!6407))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))))

(declare-fun b!74416 () Bool)

(assert (=> b!74416 (= e!48623 (Some!139 (_2!1071 (h!2057 (toList!716 call!6407)))))))

(declare-fun d!17551 () Bool)

(declare-fun c!11196 () Bool)

(assert (=> d!17551 (= c!11196 (and ((_ is Cons!1470) (toList!716 call!6407)) (= (_1!1071 (h!2057 (toList!716 call!6407))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (=> d!17551 (= (getValueByKey!134 (toList!716 call!6407) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) e!48623)))

(declare-fun b!74418 () Bool)

(assert (=> b!74418 (= e!48624 (getValueByKey!134 (t!5023 (toList!716 call!6407)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!74419 () Bool)

(assert (=> b!74419 (= e!48624 None!138)))

(assert (= (and d!17551 c!11196) b!74416))

(assert (= (and d!17551 (not c!11196)) b!74417))

(assert (= (and b!74417 c!11197) b!74418))

(assert (= (and b!74417 (not c!11197)) b!74419))

(assert (=> b!74418 m!71143))

(declare-fun m!73633 () Bool)

(assert (=> b!74418 m!73633))

(assert (=> b!73579 d!17551))

(declare-fun b!74420 () Bool)

(declare-fun e!48627 () Bool)

(declare-fun e!48628 () Bool)

(assert (=> b!74420 (= e!48627 e!48628)))

(declare-fun res!39367 () Bool)

(assert (=> b!74420 (=> (not res!39367) (not e!48628))))

(declare-fun e!48626 () Bool)

(assert (=> b!74420 (= res!39367 (not e!48626))))

(declare-fun res!39368 () Bool)

(assert (=> b!74420 (=> (not res!39368) (not e!48626))))

(assert (=> b!74420 (= res!39368 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000)))))

(declare-fun bm!6566 () Bool)

(declare-fun call!6569 () Bool)

(declare-fun c!11198 () Bool)

(assert (=> bm!6566 (= call!6569 (arrayNoDuplicates!0 (_keys!3864 (_2!1072 lt!32783)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!11198 (Cons!1469 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000) Nil!1470) Nil!1470)))))

(declare-fun b!74421 () Bool)

(declare-fun e!48625 () Bool)

(assert (=> b!74421 (= e!48628 e!48625)))

(assert (=> b!74421 (= c!11198 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000)))))

(declare-fun d!17553 () Bool)

(declare-fun res!39366 () Bool)

(assert (=> d!17553 (=> res!39366 e!48627)))

(assert (=> d!17553 (= res!39366 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 (_2!1072 lt!32783)))))))

(assert (=> d!17553 (= (arrayNoDuplicates!0 (_keys!3864 (_2!1072 lt!32783)) #b00000000000000000000000000000000 Nil!1470) e!48627)))

(declare-fun b!74422 () Bool)

(assert (=> b!74422 (= e!48625 call!6569)))

(declare-fun b!74423 () Bool)

(assert (=> b!74423 (= e!48625 call!6569)))

(declare-fun b!74424 () Bool)

(assert (=> b!74424 (= e!48626 (contains!722 Nil!1470 (select (arr!1850 (_keys!3864 (_2!1072 lt!32783))) #b00000000000000000000000000000000)))))

(assert (= (and d!17553 (not res!39366)) b!74420))

(assert (= (and b!74420 res!39368) b!74424))

(assert (= (and b!74420 res!39367) b!74421))

(assert (= (and b!74421 c!11198) b!74423))

(assert (= (and b!74421 (not c!11198)) b!74422))

(assert (= (or b!74423 b!74422) bm!6566))

(assert (=> b!74420 m!72861))

(assert (=> b!74420 m!72861))

(assert (=> b!74420 m!72897))

(assert (=> bm!6566 m!72861))

(declare-fun m!73635 () Bool)

(assert (=> bm!6566 m!73635))

(assert (=> b!74421 m!72861))

(assert (=> b!74421 m!72861))

(assert (=> b!74421 m!72897))

(assert (=> b!74424 m!72861))

(assert (=> b!74424 m!72861))

(declare-fun m!73637 () Bool)

(assert (=> b!74424 m!73637))

(assert (=> b!73670 d!17553))

(declare-fun d!17555 () Bool)

(declare-fun res!39369 () Bool)

(declare-fun e!48629 () Bool)

(assert (=> d!17555 (=> res!39369 e!48629)))

(assert (=> d!17555 (= res!39369 (and ((_ is Cons!1470) lt!32584) (= (_1!1071 (h!2057 lt!32584)) (_1!1071 lt!32485))))))

(assert (=> d!17555 (= (containsKey!137 lt!32584 (_1!1071 lt!32485)) e!48629)))

(declare-fun b!74425 () Bool)

(declare-fun e!48630 () Bool)

(assert (=> b!74425 (= e!48629 e!48630)))

(declare-fun res!39370 () Bool)

(assert (=> b!74425 (=> (not res!39370) (not e!48630))))

(assert (=> b!74425 (= res!39370 (and (or (not ((_ is Cons!1470) lt!32584)) (bvsle (_1!1071 (h!2057 lt!32584)) (_1!1071 lt!32485))) ((_ is Cons!1470) lt!32584) (bvslt (_1!1071 (h!2057 lt!32584)) (_1!1071 lt!32485))))))

(declare-fun b!74426 () Bool)

(assert (=> b!74426 (= e!48630 (containsKey!137 (t!5023 lt!32584) (_1!1071 lt!32485)))))

(assert (= (and d!17555 (not res!39369)) b!74425))

(assert (= (and b!74425 res!39370) b!74426))

(declare-fun m!73639 () Bool)

(assert (=> b!74426 m!73639))

(assert (=> b!73656 d!17555))

(declare-fun d!17557 () Bool)

(declare-fun lt!33507 () Bool)

(assert (=> d!17557 (= lt!33507 (select (content!79 Nil!1470) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!48631 () Bool)

(assert (=> d!17557 (= lt!33507 e!48631)))

(declare-fun res!39372 () Bool)

(assert (=> d!17557 (=> (not res!39372) (not e!48631))))

(assert (=> d!17557 (= res!39372 ((_ is Cons!1469) Nil!1470))))

(assert (=> d!17557 (= (contains!722 Nil!1470 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) lt!33507)))

(declare-fun b!74427 () Bool)

(declare-fun e!48632 () Bool)

(assert (=> b!74427 (= e!48631 e!48632)))

(declare-fun res!39371 () Bool)

(assert (=> b!74427 (=> res!39371 e!48632)))

(assert (=> b!74427 (= res!39371 (= (h!2056 Nil!1470) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74428 () Bool)

(assert (=> b!74428 (= e!48632 (contains!722 (t!5022 Nil!1470) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!17557 res!39372) b!74427))

(assert (= (and b!74427 (not res!39371)) b!74428))

(assert (=> d!17557 m!72117))

(assert (=> d!17557 m!71603))

(declare-fun m!73641 () Bool)

(assert (=> d!17557 m!73641))

(assert (=> b!74428 m!71603))

(declare-fun m!73643 () Bool)

(assert (=> b!74428 m!73643))

(assert (=> b!73386 d!17557))

(declare-fun d!17559 () Bool)

(declare-fun lt!33508 () Bool)

(assert (=> d!17559 (= lt!33508 (select (content!78 lt!32810) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun e!48634 () Bool)

(assert (=> d!17559 (= lt!33508 e!48634)))

(declare-fun res!39373 () Bool)

(assert (=> d!17559 (=> (not res!39373) (not e!48634))))

(assert (=> d!17559 (= res!39373 ((_ is Cons!1470) lt!32810))))

(assert (=> d!17559 (= (contains!721 lt!32810 (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))) lt!33508)))

(declare-fun b!74429 () Bool)

(declare-fun e!48633 () Bool)

(assert (=> b!74429 (= e!48634 e!48633)))

(declare-fun res!39374 () Bool)

(assert (=> b!74429 (=> res!39374 e!48633)))

(assert (=> b!74429 (= res!39374 (= (h!2057 lt!32810) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun b!74430 () Bool)

(assert (=> b!74430 (= e!48633 (contains!721 (t!5023 lt!32810) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(assert (= (and d!17559 res!39373) b!74429))

(assert (= (and b!74429 (not res!39374)) b!74430))

(declare-fun m!73645 () Bool)

(assert (=> d!17559 m!73645))

(declare-fun m!73647 () Bool)

(assert (=> d!17559 m!73647))

(declare-fun m!73649 () Bool)

(assert (=> b!74430 m!73649))

(assert (=> b!73309 d!17559))

(declare-fun d!17561 () Bool)

(assert (=> d!17561 (= (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73682 d!17561))

(declare-fun d!17563 () Bool)

(declare-fun c!11199 () Bool)

(assert (=> d!17563 (= c!11199 ((_ is Nil!1471) (toList!716 lt!32579)))))

(declare-fun e!48635 () (InoxSet tuple2!2120))

(assert (=> d!17563 (= (content!78 (toList!716 lt!32579)) e!48635)))

(declare-fun b!74431 () Bool)

(assert (=> b!74431 (= e!48635 ((as const (Array tuple2!2120 Bool)) false))))

(declare-fun b!74432 () Bool)

(assert (=> b!74432 (= e!48635 ((_ map or) (store ((as const (Array tuple2!2120 Bool)) false) (h!2057 (toList!716 lt!32579)) true) (content!78 (t!5023 (toList!716 lt!32579)))))))

(assert (= (and d!17563 c!11199) b!74431))

(assert (= (and d!17563 (not c!11199)) b!74432))

(declare-fun m!73651 () Bool)

(assert (=> b!74432 m!73651))

(assert (=> b!74432 m!73571))

(assert (=> d!16911 d!17563))

(assert (=> b!73372 d!17385))

(assert (=> b!73372 d!17387))

(declare-fun b!74434 () Bool)

(declare-fun e!48636 () Option!140)

(declare-fun e!48637 () Option!140)

(assert (=> b!74434 (= e!48636 e!48637)))

(declare-fun c!11201 () Bool)

(assert (=> b!74434 (= c!11201 (and ((_ is Cons!1470) (toList!716 lt!32935)) (not (= (_1!1071 (h!2057 (toList!716 lt!32935))) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74433 () Bool)

(assert (=> b!74433 (= e!48636 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32935)))))))

(declare-fun d!17565 () Bool)

(declare-fun c!11200 () Bool)

(assert (=> d!17565 (= c!11200 (and ((_ is Cons!1470) (toList!716 lt!32935)) (= (_1!1071 (h!2057 (toList!716 lt!32935))) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17565 (= (getValueByKey!134 (toList!716 lt!32935) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48636)))

(declare-fun b!74435 () Bool)

(assert (=> b!74435 (= e!48637 (getValueByKey!134 (t!5023 (toList!716 lt!32935)) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74436 () Bool)

(assert (=> b!74436 (= e!48637 None!138)))

(assert (= (and d!17565 c!11200) b!74433))

(assert (= (and d!17565 (not c!11200)) b!74434))

(assert (= (and b!74434 c!11201) b!74435))

(assert (= (and b!74434 (not c!11201)) b!74436))

(declare-fun m!73653 () Bool)

(assert (=> b!74435 m!73653))

(assert (=> b!73474 d!17565))

(assert (=> b!73673 d!17399))

(assert (=> b!73673 d!17401))

(declare-fun d!17567 () Bool)

(declare-fun res!39375 () Bool)

(declare-fun e!48638 () Bool)

(assert (=> d!17567 (=> res!39375 e!48638)))

(assert (=> d!17567 (= res!39375 (and ((_ is Cons!1470) (toList!716 lt!32614)) (= (_1!1071 (h!2057 (toList!716 lt!32614))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17567 (= (containsKey!137 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000) e!48638)))

(declare-fun b!74437 () Bool)

(declare-fun e!48639 () Bool)

(assert (=> b!74437 (= e!48638 e!48639)))

(declare-fun res!39376 () Bool)

(assert (=> b!74437 (=> (not res!39376) (not e!48639))))

(assert (=> b!74437 (= res!39376 (and (or (not ((_ is Cons!1470) (toList!716 lt!32614))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32614))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1470) (toList!716 lt!32614)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32614))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74438 () Bool)

(assert (=> b!74438 (= e!48639 (containsKey!137 (t!5023 (toList!716 lt!32614)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17567 (not res!39375)) b!74437))

(assert (= (and b!74437 res!39376) b!74438))

(declare-fun m!73655 () Bool)

(assert (=> b!74438 m!73655))

(assert (=> d!17027 d!17567))

(declare-fun d!17569 () Bool)

(declare-fun e!48640 () Bool)

(assert (=> d!17569 e!48640))

(declare-fun res!39377 () Bool)

(assert (=> d!17569 (=> res!39377 e!48640)))

(declare-fun lt!33510 () Bool)

(assert (=> d!17569 (= res!39377 (not lt!33510))))

(declare-fun lt!33512 () Bool)

(assert (=> d!17569 (= lt!33510 lt!33512)))

(declare-fun lt!33511 () Unit!2076)

(declare-fun e!48641 () Unit!2076)

(assert (=> d!17569 (= lt!33511 e!48641)))

(declare-fun c!11202 () Bool)

(assert (=> d!17569 (= c!11202 lt!33512)))

(assert (=> d!17569 (= lt!33512 (containsKey!137 (toList!716 lt!32854) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17569 (= (contains!720 lt!32854 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33510)))

(declare-fun b!74439 () Bool)

(declare-fun lt!33509 () Unit!2076)

(assert (=> b!74439 (= e!48641 lt!33509)))

(assert (=> b!74439 (= lt!33509 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32854) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!74439 (isDefined!86 (getValueByKey!134 (toList!716 lt!32854) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74440 () Bool)

(declare-fun Unit!2136 () Unit!2076)

(assert (=> b!74440 (= e!48641 Unit!2136)))

(declare-fun b!74441 () Bool)

(assert (=> b!74441 (= e!48640 (isDefined!86 (getValueByKey!134 (toList!716 lt!32854) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!17569 c!11202) b!74439))

(assert (= (and d!17569 (not c!11202)) b!74440))

(assert (= (and d!17569 (not res!39377)) b!74441))

(declare-fun m!73657 () Bool)

(assert (=> d!17569 m!73657))

(declare-fun m!73659 () Bool)

(assert (=> b!74439 m!73659))

(assert (=> b!74439 m!71713))

(assert (=> b!74439 m!71713))

(declare-fun m!73661 () Bool)

(assert (=> b!74439 m!73661))

(assert (=> b!74441 m!71713))

(assert (=> b!74441 m!71713))

(assert (=> b!74441 m!73661))

(assert (=> d!16929 d!17569))

(declare-fun b!74443 () Bool)

(declare-fun e!48642 () Option!140)

(declare-fun e!48643 () Option!140)

(assert (=> b!74443 (= e!48642 e!48643)))

(declare-fun c!11204 () Bool)

(assert (=> b!74443 (= c!11204 (and ((_ is Cons!1470) lt!32855) (not (= (_1!1071 (h!2057 lt!32855)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!74442 () Bool)

(assert (=> b!74442 (= e!48642 (Some!139 (_2!1071 (h!2057 lt!32855))))))

(declare-fun d!17571 () Bool)

(declare-fun c!11203 () Bool)

(assert (=> d!17571 (= c!11203 (and ((_ is Cons!1470) lt!32855) (= (_1!1071 (h!2057 lt!32855)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!17571 (= (getValueByKey!134 lt!32855 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!48642)))

(declare-fun b!74444 () Bool)

(assert (=> b!74444 (= e!48643 (getValueByKey!134 (t!5023 lt!32855) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74445 () Bool)

(assert (=> b!74445 (= e!48643 None!138)))

(assert (= (and d!17571 c!11203) b!74442))

(assert (= (and d!17571 (not c!11203)) b!74443))

(assert (= (and b!74443 c!11204) b!74444))

(assert (= (and b!74443 (not c!11204)) b!74445))

(declare-fun m!73663 () Bool)

(assert (=> b!74444 m!73663))

(assert (=> d!16929 d!17571))

(declare-fun d!17573 () Bool)

(assert (=> d!17573 (= (getValueByKey!134 lt!32855 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!33513 () Unit!2076)

(assert (=> d!17573 (= lt!33513 (choose!419 lt!32855 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!48644 () Bool)

(assert (=> d!17573 e!48644))

(declare-fun res!39378 () Bool)

(assert (=> d!17573 (=> (not res!39378) (not e!48644))))

(assert (=> d!17573 (= res!39378 (isStrictlySorted!279 lt!32855))))

(assert (=> d!17573 (= (lemmaContainsTupThenGetReturnValue!51 lt!32855 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33513)))

(declare-fun b!74446 () Bool)

(declare-fun res!39379 () Bool)

(assert (=> b!74446 (=> (not res!39379) (not e!48644))))

(assert (=> b!74446 (= res!39379 (containsKey!137 lt!32855 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74447 () Bool)

(assert (=> b!74447 (= e!48644 (contains!721 lt!32855 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!17573 res!39378) b!74446))

(assert (= (and b!74446 res!39379) b!74447))

(assert (=> d!17573 m!71707))

(declare-fun m!73665 () Bool)

(assert (=> d!17573 m!73665))

(declare-fun m!73667 () Bool)

(assert (=> d!17573 m!73667))

(declare-fun m!73669 () Bool)

(assert (=> b!74446 m!73669))

(declare-fun m!73671 () Bool)

(assert (=> b!74447 m!73671))

(assert (=> d!16929 d!17573))

(declare-fun b!74448 () Bool)

(declare-fun e!48649 () List!1474)

(assert (=> b!74448 (= e!48649 (insertStrictlySorted!54 (t!5023 (toList!716 call!6334)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74449 () Bool)

(declare-fun c!11205 () Bool)

(declare-fun c!11206 () Bool)

(assert (=> b!74449 (= e!48649 (ite c!11206 (t!5023 (toList!716 call!6334)) (ite c!11205 (Cons!1470 (h!2057 (toList!716 call!6334)) (t!5023 (toList!716 call!6334))) Nil!1471)))))

(declare-fun bm!6567 () Bool)

(declare-fun call!6571 () List!1474)

(declare-fun call!6572 () List!1474)

(assert (=> bm!6567 (= call!6571 call!6572)))

(declare-fun lt!33514 () List!1474)

(declare-fun e!48648 () Bool)

(declare-fun b!74450 () Bool)

(assert (=> b!74450 (= e!48648 (contains!721 lt!33514 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!74451 () Bool)

(declare-fun e!48645 () List!1474)

(assert (=> b!74451 (= e!48645 call!6571)))

(declare-fun b!74452 () Bool)

(declare-fun e!48646 () List!1474)

(declare-fun e!48647 () List!1474)

(assert (=> b!74452 (= e!48646 e!48647)))

(assert (=> b!74452 (= c!11206 (and ((_ is Cons!1470) (toList!716 call!6334)) (= (_1!1071 (h!2057 (toList!716 call!6334))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun d!17575 () Bool)

(assert (=> d!17575 e!48648))

(declare-fun res!39380 () Bool)

(assert (=> d!17575 (=> (not res!39380) (not e!48648))))

(assert (=> d!17575 (= res!39380 (isStrictlySorted!279 lt!33514))))

(assert (=> d!17575 (= lt!33514 e!48646)))

(declare-fun c!11207 () Bool)

(assert (=> d!17575 (= c!11207 (and ((_ is Cons!1470) (toList!716 call!6334)) (bvslt (_1!1071 (h!2057 (toList!716 call!6334))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!17575 (isStrictlySorted!279 (toList!716 call!6334))))

(assert (=> d!17575 (= (insertStrictlySorted!54 (toList!716 call!6334) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33514)))

(declare-fun call!6570 () List!1474)

(declare-fun bm!6568 () Bool)

(assert (=> bm!6568 (= call!6570 ($colon$colon!65 e!48649 (ite c!11207 (h!2057 (toList!716 call!6334)) (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!11208 () Bool)

(assert (=> bm!6568 (= c!11208 c!11207)))

(declare-fun b!74453 () Bool)

(assert (=> b!74453 (= e!48647 call!6572)))

(declare-fun b!74454 () Bool)

(assert (=> b!74454 (= e!48645 call!6571)))

(declare-fun b!74455 () Bool)

(assert (=> b!74455 (= c!11205 (and ((_ is Cons!1470) (toList!716 call!6334)) (bvsgt (_1!1071 (h!2057 (toList!716 call!6334))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!74455 (= e!48647 e!48645)))

(declare-fun b!74456 () Bool)

(assert (=> b!74456 (= e!48646 call!6570)))

(declare-fun bm!6569 () Bool)

(assert (=> bm!6569 (= call!6572 call!6570)))

(declare-fun b!74457 () Bool)

(declare-fun res!39381 () Bool)

(assert (=> b!74457 (=> (not res!39381) (not e!48648))))

(assert (=> b!74457 (= res!39381 (containsKey!137 lt!33514 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!17575 c!11207) b!74456))

(assert (= (and d!17575 (not c!11207)) b!74452))

(assert (= (and b!74452 c!11206) b!74453))

(assert (= (and b!74452 (not c!11206)) b!74455))

(assert (= (and b!74455 c!11205) b!74451))

(assert (= (and b!74455 (not c!11205)) b!74454))

(assert (= (or b!74451 b!74454) bm!6567))

(assert (= (or b!74453 bm!6567) bm!6569))

(assert (= (or b!74456 bm!6569) bm!6568))

(assert (= (and bm!6568 c!11208) b!74448))

(assert (= (and bm!6568 (not c!11208)) b!74449))

(assert (= (and d!17575 res!39380) b!74457))

(assert (= (and b!74457 res!39381) b!74450))

(declare-fun m!73673 () Bool)

(assert (=> b!74448 m!73673))

(declare-fun m!73675 () Bool)

(assert (=> b!74450 m!73675))

(declare-fun m!73677 () Bool)

(assert (=> d!17575 m!73677))

(declare-fun m!73679 () Bool)

(assert (=> d!17575 m!73679))

(declare-fun m!73681 () Bool)

(assert (=> bm!6568 m!73681))

(declare-fun m!73683 () Bool)

(assert (=> b!74457 m!73683))

(assert (=> d!16929 d!17575))

(declare-fun d!17577 () Bool)

(assert (=> d!17577 (contains!720 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))

(declare-fun lt!33517 () Unit!2076)

(declare-fun choose!431 (array!3877 array!3879 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) (_ BitVec 32) Int) Unit!2076)

(assert (=> d!17577 (= lt!33517 (choose!431 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (=> d!17577 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17577 (= (lemmaArrayContainsKeyThenInListMap!13 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33517)))

(declare-fun bs!3217 () Bool)

(assert (= bs!3217 d!17577))

(assert (=> bs!3217 m!71403))

(assert (=> bs!3217 m!71403))

(assert (=> bs!3217 m!71143))

(assert (=> bs!3217 m!71991))

(assert (=> bs!3217 m!71143))

(declare-fun m!73685 () Bool)

(assert (=> bs!3217 m!73685))

(assert (=> bs!3217 m!71557))

(assert (=> b!73522 d!17577))

(assert (=> b!73522 d!17439))

(assert (=> b!73522 d!17001))

(declare-fun d!17579 () Bool)

(assert (=> d!17579 (= (apply!75 lt!33109 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1153 (getValueByKey!134 (toList!716 lt!33109) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3218 () Bool)

(assert (= bs!3218 d!17579))

(assert (=> bs!3218 m!72099))

(assert (=> bs!3218 m!72839))

(assert (=> bs!3218 m!72839))

(declare-fun m!73687 () Bool)

(assert (=> bs!3218 m!73687))

(assert (=> b!73637 d!17579))

(declare-fun d!17581 () Bool)

(declare-fun c!11209 () Bool)

(assert (=> d!17581 (= c!11209 ((_ is ValueCellFull!893) (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!48650 () V!2945)

(assert (=> d!17581 (= (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48650)))

(declare-fun b!74458 () Bool)

(assert (=> b!74458 (= e!48650 (get!1151 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74459 () Bool)

(assert (=> b!74459 (= e!48650 (get!1152 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17581 c!11209) b!74458))

(assert (= (and d!17581 (not c!11209)) b!74459))

(assert (=> b!74458 m!72203))

(assert (=> b!74458 m!71147))

(declare-fun m!73689 () Bool)

(assert (=> b!74458 m!73689))

(assert (=> b!74459 m!72203))

(assert (=> b!74459 m!71147))

(declare-fun m!73691 () Bool)

(assert (=> b!74459 m!73691))

(assert (=> b!73637 d!17581))

(declare-fun b!74460 () Bool)

(declare-fun e!48655 () List!1474)

(assert (=> b!74460 (= e!48655 (insertStrictlySorted!54 (t!5023 (t!5023 (toList!716 lt!32489))) (_1!1071 lt!32492) (_2!1071 lt!32492)))))

(declare-fun b!74461 () Bool)

(declare-fun c!11211 () Bool)

(declare-fun c!11210 () Bool)

(assert (=> b!74461 (= e!48655 (ite c!11211 (t!5023 (t!5023 (toList!716 lt!32489))) (ite c!11210 (Cons!1470 (h!2057 (t!5023 (toList!716 lt!32489))) (t!5023 (t!5023 (toList!716 lt!32489)))) Nil!1471)))))

(declare-fun bm!6570 () Bool)

(declare-fun call!6574 () List!1474)

(declare-fun call!6575 () List!1474)

(assert (=> bm!6570 (= call!6574 call!6575)))

(declare-fun b!74462 () Bool)

(declare-fun e!48654 () Bool)

(declare-fun lt!33518 () List!1474)

(assert (=> b!74462 (= e!48654 (contains!721 lt!33518 (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun b!74463 () Bool)

(declare-fun e!48651 () List!1474)

(assert (=> b!74463 (= e!48651 call!6574)))

(declare-fun b!74464 () Bool)

(declare-fun e!48652 () List!1474)

(declare-fun e!48653 () List!1474)

(assert (=> b!74464 (= e!48652 e!48653)))

(assert (=> b!74464 (= c!11211 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32489))) (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32489)))) (_1!1071 lt!32492))))))

(declare-fun d!17583 () Bool)

(assert (=> d!17583 e!48654))

(declare-fun res!39382 () Bool)

(assert (=> d!17583 (=> (not res!39382) (not e!48654))))

(assert (=> d!17583 (= res!39382 (isStrictlySorted!279 lt!33518))))

(assert (=> d!17583 (= lt!33518 e!48652)))

(declare-fun c!11212 () Bool)

(assert (=> d!17583 (= c!11212 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32489))) (bvslt (_1!1071 (h!2057 (t!5023 (toList!716 lt!32489)))) (_1!1071 lt!32492))))))

(assert (=> d!17583 (isStrictlySorted!279 (t!5023 (toList!716 lt!32489)))))

(assert (=> d!17583 (= (insertStrictlySorted!54 (t!5023 (toList!716 lt!32489)) (_1!1071 lt!32492) (_2!1071 lt!32492)) lt!33518)))

(declare-fun bm!6571 () Bool)

(declare-fun call!6573 () List!1474)

(assert (=> bm!6571 (= call!6573 ($colon$colon!65 e!48655 (ite c!11212 (h!2057 (t!5023 (toList!716 lt!32489))) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492)))))))

(declare-fun c!11213 () Bool)

(assert (=> bm!6571 (= c!11213 c!11212)))

(declare-fun b!74465 () Bool)

(assert (=> b!74465 (= e!48653 call!6575)))

(declare-fun b!74466 () Bool)

(assert (=> b!74466 (= e!48651 call!6574)))

(declare-fun b!74467 () Bool)

(assert (=> b!74467 (= c!11210 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32489))) (bvsgt (_1!1071 (h!2057 (t!5023 (toList!716 lt!32489)))) (_1!1071 lt!32492))))))

(assert (=> b!74467 (= e!48653 e!48651)))

(declare-fun b!74468 () Bool)

(assert (=> b!74468 (= e!48652 call!6573)))

(declare-fun bm!6572 () Bool)

(assert (=> bm!6572 (= call!6575 call!6573)))

(declare-fun b!74469 () Bool)

(declare-fun res!39383 () Bool)

(assert (=> b!74469 (=> (not res!39383) (not e!48654))))

(assert (=> b!74469 (= res!39383 (containsKey!137 lt!33518 (_1!1071 lt!32492)))))

(assert (= (and d!17583 c!11212) b!74468))

(assert (= (and d!17583 (not c!11212)) b!74464))

(assert (= (and b!74464 c!11211) b!74465))

(assert (= (and b!74464 (not c!11211)) b!74467))

(assert (= (and b!74467 c!11210) b!74463))

(assert (= (and b!74467 (not c!11210)) b!74466))

(assert (= (or b!74463 b!74466) bm!6570))

(assert (= (or b!74465 bm!6570) bm!6572))

(assert (= (or b!74468 bm!6572) bm!6571))

(assert (= (and bm!6571 c!11213) b!74460))

(assert (= (and bm!6571 (not c!11213)) b!74461))

(assert (= (and d!17583 res!39382) b!74469))

(assert (= (and b!74469 res!39383) b!74462))

(declare-fun m!73693 () Bool)

(assert (=> b!74460 m!73693))

(declare-fun m!73695 () Bool)

(assert (=> b!74462 m!73695))

(declare-fun m!73697 () Bool)

(assert (=> d!17583 m!73697))

(declare-fun m!73699 () Bool)

(assert (=> d!17583 m!73699))

(declare-fun m!73701 () Bool)

(assert (=> bm!6571 m!73701))

(declare-fun m!73703 () Bool)

(assert (=> b!74469 m!73703))

(assert (=> b!73427 d!17583))

(assert (=> b!73359 d!17341))

(assert (=> b!73359 d!17285))

(declare-fun d!17585 () Bool)

(declare-fun lt!33519 () Bool)

(assert (=> d!17585 (= lt!33519 (select (content!78 (t!5023 (toList!716 lt!32583))) lt!32485))))

(declare-fun e!48657 () Bool)

(assert (=> d!17585 (= lt!33519 e!48657)))

(declare-fun res!39384 () Bool)

(assert (=> d!17585 (=> (not res!39384) (not e!48657))))

(assert (=> d!17585 (= res!39384 ((_ is Cons!1470) (t!5023 (toList!716 lt!32583))))))

(assert (=> d!17585 (= (contains!721 (t!5023 (toList!716 lt!32583)) lt!32485) lt!33519)))

(declare-fun b!74470 () Bool)

(declare-fun e!48656 () Bool)

(assert (=> b!74470 (= e!48657 e!48656)))

(declare-fun res!39385 () Bool)

(assert (=> b!74470 (=> res!39385 e!48656)))

(assert (=> b!74470 (= res!39385 (= (h!2057 (t!5023 (toList!716 lt!32583))) lt!32485))))

(declare-fun b!74471 () Bool)

(assert (=> b!74471 (= e!48656 (contains!721 (t!5023 (t!5023 (toList!716 lt!32583))) lt!32485))))

(assert (= (and d!17585 res!39384) b!74470))

(assert (= (and b!74470 (not res!39385)) b!74471))

(declare-fun m!73705 () Bool)

(assert (=> d!17585 m!73705))

(declare-fun m!73707 () Bool)

(assert (=> d!17585 m!73707))

(declare-fun m!73709 () Bool)

(assert (=> b!74471 m!73709))

(assert (=> b!73330 d!17585))

(declare-fun b!74473 () Bool)

(declare-fun e!48658 () Option!140)

(declare-fun e!48659 () Option!140)

(assert (=> b!74473 (= e!48658 e!48659)))

(declare-fun c!11215 () Bool)

(assert (=> b!74473 (= c!11215 (and ((_ is Cons!1470) (toList!716 lt!33114)) (not (= (_1!1071 (h!2057 (toList!716 lt!33114))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74472 () Bool)

(assert (=> b!74472 (= e!48658 (Some!139 (_2!1071 (h!2057 (toList!716 lt!33114)))))))

(declare-fun d!17587 () Bool)

(declare-fun c!11214 () Bool)

(assert (=> d!17587 (= c!11214 (and ((_ is Cons!1470) (toList!716 lt!33114)) (= (_1!1071 (h!2057 (toList!716 lt!33114))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17587 (= (getValueByKey!134 (toList!716 lt!33114) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48658)))

(declare-fun b!74474 () Bool)

(assert (=> b!74474 (= e!48659 (getValueByKey!134 (t!5023 (toList!716 lt!33114)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74475 () Bool)

(assert (=> b!74475 (= e!48659 None!138)))

(assert (= (and d!17587 c!11214) b!74472))

(assert (= (and d!17587 (not c!11214)) b!74473))

(assert (= (and b!74473 c!11215) b!74474))

(assert (= (and b!74473 (not c!11215)) b!74475))

(declare-fun m!73711 () Bool)

(assert (=> b!74474 m!73711))

(assert (=> b!73641 d!17587))

(declare-fun d!17589 () Bool)

(declare-fun e!48660 () Bool)

(assert (=> d!17589 e!48660))

(declare-fun res!39386 () Bool)

(assert (=> d!17589 (=> res!39386 e!48660)))

(declare-fun lt!33521 () Bool)

(assert (=> d!17589 (= res!39386 (not lt!33521))))

(declare-fun lt!33523 () Bool)

(assert (=> d!17589 (= lt!33521 lt!33523)))

(declare-fun lt!33522 () Unit!2076)

(declare-fun e!48661 () Unit!2076)

(assert (=> d!17589 (= lt!33522 e!48661)))

(declare-fun c!11216 () Bool)

(assert (=> d!17589 (= c!11216 lt!33523)))

(assert (=> d!17589 (= lt!33523 (containsKey!137 (toList!716 lt!32892) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17589 (= (contains!720 lt!32892 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) lt!33521)))

(declare-fun b!74476 () Bool)

(declare-fun lt!33520 () Unit!2076)

(assert (=> b!74476 (= e!48661 lt!33520)))

(assert (=> b!74476 (= lt!33520 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32892) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74476 (isDefined!86 (getValueByKey!134 (toList!716 lt!32892) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74477 () Bool)

(declare-fun Unit!2137 () Unit!2076)

(assert (=> b!74477 (= e!48661 Unit!2137)))

(declare-fun b!74478 () Bool)

(assert (=> b!74478 (= e!48660 (isDefined!86 (getValueByKey!134 (toList!716 lt!32892) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17589 c!11216) b!74476))

(assert (= (and d!17589 (not c!11216)) b!74477))

(assert (= (and d!17589 (not res!39386)) b!74478))

(assert (=> d!17589 m!71603))

(declare-fun m!73713 () Bool)

(assert (=> d!17589 m!73713))

(assert (=> b!74476 m!71603))

(declare-fun m!73715 () Bool)

(assert (=> b!74476 m!73715))

(assert (=> b!74476 m!71603))

(declare-fun m!73717 () Bool)

(assert (=> b!74476 m!73717))

(assert (=> b!74476 m!73717))

(declare-fun m!73719 () Bool)

(assert (=> b!74476 m!73719))

(assert (=> b!74478 m!71603))

(assert (=> b!74478 m!73717))

(assert (=> b!74478 m!73717))

(assert (=> b!74478 m!73719))

(assert (=> b!73442 d!17589))

(declare-fun d!17591 () Bool)

(declare-fun e!48662 () Bool)

(assert (=> d!17591 e!48662))

(declare-fun res!39387 () Bool)

(assert (=> d!17591 (=> res!39387 e!48662)))

(declare-fun lt!33525 () Bool)

(assert (=> d!17591 (= res!39387 (not lt!33525))))

(declare-fun lt!33527 () Bool)

(assert (=> d!17591 (= lt!33525 lt!33527)))

(declare-fun lt!33526 () Unit!2076)

(declare-fun e!48663 () Unit!2076)

(assert (=> d!17591 (= lt!33526 e!48663)))

(declare-fun c!11217 () Bool)

(assert (=> d!17591 (= c!11217 lt!33527)))

(assert (=> d!17591 (= lt!33527 (containsKey!137 (toList!716 lt!33109) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17591 (= (contains!720 lt!33109 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33525)))

(declare-fun b!74479 () Bool)

(declare-fun lt!33524 () Unit!2076)

(assert (=> b!74479 (= e!48663 lt!33524)))

(assert (=> b!74479 (= lt!33524 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33109) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74479 (isDefined!86 (getValueByKey!134 (toList!716 lt!33109) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74480 () Bool)

(declare-fun Unit!2138 () Unit!2076)

(assert (=> b!74480 (= e!48663 Unit!2138)))

(declare-fun b!74481 () Bool)

(assert (=> b!74481 (= e!48662 (isDefined!86 (getValueByKey!134 (toList!716 lt!33109) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17591 c!11217) b!74479))

(assert (= (and d!17591 (not c!11217)) b!74480))

(assert (= (and d!17591 (not res!39387)) b!74481))

(declare-fun m!73721 () Bool)

(assert (=> d!17591 m!73721))

(declare-fun m!73723 () Bool)

(assert (=> b!74479 m!73723))

(declare-fun m!73725 () Bool)

(assert (=> b!74479 m!73725))

(assert (=> b!74479 m!73725))

(declare-fun m!73727 () Bool)

(assert (=> b!74479 m!73727))

(assert (=> b!74481 m!73725))

(assert (=> b!74481 m!73725))

(assert (=> b!74481 m!73727))

(assert (=> d!17047 d!17591))

(assert (=> d!17047 d!16851))

(declare-fun b!74483 () Bool)

(declare-fun e!48664 () Option!140)

(declare-fun e!48665 () Option!140)

(assert (=> b!74483 (= e!48664 e!48665)))

(declare-fun c!11219 () Bool)

(assert (=> b!74483 (= c!11219 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32590))) (not (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32590)))) (_1!1071 lt!32492)))))))

(declare-fun b!74482 () Bool)

(assert (=> b!74482 (= e!48664 (Some!139 (_2!1071 (h!2057 (t!5023 (toList!716 lt!32590))))))))

(declare-fun d!17593 () Bool)

(declare-fun c!11218 () Bool)

(assert (=> d!17593 (= c!11218 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32590))) (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32590)))) (_1!1071 lt!32492))))))

(assert (=> d!17593 (= (getValueByKey!134 (t!5023 (toList!716 lt!32590)) (_1!1071 lt!32492)) e!48664)))

(declare-fun b!74484 () Bool)

(assert (=> b!74484 (= e!48665 (getValueByKey!134 (t!5023 (t!5023 (toList!716 lt!32590))) (_1!1071 lt!32492)))))

(declare-fun b!74485 () Bool)

(assert (=> b!74485 (= e!48665 None!138)))

(assert (= (and d!17593 c!11218) b!74482))

(assert (= (and d!17593 (not c!11218)) b!74483))

(assert (= (and b!74483 c!11219) b!74484))

(assert (= (and b!74483 (not c!11219)) b!74485))

(declare-fun m!73729 () Bool)

(assert (=> b!74484 m!73729))

(assert (=> b!73553 d!17593))

(declare-fun d!17595 () Bool)

(declare-fun e!48666 () Bool)

(assert (=> d!17595 e!48666))

(declare-fun res!39388 () Bool)

(assert (=> d!17595 (=> res!39388 e!48666)))

(declare-fun lt!33529 () Bool)

(assert (=> d!17595 (= res!39388 (not lt!33529))))

(declare-fun lt!33531 () Bool)

(assert (=> d!17595 (= lt!33529 lt!33531)))

(declare-fun lt!33530 () Unit!2076)

(declare-fun e!48667 () Unit!2076)

(assert (=> d!17595 (= lt!33530 e!48667)))

(declare-fun c!11220 () Bool)

(assert (=> d!17595 (= c!11220 lt!33531)))

(assert (=> d!17595 (= lt!33531 (containsKey!137 (toList!716 lt!32935) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17595 (= (contains!720 lt!32935 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33529)))

(declare-fun b!74486 () Bool)

(declare-fun lt!33528 () Unit!2076)

(assert (=> b!74486 (= e!48667 lt!33528)))

(assert (=> b!74486 (= lt!33528 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32935) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> b!74486 (isDefined!86 (getValueByKey!134 (toList!716 lt!32935) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74487 () Bool)

(declare-fun Unit!2139 () Unit!2076)

(assert (=> b!74487 (= e!48667 Unit!2139)))

(declare-fun b!74488 () Bool)

(assert (=> b!74488 (= e!48666 (isDefined!86 (getValueByKey!134 (toList!716 lt!32935) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17595 c!11220) b!74486))

(assert (= (and d!17595 (not c!11220)) b!74487))

(assert (= (and d!17595 (not res!39388)) b!74488))

(declare-fun m!73731 () Bool)

(assert (=> d!17595 m!73731))

(declare-fun m!73733 () Bool)

(assert (=> b!74486 m!73733))

(assert (=> b!74486 m!71951))

(assert (=> b!74486 m!71951))

(declare-fun m!73735 () Bool)

(assert (=> b!74486 m!73735))

(assert (=> b!74488 m!71951))

(assert (=> b!74488 m!71951))

(assert (=> b!74488 m!73735))

(assert (=> d!16993 d!17595))

(declare-fun b!74490 () Bool)

(declare-fun e!48668 () Option!140)

(declare-fun e!48669 () Option!140)

(assert (=> b!74490 (= e!48668 e!48669)))

(declare-fun c!11222 () Bool)

(assert (=> b!74490 (= c!11222 (and ((_ is Cons!1470) lt!32936) (not (= (_1!1071 (h!2057 lt!32936)) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74489 () Bool)

(assert (=> b!74489 (= e!48668 (Some!139 (_2!1071 (h!2057 lt!32936))))))

(declare-fun c!11221 () Bool)

(declare-fun d!17597 () Bool)

(assert (=> d!17597 (= c!11221 (and ((_ is Cons!1470) lt!32936) (= (_1!1071 (h!2057 lt!32936)) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17597 (= (getValueByKey!134 lt!32936 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48668)))

(declare-fun b!74491 () Bool)

(assert (=> b!74491 (= e!48669 (getValueByKey!134 (t!5023 lt!32936) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74492 () Bool)

(assert (=> b!74492 (= e!48669 None!138)))

(assert (= (and d!17597 c!11221) b!74489))

(assert (= (and d!17597 (not c!11221)) b!74490))

(assert (= (and b!74490 c!11222) b!74491))

(assert (= (and b!74490 (not c!11222)) b!74492))

(declare-fun m!73737 () Bool)

(assert (=> b!74491 m!73737))

(assert (=> d!16993 d!17597))

(declare-fun d!17599 () Bool)

(assert (=> d!17599 (= (getValueByKey!134 lt!32936 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!33532 () Unit!2076)

(assert (=> d!17599 (= lt!33532 (choose!419 lt!32936 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun e!48670 () Bool)

(assert (=> d!17599 e!48670))

(declare-fun res!39389 () Bool)

(assert (=> d!17599 (=> (not res!39389) (not e!48670))))

(assert (=> d!17599 (= res!39389 (isStrictlySorted!279 lt!32936))))

(assert (=> d!17599 (= (lemmaContainsTupThenGetReturnValue!51 lt!32936 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33532)))

(declare-fun b!74493 () Bool)

(declare-fun res!39390 () Bool)

(assert (=> b!74493 (=> (not res!39390) (not e!48670))))

(assert (=> b!74493 (= res!39390 (containsKey!137 lt!32936 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74494 () Bool)

(assert (=> b!74494 (= e!48670 (contains!721 lt!32936 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17599 res!39389) b!74493))

(assert (= (and b!74493 res!39390) b!74494))

(assert (=> d!17599 m!71945))

(declare-fun m!73739 () Bool)

(assert (=> d!17599 m!73739))

(declare-fun m!73741 () Bool)

(assert (=> d!17599 m!73741))

(declare-fun m!73743 () Bool)

(assert (=> b!74493 m!73743))

(declare-fun m!73745 () Bool)

(assert (=> b!74494 m!73745))

(assert (=> d!16993 d!17599))

(declare-fun b!74495 () Bool)

(declare-fun e!48675 () List!1474)

(assert (=> b!74495 (= e!48675 (insertStrictlySorted!54 (t!5023 (toList!716 lt!32668)) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74496 () Bool)

(declare-fun c!11224 () Bool)

(declare-fun c!11223 () Bool)

(assert (=> b!74496 (= e!48675 (ite c!11224 (t!5023 (toList!716 lt!32668)) (ite c!11223 (Cons!1470 (h!2057 (toList!716 lt!32668)) (t!5023 (toList!716 lt!32668))) Nil!1471)))))

(declare-fun bm!6573 () Bool)

(declare-fun call!6577 () List!1474)

(declare-fun call!6578 () List!1474)

(assert (=> bm!6573 (= call!6577 call!6578)))

(declare-fun e!48674 () Bool)

(declare-fun lt!33533 () List!1474)

(declare-fun b!74497 () Bool)

(assert (=> b!74497 (= e!48674 (contains!721 lt!33533 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!74498 () Bool)

(declare-fun e!48671 () List!1474)

(assert (=> b!74498 (= e!48671 call!6577)))

(declare-fun b!74499 () Bool)

(declare-fun e!48672 () List!1474)

(declare-fun e!48673 () List!1474)

(assert (=> b!74499 (= e!48672 e!48673)))

(assert (=> b!74499 (= c!11224 (and ((_ is Cons!1470) (toList!716 lt!32668)) (= (_1!1071 (h!2057 (toList!716 lt!32668))) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun d!17601 () Bool)

(assert (=> d!17601 e!48674))

(declare-fun res!39391 () Bool)

(assert (=> d!17601 (=> (not res!39391) (not e!48674))))

(assert (=> d!17601 (= res!39391 (isStrictlySorted!279 lt!33533))))

(assert (=> d!17601 (= lt!33533 e!48672)))

(declare-fun c!11225 () Bool)

(assert (=> d!17601 (= c!11225 (and ((_ is Cons!1470) (toList!716 lt!32668)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32668))) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17601 (isStrictlySorted!279 (toList!716 lt!32668))))

(assert (=> d!17601 (= (insertStrictlySorted!54 (toList!716 lt!32668) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33533)))

(declare-fun call!6576 () List!1474)

(declare-fun bm!6574 () Bool)

(assert (=> bm!6574 (= call!6576 ($colon$colon!65 e!48675 (ite c!11225 (h!2057 (toList!716 lt!32668)) (tuple2!2121 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun c!11226 () Bool)

(assert (=> bm!6574 (= c!11226 c!11225)))

(declare-fun b!74500 () Bool)

(assert (=> b!74500 (= e!48673 call!6578)))

(declare-fun b!74501 () Bool)

(assert (=> b!74501 (= e!48671 call!6577)))

(declare-fun b!74502 () Bool)

(assert (=> b!74502 (= c!11223 (and ((_ is Cons!1470) (toList!716 lt!32668)) (bvsgt (_1!1071 (h!2057 (toList!716 lt!32668))) (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> b!74502 (= e!48673 e!48671)))

(declare-fun b!74503 () Bool)

(assert (=> b!74503 (= e!48672 call!6576)))

(declare-fun bm!6575 () Bool)

(assert (=> bm!6575 (= call!6578 call!6576)))

(declare-fun b!74504 () Bool)

(declare-fun res!39392 () Bool)

(assert (=> b!74504 (=> (not res!39392) (not e!48674))))

(assert (=> b!74504 (= res!39392 (containsKey!137 lt!33533 (_1!1071 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (= (and d!17601 c!11225) b!74503))

(assert (= (and d!17601 (not c!11225)) b!74499))

(assert (= (and b!74499 c!11224) b!74500))

(assert (= (and b!74499 (not c!11224)) b!74502))

(assert (= (and b!74502 c!11223) b!74498))

(assert (= (and b!74502 (not c!11223)) b!74501))

(assert (= (or b!74498 b!74501) bm!6573))

(assert (= (or b!74500 bm!6573) bm!6575))

(assert (= (or b!74503 bm!6575) bm!6574))

(assert (= (and bm!6574 c!11226) b!74495))

(assert (= (and bm!6574 (not c!11226)) b!74496))

(assert (= (and d!17601 res!39391) b!74504))

(assert (= (and b!74504 res!39392) b!74497))

(declare-fun m!73747 () Bool)

(assert (=> b!74495 m!73747))

(declare-fun m!73749 () Bool)

(assert (=> b!74497 m!73749))

(declare-fun m!73751 () Bool)

(assert (=> d!17601 m!73751))

(declare-fun m!73753 () Bool)

(assert (=> d!17601 m!73753))

(declare-fun m!73755 () Bool)

(assert (=> bm!6574 m!73755))

(declare-fun m!73757 () Bool)

(assert (=> b!74504 m!73757))

(assert (=> d!16993 d!17601))

(assert (=> bm!6452 d!16947))

(declare-fun d!17603 () Bool)

(declare-fun res!39393 () Bool)

(declare-fun e!48676 () Bool)

(assert (=> d!17603 (=> res!39393 e!48676)))

(assert (=> d!17603 (= res!39393 (and ((_ is Cons!1470) lt!32810) (= (_1!1071 (h!2057 lt!32810)) (_1!1071 lt!32485))))))

(assert (=> d!17603 (= (containsKey!137 lt!32810 (_1!1071 lt!32485)) e!48676)))

(declare-fun b!74505 () Bool)

(declare-fun e!48677 () Bool)

(assert (=> b!74505 (= e!48676 e!48677)))

(declare-fun res!39394 () Bool)

(assert (=> b!74505 (=> (not res!39394) (not e!48677))))

(assert (=> b!74505 (= res!39394 (and (or (not ((_ is Cons!1470) lt!32810)) (bvsle (_1!1071 (h!2057 lt!32810)) (_1!1071 lt!32485))) ((_ is Cons!1470) lt!32810) (bvslt (_1!1071 (h!2057 lt!32810)) (_1!1071 lt!32485))))))

(declare-fun b!74506 () Bool)

(assert (=> b!74506 (= e!48677 (containsKey!137 (t!5023 lt!32810) (_1!1071 lt!32485)))))

(assert (= (and d!17603 (not res!39393)) b!74505))

(assert (= (and b!74505 res!39394) b!74506))

(declare-fun m!73759 () Bool)

(assert (=> b!74506 m!73759))

(assert (=> b!73316 d!17603))

(declare-fun b!74508 () Bool)

(declare-fun e!48678 () Option!140)

(declare-fun e!48679 () Option!140)

(assert (=> b!74508 (= e!48678 e!48679)))

(declare-fun c!11228 () Bool)

(assert (=> b!74508 (= c!11228 (and ((_ is Cons!1470) (toList!716 lt!32930)) (not (= (_1!1071 (h!2057 (toList!716 lt!32930))) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74507 () Bool)

(assert (=> b!74507 (= e!48678 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32930)))))))

(declare-fun c!11227 () Bool)

(declare-fun d!17605 () Bool)

(assert (=> d!17605 (= c!11227 (and ((_ is Cons!1470) (toList!716 lt!32930)) (= (_1!1071 (h!2057 (toList!716 lt!32930))) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17605 (= (getValueByKey!134 (toList!716 lt!32930) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48678)))

(declare-fun b!74509 () Bool)

(assert (=> b!74509 (= e!48679 (getValueByKey!134 (t!5023 (toList!716 lt!32930)) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74510 () Bool)

(assert (=> b!74510 (= e!48679 None!138)))

(assert (= (and d!17605 c!11227) b!74507))

(assert (= (and d!17605 (not c!11227)) b!74508))

(assert (= (and b!74508 c!11228) b!74509))

(assert (= (and b!74508 (not c!11228)) b!74510))

(declare-fun m!73761 () Bool)

(assert (=> b!74509 m!73761))

(assert (=> b!73471 d!17605))

(assert (=> b!73523 d!16945))

(declare-fun d!17607 () Bool)

(assert (=> d!17607 (= (apply!75 lt!32892 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1153 (getValueByKey!134 (toList!716 lt!32892) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3219 () Bool)

(assert (= bs!3219 d!17607))

(assert (=> bs!3219 m!71603))

(assert (=> bs!3219 m!73717))

(assert (=> bs!3219 m!73717))

(declare-fun m!73763 () Bool)

(assert (=> bs!3219 m!73763))

(assert (=> b!73454 d!17607))

(declare-fun c!11229 () Bool)

(declare-fun d!17609 () Bool)

(assert (=> d!17609 (= c!11229 ((_ is ValueCellFull!893) (select (arr!1851 (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775)) #b00000000000000000000000000000000)))))

(declare-fun e!48680 () V!2945)

(assert (=> d!17609 (= (get!1149 (select (arr!1851 (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48680)))

(declare-fun b!74511 () Bool)

(assert (=> b!74511 (= e!48680 (get!1151 (select (arr!1851 (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74512 () Bool)

(assert (=> b!74512 (= e!48680 (get!1152 (select (arr!1851 (ite (or c!10868 c!10859) (_values!2195 newMap!16) lt!32775)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17609 c!11229) b!74511))

(assert (= (and d!17609 (not c!11229)) b!74512))

(assert (=> b!74511 m!71851))

(assert (=> b!74511 m!71663))

(declare-fun m!73765 () Bool)

(assert (=> b!74511 m!73765))

(assert (=> b!74512 m!71851))

(assert (=> b!74512 m!71663))

(declare-fun m!73767 () Bool)

(assert (=> b!74512 m!73767))

(assert (=> b!73454 d!17609))

(declare-fun d!17611 () Bool)

(declare-fun res!39395 () Bool)

(declare-fun e!48681 () Bool)

(assert (=> d!17611 (=> res!39395 e!48681)))

(assert (=> d!17611 (= res!39395 (or ((_ is Nil!1471) lt!32886) ((_ is Nil!1471) (t!5023 lt!32886))))))

(assert (=> d!17611 (= (isStrictlySorted!279 lt!32886) e!48681)))

(declare-fun b!74513 () Bool)

(declare-fun e!48682 () Bool)

(assert (=> b!74513 (= e!48681 e!48682)))

(declare-fun res!39396 () Bool)

(assert (=> b!74513 (=> (not res!39396) (not e!48682))))

(assert (=> b!74513 (= res!39396 (bvslt (_1!1071 (h!2057 lt!32886)) (_1!1071 (h!2057 (t!5023 lt!32886)))))))

(declare-fun b!74514 () Bool)

(assert (=> b!74514 (= e!48682 (isStrictlySorted!279 (t!5023 lt!32886)))))

(assert (= (and d!17611 (not res!39395)) b!74513))

(assert (= (and b!74513 res!39396) b!74514))

(declare-fun m!73769 () Bool)

(assert (=> b!74514 m!73769))

(assert (=> d!16957 d!17611))

(declare-fun d!17613 () Bool)

(declare-fun res!39397 () Bool)

(declare-fun e!48683 () Bool)

(assert (=> d!17613 (=> res!39397 e!48683)))

(assert (=> d!17613 (= res!39397 (or ((_ is Nil!1471) (toList!716 lt!32489)) ((_ is Nil!1471) (t!5023 (toList!716 lt!32489)))))))

(assert (=> d!17613 (= (isStrictlySorted!279 (toList!716 lt!32489)) e!48683)))

(declare-fun b!74515 () Bool)

(declare-fun e!48684 () Bool)

(assert (=> b!74515 (= e!48683 e!48684)))

(declare-fun res!39398 () Bool)

(assert (=> b!74515 (=> (not res!39398) (not e!48684))))

(assert (=> b!74515 (= res!39398 (bvslt (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 (h!2057 (t!5023 (toList!716 lt!32489))))))))

(declare-fun b!74516 () Bool)

(assert (=> b!74516 (= e!48684 (isStrictlySorted!279 (t!5023 (toList!716 lt!32489))))))

(assert (= (and d!17613 (not res!39397)) b!74515))

(assert (= (and b!74515 res!39398) b!74516))

(assert (=> b!74516 m!73699))

(assert (=> d!16957 d!17613))

(declare-fun d!17615 () Bool)

(declare-fun res!39400 () Bool)

(declare-fun e!48685 () Bool)

(assert (=> d!17615 (=> (not res!39400) (not e!48685))))

(assert (=> d!17615 (= res!39400 (validMask!0 (mask!6179 (_2!1072 lt!32783))))))

(assert (=> d!17615 (= (simpleValid!51 (_2!1072 lt!32783)) e!48685)))

(declare-fun b!74519 () Bool)

(declare-fun res!39399 () Bool)

(assert (=> b!74519 (=> (not res!39399) (not e!48685))))

(assert (=> b!74519 (= res!39399 (= (size!2094 (_2!1072 lt!32783)) (bvadd (_size!396 (_2!1072 lt!32783)) (bvsdiv (bvadd (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!74520 () Bool)

(assert (=> b!74520 (= e!48685 (and (bvsge (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000000) (bvsle (extraKeys!2071 (_2!1072 lt!32783)) #b00000000000000000000000000000011) (bvsge (_vacant!396 (_2!1072 lt!32783)) #b00000000000000000000000000000000)))))

(declare-fun b!74517 () Bool)

(declare-fun res!39402 () Bool)

(assert (=> b!74517 (=> (not res!39402) (not e!48685))))

(assert (=> b!74517 (= res!39402 (and (= (size!2089 (_values!2195 (_2!1072 lt!32783))) (bvadd (mask!6179 (_2!1072 lt!32783)) #b00000000000000000000000000000001)) (= (size!2088 (_keys!3864 (_2!1072 lt!32783))) (size!2089 (_values!2195 (_2!1072 lt!32783)))) (bvsge (_size!396 (_2!1072 lt!32783)) #b00000000000000000000000000000000) (bvsle (_size!396 (_2!1072 lt!32783)) (bvadd (mask!6179 (_2!1072 lt!32783)) #b00000000000000000000000000000001))))))

(declare-fun b!74518 () Bool)

(declare-fun res!39401 () Bool)

(assert (=> b!74518 (=> (not res!39401) (not e!48685))))

(assert (=> b!74518 (= res!39401 (bvsge (size!2094 (_2!1072 lt!32783)) (_size!396 (_2!1072 lt!32783))))))

(assert (= (and d!17615 res!39400) b!74517))

(assert (= (and b!74517 res!39402) b!74518))

(assert (= (and b!74518 res!39401) b!74519))

(assert (= (and b!74519 res!39399) b!74520))

(assert (=> d!17615 m!72903))

(declare-fun m!73771 () Bool)

(assert (=> b!74519 m!73771))

(assert (=> b!74518 m!73771))

(assert (=> d!17073 d!17615))

(declare-fun d!17617 () Bool)

(declare-fun res!39403 () Bool)

(declare-fun e!48686 () Bool)

(assert (=> d!17617 (=> res!39403 e!48686)))

(assert (=> d!17617 (= res!39403 (= (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!17617 (= (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!48686)))

(declare-fun b!74521 () Bool)

(declare-fun e!48687 () Bool)

(assert (=> b!74521 (= e!48686 e!48687)))

(declare-fun res!39404 () Bool)

(assert (=> b!74521 (=> (not res!39404) (not e!48687))))

(assert (=> b!74521 (= res!39404 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!74522 () Bool)

(assert (=> b!74522 (= e!48687 (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!17617 (not res!39403)) b!74521))

(assert (= (and b!74521 res!39404) b!74522))

(assert (=> d!17617 m!72427))

(assert (=> b!74522 m!71143))

(declare-fun m!73773 () Bool)

(assert (=> b!74522 m!73773))

(assert (=> b!73583 d!17617))

(assert (=> b!73622 d!17377))

(assert (=> b!73622 d!17379))

(declare-fun d!17619 () Bool)

(assert (=> d!17619 (= (isEmpty!323 (getValueByKey!134 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))) (not ((_ is Some!139) (getValueByKey!134 (toList!716 lt!32488) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))))

(assert (=> d!16895 d!17619))

(assert (=> b!73389 d!17475))

(assert (=> b!73389 d!17477))

(assert (=> bm!6486 d!17109))

(declare-fun d!17621 () Bool)

(assert (=> d!17621 (= ($colon$colon!65 e!48181 (ite c!10995 (h!2057 (toList!716 (+!93 lt!32489 lt!32485))) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492)))) (Cons!1470 (ite c!10995 (h!2057 (toList!716 (+!93 lt!32489 lt!32485))) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))) e!48181))))

(assert (=> bm!6492 d!17621))

(assert (=> d!16979 d!16969))

(assert (=> d!16979 d!16973))

(assert (=> d!16979 d!16993))

(declare-fun d!17623 () Bool)

(declare-fun e!48688 () Bool)

(assert (=> d!17623 e!48688))

(declare-fun res!39405 () Bool)

(assert (=> d!17623 (=> res!39405 e!48688)))

(declare-fun lt!33535 () Bool)

(assert (=> d!17623 (= res!39405 (not lt!33535))))

(declare-fun lt!33537 () Bool)

(assert (=> d!17623 (= lt!33535 lt!33537)))

(declare-fun lt!33536 () Unit!2076)

(declare-fun e!48689 () Unit!2076)

(assert (=> d!17623 (= lt!33536 e!48689)))

(declare-fun c!11230 () Bool)

(assert (=> d!17623 (= c!11230 lt!33537)))

(assert (=> d!17623 (= lt!33537 (containsKey!137 (toList!716 lt!32668) lt!32682))))

(assert (=> d!17623 (= (contains!720 lt!32668 lt!32682) lt!33535)))

(declare-fun b!74523 () Bool)

(declare-fun lt!33534 () Unit!2076)

(assert (=> b!74523 (= e!48689 lt!33534)))

(assert (=> b!74523 (= lt!33534 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32668) lt!32682))))

(assert (=> b!74523 (isDefined!86 (getValueByKey!134 (toList!716 lt!32668) lt!32682))))

(declare-fun b!74524 () Bool)

(declare-fun Unit!2140 () Unit!2076)

(assert (=> b!74524 (= e!48689 Unit!2140)))

(declare-fun b!74525 () Bool)

(assert (=> b!74525 (= e!48688 (isDefined!86 (getValueByKey!134 (toList!716 lt!32668) lt!32682)))))

(assert (= (and d!17623 c!11230) b!74523))

(assert (= (and d!17623 (not c!11230)) b!74524))

(assert (= (and d!17623 (not res!39405)) b!74525))

(declare-fun m!73775 () Bool)

(assert (=> d!17623 m!73775))

(declare-fun m!73777 () Bool)

(assert (=> b!74523 m!73777))

(assert (=> b!74523 m!71875))

(assert (=> b!74523 m!71875))

(declare-fun m!73779 () Bool)

(assert (=> b!74523 m!73779))

(assert (=> b!74525 m!71875))

(assert (=> b!74525 m!71875))

(assert (=> b!74525 m!73779))

(assert (=> d!16979 d!17623))

(declare-fun d!17625 () Bool)

(assert (=> d!17625 (= (apply!75 (+!93 lt!32668 (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32682) (apply!75 lt!32668 lt!32682))))

(assert (=> d!17625 true))

(declare-fun _$34!811 () Unit!2076)

(assert (=> d!17625 (= (choose!426 lt!32668 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32682) _$34!811)))

(declare-fun bs!3220 () Bool)

(assert (= bs!3220 d!17625))

(assert (=> bs!3220 m!71407))

(assert (=> bs!3220 m!71407))

(assert (=> bs!3220 m!71409))

(assert (=> bs!3220 m!71415))

(assert (=> d!16979 d!17625))

(assert (=> b!73326 d!17105))

(assert (=> b!73651 d!17483))

(assert (=> b!73651 d!17017))

(declare-fun d!17627 () Bool)

(declare-fun res!39406 () Bool)

(declare-fun e!48690 () Bool)

(assert (=> d!17627 (=> res!39406 e!48690)))

(assert (=> d!17627 (= res!39406 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32661)))))

(assert (=> d!17627 (= (containsKey!137 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661) e!48690)))

(declare-fun b!74526 () Bool)

(declare-fun e!48691 () Bool)

(assert (=> b!74526 (= e!48690 e!48691)))

(declare-fun res!39407 () Bool)

(assert (=> b!74526 (=> (not res!39407) (not e!48691))))

(assert (=> b!74526 (= res!39407 (and (or (not ((_ is Cons!1470) (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) (bvsle (_1!1071 (h!2057 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32661)) ((_ is Cons!1470) (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (bvslt (_1!1071 (h!2057 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32661)))))

(declare-fun b!74527 () Bool)

(assert (=> b!74527 (= e!48691 (containsKey!137 (t!5023 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) lt!32661))))

(assert (= (and d!17627 (not res!39406)) b!74526))

(assert (= (and b!74526 res!39407) b!74527))

(declare-fun m!73781 () Bool)

(assert (=> b!74527 m!73781))

(assert (=> d!16983 d!17627))

(declare-fun lt!33538 () Bool)

(declare-fun d!17629 () Bool)

(assert (=> d!17629 (= lt!33538 (select (content!78 (toList!716 lt!32854)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!48693 () Bool)

(assert (=> d!17629 (= lt!33538 e!48693)))

(declare-fun res!39408 () Bool)

(assert (=> d!17629 (=> (not res!39408) (not e!48693))))

(assert (=> d!17629 (= res!39408 ((_ is Cons!1470) (toList!716 lt!32854)))))

(assert (=> d!17629 (= (contains!721 (toList!716 lt!32854) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!33538)))

(declare-fun b!74528 () Bool)

(declare-fun e!48692 () Bool)

(assert (=> b!74528 (= e!48693 e!48692)))

(declare-fun res!39409 () Bool)

(assert (=> b!74528 (=> res!39409 e!48692)))

(assert (=> b!74528 (= res!39409 (= (h!2057 (toList!716 lt!32854)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!74529 () Bool)

(assert (=> b!74529 (= e!48692 (contains!721 (t!5023 (toList!716 lt!32854)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17629 res!39408) b!74528))

(assert (= (and b!74528 (not res!39409)) b!74529))

(declare-fun m!73783 () Bool)

(assert (=> d!17629 m!73783))

(declare-fun m!73785 () Bool)

(assert (=> d!17629 m!73785))

(declare-fun m!73787 () Bool)

(assert (=> b!74529 m!73787))

(assert (=> b!73369 d!17629))

(declare-fun d!17631 () Bool)

(declare-fun res!39410 () Bool)

(declare-fun e!48694 () Bool)

(assert (=> d!17631 (=> res!39410 e!48694)))

(assert (=> d!17631 (= res!39410 (and ((_ is Cons!1470) (toList!716 lt!32614)) (= (_1!1071 (h!2057 (toList!716 lt!32614))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17631 (= (containsKey!137 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000) e!48694)))

(declare-fun b!74530 () Bool)

(declare-fun e!48695 () Bool)

(assert (=> b!74530 (= e!48694 e!48695)))

(declare-fun res!39411 () Bool)

(assert (=> b!74530 (=> (not res!39411) (not e!48695))))

(assert (=> b!74530 (= res!39411 (and (or (not ((_ is Cons!1470) (toList!716 lt!32614))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32614))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1470) (toList!716 lt!32614)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32614))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74531 () Bool)

(assert (=> b!74531 (= e!48695 (containsKey!137 (t!5023 (toList!716 lt!32614)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17631 (not res!39410)) b!74530))

(assert (= (and b!74530 res!39411) b!74531))

(declare-fun m!73789 () Bool)

(assert (=> b!74531 m!73789))

(assert (=> d!16891 d!17631))

(declare-fun d!17633 () Bool)

(declare-fun e!48696 () Bool)

(assert (=> d!17633 e!48696))

(declare-fun res!39412 () Bool)

(assert (=> d!17633 (=> res!39412 e!48696)))

(declare-fun lt!33540 () Bool)

(assert (=> d!17633 (= res!39412 (not lt!33540))))

(declare-fun lt!33542 () Bool)

(assert (=> d!17633 (= lt!33540 lt!33542)))

(declare-fun lt!33541 () Unit!2076)

(declare-fun e!48697 () Unit!2076)

(assert (=> d!17633 (= lt!33541 e!48697)))

(declare-fun c!11231 () Bool)

(assert (=> d!17633 (= c!11231 lt!33542)))

(assert (=> d!17633 (= lt!33542 (containsKey!137 (toList!716 lt!32930) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17633 (= (contains!720 lt!32930 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33540)))

(declare-fun b!74532 () Bool)

(declare-fun lt!33539 () Unit!2076)

(assert (=> b!74532 (= e!48697 lt!33539)))

(assert (=> b!74532 (= lt!33539 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32930) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> b!74532 (isDefined!86 (getValueByKey!134 (toList!716 lt!32930) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74533 () Bool)

(declare-fun Unit!2141 () Unit!2076)

(assert (=> b!74533 (= e!48697 Unit!2141)))

(declare-fun b!74534 () Bool)

(assert (=> b!74534 (= e!48696 (isDefined!86 (getValueByKey!134 (toList!716 lt!32930) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17633 c!11231) b!74532))

(assert (= (and d!17633 (not c!11231)) b!74533))

(assert (= (and d!17633 (not res!39412)) b!74534))

(declare-fun m!73791 () Bool)

(assert (=> d!17633 m!73791))

(declare-fun m!73793 () Bool)

(assert (=> b!74532 m!73793))

(assert (=> b!74532 m!71935))

(assert (=> b!74532 m!71935))

(declare-fun m!73795 () Bool)

(assert (=> b!74532 m!73795))

(assert (=> b!74534 m!71935))

(assert (=> b!74534 m!71935))

(assert (=> b!74534 m!73795))

(assert (=> d!16989 d!17633))

(declare-fun b!74536 () Bool)

(declare-fun e!48698 () Option!140)

(declare-fun e!48699 () Option!140)

(assert (=> b!74536 (= e!48698 e!48699)))

(declare-fun c!11233 () Bool)

(assert (=> b!74536 (= c!11233 (and ((_ is Cons!1470) lt!32931) (not (= (_1!1071 (h!2057 lt!32931)) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74535 () Bool)

(assert (=> b!74535 (= e!48698 (Some!139 (_2!1071 (h!2057 lt!32931))))))

(declare-fun d!17635 () Bool)

(declare-fun c!11232 () Bool)

(assert (=> d!17635 (= c!11232 (and ((_ is Cons!1470) lt!32931) (= (_1!1071 (h!2057 lt!32931)) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17635 (= (getValueByKey!134 lt!32931 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48698)))

(declare-fun b!74537 () Bool)

(assert (=> b!74537 (= e!48699 (getValueByKey!134 (t!5023 lt!32931) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74538 () Bool)

(assert (=> b!74538 (= e!48699 None!138)))

(assert (= (and d!17635 c!11232) b!74535))

(assert (= (and d!17635 (not c!11232)) b!74536))

(assert (= (and b!74536 c!11233) b!74537))

(assert (= (and b!74536 (not c!11233)) b!74538))

(declare-fun m!73797 () Bool)

(assert (=> b!74537 m!73797))

(assert (=> d!16989 d!17635))

(declare-fun d!17637 () Bool)

(assert (=> d!17637 (= (getValueByKey!134 lt!32931 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!33543 () Unit!2076)

(assert (=> d!17637 (= lt!33543 (choose!419 lt!32931 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun e!48700 () Bool)

(assert (=> d!17637 e!48700))

(declare-fun res!39413 () Bool)

(assert (=> d!17637 (=> (not res!39413) (not e!48700))))

(assert (=> d!17637 (= res!39413 (isStrictlySorted!279 lt!32931))))

(assert (=> d!17637 (= (lemmaContainsTupThenGetReturnValue!51 lt!32931 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33543)))

(declare-fun b!74539 () Bool)

(declare-fun res!39414 () Bool)

(assert (=> b!74539 (=> (not res!39414) (not e!48700))))

(assert (=> b!74539 (= res!39414 (containsKey!137 lt!32931 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74540 () Bool)

(assert (=> b!74540 (= e!48700 (contains!721 lt!32931 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17637 res!39413) b!74539))

(assert (= (and b!74539 res!39414) b!74540))

(assert (=> d!17637 m!71929))

(declare-fun m!73799 () Bool)

(assert (=> d!17637 m!73799))

(declare-fun m!73801 () Bool)

(assert (=> d!17637 m!73801))

(declare-fun m!73803 () Bool)

(assert (=> b!74539 m!73803))

(declare-fun m!73805 () Bool)

(assert (=> b!74540 m!73805))

(assert (=> d!16989 d!17637))

(declare-fun e!48705 () List!1474)

(declare-fun b!74541 () Bool)

(assert (=> b!74541 (= e!48705 (insertStrictlySorted!54 (t!5023 (toList!716 lt!32676)) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun c!11235 () Bool)

(declare-fun b!74542 () Bool)

(declare-fun c!11234 () Bool)

(assert (=> b!74542 (= e!48705 (ite c!11235 (t!5023 (toList!716 lt!32676)) (ite c!11234 (Cons!1470 (h!2057 (toList!716 lt!32676)) (t!5023 (toList!716 lt!32676))) Nil!1471)))))

(declare-fun bm!6576 () Bool)

(declare-fun call!6580 () List!1474)

(declare-fun call!6581 () List!1474)

(assert (=> bm!6576 (= call!6580 call!6581)))

(declare-fun b!74543 () Bool)

(declare-fun e!48704 () Bool)

(declare-fun lt!33544 () List!1474)

(assert (=> b!74543 (= e!48704 (contains!721 lt!33544 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!74544 () Bool)

(declare-fun e!48701 () List!1474)

(assert (=> b!74544 (= e!48701 call!6580)))

(declare-fun b!74545 () Bool)

(declare-fun e!48702 () List!1474)

(declare-fun e!48703 () List!1474)

(assert (=> b!74545 (= e!48702 e!48703)))

(assert (=> b!74545 (= c!11235 (and ((_ is Cons!1470) (toList!716 lt!32676)) (= (_1!1071 (h!2057 (toList!716 lt!32676))) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun d!17639 () Bool)

(assert (=> d!17639 e!48704))

(declare-fun res!39415 () Bool)

(assert (=> d!17639 (=> (not res!39415) (not e!48704))))

(assert (=> d!17639 (= res!39415 (isStrictlySorted!279 lt!33544))))

(assert (=> d!17639 (= lt!33544 e!48702)))

(declare-fun c!11236 () Bool)

(assert (=> d!17639 (= c!11236 (and ((_ is Cons!1470) (toList!716 lt!32676)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32676))) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17639 (isStrictlySorted!279 (toList!716 lt!32676))))

(assert (=> d!17639 (= (insertStrictlySorted!54 (toList!716 lt!32676) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33544)))

(declare-fun bm!6577 () Bool)

(declare-fun call!6579 () List!1474)

(assert (=> bm!6577 (= call!6579 ($colon$colon!65 e!48705 (ite c!11236 (h!2057 (toList!716 lt!32676)) (tuple2!2121 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun c!11237 () Bool)

(assert (=> bm!6577 (= c!11237 c!11236)))

(declare-fun b!74546 () Bool)

(assert (=> b!74546 (= e!48703 call!6581)))

(declare-fun b!74547 () Bool)

(assert (=> b!74547 (= e!48701 call!6580)))

(declare-fun b!74548 () Bool)

(assert (=> b!74548 (= c!11234 (and ((_ is Cons!1470) (toList!716 lt!32676)) (bvsgt (_1!1071 (h!2057 (toList!716 lt!32676))) (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> b!74548 (= e!48703 e!48701)))

(declare-fun b!74549 () Bool)

(assert (=> b!74549 (= e!48702 call!6579)))

(declare-fun bm!6578 () Bool)

(assert (=> bm!6578 (= call!6581 call!6579)))

(declare-fun b!74550 () Bool)

(declare-fun res!39416 () Bool)

(assert (=> b!74550 (=> (not res!39416) (not e!48704))))

(assert (=> b!74550 (= res!39416 (containsKey!137 lt!33544 (_1!1071 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (= (and d!17639 c!11236) b!74549))

(assert (= (and d!17639 (not c!11236)) b!74545))

(assert (= (and b!74545 c!11235) b!74546))

(assert (= (and b!74545 (not c!11235)) b!74548))

(assert (= (and b!74548 c!11234) b!74544))

(assert (= (and b!74548 (not c!11234)) b!74547))

(assert (= (or b!74544 b!74547) bm!6576))

(assert (= (or b!74546 bm!6576) bm!6578))

(assert (= (or b!74549 bm!6578) bm!6577))

(assert (= (and bm!6577 c!11237) b!74541))

(assert (= (and bm!6577 (not c!11237)) b!74542))

(assert (= (and d!17639 res!39415) b!74550))

(assert (= (and b!74550 res!39416) b!74543))

(declare-fun m!73807 () Bool)

(assert (=> b!74541 m!73807))

(declare-fun m!73809 () Bool)

(assert (=> b!74543 m!73809))

(declare-fun m!73811 () Bool)

(assert (=> d!17639 m!73811))

(declare-fun m!73813 () Bool)

(assert (=> d!17639 m!73813))

(declare-fun m!73815 () Bool)

(assert (=> bm!6577 m!73815))

(declare-fun m!73817 () Bool)

(assert (=> b!74550 m!73817))

(assert (=> d!16989 d!17639))

(declare-fun d!17641 () Bool)

(declare-fun lt!33545 () Bool)

(assert (=> d!17641 (= lt!33545 (select (content!78 lt!32584) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun e!48707 () Bool)

(assert (=> d!17641 (= lt!33545 e!48707)))

(declare-fun res!39417 () Bool)

(assert (=> d!17641 (=> (not res!39417) (not e!48707))))

(assert (=> d!17641 (= res!39417 ((_ is Cons!1470) lt!32584))))

(assert (=> d!17641 (= (contains!721 lt!32584 (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))) lt!33545)))

(declare-fun b!74551 () Bool)

(declare-fun e!48706 () Bool)

(assert (=> b!74551 (= e!48707 e!48706)))

(declare-fun res!39418 () Bool)

(assert (=> b!74551 (=> res!39418 e!48706)))

(assert (=> b!74551 (= res!39418 (= (h!2057 lt!32584) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun b!74552 () Bool)

(assert (=> b!74552 (= e!48706 (contains!721 (t!5023 lt!32584) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(assert (= (and d!17641 res!39417) b!74551))

(assert (= (and b!74551 (not res!39418)) b!74552))

(declare-fun m!73819 () Bool)

(assert (=> d!17641 m!73819))

(declare-fun m!73821 () Bool)

(assert (=> d!17641 m!73821))

(declare-fun m!73823 () Bool)

(assert (=> b!74552 m!73823))

(assert (=> b!73657 d!17641))

(declare-fun d!17643 () Bool)

(declare-fun e!48708 () Bool)

(assert (=> d!17643 e!48708))

(declare-fun res!39419 () Bool)

(assert (=> d!17643 (=> (not res!39419) (not e!48708))))

(declare-fun lt!33548 () ListLongMap!1401)

(assert (=> d!17643 (= res!39419 (contains!720 lt!33548 (_1!1071 (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))))

(declare-fun lt!33549 () List!1474)

(assert (=> d!17643 (= lt!33548 (ListLongMap!1402 lt!33549))))

(declare-fun lt!33547 () Unit!2076)

(declare-fun lt!33546 () Unit!2076)

(assert (=> d!17643 (= lt!33547 lt!33546)))

(assert (=> d!17643 (= (getValueByKey!134 lt!33549 (_1!1071 (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))) (Some!139 (_2!1071 (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))))

(assert (=> d!17643 (= lt!33546 (lemmaContainsTupThenGetReturnValue!51 lt!33549 (_1!1071 (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) (_2!1071 (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))))

(assert (=> d!17643 (= lt!33549 (insertStrictlySorted!54 (toList!716 (ite c!10934 call!6465 (ite c!10936 call!6466 call!6460))) (_1!1071 (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) (_2!1071 (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))))

(assert (=> d!17643 (= (+!93 (ite c!10934 call!6465 (ite c!10936 call!6466 call!6460)) (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) lt!33548)))

(declare-fun b!74553 () Bool)

(declare-fun res!39420 () Bool)

(assert (=> b!74553 (=> (not res!39420) (not e!48708))))

(assert (=> b!74553 (= res!39420 (= (getValueByKey!134 (toList!716 lt!33548) (_1!1071 (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))) (Some!139 (_2!1071 (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))))

(declare-fun b!74554 () Bool)

(assert (=> b!74554 (= e!48708 (contains!721 (toList!716 lt!33548) (ite (or c!10934 c!10936) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(assert (= (and d!17643 res!39419) b!74553))

(assert (= (and b!74553 res!39420) b!74554))

(declare-fun m!73825 () Bool)

(assert (=> d!17643 m!73825))

(declare-fun m!73827 () Bool)

(assert (=> d!17643 m!73827))

(declare-fun m!73829 () Bool)

(assert (=> d!17643 m!73829))

(declare-fun m!73831 () Bool)

(assert (=> d!17643 m!73831))

(declare-fun m!73833 () Bool)

(assert (=> b!74553 m!73833))

(declare-fun m!73835 () Bool)

(assert (=> b!74554 m!73835))

(assert (=> bm!6461 d!17643))

(declare-fun lt!33550 () Bool)

(declare-fun d!17645 () Bool)

(assert (=> d!17645 (= lt!33550 (select (content!78 (toList!716 lt!32935)) (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun e!48710 () Bool)

(assert (=> d!17645 (= lt!33550 e!48710)))

(declare-fun res!39421 () Bool)

(assert (=> d!17645 (=> (not res!39421) (not e!48710))))

(assert (=> d!17645 (= res!39421 ((_ is Cons!1470) (toList!716 lt!32935)))))

(assert (=> d!17645 (= (contains!721 (toList!716 lt!32935) (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!33550)))

(declare-fun b!74555 () Bool)

(declare-fun e!48709 () Bool)

(assert (=> b!74555 (= e!48710 e!48709)))

(declare-fun res!39422 () Bool)

(assert (=> b!74555 (=> res!39422 e!48709)))

(assert (=> b!74555 (= res!39422 (= (h!2057 (toList!716 lt!32935)) (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!74556 () Bool)

(assert (=> b!74556 (= e!48709 (contains!721 (t!5023 (toList!716 lt!32935)) (tuple2!2121 lt!32673 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17645 res!39421) b!74555))

(assert (= (and b!74555 (not res!39422)) b!74556))

(declare-fun m!73837 () Bool)

(assert (=> d!17645 m!73837))

(declare-fun m!73839 () Bool)

(assert (=> d!17645 m!73839))

(declare-fun m!73841 () Bool)

(assert (=> b!74556 m!73841))

(assert (=> b!73475 d!17645))

(declare-fun d!17647 () Bool)

(assert (=> d!17647 (= (apply!75 lt!33035 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1153 (getValueByKey!134 (toList!716 lt!33035) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3221 () Bool)

(assert (= bs!3221 d!17647))

(assert (=> bs!3221 m!71603))

(declare-fun m!73843 () Bool)

(assert (=> bs!3221 m!73843))

(assert (=> bs!3221 m!73843))

(declare-fun m!73845 () Bool)

(assert (=> bs!3221 m!73845))

(assert (=> b!73547 d!17647))

(declare-fun d!17649 () Bool)

(declare-fun c!11238 () Bool)

(assert (=> d!17649 (= c!11238 ((_ is ValueCellFull!893) (select (arr!1851 (_values!2195 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!48711 () V!2945)

(assert (=> d!17649 (= (get!1149 (select (arr!1851 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48711)))

(declare-fun b!74557 () Bool)

(assert (=> b!74557 (= e!48711 (get!1151 (select (arr!1851 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74558 () Bool)

(assert (=> b!74558 (= e!48711 (get!1152 (select (arr!1851 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17649 c!11238) b!74557))

(assert (= (and d!17649 (not c!11238)) b!74558))

(assert (=> b!74557 m!72071))

(assert (=> b!74557 m!71663))

(declare-fun m!73847 () Bool)

(assert (=> b!74557 m!73847))

(assert (=> b!74558 m!72071))

(assert (=> b!74558 m!71663))

(declare-fun m!73849 () Bool)

(assert (=> b!74558 m!73849))

(assert (=> b!73547 d!17649))

(declare-fun d!17651 () Bool)

(assert (=> d!17651 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661))))

(declare-fun lt!33551 () Unit!2076)

(assert (=> d!17651 (= lt!33551 (choose!420 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661))))

(declare-fun e!48712 () Bool)

(assert (=> d!17651 e!48712))

(declare-fun res!39423 () Bool)

(assert (=> d!17651 (=> (not res!39423) (not e!48712))))

(assert (=> d!17651 (= res!39423 (isStrictlySorted!279 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17651 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661) lt!33551)))

(declare-fun b!74559 () Bool)

(assert (=> b!74559 (= e!48712 (containsKey!137 (toList!716 (+!93 lt!32676 (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32661))))

(assert (= (and d!17651 res!39423) b!74559))

(assert (=> d!17651 m!71907))

(assert (=> d!17651 m!71907))

(assert (=> d!17651 m!71909))

(declare-fun m!73851 () Bool)

(assert (=> d!17651 m!73851))

(declare-fun m!73853 () Bool)

(assert (=> d!17651 m!73853))

(assert (=> b!74559 m!71903))

(assert (=> b!73466 d!17651))

(assert (=> b!73466 d!17145))

(assert (=> b!73466 d!17147))

(declare-fun b!74561 () Bool)

(declare-fun e!48713 () Option!140)

(declare-fun e!48714 () Option!140)

(assert (=> b!74561 (= e!48713 e!48714)))

(declare-fun c!11240 () Bool)

(assert (=> b!74561 (= c!11240 (and ((_ is Cons!1470) (toList!716 lt!32911)) (not (= (_1!1071 (h!2057 (toList!716 lt!32911))) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74560 () Bool)

(assert (=> b!74560 (= e!48713 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32911)))))))

(declare-fun c!11239 () Bool)

(declare-fun d!17653 () Bool)

(assert (=> d!17653 (= c!11239 (and ((_ is Cons!1470) (toList!716 lt!32911)) (= (_1!1071 (h!2057 (toList!716 lt!32911))) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17653 (= (getValueByKey!134 (toList!716 lt!32911) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48713)))

(declare-fun b!74562 () Bool)

(assert (=> b!74562 (= e!48714 (getValueByKey!134 (t!5023 (toList!716 lt!32911)) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74563 () Bool)

(assert (=> b!74563 (= e!48714 None!138)))

(assert (= (and d!17653 c!11239) b!74560))

(assert (= (and d!17653 (not c!11239)) b!74561))

(assert (= (and b!74561 c!11240) b!74562))

(assert (= (and b!74561 (not c!11240)) b!74563))

(declare-fun m!73855 () Bool)

(assert (=> b!74562 m!73855))

(assert (=> b!73458 d!17653))

(declare-fun d!17655 () Bool)

(declare-fun e!48715 () Bool)

(assert (=> d!17655 e!48715))

(declare-fun res!39424 () Bool)

(assert (=> d!17655 (=> res!39424 e!48715)))

(declare-fun lt!33553 () Bool)

(assert (=> d!17655 (= res!39424 (not lt!33553))))

(declare-fun lt!33555 () Bool)

(assert (=> d!17655 (= lt!33553 lt!33555)))

(declare-fun lt!33554 () Unit!2076)

(declare-fun e!48716 () Unit!2076)

(assert (=> d!17655 (= lt!33554 e!48716)))

(declare-fun c!11241 () Bool)

(assert (=> d!17655 (= c!11241 lt!33555)))

(assert (=> d!17655 (= lt!33555 (containsKey!137 (toList!716 lt!33122) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17655 (= (contains!720 lt!33122 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33553)))

(declare-fun b!74564 () Bool)

(declare-fun lt!33552 () Unit!2076)

(assert (=> b!74564 (= e!48716 lt!33552)))

(assert (=> b!74564 (= lt!33552 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33122) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> b!74564 (isDefined!86 (getValueByKey!134 (toList!716 lt!33122) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74565 () Bool)

(declare-fun Unit!2142 () Unit!2076)

(assert (=> b!74565 (= e!48716 Unit!2142)))

(declare-fun b!74566 () Bool)

(assert (=> b!74566 (= e!48715 (isDefined!86 (getValueByKey!134 (toList!716 lt!33122) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17655 c!11241) b!74564))

(assert (= (and d!17655 (not c!11241)) b!74565))

(assert (= (and d!17655 (not res!39424)) b!74566))

(declare-fun m!73857 () Bool)

(assert (=> d!17655 m!73857))

(declare-fun m!73859 () Bool)

(assert (=> b!74564 m!73859))

(assert (=> b!74564 m!72257))

(assert (=> b!74564 m!72257))

(declare-fun m!73861 () Bool)

(assert (=> b!74564 m!73861))

(assert (=> b!74566 m!72257))

(assert (=> b!74566 m!72257))

(assert (=> b!74566 m!73861))

(assert (=> d!17055 d!17655))

(declare-fun b!74568 () Bool)

(declare-fun e!48717 () Option!140)

(declare-fun e!48718 () Option!140)

(assert (=> b!74568 (= e!48717 e!48718)))

(declare-fun c!11243 () Bool)

(assert (=> b!74568 (= c!11243 (and ((_ is Cons!1470) lt!33123) (not (= (_1!1071 (h!2057 lt!33123)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74567 () Bool)

(assert (=> b!74567 (= e!48717 (Some!139 (_2!1071 (h!2057 lt!33123))))))

(declare-fun d!17657 () Bool)

(declare-fun c!11242 () Bool)

(assert (=> d!17657 (= c!11242 (and ((_ is Cons!1470) lt!33123) (= (_1!1071 (h!2057 lt!33123)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17657 (= (getValueByKey!134 lt!33123 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48717)))

(declare-fun b!74569 () Bool)

(assert (=> b!74569 (= e!48718 (getValueByKey!134 (t!5023 lt!33123) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74570 () Bool)

(assert (=> b!74570 (= e!48718 None!138)))

(assert (= (and d!17657 c!11242) b!74567))

(assert (= (and d!17657 (not c!11242)) b!74568))

(assert (= (and b!74568 c!11243) b!74569))

(assert (= (and b!74568 (not c!11243)) b!74570))

(declare-fun m!73863 () Bool)

(assert (=> b!74569 m!73863))

(assert (=> d!17055 d!17657))

(declare-fun d!17659 () Bool)

(assert (=> d!17659 (= (getValueByKey!134 lt!33123 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!33556 () Unit!2076)

(assert (=> d!17659 (= lt!33556 (choose!419 lt!33123 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun e!48719 () Bool)

(assert (=> d!17659 e!48719))

(declare-fun res!39425 () Bool)

(assert (=> d!17659 (=> (not res!39425) (not e!48719))))

(assert (=> d!17659 (= res!39425 (isStrictlySorted!279 lt!33123))))

(assert (=> d!17659 (= (lemmaContainsTupThenGetReturnValue!51 lt!33123 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33556)))

(declare-fun b!74571 () Bool)

(declare-fun res!39426 () Bool)

(assert (=> b!74571 (=> (not res!39426) (not e!48719))))

(assert (=> b!74571 (= res!39426 (containsKey!137 lt!33123 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74572 () Bool)

(assert (=> b!74572 (= e!48719 (contains!721 lt!33123 (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17659 res!39425) b!74571))

(assert (= (and b!74571 res!39426) b!74572))

(assert (=> d!17659 m!72251))

(declare-fun m!73865 () Bool)

(assert (=> d!17659 m!73865))

(declare-fun m!73867 () Bool)

(assert (=> d!17659 m!73867))

(declare-fun m!73869 () Bool)

(assert (=> b!74571 m!73869))

(declare-fun m!73871 () Bool)

(assert (=> b!74572 m!73871))

(assert (=> d!17055 d!17659))

(declare-fun b!74573 () Bool)

(declare-fun e!48724 () List!1474)

(assert (=> b!74573 (= e!48724 (insertStrictlySorted!54 (t!5023 (toList!716 lt!32489)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74574 () Bool)

(declare-fun c!11245 () Bool)

(declare-fun c!11244 () Bool)

(assert (=> b!74574 (= e!48724 (ite c!11245 (t!5023 (toList!716 lt!32489)) (ite c!11244 (Cons!1470 (h!2057 (toList!716 lt!32489)) (t!5023 (toList!716 lt!32489))) Nil!1471)))))

(declare-fun bm!6579 () Bool)

(declare-fun call!6583 () List!1474)

(declare-fun call!6584 () List!1474)

(assert (=> bm!6579 (= call!6583 call!6584)))

(declare-fun b!74575 () Bool)

(declare-fun e!48723 () Bool)

(declare-fun lt!33557 () List!1474)

(assert (=> b!74575 (= e!48723 (contains!721 lt!33557 (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!74576 () Bool)

(declare-fun e!48720 () List!1474)

(assert (=> b!74576 (= e!48720 call!6583)))

(declare-fun b!74577 () Bool)

(declare-fun e!48721 () List!1474)

(declare-fun e!48722 () List!1474)

(assert (=> b!74577 (= e!48721 e!48722)))

(assert (=> b!74577 (= c!11245 (and ((_ is Cons!1470) (toList!716 lt!32489)) (= (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun d!17661 () Bool)

(assert (=> d!17661 e!48723))

(declare-fun res!39427 () Bool)

(assert (=> d!17661 (=> (not res!39427) (not e!48723))))

(assert (=> d!17661 (= res!39427 (isStrictlySorted!279 lt!33557))))

(assert (=> d!17661 (= lt!33557 e!48721)))

(declare-fun c!11246 () Bool)

(assert (=> d!17661 (= c!11246 (and ((_ is Cons!1470) (toList!716 lt!32489)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17661 (isStrictlySorted!279 (toList!716 lt!32489))))

(assert (=> d!17661 (= (insertStrictlySorted!54 (toList!716 lt!32489) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33557)))

(declare-fun bm!6580 () Bool)

(declare-fun call!6582 () List!1474)

(assert (=> bm!6580 (= call!6582 ($colon$colon!65 e!48724 (ite c!11246 (h!2057 (toList!716 lt!32489)) (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun c!11247 () Bool)

(assert (=> bm!6580 (= c!11247 c!11246)))

(declare-fun b!74578 () Bool)

(assert (=> b!74578 (= e!48722 call!6584)))

(declare-fun b!74579 () Bool)

(assert (=> b!74579 (= e!48720 call!6583)))

(declare-fun b!74580 () Bool)

(assert (=> b!74580 (= c!11244 (and ((_ is Cons!1470) (toList!716 lt!32489)) (bvsgt (_1!1071 (h!2057 (toList!716 lt!32489))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> b!74580 (= e!48722 e!48720)))

(declare-fun b!74581 () Bool)

(assert (=> b!74581 (= e!48721 call!6582)))

(declare-fun bm!6581 () Bool)

(assert (=> bm!6581 (= call!6584 call!6582)))

(declare-fun b!74582 () Bool)

(declare-fun res!39428 () Bool)

(assert (=> b!74582 (=> (not res!39428) (not e!48723))))

(assert (=> b!74582 (= res!39428 (containsKey!137 lt!33557 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (= (and d!17661 c!11246) b!74581))

(assert (= (and d!17661 (not c!11246)) b!74577))

(assert (= (and b!74577 c!11245) b!74578))

(assert (= (and b!74577 (not c!11245)) b!74580))

(assert (= (and b!74580 c!11244) b!74576))

(assert (= (and b!74580 (not c!11244)) b!74579))

(assert (= (or b!74576 b!74579) bm!6579))

(assert (= (or b!74578 bm!6579) bm!6581))

(assert (= (or b!74581 bm!6581) bm!6580))

(assert (= (and bm!6580 c!11247) b!74573))

(assert (= (and bm!6580 (not c!11247)) b!74574))

(assert (= (and d!17661 res!39427) b!74582))

(assert (= (and b!74582 res!39428) b!74575))

(declare-fun m!73873 () Bool)

(assert (=> b!74573 m!73873))

(declare-fun m!73875 () Bool)

(assert (=> b!74575 m!73875))

(declare-fun m!73877 () Bool)

(assert (=> d!17661 m!73877))

(assert (=> d!17661 m!71799))

(declare-fun m!73879 () Bool)

(assert (=> bm!6580 m!73879))

(declare-fun m!73881 () Bool)

(assert (=> b!74582 m!73881))

(assert (=> d!17055 d!17661))

(declare-fun d!17663 () Bool)

(assert (=> d!17663 (= (size!2094 newMap!16) (bvadd (_size!396 newMap!16) (bvsdiv (bvadd (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!73576 d!17663))

(declare-fun b!74583 () Bool)

(declare-fun e!48727 () Bool)

(declare-fun e!48728 () Bool)

(assert (=> b!74583 (= e!48727 e!48728)))

(declare-fun res!39430 () Bool)

(assert (=> b!74583 (=> (not res!39430) (not e!48728))))

(declare-fun e!48726 () Bool)

(assert (=> b!74583 (= res!39430 (not e!48726))))

(declare-fun res!39431 () Bool)

(assert (=> b!74583 (=> (not res!39431) (not e!48726))))

(assert (=> b!74583 (= res!39431 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun call!6585 () Bool)

(declare-fun c!11248 () Bool)

(declare-fun bm!6582 () Bool)

(assert (=> bm!6582 (= call!6585 (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!11248 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!10989 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470))) (ite c!10989 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)))))))

(declare-fun b!74584 () Bool)

(declare-fun e!48725 () Bool)

(assert (=> b!74584 (= e!48728 e!48725)))

(assert (=> b!74584 (= c!11248 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!17665 () Bool)

(declare-fun res!39429 () Bool)

(assert (=> d!17665 (=> res!39429 e!48727)))

(assert (=> d!17665 (= res!39429 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!17665 (= (arrayNoDuplicates!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10989 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470))) e!48727)))

(declare-fun b!74585 () Bool)

(assert (=> b!74585 (= e!48725 call!6585)))

(declare-fun b!74586 () Bool)

(assert (=> b!74586 (= e!48725 call!6585)))

(declare-fun b!74587 () Bool)

(assert (=> b!74587 (= e!48726 (contains!722 (ite c!10989 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)) (ite c!10826 (Cons!1469 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) Nil!1470) Nil!1470)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!17665 (not res!39429)) b!74583))

(assert (= (and b!74583 res!39431) b!74587))

(assert (= (and b!74583 res!39430) b!74584))

(assert (= (and b!74584 c!11248) b!74586))

(assert (= (and b!74584 (not c!11248)) b!74585))

(assert (= (or b!74586 b!74585) bm!6582))

(declare-fun m!73883 () Bool)

(assert (=> b!74583 m!73883))

(assert (=> b!74583 m!73883))

(declare-fun m!73885 () Bool)

(assert (=> b!74583 m!73885))

(assert (=> bm!6582 m!73883))

(declare-fun m!73887 () Bool)

(assert (=> bm!6582 m!73887))

(assert (=> b!74584 m!73883))

(assert (=> b!74584 m!73883))

(assert (=> b!74584 m!73885))

(assert (=> b!74587 m!73883))

(assert (=> b!74587 m!73883))

(declare-fun m!73889 () Bool)

(assert (=> b!74587 m!73889))

(assert (=> bm!6490 d!17665))

(declare-fun d!17667 () Bool)

(declare-fun res!39432 () Bool)

(declare-fun e!48729 () Bool)

(assert (=> d!17667 (=> res!39432 e!48729)))

(assert (=> d!17667 (= res!39432 (and ((_ is Cons!1470) lt!32591) (= (_1!1071 (h!2057 lt!32591)) (_1!1071 lt!32492))))))

(assert (=> d!17667 (= (containsKey!137 lt!32591 (_1!1071 lt!32492)) e!48729)))

(declare-fun b!74588 () Bool)

(declare-fun e!48730 () Bool)

(assert (=> b!74588 (= e!48729 e!48730)))

(declare-fun res!39433 () Bool)

(assert (=> b!74588 (=> (not res!39433) (not e!48730))))

(assert (=> b!74588 (= res!39433 (and (or (not ((_ is Cons!1470) lt!32591)) (bvsle (_1!1071 (h!2057 lt!32591)) (_1!1071 lt!32492))) ((_ is Cons!1470) lt!32591) (bvslt (_1!1071 (h!2057 lt!32591)) (_1!1071 lt!32492))))))

(declare-fun b!74589 () Bool)

(assert (=> b!74589 (= e!48730 (containsKey!137 (t!5023 lt!32591) (_1!1071 lt!32492)))))

(assert (= (and d!17667 (not res!39432)) b!74588))

(assert (= (and b!74588 res!39433) b!74589))

(declare-fun m!73891 () Bool)

(assert (=> b!74589 m!73891))

(assert (=> b!73694 d!17667))

(declare-fun d!17669 () Bool)

(declare-fun e!48731 () Bool)

(assert (=> d!17669 e!48731))

(declare-fun res!39434 () Bool)

(assert (=> d!17669 (=> res!39434 e!48731)))

(declare-fun lt!33559 () Bool)

(assert (=> d!17669 (= res!39434 (not lt!33559))))

(declare-fun lt!33561 () Bool)

(assert (=> d!17669 (= lt!33559 lt!33561)))

(declare-fun lt!33560 () Unit!2076)

(declare-fun e!48732 () Unit!2076)

(assert (=> d!17669 (= lt!33560 e!48732)))

(declare-fun c!11249 () Bool)

(assert (=> d!17669 (= c!11249 lt!33561)))

(assert (=> d!17669 (= lt!33561 (containsKey!137 (toList!716 lt!33035) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17669 (= (contains!720 lt!33035 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) lt!33559)))

(declare-fun b!74590 () Bool)

(declare-fun lt!33558 () Unit!2076)

(assert (=> b!74590 (= e!48732 lt!33558)))

(assert (=> b!74590 (= lt!33558 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33035) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74590 (isDefined!86 (getValueByKey!134 (toList!716 lt!33035) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74591 () Bool)

(declare-fun Unit!2143 () Unit!2076)

(assert (=> b!74591 (= e!48732 Unit!2143)))

(declare-fun b!74592 () Bool)

(assert (=> b!74592 (= e!48731 (isDefined!86 (getValueByKey!134 (toList!716 lt!33035) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17669 c!11249) b!74590))

(assert (= (and d!17669 (not c!11249)) b!74591))

(assert (= (and d!17669 (not res!39434)) b!74592))

(assert (=> d!17669 m!71603))

(declare-fun m!73893 () Bool)

(assert (=> d!17669 m!73893))

(assert (=> b!74590 m!71603))

(declare-fun m!73895 () Bool)

(assert (=> b!74590 m!73895))

(assert (=> b!74590 m!71603))

(assert (=> b!74590 m!73843))

(assert (=> b!74590 m!73843))

(declare-fun m!73897 () Bool)

(assert (=> b!74590 m!73897))

(assert (=> b!74592 m!71603))

(assert (=> b!74592 m!73843))

(assert (=> b!74592 m!73843))

(assert (=> b!74592 m!73897))

(assert (=> b!73535 d!17669))

(declare-fun d!17671 () Bool)

(assert (=> d!17671 (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33562 () Unit!2076)

(assert (=> d!17671 (= lt!33562 (choose!420 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48733 () Bool)

(assert (=> d!17671 e!48733))

(declare-fun res!39435 () Bool)

(assert (=> d!17671 (=> (not res!39435) (not e!48733))))

(assert (=> d!17671 (= res!39435 (isStrictlySorted!279 (toList!716 lt!32614)))))

(assert (=> d!17671 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000) lt!33562)))

(declare-fun b!74593 () Bool)

(assert (=> b!74593 (= e!48733 (containsKey!137 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17671 res!39435) b!74593))

(assert (=> d!17671 m!72157))

(assert (=> d!17671 m!72157))

(assert (=> d!17671 m!72159))

(declare-fun m!73899 () Bool)

(assert (=> d!17671 m!73899))

(assert (=> d!17671 m!73147))

(assert (=> b!74593 m!72153))

(assert (=> b!73606 d!17671))

(declare-fun d!17673 () Bool)

(assert (=> d!17673 (= (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!323 (getValueByKey!134 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3222 () Bool)

(assert (= bs!3222 d!17673))

(assert (=> bs!3222 m!72157))

(declare-fun m!73901 () Bool)

(assert (=> bs!3222 m!73901))

(assert (=> b!73606 d!17673))

(declare-fun b!74595 () Bool)

(declare-fun e!48734 () Option!140)

(declare-fun e!48735 () Option!140)

(assert (=> b!74595 (= e!48734 e!48735)))

(declare-fun c!11251 () Bool)

(assert (=> b!74595 (= c!11251 (and ((_ is Cons!1470) (toList!716 lt!32614)) (not (= (_1!1071 (h!2057 (toList!716 lt!32614))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74594 () Bool)

(assert (=> b!74594 (= e!48734 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32614)))))))

(declare-fun d!17675 () Bool)

(declare-fun c!11250 () Bool)

(assert (=> d!17675 (= c!11250 (and ((_ is Cons!1470) (toList!716 lt!32614)) (= (_1!1071 (h!2057 (toList!716 lt!32614))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17675 (= (getValueByKey!134 (toList!716 lt!32614) #b1000000000000000000000000000000000000000000000000000000000000000) e!48734)))

(declare-fun b!74596 () Bool)

(assert (=> b!74596 (= e!48735 (getValueByKey!134 (t!5023 (toList!716 lt!32614)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74597 () Bool)

(assert (=> b!74597 (= e!48735 None!138)))

(assert (= (and d!17675 c!11250) b!74594))

(assert (= (and d!17675 (not c!11250)) b!74595))

(assert (= (and b!74595 c!11251) b!74596))

(assert (= (and b!74595 (not c!11251)) b!74597))

(declare-fun m!73903 () Bool)

(assert (=> b!74596 m!73903))

(assert (=> b!73606 d!17675))

(declare-fun b!74599 () Bool)

(declare-fun e!48736 () Option!140)

(declare-fun e!48737 () Option!140)

(assert (=> b!74599 (= e!48736 e!48737)))

(declare-fun c!11253 () Bool)

(assert (=> b!74599 (= c!11253 (and ((_ is Cons!1470) (toList!716 lt!33122)) (not (= (_1!1071 (h!2057 (toList!716 lt!33122))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74598 () Bool)

(assert (=> b!74598 (= e!48736 (Some!139 (_2!1071 (h!2057 (toList!716 lt!33122)))))))

(declare-fun d!17677 () Bool)

(declare-fun c!11252 () Bool)

(assert (=> d!17677 (= c!11252 (and ((_ is Cons!1470) (toList!716 lt!33122)) (= (_1!1071 (h!2057 (toList!716 lt!33122))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17677 (= (getValueByKey!134 (toList!716 lt!33122) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48736)))

(declare-fun b!74600 () Bool)

(assert (=> b!74600 (= e!48737 (getValueByKey!134 (t!5023 (toList!716 lt!33122)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74601 () Bool)

(assert (=> b!74601 (= e!48737 None!138)))

(assert (= (and d!17677 c!11252) b!74598))

(assert (= (and d!17677 (not c!11252)) b!74599))

(assert (= (and b!74599 c!11253) b!74600))

(assert (= (and b!74599 (not c!11253)) b!74601))

(declare-fun m!73905 () Bool)

(assert (=> b!74600 m!73905))

(assert (=> b!73645 d!17677))

(assert (=> d!16927 d!16931))

(assert (=> d!16927 d!16925))

(declare-fun d!17679 () Bool)

(assert (=> d!17679 (not (contains!720 (+!93 lt!32613 (tuple2!2121 lt!32612 lt!32616)) lt!32615))))

(assert (=> d!17679 true))

(declare-fun _$36!301 () Unit!2076)

(assert (=> d!17679 (= (choose!421 lt!32613 lt!32612 lt!32616 lt!32615) _$36!301)))

(declare-fun bs!3223 () Bool)

(assert (= bs!3223 d!17679))

(assert (=> bs!3223 m!71377))

(assert (=> bs!3223 m!71377))

(assert (=> bs!3223 m!71379))

(assert (=> d!16927 d!17679))

(declare-fun d!17681 () Bool)

(declare-fun e!48738 () Bool)

(assert (=> d!17681 e!48738))

(declare-fun res!39436 () Bool)

(assert (=> d!17681 (=> res!39436 e!48738)))

(declare-fun lt!33564 () Bool)

(assert (=> d!17681 (= res!39436 (not lt!33564))))

(declare-fun lt!33566 () Bool)

(assert (=> d!17681 (= lt!33564 lt!33566)))

(declare-fun lt!33565 () Unit!2076)

(declare-fun e!48739 () Unit!2076)

(assert (=> d!17681 (= lt!33565 e!48739)))

(declare-fun c!11254 () Bool)

(assert (=> d!17681 (= c!11254 lt!33566)))

(assert (=> d!17681 (= lt!33566 (containsKey!137 (toList!716 lt!32613) lt!32615))))

(assert (=> d!17681 (= (contains!720 lt!32613 lt!32615) lt!33564)))

(declare-fun b!74603 () Bool)

(declare-fun lt!33563 () Unit!2076)

(assert (=> b!74603 (= e!48739 lt!33563)))

(assert (=> b!74603 (= lt!33563 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32613) lt!32615))))

(assert (=> b!74603 (isDefined!86 (getValueByKey!134 (toList!716 lt!32613) lt!32615))))

(declare-fun b!74604 () Bool)

(declare-fun Unit!2144 () Unit!2076)

(assert (=> b!74604 (= e!48739 Unit!2144)))

(declare-fun b!74605 () Bool)

(assert (=> b!74605 (= e!48738 (isDefined!86 (getValueByKey!134 (toList!716 lt!32613) lt!32615)))))

(assert (= (and d!17681 c!11254) b!74603))

(assert (= (and d!17681 (not c!11254)) b!74604))

(assert (= (and d!17681 (not res!39436)) b!74605))

(declare-fun m!73907 () Bool)

(assert (=> d!17681 m!73907))

(declare-fun m!73909 () Bool)

(assert (=> b!74603 m!73909))

(declare-fun m!73911 () Bool)

(assert (=> b!74603 m!73911))

(assert (=> b!74603 m!73911))

(declare-fun m!73913 () Bool)

(assert (=> b!74603 m!73913))

(assert (=> b!74605 m!73911))

(assert (=> b!74605 m!73911))

(assert (=> b!74605 m!73913))

(assert (=> d!16927 d!17681))

(declare-fun d!17683 () Bool)

(declare-fun e!48740 () Bool)

(assert (=> d!17683 e!48740))

(declare-fun res!39437 () Bool)

(assert (=> d!17683 (=> res!39437 e!48740)))

(declare-fun lt!33568 () Bool)

(assert (=> d!17683 (= res!39437 (not lt!33568))))

(declare-fun lt!33570 () Bool)

(assert (=> d!17683 (= lt!33568 lt!33570)))

(declare-fun lt!33569 () Unit!2076)

(declare-fun e!48741 () Unit!2076)

(assert (=> d!17683 (= lt!33569 e!48741)))

(declare-fun c!11255 () Bool)

(assert (=> d!17683 (= c!11255 lt!33570)))

(assert (=> d!17683 (= lt!33570 (containsKey!137 (toList!716 lt!33114) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17683 (= (contains!720 lt!33114 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33568)))

(declare-fun b!74606 () Bool)

(declare-fun lt!33567 () Unit!2076)

(assert (=> b!74606 (= e!48741 lt!33567)))

(assert (=> b!74606 (= lt!33567 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33114) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> b!74606 (isDefined!86 (getValueByKey!134 (toList!716 lt!33114) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74607 () Bool)

(declare-fun Unit!2145 () Unit!2076)

(assert (=> b!74607 (= e!48741 Unit!2145)))

(declare-fun b!74608 () Bool)

(assert (=> b!74608 (= e!48740 (isDefined!86 (getValueByKey!134 (toList!716 lt!33114) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17683 c!11255) b!74606))

(assert (= (and d!17683 (not c!11255)) b!74607))

(assert (= (and d!17683 (not res!39437)) b!74608))

(declare-fun m!73915 () Bool)

(assert (=> d!17683 m!73915))

(declare-fun m!73917 () Bool)

(assert (=> b!74606 m!73917))

(assert (=> b!74606 m!72233))

(assert (=> b!74606 m!72233))

(declare-fun m!73919 () Bool)

(assert (=> b!74606 m!73919))

(assert (=> b!74608 m!72233))

(assert (=> b!74608 m!72233))

(assert (=> b!74608 m!73919))

(assert (=> d!17049 d!17683))

(declare-fun b!74610 () Bool)

(declare-fun e!48742 () Option!140)

(declare-fun e!48743 () Option!140)

(assert (=> b!74610 (= e!48742 e!48743)))

(declare-fun c!11257 () Bool)

(assert (=> b!74610 (= c!11257 (and ((_ is Cons!1470) lt!33115) (not (= (_1!1071 (h!2057 lt!33115)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74609 () Bool)

(assert (=> b!74609 (= e!48742 (Some!139 (_2!1071 (h!2057 lt!33115))))))

(declare-fun d!17685 () Bool)

(declare-fun c!11256 () Bool)

(assert (=> d!17685 (= c!11256 (and ((_ is Cons!1470) lt!33115) (= (_1!1071 (h!2057 lt!33115)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17685 (= (getValueByKey!134 lt!33115 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48742)))

(declare-fun b!74611 () Bool)

(assert (=> b!74611 (= e!48743 (getValueByKey!134 (t!5023 lt!33115) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74612 () Bool)

(assert (=> b!74612 (= e!48743 None!138)))

(assert (= (and d!17685 c!11256) b!74609))

(assert (= (and d!17685 (not c!11256)) b!74610))

(assert (= (and b!74610 c!11257) b!74611))

(assert (= (and b!74610 (not c!11257)) b!74612))

(declare-fun m!73921 () Bool)

(assert (=> b!74611 m!73921))

(assert (=> d!17049 d!17685))

(declare-fun d!17687 () Bool)

(assert (=> d!17687 (= (getValueByKey!134 lt!33115 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!33571 () Unit!2076)

(assert (=> d!17687 (= lt!33571 (choose!419 lt!33115 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun e!48744 () Bool)

(assert (=> d!17687 e!48744))

(declare-fun res!39438 () Bool)

(assert (=> d!17687 (=> (not res!39438) (not e!48744))))

(assert (=> d!17687 (= res!39438 (isStrictlySorted!279 lt!33115))))

(assert (=> d!17687 (= (lemmaContainsTupThenGetReturnValue!51 lt!33115 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33571)))

(declare-fun b!74613 () Bool)

(declare-fun res!39439 () Bool)

(assert (=> b!74613 (=> (not res!39439) (not e!48744))))

(assert (=> b!74613 (= res!39439 (containsKey!137 lt!33115 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74614 () Bool)

(assert (=> b!74614 (= e!48744 (contains!721 lt!33115 (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17687 res!39438) b!74613))

(assert (= (and b!74613 res!39439) b!74614))

(assert (=> d!17687 m!72227))

(declare-fun m!73923 () Bool)

(assert (=> d!17687 m!73923))

(declare-fun m!73925 () Bool)

(assert (=> d!17687 m!73925))

(declare-fun m!73927 () Bool)

(assert (=> b!74613 m!73927))

(declare-fun m!73929 () Bool)

(assert (=> b!74614 m!73929))

(assert (=> d!17049 d!17687))

(declare-fun b!74615 () Bool)

(declare-fun e!48749 () List!1474)

(assert (=> b!74615 (= e!48749 (insertStrictlySorted!54 (t!5023 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun c!11258 () Bool)

(declare-fun b!74616 () Bool)

(declare-fun c!11259 () Bool)

(assert (=> b!74616 (= e!48749 (ite c!11259 (t!5023 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) (ite c!11258 (Cons!1470 (h!2057 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) (t!5023 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))) Nil!1471)))))

(declare-fun bm!6583 () Bool)

(declare-fun call!6587 () List!1474)

(declare-fun call!6588 () List!1474)

(assert (=> bm!6583 (= call!6587 call!6588)))

(declare-fun b!74617 () Bool)

(declare-fun e!48748 () Bool)

(declare-fun lt!33572 () List!1474)

(assert (=> b!74617 (= e!48748 (contains!721 lt!33572 (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!74618 () Bool)

(declare-fun e!48745 () List!1474)

(assert (=> b!74618 (= e!48745 call!6587)))

(declare-fun b!74619 () Bool)

(declare-fun e!48746 () List!1474)

(declare-fun e!48747 () List!1474)

(assert (=> b!74619 (= e!48746 e!48747)))

(assert (=> b!74619 (= c!11259 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun d!17689 () Bool)

(assert (=> d!17689 e!48748))

(declare-fun res!39440 () Bool)

(assert (=> d!17689 (=> (not res!39440) (not e!48748))))

(assert (=> d!17689 (= res!39440 (isStrictlySorted!279 lt!33572))))

(assert (=> d!17689 (= lt!33572 e!48746)))

(declare-fun c!11260 () Bool)

(assert (=> d!17689 (= c!11260 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) (bvslt (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17689 (isStrictlySorted!279 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17689 (= (insertStrictlySorted!54 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33572)))

(declare-fun bm!6584 () Bool)

(declare-fun call!6586 () List!1474)

(assert (=> bm!6584 (= call!6586 ($colon$colon!65 e!48749 (ite c!11260 (h!2057 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun c!11261 () Bool)

(assert (=> bm!6584 (= c!11261 c!11260)))

(declare-fun b!74620 () Bool)

(assert (=> b!74620 (= e!48747 call!6588)))

(declare-fun b!74621 () Bool)

(assert (=> b!74621 (= e!48745 call!6587)))

(declare-fun b!74622 () Bool)

(assert (=> b!74622 (= c!11258 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))) (bvsgt (_1!1071 (h!2057 (toList!716 (+!93 lt!32489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> b!74622 (= e!48747 e!48745)))

(declare-fun b!74623 () Bool)

(assert (=> b!74623 (= e!48746 call!6586)))

(declare-fun bm!6585 () Bool)

(assert (=> bm!6585 (= call!6588 call!6586)))

(declare-fun b!74624 () Bool)

(declare-fun res!39441 () Bool)

(assert (=> b!74624 (=> (not res!39441) (not e!48748))))

(assert (=> b!74624 (= res!39441 (containsKey!137 lt!33572 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (= (and d!17689 c!11260) b!74623))

(assert (= (and d!17689 (not c!11260)) b!74619))

(assert (= (and b!74619 c!11259) b!74620))

(assert (= (and b!74619 (not c!11259)) b!74622))

(assert (= (and b!74622 c!11258) b!74618))

(assert (= (and b!74622 (not c!11258)) b!74621))

(assert (= (or b!74618 b!74621) bm!6583))

(assert (= (or b!74620 bm!6583) bm!6585))

(assert (= (or b!74623 bm!6585) bm!6584))

(assert (= (and bm!6584 c!11261) b!74615))

(assert (= (and bm!6584 (not c!11261)) b!74616))

(assert (= (and d!17689 res!39440) b!74624))

(assert (= (and b!74624 res!39441) b!74617))

(declare-fun m!73931 () Bool)

(assert (=> b!74615 m!73931))

(declare-fun m!73933 () Bool)

(assert (=> b!74617 m!73933))

(declare-fun m!73935 () Bool)

(assert (=> d!17689 m!73935))

(declare-fun m!73937 () Bool)

(assert (=> d!17689 m!73937))

(declare-fun m!73939 () Bool)

(assert (=> bm!6584 m!73939))

(declare-fun m!73941 () Bool)

(assert (=> b!74624 m!73941))

(assert (=> d!17049 d!17689))

(assert (=> b!73689 d!17487))

(assert (=> b!73689 d!17005))

(declare-fun d!17691 () Bool)

(assert (=> d!17691 (= (get!1153 (getValueByKey!134 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2538 (getValueByKey!134 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17075 d!17691))

(assert (=> d!17075 d!17243))

(declare-fun d!17693 () Bool)

(assert (=> d!17693 (= (isEmpty!322 lt!33109) (isEmpty!324 (toList!716 lt!33109)))))

(declare-fun bs!3224 () Bool)

(assert (= bs!3224 d!17693))

(declare-fun m!73943 () Bool)

(assert (=> bs!3224 m!73943))

(assert (=> b!73638 d!17693))

(assert (=> bm!6440 d!17427))

(declare-fun d!17695 () Bool)

(assert (=> d!17695 (= (inRange!0 (ite c!10925 (index!3051 lt!32879) (index!3054 lt!32879)) (mask!6179 newMap!16)) (and (bvsge (ite c!10925 (index!3051 lt!32879) (index!3054 lt!32879)) #b00000000000000000000000000000000) (bvslt (ite c!10925 (index!3051 lt!32879) (index!3054 lt!32879)) (bvadd (mask!6179 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6453 d!17695))

(declare-fun d!17697 () Bool)

(assert (=> d!17697 (= (get!1153 (getValueByKey!134 (toList!716 lt!32679) lt!32678)) (v!2538 (getValueByKey!134 (toList!716 lt!32679) lt!32678)))))

(assert (=> d!16977 d!17697))

(declare-fun b!74626 () Bool)

(declare-fun e!48750 () Option!140)

(declare-fun e!48751 () Option!140)

(assert (=> b!74626 (= e!48750 e!48751)))

(declare-fun c!11263 () Bool)

(assert (=> b!74626 (= c!11263 (and ((_ is Cons!1470) (toList!716 lt!32679)) (not (= (_1!1071 (h!2057 (toList!716 lt!32679))) lt!32678))))))

(declare-fun b!74625 () Bool)

(assert (=> b!74625 (= e!48750 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32679)))))))

(declare-fun d!17699 () Bool)

(declare-fun c!11262 () Bool)

(assert (=> d!17699 (= c!11262 (and ((_ is Cons!1470) (toList!716 lt!32679)) (= (_1!1071 (h!2057 (toList!716 lt!32679))) lt!32678)))))

(assert (=> d!17699 (= (getValueByKey!134 (toList!716 lt!32679) lt!32678) e!48750)))

(declare-fun b!74627 () Bool)

(assert (=> b!74627 (= e!48751 (getValueByKey!134 (t!5023 (toList!716 lt!32679)) lt!32678))))

(declare-fun b!74628 () Bool)

(assert (=> b!74628 (= e!48751 None!138)))

(assert (= (and d!17699 c!11262) b!74625))

(assert (= (and d!17699 (not c!11262)) b!74626))

(assert (= (and b!74626 c!11263) b!74627))

(assert (= (and b!74626 (not c!11263)) b!74628))

(declare-fun m!73945 () Bool)

(assert (=> b!74627 m!73945))

(assert (=> d!16977 d!17699))

(declare-fun d!17701 () Bool)

(assert (=> d!17701 (isDefined!86 (getValueByKey!134 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33573 () Unit!2076)

(assert (=> d!17701 (= lt!33573 (choose!420 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48752 () Bool)

(assert (=> d!17701 e!48752))

(declare-fun res!39442 () Bool)

(assert (=> d!17701 (=> (not res!39442) (not e!48752))))

(assert (=> d!17701 (= res!39442 (isStrictlySorted!279 (toList!716 lt!32614)))))

(assert (=> d!17701 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000) lt!33573)))

(declare-fun b!74629 () Bool)

(assert (=> b!74629 (= e!48752 (containsKey!137 (toList!716 lt!32614) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17701 res!39442) b!74629))

(assert (=> d!17701 m!71549))

(assert (=> d!17701 m!71549))

(assert (=> d!17701 m!71551))

(declare-fun m!73947 () Bool)

(assert (=> d!17701 m!73947))

(assert (=> d!17701 m!73147))

(assert (=> b!74629 m!71545))

(assert (=> b!73241 d!17701))

(assert (=> b!73241 d!17155))

(assert (=> b!73241 d!17157))

(declare-fun d!17703 () Bool)

(declare-fun lt!33574 () Bool)

(assert (=> d!17703 (= lt!33574 (select (content!78 (toList!716 lt!33114)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun e!48754 () Bool)

(assert (=> d!17703 (= lt!33574 e!48754)))

(declare-fun res!39443 () Bool)

(assert (=> d!17703 (=> (not res!39443) (not e!48754))))

(assert (=> d!17703 (= res!39443 ((_ is Cons!1470) (toList!716 lt!33114)))))

(assert (=> d!17703 (= (contains!721 (toList!716 lt!33114) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!33574)))

(declare-fun b!74630 () Bool)

(declare-fun e!48753 () Bool)

(assert (=> b!74630 (= e!48754 e!48753)))

(declare-fun res!39444 () Bool)

(assert (=> b!74630 (=> res!39444 e!48753)))

(assert (=> b!74630 (= res!39444 (= (h!2057 (toList!716 lt!33114)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!74631 () Bool)

(assert (=> b!74631 (= e!48753 (contains!721 (t!5023 (toList!716 lt!33114)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17703 res!39443) b!74630))

(assert (= (and b!74630 (not res!39444)) b!74631))

(declare-fun m!73949 () Bool)

(assert (=> d!17703 m!73949))

(declare-fun m!73951 () Bool)

(assert (=> d!17703 m!73951))

(declare-fun m!73953 () Bool)

(assert (=> b!74631 m!73953))

(assert (=> b!73642 d!17703))

(declare-fun bm!6586 () Bool)

(declare-fun call!6589 () (_ BitVec 32))

(assert (=> bm!6586 (= call!6589 (arrayCountValidKeys!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!74632 () Bool)

(declare-fun e!48756 () (_ BitVec 32))

(assert (=> b!74632 (= e!48756 (bvadd #b00000000000000000000000000000001 call!6589))))

(declare-fun b!74633 () Bool)

(declare-fun e!48755 () (_ BitVec 32))

(assert (=> b!74633 (= e!48755 e!48756)))

(declare-fun c!11264 () Bool)

(assert (=> b!74633 (= c!11264 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!17705 () Bool)

(declare-fun lt!33575 () (_ BitVec 32))

(assert (=> d!17705 (and (bvsge lt!33575 #b00000000000000000000000000000000) (bvsle lt!33575 (bvsub (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!17705 (= lt!33575 e!48755)))

(declare-fun c!11265 () Bool)

(assert (=> d!17705 (= c!11265 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!17705 (and (bvsle #b00000000000000000000000000000000 (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!17705 (= (arrayCountValidKeys!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) #b00000000000000000000000000000000 (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))) lt!33575)))

(declare-fun b!74634 () Bool)

(assert (=> b!74634 (= e!48756 call!6589)))

(declare-fun b!74635 () Bool)

(assert (=> b!74635 (= e!48755 #b00000000000000000000000000000000)))

(assert (= (and d!17705 c!11265) b!74635))

(assert (= (and d!17705 (not c!11265)) b!74633))

(assert (= (and b!74633 c!11264) b!74632))

(assert (= (and b!74633 (not c!11264)) b!74634))

(assert (= (or b!74632 b!74634) bm!6586))

(declare-fun m!73955 () Bool)

(assert (=> bm!6586 m!73955))

(assert (=> b!74633 m!72611))

(assert (=> b!74633 m!72611))

(assert (=> b!74633 m!72613))

(assert (=> b!73527 d!17705))

(declare-fun d!17707 () Bool)

(declare-fun e!48757 () Bool)

(assert (=> d!17707 e!48757))

(declare-fun res!39445 () Bool)

(assert (=> d!17707 (=> res!39445 e!48757)))

(declare-fun lt!33577 () Bool)

(assert (=> d!17707 (= res!39445 (not lt!33577))))

(declare-fun lt!33579 () Bool)

(assert (=> d!17707 (= lt!33577 lt!33579)))

(declare-fun lt!33578 () Unit!2076)

(declare-fun e!48758 () Unit!2076)

(assert (=> d!17707 (= lt!33578 e!48758)))

(declare-fun c!11266 () Bool)

(assert (=> d!17707 (= c!11266 lt!33579)))

(assert (=> d!17707 (= lt!33579 (containsKey!137 (toList!716 lt!32911) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> d!17707 (= (contains!720 lt!32911 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33577)))

(declare-fun b!74636 () Bool)

(declare-fun lt!33576 () Unit!2076)

(assert (=> b!74636 (= e!48758 lt!33576)))

(assert (=> b!74636 (= lt!33576 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32911) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (=> b!74636 (isDefined!86 (getValueByKey!134 (toList!716 lt!32911) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74637 () Bool)

(declare-fun Unit!2146 () Unit!2076)

(assert (=> b!74637 (= e!48758 Unit!2146)))

(declare-fun b!74638 () Bool)

(assert (=> b!74638 (= e!48757 (isDefined!86 (getValueByKey!134 (toList!716 lt!32911) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17707 c!11266) b!74636))

(assert (= (and d!17707 (not c!11266)) b!74637))

(assert (= (and d!17707 (not res!39445)) b!74638))

(declare-fun m!73957 () Bool)

(assert (=> d!17707 m!73957))

(declare-fun m!73959 () Bool)

(assert (=> b!74636 m!73959))

(assert (=> b!74636 m!71867))

(assert (=> b!74636 m!71867))

(declare-fun m!73961 () Bool)

(assert (=> b!74636 m!73961))

(assert (=> b!74638 m!71867))

(assert (=> b!74638 m!71867))

(assert (=> b!74638 m!73961))

(assert (=> d!16965 d!17707))

(declare-fun b!74640 () Bool)

(declare-fun e!48759 () Option!140)

(declare-fun e!48760 () Option!140)

(assert (=> b!74640 (= e!48759 e!48760)))

(declare-fun c!11268 () Bool)

(assert (=> b!74640 (= c!11268 (and ((_ is Cons!1470) lt!32912) (not (= (_1!1071 (h!2057 lt!32912)) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun b!74639 () Bool)

(assert (=> b!74639 (= e!48759 (Some!139 (_2!1071 (h!2057 lt!32912))))))

(declare-fun d!17709 () Bool)

(declare-fun c!11267 () Bool)

(assert (=> d!17709 (= c!11267 (and ((_ is Cons!1470) lt!32912) (= (_1!1071 (h!2057 lt!32912)) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17709 (= (getValueByKey!134 lt!32912 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) e!48759)))

(declare-fun b!74641 () Bool)

(assert (=> b!74641 (= e!48760 (getValueByKey!134 (t!5023 lt!32912) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74642 () Bool)

(assert (=> b!74642 (= e!48760 None!138)))

(assert (= (and d!17709 c!11267) b!74639))

(assert (= (and d!17709 (not c!11267)) b!74640))

(assert (= (and b!74640 c!11268) b!74641))

(assert (= (and b!74640 (not c!11268)) b!74642))

(declare-fun m!73963 () Bool)

(assert (=> b!74641 m!73963))

(assert (=> d!16965 d!17709))

(declare-fun d!17711 () Bool)

(assert (=> d!17711 (= (getValueByKey!134 lt!32912 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) (Some!139 (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun lt!33580 () Unit!2076)

(assert (=> d!17711 (= lt!33580 (choose!419 lt!32912 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun e!48761 () Bool)

(assert (=> d!17711 e!48761))

(declare-fun res!39446 () Bool)

(assert (=> d!17711 (=> (not res!39446) (not e!48761))))

(assert (=> d!17711 (= res!39446 (isStrictlySorted!279 lt!32912))))

(assert (=> d!17711 (= (lemmaContainsTupThenGetReturnValue!51 lt!32912 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33580)))

(declare-fun b!74643 () Bool)

(declare-fun res!39447 () Bool)

(assert (=> b!74643 (=> (not res!39447) (not e!48761))))

(assert (=> b!74643 (= res!39447 (containsKey!137 lt!32912 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun b!74644 () Bool)

(assert (=> b!74644 (= e!48761 (contains!721 lt!32912 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (= (and d!17711 res!39446) b!74643))

(assert (= (and b!74643 res!39447) b!74644))

(assert (=> d!17711 m!71861))

(declare-fun m!73965 () Bool)

(assert (=> d!17711 m!73965))

(declare-fun m!73967 () Bool)

(assert (=> d!17711 m!73967))

(declare-fun m!73969 () Bool)

(assert (=> b!74643 m!73969))

(declare-fun m!73971 () Bool)

(assert (=> b!74644 m!73971))

(assert (=> d!16965 d!17711))

(declare-fun b!74645 () Bool)

(declare-fun e!48766 () List!1474)

(assert (=> b!74645 (= e!48766 (insertStrictlySorted!54 (t!5023 (toList!716 lt!32679)) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(declare-fun c!11270 () Bool)

(declare-fun c!11269 () Bool)

(declare-fun b!74646 () Bool)

(assert (=> b!74646 (= e!48766 (ite c!11270 (t!5023 (toList!716 lt!32679)) (ite c!11269 (Cons!1470 (h!2057 (toList!716 lt!32679)) (t!5023 (toList!716 lt!32679))) Nil!1471)))))

(declare-fun bm!6587 () Bool)

(declare-fun call!6591 () List!1474)

(declare-fun call!6592 () List!1474)

(assert (=> bm!6587 (= call!6591 call!6592)))

(declare-fun lt!33581 () List!1474)

(declare-fun b!74647 () Bool)

(declare-fun e!48765 () Bool)

(assert (=> b!74647 (= e!48765 (contains!721 lt!33581 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun b!74648 () Bool)

(declare-fun e!48762 () List!1474)

(assert (=> b!74648 (= e!48762 call!6591)))

(declare-fun b!74649 () Bool)

(declare-fun e!48763 () List!1474)

(declare-fun e!48764 () List!1474)

(assert (=> b!74649 (= e!48763 e!48764)))

(assert (=> b!74649 (= c!11270 (and ((_ is Cons!1470) (toList!716 lt!32679)) (= (_1!1071 (h!2057 (toList!716 lt!32679))) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(declare-fun d!17713 () Bool)

(assert (=> d!17713 e!48765))

(declare-fun res!39448 () Bool)

(assert (=> d!17713 (=> (not res!39448) (not e!48765))))

(assert (=> d!17713 (= res!39448 (isStrictlySorted!279 lt!33581))))

(assert (=> d!17713 (= lt!33581 e!48763)))

(declare-fun c!11271 () Bool)

(assert (=> d!17713 (= c!11271 (and ((_ is Cons!1470) (toList!716 lt!32679)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32679))) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> d!17713 (isStrictlySorted!279 (toList!716 lt!32679))))

(assert (=> d!17713 (= (insertStrictlySorted!54 (toList!716 lt!32679) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!33581)))

(declare-fun call!6590 () List!1474)

(declare-fun bm!6588 () Bool)

(assert (=> bm!6588 (= call!6590 ($colon$colon!65 e!48766 (ite c!11271 (h!2057 (toList!716 lt!32679)) (tuple2!2121 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) (_2!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))))

(declare-fun c!11272 () Bool)

(assert (=> bm!6588 (= c!11272 c!11271)))

(declare-fun b!74650 () Bool)

(assert (=> b!74650 (= e!48764 call!6592)))

(declare-fun b!74651 () Bool)

(assert (=> b!74651 (= e!48762 call!6591)))

(declare-fun b!74652 () Bool)

(assert (=> b!74652 (= c!11269 (and ((_ is Cons!1470) (toList!716 lt!32679)) (bvsgt (_1!1071 (h!2057 (toList!716 lt!32679))) (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))))

(assert (=> b!74652 (= e!48764 e!48762)))

(declare-fun b!74653 () Bool)

(assert (=> b!74653 (= e!48763 call!6590)))

(declare-fun bm!6589 () Bool)

(assert (=> bm!6589 (= call!6592 call!6590)))

(declare-fun b!74654 () Bool)

(declare-fun res!39449 () Bool)

(assert (=> b!74654 (=> (not res!39449) (not e!48765))))

(assert (=> b!74654 (= res!39449 (containsKey!137 lt!33581 (_1!1071 (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992)))))))))

(assert (= (and d!17713 c!11271) b!74653))

(assert (= (and d!17713 (not c!11271)) b!74649))

(assert (= (and b!74649 c!11270) b!74650))

(assert (= (and b!74649 (not c!11270)) b!74652))

(assert (= (and b!74652 c!11269) b!74648))

(assert (= (and b!74652 (not c!11269)) b!74651))

(assert (= (or b!74648 b!74651) bm!6587))

(assert (= (or b!74650 bm!6587) bm!6589))

(assert (= (or b!74653 bm!6589) bm!6588))

(assert (= (and bm!6588 c!11272) b!74645))

(assert (= (and bm!6588 (not c!11272)) b!74646))

(assert (= (and d!17713 res!39448) b!74654))

(assert (= (and b!74654 res!39449) b!74647))

(declare-fun m!73973 () Bool)

(assert (=> b!74645 m!73973))

(declare-fun m!73975 () Bool)

(assert (=> b!74647 m!73975))

(declare-fun m!73977 () Bool)

(assert (=> d!17713 m!73977))

(declare-fun m!73979 () Bool)

(assert (=> d!17713 m!73979))

(declare-fun m!73981 () Bool)

(assert (=> bm!6588 m!73981))

(declare-fun m!73983 () Bool)

(assert (=> b!74654 m!73983))

(assert (=> d!16965 d!17713))

(declare-fun d!17715 () Bool)

(declare-fun c!11273 () Bool)

(assert (=> d!17715 (= c!11273 ((_ is Nil!1471) (toList!716 lt!32590)))))

(declare-fun e!48767 () (InoxSet tuple2!2120))

(assert (=> d!17715 (= (content!78 (toList!716 lt!32590)) e!48767)))

(declare-fun b!74655 () Bool)

(assert (=> b!74655 (= e!48767 ((as const (Array tuple2!2120 Bool)) false))))

(declare-fun b!74656 () Bool)

(assert (=> b!74656 (= e!48767 ((_ map or) (store ((as const (Array tuple2!2120 Bool)) false) (h!2057 (toList!716 lt!32590)) true) (content!78 (t!5023 (toList!716 lt!32590)))))))

(assert (= (and d!17715 c!11273) b!74655))

(assert (= (and d!17715 (not c!11273)) b!74656))

(declare-fun m!73985 () Bool)

(assert (=> b!74656 m!73985))

(declare-fun m!73987 () Bool)

(assert (=> b!74656 m!73987))

(assert (=> d!16889 d!17715))

(declare-fun d!17717 () Bool)

(declare-fun res!39450 () Bool)

(declare-fun e!48768 () Bool)

(assert (=> d!17717 (=> res!39450 e!48768)))

(assert (=> d!17717 (= res!39450 (and ((_ is Cons!1470) (toList!716 call!6429)) (= (_1!1071 (h!2057 (toList!716 call!6429))) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773)))))))

(assert (=> d!17717 (= (containsKey!137 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))) e!48768)))

(declare-fun b!74657 () Bool)

(declare-fun e!48769 () Bool)

(assert (=> b!74657 (= e!48768 e!48769)))

(declare-fun res!39451 () Bool)

(assert (=> b!74657 (=> (not res!39451) (not e!48769))))

(assert (=> b!74657 (= res!39451 (and (or (not ((_ is Cons!1470) (toList!716 call!6429))) (bvsle (_1!1071 (h!2057 (toList!716 call!6429))) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773)))) ((_ is Cons!1470) (toList!716 call!6429)) (bvslt (_1!1071 (h!2057 (toList!716 call!6429))) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773)))))))

(declare-fun b!74658 () Bool)

(assert (=> b!74658 (= e!48769 (containsKey!137 (t!5023 (toList!716 call!6429)) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(assert (= (and d!17717 (not res!39450)) b!74657))

(assert (= (and b!74657 res!39451) b!74658))

(assert (=> b!74658 m!71485))

(declare-fun m!73989 () Bool)

(assert (=> b!74658 m!73989))

(assert (=> d!16933 d!17717))

(declare-fun d!17719 () Bool)

(declare-fun res!39452 () Bool)

(declare-fun e!48770 () Bool)

(assert (=> d!17719 (=> res!39452 e!48770)))

(assert (=> d!17719 (= res!39452 (= (select (arr!1850 (_keys!3864 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(assert (=> d!17719 (= (arrayContainsKey!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!48770)))

(declare-fun b!74659 () Bool)

(declare-fun e!48771 () Bool)

(assert (=> b!74659 (= e!48770 e!48771)))

(declare-fun res!39453 () Bool)

(assert (=> b!74659 (=> (not res!39453) (not e!48771))))

(assert (=> b!74659 (= res!39453 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74660 () Bool)

(assert (=> b!74660 (= e!48771 (arrayContainsKey!0 (_keys!3864 newMap!16) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!17719 (not res!39452)) b!74659))

(assert (= (and b!74659 res!39453) b!74660))

(assert (=> d!17719 m!72631))

(assert (=> b!74660 m!71143))

(declare-fun m!73991 () Bool)

(assert (=> b!74660 m!73991))

(assert (=> b!73415 d!17719))

(declare-fun lt!33582 () Bool)

(declare-fun d!17721 () Bool)

(assert (=> d!17721 (= lt!33582 (select (content!78 (toList!716 lt!32930)) (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun e!48773 () Bool)

(assert (=> d!17721 (= lt!33582 e!48773)))

(declare-fun res!39454 () Bool)

(assert (=> d!17721 (=> (not res!39454) (not e!48773))))

(assert (=> d!17721 (= res!39454 ((_ is Cons!1470) (toList!716 lt!32930)))))

(assert (=> d!17721 (= (contains!721 (toList!716 lt!32930) (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!33582)))

(declare-fun b!74661 () Bool)

(declare-fun e!48772 () Bool)

(assert (=> b!74661 (= e!48773 e!48772)))

(declare-fun res!39455 () Bool)

(assert (=> b!74661 (=> res!39455 e!48772)))

(assert (=> b!74661 (= res!39455 (= (h!2057 (toList!716 lt!32930)) (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!74662 () Bool)

(assert (=> b!74662 (= e!48772 (contains!721 (t!5023 (toList!716 lt!32930)) (tuple2!2121 lt!32681 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17721 res!39454) b!74661))

(assert (= (and b!74661 (not res!39455)) b!74662))

(declare-fun m!73993 () Bool)

(assert (=> d!17721 m!73993))

(declare-fun m!73995 () Bool)

(assert (=> d!17721 m!73995))

(declare-fun m!73997 () Bool)

(assert (=> b!74662 m!73997))

(assert (=> b!73472 d!17721))

(declare-fun d!17723 () Bool)

(assert (=> d!17723 (= (inRange!0 (ite c!10950 (index!3052 lt!33014) (ite c!10951 (index!3051 lt!33023) (index!3054 lt!33023))) (mask!6179 newMap!16)) (and (bvsge (ite c!10950 (index!3052 lt!33014) (ite c!10951 (index!3051 lt!33023) (index!3054 lt!33023))) #b00000000000000000000000000000000) (bvslt (ite c!10950 (index!3052 lt!33014) (ite c!10951 (index!3051 lt!33023) (index!3054 lt!33023))) (bvadd (mask!6179 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6474 d!17723))

(declare-fun d!17725 () Bool)

(assert (=> d!17725 (= (apply!75 lt!32892 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1153 (getValueByKey!134 (toList!716 lt!32892) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3225 () Bool)

(assert (= bs!3225 d!17725))

(assert (=> bs!3225 m!73565))

(assert (=> bs!3225 m!73565))

(declare-fun m!73999 () Bool)

(assert (=> bs!3225 m!73999))

(assert (=> b!73455 d!17725))

(declare-fun d!17727 () Bool)

(declare-fun res!39456 () Bool)

(declare-fun e!48774 () Bool)

(assert (=> d!17727 (=> res!39456 e!48774)))

(assert (=> d!17727 (= res!39456 (and ((_ is Cons!1470) lt!32595) (= (_1!1071 (h!2057 lt!32595)) (_1!1071 lt!32485))))))

(assert (=> d!17727 (= (containsKey!137 lt!32595 (_1!1071 lt!32485)) e!48774)))

(declare-fun b!74663 () Bool)

(declare-fun e!48775 () Bool)

(assert (=> b!74663 (= e!48774 e!48775)))

(declare-fun res!39457 () Bool)

(assert (=> b!74663 (=> (not res!39457) (not e!48775))))

(assert (=> b!74663 (= res!39457 (and (or (not ((_ is Cons!1470) lt!32595)) (bvsle (_1!1071 (h!2057 lt!32595)) (_1!1071 lt!32485))) ((_ is Cons!1470) lt!32595) (bvslt (_1!1071 (h!2057 lt!32595)) (_1!1071 lt!32485))))))

(declare-fun b!74664 () Bool)

(assert (=> b!74664 (= e!48775 (containsKey!137 (t!5023 lt!32595) (_1!1071 lt!32485)))))

(assert (= (and d!17727 (not res!39456)) b!74663))

(assert (= (and b!74663 res!39457) b!74664))

(declare-fun m!74001 () Bool)

(assert (=> b!74664 m!74001))

(assert (=> b!73285 d!17727))

(assert (=> b!73276 d!17541))

(assert (=> b!73276 d!17079))

(declare-fun d!17729 () Bool)

(declare-fun e!48776 () Bool)

(assert (=> d!17729 e!48776))

(declare-fun res!39458 () Bool)

(assert (=> d!17729 (=> (not res!39458) (not e!48776))))

(declare-fun lt!33585 () ListLongMap!1401)

(assert (=> d!17729 (= res!39458 (contains!720 lt!33585 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!33586 () List!1474)

(assert (=> d!17729 (= lt!33585 (ListLongMap!1402 lt!33586))))

(declare-fun lt!33584 () Unit!2076)

(declare-fun lt!33583 () Unit!2076)

(assert (=> d!17729 (= lt!33584 lt!33583)))

(assert (=> d!17729 (= (getValueByKey!134 lt!33586 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17729 (= lt!33583 (lemmaContainsTupThenGetReturnValue!51 lt!33586 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17729 (= lt!33586 (insertStrictlySorted!54 (toList!716 call!6489) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17729 (= (+!93 call!6489 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!33585)))

(declare-fun b!74665 () Bool)

(declare-fun res!39459 () Bool)

(assert (=> b!74665 (=> (not res!39459) (not e!48776))))

(assert (=> b!74665 (= res!39459 (= (getValueByKey!134 (toList!716 lt!33585) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!74666 () Bool)

(assert (=> b!74666 (= e!48776 (contains!721 (toList!716 lt!33585) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1149 (select (arr!1851 (_values!2195 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!329 (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17729 res!39458) b!74665))

(assert (= (and b!74665 res!39459) b!74666))

(declare-fun m!74003 () Bool)

(assert (=> d!17729 m!74003))

(declare-fun m!74005 () Bool)

(assert (=> d!17729 m!74005))

(declare-fun m!74007 () Bool)

(assert (=> d!17729 m!74007))

(declare-fun m!74009 () Bool)

(assert (=> d!17729 m!74009))

(declare-fun m!74011 () Bool)

(assert (=> b!74665 m!74011))

(declare-fun m!74013 () Bool)

(assert (=> b!74666 m!74013))

(assert (=> b!73630 d!17729))

(assert (=> b!73630 d!17581))

(declare-fun d!17731 () Bool)

(declare-fun e!48777 () Bool)

(assert (=> d!17731 e!48777))

(declare-fun res!39460 () Bool)

(assert (=> d!17731 (=> (not res!39460) (not e!48777))))

(declare-fun lt!33589 () ListLongMap!1401)

(assert (=> d!17731 (= res!39460 (contains!720 lt!33589 (_1!1071 (tuple2!2121 lt!33107 lt!33111))))))

(declare-fun lt!33590 () List!1474)

(assert (=> d!17731 (= lt!33589 (ListLongMap!1402 lt!33590))))

(declare-fun lt!33588 () Unit!2076)

(declare-fun lt!33587 () Unit!2076)

(assert (=> d!17731 (= lt!33588 lt!33587)))

(assert (=> d!17731 (= (getValueByKey!134 lt!33590 (_1!1071 (tuple2!2121 lt!33107 lt!33111))) (Some!139 (_2!1071 (tuple2!2121 lt!33107 lt!33111))))))

(assert (=> d!17731 (= lt!33587 (lemmaContainsTupThenGetReturnValue!51 lt!33590 (_1!1071 (tuple2!2121 lt!33107 lt!33111)) (_2!1071 (tuple2!2121 lt!33107 lt!33111))))))

(assert (=> d!17731 (= lt!33590 (insertStrictlySorted!54 (toList!716 lt!33108) (_1!1071 (tuple2!2121 lt!33107 lt!33111)) (_2!1071 (tuple2!2121 lt!33107 lt!33111))))))

(assert (=> d!17731 (= (+!93 lt!33108 (tuple2!2121 lt!33107 lt!33111)) lt!33589)))

(declare-fun b!74667 () Bool)

(declare-fun res!39461 () Bool)

(assert (=> b!74667 (=> (not res!39461) (not e!48777))))

(assert (=> b!74667 (= res!39461 (= (getValueByKey!134 (toList!716 lt!33589) (_1!1071 (tuple2!2121 lt!33107 lt!33111))) (Some!139 (_2!1071 (tuple2!2121 lt!33107 lt!33111)))))))

(declare-fun b!74668 () Bool)

(assert (=> b!74668 (= e!48777 (contains!721 (toList!716 lt!33589) (tuple2!2121 lt!33107 lt!33111)))))

(assert (= (and d!17731 res!39460) b!74667))

(assert (= (and b!74667 res!39461) b!74668))

(declare-fun m!74015 () Bool)

(assert (=> d!17731 m!74015))

(declare-fun m!74017 () Bool)

(assert (=> d!17731 m!74017))

(declare-fun m!74019 () Bool)

(assert (=> d!17731 m!74019))

(declare-fun m!74021 () Bool)

(assert (=> d!17731 m!74021))

(declare-fun m!74023 () Bool)

(assert (=> b!74667 m!74023))

(declare-fun m!74025 () Bool)

(assert (=> b!74668 m!74025))

(assert (=> b!73630 d!17731))

(declare-fun d!17733 () Bool)

(declare-fun e!48778 () Bool)

(assert (=> d!17733 e!48778))

(declare-fun res!39462 () Bool)

(assert (=> d!17733 (=> res!39462 e!48778)))

(declare-fun lt!33592 () Bool)

(assert (=> d!17733 (= res!39462 (not lt!33592))))

(declare-fun lt!33594 () Bool)

(assert (=> d!17733 (= lt!33592 lt!33594)))

(declare-fun lt!33593 () Unit!2076)

(declare-fun e!48779 () Unit!2076)

(assert (=> d!17733 (= lt!33593 e!48779)))

(declare-fun c!11274 () Bool)

(assert (=> d!17733 (= c!11274 lt!33594)))

(assert (=> d!17733 (= lt!33594 (containsKey!137 (toList!716 (+!93 lt!33108 (tuple2!2121 lt!33107 lt!33111))) lt!33110))))

(assert (=> d!17733 (= (contains!720 (+!93 lt!33108 (tuple2!2121 lt!33107 lt!33111)) lt!33110) lt!33592)))

(declare-fun b!74669 () Bool)

(declare-fun lt!33591 () Unit!2076)

(assert (=> b!74669 (= e!48779 lt!33591)))

(assert (=> b!74669 (= lt!33591 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (+!93 lt!33108 (tuple2!2121 lt!33107 lt!33111))) lt!33110))))

(assert (=> b!74669 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!33108 (tuple2!2121 lt!33107 lt!33111))) lt!33110))))

(declare-fun b!74670 () Bool)

(declare-fun Unit!2147 () Unit!2076)

(assert (=> b!74670 (= e!48779 Unit!2147)))

(declare-fun b!74671 () Bool)

(assert (=> b!74671 (= e!48778 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!33108 (tuple2!2121 lt!33107 lt!33111))) lt!33110)))))

(assert (= (and d!17733 c!11274) b!74669))

(assert (= (and d!17733 (not c!11274)) b!74670))

(assert (= (and d!17733 (not res!39462)) b!74671))

(declare-fun m!74027 () Bool)

(assert (=> d!17733 m!74027))

(declare-fun m!74029 () Bool)

(assert (=> b!74669 m!74029))

(declare-fun m!74031 () Bool)

(assert (=> b!74669 m!74031))

(assert (=> b!74669 m!74031))

(declare-fun m!74033 () Bool)

(assert (=> b!74669 m!74033))

(assert (=> b!74671 m!74031))

(assert (=> b!74671 m!74031))

(assert (=> b!74671 m!74033))

(assert (=> b!73630 d!17733))

(declare-fun d!17735 () Bool)

(assert (=> d!17735 (not (contains!720 (+!93 lt!33108 (tuple2!2121 lt!33107 lt!33111)) lt!33110))))

(declare-fun lt!33595 () Unit!2076)

(assert (=> d!17735 (= lt!33595 (choose!421 lt!33108 lt!33107 lt!33111 lt!33110))))

(declare-fun e!48780 () Bool)

(assert (=> d!17735 e!48780))

(declare-fun res!39463 () Bool)

(assert (=> d!17735 (=> (not res!39463) (not e!48780))))

(assert (=> d!17735 (= res!39463 (not (contains!720 lt!33108 lt!33110)))))

(assert (=> d!17735 (= (addStillNotContains!26 lt!33108 lt!33107 lt!33111 lt!33110) lt!33595)))

(declare-fun b!74672 () Bool)

(assert (=> b!74672 (= e!48780 (not (= lt!33107 lt!33110)))))

(assert (= (and d!17735 res!39463) b!74672))

(assert (=> d!17735 m!72207))

(assert (=> d!17735 m!72207))

(assert (=> d!17735 m!72209))

(declare-fun m!74035 () Bool)

(assert (=> d!17735 m!74035))

(declare-fun m!74037 () Bool)

(assert (=> d!17735 m!74037))

(assert (=> b!73630 d!17735))

(declare-fun d!17737 () Bool)

(declare-fun lt!33596 () Bool)

(assert (=> d!17737 (= lt!33596 (select (content!78 (t!5023 (toList!716 lt!32590))) lt!32492))))

(declare-fun e!48782 () Bool)

(assert (=> d!17737 (= lt!33596 e!48782)))

(declare-fun res!39464 () Bool)

(assert (=> d!17737 (=> (not res!39464) (not e!48782))))

(assert (=> d!17737 (= res!39464 ((_ is Cons!1470) (t!5023 (toList!716 lt!32590))))))

(assert (=> d!17737 (= (contains!721 (t!5023 (toList!716 lt!32590)) lt!32492) lt!33596)))

(declare-fun b!74673 () Bool)

(declare-fun e!48781 () Bool)

(assert (=> b!74673 (= e!48782 e!48781)))

(declare-fun res!39465 () Bool)

(assert (=> b!74673 (=> res!39465 e!48781)))

(assert (=> b!74673 (= res!39465 (= (h!2057 (t!5023 (toList!716 lt!32590))) lt!32492))))

(declare-fun b!74674 () Bool)

(assert (=> b!74674 (= e!48781 (contains!721 (t!5023 (t!5023 (toList!716 lt!32590))) lt!32492))))

(assert (= (and d!17737 res!39464) b!74673))

(assert (= (and b!74673 (not res!39465)) b!74674))

(assert (=> d!17737 m!73987))

(declare-fun m!74039 () Bool)

(assert (=> d!17737 m!74039))

(declare-fun m!74041 () Bool)

(assert (=> b!74674 m!74041))

(assert (=> b!73240 d!17737))

(assert (=> d!16955 d!16953))

(declare-fun d!17739 () Bool)

(assert (=> d!17739 (= (getValueByKey!134 lt!32580 (_1!1071 lt!32492)) (Some!139 (_2!1071 lt!32492)))))

(assert (=> d!17739 true))

(declare-fun _$22!388 () Unit!2076)

(assert (=> d!17739 (= (choose!419 lt!32580 (_1!1071 lt!32492) (_2!1071 lt!32492)) _$22!388)))

(declare-fun bs!3226 () Bool)

(assert (= bs!3226 d!17739))

(assert (=> bs!3226 m!71313))

(assert (=> d!16955 d!17739))

(declare-fun d!17741 () Bool)

(declare-fun res!39466 () Bool)

(declare-fun e!48783 () Bool)

(assert (=> d!17741 (=> res!39466 e!48783)))

(assert (=> d!17741 (= res!39466 (or ((_ is Nil!1471) lt!32580) ((_ is Nil!1471) (t!5023 lt!32580))))))

(assert (=> d!17741 (= (isStrictlySorted!279 lt!32580) e!48783)))

(declare-fun b!74675 () Bool)

(declare-fun e!48784 () Bool)

(assert (=> b!74675 (= e!48783 e!48784)))

(declare-fun res!39467 () Bool)

(assert (=> b!74675 (=> (not res!39467) (not e!48784))))

(assert (=> b!74675 (= res!39467 (bvslt (_1!1071 (h!2057 lt!32580)) (_1!1071 (h!2057 (t!5023 lt!32580)))))))

(declare-fun b!74676 () Bool)

(assert (=> b!74676 (= e!48784 (isStrictlySorted!279 (t!5023 lt!32580)))))

(assert (= (and d!17741 (not res!39466)) b!74675))

(assert (= (and b!74675 res!39467) b!74676))

(declare-fun m!74043 () Bool)

(assert (=> b!74676 m!74043))

(assert (=> d!16955 d!17741))

(assert (=> b!73581 d!17549))

(assert (=> b!73581 d!17551))

(declare-fun d!17743 () Bool)

(declare-fun e!48785 () Bool)

(assert (=> d!17743 e!48785))

(declare-fun res!39468 () Bool)

(assert (=> d!17743 (=> (not res!39468) (not e!48785))))

(declare-fun lt!33599 () ListLongMap!1401)

(assert (=> d!17743 (= res!39468 (contains!720 lt!33599 (_1!1071 (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(declare-fun lt!33600 () List!1474)

(assert (=> d!17743 (= lt!33599 (ListLongMap!1402 lt!33600))))

(declare-fun lt!33598 () Unit!2076)

(declare-fun lt!33597 () Unit!2076)

(assert (=> d!17743 (= lt!33598 lt!33597)))

(assert (=> d!17743 (= (getValueByKey!134 lt!33600 (_1!1071 (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))) (Some!139 (_2!1071 (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17743 (= lt!33597 (lemmaContainsTupThenGetReturnValue!51 lt!33600 (_1!1071 (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (_2!1071 (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17743 (= lt!33600 (insertStrictlySorted!54 (toList!716 (ite c!10953 call!6484 (ite c!10955 call!6485 call!6479))) (_1!1071 (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (_2!1071 (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17743 (= (+!93 (ite c!10953 call!6484 (ite c!10955 call!6485 call!6479)) (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) lt!33599)))

(declare-fun b!74677 () Bool)

(declare-fun res!39469 () Bool)

(assert (=> b!74677 (=> (not res!39469) (not e!48785))))

(assert (=> b!74677 (= res!39469 (= (getValueByKey!134 (toList!716 lt!33599) (_1!1071 (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))) (Some!139 (_2!1071 (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))))

(declare-fun b!74678 () Bool)

(assert (=> b!74678 (= e!48785 (contains!721 (toList!716 lt!33599) (ite (or c!10953 c!10955) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (= (and d!17743 res!39468) b!74677))

(assert (= (and b!74677 res!39469) b!74678))

(declare-fun m!74045 () Bool)

(assert (=> d!17743 m!74045))

(declare-fun m!74047 () Bool)

(assert (=> d!17743 m!74047))

(declare-fun m!74049 () Bool)

(assert (=> d!17743 m!74049))

(declare-fun m!74051 () Bool)

(assert (=> d!17743 m!74051))

(declare-fun m!74053 () Bool)

(assert (=> b!74677 m!74053))

(declare-fun m!74055 () Bool)

(assert (=> b!74678 m!74055))

(assert (=> bm!6480 d!17743))

(declare-fun d!17745 () Bool)

(assert (=> d!17745 (arrayContainsKey!0 (_keys!3864 newMap!16) lt!33059 #b00000000000000000000000000000000)))

(declare-fun lt!33601 () Unit!2076)

(assert (=> d!17745 (= lt!33601 (choose!13 (_keys!3864 newMap!16) lt!33059 #b00000000000000000000000000000000))))

(assert (=> d!17745 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!17745 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3864 newMap!16) lt!33059 #b00000000000000000000000000000000) lt!33601)))

(declare-fun bs!3227 () Bool)

(assert (= bs!3227 d!17745))

(assert (=> bs!3227 m!72083))

(declare-fun m!74057 () Bool)

(assert (=> bs!3227 m!74057))

(assert (=> b!73564 d!17745))

(declare-fun d!17747 () Bool)

(declare-fun res!39470 () Bool)

(declare-fun e!48786 () Bool)

(assert (=> d!17747 (=> res!39470 e!48786)))

(assert (=> d!17747 (= res!39470 (= (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) lt!33059))))

(assert (=> d!17747 (= (arrayContainsKey!0 (_keys!3864 newMap!16) lt!33059 #b00000000000000000000000000000000) e!48786)))

(declare-fun b!74679 () Bool)

(declare-fun e!48787 () Bool)

(assert (=> b!74679 (= e!48786 e!48787)))

(declare-fun res!39471 () Bool)

(assert (=> b!74679 (=> (not res!39471) (not e!48787))))

(assert (=> b!74679 (= res!39471 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74680 () Bool)

(assert (=> b!74680 (= e!48787 (arrayContainsKey!0 (_keys!3864 newMap!16) lt!33059 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!17747 (not res!39470)) b!74679))

(assert (= (and b!74679 res!39471) b!74680))

(assert (=> d!17747 m!71603))

(declare-fun m!74059 () Bool)

(assert (=> b!74680 m!74059))

(assert (=> b!73564 d!17747))

(declare-fun b!74681 () Bool)

(declare-fun e!48790 () SeekEntryResult!230)

(declare-fun e!48789 () SeekEntryResult!230)

(assert (=> b!74681 (= e!48790 e!48789)))

(declare-fun lt!33603 () (_ BitVec 64))

(declare-fun lt!33604 () SeekEntryResult!230)

(assert (=> b!74681 (= lt!33603 (select (arr!1850 (_keys!3864 newMap!16)) (index!3053 lt!33604)))))

(declare-fun c!11277 () Bool)

(assert (=> b!74681 (= c!11277 (= lt!33603 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74682 () Bool)

(declare-fun e!48788 () SeekEntryResult!230)

(assert (=> b!74682 (= e!48788 (seekKeyOrZeroReturnVacant!0 (x!11146 lt!33604) (index!3053 lt!33604) (index!3053 lt!33604) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(declare-fun b!74683 () Bool)

(assert (=> b!74683 (= e!48788 (MissingZero!230 (index!3053 lt!33604)))))

(declare-fun b!74684 () Bool)

(declare-fun c!11276 () Bool)

(assert (=> b!74684 (= c!11276 (= lt!33603 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74684 (= e!48789 e!48788)))

(declare-fun d!17749 () Bool)

(declare-fun lt!33602 () SeekEntryResult!230)

(assert (=> d!17749 (and (or ((_ is Undefined!230) lt!33602) (not ((_ is Found!230) lt!33602)) (and (bvsge (index!3052 lt!33602) #b00000000000000000000000000000000) (bvslt (index!3052 lt!33602) (size!2088 (_keys!3864 newMap!16))))) (or ((_ is Undefined!230) lt!33602) ((_ is Found!230) lt!33602) (not ((_ is MissingZero!230) lt!33602)) (and (bvsge (index!3051 lt!33602) #b00000000000000000000000000000000) (bvslt (index!3051 lt!33602) (size!2088 (_keys!3864 newMap!16))))) (or ((_ is Undefined!230) lt!33602) ((_ is Found!230) lt!33602) ((_ is MissingZero!230) lt!33602) (not ((_ is MissingVacant!230) lt!33602)) (and (bvsge (index!3054 lt!33602) #b00000000000000000000000000000000) (bvslt (index!3054 lt!33602) (size!2088 (_keys!3864 newMap!16))))) (or ((_ is Undefined!230) lt!33602) (ite ((_ is Found!230) lt!33602) (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!33602)) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!230) lt!33602) (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3051 lt!33602)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!230) lt!33602) (= (select (arr!1850 (_keys!3864 newMap!16)) (index!3054 lt!33602)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17749 (= lt!33602 e!48790)))

(declare-fun c!11275 () Bool)

(assert (=> d!17749 (= c!11275 (and ((_ is Intermediate!230) lt!33604) (undefined!1042 lt!33604)))))

(assert (=> d!17749 (= lt!33604 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) (mask!6179 newMap!16)) (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) (_keys!3864 newMap!16) (mask!6179 newMap!16)))))

(assert (=> d!17749 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17749 (= (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000) (_keys!3864 newMap!16) (mask!6179 newMap!16)) lt!33602)))

(declare-fun b!74685 () Bool)

(assert (=> b!74685 (= e!48789 (Found!230 (index!3053 lt!33604)))))

(declare-fun b!74686 () Bool)

(assert (=> b!74686 (= e!48790 Undefined!230)))

(assert (= (and d!17749 c!11275) b!74686))

(assert (= (and d!17749 (not c!11275)) b!74681))

(assert (= (and b!74681 c!11277) b!74685))

(assert (= (and b!74681 (not c!11277)) b!74684))

(assert (= (and b!74684 c!11276) b!74683))

(assert (= (and b!74684 (not c!11276)) b!74682))

(declare-fun m!74061 () Bool)

(assert (=> b!74681 m!74061))

(assert (=> b!74682 m!71603))

(declare-fun m!74063 () Bool)

(assert (=> b!74682 m!74063))

(assert (=> d!17749 m!71557))

(assert (=> d!17749 m!71603))

(declare-fun m!74065 () Bool)

(assert (=> d!17749 m!74065))

(declare-fun m!74067 () Bool)

(assert (=> d!17749 m!74067))

(declare-fun m!74069 () Bool)

(assert (=> d!17749 m!74069))

(declare-fun m!74071 () Bool)

(assert (=> d!17749 m!74071))

(assert (=> d!17749 m!74065))

(assert (=> d!17749 m!71603))

(declare-fun m!74073 () Bool)

(assert (=> d!17749 m!74073))

(assert (=> b!73564 d!17749))

(assert (=> b!73683 d!17561))

(declare-fun d!17751 () Bool)

(assert (=> d!17751 (= (get!1153 (getValueByKey!134 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2538 (getValueByKey!134 (toList!716 lt!32666) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17031 d!17751))

(assert (=> d!17031 d!17477))

(declare-fun lt!33605 () Bool)

(declare-fun d!17753 () Bool)

(assert (=> d!17753 (= lt!33605 (select (content!78 (toList!716 lt!32911)) (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun e!48792 () Bool)

(assert (=> d!17753 (= lt!33605 e!48792)))

(declare-fun res!39472 () Bool)

(assert (=> d!17753 (=> (not res!39472) (not e!48792))))

(assert (=> d!17753 (= res!39472 ((_ is Cons!1470) (toList!716 lt!32911)))))

(assert (=> d!17753 (= (contains!721 (toList!716 lt!32911) (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!33605)))

(declare-fun b!74687 () Bool)

(declare-fun e!48791 () Bool)

(assert (=> b!74687 (= e!48792 e!48791)))

(declare-fun res!39473 () Bool)

(assert (=> b!74687 (=> res!39473 e!48791)))

(assert (=> b!74687 (= res!39473 (= (h!2057 (toList!716 lt!32911)) (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!74688 () Bool)

(assert (=> b!74688 (= e!48791 (contains!721 (t!5023 (toList!716 lt!32911)) (tuple2!2121 lt!32674 (minValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17753 res!39472) b!74687))

(assert (= (and b!74687 (not res!39473)) b!74688))

(declare-fun m!74075 () Bool)

(assert (=> d!17753 m!74075))

(declare-fun m!74077 () Bool)

(assert (=> d!17753 m!74077))

(declare-fun m!74079 () Bool)

(assert (=> b!74688 m!74079))

(assert (=> b!73459 d!17753))

(declare-fun d!17755 () Bool)

(assert (=> d!17755 (= (apply!75 lt!33035 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1153 (getValueByKey!134 (toList!716 lt!33035) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3228 () Bool)

(assert (= bs!3228 d!17755))

(assert (=> bs!3228 m!73553))

(assert (=> bs!3228 m!73553))

(declare-fun m!74081 () Bool)

(assert (=> bs!3228 m!74081))

(assert (=> b!73548 d!17755))

(assert (=> b!73627 d!16879))

(declare-fun b!74690 () Bool)

(declare-fun e!48793 () Option!140)

(declare-fun e!48794 () Option!140)

(assert (=> b!74690 (= e!48793 e!48794)))

(declare-fun c!11279 () Bool)

(assert (=> b!74690 (= c!11279 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32488))) (not (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32488)))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))))

(declare-fun b!74689 () Bool)

(assert (=> b!74689 (= e!48793 (Some!139 (_2!1071 (h!2057 (t!5023 (toList!716 lt!32488))))))))

(declare-fun d!17757 () Bool)

(declare-fun c!11278 () Bool)

(assert (=> d!17757 (= c!11278 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32488))) (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32488)))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355))))))

(assert (=> d!17757 (= (getValueByKey!134 (t!5023 (toList!716 lt!32488)) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)) e!48793)))

(declare-fun b!74691 () Bool)

(assert (=> b!74691 (= e!48794 (getValueByKey!134 (t!5023 (t!5023 (toList!716 lt!32488))) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355)))))

(declare-fun b!74692 () Bool)

(assert (=> b!74692 (= e!48794 None!138)))

(assert (= (and d!17757 c!11278) b!74689))

(assert (= (and d!17757 (not c!11278)) b!74690))

(assert (= (and b!74690 c!11279) b!74691))

(assert (= (and b!74690 (not c!11279)) b!74692))

(assert (=> b!74691 m!71143))

(declare-fun m!74083 () Bool)

(assert (=> b!74691 m!74083))

(assert (=> b!73272 d!17757))

(assert (=> b!73518 d!17021))

(assert (=> b!73381 d!17469))

(assert (=> b!73381 d!17001))

(declare-fun b!74693 () Bool)

(declare-fun e!48802 () Bool)

(assert (=> b!74693 (= e!48802 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74694 () Bool)

(declare-fun e!48805 () Bool)

(declare-fun e!48800 () Bool)

(assert (=> b!74694 (= e!48805 e!48800)))

(declare-fun c!11285 () Bool)

(assert (=> b!74694 (= c!11285 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74695 () Bool)

(declare-fun e!48803 () Bool)

(declare-fun call!6597 () Bool)

(assert (=> b!74695 (= e!48803 (not call!6597))))

(declare-fun b!74696 () Bool)

(declare-fun e!48807 () Unit!2076)

(declare-fun Unit!2148 () Unit!2076)

(assert (=> b!74696 (= e!48807 Unit!2148)))

(declare-fun call!6598 () ListLongMap!1401)

(declare-fun bm!6590 () Bool)

(assert (=> bm!6590 (= call!6598 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!74697 () Bool)

(declare-fun e!48799 () Bool)

(assert (=> b!74697 (= e!48803 e!48799)))

(declare-fun res!39476 () Bool)

(assert (=> b!74697 (= res!39476 call!6597)))

(assert (=> b!74697 (=> (not res!39476) (not e!48799))))

(declare-fun bm!6591 () Bool)

(declare-fun call!6593 () ListLongMap!1401)

(declare-fun call!6599 () ListLongMap!1401)

(assert (=> bm!6591 (= call!6593 call!6599)))

(declare-fun b!74698 () Bool)

(declare-fun e!48796 () Bool)

(declare-fun e!48795 () Bool)

(assert (=> b!74698 (= e!48796 e!48795)))

(declare-fun res!39475 () Bool)

(assert (=> b!74698 (=> (not res!39475) (not e!48795))))

(declare-fun lt!33611 () ListLongMap!1401)

(assert (=> b!74698 (= res!39475 (contains!720 lt!33611 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74698 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun bm!6592 () Bool)

(assert (=> bm!6592 (= call!6599 call!6598)))

(declare-fun b!74699 () Bool)

(declare-fun lt!33607 () Unit!2076)

(assert (=> b!74699 (= e!48807 lt!33607)))

(declare-fun lt!33621 () ListLongMap!1401)

(assert (=> b!74699 (= lt!33621 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33626 () (_ BitVec 64))

(assert (=> b!74699 (= lt!33626 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33606 () (_ BitVec 64))

(assert (=> b!74699 (= lt!33606 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33620 () Unit!2076)

(assert (=> b!74699 (= lt!33620 (addStillContains!51 lt!33621 lt!33626 (zeroValue!2114 newMap!16) lt!33606))))

(assert (=> b!74699 (contains!720 (+!93 lt!33621 (tuple2!2121 lt!33626 (zeroValue!2114 newMap!16))) lt!33606)))

(declare-fun lt!33615 () Unit!2076)

(assert (=> b!74699 (= lt!33615 lt!33620)))

(declare-fun lt!33624 () ListLongMap!1401)

(assert (=> b!74699 (= lt!33624 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33619 () (_ BitVec 64))

(assert (=> b!74699 (= lt!33619 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33623 () (_ BitVec 64))

(assert (=> b!74699 (= lt!33623 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33622 () Unit!2076)

(assert (=> b!74699 (= lt!33622 (addApplyDifferent!51 lt!33624 lt!33619 (minValue!2114 newMap!16) lt!33623))))

(assert (=> b!74699 (= (apply!75 (+!93 lt!33624 (tuple2!2121 lt!33619 (minValue!2114 newMap!16))) lt!33623) (apply!75 lt!33624 lt!33623))))

(declare-fun lt!33612 () Unit!2076)

(assert (=> b!74699 (= lt!33612 lt!33622)))

(declare-fun lt!33609 () ListLongMap!1401)

(assert (=> b!74699 (= lt!33609 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33610 () (_ BitVec 64))

(assert (=> b!74699 (= lt!33610 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33617 () (_ BitVec 64))

(assert (=> b!74699 (= lt!33617 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33625 () Unit!2076)

(assert (=> b!74699 (= lt!33625 (addApplyDifferent!51 lt!33609 lt!33610 (zeroValue!2114 newMap!16) lt!33617))))

(assert (=> b!74699 (= (apply!75 (+!93 lt!33609 (tuple2!2121 lt!33610 (zeroValue!2114 newMap!16))) lt!33617) (apply!75 lt!33609 lt!33617))))

(declare-fun lt!33608 () Unit!2076)

(assert (=> b!74699 (= lt!33608 lt!33625)))

(declare-fun lt!33613 () ListLongMap!1401)

(assert (=> b!74699 (= lt!33613 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33618 () (_ BitVec 64))

(assert (=> b!74699 (= lt!33618 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33627 () (_ BitVec 64))

(assert (=> b!74699 (= lt!33627 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74699 (= lt!33607 (addApplyDifferent!51 lt!33613 lt!33618 (minValue!2114 newMap!16) lt!33627))))

(assert (=> b!74699 (= (apply!75 (+!93 lt!33613 (tuple2!2121 lt!33618 (minValue!2114 newMap!16))) lt!33627) (apply!75 lt!33613 lt!33627))))

(declare-fun bm!6593 () Bool)

(declare-fun call!6596 () ListLongMap!1401)

(declare-fun call!6595 () ListLongMap!1401)

(assert (=> bm!6593 (= call!6596 call!6595)))

(declare-fun b!74700 () Bool)

(declare-fun e!48797 () ListLongMap!1401)

(assert (=> b!74700 (= e!48797 call!6596)))

(declare-fun b!74701 () Bool)

(declare-fun res!39481 () Bool)

(assert (=> b!74701 (=> (not res!39481) (not e!48805))))

(assert (=> b!74701 (= res!39481 e!48803)))

(declare-fun c!11281 () Bool)

(assert (=> b!74701 (= c!11281 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74702 () Bool)

(declare-fun call!6594 () Bool)

(assert (=> b!74702 (= e!48800 (not call!6594))))

(declare-fun b!74703 () Bool)

(declare-fun e!48806 () ListLongMap!1401)

(assert (=> b!74703 (= e!48806 (+!93 call!6595 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!74704 () Bool)

(assert (=> b!74704 (= e!48806 e!48797)))

(declare-fun c!11282 () Bool)

(assert (=> b!74704 (= c!11282 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6594 () Bool)

(declare-fun c!11280 () Bool)

(assert (=> bm!6594 (= call!6595 (+!93 (ite c!11280 call!6598 (ite c!11282 call!6599 call!6593)) (ite (or c!11280 c!11282) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!74705 () Bool)

(declare-fun res!39474 () Bool)

(assert (=> b!74705 (=> (not res!39474) (not e!48805))))

(assert (=> b!74705 (= res!39474 e!48796)))

(declare-fun res!39479 () Bool)

(assert (=> b!74705 (=> res!39479 e!48796)))

(declare-fun e!48801 () Bool)

(assert (=> b!74705 (= res!39479 (not e!48801))))

(declare-fun res!39482 () Bool)

(assert (=> b!74705 (=> (not res!39482) (not e!48801))))

(assert (=> b!74705 (= res!39482 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74706 () Bool)

(assert (=> b!74706 (= e!48799 (= (apply!75 lt!33611 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!74707 () Bool)

(declare-fun e!48804 () ListLongMap!1401)

(assert (=> b!74707 (= e!48804 call!6593)))

(declare-fun b!74708 () Bool)

(declare-fun e!48798 () Bool)

(assert (=> b!74708 (= e!48800 e!48798)))

(declare-fun res!39478 () Bool)

(assert (=> b!74708 (= res!39478 call!6594)))

(assert (=> b!74708 (=> (not res!39478) (not e!48798))))

(declare-fun bm!6595 () Bool)

(assert (=> bm!6595 (= call!6597 (contains!720 lt!33611 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17759 () Bool)

(assert (=> d!17759 e!48805))

(declare-fun res!39480 () Bool)

(assert (=> d!17759 (=> (not res!39480) (not e!48805))))

(assert (=> d!17759 (= res!39480 (or (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))))

(declare-fun lt!33616 () ListLongMap!1401)

(assert (=> d!17759 (= lt!33611 lt!33616)))

(declare-fun lt!33614 () Unit!2076)

(assert (=> d!17759 (= lt!33614 e!48807)))

(declare-fun c!11283 () Bool)

(assert (=> d!17759 (= c!11283 e!48802)))

(declare-fun res!39477 () Bool)

(assert (=> d!17759 (=> (not res!39477) (not e!48802))))

(assert (=> d!17759 (= res!39477 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17759 (= lt!33616 e!48806)))

(assert (=> d!17759 (= c!11280 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17759 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17759 (= (getCurrentListMap!414 (_keys!3864 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33611)))

(declare-fun bm!6596 () Bool)

(assert (=> bm!6596 (= call!6594 (contains!720 lt!33611 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74709 () Bool)

(assert (=> b!74709 (= e!48804 call!6596)))

(declare-fun b!74710 () Bool)

(assert (=> b!74710 (= e!48795 (= (apply!75 lt!33611 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74710 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))))))))

(assert (=> b!74710 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74711 () Bool)

(assert (=> b!74711 (= e!48798 (= (apply!75 lt!33611 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun b!74712 () Bool)

(assert (=> b!74712 (= e!48801 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74713 () Bool)

(declare-fun c!11284 () Bool)

(assert (=> b!74713 (= c!11284 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74713 (= e!48797 e!48804)))

(assert (= (and d!17759 c!11280) b!74703))

(assert (= (and d!17759 (not c!11280)) b!74704))

(assert (= (and b!74704 c!11282) b!74700))

(assert (= (and b!74704 (not c!11282)) b!74713))

(assert (= (and b!74713 c!11284) b!74709))

(assert (= (and b!74713 (not c!11284)) b!74707))

(assert (= (or b!74709 b!74707) bm!6591))

(assert (= (or b!74700 bm!6591) bm!6592))

(assert (= (or b!74700 b!74709) bm!6593))

(assert (= (or b!74703 bm!6592) bm!6590))

(assert (= (or b!74703 bm!6593) bm!6594))

(assert (= (and d!17759 res!39477) b!74693))

(assert (= (and d!17759 c!11283) b!74699))

(assert (= (and d!17759 (not c!11283)) b!74696))

(assert (= (and d!17759 res!39480) b!74705))

(assert (= (and b!74705 res!39482) b!74712))

(assert (= (and b!74705 (not res!39479)) b!74698))

(assert (= (and b!74698 res!39475) b!74710))

(assert (= (and b!74705 res!39474) b!74701))

(assert (= (and b!74701 c!11281) b!74697))

(assert (= (and b!74701 (not c!11281)) b!74695))

(assert (= (and b!74697 res!39476) b!74706))

(assert (= (or b!74697 b!74695) bm!6595))

(assert (= (and b!74701 res!39481) b!74694))

(assert (= (and b!74694 c!11285) b!74708))

(assert (= (and b!74694 (not c!11285)) b!74702))

(assert (= (and b!74708 res!39478) b!74711))

(assert (= (or b!74708 b!74702) bm!6596))

(declare-fun b_lambda!3343 () Bool)

(assert (=> (not b_lambda!3343) (not b!74710)))

(assert (=> b!74710 t!5036))

(declare-fun b_and!4573 () Bool)

(assert (= b_and!4569 (and (=> t!5036 result!2689) b_and!4573)))

(assert (=> b!74710 t!5038))

(declare-fun b_and!4575 () Bool)

(assert (= b_and!4571 (and (=> t!5038 result!2691) b_and!4575)))

(assert (=> b!74698 m!71603))

(assert (=> b!74698 m!71603))

(declare-fun m!74085 () Bool)

(assert (=> b!74698 m!74085))

(declare-fun m!74087 () Bool)

(assert (=> b!74699 m!74087))

(declare-fun m!74089 () Bool)

(assert (=> b!74699 m!74089))

(declare-fun m!74091 () Bool)

(assert (=> b!74699 m!74091))

(assert (=> b!74699 m!71603))

(declare-fun m!74093 () Bool)

(assert (=> b!74699 m!74093))

(declare-fun m!74095 () Bool)

(assert (=> b!74699 m!74095))

(declare-fun m!74097 () Bool)

(assert (=> b!74699 m!74097))

(declare-fun m!74099 () Bool)

(assert (=> b!74699 m!74099))

(declare-fun m!74101 () Bool)

(assert (=> b!74699 m!74101))

(declare-fun m!74103 () Bool)

(assert (=> b!74699 m!74103))

(assert (=> b!74699 m!74101))

(assert (=> b!74699 m!74087))

(declare-fun m!74105 () Bool)

(assert (=> b!74699 m!74105))

(declare-fun m!74107 () Bool)

(assert (=> b!74699 m!74107))

(assert (=> b!74699 m!74093))

(declare-fun m!74109 () Bool)

(assert (=> b!74699 m!74109))

(assert (=> b!74699 m!74105))

(declare-fun m!74111 () Bool)

(assert (=> b!74699 m!74111))

(declare-fun m!74113 () Bool)

(assert (=> b!74699 m!74113))

(declare-fun m!74115 () Bool)

(assert (=> b!74699 m!74115))

(declare-fun m!74117 () Bool)

(assert (=> b!74699 m!74117))

(assert (=> b!74693 m!71603))

(assert (=> b!74693 m!71603))

(assert (=> b!74693 m!71605))

(declare-fun m!74119 () Bool)

(assert (=> bm!6596 m!74119))

(assert (=> bm!6590 m!74113))

(declare-fun m!74121 () Bool)

(assert (=> bm!6595 m!74121))

(assert (=> d!17759 m!71557))

(declare-fun m!74123 () Bool)

(assert (=> bm!6594 m!74123))

(declare-fun m!74125 () Bool)

(assert (=> b!74703 m!74125))

(declare-fun m!74127 () Bool)

(assert (=> b!74711 m!74127))

(assert (=> b!74712 m!71603))

(assert (=> b!74712 m!71603))

(assert (=> b!74712 m!71605))

(assert (=> b!74710 m!71663))

(assert (=> b!74710 m!71603))

(assert (=> b!74710 m!71603))

(declare-fun m!74129 () Bool)

(assert (=> b!74710 m!74129))

(declare-fun m!74131 () Bool)

(assert (=> b!74710 m!74131))

(assert (=> b!74710 m!71663))

(declare-fun m!74133 () Bool)

(assert (=> b!74710 m!74133))

(assert (=> b!74710 m!74131))

(declare-fun m!74135 () Bool)

(assert (=> b!74706 m!74135))

(assert (=> b!73381 d!17759))

(assert (=> b!73631 d!17347))

(assert (=> b!73577 d!17663))

(declare-fun d!17761 () Bool)

(declare-fun res!39483 () Bool)

(declare-fun e!48808 () Bool)

(assert (=> d!17761 (=> res!39483 e!48808)))

(assert (=> d!17761 (= res!39483 (and ((_ is Cons!1470) (toList!716 lt!32666)) (= (_1!1071 (h!2057 (toList!716 lt!32666))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17761 (= (containsKey!137 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000) e!48808)))

(declare-fun b!74714 () Bool)

(declare-fun e!48809 () Bool)

(assert (=> b!74714 (= e!48808 e!48809)))

(declare-fun res!39484 () Bool)

(assert (=> b!74714 (=> (not res!39484) (not e!48809))))

(assert (=> b!74714 (= res!39484 (and (or (not ((_ is Cons!1470) (toList!716 lt!32666))) (bvsle (_1!1071 (h!2057 (toList!716 lt!32666))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1470) (toList!716 lt!32666)) (bvslt (_1!1071 (h!2057 (toList!716 lt!32666))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74715 () Bool)

(assert (=> b!74715 (= e!48809 (containsKey!137 (t!5023 (toList!716 lt!32666)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17761 (not res!39483)) b!74714))

(assert (= (and b!74714 res!39484) b!74715))

(declare-fun m!74137 () Bool)

(assert (=> b!74715 m!74137))

(assert (=> d!17037 d!17761))

(assert (=> b!73530 d!17105))

(assert (=> b!73437 d!17105))

(declare-fun d!17763 () Bool)

(declare-fun e!48810 () Bool)

(assert (=> d!17763 e!48810))

(declare-fun res!39485 () Bool)

(assert (=> d!17763 (=> res!39485 e!48810)))

(declare-fun lt!33629 () Bool)

(assert (=> d!17763 (= res!39485 (not lt!33629))))

(declare-fun lt!33631 () Bool)

(assert (=> d!17763 (= lt!33629 lt!33631)))

(declare-fun lt!33630 () Unit!2076)

(declare-fun e!48811 () Unit!2076)

(assert (=> d!17763 (= lt!33630 e!48811)))

(declare-fun c!11286 () Bool)

(assert (=> d!17763 (= c!11286 lt!33631)))

(assert (=> d!17763 (= lt!33631 (containsKey!137 (toList!716 lt!32821) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17763 (= (contains!720 lt!32821 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33629)))

(declare-fun b!74716 () Bool)

(declare-fun lt!33628 () Unit!2076)

(assert (=> b!74716 (= e!48811 lt!33628)))

(assert (=> b!74716 (= lt!33628 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32821) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74716 (isDefined!86 (getValueByKey!134 (toList!716 lt!32821) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74717 () Bool)

(declare-fun Unit!2149 () Unit!2076)

(assert (=> b!74717 (= e!48811 Unit!2149)))

(declare-fun b!74718 () Bool)

(assert (=> b!74718 (= e!48810 (isDefined!86 (getValueByKey!134 (toList!716 lt!32821) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17763 c!11286) b!74716))

(assert (= (and d!17763 (not c!11286)) b!74717))

(assert (= (and d!17763 (not res!39485)) b!74718))

(declare-fun m!74139 () Bool)

(assert (=> d!17763 m!74139))

(declare-fun m!74141 () Bool)

(assert (=> b!74716 m!74141))

(assert (=> b!74716 m!73577))

(assert (=> b!74716 m!73577))

(declare-fun m!74143 () Bool)

(assert (=> b!74716 m!74143))

(assert (=> b!74718 m!73577))

(assert (=> b!74718 m!73577))

(assert (=> b!74718 m!74143))

(assert (=> bm!6445 d!17763))

(declare-fun b!74719 () Bool)

(declare-fun e!48816 () List!1474)

(assert (=> b!74719 (= e!48816 (insertStrictlySorted!54 (t!5023 (t!5023 (toList!716 lt!32489))) (_1!1071 lt!32485) (_2!1071 lt!32485)))))

(declare-fun b!74720 () Bool)

(declare-fun c!11287 () Bool)

(declare-fun c!11288 () Bool)

(assert (=> b!74720 (= e!48816 (ite c!11288 (t!5023 (t!5023 (toList!716 lt!32489))) (ite c!11287 (Cons!1470 (h!2057 (t!5023 (toList!716 lt!32489))) (t!5023 (t!5023 (toList!716 lt!32489)))) Nil!1471)))))

(declare-fun bm!6597 () Bool)

(declare-fun call!6601 () List!1474)

(declare-fun call!6602 () List!1474)

(assert (=> bm!6597 (= call!6601 call!6602)))

(declare-fun b!74721 () Bool)

(declare-fun e!48815 () Bool)

(declare-fun lt!33632 () List!1474)

(assert (=> b!74721 (= e!48815 (contains!721 lt!33632 (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun b!74722 () Bool)

(declare-fun e!48812 () List!1474)

(assert (=> b!74722 (= e!48812 call!6601)))

(declare-fun b!74723 () Bool)

(declare-fun e!48813 () List!1474)

(declare-fun e!48814 () List!1474)

(assert (=> b!74723 (= e!48813 e!48814)))

(assert (=> b!74723 (= c!11288 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32489))) (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32489)))) (_1!1071 lt!32485))))))

(declare-fun d!17765 () Bool)

(assert (=> d!17765 e!48815))

(declare-fun res!39486 () Bool)

(assert (=> d!17765 (=> (not res!39486) (not e!48815))))

(assert (=> d!17765 (= res!39486 (isStrictlySorted!279 lt!33632))))

(assert (=> d!17765 (= lt!33632 e!48813)))

(declare-fun c!11289 () Bool)

(assert (=> d!17765 (= c!11289 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32489))) (bvslt (_1!1071 (h!2057 (t!5023 (toList!716 lt!32489)))) (_1!1071 lt!32485))))))

(assert (=> d!17765 (isStrictlySorted!279 (t!5023 (toList!716 lt!32489)))))

(assert (=> d!17765 (= (insertStrictlySorted!54 (t!5023 (toList!716 lt!32489)) (_1!1071 lt!32485) (_2!1071 lt!32485)) lt!33632)))

(declare-fun call!6600 () List!1474)

(declare-fun bm!6598 () Bool)

(assert (=> bm!6598 (= call!6600 ($colon$colon!65 e!48816 (ite c!11289 (h!2057 (t!5023 (toList!716 lt!32489))) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485)))))))

(declare-fun c!11290 () Bool)

(assert (=> bm!6598 (= c!11290 c!11289)))

(declare-fun b!74724 () Bool)

(assert (=> b!74724 (= e!48814 call!6602)))

(declare-fun b!74725 () Bool)

(assert (=> b!74725 (= e!48812 call!6601)))

(declare-fun b!74726 () Bool)

(assert (=> b!74726 (= c!11287 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32489))) (bvsgt (_1!1071 (h!2057 (t!5023 (toList!716 lt!32489)))) (_1!1071 lt!32485))))))

(assert (=> b!74726 (= e!48814 e!48812)))

(declare-fun b!74727 () Bool)

(assert (=> b!74727 (= e!48813 call!6600)))

(declare-fun bm!6599 () Bool)

(assert (=> bm!6599 (= call!6602 call!6600)))

(declare-fun b!74728 () Bool)

(declare-fun res!39487 () Bool)

(assert (=> b!74728 (=> (not res!39487) (not e!48815))))

(assert (=> b!74728 (= res!39487 (containsKey!137 lt!33632 (_1!1071 lt!32485)))))

(assert (= (and d!17765 c!11289) b!74727))

(assert (= (and d!17765 (not c!11289)) b!74723))

(assert (= (and b!74723 c!11288) b!74724))

(assert (= (and b!74723 (not c!11288)) b!74726))

(assert (= (and b!74726 c!11287) b!74722))

(assert (= (and b!74726 (not c!11287)) b!74725))

(assert (= (or b!74722 b!74725) bm!6597))

(assert (= (or b!74724 bm!6597) bm!6599))

(assert (= (or b!74727 bm!6599) bm!6598))

(assert (= (and bm!6598 c!11290) b!74719))

(assert (= (and bm!6598 (not c!11290)) b!74720))

(assert (= (and d!17765 res!39486) b!74728))

(assert (= (and b!74728 res!39487) b!74721))

(declare-fun m!74145 () Bool)

(assert (=> b!74719 m!74145))

(declare-fun m!74147 () Bool)

(assert (=> b!74721 m!74147))

(declare-fun m!74149 () Bool)

(assert (=> d!17765 m!74149))

(assert (=> d!17765 m!73699))

(declare-fun m!74151 () Bool)

(assert (=> bm!6598 m!74151))

(declare-fun m!74153 () Bool)

(assert (=> b!74728 m!74153))

(assert (=> b!73658 d!17765))

(declare-fun d!17767 () Bool)

(declare-fun c!11291 () Bool)

(assert (=> d!17767 (= c!11291 ((_ is Nil!1471) (toList!716 lt!32583)))))

(declare-fun e!48817 () (InoxSet tuple2!2120))

(assert (=> d!17767 (= (content!78 (toList!716 lt!32583)) e!48817)))

(declare-fun b!74729 () Bool)

(assert (=> b!74729 (= e!48817 ((as const (Array tuple2!2120 Bool)) false))))

(declare-fun b!74730 () Bool)

(assert (=> b!74730 (= e!48817 ((_ map or) (store ((as const (Array tuple2!2120 Bool)) false) (h!2057 (toList!716 lt!32583)) true) (content!78 (t!5023 (toList!716 lt!32583)))))))

(assert (= (and d!17767 c!11291) b!74729))

(assert (= (and d!17767 (not c!11291)) b!74730))

(declare-fun m!74155 () Bool)

(assert (=> b!74730 m!74155))

(assert (=> b!74730 m!73705))

(assert (=> d!16909 d!17767))

(declare-fun d!17769 () Bool)

(declare-fun lt!33633 () Bool)

(assert (=> d!17769 (= lt!33633 (select (content!78 lt!32591) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun e!48819 () Bool)

(assert (=> d!17769 (= lt!33633 e!48819)))

(declare-fun res!39488 () Bool)

(assert (=> d!17769 (=> (not res!39488) (not e!48819))))

(assert (=> d!17769 (= res!39488 ((_ is Cons!1470) lt!32591))))

(assert (=> d!17769 (= (contains!721 lt!32591 (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))) lt!33633)))

(declare-fun b!74731 () Bool)

(declare-fun e!48818 () Bool)

(assert (=> b!74731 (= e!48819 e!48818)))

(declare-fun res!39489 () Bool)

(assert (=> b!74731 (=> res!39489 e!48818)))

(assert (=> b!74731 (= res!39489 (= (h!2057 lt!32591) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun b!74732 () Bool)

(assert (=> b!74732 (= e!48818 (contains!721 (t!5023 lt!32591) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(assert (= (and d!17769 res!39488) b!74731))

(assert (= (and b!74731 (not res!39489)) b!74732))

(declare-fun m!74157 () Bool)

(assert (=> d!17769 m!74157))

(declare-fun m!74159 () Bool)

(assert (=> d!17769 m!74159))

(declare-fun m!74161 () Bool)

(assert (=> b!74732 m!74161))

(assert (=> b!73695 d!17769))

(declare-fun d!17771 () Bool)

(declare-fun lt!33634 () Bool)

(assert (=> d!17771 (= lt!33634 (select (content!78 (toList!716 lt!33122)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun e!48821 () Bool)

(assert (=> d!17771 (= lt!33634 e!48821)))

(declare-fun res!39490 () Bool)

(assert (=> d!17771 (=> (not res!39490) (not e!48821))))

(assert (=> d!17771 (= res!39490 ((_ is Cons!1470) (toList!716 lt!33122)))))

(assert (=> d!17771 (= (contains!721 (toList!716 lt!33122) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!33634)))

(declare-fun b!74733 () Bool)

(declare-fun e!48820 () Bool)

(assert (=> b!74733 (= e!48821 e!48820)))

(declare-fun res!39491 () Bool)

(assert (=> b!74733 (=> res!39491 e!48820)))

(assert (=> b!74733 (= res!39491 (= (h!2057 (toList!716 lt!33122)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(declare-fun b!74734 () Bool)

(assert (=> b!74734 (= e!48820 (contains!721 (t!5023 (toList!716 lt!33122)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))

(assert (= (and d!17771 res!39490) b!74733))

(assert (= (and b!74733 (not res!39491)) b!74734))

(declare-fun m!74163 () Bool)

(assert (=> d!17771 m!74163))

(declare-fun m!74165 () Bool)

(assert (=> d!17771 m!74165))

(declare-fun m!74167 () Bool)

(assert (=> b!74734 m!74167))

(assert (=> b!73646 d!17771))

(declare-fun d!17773 () Bool)

(assert (=> d!17773 (= (get!1153 (getValueByKey!134 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2538 (getValueByKey!134 (toList!716 lt!32614) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16943 d!17773))

(assert (=> d!16943 d!17401))

(declare-fun d!17775 () Bool)

(assert (=> d!17775 (= (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32672)) (v!2538 (getValueByKey!134 (toList!716 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32672)))))

(assert (=> d!16981 d!17775))

(declare-fun b!74736 () Bool)

(declare-fun e!48822 () Option!140)

(declare-fun e!48823 () Option!140)

(assert (=> b!74736 (= e!48822 e!48823)))

(declare-fun c!11293 () Bool)

(assert (=> b!74736 (= c!11293 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (not (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32672))))))

(declare-fun b!74735 () Bool)

(assert (=> b!74735 (= e!48822 (Some!139 (_2!1071 (h!2057 (toList!716 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))))))))

(declare-fun d!17777 () Bool)

(declare-fun c!11292 () Bool)

(assert (=> d!17777 (= c!11292 (and ((_ is Cons!1470) (toList!716 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) (= (_1!1071 (h!2057 (toList!716 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))))) lt!32672)))))

(assert (=> d!17777 (= (getValueByKey!134 (toList!716 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992)))))) lt!32672) e!48822)))

(declare-fun b!74737 () Bool)

(assert (=> b!74737 (= e!48823 (getValueByKey!134 (t!5023 (toList!716 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))))) lt!32672))))

(declare-fun b!74738 () Bool)

(assert (=> b!74738 (= e!48823 None!138)))

(assert (= (and d!17777 c!11292) b!74735))

(assert (= (and d!17777 (not c!11292)) b!74736))

(assert (= (and b!74736 c!11293) b!74737))

(assert (= (and b!74736 (not c!11293)) b!74738))

(declare-fun m!74169 () Bool)

(assert (=> b!74737 m!74169))

(assert (=> d!16981 d!17777))

(declare-fun b!74740 () Bool)

(declare-fun e!48824 () Option!140)

(declare-fun e!48825 () Option!140)

(assert (=> b!74740 (= e!48824 e!48825)))

(declare-fun c!11295 () Bool)

(assert (=> b!74740 (= c!11295 (and ((_ is Cons!1470) (toList!716 lt!33084)) (not (= (_1!1071 (h!2057 (toList!716 lt!33084))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun b!74739 () Bool)

(assert (=> b!74739 (= e!48824 (Some!139 (_2!1071 (h!2057 (toList!716 lt!33084)))))))

(declare-fun c!11294 () Bool)

(declare-fun d!17779 () Bool)

(assert (=> d!17779 (= c!11294 (and ((_ is Cons!1470) (toList!716 lt!33084)) (= (_1!1071 (h!2057 (toList!716 lt!33084))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17779 (= (getValueByKey!134 (toList!716 lt!33084) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) e!48824)))

(declare-fun b!74741 () Bool)

(assert (=> b!74741 (= e!48825 (getValueByKey!134 (t!5023 (toList!716 lt!33084)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!74742 () Bool)

(assert (=> b!74742 (= e!48825 None!138)))

(assert (= (and d!17779 c!11294) b!74739))

(assert (= (and d!17779 (not c!11294)) b!74740))

(assert (= (and b!74740 c!11295) b!74741))

(assert (= (and b!74740 (not c!11295)) b!74742))

(declare-fun m!74171 () Bool)

(assert (=> b!74741 m!74171))

(assert (=> b!73604 d!17779))

(declare-fun b!74744 () Bool)

(declare-fun e!48826 () Option!140)

(declare-fun e!48827 () Option!140)

(assert (=> b!74744 (= e!48826 e!48827)))

(declare-fun c!11297 () Bool)

(assert (=> b!74744 (= c!11297 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32579))) (not (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32579)))) (_1!1071 lt!32492)))))))

(declare-fun b!74743 () Bool)

(assert (=> b!74743 (= e!48826 (Some!139 (_2!1071 (h!2057 (t!5023 (toList!716 lt!32579))))))))

(declare-fun d!17781 () Bool)

(declare-fun c!11296 () Bool)

(assert (=> d!17781 (= c!11296 (and ((_ is Cons!1470) (t!5023 (toList!716 lt!32579))) (= (_1!1071 (h!2057 (t!5023 (toList!716 lt!32579)))) (_1!1071 lt!32492))))))

(assert (=> d!17781 (= (getValueByKey!134 (t!5023 (toList!716 lt!32579)) (_1!1071 lt!32492)) e!48826)))

(declare-fun b!74745 () Bool)

(assert (=> b!74745 (= e!48827 (getValueByKey!134 (t!5023 (t!5023 (toList!716 lt!32579))) (_1!1071 lt!32492)))))

(declare-fun b!74746 () Bool)

(assert (=> b!74746 (= e!48827 None!138)))

(assert (= (and d!17781 c!11296) b!74743))

(assert (= (and d!17781 (not c!11296)) b!74744))

(assert (= (and b!74744 c!11297) b!74745))

(assert (= (and b!74744 (not c!11297)) b!74746))

(declare-fun m!74173 () Bool)

(assert (=> b!74745 m!74173))

(assert (=> b!73680 d!17781))

(declare-fun b!74747 () Bool)

(declare-fun e!48835 () Bool)

(assert (=> b!74747 (= e!48835 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74748 () Bool)

(declare-fun e!48838 () Bool)

(declare-fun e!48833 () Bool)

(assert (=> b!74748 (= e!48838 e!48833)))

(declare-fun c!11303 () Bool)

(assert (=> b!74748 (= c!11303 (not (= (bvand lt!32763 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74749 () Bool)

(declare-fun e!48836 () Bool)

(declare-fun call!6607 () Bool)

(assert (=> b!74749 (= e!48836 (not call!6607))))

(declare-fun b!74750 () Bool)

(declare-fun e!48840 () Unit!2076)

(declare-fun Unit!2150 () Unit!2076)

(assert (=> b!74750 (= e!48840 Unit!2150)))

(declare-fun bm!6600 () Bool)

(declare-fun call!6608 () ListLongMap!1401)

(assert (=> bm!6600 (= call!6608 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32763 (zeroValue!2114 newMap!16) lt!32495 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!74751 () Bool)

(declare-fun e!48832 () Bool)

(assert (=> b!74751 (= e!48836 e!48832)))

(declare-fun res!39494 () Bool)

(assert (=> b!74751 (= res!39494 call!6607)))

(assert (=> b!74751 (=> (not res!39494) (not e!48832))))

(declare-fun bm!6601 () Bool)

(declare-fun call!6603 () ListLongMap!1401)

(declare-fun call!6609 () ListLongMap!1401)

(assert (=> bm!6601 (= call!6603 call!6609)))

(declare-fun b!74752 () Bool)

(declare-fun e!48829 () Bool)

(declare-fun e!48828 () Bool)

(assert (=> b!74752 (= e!48829 e!48828)))

(declare-fun res!39493 () Bool)

(assert (=> b!74752 (=> (not res!39493) (not e!48828))))

(declare-fun lt!33640 () ListLongMap!1401)

(assert (=> b!74752 (= res!39493 (contains!720 lt!33640 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74752 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun bm!6602 () Bool)

(assert (=> bm!6602 (= call!6609 call!6608)))

(declare-fun b!74753 () Bool)

(declare-fun lt!33636 () Unit!2076)

(assert (=> b!74753 (= e!48840 lt!33636)))

(declare-fun lt!33650 () ListLongMap!1401)

(assert (=> b!74753 (= lt!33650 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32763 (zeroValue!2114 newMap!16) lt!32495 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33655 () (_ BitVec 64))

(assert (=> b!74753 (= lt!33655 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33635 () (_ BitVec 64))

(assert (=> b!74753 (= lt!33635 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33649 () Unit!2076)

(assert (=> b!74753 (= lt!33649 (addStillContains!51 lt!33650 lt!33655 (zeroValue!2114 newMap!16) lt!33635))))

(assert (=> b!74753 (contains!720 (+!93 lt!33650 (tuple2!2121 lt!33655 (zeroValue!2114 newMap!16))) lt!33635)))

(declare-fun lt!33644 () Unit!2076)

(assert (=> b!74753 (= lt!33644 lt!33649)))

(declare-fun lt!33653 () ListLongMap!1401)

(assert (=> b!74753 (= lt!33653 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32763 (zeroValue!2114 newMap!16) lt!32495 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33648 () (_ BitVec 64))

(assert (=> b!74753 (= lt!33648 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33652 () (_ BitVec 64))

(assert (=> b!74753 (= lt!33652 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33651 () Unit!2076)

(assert (=> b!74753 (= lt!33651 (addApplyDifferent!51 lt!33653 lt!33648 lt!32495 lt!33652))))

(assert (=> b!74753 (= (apply!75 (+!93 lt!33653 (tuple2!2121 lt!33648 lt!32495)) lt!33652) (apply!75 lt!33653 lt!33652))))

(declare-fun lt!33641 () Unit!2076)

(assert (=> b!74753 (= lt!33641 lt!33651)))

(declare-fun lt!33638 () ListLongMap!1401)

(assert (=> b!74753 (= lt!33638 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32763 (zeroValue!2114 newMap!16) lt!32495 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33639 () (_ BitVec 64))

(assert (=> b!74753 (= lt!33639 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33646 () (_ BitVec 64))

(assert (=> b!74753 (= lt!33646 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33654 () Unit!2076)

(assert (=> b!74753 (= lt!33654 (addApplyDifferent!51 lt!33638 lt!33639 (zeroValue!2114 newMap!16) lt!33646))))

(assert (=> b!74753 (= (apply!75 (+!93 lt!33638 (tuple2!2121 lt!33639 (zeroValue!2114 newMap!16))) lt!33646) (apply!75 lt!33638 lt!33646))))

(declare-fun lt!33637 () Unit!2076)

(assert (=> b!74753 (= lt!33637 lt!33654)))

(declare-fun lt!33642 () ListLongMap!1401)

(assert (=> b!74753 (= lt!33642 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32763 (zeroValue!2114 newMap!16) lt!32495 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33647 () (_ BitVec 64))

(assert (=> b!74753 (= lt!33647 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33656 () (_ BitVec 64))

(assert (=> b!74753 (= lt!33656 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74753 (= lt!33636 (addApplyDifferent!51 lt!33642 lt!33647 lt!32495 lt!33656))))

(assert (=> b!74753 (= (apply!75 (+!93 lt!33642 (tuple2!2121 lt!33647 lt!32495)) lt!33656) (apply!75 lt!33642 lt!33656))))

(declare-fun bm!6603 () Bool)

(declare-fun call!6606 () ListLongMap!1401)

(declare-fun call!6605 () ListLongMap!1401)

(assert (=> bm!6603 (= call!6606 call!6605)))

(declare-fun b!74754 () Bool)

(declare-fun e!48830 () ListLongMap!1401)

(assert (=> b!74754 (= e!48830 call!6606)))

(declare-fun b!74755 () Bool)

(declare-fun res!39499 () Bool)

(assert (=> b!74755 (=> (not res!39499) (not e!48838))))

(assert (=> b!74755 (= res!39499 e!48836)))

(declare-fun c!11299 () Bool)

(assert (=> b!74755 (= c!11299 (not (= (bvand lt!32763 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74756 () Bool)

(declare-fun call!6604 () Bool)

(assert (=> b!74756 (= e!48833 (not call!6604))))

(declare-fun b!74757 () Bool)

(declare-fun e!48839 () ListLongMap!1401)

(assert (=> b!74757 (= e!48839 (+!93 call!6605 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)))))

(declare-fun b!74758 () Bool)

(assert (=> b!74758 (= e!48839 e!48830)))

(declare-fun c!11300 () Bool)

(assert (=> b!74758 (= c!11300 (and (not (= (bvand lt!32763 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!32763 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6604 () Bool)

(declare-fun c!11298 () Bool)

(assert (=> bm!6604 (= call!6605 (+!93 (ite c!11298 call!6608 (ite c!11300 call!6609 call!6603)) (ite (or c!11298 c!11300) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495))))))

(declare-fun b!74759 () Bool)

(declare-fun res!39492 () Bool)

(assert (=> b!74759 (=> (not res!39492) (not e!48838))))

(assert (=> b!74759 (= res!39492 e!48829)))

(declare-fun res!39497 () Bool)

(assert (=> b!74759 (=> res!39497 e!48829)))

(declare-fun e!48834 () Bool)

(assert (=> b!74759 (= res!39497 (not e!48834))))

(declare-fun res!39500 () Bool)

(assert (=> b!74759 (=> (not res!39500) (not e!48834))))

(assert (=> b!74759 (= res!39500 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74760 () Bool)

(assert (=> b!74760 (= e!48832 (= (apply!75 lt!33640 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!74761 () Bool)

(declare-fun e!48837 () ListLongMap!1401)

(assert (=> b!74761 (= e!48837 call!6603)))

(declare-fun b!74762 () Bool)

(declare-fun e!48831 () Bool)

(assert (=> b!74762 (= e!48833 e!48831)))

(declare-fun res!39496 () Bool)

(assert (=> b!74762 (= res!39496 call!6604)))

(assert (=> b!74762 (=> (not res!39496) (not e!48831))))

(declare-fun bm!6605 () Bool)

(assert (=> bm!6605 (= call!6607 (contains!720 lt!33640 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17783 () Bool)

(assert (=> d!17783 e!48838))

(declare-fun res!39498 () Bool)

(assert (=> d!17783 (=> (not res!39498) (not e!48838))))

(assert (=> d!17783 (= res!39498 (or (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))))

(declare-fun lt!33645 () ListLongMap!1401)

(assert (=> d!17783 (= lt!33640 lt!33645)))

(declare-fun lt!33643 () Unit!2076)

(assert (=> d!17783 (= lt!33643 e!48840)))

(declare-fun c!11301 () Bool)

(assert (=> d!17783 (= c!11301 e!48835)))

(declare-fun res!39495 () Bool)

(assert (=> d!17783 (=> (not res!39495) (not e!48835))))

(assert (=> d!17783 (= res!39495 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17783 (= lt!33645 e!48839)))

(assert (=> d!17783 (= c!11298 (and (not (= (bvand lt!32763 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!32763 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17783 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17783 (= (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32763 (zeroValue!2114 newMap!16) lt!32495 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33640)))

(declare-fun bm!6606 () Bool)

(assert (=> bm!6606 (= call!6604 (contains!720 lt!33640 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74763 () Bool)

(assert (=> b!74763 (= e!48837 call!6606)))

(declare-fun b!74764 () Bool)

(assert (=> b!74764 (= e!48828 (= (apply!75 lt!33640 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74764 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 (_values!2195 newMap!16))))))

(assert (=> b!74764 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74765 () Bool)

(assert (=> b!74765 (= e!48831 (= (apply!75 lt!33640 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32495))))

(declare-fun b!74766 () Bool)

(assert (=> b!74766 (= e!48834 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74767 () Bool)

(declare-fun c!11302 () Bool)

(assert (=> b!74767 (= c!11302 (and (not (= (bvand lt!32763 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!32763 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74767 (= e!48830 e!48837)))

(assert (= (and d!17783 c!11298) b!74757))

(assert (= (and d!17783 (not c!11298)) b!74758))

(assert (= (and b!74758 c!11300) b!74754))

(assert (= (and b!74758 (not c!11300)) b!74767))

(assert (= (and b!74767 c!11302) b!74763))

(assert (= (and b!74767 (not c!11302)) b!74761))

(assert (= (or b!74763 b!74761) bm!6601))

(assert (= (or b!74754 bm!6601) bm!6602))

(assert (= (or b!74754 b!74763) bm!6603))

(assert (= (or b!74757 bm!6602) bm!6600))

(assert (= (or b!74757 bm!6603) bm!6604))

(assert (= (and d!17783 res!39495) b!74747))

(assert (= (and d!17783 c!11301) b!74753))

(assert (= (and d!17783 (not c!11301)) b!74750))

(assert (= (and d!17783 res!39498) b!74759))

(assert (= (and b!74759 res!39500) b!74766))

(assert (= (and b!74759 (not res!39497)) b!74752))

(assert (= (and b!74752 res!39493) b!74764))

(assert (= (and b!74759 res!39492) b!74755))

(assert (= (and b!74755 c!11299) b!74751))

(assert (= (and b!74755 (not c!11299)) b!74749))

(assert (= (and b!74751 res!39494) b!74760))

(assert (= (or b!74751 b!74749) bm!6605))

(assert (= (and b!74755 res!39499) b!74748))

(assert (= (and b!74748 c!11303) b!74762))

(assert (= (and b!74748 (not c!11303)) b!74756))

(assert (= (and b!74762 res!39496) b!74765))

(assert (= (or b!74762 b!74756) bm!6606))

(declare-fun b_lambda!3345 () Bool)

(assert (=> (not b_lambda!3345) (not b!74764)))

(assert (=> b!74764 t!5036))

(declare-fun b_and!4577 () Bool)

(assert (= b_and!4573 (and (=> t!5036 result!2689) b_and!4577)))

(assert (=> b!74764 t!5038))

(declare-fun b_and!4579 () Bool)

(assert (= b_and!4575 (and (=> t!5038 result!2691) b_and!4579)))

(assert (=> b!74752 m!71603))

(assert (=> b!74752 m!71603))

(declare-fun m!74175 () Bool)

(assert (=> b!74752 m!74175))

(declare-fun m!74177 () Bool)

(assert (=> b!74753 m!74177))

(declare-fun m!74179 () Bool)

(assert (=> b!74753 m!74179))

(declare-fun m!74181 () Bool)

(assert (=> b!74753 m!74181))

(assert (=> b!74753 m!71603))

(declare-fun m!74183 () Bool)

(assert (=> b!74753 m!74183))

(declare-fun m!74185 () Bool)

(assert (=> b!74753 m!74185))

(declare-fun m!74187 () Bool)

(assert (=> b!74753 m!74187))

(declare-fun m!74189 () Bool)

(assert (=> b!74753 m!74189))

(declare-fun m!74191 () Bool)

(assert (=> b!74753 m!74191))

(declare-fun m!74193 () Bool)

(assert (=> b!74753 m!74193))

(assert (=> b!74753 m!74191))

(assert (=> b!74753 m!74177))

(declare-fun m!74195 () Bool)

(assert (=> b!74753 m!74195))

(declare-fun m!74197 () Bool)

(assert (=> b!74753 m!74197))

(assert (=> b!74753 m!74183))

(declare-fun m!74199 () Bool)

(assert (=> b!74753 m!74199))

(assert (=> b!74753 m!74195))

(declare-fun m!74201 () Bool)

(assert (=> b!74753 m!74201))

(declare-fun m!74203 () Bool)

(assert (=> b!74753 m!74203))

(declare-fun m!74205 () Bool)

(assert (=> b!74753 m!74205))

(declare-fun m!74207 () Bool)

(assert (=> b!74753 m!74207))

(assert (=> b!74747 m!71603))

(assert (=> b!74747 m!71603))

(assert (=> b!74747 m!71605))

(declare-fun m!74209 () Bool)

(assert (=> bm!6606 m!74209))

(assert (=> bm!6600 m!74203))

(declare-fun m!74211 () Bool)

(assert (=> bm!6605 m!74211))

(assert (=> d!17783 m!71557))

(declare-fun m!74213 () Bool)

(assert (=> bm!6604 m!74213))

(declare-fun m!74215 () Bool)

(assert (=> b!74757 m!74215))

(declare-fun m!74217 () Bool)

(assert (=> b!74765 m!74217))

(assert (=> b!74766 m!71603))

(assert (=> b!74766 m!71603))

(assert (=> b!74766 m!71605))

(assert (=> b!74764 m!71663))

(assert (=> b!74764 m!71603))

(assert (=> b!74764 m!71603))

(declare-fun m!74219 () Bool)

(assert (=> b!74764 m!74219))

(assert (=> b!74764 m!72071))

(assert (=> b!74764 m!71663))

(assert (=> b!74764 m!72073))

(assert (=> b!74764 m!72071))

(declare-fun m!74221 () Bool)

(assert (=> b!74760 m!74221))

(assert (=> d!17045 d!17783))

(declare-fun d!17785 () Bool)

(assert (=> d!17785 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) lt!32763 (zeroValue!2114 newMap!16) lt!32495 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (=> d!17785 true))

(declare-fun _$8!64 () Unit!2076)

(assert (=> d!17785 (= (choose!429 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) lt!32763 (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) lt!32495 (defaultEntry!2212 newMap!16)) _$8!64)))

(declare-fun bs!3229 () Bool)

(assert (= bs!3229 d!17785))

(assert (=> bs!3229 m!71403))

(assert (=> bs!3229 m!71403))

(assert (=> bs!3229 m!72195))

(assert (=> bs!3229 m!72193))

(assert (=> d!17045 d!17785))

(assert (=> d!17045 d!17001))

(assert (=> d!17045 d!17149))

(declare-fun d!17787 () Bool)

(declare-fun e!48841 () Bool)

(assert (=> d!17787 e!48841))

(declare-fun res!39501 () Bool)

(assert (=> d!17787 (=> (not res!39501) (not e!48841))))

(declare-fun lt!33659 () ListLongMap!1401)

(assert (=> d!17787 (= res!39501 (contains!720 lt!33659 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495))))))

(declare-fun lt!33660 () List!1474)

(assert (=> d!17787 (= lt!33659 (ListLongMap!1402 lt!33660))))

(declare-fun lt!33658 () Unit!2076)

(declare-fun lt!33657 () Unit!2076)

(assert (=> d!17787 (= lt!33658 lt!33657)))

(assert (=> d!17787 (= (getValueByKey!134 lt!33660 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495))))))

(assert (=> d!17787 (= lt!33657 (lemmaContainsTupThenGetReturnValue!51 lt!33660 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495))))))

(assert (=> d!17787 (= lt!33660 (insertStrictlySorted!54 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495))))))

(assert (=> d!17787 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)) lt!33659)))

(declare-fun b!74768 () Bool)

(declare-fun res!39502 () Bool)

(assert (=> b!74768 (=> (not res!39502) (not e!48841))))

(assert (=> b!74768 (= res!39502 (= (getValueByKey!134 (toList!716 lt!33659) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495))) (Some!139 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)))))))

(declare-fun b!74769 () Bool)

(assert (=> b!74769 (= e!48841 (contains!721 (toList!716 lt!33659) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32495)))))

(assert (= (and d!17787 res!39501) b!74768))

(assert (= (and b!74768 res!39502) b!74769))

(declare-fun m!74223 () Bool)

(assert (=> d!17787 m!74223))

(declare-fun m!74225 () Bool)

(assert (=> d!17787 m!74225))

(declare-fun m!74227 () Bool)

(assert (=> d!17787 m!74227))

(declare-fun m!74229 () Bool)

(assert (=> d!17787 m!74229))

(declare-fun m!74231 () Bool)

(assert (=> b!74768 m!74231))

(declare-fun m!74233 () Bool)

(assert (=> b!74769 m!74233))

(assert (=> d!17045 d!17787))

(declare-fun d!17789 () Bool)

(declare-fun res!39503 () Bool)

(declare-fun e!48842 () Bool)

(assert (=> d!17789 (=> res!39503 e!48842)))

(assert (=> d!17789 (= res!39503 (or ((_ is Nil!1471) lt!33133) ((_ is Nil!1471) (t!5023 lt!33133))))))

(assert (=> d!17789 (= (isStrictlySorted!279 lt!33133) e!48842)))

(declare-fun b!74770 () Bool)

(declare-fun e!48843 () Bool)

(assert (=> b!74770 (= e!48842 e!48843)))

(declare-fun res!39504 () Bool)

(assert (=> b!74770 (=> (not res!39504) (not e!48843))))

(assert (=> b!74770 (= res!39504 (bvslt (_1!1071 (h!2057 lt!33133)) (_1!1071 (h!2057 (t!5023 lt!33133)))))))

(declare-fun b!74771 () Bool)

(assert (=> b!74771 (= e!48843 (isStrictlySorted!279 (t!5023 lt!33133)))))

(assert (= (and d!17789 (not res!39503)) b!74770))

(assert (= (and b!74770 res!39504) b!74771))

(declare-fun m!74235 () Bool)

(assert (=> b!74771 m!74235))

(assert (=> d!17071 d!17789))

(assert (=> d!17071 d!17613))

(declare-fun e!48848 () List!1474)

(declare-fun b!74772 () Bool)

(assert (=> b!74772 (= e!48848 (insertStrictlySorted!54 (t!5023 (t!5023 (toList!716 (+!93 lt!32489 lt!32485)))) (_1!1071 lt!32492) (_2!1071 lt!32492)))))

(declare-fun c!11304 () Bool)

(declare-fun b!74773 () Bool)

(declare-fun c!11305 () Bool)

(assert (=> b!74773 (= e!48848 (ite c!11305 (t!5023 (t!5023 (toList!716 (+!93 lt!32489 lt!32485)))) (ite c!11304 (Cons!1470 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32485)))) (t!5023 (t!5023 (toList!716 (+!93 lt!32489 lt!32485))))) Nil!1471)))))

(declare-fun bm!6607 () Bool)

(declare-fun call!6611 () List!1474)

(declare-fun call!6612 () List!1474)

(assert (=> bm!6607 (= call!6611 call!6612)))

(declare-fun b!74774 () Bool)

(declare-fun e!48847 () Bool)

(declare-fun lt!33661 () List!1474)

(assert (=> b!74774 (= e!48847 (contains!721 lt!33661 (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun b!74775 () Bool)

(declare-fun e!48844 () List!1474)

(assert (=> b!74775 (= e!48844 call!6611)))

(declare-fun b!74776 () Bool)

(declare-fun e!48845 () List!1474)

(declare-fun e!48846 () List!1474)

(assert (=> b!74776 (= e!48845 e!48846)))

(assert (=> b!74776 (= c!11305 (and ((_ is Cons!1470) (t!5023 (toList!716 (+!93 lt!32489 lt!32485)))) (= (_1!1071 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32485))))) (_1!1071 lt!32492))))))

(declare-fun d!17791 () Bool)

(assert (=> d!17791 e!48847))

(declare-fun res!39505 () Bool)

(assert (=> d!17791 (=> (not res!39505) (not e!48847))))

(assert (=> d!17791 (= res!39505 (isStrictlySorted!279 lt!33661))))

(assert (=> d!17791 (= lt!33661 e!48845)))

(declare-fun c!11306 () Bool)

(assert (=> d!17791 (= c!11306 (and ((_ is Cons!1470) (t!5023 (toList!716 (+!93 lt!32489 lt!32485)))) (bvslt (_1!1071 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32485))))) (_1!1071 lt!32492))))))

(assert (=> d!17791 (isStrictlySorted!279 (t!5023 (toList!716 (+!93 lt!32489 lt!32485))))))

(assert (=> d!17791 (= (insertStrictlySorted!54 (t!5023 (toList!716 (+!93 lt!32489 lt!32485))) (_1!1071 lt!32492) (_2!1071 lt!32492)) lt!33661)))

(declare-fun call!6610 () List!1474)

(declare-fun bm!6608 () Bool)

(assert (=> bm!6608 (= call!6610 ($colon$colon!65 e!48848 (ite c!11306 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32485)))) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492)))))))

(declare-fun c!11307 () Bool)

(assert (=> bm!6608 (= c!11307 c!11306)))

(declare-fun b!74777 () Bool)

(assert (=> b!74777 (= e!48846 call!6612)))

(declare-fun b!74778 () Bool)

(assert (=> b!74778 (= e!48844 call!6611)))

(declare-fun b!74779 () Bool)

(assert (=> b!74779 (= c!11304 (and ((_ is Cons!1470) (t!5023 (toList!716 (+!93 lt!32489 lt!32485)))) (bvsgt (_1!1071 (h!2057 (t!5023 (toList!716 (+!93 lt!32489 lt!32485))))) (_1!1071 lt!32492))))))

(assert (=> b!74779 (= e!48846 e!48844)))

(declare-fun b!74780 () Bool)

(assert (=> b!74780 (= e!48845 call!6610)))

(declare-fun bm!6609 () Bool)

(assert (=> bm!6609 (= call!6612 call!6610)))

(declare-fun b!74781 () Bool)

(declare-fun res!39506 () Bool)

(assert (=> b!74781 (=> (not res!39506) (not e!48847))))

(assert (=> b!74781 (= res!39506 (containsKey!137 lt!33661 (_1!1071 lt!32492)))))

(assert (= (and d!17791 c!11306) b!74780))

(assert (= (and d!17791 (not c!11306)) b!74776))

(assert (= (and b!74776 c!11305) b!74777))

(assert (= (and b!74776 (not c!11305)) b!74779))

(assert (= (and b!74779 c!11304) b!74775))

(assert (= (and b!74779 (not c!11304)) b!74778))

(assert (= (or b!74775 b!74778) bm!6607))

(assert (= (or b!74777 bm!6607) bm!6609))

(assert (= (or b!74780 bm!6609) bm!6608))

(assert (= (and bm!6608 c!11307) b!74772))

(assert (= (and bm!6608 (not c!11307)) b!74773))

(assert (= (and d!17791 res!39505) b!74781))

(assert (= (and b!74781 res!39506) b!74774))

(declare-fun m!74237 () Bool)

(assert (=> b!74772 m!74237))

(declare-fun m!74239 () Bool)

(assert (=> b!74774 m!74239))

(declare-fun m!74241 () Bool)

(assert (=> d!17791 m!74241))

(assert (=> d!17791 m!72607))

(declare-fun m!74243 () Bool)

(assert (=> bm!6608 m!74243))

(declare-fun m!74245 () Bool)

(assert (=> b!74781 m!74245))

(assert (=> b!73696 d!17791))

(assert (=> d!16961 d!17149))

(assert (=> d!16975 d!16981))

(declare-fun d!17793 () Bool)

(assert (=> d!17793 (= (apply!75 (+!93 lt!32664 (tuple2!2121 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))))) lt!32672) (apply!75 lt!32664 lt!32672))))

(assert (=> d!17793 true))

(declare-fun _$34!812 () Unit!2076)

(assert (=> d!17793 (= (choose!426 lt!32664 lt!32665 (zeroValue!2114 (v!2532 (underlying!262 thiss!992))) lt!32672) _$34!812)))

(declare-fun bs!3230 () Bool)

(assert (= bs!3230 d!17793))

(assert (=> bs!3230 m!71421))

(assert (=> bs!3230 m!71421))

(assert (=> bs!3230 m!71423))

(assert (=> bs!3230 m!71433))

(assert (=> d!16975 d!17793))

(declare-fun d!17795 () Bool)

(declare-fun e!48849 () Bool)

(assert (=> d!17795 e!48849))

(declare-fun res!39507 () Bool)

(assert (=> d!17795 (=> res!39507 e!48849)))

(declare-fun lt!33663 () Bool)

(assert (=> d!17795 (= res!39507 (not lt!33663))))

(declare-fun lt!33665 () Bool)

(assert (=> d!17795 (= lt!33663 lt!33665)))

(declare-fun lt!33664 () Unit!2076)

(declare-fun e!48850 () Unit!2076)

(assert (=> d!17795 (= lt!33664 e!48850)))

(declare-fun c!11308 () Bool)

(assert (=> d!17795 (= c!11308 lt!33665)))

(assert (=> d!17795 (= lt!33665 (containsKey!137 (toList!716 lt!32664) lt!32672))))

(assert (=> d!17795 (= (contains!720 lt!32664 lt!32672) lt!33663)))

(declare-fun b!74782 () Bool)

(declare-fun lt!33662 () Unit!2076)

(assert (=> b!74782 (= e!48850 lt!33662)))

(assert (=> b!74782 (= lt!33662 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32664) lt!32672))))

(assert (=> b!74782 (isDefined!86 (getValueByKey!134 (toList!716 lt!32664) lt!32672))))

(declare-fun b!74783 () Bool)

(declare-fun Unit!2151 () Unit!2076)

(assert (=> b!74783 (= e!48850 Unit!2151)))

(declare-fun b!74784 () Bool)

(assert (=> b!74784 (= e!48849 (isDefined!86 (getValueByKey!134 (toList!716 lt!32664) lt!32672)))))

(assert (= (and d!17795 c!11308) b!74782))

(assert (= (and d!17795 (not c!11308)) b!74783))

(assert (= (and d!17795 (not res!39507)) b!74784))

(declare-fun m!74247 () Bool)

(assert (=> d!17795 m!74247))

(declare-fun m!74249 () Bool)

(assert (=> b!74782 m!74249))

(assert (=> b!74782 m!71923))

(assert (=> b!74782 m!71923))

(declare-fun m!74251 () Bool)

(assert (=> b!74782 m!74251))

(assert (=> b!74784 m!71923))

(assert (=> b!74784 m!71923))

(assert (=> b!74784 m!74251))

(assert (=> d!16975 d!17795))

(assert (=> d!16975 d!16985))

(assert (=> d!16975 d!16987))

(declare-fun b!74786 () Bool)

(declare-fun e!48851 () Option!140)

(declare-fun e!48852 () Option!140)

(assert (=> b!74786 (= e!48851 e!48852)))

(declare-fun c!11310 () Bool)

(assert (=> b!74786 (= c!11310 (and ((_ is Cons!1470) (toList!716 lt!32847)) (not (= (_1!1071 (h!2057 (toList!716 lt!32847))) (_1!1071 (tuple2!2121 lt!32612 lt!32616))))))))

(declare-fun b!74785 () Bool)

(assert (=> b!74785 (= e!48851 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32847)))))))

(declare-fun d!17797 () Bool)

(declare-fun c!11309 () Bool)

(assert (=> d!17797 (= c!11309 (and ((_ is Cons!1470) (toList!716 lt!32847)) (= (_1!1071 (h!2057 (toList!716 lt!32847))) (_1!1071 (tuple2!2121 lt!32612 lt!32616)))))))

(assert (=> d!17797 (= (getValueByKey!134 (toList!716 lt!32847) (_1!1071 (tuple2!2121 lt!32612 lt!32616))) e!48851)))

(declare-fun b!74787 () Bool)

(assert (=> b!74787 (= e!48852 (getValueByKey!134 (t!5023 (toList!716 lt!32847)) (_1!1071 (tuple2!2121 lt!32612 lt!32616))))))

(declare-fun b!74788 () Bool)

(assert (=> b!74788 (= e!48852 None!138)))

(assert (= (and d!17797 c!11309) b!74785))

(assert (= (and d!17797 (not c!11309)) b!74786))

(assert (= (and b!74786 c!11310) b!74787))

(assert (= (and b!74786 (not c!11310)) b!74788))

(declare-fun m!74253 () Bool)

(assert (=> b!74787 m!74253))

(assert (=> b!73362 d!17797))

(declare-fun d!17799 () Bool)

(assert (=> d!17799 (isDefined!86 (getValueByKey!134 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33666 () Unit!2076)

(assert (=> d!17799 (= lt!33666 (choose!420 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48853 () Bool)

(assert (=> d!17799 e!48853))

(declare-fun res!39508 () Bool)

(assert (=> d!17799 (=> (not res!39508) (not e!48853))))

(assert (=> d!17799 (= res!39508 (isStrictlySorted!279 (toList!716 lt!32666)))))

(assert (=> d!17799 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000) lt!33666)))

(declare-fun b!74789 () Bool)

(assert (=> b!74789 (= e!48853 (containsKey!137 (toList!716 lt!32666) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17799 res!39508) b!74789))

(assert (=> d!17799 m!72181))

(assert (=> d!17799 m!72181))

(assert (=> d!17799 m!72183))

(declare-fun m!74255 () Bool)

(assert (=> d!17799 m!74255))

(assert (=> d!17799 m!73063))

(assert (=> b!74789 m!72177))

(assert (=> b!73617 d!17799))

(assert (=> b!73617 d!17241))

(assert (=> b!73617 d!17243))

(declare-fun d!17801 () Bool)

(declare-fun lt!33667 () Bool)

(assert (=> d!17801 (= lt!33667 (select (content!78 lt!32886) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun e!48855 () Bool)

(assert (=> d!17801 (= lt!33667 e!48855)))

(declare-fun res!39509 () Bool)

(assert (=> d!17801 (=> (not res!39509) (not e!48855))))

(assert (=> d!17801 (= res!39509 ((_ is Cons!1470) lt!32886))))

(assert (=> d!17801 (= (contains!721 lt!32886 (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))) lt!33667)))

(declare-fun b!74790 () Bool)

(declare-fun e!48854 () Bool)

(assert (=> b!74790 (= e!48855 e!48854)))

(declare-fun res!39510 () Bool)

(assert (=> b!74790 (=> res!39510 e!48854)))

(assert (=> b!74790 (= res!39510 (= (h!2057 lt!32886) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(declare-fun b!74791 () Bool)

(assert (=> b!74791 (= e!48854 (contains!721 (t!5023 lt!32886) (tuple2!2121 (_1!1071 lt!32492) (_2!1071 lt!32492))))))

(assert (= (and d!17801 res!39509) b!74790))

(assert (= (and b!74790 (not res!39510)) b!74791))

(declare-fun m!74257 () Bool)

(assert (=> d!17801 m!74257))

(declare-fun m!74259 () Bool)

(assert (=> d!17801 m!74259))

(declare-fun m!74261 () Bool)

(assert (=> b!74791 m!74261))

(assert (=> b!73429 d!17801))

(assert (=> b!73456 d!17105))

(declare-fun d!17803 () Bool)

(declare-fun e!48856 () Bool)

(assert (=> d!17803 e!48856))

(declare-fun res!39511 () Bool)

(assert (=> d!17803 (=> res!39511 e!48856)))

(declare-fun lt!33669 () Bool)

(assert (=> d!17803 (= res!39511 (not lt!33669))))

(declare-fun lt!33671 () Bool)

(assert (=> d!17803 (= lt!33669 lt!33671)))

(declare-fun lt!33670 () Unit!2076)

(declare-fun e!48857 () Unit!2076)

(assert (=> d!17803 (= lt!33670 e!48857)))

(declare-fun c!11311 () Bool)

(assert (=> d!17803 (= c!11311 lt!33671)))

(assert (=> d!17803 (= lt!33671 (containsKey!137 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(assert (=> d!17803 (= (contains!720 (getCurrentListMap!414 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))) lt!33669)))

(declare-fun b!74792 () Bool)

(declare-fun lt!33668 () Unit!2076)

(assert (=> b!74792 (= e!48857 lt!33668)))

(assert (=> b!74792 (= lt!33668 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(assert (=> b!74792 (isDefined!86 (getValueByKey!134 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(declare-fun b!74793 () Bool)

(declare-fun Unit!2152 () Unit!2076)

(assert (=> b!74793 (= e!48857 Unit!2152)))

(declare-fun b!74794 () Bool)

(assert (=> b!74794 (= e!48856 (isDefined!86 (getValueByKey!134 (toList!716 (getCurrentListMap!414 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773)))))))

(assert (= (and d!17803 c!11311) b!74792))

(assert (= (and d!17803 (not c!11311)) b!74793))

(assert (= (and d!17803 (not res!39511)) b!74794))

(assert (=> d!17803 m!71485))

(declare-fun m!74263 () Bool)

(assert (=> d!17803 m!74263))

(assert (=> b!74792 m!71485))

(declare-fun m!74265 () Bool)

(assert (=> b!74792 m!74265))

(assert (=> b!74792 m!71485))

(declare-fun m!74267 () Bool)

(assert (=> b!74792 m!74267))

(assert (=> b!74792 m!74267))

(declare-fun m!74269 () Bool)

(assert (=> b!74792 m!74269))

(assert (=> b!74794 m!71485))

(assert (=> b!74794 m!74267))

(assert (=> b!74794 m!74267))

(assert (=> b!74794 m!74269))

(assert (=> b!73378 d!17803))

(declare-fun b!74795 () Bool)

(declare-fun e!48865 () Bool)

(assert (=> b!74795 (= e!48865 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74796 () Bool)

(declare-fun e!48868 () Bool)

(declare-fun e!48863 () Bool)

(assert (=> b!74796 (= e!48868 e!48863)))

(declare-fun c!11317 () Bool)

(assert (=> b!74796 (= c!11317 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74797 () Bool)

(declare-fun e!48866 () Bool)

(declare-fun call!6617 () Bool)

(assert (=> b!74797 (= e!48866 (not call!6617))))

(declare-fun b!74798 () Bool)

(declare-fun e!48870 () Unit!2076)

(declare-fun Unit!2153 () Unit!2076)

(assert (=> b!74798 (= e!48870 Unit!2153)))

(declare-fun bm!6610 () Bool)

(declare-fun call!6618 () ListLongMap!1401)

(assert (=> bm!6610 (= call!6618 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!74799 () Bool)

(declare-fun e!48862 () Bool)

(assert (=> b!74799 (= e!48866 e!48862)))

(declare-fun res!39514 () Bool)

(assert (=> b!74799 (= res!39514 call!6617)))

(assert (=> b!74799 (=> (not res!39514) (not e!48862))))

(declare-fun bm!6611 () Bool)

(declare-fun call!6613 () ListLongMap!1401)

(declare-fun call!6619 () ListLongMap!1401)

(assert (=> bm!6611 (= call!6613 call!6619)))

(declare-fun b!74800 () Bool)

(declare-fun e!48859 () Bool)

(declare-fun e!48858 () Bool)

(assert (=> b!74800 (= e!48859 e!48858)))

(declare-fun res!39513 () Bool)

(assert (=> b!74800 (=> (not res!39513) (not e!48858))))

(declare-fun lt!33677 () ListLongMap!1401)

(assert (=> b!74800 (= res!39513 (contains!720 lt!33677 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74800 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun bm!6612 () Bool)

(assert (=> bm!6612 (= call!6619 call!6618)))

(declare-fun b!74801 () Bool)

(declare-fun lt!33673 () Unit!2076)

(assert (=> b!74801 (= e!48870 lt!33673)))

(declare-fun lt!33687 () ListLongMap!1401)

(assert (=> b!74801 (= lt!33687 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33692 () (_ BitVec 64))

(assert (=> b!74801 (= lt!33692 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33672 () (_ BitVec 64))

(assert (=> b!74801 (= lt!33672 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33686 () Unit!2076)

(assert (=> b!74801 (= lt!33686 (addStillContains!51 lt!33687 lt!33692 (zeroValue!2114 newMap!16) lt!33672))))

(assert (=> b!74801 (contains!720 (+!93 lt!33687 (tuple2!2121 lt!33692 (zeroValue!2114 newMap!16))) lt!33672)))

(declare-fun lt!33681 () Unit!2076)

(assert (=> b!74801 (= lt!33681 lt!33686)))

(declare-fun lt!33690 () ListLongMap!1401)

(assert (=> b!74801 (= lt!33690 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33685 () (_ BitVec 64))

(assert (=> b!74801 (= lt!33685 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33689 () (_ BitVec 64))

(assert (=> b!74801 (= lt!33689 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33688 () Unit!2076)

(assert (=> b!74801 (= lt!33688 (addApplyDifferent!51 lt!33690 lt!33685 (minValue!2114 newMap!16) lt!33689))))

(assert (=> b!74801 (= (apply!75 (+!93 lt!33690 (tuple2!2121 lt!33685 (minValue!2114 newMap!16))) lt!33689) (apply!75 lt!33690 lt!33689))))

(declare-fun lt!33678 () Unit!2076)

(assert (=> b!74801 (= lt!33678 lt!33688)))

(declare-fun lt!33675 () ListLongMap!1401)

(assert (=> b!74801 (= lt!33675 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33676 () (_ BitVec 64))

(assert (=> b!74801 (= lt!33676 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33683 () (_ BitVec 64))

(assert (=> b!74801 (= lt!33683 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33691 () Unit!2076)

(assert (=> b!74801 (= lt!33691 (addApplyDifferent!51 lt!33675 lt!33676 (zeroValue!2114 newMap!16) lt!33683))))

(assert (=> b!74801 (= (apply!75 (+!93 lt!33675 (tuple2!2121 lt!33676 (zeroValue!2114 newMap!16))) lt!33683) (apply!75 lt!33675 lt!33683))))

(declare-fun lt!33674 () Unit!2076)

(assert (=> b!74801 (= lt!33674 lt!33691)))

(declare-fun lt!33679 () ListLongMap!1401)

(assert (=> b!74801 (= lt!33679 (getCurrentListMapNoExtraKeys!58 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33684 () (_ BitVec 64))

(assert (=> b!74801 (= lt!33684 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33693 () (_ BitVec 64))

(assert (=> b!74801 (= lt!33693 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74801 (= lt!33673 (addApplyDifferent!51 lt!33679 lt!33684 (minValue!2114 newMap!16) lt!33693))))

(assert (=> b!74801 (= (apply!75 (+!93 lt!33679 (tuple2!2121 lt!33684 (minValue!2114 newMap!16))) lt!33693) (apply!75 lt!33679 lt!33693))))

(declare-fun bm!6613 () Bool)

(declare-fun call!6616 () ListLongMap!1401)

(declare-fun call!6615 () ListLongMap!1401)

(assert (=> bm!6613 (= call!6616 call!6615)))

(declare-fun b!74802 () Bool)

(declare-fun e!48860 () ListLongMap!1401)

(assert (=> b!74802 (= e!48860 call!6616)))

(declare-fun b!74803 () Bool)

(declare-fun res!39519 () Bool)

(assert (=> b!74803 (=> (not res!39519) (not e!48868))))

(assert (=> b!74803 (= res!39519 e!48866)))

(declare-fun c!11313 () Bool)

(assert (=> b!74803 (= c!11313 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!74804 () Bool)

(declare-fun call!6614 () Bool)

(assert (=> b!74804 (= e!48863 (not call!6614))))

(declare-fun b!74805 () Bool)

(declare-fun e!48869 () ListLongMap!1401)

(assert (=> b!74805 (= e!48869 (+!93 call!6615 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!74806 () Bool)

(assert (=> b!74806 (= e!48869 e!48860)))

(declare-fun c!11314 () Bool)

(assert (=> b!74806 (= c!11314 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6614 () Bool)

(declare-fun c!11312 () Bool)

(assert (=> bm!6614 (= call!6615 (+!93 (ite c!11312 call!6618 (ite c!11314 call!6619 call!6613)) (ite (or c!11312 c!11314) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!74807 () Bool)

(declare-fun res!39512 () Bool)

(assert (=> b!74807 (=> (not res!39512) (not e!48868))))

(assert (=> b!74807 (= res!39512 e!48859)))

(declare-fun res!39517 () Bool)

(assert (=> b!74807 (=> res!39517 e!48859)))

(declare-fun e!48864 () Bool)

(assert (=> b!74807 (= res!39517 (not e!48864))))

(declare-fun res!39520 () Bool)

(assert (=> b!74807 (=> (not res!39520) (not e!48864))))

(assert (=> b!74807 (= res!39520 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74808 () Bool)

(assert (=> b!74808 (= e!48862 (= (apply!75 lt!33677 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!74809 () Bool)

(declare-fun e!48867 () ListLongMap!1401)

(assert (=> b!74809 (= e!48867 call!6613)))

(declare-fun b!74810 () Bool)

(declare-fun e!48861 () Bool)

(assert (=> b!74810 (= e!48863 e!48861)))

(declare-fun res!39516 () Bool)

(assert (=> b!74810 (= res!39516 call!6614)))

(assert (=> b!74810 (=> (not res!39516) (not e!48861))))

(declare-fun bm!6615 () Bool)

(assert (=> bm!6615 (= call!6617 (contains!720 lt!33677 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17805 () Bool)

(assert (=> d!17805 e!48868))

(declare-fun res!39518 () Bool)

(assert (=> d!17805 (=> (not res!39518) (not e!48868))))

(assert (=> d!17805 (= res!39518 (or (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))))

(declare-fun lt!33682 () ListLongMap!1401)

(assert (=> d!17805 (= lt!33677 lt!33682)))

(declare-fun lt!33680 () Unit!2076)

(assert (=> d!17805 (= lt!33680 e!48870)))

(declare-fun c!11315 () Bool)

(assert (=> d!17805 (= c!11315 e!48865)))

(declare-fun res!39515 () Bool)

(assert (=> d!17805 (=> (not res!39515) (not e!48865))))

(assert (=> d!17805 (= res!39515 (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(assert (=> d!17805 (= lt!33682 e!48869)))

(assert (=> d!17805 (= c!11312 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17805 (validMask!0 (mask!6179 newMap!16))))

(assert (=> d!17805 (= (getCurrentListMap!414 (_keys!3864 newMap!16) lt!32775 (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33677)))

(declare-fun bm!6616 () Bool)

(assert (=> bm!6616 (= call!6614 (contains!720 lt!33677 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74811 () Bool)

(assert (=> b!74811 (= e!48867 call!6616)))

(declare-fun b!74812 () Bool)

(assert (=> b!74812 (= e!48858 (= (apply!75 lt!33677 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)) (get!1149 (select (arr!1851 lt!32775) #b00000000000000000000000000000000) (dynLambda!329 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74812 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2089 lt!32775)))))

(assert (=> b!74812 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2088 (_keys!3864 newMap!16))))))

(declare-fun b!74813 () Bool)

(assert (=> b!74813 (= e!48861 (= (apply!75 lt!33677 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun b!74814 () Bool)

(assert (=> b!74814 (= e!48864 (validKeyInArray!0 (select (arr!1850 (_keys!3864 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74815 () Bool)

(declare-fun c!11316 () Bool)

(assert (=> b!74815 (= c!11316 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74815 (= e!48860 e!48867)))

(assert (= (and d!17805 c!11312) b!74805))

(assert (= (and d!17805 (not c!11312)) b!74806))

(assert (= (and b!74806 c!11314) b!74802))

(assert (= (and b!74806 (not c!11314)) b!74815))

(assert (= (and b!74815 c!11316) b!74811))

(assert (= (and b!74815 (not c!11316)) b!74809))

(assert (= (or b!74811 b!74809) bm!6611))

(assert (= (or b!74802 bm!6611) bm!6612))

(assert (= (or b!74802 b!74811) bm!6613))

(assert (= (or b!74805 bm!6612) bm!6610))

(assert (= (or b!74805 bm!6613) bm!6614))

(assert (= (and d!17805 res!39515) b!74795))

(assert (= (and d!17805 c!11315) b!74801))

(assert (= (and d!17805 (not c!11315)) b!74798))

(assert (= (and d!17805 res!39518) b!74807))

(assert (= (and b!74807 res!39520) b!74814))

(assert (= (and b!74807 (not res!39517)) b!74800))

(assert (= (and b!74800 res!39513) b!74812))

(assert (= (and b!74807 res!39512) b!74803))

(assert (= (and b!74803 c!11313) b!74799))

(assert (= (and b!74803 (not c!11313)) b!74797))

(assert (= (and b!74799 res!39514) b!74808))

(assert (= (or b!74799 b!74797) bm!6615))

(assert (= (and b!74803 res!39519) b!74796))

(assert (= (and b!74796 c!11317) b!74810))

(assert (= (and b!74796 (not c!11317)) b!74804))

(assert (= (and b!74810 res!39516) b!74813))

(assert (= (or b!74810 b!74804) bm!6616))

(declare-fun b_lambda!3347 () Bool)

(assert (=> (not b_lambda!3347) (not b!74812)))

(assert (=> b!74812 t!5036))

(declare-fun b_and!4581 () Bool)

(assert (= b_and!4577 (and (=> t!5036 result!2689) b_and!4581)))

(assert (=> b!74812 t!5038))

(declare-fun b_and!4583 () Bool)

(assert (= b_and!4579 (and (=> t!5038 result!2691) b_and!4583)))

(assert (=> b!74800 m!71603))

(assert (=> b!74800 m!71603))

(declare-fun m!74271 () Bool)

(assert (=> b!74800 m!74271))

(declare-fun m!74273 () Bool)

(assert (=> b!74801 m!74273))

(declare-fun m!74275 () Bool)

(assert (=> b!74801 m!74275))

(declare-fun m!74277 () Bool)

(assert (=> b!74801 m!74277))

(assert (=> b!74801 m!71603))

(declare-fun m!74279 () Bool)

(assert (=> b!74801 m!74279))

(declare-fun m!74281 () Bool)

(assert (=> b!74801 m!74281))

(declare-fun m!74283 () Bool)

(assert (=> b!74801 m!74283))

(declare-fun m!74285 () Bool)

(assert (=> b!74801 m!74285))

(declare-fun m!74287 () Bool)

(assert (=> b!74801 m!74287))

(declare-fun m!74289 () Bool)

(assert (=> b!74801 m!74289))

(assert (=> b!74801 m!74287))

(assert (=> b!74801 m!74273))

(declare-fun m!74291 () Bool)

(assert (=> b!74801 m!74291))

(declare-fun m!74293 () Bool)

(assert (=> b!74801 m!74293))

(assert (=> b!74801 m!74279))

(declare-fun m!74295 () Bool)

(assert (=> b!74801 m!74295))

(assert (=> b!74801 m!74291))

(declare-fun m!74297 () Bool)

(assert (=> b!74801 m!74297))

(declare-fun m!74299 () Bool)

(assert (=> b!74801 m!74299))

(declare-fun m!74301 () Bool)

(assert (=> b!74801 m!74301))

(declare-fun m!74303 () Bool)

(assert (=> b!74801 m!74303))

(assert (=> b!74795 m!71603))

(assert (=> b!74795 m!71603))

(assert (=> b!74795 m!71605))

(declare-fun m!74305 () Bool)

(assert (=> bm!6616 m!74305))

(assert (=> bm!6610 m!74299))

(declare-fun m!74307 () Bool)

(assert (=> bm!6615 m!74307))

(assert (=> d!17805 m!71557))

(declare-fun m!74309 () Bool)

(assert (=> bm!6614 m!74309))

(declare-fun m!74311 () Bool)

(assert (=> b!74805 m!74311))

(declare-fun m!74313 () Bool)

(assert (=> b!74813 m!74313))

(assert (=> b!74814 m!71603))

(assert (=> b!74814 m!71603))

(assert (=> b!74814 m!71605))

(assert (=> b!74812 m!71663))

(assert (=> b!74812 m!71603))

(assert (=> b!74812 m!71603))

(declare-fun m!74315 () Bool)

(assert (=> b!74812 m!74315))

(declare-fun m!74317 () Bool)

(assert (=> b!74812 m!74317))

(assert (=> b!74812 m!71663))

(declare-fun m!74319 () Bool)

(assert (=> b!74812 m!74319))

(assert (=> b!74812 m!74317))

(declare-fun m!74321 () Bool)

(assert (=> b!74808 m!74321))

(assert (=> b!73378 d!17805))

(declare-fun d!17807 () Bool)

(declare-fun e!48871 () Bool)

(assert (=> d!17807 e!48871))

(declare-fun res!39521 () Bool)

(assert (=> d!17807 (=> res!39521 e!48871)))

(declare-fun lt!33695 () Bool)

(assert (=> d!17807 (= res!39521 (not lt!33695))))

(declare-fun lt!33697 () Bool)

(assert (=> d!17807 (= lt!33695 lt!33697)))

(declare-fun lt!33696 () Unit!2076)

(declare-fun e!48872 () Unit!2076)

(assert (=> d!17807 (= lt!33696 e!48872)))

(declare-fun c!11318 () Bool)

(assert (=> d!17807 (= c!11318 lt!33697)))

(assert (=> d!17807 (= lt!33697 (containsKey!137 (toList!716 lt!32821) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17807 (= (contains!720 lt!32821 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33695)))

(declare-fun b!74816 () Bool)

(declare-fun lt!33694 () Unit!2076)

(assert (=> b!74816 (= e!48872 lt!33694)))

(assert (=> b!74816 (= lt!33694 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!32821) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74816 (isDefined!86 (getValueByKey!134 (toList!716 lt!32821) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74817 () Bool)

(declare-fun Unit!2154 () Unit!2076)

(assert (=> b!74817 (= e!48872 Unit!2154)))

(declare-fun b!74818 () Bool)

(assert (=> b!74818 (= e!48871 (isDefined!86 (getValueByKey!134 (toList!716 lt!32821) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17807 c!11318) b!74816))

(assert (= (and d!17807 (not c!11318)) b!74817))

(assert (= (and d!17807 (not res!39521)) b!74818))

(declare-fun m!74323 () Bool)

(assert (=> d!17807 m!74323))

(declare-fun m!74325 () Bool)

(assert (=> b!74816 m!74325))

(assert (=> b!74816 m!73007))

(assert (=> b!74816 m!73007))

(declare-fun m!74327 () Bool)

(assert (=> b!74816 m!74327))

(assert (=> b!74818 m!73007))

(assert (=> b!74818 m!73007))

(assert (=> b!74818 m!74327))

(assert (=> bm!6446 d!17807))

(assert (=> b!73608 d!17673))

(assert (=> b!73608 d!17675))

(declare-fun d!17809 () Bool)

(declare-fun e!48873 () Bool)

(assert (=> d!17809 e!48873))

(declare-fun res!39522 () Bool)

(assert (=> d!17809 (=> res!39522 e!48873)))

(declare-fun lt!33699 () Bool)

(assert (=> d!17809 (= res!39522 (not lt!33699))))

(declare-fun lt!33701 () Bool)

(assert (=> d!17809 (= lt!33699 lt!33701)))

(declare-fun lt!33700 () Unit!2076)

(declare-fun e!48874 () Unit!2076)

(assert (=> d!17809 (= lt!33700 e!48874)))

(declare-fun c!11319 () Bool)

(assert (=> d!17809 (= c!11319 lt!33701)))

(assert (=> d!17809 (= lt!33701 (containsKey!137 (toList!716 lt!33084) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> d!17809 (= (contains!720 lt!33084 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33699)))

(declare-fun b!74819 () Bool)

(declare-fun lt!33698 () Unit!2076)

(assert (=> b!74819 (= e!48874 lt!33698)))

(assert (=> b!74819 (= lt!33698 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 lt!33084) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (=> b!74819 (isDefined!86 (getValueByKey!134 (toList!716 lt!33084) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!74820 () Bool)

(declare-fun Unit!2155 () Unit!2076)

(assert (=> b!74820 (= e!48874 Unit!2155)))

(declare-fun b!74821 () Bool)

(assert (=> b!74821 (= e!48873 (isDefined!86 (getValueByKey!134 (toList!716 lt!33084) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (= (and d!17809 c!11319) b!74819))

(assert (= (and d!17809 (not c!11319)) b!74820))

(assert (= (and d!17809 (not res!39522)) b!74821))

(declare-fun m!74329 () Bool)

(assert (=> d!17809 m!74329))

(declare-fun m!74331 () Bool)

(assert (=> b!74819 m!74331))

(assert (=> b!74819 m!72149))

(assert (=> b!74819 m!72149))

(declare-fun m!74333 () Bool)

(assert (=> b!74819 m!74333))

(assert (=> b!74821 m!72149))

(assert (=> b!74821 m!72149))

(assert (=> b!74821 m!74333))

(assert (=> d!17025 d!17809))

(declare-fun b!74823 () Bool)

(declare-fun e!48875 () Option!140)

(declare-fun e!48876 () Option!140)

(assert (=> b!74823 (= e!48875 e!48876)))

(declare-fun c!11321 () Bool)

(assert (=> b!74823 (= c!11321 (and ((_ is Cons!1470) lt!33085) (not (= (_1!1071 (h!2057 lt!33085)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun b!74822 () Bool)

(assert (=> b!74822 (= e!48875 (Some!139 (_2!1071 (h!2057 lt!33085))))))

(declare-fun c!11320 () Bool)

(declare-fun d!17811 () Bool)

(assert (=> d!17811 (= c!11320 (and ((_ is Cons!1470) lt!33085) (= (_1!1071 (h!2057 lt!33085)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17811 (= (getValueByKey!134 lt!33085 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) e!48875)))

(declare-fun b!74824 () Bool)

(assert (=> b!74824 (= e!48876 (getValueByKey!134 (t!5023 lt!33085) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!74825 () Bool)

(assert (=> b!74825 (= e!48876 None!138)))

(assert (= (and d!17811 c!11320) b!74822))

(assert (= (and d!17811 (not c!11320)) b!74823))

(assert (= (and b!74823 c!11321) b!74824))

(assert (= (and b!74823 (not c!11321)) b!74825))

(declare-fun m!74335 () Bool)

(assert (=> b!74824 m!74335))

(assert (=> d!17025 d!17811))

(declare-fun d!17813 () Bool)

(assert (=> d!17813 (= (getValueByKey!134 lt!33085 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) (Some!139 (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun lt!33702 () Unit!2076)

(assert (=> d!17813 (= lt!33702 (choose!419 lt!33085 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun e!48877 () Bool)

(assert (=> d!17813 e!48877))

(declare-fun res!39523 () Bool)

(assert (=> d!17813 (=> (not res!39523) (not e!48877))))

(assert (=> d!17813 (= res!39523 (isStrictlySorted!279 lt!33085))))

(assert (=> d!17813 (= (lemmaContainsTupThenGetReturnValue!51 lt!33085 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33702)))

(declare-fun b!74826 () Bool)

(declare-fun res!39524 () Bool)

(assert (=> b!74826 (=> (not res!39524) (not e!48877))))

(assert (=> b!74826 (= res!39524 (containsKey!137 lt!33085 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun b!74827 () Bool)

(assert (=> b!74827 (= e!48877 (contains!721 lt!33085 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (= (and d!17813 res!39523) b!74826))

(assert (= (and b!74826 res!39524) b!74827))

(assert (=> d!17813 m!72143))

(declare-fun m!74337 () Bool)

(assert (=> d!17813 m!74337))

(declare-fun m!74339 () Bool)

(assert (=> d!17813 m!74339))

(declare-fun m!74341 () Bool)

(assert (=> b!74826 m!74341))

(declare-fun m!74343 () Bool)

(assert (=> b!74827 m!74343))

(assert (=> d!17025 d!17813))

(declare-fun b!74828 () Bool)

(declare-fun e!48882 () List!1474)

(assert (=> b!74828 (= e!48882 (insertStrictlySorted!54 (t!5023 (toList!716 call!6417)) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(declare-fun c!11322 () Bool)

(declare-fun b!74829 () Bool)

(declare-fun c!11323 () Bool)

(assert (=> b!74829 (= e!48882 (ite c!11323 (t!5023 (toList!716 call!6417)) (ite c!11322 (Cons!1470 (h!2057 (toList!716 call!6417)) (t!5023 (toList!716 call!6417))) Nil!1471)))))

(declare-fun bm!6617 () Bool)

(declare-fun call!6621 () List!1474)

(declare-fun call!6622 () List!1474)

(assert (=> bm!6617 (= call!6621 call!6622)))

(declare-fun lt!33703 () List!1474)

(declare-fun e!48881 () Bool)

(declare-fun b!74830 () Bool)

(assert (=> b!74830 (= e!48881 (contains!721 lt!33703 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun b!74831 () Bool)

(declare-fun e!48878 () List!1474)

(assert (=> b!74831 (= e!48878 call!6621)))

(declare-fun b!74832 () Bool)

(declare-fun e!48879 () List!1474)

(declare-fun e!48880 () List!1474)

(assert (=> b!74832 (= e!48879 e!48880)))

(assert (=> b!74832 (= c!11323 (and ((_ is Cons!1470) (toList!716 call!6417)) (= (_1!1071 (h!2057 (toList!716 call!6417))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(declare-fun d!17815 () Bool)

(assert (=> d!17815 e!48881))

(declare-fun res!39525 () Bool)

(assert (=> d!17815 (=> (not res!39525) (not e!48881))))

(assert (=> d!17815 (= res!39525 (isStrictlySorted!279 lt!33703))))

(assert (=> d!17815 (= lt!33703 e!48879)))

(declare-fun c!11324 () Bool)

(assert (=> d!17815 (= c!11324 (and ((_ is Cons!1470) (toList!716 call!6417)) (bvslt (_1!1071 (h!2057 (toList!716 call!6417))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> d!17815 (isStrictlySorted!279 (toList!716 call!6417))))

(assert (=> d!17815 (= (insertStrictlySorted!54 (toList!716 call!6417) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))) lt!33703)))

(declare-fun bm!6618 () Bool)

(declare-fun call!6620 () List!1474)

(assert (=> bm!6618 (= call!6620 ($colon$colon!65 e!48882 (ite c!11324 (h!2057 (toList!716 call!6417)) (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (_2!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))))

(declare-fun c!11325 () Bool)

(assert (=> bm!6618 (= c!11325 c!11324)))

(declare-fun b!74833 () Bool)

(assert (=> b!74833 (= e!48880 call!6622)))

(declare-fun b!74834 () Bool)

(assert (=> b!74834 (= e!48878 call!6621)))

(declare-fun b!74835 () Bool)

(assert (=> b!74835 (= c!11322 (and ((_ is Cons!1470) (toList!716 call!6417)) (bvsgt (_1!1071 (h!2057 (toList!716 call!6417))) (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)))))))

(assert (=> b!74835 (= e!48880 e!48878)))

(declare-fun b!74836 () Bool)

(assert (=> b!74836 (= e!48879 call!6620)))

(declare-fun bm!6619 () Bool)

(assert (=> bm!6619 (= call!6622 call!6620)))

(declare-fun b!74837 () Bool)

(declare-fun res!39526 () Bool)

(assert (=> b!74837 (=> (not res!39526) (not e!48881))))

(assert (=> b!74837 (= res!39526 (containsKey!137 lt!33703 (_1!1071 (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495))))))

(assert (= (and d!17815 c!11324) b!74836))

(assert (= (and d!17815 (not c!11324)) b!74832))

(assert (= (and b!74832 c!11323) b!74833))

(assert (= (and b!74832 (not c!11323)) b!74835))

(assert (= (and b!74835 c!11322) b!74831))

(assert (= (and b!74835 (not c!11322)) b!74834))

(assert (= (or b!74831 b!74834) bm!6617))

(assert (= (or b!74833 bm!6617) bm!6619))

(assert (= (or b!74836 bm!6619) bm!6618))

(assert (= (and bm!6618 c!11325) b!74828))

(assert (= (and bm!6618 (not c!11325)) b!74829))

(assert (= (and d!17815 res!39525) b!74837))

(assert (= (and b!74837 res!39526) b!74830))

(declare-fun m!74345 () Bool)

(assert (=> b!74828 m!74345))

(declare-fun m!74347 () Bool)

(assert (=> b!74830 m!74347))

(declare-fun m!74349 () Bool)

(assert (=> d!17815 m!74349))

(declare-fun m!74351 () Bool)

(assert (=> d!17815 m!74351))

(declare-fun m!74353 () Bool)

(assert (=> bm!6618 m!74353))

(declare-fun m!74355 () Bool)

(assert (=> b!74837 m!74355))

(assert (=> d!17025 d!17815))

(declare-fun d!17817 () Bool)

(assert (=> d!17817 (= (+!93 (getCurrentListMap!414 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495)) (getCurrentListMap!414 (_keys!3864 newMap!16) (array!3880 (store (arr!1851 (_values!2195 newMap!16)) (index!3052 lt!32773) (ValueCellFull!893 lt!32495)) (size!2089 (_values!2195 newMap!16))) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (=> d!17817 true))

(declare-fun _$5!80 () Unit!2076)

(assert (=> d!17817 (= (choose!423 (_keys!3864 newMap!16) (_values!2195 newMap!16) (mask!6179 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3052 lt!32773) (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) from!355) lt!32495 (defaultEntry!2212 newMap!16)) _$5!80)))

(declare-fun bs!3231 () Bool)

(assert (= bs!3231 d!17817))

(assert (=> bs!3231 m!71403))

(assert (=> bs!3231 m!71403))

(assert (=> bs!3231 m!71741))

(assert (=> bs!3231 m!71483))

(assert (=> bs!3231 m!71743))

(assert (=> d!16937 d!17817))

(assert (=> d!16937 d!17149))

(declare-fun d!17819 () Bool)

(assert (=> d!17819 (isDefined!86 (getValueByKey!134 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(declare-fun lt!33704 () Unit!2076)

(assert (=> d!17819 (= lt!33704 (choose!420 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(declare-fun e!48883 () Bool)

(assert (=> d!17819 e!48883))

(declare-fun res!39527 () Bool)

(assert (=> d!17819 (=> (not res!39527) (not e!48883))))

(assert (=> d!17819 (= res!39527 (isStrictlySorted!279 (toList!716 call!6429)))))

(assert (=> d!17819 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))) lt!33704)))

(declare-fun b!74838 () Bool)

(assert (=> b!74838 (= e!48883 (containsKey!137 (toList!716 call!6429) (select (arr!1850 (_keys!3864 newMap!16)) (index!3052 lt!32773))))))

(assert (= (and d!17819 res!39527) b!74838))

(assert (=> d!17819 m!71485))

(assert (=> d!17819 m!71729))

(assert (=> d!17819 m!71729))

(assert (=> d!17819 m!71731))

(assert (=> d!17819 m!71485))

(declare-fun m!74357 () Bool)

(assert (=> d!17819 m!74357))

(declare-fun m!74359 () Bool)

(assert (=> d!17819 m!74359))

(assert (=> b!74838 m!71485))

(assert (=> b!74838 m!71725))

(assert (=> b!73373 d!17819))

(assert (=> b!73373 d!17209))

(assert (=> b!73373 d!17211))

(declare-fun d!17821 () Bool)

(declare-fun lt!33705 () Bool)

(assert (=> d!17821 (= lt!33705 (select (content!78 lt!32595) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun e!48885 () Bool)

(assert (=> d!17821 (= lt!33705 e!48885)))

(declare-fun res!39528 () Bool)

(assert (=> d!17821 (=> (not res!39528) (not e!48885))))

(assert (=> d!17821 (= res!39528 ((_ is Cons!1470) lt!32595))))

(assert (=> d!17821 (= (contains!721 lt!32595 (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))) lt!33705)))

(declare-fun b!74839 () Bool)

(declare-fun e!48884 () Bool)

(assert (=> b!74839 (= e!48885 e!48884)))

(declare-fun res!39529 () Bool)

(assert (=> b!74839 (=> res!39529 e!48884)))

(assert (=> b!74839 (= res!39529 (= (h!2057 lt!32595) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(declare-fun b!74840 () Bool)

(assert (=> b!74840 (= e!48884 (contains!721 (t!5023 lt!32595) (tuple2!2121 (_1!1071 lt!32485) (_2!1071 lt!32485))))))

(assert (= (and d!17821 res!39528) b!74839))

(assert (= (and b!74839 (not res!39529)) b!74840))

(declare-fun m!74361 () Bool)

(assert (=> d!17821 m!74361))

(declare-fun m!74363 () Bool)

(assert (=> d!17821 m!74363))

(declare-fun m!74365 () Bool)

(assert (=> b!74840 m!74365))

(assert (=> b!73286 d!17821))

(declare-fun b!74841 () Bool)

(declare-fun e!48887 () Bool)

(declare-fun call!6623 () Bool)

(assert (=> b!74841 (= e!48887 call!6623)))

(declare-fun b!74842 () Bool)

(declare-fun e!48888 () Bool)

(assert (=> b!74842 (= e!48887 e!48888)))

(declare-fun lt!33707 () (_ BitVec 64))

(assert (=> b!74842 (= lt!33707 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!33706 () Unit!2076)

(assert (=> b!74842 (= lt!33706 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) lt!33707 #b00000000000000000000000000000000))))

(assert (=> b!74842 (arrayContainsKey!0 (_keys!3864 (v!2532 (underlying!262 thiss!992))) lt!33707 #b00000000000000000000000000000000)))

(declare-fun lt!33708 () Unit!2076)

(assert (=> b!74842 (= lt!33708 lt!33706)))

(declare-fun res!39530 () Bool)

(assert (=> b!74842 (= res!39530 (= (seekEntryOrOpen!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000) (_keys!3864 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992)))) (Found!230 #b00000000000000000000000000000000)))))

(assert (=> b!74842 (=> (not res!39530) (not e!48888))))

(declare-fun d!17823 () Bool)

(declare-fun res!39531 () Bool)

(declare-fun e!48886 () Bool)

(assert (=> d!17823 (=> res!39531 e!48886)))

(assert (=> d!17823 (= res!39531 (bvsge #b00000000000000000000000000000000 (size!2088 (_keys!3864 (v!2532 (underlying!262 thiss!992))))))))

(assert (=> d!17823 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3864 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992)))) e!48886)))

(declare-fun b!74843 () Bool)

(assert (=> b!74843 (= e!48886 e!48887)))

(declare-fun c!11326 () Bool)

(assert (=> b!74843 (= c!11326 (validKeyInArray!0 (select (arr!1850 (_keys!3864 (v!2532 (underlying!262 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6620 () Bool)

(assert (=> bm!6620 (= call!6623 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3864 (v!2532 (underlying!262 thiss!992))) (mask!6179 (v!2532 (underlying!262 thiss!992)))))))

(declare-fun b!74844 () Bool)

(assert (=> b!74844 (= e!48888 call!6623)))

(assert (= (and d!17823 (not res!39531)) b!74843))

(assert (= (and b!74843 c!11326) b!74842))

(assert (= (and b!74843 (not c!11326)) b!74841))

(assert (= (and b!74842 res!39530) b!74844))

(assert (= (or b!74844 b!74841) bm!6620))

(assert (=> b!74842 m!72611))

(declare-fun m!74367 () Bool)

(assert (=> b!74842 m!74367))

(declare-fun m!74369 () Bool)

(assert (=> b!74842 m!74369))

(assert (=> b!74842 m!72611))

(declare-fun m!74371 () Bool)

(assert (=> b!74842 m!74371))

(assert (=> b!74843 m!72611))

(assert (=> b!74843 m!72611))

(assert (=> b!74843 m!72613))

(declare-fun m!74373 () Bool)

(assert (=> bm!6620 m!74373))

(assert (=> b!73528 d!17823))

(declare-fun d!17825 () Bool)

(assert (=> d!17825 (= (get!1153 (getValueByKey!134 (toList!716 lt!32664) lt!32672)) (v!2538 (getValueByKey!134 (toList!716 lt!32664) lt!32672)))))

(assert (=> d!16987 d!17825))

(declare-fun b!74846 () Bool)

(declare-fun e!48889 () Option!140)

(declare-fun e!48890 () Option!140)

(assert (=> b!74846 (= e!48889 e!48890)))

(declare-fun c!11328 () Bool)

(assert (=> b!74846 (= c!11328 (and ((_ is Cons!1470) (toList!716 lt!32664)) (not (= (_1!1071 (h!2057 (toList!716 lt!32664))) lt!32672))))))

(declare-fun b!74845 () Bool)

(assert (=> b!74845 (= e!48889 (Some!139 (_2!1071 (h!2057 (toList!716 lt!32664)))))))

(declare-fun d!17827 () Bool)

(declare-fun c!11327 () Bool)

(assert (=> d!17827 (= c!11327 (and ((_ is Cons!1470) (toList!716 lt!32664)) (= (_1!1071 (h!2057 (toList!716 lt!32664))) lt!32672)))))

(assert (=> d!17827 (= (getValueByKey!134 (toList!716 lt!32664) lt!32672) e!48889)))

(declare-fun b!74847 () Bool)

(assert (=> b!74847 (= e!48890 (getValueByKey!134 (t!5023 (toList!716 lt!32664)) lt!32672))))

(declare-fun b!74848 () Bool)

(assert (=> b!74848 (= e!48890 None!138)))

(assert (= (and d!17827 c!11327) b!74845))

(assert (= (and d!17827 (not c!11327)) b!74846))

(assert (= (and b!74846 c!11328) b!74847))

(assert (= (and b!74846 (not c!11328)) b!74848))

(declare-fun m!74375 () Bool)

(assert (=> b!74847 m!74375))

(assert (=> d!16987 d!17827))

(declare-fun d!17829 () Bool)

(declare-fun e!48891 () Bool)

(assert (=> d!17829 e!48891))

(declare-fun res!39532 () Bool)

(assert (=> d!17829 (=> (not res!39532) (not e!48891))))

(declare-fun lt!33711 () ListLongMap!1401)

(assert (=> d!17829 (= res!39532 (contains!720 lt!33711 (_1!1071 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))))))

(declare-fun lt!33712 () List!1474)

(assert (=> d!17829 (= lt!33711 (ListLongMap!1402 lt!33712))))

(declare-fun lt!33710 () Unit!2076)

(declare-fun lt!33709 () Unit!2076)

(assert (=> d!17829 (= lt!33710 lt!33709)))

(assert (=> d!17829 (= (getValueByKey!134 lt!33712 (_1!1071 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))) (Some!139 (_2!1071 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17829 (= lt!33709 (lemmaContainsTupThenGetReturnValue!51 lt!33712 (_1!1071 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17829 (= lt!33712 (insertStrictlySorted!54 (toList!716 lt!32890) (_1!1071 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17829 (= (+!93 lt!32890 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) lt!33711)))

(declare-fun b!74849 () Bool)

(declare-fun res!39533 () Bool)

(assert (=> b!74849 (=> (not res!39533) (not e!48891))))

(assert (=> b!74849 (= res!39533 (= (getValueByKey!134 (toList!716 lt!33711) (_1!1071 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))) (Some!139 (_2!1071 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))))))))

(declare-fun b!74850 () Bool)

(assert (=> b!74850 (= e!48891 (contains!721 (toList!716 lt!33711) (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))))))

(assert (= (and d!17829 res!39532) b!74849))

(assert (= (and b!74849 res!39533) b!74850))

(declare-fun m!74377 () Bool)

(assert (=> d!17829 m!74377))

(declare-fun m!74379 () Bool)

(assert (=> d!17829 m!74379))

(declare-fun m!74381 () Bool)

(assert (=> d!17829 m!74381))

(declare-fun m!74383 () Bool)

(assert (=> d!17829 m!74383))

(declare-fun m!74385 () Bool)

(assert (=> b!74849 m!74385))

(declare-fun m!74387 () Bool)

(assert (=> b!74850 m!74387))

(assert (=> b!73443 d!17829))

(assert (=> b!73443 d!17321))

(declare-fun d!17831 () Bool)

(assert (=> d!17831 (= (apply!75 lt!32890 lt!32898) (get!1153 (getValueByKey!134 (toList!716 lt!32890) lt!32898)))))

(declare-fun bs!3232 () Bool)

(assert (= bs!3232 d!17831))

(declare-fun m!74389 () Bool)

(assert (=> bs!3232 m!74389))

(assert (=> bs!3232 m!74389))

(declare-fun m!74391 () Bool)

(assert (=> bs!3232 m!74391))

(assert (=> b!73443 d!17831))

(declare-fun d!17833 () Bool)

(assert (=> d!17833 (= (apply!75 (+!93 lt!32905 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) lt!32904) (apply!75 lt!32905 lt!32904))))

(declare-fun lt!33713 () Unit!2076)

(assert (=> d!17833 (= lt!33713 (choose!426 lt!32905 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) lt!32904))))

(declare-fun e!48892 () Bool)

(assert (=> d!17833 e!48892))

(declare-fun res!39534 () Bool)

(assert (=> d!17833 (=> (not res!39534) (not e!48892))))

(assert (=> d!17833 (= res!39534 (contains!720 lt!32905 lt!32904))))

(assert (=> d!17833 (= (addApplyDifferent!51 lt!32905 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) lt!32904) lt!33713)))

(declare-fun b!74851 () Bool)

(assert (=> b!74851 (= e!48892 (not (= lt!32904 lt!32900)))))

(assert (= (and d!17833 res!39534) b!74851))

(declare-fun m!74393 () Bool)

(assert (=> d!17833 m!74393))

(declare-fun m!74395 () Bool)

(assert (=> d!17833 m!74395))

(assert (=> d!17833 m!71813))

(assert (=> d!17833 m!71829))

(assert (=> d!17833 m!71817))

(assert (=> d!17833 m!71813))

(assert (=> b!73443 d!17833))

(declare-fun d!17835 () Bool)

(declare-fun e!48893 () Bool)

(assert (=> d!17835 e!48893))

(declare-fun res!39535 () Bool)

(assert (=> d!17835 (=> res!39535 e!48893)))

(declare-fun lt!33715 () Bool)

(assert (=> d!17835 (= res!39535 (not lt!33715))))

(declare-fun lt!33717 () Bool)

(assert (=> d!17835 (= lt!33715 lt!33717)))

(declare-fun lt!33716 () Unit!2076)

(declare-fun e!48894 () Unit!2076)

(assert (=> d!17835 (= lt!33716 e!48894)))

(declare-fun c!11329 () Bool)

(assert (=> d!17835 (= c!11329 lt!33717)))

(assert (=> d!17835 (= lt!33717 (containsKey!137 (toList!716 (+!93 lt!32902 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))) lt!32887))))

(assert (=> d!17835 (= (contains!720 (+!93 lt!32902 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) lt!32887) lt!33715)))

(declare-fun b!74852 () Bool)

(declare-fun lt!33714 () Unit!2076)

(assert (=> b!74852 (= e!48894 lt!33714)))

(assert (=> b!74852 (= lt!33714 (lemmaContainsKeyImpliesGetValueByKeyDefined!85 (toList!716 (+!93 lt!32902 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))) lt!32887))))

(assert (=> b!74852 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32902 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))) lt!32887))))

(declare-fun b!74853 () Bool)

(declare-fun Unit!2156 () Unit!2076)

(assert (=> b!74853 (= e!48894 Unit!2156)))

(declare-fun b!74854 () Bool)

(assert (=> b!74854 (= e!48893 (isDefined!86 (getValueByKey!134 (toList!716 (+!93 lt!32902 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))) lt!32887)))))

(assert (= (and d!17835 c!11329) b!74852))

(assert (= (and d!17835 (not c!11329)) b!74853))

(assert (= (and d!17835 (not res!39535)) b!74854))

(declare-fun m!74397 () Bool)

(assert (=> d!17835 m!74397))

(declare-fun m!74399 () Bool)

(assert (=> b!74852 m!74399))

(declare-fun m!74401 () Bool)

(assert (=> b!74852 m!74401))

(assert (=> b!74852 m!74401))

(declare-fun m!74403 () Bool)

(assert (=> b!74852 m!74403))

(assert (=> b!74854 m!74401))

(assert (=> b!74854 m!74401))

(assert (=> b!74854 m!74403))

(assert (=> b!73443 d!17835))

(declare-fun d!17837 () Bool)

(declare-fun e!48895 () Bool)

(assert (=> d!17837 e!48895))

(declare-fun res!39536 () Bool)

(assert (=> d!17837 (=> (not res!39536) (not e!48895))))

(declare-fun lt!33720 () ListLongMap!1401)

(assert (=> d!17837 (= res!39536 (contains!720 lt!33720 (_1!1071 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))))))

(declare-fun lt!33721 () List!1474)

(assert (=> d!17837 (= lt!33720 (ListLongMap!1402 lt!33721))))

(declare-fun lt!33719 () Unit!2076)

(declare-fun lt!33718 () Unit!2076)

(assert (=> d!17837 (= lt!33719 lt!33718)))

(assert (=> d!17837 (= (getValueByKey!134 lt!33721 (_1!1071 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))) (Some!139 (_2!1071 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17837 (= lt!33718 (lemmaContainsTupThenGetReturnValue!51 lt!33721 (_1!1071 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17837 (= lt!33721 (insertStrictlySorted!54 (toList!716 lt!32902) (_1!1071 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17837 (= (+!93 lt!32902 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) lt!33720)))

(declare-fun b!74855 () Bool)

(declare-fun res!39537 () Bool)

(assert (=> b!74855 (=> (not res!39537) (not e!48895))))

(assert (=> b!74855 (= res!39537 (= (getValueByKey!134 (toList!716 lt!33720) (_1!1071 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))) (Some!139 (_2!1071 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))))))))

(declare-fun b!74856 () Bool)

(assert (=> b!74856 (= e!48895 (contains!721 (toList!716 lt!33720) (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))))))

(assert (= (and d!17837 res!39536) b!74855))

(assert (= (and b!74855 res!39537) b!74856))

(declare-fun m!74405 () Bool)

(assert (=> d!17837 m!74405))

(declare-fun m!74407 () Bool)

(assert (=> d!17837 m!74407))

(declare-fun m!74409 () Bool)

(assert (=> d!17837 m!74409))

(declare-fun m!74411 () Bool)

(assert (=> d!17837 m!74411))

(declare-fun m!74413 () Bool)

(assert (=> b!74855 m!74413))

(declare-fun m!74415 () Bool)

(assert (=> b!74856 m!74415))

(assert (=> b!73443 d!17837))

(declare-fun d!17839 () Bool)

(assert (=> d!17839 (= (apply!75 (+!93 lt!32890 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) lt!32898) (apply!75 lt!32890 lt!32898))))

(declare-fun lt!33722 () Unit!2076)

(assert (=> d!17839 (= lt!33722 (choose!426 lt!32890 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) lt!32898))))

(declare-fun e!48896 () Bool)

(assert (=> d!17839 e!48896))

(declare-fun res!39538 () Bool)

(assert (=> d!17839 (=> (not res!39538) (not e!48896))))

(assert (=> d!17839 (= res!39538 (contains!720 lt!32890 lt!32898))))

(assert (=> d!17839 (= (addApplyDifferent!51 lt!32890 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) lt!32898) lt!33722)))

(declare-fun b!74857 () Bool)

(assert (=> b!74857 (= e!48896 (not (= lt!32898 lt!32891)))))

(assert (= (and d!17839 res!39538) b!74857))

(declare-fun m!74417 () Bool)

(assert (=> d!17839 m!74417))

(declare-fun m!74419 () Bool)

(assert (=> d!17839 m!74419))

(assert (=> d!17839 m!71821))

(assert (=> d!17839 m!71823))

(assert (=> d!17839 m!71835))

(assert (=> d!17839 m!71821))

(assert (=> b!73443 d!17839))

(declare-fun d!17841 () Bool)

(assert (=> d!17841 (contains!720 (+!93 lt!32902 (tuple2!2121 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) lt!32887)))

(declare-fun lt!33723 () Unit!2076)

(assert (=> d!17841 (= lt!33723 (choose!425 lt!32902 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) lt!32887))))

(assert (=> d!17841 (contains!720 lt!32902 lt!32887)))

(assert (=> d!17841 (= (addStillContains!51 lt!32902 lt!32907 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)) lt!32887) lt!33723)))

(declare-fun bs!3233 () Bool)

(assert (= bs!3233 d!17841))

(assert (=> bs!3233 m!71825))

(assert (=> bs!3233 m!71825))

(assert (=> bs!3233 m!71827))

(declare-fun m!74421 () Bool)

(assert (=> bs!3233 m!74421))

(declare-fun m!74423 () Bool)

(assert (=> bs!3233 m!74423))

(assert (=> b!73443 d!17841))

(declare-fun d!17843 () Bool)

(assert (=> d!17843 (= (apply!75 (+!93 lt!32890 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16)))) lt!32898) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32890 (tuple2!2121 lt!32891 (ite (and c!10868 c!10858) lt!32495 (zeroValue!2114 newMap!16))))) lt!32898)))))

(declare-fun bs!3234 () Bool)

(assert (= bs!3234 d!17843))

(declare-fun m!74425 () Bool)

(assert (=> bs!3234 m!74425))

(assert (=> bs!3234 m!74425))

(declare-fun m!74427 () Bool)

(assert (=> bs!3234 m!74427))

(assert (=> b!73443 d!17843))

(declare-fun d!17845 () Bool)

(assert (=> d!17845 (= (apply!75 (+!93 lt!32894 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) lt!32908) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32894 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) lt!32908)))))

(declare-fun bs!3235 () Bool)

(assert (= bs!3235 d!17845))

(declare-fun m!74429 () Bool)

(assert (=> bs!3235 m!74429))

(assert (=> bs!3235 m!74429))

(declare-fun m!74431 () Bool)

(assert (=> bs!3235 m!74431))

(assert (=> b!73443 d!17845))

(declare-fun d!17847 () Bool)

(assert (=> d!17847 (= (apply!75 lt!32905 lt!32904) (get!1153 (getValueByKey!134 (toList!716 lt!32905) lt!32904)))))

(declare-fun bs!3236 () Bool)

(assert (= bs!3236 d!17847))

(declare-fun m!74433 () Bool)

(assert (=> bs!3236 m!74433))

(assert (=> bs!3236 m!74433))

(declare-fun m!74435 () Bool)

(assert (=> bs!3236 m!74435))

(assert (=> b!73443 d!17847))

(declare-fun d!17849 () Bool)

(declare-fun e!48897 () Bool)

(assert (=> d!17849 e!48897))

(declare-fun res!39539 () Bool)

(assert (=> d!17849 (=> (not res!39539) (not e!48897))))

(declare-fun lt!33726 () ListLongMap!1401)

(assert (=> d!17849 (= res!39539 (contains!720 lt!33726 (_1!1071 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(declare-fun lt!33727 () List!1474)

(assert (=> d!17849 (= lt!33726 (ListLongMap!1402 lt!33727))))

(declare-fun lt!33725 () Unit!2076)

(declare-fun lt!33724 () Unit!2076)

(assert (=> d!17849 (= lt!33725 lt!33724)))

(assert (=> d!17849 (= (getValueByKey!134 lt!33727 (_1!1071 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) (Some!139 (_2!1071 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(assert (=> d!17849 (= lt!33724 (lemmaContainsTupThenGetReturnValue!51 lt!33727 (_1!1071 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(assert (=> d!17849 (= lt!33727 (insertStrictlySorted!54 (toList!716 lt!32905) (_1!1071 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(assert (=> d!17849 (= (+!93 lt!32905 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) lt!33726)))

(declare-fun b!74858 () Bool)

(declare-fun res!39540 () Bool)

(assert (=> b!74858 (=> (not res!39540) (not e!48897))))

(assert (=> b!74858 (= res!39540 (= (getValueByKey!134 (toList!716 lt!33726) (_1!1071 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) (Some!139 (_2!1071 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))))

(declare-fun b!74859 () Bool)

(assert (=> b!74859 (= e!48897 (contains!721 (toList!716 lt!33726) (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))

(assert (= (and d!17849 res!39539) b!74858))

(assert (= (and b!74858 res!39540) b!74859))

(declare-fun m!74437 () Bool)

(assert (=> d!17849 m!74437))

(declare-fun m!74439 () Bool)

(assert (=> d!17849 m!74439))

(declare-fun m!74441 () Bool)

(assert (=> d!17849 m!74441))

(declare-fun m!74443 () Bool)

(assert (=> d!17849 m!74443))

(declare-fun m!74445 () Bool)

(assert (=> b!74858 m!74445))

(declare-fun m!74447 () Bool)

(assert (=> b!74859 m!74447))

(assert (=> b!73443 d!17849))

(declare-fun d!17851 () Bool)

(declare-fun e!48898 () Bool)

(assert (=> d!17851 e!48898))

(declare-fun res!39541 () Bool)

(assert (=> d!17851 (=> (not res!39541) (not e!48898))))

(declare-fun lt!33730 () ListLongMap!1401)

(assert (=> d!17851 (= res!39541 (contains!720 lt!33730 (_1!1071 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(declare-fun lt!33731 () List!1474)

(assert (=> d!17851 (= lt!33730 (ListLongMap!1402 lt!33731))))

(declare-fun lt!33729 () Unit!2076)

(declare-fun lt!33728 () Unit!2076)

(assert (=> d!17851 (= lt!33729 lt!33728)))

(assert (=> d!17851 (= (getValueByKey!134 lt!33731 (_1!1071 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) (Some!139 (_2!1071 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(assert (=> d!17851 (= lt!33728 (lemmaContainsTupThenGetReturnValue!51 lt!33731 (_1!1071 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(assert (=> d!17851 (= lt!33731 (insertStrictlySorted!54 (toList!716 lt!32894) (_1!1071 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))))))

(assert (=> d!17851 (= (+!93 lt!32894 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) lt!33730)))

(declare-fun b!74860 () Bool)

(declare-fun res!39542 () Bool)

(assert (=> b!74860 (=> (not res!39542) (not e!48898))))

(assert (=> b!74860 (= res!39542 (= (getValueByKey!134 (toList!716 lt!33730) (_1!1071 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) (Some!139 (_2!1071 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))))

(declare-fun b!74861 () Bool)

(assert (=> b!74861 (= e!48898 (contains!721 (toList!716 lt!33730) (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))))))

(assert (= (and d!17851 res!39541) b!74860))

(assert (= (and b!74860 res!39542) b!74861))

(declare-fun m!74449 () Bool)

(assert (=> d!17851 m!74449))

(declare-fun m!74451 () Bool)

(assert (=> d!17851 m!74451))

(declare-fun m!74453 () Bool)

(assert (=> d!17851 m!74453))

(declare-fun m!74455 () Bool)

(assert (=> d!17851 m!74455))

(declare-fun m!74457 () Bool)

(assert (=> b!74860 m!74457))

(declare-fun m!74459 () Bool)

(assert (=> b!74861 m!74459))

(assert (=> b!73443 d!17851))

(declare-fun d!17853 () Bool)

(assert (=> d!17853 (= (apply!75 lt!32894 lt!32908) (get!1153 (getValueByKey!134 (toList!716 lt!32894) lt!32908)))))

(declare-fun bs!3237 () Bool)

(assert (= bs!3237 d!17853))

(declare-fun m!74461 () Bool)

(assert (=> bs!3237 m!74461))

(assert (=> bs!3237 m!74461))

(declare-fun m!74463 () Bool)

(assert (=> bs!3237 m!74463))

(assert (=> b!73443 d!17853))

(declare-fun d!17855 () Bool)

(assert (=> d!17855 (= (apply!75 (+!93 lt!32894 (tuple2!2121 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) lt!32908) (apply!75 lt!32894 lt!32908))))

(declare-fun lt!33732 () Unit!2076)

(assert (=> d!17855 (= lt!33732 (choose!426 lt!32894 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) lt!32908))))

(declare-fun e!48899 () Bool)

(assert (=> d!17855 e!48899))

(declare-fun res!39543 () Bool)

(assert (=> d!17855 (=> (not res!39543) (not e!48899))))

(assert (=> d!17855 (= res!39543 (contains!720 lt!32894 lt!32908))))

(assert (=> d!17855 (= (addApplyDifferent!51 lt!32894 lt!32899 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)) lt!32908) lt!33732)))

(declare-fun b!74862 () Bool)

(assert (=> b!74862 (= e!48899 (not (= lt!32908 lt!32899)))))

(assert (= (and d!17855 res!39543) b!74862))

(declare-fun m!74465 () Bool)

(assert (=> d!17855 m!74465))

(declare-fun m!74467 () Bool)

(assert (=> d!17855 m!74467))

(assert (=> d!17855 m!71807))

(assert (=> d!17855 m!71809))

(assert (=> d!17855 m!71815))

(assert (=> d!17855 m!71807))

(assert (=> b!73443 d!17855))

(declare-fun d!17857 () Bool)

(assert (=> d!17857 (= (apply!75 (+!93 lt!32905 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16)))) lt!32904) (get!1153 (getValueByKey!134 (toList!716 (+!93 lt!32905 (tuple2!2121 lt!32900 (ite c!10868 (ite c!10858 (minValue!2114 newMap!16) lt!32495) (minValue!2114 newMap!16))))) lt!32904)))))

(declare-fun bs!3238 () Bool)

(assert (= bs!3238 d!17857))

(declare-fun m!74469 () Bool)

(assert (=> bs!3238 m!74469))

(assert (=> bs!3238 m!74469))

(declare-fun m!74471 () Bool)

(assert (=> bs!3238 m!74471))

(assert (=> b!73443 d!17857))

(declare-fun condMapEmpty!3185 () Bool)

(declare-fun mapDefault!3185 () ValueCell!893)

(assert (=> mapNonEmpty!3184 (= condMapEmpty!3185 (= mapRest!3184 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3185)))))

(declare-fun e!48901 () Bool)

(declare-fun mapRes!3185 () Bool)

(assert (=> mapNonEmpty!3184 (= tp!8548 (and e!48901 mapRes!3185))))

(declare-fun mapIsEmpty!3185 () Bool)

(assert (=> mapIsEmpty!3185 mapRes!3185))

(declare-fun b!74863 () Bool)

(declare-fun e!48900 () Bool)

(assert (=> b!74863 (= e!48900 tp_is_empty!2473)))

(declare-fun mapNonEmpty!3185 () Bool)

(declare-fun tp!8549 () Bool)

(assert (=> mapNonEmpty!3185 (= mapRes!3185 (and tp!8549 e!48900))))

(declare-fun mapRest!3185 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapKey!3185 () (_ BitVec 32))

(declare-fun mapValue!3185 () ValueCell!893)

(assert (=> mapNonEmpty!3185 (= mapRest!3184 (store mapRest!3185 mapKey!3185 mapValue!3185))))

(declare-fun b!74864 () Bool)

(assert (=> b!74864 (= e!48901 tp_is_empty!2473)))

(assert (= (and mapNonEmpty!3184 condMapEmpty!3185) mapIsEmpty!3185))

(assert (= (and mapNonEmpty!3184 (not condMapEmpty!3185)) mapNonEmpty!3185))

(assert (= (and mapNonEmpty!3185 ((_ is ValueCellFull!893) mapValue!3185)) b!74863))

(assert (= (and mapNonEmpty!3184 ((_ is ValueCellFull!893) mapDefault!3185)) b!74864))

(declare-fun m!74473 () Bool)

(assert (=> mapNonEmpty!3185 m!74473))

(declare-fun condMapEmpty!3186 () Bool)

(declare-fun mapDefault!3186 () ValueCell!893)

(assert (=> mapNonEmpty!3183 (= condMapEmpty!3186 (= mapRest!3183 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3186)))))

(declare-fun e!48903 () Bool)

(declare-fun mapRes!3186 () Bool)

(assert (=> mapNonEmpty!3183 (= tp!8547 (and e!48903 mapRes!3186))))

(declare-fun mapIsEmpty!3186 () Bool)

(assert (=> mapIsEmpty!3186 mapRes!3186))

(declare-fun b!74865 () Bool)

(declare-fun e!48902 () Bool)

(assert (=> b!74865 (= e!48902 tp_is_empty!2473)))

(declare-fun mapNonEmpty!3186 () Bool)

(declare-fun tp!8550 () Bool)

(assert (=> mapNonEmpty!3186 (= mapRes!3186 (and tp!8550 e!48902))))

(declare-fun mapRest!3186 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapValue!3186 () ValueCell!893)

(declare-fun mapKey!3186 () (_ BitVec 32))

(assert (=> mapNonEmpty!3186 (= mapRest!3183 (store mapRest!3186 mapKey!3186 mapValue!3186))))

(declare-fun b!74866 () Bool)

(assert (=> b!74866 (= e!48903 tp_is_empty!2473)))

(assert (= (and mapNonEmpty!3183 condMapEmpty!3186) mapIsEmpty!3186))

(assert (= (and mapNonEmpty!3183 (not condMapEmpty!3186)) mapNonEmpty!3186))

(assert (= (and mapNonEmpty!3186 ((_ is ValueCellFull!893) mapValue!3186)) b!74865))

(assert (= (and mapNonEmpty!3183 ((_ is ValueCellFull!893) mapDefault!3186)) b!74866))

(declare-fun m!74475 () Bool)

(assert (=> mapNonEmpty!3186 m!74475))

(declare-fun b_lambda!3349 () Bool)

(assert (= b_lambda!3345 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3349)))

(declare-fun b_lambda!3351 () Bool)

(assert (= b_lambda!3335 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3351)))

(declare-fun b_lambda!3353 () Bool)

(assert (= b_lambda!3339 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3353)))

(declare-fun b_lambda!3355 () Bool)

(assert (= b_lambda!3329 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3355)))

(declare-fun b_lambda!3357 () Bool)

(assert (= b_lambda!3319 (or (and b!72793 b_free!2113) (and b!72792 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))) b_lambda!3357)))

(declare-fun b_lambda!3359 () Bool)

(assert (= b_lambda!3337 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3359)))

(declare-fun b_lambda!3361 () Bool)

(assert (= b_lambda!3341 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3361)))

(declare-fun b_lambda!3363 () Bool)

(assert (= b_lambda!3323 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3363)))

(declare-fun b_lambda!3365 () Bool)

(assert (= b_lambda!3325 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3365)))

(declare-fun b_lambda!3367 () Bool)

(assert (= b_lambda!3343 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3367)))

(declare-fun b_lambda!3369 () Bool)

(assert (= b_lambda!3321 (or (and b!72793 b_free!2113) (and b!72792 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))))) b_lambda!3369)))

(declare-fun b_lambda!3371 () Bool)

(assert (= b_lambda!3333 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3371)))

(declare-fun b_lambda!3373 () Bool)

(assert (= b_lambda!3347 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3373)))

(declare-fun b_lambda!3375 () Bool)

(assert (= b_lambda!3331 (or (and b!72793 b_free!2113 (= (defaultEntry!2212 (v!2532 (underlying!262 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72792 b_free!2115) b_lambda!3375)))

(check-sat (not b!74668) (not b!74728) (not b!74374) (not d!17633) (not b!74428) (not d!17145) (not b!74173) (not b!74543) (not b!73923) (not d!17265) (not bm!6535) (not bm!6548) (not b!74086) (not d!17339) (not b!74298) (not d!17829) (not d!17397) (not d!17315) (not d!17273) (not d!17253) (not d!17437) (not b!74582) (not d!17643) (not b!74133) (not d!17103) (not d!17107) (not b!74553) (not bm!6503) (not b!74654) (not b!74098) (not bm!6555) (not b!74145) (not b!74141) (not b_lambda!3317) (not b!74539) (not b!73980) (not b!74859) (not bm!6582) (not b!74242) (not b!73745) (not b!73729) (not b!74043) (not b!74114) (not d!17163) (not b!74368) (not d!17495) (not d!17469) (not b!74522) (not b!74369) (not b!73932) (not d!17155) (not b!73972) (not d!17517) (not b!74122) (not d!17749) (not b!74540) (not d!17525) (not d!17855) (not b!74481) (not b!73767) (not b!74593) (not b!74855) (not b!73797) (not bm!6586) (not b!74074) (not d!17389) (not b!74061) (not b!73768) (not b!74426) (not b!74202) (not b!74800) (not b_lambda!3327) (not d!17125) (not b!74336) (not bm!6553) (not d!17785) (not b!74592) (not b!74575) (not b!74219) (not d!17431) (not b!74387) (not b!74849) (not d!17235) (not b!73804) (not b!74861) (not bm!6600) (not b!74060) (not b!74410) (not b_lambda!3375) (not d!17673) (not b!73756) (not b!74077) (not bm!6614) (not b!74138) (not d!17489) (not b!74816) (not b!74600) (not d!17337) (not b!74176) (not d!17213) (not bm!6605) (not b!74617) (not b!73833) (not d!17763) (not b!74606) (not b!74391) (not b!74316) (not d!17701) (not b!74022) (not b!74554) (not b!74263) (not d!17733) (not d!17159) (not b!74366) (not bm!6500) (not b!74083) (not b!74782) (not b!74143) (not b_lambda!3313) (not b!73742) (not d!17419) (not b_lambda!3285) (not b!73866) (not b!74438) (not d!17263) (not d!17671) (not b!74432) (not b!74587) (not b!73747) (not b_lambda!3355) (not d!17647) (not b!74200) (not b!73869) (not bm!6606) (not b!74404) (not d!17533) (not d!17687) (not b!74352) (not b!73752) (not d!17499) (not b!73897) (not b!74355) (not b!74218) (not d!17583) (not d!17853) (not d!17837) (not b!74718) (not d!17559) (not b!74205) (not d!17595) (not d!17405) (not b!74178) (not d!17281) (not d!17121) (not d!17093) (not d!17183) (not d!17805) (not b!74559) (not b!74638) (not d!17601) (not bm!6495) (not d!17407) (not d!17801) (not b!74529) (not bm!6598) (not b!73895) (not b!74324) (not b!74518) (not d!17739) (not b!74325) (not b!74830) (not b!74514) (not b!74362) (not b!74207) (not b!74781) (not d!17099) (not b!74328) (not bm!6543) (not b!74040) (not b_lambda!3357) (not b!74227) b_and!4581 (not b!73874) (not d!17793) (not b!74159) (not b!73732) (not b!73734) (not d!17383) (not b!74583) (not b!74215) (not b!73761) (not d!17655) (not b!74677) (not d!17409) (not b!74808) (not d!17185) (not b!74306) (not b!74791) (not b!73834) (not b!74082) (not b!74658) (not b!74716) (not bm!6554) (not b!73860) (not b_lambda!3361) (not b!74721) (not b!74287) (not b!74424) (not b!74772) (not b!74572) (not d!17133) (not b!74479) (not d!17821) (not d!17097) (not b!74130) (not d!17501) (not bm!6584) (not d!17395) (not d!17109) (not d!17301) (not b!74676) (not b!74636) (not b!74774) (not d!17295) (not b!74474) (not b!74036) (not d!17557) (not b!74605) (not b!74590) (not b!74852) (not b!74769) (not b!74664) (not d!17427) (not d!17457) (not b!74643) (not d!17589) (not b!74824) (not b!74389) (not b!74737) (not bm!6542) (not b!73802) (not b!74693) (not d!17421) (not b!74333) (not b!74062) (not d!17191) (not b!74819) (not d!17161) (not b!74550) (not b!74064) (not b!74088) (not d!17833) (not d!17173) (not b!74211) (not b!74026) (not b!73748) (not d!17423) (not d!17473) (not b!73763) (not b!74270) (not b!74656) (not b_lambda!3349) (not b!74305) (not bm!6615) (not b!74441) (not b!74838) (not b!74171) (not bm!6515) (not b!73941) (not b!73781) (not b!73967) (not b!74631) (not b!74213) (not b!73919) (not b!73813) (not d!17433) (not d!17725) (not d!17127) (not b!74613) (not b!74150) (not d!17305) (not b!74703) (not bm!6620) (not b!73849) (not b!74319) (not b!74734) (not b!74208) (not b!74444) (not b_lambda!3297) (not d!17689) (not b!74645) (not bm!6540) (not d!17769) (not b!74102) (not b!74842) (not b!74647) (not d!17445) (not d!17483) (not b!74680) (not d!17137) (not b!74183) (not d!17813) (not b!74458) (not b!74225) (not d!17209) (not b!74222) (not b!74615) (not b!74118) (not b!73795) (not bm!6537) (not b!74644) (not b!74156) (not b!73715) (not b!74415) (not d!17251) (not b!74504) (not b!74494) (not b!74265) (not b!73842) (not b!73721) (not b!74340) (not b!74282) (not b!73850) (not d!17485) (not bm!6529) (not b_lambda!3371) (not b!74220) (not b!74185) (not d!17425) (not b!74732) (not bm!6562) (not d!17857) (not b!73904) (not b!74281) (not d!17101) (not b!74611) (not b!74462) (not d!17113) (not d!17117) (not b!74302) (not b!73746) (not d!17579) (not d!17415) (not d!17493) (not b!73931) (not d!17497) (not d!17683) (not d!17277) (not bm!6528) (not b!74589) tp_is_empty!2473 (not b!73918) (not d!17239) (not b!74385) (not d!17547) (not b!73737) (not d!17219) (not b!73741) (not bm!6550) (not b!74698) (not d!17199) (not b!74414) (not d!17429) (not d!17629) (not d!17341) (not b!73821) (not bm!6566) (not b!74856) (not b!74666) (not b!74715) (not d!17795) (not b!74469) (not b!74794) (not b!73785) (not bm!6595) (not b!74805) (not b_lambda!3367) (not b!74229) (not b!73760) (not b!74286) (not b!74301) (not d!17585) (not b!74484) (not b!74092) (not b!73840) (not b!74511) (not d!17843) (not b!73983) (not b!74486) (not b!74660) (not b!73803) (not b!74747) (not b!73925) (not d!17845) (not b!74765) (not b!74584) (not d!17543) (not d!17771) (not b!74048) (not b!73735) (not b!74471) (not b!74571) (not b!73990) (not b!73765) (not b!74752) (not b!74435) (not b_lambda!3359) (not bm!6509) (not b!74792) (not b!74753) (not b!73827) (not b!74448) (not d!17819) (not b!73817) (not b!74608) (not d!17607) (not b!73922) (not b!74801) (not b!74291) (not b!73844) (not b!74420) (not b!74235) (not b!74497) (not b!73910) (not b!74534) (not d!17615) (not b!74081) (not d!17549) (not d!17215) (not b!74346) (not b!74029) (not b!73728) (not bm!6577) (not b_lambda!3373) (not b!74395) (not b!73966) (not b!74495) (not d!17505) (not d!17591) (not d!17809) (not b!73930) (not d!17711) (not bm!6516) (not b!73750) (not b!74111) (not d!17467) (not b!74100) (not b!73788) (not bm!6618) (not d!17703) (not b!74418) (not b!73754) (not b!74491) (not b!74812) (not b!74641) (not bm!6564) (not bm!6538) (not d!17791) (not b!74393) (not bm!6616) (not b!74741) (not d!17141) (not b!74351) (not d!17623) (not b!74331) (not b!74421) (not d!17783) (not bm!6505) (not b!73901) (not b!74253) (not b!74376) (not d!17681) (not b!73871) (not bm!6568) (not b_next!2113) (not b!74847) (not b!74371) (not b!73739) (not b!74493) (not b_lambda!3311) (not b!74450) (not b!74516) (not d!17575) (not b!74089) (not b!74843) (not b!73974) (not d!17679) (not d!17847) (not bm!6596) (not b!73819) (not d!17539) (not b!74090) (not d!17443) (not bm!6521) (not b!74261) (not b!73820) (not b!74768) (not b!74459) (not b!74771) (not bm!6497) (not b!73971) (not b!74373) (not b!74712) (not b!74041) (not d!17851) (not b!74412) (not b!74614) (not d!17799) (not b!74394) (not b!74828) (not b!74564) (not b!74699) (not d!17329) (not b!74665) (not d!17815) (not bm!6527) (not b!74180) (not b!73890) (not b_lambda!3295) (not b!74850) (not b!74323) (not b!74532) (not bm!6608) (not b!74527) (not d!17393) (not d!17511) (not b!73730) (not b!74624) (not b!73863) (not d!17545) (not d!17287) (not b_lambda!3365) (not d!17753) (not b!73899) (not b_lambda!3293) (not b!74153) (not b!74112) (not b!74826) (not b!74140) (not bm!6590) (not d!17693) (not b!74246) (not bm!6580) (not d!17641) (not d!17111) (not bm!6574) (not b!74711) (not b!74691) (not d!17569) (not b!74053) (not b!73806) (not bm!6498) (not b!74821) (not b!74674) (not d!17357) (not d!17759) (not d!17385) (not b!73969) (not d!17293) (not b!74019) (not b!74512) (not bm!6552) (not b!74105) (not b!74147) (not b!74254) (not b!74284) (not b!74730) (not b!74408) (not d!17241) (not b!74525) (not b!73719) (not b!74121) (not b!74552) (not bm!6610) (not d!17541) (not b!74667) (not b!74249) (not b!74629) (not b!74557) (not b!74311) (not b!74719) (not b!73824) (not b!74569) (not b!74439) (not d!17839) (not d!17625) (not d!17521) (not d!17417) (not b!74134) (not d!17115) (not d!17707) (not b!73770) (not b!74294) (not d!17637) (not bm!6594) (not b!74519) (not b!73851) (not b!74125) (not b!74478) (not d!17745) (not d!17669) (not b!74596) (not d!17135) (not d!17573) (not b!74343) (not b!73847) (not b!74162) (not b!74818) (not b!74488) (not b!74241) (not b!73837) (not d!17849) (not bm!6588) (not b!74710) (not b!74372) (not mapNonEmpty!3186) (not d!17403) (not b!74603) (not b!74827) (not b!74370) (not d!17659) (not b!74056) (not b!74013) (not b!74070) (not b!73911) (not bm!6544) (not b!74187) (not d!17413) (not d!17257) (not b!74760) (not d!17203) (not d!17349) (not mapNonEmpty!3185) (not b!73913) (not d!17507) (not b!74531) (not b!74069) (not b!74858) (not b!74109) (not d!17455) (not b!74131) (not b!74476) (not d!17343) (not b!74330) (not d!17207) (not b!74795) (not b!74506) (not b!73717) (not b_lambda!3315) (not b!74766) (not b!74541) (not d!17123) (not b!74430) (not b!74537) (not d!17639) (not d!17259) (not b!73710) (not b!74814) (not d!17441) (not b!74038) (not b!74203) (not d!17817) (not d!17167) (not d!17129) (not b!74312) (not d!17645) (not b!74107) (not b!74128) (not b!74296) (not b!74523) (not b!74349) (not b!74049) (not b!73979) (not b!74197) (not d!17307) (not d!17509) (not b!74854) (not b!74206) (not b!74562) (not b!74840) (not d!17299) (not d!17651) (not d!17321) (not b!74460) (not b!74116) (not b!74398) (not d!17205) (not b!74216) (not b!74236) (not b!74104) (not b_lambda!3309) (not b!74342) (not b!74671) (not d!17841) (not b!73981) (not b!74682) (not bm!6571) (not b!73773) (not d!17831) (not b_lambda!3369) (not b!74706) (not b!73744) (not b!73777) (not b!73861) (not b!74688) (not bm!6530) (not b!74401) b_and!4583 (not b!74344) (not b!73712) (not b!74446) (not b!74381) (not d!17131) (not d!17411) (not b!74327) (not d!17713) (not b_lambda!3353) (not d!17735) (not b!74268) (not b!74164) (not b!74136) (not d!17755) (not bm!6534) (not b!74024) (not d!17261) (not b!74027) (not d!17275) (not b!74232) (not b!74457) (not b!73794) (not b!73757) (not d!17439) (not d!17399) (not d!17487) (not bm!6536) (not b!74787) (not b!74108) (not b!73825) (not b!74085) (not b!74837) (not d!17515) (not b!74383) (not b!73977) (not b!74633) (not b!74226) (not bm!6551) (not d!17291) (not d!17503) (not b!74558) (not b!74757) (not b!73934) (not d!17661) (not bm!6502) (not d!17803) (not d!17377) (not b!73753) (not b!74556) (not bm!6507) (not bm!6518) (not d!17247) (not d!17835) (not b!74573) (not b!74627) (not b!74196) (not d!17765) (not d!17737) (not b!73764) (not bm!6523) (not b!74566) (not bm!6561) (not b!74764) (not b!74789) (not b!74678) (not b!74784) (not d!17375) (not d!17721) (not b!74233) (not b!74255) (not d!17451) (not d!17355) (not b_lambda!3351) (not d!17119) (not b!73830) (not d!17475) (not b!74860) (not d!17729) (not b!74189) (not d!17743) (not b!74167) (not b!73800) (not d!17599) (not d!17309) (not b!74223) (not d!17297) (not b!74662) (not b!74813) (not b!73853) (not d!17269) (not b!74364) (not d!17303) (not d!17139) (not b!74509) (not b!73718) (not b!74447) (not b!74186) (not bm!6559) (not b!73908) (not bm!6604) (not d!17787) (not d!17807) (not d!17731) (not b!73928) (not b_lambda!3363) (not b!73916) (not d!17481) (not d!17577) (not d!17463) (not b!73815) (not d!17171) (not bm!6560) (not bm!6549) (not b!74745) (not b!74353) (not d!17447) (not b_next!2115) (not b!73738) (not b!74669))
(check-sat b_and!4581 b_and!4583 (not b_next!2113) (not b_next!2115))
