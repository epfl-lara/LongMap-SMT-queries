; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!9756 () Bool)

(assert start!9756)

(declare-fun b!72681 () Bool)

(declare-fun b_free!2113 () Bool)

(declare-fun b_next!2113 () Bool)

(assert (=> b!72681 (= b_free!2113 (not b_next!2113))))

(declare-fun tp!8518 () Bool)

(declare-fun b_and!4449 () Bool)

(assert (=> b!72681 (= tp!8518 b_and!4449)))

(declare-fun b!72667 () Bool)

(declare-fun b_free!2115 () Bool)

(declare-fun b_next!2115 () Bool)

(assert (=> b!72667 (= b_free!2115 (not b_next!2115))))

(declare-fun tp!8517 () Bool)

(declare-fun b_and!4451 () Bool)

(assert (=> b!72667 (= tp!8517 b_and!4451)))

(declare-fun mapIsEmpty!3165 () Bool)

(declare-fun mapRes!3166 () Bool)

(assert (=> mapIsEmpty!3165 mapRes!3166))

(declare-fun b!72662 () Bool)

(declare-fun e!47543 () Bool)

(declare-fun e!47533 () Bool)

(assert (=> b!72662 (= e!47543 e!47533)))

(declare-fun res!38612 () Bool)

(assert (=> b!72662 (=> (not res!38612) (not e!47533))))

(declare-datatypes ((V!2945 0))(
  ( (V!2946 (val!1281 Int)) )
))
(declare-datatypes ((tuple2!2120 0))(
  ( (tuple2!2121 (_1!1071 (_ BitVec 64)) (_2!1071 V!2945)) )
))
(declare-datatypes ((List!1483 0))(
  ( (Nil!1480) (Cons!1479 (h!2066 tuple2!2120) (t!5031 List!1483)) )
))
(declare-datatypes ((ListLongMap!1403 0))(
  ( (ListLongMap!1404 (toList!717 List!1483)) )
))
(declare-fun lt!32378 () ListLongMap!1403)

(declare-fun lt!32375 () ListLongMap!1403)

(assert (=> b!72662 (= res!38612 (= lt!32378 lt!32375))))

(declare-datatypes ((array!3871 0))(
  ( (array!3872 (arr!1846 (Array (_ BitVec 32) (_ BitVec 64))) (size!2085 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!893 0))(
  ( (ValueCellFull!893 (v!2522 V!2945)) (EmptyCell!893) )
))
(declare-datatypes ((array!3873 0))(
  ( (array!3874 (arr!1847 (Array (_ BitVec 32) ValueCell!893)) (size!2086 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!694 0))(
  ( (LongMapFixedSize!695 (defaultEntry!2212 Int) (mask!6178 (_ BitVec 32)) (extraKeys!2071 (_ BitVec 32)) (zeroValue!2114 V!2945) (minValue!2114 V!2945) (_size!396 (_ BitVec 32)) (_keys!3863 array!3871) (_values!2195 array!3873) (_vacant!396 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!694)

(declare-fun map!1150 (LongMapFixedSize!694) ListLongMap!1403)

(assert (=> b!72662 (= lt!32375 (map!1150 newMap!16))))

(declare-datatypes ((Cell!490 0))(
  ( (Cell!491 (v!2523 LongMapFixedSize!694)) )
))
(declare-datatypes ((LongMap!490 0))(
  ( (LongMap!491 (underlying!256 Cell!490)) )
))
(declare-fun thiss!992 () LongMap!490)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun getCurrentListMap!410 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) Int) ListLongMap!1403)

(assert (=> b!72662 (= lt!32378 (getCurrentListMap!410 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun mapIsEmpty!3166 () Bool)

(declare-fun mapRes!3165 () Bool)

(assert (=> mapIsEmpty!3166 mapRes!3165))

(declare-fun mapNonEmpty!3165 () Bool)

(declare-fun tp!8515 () Bool)

(declare-fun e!47545 () Bool)

(assert (=> mapNonEmpty!3165 (= mapRes!3166 (and tp!8515 e!47545))))

(declare-fun mapRest!3165 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapKey!3165 () (_ BitVec 32))

(declare-fun mapValue!3165 () ValueCell!893)

(assert (=> mapNonEmpty!3165 (= (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (store mapRest!3165 mapKey!3165 mapValue!3165))))

(declare-fun b!72663 () Bool)

(declare-fun res!38609 () Bool)

(assert (=> b!72663 (=> (not res!38609) (not e!47543))))

(assert (=> b!72663 (= res!38609 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6178 newMap!16)) (_size!396 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun b!72664 () Bool)

(declare-fun e!47546 () Bool)

(assert (=> b!72664 (= e!47546 (or (not (= (size!2086 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6178 (v!2523 (underlying!256 thiss!992)))))) (not (= (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (size!2086 (_values!2195 (v!2523 (underlying!256 thiss!992)))))) (bvslt (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!72665 () Bool)

(declare-fun res!38613 () Bool)

(assert (=> b!72665 (=> (not res!38613) (not e!47543))))

(assert (=> b!72665 (= res!38613 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!72666 () Bool)

(declare-fun res!38615 () Bool)

(assert (=> b!72666 (=> (not res!38615) (not e!47543))))

(declare-fun valid!300 (LongMapFixedSize!694) Bool)

(assert (=> b!72666 (= res!38615 (valid!300 newMap!16))))

(declare-fun e!47548 () Bool)

(declare-fun e!47536 () Bool)

(declare-fun tp_is_empty!2473 () Bool)

(declare-fun array_inv!1153 (array!3871) Bool)

(declare-fun array_inv!1154 (array!3873) Bool)

(assert (=> b!72667 (= e!47548 (and tp!8517 tp_is_empty!2473 (array_inv!1153 (_keys!3863 newMap!16)) (array_inv!1154 (_values!2195 newMap!16)) e!47536))))

(declare-fun b!72668 () Bool)

(declare-fun e!47547 () Bool)

(assert (=> b!72668 (= e!47536 (and e!47547 mapRes!3165))))

(declare-fun condMapEmpty!3166 () Bool)

(declare-fun mapDefault!3165 () ValueCell!893)

(assert (=> b!72668 (= condMapEmpty!3166 (= (arr!1847 (_values!2195 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3165)))))

(declare-fun b!72669 () Bool)

(declare-datatypes ((Unit!2066 0))(
  ( (Unit!2067) )
))
(declare-fun e!47541 () Unit!2066)

(declare-fun Unit!2068 () Unit!2066)

(assert (=> b!72669 (= e!47541 Unit!2068)))

(declare-fun b!72670 () Bool)

(declare-fun e!47538 () Bool)

(declare-fun e!47531 () Bool)

(assert (=> b!72670 (= e!47538 e!47531)))

(declare-fun b!72671 () Bool)

(declare-fun Unit!2069 () Unit!2066)

(assert (=> b!72671 (= e!47541 Unit!2069)))

(declare-fun lt!32374 () Unit!2066)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!48 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) (_ BitVec 32) Int) Unit!2066)

(assert (=> b!72671 (= lt!32374 (lemmaListMapContainsThenArrayContainsFrom!48 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!3871 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!72671 (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!32384 () Unit!2066)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!3871 (_ BitVec 32) (_ BitVec 32)) Unit!2066)

(assert (=> b!72671 (= lt!32384 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1484 0))(
  ( (Nil!1481) (Cons!1480 (h!2067 (_ BitVec 64)) (t!5032 List!1484)) )
))
(declare-fun arrayNoDuplicates!0 (array!3871 (_ BitVec 32) List!1484) Bool)

(assert (=> b!72671 (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) from!355 Nil!1481)))

(declare-fun lt!32385 () Unit!2066)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!3871 (_ BitVec 32) (_ BitVec 64) List!1484) Unit!2066)

(assert (=> b!72671 (= lt!32385 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481)))))

(assert (=> b!72671 false))

(declare-fun b!72673 () Bool)

(declare-fun e!47537 () Bool)

(assert (=> b!72673 (= e!47533 e!47537)))

(declare-fun res!38614 () Bool)

(assert (=> b!72673 (=> (not res!38614) (not e!47537))))

(assert (=> b!72673 (= res!38614 (and (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!32380 () V!2945)

(declare-fun get!1142 (ValueCell!893 V!2945) V!2945)

(declare-fun dynLambda!325 (Int (_ BitVec 64)) V!2945)

(assert (=> b!72673 (= lt!32380 (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72674 () Bool)

(assert (=> b!72674 (= e!47545 tp_is_empty!2473)))

(declare-fun b!72675 () Bool)

(declare-fun e!47534 () Bool)

(assert (=> b!72675 (= e!47534 tp_is_empty!2473)))

(declare-fun b!72676 () Bool)

(declare-fun e!47544 () Bool)

(assert (=> b!72676 (= e!47544 (not e!47546))))

(declare-fun res!38610 () Bool)

(assert (=> b!72676 (=> res!38610 e!47546)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!72676 (= res!38610 (not (validMask!0 (mask!6178 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun lt!32377 () ListLongMap!1403)

(declare-fun lt!32383 () tuple2!2120)

(declare-fun lt!32376 () tuple2!2120)

(declare-fun +!93 (ListLongMap!1403 tuple2!2120) ListLongMap!1403)

(assert (=> b!72676 (= (+!93 (+!93 lt!32377 lt!32383) lt!32376) (+!93 (+!93 lt!32377 lt!32376) lt!32383))))

(assert (=> b!72676 (= lt!32376 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))

(assert (=> b!72676 (= lt!32383 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))

(declare-fun lt!32382 () Unit!2066)

(declare-fun addCommutativeForDiffKeys!12 (ListLongMap!1403 (_ BitVec 64) V!2945 (_ BitVec 64) V!2945) Unit!2066)

(assert (=> b!72676 (= lt!32382 (addCommutativeForDiffKeys!12 lt!32377 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!57 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) Int) ListLongMap!1403)

(assert (=> b!72676 (= lt!32377 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun b!72677 () Bool)

(declare-fun e!47540 () Bool)

(assert (=> b!72677 (= e!47540 tp_is_empty!2473)))

(declare-fun b!72672 () Bool)

(assert (=> b!72672 (= e!47537 e!47544)))

(declare-fun res!38611 () Bool)

(assert (=> b!72672 (=> (not res!38611) (not e!47544))))

(declare-datatypes ((tuple2!2122 0))(
  ( (tuple2!2123 (_1!1072 Bool) (_2!1072 LongMapFixedSize!694)) )
))
(declare-fun lt!32381 () tuple2!2122)

(assert (=> b!72672 (= res!38611 (and (_1!1072 lt!32381) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!32379 () Unit!2066)

(assert (=> b!72672 (= lt!32379 e!47541)))

(declare-fun c!10745 () Bool)

(declare-fun contains!719 (ListLongMap!1403 (_ BitVec 64)) Bool)

(assert (=> b!72672 (= c!10745 (contains!719 lt!32375 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun update!103 (LongMapFixedSize!694 (_ BitVec 64) V!2945) tuple2!2122)

(assert (=> b!72672 (= lt!32381 (update!103 newMap!16 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))

(declare-fun res!38608 () Bool)

(assert (=> start!9756 (=> (not res!38608) (not e!47543))))

(declare-fun valid!301 (LongMap!490) Bool)

(assert (=> start!9756 (= res!38608 (valid!301 thiss!992))))

(assert (=> start!9756 e!47543))

(assert (=> start!9756 e!47538))

(assert (=> start!9756 true))

(assert (=> start!9756 e!47548))

(declare-fun b!72678 () Bool)

(declare-fun e!47532 () Bool)

(assert (=> b!72678 (= e!47531 e!47532)))

(declare-fun b!72679 () Bool)

(assert (=> b!72679 (= e!47547 tp_is_empty!2473)))

(declare-fun b!72680 () Bool)

(declare-fun e!47539 () Bool)

(assert (=> b!72680 (= e!47539 (and e!47540 mapRes!3166))))

(declare-fun condMapEmpty!3165 () Bool)

(declare-fun mapDefault!3166 () ValueCell!893)

(assert (=> b!72680 (= condMapEmpty!3165 (= (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3166)))))

(declare-fun mapNonEmpty!3166 () Bool)

(declare-fun tp!8516 () Bool)

(assert (=> mapNonEmpty!3166 (= mapRes!3165 (and tp!8516 e!47534))))

(declare-fun mapKey!3166 () (_ BitVec 32))

(declare-fun mapRest!3166 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapValue!3166 () ValueCell!893)

(assert (=> mapNonEmpty!3166 (= (arr!1847 (_values!2195 newMap!16)) (store mapRest!3166 mapKey!3166 mapValue!3166))))

(assert (=> b!72681 (= e!47532 (and tp!8518 tp_is_empty!2473 (array_inv!1153 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (array_inv!1154 (_values!2195 (v!2523 (underlying!256 thiss!992)))) e!47539))))

(assert (= (and start!9756 res!38608) b!72665))

(assert (= (and b!72665 res!38613) b!72666))

(assert (= (and b!72666 res!38615) b!72663))

(assert (= (and b!72663 res!38609) b!72662))

(assert (= (and b!72662 res!38612) b!72673))

(assert (= (and b!72673 res!38614) b!72672))

(assert (= (and b!72672 c!10745) b!72671))

(assert (= (and b!72672 (not c!10745)) b!72669))

(assert (= (and b!72672 res!38611) b!72676))

(assert (= (and b!72676 (not res!38610)) b!72664))

(assert (= (and b!72680 condMapEmpty!3165) mapIsEmpty!3165))

(assert (= (and b!72680 (not condMapEmpty!3165)) mapNonEmpty!3165))

(get-info :version)

(assert (= (and mapNonEmpty!3165 ((_ is ValueCellFull!893) mapValue!3165)) b!72674))

(assert (= (and b!72680 ((_ is ValueCellFull!893) mapDefault!3166)) b!72677))

(assert (= b!72681 b!72680))

(assert (= b!72678 b!72681))

(assert (= b!72670 b!72678))

(assert (= start!9756 b!72670))

(assert (= (and b!72668 condMapEmpty!3166) mapIsEmpty!3166))

(assert (= (and b!72668 (not condMapEmpty!3166)) mapNonEmpty!3166))

(assert (= (and mapNonEmpty!3166 ((_ is ValueCellFull!893) mapValue!3166)) b!72675))

(assert (= (and b!72668 ((_ is ValueCellFull!893) mapDefault!3165)) b!72679))

(assert (= b!72667 b!72668))

(assert (= start!9756 b!72667))

(declare-fun b_lambda!3259 () Bool)

(assert (=> (not b_lambda!3259) (not b!72673)))

(declare-fun t!5028 () Bool)

(declare-fun tb!1521 () Bool)

(assert (=> (and b!72681 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))) t!5028) tb!1521))

(declare-fun result!2669 () Bool)

(assert (=> tb!1521 (= result!2669 tp_is_empty!2473)))

(assert (=> b!72673 t!5028))

(declare-fun b_and!4453 () Bool)

(assert (= b_and!4449 (and (=> t!5028 result!2669) b_and!4453)))

(declare-fun t!5030 () Bool)

(declare-fun tb!1523 () Bool)

(assert (=> (and b!72667 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))) t!5030) tb!1523))

(declare-fun result!2673 () Bool)

(assert (= result!2673 result!2669))

(assert (=> b!72673 t!5030))

(declare-fun b_and!4455 () Bool)

(assert (= b_and!4451 (and (=> t!5030 result!2673) b_and!4455)))

(declare-fun m!70769 () Bool)

(assert (=> b!72666 m!70769))

(declare-fun m!70771 () Bool)

(assert (=> start!9756 m!70771))

(declare-fun m!70773 () Bool)

(assert (=> mapNonEmpty!3166 m!70773))

(declare-fun m!70775 () Bool)

(assert (=> b!72681 m!70775))

(declare-fun m!70777 () Bool)

(assert (=> b!72681 m!70777))

(declare-fun m!70779 () Bool)

(assert (=> b!72676 m!70779))

(declare-fun m!70781 () Bool)

(assert (=> b!72676 m!70781))

(assert (=> b!72676 m!70781))

(declare-fun m!70783 () Bool)

(assert (=> b!72676 m!70783))

(declare-fun m!70785 () Bool)

(assert (=> b!72676 m!70785))

(declare-fun m!70787 () Bool)

(assert (=> b!72676 m!70787))

(declare-fun m!70789 () Bool)

(assert (=> b!72676 m!70789))

(declare-fun m!70791 () Bool)

(assert (=> b!72676 m!70791))

(assert (=> b!72676 m!70785))

(assert (=> b!72676 m!70791))

(declare-fun m!70793 () Bool)

(assert (=> b!72676 m!70793))

(declare-fun m!70795 () Bool)

(assert (=> b!72662 m!70795))

(declare-fun m!70797 () Bool)

(assert (=> b!72662 m!70797))

(declare-fun m!70799 () Bool)

(assert (=> b!72667 m!70799))

(declare-fun m!70801 () Bool)

(assert (=> b!72667 m!70801))

(assert (=> b!72672 m!70791))

(assert (=> b!72672 m!70791))

(declare-fun m!70803 () Bool)

(assert (=> b!72672 m!70803))

(assert (=> b!72672 m!70791))

(declare-fun m!70805 () Bool)

(assert (=> b!72672 m!70805))

(assert (=> b!72673 m!70791))

(declare-fun m!70807 () Bool)

(assert (=> b!72673 m!70807))

(declare-fun m!70809 () Bool)

(assert (=> b!72673 m!70809))

(assert (=> b!72673 m!70807))

(assert (=> b!72673 m!70809))

(declare-fun m!70811 () Bool)

(assert (=> b!72673 m!70811))

(declare-fun m!70813 () Bool)

(assert (=> b!72671 m!70813))

(declare-fun m!70815 () Bool)

(assert (=> b!72671 m!70815))

(assert (=> b!72671 m!70791))

(declare-fun m!70817 () Bool)

(assert (=> b!72671 m!70817))

(assert (=> b!72671 m!70791))

(assert (=> b!72671 m!70791))

(declare-fun m!70819 () Bool)

(assert (=> b!72671 m!70819))

(assert (=> b!72671 m!70791))

(declare-fun m!70821 () Bool)

(assert (=> b!72671 m!70821))

(declare-fun m!70823 () Bool)

(assert (=> mapNonEmpty!3165 m!70823))

(check-sat (not b!72676) (not b!72672) (not start!9756) (not b!72673) b_and!4455 tp_is_empty!2473 (not b!72671) (not b_next!2115) (not b!72662) (not b!72681) (not b!72667) (not mapNonEmpty!3165) (not b!72666) (not b_lambda!3259) (not mapNonEmpty!3166) b_and!4453 (not b_next!2113))
(check-sat b_and!4453 b_and!4455 (not b_next!2113) (not b_next!2115))
(get-model)

(declare-fun b_lambda!3265 () Bool)

(assert (= b_lambda!3259 (or (and b!72681 b_free!2113) (and b!72667 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))) b_lambda!3265)))

(check-sat (not b!72676) (not b!72672) (not start!9756) (not b!72673) b_and!4455 tp_is_empty!2473 (not b!72671) (not b!72666) (not b_next!2115) (not b_lambda!3265) (not b!72662) (not b!72681) (not b!72667) (not mapNonEmpty!3165) (not mapNonEmpty!3166) b_and!4453 (not b_next!2113))
(check-sat b_and!4453 b_and!4455 (not b_next!2113) (not b_next!2115))
(get-model)

(declare-fun d!16737 () Bool)

(assert (=> d!16737 (not (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32460 () Unit!2066)

(declare-fun choose!68 (array!3871 (_ BitVec 32) (_ BitVec 64) List!1484) Unit!2066)

(assert (=> d!16737 (= lt!32460 (choose!68 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481)))))

(assert (=> d!16737 (bvslt (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!16737 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481)) lt!32460)))

(declare-fun bs!3129 () Bool)

(assert (= bs!3129 d!16737))

(assert (=> bs!3129 m!70791))

(assert (=> bs!3129 m!70819))

(assert (=> bs!3129 m!70791))

(declare-fun m!70937 () Bool)

(assert (=> bs!3129 m!70937))

(assert (=> b!72671 d!16737))

(declare-fun d!16739 () Bool)

(assert (=> d!16739 (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) from!355 Nil!1481)))

(declare-fun lt!32463 () Unit!2066)

(declare-fun choose!39 (array!3871 (_ BitVec 32) (_ BitVec 32)) Unit!2066)

(assert (=> d!16739 (= lt!32463 (choose!39 (_keys!3863 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!16739 (bvslt (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!16739 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000 from!355) lt!32463)))

(declare-fun bs!3130 () Bool)

(assert (= bs!3130 d!16739))

(assert (=> bs!3130 m!70815))

(declare-fun m!70939 () Bool)

(assert (=> bs!3130 m!70939))

(assert (=> b!72671 d!16739))

(declare-fun d!16741 () Bool)

(declare-fun res!38668 () Bool)

(declare-fun e!47661 () Bool)

(assert (=> d!16741 (=> res!38668 e!47661)))

(assert (=> d!16741 (= res!38668 (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!16741 (= (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!47661)))

(declare-fun b!72812 () Bool)

(declare-fun e!47662 () Bool)

(assert (=> b!72812 (= e!47661 e!47662)))

(declare-fun res!38669 () Bool)

(assert (=> b!72812 (=> (not res!38669) (not e!47662))))

(assert (=> b!72812 (= res!38669 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!72813 () Bool)

(assert (=> b!72813 (= e!47662 (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!16741 (not res!38668)) b!72812))

(assert (= (and b!72812 res!38669) b!72813))

(declare-fun m!70941 () Bool)

(assert (=> d!16741 m!70941))

(assert (=> b!72813 m!70791))

(declare-fun m!70943 () Bool)

(assert (=> b!72813 m!70943))

(assert (=> b!72671 d!16741))

(declare-fun d!16743 () Bool)

(declare-fun e!47665 () Bool)

(assert (=> d!16743 e!47665))

(declare-fun c!10754 () Bool)

(assert (=> d!16743 (= c!10754 (and (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!32466 () Unit!2066)

(declare-fun choose!417 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) (_ BitVec 32) Int) Unit!2066)

(assert (=> d!16743 (= lt!32466 (choose!417 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(assert (=> d!16743 (validMask!0 (mask!6178 (v!2523 (underlying!256 thiss!992))))))

(assert (=> d!16743 (= (lemmaListMapContainsThenArrayContainsFrom!48 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))) lt!32466)))

(declare-fun b!72818 () Bool)

(assert (=> b!72818 (= e!47665 (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!72819 () Bool)

(assert (=> b!72819 (= e!47665 (ite (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!16743 c!10754) b!72818))

(assert (= (and d!16743 (not c!10754)) b!72819))

(assert (=> d!16743 m!70791))

(declare-fun m!70945 () Bool)

(assert (=> d!16743 m!70945))

(assert (=> d!16743 m!70779))

(assert (=> b!72818 m!70791))

(assert (=> b!72818 m!70819))

(assert (=> b!72671 d!16743))

(declare-fun b!72830 () Bool)

(declare-fun e!47674 () Bool)

(declare-fun e!47677 () Bool)

(assert (=> b!72830 (= e!47674 e!47677)))

(declare-fun res!38676 () Bool)

(assert (=> b!72830 (=> (not res!38676) (not e!47677))))

(declare-fun e!47676 () Bool)

(assert (=> b!72830 (= res!38676 (not e!47676))))

(declare-fun res!38677 () Bool)

(assert (=> b!72830 (=> (not res!38677) (not e!47676))))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!72830 (= res!38677 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun c!10757 () Bool)

(declare-fun call!6331 () Bool)

(declare-fun bm!6328 () Bool)

(assert (=> bm!6328 (= call!6331 (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)))))

(declare-fun d!16745 () Bool)

(declare-fun res!38678 () Bool)

(assert (=> d!16745 (=> res!38678 e!47674)))

(assert (=> d!16745 (= res!38678 (bvsge from!355 (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!16745 (= (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) from!355 Nil!1481) e!47674)))

(declare-fun b!72831 () Bool)

(declare-fun e!47675 () Bool)

(assert (=> b!72831 (= e!47677 e!47675)))

(assert (=> b!72831 (= c!10757 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!72832 () Bool)

(assert (=> b!72832 (= e!47675 call!6331)))

(declare-fun b!72833 () Bool)

(declare-fun contains!721 (List!1484 (_ BitVec 64)) Bool)

(assert (=> b!72833 (= e!47676 (contains!721 Nil!1481 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!72834 () Bool)

(assert (=> b!72834 (= e!47675 call!6331)))

(assert (= (and d!16745 (not res!38678)) b!72830))

(assert (= (and b!72830 res!38677) b!72833))

(assert (= (and b!72830 res!38676) b!72831))

(assert (= (and b!72831 c!10757) b!72834))

(assert (= (and b!72831 (not c!10757)) b!72832))

(assert (= (or b!72834 b!72832) bm!6328))

(assert (=> b!72830 m!70791))

(assert (=> b!72830 m!70791))

(declare-fun m!70947 () Bool)

(assert (=> b!72830 m!70947))

(assert (=> bm!6328 m!70791))

(declare-fun m!70949 () Bool)

(assert (=> bm!6328 m!70949))

(assert (=> b!72831 m!70791))

(assert (=> b!72831 m!70791))

(assert (=> b!72831 m!70947))

(assert (=> b!72833 m!70791))

(assert (=> b!72833 m!70791))

(declare-fun m!70951 () Bool)

(assert (=> b!72833 m!70951))

(assert (=> b!72671 d!16745))

(declare-fun d!16747 () Bool)

(declare-fun res!38685 () Bool)

(declare-fun e!47680 () Bool)

(assert (=> d!16747 (=> (not res!38685) (not e!47680))))

(declare-fun simpleValid!51 (LongMapFixedSize!694) Bool)

(assert (=> d!16747 (= res!38685 (simpleValid!51 newMap!16))))

(assert (=> d!16747 (= (valid!300 newMap!16) e!47680)))

(declare-fun b!72841 () Bool)

(declare-fun res!38686 () Bool)

(assert (=> b!72841 (=> (not res!38686) (not e!47680))))

(declare-fun arrayCountValidKeys!0 (array!3871 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!72841 (= res!38686 (= (arrayCountValidKeys!0 (_keys!3863 newMap!16) #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (_size!396 newMap!16)))))

(declare-fun b!72842 () Bool)

(declare-fun res!38687 () Bool)

(assert (=> b!72842 (=> (not res!38687) (not e!47680))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!3871 (_ BitVec 32)) Bool)

(assert (=> b!72842 (= res!38687 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun b!72843 () Bool)

(assert (=> b!72843 (= e!47680 (arrayNoDuplicates!0 (_keys!3863 newMap!16) #b00000000000000000000000000000000 Nil!1481))))

(assert (= (and d!16747 res!38685) b!72841))

(assert (= (and b!72841 res!38686) b!72842))

(assert (= (and b!72842 res!38687) b!72843))

(declare-fun m!70953 () Bool)

(assert (=> d!16747 m!70953))

(declare-fun m!70955 () Bool)

(assert (=> b!72841 m!70955))

(declare-fun m!70957 () Bool)

(assert (=> b!72842 m!70957))

(declare-fun m!70959 () Bool)

(assert (=> b!72843 m!70959))

(assert (=> b!72666 d!16747))

(declare-fun d!16749 () Bool)

(assert (=> d!16749 (= (array_inv!1153 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvsge (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!72681 d!16749))

(declare-fun d!16751 () Bool)

(assert (=> d!16751 (= (array_inv!1154 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvsge (size!2086 (_values!2195 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!72681 d!16751))

(declare-fun d!16753 () Bool)

(declare-fun e!47686 () Bool)

(assert (=> d!16753 e!47686))

(declare-fun res!38690 () Bool)

(assert (=> d!16753 (=> res!38690 e!47686)))

(declare-fun lt!32478 () Bool)

(assert (=> d!16753 (= res!38690 (not lt!32478))))

(declare-fun lt!32476 () Bool)

(assert (=> d!16753 (= lt!32478 lt!32476)))

(declare-fun lt!32475 () Unit!2066)

(declare-fun e!47685 () Unit!2066)

(assert (=> d!16753 (= lt!32475 e!47685)))

(declare-fun c!10760 () Bool)

(assert (=> d!16753 (= c!10760 lt!32476)))

(declare-fun containsKey!135 (List!1483 (_ BitVec 64)) Bool)

(assert (=> d!16753 (= lt!32476 (containsKey!135 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!16753 (= (contains!719 lt!32375 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) lt!32478)))

(declare-fun b!72850 () Bool)

(declare-fun lt!32477 () Unit!2066)

(assert (=> b!72850 (= e!47685 lt!32477)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!84 (List!1483 (_ BitVec 64)) Unit!2066)

(assert (=> b!72850 (= lt!32477 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-datatypes ((Option!137 0))(
  ( (Some!136 (v!2529 V!2945)) (None!135) )
))
(declare-fun isDefined!85 (Option!137) Bool)

(declare-fun getValueByKey!131 (List!1483 (_ BitVec 64)) Option!137)

(assert (=> b!72850 (isDefined!85 (getValueByKey!131 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!72851 () Bool)

(declare-fun Unit!2076 () Unit!2066)

(assert (=> b!72851 (= e!47685 Unit!2076)))

(declare-fun b!72852 () Bool)

(assert (=> b!72852 (= e!47686 (isDefined!85 (getValueByKey!131 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (= (and d!16753 c!10760) b!72850))

(assert (= (and d!16753 (not c!10760)) b!72851))

(assert (= (and d!16753 (not res!38690)) b!72852))

(assert (=> d!16753 m!70791))

(declare-fun m!70961 () Bool)

(assert (=> d!16753 m!70961))

(assert (=> b!72850 m!70791))

(declare-fun m!70963 () Bool)

(assert (=> b!72850 m!70963))

(assert (=> b!72850 m!70791))

(declare-fun m!70965 () Bool)

(assert (=> b!72850 m!70965))

(assert (=> b!72850 m!70965))

(declare-fun m!70967 () Bool)

(assert (=> b!72850 m!70967))

(assert (=> b!72852 m!70791))

(assert (=> b!72852 m!70965))

(assert (=> b!72852 m!70965))

(assert (=> b!72852 m!70967))

(assert (=> b!72672 d!16753))

(declare-fun b!72937 () Bool)

(declare-fun lt!32545 () Unit!2066)

(declare-fun e!47735 () Unit!2066)

(assert (=> b!72937 (= lt!32545 e!47735)))

(declare-fun c!10797 () Bool)

(declare-fun call!6398 () Bool)

(assert (=> b!72937 (= c!10797 call!6398)))

(declare-fun e!47734 () tuple2!2122)

(assert (=> b!72937 (= e!47734 (tuple2!2123 false newMap!16))))

(declare-fun d!16755 () Bool)

(declare-fun e!47749 () Bool)

(assert (=> d!16755 e!47749))

(declare-fun res!38731 () Bool)

(assert (=> d!16755 (=> (not res!38731) (not e!47749))))

(declare-fun lt!32534 () tuple2!2122)

(assert (=> d!16755 (= res!38731 (valid!300 (_2!1072 lt!32534)))))

(declare-fun e!47732 () tuple2!2122)

(assert (=> d!16755 (= lt!32534 e!47732)))

(declare-fun c!10789 () Bool)

(assert (=> d!16755 (= c!10789 (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvneg (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (=> d!16755 (valid!300 newMap!16)))

(assert (=> d!16755 (= (update!103 newMap!16 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380) lt!32534)))

(declare-fun b!72938 () Bool)

(declare-fun e!47740 () tuple2!2122)

(declare-fun e!47742 () tuple2!2122)

(assert (=> b!72938 (= e!47740 e!47742)))

(declare-fun c!10790 () Bool)

(declare-datatypes ((SeekEntryResult!239 0))(
  ( (MissingZero!239 (index!3087 (_ BitVec 32))) (Found!239 (index!3088 (_ BitVec 32))) (Intermediate!239 (undefined!1051 Bool) (index!3089 (_ BitVec 32)) (x!11154 (_ BitVec 32))) (Undefined!239) (MissingVacant!239 (index!3090 (_ BitVec 32))) )
))
(declare-fun lt!32540 () SeekEntryResult!239)

(assert (=> b!72938 (= c!10790 ((_ is MissingZero!239) lt!32540))))

(declare-fun c!10791 () Bool)

(declare-fun c!10795 () Bool)

(declare-fun lt!32543 () SeekEntryResult!239)

(declare-fun bm!6377 () Bool)

(declare-fun call!6387 () Bool)

(declare-fun lt!32536 () SeekEntryResult!239)

(declare-fun c!10794 () Bool)

(declare-fun c!10798 () Bool)

(declare-fun lt!32558 () SeekEntryResult!239)

(declare-fun lt!32542 () SeekEntryResult!239)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!6377 (= call!6387 (inRange!0 (ite c!10798 (ite c!10797 (index!3088 lt!32543) (ite c!10795 (index!3087 lt!32558) (index!3090 lt!32558))) (ite c!10794 (index!3088 lt!32542) (ite c!10791 (index!3087 lt!32536) (index!3090 lt!32536)))) (mask!6178 newMap!16)))))

(declare-fun bm!6378 () Bool)

(declare-fun call!6399 () ListLongMap!1403)

(declare-fun call!6386 () ListLongMap!1403)

(assert (=> bm!6378 (= call!6399 call!6386)))

(declare-fun b!72939 () Bool)

(declare-fun res!38732 () Bool)

(declare-fun e!47741 () Bool)

(assert (=> b!72939 (=> (not res!38732) (not e!47741))))

(assert (=> b!72939 (= res!38732 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3087 lt!32536)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6379 () Bool)

(declare-fun call!6403 () SeekEntryResult!239)

(declare-fun call!6392 () SeekEntryResult!239)

(assert (=> bm!6379 (= call!6403 call!6392)))

(declare-fun bm!6380 () Bool)

(declare-fun call!6383 () Bool)

(declare-fun call!6394 () Bool)

(assert (=> bm!6380 (= call!6383 call!6394)))

(declare-fun c!10800 () Bool)

(declare-fun call!6395 () ListLongMap!1403)

(declare-fun bm!6381 () Bool)

(declare-fun e!47747 () ListLongMap!1403)

(assert (=> bm!6381 (= call!6395 (+!93 e!47747 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun c!10793 () Bool)

(assert (=> bm!6381 (= c!10793 c!10789)))

(declare-fun e!47739 () Bool)

(declare-fun b!72940 () Bool)

(assert (=> b!72940 (= e!47739 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32542)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun call!6382 () Bool)

(declare-fun bm!6382 () Bool)

(assert (=> bm!6382 (= call!6382 (arrayContainsKey!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!6383 () Bool)

(declare-fun call!6381 () ListLongMap!1403)

(assert (=> bm!6383 (= call!6381 call!6395)))

(declare-fun b!72941 () Bool)

(declare-fun e!47752 () Bool)

(declare-fun call!6400 () Bool)

(assert (=> b!72941 (= e!47752 (not call!6400))))

(declare-fun b!72942 () Bool)

(declare-fun lt!32541 () tuple2!2122)

(declare-fun call!6397 () tuple2!2122)

(assert (=> b!72942 (= lt!32541 call!6397)))

(assert (=> b!72942 (= e!47742 (tuple2!2123 (_1!1072 lt!32541) (_2!1072 lt!32541)))))

(declare-fun bm!6384 () Bool)

(declare-fun call!6393 () SeekEntryResult!239)

(assert (=> bm!6384 (= call!6393 call!6392)))

(declare-fun bm!6385 () Bool)

(declare-fun call!6396 () ListLongMap!1403)

(assert (=> bm!6385 (= call!6396 (map!1150 (_2!1072 lt!32534)))))

(declare-fun b!72943 () Bool)

(declare-fun call!6390 () ListLongMap!1403)

(assert (=> b!72943 (= e!47747 (ite c!10800 call!6390 call!6399))))

(declare-fun b!72944 () Bool)

(declare-fun call!6380 () Bool)

(assert (=> b!72944 (= e!47741 (not call!6380))))

(declare-fun b!72945 () Bool)

(declare-fun e!47731 () Bool)

(assert (=> b!72945 (= e!47731 ((_ is Undefined!239) lt!32536))))

(declare-fun b!72946 () Bool)

(declare-fun lt!32533 () Unit!2066)

(declare-fun lt!32556 () Unit!2066)

(assert (=> b!72946 (= lt!32533 lt!32556)))

(assert (=> b!72946 (= call!6381 call!6390)))

(declare-fun lt!32546 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 V!2945 Int) Unit!2066)

(assert (=> b!72946 (= lt!32556 (lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) lt!32546 (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) lt!32380 (defaultEntry!2212 newMap!16)))))

(assert (=> b!72946 (= lt!32546 (bvor (extraKeys!2071 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!47751 () tuple2!2122)

(assert (=> b!72946 (= e!47751 (tuple2!2123 true (LongMapFixedSize!695 (defaultEntry!2212 newMap!16) (mask!6178 newMap!16) (bvor (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) (zeroValue!2114 newMap!16) lt!32380 (_size!396 newMap!16) (_keys!3863 newMap!16) (_values!2195 newMap!16) (_vacant!396 newMap!16))))))

(declare-fun b!72947 () Bool)

(declare-fun c!10796 () Bool)

(assert (=> b!72947 (= c!10796 ((_ is MissingVacant!239) lt!32536))))

(declare-fun e!47737 () Bool)

(assert (=> b!72947 (= e!47737 e!47731)))

(declare-fun b!72948 () Bool)

(declare-fun e!47738 () Bool)

(declare-fun e!47745 () Bool)

(assert (=> b!72948 (= e!47738 e!47745)))

(declare-fun res!38724 () Bool)

(assert (=> b!72948 (= res!38724 (contains!719 call!6396 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> b!72948 (=> (not res!38724) (not e!47745))))

(declare-fun b!72949 () Bool)

(declare-fun lt!32550 () Unit!2066)

(declare-fun lt!32551 () Unit!2066)

(assert (=> b!72949 (= lt!32550 lt!32551)))

(declare-fun call!6384 () ListLongMap!1403)

(assert (=> b!72949 (contains!719 call!6384 (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540)))))

(declare-fun lt!32548 () array!3873)

(declare-fun lemmaValidKeyInArrayIsInListMap!83 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) Int) Unit!2066)

(assert (=> b!72949 (= lt!32551 (lemmaValidKeyInArrayIsInListMap!83 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3088 lt!32540) (defaultEntry!2212 newMap!16)))))

(assert (=> b!72949 (= lt!32548 (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))))

(declare-fun lt!32539 () Unit!2066)

(declare-fun lt!32553 () Unit!2066)

(assert (=> b!72949 (= lt!32539 lt!32553)))

(declare-fun call!6389 () ListLongMap!1403)

(assert (=> b!72949 (= call!6395 call!6389)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) (_ BitVec 64) V!2945 Int) Unit!2066)

(assert (=> b!72949 (= lt!32553 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3088 lt!32540) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32552 () Unit!2066)

(declare-fun e!47736 () Unit!2066)

(assert (=> b!72949 (= lt!32552 e!47736)))

(assert (=> b!72949 (= c!10794 call!6398)))

(assert (=> b!72949 (= e!47742 (tuple2!2123 true (LongMapFixedSize!695 (defaultEntry!2212 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (_size!396 newMap!16) (_keys!3863 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (_vacant!396 newMap!16))))))

(declare-fun b!72950 () Bool)

(declare-fun res!38726 () Bool)

(declare-fun e!47733 () Bool)

(assert (=> b!72950 (=> (not res!38726) (not e!47733))))

(assert (=> b!72950 (= res!38726 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3087 lt!32558)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!72951 () Bool)

(declare-fun e!47743 () Bool)

(assert (=> b!72951 (= e!47743 (not call!6380))))

(declare-fun b!72952 () Bool)

(assert (=> b!72952 (= e!47732 e!47751)))

(assert (=> b!72952 (= c!10800 (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6386 () Bool)

(declare-fun c!10792 () Bool)

(assert (=> bm!6386 (= c!10792 c!10798)))

(declare-fun e!47748 () ListLongMap!1403)

(assert (=> bm!6386 (= call!6398 (contains!719 e!47748 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun bm!6387 () Bool)

(assert (=> bm!6387 (= call!6389 call!6386)))

(declare-fun b!72953 () Bool)

(assert (=> b!72953 (= e!47749 e!47738)))

(declare-fun c!10801 () Bool)

(assert (=> b!72953 (= c!10801 (_1!1072 lt!32534))))

(declare-fun b!72954 () Bool)

(assert (=> b!72954 (= e!47748 call!6389)))

(declare-fun b!72955 () Bool)

(declare-fun call!6388 () ListLongMap!1403)

(assert (=> b!72955 (= e!47738 (= call!6396 call!6388))))

(declare-fun b!72956 () Bool)

(declare-fun res!38727 () Bool)

(assert (=> b!72956 (=> (not res!38727) (not e!47733))))

(assert (=> b!72956 (= res!38727 call!6383)))

(declare-fun e!47746 () Bool)

(assert (=> b!72956 (= e!47746 e!47733)))

(declare-fun b!72957 () Bool)

(declare-fun lt!32537 () Unit!2066)

(assert (=> b!72957 (= e!47735 lt!32537)))

(declare-fun call!6402 () Unit!2066)

(assert (=> b!72957 (= lt!32537 call!6402)))

(assert (=> b!72957 (= lt!32558 call!6393)))

(assert (=> b!72957 (= c!10795 ((_ is MissingZero!239) lt!32558))))

(assert (=> b!72957 e!47746))

(declare-fun c!10799 () Bool)

(declare-fun bm!6388 () Bool)

(declare-fun updateHelperNewKey!24 (LongMapFixedSize!694 (_ BitVec 64) V!2945 (_ BitVec 32)) tuple2!2122)

(assert (=> bm!6388 (= call!6397 (updateHelperNewKey!24 newMap!16 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))))))

(declare-fun b!72958 () Bool)

(declare-fun lt!32549 () Unit!2066)

(declare-fun lt!32555 () Unit!2066)

(assert (=> b!72958 (= lt!32549 lt!32555)))

(assert (=> b!72958 (= call!6381 call!6399)))

(declare-fun lt!32559 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!24 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 V!2945 Int) Unit!2066)

(assert (=> b!72958 (= lt!32555 (lemmaChangeZeroKeyThenAddPairToListMap!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) lt!32559 (zeroValue!2114 newMap!16) lt!32380 (minValue!2114 newMap!16) (defaultEntry!2212 newMap!16)))))

(assert (=> b!72958 (= lt!32559 (bvor (extraKeys!2071 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!72958 (= e!47751 (tuple2!2123 true (LongMapFixedSize!695 (defaultEntry!2212 newMap!16) (mask!6178 newMap!16) (bvor (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) lt!32380 (minValue!2114 newMap!16) (_size!396 newMap!16) (_keys!3863 newMap!16) (_values!2195 newMap!16) (_vacant!396 newMap!16))))))

(declare-fun b!72959 () Bool)

(declare-fun res!38725 () Bool)

(assert (=> b!72959 (=> (not res!38725) (not e!47741))))

(declare-fun call!6385 () Bool)

(assert (=> b!72959 (= res!38725 call!6385)))

(assert (=> b!72959 (= e!47737 e!47741)))

(declare-fun b!72960 () Bool)

(assert (=> b!72960 (= e!47731 e!47743)))

(declare-fun res!38729 () Bool)

(assert (=> b!72960 (= res!38729 call!6385)))

(assert (=> b!72960 (=> (not res!38729) (not e!47743))))

(declare-fun call!6401 () Unit!2066)

(declare-fun bm!6389 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) Int) Unit!2066)

(assert (=> bm!6389 (= call!6401 (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(declare-fun b!72961 () Bool)

(declare-fun res!38728 () Bool)

(declare-fun call!6391 () Bool)

(assert (=> b!72961 (= res!38728 call!6391)))

(assert (=> b!72961 (=> (not res!38728) (not e!47739))))

(declare-fun b!72962 () Bool)

(assert (=> b!72962 (= e!47747 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun bm!6390 () Bool)

(assert (=> bm!6390 (= call!6390 call!6384)))

(declare-fun b!72963 () Bool)

(declare-fun res!38722 () Bool)

(assert (=> b!72963 (= res!38722 call!6394)))

(declare-fun e!47750 () Bool)

(assert (=> b!72963 (=> (not res!38722) (not e!47750))))

(declare-fun b!72964 () Bool)

(declare-fun res!38730 () Bool)

(assert (=> b!72964 (= res!38730 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3090 lt!32536)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72964 (=> (not res!38730) (not e!47743))))

(declare-fun b!72965 () Bool)

(assert (=> b!72965 (= e!47745 (= call!6396 (+!93 call!6388 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun bm!6391 () Bool)

(assert (=> bm!6391 (= call!6394 call!6387)))

(declare-fun b!72966 () Bool)

(declare-fun c!10802 () Bool)

(assert (=> b!72966 (= c!10802 ((_ is MissingVacant!239) lt!32558))))

(declare-fun e!47744 () Bool)

(assert (=> b!72966 (= e!47746 e!47744)))

(declare-fun b!72967 () Bool)

(assert (=> b!72967 (= c!10799 ((_ is MissingVacant!239) lt!32540))))

(assert (=> b!72967 (= e!47734 e!47740)))

(declare-fun bm!6392 () Bool)

(assert (=> bm!6392 (= call!6400 call!6382)))

(declare-fun bm!6393 () Bool)

(assert (=> bm!6393 (= call!6386 (getCurrentListMap!410 (_keys!3863 newMap!16) (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) (mask!6178 newMap!16) (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!72968 () Bool)

(declare-fun Unit!2077 () Unit!2066)

(assert (=> b!72968 (= e!47735 Unit!2077)))

(declare-fun lt!32557 () Unit!2066)

(assert (=> b!72968 (= lt!32557 call!6401)))

(assert (=> b!72968 (= lt!32543 call!6393)))

(declare-fun res!38723 () Bool)

(assert (=> b!72968 (= res!38723 ((_ is Found!239) lt!32543))))

(assert (=> b!72968 (=> (not res!38723) (not e!47750))))

(assert (=> b!72968 e!47750))

(declare-fun lt!32535 () Unit!2066)

(assert (=> b!72968 (= lt!32535 lt!32557)))

(assert (=> b!72968 false))

(declare-fun bm!6394 () Bool)

(assert (=> bm!6394 (= call!6380 call!6382)))

(declare-fun b!72969 () Bool)

(declare-fun res!38720 () Bool)

(assert (=> b!72969 (= res!38720 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3090 lt!32558)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72969 (=> (not res!38720) (not e!47752))))

(declare-fun b!72970 () Bool)

(assert (=> b!72970 (= e!47744 ((_ is Undefined!239) lt!32558))))

(declare-fun bm!6395 () Bool)

(assert (=> bm!6395 (= call!6385 call!6391)))

(declare-fun bm!6396 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!3871 (_ BitVec 32)) SeekEntryResult!239)

(assert (=> bm!6396 (= call!6392 (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun b!72971 () Bool)

(declare-fun Unit!2078 () Unit!2066)

(assert (=> b!72971 (= e!47736 Unit!2078)))

(declare-fun lt!32554 () Unit!2066)

(assert (=> b!72971 (= lt!32554 call!6402)))

(assert (=> b!72971 (= lt!32536 call!6403)))

(assert (=> b!72971 (= c!10791 ((_ is MissingZero!239) lt!32536))))

(assert (=> b!72971 e!47737))

(declare-fun lt!32547 () Unit!2066)

(assert (=> b!72971 (= lt!32547 lt!32554)))

(assert (=> b!72971 false))

(declare-fun b!72972 () Bool)

(declare-fun lt!32538 () Unit!2066)

(assert (=> b!72972 (= e!47736 lt!32538)))

(assert (=> b!72972 (= lt!32538 call!6401)))

(assert (=> b!72972 (= lt!32542 call!6403)))

(declare-fun res!38719 () Bool)

(assert (=> b!72972 (= res!38719 ((_ is Found!239) lt!32542))))

(assert (=> b!72972 (=> (not res!38719) (not e!47739))))

(assert (=> b!72972 e!47739))

(declare-fun b!72973 () Bool)

(assert (=> b!72973 (= e!47733 (not call!6400))))

(declare-fun b!72974 () Bool)

(declare-fun lt!32544 () tuple2!2122)

(assert (=> b!72974 (= e!47740 (tuple2!2123 (_1!1072 lt!32544) (_2!1072 lt!32544)))))

(assert (=> b!72974 (= lt!32544 call!6397)))

(declare-fun bm!6397 () Bool)

(assert (=> bm!6397 (= call!6391 call!6387)))

(declare-fun bm!6398 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) Int) Unit!2066)

(assert (=> bm!6398 (= call!6402 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(declare-fun b!72975 () Bool)

(assert (=> b!72975 (= e!47748 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!72976 () Bool)

(assert (=> b!72976 (= e!47744 e!47752)))

(declare-fun res!38721 () Bool)

(assert (=> b!72976 (= res!38721 call!6383)))

(assert (=> b!72976 (=> (not res!38721) (not e!47752))))

(declare-fun b!72977 () Bool)

(assert (=> b!72977 (= e!47750 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32543)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun bm!6399 () Bool)

(assert (=> bm!6399 (= call!6384 (getCurrentListMap!410 (_keys!3863 newMap!16) (ite c!10789 (_values!2195 newMap!16) lt!32548) (mask!6178 newMap!16) (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) (zeroValue!2114 newMap!16) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun b!72978 () Bool)

(assert (=> b!72978 (= e!47732 e!47734)))

(assert (=> b!72978 (= lt!32540 (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(assert (=> b!72978 (= c!10798 ((_ is Undefined!239) lt!32540))))

(declare-fun bm!6400 () Bool)

(assert (=> bm!6400 (= call!6388 (map!1150 newMap!16))))

(assert (= (and d!16755 c!10789) b!72952))

(assert (= (and d!16755 (not c!10789)) b!72978))

(assert (= (and b!72952 c!10800) b!72958))

(assert (= (and b!72952 (not c!10800)) b!72946))

(assert (= (or b!72958 b!72946) bm!6390))

(assert (= (or b!72958 b!72946) bm!6378))

(assert (= (or b!72958 b!72946) bm!6383))

(assert (= (and b!72978 c!10798) b!72937))

(assert (= (and b!72978 (not c!10798)) b!72967))

(assert (= (and b!72937 c!10797) b!72968))

(assert (= (and b!72937 (not c!10797)) b!72957))

(assert (= (and b!72968 res!38723) b!72963))

(assert (= (and b!72963 res!38722) b!72977))

(assert (= (and b!72957 c!10795) b!72956))

(assert (= (and b!72957 (not c!10795)) b!72966))

(assert (= (and b!72956 res!38727) b!72950))

(assert (= (and b!72950 res!38726) b!72973))

(assert (= (and b!72966 c!10802) b!72976))

(assert (= (and b!72966 (not c!10802)) b!72970))

(assert (= (and b!72976 res!38721) b!72969))

(assert (= (and b!72969 res!38720) b!72941))

(assert (= (or b!72956 b!72976) bm!6380))

(assert (= (or b!72973 b!72941) bm!6392))

(assert (= (or b!72963 bm!6380) bm!6391))

(assert (= (or b!72968 b!72957) bm!6384))

(assert (= (and b!72967 c!10799) b!72974))

(assert (= (and b!72967 (not c!10799)) b!72938))

(assert (= (and b!72938 c!10790) b!72942))

(assert (= (and b!72938 (not c!10790)) b!72949))

(assert (= (and b!72949 c!10794) b!72972))

(assert (= (and b!72949 (not c!10794)) b!72971))

(assert (= (and b!72972 res!38719) b!72961))

(assert (= (and b!72961 res!38728) b!72940))

(assert (= (and b!72971 c!10791) b!72959))

(assert (= (and b!72971 (not c!10791)) b!72947))

(assert (= (and b!72959 res!38725) b!72939))

(assert (= (and b!72939 res!38732) b!72944))

(assert (= (and b!72947 c!10796) b!72960))

(assert (= (and b!72947 (not c!10796)) b!72945))

(assert (= (and b!72960 res!38729) b!72964))

(assert (= (and b!72964 res!38730) b!72951))

(assert (= (or b!72959 b!72960) bm!6395))

(assert (= (or b!72944 b!72951) bm!6394))

(assert (= (or b!72961 bm!6395) bm!6397))

(assert (= (or b!72972 b!72971) bm!6379))

(assert (= (or b!72974 b!72942) bm!6388))

(assert (= (or bm!6391 bm!6397) bm!6377))

(assert (= (or b!72957 b!72971) bm!6398))

(assert (= (or bm!6384 bm!6379) bm!6396))

(assert (= (or b!72937 b!72949) bm!6387))

(assert (= (or b!72968 b!72972) bm!6389))

(assert (= (or bm!6392 bm!6394) bm!6382))

(assert (= (or b!72937 b!72949) bm!6386))

(assert (= (and bm!6386 c!10792) b!72954))

(assert (= (and bm!6386 (not c!10792)) b!72975))

(assert (= (or bm!6390 b!72949) bm!6399))

(assert (= (or bm!6378 bm!6387) bm!6393))

(assert (= (or bm!6383 b!72949) bm!6381))

(assert (= (and bm!6381 c!10793) b!72943))

(assert (= (and bm!6381 (not c!10793)) b!72962))

(assert (= (and d!16755 res!38731) b!72953))

(assert (= (and b!72953 c!10801) b!72948))

(assert (= (and b!72953 (not c!10801)) b!72955))

(assert (= (and b!72948 res!38724) b!72965))

(assert (= (or b!72948 b!72965 b!72955) bm!6385))

(assert (= (or b!72965 b!72955) bm!6400))

(declare-fun m!70969 () Bool)

(assert (=> d!16755 m!70969))

(assert (=> d!16755 m!70769))

(declare-fun m!70971 () Bool)

(assert (=> b!72939 m!70971))

(declare-fun m!70973 () Bool)

(assert (=> b!72965 m!70973))

(declare-fun m!70975 () Bool)

(assert (=> b!72969 m!70975))

(declare-fun m!70977 () Bool)

(assert (=> bm!6399 m!70977))

(assert (=> bm!6396 m!70791))

(declare-fun m!70979 () Bool)

(assert (=> bm!6396 m!70979))

(assert (=> bm!6398 m!70791))

(declare-fun m!70981 () Bool)

(assert (=> bm!6398 m!70981))

(declare-fun m!70983 () Bool)

(assert (=> bm!6385 m!70983))

(assert (=> b!72948 m!70791))

(declare-fun m!70985 () Bool)

(assert (=> b!72948 m!70985))

(declare-fun m!70987 () Bool)

(assert (=> b!72946 m!70987))

(declare-fun m!70989 () Bool)

(assert (=> b!72964 m!70989))

(declare-fun m!70991 () Bool)

(assert (=> b!72975 m!70991))

(assert (=> b!72978 m!70791))

(assert (=> b!72978 m!70979))

(declare-fun m!70993 () Bool)

(assert (=> b!72977 m!70993))

(declare-fun m!70995 () Bool)

(assert (=> bm!6393 m!70995))

(declare-fun m!70997 () Bool)

(assert (=> bm!6393 m!70997))

(declare-fun m!70999 () Bool)

(assert (=> bm!6381 m!70999))

(declare-fun m!71001 () Bool)

(assert (=> b!72950 m!71001))

(assert (=> bm!6400 m!70795))

(declare-fun m!71003 () Bool)

(assert (=> b!72958 m!71003))

(assert (=> bm!6382 m!70791))

(declare-fun m!71005 () Bool)

(assert (=> bm!6382 m!71005))

(declare-fun m!71007 () Bool)

(assert (=> b!72940 m!71007))

(assert (=> b!72962 m!70991))

(assert (=> bm!6386 m!70791))

(declare-fun m!71009 () Bool)

(assert (=> bm!6386 m!71009))

(declare-fun m!71011 () Bool)

(assert (=> bm!6377 m!71011))

(declare-fun m!71013 () Bool)

(assert (=> b!72949 m!71013))

(assert (=> b!72949 m!70791))

(declare-fun m!71015 () Bool)

(assert (=> b!72949 m!71015))

(assert (=> b!72949 m!70995))

(declare-fun m!71017 () Bool)

(assert (=> b!72949 m!71017))

(declare-fun m!71019 () Bool)

(assert (=> b!72949 m!71019))

(assert (=> b!72949 m!71017))

(assert (=> bm!6388 m!70791))

(declare-fun m!71021 () Bool)

(assert (=> bm!6388 m!71021))

(assert (=> bm!6389 m!70791))

(declare-fun m!71023 () Bool)

(assert (=> bm!6389 m!71023))

(assert (=> b!72672 d!16755))

(declare-fun d!16757 () Bool)

(assert (=> d!16757 (= (array_inv!1153 (_keys!3863 newMap!16)) (bvsge (size!2085 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72667 d!16757))

(declare-fun d!16759 () Bool)

(assert (=> d!16759 (= (array_inv!1154 (_values!2195 newMap!16)) (bvsge (size!2086 (_values!2195 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!72667 d!16759))

(declare-fun d!16761 () Bool)

(assert (=> d!16761 (= (valid!301 thiss!992) (valid!300 (v!2523 (underlying!256 thiss!992))))))

(declare-fun bs!3131 () Bool)

(assert (= bs!3131 d!16761))

(declare-fun m!71025 () Bool)

(assert (=> bs!3131 m!71025))

(assert (=> start!9756 d!16761))

(declare-fun d!16763 () Bool)

(declare-fun c!10805 () Bool)

(assert (=> d!16763 (= c!10805 ((_ is ValueCellFull!893) (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun e!47755 () V!2945)

(assert (=> d!16763 (= (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47755)))

(declare-fun b!72983 () Bool)

(declare-fun get!1145 (ValueCell!893 V!2945) V!2945)

(assert (=> b!72983 (= e!47755 (get!1145 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!72984 () Bool)

(declare-fun get!1146 (ValueCell!893 V!2945) V!2945)

(assert (=> b!72984 (= e!47755 (get!1146 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16763 c!10805) b!72983))

(assert (= (and d!16763 (not c!10805)) b!72984))

(assert (=> b!72983 m!70807))

(assert (=> b!72983 m!70809))

(declare-fun m!71027 () Bool)

(assert (=> b!72983 m!71027))

(assert (=> b!72984 m!70807))

(assert (=> b!72984 m!70809))

(declare-fun m!71029 () Bool)

(assert (=> b!72984 m!71029))

(assert (=> b!72673 d!16763))

(declare-fun d!16765 () Bool)

(assert (=> d!16765 (= (map!1150 newMap!16) (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun bs!3132 () Bool)

(assert (= bs!3132 d!16765))

(assert (=> bs!3132 m!70991))

(assert (=> b!72662 d!16765))

(declare-fun b!73027 () Bool)

(declare-fun e!47790 () Bool)

(declare-fun e!47789 () Bool)

(assert (=> b!73027 (= e!47790 e!47789)))

(declare-fun res!38753 () Bool)

(declare-fun call!6420 () Bool)

(assert (=> b!73027 (= res!38753 call!6420)))

(assert (=> b!73027 (=> (not res!38753) (not e!47789))))

(declare-fun b!73028 () Bool)

(declare-fun e!47787 () ListLongMap!1403)

(declare-fun call!6419 () ListLongMap!1403)

(assert (=> b!73028 (= e!47787 call!6419)))

(declare-fun b!73029 () Bool)

(declare-fun e!47782 () Bool)

(assert (=> b!73029 (= e!47782 e!47790)))

(declare-fun c!10819 () Bool)

(assert (=> b!73029 (= c!10819 (not (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73030 () Bool)

(declare-fun e!47788 () Bool)

(declare-fun call!6422 () Bool)

(assert (=> b!73030 (= e!47788 (not call!6422))))

(declare-fun b!73031 () Bool)

(declare-fun e!47793 () ListLongMap!1403)

(declare-fun call!6424 () ListLongMap!1403)

(assert (=> b!73031 (= e!47793 call!6424)))

(declare-fun b!73033 () Bool)

(declare-fun e!47784 () Bool)

(assert (=> b!73033 (= e!47788 e!47784)))

(declare-fun res!38756 () Bool)

(assert (=> b!73033 (= res!38756 call!6422)))

(assert (=> b!73033 (=> (not res!38756) (not e!47784))))

(declare-fun bm!6415 () Bool)

(declare-fun call!6421 () ListLongMap!1403)

(declare-fun call!6423 () ListLongMap!1403)

(assert (=> bm!6415 (= call!6421 call!6423)))

(declare-fun b!73034 () Bool)

(declare-fun e!47792 () ListLongMap!1403)

(assert (=> b!73034 (= e!47792 e!47787)))

(declare-fun c!10822 () Bool)

(assert (=> b!73034 (= c!10822 (and (not (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6416 () Bool)

(declare-fun lt!32604 () ListLongMap!1403)

(assert (=> bm!6416 (= call!6420 (contains!719 lt!32604 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6417 () Bool)

(declare-fun c!10823 () Bool)

(declare-fun call!6418 () ListLongMap!1403)

(assert (=> bm!6417 (= call!6418 (+!93 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424)) (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!73035 () Bool)

(declare-fun e!47794 () Bool)

(assert (=> b!73035 (= e!47794 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73036 () Bool)

(declare-fun res!38754 () Bool)

(assert (=> b!73036 (=> (not res!38754) (not e!47782))))

(assert (=> b!73036 (= res!38754 e!47788)))

(declare-fun c!10820 () Bool)

(assert (=> b!73036 (= c!10820 (not (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6418 () Bool)

(assert (=> bm!6418 (= call!6424 call!6421)))

(declare-fun b!73037 () Bool)

(declare-fun e!47785 () Bool)

(declare-fun apply!75 (ListLongMap!1403 (_ BitVec 64)) V!2945)

(assert (=> b!73037 (= e!47785 (= (apply!75 lt!32604 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73037 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2086 (_values!2195 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> b!73037 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73038 () Bool)

(assert (=> b!73038 (= e!47789 (= (apply!75 lt!32604 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun bm!6419 () Bool)

(assert (=> bm!6419 (= call!6422 (contains!719 lt!32604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73039 () Bool)

(declare-fun e!47791 () Bool)

(assert (=> b!73039 (= e!47791 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73032 () Bool)

(declare-fun e!47783 () Unit!2066)

(declare-fun lt!32611 () Unit!2066)

(assert (=> b!73032 (= e!47783 lt!32611)))

(declare-fun lt!32623 () ListLongMap!1403)

(assert (=> b!73032 (= lt!32623 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun lt!32613 () (_ BitVec 64))

(assert (=> b!73032 (= lt!32613 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32616 () (_ BitVec 64))

(assert (=> b!73032 (= lt!32616 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32622 () Unit!2066)

(declare-fun addStillContains!51 (ListLongMap!1403 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2066)

(assert (=> b!73032 (= lt!32622 (addStillContains!51 lt!32623 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32616))))

(assert (=> b!73032 (contains!719 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32616)))

(declare-fun lt!32617 () Unit!2066)

(assert (=> b!73032 (= lt!32617 lt!32622)))

(declare-fun lt!32610 () ListLongMap!1403)

(assert (=> b!73032 (= lt!32610 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun lt!32620 () (_ BitVec 64))

(assert (=> b!73032 (= lt!32620 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32619 () (_ BitVec 64))

(assert (=> b!73032 (= lt!32619 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32612 () Unit!2066)

(declare-fun addApplyDifferent!51 (ListLongMap!1403 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2066)

(assert (=> b!73032 (= lt!32612 (addApplyDifferent!51 lt!32610 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32619))))

(assert (=> b!73032 (= (apply!75 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32619) (apply!75 lt!32610 lt!32619))))

(declare-fun lt!32624 () Unit!2066)

(assert (=> b!73032 (= lt!32624 lt!32612)))

(declare-fun lt!32621 () ListLongMap!1403)

(assert (=> b!73032 (= lt!32621 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun lt!32625 () (_ BitVec 64))

(assert (=> b!73032 (= lt!32625 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32608 () (_ BitVec 64))

(assert (=> b!73032 (= lt!32608 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!32606 () Unit!2066)

(assert (=> b!73032 (= lt!32606 (addApplyDifferent!51 lt!32621 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32608))))

(assert (=> b!73032 (= (apply!75 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32608) (apply!75 lt!32621 lt!32608))))

(declare-fun lt!32614 () Unit!2066)

(assert (=> b!73032 (= lt!32614 lt!32606)))

(declare-fun lt!32607 () ListLongMap!1403)

(assert (=> b!73032 (= lt!32607 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun lt!32609 () (_ BitVec 64))

(assert (=> b!73032 (= lt!32609 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32618 () (_ BitVec 64))

(assert (=> b!73032 (= lt!32618 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!73032 (= lt!32611 (addApplyDifferent!51 lt!32607 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32618))))

(assert (=> b!73032 (= (apply!75 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32618) (apply!75 lt!32607 lt!32618))))

(declare-fun d!16767 () Bool)

(assert (=> d!16767 e!47782))

(declare-fun res!38752 () Bool)

(assert (=> d!16767 (=> (not res!38752) (not e!47782))))

(assert (=> d!16767 (= res!38752 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun lt!32615 () ListLongMap!1403)

(assert (=> d!16767 (= lt!32604 lt!32615)))

(declare-fun lt!32605 () Unit!2066)

(assert (=> d!16767 (= lt!32605 e!47783)))

(declare-fun c!10818 () Bool)

(assert (=> d!16767 (= c!10818 e!47791)))

(declare-fun res!38755 () Bool)

(assert (=> d!16767 (=> (not res!38755) (not e!47791))))

(assert (=> d!16767 (= res!38755 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!16767 (= lt!32615 e!47792)))

(assert (=> d!16767 (= c!10823 (and (not (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16767 (validMask!0 (mask!6178 (v!2523 (underlying!256 thiss!992))))))

(assert (=> d!16767 (= (getCurrentListMap!410 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))) lt!32604)))

(declare-fun b!73040 () Bool)

(assert (=> b!73040 (= e!47792 (+!93 call!6418 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73041 () Bool)

(declare-fun c!10821 () Bool)

(assert (=> b!73041 (= c!10821 (and (not (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73041 (= e!47787 e!47793)))

(declare-fun b!73042 () Bool)

(assert (=> b!73042 (= e!47793 call!6419)))

(declare-fun b!73043 () Bool)

(assert (=> b!73043 (= e!47790 (not call!6420))))

(declare-fun b!73044 () Bool)

(declare-fun e!47786 () Bool)

(assert (=> b!73044 (= e!47786 e!47785)))

(declare-fun res!38757 () Bool)

(assert (=> b!73044 (=> (not res!38757) (not e!47785))))

(assert (=> b!73044 (= res!38757 (contains!719 lt!32604 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73044 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73045 () Bool)

(assert (=> b!73045 (= e!47784 (= (apply!75 lt!32604 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun b!73046 () Bool)

(declare-fun Unit!2079 () Unit!2066)

(assert (=> b!73046 (= e!47783 Unit!2079)))

(declare-fun bm!6420 () Bool)

(assert (=> bm!6420 (= call!6419 call!6418)))

(declare-fun b!73047 () Bool)

(declare-fun res!38751 () Bool)

(assert (=> b!73047 (=> (not res!38751) (not e!47782))))

(assert (=> b!73047 (= res!38751 e!47786)))

(declare-fun res!38759 () Bool)

(assert (=> b!73047 (=> res!38759 e!47786)))

(assert (=> b!73047 (= res!38759 (not e!47794))))

(declare-fun res!38758 () Bool)

(assert (=> b!73047 (=> (not res!38758) (not e!47794))))

(assert (=> b!73047 (= res!38758 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun bm!6421 () Bool)

(assert (=> bm!6421 (= call!6423 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(assert (= (and d!16767 c!10823) b!73040))

(assert (= (and d!16767 (not c!10823)) b!73034))

(assert (= (and b!73034 c!10822) b!73028))

(assert (= (and b!73034 (not c!10822)) b!73041))

(assert (= (and b!73041 c!10821) b!73042))

(assert (= (and b!73041 (not c!10821)) b!73031))

(assert (= (or b!73042 b!73031) bm!6418))

(assert (= (or b!73028 bm!6418) bm!6415))

(assert (= (or b!73028 b!73042) bm!6420))

(assert (= (or b!73040 bm!6415) bm!6421))

(assert (= (or b!73040 bm!6420) bm!6417))

(assert (= (and d!16767 res!38755) b!73039))

(assert (= (and d!16767 c!10818) b!73032))

(assert (= (and d!16767 (not c!10818)) b!73046))

(assert (= (and d!16767 res!38752) b!73047))

(assert (= (and b!73047 res!38758) b!73035))

(assert (= (and b!73047 (not res!38759)) b!73044))

(assert (= (and b!73044 res!38757) b!73037))

(assert (= (and b!73047 res!38751) b!73036))

(assert (= (and b!73036 c!10820) b!73033))

(assert (= (and b!73036 (not c!10820)) b!73030))

(assert (= (and b!73033 res!38756) b!73045))

(assert (= (or b!73033 b!73030) bm!6419))

(assert (= (and b!73036 res!38754) b!73029))

(assert (= (and b!73029 c!10819) b!73027))

(assert (= (and b!73029 (not c!10819)) b!73043))

(assert (= (and b!73027 res!38753) b!73038))

(assert (= (or b!73027 b!73043) bm!6416))

(declare-fun b_lambda!3267 () Bool)

(assert (=> (not b_lambda!3267) (not b!73037)))

(assert (=> b!73037 t!5028))

(declare-fun b_and!4473 () Bool)

(assert (= b_and!4453 (and (=> t!5028 result!2669) b_and!4473)))

(assert (=> b!73037 t!5030))

(declare-fun b_and!4475 () Bool)

(assert (= b_and!4455 (and (=> t!5030 result!2673) b_and!4475)))

(declare-fun m!71031 () Bool)

(assert (=> bm!6416 m!71031))

(declare-fun m!71033 () Bool)

(assert (=> b!73032 m!71033))

(declare-fun m!71035 () Bool)

(assert (=> b!73032 m!71035))

(declare-fun m!71037 () Bool)

(assert (=> b!73032 m!71037))

(declare-fun m!71039 () Bool)

(assert (=> b!73032 m!71039))

(declare-fun m!71041 () Bool)

(assert (=> b!73032 m!71041))

(declare-fun m!71043 () Bool)

(assert (=> b!73032 m!71043))

(declare-fun m!71045 () Bool)

(assert (=> b!73032 m!71045))

(declare-fun m!71047 () Bool)

(assert (=> b!73032 m!71047))

(assert (=> b!73032 m!71041))

(declare-fun m!71049 () Bool)

(assert (=> b!73032 m!71049))

(declare-fun m!71051 () Bool)

(assert (=> b!73032 m!71051))

(declare-fun m!71053 () Bool)

(assert (=> b!73032 m!71053))

(assert (=> b!73032 m!70789))

(assert (=> b!73032 m!71047))

(declare-fun m!71055 () Bool)

(assert (=> b!73032 m!71055))

(assert (=> b!73032 m!71033))

(assert (=> b!73032 m!70941))

(declare-fun m!71057 () Bool)

(assert (=> b!73032 m!71057))

(declare-fun m!71059 () Bool)

(assert (=> b!73032 m!71059))

(assert (=> b!73032 m!71037))

(declare-fun m!71061 () Bool)

(assert (=> b!73032 m!71061))

(declare-fun m!71063 () Bool)

(assert (=> b!73045 m!71063))

(declare-fun m!71065 () Bool)

(assert (=> b!73038 m!71065))

(assert (=> b!73035 m!70941))

(assert (=> b!73035 m!70941))

(declare-fun m!71067 () Bool)

(assert (=> b!73035 m!71067))

(declare-fun m!71069 () Bool)

(assert (=> bm!6417 m!71069))

(assert (=> b!73039 m!70941))

(assert (=> b!73039 m!70941))

(assert (=> b!73039 m!71067))

(assert (=> d!16767 m!70779))

(declare-fun m!71071 () Bool)

(assert (=> b!73040 m!71071))

(declare-fun m!71073 () Bool)

(assert (=> bm!6419 m!71073))

(assert (=> bm!6421 m!70789))

(assert (=> b!73044 m!70941))

(assert (=> b!73044 m!70941))

(declare-fun m!71075 () Bool)

(assert (=> b!73044 m!71075))

(assert (=> b!73037 m!70941))

(declare-fun m!71077 () Bool)

(assert (=> b!73037 m!71077))

(assert (=> b!73037 m!70941))

(declare-fun m!71079 () Bool)

(assert (=> b!73037 m!71079))

(assert (=> b!73037 m!71077))

(assert (=> b!73037 m!70809))

(declare-fun m!71081 () Bool)

(assert (=> b!73037 m!71081))

(assert (=> b!73037 m!70809))

(assert (=> b!72662 d!16767))

(declare-fun d!16769 () Bool)

(assert (=> d!16769 (= (+!93 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (+!93 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(declare-fun lt!32628 () Unit!2066)

(declare-fun choose!418 (ListLongMap!1403 (_ BitVec 64) V!2945 (_ BitVec 64) V!2945) Unit!2066)

(assert (=> d!16769 (= lt!32628 (choose!418 lt!32377 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))

(assert (=> d!16769 (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16769 (= (addCommutativeForDiffKeys!12 lt!32377 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) lt!32628)))

(declare-fun bs!3133 () Bool)

(assert (= bs!3133 d!16769))

(declare-fun m!71083 () Bool)

(assert (=> bs!3133 m!71083))

(declare-fun m!71085 () Bool)

(assert (=> bs!3133 m!71085))

(declare-fun m!71087 () Bool)

(assert (=> bs!3133 m!71087))

(assert (=> bs!3133 m!70791))

(declare-fun m!71089 () Bool)

(assert (=> bs!3133 m!71089))

(assert (=> bs!3133 m!71083))

(declare-fun m!71091 () Bool)

(assert (=> bs!3133 m!71091))

(assert (=> bs!3133 m!71085))

(assert (=> b!72676 d!16769))

(declare-fun d!16771 () Bool)

(declare-fun e!47797 () Bool)

(assert (=> d!16771 e!47797))

(declare-fun res!38765 () Bool)

(assert (=> d!16771 (=> (not res!38765) (not e!47797))))

(declare-fun lt!32639 () ListLongMap!1403)

(assert (=> d!16771 (= res!38765 (contains!719 lt!32639 (_1!1071 lt!32376)))))

(declare-fun lt!32640 () List!1483)

(assert (=> d!16771 (= lt!32639 (ListLongMap!1404 lt!32640))))

(declare-fun lt!32638 () Unit!2066)

(declare-fun lt!32637 () Unit!2066)

(assert (=> d!16771 (= lt!32638 lt!32637)))

(assert (=> d!16771 (= (getValueByKey!131 lt!32640 (_1!1071 lt!32376)) (Some!136 (_2!1071 lt!32376)))))

(declare-fun lemmaContainsTupThenGetReturnValue!51 (List!1483 (_ BitVec 64) V!2945) Unit!2066)

(assert (=> d!16771 (= lt!32637 (lemmaContainsTupThenGetReturnValue!51 lt!32640 (_1!1071 lt!32376) (_2!1071 lt!32376)))))

(declare-fun insertStrictlySorted!54 (List!1483 (_ BitVec 64) V!2945) List!1483)

(assert (=> d!16771 (= lt!32640 (insertStrictlySorted!54 (toList!717 (+!93 lt!32377 lt!32383)) (_1!1071 lt!32376) (_2!1071 lt!32376)))))

(assert (=> d!16771 (= (+!93 (+!93 lt!32377 lt!32383) lt!32376) lt!32639)))

(declare-fun b!73052 () Bool)

(declare-fun res!38764 () Bool)

(assert (=> b!73052 (=> (not res!38764) (not e!47797))))

(assert (=> b!73052 (= res!38764 (= (getValueByKey!131 (toList!717 lt!32639) (_1!1071 lt!32376)) (Some!136 (_2!1071 lt!32376))))))

(declare-fun b!73053 () Bool)

(declare-fun contains!722 (List!1483 tuple2!2120) Bool)

(assert (=> b!73053 (= e!47797 (contains!722 (toList!717 lt!32639) lt!32376))))

(assert (= (and d!16771 res!38765) b!73052))

(assert (= (and b!73052 res!38764) b!73053))

(declare-fun m!71093 () Bool)

(assert (=> d!16771 m!71093))

(declare-fun m!71095 () Bool)

(assert (=> d!16771 m!71095))

(declare-fun m!71097 () Bool)

(assert (=> d!16771 m!71097))

(declare-fun m!71099 () Bool)

(assert (=> d!16771 m!71099))

(declare-fun m!71101 () Bool)

(assert (=> b!73052 m!71101))

(declare-fun m!71103 () Bool)

(assert (=> b!73053 m!71103))

(assert (=> b!72676 d!16771))

(declare-fun d!16773 () Bool)

(declare-fun e!47798 () Bool)

(assert (=> d!16773 e!47798))

(declare-fun res!38767 () Bool)

(assert (=> d!16773 (=> (not res!38767) (not e!47798))))

(declare-fun lt!32643 () ListLongMap!1403)

(assert (=> d!16773 (= res!38767 (contains!719 lt!32643 (_1!1071 lt!32376)))))

(declare-fun lt!32644 () List!1483)

(assert (=> d!16773 (= lt!32643 (ListLongMap!1404 lt!32644))))

(declare-fun lt!32642 () Unit!2066)

(declare-fun lt!32641 () Unit!2066)

(assert (=> d!16773 (= lt!32642 lt!32641)))

(assert (=> d!16773 (= (getValueByKey!131 lt!32644 (_1!1071 lt!32376)) (Some!136 (_2!1071 lt!32376)))))

(assert (=> d!16773 (= lt!32641 (lemmaContainsTupThenGetReturnValue!51 lt!32644 (_1!1071 lt!32376) (_2!1071 lt!32376)))))

(assert (=> d!16773 (= lt!32644 (insertStrictlySorted!54 (toList!717 lt!32377) (_1!1071 lt!32376) (_2!1071 lt!32376)))))

(assert (=> d!16773 (= (+!93 lt!32377 lt!32376) lt!32643)))

(declare-fun b!73054 () Bool)

(declare-fun res!38766 () Bool)

(assert (=> b!73054 (=> (not res!38766) (not e!47798))))

(assert (=> b!73054 (= res!38766 (= (getValueByKey!131 (toList!717 lt!32643) (_1!1071 lt!32376)) (Some!136 (_2!1071 lt!32376))))))

(declare-fun b!73055 () Bool)

(assert (=> b!73055 (= e!47798 (contains!722 (toList!717 lt!32643) lt!32376))))

(assert (= (and d!16773 res!38767) b!73054))

(assert (= (and b!73054 res!38766) b!73055))

(declare-fun m!71105 () Bool)

(assert (=> d!16773 m!71105))

(declare-fun m!71107 () Bool)

(assert (=> d!16773 m!71107))

(declare-fun m!71109 () Bool)

(assert (=> d!16773 m!71109))

(declare-fun m!71111 () Bool)

(assert (=> d!16773 m!71111))

(declare-fun m!71113 () Bool)

(assert (=> b!73054 m!71113))

(declare-fun m!71115 () Bool)

(assert (=> b!73055 m!71115))

(assert (=> b!72676 d!16773))

(declare-fun b!73080 () Bool)

(assert (=> b!73080 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> b!73080 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2086 (_values!2195 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun lt!32663 () ListLongMap!1403)

(declare-fun e!47813 () Bool)

(assert (=> b!73080 (= e!47813 (= (apply!75 lt!32663 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73081 () Bool)

(declare-fun e!47815 () ListLongMap!1403)

(declare-fun call!6427 () ListLongMap!1403)

(assert (=> b!73081 (= e!47815 call!6427)))

(declare-fun b!73082 () Bool)

(declare-fun e!47818 () Bool)

(declare-fun e!47816 () Bool)

(assert (=> b!73082 (= e!47818 e!47816)))

(declare-fun c!10835 () Bool)

(declare-fun e!47814 () Bool)

(assert (=> b!73082 (= c!10835 e!47814)))

(declare-fun res!38777 () Bool)

(assert (=> b!73082 (=> (not res!38777) (not e!47814))))

(assert (=> b!73082 (= res!38777 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73083 () Bool)

(assert (=> b!73083 (= e!47814 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73083 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!73084 () Bool)

(declare-fun e!47817 () Bool)

(declare-fun isEmpty!320 (ListLongMap!1403) Bool)

(assert (=> b!73084 (= e!47817 (isEmpty!320 lt!32663))))

(declare-fun b!73085 () Bool)

(assert (=> b!73085 (= e!47816 e!47817)))

(declare-fun c!10833 () Bool)

(assert (=> b!73085 (= c!10833 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73086 () Bool)

(assert (=> b!73086 (= e!47816 e!47813)))

(assert (=> b!73086 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun res!38776 () Bool)

(assert (=> b!73086 (= res!38776 (contains!719 lt!32663 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73086 (=> (not res!38776) (not e!47813))))

(declare-fun b!73088 () Bool)

(declare-fun e!47819 () ListLongMap!1403)

(assert (=> b!73088 (= e!47819 e!47815)))

(declare-fun c!10832 () Bool)

(assert (=> b!73088 (= c!10832 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73089 () Bool)

(declare-fun lt!32661 () Unit!2066)

(declare-fun lt!32665 () Unit!2066)

(assert (=> b!73089 (= lt!32661 lt!32665)))

(declare-fun lt!32659 () (_ BitVec 64))

(declare-fun lt!32664 () ListLongMap!1403)

(declare-fun lt!32662 () V!2945)

(declare-fun lt!32660 () (_ BitVec 64))

(assert (=> b!73089 (not (contains!719 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)) lt!32660))))

(declare-fun addStillNotContains!25 (ListLongMap!1403 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2066)

(assert (=> b!73089 (= lt!32665 (addStillNotContains!25 lt!32664 lt!32659 lt!32662 lt!32660))))

(assert (=> b!73089 (= lt!32660 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73089 (= lt!32662 (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73089 (= lt!32659 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!73089 (= lt!32664 call!6427)))

(assert (=> b!73089 (= e!47815 (+!93 call!6427 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!6424 () Bool)

(assert (=> bm!6424 (= call!6427 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun b!73090 () Bool)

(assert (=> b!73090 (= e!47817 (= lt!32663 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73091 () Bool)

(assert (=> b!73091 (= e!47819 (ListLongMap!1404 Nil!1480))))

(declare-fun b!73087 () Bool)

(declare-fun res!38778 () Bool)

(assert (=> b!73087 (=> (not res!38778) (not e!47818))))

(assert (=> b!73087 (= res!38778 (not (contains!719 lt!32663 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!16775 () Bool)

(assert (=> d!16775 e!47818))

(declare-fun res!38779 () Bool)

(assert (=> d!16775 (=> (not res!38779) (not e!47818))))

(assert (=> d!16775 (= res!38779 (not (contains!719 lt!32663 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16775 (= lt!32663 e!47819)))

(declare-fun c!10834 () Bool)

(assert (=> d!16775 (= c!10834 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!16775 (validMask!0 (mask!6178 (v!2523 (underlying!256 thiss!992))))))

(assert (=> d!16775 (= (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))) lt!32663)))

(assert (= (and d!16775 c!10834) b!73091))

(assert (= (and d!16775 (not c!10834)) b!73088))

(assert (= (and b!73088 c!10832) b!73089))

(assert (= (and b!73088 (not c!10832)) b!73081))

(assert (= (or b!73089 b!73081) bm!6424))

(assert (= (and d!16775 res!38779) b!73087))

(assert (= (and b!73087 res!38778) b!73082))

(assert (= (and b!73082 res!38777) b!73083))

(assert (= (and b!73082 c!10835) b!73086))

(assert (= (and b!73082 (not c!10835)) b!73085))

(assert (= (and b!73086 res!38776) b!73080))

(assert (= (and b!73085 c!10833) b!73090))

(assert (= (and b!73085 (not c!10833)) b!73084))

(declare-fun b_lambda!3269 () Bool)

(assert (=> (not b_lambda!3269) (not b!73080)))

(assert (=> b!73080 t!5028))

(declare-fun b_and!4477 () Bool)

(assert (= b_and!4473 (and (=> t!5028 result!2669) b_and!4477)))

(assert (=> b!73080 t!5030))

(declare-fun b_and!4479 () Bool)

(assert (= b_and!4475 (and (=> t!5030 result!2673) b_and!4479)))

(declare-fun b_lambda!3271 () Bool)

(assert (=> (not b_lambda!3271) (not b!73089)))

(assert (=> b!73089 t!5028))

(declare-fun b_and!4481 () Bool)

(assert (= b_and!4477 (and (=> t!5028 result!2669) b_and!4481)))

(assert (=> b!73089 t!5030))

(declare-fun b_and!4483 () Bool)

(assert (= b_and!4479 (and (=> t!5030 result!2673) b_and!4483)))

(assert (=> b!73083 m!70941))

(assert (=> b!73083 m!70941))

(assert (=> b!73083 m!71067))

(assert (=> b!73080 m!70809))

(assert (=> b!73080 m!70941))

(declare-fun m!71117 () Bool)

(assert (=> b!73080 m!71117))

(assert (=> b!73080 m!70941))

(assert (=> b!73080 m!71077))

(assert (=> b!73080 m!70809))

(assert (=> b!73080 m!71081))

(assert (=> b!73080 m!71077))

(declare-fun m!71119 () Bool)

(assert (=> b!73089 m!71119))

(assert (=> b!73089 m!70809))

(declare-fun m!71121 () Bool)

(assert (=> b!73089 m!71121))

(assert (=> b!73089 m!70941))

(assert (=> b!73089 m!71077))

(declare-fun m!71123 () Bool)

(assert (=> b!73089 m!71123))

(assert (=> b!73089 m!71119))

(declare-fun m!71125 () Bool)

(assert (=> b!73089 m!71125))

(assert (=> b!73089 m!71077))

(assert (=> b!73089 m!70809))

(assert (=> b!73089 m!71081))

(declare-fun m!71127 () Bool)

(assert (=> bm!6424 m!71127))

(assert (=> b!73090 m!71127))

(declare-fun m!71129 () Bool)

(assert (=> b!73084 m!71129))

(declare-fun m!71131 () Bool)

(assert (=> d!16775 m!71131))

(assert (=> d!16775 m!70779))

(assert (=> b!73088 m!70941))

(assert (=> b!73088 m!70941))

(assert (=> b!73088 m!71067))

(declare-fun m!71133 () Bool)

(assert (=> b!73087 m!71133))

(assert (=> b!73086 m!70941))

(assert (=> b!73086 m!70941))

(declare-fun m!71135 () Bool)

(assert (=> b!73086 m!71135))

(assert (=> b!72676 d!16775))

(declare-fun d!16777 () Bool)

(declare-fun e!47820 () Bool)

(assert (=> d!16777 e!47820))

(declare-fun res!38781 () Bool)

(assert (=> d!16777 (=> (not res!38781) (not e!47820))))

(declare-fun lt!32668 () ListLongMap!1403)

(assert (=> d!16777 (= res!38781 (contains!719 lt!32668 (_1!1071 lt!32383)))))

(declare-fun lt!32669 () List!1483)

(assert (=> d!16777 (= lt!32668 (ListLongMap!1404 lt!32669))))

(declare-fun lt!32667 () Unit!2066)

(declare-fun lt!32666 () Unit!2066)

(assert (=> d!16777 (= lt!32667 lt!32666)))

(assert (=> d!16777 (= (getValueByKey!131 lt!32669 (_1!1071 lt!32383)) (Some!136 (_2!1071 lt!32383)))))

(assert (=> d!16777 (= lt!32666 (lemmaContainsTupThenGetReturnValue!51 lt!32669 (_1!1071 lt!32383) (_2!1071 lt!32383)))))

(assert (=> d!16777 (= lt!32669 (insertStrictlySorted!54 (toList!717 (+!93 lt!32377 lt!32376)) (_1!1071 lt!32383) (_2!1071 lt!32383)))))

(assert (=> d!16777 (= (+!93 (+!93 lt!32377 lt!32376) lt!32383) lt!32668)))

(declare-fun b!73092 () Bool)

(declare-fun res!38780 () Bool)

(assert (=> b!73092 (=> (not res!38780) (not e!47820))))

(assert (=> b!73092 (= res!38780 (= (getValueByKey!131 (toList!717 lt!32668) (_1!1071 lt!32383)) (Some!136 (_2!1071 lt!32383))))))

(declare-fun b!73093 () Bool)

(assert (=> b!73093 (= e!47820 (contains!722 (toList!717 lt!32668) lt!32383))))

(assert (= (and d!16777 res!38781) b!73092))

(assert (= (and b!73092 res!38780) b!73093))

(declare-fun m!71137 () Bool)

(assert (=> d!16777 m!71137))

(declare-fun m!71139 () Bool)

(assert (=> d!16777 m!71139))

(declare-fun m!71141 () Bool)

(assert (=> d!16777 m!71141))

(declare-fun m!71143 () Bool)

(assert (=> d!16777 m!71143))

(declare-fun m!71145 () Bool)

(assert (=> b!73092 m!71145))

(declare-fun m!71147 () Bool)

(assert (=> b!73093 m!71147))

(assert (=> b!72676 d!16777))

(declare-fun d!16779 () Bool)

(declare-fun e!47821 () Bool)

(assert (=> d!16779 e!47821))

(declare-fun res!38783 () Bool)

(assert (=> d!16779 (=> (not res!38783) (not e!47821))))

(declare-fun lt!32672 () ListLongMap!1403)

(assert (=> d!16779 (= res!38783 (contains!719 lt!32672 (_1!1071 lt!32383)))))

(declare-fun lt!32673 () List!1483)

(assert (=> d!16779 (= lt!32672 (ListLongMap!1404 lt!32673))))

(declare-fun lt!32671 () Unit!2066)

(declare-fun lt!32670 () Unit!2066)

(assert (=> d!16779 (= lt!32671 lt!32670)))

(assert (=> d!16779 (= (getValueByKey!131 lt!32673 (_1!1071 lt!32383)) (Some!136 (_2!1071 lt!32383)))))

(assert (=> d!16779 (= lt!32670 (lemmaContainsTupThenGetReturnValue!51 lt!32673 (_1!1071 lt!32383) (_2!1071 lt!32383)))))

(assert (=> d!16779 (= lt!32673 (insertStrictlySorted!54 (toList!717 lt!32377) (_1!1071 lt!32383) (_2!1071 lt!32383)))))

(assert (=> d!16779 (= (+!93 lt!32377 lt!32383) lt!32672)))

(declare-fun b!73094 () Bool)

(declare-fun res!38782 () Bool)

(assert (=> b!73094 (=> (not res!38782) (not e!47821))))

(assert (=> b!73094 (= res!38782 (= (getValueByKey!131 (toList!717 lt!32672) (_1!1071 lt!32383)) (Some!136 (_2!1071 lt!32383))))))

(declare-fun b!73095 () Bool)

(assert (=> b!73095 (= e!47821 (contains!722 (toList!717 lt!32672) lt!32383))))

(assert (= (and d!16779 res!38783) b!73094))

(assert (= (and b!73094 res!38782) b!73095))

(declare-fun m!71149 () Bool)

(assert (=> d!16779 m!71149))

(declare-fun m!71151 () Bool)

(assert (=> d!16779 m!71151))

(declare-fun m!71153 () Bool)

(assert (=> d!16779 m!71153))

(declare-fun m!71155 () Bool)

(assert (=> d!16779 m!71155))

(declare-fun m!71157 () Bool)

(assert (=> b!73094 m!71157))

(declare-fun m!71159 () Bool)

(assert (=> b!73095 m!71159))

(assert (=> b!72676 d!16779))

(declare-fun d!16781 () Bool)

(assert (=> d!16781 (= (validMask!0 (mask!6178 (v!2523 (underlying!256 thiss!992)))) (and (or (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000001111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000011111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000001111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000011111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000001111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000011111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000001111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000011111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000001111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000011111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000001111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000011111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000111111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000001111111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000011111111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000111111111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000001111111111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000011111111111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000111111111111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00001111111111111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00011111111111111111111111111111) (= (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!72676 d!16781))

(declare-fun condMapEmpty!3181 () Bool)

(declare-fun mapDefault!3181 () ValueCell!893)

(assert (=> mapNonEmpty!3165 (= condMapEmpty!3181 (= mapRest!3165 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3181)))))

(declare-fun e!47826 () Bool)

(declare-fun mapRes!3181 () Bool)

(assert (=> mapNonEmpty!3165 (= tp!8515 (and e!47826 mapRes!3181))))

(declare-fun b!73103 () Bool)

(assert (=> b!73103 (= e!47826 tp_is_empty!2473)))

(declare-fun b!73102 () Bool)

(declare-fun e!47827 () Bool)

(assert (=> b!73102 (= e!47827 tp_is_empty!2473)))

(declare-fun mapIsEmpty!3181 () Bool)

(assert (=> mapIsEmpty!3181 mapRes!3181))

(declare-fun mapNonEmpty!3181 () Bool)

(declare-fun tp!8545 () Bool)

(assert (=> mapNonEmpty!3181 (= mapRes!3181 (and tp!8545 e!47827))))

(declare-fun mapRest!3181 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapValue!3181 () ValueCell!893)

(declare-fun mapKey!3181 () (_ BitVec 32))

(assert (=> mapNonEmpty!3181 (= mapRest!3165 (store mapRest!3181 mapKey!3181 mapValue!3181))))

(assert (= (and mapNonEmpty!3165 condMapEmpty!3181) mapIsEmpty!3181))

(assert (= (and mapNonEmpty!3165 (not condMapEmpty!3181)) mapNonEmpty!3181))

(assert (= (and mapNonEmpty!3181 ((_ is ValueCellFull!893) mapValue!3181)) b!73102))

(assert (= (and mapNonEmpty!3165 ((_ is ValueCellFull!893) mapDefault!3181)) b!73103))

(declare-fun m!71161 () Bool)

(assert (=> mapNonEmpty!3181 m!71161))

(declare-fun condMapEmpty!3182 () Bool)

(declare-fun mapDefault!3182 () ValueCell!893)

(assert (=> mapNonEmpty!3166 (= condMapEmpty!3182 (= mapRest!3166 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3182)))))

(declare-fun e!47828 () Bool)

(declare-fun mapRes!3182 () Bool)

(assert (=> mapNonEmpty!3166 (= tp!8516 (and e!47828 mapRes!3182))))

(declare-fun b!73105 () Bool)

(assert (=> b!73105 (= e!47828 tp_is_empty!2473)))

(declare-fun b!73104 () Bool)

(declare-fun e!47829 () Bool)

(assert (=> b!73104 (= e!47829 tp_is_empty!2473)))

(declare-fun mapIsEmpty!3182 () Bool)

(assert (=> mapIsEmpty!3182 mapRes!3182))

(declare-fun mapNonEmpty!3182 () Bool)

(declare-fun tp!8546 () Bool)

(assert (=> mapNonEmpty!3182 (= mapRes!3182 (and tp!8546 e!47829))))

(declare-fun mapRest!3182 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapValue!3182 () ValueCell!893)

(declare-fun mapKey!3182 () (_ BitVec 32))

(assert (=> mapNonEmpty!3182 (= mapRest!3166 (store mapRest!3182 mapKey!3182 mapValue!3182))))

(assert (= (and mapNonEmpty!3166 condMapEmpty!3182) mapIsEmpty!3182))

(assert (= (and mapNonEmpty!3166 (not condMapEmpty!3182)) mapNonEmpty!3182))

(assert (= (and mapNonEmpty!3182 ((_ is ValueCellFull!893) mapValue!3182)) b!73104))

(assert (= (and mapNonEmpty!3166 ((_ is ValueCellFull!893) mapDefault!3182)) b!73105))

(declare-fun m!71163 () Bool)

(assert (=> mapNonEmpty!3182 m!71163))

(declare-fun b_lambda!3273 () Bool)

(assert (= b_lambda!3271 (or (and b!72681 b_free!2113) (and b!72667 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))) b_lambda!3273)))

(declare-fun b_lambda!3275 () Bool)

(assert (= b_lambda!3267 (or (and b!72681 b_free!2113) (and b!72667 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))) b_lambda!3275)))

(declare-fun b_lambda!3277 () Bool)

(assert (= b_lambda!3269 (or (and b!72681 b_free!2113) (and b!72667 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))) b_lambda!3277)))

(check-sat (not bm!6381) (not b!72946) (not bm!6424) (not b!72948) (not bm!6398) (not b!73095) (not b!73086) (not d!16777) (not b!73088) (not b!72830) (not d!16771) (not b!72818) (not b!73094) (not b_lambda!3265) (not b!72978) (not b!73089) (not d!16775) (not b!73032) (not b!72842) (not bm!6417) (not b!73084) (not b!73040) (not b!73092) (not b_lambda!3275) (not b!73054) (not bm!6416) (not b_lambda!3277) (not b!72958) (not b!73052) (not b!72843) (not d!16739) (not b!73080) (not d!16765) (not bm!6399) (not b!72984) (not b!73090) (not bm!6421) (not b!73083) (not b!72949) (not bm!6386) (not mapNonEmpty!3181) (not b!72983) (not b!73087) (not d!16753) (not d!16747) (not b!72852) (not b!73037) (not b!72841) (not bm!6419) (not b!73055) (not bm!6382) (not d!16767) (not b!72831) (not d!16779) (not bm!6396) (not mapNonEmpty!3182) (not d!16743) (not bm!6388) (not d!16755) (not b!72965) (not b!72833) (not bm!6400) tp_is_empty!2473 (not b!72975) (not b!73093) (not b!72813) (not bm!6389) (not b_lambda!3273) (not b!73035) (not b!73044) (not b!73039) (not bm!6377) (not bm!6328) (not b!73038) (not bm!6385) (not b!73053) (not d!16773) (not b_next!2113) (not b!73045) (not b!72962) (not b!72850) (not d!16737) (not bm!6393) (not d!16769) b_and!4483 (not b_next!2115) (not d!16761) b_and!4481)
(check-sat b_and!4481 b_and!4483 (not b_next!2113) (not b_next!2115))
(get-model)

(declare-fun b!73114 () Bool)

(declare-fun e!47834 () Option!137)

(assert (=> b!73114 (= e!47834 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32668)))))))

(declare-fun b!73117 () Bool)

(declare-fun e!47835 () Option!137)

(assert (=> b!73117 (= e!47835 None!135)))

(declare-fun b!73116 () Bool)

(assert (=> b!73116 (= e!47835 (getValueByKey!131 (t!5031 (toList!717 lt!32668)) (_1!1071 lt!32383)))))

(declare-fun d!16783 () Bool)

(declare-fun c!10840 () Bool)

(assert (=> d!16783 (= c!10840 (and ((_ is Cons!1479) (toList!717 lt!32668)) (= (_1!1071 (h!2066 (toList!717 lt!32668))) (_1!1071 lt!32383))))))

(assert (=> d!16783 (= (getValueByKey!131 (toList!717 lt!32668) (_1!1071 lt!32383)) e!47834)))

(declare-fun b!73115 () Bool)

(assert (=> b!73115 (= e!47834 e!47835)))

(declare-fun c!10841 () Bool)

(assert (=> b!73115 (= c!10841 (and ((_ is Cons!1479) (toList!717 lt!32668)) (not (= (_1!1071 (h!2066 (toList!717 lt!32668))) (_1!1071 lt!32383)))))))

(assert (= (and d!16783 c!10840) b!73114))

(assert (= (and d!16783 (not c!10840)) b!73115))

(assert (= (and b!73115 c!10841) b!73116))

(assert (= (and b!73115 (not c!10841)) b!73117))

(declare-fun m!71165 () Bool)

(assert (=> b!73116 m!71165))

(assert (=> b!73092 d!16783))

(declare-fun d!16785 () Bool)

(assert (=> d!16785 (= (map!1150 (_2!1072 lt!32534)) (getCurrentListMap!410 (_keys!3863 (_2!1072 lt!32534)) (_values!2195 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534)) (extraKeys!2071 (_2!1072 lt!32534)) (zeroValue!2114 (_2!1072 lt!32534)) (minValue!2114 (_2!1072 lt!32534)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32534))))))

(declare-fun bs!3134 () Bool)

(assert (= bs!3134 d!16785))

(declare-fun m!71167 () Bool)

(assert (=> bs!3134 m!71167))

(assert (=> bm!6385 d!16785))

(declare-fun d!16787 () Bool)

(declare-fun res!38784 () Bool)

(declare-fun e!47836 () Bool)

(assert (=> d!16787 (=> res!38784 e!47836)))

(assert (=> d!16787 (= res!38784 (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!16787 (= (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!47836)))

(declare-fun b!73118 () Bool)

(declare-fun e!47837 () Bool)

(assert (=> b!73118 (= e!47836 e!47837)))

(declare-fun res!38785 () Bool)

(assert (=> b!73118 (=> (not res!38785) (not e!47837))))

(assert (=> b!73118 (= res!38785 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73119 () Bool)

(assert (=> b!73119 (= e!47837 (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!16787 (not res!38784)) b!73118))

(assert (= (and b!73118 res!38785) b!73119))

(declare-fun m!71169 () Bool)

(assert (=> d!16787 m!71169))

(assert (=> b!73119 m!70791))

(declare-fun m!71171 () Bool)

(assert (=> b!73119 m!71171))

(assert (=> b!72813 d!16787))

(declare-fun b!73120 () Bool)

(assert (=> b!73120 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> b!73120 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2086 (_values!2195 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun e!47838 () Bool)

(declare-fun lt!32678 () ListLongMap!1403)

(assert (=> b!73120 (= e!47838 (= (apply!75 lt!32678 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73121 () Bool)

(declare-fun e!47840 () ListLongMap!1403)

(declare-fun call!6428 () ListLongMap!1403)

(assert (=> b!73121 (= e!47840 call!6428)))

(declare-fun b!73122 () Bool)

(declare-fun e!47843 () Bool)

(declare-fun e!47841 () Bool)

(assert (=> b!73122 (= e!47843 e!47841)))

(declare-fun c!10845 () Bool)

(declare-fun e!47839 () Bool)

(assert (=> b!73122 (= c!10845 e!47839)))

(declare-fun res!38787 () Bool)

(assert (=> b!73122 (=> (not res!38787) (not e!47839))))

(assert (=> b!73122 (= res!38787 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73123 () Bool)

(assert (=> b!73123 (= e!47839 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!73123 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!73124 () Bool)

(declare-fun e!47842 () Bool)

(assert (=> b!73124 (= e!47842 (isEmpty!320 lt!32678))))

(declare-fun b!73125 () Bool)

(assert (=> b!73125 (= e!47841 e!47842)))

(declare-fun c!10843 () Bool)

(assert (=> b!73125 (= c!10843 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73126 () Bool)

(assert (=> b!73126 (= e!47841 e!47838)))

(assert (=> b!73126 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun res!38786 () Bool)

(assert (=> b!73126 (= res!38786 (contains!719 lt!32678 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!73126 (=> (not res!38786) (not e!47838))))

(declare-fun b!73128 () Bool)

(declare-fun e!47844 () ListLongMap!1403)

(assert (=> b!73128 (= e!47844 e!47840)))

(declare-fun c!10842 () Bool)

(assert (=> b!73128 (= c!10842 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73129 () Bool)

(declare-fun lt!32676 () Unit!2066)

(declare-fun lt!32680 () Unit!2066)

(assert (=> b!73129 (= lt!32676 lt!32680)))

(declare-fun lt!32677 () V!2945)

(declare-fun lt!32674 () (_ BitVec 64))

(declare-fun lt!32679 () ListLongMap!1403)

(declare-fun lt!32675 () (_ BitVec 64))

(assert (=> b!73129 (not (contains!719 (+!93 lt!32679 (tuple2!2121 lt!32674 lt!32677)) lt!32675))))

(assert (=> b!73129 (= lt!32680 (addStillNotContains!25 lt!32679 lt!32674 lt!32677 lt!32675))))

(assert (=> b!73129 (= lt!32675 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73129 (= lt!32677 (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73129 (= lt!32674 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!73129 (= lt!32679 call!6428)))

(assert (=> b!73129 (= e!47840 (+!93 call!6428 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!6425 () Bool)

(assert (=> bm!6425 (= call!6428 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun b!73130 () Bool)

(assert (=> b!73130 (= e!47842 (= lt!32678 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73131 () Bool)

(assert (=> b!73131 (= e!47844 (ListLongMap!1404 Nil!1480))))

(declare-fun b!73127 () Bool)

(declare-fun res!38788 () Bool)

(assert (=> b!73127 (=> (not res!38788) (not e!47843))))

(assert (=> b!73127 (= res!38788 (not (contains!719 lt!32678 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!16789 () Bool)

(assert (=> d!16789 e!47843))

(declare-fun res!38789 () Bool)

(assert (=> d!16789 (=> (not res!38789) (not e!47843))))

(assert (=> d!16789 (= res!38789 (not (contains!719 lt!32678 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16789 (= lt!32678 e!47844)))

(declare-fun c!10844 () Bool)

(assert (=> d!16789 (= c!10844 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!16789 (validMask!0 (mask!6178 (v!2523 (underlying!256 thiss!992))))))

(assert (=> d!16789 (= (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))) lt!32678)))

(assert (= (and d!16789 c!10844) b!73131))

(assert (= (and d!16789 (not c!10844)) b!73128))

(assert (= (and b!73128 c!10842) b!73129))

(assert (= (and b!73128 (not c!10842)) b!73121))

(assert (= (or b!73129 b!73121) bm!6425))

(assert (= (and d!16789 res!38789) b!73127))

(assert (= (and b!73127 res!38788) b!73122))

(assert (= (and b!73122 res!38787) b!73123))

(assert (= (and b!73122 c!10845) b!73126))

(assert (= (and b!73122 (not c!10845)) b!73125))

(assert (= (and b!73126 res!38786) b!73120))

(assert (= (and b!73125 c!10843) b!73130))

(assert (= (and b!73125 (not c!10843)) b!73124))

(declare-fun b_lambda!3279 () Bool)

(assert (=> (not b_lambda!3279) (not b!73120)))

(assert (=> b!73120 t!5028))

(declare-fun b_and!4485 () Bool)

(assert (= b_and!4481 (and (=> t!5028 result!2669) b_and!4485)))

(assert (=> b!73120 t!5030))

(declare-fun b_and!4487 () Bool)

(assert (= b_and!4483 (and (=> t!5030 result!2673) b_and!4487)))

(declare-fun b_lambda!3281 () Bool)

(assert (=> (not b_lambda!3281) (not b!73129)))

(assert (=> b!73129 t!5028))

(declare-fun b_and!4489 () Bool)

(assert (= b_and!4485 (and (=> t!5028 result!2669) b_and!4489)))

(assert (=> b!73129 t!5030))

(declare-fun b_and!4491 () Bool)

(assert (= b_and!4487 (and (=> t!5030 result!2673) b_and!4491)))

(assert (=> b!73123 m!71169))

(assert (=> b!73123 m!71169))

(declare-fun m!71173 () Bool)

(assert (=> b!73123 m!71173))

(assert (=> b!73120 m!70809))

(assert (=> b!73120 m!71169))

(declare-fun m!71175 () Bool)

(assert (=> b!73120 m!71175))

(assert (=> b!73120 m!71169))

(declare-fun m!71177 () Bool)

(assert (=> b!73120 m!71177))

(assert (=> b!73120 m!70809))

(declare-fun m!71179 () Bool)

(assert (=> b!73120 m!71179))

(assert (=> b!73120 m!71177))

(declare-fun m!71181 () Bool)

(assert (=> b!73129 m!71181))

(assert (=> b!73129 m!70809))

(declare-fun m!71183 () Bool)

(assert (=> b!73129 m!71183))

(assert (=> b!73129 m!71169))

(assert (=> b!73129 m!71177))

(declare-fun m!71185 () Bool)

(assert (=> b!73129 m!71185))

(assert (=> b!73129 m!71181))

(declare-fun m!71187 () Bool)

(assert (=> b!73129 m!71187))

(assert (=> b!73129 m!71177))

(assert (=> b!73129 m!70809))

(assert (=> b!73129 m!71179))

(declare-fun m!71189 () Bool)

(assert (=> bm!6425 m!71189))

(assert (=> b!73130 m!71189))

(declare-fun m!71191 () Bool)

(assert (=> b!73124 m!71191))

(declare-fun m!71193 () Bool)

(assert (=> d!16789 m!71193))

(assert (=> d!16789 m!70779))

(assert (=> b!73128 m!71169))

(assert (=> b!73128 m!71169))

(assert (=> b!73128 m!71173))

(declare-fun m!71195 () Bool)

(assert (=> b!73127 m!71195))

(assert (=> b!73126 m!71169))

(assert (=> b!73126 m!71169))

(declare-fun m!71197 () Bool)

(assert (=> b!73126 m!71197))

(assert (=> bm!6424 d!16789))

(declare-fun d!16791 () Bool)

(declare-fun e!47845 () Bool)

(assert (=> d!16791 e!47845))

(declare-fun res!38791 () Bool)

(assert (=> d!16791 (=> (not res!38791) (not e!47845))))

(declare-fun lt!32683 () ListLongMap!1403)

(assert (=> d!16791 (= res!38791 (contains!719 lt!32683 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!32684 () List!1483)

(assert (=> d!16791 (= lt!32683 (ListLongMap!1404 lt!32684))))

(declare-fun lt!32682 () Unit!2066)

(declare-fun lt!32681 () Unit!2066)

(assert (=> d!16791 (= lt!32682 lt!32681)))

(assert (=> d!16791 (= (getValueByKey!131 lt!32684 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16791 (= lt!32681 (lemmaContainsTupThenGetReturnValue!51 lt!32684 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16791 (= lt!32684 (insertStrictlySorted!54 (toList!717 call!6418) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16791 (= (+!93 call!6418 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32683)))

(declare-fun b!73132 () Bool)

(declare-fun res!38790 () Bool)

(assert (=> b!73132 (=> (not res!38790) (not e!47845))))

(assert (=> b!73132 (= res!38790 (= (getValueByKey!131 (toList!717 lt!32683) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!73133 () Bool)

(assert (=> b!73133 (= e!47845 (contains!722 (toList!717 lt!32683) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!16791 res!38791) b!73132))

(assert (= (and b!73132 res!38790) b!73133))

(declare-fun m!71199 () Bool)

(assert (=> d!16791 m!71199))

(declare-fun m!71201 () Bool)

(assert (=> d!16791 m!71201))

(declare-fun m!71203 () Bool)

(assert (=> d!16791 m!71203))

(declare-fun m!71205 () Bool)

(assert (=> d!16791 m!71205))

(declare-fun m!71207 () Bool)

(assert (=> b!73132 m!71207))

(declare-fun m!71209 () Bool)

(assert (=> b!73133 m!71209))

(assert (=> b!73040 d!16791))

(assert (=> d!16767 d!16781))

(declare-fun d!16793 () Bool)

(assert (=> d!16793 (= (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73088 d!16793))

(declare-fun d!16795 () Bool)

(declare-fun e!47847 () Bool)

(assert (=> d!16795 e!47847))

(declare-fun res!38792 () Bool)

(assert (=> d!16795 (=> res!38792 e!47847)))

(declare-fun lt!32688 () Bool)

(assert (=> d!16795 (= res!38792 (not lt!32688))))

(declare-fun lt!32686 () Bool)

(assert (=> d!16795 (= lt!32688 lt!32686)))

(declare-fun lt!32685 () Unit!2066)

(declare-fun e!47846 () Unit!2066)

(assert (=> d!16795 (= lt!32685 e!47846)))

(declare-fun c!10846 () Bool)

(assert (=> d!16795 (= c!10846 lt!32686)))

(assert (=> d!16795 (= lt!32686 (containsKey!135 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16795 (= (contains!719 lt!32604 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32688)))

(declare-fun b!73134 () Bool)

(declare-fun lt!32687 () Unit!2066)

(assert (=> b!73134 (= e!47846 lt!32687)))

(assert (=> b!73134 (= lt!32687 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73134 (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73135 () Bool)

(declare-fun Unit!2080 () Unit!2066)

(assert (=> b!73135 (= e!47846 Unit!2080)))

(declare-fun b!73136 () Bool)

(assert (=> b!73136 (= e!47847 (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16795 c!10846) b!73134))

(assert (= (and d!16795 (not c!10846)) b!73135))

(assert (= (and d!16795 (not res!38792)) b!73136))

(declare-fun m!71211 () Bool)

(assert (=> d!16795 m!71211))

(declare-fun m!71213 () Bool)

(assert (=> b!73134 m!71213))

(declare-fun m!71215 () Bool)

(assert (=> b!73134 m!71215))

(assert (=> b!73134 m!71215))

(declare-fun m!71217 () Bool)

(assert (=> b!73134 m!71217))

(assert (=> b!73136 m!71215))

(assert (=> b!73136 m!71215))

(assert (=> b!73136 m!71217))

(assert (=> bm!6419 d!16795))

(declare-fun d!16797 () Bool)

(assert (=> d!16797 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32559 lt!32380 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32691 () Unit!2066)

(declare-fun choose!419 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 V!2945 Int) Unit!2066)

(assert (=> d!16797 (= lt!32691 (choose!419 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) lt!32559 (zeroValue!2114 newMap!16) lt!32380 (minValue!2114 newMap!16) (defaultEntry!2212 newMap!16)))))

(assert (=> d!16797 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16797 (= (lemmaChangeZeroKeyThenAddPairToListMap!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) lt!32559 (zeroValue!2114 newMap!16) lt!32380 (minValue!2114 newMap!16) (defaultEntry!2212 newMap!16)) lt!32691)))

(declare-fun bs!3135 () Bool)

(assert (= bs!3135 d!16797))

(declare-fun m!71219 () Bool)

(assert (=> bs!3135 m!71219))

(assert (=> bs!3135 m!70991))

(declare-fun m!71221 () Bool)

(assert (=> bs!3135 m!71221))

(declare-fun m!71223 () Bool)

(assert (=> bs!3135 m!71223))

(declare-fun m!71225 () Bool)

(assert (=> bs!3135 m!71225))

(assert (=> bs!3135 m!70991))

(assert (=> b!72958 d!16797))

(declare-fun b!73137 () Bool)

(declare-fun e!47848 () Bool)

(declare-fun e!47851 () Bool)

(assert (=> b!73137 (= e!47848 e!47851)))

(declare-fun res!38793 () Bool)

(assert (=> b!73137 (=> (not res!38793) (not e!47851))))

(declare-fun e!47850 () Bool)

(assert (=> b!73137 (= res!38793 (not e!47850))))

(declare-fun res!38794 () Bool)

(assert (=> b!73137 (=> (not res!38794) (not e!47850))))

(assert (=> b!73137 (= res!38794 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun c!10847 () Bool)

(declare-fun bm!6426 () Bool)

(declare-fun call!6429 () Bool)

(assert (=> bm!6426 (= call!6429 (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10847 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481))))))

(declare-fun d!16799 () Bool)

(declare-fun res!38795 () Bool)

(assert (=> d!16799 (=> res!38795 e!47848)))

(assert (=> d!16799 (= res!38795 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!16799 (= (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)) e!47848)))

(declare-fun b!73138 () Bool)

(declare-fun e!47849 () Bool)

(assert (=> b!73138 (= e!47851 e!47849)))

(assert (=> b!73138 (= c!10847 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73139 () Bool)

(assert (=> b!73139 (= e!47849 call!6429)))

(declare-fun b!73140 () Bool)

(assert (=> b!73140 (= e!47850 (contains!721 (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!73141 () Bool)

(assert (=> b!73141 (= e!47849 call!6429)))

(assert (= (and d!16799 (not res!38795)) b!73137))

(assert (= (and b!73137 res!38794) b!73140))

(assert (= (and b!73137 res!38793) b!73138))

(assert (= (and b!73138 c!10847) b!73141))

(assert (= (and b!73138 (not c!10847)) b!73139))

(assert (= (or b!73141 b!73139) bm!6426))

(declare-fun m!71227 () Bool)

(assert (=> b!73137 m!71227))

(assert (=> b!73137 m!71227))

(declare-fun m!71229 () Bool)

(assert (=> b!73137 m!71229))

(assert (=> bm!6426 m!71227))

(declare-fun m!71231 () Bool)

(assert (=> bm!6426 m!71231))

(assert (=> b!73138 m!71227))

(assert (=> b!73138 m!71227))

(assert (=> b!73138 m!71229))

(assert (=> b!73140 m!71227))

(assert (=> b!73140 m!71227))

(declare-fun m!71233 () Bool)

(assert (=> b!73140 m!71233))

(assert (=> bm!6328 d!16799))

(assert (=> d!16739 d!16745))

(declare-fun d!16801 () Bool)

(assert (=> d!16801 (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) from!355 Nil!1481)))

(assert (=> d!16801 true))

(declare-fun _$71!96 () Unit!2066)

(assert (=> d!16801 (= (choose!39 (_keys!3863 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!96)))

(declare-fun bs!3136 () Bool)

(assert (= bs!3136 d!16801))

(assert (=> bs!3136 m!70815))

(assert (=> d!16739 d!16801))

(declare-fun d!16803 () Bool)

(declare-fun e!47853 () Bool)

(assert (=> d!16803 e!47853))

(declare-fun res!38796 () Bool)

(assert (=> d!16803 (=> res!38796 e!47853)))

(declare-fun lt!32695 () Bool)

(assert (=> d!16803 (= res!38796 (not lt!32695))))

(declare-fun lt!32693 () Bool)

(assert (=> d!16803 (= lt!32695 lt!32693)))

(declare-fun lt!32692 () Unit!2066)

(declare-fun e!47852 () Unit!2066)

(assert (=> d!16803 (= lt!32692 e!47852)))

(declare-fun c!10848 () Bool)

(assert (=> d!16803 (= c!10848 lt!32693)))

(assert (=> d!16803 (= lt!32693 (containsKey!135 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!16803 (= (contains!719 call!6396 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) lt!32695)))

(declare-fun b!73142 () Bool)

(declare-fun lt!32694 () Unit!2066)

(assert (=> b!73142 (= e!47852 lt!32694)))

(assert (=> b!73142 (= lt!32694 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> b!73142 (isDefined!85 (getValueByKey!131 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!73143 () Bool)

(declare-fun Unit!2081 () Unit!2066)

(assert (=> b!73143 (= e!47852 Unit!2081)))

(declare-fun b!73144 () Bool)

(assert (=> b!73144 (= e!47853 (isDefined!85 (getValueByKey!131 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (= (and d!16803 c!10848) b!73142))

(assert (= (and d!16803 (not c!10848)) b!73143))

(assert (= (and d!16803 (not res!38796)) b!73144))

(assert (=> d!16803 m!70791))

(declare-fun m!71235 () Bool)

(assert (=> d!16803 m!71235))

(assert (=> b!73142 m!70791))

(declare-fun m!71237 () Bool)

(assert (=> b!73142 m!71237))

(assert (=> b!73142 m!70791))

(declare-fun m!71239 () Bool)

(assert (=> b!73142 m!71239))

(assert (=> b!73142 m!71239))

(declare-fun m!71241 () Bool)

(assert (=> b!73142 m!71241))

(assert (=> b!73144 m!70791))

(assert (=> b!73144 m!71239))

(assert (=> b!73144 m!71239))

(assert (=> b!73144 m!71241))

(assert (=> b!72948 d!16803))

(declare-fun d!16805 () Bool)

(declare-fun e!47856 () Bool)

(assert (=> d!16805 e!47856))

(declare-fun c!10851 () Bool)

(assert (=> d!16805 (= c!10851 (and (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!16805 true))

(declare-fun _$29!90 () Unit!2066)

(assert (=> d!16805 (= (choose!417 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))) _$29!90)))

(declare-fun b!73149 () Bool)

(assert (=> b!73149 (= e!47856 (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!73150 () Bool)

(assert (=> b!73150 (= e!47856 (ite (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!16805 c!10851) b!73149))

(assert (= (and d!16805 (not c!10851)) b!73150))

(assert (=> b!73149 m!70791))

(assert (=> b!73149 m!70819))

(assert (=> d!16743 d!16805))

(assert (=> d!16743 d!16781))

(declare-fun d!16807 () Bool)

(declare-fun e!47858 () Bool)

(assert (=> d!16807 e!47858))

(declare-fun res!38797 () Bool)

(assert (=> d!16807 (=> res!38797 e!47858)))

(declare-fun lt!32699 () Bool)

(assert (=> d!16807 (= res!38797 (not lt!32699))))

(declare-fun lt!32697 () Bool)

(assert (=> d!16807 (= lt!32699 lt!32697)))

(declare-fun lt!32696 () Unit!2066)

(declare-fun e!47857 () Unit!2066)

(assert (=> d!16807 (= lt!32696 e!47857)))

(declare-fun c!10852 () Bool)

(assert (=> d!16807 (= c!10852 lt!32697)))

(assert (=> d!16807 (= lt!32697 (containsKey!135 (toList!717 lt!32639) (_1!1071 lt!32376)))))

(assert (=> d!16807 (= (contains!719 lt!32639 (_1!1071 lt!32376)) lt!32699)))

(declare-fun b!73151 () Bool)

(declare-fun lt!32698 () Unit!2066)

(assert (=> b!73151 (= e!47857 lt!32698)))

(assert (=> b!73151 (= lt!32698 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32639) (_1!1071 lt!32376)))))

(assert (=> b!73151 (isDefined!85 (getValueByKey!131 (toList!717 lt!32639) (_1!1071 lt!32376)))))

(declare-fun b!73152 () Bool)

(declare-fun Unit!2082 () Unit!2066)

(assert (=> b!73152 (= e!47857 Unit!2082)))

(declare-fun b!73153 () Bool)

(assert (=> b!73153 (= e!47858 (isDefined!85 (getValueByKey!131 (toList!717 lt!32639) (_1!1071 lt!32376))))))

(assert (= (and d!16807 c!10852) b!73151))

(assert (= (and d!16807 (not c!10852)) b!73152))

(assert (= (and d!16807 (not res!38797)) b!73153))

(declare-fun m!71243 () Bool)

(assert (=> d!16807 m!71243))

(declare-fun m!71245 () Bool)

(assert (=> b!73151 m!71245))

(assert (=> b!73151 m!71101))

(assert (=> b!73151 m!71101))

(declare-fun m!71247 () Bool)

(assert (=> b!73151 m!71247))

(assert (=> b!73153 m!71101))

(assert (=> b!73153 m!71101))

(assert (=> b!73153 m!71247))

(assert (=> d!16771 d!16807))

(declare-fun b!73154 () Bool)

(declare-fun e!47859 () Option!137)

(assert (=> b!73154 (= e!47859 (Some!136 (_2!1071 (h!2066 lt!32640))))))

(declare-fun b!73157 () Bool)

(declare-fun e!47860 () Option!137)

(assert (=> b!73157 (= e!47860 None!135)))

(declare-fun b!73156 () Bool)

(assert (=> b!73156 (= e!47860 (getValueByKey!131 (t!5031 lt!32640) (_1!1071 lt!32376)))))

(declare-fun d!16809 () Bool)

(declare-fun c!10853 () Bool)

(assert (=> d!16809 (= c!10853 (and ((_ is Cons!1479) lt!32640) (= (_1!1071 (h!2066 lt!32640)) (_1!1071 lt!32376))))))

(assert (=> d!16809 (= (getValueByKey!131 lt!32640 (_1!1071 lt!32376)) e!47859)))

(declare-fun b!73155 () Bool)

(assert (=> b!73155 (= e!47859 e!47860)))

(declare-fun c!10854 () Bool)

(assert (=> b!73155 (= c!10854 (and ((_ is Cons!1479) lt!32640) (not (= (_1!1071 (h!2066 lt!32640)) (_1!1071 lt!32376)))))))

(assert (= (and d!16809 c!10853) b!73154))

(assert (= (and d!16809 (not c!10853)) b!73155))

(assert (= (and b!73155 c!10854) b!73156))

(assert (= (and b!73155 (not c!10854)) b!73157))

(declare-fun m!71249 () Bool)

(assert (=> b!73156 m!71249))

(assert (=> d!16771 d!16809))

(declare-fun d!16811 () Bool)

(assert (=> d!16811 (= (getValueByKey!131 lt!32640 (_1!1071 lt!32376)) (Some!136 (_2!1071 lt!32376)))))

(declare-fun lt!32702 () Unit!2066)

(declare-fun choose!420 (List!1483 (_ BitVec 64) V!2945) Unit!2066)

(assert (=> d!16811 (= lt!32702 (choose!420 lt!32640 (_1!1071 lt!32376) (_2!1071 lt!32376)))))

(declare-fun e!47863 () Bool)

(assert (=> d!16811 e!47863))

(declare-fun res!38802 () Bool)

(assert (=> d!16811 (=> (not res!38802) (not e!47863))))

(declare-fun isStrictlySorted!287 (List!1483) Bool)

(assert (=> d!16811 (= res!38802 (isStrictlySorted!287 lt!32640))))

(assert (=> d!16811 (= (lemmaContainsTupThenGetReturnValue!51 lt!32640 (_1!1071 lt!32376) (_2!1071 lt!32376)) lt!32702)))

(declare-fun b!73162 () Bool)

(declare-fun res!38803 () Bool)

(assert (=> b!73162 (=> (not res!38803) (not e!47863))))

(assert (=> b!73162 (= res!38803 (containsKey!135 lt!32640 (_1!1071 lt!32376)))))

(declare-fun b!73163 () Bool)

(assert (=> b!73163 (= e!47863 (contains!722 lt!32640 (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(assert (= (and d!16811 res!38802) b!73162))

(assert (= (and b!73162 res!38803) b!73163))

(assert (=> d!16811 m!71095))

(declare-fun m!71251 () Bool)

(assert (=> d!16811 m!71251))

(declare-fun m!71253 () Bool)

(assert (=> d!16811 m!71253))

(declare-fun m!71255 () Bool)

(assert (=> b!73162 m!71255))

(declare-fun m!71257 () Bool)

(assert (=> b!73163 m!71257))

(assert (=> d!16771 d!16811))

(declare-fun d!16813 () Bool)

(declare-fun e!47876 () Bool)

(assert (=> d!16813 e!47876))

(declare-fun res!38809 () Bool)

(assert (=> d!16813 (=> (not res!38809) (not e!47876))))

(declare-fun lt!32705 () List!1483)

(assert (=> d!16813 (= res!38809 (isStrictlySorted!287 lt!32705))))

(declare-fun e!47878 () List!1483)

(assert (=> d!16813 (= lt!32705 e!47878)))

(declare-fun c!10865 () Bool)

(assert (=> d!16813 (= c!10865 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 lt!32383))) (bvslt (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 lt!32383)))) (_1!1071 lt!32376))))))

(assert (=> d!16813 (isStrictlySorted!287 (toList!717 (+!93 lt!32377 lt!32383)))))

(assert (=> d!16813 (= (insertStrictlySorted!54 (toList!717 (+!93 lt!32377 lt!32383)) (_1!1071 lt!32376) (_2!1071 lt!32376)) lt!32705)))

(declare-fun b!73184 () Bool)

(declare-fun res!38808 () Bool)

(assert (=> b!73184 (=> (not res!38808) (not e!47876))))

(assert (=> b!73184 (= res!38808 (containsKey!135 lt!32705 (_1!1071 lt!32376)))))

(declare-fun b!73185 () Bool)

(declare-fun e!47877 () List!1483)

(declare-fun call!6438 () List!1483)

(assert (=> b!73185 (= e!47877 call!6438)))

(declare-fun bm!6433 () Bool)

(declare-fun call!6436 () List!1483)

(declare-fun call!6437 () List!1483)

(assert (=> bm!6433 (= call!6436 call!6437)))

(declare-fun b!73186 () Bool)

(assert (=> b!73186 (= e!47878 call!6437)))

(declare-fun e!47874 () List!1483)

(declare-fun b!73187 () Bool)

(assert (=> b!73187 (= e!47874 (insertStrictlySorted!54 (t!5031 (toList!717 (+!93 lt!32377 lt!32383))) (_1!1071 lt!32376) (_2!1071 lt!32376)))))

(declare-fun b!73188 () Bool)

(assert (=> b!73188 (= e!47877 call!6438)))

(declare-fun b!73189 () Bool)

(assert (=> b!73189 (= e!47876 (contains!722 lt!32705 (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun c!10863 () Bool)

(declare-fun b!73190 () Bool)

(assert (=> b!73190 (= c!10863 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 lt!32383))) (bvsgt (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 lt!32383)))) (_1!1071 lt!32376))))))

(declare-fun e!47875 () List!1483)

(assert (=> b!73190 (= e!47875 e!47877)))

(declare-fun bm!6434 () Bool)

(declare-fun $colon$colon!65 (List!1483 tuple2!2120) List!1483)

(assert (=> bm!6434 (= call!6437 ($colon$colon!65 e!47874 (ite c!10865 (h!2066 (toList!717 (+!93 lt!32377 lt!32383))) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376)))))))

(declare-fun c!10866 () Bool)

(assert (=> bm!6434 (= c!10866 c!10865)))

(declare-fun bm!6435 () Bool)

(assert (=> bm!6435 (= call!6438 call!6436)))

(declare-fun b!73191 () Bool)

(assert (=> b!73191 (= e!47878 e!47875)))

(declare-fun c!10864 () Bool)

(assert (=> b!73191 (= c!10864 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 lt!32383))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 lt!32383)))) (_1!1071 lt!32376))))))

(declare-fun b!73192 () Bool)

(assert (=> b!73192 (= e!47875 call!6436)))

(declare-fun b!73193 () Bool)

(assert (=> b!73193 (= e!47874 (ite c!10864 (t!5031 (toList!717 (+!93 lt!32377 lt!32383))) (ite c!10863 (Cons!1479 (h!2066 (toList!717 (+!93 lt!32377 lt!32383))) (t!5031 (toList!717 (+!93 lt!32377 lt!32383)))) Nil!1480)))))

(assert (= (and d!16813 c!10865) b!73186))

(assert (= (and d!16813 (not c!10865)) b!73191))

(assert (= (and b!73191 c!10864) b!73192))

(assert (= (and b!73191 (not c!10864)) b!73190))

(assert (= (and b!73190 c!10863) b!73188))

(assert (= (and b!73190 (not c!10863)) b!73185))

(assert (= (or b!73188 b!73185) bm!6435))

(assert (= (or b!73192 bm!6435) bm!6433))

(assert (= (or b!73186 bm!6433) bm!6434))

(assert (= (and bm!6434 c!10866) b!73187))

(assert (= (and bm!6434 (not c!10866)) b!73193))

(assert (= (and d!16813 res!38809) b!73184))

(assert (= (and b!73184 res!38808) b!73189))

(declare-fun m!71259 () Bool)

(assert (=> bm!6434 m!71259))

(declare-fun m!71261 () Bool)

(assert (=> d!16813 m!71261))

(declare-fun m!71263 () Bool)

(assert (=> d!16813 m!71263))

(declare-fun m!71265 () Bool)

(assert (=> b!73187 m!71265))

(declare-fun m!71267 () Bool)

(assert (=> b!73189 m!71267))

(declare-fun m!71269 () Bool)

(assert (=> b!73184 m!71269))

(assert (=> d!16771 d!16813))

(declare-fun d!16815 () Bool)

(declare-fun res!38810 () Bool)

(declare-fun e!47879 () Bool)

(assert (=> d!16815 (=> (not res!38810) (not e!47879))))

(assert (=> d!16815 (= res!38810 (simpleValid!51 (v!2523 (underlying!256 thiss!992))))))

(assert (=> d!16815 (= (valid!300 (v!2523 (underlying!256 thiss!992))) e!47879)))

(declare-fun b!73194 () Bool)

(declare-fun res!38811 () Bool)

(assert (=> b!73194 (=> (not res!38811) (not e!47879))))

(assert (=> b!73194 (= res!38811 (= (arrayCountValidKeys!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000 (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))) (_size!396 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun b!73195 () Bool)

(declare-fun res!38812 () Bool)

(assert (=> b!73195 (=> (not res!38812) (not e!47879))))

(assert (=> b!73195 (= res!38812 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun b!73196 () Bool)

(assert (=> b!73196 (= e!47879 (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000 Nil!1481))))

(assert (= (and d!16815 res!38810) b!73194))

(assert (= (and b!73194 res!38811) b!73195))

(assert (= (and b!73195 res!38812) b!73196))

(declare-fun m!71271 () Bool)

(assert (=> d!16815 m!71271))

(declare-fun m!71273 () Bool)

(assert (=> b!73194 m!71273))

(declare-fun m!71275 () Bool)

(assert (=> b!73195 m!71275))

(declare-fun m!71277 () Bool)

(assert (=> b!73196 m!71277))

(assert (=> d!16761 d!16815))

(declare-fun d!16817 () Bool)

(declare-fun e!47880 () Bool)

(assert (=> d!16817 e!47880))

(declare-fun res!38814 () Bool)

(assert (=> d!16817 (=> (not res!38814) (not e!47880))))

(declare-fun lt!32708 () ListLongMap!1403)

(assert (=> d!16817 (= res!38814 (contains!719 lt!32708 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun lt!32709 () List!1483)

(assert (=> d!16817 (= lt!32708 (ListLongMap!1404 lt!32709))))

(declare-fun lt!32707 () Unit!2066)

(declare-fun lt!32706 () Unit!2066)

(assert (=> d!16817 (= lt!32707 lt!32706)))

(assert (=> d!16817 (= (getValueByKey!131 lt!32709 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!16817 (= lt!32706 (lemmaContainsTupThenGetReturnValue!51 lt!32709 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!16817 (= lt!32709 (insertStrictlySorted!54 (toList!717 lt!32377) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!16817 (= (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) lt!32708)))

(declare-fun b!73197 () Bool)

(declare-fun res!38813 () Bool)

(assert (=> b!73197 (=> (not res!38813) (not e!47880))))

(assert (=> b!73197 (= res!38813 (= (getValueByKey!131 (toList!717 lt!32708) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!73198 () Bool)

(assert (=> b!73198 (= e!47880 (contains!722 (toList!717 lt!32708) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(assert (= (and d!16817 res!38814) b!73197))

(assert (= (and b!73197 res!38813) b!73198))

(declare-fun m!71279 () Bool)

(assert (=> d!16817 m!71279))

(declare-fun m!71281 () Bool)

(assert (=> d!16817 m!71281))

(declare-fun m!71283 () Bool)

(assert (=> d!16817 m!71283))

(declare-fun m!71285 () Bool)

(assert (=> d!16817 m!71285))

(declare-fun m!71287 () Bool)

(assert (=> b!73197 m!71287))

(declare-fun m!71289 () Bool)

(assert (=> b!73198 m!71289))

(assert (=> d!16769 d!16817))

(declare-fun d!16819 () Bool)

(declare-fun e!47881 () Bool)

(assert (=> d!16819 e!47881))

(declare-fun res!38816 () Bool)

(assert (=> d!16819 (=> (not res!38816) (not e!47881))))

(declare-fun lt!32712 () ListLongMap!1403)

(assert (=> d!16819 (= res!38816 (contains!719 lt!32712 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!32713 () List!1483)

(assert (=> d!16819 (= lt!32712 (ListLongMap!1404 lt!32713))))

(declare-fun lt!32711 () Unit!2066)

(declare-fun lt!32710 () Unit!2066)

(assert (=> d!16819 (= lt!32711 lt!32710)))

(assert (=> d!16819 (= (getValueByKey!131 lt!32713 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16819 (= lt!32710 (lemmaContainsTupThenGetReturnValue!51 lt!32713 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16819 (= lt!32713 (insertStrictlySorted!54 (toList!717 lt!32377) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16819 (= (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32712)))

(declare-fun b!73199 () Bool)

(declare-fun res!38815 () Bool)

(assert (=> b!73199 (=> (not res!38815) (not e!47881))))

(assert (=> b!73199 (= res!38815 (= (getValueByKey!131 (toList!717 lt!32712) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!73200 () Bool)

(assert (=> b!73200 (= e!47881 (contains!722 (toList!717 lt!32712) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!16819 res!38816) b!73199))

(assert (= (and b!73199 res!38815) b!73200))

(declare-fun m!71291 () Bool)

(assert (=> d!16819 m!71291))

(declare-fun m!71293 () Bool)

(assert (=> d!16819 m!71293))

(declare-fun m!71295 () Bool)

(assert (=> d!16819 m!71295))

(declare-fun m!71297 () Bool)

(assert (=> d!16819 m!71297))

(declare-fun m!71299 () Bool)

(assert (=> b!73199 m!71299))

(declare-fun m!71301 () Bool)

(assert (=> b!73200 m!71301))

(assert (=> d!16769 d!16819))

(declare-fun d!16821 () Bool)

(declare-fun e!47882 () Bool)

(assert (=> d!16821 e!47882))

(declare-fun res!38818 () Bool)

(assert (=> d!16821 (=> (not res!38818) (not e!47882))))

(declare-fun lt!32716 () ListLongMap!1403)

(assert (=> d!16821 (= res!38818 (contains!719 lt!32716 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun lt!32717 () List!1483)

(assert (=> d!16821 (= lt!32716 (ListLongMap!1404 lt!32717))))

(declare-fun lt!32715 () Unit!2066)

(declare-fun lt!32714 () Unit!2066)

(assert (=> d!16821 (= lt!32715 lt!32714)))

(assert (=> d!16821 (= (getValueByKey!131 lt!32717 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!16821 (= lt!32714 (lemmaContainsTupThenGetReturnValue!51 lt!32717 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!16821 (= lt!32717 (insertStrictlySorted!54 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!16821 (= (+!93 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) lt!32716)))

(declare-fun b!73201 () Bool)

(declare-fun res!38817 () Bool)

(assert (=> b!73201 (=> (not res!38817) (not e!47882))))

(assert (=> b!73201 (= res!38817 (= (getValueByKey!131 (toList!717 lt!32716) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!73202 () Bool)

(assert (=> b!73202 (= e!47882 (contains!722 (toList!717 lt!32716) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(assert (= (and d!16821 res!38818) b!73201))

(assert (= (and b!73201 res!38817) b!73202))

(declare-fun m!71303 () Bool)

(assert (=> d!16821 m!71303))

(declare-fun m!71305 () Bool)

(assert (=> d!16821 m!71305))

(declare-fun m!71307 () Bool)

(assert (=> d!16821 m!71307))

(declare-fun m!71309 () Bool)

(assert (=> d!16821 m!71309))

(declare-fun m!71311 () Bool)

(assert (=> b!73201 m!71311))

(declare-fun m!71313 () Bool)

(assert (=> b!73202 m!71313))

(assert (=> d!16769 d!16821))

(declare-fun d!16823 () Bool)

(assert (=> d!16823 (= (+!93 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (+!93 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(assert (=> d!16823 true))

(declare-fun _$28!121 () Unit!2066)

(assert (=> d!16823 (= (choose!418 lt!32377 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) _$28!121)))

(declare-fun bs!3137 () Bool)

(assert (= bs!3137 d!16823))

(assert (=> bs!3137 m!71083))

(assert (=> bs!3137 m!71083))

(assert (=> bs!3137 m!71091))

(assert (=> bs!3137 m!71085))

(assert (=> bs!3137 m!71085))

(assert (=> bs!3137 m!71087))

(assert (=> d!16769 d!16823))

(declare-fun d!16825 () Bool)

(declare-fun e!47883 () Bool)

(assert (=> d!16825 e!47883))

(declare-fun res!38820 () Bool)

(assert (=> d!16825 (=> (not res!38820) (not e!47883))))

(declare-fun lt!32720 () ListLongMap!1403)

(assert (=> d!16825 (= res!38820 (contains!719 lt!32720 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!32721 () List!1483)

(assert (=> d!16825 (= lt!32720 (ListLongMap!1404 lt!32721))))

(declare-fun lt!32719 () Unit!2066)

(declare-fun lt!32718 () Unit!2066)

(assert (=> d!16825 (= lt!32719 lt!32718)))

(assert (=> d!16825 (= (getValueByKey!131 lt!32721 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16825 (= lt!32718 (lemmaContainsTupThenGetReturnValue!51 lt!32721 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16825 (= lt!32721 (insertStrictlySorted!54 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16825 (= (+!93 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32720)))

(declare-fun b!73203 () Bool)

(declare-fun res!38819 () Bool)

(assert (=> b!73203 (=> (not res!38819) (not e!47883))))

(assert (=> b!73203 (= res!38819 (= (getValueByKey!131 (toList!717 lt!32720) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!73204 () Bool)

(assert (=> b!73204 (= e!47883 (contains!722 (toList!717 lt!32720) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!16825 res!38820) b!73203))

(assert (= (and b!73203 res!38819) b!73204))

(declare-fun m!71315 () Bool)

(assert (=> d!16825 m!71315))

(declare-fun m!71317 () Bool)

(assert (=> d!16825 m!71317))

(declare-fun m!71319 () Bool)

(assert (=> d!16825 m!71319))

(declare-fun m!71321 () Bool)

(assert (=> d!16825 m!71321))

(declare-fun m!71323 () Bool)

(assert (=> b!73203 m!71323))

(declare-fun m!71325 () Bool)

(assert (=> b!73204 m!71325))

(assert (=> d!16769 d!16825))

(declare-fun d!16827 () Bool)

(assert (=> d!16827 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32546 (zeroValue!2114 newMap!16) lt!32380 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32724 () Unit!2066)

(declare-fun choose!421 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 V!2945 Int) Unit!2066)

(assert (=> d!16827 (= lt!32724 (choose!421 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) lt!32546 (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) lt!32380 (defaultEntry!2212 newMap!16)))))

(assert (=> d!16827 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16827 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) lt!32546 (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) lt!32380 (defaultEntry!2212 newMap!16)) lt!32724)))

(declare-fun bs!3138 () Bool)

(assert (= bs!3138 d!16827))

(assert (=> bs!3138 m!70991))

(declare-fun m!71327 () Bool)

(assert (=> bs!3138 m!71327))

(declare-fun m!71329 () Bool)

(assert (=> bs!3138 m!71329))

(assert (=> bs!3138 m!70991))

(declare-fun m!71331 () Bool)

(assert (=> bs!3138 m!71331))

(assert (=> bs!3138 m!71219))

(assert (=> b!72946 d!16827))

(declare-fun b!73205 () Bool)

(declare-fun e!47892 () Bool)

(declare-fun e!47891 () Bool)

(assert (=> b!73205 (= e!47892 e!47891)))

(declare-fun res!38823 () Bool)

(declare-fun call!6441 () Bool)

(assert (=> b!73205 (= res!38823 call!6441)))

(assert (=> b!73205 (=> (not res!38823) (not e!47891))))

(declare-fun b!73206 () Bool)

(declare-fun e!47889 () ListLongMap!1403)

(declare-fun call!6440 () ListLongMap!1403)

(assert (=> b!73206 (= e!47889 call!6440)))

(declare-fun b!73207 () Bool)

(declare-fun e!47884 () Bool)

(assert (=> b!73207 (= e!47884 e!47892)))

(declare-fun c!10868 () Bool)

(assert (=> b!73207 (= c!10868 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73208 () Bool)

(declare-fun e!47890 () Bool)

(declare-fun call!6443 () Bool)

(assert (=> b!73208 (= e!47890 (not call!6443))))

(declare-fun b!73209 () Bool)

(declare-fun e!47895 () ListLongMap!1403)

(declare-fun call!6445 () ListLongMap!1403)

(assert (=> b!73209 (= e!47895 call!6445)))

(declare-fun b!73211 () Bool)

(declare-fun e!47886 () Bool)

(assert (=> b!73211 (= e!47890 e!47886)))

(declare-fun res!38826 () Bool)

(assert (=> b!73211 (= res!38826 call!6443)))

(assert (=> b!73211 (=> (not res!38826) (not e!47886))))

(declare-fun bm!6436 () Bool)

(declare-fun call!6442 () ListLongMap!1403)

(declare-fun call!6444 () ListLongMap!1403)

(assert (=> bm!6436 (= call!6442 call!6444)))

(declare-fun b!73212 () Bool)

(declare-fun e!47894 () ListLongMap!1403)

(assert (=> b!73212 (= e!47894 e!47889)))

(declare-fun c!10871 () Bool)

(assert (=> b!73212 (= c!10871 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6437 () Bool)

(declare-fun lt!32725 () ListLongMap!1403)

(assert (=> bm!6437 (= call!6441 (contains!719 lt!32725 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!6439 () ListLongMap!1403)

(declare-fun bm!6438 () Bool)

(declare-fun c!10872 () Bool)

(assert (=> bm!6438 (= call!6439 (+!93 (ite c!10872 call!6444 (ite c!10871 call!6442 call!6445)) (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!73213 () Bool)

(declare-fun e!47896 () Bool)

(assert (=> b!73213 (= e!47896 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73214 () Bool)

(declare-fun res!38824 () Bool)

(assert (=> b!73214 (=> (not res!38824) (not e!47884))))

(assert (=> b!73214 (= res!38824 e!47890)))

(declare-fun c!10869 () Bool)

(assert (=> b!73214 (= c!10869 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6439 () Bool)

(assert (=> bm!6439 (= call!6445 call!6442)))

(declare-fun b!73215 () Bool)

(declare-fun e!47887 () Bool)

(assert (=> b!73215 (= e!47887 (= (apply!75 lt!32725 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73215 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (_values!2195 newMap!16))))))

(assert (=> b!73215 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73216 () Bool)

(assert (=> b!73216 (= e!47891 (= (apply!75 lt!32725 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun bm!6440 () Bool)

(assert (=> bm!6440 (= call!6443 (contains!719 lt!32725 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73217 () Bool)

(declare-fun e!47893 () Bool)

(assert (=> b!73217 (= e!47893 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73210 () Bool)

(declare-fun e!47885 () Unit!2066)

(declare-fun lt!32732 () Unit!2066)

(assert (=> b!73210 (= e!47885 lt!32732)))

(declare-fun lt!32744 () ListLongMap!1403)

(assert (=> b!73210 (= lt!32744 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32734 () (_ BitVec 64))

(assert (=> b!73210 (= lt!32734 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32737 () (_ BitVec 64))

(assert (=> b!73210 (= lt!32737 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32743 () Unit!2066)

(assert (=> b!73210 (= lt!32743 (addStillContains!51 lt!32744 lt!32734 (zeroValue!2114 newMap!16) lt!32737))))

(assert (=> b!73210 (contains!719 (+!93 lt!32744 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16))) lt!32737)))

(declare-fun lt!32738 () Unit!2066)

(assert (=> b!73210 (= lt!32738 lt!32743)))

(declare-fun lt!32731 () ListLongMap!1403)

(assert (=> b!73210 (= lt!32731 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32741 () (_ BitVec 64))

(assert (=> b!73210 (= lt!32741 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32740 () (_ BitVec 64))

(assert (=> b!73210 (= lt!32740 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32733 () Unit!2066)

(assert (=> b!73210 (= lt!32733 (addApplyDifferent!51 lt!32731 lt!32741 (minValue!2114 newMap!16) lt!32740))))

(assert (=> b!73210 (= (apply!75 (+!93 lt!32731 (tuple2!2121 lt!32741 (minValue!2114 newMap!16))) lt!32740) (apply!75 lt!32731 lt!32740))))

(declare-fun lt!32745 () Unit!2066)

(assert (=> b!73210 (= lt!32745 lt!32733)))

(declare-fun lt!32742 () ListLongMap!1403)

(assert (=> b!73210 (= lt!32742 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32746 () (_ BitVec 64))

(assert (=> b!73210 (= lt!32746 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32729 () (_ BitVec 64))

(assert (=> b!73210 (= lt!32729 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32727 () Unit!2066)

(assert (=> b!73210 (= lt!32727 (addApplyDifferent!51 lt!32742 lt!32746 (zeroValue!2114 newMap!16) lt!32729))))

(assert (=> b!73210 (= (apply!75 (+!93 lt!32742 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16))) lt!32729) (apply!75 lt!32742 lt!32729))))

(declare-fun lt!32735 () Unit!2066)

(assert (=> b!73210 (= lt!32735 lt!32727)))

(declare-fun lt!32728 () ListLongMap!1403)

(assert (=> b!73210 (= lt!32728 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32730 () (_ BitVec 64))

(assert (=> b!73210 (= lt!32730 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32739 () (_ BitVec 64))

(assert (=> b!73210 (= lt!32739 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73210 (= lt!32732 (addApplyDifferent!51 lt!32728 lt!32730 (minValue!2114 newMap!16) lt!32739))))

(assert (=> b!73210 (= (apply!75 (+!93 lt!32728 (tuple2!2121 lt!32730 (minValue!2114 newMap!16))) lt!32739) (apply!75 lt!32728 lt!32739))))

(declare-fun d!16829 () Bool)

(assert (=> d!16829 e!47884))

(declare-fun res!38822 () Bool)

(assert (=> d!16829 (=> (not res!38822) (not e!47884))))

(assert (=> d!16829 (= res!38822 (or (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))))

(declare-fun lt!32736 () ListLongMap!1403)

(assert (=> d!16829 (= lt!32725 lt!32736)))

(declare-fun lt!32726 () Unit!2066)

(assert (=> d!16829 (= lt!32726 e!47885)))

(declare-fun c!10867 () Bool)

(assert (=> d!16829 (= c!10867 e!47893)))

(declare-fun res!38825 () Bool)

(assert (=> d!16829 (=> (not res!38825) (not e!47893))))

(assert (=> d!16829 (= res!38825 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!16829 (= lt!32736 e!47894)))

(assert (=> d!16829 (= c!10872 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16829 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16829 (= (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!32725)))

(declare-fun b!73218 () Bool)

(assert (=> b!73218 (= e!47894 (+!93 call!6439 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!73219 () Bool)

(declare-fun c!10870 () Bool)

(assert (=> b!73219 (= c!10870 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73219 (= e!47889 e!47895)))

(declare-fun b!73220 () Bool)

(assert (=> b!73220 (= e!47895 call!6440)))

(declare-fun b!73221 () Bool)

(assert (=> b!73221 (= e!47892 (not call!6441))))

(declare-fun b!73222 () Bool)

(declare-fun e!47888 () Bool)

(assert (=> b!73222 (= e!47888 e!47887)))

(declare-fun res!38827 () Bool)

(assert (=> b!73222 (=> (not res!38827) (not e!47887))))

(assert (=> b!73222 (= res!38827 (contains!719 lt!32725 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73222 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73223 () Bool)

(assert (=> b!73223 (= e!47886 (= (apply!75 lt!32725 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!73224 () Bool)

(declare-fun Unit!2083 () Unit!2066)

(assert (=> b!73224 (= e!47885 Unit!2083)))

(declare-fun bm!6441 () Bool)

(assert (=> bm!6441 (= call!6440 call!6439)))

(declare-fun b!73225 () Bool)

(declare-fun res!38821 () Bool)

(assert (=> b!73225 (=> (not res!38821) (not e!47884))))

(assert (=> b!73225 (= res!38821 e!47888)))

(declare-fun res!38829 () Bool)

(assert (=> b!73225 (=> res!38829 e!47888)))

(assert (=> b!73225 (= res!38829 (not e!47896))))

(declare-fun res!38828 () Bool)

(assert (=> b!73225 (=> (not res!38828) (not e!47896))))

(assert (=> b!73225 (= res!38828 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun bm!6442 () Bool)

(assert (=> bm!6442 (= call!6444 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (= (and d!16829 c!10872) b!73218))

(assert (= (and d!16829 (not c!10872)) b!73212))

(assert (= (and b!73212 c!10871) b!73206))

(assert (= (and b!73212 (not c!10871)) b!73219))

(assert (= (and b!73219 c!10870) b!73220))

(assert (= (and b!73219 (not c!10870)) b!73209))

(assert (= (or b!73220 b!73209) bm!6439))

(assert (= (or b!73206 bm!6439) bm!6436))

(assert (= (or b!73206 b!73220) bm!6441))

(assert (= (or b!73218 bm!6436) bm!6442))

(assert (= (or b!73218 bm!6441) bm!6438))

(assert (= (and d!16829 res!38825) b!73217))

(assert (= (and d!16829 c!10867) b!73210))

(assert (= (and d!16829 (not c!10867)) b!73224))

(assert (= (and d!16829 res!38822) b!73225))

(assert (= (and b!73225 res!38828) b!73213))

(assert (= (and b!73225 (not res!38829)) b!73222))

(assert (= (and b!73222 res!38827) b!73215))

(assert (= (and b!73225 res!38821) b!73214))

(assert (= (and b!73214 c!10869) b!73211))

(assert (= (and b!73214 (not c!10869)) b!73208))

(assert (= (and b!73211 res!38826) b!73223))

(assert (= (or b!73211 b!73208) bm!6440))

(assert (= (and b!73214 res!38824) b!73207))

(assert (= (and b!73207 c!10868) b!73205))

(assert (= (and b!73207 (not c!10868)) b!73221))

(assert (= (and b!73205 res!38823) b!73216))

(assert (= (or b!73205 b!73221) bm!6437))

(declare-fun b_lambda!3283 () Bool)

(assert (=> (not b_lambda!3283) (not b!73215)))

(declare-fun tb!1533 () Bool)

(declare-fun t!5045 () Bool)

(assert (=> (and b!72681 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16)) t!5045) tb!1533))

(declare-fun result!2689 () Bool)

(assert (=> tb!1533 (= result!2689 tp_is_empty!2473)))

(assert (=> b!73215 t!5045))

(declare-fun b_and!4493 () Bool)

(assert (= b_and!4489 (and (=> t!5045 result!2689) b_and!4493)))

(declare-fun t!5047 () Bool)

(declare-fun tb!1535 () Bool)

(assert (=> (and b!72667 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 newMap!16)) t!5047) tb!1535))

(declare-fun result!2691 () Bool)

(assert (= result!2691 result!2689))

(assert (=> b!73215 t!5047))

(declare-fun b_and!4495 () Bool)

(assert (= b_and!4491 (and (=> t!5047 result!2691) b_and!4495)))

(declare-fun m!71333 () Bool)

(assert (=> bm!6437 m!71333))

(declare-fun m!71335 () Bool)

(assert (=> b!73210 m!71335))

(declare-fun m!71337 () Bool)

(assert (=> b!73210 m!71337))

(declare-fun m!71339 () Bool)

(assert (=> b!73210 m!71339))

(declare-fun m!71341 () Bool)

(assert (=> b!73210 m!71341))

(declare-fun m!71343 () Bool)

(assert (=> b!73210 m!71343))

(declare-fun m!71345 () Bool)

(assert (=> b!73210 m!71345))

(declare-fun m!71347 () Bool)

(assert (=> b!73210 m!71347))

(declare-fun m!71349 () Bool)

(assert (=> b!73210 m!71349))

(assert (=> b!73210 m!71343))

(declare-fun m!71351 () Bool)

(assert (=> b!73210 m!71351))

(declare-fun m!71353 () Bool)

(assert (=> b!73210 m!71353))

(declare-fun m!71355 () Bool)

(assert (=> b!73210 m!71355))

(declare-fun m!71357 () Bool)

(assert (=> b!73210 m!71357))

(assert (=> b!73210 m!71349))

(declare-fun m!71359 () Bool)

(assert (=> b!73210 m!71359))

(assert (=> b!73210 m!71335))

(declare-fun m!71361 () Bool)

(assert (=> b!73210 m!71361))

(declare-fun m!71363 () Bool)

(assert (=> b!73210 m!71363))

(declare-fun m!71365 () Bool)

(assert (=> b!73210 m!71365))

(assert (=> b!73210 m!71339))

(declare-fun m!71367 () Bool)

(assert (=> b!73210 m!71367))

(declare-fun m!71369 () Bool)

(assert (=> b!73223 m!71369))

(declare-fun m!71371 () Bool)

(assert (=> b!73216 m!71371))

(assert (=> b!73213 m!71361))

(assert (=> b!73213 m!71361))

(declare-fun m!71373 () Bool)

(assert (=> b!73213 m!71373))

(declare-fun m!71375 () Bool)

(assert (=> bm!6438 m!71375))

(assert (=> b!73217 m!71361))

(assert (=> b!73217 m!71361))

(assert (=> b!73217 m!71373))

(assert (=> d!16829 m!71219))

(declare-fun m!71377 () Bool)

(assert (=> b!73218 m!71377))

(declare-fun m!71379 () Bool)

(assert (=> bm!6440 m!71379))

(assert (=> bm!6442 m!71357))

(assert (=> b!73222 m!71361))

(assert (=> b!73222 m!71361))

(declare-fun m!71381 () Bool)

(assert (=> b!73222 m!71381))

(assert (=> b!73215 m!71361))

(declare-fun m!71383 () Bool)

(assert (=> b!73215 m!71383))

(assert (=> b!73215 m!71361))

(declare-fun m!71385 () Bool)

(assert (=> b!73215 m!71385))

(assert (=> b!73215 m!71383))

(declare-fun m!71387 () Bool)

(assert (=> b!73215 m!71387))

(declare-fun m!71389 () Bool)

(assert (=> b!73215 m!71389))

(assert (=> b!73215 m!71387))

(assert (=> b!72975 d!16829))

(declare-fun d!16831 () Bool)

(declare-fun e!47898 () Bool)

(assert (=> d!16831 e!47898))

(declare-fun res!38830 () Bool)

(assert (=> d!16831 (=> res!38830 e!47898)))

(declare-fun lt!32750 () Bool)

(assert (=> d!16831 (= res!38830 (not lt!32750))))

(declare-fun lt!32748 () Bool)

(assert (=> d!16831 (= lt!32750 lt!32748)))

(declare-fun lt!32747 () Unit!2066)

(declare-fun e!47897 () Unit!2066)

(assert (=> d!16831 (= lt!32747 e!47897)))

(declare-fun c!10873 () Bool)

(assert (=> d!16831 (= c!10873 lt!32748)))

(assert (=> d!16831 (= lt!32748 (containsKey!135 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!16831 (= (contains!719 lt!32604 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32750)))

(declare-fun b!73226 () Bool)

(declare-fun lt!32749 () Unit!2066)

(assert (=> b!73226 (= e!47897 lt!32749)))

(assert (=> b!73226 (= lt!32749 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73226 (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73227 () Bool)

(declare-fun Unit!2084 () Unit!2066)

(assert (=> b!73227 (= e!47897 Unit!2084)))

(declare-fun b!73228 () Bool)

(assert (=> b!73228 (= e!47898 (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!16831 c!10873) b!73226))

(assert (= (and d!16831 (not c!10873)) b!73227))

(assert (= (and d!16831 (not res!38830)) b!73228))

(assert (=> d!16831 m!70941))

(declare-fun m!71391 () Bool)

(assert (=> d!16831 m!71391))

(assert (=> b!73226 m!70941))

(declare-fun m!71393 () Bool)

(assert (=> b!73226 m!71393))

(assert (=> b!73226 m!70941))

(declare-fun m!71395 () Bool)

(assert (=> b!73226 m!71395))

(assert (=> b!73226 m!71395))

(declare-fun m!71397 () Bool)

(assert (=> b!73226 m!71397))

(assert (=> b!73228 m!70941))

(assert (=> b!73228 m!71395))

(assert (=> b!73228 m!71395))

(assert (=> b!73228 m!71397))

(assert (=> b!73044 d!16831))

(declare-fun b!73229 () Bool)

(declare-fun e!47899 () Option!137)

(assert (=> b!73229 (= e!47899 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32672)))))))

(declare-fun b!73232 () Bool)

(declare-fun e!47900 () Option!137)

(assert (=> b!73232 (= e!47900 None!135)))

(declare-fun b!73231 () Bool)

(assert (=> b!73231 (= e!47900 (getValueByKey!131 (t!5031 (toList!717 lt!32672)) (_1!1071 lt!32383)))))

(declare-fun d!16833 () Bool)

(declare-fun c!10874 () Bool)

(assert (=> d!16833 (= c!10874 (and ((_ is Cons!1479) (toList!717 lt!32672)) (= (_1!1071 (h!2066 (toList!717 lt!32672))) (_1!1071 lt!32383))))))

(assert (=> d!16833 (= (getValueByKey!131 (toList!717 lt!32672) (_1!1071 lt!32383)) e!47899)))

(declare-fun b!73230 () Bool)

(assert (=> b!73230 (= e!47899 e!47900)))

(declare-fun c!10875 () Bool)

(assert (=> b!73230 (= c!10875 (and ((_ is Cons!1479) (toList!717 lt!32672)) (not (= (_1!1071 (h!2066 (toList!717 lt!32672))) (_1!1071 lt!32383)))))))

(assert (= (and d!16833 c!10874) b!73229))

(assert (= (and d!16833 (not c!10874)) b!73230))

(assert (= (and b!73230 c!10875) b!73231))

(assert (= (and b!73230 (not c!10875)) b!73232))

(declare-fun m!71399 () Bool)

(assert (=> b!73231 m!71399))

(assert (=> b!73094 d!16833))

(declare-fun b!73233 () Bool)

(declare-fun e!47901 () Bool)

(declare-fun e!47904 () Bool)

(assert (=> b!73233 (= e!47901 e!47904)))

(declare-fun res!38831 () Bool)

(assert (=> b!73233 (=> (not res!38831) (not e!47904))))

(declare-fun e!47903 () Bool)

(assert (=> b!73233 (= res!38831 (not e!47903))))

(declare-fun res!38832 () Bool)

(assert (=> b!73233 (=> (not res!38832) (not e!47903))))

(assert (=> b!73233 (= res!38832 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6443 () Bool)

(declare-fun call!6446 () Bool)

(declare-fun c!10876 () Bool)

(assert (=> bm!6443 (= call!6446 (arrayNoDuplicates!0 (_keys!3863 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10876 (Cons!1480 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) Nil!1481) Nil!1481)))))

(declare-fun d!16835 () Bool)

(declare-fun res!38833 () Bool)

(assert (=> d!16835 (=> res!38833 e!47901)))

(assert (=> d!16835 (= res!38833 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!16835 (= (arrayNoDuplicates!0 (_keys!3863 newMap!16) #b00000000000000000000000000000000 Nil!1481) e!47901)))

(declare-fun b!73234 () Bool)

(declare-fun e!47902 () Bool)

(assert (=> b!73234 (= e!47904 e!47902)))

(assert (=> b!73234 (= c!10876 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73235 () Bool)

(assert (=> b!73235 (= e!47902 call!6446)))

(declare-fun b!73236 () Bool)

(assert (=> b!73236 (= e!47903 (contains!721 Nil!1481 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73237 () Bool)

(assert (=> b!73237 (= e!47902 call!6446)))

(assert (= (and d!16835 (not res!38833)) b!73233))

(assert (= (and b!73233 res!38832) b!73236))

(assert (= (and b!73233 res!38831) b!73234))

(assert (= (and b!73234 c!10876) b!73237))

(assert (= (and b!73234 (not c!10876)) b!73235))

(assert (= (or b!73237 b!73235) bm!6443))

(assert (=> b!73233 m!71361))

(assert (=> b!73233 m!71361))

(assert (=> b!73233 m!71373))

(assert (=> bm!6443 m!71361))

(declare-fun m!71401 () Bool)

(assert (=> bm!6443 m!71401))

(assert (=> b!73234 m!71361))

(assert (=> b!73234 m!71361))

(assert (=> b!73234 m!71373))

(assert (=> b!73236 m!71361))

(assert (=> b!73236 m!71361))

(declare-fun m!71403 () Bool)

(assert (=> b!73236 m!71403))

(assert (=> b!72843 d!16835))

(declare-fun d!16837 () Bool)

(declare-fun get!1147 (Option!137) V!2945)

(assert (=> d!16837 (= (apply!75 lt!32663 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1147 (getValueByKey!131 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3139 () Bool)

(assert (= bs!3139 d!16837))

(assert (=> bs!3139 m!70941))

(declare-fun m!71405 () Bool)

(assert (=> bs!3139 m!71405))

(assert (=> bs!3139 m!71405))

(declare-fun m!71407 () Bool)

(assert (=> bs!3139 m!71407))

(assert (=> b!73080 d!16837))

(declare-fun d!16839 () Bool)

(declare-fun c!10877 () Bool)

(assert (=> d!16839 (= c!10877 ((_ is ValueCellFull!893) (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!47905 () V!2945)

(assert (=> d!16839 (= (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!47905)))

(declare-fun b!73238 () Bool)

(assert (=> b!73238 (= e!47905 (get!1145 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73239 () Bool)

(assert (=> b!73239 (= e!47905 (get!1146 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16839 c!10877) b!73238))

(assert (= (and d!16839 (not c!10877)) b!73239))

(assert (=> b!73238 m!71077))

(assert (=> b!73238 m!70809))

(declare-fun m!71409 () Bool)

(assert (=> b!73238 m!71409))

(assert (=> b!73239 m!71077))

(assert (=> b!73239 m!70809))

(declare-fun m!71411 () Bool)

(assert (=> b!73239 m!71411))

(assert (=> b!73080 d!16839))

(declare-fun d!16841 () Bool)

(declare-fun e!47907 () Bool)

(assert (=> d!16841 e!47907))

(declare-fun res!38834 () Bool)

(assert (=> d!16841 (=> res!38834 e!47907)))

(declare-fun lt!32754 () Bool)

(assert (=> d!16841 (= res!38834 (not lt!32754))))

(declare-fun lt!32752 () Bool)

(assert (=> d!16841 (= lt!32754 lt!32752)))

(declare-fun lt!32751 () Unit!2066)

(declare-fun e!47906 () Unit!2066)

(assert (=> d!16841 (= lt!32751 e!47906)))

(declare-fun c!10878 () Bool)

(assert (=> d!16841 (= c!10878 lt!32752)))

(assert (=> d!16841 (= lt!32752 (containsKey!135 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!16841 (= (contains!719 e!47748 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) lt!32754)))

(declare-fun b!73240 () Bool)

(declare-fun lt!32753 () Unit!2066)

(assert (=> b!73240 (= e!47906 lt!32753)))

(assert (=> b!73240 (= lt!32753 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> b!73240 (isDefined!85 (getValueByKey!131 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!73241 () Bool)

(declare-fun Unit!2085 () Unit!2066)

(assert (=> b!73241 (= e!47906 Unit!2085)))

(declare-fun b!73242 () Bool)

(assert (=> b!73242 (= e!47907 (isDefined!85 (getValueByKey!131 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (= (and d!16841 c!10878) b!73240))

(assert (= (and d!16841 (not c!10878)) b!73241))

(assert (= (and d!16841 (not res!38834)) b!73242))

(assert (=> d!16841 m!70791))

(declare-fun m!71413 () Bool)

(assert (=> d!16841 m!71413))

(assert (=> b!73240 m!70791))

(declare-fun m!71415 () Bool)

(assert (=> b!73240 m!71415))

(assert (=> b!73240 m!70791))

(declare-fun m!71417 () Bool)

(assert (=> b!73240 m!71417))

(assert (=> b!73240 m!71417))

(declare-fun m!71419 () Bool)

(assert (=> b!73240 m!71419))

(assert (=> b!73242 m!70791))

(assert (=> b!73242 m!71417))

(assert (=> b!73242 m!71417))

(assert (=> b!73242 m!71419))

(assert (=> bm!6386 d!16841))

(declare-fun d!16843 () Bool)

(declare-fun e!47909 () Bool)

(assert (=> d!16843 e!47909))

(declare-fun res!38835 () Bool)

(assert (=> d!16843 (=> res!38835 e!47909)))

(declare-fun lt!32758 () Bool)

(assert (=> d!16843 (= res!38835 (not lt!32758))))

(declare-fun lt!32756 () Bool)

(assert (=> d!16843 (= lt!32758 lt!32756)))

(declare-fun lt!32755 () Unit!2066)

(declare-fun e!47908 () Unit!2066)

(assert (=> d!16843 (= lt!32755 e!47908)))

(declare-fun c!10879 () Bool)

(assert (=> d!16843 (= c!10879 lt!32756)))

(assert (=> d!16843 (= lt!32756 (containsKey!135 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16843 (= (contains!719 lt!32663 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32758)))

(declare-fun b!73243 () Bool)

(declare-fun lt!32757 () Unit!2066)

(assert (=> b!73243 (= e!47908 lt!32757)))

(assert (=> b!73243 (= lt!32757 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73243 (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73244 () Bool)

(declare-fun Unit!2086 () Unit!2066)

(assert (=> b!73244 (= e!47908 Unit!2086)))

(declare-fun b!73245 () Bool)

(assert (=> b!73245 (= e!47909 (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16843 c!10879) b!73243))

(assert (= (and d!16843 (not c!10879)) b!73244))

(assert (= (and d!16843 (not res!38835)) b!73245))

(declare-fun m!71421 () Bool)

(assert (=> d!16843 m!71421))

(declare-fun m!71423 () Bool)

(assert (=> b!73243 m!71423))

(declare-fun m!71425 () Bool)

(assert (=> b!73243 m!71425))

(assert (=> b!73243 m!71425))

(declare-fun m!71427 () Bool)

(assert (=> b!73243 m!71427))

(assert (=> b!73245 m!71425))

(assert (=> b!73245 m!71425))

(assert (=> b!73245 m!71427))

(assert (=> d!16775 d!16843))

(assert (=> d!16775 d!16781))

(declare-fun d!16845 () Bool)

(assert (=> d!16845 (= (inRange!0 (ite c!10798 (ite c!10797 (index!3088 lt!32543) (ite c!10795 (index!3087 lt!32558) (index!3090 lt!32558))) (ite c!10794 (index!3088 lt!32542) (ite c!10791 (index!3087 lt!32536) (index!3090 lt!32536)))) (mask!6178 newMap!16)) (and (bvsge (ite c!10798 (ite c!10797 (index!3088 lt!32543) (ite c!10795 (index!3087 lt!32558) (index!3090 lt!32558))) (ite c!10794 (index!3088 lt!32542) (ite c!10791 (index!3087 lt!32536) (index!3090 lt!32536)))) #b00000000000000000000000000000000) (bvslt (ite c!10798 (ite c!10797 (index!3088 lt!32543) (ite c!10795 (index!3087 lt!32558) (index!3090 lt!32558))) (ite c!10794 (index!3088 lt!32542) (ite c!10791 (index!3087 lt!32536) (index!3090 lt!32536)))) (bvadd (mask!6178 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6377 d!16845))

(declare-fun b!73254 () Bool)

(declare-fun e!47914 () (_ BitVec 32))

(assert (=> b!73254 (= e!47914 #b00000000000000000000000000000000)))

(declare-fun b!73255 () Bool)

(declare-fun e!47915 () (_ BitVec 32))

(declare-fun call!6449 () (_ BitVec 32))

(assert (=> b!73255 (= e!47915 call!6449)))

(declare-fun bm!6446 () Bool)

(assert (=> bm!6446 (= call!6449 (arrayCountValidKeys!0 (_keys!3863 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73256 () Bool)

(assert (=> b!73256 (= e!47914 e!47915)))

(declare-fun c!10884 () Bool)

(assert (=> b!73256 (= c!10884 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73257 () Bool)

(assert (=> b!73257 (= e!47915 (bvadd #b00000000000000000000000000000001 call!6449))))

(declare-fun d!16847 () Bool)

(declare-fun lt!32761 () (_ BitVec 32))

(assert (=> d!16847 (and (bvsge lt!32761 #b00000000000000000000000000000000) (bvsle lt!32761 (bvsub (size!2085 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!16847 (= lt!32761 e!47914)))

(declare-fun c!10885 () Bool)

(assert (=> d!16847 (= c!10885 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!16847 (and (bvsle #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2085 (_keys!3863 newMap!16)) (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!16847 (= (arrayCountValidKeys!0 (_keys!3863 newMap!16) #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) lt!32761)))

(assert (= (and d!16847 c!10885) b!73254))

(assert (= (and d!16847 (not c!10885)) b!73256))

(assert (= (and b!73256 c!10884) b!73257))

(assert (= (and b!73256 (not c!10884)) b!73255))

(assert (= (or b!73257 b!73255) bm!6446))

(declare-fun m!71429 () Bool)

(assert (=> bm!6446 m!71429))

(assert (=> b!73256 m!71361))

(assert (=> b!73256 m!71361))

(assert (=> b!73256 m!71373))

(assert (=> b!72841 d!16847))

(declare-fun d!16849 () Bool)

(declare-fun e!47917 () Bool)

(assert (=> d!16849 e!47917))

(declare-fun res!38836 () Bool)

(assert (=> d!16849 (=> res!38836 e!47917)))

(declare-fun lt!32765 () Bool)

(assert (=> d!16849 (= res!38836 (not lt!32765))))

(declare-fun lt!32763 () Bool)

(assert (=> d!16849 (= lt!32765 lt!32763)))

(declare-fun lt!32762 () Unit!2066)

(declare-fun e!47916 () Unit!2066)

(assert (=> d!16849 (= lt!32762 e!47916)))

(declare-fun c!10886 () Bool)

(assert (=> d!16849 (= c!10886 lt!32763)))

(assert (=> d!16849 (= lt!32763 (containsKey!135 (toList!717 lt!32643) (_1!1071 lt!32376)))))

(assert (=> d!16849 (= (contains!719 lt!32643 (_1!1071 lt!32376)) lt!32765)))

(declare-fun b!73258 () Bool)

(declare-fun lt!32764 () Unit!2066)

(assert (=> b!73258 (= e!47916 lt!32764)))

(assert (=> b!73258 (= lt!32764 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32643) (_1!1071 lt!32376)))))

(assert (=> b!73258 (isDefined!85 (getValueByKey!131 (toList!717 lt!32643) (_1!1071 lt!32376)))))

(declare-fun b!73259 () Bool)

(declare-fun Unit!2087 () Unit!2066)

(assert (=> b!73259 (= e!47916 Unit!2087)))

(declare-fun b!73260 () Bool)

(assert (=> b!73260 (= e!47917 (isDefined!85 (getValueByKey!131 (toList!717 lt!32643) (_1!1071 lt!32376))))))

(assert (= (and d!16849 c!10886) b!73258))

(assert (= (and d!16849 (not c!10886)) b!73259))

(assert (= (and d!16849 (not res!38836)) b!73260))

(declare-fun m!71431 () Bool)

(assert (=> d!16849 m!71431))

(declare-fun m!71433 () Bool)

(assert (=> b!73258 m!71433))

(assert (=> b!73258 m!71113))

(assert (=> b!73258 m!71113))

(declare-fun m!71435 () Bool)

(assert (=> b!73258 m!71435))

(assert (=> b!73260 m!71113))

(assert (=> b!73260 m!71113))

(assert (=> b!73260 m!71435))

(assert (=> d!16773 d!16849))

(declare-fun b!73261 () Bool)

(declare-fun e!47918 () Option!137)

(assert (=> b!73261 (= e!47918 (Some!136 (_2!1071 (h!2066 lt!32644))))))

(declare-fun b!73264 () Bool)

(declare-fun e!47919 () Option!137)

(assert (=> b!73264 (= e!47919 None!135)))

(declare-fun b!73263 () Bool)

(assert (=> b!73263 (= e!47919 (getValueByKey!131 (t!5031 lt!32644) (_1!1071 lt!32376)))))

(declare-fun d!16851 () Bool)

(declare-fun c!10887 () Bool)

(assert (=> d!16851 (= c!10887 (and ((_ is Cons!1479) lt!32644) (= (_1!1071 (h!2066 lt!32644)) (_1!1071 lt!32376))))))

(assert (=> d!16851 (= (getValueByKey!131 lt!32644 (_1!1071 lt!32376)) e!47918)))

(declare-fun b!73262 () Bool)

(assert (=> b!73262 (= e!47918 e!47919)))

(declare-fun c!10888 () Bool)

(assert (=> b!73262 (= c!10888 (and ((_ is Cons!1479) lt!32644) (not (= (_1!1071 (h!2066 lt!32644)) (_1!1071 lt!32376)))))))

(assert (= (and d!16851 c!10887) b!73261))

(assert (= (and d!16851 (not c!10887)) b!73262))

(assert (= (and b!73262 c!10888) b!73263))

(assert (= (and b!73262 (not c!10888)) b!73264))

(declare-fun m!71437 () Bool)

(assert (=> b!73263 m!71437))

(assert (=> d!16773 d!16851))

(declare-fun d!16853 () Bool)

(assert (=> d!16853 (= (getValueByKey!131 lt!32644 (_1!1071 lt!32376)) (Some!136 (_2!1071 lt!32376)))))

(declare-fun lt!32766 () Unit!2066)

(assert (=> d!16853 (= lt!32766 (choose!420 lt!32644 (_1!1071 lt!32376) (_2!1071 lt!32376)))))

(declare-fun e!47920 () Bool)

(assert (=> d!16853 e!47920))

(declare-fun res!38837 () Bool)

(assert (=> d!16853 (=> (not res!38837) (not e!47920))))

(assert (=> d!16853 (= res!38837 (isStrictlySorted!287 lt!32644))))

(assert (=> d!16853 (= (lemmaContainsTupThenGetReturnValue!51 lt!32644 (_1!1071 lt!32376) (_2!1071 lt!32376)) lt!32766)))

(declare-fun b!73265 () Bool)

(declare-fun res!38838 () Bool)

(assert (=> b!73265 (=> (not res!38838) (not e!47920))))

(assert (=> b!73265 (= res!38838 (containsKey!135 lt!32644 (_1!1071 lt!32376)))))

(declare-fun b!73266 () Bool)

(assert (=> b!73266 (= e!47920 (contains!722 lt!32644 (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(assert (= (and d!16853 res!38837) b!73265))

(assert (= (and b!73265 res!38838) b!73266))

(assert (=> d!16853 m!71107))

(declare-fun m!71439 () Bool)

(assert (=> d!16853 m!71439))

(declare-fun m!71441 () Bool)

(assert (=> d!16853 m!71441))

(declare-fun m!71443 () Bool)

(assert (=> b!73265 m!71443))

(declare-fun m!71445 () Bool)

(assert (=> b!73266 m!71445))

(assert (=> d!16773 d!16853))

(declare-fun d!16855 () Bool)

(declare-fun e!47923 () Bool)

(assert (=> d!16855 e!47923))

(declare-fun res!38840 () Bool)

(assert (=> d!16855 (=> (not res!38840) (not e!47923))))

(declare-fun lt!32767 () List!1483)

(assert (=> d!16855 (= res!38840 (isStrictlySorted!287 lt!32767))))

(declare-fun e!47925 () List!1483)

(assert (=> d!16855 (= lt!32767 e!47925)))

(declare-fun c!10891 () Bool)

(assert (=> d!16855 (= c!10891 (and ((_ is Cons!1479) (toList!717 lt!32377)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 lt!32376))))))

(assert (=> d!16855 (isStrictlySorted!287 (toList!717 lt!32377))))

(assert (=> d!16855 (= (insertStrictlySorted!54 (toList!717 lt!32377) (_1!1071 lt!32376) (_2!1071 lt!32376)) lt!32767)))

(declare-fun b!73267 () Bool)

(declare-fun res!38839 () Bool)

(assert (=> b!73267 (=> (not res!38839) (not e!47923))))

(assert (=> b!73267 (= res!38839 (containsKey!135 lt!32767 (_1!1071 lt!32376)))))

(declare-fun b!73268 () Bool)

(declare-fun e!47924 () List!1483)

(declare-fun call!6452 () List!1483)

(assert (=> b!73268 (= e!47924 call!6452)))

(declare-fun bm!6447 () Bool)

(declare-fun call!6450 () List!1483)

(declare-fun call!6451 () List!1483)

(assert (=> bm!6447 (= call!6450 call!6451)))

(declare-fun b!73269 () Bool)

(assert (=> b!73269 (= e!47925 call!6451)))

(declare-fun b!73270 () Bool)

(declare-fun e!47921 () List!1483)

(assert (=> b!73270 (= e!47921 (insertStrictlySorted!54 (t!5031 (toList!717 lt!32377)) (_1!1071 lt!32376) (_2!1071 lt!32376)))))

(declare-fun b!73271 () Bool)

(assert (=> b!73271 (= e!47924 call!6452)))

(declare-fun b!73272 () Bool)

(assert (=> b!73272 (= e!47923 (contains!722 lt!32767 (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun b!73273 () Bool)

(declare-fun c!10889 () Bool)

(assert (=> b!73273 (= c!10889 (and ((_ is Cons!1479) (toList!717 lt!32377)) (bvsgt (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 lt!32376))))))

(declare-fun e!47922 () List!1483)

(assert (=> b!73273 (= e!47922 e!47924)))

(declare-fun bm!6448 () Bool)

(assert (=> bm!6448 (= call!6451 ($colon$colon!65 e!47921 (ite c!10891 (h!2066 (toList!717 lt!32377)) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376)))))))

(declare-fun c!10892 () Bool)

(assert (=> bm!6448 (= c!10892 c!10891)))

(declare-fun bm!6449 () Bool)

(assert (=> bm!6449 (= call!6452 call!6450)))

(declare-fun b!73274 () Bool)

(assert (=> b!73274 (= e!47925 e!47922)))

(declare-fun c!10890 () Bool)

(assert (=> b!73274 (= c!10890 (and ((_ is Cons!1479) (toList!717 lt!32377)) (= (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 lt!32376))))))

(declare-fun b!73275 () Bool)

(assert (=> b!73275 (= e!47922 call!6450)))

(declare-fun b!73276 () Bool)

(assert (=> b!73276 (= e!47921 (ite c!10890 (t!5031 (toList!717 lt!32377)) (ite c!10889 (Cons!1479 (h!2066 (toList!717 lt!32377)) (t!5031 (toList!717 lt!32377))) Nil!1480)))))

(assert (= (and d!16855 c!10891) b!73269))

(assert (= (and d!16855 (not c!10891)) b!73274))

(assert (= (and b!73274 c!10890) b!73275))

(assert (= (and b!73274 (not c!10890)) b!73273))

(assert (= (and b!73273 c!10889) b!73271))

(assert (= (and b!73273 (not c!10889)) b!73268))

(assert (= (or b!73271 b!73268) bm!6449))

(assert (= (or b!73275 bm!6449) bm!6447))

(assert (= (or b!73269 bm!6447) bm!6448))

(assert (= (and bm!6448 c!10892) b!73270))

(assert (= (and bm!6448 (not c!10892)) b!73276))

(assert (= (and d!16855 res!38840) b!73267))

(assert (= (and b!73267 res!38839) b!73272))

(declare-fun m!71447 () Bool)

(assert (=> bm!6448 m!71447))

(declare-fun m!71449 () Bool)

(assert (=> d!16855 m!71449))

(declare-fun m!71451 () Bool)

(assert (=> d!16855 m!71451))

(declare-fun m!71453 () Bool)

(assert (=> b!73270 m!71453))

(declare-fun m!71455 () Bool)

(assert (=> b!73272 m!71455))

(declare-fun m!71457 () Bool)

(assert (=> b!73267 m!71457))

(assert (=> d!16773 d!16855))

(assert (=> bm!6421 d!16775))

(declare-fun d!16857 () Bool)

(assert (=> d!16857 (= (get!1146 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!72984 d!16857))

(assert (=> bm!6400 d!16765))

(declare-fun d!16859 () Bool)

(declare-fun e!47927 () Bool)

(assert (=> d!16859 e!47927))

(declare-fun res!38841 () Bool)

(assert (=> d!16859 (=> res!38841 e!47927)))

(declare-fun lt!32771 () Bool)

(assert (=> d!16859 (= res!38841 (not lt!32771))))

(declare-fun lt!32769 () Bool)

(assert (=> d!16859 (= lt!32771 lt!32769)))

(declare-fun lt!32768 () Unit!2066)

(declare-fun e!47926 () Unit!2066)

(assert (=> d!16859 (= lt!32768 e!47926)))

(declare-fun c!10893 () Bool)

(assert (=> d!16859 (= c!10893 lt!32769)))

(assert (=> d!16859 (= lt!32769 (containsKey!135 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!16859 (= (contains!719 lt!32663 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!32771)))

(declare-fun b!73277 () Bool)

(declare-fun lt!32770 () Unit!2066)

(assert (=> b!73277 (= e!47926 lt!32770)))

(assert (=> b!73277 (= lt!32770 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73277 (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!73278 () Bool)

(declare-fun Unit!2088 () Unit!2066)

(assert (=> b!73278 (= e!47926 Unit!2088)))

(declare-fun b!73279 () Bool)

(assert (=> b!73279 (= e!47927 (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!16859 c!10893) b!73277))

(assert (= (and d!16859 (not c!10893)) b!73278))

(assert (= (and d!16859 (not res!38841)) b!73279))

(assert (=> d!16859 m!70941))

(declare-fun m!71459 () Bool)

(assert (=> d!16859 m!71459))

(assert (=> b!73277 m!70941))

(declare-fun m!71461 () Bool)

(assert (=> b!73277 m!71461))

(assert (=> b!73277 m!70941))

(assert (=> b!73277 m!71405))

(assert (=> b!73277 m!71405))

(declare-fun m!71463 () Bool)

(assert (=> b!73277 m!71463))

(assert (=> b!73279 m!70941))

(assert (=> b!73279 m!71405))

(assert (=> b!73279 m!71405))

(assert (=> b!73279 m!71463))

(assert (=> b!73086 d!16859))

(declare-fun b!73280 () Bool)

(declare-fun e!47928 () Option!137)

(assert (=> b!73280 (= e!47928 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32643)))))))

(declare-fun b!73283 () Bool)

(declare-fun e!47929 () Option!137)

(assert (=> b!73283 (= e!47929 None!135)))

(declare-fun b!73282 () Bool)

(assert (=> b!73282 (= e!47929 (getValueByKey!131 (t!5031 (toList!717 lt!32643)) (_1!1071 lt!32376)))))

(declare-fun d!16861 () Bool)

(declare-fun c!10894 () Bool)

(assert (=> d!16861 (= c!10894 (and ((_ is Cons!1479) (toList!717 lt!32643)) (= (_1!1071 (h!2066 (toList!717 lt!32643))) (_1!1071 lt!32376))))))

(assert (=> d!16861 (= (getValueByKey!131 (toList!717 lt!32643) (_1!1071 lt!32376)) e!47928)))

(declare-fun b!73281 () Bool)

(assert (=> b!73281 (= e!47928 e!47929)))

(declare-fun c!10895 () Bool)

(assert (=> b!73281 (= c!10895 (and ((_ is Cons!1479) (toList!717 lt!32643)) (not (= (_1!1071 (h!2066 (toList!717 lt!32643))) (_1!1071 lt!32376)))))))

(assert (= (and d!16861 c!10894) b!73280))

(assert (= (and d!16861 (not c!10894)) b!73281))

(assert (= (and b!73281 c!10895) b!73282))

(assert (= (and b!73281 (not c!10895)) b!73283))

(declare-fun m!71465 () Bool)

(assert (=> b!73282 m!71465))

(assert (=> b!73054 d!16861))

(declare-fun d!16863 () Bool)

(assert (=> d!16863 (= (apply!75 lt!32604 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1147 (getValueByKey!131 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3140 () Bool)

(assert (= bs!3140 d!16863))

(assert (=> bs!3140 m!70941))

(assert (=> bs!3140 m!71395))

(assert (=> bs!3140 m!71395))

(declare-fun m!71467 () Bool)

(assert (=> bs!3140 m!71467))

(assert (=> b!73037 d!16863))

(assert (=> b!73037 d!16839))

(declare-fun d!16865 () Bool)

(declare-fun e!47931 () Bool)

(assert (=> d!16865 e!47931))

(declare-fun res!38842 () Bool)

(assert (=> d!16865 (=> res!38842 e!47931)))

(declare-fun lt!32775 () Bool)

(assert (=> d!16865 (= res!38842 (not lt!32775))))

(declare-fun lt!32773 () Bool)

(assert (=> d!16865 (= lt!32775 lt!32773)))

(declare-fun lt!32772 () Unit!2066)

(declare-fun e!47930 () Unit!2066)

(assert (=> d!16865 (= lt!32772 e!47930)))

(declare-fun c!10896 () Bool)

(assert (=> d!16865 (= c!10896 lt!32773)))

(assert (=> d!16865 (= lt!32773 (containsKey!135 (toList!717 lt!32672) (_1!1071 lt!32383)))))

(assert (=> d!16865 (= (contains!719 lt!32672 (_1!1071 lt!32383)) lt!32775)))

(declare-fun b!73284 () Bool)

(declare-fun lt!32774 () Unit!2066)

(assert (=> b!73284 (= e!47930 lt!32774)))

(assert (=> b!73284 (= lt!32774 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32672) (_1!1071 lt!32383)))))

(assert (=> b!73284 (isDefined!85 (getValueByKey!131 (toList!717 lt!32672) (_1!1071 lt!32383)))))

(declare-fun b!73285 () Bool)

(declare-fun Unit!2089 () Unit!2066)

(assert (=> b!73285 (= e!47930 Unit!2089)))

(declare-fun b!73286 () Bool)

(assert (=> b!73286 (= e!47931 (isDefined!85 (getValueByKey!131 (toList!717 lt!32672) (_1!1071 lt!32383))))))

(assert (= (and d!16865 c!10896) b!73284))

(assert (= (and d!16865 (not c!10896)) b!73285))

(assert (= (and d!16865 (not res!38842)) b!73286))

(declare-fun m!71469 () Bool)

(assert (=> d!16865 m!71469))

(declare-fun m!71471 () Bool)

(assert (=> b!73284 m!71471))

(assert (=> b!73284 m!71157))

(assert (=> b!73284 m!71157))

(declare-fun m!71473 () Bool)

(assert (=> b!73284 m!71473))

(assert (=> b!73286 m!71157))

(assert (=> b!73286 m!71157))

(assert (=> b!73286 m!71473))

(assert (=> d!16779 d!16865))

(declare-fun b!73287 () Bool)

(declare-fun e!47932 () Option!137)

(assert (=> b!73287 (= e!47932 (Some!136 (_2!1071 (h!2066 lt!32673))))))

(declare-fun b!73290 () Bool)

(declare-fun e!47933 () Option!137)

(assert (=> b!73290 (= e!47933 None!135)))

(declare-fun b!73289 () Bool)

(assert (=> b!73289 (= e!47933 (getValueByKey!131 (t!5031 lt!32673) (_1!1071 lt!32383)))))

(declare-fun d!16867 () Bool)

(declare-fun c!10897 () Bool)

(assert (=> d!16867 (= c!10897 (and ((_ is Cons!1479) lt!32673) (= (_1!1071 (h!2066 lt!32673)) (_1!1071 lt!32383))))))

(assert (=> d!16867 (= (getValueByKey!131 lt!32673 (_1!1071 lt!32383)) e!47932)))

(declare-fun b!73288 () Bool)

(assert (=> b!73288 (= e!47932 e!47933)))

(declare-fun c!10898 () Bool)

(assert (=> b!73288 (= c!10898 (and ((_ is Cons!1479) lt!32673) (not (= (_1!1071 (h!2066 lt!32673)) (_1!1071 lt!32383)))))))

(assert (= (and d!16867 c!10897) b!73287))

(assert (= (and d!16867 (not c!10897)) b!73288))

(assert (= (and b!73288 c!10898) b!73289))

(assert (= (and b!73288 (not c!10898)) b!73290))

(declare-fun m!71475 () Bool)

(assert (=> b!73289 m!71475))

(assert (=> d!16779 d!16867))

(declare-fun d!16869 () Bool)

(assert (=> d!16869 (= (getValueByKey!131 lt!32673 (_1!1071 lt!32383)) (Some!136 (_2!1071 lt!32383)))))

(declare-fun lt!32776 () Unit!2066)

(assert (=> d!16869 (= lt!32776 (choose!420 lt!32673 (_1!1071 lt!32383) (_2!1071 lt!32383)))))

(declare-fun e!47934 () Bool)

(assert (=> d!16869 e!47934))

(declare-fun res!38843 () Bool)

(assert (=> d!16869 (=> (not res!38843) (not e!47934))))

(assert (=> d!16869 (= res!38843 (isStrictlySorted!287 lt!32673))))

(assert (=> d!16869 (= (lemmaContainsTupThenGetReturnValue!51 lt!32673 (_1!1071 lt!32383) (_2!1071 lt!32383)) lt!32776)))

(declare-fun b!73291 () Bool)

(declare-fun res!38844 () Bool)

(assert (=> b!73291 (=> (not res!38844) (not e!47934))))

(assert (=> b!73291 (= res!38844 (containsKey!135 lt!32673 (_1!1071 lt!32383)))))

(declare-fun b!73292 () Bool)

(assert (=> b!73292 (= e!47934 (contains!722 lt!32673 (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(assert (= (and d!16869 res!38843) b!73291))

(assert (= (and b!73291 res!38844) b!73292))

(assert (=> d!16869 m!71151))

(declare-fun m!71477 () Bool)

(assert (=> d!16869 m!71477))

(declare-fun m!71479 () Bool)

(assert (=> d!16869 m!71479))

(declare-fun m!71481 () Bool)

(assert (=> b!73291 m!71481))

(declare-fun m!71483 () Bool)

(assert (=> b!73292 m!71483))

(assert (=> d!16779 d!16869))

(declare-fun d!16871 () Bool)

(declare-fun e!47937 () Bool)

(assert (=> d!16871 e!47937))

(declare-fun res!38846 () Bool)

(assert (=> d!16871 (=> (not res!38846) (not e!47937))))

(declare-fun lt!32777 () List!1483)

(assert (=> d!16871 (= res!38846 (isStrictlySorted!287 lt!32777))))

(declare-fun e!47939 () List!1483)

(assert (=> d!16871 (= lt!32777 e!47939)))

(declare-fun c!10901 () Bool)

(assert (=> d!16871 (= c!10901 (and ((_ is Cons!1479) (toList!717 lt!32377)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 lt!32383))))))

(assert (=> d!16871 (isStrictlySorted!287 (toList!717 lt!32377))))

(assert (=> d!16871 (= (insertStrictlySorted!54 (toList!717 lt!32377) (_1!1071 lt!32383) (_2!1071 lt!32383)) lt!32777)))

(declare-fun b!73293 () Bool)

(declare-fun res!38845 () Bool)

(assert (=> b!73293 (=> (not res!38845) (not e!47937))))

(assert (=> b!73293 (= res!38845 (containsKey!135 lt!32777 (_1!1071 lt!32383)))))

(declare-fun b!73294 () Bool)

(declare-fun e!47938 () List!1483)

(declare-fun call!6455 () List!1483)

(assert (=> b!73294 (= e!47938 call!6455)))

(declare-fun bm!6450 () Bool)

(declare-fun call!6453 () List!1483)

(declare-fun call!6454 () List!1483)

(assert (=> bm!6450 (= call!6453 call!6454)))

(declare-fun b!73295 () Bool)

(assert (=> b!73295 (= e!47939 call!6454)))

(declare-fun b!73296 () Bool)

(declare-fun e!47935 () List!1483)

(assert (=> b!73296 (= e!47935 (insertStrictlySorted!54 (t!5031 (toList!717 lt!32377)) (_1!1071 lt!32383) (_2!1071 lt!32383)))))

(declare-fun b!73297 () Bool)

(assert (=> b!73297 (= e!47938 call!6455)))

(declare-fun b!73298 () Bool)

(assert (=> b!73298 (= e!47937 (contains!722 lt!32777 (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun b!73299 () Bool)

(declare-fun c!10899 () Bool)

(assert (=> b!73299 (= c!10899 (and ((_ is Cons!1479) (toList!717 lt!32377)) (bvsgt (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 lt!32383))))))

(declare-fun e!47936 () List!1483)

(assert (=> b!73299 (= e!47936 e!47938)))

(declare-fun bm!6451 () Bool)

(assert (=> bm!6451 (= call!6454 ($colon$colon!65 e!47935 (ite c!10901 (h!2066 (toList!717 lt!32377)) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383)))))))

(declare-fun c!10902 () Bool)

(assert (=> bm!6451 (= c!10902 c!10901)))

(declare-fun bm!6452 () Bool)

(assert (=> bm!6452 (= call!6455 call!6453)))

(declare-fun b!73300 () Bool)

(assert (=> b!73300 (= e!47939 e!47936)))

(declare-fun c!10900 () Bool)

(assert (=> b!73300 (= c!10900 (and ((_ is Cons!1479) (toList!717 lt!32377)) (= (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 lt!32383))))))

(declare-fun b!73301 () Bool)

(assert (=> b!73301 (= e!47936 call!6453)))

(declare-fun b!73302 () Bool)

(assert (=> b!73302 (= e!47935 (ite c!10900 (t!5031 (toList!717 lt!32377)) (ite c!10899 (Cons!1479 (h!2066 (toList!717 lt!32377)) (t!5031 (toList!717 lt!32377))) Nil!1480)))))

(assert (= (and d!16871 c!10901) b!73295))

(assert (= (and d!16871 (not c!10901)) b!73300))

(assert (= (and b!73300 c!10900) b!73301))

(assert (= (and b!73300 (not c!10900)) b!73299))

(assert (= (and b!73299 c!10899) b!73297))

(assert (= (and b!73299 (not c!10899)) b!73294))

(assert (= (or b!73297 b!73294) bm!6452))

(assert (= (or b!73301 bm!6452) bm!6450))

(assert (= (or b!73295 bm!6450) bm!6451))

(assert (= (and bm!6451 c!10902) b!73296))

(assert (= (and bm!6451 (not c!10902)) b!73302))

(assert (= (and d!16871 res!38846) b!73293))

(assert (= (and b!73293 res!38845) b!73298))

(declare-fun m!71485 () Bool)

(assert (=> bm!6451 m!71485))

(declare-fun m!71487 () Bool)

(assert (=> d!16871 m!71487))

(assert (=> d!16871 m!71451))

(declare-fun m!71489 () Bool)

(assert (=> b!73296 m!71489))

(declare-fun m!71491 () Bool)

(assert (=> b!73298 m!71491))

(declare-fun m!71493 () Bool)

(assert (=> b!73293 m!71493))

(assert (=> d!16779 d!16871))

(declare-fun d!16873 () Bool)

(declare-fun isEmpty!321 (List!1483) Bool)

(assert (=> d!16873 (= (isEmpty!320 lt!32663) (isEmpty!321 (toList!717 lt!32663)))))

(declare-fun bs!3141 () Bool)

(assert (= bs!3141 d!16873))

(declare-fun m!71495 () Bool)

(assert (=> bs!3141 m!71495))

(assert (=> b!73084 d!16873))

(declare-fun b!73303 () Bool)

(declare-fun e!47940 () Option!137)

(assert (=> b!73303 (= e!47940 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32639)))))))

(declare-fun b!73306 () Bool)

(declare-fun e!47941 () Option!137)

(assert (=> b!73306 (= e!47941 None!135)))

(declare-fun b!73305 () Bool)

(assert (=> b!73305 (= e!47941 (getValueByKey!131 (t!5031 (toList!717 lt!32639)) (_1!1071 lt!32376)))))

(declare-fun d!16875 () Bool)

(declare-fun c!10903 () Bool)

(assert (=> d!16875 (= c!10903 (and ((_ is Cons!1479) (toList!717 lt!32639)) (= (_1!1071 (h!2066 (toList!717 lt!32639))) (_1!1071 lt!32376))))))

(assert (=> d!16875 (= (getValueByKey!131 (toList!717 lt!32639) (_1!1071 lt!32376)) e!47940)))

(declare-fun b!73304 () Bool)

(assert (=> b!73304 (= e!47940 e!47941)))

(declare-fun c!10904 () Bool)

(assert (=> b!73304 (= c!10904 (and ((_ is Cons!1479) (toList!717 lt!32639)) (not (= (_1!1071 (h!2066 (toList!717 lt!32639))) (_1!1071 lt!32376)))))))

(assert (= (and d!16875 c!10903) b!73303))

(assert (= (and d!16875 (not c!10903)) b!73304))

(assert (= (and b!73304 c!10904) b!73305))

(assert (= (and b!73304 (not c!10904)) b!73306))

(declare-fun m!71497 () Bool)

(assert (=> b!73305 m!71497))

(assert (=> b!73052 d!16875))

(assert (=> d!16765 d!16829))

(declare-fun d!16877 () Bool)

(declare-fun res!38847 () Bool)

(declare-fun e!47942 () Bool)

(assert (=> d!16877 (=> (not res!38847) (not e!47942))))

(assert (=> d!16877 (= res!38847 (simpleValid!51 (_2!1072 lt!32534)))))

(assert (=> d!16877 (= (valid!300 (_2!1072 lt!32534)) e!47942)))

(declare-fun b!73307 () Bool)

(declare-fun res!38848 () Bool)

(assert (=> b!73307 (=> (not res!38848) (not e!47942))))

(assert (=> b!73307 (= res!38848 (= (arrayCountValidKeys!0 (_keys!3863 (_2!1072 lt!32534)) #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))) (_size!396 (_2!1072 lt!32534))))))

(declare-fun b!73308 () Bool)

(declare-fun res!38849 () Bool)

(assert (=> b!73308 (=> (not res!38849) (not e!47942))))

(assert (=> b!73308 (= res!38849 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3863 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534))))))

(declare-fun b!73309 () Bool)

(assert (=> b!73309 (= e!47942 (arrayNoDuplicates!0 (_keys!3863 (_2!1072 lt!32534)) #b00000000000000000000000000000000 Nil!1481))))

(assert (= (and d!16877 res!38847) b!73307))

(assert (= (and b!73307 res!38848) b!73308))

(assert (= (and b!73308 res!38849) b!73309))

(declare-fun m!71499 () Bool)

(assert (=> d!16877 m!71499))

(declare-fun m!71501 () Bool)

(assert (=> b!73307 m!71501))

(declare-fun m!71503 () Bool)

(assert (=> b!73308 m!71503))

(declare-fun m!71505 () Bool)

(assert (=> b!73309 m!71505))

(assert (=> d!16755 d!16877))

(assert (=> d!16755 d!16747))

(declare-fun d!16879 () Bool)

(declare-fun e!47944 () Bool)

(assert (=> d!16879 e!47944))

(declare-fun res!38850 () Bool)

(assert (=> d!16879 (=> res!38850 e!47944)))

(declare-fun lt!32781 () Bool)

(assert (=> d!16879 (= res!38850 (not lt!32781))))

(declare-fun lt!32779 () Bool)

(assert (=> d!16879 (= lt!32781 lt!32779)))

(declare-fun lt!32778 () Unit!2066)

(declare-fun e!47943 () Unit!2066)

(assert (=> d!16879 (= lt!32778 e!47943)))

(declare-fun c!10905 () Bool)

(assert (=> d!16879 (= c!10905 lt!32779)))

(assert (=> d!16879 (= lt!32779 (containsKey!135 (toList!717 lt!32668) (_1!1071 lt!32383)))))

(assert (=> d!16879 (= (contains!719 lt!32668 (_1!1071 lt!32383)) lt!32781)))

(declare-fun b!73310 () Bool)

(declare-fun lt!32780 () Unit!2066)

(assert (=> b!73310 (= e!47943 lt!32780)))

(assert (=> b!73310 (= lt!32780 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32668) (_1!1071 lt!32383)))))

(assert (=> b!73310 (isDefined!85 (getValueByKey!131 (toList!717 lt!32668) (_1!1071 lt!32383)))))

(declare-fun b!73311 () Bool)

(declare-fun Unit!2090 () Unit!2066)

(assert (=> b!73311 (= e!47943 Unit!2090)))

(declare-fun b!73312 () Bool)

(assert (=> b!73312 (= e!47944 (isDefined!85 (getValueByKey!131 (toList!717 lt!32668) (_1!1071 lt!32383))))))

(assert (= (and d!16879 c!10905) b!73310))

(assert (= (and d!16879 (not c!10905)) b!73311))

(assert (= (and d!16879 (not res!38850)) b!73312))

(declare-fun m!71507 () Bool)

(assert (=> d!16879 m!71507))

(declare-fun m!71509 () Bool)

(assert (=> b!73310 m!71509))

(assert (=> b!73310 m!71145))

(assert (=> b!73310 m!71145))

(declare-fun m!71511 () Bool)

(assert (=> b!73310 m!71511))

(assert (=> b!73312 m!71145))

(assert (=> b!73312 m!71145))

(assert (=> b!73312 m!71511))

(assert (=> d!16777 d!16879))

(declare-fun b!73313 () Bool)

(declare-fun e!47945 () Option!137)

(assert (=> b!73313 (= e!47945 (Some!136 (_2!1071 (h!2066 lt!32669))))))

(declare-fun b!73316 () Bool)

(declare-fun e!47946 () Option!137)

(assert (=> b!73316 (= e!47946 None!135)))

(declare-fun b!73315 () Bool)

(assert (=> b!73315 (= e!47946 (getValueByKey!131 (t!5031 lt!32669) (_1!1071 lt!32383)))))

(declare-fun d!16881 () Bool)

(declare-fun c!10906 () Bool)

(assert (=> d!16881 (= c!10906 (and ((_ is Cons!1479) lt!32669) (= (_1!1071 (h!2066 lt!32669)) (_1!1071 lt!32383))))))

(assert (=> d!16881 (= (getValueByKey!131 lt!32669 (_1!1071 lt!32383)) e!47945)))

(declare-fun b!73314 () Bool)

(assert (=> b!73314 (= e!47945 e!47946)))

(declare-fun c!10907 () Bool)

(assert (=> b!73314 (= c!10907 (and ((_ is Cons!1479) lt!32669) (not (= (_1!1071 (h!2066 lt!32669)) (_1!1071 lt!32383)))))))

(assert (= (and d!16881 c!10906) b!73313))

(assert (= (and d!16881 (not c!10906)) b!73314))

(assert (= (and b!73314 c!10907) b!73315))

(assert (= (and b!73314 (not c!10907)) b!73316))

(declare-fun m!71513 () Bool)

(assert (=> b!73315 m!71513))

(assert (=> d!16777 d!16881))

(declare-fun d!16883 () Bool)

(assert (=> d!16883 (= (getValueByKey!131 lt!32669 (_1!1071 lt!32383)) (Some!136 (_2!1071 lt!32383)))))

(declare-fun lt!32782 () Unit!2066)

(assert (=> d!16883 (= lt!32782 (choose!420 lt!32669 (_1!1071 lt!32383) (_2!1071 lt!32383)))))

(declare-fun e!47947 () Bool)

(assert (=> d!16883 e!47947))

(declare-fun res!38851 () Bool)

(assert (=> d!16883 (=> (not res!38851) (not e!47947))))

(assert (=> d!16883 (= res!38851 (isStrictlySorted!287 lt!32669))))

(assert (=> d!16883 (= (lemmaContainsTupThenGetReturnValue!51 lt!32669 (_1!1071 lt!32383) (_2!1071 lt!32383)) lt!32782)))

(declare-fun b!73317 () Bool)

(declare-fun res!38852 () Bool)

(assert (=> b!73317 (=> (not res!38852) (not e!47947))))

(assert (=> b!73317 (= res!38852 (containsKey!135 lt!32669 (_1!1071 lt!32383)))))

(declare-fun b!73318 () Bool)

(assert (=> b!73318 (= e!47947 (contains!722 lt!32669 (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(assert (= (and d!16883 res!38851) b!73317))

(assert (= (and b!73317 res!38852) b!73318))

(assert (=> d!16883 m!71139))

(declare-fun m!71515 () Bool)

(assert (=> d!16883 m!71515))

(declare-fun m!71517 () Bool)

(assert (=> d!16883 m!71517))

(declare-fun m!71519 () Bool)

(assert (=> b!73317 m!71519))

(declare-fun m!71521 () Bool)

(assert (=> b!73318 m!71521))

(assert (=> d!16777 d!16883))

(declare-fun d!16885 () Bool)

(declare-fun e!47950 () Bool)

(assert (=> d!16885 e!47950))

(declare-fun res!38854 () Bool)

(assert (=> d!16885 (=> (not res!38854) (not e!47950))))

(declare-fun lt!32783 () List!1483)

(assert (=> d!16885 (= res!38854 (isStrictlySorted!287 lt!32783))))

(declare-fun e!47952 () List!1483)

(assert (=> d!16885 (= lt!32783 e!47952)))

(declare-fun c!10910 () Bool)

(assert (=> d!16885 (= c!10910 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 lt!32376))) (bvslt (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 lt!32376)))) (_1!1071 lt!32383))))))

(assert (=> d!16885 (isStrictlySorted!287 (toList!717 (+!93 lt!32377 lt!32376)))))

(assert (=> d!16885 (= (insertStrictlySorted!54 (toList!717 (+!93 lt!32377 lt!32376)) (_1!1071 lt!32383) (_2!1071 lt!32383)) lt!32783)))

(declare-fun b!73319 () Bool)

(declare-fun res!38853 () Bool)

(assert (=> b!73319 (=> (not res!38853) (not e!47950))))

(assert (=> b!73319 (= res!38853 (containsKey!135 lt!32783 (_1!1071 lt!32383)))))

(declare-fun b!73320 () Bool)

(declare-fun e!47951 () List!1483)

(declare-fun call!6458 () List!1483)

(assert (=> b!73320 (= e!47951 call!6458)))

(declare-fun bm!6453 () Bool)

(declare-fun call!6456 () List!1483)

(declare-fun call!6457 () List!1483)

(assert (=> bm!6453 (= call!6456 call!6457)))

(declare-fun b!73321 () Bool)

(assert (=> b!73321 (= e!47952 call!6457)))

(declare-fun e!47948 () List!1483)

(declare-fun b!73322 () Bool)

(assert (=> b!73322 (= e!47948 (insertStrictlySorted!54 (t!5031 (toList!717 (+!93 lt!32377 lt!32376))) (_1!1071 lt!32383) (_2!1071 lt!32383)))))

(declare-fun b!73323 () Bool)

(assert (=> b!73323 (= e!47951 call!6458)))

(declare-fun b!73324 () Bool)

(assert (=> b!73324 (= e!47950 (contains!722 lt!32783 (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun b!73325 () Bool)

(declare-fun c!10908 () Bool)

(assert (=> b!73325 (= c!10908 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 lt!32376))) (bvsgt (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 lt!32376)))) (_1!1071 lt!32383))))))

(declare-fun e!47949 () List!1483)

(assert (=> b!73325 (= e!47949 e!47951)))

(declare-fun bm!6454 () Bool)

(assert (=> bm!6454 (= call!6457 ($colon$colon!65 e!47948 (ite c!10910 (h!2066 (toList!717 (+!93 lt!32377 lt!32376))) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383)))))))

(declare-fun c!10911 () Bool)

(assert (=> bm!6454 (= c!10911 c!10910)))

(declare-fun bm!6455 () Bool)

(assert (=> bm!6455 (= call!6458 call!6456)))

(declare-fun b!73326 () Bool)

(assert (=> b!73326 (= e!47952 e!47949)))

(declare-fun c!10909 () Bool)

(assert (=> b!73326 (= c!10909 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 lt!32376))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 lt!32376)))) (_1!1071 lt!32383))))))

(declare-fun b!73327 () Bool)

(assert (=> b!73327 (= e!47949 call!6456)))

(declare-fun b!73328 () Bool)

(assert (=> b!73328 (= e!47948 (ite c!10909 (t!5031 (toList!717 (+!93 lt!32377 lt!32376))) (ite c!10908 (Cons!1479 (h!2066 (toList!717 (+!93 lt!32377 lt!32376))) (t!5031 (toList!717 (+!93 lt!32377 lt!32376)))) Nil!1480)))))

(assert (= (and d!16885 c!10910) b!73321))

(assert (= (and d!16885 (not c!10910)) b!73326))

(assert (= (and b!73326 c!10909) b!73327))

(assert (= (and b!73326 (not c!10909)) b!73325))

(assert (= (and b!73325 c!10908) b!73323))

(assert (= (and b!73325 (not c!10908)) b!73320))

(assert (= (or b!73323 b!73320) bm!6455))

(assert (= (or b!73327 bm!6455) bm!6453))

(assert (= (or b!73321 bm!6453) bm!6454))

(assert (= (and bm!6454 c!10911) b!73322))

(assert (= (and bm!6454 (not c!10911)) b!73328))

(assert (= (and d!16885 res!38854) b!73319))

(assert (= (and b!73319 res!38853) b!73324))

(declare-fun m!71523 () Bool)

(assert (=> bm!6454 m!71523))

(declare-fun m!71525 () Bool)

(assert (=> d!16885 m!71525))

(declare-fun m!71527 () Bool)

(assert (=> d!16885 m!71527))

(declare-fun m!71529 () Bool)

(assert (=> b!73322 m!71529))

(declare-fun m!71531 () Bool)

(assert (=> b!73324 m!71531))

(declare-fun m!71533 () Bool)

(assert (=> b!73319 m!71533))

(assert (=> d!16777 d!16885))

(assert (=> d!16737 d!16741))

(declare-fun d!16887 () Bool)

(assert (=> d!16887 (not (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!16887 true))

(declare-fun _$68!55 () Unit!2066)

(assert (=> d!16887 (= (choose!68 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481)) _$68!55)))

(declare-fun bs!3142 () Bool)

(assert (= bs!3142 d!16887))

(assert (=> bs!3142 m!70791))

(assert (=> bs!3142 m!70819))

(assert (=> d!16737 d!16887))

(declare-fun d!16889 () Bool)

(declare-fun e!47953 () Bool)

(assert (=> d!16889 e!47953))

(declare-fun res!38856 () Bool)

(assert (=> d!16889 (=> (not res!38856) (not e!47953))))

(declare-fun lt!32786 () ListLongMap!1403)

(assert (=> d!16889 (= res!38856 (contains!719 lt!32786 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun lt!32787 () List!1483)

(assert (=> d!16889 (= lt!32786 (ListLongMap!1404 lt!32787))))

(declare-fun lt!32785 () Unit!2066)

(declare-fun lt!32784 () Unit!2066)

(assert (=> d!16889 (= lt!32785 lt!32784)))

(assert (=> d!16889 (= (getValueByKey!131 lt!32787 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) (Some!136 (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!16889 (= lt!32784 (lemmaContainsTupThenGetReturnValue!51 lt!32787 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!16889 (= lt!32787 (insertStrictlySorted!54 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424))) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!16889 (= (+!93 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424)) (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32786)))

(declare-fun b!73329 () Bool)

(declare-fun res!38855 () Bool)

(assert (=> b!73329 (=> (not res!38855) (not e!47953))))

(assert (=> b!73329 (= res!38855 (= (getValueByKey!131 (toList!717 lt!32786) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) (Some!136 (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun b!73330 () Bool)

(assert (=> b!73330 (= e!47953 (contains!722 (toList!717 lt!32786) (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (= (and d!16889 res!38856) b!73329))

(assert (= (and b!73329 res!38855) b!73330))

(declare-fun m!71535 () Bool)

(assert (=> d!16889 m!71535))

(declare-fun m!71537 () Bool)

(assert (=> d!16889 m!71537))

(declare-fun m!71539 () Bool)

(assert (=> d!16889 m!71539))

(declare-fun m!71541 () Bool)

(assert (=> d!16889 m!71541))

(declare-fun m!71543 () Bool)

(assert (=> b!73329 m!71543))

(declare-fun m!71545 () Bool)

(assert (=> b!73330 m!71545))

(assert (=> bm!6417 d!16889))

(declare-fun d!16891 () Bool)

(declare-fun lt!32790 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!77 (List!1483) (InoxSet tuple2!2120))

(assert (=> d!16891 (= lt!32790 (select (content!77 (toList!717 lt!32668)) lt!32383))))

(declare-fun e!47959 () Bool)

(assert (=> d!16891 (= lt!32790 e!47959)))

(declare-fun res!38861 () Bool)

(assert (=> d!16891 (=> (not res!38861) (not e!47959))))

(assert (=> d!16891 (= res!38861 ((_ is Cons!1479) (toList!717 lt!32668)))))

(assert (=> d!16891 (= (contains!722 (toList!717 lt!32668) lt!32383) lt!32790)))

(declare-fun b!73335 () Bool)

(declare-fun e!47958 () Bool)

(assert (=> b!73335 (= e!47959 e!47958)))

(declare-fun res!38862 () Bool)

(assert (=> b!73335 (=> res!38862 e!47958)))

(assert (=> b!73335 (= res!38862 (= (h!2066 (toList!717 lt!32668)) lt!32383))))

(declare-fun b!73336 () Bool)

(assert (=> b!73336 (= e!47958 (contains!722 (t!5031 (toList!717 lt!32668)) lt!32383))))

(assert (= (and d!16891 res!38861) b!73335))

(assert (= (and b!73335 (not res!38862)) b!73336))

(declare-fun m!71547 () Bool)

(assert (=> d!16891 m!71547))

(declare-fun m!71549 () Bool)

(assert (=> d!16891 m!71549))

(declare-fun m!71551 () Bool)

(assert (=> b!73336 m!71551))

(assert (=> b!73093 d!16891))

(declare-fun d!16893 () Bool)

(declare-fun e!47962 () Bool)

(assert (=> d!16893 e!47962))

(declare-fun res!38867 () Bool)

(assert (=> d!16893 (=> (not res!38867) (not e!47962))))

(declare-fun lt!32796 () SeekEntryResult!239)

(assert (=> d!16893 (= res!38867 ((_ is Found!239) lt!32796))))

(assert (=> d!16893 (= lt!32796 (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun lt!32795 () Unit!2066)

(declare-fun choose!422 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) Int) Unit!2066)

(assert (=> d!16893 (= lt!32795 (choose!422 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(assert (=> d!16893 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16893 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)) lt!32795)))

(declare-fun b!73341 () Bool)

(declare-fun res!38868 () Bool)

(assert (=> b!73341 (=> (not res!38868) (not e!47962))))

(assert (=> b!73341 (= res!38868 (inRange!0 (index!3088 lt!32796) (mask!6178 newMap!16)))))

(declare-fun b!73342 () Bool)

(assert (=> b!73342 (= e!47962 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32796)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> b!73342 (and (bvsge (index!3088 lt!32796) #b00000000000000000000000000000000) (bvslt (index!3088 lt!32796) (size!2085 (_keys!3863 newMap!16))))))

(assert (= (and d!16893 res!38867) b!73341))

(assert (= (and b!73341 res!38868) b!73342))

(assert (=> d!16893 m!70791))

(assert (=> d!16893 m!70979))

(assert (=> d!16893 m!70791))

(declare-fun m!71553 () Bool)

(assert (=> d!16893 m!71553))

(assert (=> d!16893 m!71219))

(declare-fun m!71555 () Bool)

(assert (=> b!73341 m!71555))

(declare-fun m!71557 () Bool)

(assert (=> b!73342 m!71557))

(assert (=> bm!6389 d!16893))

(assert (=> b!73090 d!16789))

(declare-fun d!16895 () Bool)

(declare-fun lt!32799 () Bool)

(declare-fun content!78 (List!1484) (InoxSet (_ BitVec 64)))

(assert (=> d!16895 (= lt!32799 (select (content!78 Nil!1481) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun e!47968 () Bool)

(assert (=> d!16895 (= lt!32799 e!47968)))

(declare-fun res!38873 () Bool)

(assert (=> d!16895 (=> (not res!38873) (not e!47968))))

(assert (=> d!16895 (= res!38873 ((_ is Cons!1480) Nil!1481))))

(assert (=> d!16895 (= (contains!721 Nil!1481 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) lt!32799)))

(declare-fun b!73347 () Bool)

(declare-fun e!47967 () Bool)

(assert (=> b!73347 (= e!47968 e!47967)))

(declare-fun res!38874 () Bool)

(assert (=> b!73347 (=> res!38874 e!47967)))

(assert (=> b!73347 (= res!38874 (= (h!2067 Nil!1481) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!73348 () Bool)

(assert (=> b!73348 (= e!47967 (contains!721 (t!5032 Nil!1481) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (= (and d!16895 res!38873) b!73347))

(assert (= (and b!73347 (not res!38874)) b!73348))

(declare-fun m!71559 () Bool)

(assert (=> d!16895 m!71559))

(assert (=> d!16895 m!70791))

(declare-fun m!71561 () Bool)

(assert (=> d!16895 m!71561))

(assert (=> b!73348 m!70791))

(declare-fun m!71563 () Bool)

(assert (=> b!73348 m!71563))

(assert (=> b!72833 d!16895))

(assert (=> b!73039 d!16793))

(assert (=> b!73089 d!16839))

(declare-fun d!16897 () Bool)

(declare-fun e!47970 () Bool)

(assert (=> d!16897 e!47970))

(declare-fun res!38875 () Bool)

(assert (=> d!16897 (=> res!38875 e!47970)))

(declare-fun lt!32803 () Bool)

(assert (=> d!16897 (= res!38875 (not lt!32803))))

(declare-fun lt!32801 () Bool)

(assert (=> d!16897 (= lt!32803 lt!32801)))

(declare-fun lt!32800 () Unit!2066)

(declare-fun e!47969 () Unit!2066)

(assert (=> d!16897 (= lt!32800 e!47969)))

(declare-fun c!10912 () Bool)

(assert (=> d!16897 (= c!10912 lt!32801)))

(assert (=> d!16897 (= lt!32801 (containsKey!135 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660))))

(assert (=> d!16897 (= (contains!719 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)) lt!32660) lt!32803)))

(declare-fun b!73349 () Bool)

(declare-fun lt!32802 () Unit!2066)

(assert (=> b!73349 (= e!47969 lt!32802)))

(assert (=> b!73349 (= lt!32802 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660))))

(assert (=> b!73349 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660))))

(declare-fun b!73350 () Bool)

(declare-fun Unit!2091 () Unit!2066)

(assert (=> b!73350 (= e!47969 Unit!2091)))

(declare-fun b!73351 () Bool)

(assert (=> b!73351 (= e!47970 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660)))))

(assert (= (and d!16897 c!10912) b!73349))

(assert (= (and d!16897 (not c!10912)) b!73350))

(assert (= (and d!16897 (not res!38875)) b!73351))

(declare-fun m!71565 () Bool)

(assert (=> d!16897 m!71565))

(declare-fun m!71567 () Bool)

(assert (=> b!73349 m!71567))

(declare-fun m!71569 () Bool)

(assert (=> b!73349 m!71569))

(assert (=> b!73349 m!71569))

(declare-fun m!71571 () Bool)

(assert (=> b!73349 m!71571))

(assert (=> b!73351 m!71569))

(assert (=> b!73351 m!71569))

(assert (=> b!73351 m!71571))

(assert (=> b!73089 d!16897))

(declare-fun d!16899 () Bool)

(declare-fun e!47971 () Bool)

(assert (=> d!16899 e!47971))

(declare-fun res!38877 () Bool)

(assert (=> d!16899 (=> (not res!38877) (not e!47971))))

(declare-fun lt!32806 () ListLongMap!1403)

(assert (=> d!16899 (= res!38877 (contains!719 lt!32806 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!32807 () List!1483)

(assert (=> d!16899 (= lt!32806 (ListLongMap!1404 lt!32807))))

(declare-fun lt!32805 () Unit!2066)

(declare-fun lt!32804 () Unit!2066)

(assert (=> d!16899 (= lt!32805 lt!32804)))

(assert (=> d!16899 (= (getValueByKey!131 lt!32807 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16899 (= lt!32804 (lemmaContainsTupThenGetReturnValue!51 lt!32807 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16899 (= lt!32807 (insertStrictlySorted!54 (toList!717 call!6427) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16899 (= (+!93 call!6427 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!32806)))

(declare-fun b!73352 () Bool)

(declare-fun res!38876 () Bool)

(assert (=> b!73352 (=> (not res!38876) (not e!47971))))

(assert (=> b!73352 (= res!38876 (= (getValueByKey!131 (toList!717 lt!32806) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!73353 () Bool)

(assert (=> b!73353 (= e!47971 (contains!722 (toList!717 lt!32806) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!16899 res!38877) b!73352))

(assert (= (and b!73352 res!38876) b!73353))

(declare-fun m!71573 () Bool)

(assert (=> d!16899 m!71573))

(declare-fun m!71575 () Bool)

(assert (=> d!16899 m!71575))

(declare-fun m!71577 () Bool)

(assert (=> d!16899 m!71577))

(declare-fun m!71579 () Bool)

(assert (=> d!16899 m!71579))

(declare-fun m!71581 () Bool)

(assert (=> b!73352 m!71581))

(declare-fun m!71583 () Bool)

(assert (=> b!73353 m!71583))

(assert (=> b!73089 d!16899))

(declare-fun d!16901 () Bool)

(declare-fun e!47972 () Bool)

(assert (=> d!16901 e!47972))

(declare-fun res!38879 () Bool)

(assert (=> d!16901 (=> (not res!38879) (not e!47972))))

(declare-fun lt!32810 () ListLongMap!1403)

(assert (=> d!16901 (= res!38879 (contains!719 lt!32810 (_1!1071 (tuple2!2121 lt!32659 lt!32662))))))

(declare-fun lt!32811 () List!1483)

(assert (=> d!16901 (= lt!32810 (ListLongMap!1404 lt!32811))))

(declare-fun lt!32809 () Unit!2066)

(declare-fun lt!32808 () Unit!2066)

(assert (=> d!16901 (= lt!32809 lt!32808)))

(assert (=> d!16901 (= (getValueByKey!131 lt!32811 (_1!1071 (tuple2!2121 lt!32659 lt!32662))) (Some!136 (_2!1071 (tuple2!2121 lt!32659 lt!32662))))))

(assert (=> d!16901 (= lt!32808 (lemmaContainsTupThenGetReturnValue!51 lt!32811 (_1!1071 (tuple2!2121 lt!32659 lt!32662)) (_2!1071 (tuple2!2121 lt!32659 lt!32662))))))

(assert (=> d!16901 (= lt!32811 (insertStrictlySorted!54 (toList!717 lt!32664) (_1!1071 (tuple2!2121 lt!32659 lt!32662)) (_2!1071 (tuple2!2121 lt!32659 lt!32662))))))

(assert (=> d!16901 (= (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)) lt!32810)))

(declare-fun b!73354 () Bool)

(declare-fun res!38878 () Bool)

(assert (=> b!73354 (=> (not res!38878) (not e!47972))))

(assert (=> b!73354 (= res!38878 (= (getValueByKey!131 (toList!717 lt!32810) (_1!1071 (tuple2!2121 lt!32659 lt!32662))) (Some!136 (_2!1071 (tuple2!2121 lt!32659 lt!32662)))))))

(declare-fun b!73355 () Bool)

(assert (=> b!73355 (= e!47972 (contains!722 (toList!717 lt!32810) (tuple2!2121 lt!32659 lt!32662)))))

(assert (= (and d!16901 res!38879) b!73354))

(assert (= (and b!73354 res!38878) b!73355))

(declare-fun m!71585 () Bool)

(assert (=> d!16901 m!71585))

(declare-fun m!71587 () Bool)

(assert (=> d!16901 m!71587))

(declare-fun m!71589 () Bool)

(assert (=> d!16901 m!71589))

(declare-fun m!71591 () Bool)

(assert (=> d!16901 m!71591))

(declare-fun m!71593 () Bool)

(assert (=> b!73354 m!71593))

(declare-fun m!71595 () Bool)

(assert (=> b!73355 m!71595))

(assert (=> b!73089 d!16901))

(declare-fun d!16903 () Bool)

(assert (=> d!16903 (not (contains!719 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)) lt!32660))))

(declare-fun lt!32814 () Unit!2066)

(declare-fun choose!423 (ListLongMap!1403 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2066)

(assert (=> d!16903 (= lt!32814 (choose!423 lt!32664 lt!32659 lt!32662 lt!32660))))

(declare-fun e!47975 () Bool)

(assert (=> d!16903 e!47975))

(declare-fun res!38882 () Bool)

(assert (=> d!16903 (=> (not res!38882) (not e!47975))))

(assert (=> d!16903 (= res!38882 (not (contains!719 lt!32664 lt!32660)))))

(assert (=> d!16903 (= (addStillNotContains!25 lt!32664 lt!32659 lt!32662 lt!32660) lt!32814)))

(declare-fun b!73359 () Bool)

(assert (=> b!73359 (= e!47975 (not (= lt!32659 lt!32660)))))

(assert (= (and d!16903 res!38882) b!73359))

(assert (=> d!16903 m!71119))

(assert (=> d!16903 m!71119))

(assert (=> d!16903 m!71125))

(declare-fun m!71597 () Bool)

(assert (=> d!16903 m!71597))

(declare-fun m!71599 () Bool)

(assert (=> d!16903 m!71599))

(assert (=> b!73089 d!16903))

(declare-fun d!16905 () Bool)

(assert (=> d!16905 (= (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (and (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!72831 d!16905))

(declare-fun d!16907 () Bool)

(assert (=> d!16907 (= (apply!75 lt!32604 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1147 (getValueByKey!131 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3143 () Bool)

(assert (= bs!3143 d!16907))

(declare-fun m!71601 () Bool)

(assert (=> bs!3143 m!71601))

(assert (=> bs!3143 m!71601))

(declare-fun m!71603 () Bool)

(assert (=> bs!3143 m!71603))

(assert (=> b!73038 d!16907))

(declare-fun b!73394 () Bool)

(declare-fun res!38909 () Bool)

(declare-fun e!47998 () Bool)

(assert (=> b!73394 (=> (not res!38909) (not e!47998))))

(declare-fun lt!32894 () tuple2!2122)

(assert (=> b!73394 (= res!38909 (contains!719 (map!1150 (_2!1072 lt!32894)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!73395 () Bool)

(declare-fun e!47997 () Bool)

(declare-fun call!6469 () Bool)

(assert (=> b!73395 (= e!47997 (not call!6469))))

(declare-fun bm!6464 () Bool)

(declare-fun call!6468 () Bool)

(declare-fun c!10921 () Bool)

(declare-fun lt!32891 () SeekEntryResult!239)

(declare-fun c!10923 () Bool)

(declare-fun lt!32902 () SeekEntryResult!239)

(assert (=> bm!6464 (= call!6468 (inRange!0 (ite c!10923 (index!3088 lt!32891) (ite c!10921 (index!3087 lt!32902) (index!3090 lt!32902))) (mask!6178 newMap!16)))))

(declare-fun b!73396 () Bool)

(declare-fun e!47992 () Unit!2066)

(declare-fun Unit!2092 () Unit!2066)

(assert (=> b!73396 (= e!47992 Unit!2092)))

(declare-fun lt!32904 () Unit!2066)

(assert (=> b!73396 (= lt!32904 (lemmaInListMapThenSeekEntryOrOpenFindsIt!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(declare-fun call!6467 () SeekEntryResult!239)

(assert (=> b!73396 (= lt!32891 call!6467)))

(declare-fun res!38906 () Bool)

(assert (=> b!73396 (= res!38906 ((_ is Found!239) lt!32891))))

(declare-fun e!47993 () Bool)

(assert (=> b!73396 (=> (not res!38906) (not e!47993))))

(assert (=> b!73396 e!47993))

(declare-fun lt!32897 () Unit!2066)

(assert (=> b!73396 (= lt!32897 lt!32904)))

(assert (=> b!73396 false))

(declare-fun b!73397 () Bool)

(declare-fun res!38902 () Bool)

(declare-fun e!47994 () Bool)

(assert (=> b!73397 (=> (not res!38902) (not e!47994))))

(assert (=> b!73397 (= res!38902 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3087 lt!32902)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6465 () Bool)

(assert (=> bm!6465 (= call!6467 (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun b!73398 () Bool)

(declare-fun e!47996 () Bool)

(assert (=> b!73398 (= e!47996 e!47997)))

(declare-fun res!38905 () Bool)

(declare-fun call!6470 () Bool)

(assert (=> b!73398 (= res!38905 call!6470)))

(assert (=> b!73398 (=> (not res!38905) (not e!47997))))

(declare-fun b!73399 () Bool)

(declare-fun res!38904 () Bool)

(assert (=> b!73399 (=> (not res!38904) (not e!47994))))

(assert (=> b!73399 (= res!38904 call!6470)))

(declare-fun e!47995 () Bool)

(assert (=> b!73399 (= e!47995 e!47994)))

(declare-fun b!73400 () Bool)

(declare-fun e!47999 () Unit!2066)

(declare-fun Unit!2093 () Unit!2066)

(assert (=> b!73400 (= e!47999 Unit!2093)))

(declare-fun lt!32892 () Unit!2066)

(declare-fun lemmaArrayContainsKeyThenInListMap!13 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) (_ BitVec 32) Int) Unit!2066)

(assert (=> b!73400 (= lt!32892 (lemmaArrayContainsKeyThenInListMap!13 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (=> b!73400 (contains!719 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))

(declare-fun lt!32884 () Unit!2066)

(assert (=> b!73400 (= lt!32884 lt!32892)))

(assert (=> b!73400 false))

(declare-fun b!73401 () Bool)

(assert (=> b!73401 (= e!47994 (not call!6469))))

(declare-fun b!73402 () Bool)

(assert (=> b!73402 (= e!47993 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32891)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun bm!6466 () Bool)

(assert (=> bm!6466 (= call!6470 call!6468)))

(declare-fun b!73404 () Bool)

(declare-fun c!10924 () Bool)

(assert (=> b!73404 (= c!10924 ((_ is MissingVacant!239) lt!32902))))

(assert (=> b!73404 (= e!47995 e!47996)))

(declare-fun bm!6467 () Bool)

(assert (=> bm!6467 (= call!6469 (arrayContainsKey!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!73405 () Bool)

(declare-fun res!38908 () Bool)

(assert (=> b!73405 (= res!38908 call!6468)))

(assert (=> b!73405 (=> (not res!38908) (not e!47993))))

(declare-fun b!73406 () Bool)

(assert (=> b!73406 (= e!47996 ((_ is Undefined!239) lt!32902))))

(declare-fun b!73407 () Bool)

(declare-fun res!38907 () Bool)

(assert (=> b!73407 (= res!38907 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3090 lt!32902)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73407 (=> (not res!38907) (not e!47997))))

(declare-fun b!73408 () Bool)

(assert (=> b!73408 (= e!47998 (= (map!1150 (_2!1072 lt!32894)) (+!93 (map!1150 newMap!16) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!73409 () Bool)

(declare-fun lt!32881 () Unit!2066)

(assert (=> b!73409 (= e!47992 lt!32881)))

(assert (=> b!73409 (= lt!32881 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(assert (=> b!73409 (= lt!32902 call!6467)))

(assert (=> b!73409 (= c!10921 ((_ is MissingZero!239) lt!32902))))

(assert (=> b!73409 e!47995))

(declare-fun b!73410 () Bool)

(declare-fun res!38903 () Bool)

(assert (=> b!73410 (=> (not res!38903) (not e!47998))))

(assert (=> b!73410 (= res!38903 (valid!300 (_2!1072 lt!32894)))))

(declare-fun b!73403 () Bool)

(declare-fun Unit!2094 () Unit!2066)

(assert (=> b!73403 (= e!47999 Unit!2094)))

(declare-fun d!16909 () Bool)

(assert (=> d!16909 e!47998))

(declare-fun res!38901 () Bool)

(assert (=> d!16909 (=> (not res!38901) (not e!47998))))

(assert (=> d!16909 (= res!38901 (_1!1072 lt!32894))))

(assert (=> d!16909 (= lt!32894 (tuple2!2123 true (LongMapFixedSize!695 (defaultEntry!2212 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (bvadd (_size!396 newMap!16) #b00000000000000000000000000000001) (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (_vacant!396 newMap!16))))))

(declare-fun lt!32898 () Unit!2066)

(declare-fun lt!32903 () Unit!2066)

(assert (=> d!16909 (= lt!32898 lt!32903)))

(declare-fun lt!32888 () array!3873)

(declare-fun lt!32895 () array!3871)

(assert (=> d!16909 (contains!719 (getCurrentListMap!410 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))))))

(assert (=> d!16909 (= lt!32903 (lemmaValidKeyInArrayIsInListMap!83 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (defaultEntry!2212 newMap!16)))))

(assert (=> d!16909 (= lt!32888 (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))))

(assert (=> d!16909 (= lt!32895 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun lt!32876 () Unit!2066)

(declare-fun lt!32889 () Unit!2066)

(assert (=> d!16909 (= lt!32876 lt!32889)))

(declare-fun lt!32877 () array!3871)

(assert (=> d!16909 (= (arrayCountValidKeys!0 lt!32877 (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (bvadd (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!3871 (_ BitVec 32)) Unit!2066)

(assert (=> d!16909 (= lt!32889 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!32877 (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))))))

(assert (=> d!16909 (= lt!32877 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun lt!32896 () Unit!2066)

(declare-fun lt!32893 () Unit!2066)

(assert (=> d!16909 (= lt!32896 lt!32893)))

(declare-fun lt!32899 () array!3871)

(assert (=> d!16909 (arrayContainsKey!0 lt!32899 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3871 (_ BitVec 64) (_ BitVec 32)) Unit!2066)

(assert (=> d!16909 (= lt!32893 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!32899 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))))))

(assert (=> d!16909 (= lt!32899 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun lt!32879 () Unit!2066)

(declare-fun lt!32883 () Unit!2066)

(assert (=> d!16909 (= lt!32879 lt!32883)))

(assert (=> d!16909 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (getCurrentListMap!410 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!13 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) (_ BitVec 64) V!2945 Int) Unit!2066)

(assert (=> d!16909 (= lt!32883 (lemmaAddValidKeyToArrayThenAddPairToListMap!13 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32890 () Unit!2066)

(declare-fun lt!32882 () Unit!2066)

(assert (=> d!16909 (= lt!32890 lt!32882)))

(assert (=> d!16909 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (mask!6178 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!3871 (_ BitVec 32) (_ BitVec 32)) Unit!2066)

(assert (=> d!16909 (= lt!32882 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (mask!6178 newMap!16)))))

(declare-fun lt!32875 () Unit!2066)

(declare-fun lt!32878 () Unit!2066)

(assert (=> d!16909 (= lt!32875 lt!32878)))

(assert (=> d!16909 (= (arrayCountValidKeys!0 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3863 newMap!16) #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!3871 (_ BitVec 32) (_ BitVec 64)) Unit!2066)

(assert (=> d!16909 (= lt!32878 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3863 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun lt!32886 () Unit!2066)

(declare-fun lt!32887 () Unit!2066)

(assert (=> d!16909 (= lt!32886 lt!32887)))

(declare-fun lt!32901 () (_ BitVec 32))

(declare-fun lt!32885 () List!1484)

(assert (=> d!16909 (arrayNoDuplicates!0 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) lt!32901 lt!32885)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!3871 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1484) Unit!2066)

(assert (=> d!16909 (= lt!32887 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) lt!32901 lt!32885))))

(assert (=> d!16909 (= lt!32885 Nil!1481)))

(assert (=> d!16909 (= lt!32901 #b00000000000000000000000000000000)))

(declare-fun lt!32880 () Unit!2066)

(assert (=> d!16909 (= lt!32880 e!47999)))

(declare-fun c!10922 () Bool)

(assert (=> d!16909 (= c!10922 (arrayContainsKey!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!32900 () Unit!2066)

(assert (=> d!16909 (= lt!32900 e!47992)))

(assert (=> d!16909 (= c!10923 (contains!719 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!16909 (valid!300 newMap!16)))

(assert (=> d!16909 (= (updateHelperNewKey!24 newMap!16 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))) lt!32894)))

(assert (= (and d!16909 c!10923) b!73396))

(assert (= (and d!16909 (not c!10923)) b!73409))

(assert (= (and b!73396 res!38906) b!73405))

(assert (= (and b!73405 res!38908) b!73402))

(assert (= (and b!73409 c!10921) b!73399))

(assert (= (and b!73409 (not c!10921)) b!73404))

(assert (= (and b!73399 res!38904) b!73397))

(assert (= (and b!73397 res!38902) b!73401))

(assert (= (and b!73404 c!10924) b!73398))

(assert (= (and b!73404 (not c!10924)) b!73406))

(assert (= (and b!73398 res!38905) b!73407))

(assert (= (and b!73407 res!38907) b!73395))

(assert (= (or b!73399 b!73398) bm!6466))

(assert (= (or b!73401 b!73395) bm!6467))

(assert (= (or b!73405 bm!6466) bm!6464))

(assert (= (or b!73396 b!73409) bm!6465))

(assert (= (and d!16909 c!10922) b!73400))

(assert (= (and d!16909 (not c!10922)) b!73403))

(assert (= (and d!16909 res!38901) b!73410))

(assert (= (and b!73410 res!38903) b!73394))

(assert (= (and b!73394 res!38909) b!73408))

(assert (=> b!73396 m!70791))

(assert (=> b!73396 m!71023))

(declare-fun m!71605 () Bool)

(assert (=> b!73397 m!71605))

(declare-fun m!71607 () Bool)

(assert (=> bm!6464 m!71607))

(assert (=> b!73409 m!70791))

(assert (=> b!73409 m!70981))

(declare-fun m!71609 () Bool)

(assert (=> b!73394 m!71609))

(assert (=> b!73394 m!71609))

(assert (=> b!73394 m!70791))

(declare-fun m!71611 () Bool)

(assert (=> b!73394 m!71611))

(declare-fun m!71613 () Bool)

(assert (=> b!73402 m!71613))

(declare-fun m!71615 () Bool)

(assert (=> b!73407 m!71615))

(assert (=> bm!6465 m!70791))

(assert (=> bm!6465 m!70979))

(assert (=> b!73408 m!71609))

(assert (=> b!73408 m!70795))

(assert (=> b!73408 m!70795))

(declare-fun m!71617 () Bool)

(assert (=> b!73408 m!71617))

(assert (=> bm!6467 m!70791))

(assert (=> bm!6467 m!71005))

(declare-fun m!71619 () Bool)

(assert (=> b!73410 m!71619))

(declare-fun m!71621 () Bool)

(assert (=> d!16909 m!71621))

(declare-fun m!71623 () Bool)

(assert (=> d!16909 m!71623))

(declare-fun m!71625 () Bool)

(assert (=> d!16909 m!71625))

(assert (=> d!16909 m!70769))

(assert (=> d!16909 m!70791))

(declare-fun m!71627 () Bool)

(assert (=> d!16909 m!71627))

(declare-fun m!71629 () Bool)

(assert (=> d!16909 m!71629))

(declare-fun m!71631 () Bool)

(assert (=> d!16909 m!71631))

(assert (=> d!16909 m!70955))

(assert (=> d!16909 m!71629))

(assert (=> d!16909 m!71621))

(declare-fun m!71633 () Bool)

(assert (=> d!16909 m!71633))

(declare-fun m!71635 () Bool)

(assert (=> d!16909 m!71635))

(declare-fun m!71637 () Bool)

(assert (=> d!16909 m!71637))

(assert (=> d!16909 m!70791))

(declare-fun m!71639 () Bool)

(assert (=> d!16909 m!71639))

(assert (=> d!16909 m!70791))

(declare-fun m!71641 () Bool)

(assert (=> d!16909 m!71641))

(assert (=> d!16909 m!70991))

(declare-fun m!71643 () Bool)

(assert (=> d!16909 m!71643))

(assert (=> d!16909 m!70991))

(assert (=> d!16909 m!70791))

(declare-fun m!71645 () Bool)

(assert (=> d!16909 m!71645))

(assert (=> d!16909 m!70991))

(assert (=> d!16909 m!70791))

(declare-fun m!71647 () Bool)

(assert (=> d!16909 m!71647))

(declare-fun m!71649 () Bool)

(assert (=> d!16909 m!71649))

(assert (=> d!16909 m!70791))

(declare-fun m!71651 () Bool)

(assert (=> d!16909 m!71651))

(declare-fun m!71653 () Bool)

(assert (=> d!16909 m!71653))

(declare-fun m!71655 () Bool)

(assert (=> d!16909 m!71655))

(assert (=> d!16909 m!70791))

(declare-fun m!71657 () Bool)

(assert (=> d!16909 m!71657))

(declare-fun m!71659 () Bool)

(assert (=> d!16909 m!71659))

(assert (=> d!16909 m!70791))

(assert (=> d!16909 m!71005))

(assert (=> b!73400 m!70791))

(declare-fun m!71661 () Bool)

(assert (=> b!73400 m!71661))

(assert (=> b!73400 m!70991))

(assert (=> b!73400 m!70991))

(assert (=> b!73400 m!70791))

(assert (=> b!73400 m!71647))

(assert (=> bm!6388 d!16909))

(declare-fun d!16911 () Bool)

(declare-fun e!48000 () Bool)

(assert (=> d!16911 e!48000))

(declare-fun res!38911 () Bool)

(assert (=> d!16911 (=> (not res!38911) (not e!48000))))

(declare-fun lt!32907 () ListLongMap!1403)

(assert (=> d!16911 (= res!38911 (contains!719 lt!32907 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun lt!32908 () List!1483)

(assert (=> d!16911 (= lt!32907 (ListLongMap!1404 lt!32908))))

(declare-fun lt!32906 () Unit!2066)

(declare-fun lt!32905 () Unit!2066)

(assert (=> d!16911 (= lt!32906 lt!32905)))

(assert (=> d!16911 (= (getValueByKey!131 lt!32908 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!16911 (= lt!32905 (lemmaContainsTupThenGetReturnValue!51 lt!32908 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!16911 (= lt!32908 (insertStrictlySorted!54 (toList!717 call!6388) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!16911 (= (+!93 call!6388 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) lt!32907)))

(declare-fun b!73411 () Bool)

(declare-fun res!38910 () Bool)

(assert (=> b!73411 (=> (not res!38910) (not e!48000))))

(assert (=> b!73411 (= res!38910 (= (getValueByKey!131 (toList!717 lt!32907) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!73412 () Bool)

(assert (=> b!73412 (= e!48000 (contains!722 (toList!717 lt!32907) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(assert (= (and d!16911 res!38911) b!73411))

(assert (= (and b!73411 res!38910) b!73412))

(declare-fun m!71663 () Bool)

(assert (=> d!16911 m!71663))

(declare-fun m!71665 () Bool)

(assert (=> d!16911 m!71665))

(declare-fun m!71667 () Bool)

(assert (=> d!16911 m!71667))

(declare-fun m!71669 () Bool)

(assert (=> d!16911 m!71669))

(declare-fun m!71671 () Bool)

(assert (=> b!73411 m!71671))

(declare-fun m!71673 () Bool)

(assert (=> b!73412 m!71673))

(assert (=> b!72965 d!16911))

(declare-fun d!16913 () Bool)

(declare-fun e!48002 () Bool)

(assert (=> d!16913 e!48002))

(declare-fun res!38912 () Bool)

(assert (=> d!16913 (=> res!38912 e!48002)))

(declare-fun lt!32912 () Bool)

(assert (=> d!16913 (= res!38912 (not lt!32912))))

(declare-fun lt!32910 () Bool)

(assert (=> d!16913 (= lt!32912 lt!32910)))

(declare-fun lt!32909 () Unit!2066)

(declare-fun e!48001 () Unit!2066)

(assert (=> d!16913 (= lt!32909 e!48001)))

(declare-fun c!10925 () Bool)

(assert (=> d!16913 (= c!10925 lt!32910)))

(assert (=> d!16913 (= lt!32910 (containsKey!135 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(assert (=> d!16913 (= (contains!719 call!6384 (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))) lt!32912)))

(declare-fun b!73413 () Bool)

(declare-fun lt!32911 () Unit!2066)

(assert (=> b!73413 (= e!48001 lt!32911)))

(assert (=> b!73413 (= lt!32911 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(assert (=> b!73413 (isDefined!85 (getValueByKey!131 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(declare-fun b!73414 () Bool)

(declare-fun Unit!2095 () Unit!2066)

(assert (=> b!73414 (= e!48001 Unit!2095)))

(declare-fun b!73415 () Bool)

(assert (=> b!73415 (= e!48002 (isDefined!85 (getValueByKey!131 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540)))))))

(assert (= (and d!16913 c!10925) b!73413))

(assert (= (and d!16913 (not c!10925)) b!73414))

(assert (= (and d!16913 (not res!38912)) b!73415))

(assert (=> d!16913 m!71017))

(declare-fun m!71675 () Bool)

(assert (=> d!16913 m!71675))

(assert (=> b!73413 m!71017))

(declare-fun m!71677 () Bool)

(assert (=> b!73413 m!71677))

(assert (=> b!73413 m!71017))

(declare-fun m!71679 () Bool)

(assert (=> b!73413 m!71679))

(assert (=> b!73413 m!71679))

(declare-fun m!71681 () Bool)

(assert (=> b!73413 m!71681))

(assert (=> b!73415 m!71017))

(assert (=> b!73415 m!71679))

(assert (=> b!73415 m!71679))

(assert (=> b!73415 m!71681))

(assert (=> b!72949 d!16913))

(declare-fun d!16915 () Bool)

(declare-fun e!48005 () Bool)

(assert (=> d!16915 e!48005))

(declare-fun res!38915 () Bool)

(assert (=> d!16915 (=> (not res!38915) (not e!48005))))

(assert (=> d!16915 (= res!38915 (and (bvsge (index!3088 lt!32540) #b00000000000000000000000000000000) (bvslt (index!3088 lt!32540) (size!2085 (_keys!3863 newMap!16)))))))

(declare-fun lt!32915 () Unit!2066)

(declare-fun choose!424 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) Int) Unit!2066)

(assert (=> d!16915 (= lt!32915 (choose!424 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3088 lt!32540) (defaultEntry!2212 newMap!16)))))

(assert (=> d!16915 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16915 (= (lemmaValidKeyInArrayIsInListMap!83 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3088 lt!32540) (defaultEntry!2212 newMap!16)) lt!32915)))

(declare-fun b!73418 () Bool)

(assert (=> b!73418 (= e!48005 (contains!719 (getCurrentListMap!410 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(assert (= (and d!16915 res!38915) b!73418))

(declare-fun m!71683 () Bool)

(assert (=> d!16915 m!71683))

(assert (=> d!16915 m!71219))

(declare-fun m!71685 () Bool)

(assert (=> b!73418 m!71685))

(assert (=> b!73418 m!71017))

(assert (=> b!73418 m!71685))

(assert (=> b!73418 m!71017))

(declare-fun m!71687 () Bool)

(assert (=> b!73418 m!71687))

(assert (=> b!72949 d!16915))

(declare-fun d!16917 () Bool)

(declare-fun e!48008 () Bool)

(assert (=> d!16917 e!48008))

(declare-fun res!38918 () Bool)

(assert (=> d!16917 (=> (not res!38918) (not e!48008))))

(assert (=> d!16917 (= res!38918 (and (bvsge (index!3088 lt!32540) #b00000000000000000000000000000000) (bvslt (index!3088 lt!32540) (size!2086 (_values!2195 newMap!16)))))))

(declare-fun lt!32918 () Unit!2066)

(declare-fun choose!425 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) (_ BitVec 64) V!2945 Int) Unit!2066)

(assert (=> d!16917 (= lt!32918 (choose!425 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3088 lt!32540) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 (defaultEntry!2212 newMap!16)))))

(assert (=> d!16917 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16917 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3088 lt!32540) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 (defaultEntry!2212 newMap!16)) lt!32918)))

(declare-fun b!73421 () Bool)

(assert (=> b!73421 (= e!48008 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (getCurrentListMap!410 (_keys!3863 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))))))

(assert (= (and d!16917 res!38918) b!73421))

(assert (=> d!16917 m!70791))

(declare-fun m!71689 () Bool)

(assert (=> d!16917 m!71689))

(assert (=> d!16917 m!71219))

(assert (=> b!73421 m!70991))

(assert (=> b!73421 m!70991))

(assert (=> b!73421 m!71643))

(assert (=> b!73421 m!70995))

(declare-fun m!71691 () Bool)

(assert (=> b!73421 m!71691))

(assert (=> b!72949 d!16917))

(declare-fun b!73422 () Bool)

(declare-fun e!48017 () Bool)

(declare-fun e!48016 () Bool)

(assert (=> b!73422 (= e!48017 e!48016)))

(declare-fun res!38921 () Bool)

(declare-fun call!6473 () Bool)

(assert (=> b!73422 (= res!38921 call!6473)))

(assert (=> b!73422 (=> (not res!38921) (not e!48016))))

(declare-fun b!73423 () Bool)

(declare-fun e!48014 () ListLongMap!1403)

(declare-fun call!6472 () ListLongMap!1403)

(assert (=> b!73423 (= e!48014 call!6472)))

(declare-fun b!73424 () Bool)

(declare-fun e!48009 () Bool)

(assert (=> b!73424 (= e!48009 e!48017)))

(declare-fun c!10927 () Bool)

(assert (=> b!73424 (= c!10927 (not (= (bvand (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73425 () Bool)

(declare-fun e!48015 () Bool)

(declare-fun call!6475 () Bool)

(assert (=> b!73425 (= e!48015 (not call!6475))))

(declare-fun b!73426 () Bool)

(declare-fun e!48020 () ListLongMap!1403)

(declare-fun call!6477 () ListLongMap!1403)

(assert (=> b!73426 (= e!48020 call!6477)))

(declare-fun b!73428 () Bool)

(declare-fun e!48011 () Bool)

(assert (=> b!73428 (= e!48015 e!48011)))

(declare-fun res!38924 () Bool)

(assert (=> b!73428 (= res!38924 call!6475)))

(assert (=> b!73428 (=> (not res!38924) (not e!48011))))

(declare-fun bm!6468 () Bool)

(declare-fun call!6474 () ListLongMap!1403)

(declare-fun call!6476 () ListLongMap!1403)

(assert (=> bm!6468 (= call!6474 call!6476)))

(declare-fun b!73429 () Bool)

(declare-fun e!48019 () ListLongMap!1403)

(assert (=> b!73429 (= e!48019 e!48014)))

(declare-fun c!10930 () Bool)

(assert (=> b!73429 (= c!10930 (and (not (= (bvand (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6469 () Bool)

(declare-fun lt!32919 () ListLongMap!1403)

(assert (=> bm!6469 (= call!6473 (contains!719 lt!32919 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!6471 () ListLongMap!1403)

(declare-fun bm!6470 () Bool)

(declare-fun c!10931 () Bool)

(assert (=> bm!6470 (= call!6471 (+!93 (ite c!10931 call!6476 (ite c!10930 call!6474 call!6477)) (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(declare-fun b!73430 () Bool)

(declare-fun e!48021 () Bool)

(assert (=> b!73430 (= e!48021 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73431 () Bool)

(declare-fun res!38922 () Bool)

(assert (=> b!73431 (=> (not res!38922) (not e!48009))))

(assert (=> b!73431 (= res!38922 e!48015)))

(declare-fun c!10928 () Bool)

(assert (=> b!73431 (= c!10928 (not (= (bvand (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6471 () Bool)

(assert (=> bm!6471 (= call!6477 call!6474)))

(declare-fun e!48012 () Bool)

(declare-fun b!73432 () Bool)

(assert (=> b!73432 (= e!48012 (= (apply!75 lt!32919 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (ite c!10789 (_values!2195 newMap!16) lt!32548)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73432 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (ite c!10789 (_values!2195 newMap!16) lt!32548))))))

(assert (=> b!73432 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73433 () Bool)

(assert (=> b!73433 (= e!48016 (= (apply!75 lt!32919 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))

(declare-fun bm!6472 () Bool)

(assert (=> bm!6472 (= call!6475 (contains!719 lt!32919 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73434 () Bool)

(declare-fun e!48018 () Bool)

(assert (=> b!73434 (= e!48018 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73427 () Bool)

(declare-fun e!48010 () Unit!2066)

(declare-fun lt!32926 () Unit!2066)

(assert (=> b!73427 (= e!48010 lt!32926)))

(declare-fun lt!32938 () ListLongMap!1403)

(assert (=> b!73427 (= lt!32938 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite c!10789 (_values!2195 newMap!16) lt!32548) (mask!6178 newMap!16) (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) (zeroValue!2114 newMap!16) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32928 () (_ BitVec 64))

(assert (=> b!73427 (= lt!32928 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32931 () (_ BitVec 64))

(assert (=> b!73427 (= lt!32931 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32937 () Unit!2066)

(assert (=> b!73427 (= lt!32937 (addStillContains!51 lt!32938 lt!32928 (zeroValue!2114 newMap!16) lt!32931))))

(assert (=> b!73427 (contains!719 (+!93 lt!32938 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16))) lt!32931)))

(declare-fun lt!32932 () Unit!2066)

(assert (=> b!73427 (= lt!32932 lt!32937)))

(declare-fun lt!32925 () ListLongMap!1403)

(assert (=> b!73427 (= lt!32925 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite c!10789 (_values!2195 newMap!16) lt!32548) (mask!6178 newMap!16) (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) (zeroValue!2114 newMap!16) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32935 () (_ BitVec 64))

(assert (=> b!73427 (= lt!32935 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32934 () (_ BitVec 64))

(assert (=> b!73427 (= lt!32934 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32927 () Unit!2066)

(assert (=> b!73427 (= lt!32927 (addApplyDifferent!51 lt!32925 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) lt!32934))))

(assert (=> b!73427 (= (apply!75 (+!93 lt!32925 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) lt!32934) (apply!75 lt!32925 lt!32934))))

(declare-fun lt!32939 () Unit!2066)

(assert (=> b!73427 (= lt!32939 lt!32927)))

(declare-fun lt!32936 () ListLongMap!1403)

(assert (=> b!73427 (= lt!32936 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite c!10789 (_values!2195 newMap!16) lt!32548) (mask!6178 newMap!16) (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) (zeroValue!2114 newMap!16) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32940 () (_ BitVec 64))

(assert (=> b!73427 (= lt!32940 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32923 () (_ BitVec 64))

(assert (=> b!73427 (= lt!32923 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32921 () Unit!2066)

(assert (=> b!73427 (= lt!32921 (addApplyDifferent!51 lt!32936 lt!32940 (zeroValue!2114 newMap!16) lt!32923))))

(assert (=> b!73427 (= (apply!75 (+!93 lt!32936 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16))) lt!32923) (apply!75 lt!32936 lt!32923))))

(declare-fun lt!32929 () Unit!2066)

(assert (=> b!73427 (= lt!32929 lt!32921)))

(declare-fun lt!32922 () ListLongMap!1403)

(assert (=> b!73427 (= lt!32922 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite c!10789 (_values!2195 newMap!16) lt!32548) (mask!6178 newMap!16) (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) (zeroValue!2114 newMap!16) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32924 () (_ BitVec 64))

(assert (=> b!73427 (= lt!32924 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32933 () (_ BitVec 64))

(assert (=> b!73427 (= lt!32933 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73427 (= lt!32926 (addApplyDifferent!51 lt!32922 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) lt!32933))))

(assert (=> b!73427 (= (apply!75 (+!93 lt!32922 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) lt!32933) (apply!75 lt!32922 lt!32933))))

(declare-fun d!16919 () Bool)

(assert (=> d!16919 e!48009))

(declare-fun res!38920 () Bool)

(assert (=> d!16919 (=> (not res!38920) (not e!48009))))

(assert (=> d!16919 (= res!38920 (or (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))))

(declare-fun lt!32930 () ListLongMap!1403)

(assert (=> d!16919 (= lt!32919 lt!32930)))

(declare-fun lt!32920 () Unit!2066)

(assert (=> d!16919 (= lt!32920 e!48010)))

(declare-fun c!10926 () Bool)

(assert (=> d!16919 (= c!10926 e!48018)))

(declare-fun res!38923 () Bool)

(assert (=> d!16919 (=> (not res!38923) (not e!48018))))

(assert (=> d!16919 (= res!38923 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!16919 (= lt!32930 e!48019)))

(assert (=> d!16919 (= c!10931 (and (not (= (bvand (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16919 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16919 (= (getCurrentListMap!410 (_keys!3863 newMap!16) (ite c!10789 (_values!2195 newMap!16) lt!32548) (mask!6178 newMap!16) (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) (zeroValue!2114 newMap!16) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!32919)))

(declare-fun b!73435 () Bool)

(assert (=> b!73435 (= e!48019 (+!93 call!6471 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))

(declare-fun c!10929 () Bool)

(declare-fun b!73436 () Bool)

(assert (=> b!73436 (= c!10929 (and (not (= (bvand (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73436 (= e!48014 e!48020)))

(declare-fun b!73437 () Bool)

(assert (=> b!73437 (= e!48020 call!6472)))

(declare-fun b!73438 () Bool)

(assert (=> b!73438 (= e!48017 (not call!6473))))

(declare-fun b!73439 () Bool)

(declare-fun e!48013 () Bool)

(assert (=> b!73439 (= e!48013 e!48012)))

(declare-fun res!38925 () Bool)

(assert (=> b!73439 (=> (not res!38925) (not e!48012))))

(assert (=> b!73439 (= res!38925 (contains!719 lt!32919 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73439 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73440 () Bool)

(assert (=> b!73440 (= e!48011 (= (apply!75 lt!32919 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!73441 () Bool)

(declare-fun Unit!2096 () Unit!2066)

(assert (=> b!73441 (= e!48010 Unit!2096)))

(declare-fun bm!6473 () Bool)

(assert (=> bm!6473 (= call!6472 call!6471)))

(declare-fun b!73442 () Bool)

(declare-fun res!38919 () Bool)

(assert (=> b!73442 (=> (not res!38919) (not e!48009))))

(assert (=> b!73442 (= res!38919 e!48013)))

(declare-fun res!38927 () Bool)

(assert (=> b!73442 (=> res!38927 e!48013)))

(assert (=> b!73442 (= res!38927 (not e!48021))))

(declare-fun res!38926 () Bool)

(assert (=> b!73442 (=> (not res!38926) (not e!48021))))

(assert (=> b!73442 (= res!38926 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun bm!6474 () Bool)

(assert (=> bm!6474 (= call!6476 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite c!10789 (_values!2195 newMap!16) lt!32548) (mask!6178 newMap!16) (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) (zeroValue!2114 newMap!16) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (= (and d!16919 c!10931) b!73435))

(assert (= (and d!16919 (not c!10931)) b!73429))

(assert (= (and b!73429 c!10930) b!73423))

(assert (= (and b!73429 (not c!10930)) b!73436))

(assert (= (and b!73436 c!10929) b!73437))

(assert (= (and b!73436 (not c!10929)) b!73426))

(assert (= (or b!73437 b!73426) bm!6471))

(assert (= (or b!73423 bm!6471) bm!6468))

(assert (= (or b!73423 b!73437) bm!6473))

(assert (= (or b!73435 bm!6468) bm!6474))

(assert (= (or b!73435 bm!6473) bm!6470))

(assert (= (and d!16919 res!38923) b!73434))

(assert (= (and d!16919 c!10926) b!73427))

(assert (= (and d!16919 (not c!10926)) b!73441))

(assert (= (and d!16919 res!38920) b!73442))

(assert (= (and b!73442 res!38926) b!73430))

(assert (= (and b!73442 (not res!38927)) b!73439))

(assert (= (and b!73439 res!38925) b!73432))

(assert (= (and b!73442 res!38919) b!73431))

(assert (= (and b!73431 c!10928) b!73428))

(assert (= (and b!73431 (not c!10928)) b!73425))

(assert (= (and b!73428 res!38924) b!73440))

(assert (= (or b!73428 b!73425) bm!6472))

(assert (= (and b!73431 res!38922) b!73424))

(assert (= (and b!73424 c!10927) b!73422))

(assert (= (and b!73424 (not c!10927)) b!73438))

(assert (= (and b!73422 res!38921) b!73433))

(assert (= (or b!73422 b!73438) bm!6469))

(declare-fun b_lambda!3285 () Bool)

(assert (=> (not b_lambda!3285) (not b!73432)))

(assert (=> b!73432 t!5045))

(declare-fun b_and!4497 () Bool)

(assert (= b_and!4493 (and (=> t!5045 result!2689) b_and!4497)))

(assert (=> b!73432 t!5047))

(declare-fun b_and!4499 () Bool)

(assert (= b_and!4495 (and (=> t!5047 result!2691) b_and!4499)))

(declare-fun m!71693 () Bool)

(assert (=> bm!6469 m!71693))

(declare-fun m!71695 () Bool)

(assert (=> b!73427 m!71695))

(declare-fun m!71697 () Bool)

(assert (=> b!73427 m!71697))

(declare-fun m!71699 () Bool)

(assert (=> b!73427 m!71699))

(declare-fun m!71701 () Bool)

(assert (=> b!73427 m!71701))

(declare-fun m!71703 () Bool)

(assert (=> b!73427 m!71703))

(declare-fun m!71705 () Bool)

(assert (=> b!73427 m!71705))

(declare-fun m!71707 () Bool)

(assert (=> b!73427 m!71707))

(declare-fun m!71709 () Bool)

(assert (=> b!73427 m!71709))

(assert (=> b!73427 m!71703))

(declare-fun m!71711 () Bool)

(assert (=> b!73427 m!71711))

(declare-fun m!71713 () Bool)

(assert (=> b!73427 m!71713))

(declare-fun m!71715 () Bool)

(assert (=> b!73427 m!71715))

(declare-fun m!71717 () Bool)

(assert (=> b!73427 m!71717))

(assert (=> b!73427 m!71709))

(declare-fun m!71719 () Bool)

(assert (=> b!73427 m!71719))

(assert (=> b!73427 m!71695))

(assert (=> b!73427 m!71361))

(declare-fun m!71721 () Bool)

(assert (=> b!73427 m!71721))

(declare-fun m!71723 () Bool)

(assert (=> b!73427 m!71723))

(assert (=> b!73427 m!71699))

(declare-fun m!71725 () Bool)

(assert (=> b!73427 m!71725))

(declare-fun m!71727 () Bool)

(assert (=> b!73440 m!71727))

(declare-fun m!71729 () Bool)

(assert (=> b!73433 m!71729))

(assert (=> b!73430 m!71361))

(assert (=> b!73430 m!71361))

(assert (=> b!73430 m!71373))

(declare-fun m!71731 () Bool)

(assert (=> bm!6470 m!71731))

(assert (=> b!73434 m!71361))

(assert (=> b!73434 m!71361))

(assert (=> b!73434 m!71373))

(assert (=> d!16919 m!71219))

(declare-fun m!71733 () Bool)

(assert (=> b!73435 m!71733))

(declare-fun m!71735 () Bool)

(assert (=> bm!6472 m!71735))

(assert (=> bm!6474 m!71717))

(assert (=> b!73439 m!71361))

(assert (=> b!73439 m!71361))

(declare-fun m!71737 () Bool)

(assert (=> b!73439 m!71737))

(assert (=> b!73432 m!71361))

(declare-fun m!71739 () Bool)

(assert (=> b!73432 m!71739))

(assert (=> b!73432 m!71361))

(declare-fun m!71741 () Bool)

(assert (=> b!73432 m!71741))

(assert (=> b!73432 m!71739))

(assert (=> b!73432 m!71387))

(declare-fun m!71743 () Bool)

(assert (=> b!73432 m!71743))

(assert (=> b!73432 m!71387))

(assert (=> bm!6399 d!16919))

(declare-fun d!16921 () Bool)

(assert (=> d!16921 (= (apply!75 lt!32604 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1147 (getValueByKey!131 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3144 () Bool)

(assert (= bs!3144 d!16921))

(assert (=> bs!3144 m!71215))

(assert (=> bs!3144 m!71215))

(declare-fun m!71745 () Bool)

(assert (=> bs!3144 m!71745))

(assert (=> b!73045 d!16921))

(declare-fun d!16923 () Bool)

(declare-fun isEmpty!322 (Option!137) Bool)

(assert (=> d!16923 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))))

(declare-fun bs!3145 () Bool)

(assert (= bs!3145 d!16923))

(assert (=> bs!3145 m!70965))

(declare-fun m!71747 () Bool)

(assert (=> bs!3145 m!71747))

(assert (=> b!72852 d!16923))

(declare-fun b!73443 () Bool)

(declare-fun e!48022 () Option!137)

(assert (=> b!73443 (= e!48022 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32375)))))))

(declare-fun b!73446 () Bool)

(declare-fun e!48023 () Option!137)

(assert (=> b!73446 (= e!48023 None!135)))

(declare-fun b!73445 () Bool)

(assert (=> b!73445 (= e!48023 (getValueByKey!131 (t!5031 (toList!717 lt!32375)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun d!16925 () Bool)

(declare-fun c!10932 () Bool)

(assert (=> d!16925 (= c!10932 (and ((_ is Cons!1479) (toList!717 lt!32375)) (= (_1!1071 (h!2066 (toList!717 lt!32375))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (=> d!16925 (= (getValueByKey!131 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) e!48022)))

(declare-fun b!73444 () Bool)

(assert (=> b!73444 (= e!48022 e!48023)))

(declare-fun c!10933 () Bool)

(assert (=> b!73444 (= c!10933 (and ((_ is Cons!1479) (toList!717 lt!32375)) (not (= (_1!1071 (h!2066 (toList!717 lt!32375))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))))

(assert (= (and d!16925 c!10932) b!73443))

(assert (= (and d!16925 (not c!10932)) b!73444))

(assert (= (and b!73444 c!10933) b!73445))

(assert (= (and b!73444 (not c!10933)) b!73446))

(assert (=> b!73445 m!70791))

(declare-fun m!71749 () Bool)

(assert (=> b!73445 m!71749))

(assert (=> b!72852 d!16925))

(declare-fun d!16927 () Bool)

(declare-fun lt!32941 () Bool)

(assert (=> d!16927 (= lt!32941 (select (content!77 (toList!717 lt!32672)) lt!32383))))

(declare-fun e!48025 () Bool)

(assert (=> d!16927 (= lt!32941 e!48025)))

(declare-fun res!38928 () Bool)

(assert (=> d!16927 (=> (not res!38928) (not e!48025))))

(assert (=> d!16927 (= res!38928 ((_ is Cons!1479) (toList!717 lt!32672)))))

(assert (=> d!16927 (= (contains!722 (toList!717 lt!32672) lt!32383) lt!32941)))

(declare-fun b!73447 () Bool)

(declare-fun e!48024 () Bool)

(assert (=> b!73447 (= e!48025 e!48024)))

(declare-fun res!38929 () Bool)

(assert (=> b!73447 (=> res!38929 e!48024)))

(assert (=> b!73447 (= res!38929 (= (h!2066 (toList!717 lt!32672)) lt!32383))))

(declare-fun b!73448 () Bool)

(assert (=> b!73448 (= e!48024 (contains!722 (t!5031 (toList!717 lt!32672)) lt!32383))))

(assert (= (and d!16927 res!38928) b!73447))

(assert (= (and b!73447 (not res!38929)) b!73448))

(declare-fun m!71751 () Bool)

(assert (=> d!16927 m!71751))

(declare-fun m!71753 () Bool)

(assert (=> d!16927 m!71753))

(declare-fun m!71755 () Bool)

(assert (=> b!73448 m!71755))

(assert (=> b!73095 d!16927))

(assert (=> b!72962 d!16829))

(declare-fun d!16929 () Bool)

(assert (=> d!16929 (isDefined!85 (getValueByKey!131 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun lt!32944 () Unit!2066)

(declare-fun choose!426 (List!1483 (_ BitVec 64)) Unit!2066)

(assert (=> d!16929 (= lt!32944 (choose!426 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun e!48028 () Bool)

(assert (=> d!16929 e!48028))

(declare-fun res!38932 () Bool)

(assert (=> d!16929 (=> (not res!38932) (not e!48028))))

(assert (=> d!16929 (= res!38932 (isStrictlySorted!287 (toList!717 lt!32375)))))

(assert (=> d!16929 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) lt!32944)))

(declare-fun b!73451 () Bool)

(assert (=> b!73451 (= e!48028 (containsKey!135 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (= (and d!16929 res!38932) b!73451))

(assert (=> d!16929 m!70791))

(assert (=> d!16929 m!70965))

(assert (=> d!16929 m!70965))

(assert (=> d!16929 m!70967))

(assert (=> d!16929 m!70791))

(declare-fun m!71757 () Bool)

(assert (=> d!16929 m!71757))

(declare-fun m!71759 () Bool)

(assert (=> d!16929 m!71759))

(assert (=> b!73451 m!70791))

(assert (=> b!73451 m!70961))

(assert (=> b!72850 d!16929))

(assert (=> b!72850 d!16923))

(assert (=> b!72850 d!16925))

(declare-fun b!73468 () Bool)

(declare-fun e!48040 () Bool)

(declare-fun call!6483 () Bool)

(assert (=> b!73468 (= e!48040 (not call!6483))))

(declare-fun b!73469 () Bool)

(declare-fun lt!32950 () SeekEntryResult!239)

(assert (=> b!73469 (and (bvsge (index!3087 lt!32950) #b00000000000000000000000000000000) (bvslt (index!3087 lt!32950) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun res!38942 () Bool)

(assert (=> b!73469 (= res!38942 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3087 lt!32950)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73469 (=> (not res!38942) (not e!48040))))

(declare-fun b!73470 () Bool)

(declare-fun e!48038 () Bool)

(assert (=> b!73470 (= e!48038 ((_ is Undefined!239) lt!32950))))

(declare-fun b!73471 () Bool)

(declare-fun e!48039 () Bool)

(assert (=> b!73471 (= e!48039 e!48038)))

(declare-fun c!10939 () Bool)

(assert (=> b!73471 (= c!10939 ((_ is MissingVacant!239) lt!32950))))

(declare-fun b!73472 () Bool)

(declare-fun e!48037 () Bool)

(assert (=> b!73472 (= e!48037 (not call!6483))))

(declare-fun d!16931 () Bool)

(assert (=> d!16931 e!48039))

(declare-fun c!10938 () Bool)

(assert (=> d!16931 (= c!10938 ((_ is MissingZero!239) lt!32950))))

(assert (=> d!16931 (= lt!32950 (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun lt!32949 () Unit!2066)

(declare-fun choose!427 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) Int) Unit!2066)

(assert (=> d!16931 (= lt!32949 (choose!427 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)))))

(assert (=> d!16931 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16931 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!24 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)) lt!32949)))

(declare-fun b!73473 () Bool)

(declare-fun res!38944 () Bool)

(assert (=> b!73473 (=> (not res!38944) (not e!48037))))

(declare-fun call!6482 () Bool)

(assert (=> b!73473 (= res!38944 call!6482)))

(assert (=> b!73473 (= e!48038 e!48037)))

(declare-fun bm!6479 () Bool)

(assert (=> bm!6479 (= call!6483 (arrayContainsKey!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!6480 () Bool)

(assert (=> bm!6480 (= call!6482 (inRange!0 (ite c!10938 (index!3087 lt!32950) (index!3090 lt!32950)) (mask!6178 newMap!16)))))

(declare-fun b!73474 () Bool)

(assert (=> b!73474 (= e!48039 e!48040)))

(declare-fun res!38943 () Bool)

(assert (=> b!73474 (= res!38943 call!6482)))

(assert (=> b!73474 (=> (not res!38943) (not e!48040))))

(declare-fun b!73475 () Bool)

(declare-fun res!38941 () Bool)

(assert (=> b!73475 (=> (not res!38941) (not e!48037))))

(assert (=> b!73475 (= res!38941 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3090 lt!32950)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73475 (and (bvsge (index!3090 lt!32950) #b00000000000000000000000000000000) (bvslt (index!3090 lt!32950) (size!2085 (_keys!3863 newMap!16))))))

(assert (= (and d!16931 c!10938) b!73474))

(assert (= (and d!16931 (not c!10938)) b!73471))

(assert (= (and b!73474 res!38943) b!73469))

(assert (= (and b!73469 res!38942) b!73468))

(assert (= (and b!73471 c!10939) b!73473))

(assert (= (and b!73471 (not c!10939)) b!73470))

(assert (= (and b!73473 res!38944) b!73475))

(assert (= (and b!73475 res!38941) b!73472))

(assert (= (or b!73474 b!73473) bm!6480))

(assert (= (or b!73468 b!73472) bm!6479))

(declare-fun m!71761 () Bool)

(assert (=> bm!6480 m!71761))

(declare-fun m!71763 () Bool)

(assert (=> b!73475 m!71763))

(assert (=> d!16931 m!70791))

(assert (=> d!16931 m!70979))

(assert (=> d!16931 m!70791))

(declare-fun m!71765 () Bool)

(assert (=> d!16931 m!71765))

(assert (=> d!16931 m!71219))

(declare-fun m!71767 () Bool)

(assert (=> b!73469 m!71767))

(assert (=> bm!6479 m!70791))

(assert (=> bm!6479 m!71005))

(assert (=> bm!6398 d!16931))

(declare-fun d!16933 () Bool)

(declare-fun e!48042 () Bool)

(assert (=> d!16933 e!48042))

(declare-fun res!38945 () Bool)

(assert (=> d!16933 (=> res!38945 e!48042)))

(declare-fun lt!32954 () Bool)

(assert (=> d!16933 (= res!38945 (not lt!32954))))

(declare-fun lt!32952 () Bool)

(assert (=> d!16933 (= lt!32954 lt!32952)))

(declare-fun lt!32951 () Unit!2066)

(declare-fun e!48041 () Unit!2066)

(assert (=> d!16933 (= lt!32951 e!48041)))

(declare-fun c!10940 () Bool)

(assert (=> d!16933 (= c!10940 lt!32952)))

(assert (=> d!16933 (= lt!32952 (containsKey!135 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16933 (= (contains!719 lt!32604 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32954)))

(declare-fun b!73476 () Bool)

(declare-fun lt!32953 () Unit!2066)

(assert (=> b!73476 (= e!48041 lt!32953)))

(assert (=> b!73476 (= lt!32953 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73476 (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73477 () Bool)

(declare-fun Unit!2097 () Unit!2066)

(assert (=> b!73477 (= e!48041 Unit!2097)))

(declare-fun b!73478 () Bool)

(assert (=> b!73478 (= e!48042 (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16933 c!10940) b!73476))

(assert (= (and d!16933 (not c!10940)) b!73477))

(assert (= (and d!16933 (not res!38945)) b!73478))

(declare-fun m!71769 () Bool)

(assert (=> d!16933 m!71769))

(declare-fun m!71771 () Bool)

(assert (=> b!73476 m!71771))

(assert (=> b!73476 m!71601))

(assert (=> b!73476 m!71601))

(declare-fun m!71773 () Bool)

(assert (=> b!73476 m!71773))

(assert (=> b!73478 m!71601))

(assert (=> b!73478 m!71601))

(assert (=> b!73478 m!71773))

(assert (=> bm!6416 d!16933))

(declare-fun b!73479 () Bool)

(declare-fun e!48051 () Bool)

(declare-fun e!48050 () Bool)

(assert (=> b!73479 (= e!48051 e!48050)))

(declare-fun res!38948 () Bool)

(declare-fun call!6486 () Bool)

(assert (=> b!73479 (= res!38948 call!6486)))

(assert (=> b!73479 (=> (not res!38948) (not e!48050))))

(declare-fun b!73480 () Bool)

(declare-fun e!48048 () ListLongMap!1403)

(declare-fun call!6485 () ListLongMap!1403)

(assert (=> b!73480 (= e!48048 call!6485)))

(declare-fun b!73481 () Bool)

(declare-fun e!48043 () Bool)

(assert (=> b!73481 (= e!48043 e!48051)))

(declare-fun c!10942 () Bool)

(assert (=> b!73481 (= c!10942 (not (= (bvand (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73482 () Bool)

(declare-fun e!48049 () Bool)

(declare-fun call!6488 () Bool)

(assert (=> b!73482 (= e!48049 (not call!6488))))

(declare-fun b!73483 () Bool)

(declare-fun e!48054 () ListLongMap!1403)

(declare-fun call!6490 () ListLongMap!1403)

(assert (=> b!73483 (= e!48054 call!6490)))

(declare-fun b!73485 () Bool)

(declare-fun e!48045 () Bool)

(assert (=> b!73485 (= e!48049 e!48045)))

(declare-fun res!38951 () Bool)

(assert (=> b!73485 (= res!38951 call!6488)))

(assert (=> b!73485 (=> (not res!38951) (not e!48045))))

(declare-fun bm!6481 () Bool)

(declare-fun call!6487 () ListLongMap!1403)

(declare-fun call!6489 () ListLongMap!1403)

(assert (=> bm!6481 (= call!6487 call!6489)))

(declare-fun b!73486 () Bool)

(declare-fun e!48053 () ListLongMap!1403)

(assert (=> b!73486 (= e!48053 e!48048)))

(declare-fun c!10945 () Bool)

(assert (=> b!73486 (= c!10945 (and (not (= (bvand (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6482 () Bool)

(declare-fun lt!32955 () ListLongMap!1403)

(assert (=> bm!6482 (= call!6486 (contains!719 lt!32955 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6483 () Bool)

(declare-fun call!6484 () ListLongMap!1403)

(declare-fun c!10946 () Bool)

(assert (=> bm!6483 (= call!6484 (+!93 (ite c!10946 call!6489 (ite c!10945 call!6487 call!6490)) (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!73487 () Bool)

(declare-fun e!48055 () Bool)

(assert (=> b!73487 (= e!48055 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73488 () Bool)

(declare-fun res!38949 () Bool)

(assert (=> b!73488 (=> (not res!38949) (not e!48043))))

(assert (=> b!73488 (= res!38949 e!48049)))

(declare-fun c!10943 () Bool)

(assert (=> b!73488 (= c!10943 (not (= (bvand (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6484 () Bool)

(assert (=> bm!6484 (= call!6490 call!6487)))

(declare-fun e!48046 () Bool)

(declare-fun b!73489 () Bool)

(assert (=> b!73489 (= e!48046 (= (apply!75 lt!32955 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))))))))

(assert (=> b!73489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73490 () Bool)

(assert (=> b!73490 (= e!48050 (= (apply!75 lt!32955 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun bm!6485 () Bool)

(assert (=> bm!6485 (= call!6488 (contains!719 lt!32955 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73491 () Bool)

(declare-fun e!48052 () Bool)

(assert (=> b!73491 (= e!48052 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73484 () Bool)

(declare-fun e!48044 () Unit!2066)

(declare-fun lt!32962 () Unit!2066)

(assert (=> b!73484 (= e!48044 lt!32962)))

(declare-fun lt!32974 () ListLongMap!1403)

(assert (=> b!73484 (= lt!32974 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) (mask!6178 newMap!16) (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32964 () (_ BitVec 64))

(assert (=> b!73484 (= lt!32964 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32967 () (_ BitVec 64))

(assert (=> b!73484 (= lt!32967 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32973 () Unit!2066)

(assert (=> b!73484 (= lt!32973 (addStillContains!51 lt!32974 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) lt!32967))))

(assert (=> b!73484 (contains!719 (+!93 lt!32974 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) lt!32967)))

(declare-fun lt!32968 () Unit!2066)

(assert (=> b!73484 (= lt!32968 lt!32973)))

(declare-fun lt!32961 () ListLongMap!1403)

(assert (=> b!73484 (= lt!32961 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) (mask!6178 newMap!16) (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32971 () (_ BitVec 64))

(assert (=> b!73484 (= lt!32971 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32970 () (_ BitVec 64))

(assert (=> b!73484 (= lt!32970 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32963 () Unit!2066)

(assert (=> b!73484 (= lt!32963 (addApplyDifferent!51 lt!32961 lt!32971 (minValue!2114 newMap!16) lt!32970))))

(assert (=> b!73484 (= (apply!75 (+!93 lt!32961 (tuple2!2121 lt!32971 (minValue!2114 newMap!16))) lt!32970) (apply!75 lt!32961 lt!32970))))

(declare-fun lt!32975 () Unit!2066)

(assert (=> b!73484 (= lt!32975 lt!32963)))

(declare-fun lt!32972 () ListLongMap!1403)

(assert (=> b!73484 (= lt!32972 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) (mask!6178 newMap!16) (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32976 () (_ BitVec 64))

(assert (=> b!73484 (= lt!32976 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32959 () (_ BitVec 64))

(assert (=> b!73484 (= lt!32959 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32957 () Unit!2066)

(assert (=> b!73484 (= lt!32957 (addApplyDifferent!51 lt!32972 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) lt!32959))))

(assert (=> b!73484 (= (apply!75 (+!93 lt!32972 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) lt!32959) (apply!75 lt!32972 lt!32959))))

(declare-fun lt!32965 () Unit!2066)

(assert (=> b!73484 (= lt!32965 lt!32957)))

(declare-fun lt!32958 () ListLongMap!1403)

(assert (=> b!73484 (= lt!32958 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) (mask!6178 newMap!16) (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!32960 () (_ BitVec 64))

(assert (=> b!73484 (= lt!32960 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!32969 () (_ BitVec 64))

(assert (=> b!73484 (= lt!32969 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73484 (= lt!32962 (addApplyDifferent!51 lt!32958 lt!32960 (minValue!2114 newMap!16) lt!32969))))

(assert (=> b!73484 (= (apply!75 (+!93 lt!32958 (tuple2!2121 lt!32960 (minValue!2114 newMap!16))) lt!32969) (apply!75 lt!32958 lt!32969))))

(declare-fun d!16935 () Bool)

(assert (=> d!16935 e!48043))

(declare-fun res!38947 () Bool)

(assert (=> d!16935 (=> (not res!38947) (not e!48043))))

(assert (=> d!16935 (= res!38947 (or (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))))

(declare-fun lt!32966 () ListLongMap!1403)

(assert (=> d!16935 (= lt!32955 lt!32966)))

(declare-fun lt!32956 () Unit!2066)

(assert (=> d!16935 (= lt!32956 e!48044)))

(declare-fun c!10941 () Bool)

(assert (=> d!16935 (= c!10941 e!48052)))

(declare-fun res!38950 () Bool)

(assert (=> d!16935 (=> (not res!38950) (not e!48052))))

(assert (=> d!16935 (= res!38950 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!16935 (= lt!32966 e!48053)))

(assert (=> d!16935 (= c!10946 (and (not (= (bvand (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16935 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16935 (= (getCurrentListMap!410 (_keys!3863 newMap!16) (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) (mask!6178 newMap!16) (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!32955)))

(declare-fun b!73492 () Bool)

(assert (=> b!73492 (= e!48053 (+!93 call!6484 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun c!10944 () Bool)

(declare-fun b!73493 () Bool)

(assert (=> b!73493 (= c!10944 (and (not (= (bvand (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73493 (= e!48048 e!48054)))

(declare-fun b!73494 () Bool)

(assert (=> b!73494 (= e!48054 call!6485)))

(declare-fun b!73495 () Bool)

(assert (=> b!73495 (= e!48051 (not call!6486))))

(declare-fun b!73496 () Bool)

(declare-fun e!48047 () Bool)

(assert (=> b!73496 (= e!48047 e!48046)))

(declare-fun res!38952 () Bool)

(assert (=> b!73496 (=> (not res!38952) (not e!48046))))

(assert (=> b!73496 (= res!38952 (contains!719 lt!32955 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73496 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73497 () Bool)

(assert (=> b!73497 (= e!48045 (= (apply!75 lt!32955 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))))

(declare-fun b!73498 () Bool)

(declare-fun Unit!2098 () Unit!2066)

(assert (=> b!73498 (= e!48044 Unit!2098)))

(declare-fun bm!6486 () Bool)

(assert (=> bm!6486 (= call!6485 call!6484)))

(declare-fun b!73499 () Bool)

(declare-fun res!38946 () Bool)

(assert (=> b!73499 (=> (not res!38946) (not e!48043))))

(assert (=> b!73499 (= res!38946 e!48047)))

(declare-fun res!38954 () Bool)

(assert (=> b!73499 (=> res!38954 e!48047)))

(assert (=> b!73499 (= res!38954 (not e!48055))))

(declare-fun res!38953 () Bool)

(assert (=> b!73499 (=> (not res!38953) (not e!48055))))

(assert (=> b!73499 (= res!38953 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun bm!6487 () Bool)

(assert (=> bm!6487 (= call!6489 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) (mask!6178 newMap!16) (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (= (and d!16935 c!10946) b!73492))

(assert (= (and d!16935 (not c!10946)) b!73486))

(assert (= (and b!73486 c!10945) b!73480))

(assert (= (and b!73486 (not c!10945)) b!73493))

(assert (= (and b!73493 c!10944) b!73494))

(assert (= (and b!73493 (not c!10944)) b!73483))

(assert (= (or b!73494 b!73483) bm!6484))

(assert (= (or b!73480 bm!6484) bm!6481))

(assert (= (or b!73480 b!73494) bm!6486))

(assert (= (or b!73492 bm!6481) bm!6487))

(assert (= (or b!73492 bm!6486) bm!6483))

(assert (= (and d!16935 res!38950) b!73491))

(assert (= (and d!16935 c!10941) b!73484))

(assert (= (and d!16935 (not c!10941)) b!73498))

(assert (= (and d!16935 res!38947) b!73499))

(assert (= (and b!73499 res!38953) b!73487))

(assert (= (and b!73499 (not res!38954)) b!73496))

(assert (= (and b!73496 res!38952) b!73489))

(assert (= (and b!73499 res!38946) b!73488))

(assert (= (and b!73488 c!10943) b!73485))

(assert (= (and b!73488 (not c!10943)) b!73482))

(assert (= (and b!73485 res!38951) b!73497))

(assert (= (or b!73485 b!73482) bm!6485))

(assert (= (and b!73488 res!38949) b!73481))

(assert (= (and b!73481 c!10942) b!73479))

(assert (= (and b!73481 (not c!10942)) b!73495))

(assert (= (and b!73479 res!38948) b!73490))

(assert (= (or b!73479 b!73495) bm!6482))

(declare-fun b_lambda!3287 () Bool)

(assert (=> (not b_lambda!3287) (not b!73489)))

(assert (=> b!73489 t!5045))

(declare-fun b_and!4501 () Bool)

(assert (= b_and!4497 (and (=> t!5045 result!2689) b_and!4501)))

(assert (=> b!73489 t!5047))

(declare-fun b_and!4503 () Bool)

(assert (= b_and!4499 (and (=> t!5047 result!2691) b_and!4503)))

(declare-fun m!71775 () Bool)

(assert (=> bm!6482 m!71775))

(declare-fun m!71777 () Bool)

(assert (=> b!73484 m!71777))

(declare-fun m!71779 () Bool)

(assert (=> b!73484 m!71779))

(declare-fun m!71781 () Bool)

(assert (=> b!73484 m!71781))

(declare-fun m!71783 () Bool)

(assert (=> b!73484 m!71783))

(declare-fun m!71785 () Bool)

(assert (=> b!73484 m!71785))

(declare-fun m!71787 () Bool)

(assert (=> b!73484 m!71787))

(declare-fun m!71789 () Bool)

(assert (=> b!73484 m!71789))

(declare-fun m!71791 () Bool)

(assert (=> b!73484 m!71791))

(assert (=> b!73484 m!71785))

(declare-fun m!71793 () Bool)

(assert (=> b!73484 m!71793))

(declare-fun m!71795 () Bool)

(assert (=> b!73484 m!71795))

(declare-fun m!71797 () Bool)

(assert (=> b!73484 m!71797))

(declare-fun m!71799 () Bool)

(assert (=> b!73484 m!71799))

(assert (=> b!73484 m!71791))

(declare-fun m!71801 () Bool)

(assert (=> b!73484 m!71801))

(assert (=> b!73484 m!71777))

(assert (=> b!73484 m!71361))

(declare-fun m!71803 () Bool)

(assert (=> b!73484 m!71803))

(declare-fun m!71805 () Bool)

(assert (=> b!73484 m!71805))

(assert (=> b!73484 m!71781))

(declare-fun m!71807 () Bool)

(assert (=> b!73484 m!71807))

(declare-fun m!71809 () Bool)

(assert (=> b!73497 m!71809))

(declare-fun m!71811 () Bool)

(assert (=> b!73490 m!71811))

(assert (=> b!73487 m!71361))

(assert (=> b!73487 m!71361))

(assert (=> b!73487 m!71373))

(declare-fun m!71813 () Bool)

(assert (=> bm!6483 m!71813))

(assert (=> b!73491 m!71361))

(assert (=> b!73491 m!71361))

(assert (=> b!73491 m!71373))

(assert (=> d!16935 m!71219))

(declare-fun m!71815 () Bool)

(assert (=> b!73492 m!71815))

(declare-fun m!71817 () Bool)

(assert (=> bm!6485 m!71817))

(assert (=> bm!6487 m!71799))

(assert (=> b!73496 m!71361))

(assert (=> b!73496 m!71361))

(declare-fun m!71819 () Bool)

(assert (=> b!73496 m!71819))

(assert (=> b!73489 m!71361))

(declare-fun m!71821 () Bool)

(assert (=> b!73489 m!71821))

(assert (=> b!73489 m!71361))

(declare-fun m!71823 () Bool)

(assert (=> b!73489 m!71823))

(assert (=> b!73489 m!71821))

(assert (=> b!73489 m!71387))

(declare-fun m!71825 () Bool)

(assert (=> b!73489 m!71825))

(assert (=> b!73489 m!71387))

(assert (=> bm!6393 d!16935))

(declare-fun d!16937 () Bool)

(declare-fun res!38960 () Bool)

(declare-fun e!48063 () Bool)

(assert (=> d!16937 (=> res!38960 e!48063)))

(assert (=> d!16937 (= res!38960 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!16937 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3863 newMap!16) (mask!6178 newMap!16)) e!48063)))

(declare-fun b!73508 () Bool)

(declare-fun e!48064 () Bool)

(assert (=> b!73508 (= e!48063 e!48064)))

(declare-fun c!10949 () Bool)

(assert (=> b!73508 (= c!10949 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!6490 () Bool)

(declare-fun call!6493 () Bool)

(assert (=> bm!6490 (= call!6493 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun b!73509 () Bool)

(assert (=> b!73509 (= e!48064 call!6493)))

(declare-fun b!73510 () Bool)

(declare-fun e!48062 () Bool)

(assert (=> b!73510 (= e!48062 call!6493)))

(declare-fun b!73511 () Bool)

(assert (=> b!73511 (= e!48064 e!48062)))

(declare-fun lt!32984 () (_ BitVec 64))

(assert (=> b!73511 (= lt!32984 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!32983 () Unit!2066)

(assert (=> b!73511 (= lt!32983 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3863 newMap!16) lt!32984 #b00000000000000000000000000000000))))

(assert (=> b!73511 (arrayContainsKey!0 (_keys!3863 newMap!16) lt!32984 #b00000000000000000000000000000000)))

(declare-fun lt!32985 () Unit!2066)

(assert (=> b!73511 (= lt!32985 lt!32983)))

(declare-fun res!38959 () Bool)

(assert (=> b!73511 (= res!38959 (= (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) (_keys!3863 newMap!16) (mask!6178 newMap!16)) (Found!239 #b00000000000000000000000000000000)))))

(assert (=> b!73511 (=> (not res!38959) (not e!48062))))

(assert (= (and d!16937 (not res!38960)) b!73508))

(assert (= (and b!73508 c!10949) b!73511))

(assert (= (and b!73508 (not c!10949)) b!73509))

(assert (= (and b!73511 res!38959) b!73510))

(assert (= (or b!73510 b!73509) bm!6490))

(assert (=> b!73508 m!71361))

(assert (=> b!73508 m!71361))

(assert (=> b!73508 m!71373))

(declare-fun m!71827 () Bool)

(assert (=> bm!6490 m!71827))

(assert (=> b!73511 m!71361))

(declare-fun m!71829 () Bool)

(assert (=> b!73511 m!71829))

(declare-fun m!71831 () Bool)

(assert (=> b!73511 m!71831))

(assert (=> b!73511 m!71361))

(declare-fun m!71833 () Bool)

(assert (=> b!73511 m!71833))

(assert (=> b!72842 d!16937))

(declare-fun d!16939 () Bool)

(declare-fun res!38965 () Bool)

(declare-fun e!48069 () Bool)

(assert (=> d!16939 (=> res!38965 e!48069)))

(assert (=> d!16939 (= res!38965 (and ((_ is Cons!1479) (toList!717 lt!32375)) (= (_1!1071 (h!2066 (toList!717 lt!32375))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (=> d!16939 (= (containsKey!135 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) e!48069)))

(declare-fun b!73516 () Bool)

(declare-fun e!48070 () Bool)

(assert (=> b!73516 (= e!48069 e!48070)))

(declare-fun res!38966 () Bool)

(assert (=> b!73516 (=> (not res!38966) (not e!48070))))

(assert (=> b!73516 (= res!38966 (and (or (not ((_ is Cons!1479) (toList!717 lt!32375))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32375))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))) ((_ is Cons!1479) (toList!717 lt!32375)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32375))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(declare-fun b!73517 () Bool)

(assert (=> b!73517 (= e!48070 (containsKey!135 (t!5031 (toList!717 lt!32375)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (= (and d!16939 (not res!38965)) b!73516))

(assert (= (and b!73516 res!38966) b!73517))

(assert (=> b!73517 m!70791))

(declare-fun m!71835 () Bool)

(assert (=> b!73517 m!71835))

(assert (=> d!16753 d!16939))

(assert (=> b!72818 d!16741))

(declare-fun b!73529 () Bool)

(declare-fun e!48073 () Bool)

(assert (=> b!73529 (= e!48073 (and (bvsge (extraKeys!2071 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2071 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!396 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!73526 () Bool)

(declare-fun res!38975 () Bool)

(assert (=> b!73526 (=> (not res!38975) (not e!48073))))

(assert (=> b!73526 (= res!38975 (and (= (size!2086 (_values!2195 newMap!16)) (bvadd (mask!6178 newMap!16) #b00000000000000000000000000000001)) (= (size!2085 (_keys!3863 newMap!16)) (size!2086 (_values!2195 newMap!16))) (bvsge (_size!396 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!396 newMap!16) (bvadd (mask!6178 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!73527 () Bool)

(declare-fun res!38977 () Bool)

(assert (=> b!73527 (=> (not res!38977) (not e!48073))))

(declare-fun size!2091 (LongMapFixedSize!694) (_ BitVec 32))

(assert (=> b!73527 (= res!38977 (bvsge (size!2091 newMap!16) (_size!396 newMap!16)))))

(declare-fun d!16941 () Bool)

(declare-fun res!38978 () Bool)

(assert (=> d!16941 (=> (not res!38978) (not e!48073))))

(assert (=> d!16941 (= res!38978 (validMask!0 (mask!6178 newMap!16)))))

(assert (=> d!16941 (= (simpleValid!51 newMap!16) e!48073)))

(declare-fun b!73528 () Bool)

(declare-fun res!38976 () Bool)

(assert (=> b!73528 (=> (not res!38976) (not e!48073))))

(assert (=> b!73528 (= res!38976 (= (size!2091 newMap!16) (bvadd (_size!396 newMap!16) (bvsdiv (bvadd (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!16941 res!38978) b!73526))

(assert (= (and b!73526 res!38975) b!73527))

(assert (= (and b!73527 res!38977) b!73528))

(assert (= (and b!73528 res!38976) b!73529))

(declare-fun m!71837 () Bool)

(assert (=> b!73527 m!71837))

(assert (=> d!16941 m!71219))

(assert (=> b!73528 m!71837))

(assert (=> d!16747 d!16941))

(declare-fun d!16943 () Bool)

(declare-fun e!48074 () Bool)

(assert (=> d!16943 e!48074))

(declare-fun res!38980 () Bool)

(assert (=> d!16943 (=> (not res!38980) (not e!48074))))

(declare-fun lt!32988 () ListLongMap!1403)

(assert (=> d!16943 (= res!38980 (contains!719 lt!32988 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!32989 () List!1483)

(assert (=> d!16943 (= lt!32988 (ListLongMap!1404 lt!32989))))

(declare-fun lt!32987 () Unit!2066)

(declare-fun lt!32986 () Unit!2066)

(assert (=> d!16943 (= lt!32987 lt!32986)))

(assert (=> d!16943 (= (getValueByKey!131 lt!32989 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16943 (= lt!32986 (lemmaContainsTupThenGetReturnValue!51 lt!32989 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16943 (= lt!32989 (insertStrictlySorted!54 (toList!717 lt!32623) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16943 (= (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32988)))

(declare-fun b!73530 () Bool)

(declare-fun res!38979 () Bool)

(assert (=> b!73530 (=> (not res!38979) (not e!48074))))

(assert (=> b!73530 (= res!38979 (= (getValueByKey!131 (toList!717 lt!32988) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!73531 () Bool)

(assert (=> b!73531 (= e!48074 (contains!722 (toList!717 lt!32988) (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!16943 res!38980) b!73530))

(assert (= (and b!73530 res!38979) b!73531))

(declare-fun m!71839 () Bool)

(assert (=> d!16943 m!71839))

(declare-fun m!71841 () Bool)

(assert (=> d!16943 m!71841))

(declare-fun m!71843 () Bool)

(assert (=> d!16943 m!71843))

(declare-fun m!71845 () Bool)

(assert (=> d!16943 m!71845))

(declare-fun m!71847 () Bool)

(assert (=> b!73530 m!71847))

(declare-fun m!71849 () Bool)

(assert (=> b!73531 m!71849))

(assert (=> b!73032 d!16943))

(assert (=> b!73032 d!16775))

(declare-fun d!16945 () Bool)

(assert (=> d!16945 (= (apply!75 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32618) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32618)))))

(declare-fun bs!3146 () Bool)

(assert (= bs!3146 d!16945))

(declare-fun m!71851 () Bool)

(assert (=> bs!3146 m!71851))

(assert (=> bs!3146 m!71851))

(declare-fun m!71853 () Bool)

(assert (=> bs!3146 m!71853))

(assert (=> b!73032 d!16945))

(declare-fun d!16947 () Bool)

(assert (=> d!16947 (= (apply!75 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32619) (apply!75 lt!32610 lt!32619))))

(declare-fun lt!32992 () Unit!2066)

(declare-fun choose!428 (ListLongMap!1403 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2066)

(assert (=> d!16947 (= lt!32992 (choose!428 lt!32610 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32619))))

(declare-fun e!48077 () Bool)

(assert (=> d!16947 e!48077))

(declare-fun res!38983 () Bool)

(assert (=> d!16947 (=> (not res!38983) (not e!48077))))

(assert (=> d!16947 (= res!38983 (contains!719 lt!32610 lt!32619))))

(assert (=> d!16947 (= (addApplyDifferent!51 lt!32610 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32619) lt!32992)))

(declare-fun b!73535 () Bool)

(assert (=> b!73535 (= e!48077 (not (= lt!32619 lt!32620)))))

(assert (= (and d!16947 res!38983) b!73535))

(declare-fun m!71855 () Bool)

(assert (=> d!16947 m!71855))

(declare-fun m!71857 () Bool)

(assert (=> d!16947 m!71857))

(assert (=> d!16947 m!71059))

(assert (=> d!16947 m!71047))

(assert (=> d!16947 m!71047))

(assert (=> d!16947 m!71055))

(assert (=> b!73032 d!16947))

(declare-fun d!16949 () Bool)

(assert (=> d!16949 (= (apply!75 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32619) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32619)))))

(declare-fun bs!3147 () Bool)

(assert (= bs!3147 d!16949))

(declare-fun m!71859 () Bool)

(assert (=> bs!3147 m!71859))

(assert (=> bs!3147 m!71859))

(declare-fun m!71861 () Bool)

(assert (=> bs!3147 m!71861))

(assert (=> b!73032 d!16949))

(declare-fun d!16951 () Bool)

(assert (=> d!16951 (= (apply!75 lt!32607 lt!32618) (get!1147 (getValueByKey!131 (toList!717 lt!32607) lt!32618)))))

(declare-fun bs!3148 () Bool)

(assert (= bs!3148 d!16951))

(declare-fun m!71863 () Bool)

(assert (=> bs!3148 m!71863))

(assert (=> bs!3148 m!71863))

(declare-fun m!71865 () Bool)

(assert (=> bs!3148 m!71865))

(assert (=> b!73032 d!16951))

(declare-fun d!16953 () Bool)

(declare-fun e!48079 () Bool)

(assert (=> d!16953 e!48079))

(declare-fun res!38984 () Bool)

(assert (=> d!16953 (=> res!38984 e!48079)))

(declare-fun lt!32996 () Bool)

(assert (=> d!16953 (= res!38984 (not lt!32996))))

(declare-fun lt!32994 () Bool)

(assert (=> d!16953 (= lt!32996 lt!32994)))

(declare-fun lt!32993 () Unit!2066)

(declare-fun e!48078 () Unit!2066)

(assert (=> d!16953 (= lt!32993 e!48078)))

(declare-fun c!10950 () Bool)

(assert (=> d!16953 (= c!10950 lt!32994)))

(assert (=> d!16953 (= lt!32994 (containsKey!135 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616))))

(assert (=> d!16953 (= (contains!719 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32616) lt!32996)))

(declare-fun b!73536 () Bool)

(declare-fun lt!32995 () Unit!2066)

(assert (=> b!73536 (= e!48078 lt!32995)))

(assert (=> b!73536 (= lt!32995 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616))))

(assert (=> b!73536 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616))))

(declare-fun b!73537 () Bool)

(declare-fun Unit!2099 () Unit!2066)

(assert (=> b!73537 (= e!48078 Unit!2099)))

(declare-fun b!73538 () Bool)

(assert (=> b!73538 (= e!48079 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616)))))

(assert (= (and d!16953 c!10950) b!73536))

(assert (= (and d!16953 (not c!10950)) b!73537))

(assert (= (and d!16953 (not res!38984)) b!73538))

(declare-fun m!71867 () Bool)

(assert (=> d!16953 m!71867))

(declare-fun m!71869 () Bool)

(assert (=> b!73536 m!71869))

(declare-fun m!71871 () Bool)

(assert (=> b!73536 m!71871))

(assert (=> b!73536 m!71871))

(declare-fun m!71873 () Bool)

(assert (=> b!73536 m!71873))

(assert (=> b!73538 m!71871))

(assert (=> b!73538 m!71871))

(assert (=> b!73538 m!71873))

(assert (=> b!73032 d!16953))

(declare-fun d!16955 () Bool)

(assert (=> d!16955 (= (apply!75 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32608) (apply!75 lt!32621 lt!32608))))

(declare-fun lt!32997 () Unit!2066)

(assert (=> d!16955 (= lt!32997 (choose!428 lt!32621 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32608))))

(declare-fun e!48080 () Bool)

(assert (=> d!16955 e!48080))

(declare-fun res!38985 () Bool)

(assert (=> d!16955 (=> (not res!38985) (not e!48080))))

(assert (=> d!16955 (= res!38985 (contains!719 lt!32621 lt!32608))))

(assert (=> d!16955 (= (addApplyDifferent!51 lt!32621 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32608) lt!32997)))

(declare-fun b!73539 () Bool)

(assert (=> b!73539 (= e!48080 (not (= lt!32608 lt!32625)))))

(assert (= (and d!16955 res!38985) b!73539))

(declare-fun m!71875 () Bool)

(assert (=> d!16955 m!71875))

(declare-fun m!71877 () Bool)

(assert (=> d!16955 m!71877))

(assert (=> d!16955 m!71053))

(assert (=> d!16955 m!71041))

(assert (=> d!16955 m!71041))

(assert (=> d!16955 m!71043))

(assert (=> b!73032 d!16955))

(declare-fun d!16957 () Bool)

(declare-fun e!48081 () Bool)

(assert (=> d!16957 e!48081))

(declare-fun res!38987 () Bool)

(assert (=> d!16957 (=> (not res!38987) (not e!48081))))

(declare-fun lt!33000 () ListLongMap!1403)

(assert (=> d!16957 (= res!38987 (contains!719 lt!33000 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!33001 () List!1483)

(assert (=> d!16957 (= lt!33000 (ListLongMap!1404 lt!33001))))

(declare-fun lt!32999 () Unit!2066)

(declare-fun lt!32998 () Unit!2066)

(assert (=> d!16957 (= lt!32999 lt!32998)))

(assert (=> d!16957 (= (getValueByKey!131 lt!33001 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16957 (= lt!32998 (lemmaContainsTupThenGetReturnValue!51 lt!33001 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16957 (= lt!33001 (insertStrictlySorted!54 (toList!717 lt!32610) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16957 (= (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!33000)))

(declare-fun b!73540 () Bool)

(declare-fun res!38986 () Bool)

(assert (=> b!73540 (=> (not res!38986) (not e!48081))))

(assert (=> b!73540 (= res!38986 (= (getValueByKey!131 (toList!717 lt!33000) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!73541 () Bool)

(assert (=> b!73541 (= e!48081 (contains!722 (toList!717 lt!33000) (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!16957 res!38987) b!73540))

(assert (= (and b!73540 res!38986) b!73541))

(declare-fun m!71879 () Bool)

(assert (=> d!16957 m!71879))

(declare-fun m!71881 () Bool)

(assert (=> d!16957 m!71881))

(declare-fun m!71883 () Bool)

(assert (=> d!16957 m!71883))

(declare-fun m!71885 () Bool)

(assert (=> d!16957 m!71885))

(declare-fun m!71887 () Bool)

(assert (=> b!73540 m!71887))

(declare-fun m!71889 () Bool)

(assert (=> b!73541 m!71889))

(assert (=> b!73032 d!16957))

(declare-fun d!16959 () Bool)

(assert (=> d!16959 (= (apply!75 lt!32621 lt!32608) (get!1147 (getValueByKey!131 (toList!717 lt!32621) lt!32608)))))

(declare-fun bs!3149 () Bool)

(assert (= bs!3149 d!16959))

(declare-fun m!71891 () Bool)

(assert (=> bs!3149 m!71891))

(assert (=> bs!3149 m!71891))

(declare-fun m!71893 () Bool)

(assert (=> bs!3149 m!71893))

(assert (=> b!73032 d!16959))

(declare-fun d!16961 () Bool)

(assert (=> d!16961 (= (apply!75 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32618) (apply!75 lt!32607 lt!32618))))

(declare-fun lt!33002 () Unit!2066)

(assert (=> d!16961 (= lt!33002 (choose!428 lt!32607 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32618))))

(declare-fun e!48082 () Bool)

(assert (=> d!16961 e!48082))

(declare-fun res!38988 () Bool)

(assert (=> d!16961 (=> (not res!38988) (not e!48082))))

(assert (=> d!16961 (= res!38988 (contains!719 lt!32607 lt!32618))))

(assert (=> d!16961 (= (addApplyDifferent!51 lt!32607 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32618) lt!33002)))

(declare-fun b!73542 () Bool)

(assert (=> b!73542 (= e!48082 (not (= lt!32618 lt!32609)))))

(assert (= (and d!16961 res!38988) b!73542))

(declare-fun m!71895 () Bool)

(assert (=> d!16961 m!71895))

(declare-fun m!71897 () Bool)

(assert (=> d!16961 m!71897))

(assert (=> d!16961 m!71049))

(assert (=> d!16961 m!71033))

(assert (=> d!16961 m!71033))

(assert (=> d!16961 m!71035))

(assert (=> b!73032 d!16961))

(declare-fun d!16963 () Bool)

(declare-fun e!48083 () Bool)

(assert (=> d!16963 e!48083))

(declare-fun res!38990 () Bool)

(assert (=> d!16963 (=> (not res!38990) (not e!48083))))

(declare-fun lt!33005 () ListLongMap!1403)

(assert (=> d!16963 (= res!38990 (contains!719 lt!33005 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!33006 () List!1483)

(assert (=> d!16963 (= lt!33005 (ListLongMap!1404 lt!33006))))

(declare-fun lt!33004 () Unit!2066)

(declare-fun lt!33003 () Unit!2066)

(assert (=> d!16963 (= lt!33004 lt!33003)))

(assert (=> d!16963 (= (getValueByKey!131 lt!33006 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16963 (= lt!33003 (lemmaContainsTupThenGetReturnValue!51 lt!33006 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16963 (= lt!33006 (insertStrictlySorted!54 (toList!717 lt!32607) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16963 (= (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!33005)))

(declare-fun b!73543 () Bool)

(declare-fun res!38989 () Bool)

(assert (=> b!73543 (=> (not res!38989) (not e!48083))))

(assert (=> b!73543 (= res!38989 (= (getValueByKey!131 (toList!717 lt!33005) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!73544 () Bool)

(assert (=> b!73544 (= e!48083 (contains!722 (toList!717 lt!33005) (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!16963 res!38990) b!73543))

(assert (= (and b!73543 res!38989) b!73544))

(declare-fun m!71899 () Bool)

(assert (=> d!16963 m!71899))

(declare-fun m!71901 () Bool)

(assert (=> d!16963 m!71901))

(declare-fun m!71903 () Bool)

(assert (=> d!16963 m!71903))

(declare-fun m!71905 () Bool)

(assert (=> d!16963 m!71905))

(declare-fun m!71907 () Bool)

(assert (=> b!73543 m!71907))

(declare-fun m!71909 () Bool)

(assert (=> b!73544 m!71909))

(assert (=> b!73032 d!16963))

(declare-fun d!16965 () Bool)

(assert (=> d!16965 (contains!719 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32616)))

(declare-fun lt!33009 () Unit!2066)

(declare-fun choose!429 (ListLongMap!1403 (_ BitVec 64) V!2945 (_ BitVec 64)) Unit!2066)

(assert (=> d!16965 (= lt!33009 (choose!429 lt!32623 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32616))))

(assert (=> d!16965 (contains!719 lt!32623 lt!32616)))

(assert (=> d!16965 (= (addStillContains!51 lt!32623 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32616) lt!33009)))

(declare-fun bs!3150 () Bool)

(assert (= bs!3150 d!16965))

(assert (=> bs!3150 m!71037))

(assert (=> bs!3150 m!71037))

(assert (=> bs!3150 m!71039))

(declare-fun m!71911 () Bool)

(assert (=> bs!3150 m!71911))

(declare-fun m!71913 () Bool)

(assert (=> bs!3150 m!71913))

(assert (=> b!73032 d!16965))

(declare-fun d!16967 () Bool)

(assert (=> d!16967 (= (apply!75 lt!32610 lt!32619) (get!1147 (getValueByKey!131 (toList!717 lt!32610) lt!32619)))))

(declare-fun bs!3151 () Bool)

(assert (= bs!3151 d!16967))

(declare-fun m!71915 () Bool)

(assert (=> bs!3151 m!71915))

(assert (=> bs!3151 m!71915))

(declare-fun m!71917 () Bool)

(assert (=> bs!3151 m!71917))

(assert (=> b!73032 d!16967))

(declare-fun d!16969 () Bool)

(assert (=> d!16969 (= (apply!75 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32608) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32608)))))

(declare-fun bs!3152 () Bool)

(assert (= bs!3152 d!16969))

(declare-fun m!71919 () Bool)

(assert (=> bs!3152 m!71919))

(assert (=> bs!3152 m!71919))

(declare-fun m!71921 () Bool)

(assert (=> bs!3152 m!71921))

(assert (=> b!73032 d!16969))

(declare-fun d!16971 () Bool)

(declare-fun e!48084 () Bool)

(assert (=> d!16971 e!48084))

(declare-fun res!38992 () Bool)

(assert (=> d!16971 (=> (not res!38992) (not e!48084))))

(declare-fun lt!33012 () ListLongMap!1403)

(assert (=> d!16971 (= res!38992 (contains!719 lt!33012 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!33013 () List!1483)

(assert (=> d!16971 (= lt!33012 (ListLongMap!1404 lt!33013))))

(declare-fun lt!33011 () Unit!2066)

(declare-fun lt!33010 () Unit!2066)

(assert (=> d!16971 (= lt!33011 lt!33010)))

(assert (=> d!16971 (= (getValueByKey!131 lt!33013 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16971 (= lt!33010 (lemmaContainsTupThenGetReturnValue!51 lt!33013 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16971 (= lt!33013 (insertStrictlySorted!54 (toList!717 lt!32621) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!16971 (= (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!33012)))

(declare-fun b!73546 () Bool)

(declare-fun res!38991 () Bool)

(assert (=> b!73546 (=> (not res!38991) (not e!48084))))

(assert (=> b!73546 (= res!38991 (= (getValueByKey!131 (toList!717 lt!33012) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!73547 () Bool)

(assert (=> b!73547 (= e!48084 (contains!722 (toList!717 lt!33012) (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!16971 res!38992) b!73546))

(assert (= (and b!73546 res!38991) b!73547))

(declare-fun m!71923 () Bool)

(assert (=> d!16971 m!71923))

(declare-fun m!71925 () Bool)

(assert (=> d!16971 m!71925))

(declare-fun m!71927 () Bool)

(assert (=> d!16971 m!71927))

(declare-fun m!71929 () Bool)

(assert (=> d!16971 m!71929))

(declare-fun m!71931 () Bool)

(assert (=> b!73546 m!71931))

(declare-fun m!71933 () Bool)

(assert (=> b!73547 m!71933))

(assert (=> b!73032 d!16971))

(declare-fun d!16973 () Bool)

(assert (=> d!16973 (= (get!1145 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) from!355) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2522 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> b!72983 d!16973))

(declare-fun b!73560 () Bool)

(declare-fun e!48093 () SeekEntryResult!239)

(declare-fun e!48092 () SeekEntryResult!239)

(assert (=> b!73560 (= e!48093 e!48092)))

(declare-fun lt!33020 () (_ BitVec 64))

(declare-fun lt!33021 () SeekEntryResult!239)

(assert (=> b!73560 (= lt!33020 (select (arr!1846 (_keys!3863 newMap!16)) (index!3089 lt!33021)))))

(declare-fun c!10958 () Bool)

(assert (=> b!73560 (= c!10958 (= lt!33020 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!73561 () Bool)

(declare-fun e!48091 () SeekEntryResult!239)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3871 (_ BitVec 32)) SeekEntryResult!239)

(assert (=> b!73561 (= e!48091 (seekKeyOrZeroReturnVacant!0 (x!11154 lt!33021) (index!3089 lt!33021) (index!3089 lt!33021) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun lt!33022 () SeekEntryResult!239)

(declare-fun d!16975 () Bool)

(assert (=> d!16975 (and (or ((_ is Undefined!239) lt!33022) (not ((_ is Found!239) lt!33022)) (and (bvsge (index!3088 lt!33022) #b00000000000000000000000000000000) (bvslt (index!3088 lt!33022) (size!2085 (_keys!3863 newMap!16))))) (or ((_ is Undefined!239) lt!33022) ((_ is Found!239) lt!33022) (not ((_ is MissingZero!239) lt!33022)) (and (bvsge (index!3087 lt!33022) #b00000000000000000000000000000000) (bvslt (index!3087 lt!33022) (size!2085 (_keys!3863 newMap!16))))) (or ((_ is Undefined!239) lt!33022) ((_ is Found!239) lt!33022) ((_ is MissingZero!239) lt!33022) (not ((_ is MissingVacant!239) lt!33022)) (and (bvsge (index!3090 lt!33022) #b00000000000000000000000000000000) (bvslt (index!3090 lt!33022) (size!2085 (_keys!3863 newMap!16))))) (or ((_ is Undefined!239) lt!33022) (ite ((_ is Found!239) lt!33022) (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!33022)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (ite ((_ is MissingZero!239) lt!33022) (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3087 lt!33022)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!239) lt!33022) (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3090 lt!33022)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!16975 (= lt!33022 e!48093)))

(declare-fun c!10957 () Bool)

(assert (=> d!16975 (= c!10957 (and ((_ is Intermediate!239) lt!33021) (undefined!1051 lt!33021)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!3871 (_ BitVec 32)) SeekEntryResult!239)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!16975 (= lt!33021 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (mask!6178 newMap!16)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(assert (=> d!16975 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16975 (= (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)) lt!33022)))

(declare-fun b!73562 () Bool)

(assert (=> b!73562 (= e!48093 Undefined!239)))

(declare-fun b!73563 () Bool)

(assert (=> b!73563 (= e!48092 (Found!239 (index!3089 lt!33021)))))

(declare-fun b!73564 () Bool)

(declare-fun c!10959 () Bool)

(assert (=> b!73564 (= c!10959 (= lt!33020 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73564 (= e!48092 e!48091)))

(declare-fun b!73565 () Bool)

(assert (=> b!73565 (= e!48091 (MissingZero!239 (index!3089 lt!33021)))))

(assert (= (and d!16975 c!10957) b!73562))

(assert (= (and d!16975 (not c!10957)) b!73560))

(assert (= (and b!73560 c!10958) b!73563))

(assert (= (and b!73560 (not c!10958)) b!73564))

(assert (= (and b!73564 c!10959) b!73565))

(assert (= (and b!73564 (not c!10959)) b!73561))

(declare-fun m!71935 () Bool)

(assert (=> b!73560 m!71935))

(assert (=> b!73561 m!70791))

(declare-fun m!71937 () Bool)

(assert (=> b!73561 m!71937))

(declare-fun m!71939 () Bool)

(assert (=> d!16975 m!71939))

(declare-fun m!71941 () Bool)

(assert (=> d!16975 m!71941))

(assert (=> d!16975 m!71219))

(declare-fun m!71943 () Bool)

(assert (=> d!16975 m!71943))

(declare-fun m!71945 () Bool)

(assert (=> d!16975 m!71945))

(assert (=> d!16975 m!70791))

(declare-fun m!71947 () Bool)

(assert (=> d!16975 m!71947))

(assert (=> d!16975 m!70791))

(assert (=> d!16975 m!71945))

(assert (=> b!72978 d!16975))

(declare-fun d!16977 () Bool)

(declare-fun e!48095 () Bool)

(assert (=> d!16977 e!48095))

(declare-fun res!38993 () Bool)

(assert (=> d!16977 (=> res!38993 e!48095)))

(declare-fun lt!33026 () Bool)

(assert (=> d!16977 (= res!38993 (not lt!33026))))

(declare-fun lt!33024 () Bool)

(assert (=> d!16977 (= lt!33026 lt!33024)))

(declare-fun lt!33023 () Unit!2066)

(declare-fun e!48094 () Unit!2066)

(assert (=> d!16977 (= lt!33023 e!48094)))

(declare-fun c!10960 () Bool)

(assert (=> d!16977 (= c!10960 lt!33024)))

(assert (=> d!16977 (= lt!33024 (containsKey!135 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!16977 (= (contains!719 lt!32663 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33026)))

(declare-fun b!73566 () Bool)

(declare-fun lt!33025 () Unit!2066)

(assert (=> b!73566 (= e!48094 lt!33025)))

(assert (=> b!73566 (= lt!33025 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73566 (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73567 () Bool)

(declare-fun Unit!2100 () Unit!2066)

(assert (=> b!73567 (= e!48094 Unit!2100)))

(declare-fun b!73568 () Bool)

(assert (=> b!73568 (= e!48095 (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!16977 c!10960) b!73566))

(assert (= (and d!16977 (not c!10960)) b!73567))

(assert (= (and d!16977 (not res!38993)) b!73568))

(declare-fun m!71949 () Bool)

(assert (=> d!16977 m!71949))

(declare-fun m!71951 () Bool)

(assert (=> b!73566 m!71951))

(declare-fun m!71953 () Bool)

(assert (=> b!73566 m!71953))

(assert (=> b!73566 m!71953))

(declare-fun m!71955 () Bool)

(assert (=> b!73566 m!71955))

(assert (=> b!73568 m!71953))

(assert (=> b!73568 m!71953))

(assert (=> b!73568 m!71955))

(assert (=> b!73087 d!16977))

(declare-fun d!16979 () Bool)

(declare-fun lt!33027 () Bool)

(assert (=> d!16979 (= lt!33027 (select (content!77 (toList!717 lt!32643)) lt!32376))))

(declare-fun e!48097 () Bool)

(assert (=> d!16979 (= lt!33027 e!48097)))

(declare-fun res!38994 () Bool)

(assert (=> d!16979 (=> (not res!38994) (not e!48097))))

(assert (=> d!16979 (= res!38994 ((_ is Cons!1479) (toList!717 lt!32643)))))

(assert (=> d!16979 (= (contains!722 (toList!717 lt!32643) lt!32376) lt!33027)))

(declare-fun b!73569 () Bool)

(declare-fun e!48096 () Bool)

(assert (=> b!73569 (= e!48097 e!48096)))

(declare-fun res!38995 () Bool)

(assert (=> b!73569 (=> res!38995 e!48096)))

(assert (=> b!73569 (= res!38995 (= (h!2066 (toList!717 lt!32643)) lt!32376))))

(declare-fun b!73570 () Bool)

(assert (=> b!73570 (= e!48096 (contains!722 (t!5031 (toList!717 lt!32643)) lt!32376))))

(assert (= (and d!16979 res!38994) b!73569))

(assert (= (and b!73569 (not res!38995)) b!73570))

(declare-fun m!71957 () Bool)

(assert (=> d!16979 m!71957))

(declare-fun m!71959 () Bool)

(assert (=> d!16979 m!71959))

(declare-fun m!71961 () Bool)

(assert (=> b!73570 m!71961))

(assert (=> b!73055 d!16979))

(assert (=> bm!6396 d!16975))

(assert (=> b!72830 d!16905))

(declare-fun d!16981 () Bool)

(declare-fun lt!33028 () Bool)

(assert (=> d!16981 (= lt!33028 (select (content!77 (toList!717 lt!32639)) lt!32376))))

(declare-fun e!48099 () Bool)

(assert (=> d!16981 (= lt!33028 e!48099)))

(declare-fun res!38996 () Bool)

(assert (=> d!16981 (=> (not res!38996) (not e!48099))))

(assert (=> d!16981 (= res!38996 ((_ is Cons!1479) (toList!717 lt!32639)))))

(assert (=> d!16981 (= (contains!722 (toList!717 lt!32639) lt!32376) lt!33028)))

(declare-fun b!73571 () Bool)

(declare-fun e!48098 () Bool)

(assert (=> b!73571 (= e!48099 e!48098)))

(declare-fun res!38997 () Bool)

(assert (=> b!73571 (=> res!38997 e!48098)))

(assert (=> b!73571 (= res!38997 (= (h!2066 (toList!717 lt!32639)) lt!32376))))

(declare-fun b!73572 () Bool)

(assert (=> b!73572 (= e!48098 (contains!722 (t!5031 (toList!717 lt!32639)) lt!32376))))

(assert (= (and d!16981 res!38996) b!73571))

(assert (= (and b!73571 (not res!38997)) b!73572))

(declare-fun m!71963 () Bool)

(assert (=> d!16981 m!71963))

(declare-fun m!71965 () Bool)

(assert (=> d!16981 m!71965))

(declare-fun m!71967 () Bool)

(assert (=> b!73572 m!71967))

(assert (=> b!73053 d!16981))

(declare-fun d!16983 () Bool)

(declare-fun res!38998 () Bool)

(declare-fun e!48100 () Bool)

(assert (=> d!16983 (=> res!38998 e!48100)))

(assert (=> d!16983 (= res!38998 (= (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!16983 (= (arrayContainsKey!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000) e!48100)))

(declare-fun b!73573 () Bool)

(declare-fun e!48101 () Bool)

(assert (=> b!73573 (= e!48100 e!48101)))

(declare-fun res!38999 () Bool)

(assert (=> b!73573 (=> (not res!38999) (not e!48101))))

(assert (=> b!73573 (= res!38999 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73574 () Bool)

(assert (=> b!73574 (= e!48101 (arrayContainsKey!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!16983 (not res!38998)) b!73573))

(assert (= (and b!73573 res!38999) b!73574))

(assert (=> d!16983 m!71361))

(assert (=> b!73574 m!70791))

(declare-fun m!71969 () Bool)

(assert (=> b!73574 m!71969))

(assert (=> bm!6382 d!16983))

(assert (=> b!73035 d!16793))

(declare-fun d!16985 () Bool)

(declare-fun e!48102 () Bool)

(assert (=> d!16985 e!48102))

(declare-fun res!39001 () Bool)

(assert (=> d!16985 (=> (not res!39001) (not e!48102))))

(declare-fun lt!33031 () ListLongMap!1403)

(assert (=> d!16985 (= res!39001 (contains!719 lt!33031 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun lt!33032 () List!1483)

(assert (=> d!16985 (= lt!33031 (ListLongMap!1404 lt!33032))))

(declare-fun lt!33030 () Unit!2066)

(declare-fun lt!33029 () Unit!2066)

(assert (=> d!16985 (= lt!33030 lt!33029)))

(assert (=> d!16985 (= (getValueByKey!131 lt!33032 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) (Some!136 (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!16985 (= lt!33029 (lemmaContainsTupThenGetReturnValue!51 lt!33032 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!16985 (= lt!33032 (insertStrictlySorted!54 (toList!717 e!47747) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!16985 (= (+!93 e!47747 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33031)))

(declare-fun b!73575 () Bool)

(declare-fun res!39000 () Bool)

(assert (=> b!73575 (=> (not res!39000) (not e!48102))))

(assert (=> b!73575 (= res!39000 (= (getValueByKey!131 (toList!717 lt!33031) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) (Some!136 (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(declare-fun b!73576 () Bool)

(assert (=> b!73576 (= e!48102 (contains!722 (toList!717 lt!33031) (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (= (and d!16985 res!39001) b!73575))

(assert (= (and b!73575 res!39000) b!73576))

(declare-fun m!71971 () Bool)

(assert (=> d!16985 m!71971))

(declare-fun m!71973 () Bool)

(assert (=> d!16985 m!71973))

(declare-fun m!71975 () Bool)

(assert (=> d!16985 m!71975))

(declare-fun m!71977 () Bool)

(assert (=> d!16985 m!71977))

(declare-fun m!71979 () Bool)

(assert (=> b!73575 m!71979))

(declare-fun m!71981 () Bool)

(assert (=> b!73576 m!71981))

(assert (=> bm!6381 d!16985))

(assert (=> b!73083 d!16793))

(declare-fun condMapEmpty!3183 () Bool)

(declare-fun mapDefault!3183 () ValueCell!893)

(assert (=> mapNonEmpty!3181 (= condMapEmpty!3183 (= mapRest!3181 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3183)))))

(declare-fun e!48103 () Bool)

(declare-fun mapRes!3183 () Bool)

(assert (=> mapNonEmpty!3181 (= tp!8545 (and e!48103 mapRes!3183))))

(declare-fun b!73578 () Bool)

(assert (=> b!73578 (= e!48103 tp_is_empty!2473)))

(declare-fun b!73577 () Bool)

(declare-fun e!48104 () Bool)

(assert (=> b!73577 (= e!48104 tp_is_empty!2473)))

(declare-fun mapIsEmpty!3183 () Bool)

(assert (=> mapIsEmpty!3183 mapRes!3183))

(declare-fun mapNonEmpty!3183 () Bool)

(declare-fun tp!8547 () Bool)

(assert (=> mapNonEmpty!3183 (= mapRes!3183 (and tp!8547 e!48104))))

(declare-fun mapRest!3183 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapKey!3183 () (_ BitVec 32))

(declare-fun mapValue!3183 () ValueCell!893)

(assert (=> mapNonEmpty!3183 (= mapRest!3181 (store mapRest!3183 mapKey!3183 mapValue!3183))))

(assert (= (and mapNonEmpty!3181 condMapEmpty!3183) mapIsEmpty!3183))

(assert (= (and mapNonEmpty!3181 (not condMapEmpty!3183)) mapNonEmpty!3183))

(assert (= (and mapNonEmpty!3183 ((_ is ValueCellFull!893) mapValue!3183)) b!73577))

(assert (= (and mapNonEmpty!3181 ((_ is ValueCellFull!893) mapDefault!3183)) b!73578))

(declare-fun m!71983 () Bool)

(assert (=> mapNonEmpty!3183 m!71983))

(declare-fun condMapEmpty!3184 () Bool)

(declare-fun mapDefault!3184 () ValueCell!893)

(assert (=> mapNonEmpty!3182 (= condMapEmpty!3184 (= mapRest!3182 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3184)))))

(declare-fun e!48105 () Bool)

(declare-fun mapRes!3184 () Bool)

(assert (=> mapNonEmpty!3182 (= tp!8546 (and e!48105 mapRes!3184))))

(declare-fun b!73580 () Bool)

(assert (=> b!73580 (= e!48105 tp_is_empty!2473)))

(declare-fun b!73579 () Bool)

(declare-fun e!48106 () Bool)

(assert (=> b!73579 (= e!48106 tp_is_empty!2473)))

(declare-fun mapIsEmpty!3184 () Bool)

(assert (=> mapIsEmpty!3184 mapRes!3184))

(declare-fun mapNonEmpty!3184 () Bool)

(declare-fun tp!8548 () Bool)

(assert (=> mapNonEmpty!3184 (= mapRes!3184 (and tp!8548 e!48106))))

(declare-fun mapKey!3184 () (_ BitVec 32))

(declare-fun mapRest!3184 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapValue!3184 () ValueCell!893)

(assert (=> mapNonEmpty!3184 (= mapRest!3182 (store mapRest!3184 mapKey!3184 mapValue!3184))))

(assert (= (and mapNonEmpty!3182 condMapEmpty!3184) mapIsEmpty!3184))

(assert (= (and mapNonEmpty!3182 (not condMapEmpty!3184)) mapNonEmpty!3184))

(assert (= (and mapNonEmpty!3184 ((_ is ValueCellFull!893) mapValue!3184)) b!73579))

(assert (= (and mapNonEmpty!3182 ((_ is ValueCellFull!893) mapDefault!3184)) b!73580))

(declare-fun m!71985 () Bool)

(assert (=> mapNonEmpty!3184 m!71985))

(declare-fun b_lambda!3289 () Bool)

(assert (= b_lambda!3279 (or (and b!72681 b_free!2113) (and b!72667 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))) b_lambda!3289)))

(declare-fun b_lambda!3291 () Bool)

(assert (= b_lambda!3281 (or (and b!72681 b_free!2113) (and b!72667 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))) b_lambda!3291)))

(declare-fun b_lambda!3293 () Bool)

(assert (= b_lambda!3285 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3293)))

(declare-fun b_lambda!3295 () Bool)

(assert (= b_lambda!3287 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3295)))

(declare-fun b_lambda!3297 () Bool)

(assert (= b_lambda!3283 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3297)))

(check-sat (not bm!6485) (not mapNonEmpty!3184) (not d!16823) (not b!73394) (not b!73153) (not b!73129) (not b!73260) (not bm!6442) (not d!16849) (not b!73127) (not b!73282) (not b!73216) (not b!73308) (not d!16907) (not d!16911) (not d!16801) (not b!73412) (not b!73490) (not d!16877) (not b!73496) (not b!73277) (not b!73234) (not bm!6437) (not d!16985) (not b!73144) (not b!73341) (not d!16971) (not b!73213) (not b!73233) (not b!73138) (not b!73396) (not b_lambda!3265) b_and!4501 (not b!73128) (not b!73136) (not d!16969) (not b!73195) (not d!16917) (not b!73305) (not d!16915) (not b!73266) (not b!73330) (not d!16855) (not bm!6454) (not b_lambda!3293) (not bm!6425) (not d!16843) (not bm!6448) (not bm!6472) (not d!16967) (not b!73491) (not b!73265) (not b!73476) (not d!16827) (not b!73210) (not b!73312) (not d!16979) (not b_lambda!3275) (not b!73256) (not d!16975) (not d!16933) (not d!16815) (not d!16953) (not b!73541) (not d!16981) (not d!16919) (not b!73440) (not b!73298) (not b!73409) (not b!73439) (not b!73400) (not b!73194) (not b_lambda!3277) (not d!16951) (not b!73433) (not b!73566) (not b_lambda!3289) (not d!16965) (not b!73435) (not b_lambda!3297) (not b!73309) (not bm!6479) (not d!16813) (not b!73478) (not b!73451) (not b!73352) (not d!16959) (not d!16923) (not b_lambda!3291) (not bm!6434) (not b!73511) (not b!73217) (not b!73292) (not b!73258) (not b!73445) (not b!73354) (not b!73430) (not b!73413) (not d!16957) (not d!16949) (not bm!6487) (not d!16913) (not bm!6470) (not b!73497) (not d!16873) (not d!16927) (not b!73137) (not b!73536) (not b!73126) (not b!73310) (not bm!6451) (not b!73355) (not b!73240) (not b!73134) (not d!16889) (not b!73322) (not b_lambda!3295) (not d!16853) (not b!73568) (not b!73123) (not b!73223) (not b!73527) (not b!73296) (not bm!6446) (not b!73531) (not d!16941) (not d!16841) (not b!73236) (not b!73411) (not b!73156) (not d!16935) (not d!16909) (not b!73546) (not b!73528) (not d!16921) (not b!73245) (not b!73434) (not b!73432) (not d!16943) (not d!16895) (not b!73116) (not d!16811) (not b!73120) (not b!73336) (not b!73140) (not b!73218) (not b!73272) (not b!73547) (not b!73530) (not bm!6464) (not d!16929) (not b!73329) (not b!73492) (not bm!6438) (not d!16893) (not b!73418) (not d!16961) (not d!16785) (not b!73197) (not b!73238) (not d!16931) (not d!16891) (not d!16865) (not d!16859) (not b!73408) (not d!16789) (not b!73489) (not b!73187) (not b!73543) (not d!16817) (not b!73142) (not b!73279) (not d!16963) (not bm!6474) (not b!73484) (not b!73517) (not bm!6490) (not b!73130) (not b!73215) (not d!16829) (not b!73410) (not b!73289) (not b!73203) (not b!73201) (not b!73448) (not b!73231) (not bm!6440) (not b!73291) (not d!16883) (not d!16831) (not d!16791) (not b!73318) (not d!16897) (not b!73349) (not bm!6482) (not bm!6480) (not b!73189) (not b!73226) (not b!73427) (not d!16899) (not b!73132) (not bm!6443) (not b!73538) (not d!16903) (not b!73575) tp_is_empty!2473 (not d!16837) (not d!16821) (not b!73324) (not b!73293) (not b!73421) (not d!16797) (not d!16901) (not b!73540) (not d!16885) (not d!16825) (not b!73243) (not d!16887) (not bm!6469) (not b_lambda!3273) (not mapNonEmpty!3183) (not b!73351) (not d!16947) (not b!73570) (not b!73544) (not b!73163) (not d!16807) (not bm!6483) (not b!73222) (not b!73184) (not d!16803) (not b!73319) (not b!73307) (not b!73200) (not b!73228) (not b!73561) (not b!73204) (not b!73202) (not b!73149) (not b!73286) (not d!16955) (not b!73242) (not d!16871) (not d!16795) (not b!73151) (not b!73133) (not b!73315) (not d!16819) (not bm!6467) (not b!73576) (not b!73508) (not d!16945) (not b!73263) (not b!73284) (not b!73124) (not b!73162) (not b!73119) (not d!16869) (not b!73348) (not b_next!2113) (not b!73574) (not b!73199) b_and!4503 (not b!73239) (not b!73196) (not b_next!2115) (not b!73198) (not bm!6465) (not b!73267) (not d!16863) (not d!16879) (not b!73415) (not b!73353) (not d!16977) (not b!73317) (not bm!6426) (not b!73270) (not b!73487) (not b!73572))
(check-sat b_and!4501 b_and!4503 (not b_next!2113) (not b_next!2115))
(get-model)

(declare-fun d!16987 () Bool)

(assert (=> d!16987 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3153 () Bool)

(assert (= bs!3153 d!16987))

(assert (=> bs!3153 m!71405))

(declare-fun m!71987 () Bool)

(assert (=> bs!3153 m!71987))

(assert (=> b!73279 d!16987))

(declare-fun b!73581 () Bool)

(declare-fun e!48107 () Option!137)

(assert (=> b!73581 (= e!48107 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32663)))))))

(declare-fun b!73584 () Bool)

(declare-fun e!48108 () Option!137)

(assert (=> b!73584 (= e!48108 None!135)))

(declare-fun b!73583 () Bool)

(assert (=> b!73583 (= e!48108 (getValueByKey!131 (t!5031 (toList!717 lt!32663)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!16989 () Bool)

(declare-fun c!10961 () Bool)

(assert (=> d!16989 (= c!10961 (and ((_ is Cons!1479) (toList!717 lt!32663)) (= (_1!1071 (h!2066 (toList!717 lt!32663))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16989 (= (getValueByKey!131 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48107)))

(declare-fun b!73582 () Bool)

(assert (=> b!73582 (= e!48107 e!48108)))

(declare-fun c!10962 () Bool)

(assert (=> b!73582 (= c!10962 (and ((_ is Cons!1479) (toList!717 lt!32663)) (not (= (_1!1071 (h!2066 (toList!717 lt!32663))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!16989 c!10961) b!73581))

(assert (= (and d!16989 (not c!10961)) b!73582))

(assert (= (and b!73582 c!10962) b!73583))

(assert (= (and b!73582 (not c!10962)) b!73584))

(assert (=> b!73583 m!70941))

(declare-fun m!71989 () Bool)

(assert (=> b!73583 m!71989))

(assert (=> b!73279 d!16989))

(declare-fun b!73585 () Bool)

(declare-fun e!48109 () Option!137)

(assert (=> b!73585 (= e!48109 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32708)))))))

(declare-fun b!73588 () Bool)

(declare-fun e!48110 () Option!137)

(assert (=> b!73588 (= e!48110 None!135)))

(declare-fun b!73587 () Bool)

(assert (=> b!73587 (= e!48110 (getValueByKey!131 (t!5031 (toList!717 lt!32708)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun c!10963 () Bool)

(declare-fun d!16991 () Bool)

(assert (=> d!16991 (= c!10963 (and ((_ is Cons!1479) (toList!717 lt!32708)) (= (_1!1071 (h!2066 (toList!717 lt!32708))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!16991 (= (getValueByKey!131 (toList!717 lt!32708) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) e!48109)))

(declare-fun b!73586 () Bool)

(assert (=> b!73586 (= e!48109 e!48110)))

(declare-fun c!10964 () Bool)

(assert (=> b!73586 (= c!10964 (and ((_ is Cons!1479) (toList!717 lt!32708)) (not (= (_1!1071 (h!2066 (toList!717 lt!32708))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (= (and d!16991 c!10963) b!73585))

(assert (= (and d!16991 (not c!10963)) b!73586))

(assert (= (and b!73586 c!10964) b!73587))

(assert (= (and b!73586 (not c!10964)) b!73588))

(declare-fun m!71991 () Bool)

(assert (=> b!73587 m!71991))

(assert (=> b!73197 d!16991))

(declare-fun d!16993 () Bool)

(declare-fun c!10967 () Bool)

(assert (=> d!16993 (= c!10967 ((_ is Nil!1480) (toList!717 lt!32643)))))

(declare-fun e!48113 () (InoxSet tuple2!2120))

(assert (=> d!16993 (= (content!77 (toList!717 lt!32643)) e!48113)))

(declare-fun b!73593 () Bool)

(assert (=> b!73593 (= e!48113 ((as const (Array tuple2!2120 Bool)) false))))

(declare-fun b!73594 () Bool)

(assert (=> b!73594 (= e!48113 ((_ map or) (store ((as const (Array tuple2!2120 Bool)) false) (h!2066 (toList!717 lt!32643)) true) (content!77 (t!5031 (toList!717 lt!32643)))))))

(assert (= (and d!16993 c!10967) b!73593))

(assert (= (and d!16993 (not c!10967)) b!73594))

(declare-fun m!71993 () Bool)

(assert (=> b!73594 m!71993))

(declare-fun m!71995 () Bool)

(assert (=> b!73594 m!71995))

(assert (=> d!16979 d!16993))

(declare-fun b!73595 () Bool)

(declare-fun e!48122 () Bool)

(declare-fun e!48121 () Bool)

(assert (=> b!73595 (= e!48122 e!48121)))

(declare-fun res!39004 () Bool)

(declare-fun call!6496 () Bool)

(assert (=> b!73595 (= res!39004 call!6496)))

(assert (=> b!73595 (=> (not res!39004) (not e!48121))))

(declare-fun b!73596 () Bool)

(declare-fun e!48119 () ListLongMap!1403)

(declare-fun call!6495 () ListLongMap!1403)

(assert (=> b!73596 (= e!48119 call!6495)))

(declare-fun b!73597 () Bool)

(declare-fun e!48114 () Bool)

(assert (=> b!73597 (= e!48114 e!48122)))

(declare-fun c!10969 () Bool)

(assert (=> b!73597 (= c!10969 (not (= (bvand lt!32559 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73598 () Bool)

(declare-fun e!48120 () Bool)

(declare-fun call!6498 () Bool)

(assert (=> b!73598 (= e!48120 (not call!6498))))

(declare-fun b!73599 () Bool)

(declare-fun e!48125 () ListLongMap!1403)

(declare-fun call!6500 () ListLongMap!1403)

(assert (=> b!73599 (= e!48125 call!6500)))

(declare-fun b!73601 () Bool)

(declare-fun e!48116 () Bool)

(assert (=> b!73601 (= e!48120 e!48116)))

(declare-fun res!39007 () Bool)

(assert (=> b!73601 (= res!39007 call!6498)))

(assert (=> b!73601 (=> (not res!39007) (not e!48116))))

(declare-fun bm!6491 () Bool)

(declare-fun call!6497 () ListLongMap!1403)

(declare-fun call!6499 () ListLongMap!1403)

(assert (=> bm!6491 (= call!6497 call!6499)))

(declare-fun b!73602 () Bool)

(declare-fun e!48124 () ListLongMap!1403)

(assert (=> b!73602 (= e!48124 e!48119)))

(declare-fun c!10972 () Bool)

(assert (=> b!73602 (= c!10972 (and (not (= (bvand lt!32559 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!32559 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6492 () Bool)

(declare-fun lt!33033 () ListLongMap!1403)

(assert (=> bm!6492 (= call!6496 (contains!719 lt!33033 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!10973 () Bool)

(declare-fun bm!6493 () Bool)

(declare-fun call!6494 () ListLongMap!1403)

(assert (=> bm!6493 (= call!6494 (+!93 (ite c!10973 call!6499 (ite c!10972 call!6497 call!6500)) (ite (or c!10973 c!10972) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!73603 () Bool)

(declare-fun e!48126 () Bool)

(assert (=> b!73603 (= e!48126 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73604 () Bool)

(declare-fun res!39005 () Bool)

(assert (=> b!73604 (=> (not res!39005) (not e!48114))))

(assert (=> b!73604 (= res!39005 e!48120)))

(declare-fun c!10970 () Bool)

(assert (=> b!73604 (= c!10970 (not (= (bvand lt!32559 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6494 () Bool)

(assert (=> bm!6494 (= call!6500 call!6497)))

(declare-fun b!73605 () Bool)

(declare-fun e!48117 () Bool)

(assert (=> b!73605 (= e!48117 (= (apply!75 lt!33033 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73605 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (_values!2195 newMap!16))))))

(assert (=> b!73605 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73606 () Bool)

(assert (=> b!73606 (= e!48121 (= (apply!75 lt!33033 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun bm!6495 () Bool)

(assert (=> bm!6495 (= call!6498 (contains!719 lt!33033 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73607 () Bool)

(declare-fun e!48123 () Bool)

(assert (=> b!73607 (= e!48123 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73600 () Bool)

(declare-fun e!48115 () Unit!2066)

(declare-fun lt!33040 () Unit!2066)

(assert (=> b!73600 (= e!48115 lt!33040)))

(declare-fun lt!33052 () ListLongMap!1403)

(assert (=> b!73600 (= lt!33052 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32559 lt!32380 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33042 () (_ BitVec 64))

(assert (=> b!73600 (= lt!33042 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33045 () (_ BitVec 64))

(assert (=> b!73600 (= lt!33045 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33051 () Unit!2066)

(assert (=> b!73600 (= lt!33051 (addStillContains!51 lt!33052 lt!33042 lt!32380 lt!33045))))

(assert (=> b!73600 (contains!719 (+!93 lt!33052 (tuple2!2121 lt!33042 lt!32380)) lt!33045)))

(declare-fun lt!33046 () Unit!2066)

(assert (=> b!73600 (= lt!33046 lt!33051)))

(declare-fun lt!33039 () ListLongMap!1403)

(assert (=> b!73600 (= lt!33039 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32559 lt!32380 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33049 () (_ BitVec 64))

(assert (=> b!73600 (= lt!33049 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33048 () (_ BitVec 64))

(assert (=> b!73600 (= lt!33048 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33041 () Unit!2066)

(assert (=> b!73600 (= lt!33041 (addApplyDifferent!51 lt!33039 lt!33049 (minValue!2114 newMap!16) lt!33048))))

(assert (=> b!73600 (= (apply!75 (+!93 lt!33039 (tuple2!2121 lt!33049 (minValue!2114 newMap!16))) lt!33048) (apply!75 lt!33039 lt!33048))))

(declare-fun lt!33053 () Unit!2066)

(assert (=> b!73600 (= lt!33053 lt!33041)))

(declare-fun lt!33050 () ListLongMap!1403)

(assert (=> b!73600 (= lt!33050 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32559 lt!32380 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33054 () (_ BitVec 64))

(assert (=> b!73600 (= lt!33054 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33037 () (_ BitVec 64))

(assert (=> b!73600 (= lt!33037 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33035 () Unit!2066)

(assert (=> b!73600 (= lt!33035 (addApplyDifferent!51 lt!33050 lt!33054 lt!32380 lt!33037))))

(assert (=> b!73600 (= (apply!75 (+!93 lt!33050 (tuple2!2121 lt!33054 lt!32380)) lt!33037) (apply!75 lt!33050 lt!33037))))

(declare-fun lt!33043 () Unit!2066)

(assert (=> b!73600 (= lt!33043 lt!33035)))

(declare-fun lt!33036 () ListLongMap!1403)

(assert (=> b!73600 (= lt!33036 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32559 lt!32380 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33038 () (_ BitVec 64))

(assert (=> b!73600 (= lt!33038 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33047 () (_ BitVec 64))

(assert (=> b!73600 (= lt!33047 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73600 (= lt!33040 (addApplyDifferent!51 lt!33036 lt!33038 (minValue!2114 newMap!16) lt!33047))))

(assert (=> b!73600 (= (apply!75 (+!93 lt!33036 (tuple2!2121 lt!33038 (minValue!2114 newMap!16))) lt!33047) (apply!75 lt!33036 lt!33047))))

(declare-fun d!16995 () Bool)

(assert (=> d!16995 e!48114))

(declare-fun res!39003 () Bool)

(assert (=> d!16995 (=> (not res!39003) (not e!48114))))

(assert (=> d!16995 (= res!39003 (or (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))))

(declare-fun lt!33044 () ListLongMap!1403)

(assert (=> d!16995 (= lt!33033 lt!33044)))

(declare-fun lt!33034 () Unit!2066)

(assert (=> d!16995 (= lt!33034 e!48115)))

(declare-fun c!10968 () Bool)

(assert (=> d!16995 (= c!10968 e!48123)))

(declare-fun res!39006 () Bool)

(assert (=> d!16995 (=> (not res!39006) (not e!48123))))

(assert (=> d!16995 (= res!39006 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!16995 (= lt!33044 e!48124)))

(assert (=> d!16995 (= c!10973 (and (not (= (bvand lt!32559 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!32559 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!16995 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!16995 (= (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32559 lt!32380 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33033)))

(declare-fun b!73608 () Bool)

(assert (=> b!73608 (= e!48124 (+!93 call!6494 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!73609 () Bool)

(declare-fun c!10971 () Bool)

(assert (=> b!73609 (= c!10971 (and (not (= (bvand lt!32559 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!32559 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73609 (= e!48119 e!48125)))

(declare-fun b!73610 () Bool)

(assert (=> b!73610 (= e!48125 call!6495)))

(declare-fun b!73611 () Bool)

(assert (=> b!73611 (= e!48122 (not call!6496))))

(declare-fun b!73612 () Bool)

(declare-fun e!48118 () Bool)

(assert (=> b!73612 (= e!48118 e!48117)))

(declare-fun res!39008 () Bool)

(assert (=> b!73612 (=> (not res!39008) (not e!48117))))

(assert (=> b!73612 (= res!39008 (contains!719 lt!33033 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73612 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73613 () Bool)

(assert (=> b!73613 (= e!48116 (= (apply!75 lt!33033 #b0000000000000000000000000000000000000000000000000000000000000000) lt!32380))))

(declare-fun b!73614 () Bool)

(declare-fun Unit!2101 () Unit!2066)

(assert (=> b!73614 (= e!48115 Unit!2101)))

(declare-fun bm!6496 () Bool)

(assert (=> bm!6496 (= call!6495 call!6494)))

(declare-fun b!73615 () Bool)

(declare-fun res!39002 () Bool)

(assert (=> b!73615 (=> (not res!39002) (not e!48114))))

(assert (=> b!73615 (= res!39002 e!48118)))

(declare-fun res!39010 () Bool)

(assert (=> b!73615 (=> res!39010 e!48118)))

(assert (=> b!73615 (= res!39010 (not e!48126))))

(declare-fun res!39009 () Bool)

(assert (=> b!73615 (=> (not res!39009) (not e!48126))))

(assert (=> b!73615 (= res!39009 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun bm!6497 () Bool)

(assert (=> bm!6497 (= call!6499 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32559 lt!32380 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (= (and d!16995 c!10973) b!73608))

(assert (= (and d!16995 (not c!10973)) b!73602))

(assert (= (and b!73602 c!10972) b!73596))

(assert (= (and b!73602 (not c!10972)) b!73609))

(assert (= (and b!73609 c!10971) b!73610))

(assert (= (and b!73609 (not c!10971)) b!73599))

(assert (= (or b!73610 b!73599) bm!6494))

(assert (= (or b!73596 bm!6494) bm!6491))

(assert (= (or b!73596 b!73610) bm!6496))

(assert (= (or b!73608 bm!6491) bm!6497))

(assert (= (or b!73608 bm!6496) bm!6493))

(assert (= (and d!16995 res!39006) b!73607))

(assert (= (and d!16995 c!10968) b!73600))

(assert (= (and d!16995 (not c!10968)) b!73614))

(assert (= (and d!16995 res!39003) b!73615))

(assert (= (and b!73615 res!39009) b!73603))

(assert (= (and b!73615 (not res!39010)) b!73612))

(assert (= (and b!73612 res!39008) b!73605))

(assert (= (and b!73615 res!39002) b!73604))

(assert (= (and b!73604 c!10970) b!73601))

(assert (= (and b!73604 (not c!10970)) b!73598))

(assert (= (and b!73601 res!39007) b!73613))

(assert (= (or b!73601 b!73598) bm!6495))

(assert (= (and b!73604 res!39005) b!73597))

(assert (= (and b!73597 c!10969) b!73595))

(assert (= (and b!73597 (not c!10969)) b!73611))

(assert (= (and b!73595 res!39004) b!73606))

(assert (= (or b!73595 b!73611) bm!6492))

(declare-fun b_lambda!3299 () Bool)

(assert (=> (not b_lambda!3299) (not b!73605)))

(assert (=> b!73605 t!5045))

(declare-fun b_and!4505 () Bool)

(assert (= b_and!4501 (and (=> t!5045 result!2689) b_and!4505)))

(assert (=> b!73605 t!5047))

(declare-fun b_and!4507 () Bool)

(assert (= b_and!4503 (and (=> t!5047 result!2691) b_and!4507)))

(declare-fun m!71997 () Bool)

(assert (=> bm!6492 m!71997))

(declare-fun m!71999 () Bool)

(assert (=> b!73600 m!71999))

(declare-fun m!72001 () Bool)

(assert (=> b!73600 m!72001))

(declare-fun m!72003 () Bool)

(assert (=> b!73600 m!72003))

(declare-fun m!72005 () Bool)

(assert (=> b!73600 m!72005))

(declare-fun m!72007 () Bool)

(assert (=> b!73600 m!72007))

(declare-fun m!72009 () Bool)

(assert (=> b!73600 m!72009))

(declare-fun m!72011 () Bool)

(assert (=> b!73600 m!72011))

(declare-fun m!72013 () Bool)

(assert (=> b!73600 m!72013))

(assert (=> b!73600 m!72007))

(declare-fun m!72015 () Bool)

(assert (=> b!73600 m!72015))

(declare-fun m!72017 () Bool)

(assert (=> b!73600 m!72017))

(declare-fun m!72019 () Bool)

(assert (=> b!73600 m!72019))

(declare-fun m!72021 () Bool)

(assert (=> b!73600 m!72021))

(assert (=> b!73600 m!72013))

(declare-fun m!72023 () Bool)

(assert (=> b!73600 m!72023))

(assert (=> b!73600 m!71999))

(assert (=> b!73600 m!71361))

(declare-fun m!72025 () Bool)

(assert (=> b!73600 m!72025))

(declare-fun m!72027 () Bool)

(assert (=> b!73600 m!72027))

(assert (=> b!73600 m!72003))

(declare-fun m!72029 () Bool)

(assert (=> b!73600 m!72029))

(declare-fun m!72031 () Bool)

(assert (=> b!73613 m!72031))

(declare-fun m!72033 () Bool)

(assert (=> b!73606 m!72033))

(assert (=> b!73603 m!71361))

(assert (=> b!73603 m!71361))

(assert (=> b!73603 m!71373))

(declare-fun m!72035 () Bool)

(assert (=> bm!6493 m!72035))

(assert (=> b!73607 m!71361))

(assert (=> b!73607 m!71361))

(assert (=> b!73607 m!71373))

(assert (=> d!16995 m!71219))

(declare-fun m!72037 () Bool)

(assert (=> b!73608 m!72037))

(declare-fun m!72039 () Bool)

(assert (=> bm!6495 m!72039))

(assert (=> bm!6497 m!72021))

(assert (=> b!73612 m!71361))

(assert (=> b!73612 m!71361))

(declare-fun m!72041 () Bool)

(assert (=> b!73612 m!72041))

(assert (=> b!73605 m!71361))

(assert (=> b!73605 m!71383))

(assert (=> b!73605 m!71361))

(declare-fun m!72043 () Bool)

(assert (=> b!73605 m!72043))

(assert (=> b!73605 m!71383))

(assert (=> b!73605 m!71387))

(assert (=> b!73605 m!71389))

(assert (=> b!73605 m!71387))

(assert (=> d!16797 d!16995))

(assert (=> d!16797 d!16829))

(declare-fun d!16997 () Bool)

(assert (=> d!16997 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32559 lt!32380 (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (=> d!16997 true))

(declare-fun _$7!62 () Unit!2066)

(assert (=> d!16997 (= (choose!419 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) lt!32559 (zeroValue!2114 newMap!16) lt!32380 (minValue!2114 newMap!16) (defaultEntry!2212 newMap!16)) _$7!62)))

(declare-fun bs!3154 () Bool)

(assert (= bs!3154 d!16997))

(assert (=> bs!3154 m!70991))

(assert (=> bs!3154 m!70991))

(assert (=> bs!3154 m!71221))

(assert (=> bs!3154 m!71223))

(assert (=> d!16797 d!16997))

(declare-fun d!16999 () Bool)

(declare-fun e!48127 () Bool)

(assert (=> d!16999 e!48127))

(declare-fun res!39012 () Bool)

(assert (=> d!16999 (=> (not res!39012) (not e!48127))))

(declare-fun lt!33057 () ListLongMap!1403)

(assert (=> d!16999 (= res!39012 (contains!719 lt!33057 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380))))))

(declare-fun lt!33058 () List!1483)

(assert (=> d!16999 (= lt!33057 (ListLongMap!1404 lt!33058))))

(declare-fun lt!33056 () Unit!2066)

(declare-fun lt!33055 () Unit!2066)

(assert (=> d!16999 (= lt!33056 lt!33055)))

(assert (=> d!16999 (= (getValueByKey!131 lt!33058 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380))) (Some!136 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380))))))

(assert (=> d!16999 (= lt!33055 (lemmaContainsTupThenGetReturnValue!51 lt!33058 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380))))))

(assert (=> d!16999 (= lt!33058 (insertStrictlySorted!54 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380))))))

(assert (=> d!16999 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380)) lt!33057)))

(declare-fun b!73616 () Bool)

(declare-fun res!39011 () Bool)

(assert (=> b!73616 (=> (not res!39011) (not e!48127))))

(assert (=> b!73616 (= res!39011 (= (getValueByKey!131 (toList!717 lt!33057) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380))) (Some!136 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380)))))))

(declare-fun b!73617 () Bool)

(assert (=> b!73617 (= e!48127 (contains!722 (toList!717 lt!33057) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380)))))

(assert (= (and d!16999 res!39012) b!73616))

(assert (= (and b!73616 res!39011) b!73617))

(declare-fun m!72045 () Bool)

(assert (=> d!16999 m!72045))

(declare-fun m!72047 () Bool)

(assert (=> d!16999 m!72047))

(declare-fun m!72049 () Bool)

(assert (=> d!16999 m!72049))

(declare-fun m!72051 () Bool)

(assert (=> d!16999 m!72051))

(declare-fun m!72053 () Bool)

(assert (=> b!73616 m!72053))

(declare-fun m!72055 () Bool)

(assert (=> b!73617 m!72055))

(assert (=> d!16797 d!16999))

(declare-fun d!17001 () Bool)

(assert (=> d!17001 (= (validMask!0 (mask!6178 newMap!16)) (and (or (= (mask!6178 newMap!16) #b00000000000000000000000000000111) (= (mask!6178 newMap!16) #b00000000000000000000000000001111) (= (mask!6178 newMap!16) #b00000000000000000000000000011111) (= (mask!6178 newMap!16) #b00000000000000000000000000111111) (= (mask!6178 newMap!16) #b00000000000000000000000001111111) (= (mask!6178 newMap!16) #b00000000000000000000000011111111) (= (mask!6178 newMap!16) #b00000000000000000000000111111111) (= (mask!6178 newMap!16) #b00000000000000000000001111111111) (= (mask!6178 newMap!16) #b00000000000000000000011111111111) (= (mask!6178 newMap!16) #b00000000000000000000111111111111) (= (mask!6178 newMap!16) #b00000000000000000001111111111111) (= (mask!6178 newMap!16) #b00000000000000000011111111111111) (= (mask!6178 newMap!16) #b00000000000000000111111111111111) (= (mask!6178 newMap!16) #b00000000000000001111111111111111) (= (mask!6178 newMap!16) #b00000000000000011111111111111111) (= (mask!6178 newMap!16) #b00000000000000111111111111111111) (= (mask!6178 newMap!16) #b00000000000001111111111111111111) (= (mask!6178 newMap!16) #b00000000000011111111111111111111) (= (mask!6178 newMap!16) #b00000000000111111111111111111111) (= (mask!6178 newMap!16) #b00000000001111111111111111111111) (= (mask!6178 newMap!16) #b00000000011111111111111111111111) (= (mask!6178 newMap!16) #b00000000111111111111111111111111) (= (mask!6178 newMap!16) #b00000001111111111111111111111111) (= (mask!6178 newMap!16) #b00000011111111111111111111111111) (= (mask!6178 newMap!16) #b00000111111111111111111111111111) (= (mask!6178 newMap!16) #b00001111111111111111111111111111) (= (mask!6178 newMap!16) #b00011111111111111111111111111111) (= (mask!6178 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6178 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!16797 d!17001))

(assert (=> d!16903 d!16897))

(assert (=> d!16903 d!16901))

(declare-fun d!17003 () Bool)

(assert (=> d!17003 (not (contains!719 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)) lt!32660))))

(assert (=> d!17003 true))

(declare-fun _$36!301 () Unit!2066)

(assert (=> d!17003 (= (choose!423 lt!32664 lt!32659 lt!32662 lt!32660) _$36!301)))

(declare-fun bs!3155 () Bool)

(assert (= bs!3155 d!17003))

(assert (=> bs!3155 m!71119))

(assert (=> bs!3155 m!71119))

(assert (=> bs!3155 m!71125))

(assert (=> d!16903 d!17003))

(declare-fun d!17005 () Bool)

(declare-fun e!48129 () Bool)

(assert (=> d!17005 e!48129))

(declare-fun res!39013 () Bool)

(assert (=> d!17005 (=> res!39013 e!48129)))

(declare-fun lt!33062 () Bool)

(assert (=> d!17005 (= res!39013 (not lt!33062))))

(declare-fun lt!33060 () Bool)

(assert (=> d!17005 (= lt!33062 lt!33060)))

(declare-fun lt!33059 () Unit!2066)

(declare-fun e!48128 () Unit!2066)

(assert (=> d!17005 (= lt!33059 e!48128)))

(declare-fun c!10974 () Bool)

(assert (=> d!17005 (= c!10974 lt!33060)))

(assert (=> d!17005 (= lt!33060 (containsKey!135 (toList!717 lt!32664) lt!32660))))

(assert (=> d!17005 (= (contains!719 lt!32664 lt!32660) lt!33062)))

(declare-fun b!73619 () Bool)

(declare-fun lt!33061 () Unit!2066)

(assert (=> b!73619 (= e!48128 lt!33061)))

(assert (=> b!73619 (= lt!33061 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32664) lt!32660))))

(assert (=> b!73619 (isDefined!85 (getValueByKey!131 (toList!717 lt!32664) lt!32660))))

(declare-fun b!73620 () Bool)

(declare-fun Unit!2102 () Unit!2066)

(assert (=> b!73620 (= e!48128 Unit!2102)))

(declare-fun b!73621 () Bool)

(assert (=> b!73621 (= e!48129 (isDefined!85 (getValueByKey!131 (toList!717 lt!32664) lt!32660)))))

(assert (= (and d!17005 c!10974) b!73619))

(assert (= (and d!17005 (not c!10974)) b!73620))

(assert (= (and d!17005 (not res!39013)) b!73621))

(declare-fun m!72057 () Bool)

(assert (=> d!17005 m!72057))

(declare-fun m!72059 () Bool)

(assert (=> b!73619 m!72059))

(declare-fun m!72061 () Bool)

(assert (=> b!73619 m!72061))

(assert (=> b!73619 m!72061))

(declare-fun m!72063 () Bool)

(assert (=> b!73619 m!72063))

(assert (=> b!73621 m!72061))

(assert (=> b!73621 m!72061))

(assert (=> b!73621 m!72063))

(assert (=> d!16903 d!17005))

(declare-fun b!73625 () Bool)

(declare-fun e!48130 () Bool)

(assert (=> b!73625 (= e!48130 (and (bvsge (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!396 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!73622 () Bool)

(declare-fun res!39014 () Bool)

(assert (=> b!73622 (=> (not res!39014) (not e!48130))))

(assert (=> b!73622 (= res!39014 (and (= (size!2086 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000001)) (= (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (size!2086 (_values!2195 (v!2523 (underlying!256 thiss!992))))) (bvsge (_size!396 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!396 (v!2523 (underlying!256 thiss!992))) (bvadd (mask!6178 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!73623 () Bool)

(declare-fun res!39016 () Bool)

(assert (=> b!73623 (=> (not res!39016) (not e!48130))))

(assert (=> b!73623 (= res!39016 (bvsge (size!2091 (v!2523 (underlying!256 thiss!992))) (_size!396 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun d!17007 () Bool)

(declare-fun res!39017 () Bool)

(assert (=> d!17007 (=> (not res!39017) (not e!48130))))

(assert (=> d!17007 (= res!39017 (validMask!0 (mask!6178 (v!2523 (underlying!256 thiss!992)))))))

(assert (=> d!17007 (= (simpleValid!51 (v!2523 (underlying!256 thiss!992))) e!48130)))

(declare-fun b!73624 () Bool)

(declare-fun res!39015 () Bool)

(assert (=> b!73624 (=> (not res!39015) (not e!48130))))

(assert (=> b!73624 (= res!39015 (= (size!2091 (v!2523 (underlying!256 thiss!992))) (bvadd (_size!396 (v!2523 (underlying!256 thiss!992))) (bvsdiv (bvadd (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!17007 res!39017) b!73622))

(assert (= (and b!73622 res!39014) b!73623))

(assert (= (and b!73623 res!39016) b!73624))

(assert (= (and b!73624 res!39015) b!73625))

(declare-fun m!72065 () Bool)

(assert (=> b!73623 m!72065))

(assert (=> d!17007 m!70779))

(assert (=> b!73624 m!72065))

(assert (=> d!16815 d!17007))

(declare-fun d!17009 () Bool)

(assert (=> d!17009 (= (apply!75 lt!32955 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1147 (getValueByKey!131 (toList!717 lt!32955) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3156 () Bool)

(assert (= bs!3156 d!17009))

(declare-fun m!72067 () Bool)

(assert (=> bs!3156 m!72067))

(assert (=> bs!3156 m!72067))

(declare-fun m!72069 () Bool)

(assert (=> bs!3156 m!72069))

(assert (=> b!73497 d!17009))

(declare-fun d!17011 () Bool)

(assert (=> d!17011 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3157 () Bool)

(assert (= bs!3157 d!17011))

(assert (=> bs!3157 m!71395))

(declare-fun m!72071 () Bool)

(assert (=> bs!3157 m!72071))

(assert (=> b!73228 d!17011))

(declare-fun b!73626 () Bool)

(declare-fun e!48131 () Option!137)

(assert (=> b!73626 (= e!48131 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32604)))))))

(declare-fun b!73629 () Bool)

(declare-fun e!48132 () Option!137)

(assert (=> b!73629 (= e!48132 None!135)))

(declare-fun b!73628 () Bool)

(assert (=> b!73628 (= e!48132 (getValueByKey!131 (t!5031 (toList!717 lt!32604)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun d!17013 () Bool)

(declare-fun c!10975 () Bool)

(assert (=> d!17013 (= c!10975 (and ((_ is Cons!1479) (toList!717 lt!32604)) (= (_1!1071 (h!2066 (toList!717 lt!32604))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17013 (= (getValueByKey!131 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48131)))

(declare-fun b!73627 () Bool)

(assert (=> b!73627 (= e!48131 e!48132)))

(declare-fun c!10976 () Bool)

(assert (=> b!73627 (= c!10976 (and ((_ is Cons!1479) (toList!717 lt!32604)) (not (= (_1!1071 (h!2066 (toList!717 lt!32604))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!17013 c!10975) b!73626))

(assert (= (and d!17013 (not c!10975)) b!73627))

(assert (= (and b!73627 c!10976) b!73628))

(assert (= (and b!73627 (not c!10976)) b!73629))

(assert (=> b!73628 m!70941))

(declare-fun m!72073 () Bool)

(assert (=> b!73628 m!72073))

(assert (=> b!73228 d!17013))

(declare-fun d!17015 () Bool)

(declare-fun lt!33063 () Bool)

(assert (=> d!17015 (= lt!33063 (select (content!77 (toList!717 lt!32988)) (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun e!48134 () Bool)

(assert (=> d!17015 (= lt!33063 e!48134)))

(declare-fun res!39018 () Bool)

(assert (=> d!17015 (=> (not res!39018) (not e!48134))))

(assert (=> d!17015 (= res!39018 ((_ is Cons!1479) (toList!717 lt!32988)))))

(assert (=> d!17015 (= (contains!722 (toList!717 lt!32988) (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!33063)))

(declare-fun b!73630 () Bool)

(declare-fun e!48133 () Bool)

(assert (=> b!73630 (= e!48134 e!48133)))

(declare-fun res!39019 () Bool)

(assert (=> b!73630 (=> res!39019 e!48133)))

(assert (=> b!73630 (= res!39019 (= (h!2066 (toList!717 lt!32988)) (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73631 () Bool)

(assert (=> b!73631 (= e!48133 (contains!722 (t!5031 (toList!717 lt!32988)) (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!17015 res!39018) b!73630))

(assert (= (and b!73630 (not res!39019)) b!73631))

(declare-fun m!72075 () Bool)

(assert (=> d!17015 m!72075))

(declare-fun m!72077 () Bool)

(assert (=> d!17015 m!72077))

(declare-fun m!72079 () Bool)

(assert (=> b!73631 m!72079))

(assert (=> b!73531 d!17015))

(declare-fun d!17017 () Bool)

(declare-fun e!48136 () Bool)

(assert (=> d!17017 e!48136))

(declare-fun res!39020 () Bool)

(assert (=> d!17017 (=> res!39020 e!48136)))

(declare-fun lt!33067 () Bool)

(assert (=> d!17017 (= res!39020 (not lt!33067))))

(declare-fun lt!33065 () Bool)

(assert (=> d!17017 (= lt!33067 lt!33065)))

(declare-fun lt!33064 () Unit!2066)

(declare-fun e!48135 () Unit!2066)

(assert (=> d!17017 (= lt!33064 e!48135)))

(declare-fun c!10977 () Bool)

(assert (=> d!17017 (= c!10977 lt!33065)))

(assert (=> d!17017 (= lt!33065 (containsKey!135 (toList!717 lt!32919) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17017 (= (contains!719 lt!32919 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) lt!33067)))

(declare-fun b!73632 () Bool)

(declare-fun lt!33066 () Unit!2066)

(assert (=> b!73632 (= e!48135 lt!33066)))

(assert (=> b!73632 (= lt!33066 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32919) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73632 (isDefined!85 (getValueByKey!131 (toList!717 lt!32919) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73633 () Bool)

(declare-fun Unit!2103 () Unit!2066)

(assert (=> b!73633 (= e!48135 Unit!2103)))

(declare-fun b!73634 () Bool)

(assert (=> b!73634 (= e!48136 (isDefined!85 (getValueByKey!131 (toList!717 lt!32919) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17017 c!10977) b!73632))

(assert (= (and d!17017 (not c!10977)) b!73633))

(assert (= (and d!17017 (not res!39020)) b!73634))

(assert (=> d!17017 m!71361))

(declare-fun m!72081 () Bool)

(assert (=> d!17017 m!72081))

(assert (=> b!73632 m!71361))

(declare-fun m!72083 () Bool)

(assert (=> b!73632 m!72083))

(assert (=> b!73632 m!71361))

(declare-fun m!72085 () Bool)

(assert (=> b!73632 m!72085))

(assert (=> b!73632 m!72085))

(declare-fun m!72087 () Bool)

(assert (=> b!73632 m!72087))

(assert (=> b!73634 m!71361))

(assert (=> b!73634 m!72085))

(assert (=> b!73634 m!72085))

(assert (=> b!73634 m!72087))

(assert (=> b!73439 d!17017))

(declare-fun d!17019 () Bool)

(declare-fun res!39025 () Bool)

(declare-fun e!48141 () Bool)

(assert (=> d!17019 (=> res!39025 e!48141)))

(assert (=> d!17019 (= res!39025 (or ((_ is Nil!1480) lt!32767) ((_ is Nil!1480) (t!5031 lt!32767))))))

(assert (=> d!17019 (= (isStrictlySorted!287 lt!32767) e!48141)))

(declare-fun b!73639 () Bool)

(declare-fun e!48142 () Bool)

(assert (=> b!73639 (= e!48141 e!48142)))

(declare-fun res!39026 () Bool)

(assert (=> b!73639 (=> (not res!39026) (not e!48142))))

(assert (=> b!73639 (= res!39026 (bvslt (_1!1071 (h!2066 lt!32767)) (_1!1071 (h!2066 (t!5031 lt!32767)))))))

(declare-fun b!73640 () Bool)

(assert (=> b!73640 (= e!48142 (isStrictlySorted!287 (t!5031 lt!32767)))))

(assert (= (and d!17019 (not res!39025)) b!73639))

(assert (= (and b!73639 res!39026) b!73640))

(declare-fun m!72089 () Bool)

(assert (=> b!73640 m!72089))

(assert (=> d!16855 d!17019))

(declare-fun d!17021 () Bool)

(declare-fun res!39027 () Bool)

(declare-fun e!48143 () Bool)

(assert (=> d!17021 (=> res!39027 e!48143)))

(assert (=> d!17021 (= res!39027 (or ((_ is Nil!1480) (toList!717 lt!32377)) ((_ is Nil!1480) (t!5031 (toList!717 lt!32377)))))))

(assert (=> d!17021 (= (isStrictlySorted!287 (toList!717 lt!32377)) e!48143)))

(declare-fun b!73641 () Bool)

(declare-fun e!48144 () Bool)

(assert (=> b!73641 (= e!48143 e!48144)))

(declare-fun res!39028 () Bool)

(assert (=> b!73641 (=> (not res!39028) (not e!48144))))

(assert (=> b!73641 (= res!39028 (bvslt (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 (h!2066 (t!5031 (toList!717 lt!32377))))))))

(declare-fun b!73642 () Bool)

(assert (=> b!73642 (= e!48144 (isStrictlySorted!287 (t!5031 (toList!717 lt!32377))))))

(assert (= (and d!17021 (not res!39027)) b!73641))

(assert (= (and b!73641 res!39028) b!73642))

(declare-fun m!72091 () Bool)

(assert (=> b!73642 m!72091))

(assert (=> d!16855 d!17021))

(declare-fun d!17023 () Bool)

(declare-fun res!39029 () Bool)

(declare-fun e!48145 () Bool)

(assert (=> d!17023 (=> res!39029 e!48145)))

(assert (=> d!17023 (= res!39029 (and ((_ is Cons!1479) (toList!717 lt!32672)) (= (_1!1071 (h!2066 (toList!717 lt!32672))) (_1!1071 lt!32383))))))

(assert (=> d!17023 (= (containsKey!135 (toList!717 lt!32672) (_1!1071 lt!32383)) e!48145)))

(declare-fun b!73643 () Bool)

(declare-fun e!48146 () Bool)

(assert (=> b!73643 (= e!48145 e!48146)))

(declare-fun res!39030 () Bool)

(assert (=> b!73643 (=> (not res!39030) (not e!48146))))

(assert (=> b!73643 (= res!39030 (and (or (not ((_ is Cons!1479) (toList!717 lt!32672))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32672))) (_1!1071 lt!32383))) ((_ is Cons!1479) (toList!717 lt!32672)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32672))) (_1!1071 lt!32383))))))

(declare-fun b!73644 () Bool)

(assert (=> b!73644 (= e!48146 (containsKey!135 (t!5031 (toList!717 lt!32672)) (_1!1071 lt!32383)))))

(assert (= (and d!17023 (not res!39029)) b!73643))

(assert (= (and b!73643 res!39030) b!73644))

(declare-fun m!72093 () Bool)

(assert (=> b!73644 m!72093))

(assert (=> d!16865 d!17023))

(declare-fun d!17025 () Bool)

(declare-fun e!48148 () Bool)

(assert (=> d!17025 e!48148))

(declare-fun res!39031 () Bool)

(assert (=> d!17025 (=> res!39031 e!48148)))

(declare-fun lt!33071 () Bool)

(assert (=> d!17025 (= res!39031 (not lt!33071))))

(declare-fun lt!33069 () Bool)

(assert (=> d!17025 (= lt!33071 lt!33069)))

(declare-fun lt!33068 () Unit!2066)

(declare-fun e!48147 () Unit!2066)

(assert (=> d!17025 (= lt!33068 e!48147)))

(declare-fun c!10978 () Bool)

(assert (=> d!17025 (= c!10978 lt!33069)))

(assert (=> d!17025 (= lt!33069 (containsKey!135 (toList!717 lt!32907) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!17025 (= (contains!719 lt!32907 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33071)))

(declare-fun b!73645 () Bool)

(declare-fun lt!33070 () Unit!2066)

(assert (=> b!73645 (= e!48147 lt!33070)))

(assert (=> b!73645 (= lt!33070 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32907) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> b!73645 (isDefined!85 (getValueByKey!131 (toList!717 lt!32907) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!73646 () Bool)

(declare-fun Unit!2104 () Unit!2066)

(assert (=> b!73646 (= e!48147 Unit!2104)))

(declare-fun b!73647 () Bool)

(assert (=> b!73647 (= e!48148 (isDefined!85 (getValueByKey!131 (toList!717 lt!32907) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (= (and d!17025 c!10978) b!73645))

(assert (= (and d!17025 (not c!10978)) b!73646))

(assert (= (and d!17025 (not res!39031)) b!73647))

(declare-fun m!72095 () Bool)

(assert (=> d!17025 m!72095))

(declare-fun m!72097 () Bool)

(assert (=> b!73645 m!72097))

(assert (=> b!73645 m!71671))

(assert (=> b!73645 m!71671))

(declare-fun m!72099 () Bool)

(assert (=> b!73645 m!72099))

(assert (=> b!73647 m!71671))

(assert (=> b!73647 m!71671))

(assert (=> b!73647 m!72099))

(assert (=> d!16911 d!17025))

(declare-fun b!73648 () Bool)

(declare-fun e!48149 () Option!137)

(assert (=> b!73648 (= e!48149 (Some!136 (_2!1071 (h!2066 lt!32908))))))

(declare-fun b!73651 () Bool)

(declare-fun e!48150 () Option!137)

(assert (=> b!73651 (= e!48150 None!135)))

(declare-fun b!73650 () Bool)

(assert (=> b!73650 (= e!48150 (getValueByKey!131 (t!5031 lt!32908) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun c!10979 () Bool)

(declare-fun d!17027 () Bool)

(assert (=> d!17027 (= c!10979 (and ((_ is Cons!1479) lt!32908) (= (_1!1071 (h!2066 lt!32908)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!17027 (= (getValueByKey!131 lt!32908 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) e!48149)))

(declare-fun b!73649 () Bool)

(assert (=> b!73649 (= e!48149 e!48150)))

(declare-fun c!10980 () Bool)

(assert (=> b!73649 (= c!10980 (and ((_ is Cons!1479) lt!32908) (not (= (_1!1071 (h!2066 lt!32908)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (= (and d!17027 c!10979) b!73648))

(assert (= (and d!17027 (not c!10979)) b!73649))

(assert (= (and b!73649 c!10980) b!73650))

(assert (= (and b!73649 (not c!10980)) b!73651))

(declare-fun m!72101 () Bool)

(assert (=> b!73650 m!72101))

(assert (=> d!16911 d!17027))

(declare-fun d!17029 () Bool)

(assert (=> d!17029 (= (getValueByKey!131 lt!32908 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun lt!33072 () Unit!2066)

(assert (=> d!17029 (= lt!33072 (choose!420 lt!32908 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun e!48151 () Bool)

(assert (=> d!17029 e!48151))

(declare-fun res!39032 () Bool)

(assert (=> d!17029 (=> (not res!39032) (not e!48151))))

(assert (=> d!17029 (= res!39032 (isStrictlySorted!287 lt!32908))))

(assert (=> d!17029 (= (lemmaContainsTupThenGetReturnValue!51 lt!32908 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33072)))

(declare-fun b!73652 () Bool)

(declare-fun res!39033 () Bool)

(assert (=> b!73652 (=> (not res!39033) (not e!48151))))

(assert (=> b!73652 (= res!39033 (containsKey!135 lt!32908 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!73653 () Bool)

(assert (=> b!73653 (= e!48151 (contains!722 lt!32908 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (= (and d!17029 res!39032) b!73652))

(assert (= (and b!73652 res!39033) b!73653))

(assert (=> d!17029 m!71665))

(declare-fun m!72103 () Bool)

(assert (=> d!17029 m!72103))

(declare-fun m!72105 () Bool)

(assert (=> d!17029 m!72105))

(declare-fun m!72107 () Bool)

(assert (=> b!73652 m!72107))

(declare-fun m!72109 () Bool)

(assert (=> b!73653 m!72109))

(assert (=> d!16911 d!17029))

(declare-fun d!17031 () Bool)

(declare-fun e!48154 () Bool)

(assert (=> d!17031 e!48154))

(declare-fun res!39035 () Bool)

(assert (=> d!17031 (=> (not res!39035) (not e!48154))))

(declare-fun lt!33073 () List!1483)

(assert (=> d!17031 (= res!39035 (isStrictlySorted!287 lt!33073))))

(declare-fun e!48156 () List!1483)

(assert (=> d!17031 (= lt!33073 e!48156)))

(declare-fun c!10983 () Bool)

(assert (=> d!17031 (= c!10983 (and ((_ is Cons!1479) (toList!717 call!6388)) (bvslt (_1!1071 (h!2066 (toList!717 call!6388))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!17031 (isStrictlySorted!287 (toList!717 call!6388))))

(assert (=> d!17031 (= (insertStrictlySorted!54 (toList!717 call!6388) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33073)))

(declare-fun b!73654 () Bool)

(declare-fun res!39034 () Bool)

(assert (=> b!73654 (=> (not res!39034) (not e!48154))))

(assert (=> b!73654 (= res!39034 (containsKey!135 lt!33073 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!73655 () Bool)

(declare-fun e!48155 () List!1483)

(declare-fun call!6503 () List!1483)

(assert (=> b!73655 (= e!48155 call!6503)))

(declare-fun bm!6498 () Bool)

(declare-fun call!6501 () List!1483)

(declare-fun call!6502 () List!1483)

(assert (=> bm!6498 (= call!6501 call!6502)))

(declare-fun b!73656 () Bool)

(assert (=> b!73656 (= e!48156 call!6502)))

(declare-fun b!73657 () Bool)

(declare-fun e!48152 () List!1483)

(assert (=> b!73657 (= e!48152 (insertStrictlySorted!54 (t!5031 (toList!717 call!6388)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!73658 () Bool)

(assert (=> b!73658 (= e!48155 call!6503)))

(declare-fun b!73659 () Bool)

(assert (=> b!73659 (= e!48154 (contains!722 lt!33073 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun c!10981 () Bool)

(declare-fun b!73660 () Bool)

(assert (=> b!73660 (= c!10981 (and ((_ is Cons!1479) (toList!717 call!6388)) (bvsgt (_1!1071 (h!2066 (toList!717 call!6388))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun e!48153 () List!1483)

(assert (=> b!73660 (= e!48153 e!48155)))

(declare-fun bm!6499 () Bool)

(assert (=> bm!6499 (= call!6502 ($colon$colon!65 e!48152 (ite c!10983 (h!2066 (toList!717 call!6388)) (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(declare-fun c!10984 () Bool)

(assert (=> bm!6499 (= c!10984 c!10983)))

(declare-fun bm!6500 () Bool)

(assert (=> bm!6500 (= call!6503 call!6501)))

(declare-fun b!73661 () Bool)

(assert (=> b!73661 (= e!48156 e!48153)))

(declare-fun c!10982 () Bool)

(assert (=> b!73661 (= c!10982 (and ((_ is Cons!1479) (toList!717 call!6388)) (= (_1!1071 (h!2066 (toList!717 call!6388))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!73662 () Bool)

(assert (=> b!73662 (= e!48153 call!6501)))

(declare-fun b!73663 () Bool)

(assert (=> b!73663 (= e!48152 (ite c!10982 (t!5031 (toList!717 call!6388)) (ite c!10981 (Cons!1479 (h!2066 (toList!717 call!6388)) (t!5031 (toList!717 call!6388))) Nil!1480)))))

(assert (= (and d!17031 c!10983) b!73656))

(assert (= (and d!17031 (not c!10983)) b!73661))

(assert (= (and b!73661 c!10982) b!73662))

(assert (= (and b!73661 (not c!10982)) b!73660))

(assert (= (and b!73660 c!10981) b!73658))

(assert (= (and b!73660 (not c!10981)) b!73655))

(assert (= (or b!73658 b!73655) bm!6500))

(assert (= (or b!73662 bm!6500) bm!6498))

(assert (= (or b!73656 bm!6498) bm!6499))

(assert (= (and bm!6499 c!10984) b!73657))

(assert (= (and bm!6499 (not c!10984)) b!73663))

(assert (= (and d!17031 res!39035) b!73654))

(assert (= (and b!73654 res!39034) b!73659))

(declare-fun m!72111 () Bool)

(assert (=> bm!6499 m!72111))

(declare-fun m!72113 () Bool)

(assert (=> d!17031 m!72113))

(declare-fun m!72115 () Bool)

(assert (=> d!17031 m!72115))

(declare-fun m!72117 () Bool)

(assert (=> b!73657 m!72117))

(declare-fun m!72119 () Bool)

(assert (=> b!73659 m!72119))

(declare-fun m!72121 () Bool)

(assert (=> b!73654 m!72121))

(assert (=> d!16911 d!17031))

(assert (=> d!16801 d!16745))

(declare-fun d!17033 () Bool)

(declare-fun lt!33074 () Bool)

(assert (=> d!17033 (= lt!33074 (select (content!77 lt!32783) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun e!48158 () Bool)

(assert (=> d!17033 (= lt!33074 e!48158)))

(declare-fun res!39036 () Bool)

(assert (=> d!17033 (=> (not res!39036) (not e!48158))))

(assert (=> d!17033 (= res!39036 ((_ is Cons!1479) lt!32783))))

(assert (=> d!17033 (= (contains!722 lt!32783 (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))) lt!33074)))

(declare-fun b!73664 () Bool)

(declare-fun e!48157 () Bool)

(assert (=> b!73664 (= e!48158 e!48157)))

(declare-fun res!39037 () Bool)

(assert (=> b!73664 (=> res!39037 e!48157)))

(assert (=> b!73664 (= res!39037 (= (h!2066 lt!32783) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun b!73665 () Bool)

(assert (=> b!73665 (= e!48157 (contains!722 (t!5031 lt!32783) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(assert (= (and d!17033 res!39036) b!73664))

(assert (= (and b!73664 (not res!39037)) b!73665))

(declare-fun m!72123 () Bool)

(assert (=> d!17033 m!72123))

(declare-fun m!72125 () Bool)

(assert (=> d!17033 m!72125))

(declare-fun m!72127 () Bool)

(assert (=> b!73665 m!72127))

(assert (=> b!73324 d!17033))

(declare-fun d!17035 () Bool)

(assert (=> d!17035 (= (apply!75 lt!32678 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1147 (getValueByKey!131 (toList!717 lt!32678) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3158 () Bool)

(assert (= bs!3158 d!17035))

(assert (=> bs!3158 m!71169))

(declare-fun m!72129 () Bool)

(assert (=> bs!3158 m!72129))

(assert (=> bs!3158 m!72129))

(declare-fun m!72131 () Bool)

(assert (=> bs!3158 m!72131))

(assert (=> b!73120 d!17035))

(declare-fun d!17037 () Bool)

(declare-fun c!10985 () Bool)

(assert (=> d!17037 (= c!10985 ((_ is ValueCellFull!893) (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!48159 () V!2945)

(assert (=> d!17037 (= (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48159)))

(declare-fun b!73666 () Bool)

(assert (=> b!73666 (= e!48159 (get!1145 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73667 () Bool)

(assert (=> b!73667 (= e!48159 (get!1146 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17037 c!10985) b!73666))

(assert (= (and d!17037 (not c!10985)) b!73667))

(assert (=> b!73666 m!71177))

(assert (=> b!73666 m!70809))

(declare-fun m!72133 () Bool)

(assert (=> b!73666 m!72133))

(assert (=> b!73667 m!71177))

(assert (=> b!73667 m!70809))

(declare-fun m!72135 () Bool)

(assert (=> b!73667 m!72135))

(assert (=> b!73120 d!17037))

(declare-fun d!17039 () Bool)

(assert (=> d!17039 (contains!719 (+!93 lt!32938 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16))) lt!32931)))

(declare-fun lt!33075 () Unit!2066)

(assert (=> d!17039 (= lt!33075 (choose!429 lt!32938 lt!32928 (zeroValue!2114 newMap!16) lt!32931))))

(assert (=> d!17039 (contains!719 lt!32938 lt!32931)))

(assert (=> d!17039 (= (addStillContains!51 lt!32938 lt!32928 (zeroValue!2114 newMap!16) lt!32931) lt!33075)))

(declare-fun bs!3159 () Bool)

(assert (= bs!3159 d!17039))

(assert (=> bs!3159 m!71699))

(assert (=> bs!3159 m!71699))

(assert (=> bs!3159 m!71701))

(declare-fun m!72137 () Bool)

(assert (=> bs!3159 m!72137))

(declare-fun m!72139 () Bool)

(assert (=> bs!3159 m!72139))

(assert (=> b!73427 d!17039))

(declare-fun d!17041 () Bool)

(declare-fun e!48160 () Bool)

(assert (=> d!17041 e!48160))

(declare-fun res!39039 () Bool)

(assert (=> d!17041 (=> (not res!39039) (not e!48160))))

(declare-fun lt!33078 () ListLongMap!1403)

(assert (=> d!17041 (= res!39039 (contains!719 lt!33078 (_1!1071 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(declare-fun lt!33079 () List!1483)

(assert (=> d!17041 (= lt!33078 (ListLongMap!1404 lt!33079))))

(declare-fun lt!33077 () Unit!2066)

(declare-fun lt!33076 () Unit!2066)

(assert (=> d!17041 (= lt!33077 lt!33076)))

(assert (=> d!17041 (= (getValueByKey!131 lt!33079 (_1!1071 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) (Some!136 (_2!1071 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(assert (=> d!17041 (= lt!33076 (lemmaContainsTupThenGetReturnValue!51 lt!33079 (_1!1071 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(assert (=> d!17041 (= lt!33079 (insertStrictlySorted!54 (toList!717 lt!32922) (_1!1071 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(assert (=> d!17041 (= (+!93 lt!32922 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) lt!33078)))

(declare-fun b!73668 () Bool)

(declare-fun res!39038 () Bool)

(assert (=> b!73668 (=> (not res!39038) (not e!48160))))

(assert (=> b!73668 (= res!39038 (= (getValueByKey!131 (toList!717 lt!33078) (_1!1071 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) (Some!136 (_2!1071 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))))

(declare-fun b!73669 () Bool)

(assert (=> b!73669 (= e!48160 (contains!722 (toList!717 lt!33078) (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))

(assert (= (and d!17041 res!39039) b!73668))

(assert (= (and b!73668 res!39038) b!73669))

(declare-fun m!72141 () Bool)

(assert (=> d!17041 m!72141))

(declare-fun m!72143 () Bool)

(assert (=> d!17041 m!72143))

(declare-fun m!72145 () Bool)

(assert (=> d!17041 m!72145))

(declare-fun m!72147 () Bool)

(assert (=> d!17041 m!72147))

(declare-fun m!72149 () Bool)

(assert (=> b!73668 m!72149))

(declare-fun m!72151 () Bool)

(assert (=> b!73669 m!72151))

(assert (=> b!73427 d!17041))

(declare-fun d!17043 () Bool)

(declare-fun e!48161 () Bool)

(assert (=> d!17043 e!48161))

(declare-fun res!39041 () Bool)

(assert (=> d!17043 (=> (not res!39041) (not e!48161))))

(declare-fun lt!33082 () ListLongMap!1403)

(assert (=> d!17043 (= res!39041 (contains!719 lt!33082 (_1!1071 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(declare-fun lt!33083 () List!1483)

(assert (=> d!17043 (= lt!33082 (ListLongMap!1404 lt!33083))))

(declare-fun lt!33081 () Unit!2066)

(declare-fun lt!33080 () Unit!2066)

(assert (=> d!17043 (= lt!33081 lt!33080)))

(assert (=> d!17043 (= (getValueByKey!131 lt!33083 (_1!1071 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) (Some!136 (_2!1071 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(assert (=> d!17043 (= lt!33080 (lemmaContainsTupThenGetReturnValue!51 lt!33083 (_1!1071 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(assert (=> d!17043 (= lt!33083 (insertStrictlySorted!54 (toList!717 lt!32925) (_1!1071 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(assert (=> d!17043 (= (+!93 lt!32925 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) lt!33082)))

(declare-fun b!73670 () Bool)

(declare-fun res!39040 () Bool)

(assert (=> b!73670 (=> (not res!39040) (not e!48161))))

(assert (=> b!73670 (= res!39040 (= (getValueByKey!131 (toList!717 lt!33082) (_1!1071 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) (Some!136 (_2!1071 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))))

(declare-fun b!73671 () Bool)

(assert (=> b!73671 (= e!48161 (contains!722 (toList!717 lt!33082) (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))

(assert (= (and d!17043 res!39041) b!73670))

(assert (= (and b!73670 res!39040) b!73671))

(declare-fun m!72153 () Bool)

(assert (=> d!17043 m!72153))

(declare-fun m!72155 () Bool)

(assert (=> d!17043 m!72155))

(declare-fun m!72157 () Bool)

(assert (=> d!17043 m!72157))

(declare-fun m!72159 () Bool)

(assert (=> d!17043 m!72159))

(declare-fun m!72161 () Bool)

(assert (=> b!73670 m!72161))

(declare-fun m!72163 () Bool)

(assert (=> b!73671 m!72163))

(assert (=> b!73427 d!17043))

(declare-fun d!17045 () Bool)

(assert (=> d!17045 (= (apply!75 (+!93 lt!32922 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) lt!32933) (apply!75 lt!32922 lt!32933))))

(declare-fun lt!33084 () Unit!2066)

(assert (=> d!17045 (= lt!33084 (choose!428 lt!32922 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) lt!32933))))

(declare-fun e!48162 () Bool)

(assert (=> d!17045 e!48162))

(declare-fun res!39042 () Bool)

(assert (=> d!17045 (=> (not res!39042) (not e!48162))))

(assert (=> d!17045 (= res!39042 (contains!719 lt!32922 lt!32933))))

(assert (=> d!17045 (= (addApplyDifferent!51 lt!32922 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) lt!32933) lt!33084)))

(declare-fun b!73672 () Bool)

(assert (=> b!73672 (= e!48162 (not (= lt!32933 lt!32924)))))

(assert (= (and d!17045 res!39042) b!73672))

(declare-fun m!72165 () Bool)

(assert (=> d!17045 m!72165))

(declare-fun m!72167 () Bool)

(assert (=> d!17045 m!72167))

(assert (=> d!17045 m!71711))

(assert (=> d!17045 m!71695))

(assert (=> d!17045 m!71695))

(assert (=> d!17045 m!71697))

(assert (=> b!73427 d!17045))

(declare-fun b!73673 () Bool)

(assert (=> b!73673 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> b!73673 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (ite c!10789 (_values!2195 newMap!16) lt!32548))))))

(declare-fun e!48163 () Bool)

(declare-fun lt!33089 () ListLongMap!1403)

(assert (=> b!73673 (= e!48163 (= (apply!75 lt!33089 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (ite c!10789 (_values!2195 newMap!16) lt!32548)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73674 () Bool)

(declare-fun e!48165 () ListLongMap!1403)

(declare-fun call!6504 () ListLongMap!1403)

(assert (=> b!73674 (= e!48165 call!6504)))

(declare-fun b!73675 () Bool)

(declare-fun e!48168 () Bool)

(declare-fun e!48166 () Bool)

(assert (=> b!73675 (= e!48168 e!48166)))

(declare-fun c!10989 () Bool)

(declare-fun e!48164 () Bool)

(assert (=> b!73675 (= c!10989 e!48164)))

(declare-fun res!39044 () Bool)

(assert (=> b!73675 (=> (not res!39044) (not e!48164))))

(assert (=> b!73675 (= res!39044 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73676 () Bool)

(assert (=> b!73676 (= e!48164 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73676 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!73677 () Bool)

(declare-fun e!48167 () Bool)

(assert (=> b!73677 (= e!48167 (isEmpty!320 lt!33089))))

(declare-fun b!73678 () Bool)

(assert (=> b!73678 (= e!48166 e!48167)))

(declare-fun c!10987 () Bool)

(assert (=> b!73678 (= c!10987 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73679 () Bool)

(assert (=> b!73679 (= e!48166 e!48163)))

(assert (=> b!73679 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun res!39043 () Bool)

(assert (=> b!73679 (= res!39043 (contains!719 lt!33089 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!73679 (=> (not res!39043) (not e!48163))))

(declare-fun b!73681 () Bool)

(declare-fun e!48169 () ListLongMap!1403)

(assert (=> b!73681 (= e!48169 e!48165)))

(declare-fun c!10986 () Bool)

(assert (=> b!73681 (= c!10986 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73682 () Bool)

(declare-fun lt!33087 () Unit!2066)

(declare-fun lt!33091 () Unit!2066)

(assert (=> b!73682 (= lt!33087 lt!33091)))

(declare-fun lt!33086 () (_ BitVec 64))

(declare-fun lt!33085 () (_ BitVec 64))

(declare-fun lt!33088 () V!2945)

(declare-fun lt!33090 () ListLongMap!1403)

(assert (=> b!73682 (not (contains!719 (+!93 lt!33090 (tuple2!2121 lt!33085 lt!33088)) lt!33086))))

(assert (=> b!73682 (= lt!33091 (addStillNotContains!25 lt!33090 lt!33085 lt!33088 lt!33086))))

(assert (=> b!73682 (= lt!33086 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73682 (= lt!33088 (get!1142 (select (arr!1847 (ite c!10789 (_values!2195 newMap!16) lt!32548)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73682 (= lt!33085 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!73682 (= lt!33090 call!6504)))

(assert (=> b!73682 (= e!48165 (+!93 call!6504 (tuple2!2121 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) (get!1142 (select (arr!1847 (ite c!10789 (_values!2195 newMap!16) lt!32548)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!6501 () Bool)

(assert (=> bm!6501 (= call!6504 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite c!10789 (_values!2195 newMap!16) lt!32548) (mask!6178 newMap!16) (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) (zeroValue!2114 newMap!16) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16)))))

(declare-fun b!73683 () Bool)

(assert (=> b!73683 (= e!48167 (= lt!33089 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite c!10789 (_values!2195 newMap!16) lt!32548) (mask!6178 newMap!16) (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) (zeroValue!2114 newMap!16) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16))))))

(declare-fun b!73684 () Bool)

(assert (=> b!73684 (= e!48169 (ListLongMap!1404 Nil!1480))))

(declare-fun b!73680 () Bool)

(declare-fun res!39045 () Bool)

(assert (=> b!73680 (=> (not res!39045) (not e!48168))))

(assert (=> b!73680 (= res!39045 (not (contains!719 lt!33089 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!17047 () Bool)

(assert (=> d!17047 e!48168))

(declare-fun res!39046 () Bool)

(assert (=> d!17047 (=> (not res!39046) (not e!48168))))

(assert (=> d!17047 (= res!39046 (not (contains!719 lt!33089 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17047 (= lt!33089 e!48169)))

(declare-fun c!10988 () Bool)

(assert (=> d!17047 (= c!10988 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17047 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17047 (= (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite c!10789 (_values!2195 newMap!16) lt!32548) (mask!6178 newMap!16) (ite c!10789 (ite c!10800 (extraKeys!2071 newMap!16) lt!32546) (extraKeys!2071 newMap!16)) (zeroValue!2114 newMap!16) (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33089)))

(assert (= (and d!17047 c!10988) b!73684))

(assert (= (and d!17047 (not c!10988)) b!73681))

(assert (= (and b!73681 c!10986) b!73682))

(assert (= (and b!73681 (not c!10986)) b!73674))

(assert (= (or b!73682 b!73674) bm!6501))

(assert (= (and d!17047 res!39046) b!73680))

(assert (= (and b!73680 res!39045) b!73675))

(assert (= (and b!73675 res!39044) b!73676))

(assert (= (and b!73675 c!10989) b!73679))

(assert (= (and b!73675 (not c!10989)) b!73678))

(assert (= (and b!73679 res!39043) b!73673))

(assert (= (and b!73678 c!10987) b!73683))

(assert (= (and b!73678 (not c!10987)) b!73677))

(declare-fun b_lambda!3301 () Bool)

(assert (=> (not b_lambda!3301) (not b!73673)))

(assert (=> b!73673 t!5045))

(declare-fun b_and!4509 () Bool)

(assert (= b_and!4505 (and (=> t!5045 result!2689) b_and!4509)))

(assert (=> b!73673 t!5047))

(declare-fun b_and!4511 () Bool)

(assert (= b_and!4507 (and (=> t!5047 result!2691) b_and!4511)))

(declare-fun b_lambda!3303 () Bool)

(assert (=> (not b_lambda!3303) (not b!73682)))

(assert (=> b!73682 t!5045))

(declare-fun b_and!4513 () Bool)

(assert (= b_and!4509 (and (=> t!5045 result!2689) b_and!4513)))

(assert (=> b!73682 t!5047))

(declare-fun b_and!4515 () Bool)

(assert (= b_and!4511 (and (=> t!5047 result!2691) b_and!4515)))

(assert (=> b!73676 m!71361))

(assert (=> b!73676 m!71361))

(assert (=> b!73676 m!71373))

(assert (=> b!73673 m!71387))

(assert (=> b!73673 m!71361))

(declare-fun m!72169 () Bool)

(assert (=> b!73673 m!72169))

(assert (=> b!73673 m!71361))

(assert (=> b!73673 m!71739))

(assert (=> b!73673 m!71387))

(assert (=> b!73673 m!71743))

(assert (=> b!73673 m!71739))

(declare-fun m!72171 () Bool)

(assert (=> b!73682 m!72171))

(assert (=> b!73682 m!71387))

(declare-fun m!72173 () Bool)

(assert (=> b!73682 m!72173))

(assert (=> b!73682 m!71361))

(assert (=> b!73682 m!71739))

(declare-fun m!72175 () Bool)

(assert (=> b!73682 m!72175))

(assert (=> b!73682 m!72171))

(declare-fun m!72177 () Bool)

(assert (=> b!73682 m!72177))

(assert (=> b!73682 m!71739))

(assert (=> b!73682 m!71387))

(assert (=> b!73682 m!71743))

(declare-fun m!72179 () Bool)

(assert (=> bm!6501 m!72179))

(assert (=> b!73683 m!72179))

(declare-fun m!72181 () Bool)

(assert (=> b!73677 m!72181))

(declare-fun m!72183 () Bool)

(assert (=> d!17047 m!72183))

(assert (=> d!17047 m!71219))

(assert (=> b!73681 m!71361))

(assert (=> b!73681 m!71361))

(assert (=> b!73681 m!71373))

(declare-fun m!72185 () Bool)

(assert (=> b!73680 m!72185))

(assert (=> b!73679 m!71361))

(assert (=> b!73679 m!71361))

(declare-fun m!72187 () Bool)

(assert (=> b!73679 m!72187))

(assert (=> b!73427 d!17047))

(declare-fun d!17049 () Bool)

(assert (=> d!17049 (= (apply!75 lt!32925 lt!32934) (get!1147 (getValueByKey!131 (toList!717 lt!32925) lt!32934)))))

(declare-fun bs!3160 () Bool)

(assert (= bs!3160 d!17049))

(declare-fun m!72189 () Bool)

(assert (=> bs!3160 m!72189))

(assert (=> bs!3160 m!72189))

(declare-fun m!72191 () Bool)

(assert (=> bs!3160 m!72191))

(assert (=> b!73427 d!17049))

(declare-fun d!17051 () Bool)

(assert (=> d!17051 (= (apply!75 (+!93 lt!32925 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) lt!32934) (apply!75 lt!32925 lt!32934))))

(declare-fun lt!33092 () Unit!2066)

(assert (=> d!17051 (= lt!33092 (choose!428 lt!32925 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) lt!32934))))

(declare-fun e!48170 () Bool)

(assert (=> d!17051 e!48170))

(declare-fun res!39047 () Bool)

(assert (=> d!17051 (=> (not res!39047) (not e!48170))))

(assert (=> d!17051 (= res!39047 (contains!719 lt!32925 lt!32934))))

(assert (=> d!17051 (= (addApplyDifferent!51 lt!32925 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)) lt!32934) lt!33092)))

(declare-fun b!73685 () Bool)

(assert (=> b!73685 (= e!48170 (not (= lt!32934 lt!32935)))))

(assert (= (and d!17051 res!39047) b!73685))

(declare-fun m!72193 () Bool)

(assert (=> d!17051 m!72193))

(declare-fun m!72195 () Bool)

(assert (=> d!17051 m!72195))

(assert (=> d!17051 m!71723))

(assert (=> d!17051 m!71709))

(assert (=> d!17051 m!71709))

(assert (=> d!17051 m!71719))

(assert (=> b!73427 d!17051))

(declare-fun d!17053 () Bool)

(assert (=> d!17053 (= (apply!75 (+!93 lt!32922 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) lt!32933) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32922 (tuple2!2121 lt!32924 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) lt!32933)))))

(declare-fun bs!3161 () Bool)

(assert (= bs!3161 d!17053))

(declare-fun m!72197 () Bool)

(assert (=> bs!3161 m!72197))

(assert (=> bs!3161 m!72197))

(declare-fun m!72199 () Bool)

(assert (=> bs!3161 m!72199))

(assert (=> b!73427 d!17053))

(declare-fun d!17055 () Bool)

(assert (=> d!17055 (= (apply!75 (+!93 lt!32936 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16))) lt!32923) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32936 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16)))) lt!32923)))))

(declare-fun bs!3162 () Bool)

(assert (= bs!3162 d!17055))

(declare-fun m!72201 () Bool)

(assert (=> bs!3162 m!72201))

(assert (=> bs!3162 m!72201))

(declare-fun m!72203 () Bool)

(assert (=> bs!3162 m!72203))

(assert (=> b!73427 d!17055))

(declare-fun d!17057 () Bool)

(assert (=> d!17057 (= (apply!75 lt!32922 lt!32933) (get!1147 (getValueByKey!131 (toList!717 lt!32922) lt!32933)))))

(declare-fun bs!3163 () Bool)

(assert (= bs!3163 d!17057))

(declare-fun m!72205 () Bool)

(assert (=> bs!3163 m!72205))

(assert (=> bs!3163 m!72205))

(declare-fun m!72207 () Bool)

(assert (=> bs!3163 m!72207))

(assert (=> b!73427 d!17057))

(declare-fun d!17059 () Bool)

(declare-fun e!48171 () Bool)

(assert (=> d!17059 e!48171))

(declare-fun res!39049 () Bool)

(assert (=> d!17059 (=> (not res!39049) (not e!48171))))

(declare-fun lt!33095 () ListLongMap!1403)

(assert (=> d!17059 (= res!39049 (contains!719 lt!33095 (_1!1071 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16)))))))

(declare-fun lt!33096 () List!1483)

(assert (=> d!17059 (= lt!33095 (ListLongMap!1404 lt!33096))))

(declare-fun lt!33094 () Unit!2066)

(declare-fun lt!33093 () Unit!2066)

(assert (=> d!17059 (= lt!33094 lt!33093)))

(assert (=> d!17059 (= (getValueByKey!131 lt!33096 (_1!1071 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17059 (= lt!33093 (lemmaContainsTupThenGetReturnValue!51 lt!33096 (_1!1071 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17059 (= lt!33096 (insertStrictlySorted!54 (toList!717 lt!32938) (_1!1071 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17059 (= (+!93 lt!32938 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16))) lt!33095)))

(declare-fun b!73686 () Bool)

(declare-fun res!39048 () Bool)

(assert (=> b!73686 (=> (not res!39048) (not e!48171))))

(assert (=> b!73686 (= res!39048 (= (getValueByKey!131 (toList!717 lt!33095) (_1!1071 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16))))))))

(declare-fun b!73687 () Bool)

(assert (=> b!73687 (= e!48171 (contains!722 (toList!717 lt!33095) (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16))))))

(assert (= (and d!17059 res!39049) b!73686))

(assert (= (and b!73686 res!39048) b!73687))

(declare-fun m!72209 () Bool)

(assert (=> d!17059 m!72209))

(declare-fun m!72211 () Bool)

(assert (=> d!17059 m!72211))

(declare-fun m!72213 () Bool)

(assert (=> d!17059 m!72213))

(declare-fun m!72215 () Bool)

(assert (=> d!17059 m!72215))

(declare-fun m!72217 () Bool)

(assert (=> b!73686 m!72217))

(declare-fun m!72219 () Bool)

(assert (=> b!73687 m!72219))

(assert (=> b!73427 d!17059))

(declare-fun d!17061 () Bool)

(assert (=> d!17061 (= (apply!75 lt!32936 lt!32923) (get!1147 (getValueByKey!131 (toList!717 lt!32936) lt!32923)))))

(declare-fun bs!3164 () Bool)

(assert (= bs!3164 d!17061))

(declare-fun m!72221 () Bool)

(assert (=> bs!3164 m!72221))

(assert (=> bs!3164 m!72221))

(declare-fun m!72223 () Bool)

(assert (=> bs!3164 m!72223))

(assert (=> b!73427 d!17061))

(declare-fun d!17063 () Bool)

(assert (=> d!17063 (= (apply!75 (+!93 lt!32936 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16))) lt!32923) (apply!75 lt!32936 lt!32923))))

(declare-fun lt!33097 () Unit!2066)

(assert (=> d!17063 (= lt!33097 (choose!428 lt!32936 lt!32940 (zeroValue!2114 newMap!16) lt!32923))))

(declare-fun e!48172 () Bool)

(assert (=> d!17063 e!48172))

(declare-fun res!39050 () Bool)

(assert (=> d!17063 (=> (not res!39050) (not e!48172))))

(assert (=> d!17063 (= res!39050 (contains!719 lt!32936 lt!32923))))

(assert (=> d!17063 (= (addApplyDifferent!51 lt!32936 lt!32940 (zeroValue!2114 newMap!16) lt!32923) lt!33097)))

(declare-fun b!73688 () Bool)

(assert (=> b!73688 (= e!48172 (not (= lt!32923 lt!32940)))))

(assert (= (and d!17063 res!39050) b!73688))

(declare-fun m!72225 () Bool)

(assert (=> d!17063 m!72225))

(declare-fun m!72227 () Bool)

(assert (=> d!17063 m!72227))

(assert (=> d!17063 m!71715))

(assert (=> d!17063 m!71703))

(assert (=> d!17063 m!71703))

(assert (=> d!17063 m!71705))

(assert (=> b!73427 d!17063))

(declare-fun d!17065 () Bool)

(declare-fun e!48173 () Bool)

(assert (=> d!17065 e!48173))

(declare-fun res!39052 () Bool)

(assert (=> d!17065 (=> (not res!39052) (not e!48173))))

(declare-fun lt!33100 () ListLongMap!1403)

(assert (=> d!17065 (= res!39052 (contains!719 lt!33100 (_1!1071 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16)))))))

(declare-fun lt!33101 () List!1483)

(assert (=> d!17065 (= lt!33100 (ListLongMap!1404 lt!33101))))

(declare-fun lt!33099 () Unit!2066)

(declare-fun lt!33098 () Unit!2066)

(assert (=> d!17065 (= lt!33099 lt!33098)))

(assert (=> d!17065 (= (getValueByKey!131 lt!33101 (_1!1071 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17065 (= lt!33098 (lemmaContainsTupThenGetReturnValue!51 lt!33101 (_1!1071 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17065 (= lt!33101 (insertStrictlySorted!54 (toList!717 lt!32936) (_1!1071 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17065 (= (+!93 lt!32936 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16))) lt!33100)))

(declare-fun b!73689 () Bool)

(declare-fun res!39051 () Bool)

(assert (=> b!73689 (=> (not res!39051) (not e!48173))))

(assert (=> b!73689 (= res!39051 (= (getValueByKey!131 (toList!717 lt!33100) (_1!1071 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16))))))))

(declare-fun b!73690 () Bool)

(assert (=> b!73690 (= e!48173 (contains!722 (toList!717 lt!33100) (tuple2!2121 lt!32940 (zeroValue!2114 newMap!16))))))

(assert (= (and d!17065 res!39052) b!73689))

(assert (= (and b!73689 res!39051) b!73690))

(declare-fun m!72229 () Bool)

(assert (=> d!17065 m!72229))

(declare-fun m!72231 () Bool)

(assert (=> d!17065 m!72231))

(declare-fun m!72233 () Bool)

(assert (=> d!17065 m!72233))

(declare-fun m!72235 () Bool)

(assert (=> d!17065 m!72235))

(declare-fun m!72237 () Bool)

(assert (=> b!73689 m!72237))

(declare-fun m!72239 () Bool)

(assert (=> b!73690 m!72239))

(assert (=> b!73427 d!17065))

(declare-fun d!17067 () Bool)

(declare-fun e!48175 () Bool)

(assert (=> d!17067 e!48175))

(declare-fun res!39053 () Bool)

(assert (=> d!17067 (=> res!39053 e!48175)))

(declare-fun lt!33105 () Bool)

(assert (=> d!17067 (= res!39053 (not lt!33105))))

(declare-fun lt!33103 () Bool)

(assert (=> d!17067 (= lt!33105 lt!33103)))

(declare-fun lt!33102 () Unit!2066)

(declare-fun e!48174 () Unit!2066)

(assert (=> d!17067 (= lt!33102 e!48174)))

(declare-fun c!10990 () Bool)

(assert (=> d!17067 (= c!10990 lt!33103)))

(assert (=> d!17067 (= lt!33103 (containsKey!135 (toList!717 (+!93 lt!32938 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16)))) lt!32931))))

(assert (=> d!17067 (= (contains!719 (+!93 lt!32938 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16))) lt!32931) lt!33105)))

(declare-fun b!73691 () Bool)

(declare-fun lt!33104 () Unit!2066)

(assert (=> b!73691 (= e!48174 lt!33104)))

(assert (=> b!73691 (= lt!33104 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (+!93 lt!32938 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16)))) lt!32931))))

(assert (=> b!73691 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32938 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16)))) lt!32931))))

(declare-fun b!73692 () Bool)

(declare-fun Unit!2105 () Unit!2066)

(assert (=> b!73692 (= e!48174 Unit!2105)))

(declare-fun b!73693 () Bool)

(assert (=> b!73693 (= e!48175 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32938 (tuple2!2121 lt!32928 (zeroValue!2114 newMap!16)))) lt!32931)))))

(assert (= (and d!17067 c!10990) b!73691))

(assert (= (and d!17067 (not c!10990)) b!73692))

(assert (= (and d!17067 (not res!39053)) b!73693))

(declare-fun m!72241 () Bool)

(assert (=> d!17067 m!72241))

(declare-fun m!72243 () Bool)

(assert (=> b!73691 m!72243))

(declare-fun m!72245 () Bool)

(assert (=> b!73691 m!72245))

(assert (=> b!73691 m!72245))

(declare-fun m!72247 () Bool)

(assert (=> b!73691 m!72247))

(assert (=> b!73693 m!72245))

(assert (=> b!73693 m!72245))

(assert (=> b!73693 m!72247))

(assert (=> b!73427 d!17067))

(declare-fun d!17069 () Bool)

(assert (=> d!17069 (= (apply!75 (+!93 lt!32925 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) lt!32934) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32925 (tuple2!2121 lt!32935 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) lt!32934)))))

(declare-fun bs!3165 () Bool)

(assert (= bs!3165 d!17069))

(declare-fun m!72249 () Bool)

(assert (=> bs!3165 m!72249))

(assert (=> bs!3165 m!72249))

(declare-fun m!72251 () Bool)

(assert (=> bs!3165 m!72251))

(assert (=> b!73427 d!17069))

(declare-fun d!17071 () Bool)

(assert (=> d!17071 (= (apply!75 lt!32725 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1147 (getValueByKey!131 (toList!717 lt!32725) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3166 () Bool)

(assert (= bs!3166 d!17071))

(declare-fun m!72253 () Bool)

(assert (=> bs!3166 m!72253))

(assert (=> bs!3166 m!72253))

(declare-fun m!72255 () Bool)

(assert (=> bs!3166 m!72255))

(assert (=> b!73216 d!17071))

(declare-fun d!17073 () Bool)

(assert (=> d!17073 (= (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32608)) (v!2529 (getValueByKey!131 (toList!717 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32608)))))

(assert (=> d!16969 d!17073))

(declare-fun b!73694 () Bool)

(declare-fun e!48176 () Option!137)

(assert (=> b!73694 (= e!48176 (Some!136 (_2!1071 (h!2066 (toList!717 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))))

(declare-fun b!73697 () Bool)

(declare-fun e!48177 () Option!137)

(assert (=> b!73697 (= e!48177 None!135)))

(declare-fun b!73696 () Bool)

(assert (=> b!73696 (= e!48177 (getValueByKey!131 (t!5031 (toList!717 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) lt!32608))))

(declare-fun d!17075 () Bool)

(declare-fun c!10991 () Bool)

(assert (=> d!17075 (= c!10991 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32608)))))

(assert (=> d!17075 (= (getValueByKey!131 (toList!717 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32608) e!48176)))

(declare-fun b!73695 () Bool)

(assert (=> b!73695 (= e!48176 e!48177)))

(declare-fun c!10992 () Bool)

(assert (=> b!73695 (= c!10992 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (not (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32608))))))

(assert (= (and d!17075 c!10991) b!73694))

(assert (= (and d!17075 (not c!10991)) b!73695))

(assert (= (and b!73695 c!10992) b!73696))

(assert (= (and b!73695 (not c!10992)) b!73697))

(declare-fun m!72257 () Bool)

(assert (=> b!73696 m!72257))

(assert (=> d!16969 d!17075))

(assert (=> d!16853 d!16851))

(declare-fun d!17077 () Bool)

(assert (=> d!17077 (= (getValueByKey!131 lt!32644 (_1!1071 lt!32376)) (Some!136 (_2!1071 lt!32376)))))

(assert (=> d!17077 true))

(declare-fun _$22!385 () Unit!2066)

(assert (=> d!17077 (= (choose!420 lt!32644 (_1!1071 lt!32376) (_2!1071 lt!32376)) _$22!385)))

(declare-fun bs!3167 () Bool)

(assert (= bs!3167 d!17077))

(assert (=> bs!3167 m!71107))

(assert (=> d!16853 d!17077))

(declare-fun d!17079 () Bool)

(declare-fun res!39054 () Bool)

(declare-fun e!48178 () Bool)

(assert (=> d!17079 (=> res!39054 e!48178)))

(assert (=> d!17079 (= res!39054 (or ((_ is Nil!1480) lt!32644) ((_ is Nil!1480) (t!5031 lt!32644))))))

(assert (=> d!17079 (= (isStrictlySorted!287 lt!32644) e!48178)))

(declare-fun b!73698 () Bool)

(declare-fun e!48179 () Bool)

(assert (=> b!73698 (= e!48178 e!48179)))

(declare-fun res!39055 () Bool)

(assert (=> b!73698 (=> (not res!39055) (not e!48179))))

(assert (=> b!73698 (= res!39055 (bvslt (_1!1071 (h!2066 lt!32644)) (_1!1071 (h!2066 (t!5031 lt!32644)))))))

(declare-fun b!73699 () Bool)

(assert (=> b!73699 (= e!48179 (isStrictlySorted!287 (t!5031 lt!32644)))))

(assert (= (and d!17079 (not res!39054)) b!73698))

(assert (= (and b!73698 res!39055) b!73699))

(declare-fun m!72259 () Bool)

(assert (=> b!73699 m!72259))

(assert (=> d!16853 d!17079))

(declare-fun d!17081 () Bool)

(assert (=> d!17081 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32668) (_1!1071 lt!32383))) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32668) (_1!1071 lt!32383)))))))

(declare-fun bs!3168 () Bool)

(assert (= bs!3168 d!17081))

(assert (=> bs!3168 m!71145))

(declare-fun m!72261 () Bool)

(assert (=> bs!3168 m!72261))

(assert (=> b!73312 d!17081))

(assert (=> b!73312 d!16783))

(declare-fun d!17083 () Bool)

(assert (=> d!17083 (= (apply!75 lt!32955 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1147 (getValueByKey!131 (toList!717 lt!32955) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3169 () Bool)

(assert (= bs!3169 d!17083))

(declare-fun m!72263 () Bool)

(assert (=> bs!3169 m!72263))

(assert (=> bs!3169 m!72263))

(declare-fun m!72265 () Bool)

(assert (=> bs!3169 m!72265))

(assert (=> b!73490 d!17083))

(declare-fun d!17085 () Bool)

(assert (=> d!17085 (= (apply!75 lt!32919 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1147 (getValueByKey!131 (toList!717 lt!32919) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3170 () Bool)

(assert (= bs!3170 d!17085))

(assert (=> bs!3170 m!71361))

(assert (=> bs!3170 m!72085))

(assert (=> bs!3170 m!72085))

(declare-fun m!72267 () Bool)

(assert (=> bs!3170 m!72267))

(assert (=> b!73432 d!17085))

(declare-fun c!10993 () Bool)

(declare-fun d!17087 () Bool)

(assert (=> d!17087 (= c!10993 ((_ is ValueCellFull!893) (select (arr!1847 (ite c!10789 (_values!2195 newMap!16) lt!32548)) #b00000000000000000000000000000000)))))

(declare-fun e!48180 () V!2945)

(assert (=> d!17087 (= (get!1142 (select (arr!1847 (ite c!10789 (_values!2195 newMap!16) lt!32548)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48180)))

(declare-fun b!73700 () Bool)

(assert (=> b!73700 (= e!48180 (get!1145 (select (arr!1847 (ite c!10789 (_values!2195 newMap!16) lt!32548)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73701 () Bool)

(assert (=> b!73701 (= e!48180 (get!1146 (select (arr!1847 (ite c!10789 (_values!2195 newMap!16) lt!32548)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17087 c!10993) b!73700))

(assert (= (and d!17087 (not c!10993)) b!73701))

(assert (=> b!73700 m!71739))

(assert (=> b!73700 m!71387))

(declare-fun m!72269 () Bool)

(assert (=> b!73700 m!72269))

(assert (=> b!73701 m!71739))

(assert (=> b!73701 m!71387))

(declare-fun m!72271 () Bool)

(assert (=> b!73701 m!72271))

(assert (=> b!73432 d!17087))

(declare-fun d!17089 () Bool)

(assert (=> d!17089 (= (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73234 d!17089))

(declare-fun b!73702 () Bool)

(declare-fun e!48181 () Option!137)

(assert (=> b!73702 (= e!48181 (Some!136 (_2!1071 (h!2066 (t!5031 lt!32673)))))))

(declare-fun b!73705 () Bool)

(declare-fun e!48182 () Option!137)

(assert (=> b!73705 (= e!48182 None!135)))

(declare-fun b!73704 () Bool)

(assert (=> b!73704 (= e!48182 (getValueByKey!131 (t!5031 (t!5031 lt!32673)) (_1!1071 lt!32383)))))

(declare-fun d!17091 () Bool)

(declare-fun c!10994 () Bool)

(assert (=> d!17091 (= c!10994 (and ((_ is Cons!1479) (t!5031 lt!32673)) (= (_1!1071 (h!2066 (t!5031 lt!32673))) (_1!1071 lt!32383))))))

(assert (=> d!17091 (= (getValueByKey!131 (t!5031 lt!32673) (_1!1071 lt!32383)) e!48181)))

(declare-fun b!73703 () Bool)

(assert (=> b!73703 (= e!48181 e!48182)))

(declare-fun c!10995 () Bool)

(assert (=> b!73703 (= c!10995 (and ((_ is Cons!1479) (t!5031 lt!32673)) (not (= (_1!1071 (h!2066 (t!5031 lt!32673))) (_1!1071 lt!32383)))))))

(assert (= (and d!17091 c!10994) b!73702))

(assert (= (and d!17091 (not c!10994)) b!73703))

(assert (= (and b!73703 c!10995) b!73704))

(assert (= (and b!73703 (not c!10995)) b!73705))

(declare-fun m!72273 () Bool)

(assert (=> b!73704 m!72273))

(assert (=> b!73289 d!17091))

(declare-fun d!17093 () Bool)

(assert (not d!17093))

(assert (=> b!73348 d!17093))

(declare-fun d!17095 () Bool)

(assert (=> d!17095 (= (inRange!0 (index!3088 lt!32796) (mask!6178 newMap!16)) (and (bvsge (index!3088 lt!32796) #b00000000000000000000000000000000) (bvslt (index!3088 lt!32796) (bvadd (mask!6178 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!73341 d!17095))

(declare-fun d!17097 () Bool)

(assert (=> d!17097 (= (isDefined!85 (getValueByKey!131 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540)))) (not (isEmpty!322 (getValueByKey!131 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))))

(declare-fun bs!3171 () Bool)

(assert (= bs!3171 d!17097))

(assert (=> bs!3171 m!71679))

(declare-fun m!72275 () Bool)

(assert (=> bs!3171 m!72275))

(assert (=> b!73415 d!17097))

(declare-fun b!73706 () Bool)

(declare-fun e!48183 () Option!137)

(assert (=> b!73706 (= e!48183 (Some!136 (_2!1071 (h!2066 (toList!717 call!6384)))))))

(declare-fun b!73709 () Bool)

(declare-fun e!48184 () Option!137)

(assert (=> b!73709 (= e!48184 None!135)))

(declare-fun b!73708 () Bool)

(assert (=> b!73708 (= e!48184 (getValueByKey!131 (t!5031 (toList!717 call!6384)) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(declare-fun c!10996 () Bool)

(declare-fun d!17099 () Bool)

(assert (=> d!17099 (= c!10996 (and ((_ is Cons!1479) (toList!717 call!6384)) (= (_1!1071 (h!2066 (toList!717 call!6384))) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540)))))))

(assert (=> d!17099 (= (getValueByKey!131 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))) e!48183)))

(declare-fun b!73707 () Bool)

(assert (=> b!73707 (= e!48183 e!48184)))

(declare-fun c!10997 () Bool)

(assert (=> b!73707 (= c!10997 (and ((_ is Cons!1479) (toList!717 call!6384)) (not (= (_1!1071 (h!2066 (toList!717 call!6384))) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))))

(assert (= (and d!17099 c!10996) b!73706))

(assert (= (and d!17099 (not c!10996)) b!73707))

(assert (= (and b!73707 c!10997) b!73708))

(assert (= (and b!73707 (not c!10997)) b!73709))

(assert (=> b!73708 m!71017))

(declare-fun m!72277 () Bool)

(assert (=> b!73708 m!72277))

(assert (=> b!73415 d!17099))

(assert (=> bm!6465 d!16975))

(declare-fun d!17101 () Bool)

(declare-fun res!39056 () Bool)

(declare-fun e!48185 () Bool)

(assert (=> d!17101 (=> res!39056 e!48185)))

(assert (=> d!17101 (= res!39056 (and ((_ is Cons!1479) lt!32669) (= (_1!1071 (h!2066 lt!32669)) (_1!1071 lt!32383))))))

(assert (=> d!17101 (= (containsKey!135 lt!32669 (_1!1071 lt!32383)) e!48185)))

(declare-fun b!73710 () Bool)

(declare-fun e!48186 () Bool)

(assert (=> b!73710 (= e!48185 e!48186)))

(declare-fun res!39057 () Bool)

(assert (=> b!73710 (=> (not res!39057) (not e!48186))))

(assert (=> b!73710 (= res!39057 (and (or (not ((_ is Cons!1479) lt!32669)) (bvsle (_1!1071 (h!2066 lt!32669)) (_1!1071 lt!32383))) ((_ is Cons!1479) lt!32669) (bvslt (_1!1071 (h!2066 lt!32669)) (_1!1071 lt!32383))))))

(declare-fun b!73711 () Bool)

(assert (=> b!73711 (= e!48186 (containsKey!135 (t!5031 lt!32669) (_1!1071 lt!32383)))))

(assert (= (and d!17101 (not res!39056)) b!73710))

(assert (= (and b!73710 res!39057) b!73711))

(declare-fun m!72279 () Bool)

(assert (=> b!73711 m!72279))

(assert (=> b!73317 d!17101))

(declare-fun d!17103 () Bool)

(declare-fun res!39058 () Bool)

(declare-fun e!48187 () Bool)

(assert (=> d!17103 (=> res!39058 e!48187)))

(assert (=> d!17103 (= res!39058 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))))) lt!32660)))))

(assert (=> d!17103 (= (containsKey!135 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660) e!48187)))

(declare-fun b!73712 () Bool)

(declare-fun e!48188 () Bool)

(assert (=> b!73712 (= e!48187 e!48188)))

(declare-fun res!39059 () Bool)

(assert (=> b!73712 (=> (not res!39059) (not e!48188))))

(assert (=> b!73712 (= res!39059 (and (or (not ((_ is Cons!1479) (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))))) (bvsle (_1!1071 (h!2066 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))))) lt!32660)) ((_ is Cons!1479) (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)))) (bvslt (_1!1071 (h!2066 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))))) lt!32660)))))

(declare-fun b!73713 () Bool)

(assert (=> b!73713 (= e!48188 (containsKey!135 (t!5031 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)))) lt!32660))))

(assert (= (and d!17103 (not res!39058)) b!73712))

(assert (= (and b!73712 res!39059) b!73713))

(declare-fun m!72281 () Bool)

(assert (=> b!73713 m!72281))

(assert (=> d!16897 d!17103))

(declare-fun lt!33106 () Bool)

(declare-fun d!17105 () Bool)

(assert (=> d!17105 (= lt!33106 (select (content!77 (toList!717 lt!32907)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(declare-fun e!48190 () Bool)

(assert (=> d!17105 (= lt!33106 e!48190)))

(declare-fun res!39060 () Bool)

(assert (=> d!17105 (=> (not res!39060) (not e!48190))))

(assert (=> d!17105 (= res!39060 ((_ is Cons!1479) (toList!717 lt!32907)))))

(assert (=> d!17105 (= (contains!722 (toList!717 lt!32907) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) lt!33106)))

(declare-fun b!73714 () Bool)

(declare-fun e!48189 () Bool)

(assert (=> b!73714 (= e!48190 e!48189)))

(declare-fun res!39061 () Bool)

(assert (=> b!73714 (=> res!39061 e!48189)))

(assert (=> b!73714 (= res!39061 (= (h!2066 (toList!717 lt!32907)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(declare-fun b!73715 () Bool)

(assert (=> b!73715 (= e!48189 (contains!722 (t!5031 (toList!717 lt!32907)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(assert (= (and d!17105 res!39060) b!73714))

(assert (= (and b!73714 (not res!39061)) b!73715))

(declare-fun m!72283 () Bool)

(assert (=> d!17105 m!72283))

(declare-fun m!72285 () Bool)

(assert (=> d!17105 m!72285))

(declare-fun m!72287 () Bool)

(assert (=> b!73715 m!72287))

(assert (=> b!73412 d!17105))

(declare-fun b!73716 () Bool)

(declare-fun e!48191 () Option!137)

(assert (=> b!73716 (= e!48191 (Some!136 (_2!1071 (h!2066 (t!5031 (toList!717 lt!32672))))))))

(declare-fun b!73719 () Bool)

(declare-fun e!48192 () Option!137)

(assert (=> b!73719 (= e!48192 None!135)))

(declare-fun b!73718 () Bool)

(assert (=> b!73718 (= e!48192 (getValueByKey!131 (t!5031 (t!5031 (toList!717 lt!32672))) (_1!1071 lt!32383)))))

(declare-fun d!17107 () Bool)

(declare-fun c!10998 () Bool)

(assert (=> d!17107 (= c!10998 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32672))) (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32672)))) (_1!1071 lt!32383))))))

(assert (=> d!17107 (= (getValueByKey!131 (t!5031 (toList!717 lt!32672)) (_1!1071 lt!32383)) e!48191)))

(declare-fun b!73717 () Bool)

(assert (=> b!73717 (= e!48191 e!48192)))

(declare-fun c!10999 () Bool)

(assert (=> b!73717 (= c!10999 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32672))) (not (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32672)))) (_1!1071 lt!32383)))))))

(assert (= (and d!17107 c!10998) b!73716))

(assert (= (and d!17107 (not c!10998)) b!73717))

(assert (= (and b!73717 c!10999) b!73718))

(assert (= (and b!73717 (not c!10999)) b!73719))

(declare-fun m!72289 () Bool)

(assert (=> b!73718 m!72289))

(assert (=> b!73231 d!17107))

(declare-fun d!17109 () Bool)

(declare-fun e!48194 () Bool)

(assert (=> d!17109 e!48194))

(declare-fun res!39062 () Bool)

(assert (=> d!17109 (=> res!39062 e!48194)))

(declare-fun lt!33110 () Bool)

(assert (=> d!17109 (= res!39062 (not lt!33110))))

(declare-fun lt!33108 () Bool)

(assert (=> d!17109 (= lt!33110 lt!33108)))

(declare-fun lt!33107 () Unit!2066)

(declare-fun e!48193 () Unit!2066)

(assert (=> d!17109 (= lt!33107 e!48193)))

(declare-fun c!11000 () Bool)

(assert (=> d!17109 (= c!11000 lt!33108)))

(assert (=> d!17109 (= lt!33108 (containsKey!135 (toList!717 lt!32708) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!17109 (= (contains!719 lt!32708 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33110)))

(declare-fun b!73720 () Bool)

(declare-fun lt!33109 () Unit!2066)

(assert (=> b!73720 (= e!48193 lt!33109)))

(assert (=> b!73720 (= lt!33109 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32708) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> b!73720 (isDefined!85 (getValueByKey!131 (toList!717 lt!32708) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!73721 () Bool)

(declare-fun Unit!2106 () Unit!2066)

(assert (=> b!73721 (= e!48193 Unit!2106)))

(declare-fun b!73722 () Bool)

(assert (=> b!73722 (= e!48194 (isDefined!85 (getValueByKey!131 (toList!717 lt!32708) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (= (and d!17109 c!11000) b!73720))

(assert (= (and d!17109 (not c!11000)) b!73721))

(assert (= (and d!17109 (not res!39062)) b!73722))

(declare-fun m!72291 () Bool)

(assert (=> d!17109 m!72291))

(declare-fun m!72293 () Bool)

(assert (=> b!73720 m!72293))

(assert (=> b!73720 m!71287))

(assert (=> b!73720 m!71287))

(declare-fun m!72295 () Bool)

(assert (=> b!73720 m!72295))

(assert (=> b!73722 m!71287))

(assert (=> b!73722 m!71287))

(assert (=> b!73722 m!72295))

(assert (=> d!16817 d!17109))

(declare-fun b!73723 () Bool)

(declare-fun e!48195 () Option!137)

(assert (=> b!73723 (= e!48195 (Some!136 (_2!1071 (h!2066 lt!32709))))))

(declare-fun b!73726 () Bool)

(declare-fun e!48196 () Option!137)

(assert (=> b!73726 (= e!48196 None!135)))

(declare-fun b!73725 () Bool)

(assert (=> b!73725 (= e!48196 (getValueByKey!131 (t!5031 lt!32709) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun d!17111 () Bool)

(declare-fun c!11001 () Bool)

(assert (=> d!17111 (= c!11001 (and ((_ is Cons!1479) lt!32709) (= (_1!1071 (h!2066 lt!32709)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!17111 (= (getValueByKey!131 lt!32709 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) e!48195)))

(declare-fun b!73724 () Bool)

(assert (=> b!73724 (= e!48195 e!48196)))

(declare-fun c!11002 () Bool)

(assert (=> b!73724 (= c!11002 (and ((_ is Cons!1479) lt!32709) (not (= (_1!1071 (h!2066 lt!32709)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (= (and d!17111 c!11001) b!73723))

(assert (= (and d!17111 (not c!11001)) b!73724))

(assert (= (and b!73724 c!11002) b!73725))

(assert (= (and b!73724 (not c!11002)) b!73726))

(declare-fun m!72297 () Bool)

(assert (=> b!73725 m!72297))

(assert (=> d!16817 d!17111))

(declare-fun d!17113 () Bool)

(assert (=> d!17113 (= (getValueByKey!131 lt!32709 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun lt!33111 () Unit!2066)

(assert (=> d!17113 (= lt!33111 (choose!420 lt!32709 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun e!48197 () Bool)

(assert (=> d!17113 e!48197))

(declare-fun res!39063 () Bool)

(assert (=> d!17113 (=> (not res!39063) (not e!48197))))

(assert (=> d!17113 (= res!39063 (isStrictlySorted!287 lt!32709))))

(assert (=> d!17113 (= (lemmaContainsTupThenGetReturnValue!51 lt!32709 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33111)))

(declare-fun b!73727 () Bool)

(declare-fun res!39064 () Bool)

(assert (=> b!73727 (=> (not res!39064) (not e!48197))))

(assert (=> b!73727 (= res!39064 (containsKey!135 lt!32709 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!73728 () Bool)

(assert (=> b!73728 (= e!48197 (contains!722 lt!32709 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (= (and d!17113 res!39063) b!73727))

(assert (= (and b!73727 res!39064) b!73728))

(assert (=> d!17113 m!71281))

(declare-fun m!72299 () Bool)

(assert (=> d!17113 m!72299))

(declare-fun m!72301 () Bool)

(assert (=> d!17113 m!72301))

(declare-fun m!72303 () Bool)

(assert (=> b!73727 m!72303))

(declare-fun m!72305 () Bool)

(assert (=> b!73728 m!72305))

(assert (=> d!16817 d!17113))

(declare-fun d!17115 () Bool)

(declare-fun e!48200 () Bool)

(assert (=> d!17115 e!48200))

(declare-fun res!39066 () Bool)

(assert (=> d!17115 (=> (not res!39066) (not e!48200))))

(declare-fun lt!33112 () List!1483)

(assert (=> d!17115 (= res!39066 (isStrictlySorted!287 lt!33112))))

(declare-fun e!48202 () List!1483)

(assert (=> d!17115 (= lt!33112 e!48202)))

(declare-fun c!11005 () Bool)

(assert (=> d!17115 (= c!11005 (and ((_ is Cons!1479) (toList!717 lt!32377)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!17115 (isStrictlySorted!287 (toList!717 lt!32377))))

(assert (=> d!17115 (= (insertStrictlySorted!54 (toList!717 lt!32377) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33112)))

(declare-fun b!73729 () Bool)

(declare-fun res!39065 () Bool)

(assert (=> b!73729 (=> (not res!39065) (not e!48200))))

(assert (=> b!73729 (= res!39065 (containsKey!135 lt!33112 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!73730 () Bool)

(declare-fun e!48201 () List!1483)

(declare-fun call!6507 () List!1483)

(assert (=> b!73730 (= e!48201 call!6507)))

(declare-fun bm!6502 () Bool)

(declare-fun call!6505 () List!1483)

(declare-fun call!6506 () List!1483)

(assert (=> bm!6502 (= call!6505 call!6506)))

(declare-fun b!73731 () Bool)

(assert (=> b!73731 (= e!48202 call!6506)))

(declare-fun b!73732 () Bool)

(declare-fun e!48198 () List!1483)

(assert (=> b!73732 (= e!48198 (insertStrictlySorted!54 (t!5031 (toList!717 lt!32377)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!73733 () Bool)

(assert (=> b!73733 (= e!48201 call!6507)))

(declare-fun b!73734 () Bool)

(assert (=> b!73734 (= e!48200 (contains!722 lt!33112 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun c!11003 () Bool)

(declare-fun b!73735 () Bool)

(assert (=> b!73735 (= c!11003 (and ((_ is Cons!1479) (toList!717 lt!32377)) (bvsgt (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun e!48199 () List!1483)

(assert (=> b!73735 (= e!48199 e!48201)))

(declare-fun bm!6503 () Bool)

(assert (=> bm!6503 (= call!6506 ($colon$colon!65 e!48198 (ite c!11005 (h!2066 (toList!717 lt!32377)) (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(declare-fun c!11006 () Bool)

(assert (=> bm!6503 (= c!11006 c!11005)))

(declare-fun bm!6504 () Bool)

(assert (=> bm!6504 (= call!6507 call!6505)))

(declare-fun b!73736 () Bool)

(assert (=> b!73736 (= e!48202 e!48199)))

(declare-fun c!11004 () Bool)

(assert (=> b!73736 (= c!11004 (and ((_ is Cons!1479) (toList!717 lt!32377)) (= (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!73737 () Bool)

(assert (=> b!73737 (= e!48199 call!6505)))

(declare-fun b!73738 () Bool)

(assert (=> b!73738 (= e!48198 (ite c!11004 (t!5031 (toList!717 lt!32377)) (ite c!11003 (Cons!1479 (h!2066 (toList!717 lt!32377)) (t!5031 (toList!717 lt!32377))) Nil!1480)))))

(assert (= (and d!17115 c!11005) b!73731))

(assert (= (and d!17115 (not c!11005)) b!73736))

(assert (= (and b!73736 c!11004) b!73737))

(assert (= (and b!73736 (not c!11004)) b!73735))

(assert (= (and b!73735 c!11003) b!73733))

(assert (= (and b!73735 (not c!11003)) b!73730))

(assert (= (or b!73733 b!73730) bm!6504))

(assert (= (or b!73737 bm!6504) bm!6502))

(assert (= (or b!73731 bm!6502) bm!6503))

(assert (= (and bm!6503 c!11006) b!73732))

(assert (= (and bm!6503 (not c!11006)) b!73738))

(assert (= (and d!17115 res!39066) b!73729))

(assert (= (and b!73729 res!39065) b!73734))

(declare-fun m!72307 () Bool)

(assert (=> bm!6503 m!72307))

(declare-fun m!72309 () Bool)

(assert (=> d!17115 m!72309))

(assert (=> d!17115 m!71451))

(declare-fun m!72311 () Bool)

(assert (=> b!73732 m!72311))

(declare-fun m!72313 () Bool)

(assert (=> b!73734 m!72313))

(declare-fun m!72315 () Bool)

(assert (=> b!73729 m!72315))

(assert (=> d!16817 d!17115))

(assert (=> b!73129 d!17037))

(declare-fun d!17117 () Bool)

(declare-fun e!48203 () Bool)

(assert (=> d!17117 e!48203))

(declare-fun res!39068 () Bool)

(assert (=> d!17117 (=> (not res!39068) (not e!48203))))

(declare-fun lt!33115 () ListLongMap!1403)

(assert (=> d!17117 (= res!39068 (contains!719 lt!33115 (_1!1071 (tuple2!2121 lt!32674 lt!32677))))))

(declare-fun lt!33116 () List!1483)

(assert (=> d!17117 (= lt!33115 (ListLongMap!1404 lt!33116))))

(declare-fun lt!33114 () Unit!2066)

(declare-fun lt!33113 () Unit!2066)

(assert (=> d!17117 (= lt!33114 lt!33113)))

(assert (=> d!17117 (= (getValueByKey!131 lt!33116 (_1!1071 (tuple2!2121 lt!32674 lt!32677))) (Some!136 (_2!1071 (tuple2!2121 lt!32674 lt!32677))))))

(assert (=> d!17117 (= lt!33113 (lemmaContainsTupThenGetReturnValue!51 lt!33116 (_1!1071 (tuple2!2121 lt!32674 lt!32677)) (_2!1071 (tuple2!2121 lt!32674 lt!32677))))))

(assert (=> d!17117 (= lt!33116 (insertStrictlySorted!54 (toList!717 lt!32679) (_1!1071 (tuple2!2121 lt!32674 lt!32677)) (_2!1071 (tuple2!2121 lt!32674 lt!32677))))))

(assert (=> d!17117 (= (+!93 lt!32679 (tuple2!2121 lt!32674 lt!32677)) lt!33115)))

(declare-fun b!73739 () Bool)

(declare-fun res!39067 () Bool)

(assert (=> b!73739 (=> (not res!39067) (not e!48203))))

(assert (=> b!73739 (= res!39067 (= (getValueByKey!131 (toList!717 lt!33115) (_1!1071 (tuple2!2121 lt!32674 lt!32677))) (Some!136 (_2!1071 (tuple2!2121 lt!32674 lt!32677)))))))

(declare-fun b!73740 () Bool)

(assert (=> b!73740 (= e!48203 (contains!722 (toList!717 lt!33115) (tuple2!2121 lt!32674 lt!32677)))))

(assert (= (and d!17117 res!39068) b!73739))

(assert (= (and b!73739 res!39067) b!73740))

(declare-fun m!72317 () Bool)

(assert (=> d!17117 m!72317))

(declare-fun m!72319 () Bool)

(assert (=> d!17117 m!72319))

(declare-fun m!72321 () Bool)

(assert (=> d!17117 m!72321))

(declare-fun m!72323 () Bool)

(assert (=> d!17117 m!72323))

(declare-fun m!72325 () Bool)

(assert (=> b!73739 m!72325))

(declare-fun m!72327 () Bool)

(assert (=> b!73740 m!72327))

(assert (=> b!73129 d!17117))

(declare-fun d!17119 () Bool)

(assert (=> d!17119 (not (contains!719 (+!93 lt!32679 (tuple2!2121 lt!32674 lt!32677)) lt!32675))))

(declare-fun lt!33117 () Unit!2066)

(assert (=> d!17119 (= lt!33117 (choose!423 lt!32679 lt!32674 lt!32677 lt!32675))))

(declare-fun e!48204 () Bool)

(assert (=> d!17119 e!48204))

(declare-fun res!39069 () Bool)

(assert (=> d!17119 (=> (not res!39069) (not e!48204))))

(assert (=> d!17119 (= res!39069 (not (contains!719 lt!32679 lt!32675)))))

(assert (=> d!17119 (= (addStillNotContains!25 lt!32679 lt!32674 lt!32677 lt!32675) lt!33117)))

(declare-fun b!73741 () Bool)

(assert (=> b!73741 (= e!48204 (not (= lt!32674 lt!32675)))))

(assert (= (and d!17119 res!39069) b!73741))

(assert (=> d!17119 m!71181))

(assert (=> d!17119 m!71181))

(assert (=> d!17119 m!71187))

(declare-fun m!72329 () Bool)

(assert (=> d!17119 m!72329))

(declare-fun m!72331 () Bool)

(assert (=> d!17119 m!72331))

(assert (=> b!73129 d!17119))

(declare-fun d!17121 () Bool)

(declare-fun e!48206 () Bool)

(assert (=> d!17121 e!48206))

(declare-fun res!39070 () Bool)

(assert (=> d!17121 (=> res!39070 e!48206)))

(declare-fun lt!33121 () Bool)

(assert (=> d!17121 (= res!39070 (not lt!33121))))

(declare-fun lt!33119 () Bool)

(assert (=> d!17121 (= lt!33121 lt!33119)))

(declare-fun lt!33118 () Unit!2066)

(declare-fun e!48205 () Unit!2066)

(assert (=> d!17121 (= lt!33118 e!48205)))

(declare-fun c!11007 () Bool)

(assert (=> d!17121 (= c!11007 lt!33119)))

(assert (=> d!17121 (= lt!33119 (containsKey!135 (toList!717 (+!93 lt!32679 (tuple2!2121 lt!32674 lt!32677))) lt!32675))))

(assert (=> d!17121 (= (contains!719 (+!93 lt!32679 (tuple2!2121 lt!32674 lt!32677)) lt!32675) lt!33121)))

(declare-fun b!73742 () Bool)

(declare-fun lt!33120 () Unit!2066)

(assert (=> b!73742 (= e!48205 lt!33120)))

(assert (=> b!73742 (= lt!33120 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (+!93 lt!32679 (tuple2!2121 lt!32674 lt!32677))) lt!32675))))

(assert (=> b!73742 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32679 (tuple2!2121 lt!32674 lt!32677))) lt!32675))))

(declare-fun b!73743 () Bool)

(declare-fun Unit!2107 () Unit!2066)

(assert (=> b!73743 (= e!48205 Unit!2107)))

(declare-fun b!73744 () Bool)

(assert (=> b!73744 (= e!48206 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32679 (tuple2!2121 lt!32674 lt!32677))) lt!32675)))))

(assert (= (and d!17121 c!11007) b!73742))

(assert (= (and d!17121 (not c!11007)) b!73743))

(assert (= (and d!17121 (not res!39070)) b!73744))

(declare-fun m!72333 () Bool)

(assert (=> d!17121 m!72333))

(declare-fun m!72335 () Bool)

(assert (=> b!73742 m!72335))

(declare-fun m!72337 () Bool)

(assert (=> b!73742 m!72337))

(assert (=> b!73742 m!72337))

(declare-fun m!72339 () Bool)

(assert (=> b!73742 m!72339))

(assert (=> b!73744 m!72337))

(assert (=> b!73744 m!72337))

(assert (=> b!73744 m!72339))

(assert (=> b!73129 d!17121))

(declare-fun d!17123 () Bool)

(declare-fun e!48207 () Bool)

(assert (=> d!17123 e!48207))

(declare-fun res!39072 () Bool)

(assert (=> d!17123 (=> (not res!39072) (not e!48207))))

(declare-fun lt!33124 () ListLongMap!1403)

(assert (=> d!17123 (= res!39072 (contains!719 lt!33124 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!33125 () List!1483)

(assert (=> d!17123 (= lt!33124 (ListLongMap!1404 lt!33125))))

(declare-fun lt!33123 () Unit!2066)

(declare-fun lt!33122 () Unit!2066)

(assert (=> d!17123 (= lt!33123 lt!33122)))

(assert (=> d!17123 (= (getValueByKey!131 lt!33125 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17123 (= lt!33122 (lemmaContainsTupThenGetReturnValue!51 lt!33125 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17123 (= lt!33125 (insertStrictlySorted!54 (toList!717 call!6428) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17123 (= (+!93 call!6428 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!33124)))

(declare-fun b!73745 () Bool)

(declare-fun res!39071 () Bool)

(assert (=> b!73745 (=> (not res!39071) (not e!48207))))

(assert (=> b!73745 (= res!39071 (= (getValueByKey!131 (toList!717 lt!33124) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!73746 () Bool)

(assert (=> b!73746 (= e!48207 (contains!722 (toList!717 lt!33124) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17123 res!39072) b!73745))

(assert (= (and b!73745 res!39071) b!73746))

(declare-fun m!72341 () Bool)

(assert (=> d!17123 m!72341))

(declare-fun m!72343 () Bool)

(assert (=> d!17123 m!72343))

(declare-fun m!72345 () Bool)

(assert (=> d!17123 m!72345))

(declare-fun m!72347 () Bool)

(assert (=> d!17123 m!72347))

(declare-fun m!72349 () Bool)

(assert (=> b!73745 m!72349))

(declare-fun m!72351 () Bool)

(assert (=> b!73746 m!72351))

(assert (=> b!73129 d!17123))

(declare-fun d!17125 () Bool)

(declare-fun res!39073 () Bool)

(declare-fun e!48208 () Bool)

(assert (=> d!17125 (=> res!39073 e!48208)))

(assert (=> d!17125 (= res!39073 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32616)))))

(assert (=> d!17125 (= (containsKey!135 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616) e!48208)))

(declare-fun b!73747 () Bool)

(declare-fun e!48209 () Bool)

(assert (=> b!73747 (= e!48208 e!48209)))

(declare-fun res!39074 () Bool)

(assert (=> b!73747 (=> (not res!39074) (not e!48209))))

(assert (=> b!73747 (= res!39074 (and (or (not ((_ is Cons!1479) (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) (bvsle (_1!1071 (h!2066 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32616)) ((_ is Cons!1479) (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (bvslt (_1!1071 (h!2066 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32616)))))

(declare-fun b!73748 () Bool)

(assert (=> b!73748 (= e!48209 (containsKey!135 (t!5031 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) lt!32616))))

(assert (= (and d!17125 (not res!39073)) b!73747))

(assert (= (and b!73747 res!39074) b!73748))

(declare-fun m!72353 () Bool)

(assert (=> b!73748 m!72353))

(assert (=> d!16953 d!17125))

(declare-fun d!17127 () Bool)

(assert (=> d!17127 (isDefined!85 (getValueByKey!131 (toList!717 lt!32672) (_1!1071 lt!32383)))))

(declare-fun lt!33126 () Unit!2066)

(assert (=> d!17127 (= lt!33126 (choose!426 (toList!717 lt!32672) (_1!1071 lt!32383)))))

(declare-fun e!48210 () Bool)

(assert (=> d!17127 e!48210))

(declare-fun res!39075 () Bool)

(assert (=> d!17127 (=> (not res!39075) (not e!48210))))

(assert (=> d!17127 (= res!39075 (isStrictlySorted!287 (toList!717 lt!32672)))))

(assert (=> d!17127 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32672) (_1!1071 lt!32383)) lt!33126)))

(declare-fun b!73749 () Bool)

(assert (=> b!73749 (= e!48210 (containsKey!135 (toList!717 lt!32672) (_1!1071 lt!32383)))))

(assert (= (and d!17127 res!39075) b!73749))

(assert (=> d!17127 m!71157))

(assert (=> d!17127 m!71157))

(assert (=> d!17127 m!71473))

(declare-fun m!72355 () Bool)

(assert (=> d!17127 m!72355))

(declare-fun m!72357 () Bool)

(assert (=> d!17127 m!72357))

(assert (=> b!73749 m!71469))

(assert (=> b!73284 d!17127))

(declare-fun d!17129 () Bool)

(assert (=> d!17129 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32672) (_1!1071 lt!32383))) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32672) (_1!1071 lt!32383)))))))

(declare-fun bs!3172 () Bool)

(assert (= bs!3172 d!17129))

(assert (=> bs!3172 m!71157))

(declare-fun m!72359 () Bool)

(assert (=> bs!3172 m!72359))

(assert (=> b!73284 d!17129))

(assert (=> b!73284 d!16833))

(assert (=> b!73508 d!17089))

(declare-fun d!17131 () Bool)

(declare-fun res!39076 () Bool)

(declare-fun e!48211 () Bool)

(assert (=> d!17131 (=> res!39076 e!48211)))

(assert (=> d!17131 (= res!39076 (and ((_ is Cons!1479) (toList!717 lt!32639)) (= (_1!1071 (h!2066 (toList!717 lt!32639))) (_1!1071 lt!32376))))))

(assert (=> d!17131 (= (containsKey!135 (toList!717 lt!32639) (_1!1071 lt!32376)) e!48211)))

(declare-fun b!73750 () Bool)

(declare-fun e!48212 () Bool)

(assert (=> b!73750 (= e!48211 e!48212)))

(declare-fun res!39077 () Bool)

(assert (=> b!73750 (=> (not res!39077) (not e!48212))))

(assert (=> b!73750 (= res!39077 (and (or (not ((_ is Cons!1479) (toList!717 lt!32639))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32639))) (_1!1071 lt!32376))) ((_ is Cons!1479) (toList!717 lt!32639)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32639))) (_1!1071 lt!32376))))))

(declare-fun b!73751 () Bool)

(assert (=> b!73751 (= e!48212 (containsKey!135 (t!5031 (toList!717 lt!32639)) (_1!1071 lt!32376)))))

(assert (= (and d!17131 (not res!39076)) b!73750))

(assert (= (and b!73750 res!39077) b!73751))

(declare-fun m!72361 () Bool)

(assert (=> b!73751 m!72361))

(assert (=> d!16807 d!17131))

(declare-fun d!17133 () Bool)

(declare-fun e!48214 () Bool)

(assert (=> d!17133 e!48214))

(declare-fun res!39078 () Bool)

(assert (=> d!17133 (=> res!39078 e!48214)))

(declare-fun lt!33130 () Bool)

(assert (=> d!17133 (= res!39078 (not lt!33130))))

(declare-fun lt!33128 () Bool)

(assert (=> d!17133 (= lt!33130 lt!33128)))

(declare-fun lt!33127 () Unit!2066)

(declare-fun e!48213 () Unit!2066)

(assert (=> d!17133 (= lt!33127 e!48213)))

(declare-fun c!11008 () Bool)

(assert (=> d!17133 (= c!11008 lt!33128)))

(assert (=> d!17133 (= lt!33128 (containsKey!135 (toList!717 lt!32678) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17133 (= (contains!719 lt!32678 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33130)))

(declare-fun b!73752 () Bool)

(declare-fun lt!33129 () Unit!2066)

(assert (=> b!73752 (= e!48213 lt!33129)))

(assert (=> b!73752 (= lt!33129 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32678) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73752 (isDefined!85 (getValueByKey!131 (toList!717 lt!32678) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73753 () Bool)

(declare-fun Unit!2108 () Unit!2066)

(assert (=> b!73753 (= e!48213 Unit!2108)))

(declare-fun b!73754 () Bool)

(assert (=> b!73754 (= e!48214 (isDefined!85 (getValueByKey!131 (toList!717 lt!32678) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17133 c!11008) b!73752))

(assert (= (and d!17133 (not c!11008)) b!73753))

(assert (= (and d!17133 (not res!39078)) b!73754))

(declare-fun m!72363 () Bool)

(assert (=> d!17133 m!72363))

(declare-fun m!72365 () Bool)

(assert (=> b!73752 m!72365))

(declare-fun m!72367 () Bool)

(assert (=> b!73752 m!72367))

(assert (=> b!73752 m!72367))

(declare-fun m!72369 () Bool)

(assert (=> b!73752 m!72369))

(assert (=> b!73754 m!72367))

(assert (=> b!73754 m!72367))

(assert (=> b!73754 m!72369))

(assert (=> d!16789 d!17133))

(assert (=> d!16789 d!16781))

(declare-fun b!73755 () Bool)

(declare-fun e!48215 () Option!137)

(assert (=> b!73755 (= e!48215 (Some!136 (_2!1071 (h!2066 (t!5031 (toList!717 lt!32639))))))))

(declare-fun b!73758 () Bool)

(declare-fun e!48216 () Option!137)

(assert (=> b!73758 (= e!48216 None!135)))

(declare-fun b!73757 () Bool)

(assert (=> b!73757 (= e!48216 (getValueByKey!131 (t!5031 (t!5031 (toList!717 lt!32639))) (_1!1071 lt!32376)))))

(declare-fun d!17135 () Bool)

(declare-fun c!11009 () Bool)

(assert (=> d!17135 (= c!11009 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32639))) (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32639)))) (_1!1071 lt!32376))))))

(assert (=> d!17135 (= (getValueByKey!131 (t!5031 (toList!717 lt!32639)) (_1!1071 lt!32376)) e!48215)))

(declare-fun b!73756 () Bool)

(assert (=> b!73756 (= e!48215 e!48216)))

(declare-fun c!11010 () Bool)

(assert (=> b!73756 (= c!11010 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32639))) (not (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32639)))) (_1!1071 lt!32376)))))))

(assert (= (and d!17135 c!11009) b!73755))

(assert (= (and d!17135 (not c!11009)) b!73756))

(assert (= (and b!73756 c!11010) b!73757))

(assert (= (and b!73756 (not c!11010)) b!73758))

(declare-fun m!72371 () Bool)

(assert (=> b!73757 m!72371))

(assert (=> b!73305 d!17135))

(declare-fun b!73759 () Bool)

(declare-fun e!48217 () Option!137)

(assert (=> b!73759 (= e!48217 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32683)))))))

(declare-fun b!73762 () Bool)

(declare-fun e!48218 () Option!137)

(assert (=> b!73762 (= e!48218 None!135)))

(declare-fun b!73761 () Bool)

(assert (=> b!73761 (= e!48218 (getValueByKey!131 (t!5031 (toList!717 lt!32683)) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17137 () Bool)

(declare-fun c!11011 () Bool)

(assert (=> d!17137 (= c!11011 (and ((_ is Cons!1479) (toList!717 lt!32683)) (= (_1!1071 (h!2066 (toList!717 lt!32683))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17137 (= (getValueByKey!131 (toList!717 lt!32683) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48217)))

(declare-fun b!73760 () Bool)

(assert (=> b!73760 (= e!48217 e!48218)))

(declare-fun c!11012 () Bool)

(assert (=> b!73760 (= c!11012 (and ((_ is Cons!1479) (toList!717 lt!32683)) (not (= (_1!1071 (h!2066 (toList!717 lt!32683))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17137 c!11011) b!73759))

(assert (= (and d!17137 (not c!11011)) b!73760))

(assert (= (and b!73760 c!11012) b!73761))

(assert (= (and b!73760 (not c!11012)) b!73762))

(declare-fun m!72373 () Bool)

(assert (=> b!73761 m!72373))

(assert (=> b!73132 d!17137))

(declare-fun b!73763 () Bool)

(declare-fun e!48219 () Option!137)

(assert (=> b!73763 (= e!48219 (Some!136 (_2!1071 (h!2066 (t!5031 (toList!717 lt!32375))))))))

(declare-fun b!73766 () Bool)

(declare-fun e!48220 () Option!137)

(assert (=> b!73766 (= e!48220 None!135)))

(declare-fun b!73765 () Bool)

(assert (=> b!73765 (= e!48220 (getValueByKey!131 (t!5031 (t!5031 (toList!717 lt!32375))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun d!17139 () Bool)

(declare-fun c!11013 () Bool)

(assert (=> d!17139 (= c!11013 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32375))) (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32375)))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (=> d!17139 (= (getValueByKey!131 (t!5031 (toList!717 lt!32375)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) e!48219)))

(declare-fun b!73764 () Bool)

(assert (=> b!73764 (= e!48219 e!48220)))

(declare-fun c!11014 () Bool)

(assert (=> b!73764 (= c!11014 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32375))) (not (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32375)))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))))

(assert (= (and d!17139 c!11013) b!73763))

(assert (= (and d!17139 (not c!11013)) b!73764))

(assert (= (and b!73764 c!11014) b!73765))

(assert (= (and b!73764 (not c!11014)) b!73766))

(assert (=> b!73765 m!70791))

(declare-fun m!72375 () Bool)

(assert (=> b!73765 m!72375))

(assert (=> b!73445 d!17139))

(assert (=> d!16931 d!16975))

(declare-fun b!73783 () Bool)

(declare-fun res!39088 () Bool)

(declare-fun e!48230 () Bool)

(assert (=> b!73783 (=> (not res!39088) (not e!48230))))

(declare-fun lt!33133 () SeekEntryResult!239)

(assert (=> b!73783 (= res!39088 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3090 lt!33133)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73784 () Bool)

(declare-fun e!48229 () Bool)

(declare-fun e!48231 () Bool)

(assert (=> b!73784 (= e!48229 e!48231)))

(declare-fun res!39087 () Bool)

(declare-fun call!6512 () Bool)

(assert (=> b!73784 (= res!39087 call!6512)))

(assert (=> b!73784 (=> (not res!39087) (not e!48231))))

(declare-fun b!73785 () Bool)

(declare-fun res!39089 () Bool)

(assert (=> b!73785 (= res!39089 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3087 lt!33133)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73785 (=> (not res!39089) (not e!48231))))

(declare-fun b!73786 () Bool)

(declare-fun res!39090 () Bool)

(assert (=> b!73786 (=> (not res!39090) (not e!48230))))

(assert (=> b!73786 (= res!39090 call!6512)))

(declare-fun e!48232 () Bool)

(assert (=> b!73786 (= e!48232 e!48230)))

(declare-fun b!73787 () Bool)

(declare-fun call!6513 () Bool)

(assert (=> b!73787 (= e!48230 (not call!6513))))

(declare-fun b!73788 () Bool)

(assert (=> b!73788 (= e!48231 (not call!6513))))

(declare-fun b!73789 () Bool)

(assert (=> b!73789 (= e!48229 e!48232)))

(declare-fun c!11019 () Bool)

(assert (=> b!73789 (= c!11019 ((_ is MissingVacant!239) lt!33133))))

(declare-fun b!73790 () Bool)

(assert (=> b!73790 (= e!48232 ((_ is Undefined!239) lt!33133))))

(declare-fun bm!6510 () Bool)

(assert (=> bm!6510 (= call!6513 (arrayContainsKey!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!17141 () Bool)

(assert (=> d!17141 e!48229))

(declare-fun c!11020 () Bool)

(assert (=> d!17141 (= c!11020 ((_ is MissingZero!239) lt!33133))))

(assert (=> d!17141 (= lt!33133 (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(assert (=> d!17141 true))

(declare-fun _$34!807 () Unit!2066)

(assert (=> d!17141 (= (choose!427 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)) _$34!807)))

(declare-fun bm!6509 () Bool)

(assert (=> bm!6509 (= call!6512 (inRange!0 (ite c!11020 (index!3087 lt!33133) (index!3090 lt!33133)) (mask!6178 newMap!16)))))

(assert (= (and d!17141 c!11020) b!73784))

(assert (= (and d!17141 (not c!11020)) b!73789))

(assert (= (and b!73784 res!39087) b!73785))

(assert (= (and b!73785 res!39089) b!73788))

(assert (= (and b!73789 c!11019) b!73786))

(assert (= (and b!73789 (not c!11019)) b!73790))

(assert (= (and b!73786 res!39090) b!73783))

(assert (= (and b!73783 res!39088) b!73787))

(assert (= (or b!73784 b!73786) bm!6509))

(assert (= (or b!73788 b!73787) bm!6510))

(assert (=> bm!6510 m!70791))

(assert (=> bm!6510 m!71005))

(assert (=> d!17141 m!70791))

(assert (=> d!17141 m!70979))

(declare-fun m!72377 () Bool)

(assert (=> bm!6509 m!72377))

(declare-fun m!72379 () Bool)

(assert (=> b!73785 m!72379))

(declare-fun m!72381 () Bool)

(assert (=> b!73783 m!72381))

(assert (=> d!16931 d!17141))

(assert (=> d!16931 d!17001))

(declare-fun d!17143 () Bool)

(assert (=> d!17143 (= (apply!75 lt!32919 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1147 (getValueByKey!131 (toList!717 lt!32919) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3173 () Bool)

(assert (= bs!3173 d!17143))

(declare-fun m!72383 () Bool)

(assert (=> bs!3173 m!72383))

(assert (=> bs!3173 m!72383))

(declare-fun m!72385 () Bool)

(assert (=> bs!3173 m!72385))

(assert (=> b!73440 d!17143))

(declare-fun d!17145 () Bool)

(declare-fun res!39091 () Bool)

(declare-fun e!48233 () Bool)

(assert (=> d!17145 (=> res!39091 e!48233)))

(assert (=> d!17145 (= res!39091 (and ((_ is Cons!1479) (toList!717 lt!32663)) (= (_1!1071 (h!2066 (toList!717 lt!32663))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17145 (= (containsKey!135 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000) e!48233)))

(declare-fun b!73791 () Bool)

(declare-fun e!48234 () Bool)

(assert (=> b!73791 (= e!48233 e!48234)))

(declare-fun res!39092 () Bool)

(assert (=> b!73791 (=> (not res!39092) (not e!48234))))

(assert (=> b!73791 (= res!39092 (and (or (not ((_ is Cons!1479) (toList!717 lt!32663))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32663))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1479) (toList!717 lt!32663)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32663))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73792 () Bool)

(assert (=> b!73792 (= e!48234 (containsKey!135 (t!5031 (toList!717 lt!32663)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17145 (not res!39091)) b!73791))

(assert (= (and b!73791 res!39092) b!73792))

(declare-fun m!72387 () Bool)

(assert (=> b!73792 m!72387))

(assert (=> d!16843 d!17145))

(declare-fun d!17147 () Bool)

(assert (=> d!17147 (= (get!1147 (getValueByKey!131 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2529 (getValueByKey!131 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16837 d!17147))

(assert (=> d!16837 d!16989))

(declare-fun d!17149 () Bool)

(assert (=> d!17149 (= (content!78 Nil!1481) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!16895 d!17149))

(declare-fun b!73793 () Bool)

(declare-fun e!48243 () Bool)

(declare-fun e!48242 () Bool)

(assert (=> b!73793 (= e!48243 e!48242)))

(declare-fun res!39095 () Bool)

(declare-fun call!6516 () Bool)

(assert (=> b!73793 (= res!39095 call!6516)))

(assert (=> b!73793 (=> (not res!39095) (not e!48242))))

(declare-fun b!73794 () Bool)

(declare-fun e!48240 () ListLongMap!1403)

(declare-fun call!6515 () ListLongMap!1403)

(assert (=> b!73794 (= e!48240 call!6515)))

(declare-fun b!73795 () Bool)

(declare-fun e!48235 () Bool)

(assert (=> b!73795 (= e!48235 e!48243)))

(declare-fun c!11022 () Bool)

(assert (=> b!73795 (= c!11022 (not (= (bvand (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!73796 () Bool)

(declare-fun e!48241 () Bool)

(declare-fun call!6518 () Bool)

(assert (=> b!73796 (= e!48241 (not call!6518))))

(declare-fun b!73797 () Bool)

(declare-fun e!48246 () ListLongMap!1403)

(declare-fun call!6520 () ListLongMap!1403)

(assert (=> b!73797 (= e!48246 call!6520)))

(declare-fun b!73799 () Bool)

(declare-fun e!48237 () Bool)

(assert (=> b!73799 (= e!48241 e!48237)))

(declare-fun res!39098 () Bool)

(assert (=> b!73799 (= res!39098 call!6518)))

(assert (=> b!73799 (=> (not res!39098) (not e!48237))))

(declare-fun bm!6511 () Bool)

(declare-fun call!6517 () ListLongMap!1403)

(declare-fun call!6519 () ListLongMap!1403)

(assert (=> bm!6511 (= call!6517 call!6519)))

(declare-fun b!73800 () Bool)

(declare-fun e!48245 () ListLongMap!1403)

(assert (=> b!73800 (= e!48245 e!48240)))

(declare-fun c!11025 () Bool)

(assert (=> b!73800 (= c!11025 (and (not (= (bvand (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6512 () Bool)

(declare-fun lt!33134 () ListLongMap!1403)

(assert (=> bm!6512 (= call!6516 (contains!719 lt!33134 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!6514 () ListLongMap!1403)

(declare-fun bm!6513 () Bool)

(declare-fun c!11026 () Bool)

(assert (=> bm!6513 (= call!6514 (+!93 (ite c!11026 call!6519 (ite c!11025 call!6517 call!6520)) (ite (or c!11026 c!11025) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (_2!1072 lt!32534))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (_2!1072 lt!32534))))))))

(declare-fun b!73801 () Bool)

(declare-fun e!48247 () Bool)

(assert (=> b!73801 (= e!48247 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000)))))

(declare-fun b!73802 () Bool)

(declare-fun res!39096 () Bool)

(assert (=> b!73802 (=> (not res!39096) (not e!48235))))

(assert (=> b!73802 (= res!39096 e!48241)))

(declare-fun c!11023 () Bool)

(assert (=> b!73802 (= c!11023 (not (= (bvand (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6514 () Bool)

(assert (=> bm!6514 (= call!6520 call!6517)))

(declare-fun b!73803 () Bool)

(declare-fun e!48238 () Bool)

(assert (=> b!73803 (= e!48238 (= (apply!75 lt!33134 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (_values!2195 (_2!1072 lt!32534))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 (_2!1072 lt!32534)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73803 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (_values!2195 (_2!1072 lt!32534)))))))

(assert (=> b!73803 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))))))

(declare-fun b!73804 () Bool)

(assert (=> b!73804 (= e!48242 (= (apply!75 lt!33134 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 (_2!1072 lt!32534))))))

(declare-fun bm!6515 () Bool)

(assert (=> bm!6515 (= call!6518 (contains!719 lt!33134 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73805 () Bool)

(declare-fun e!48244 () Bool)

(assert (=> b!73805 (= e!48244 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000)))))

(declare-fun b!73798 () Bool)

(declare-fun e!48236 () Unit!2066)

(declare-fun lt!33141 () Unit!2066)

(assert (=> b!73798 (= e!48236 lt!33141)))

(declare-fun lt!33153 () ListLongMap!1403)

(assert (=> b!73798 (= lt!33153 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (_2!1072 lt!32534)) (_values!2195 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534)) (extraKeys!2071 (_2!1072 lt!32534)) (zeroValue!2114 (_2!1072 lt!32534)) (minValue!2114 (_2!1072 lt!32534)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32534))))))

(declare-fun lt!33143 () (_ BitVec 64))

(assert (=> b!73798 (= lt!33143 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33146 () (_ BitVec 64))

(assert (=> b!73798 (= lt!33146 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000))))

(declare-fun lt!33152 () Unit!2066)

(assert (=> b!73798 (= lt!33152 (addStillContains!51 lt!33153 lt!33143 (zeroValue!2114 (_2!1072 lt!32534)) lt!33146))))

(assert (=> b!73798 (contains!719 (+!93 lt!33153 (tuple2!2121 lt!33143 (zeroValue!2114 (_2!1072 lt!32534)))) lt!33146)))

(declare-fun lt!33147 () Unit!2066)

(assert (=> b!73798 (= lt!33147 lt!33152)))

(declare-fun lt!33140 () ListLongMap!1403)

(assert (=> b!73798 (= lt!33140 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (_2!1072 lt!32534)) (_values!2195 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534)) (extraKeys!2071 (_2!1072 lt!32534)) (zeroValue!2114 (_2!1072 lt!32534)) (minValue!2114 (_2!1072 lt!32534)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32534))))))

(declare-fun lt!33150 () (_ BitVec 64))

(assert (=> b!73798 (= lt!33150 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33149 () (_ BitVec 64))

(assert (=> b!73798 (= lt!33149 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000))))

(declare-fun lt!33142 () Unit!2066)

(assert (=> b!73798 (= lt!33142 (addApplyDifferent!51 lt!33140 lt!33150 (minValue!2114 (_2!1072 lt!32534)) lt!33149))))

(assert (=> b!73798 (= (apply!75 (+!93 lt!33140 (tuple2!2121 lt!33150 (minValue!2114 (_2!1072 lt!32534)))) lt!33149) (apply!75 lt!33140 lt!33149))))

(declare-fun lt!33154 () Unit!2066)

(assert (=> b!73798 (= lt!33154 lt!33142)))

(declare-fun lt!33151 () ListLongMap!1403)

(assert (=> b!73798 (= lt!33151 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (_2!1072 lt!32534)) (_values!2195 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534)) (extraKeys!2071 (_2!1072 lt!32534)) (zeroValue!2114 (_2!1072 lt!32534)) (minValue!2114 (_2!1072 lt!32534)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32534))))))

(declare-fun lt!33155 () (_ BitVec 64))

(assert (=> b!73798 (= lt!33155 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33138 () (_ BitVec 64))

(assert (=> b!73798 (= lt!33138 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000))))

(declare-fun lt!33136 () Unit!2066)

(assert (=> b!73798 (= lt!33136 (addApplyDifferent!51 lt!33151 lt!33155 (zeroValue!2114 (_2!1072 lt!32534)) lt!33138))))

(assert (=> b!73798 (= (apply!75 (+!93 lt!33151 (tuple2!2121 lt!33155 (zeroValue!2114 (_2!1072 lt!32534)))) lt!33138) (apply!75 lt!33151 lt!33138))))

(declare-fun lt!33144 () Unit!2066)

(assert (=> b!73798 (= lt!33144 lt!33136)))

(declare-fun lt!33137 () ListLongMap!1403)

(assert (=> b!73798 (= lt!33137 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (_2!1072 lt!32534)) (_values!2195 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534)) (extraKeys!2071 (_2!1072 lt!32534)) (zeroValue!2114 (_2!1072 lt!32534)) (minValue!2114 (_2!1072 lt!32534)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32534))))))

(declare-fun lt!33139 () (_ BitVec 64))

(assert (=> b!73798 (= lt!33139 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33148 () (_ BitVec 64))

(assert (=> b!73798 (= lt!33148 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000))))

(assert (=> b!73798 (= lt!33141 (addApplyDifferent!51 lt!33137 lt!33139 (minValue!2114 (_2!1072 lt!32534)) lt!33148))))

(assert (=> b!73798 (= (apply!75 (+!93 lt!33137 (tuple2!2121 lt!33139 (minValue!2114 (_2!1072 lt!32534)))) lt!33148) (apply!75 lt!33137 lt!33148))))

(declare-fun d!17151 () Bool)

(assert (=> d!17151 e!48235))

(declare-fun res!39094 () Bool)

(assert (=> d!17151 (=> (not res!39094) (not e!48235))))

(assert (=> d!17151 (= res!39094 (or (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))))))))

(declare-fun lt!33145 () ListLongMap!1403)

(assert (=> d!17151 (= lt!33134 lt!33145)))

(declare-fun lt!33135 () Unit!2066)

(assert (=> d!17151 (= lt!33135 e!48236)))

(declare-fun c!11021 () Bool)

(assert (=> d!17151 (= c!11021 e!48244)))

(declare-fun res!39097 () Bool)

(assert (=> d!17151 (=> (not res!39097) (not e!48244))))

(assert (=> d!17151 (= res!39097 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))))))

(assert (=> d!17151 (= lt!33145 e!48245)))

(assert (=> d!17151 (= c!11026 (and (not (= (bvand (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17151 (validMask!0 (mask!6178 (_2!1072 lt!32534)))))

(assert (=> d!17151 (= (getCurrentListMap!410 (_keys!3863 (_2!1072 lt!32534)) (_values!2195 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534)) (extraKeys!2071 (_2!1072 lt!32534)) (zeroValue!2114 (_2!1072 lt!32534)) (minValue!2114 (_2!1072 lt!32534)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32534))) lt!33134)))

(declare-fun b!73806 () Bool)

(assert (=> b!73806 (= e!48245 (+!93 call!6514 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (_2!1072 lt!32534)))))))

(declare-fun b!73807 () Bool)

(declare-fun c!11024 () Bool)

(assert (=> b!73807 (= c!11024 (and (not (= (bvand (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!73807 (= e!48240 e!48246)))

(declare-fun b!73808 () Bool)

(assert (=> b!73808 (= e!48246 call!6515)))

(declare-fun b!73809 () Bool)

(assert (=> b!73809 (= e!48243 (not call!6516))))

(declare-fun b!73810 () Bool)

(declare-fun e!48239 () Bool)

(assert (=> b!73810 (= e!48239 e!48238)))

(declare-fun res!39099 () Bool)

(assert (=> b!73810 (=> (not res!39099) (not e!48238))))

(assert (=> b!73810 (= res!39099 (contains!719 lt!33134 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000)))))

(assert (=> b!73810 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))))))

(declare-fun b!73811 () Bool)

(assert (=> b!73811 (= e!48237 (= (apply!75 lt!33134 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 (_2!1072 lt!32534))))))

(declare-fun b!73812 () Bool)

(declare-fun Unit!2109 () Unit!2066)

(assert (=> b!73812 (= e!48236 Unit!2109)))

(declare-fun bm!6516 () Bool)

(assert (=> bm!6516 (= call!6515 call!6514)))

(declare-fun b!73813 () Bool)

(declare-fun res!39093 () Bool)

(assert (=> b!73813 (=> (not res!39093) (not e!48235))))

(assert (=> b!73813 (= res!39093 e!48239)))

(declare-fun res!39101 () Bool)

(assert (=> b!73813 (=> res!39101 e!48239)))

(assert (=> b!73813 (= res!39101 (not e!48247))))

(declare-fun res!39100 () Bool)

(assert (=> b!73813 (=> (not res!39100) (not e!48247))))

(assert (=> b!73813 (= res!39100 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))))))

(declare-fun bm!6517 () Bool)

(assert (=> bm!6517 (= call!6519 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (_2!1072 lt!32534)) (_values!2195 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534)) (extraKeys!2071 (_2!1072 lt!32534)) (zeroValue!2114 (_2!1072 lt!32534)) (minValue!2114 (_2!1072 lt!32534)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32534))))))

(assert (= (and d!17151 c!11026) b!73806))

(assert (= (and d!17151 (not c!11026)) b!73800))

(assert (= (and b!73800 c!11025) b!73794))

(assert (= (and b!73800 (not c!11025)) b!73807))

(assert (= (and b!73807 c!11024) b!73808))

(assert (= (and b!73807 (not c!11024)) b!73797))

(assert (= (or b!73808 b!73797) bm!6514))

(assert (= (or b!73794 bm!6514) bm!6511))

(assert (= (or b!73794 b!73808) bm!6516))

(assert (= (or b!73806 bm!6511) bm!6517))

(assert (= (or b!73806 bm!6516) bm!6513))

(assert (= (and d!17151 res!39097) b!73805))

(assert (= (and d!17151 c!11021) b!73798))

(assert (= (and d!17151 (not c!11021)) b!73812))

(assert (= (and d!17151 res!39094) b!73813))

(assert (= (and b!73813 res!39100) b!73801))

(assert (= (and b!73813 (not res!39101)) b!73810))

(assert (= (and b!73810 res!39099) b!73803))

(assert (= (and b!73813 res!39093) b!73802))

(assert (= (and b!73802 c!11023) b!73799))

(assert (= (and b!73802 (not c!11023)) b!73796))

(assert (= (and b!73799 res!39098) b!73811))

(assert (= (or b!73799 b!73796) bm!6515))

(assert (= (and b!73802 res!39096) b!73795))

(assert (= (and b!73795 c!11022) b!73793))

(assert (= (and b!73795 (not c!11022)) b!73809))

(assert (= (and b!73793 res!39095) b!73804))

(assert (= (or b!73793 b!73809) bm!6512))

(declare-fun b_lambda!3305 () Bool)

(assert (=> (not b_lambda!3305) (not b!73803)))

(declare-fun tb!1537 () Bool)

(declare-fun t!5049 () Bool)

(assert (=> (and b!72681 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 (_2!1072 lt!32534))) t!5049) tb!1537))

(declare-fun result!2693 () Bool)

(assert (=> tb!1537 (= result!2693 tp_is_empty!2473)))

(assert (=> b!73803 t!5049))

(declare-fun b_and!4517 () Bool)

(assert (= b_and!4513 (and (=> t!5049 result!2693) b_and!4517)))

(declare-fun t!5051 () Bool)

(declare-fun tb!1539 () Bool)

(assert (=> (and b!72667 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (_2!1072 lt!32534))) t!5051) tb!1539))

(declare-fun result!2695 () Bool)

(assert (= result!2695 result!2693))

(assert (=> b!73803 t!5051))

(declare-fun b_and!4519 () Bool)

(assert (= b_and!4515 (and (=> t!5051 result!2695) b_and!4519)))

(declare-fun m!72389 () Bool)

(assert (=> bm!6512 m!72389))

(declare-fun m!72391 () Bool)

(assert (=> b!73798 m!72391))

(declare-fun m!72393 () Bool)

(assert (=> b!73798 m!72393))

(declare-fun m!72395 () Bool)

(assert (=> b!73798 m!72395))

(declare-fun m!72397 () Bool)

(assert (=> b!73798 m!72397))

(declare-fun m!72399 () Bool)

(assert (=> b!73798 m!72399))

(declare-fun m!72401 () Bool)

(assert (=> b!73798 m!72401))

(declare-fun m!72403 () Bool)

(assert (=> b!73798 m!72403))

(declare-fun m!72405 () Bool)

(assert (=> b!73798 m!72405))

(assert (=> b!73798 m!72399))

(declare-fun m!72407 () Bool)

(assert (=> b!73798 m!72407))

(declare-fun m!72409 () Bool)

(assert (=> b!73798 m!72409))

(declare-fun m!72411 () Bool)

(assert (=> b!73798 m!72411))

(declare-fun m!72413 () Bool)

(assert (=> b!73798 m!72413))

(assert (=> b!73798 m!72405))

(declare-fun m!72415 () Bool)

(assert (=> b!73798 m!72415))

(assert (=> b!73798 m!72391))

(declare-fun m!72417 () Bool)

(assert (=> b!73798 m!72417))

(declare-fun m!72419 () Bool)

(assert (=> b!73798 m!72419))

(declare-fun m!72421 () Bool)

(assert (=> b!73798 m!72421))

(assert (=> b!73798 m!72395))

(declare-fun m!72423 () Bool)

(assert (=> b!73798 m!72423))

(declare-fun m!72425 () Bool)

(assert (=> b!73811 m!72425))

(declare-fun m!72427 () Bool)

(assert (=> b!73804 m!72427))

(assert (=> b!73801 m!72417))

(assert (=> b!73801 m!72417))

(declare-fun m!72429 () Bool)

(assert (=> b!73801 m!72429))

(declare-fun m!72431 () Bool)

(assert (=> bm!6513 m!72431))

(assert (=> b!73805 m!72417))

(assert (=> b!73805 m!72417))

(assert (=> b!73805 m!72429))

(declare-fun m!72433 () Bool)

(assert (=> d!17151 m!72433))

(declare-fun m!72435 () Bool)

(assert (=> b!73806 m!72435))

(declare-fun m!72437 () Bool)

(assert (=> bm!6515 m!72437))

(assert (=> bm!6517 m!72413))

(assert (=> b!73810 m!72417))

(assert (=> b!73810 m!72417))

(declare-fun m!72439 () Bool)

(assert (=> b!73810 m!72439))

(assert (=> b!73803 m!72417))

(declare-fun m!72441 () Bool)

(assert (=> b!73803 m!72441))

(assert (=> b!73803 m!72417))

(declare-fun m!72443 () Bool)

(assert (=> b!73803 m!72443))

(assert (=> b!73803 m!72441))

(declare-fun m!72445 () Bool)

(assert (=> b!73803 m!72445))

(declare-fun m!72447 () Bool)

(assert (=> b!73803 m!72447))

(assert (=> b!73803 m!72445))

(assert (=> d!16785 d!17151))

(declare-fun d!17153 () Bool)

(declare-fun e!48249 () Bool)

(assert (=> d!17153 e!48249))

(declare-fun res!39102 () Bool)

(assert (=> d!17153 (=> res!39102 e!48249)))

(declare-fun lt!33159 () Bool)

(assert (=> d!17153 (= res!39102 (not lt!33159))))

(declare-fun lt!33157 () Bool)

(assert (=> d!17153 (= lt!33159 lt!33157)))

(declare-fun lt!33156 () Unit!2066)

(declare-fun e!48248 () Unit!2066)

(assert (=> d!17153 (= lt!33156 e!48248)))

(declare-fun c!11027 () Bool)

(assert (=> d!17153 (= c!11027 lt!33157)))

(assert (=> d!17153 (= lt!33157 (containsKey!135 (toList!717 lt!32725) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17153 (= (contains!719 lt!32725 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33159)))

(declare-fun b!73814 () Bool)

(declare-fun lt!33158 () Unit!2066)

(assert (=> b!73814 (= e!48248 lt!33158)))

(assert (=> b!73814 (= lt!33158 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32725) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73814 (isDefined!85 (getValueByKey!131 (toList!717 lt!32725) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73815 () Bool)

(declare-fun Unit!2110 () Unit!2066)

(assert (=> b!73815 (= e!48248 Unit!2110)))

(declare-fun b!73816 () Bool)

(assert (=> b!73816 (= e!48249 (isDefined!85 (getValueByKey!131 (toList!717 lt!32725) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17153 c!11027) b!73814))

(assert (= (and d!17153 (not c!11027)) b!73815))

(assert (= (and d!17153 (not res!39102)) b!73816))

(declare-fun m!72449 () Bool)

(assert (=> d!17153 m!72449))

(declare-fun m!72451 () Bool)

(assert (=> b!73814 m!72451))

(declare-fun m!72453 () Bool)

(assert (=> b!73814 m!72453))

(assert (=> b!73814 m!72453))

(declare-fun m!72455 () Bool)

(assert (=> b!73814 m!72455))

(assert (=> b!73816 m!72453))

(assert (=> b!73816 m!72453))

(assert (=> b!73816 m!72455))

(assert (=> bm!6440 d!17153))

(declare-fun b!73829 () Bool)

(declare-fun e!48258 () SeekEntryResult!239)

(assert (=> b!73829 (= e!48258 Undefined!239)))

(declare-fun b!73830 () Bool)

(declare-fun e!48257 () SeekEntryResult!239)

(assert (=> b!73830 (= e!48258 e!48257)))

(declare-fun c!11035 () Bool)

(declare-fun lt!33164 () (_ BitVec 64))

(assert (=> b!73830 (= c!11035 (= lt!33164 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!73831 () Bool)

(declare-fun e!48256 () SeekEntryResult!239)

(assert (=> b!73831 (= e!48256 (MissingVacant!239 (index!3089 lt!33021)))))

(declare-fun b!73833 () Bool)

(declare-fun c!11034 () Bool)

(assert (=> b!73833 (= c!11034 (= lt!33164 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73833 (= e!48257 e!48256)))

(declare-fun b!73834 () Bool)

(assert (=> b!73834 (= e!48257 (Found!239 (index!3089 lt!33021)))))

(declare-fun b!73832 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!73832 (= e!48256 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11154 lt!33021) #b00000000000000000000000000000001) (nextIndex!0 (index!3089 lt!33021) (x!11154 lt!33021) (mask!6178 newMap!16)) (index!3089 lt!33021) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun d!17155 () Bool)

(declare-fun lt!33165 () SeekEntryResult!239)

(assert (=> d!17155 (and (or ((_ is Undefined!239) lt!33165) (not ((_ is Found!239) lt!33165)) (and (bvsge (index!3088 lt!33165) #b00000000000000000000000000000000) (bvslt (index!3088 lt!33165) (size!2085 (_keys!3863 newMap!16))))) (or ((_ is Undefined!239) lt!33165) ((_ is Found!239) lt!33165) (not ((_ is MissingVacant!239) lt!33165)) (not (= (index!3090 lt!33165) (index!3089 lt!33021))) (and (bvsge (index!3090 lt!33165) #b00000000000000000000000000000000) (bvslt (index!3090 lt!33165) (size!2085 (_keys!3863 newMap!16))))) (or ((_ is Undefined!239) lt!33165) (ite ((_ is Found!239) lt!33165) (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!33165)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (and ((_ is MissingVacant!239) lt!33165) (= (index!3090 lt!33165) (index!3089 lt!33021)) (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3090 lt!33165)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!17155 (= lt!33165 e!48258)))

(declare-fun c!11036 () Bool)

(assert (=> d!17155 (= c!11036 (bvsge (x!11154 lt!33021) #b01111111111111111111111111111110))))

(assert (=> d!17155 (= lt!33164 (select (arr!1846 (_keys!3863 newMap!16)) (index!3089 lt!33021)))))

(assert (=> d!17155 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17155 (= (seekKeyOrZeroReturnVacant!0 (x!11154 lt!33021) (index!3089 lt!33021) (index!3089 lt!33021) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)) lt!33165)))

(assert (= (and d!17155 c!11036) b!73829))

(assert (= (and d!17155 (not c!11036)) b!73830))

(assert (= (and b!73830 c!11035) b!73834))

(assert (= (and b!73830 (not c!11035)) b!73833))

(assert (= (and b!73833 c!11034) b!73831))

(assert (= (and b!73833 (not c!11034)) b!73832))

(declare-fun m!72457 () Bool)

(assert (=> b!73832 m!72457))

(assert (=> b!73832 m!72457))

(assert (=> b!73832 m!70791))

(declare-fun m!72459 () Bool)

(assert (=> b!73832 m!72459))

(declare-fun m!72461 () Bool)

(assert (=> d!17155 m!72461))

(declare-fun m!72463 () Bool)

(assert (=> d!17155 m!72463))

(assert (=> d!17155 m!71935))

(assert (=> d!17155 m!71219))

(assert (=> b!73561 d!17155))

(declare-fun d!17157 () Bool)

(assert (=> d!17157 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660))))

(declare-fun lt!33166 () Unit!2066)

(assert (=> d!17157 (= lt!33166 (choose!426 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660))))

(declare-fun e!48259 () Bool)

(assert (=> d!17157 e!48259))

(declare-fun res!39103 () Bool)

(assert (=> d!17157 (=> (not res!39103) (not e!48259))))

(assert (=> d!17157 (= res!39103 (isStrictlySorted!287 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)))))))

(assert (=> d!17157 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660) lt!33166)))

(declare-fun b!73835 () Bool)

(assert (=> b!73835 (= e!48259 (containsKey!135 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660))))

(assert (= (and d!17157 res!39103) b!73835))

(assert (=> d!17157 m!71569))

(assert (=> d!17157 m!71569))

(assert (=> d!17157 m!71571))

(declare-fun m!72465 () Bool)

(assert (=> d!17157 m!72465))

(declare-fun m!72467 () Bool)

(assert (=> d!17157 m!72467))

(assert (=> b!73835 m!71565))

(assert (=> b!73349 d!17157))

(declare-fun d!17159 () Bool)

(assert (=> d!17159 (= (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660)) (not (isEmpty!322 (getValueByKey!131 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660))))))

(declare-fun bs!3174 () Bool)

(assert (= bs!3174 d!17159))

(assert (=> bs!3174 m!71569))

(declare-fun m!72469 () Bool)

(assert (=> bs!3174 m!72469))

(assert (=> b!73349 d!17159))

(declare-fun e!48260 () Option!137)

(declare-fun b!73836 () Bool)

(assert (=> b!73836 (= e!48260 (Some!136 (_2!1071 (h!2066 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)))))))))

(declare-fun b!73839 () Bool)

(declare-fun e!48261 () Option!137)

(assert (=> b!73839 (= e!48261 None!135)))

(declare-fun b!73838 () Bool)

(assert (=> b!73838 (= e!48261 (getValueByKey!131 (t!5031 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)))) lt!32660))))

(declare-fun d!17161 () Bool)

(declare-fun c!11037 () Bool)

(assert (=> d!17161 (= c!11037 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))))) lt!32660)))))

(assert (=> d!17161 (= (getValueByKey!131 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))) lt!32660) e!48260)))

(declare-fun b!73837 () Bool)

(assert (=> b!73837 (= e!48260 e!48261)))

(declare-fun c!11038 () Bool)

(assert (=> b!73837 (= c!11038 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662)))) (not (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32664 (tuple2!2121 lt!32659 lt!32662))))) lt!32660))))))

(assert (= (and d!17161 c!11037) b!73836))

(assert (= (and d!17161 (not c!11037)) b!73837))

(assert (= (and b!73837 c!11038) b!73838))

(assert (= (and b!73837 (not c!11038)) b!73839))

(declare-fun m!72471 () Bool)

(assert (=> b!73838 m!72471))

(assert (=> b!73349 d!17161))

(declare-fun d!17163 () Bool)

(assert (=> d!17163 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616))))

(declare-fun lt!33167 () Unit!2066)

(assert (=> d!17163 (= lt!33167 (choose!426 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616))))

(declare-fun e!48262 () Bool)

(assert (=> d!17163 e!48262))

(declare-fun res!39104 () Bool)

(assert (=> d!17163 (=> (not res!39104) (not e!48262))))

(assert (=> d!17163 (= res!39104 (isStrictlySorted!287 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17163 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616) lt!33167)))

(declare-fun b!73840 () Bool)

(assert (=> b!73840 (= e!48262 (containsKey!135 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616))))

(assert (= (and d!17163 res!39104) b!73840))

(assert (=> d!17163 m!71871))

(assert (=> d!17163 m!71871))

(assert (=> d!17163 m!71873))

(declare-fun m!72473 () Bool)

(assert (=> d!17163 m!72473))

(declare-fun m!72475 () Bool)

(assert (=> d!17163 m!72475))

(assert (=> b!73840 m!71867))

(assert (=> b!73536 d!17163))

(declare-fun d!17165 () Bool)

(assert (=> d!17165 (= (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616)) (not (isEmpty!322 (getValueByKey!131 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616))))))

(declare-fun bs!3175 () Bool)

(assert (= bs!3175 d!17165))

(assert (=> bs!3175 m!71871))

(declare-fun m!72477 () Bool)

(assert (=> bs!3175 m!72477))

(assert (=> b!73536 d!17165))

(declare-fun b!73841 () Bool)

(declare-fun e!48263 () Option!137)

(assert (=> b!73841 (= e!48263 (Some!136 (_2!1071 (h!2066 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))))

(declare-fun b!73844 () Bool)

(declare-fun e!48264 () Option!137)

(assert (=> b!73844 (= e!48264 None!135)))

(declare-fun b!73843 () Bool)

(assert (=> b!73843 (= e!48264 (getValueByKey!131 (t!5031 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) lt!32616))))

(declare-fun c!11039 () Bool)

(declare-fun d!17167 () Bool)

(assert (=> d!17167 (= c!11039 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32616)))))

(assert (=> d!17167 (= (getValueByKey!131 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32616) e!48263)))

(declare-fun b!73842 () Bool)

(assert (=> b!73842 (= e!48263 e!48264)))

(declare-fun c!11040 () Bool)

(assert (=> b!73842 (= c!11040 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (not (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32616))))))

(assert (= (and d!17167 c!11039) b!73841))

(assert (= (and d!17167 (not c!11039)) b!73842))

(assert (= (and b!73842 c!11040) b!73843))

(assert (= (and b!73842 (not c!11040)) b!73844))

(declare-fun m!72479 () Bool)

(assert (=> b!73843 m!72479))

(assert (=> b!73536 d!17167))

(declare-fun d!17169 () Bool)

(assert (=> d!17169 (= (get!1147 (getValueByKey!131 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2529 (getValueByKey!131 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16907 d!17169))

(declare-fun b!73845 () Bool)

(declare-fun e!48265 () Option!137)

(assert (=> b!73845 (= e!48265 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32604)))))))

(declare-fun b!73848 () Bool)

(declare-fun e!48266 () Option!137)

(assert (=> b!73848 (= e!48266 None!135)))

(declare-fun b!73847 () Bool)

(assert (=> b!73847 (= e!48266 (getValueByKey!131 (t!5031 (toList!717 lt!32604)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17171 () Bool)

(declare-fun c!11041 () Bool)

(assert (=> d!17171 (= c!11041 (and ((_ is Cons!1479) (toList!717 lt!32604)) (= (_1!1071 (h!2066 (toList!717 lt!32604))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17171 (= (getValueByKey!131 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000) e!48265)))

(declare-fun b!73846 () Bool)

(assert (=> b!73846 (= e!48265 e!48266)))

(declare-fun c!11042 () Bool)

(assert (=> b!73846 (= c!11042 (and ((_ is Cons!1479) (toList!717 lt!32604)) (not (= (_1!1071 (h!2066 (toList!717 lt!32604))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!17171 c!11041) b!73845))

(assert (= (and d!17171 (not c!11041)) b!73846))

(assert (= (and b!73846 c!11042) b!73847))

(assert (= (and b!73846 (not c!11042)) b!73848))

(declare-fun m!72481 () Bool)

(assert (=> b!73847 m!72481))

(assert (=> d!16907 d!17171))

(declare-fun d!17173 () Bool)

(declare-fun res!39105 () Bool)

(declare-fun e!48267 () Bool)

(assert (=> d!17173 (=> res!39105 e!48267)))

(assert (=> d!17173 (= res!39105 (and ((_ is Cons!1479) (toList!717 lt!32604)) (= (_1!1071 (h!2066 (toList!717 lt!32604))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17173 (= (containsKey!135 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000) e!48267)))

(declare-fun b!73849 () Bool)

(declare-fun e!48268 () Bool)

(assert (=> b!73849 (= e!48267 e!48268)))

(declare-fun res!39106 () Bool)

(assert (=> b!73849 (=> (not res!39106) (not e!48268))))

(assert (=> b!73849 (= res!39106 (and (or (not ((_ is Cons!1479) (toList!717 lt!32604))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32604))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1479) (toList!717 lt!32604)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32604))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73850 () Bool)

(assert (=> b!73850 (= e!48268 (containsKey!135 (t!5031 (toList!717 lt!32604)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17173 (not res!39105)) b!73849))

(assert (= (and b!73849 res!39106) b!73850))

(declare-fun m!72483 () Bool)

(assert (=> b!73850 m!72483))

(assert (=> d!16933 d!17173))

(declare-fun d!17175 () Bool)

(declare-fun lt!33168 () Bool)

(assert (=> d!17175 (= lt!33168 (select (content!77 (toList!717 lt!32708)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(declare-fun e!48270 () Bool)

(assert (=> d!17175 (= lt!33168 e!48270)))

(declare-fun res!39107 () Bool)

(assert (=> d!17175 (=> (not res!39107) (not e!48270))))

(assert (=> d!17175 (= res!39107 ((_ is Cons!1479) (toList!717 lt!32708)))))

(assert (=> d!17175 (= (contains!722 (toList!717 lt!32708) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) lt!33168)))

(declare-fun b!73851 () Bool)

(declare-fun e!48269 () Bool)

(assert (=> b!73851 (= e!48270 e!48269)))

(declare-fun res!39108 () Bool)

(assert (=> b!73851 (=> res!39108 e!48269)))

(assert (=> b!73851 (= res!39108 (= (h!2066 (toList!717 lt!32708)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(declare-fun b!73852 () Bool)

(assert (=> b!73852 (= e!48269 (contains!722 (t!5031 (toList!717 lt!32708)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(assert (= (and d!17175 res!39107) b!73851))

(assert (= (and b!73851 (not res!39108)) b!73852))

(declare-fun m!72485 () Bool)

(assert (=> d!17175 m!72485))

(declare-fun m!72487 () Bool)

(assert (=> d!17175 m!72487))

(declare-fun m!72489 () Bool)

(assert (=> b!73852 m!72489))

(assert (=> b!73198 d!17175))

(assert (=> bm!6467 d!16983))

(declare-fun d!17177 () Bool)

(assert (=> d!17177 (= (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73137 d!17177))

(declare-fun d!17179 () Bool)

(assert (=> d!17179 (= (apply!75 lt!32919 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1147 (getValueByKey!131 (toList!717 lt!32919) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3176 () Bool)

(assert (= bs!3176 d!17179))

(declare-fun m!72491 () Bool)

(assert (=> bs!3176 m!72491))

(assert (=> bs!3176 m!72491))

(declare-fun m!72493 () Bool)

(assert (=> bs!3176 m!72493))

(assert (=> b!73433 d!17179))

(declare-fun d!17181 () Bool)

(assert (=> d!17181 (isDefined!85 (getValueByKey!131 (toList!717 lt!32639) (_1!1071 lt!32376)))))

(declare-fun lt!33169 () Unit!2066)

(assert (=> d!17181 (= lt!33169 (choose!426 (toList!717 lt!32639) (_1!1071 lt!32376)))))

(declare-fun e!48271 () Bool)

(assert (=> d!17181 e!48271))

(declare-fun res!39109 () Bool)

(assert (=> d!17181 (=> (not res!39109) (not e!48271))))

(assert (=> d!17181 (= res!39109 (isStrictlySorted!287 (toList!717 lt!32639)))))

(assert (=> d!17181 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32639) (_1!1071 lt!32376)) lt!33169)))

(declare-fun b!73853 () Bool)

(assert (=> b!73853 (= e!48271 (containsKey!135 (toList!717 lt!32639) (_1!1071 lt!32376)))))

(assert (= (and d!17181 res!39109) b!73853))

(assert (=> d!17181 m!71101))

(assert (=> d!17181 m!71101))

(assert (=> d!17181 m!71247))

(declare-fun m!72495 () Bool)

(assert (=> d!17181 m!72495))

(declare-fun m!72497 () Bool)

(assert (=> d!17181 m!72497))

(assert (=> b!73853 m!71243))

(assert (=> b!73151 d!17181))

(declare-fun d!17183 () Bool)

(assert (=> d!17183 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32639) (_1!1071 lt!32376))) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32639) (_1!1071 lt!32376)))))))

(declare-fun bs!3177 () Bool)

(assert (= bs!3177 d!17183))

(assert (=> bs!3177 m!71101))

(declare-fun m!72499 () Bool)

(assert (=> bs!3177 m!72499))

(assert (=> b!73151 d!17183))

(assert (=> b!73151 d!16875))

(declare-fun d!17185 () Bool)

(declare-fun e!48273 () Bool)

(assert (=> d!17185 e!48273))

(declare-fun res!39110 () Bool)

(assert (=> d!17185 (=> res!39110 e!48273)))

(declare-fun lt!33173 () Bool)

(assert (=> d!17185 (= res!39110 (not lt!33173))))

(declare-fun lt!33171 () Bool)

(assert (=> d!17185 (= lt!33173 lt!33171)))

(declare-fun lt!33170 () Unit!2066)

(declare-fun e!48272 () Unit!2066)

(assert (=> d!17185 (= lt!33170 e!48272)))

(declare-fun c!11043 () Bool)

(assert (=> d!17185 (= c!11043 lt!33171)))

(assert (=> d!17185 (= lt!33171 (containsKey!135 (toList!717 lt!32955) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17185 (= (contains!719 lt!32955 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33173)))

(declare-fun b!73854 () Bool)

(declare-fun lt!33172 () Unit!2066)

(assert (=> b!73854 (= e!48272 lt!33172)))

(assert (=> b!73854 (= lt!33172 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32955) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73854 (isDefined!85 (getValueByKey!131 (toList!717 lt!32955) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73855 () Bool)

(declare-fun Unit!2111 () Unit!2066)

(assert (=> b!73855 (= e!48272 Unit!2111)))

(declare-fun b!73856 () Bool)

(assert (=> b!73856 (= e!48273 (isDefined!85 (getValueByKey!131 (toList!717 lt!32955) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17185 c!11043) b!73854))

(assert (= (and d!17185 (not c!11043)) b!73855))

(assert (= (and d!17185 (not res!39110)) b!73856))

(declare-fun m!72501 () Bool)

(assert (=> d!17185 m!72501))

(declare-fun m!72503 () Bool)

(assert (=> b!73854 m!72503))

(assert (=> b!73854 m!72067))

(assert (=> b!73854 m!72067))

(declare-fun m!72505 () Bool)

(assert (=> b!73854 m!72505))

(assert (=> b!73856 m!72067))

(assert (=> b!73856 m!72067))

(assert (=> b!73856 m!72505))

(assert (=> bm!6485 d!17185))

(declare-fun d!17187 () Bool)

(declare-fun lt!33174 () Bool)

(assert (=> d!17187 (= lt!33174 (select (content!77 lt!32777) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun e!48275 () Bool)

(assert (=> d!17187 (= lt!33174 e!48275)))

(declare-fun res!39111 () Bool)

(assert (=> d!17187 (=> (not res!39111) (not e!48275))))

(assert (=> d!17187 (= res!39111 ((_ is Cons!1479) lt!32777))))

(assert (=> d!17187 (= (contains!722 lt!32777 (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))) lt!33174)))

(declare-fun b!73857 () Bool)

(declare-fun e!48274 () Bool)

(assert (=> b!73857 (= e!48275 e!48274)))

(declare-fun res!39112 () Bool)

(assert (=> b!73857 (=> res!39112 e!48274)))

(assert (=> b!73857 (= res!39112 (= (h!2066 lt!32777) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun b!73858 () Bool)

(assert (=> b!73858 (= e!48274 (contains!722 (t!5031 lt!32777) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(assert (= (and d!17187 res!39111) b!73857))

(assert (= (and b!73857 (not res!39112)) b!73858))

(declare-fun m!72507 () Bool)

(assert (=> d!17187 m!72507))

(declare-fun m!72509 () Bool)

(assert (=> d!17187 m!72509))

(declare-fun m!72511 () Bool)

(assert (=> b!73858 m!72511))

(assert (=> b!73298 d!17187))

(declare-fun d!17189 () Bool)

(assert (=> d!17189 (= (get!1147 (getValueByKey!131 (toList!717 lt!32607) lt!32618)) (v!2529 (getValueByKey!131 (toList!717 lt!32607) lt!32618)))))

(assert (=> d!16951 d!17189))

(declare-fun b!73859 () Bool)

(declare-fun e!48276 () Option!137)

(assert (=> b!73859 (= e!48276 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32607)))))))

(declare-fun b!73862 () Bool)

(declare-fun e!48277 () Option!137)

(assert (=> b!73862 (= e!48277 None!135)))

(declare-fun b!73861 () Bool)

(assert (=> b!73861 (= e!48277 (getValueByKey!131 (t!5031 (toList!717 lt!32607)) lt!32618))))

(declare-fun d!17191 () Bool)

(declare-fun c!11044 () Bool)

(assert (=> d!17191 (= c!11044 (and ((_ is Cons!1479) (toList!717 lt!32607)) (= (_1!1071 (h!2066 (toList!717 lt!32607))) lt!32618)))))

(assert (=> d!17191 (= (getValueByKey!131 (toList!717 lt!32607) lt!32618) e!48276)))

(declare-fun b!73860 () Bool)

(assert (=> b!73860 (= e!48276 e!48277)))

(declare-fun c!11045 () Bool)

(assert (=> b!73860 (= c!11045 (and ((_ is Cons!1479) (toList!717 lt!32607)) (not (= (_1!1071 (h!2066 (toList!717 lt!32607))) lt!32618))))))

(assert (= (and d!17191 c!11044) b!73859))

(assert (= (and d!17191 (not c!11044)) b!73860))

(assert (= (and b!73860 c!11045) b!73861))

(assert (= (and b!73860 (not c!11045)) b!73862))

(declare-fun m!72513 () Bool)

(assert (=> b!73861 m!72513))

(assert (=> d!16951 d!17191))

(declare-fun d!17193 () Bool)

(assert (=> d!17193 (= ($colon$colon!65 e!47948 (ite c!10910 (h!2066 (toList!717 (+!93 lt!32377 lt!32376))) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383)))) (Cons!1479 (ite c!10910 (h!2066 (toList!717 (+!93 lt!32377 lt!32376))) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))) e!47948))))

(assert (=> bm!6454 d!17193))

(declare-fun d!17195 () Bool)

(assert (=> d!17195 (= (get!1147 (getValueByKey!131 (toList!717 lt!32610) lt!32619)) (v!2529 (getValueByKey!131 (toList!717 lt!32610) lt!32619)))))

(assert (=> d!16967 d!17195))

(declare-fun b!73863 () Bool)

(declare-fun e!48278 () Option!137)

(assert (=> b!73863 (= e!48278 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32610)))))))

(declare-fun b!73866 () Bool)

(declare-fun e!48279 () Option!137)

(assert (=> b!73866 (= e!48279 None!135)))

(declare-fun b!73865 () Bool)

(assert (=> b!73865 (= e!48279 (getValueByKey!131 (t!5031 (toList!717 lt!32610)) lt!32619))))

(declare-fun d!17197 () Bool)

(declare-fun c!11046 () Bool)

(assert (=> d!17197 (= c!11046 (and ((_ is Cons!1479) (toList!717 lt!32610)) (= (_1!1071 (h!2066 (toList!717 lt!32610))) lt!32619)))))

(assert (=> d!17197 (= (getValueByKey!131 (toList!717 lt!32610) lt!32619) e!48278)))

(declare-fun b!73864 () Bool)

(assert (=> b!73864 (= e!48278 e!48279)))

(declare-fun c!11047 () Bool)

(assert (=> b!73864 (= c!11047 (and ((_ is Cons!1479) (toList!717 lt!32610)) (not (= (_1!1071 (h!2066 (toList!717 lt!32610))) lt!32619))))))

(assert (= (and d!17197 c!11046) b!73863))

(assert (= (and d!17197 (not c!11046)) b!73864))

(assert (= (and b!73864 c!11047) b!73865))

(assert (= (and b!73864 (not c!11047)) b!73866))

(declare-fun m!72515 () Bool)

(assert (=> b!73865 m!72515))

(assert (=> d!16967 d!17197))

(declare-fun d!17199 () Bool)

(declare-fun lt!33175 () Bool)

(assert (=> d!17199 (= lt!33175 (select (content!77 lt!32669) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun e!48281 () Bool)

(assert (=> d!17199 (= lt!33175 e!48281)))

(declare-fun res!39113 () Bool)

(assert (=> d!17199 (=> (not res!39113) (not e!48281))))

(assert (=> d!17199 (= res!39113 ((_ is Cons!1479) lt!32669))))

(assert (=> d!17199 (= (contains!722 lt!32669 (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))) lt!33175)))

(declare-fun b!73867 () Bool)

(declare-fun e!48280 () Bool)

(assert (=> b!73867 (= e!48281 e!48280)))

(declare-fun res!39114 () Bool)

(assert (=> b!73867 (=> res!39114 e!48280)))

(assert (=> b!73867 (= res!39114 (= (h!2066 lt!32669) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun b!73868 () Bool)

(assert (=> b!73868 (= e!48280 (contains!722 (t!5031 lt!32669) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(assert (= (and d!17199 res!39113) b!73867))

(assert (= (and b!73867 (not res!39114)) b!73868))

(declare-fun m!72517 () Bool)

(assert (=> d!17199 m!72517))

(declare-fun m!72519 () Bool)

(assert (=> d!17199 m!72519))

(declare-fun m!72521 () Bool)

(assert (=> b!73868 m!72521))

(assert (=> b!73318 d!17199))

(declare-fun b!73869 () Bool)

(assert (=> b!73869 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> b!73869 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2086 (_values!2195 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun lt!33180 () ListLongMap!1403)

(declare-fun e!48282 () Bool)

(assert (=> b!73869 (= e!48282 (= (apply!75 lt!33180 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!73870 () Bool)

(declare-fun e!48284 () ListLongMap!1403)

(declare-fun call!6521 () ListLongMap!1403)

(assert (=> b!73870 (= e!48284 call!6521)))

(declare-fun b!73871 () Bool)

(declare-fun e!48287 () Bool)

(declare-fun e!48285 () Bool)

(assert (=> b!73871 (= e!48287 e!48285)))

(declare-fun c!11051 () Bool)

(declare-fun e!48283 () Bool)

(assert (=> b!73871 (= c!11051 e!48283)))

(declare-fun res!39116 () Bool)

(assert (=> b!73871 (=> (not res!39116) (not e!48283))))

(assert (=> b!73871 (= res!39116 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73872 () Bool)

(assert (=> b!73872 (= e!48283 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!73872 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!73873 () Bool)

(declare-fun e!48286 () Bool)

(assert (=> b!73873 (= e!48286 (isEmpty!320 lt!33180))))

(declare-fun b!73874 () Bool)

(assert (=> b!73874 (= e!48285 e!48286)))

(declare-fun c!11049 () Bool)

(assert (=> b!73874 (= c!11049 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73875 () Bool)

(assert (=> b!73875 (= e!48285 e!48282)))

(assert (=> b!73875 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun res!39115 () Bool)

(assert (=> b!73875 (= res!39115 (contains!719 lt!33180 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!73875 (=> (not res!39115) (not e!48282))))

(declare-fun b!73877 () Bool)

(declare-fun e!48288 () ListLongMap!1403)

(assert (=> b!73877 (= e!48288 e!48284)))

(declare-fun c!11048 () Bool)

(assert (=> b!73877 (= c!11048 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!73878 () Bool)

(declare-fun lt!33178 () Unit!2066)

(declare-fun lt!33182 () Unit!2066)

(assert (=> b!73878 (= lt!33178 lt!33182)))

(declare-fun lt!33179 () V!2945)

(declare-fun lt!33176 () (_ BitVec 64))

(declare-fun lt!33177 () (_ BitVec 64))

(declare-fun lt!33181 () ListLongMap!1403)

(assert (=> b!73878 (not (contains!719 (+!93 lt!33181 (tuple2!2121 lt!33176 lt!33179)) lt!33177))))

(assert (=> b!73878 (= lt!33182 (addStillNotContains!25 lt!33181 lt!33176 lt!33179 lt!33177))))

(assert (=> b!73878 (= lt!33177 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!73878 (= lt!33179 (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!73878 (= lt!33176 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!73878 (= lt!33181 call!6521)))

(assert (=> b!73878 (= e!48284 (+!93 call!6521 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!6518 () Bool)

(assert (=> bm!6518 (= call!6521 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun b!73879 () Bool)

(assert (=> b!73879 (= e!48286 (= lt!33180 (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73880 () Bool)

(assert (=> b!73880 (= e!48288 (ListLongMap!1404 Nil!1480))))

(declare-fun b!73876 () Bool)

(declare-fun res!39117 () Bool)

(assert (=> b!73876 (=> (not res!39117) (not e!48287))))

(assert (=> b!73876 (= res!39117 (not (contains!719 lt!33180 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!17201 () Bool)

(assert (=> d!17201 e!48287))

(declare-fun res!39118 () Bool)

(assert (=> d!17201 (=> (not res!39118) (not e!48287))))

(assert (=> d!17201 (= res!39118 (not (contains!719 lt!33180 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17201 (= lt!33180 e!48288)))

(declare-fun c!11050 () Bool)

(assert (=> d!17201 (= c!11050 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!17201 (validMask!0 (mask!6178 (v!2523 (underlying!256 thiss!992))))))

(assert (=> d!17201 (= (getCurrentListMapNoExtraKeys!57 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (_values!2195 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992))) (extraKeys!2071 (v!2523 (underlying!256 thiss!992))) (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) (minValue!2114 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992)))) lt!33180)))

(assert (= (and d!17201 c!11050) b!73880))

(assert (= (and d!17201 (not c!11050)) b!73877))

(assert (= (and b!73877 c!11048) b!73878))

(assert (= (and b!73877 (not c!11048)) b!73870))

(assert (= (or b!73878 b!73870) bm!6518))

(assert (= (and d!17201 res!39118) b!73876))

(assert (= (and b!73876 res!39117) b!73871))

(assert (= (and b!73871 res!39116) b!73872))

(assert (= (and b!73871 c!11051) b!73875))

(assert (= (and b!73871 (not c!11051)) b!73874))

(assert (= (and b!73875 res!39115) b!73869))

(assert (= (and b!73874 c!11049) b!73879))

(assert (= (and b!73874 (not c!11049)) b!73873))

(declare-fun b_lambda!3307 () Bool)

(assert (=> (not b_lambda!3307) (not b!73869)))

(assert (=> b!73869 t!5028))

(declare-fun b_and!4521 () Bool)

(assert (= b_and!4517 (and (=> t!5028 result!2669) b_and!4521)))

(assert (=> b!73869 t!5030))

(declare-fun b_and!4523 () Bool)

(assert (= b_and!4519 (and (=> t!5030 result!2673) b_and!4523)))

(declare-fun b_lambda!3309 () Bool)

(assert (=> (not b_lambda!3309) (not b!73878)))

(assert (=> b!73878 t!5028))

(declare-fun b_and!4525 () Bool)

(assert (= b_and!4521 (and (=> t!5028 result!2669) b_and!4525)))

(assert (=> b!73878 t!5030))

(declare-fun b_and!4527 () Bool)

(assert (= b_and!4523 (and (=> t!5030 result!2673) b_and!4527)))

(declare-fun m!72523 () Bool)

(assert (=> b!73872 m!72523))

(assert (=> b!73872 m!72523))

(declare-fun m!72525 () Bool)

(assert (=> b!73872 m!72525))

(assert (=> b!73869 m!70809))

(assert (=> b!73869 m!72523))

(declare-fun m!72527 () Bool)

(assert (=> b!73869 m!72527))

(assert (=> b!73869 m!72523))

(declare-fun m!72529 () Bool)

(assert (=> b!73869 m!72529))

(assert (=> b!73869 m!70809))

(declare-fun m!72531 () Bool)

(assert (=> b!73869 m!72531))

(assert (=> b!73869 m!72529))

(declare-fun m!72533 () Bool)

(assert (=> b!73878 m!72533))

(assert (=> b!73878 m!70809))

(declare-fun m!72535 () Bool)

(assert (=> b!73878 m!72535))

(assert (=> b!73878 m!72523))

(assert (=> b!73878 m!72529))

(declare-fun m!72537 () Bool)

(assert (=> b!73878 m!72537))

(assert (=> b!73878 m!72533))

(declare-fun m!72539 () Bool)

(assert (=> b!73878 m!72539))

(assert (=> b!73878 m!72529))

(assert (=> b!73878 m!70809))

(assert (=> b!73878 m!72531))

(declare-fun m!72541 () Bool)

(assert (=> bm!6518 m!72541))

(assert (=> b!73879 m!72541))

(declare-fun m!72543 () Bool)

(assert (=> b!73873 m!72543))

(declare-fun m!72545 () Bool)

(assert (=> d!17201 m!72545))

(assert (=> d!17201 m!70779))

(assert (=> b!73877 m!72523))

(assert (=> b!73877 m!72523))

(assert (=> b!73877 m!72525))

(declare-fun m!72547 () Bool)

(assert (=> b!73876 m!72547))

(assert (=> b!73875 m!72523))

(assert (=> b!73875 m!72523))

(declare-fun m!72549 () Bool)

(assert (=> b!73875 m!72549))

(assert (=> bm!6425 d!17201))

(declare-fun d!17203 () Bool)

(assert (=> d!17203 (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33183 () Unit!2066)

(assert (=> d!17203 (= lt!33183 (choose!426 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48289 () Bool)

(assert (=> d!17203 e!48289))

(declare-fun res!39119 () Bool)

(assert (=> d!17203 (=> (not res!39119) (not e!48289))))

(assert (=> d!17203 (= res!39119 (isStrictlySorted!287 (toList!717 lt!32604)))))

(assert (=> d!17203 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000) lt!33183)))

(declare-fun b!73881 () Bool)

(assert (=> b!73881 (= e!48289 (containsKey!135 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17203 res!39119) b!73881))

(assert (=> d!17203 m!71601))

(assert (=> d!17203 m!71601))

(assert (=> d!17203 m!71773))

(declare-fun m!72551 () Bool)

(assert (=> d!17203 m!72551))

(declare-fun m!72553 () Bool)

(assert (=> d!17203 m!72553))

(assert (=> b!73881 m!71769))

(assert (=> b!73476 d!17203))

(declare-fun d!17205 () Bool)

(assert (=> d!17205 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32604) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3178 () Bool)

(assert (= bs!3178 d!17205))

(assert (=> bs!3178 m!71601))

(declare-fun m!72555 () Bool)

(assert (=> bs!3178 m!72555))

(assert (=> b!73476 d!17205))

(assert (=> b!73476 d!17171))

(declare-fun d!17207 () Bool)

(declare-fun e!48291 () Bool)

(assert (=> d!17207 e!48291))

(declare-fun res!39120 () Bool)

(assert (=> d!17207 (=> res!39120 e!48291)))

(declare-fun lt!33187 () Bool)

(assert (=> d!17207 (= res!39120 (not lt!33187))))

(declare-fun lt!33185 () Bool)

(assert (=> d!17207 (= lt!33187 lt!33185)))

(declare-fun lt!33184 () Unit!2066)

(declare-fun e!48290 () Unit!2066)

(assert (=> d!17207 (= lt!33184 e!48290)))

(declare-fun c!11052 () Bool)

(assert (=> d!17207 (= c!11052 lt!33185)))

(assert (=> d!17207 (= lt!33185 (containsKey!135 (toList!717 lt!32683) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!17207 (= (contains!719 lt!32683 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33187)))

(declare-fun b!73882 () Bool)

(declare-fun lt!33186 () Unit!2066)

(assert (=> b!73882 (= e!48290 lt!33186)))

(assert (=> b!73882 (= lt!33186 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32683) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> b!73882 (isDefined!85 (getValueByKey!131 (toList!717 lt!32683) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!73883 () Bool)

(declare-fun Unit!2112 () Unit!2066)

(assert (=> b!73883 (= e!48290 Unit!2112)))

(declare-fun b!73884 () Bool)

(assert (=> b!73884 (= e!48291 (isDefined!85 (getValueByKey!131 (toList!717 lt!32683) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17207 c!11052) b!73882))

(assert (= (and d!17207 (not c!11052)) b!73883))

(assert (= (and d!17207 (not res!39120)) b!73884))

(declare-fun m!72557 () Bool)

(assert (=> d!17207 m!72557))

(declare-fun m!72559 () Bool)

(assert (=> b!73882 m!72559))

(assert (=> b!73882 m!71207))

(assert (=> b!73882 m!71207))

(declare-fun m!72561 () Bool)

(assert (=> b!73882 m!72561))

(assert (=> b!73884 m!71207))

(assert (=> b!73884 m!71207))

(assert (=> b!73884 m!72561))

(assert (=> d!16791 d!17207))

(declare-fun b!73885 () Bool)

(declare-fun e!48292 () Option!137)

(assert (=> b!73885 (= e!48292 (Some!136 (_2!1071 (h!2066 lt!32684))))))

(declare-fun b!73888 () Bool)

(declare-fun e!48293 () Option!137)

(assert (=> b!73888 (= e!48293 None!135)))

(declare-fun b!73887 () Bool)

(assert (=> b!73887 (= e!48293 (getValueByKey!131 (t!5031 lt!32684) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17209 () Bool)

(declare-fun c!11053 () Bool)

(assert (=> d!17209 (= c!11053 (and ((_ is Cons!1479) lt!32684) (= (_1!1071 (h!2066 lt!32684)) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17209 (= (getValueByKey!131 lt!32684 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48292)))

(declare-fun b!73886 () Bool)

(assert (=> b!73886 (= e!48292 e!48293)))

(declare-fun c!11054 () Bool)

(assert (=> b!73886 (= c!11054 (and ((_ is Cons!1479) lt!32684) (not (= (_1!1071 (h!2066 lt!32684)) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17209 c!11053) b!73885))

(assert (= (and d!17209 (not c!11053)) b!73886))

(assert (= (and b!73886 c!11054) b!73887))

(assert (= (and b!73886 (not c!11054)) b!73888))

(declare-fun m!72563 () Bool)

(assert (=> b!73887 m!72563))

(assert (=> d!16791 d!17209))

(declare-fun d!17211 () Bool)

(assert (=> d!17211 (= (getValueByKey!131 lt!32684 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!33188 () Unit!2066)

(assert (=> d!17211 (= lt!33188 (choose!420 lt!32684 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun e!48294 () Bool)

(assert (=> d!17211 e!48294))

(declare-fun res!39121 () Bool)

(assert (=> d!17211 (=> (not res!39121) (not e!48294))))

(assert (=> d!17211 (= res!39121 (isStrictlySorted!287 lt!32684))))

(assert (=> d!17211 (= (lemmaContainsTupThenGetReturnValue!51 lt!32684 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33188)))

(declare-fun b!73889 () Bool)

(declare-fun res!39122 () Bool)

(assert (=> b!73889 (=> (not res!39122) (not e!48294))))

(assert (=> b!73889 (= res!39122 (containsKey!135 lt!32684 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!73890 () Bool)

(assert (=> b!73890 (= e!48294 (contains!722 lt!32684 (tuple2!2121 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17211 res!39121) b!73889))

(assert (= (and b!73889 res!39122) b!73890))

(assert (=> d!17211 m!71201))

(declare-fun m!72565 () Bool)

(assert (=> d!17211 m!72565))

(declare-fun m!72567 () Bool)

(assert (=> d!17211 m!72567))

(declare-fun m!72569 () Bool)

(assert (=> b!73889 m!72569))

(declare-fun m!72571 () Bool)

(assert (=> b!73890 m!72571))

(assert (=> d!16791 d!17211))

(declare-fun d!17213 () Bool)

(declare-fun e!48297 () Bool)

(assert (=> d!17213 e!48297))

(declare-fun res!39124 () Bool)

(assert (=> d!17213 (=> (not res!39124) (not e!48297))))

(declare-fun lt!33189 () List!1483)

(assert (=> d!17213 (= res!39124 (isStrictlySorted!287 lt!33189))))

(declare-fun e!48299 () List!1483)

(assert (=> d!17213 (= lt!33189 e!48299)))

(declare-fun c!11057 () Bool)

(assert (=> d!17213 (= c!11057 (and ((_ is Cons!1479) (toList!717 call!6418)) (bvslt (_1!1071 (h!2066 (toList!717 call!6418))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17213 (isStrictlySorted!287 (toList!717 call!6418))))

(assert (=> d!17213 (= (insertStrictlySorted!54 (toList!717 call!6418) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33189)))

(declare-fun b!73891 () Bool)

(declare-fun res!39123 () Bool)

(assert (=> b!73891 (=> (not res!39123) (not e!48297))))

(assert (=> b!73891 (= res!39123 (containsKey!135 lt!33189 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!73892 () Bool)

(declare-fun e!48298 () List!1483)

(declare-fun call!6524 () List!1483)

(assert (=> b!73892 (= e!48298 call!6524)))

(declare-fun bm!6519 () Bool)

(declare-fun call!6522 () List!1483)

(declare-fun call!6523 () List!1483)

(assert (=> bm!6519 (= call!6522 call!6523)))

(declare-fun b!73893 () Bool)

(assert (=> b!73893 (= e!48299 call!6523)))

(declare-fun b!73894 () Bool)

(declare-fun e!48295 () List!1483)

(assert (=> b!73894 (= e!48295 (insertStrictlySorted!54 (t!5031 (toList!717 call!6418)) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!73895 () Bool)

(assert (=> b!73895 (= e!48298 call!6524)))

(declare-fun b!73896 () Bool)

(assert (=> b!73896 (= e!48297 (contains!722 lt!33189 (tuple2!2121 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!73897 () Bool)

(declare-fun c!11055 () Bool)

(assert (=> b!73897 (= c!11055 (and ((_ is Cons!1479) (toList!717 call!6418)) (bvsgt (_1!1071 (h!2066 (toList!717 call!6418))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun e!48296 () List!1483)

(assert (=> b!73897 (= e!48296 e!48298)))

(declare-fun bm!6520 () Bool)

(assert (=> bm!6520 (= call!6523 ($colon$colon!65 e!48295 (ite c!11057 (h!2066 (toList!717 call!6418)) (tuple2!2121 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun c!11058 () Bool)

(assert (=> bm!6520 (= c!11058 c!11057)))

(declare-fun bm!6521 () Bool)

(assert (=> bm!6521 (= call!6524 call!6522)))

(declare-fun b!73898 () Bool)

(assert (=> b!73898 (= e!48299 e!48296)))

(declare-fun c!11056 () Bool)

(assert (=> b!73898 (= c!11056 (and ((_ is Cons!1479) (toList!717 call!6418)) (= (_1!1071 (h!2066 (toList!717 call!6418))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!73899 () Bool)

(assert (=> b!73899 (= e!48296 call!6522)))

(declare-fun b!73900 () Bool)

(assert (=> b!73900 (= e!48295 (ite c!11056 (t!5031 (toList!717 call!6418)) (ite c!11055 (Cons!1479 (h!2066 (toList!717 call!6418)) (t!5031 (toList!717 call!6418))) Nil!1480)))))

(assert (= (and d!17213 c!11057) b!73893))

(assert (= (and d!17213 (not c!11057)) b!73898))

(assert (= (and b!73898 c!11056) b!73899))

(assert (= (and b!73898 (not c!11056)) b!73897))

(assert (= (and b!73897 c!11055) b!73895))

(assert (= (and b!73897 (not c!11055)) b!73892))

(assert (= (or b!73895 b!73892) bm!6521))

(assert (= (or b!73899 bm!6521) bm!6519))

(assert (= (or b!73893 bm!6519) bm!6520))

(assert (= (and bm!6520 c!11058) b!73894))

(assert (= (and bm!6520 (not c!11058)) b!73900))

(assert (= (and d!17213 res!39124) b!73891))

(assert (= (and b!73891 res!39123) b!73896))

(declare-fun m!72573 () Bool)

(assert (=> bm!6520 m!72573))

(declare-fun m!72575 () Bool)

(assert (=> d!17213 m!72575))

(declare-fun m!72577 () Bool)

(assert (=> d!17213 m!72577))

(declare-fun m!72579 () Bool)

(assert (=> b!73894 m!72579))

(declare-fun m!72581 () Bool)

(assert (=> b!73896 m!72581))

(declare-fun m!72583 () Bool)

(assert (=> b!73891 m!72583))

(assert (=> d!16791 d!17213))

(declare-fun d!17215 () Bool)

(declare-fun lt!33190 () Bool)

(assert (=> d!17215 (= lt!33190 (select (content!77 (toList!717 lt!32683)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun e!48301 () Bool)

(assert (=> d!17215 (= lt!33190 e!48301)))

(declare-fun res!39125 () Bool)

(assert (=> d!17215 (=> (not res!39125) (not e!48301))))

(assert (=> d!17215 (= res!39125 ((_ is Cons!1479) (toList!717 lt!32683)))))

(assert (=> d!17215 (= (contains!722 (toList!717 lt!32683) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!33190)))

(declare-fun b!73901 () Bool)

(declare-fun e!48300 () Bool)

(assert (=> b!73901 (= e!48301 e!48300)))

(declare-fun res!39126 () Bool)

(assert (=> b!73901 (=> res!39126 e!48300)))

(assert (=> b!73901 (= res!39126 (= (h!2066 (toList!717 lt!32683)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!73902 () Bool)

(assert (=> b!73902 (= e!48300 (contains!722 (t!5031 (toList!717 lt!32683)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!17215 res!39125) b!73901))

(assert (= (and b!73901 (not res!39126)) b!73902))

(declare-fun m!72585 () Bool)

(assert (=> d!17215 m!72585))

(declare-fun m!72587 () Bool)

(assert (=> d!17215 m!72587))

(declare-fun m!72589 () Bool)

(assert (=> b!73902 m!72589))

(assert (=> b!73133 d!17215))

(assert (=> d!16965 d!16953))

(assert (=> d!16965 d!16943))

(declare-fun d!17217 () Bool)

(assert (=> d!17217 (contains!719 (+!93 lt!32623 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32616)))

(assert (=> d!17217 true))

(declare-fun _$35!318 () Unit!2066)

(assert (=> d!17217 (= (choose!429 lt!32623 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32616) _$35!318)))

(declare-fun bs!3179 () Bool)

(assert (= bs!3179 d!17217))

(assert (=> bs!3179 m!71037))

(assert (=> bs!3179 m!71037))

(assert (=> bs!3179 m!71039))

(assert (=> d!16965 d!17217))

(declare-fun d!17219 () Bool)

(declare-fun e!48303 () Bool)

(assert (=> d!17219 e!48303))

(declare-fun res!39127 () Bool)

(assert (=> d!17219 (=> res!39127 e!48303)))

(declare-fun lt!33194 () Bool)

(assert (=> d!17219 (= res!39127 (not lt!33194))))

(declare-fun lt!33192 () Bool)

(assert (=> d!17219 (= lt!33194 lt!33192)))

(declare-fun lt!33191 () Unit!2066)

(declare-fun e!48302 () Unit!2066)

(assert (=> d!17219 (= lt!33191 e!48302)))

(declare-fun c!11059 () Bool)

(assert (=> d!17219 (= c!11059 lt!33192)))

(assert (=> d!17219 (= lt!33192 (containsKey!135 (toList!717 lt!32623) lt!32616))))

(assert (=> d!17219 (= (contains!719 lt!32623 lt!32616) lt!33194)))

(declare-fun b!73904 () Bool)

(declare-fun lt!33193 () Unit!2066)

(assert (=> b!73904 (= e!48302 lt!33193)))

(assert (=> b!73904 (= lt!33193 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32623) lt!32616))))

(assert (=> b!73904 (isDefined!85 (getValueByKey!131 (toList!717 lt!32623) lt!32616))))

(declare-fun b!73905 () Bool)

(declare-fun Unit!2113 () Unit!2066)

(assert (=> b!73905 (= e!48302 Unit!2113)))

(declare-fun b!73906 () Bool)

(assert (=> b!73906 (= e!48303 (isDefined!85 (getValueByKey!131 (toList!717 lt!32623) lt!32616)))))

(assert (= (and d!17219 c!11059) b!73904))

(assert (= (and d!17219 (not c!11059)) b!73905))

(assert (= (and d!17219 (not res!39127)) b!73906))

(declare-fun m!72591 () Bool)

(assert (=> d!17219 m!72591))

(declare-fun m!72593 () Bool)

(assert (=> b!73904 m!72593))

(declare-fun m!72595 () Bool)

(assert (=> b!73904 m!72595))

(assert (=> b!73904 m!72595))

(declare-fun m!72597 () Bool)

(assert (=> b!73904 m!72597))

(assert (=> b!73906 m!72595))

(assert (=> b!73906 m!72595))

(assert (=> b!73906 m!72597))

(assert (=> d!16965 d!17219))

(declare-fun d!17221 () Bool)

(declare-fun res!39128 () Bool)

(declare-fun e!48304 () Bool)

(assert (=> d!17221 (=> res!39128 e!48304)))

(assert (=> d!17221 (= res!39128 (and ((_ is Cons!1479) lt!32783) (= (_1!1071 (h!2066 lt!32783)) (_1!1071 lt!32383))))))

(assert (=> d!17221 (= (containsKey!135 lt!32783 (_1!1071 lt!32383)) e!48304)))

(declare-fun b!73907 () Bool)

(declare-fun e!48305 () Bool)

(assert (=> b!73907 (= e!48304 e!48305)))

(declare-fun res!39129 () Bool)

(assert (=> b!73907 (=> (not res!39129) (not e!48305))))

(assert (=> b!73907 (= res!39129 (and (or (not ((_ is Cons!1479) lt!32783)) (bvsle (_1!1071 (h!2066 lt!32783)) (_1!1071 lt!32383))) ((_ is Cons!1479) lt!32783) (bvslt (_1!1071 (h!2066 lt!32783)) (_1!1071 lt!32383))))))

(declare-fun b!73908 () Bool)

(assert (=> b!73908 (= e!48305 (containsKey!135 (t!5031 lt!32783) (_1!1071 lt!32383)))))

(assert (= (and d!17221 (not res!39128)) b!73907))

(assert (= (and b!73907 res!39129) b!73908))

(declare-fun m!72599 () Bool)

(assert (=> b!73908 m!72599))

(assert (=> b!73319 d!17221))

(declare-fun d!17223 () Bool)

(declare-fun res!39131 () Bool)

(declare-fun e!48307 () Bool)

(assert (=> d!17223 (=> res!39131 e!48307)))

(assert (=> d!17223 (= res!39131 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17223 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3863 newMap!16) (mask!6178 newMap!16)) e!48307)))

(declare-fun b!73909 () Bool)

(declare-fun e!48308 () Bool)

(assert (=> b!73909 (= e!48307 e!48308)))

(declare-fun c!11060 () Bool)

(assert (=> b!73909 (= c!11060 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!6522 () Bool)

(declare-fun call!6525 () Bool)

(assert (=> bm!6522 (= call!6525 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun b!73910 () Bool)

(assert (=> b!73910 (= e!48308 call!6525)))

(declare-fun b!73911 () Bool)

(declare-fun e!48306 () Bool)

(assert (=> b!73911 (= e!48306 call!6525)))

(declare-fun b!73912 () Bool)

(assert (=> b!73912 (= e!48308 e!48306)))

(declare-fun lt!33196 () (_ BitVec 64))

(assert (=> b!73912 (= lt!33196 (select (arr!1846 (_keys!3863 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!33195 () Unit!2066)

(assert (=> b!73912 (= lt!33195 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3863 newMap!16) lt!33196 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!73912 (arrayContainsKey!0 (_keys!3863 newMap!16) lt!33196 #b00000000000000000000000000000000)))

(declare-fun lt!33197 () Unit!2066)

(assert (=> b!73912 (= lt!33197 lt!33195)))

(declare-fun res!39130 () Bool)

(assert (=> b!73912 (= res!39130 (= (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!3863 newMap!16) (mask!6178 newMap!16)) (Found!239 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!73912 (=> (not res!39130) (not e!48306))))

(assert (= (and d!17223 (not res!39131)) b!73909))

(assert (= (and b!73909 c!11060) b!73912))

(assert (= (and b!73909 (not c!11060)) b!73910))

(assert (= (and b!73912 res!39130) b!73911))

(assert (= (or b!73911 b!73910) bm!6522))

(declare-fun m!72601 () Bool)

(assert (=> b!73909 m!72601))

(assert (=> b!73909 m!72601))

(declare-fun m!72603 () Bool)

(assert (=> b!73909 m!72603))

(declare-fun m!72605 () Bool)

(assert (=> bm!6522 m!72605))

(assert (=> b!73912 m!72601))

(declare-fun m!72607 () Bool)

(assert (=> b!73912 m!72607))

(declare-fun m!72609 () Bool)

(assert (=> b!73912 m!72609))

(assert (=> b!73912 m!72601))

(declare-fun m!72611 () Bool)

(assert (=> b!73912 m!72611))

(assert (=> bm!6490 d!17223))

(declare-fun d!17225 () Bool)

(declare-fun res!39132 () Bool)

(declare-fun e!48309 () Bool)

(assert (=> d!17225 (=> res!39132 e!48309)))

(assert (=> d!17225 (= res!39132 (and ((_ is Cons!1479) lt!32673) (= (_1!1071 (h!2066 lt!32673)) (_1!1071 lt!32383))))))

(assert (=> d!17225 (= (containsKey!135 lt!32673 (_1!1071 lt!32383)) e!48309)))

(declare-fun b!73913 () Bool)

(declare-fun e!48310 () Bool)

(assert (=> b!73913 (= e!48309 e!48310)))

(declare-fun res!39133 () Bool)

(assert (=> b!73913 (=> (not res!39133) (not e!48310))))

(assert (=> b!73913 (= res!39133 (and (or (not ((_ is Cons!1479) lt!32673)) (bvsle (_1!1071 (h!2066 lt!32673)) (_1!1071 lt!32383))) ((_ is Cons!1479) lt!32673) (bvslt (_1!1071 (h!2066 lt!32673)) (_1!1071 lt!32383))))))

(declare-fun b!73914 () Bool)

(assert (=> b!73914 (= e!48310 (containsKey!135 (t!5031 lt!32673) (_1!1071 lt!32383)))))

(assert (= (and d!17225 (not res!39132)) b!73913))

(assert (= (and b!73913 res!39133) b!73914))

(declare-fun m!72613 () Bool)

(assert (=> b!73914 m!72613))

(assert (=> b!73291 d!17225))

(assert (=> d!16823 d!16825))

(assert (=> d!16823 d!16817))

(assert (=> d!16823 d!16821))

(assert (=> d!16823 d!16819))

(declare-fun d!17227 () Bool)

(declare-fun e!48321 () Bool)

(assert (=> d!17227 e!48321))

(declare-fun c!11067 () Bool)

(declare-fun lt!33203 () SeekEntryResult!239)

(assert (=> d!17227 (= c!11067 (and ((_ is Intermediate!239) lt!33203) (undefined!1051 lt!33203)))))

(declare-fun e!48322 () SeekEntryResult!239)

(assert (=> d!17227 (= lt!33203 e!48322)))

(declare-fun c!11068 () Bool)

(assert (=> d!17227 (= c!11068 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!33202 () (_ BitVec 64))

(assert (=> d!17227 (= lt!33202 (select (arr!1846 (_keys!3863 newMap!16)) (toIndex!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (mask!6178 newMap!16))))))

(assert (=> d!17227 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17227 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (mask!6178 newMap!16)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)) lt!33203)))

(declare-fun b!73933 () Bool)

(declare-fun e!48325 () SeekEntryResult!239)

(assert (=> b!73933 (= e!48325 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (mask!6178 newMap!16)) #b00000000000000000000000000000000 (mask!6178 newMap!16)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun b!73934 () Bool)

(assert (=> b!73934 (and (bvsge (index!3089 lt!33203) #b00000000000000000000000000000000) (bvslt (index!3089 lt!33203) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun res!39141 () Bool)

(assert (=> b!73934 (= res!39141 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3089 lt!33203)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun e!48323 () Bool)

(assert (=> b!73934 (=> res!39141 e!48323)))

(declare-fun e!48324 () Bool)

(assert (=> b!73934 (= e!48324 e!48323)))

(declare-fun b!73935 () Bool)

(assert (=> b!73935 (= e!48321 (bvsge (x!11154 lt!33203) #b01111111111111111111111111111110))))

(declare-fun b!73936 () Bool)

(assert (=> b!73936 (= e!48322 (Intermediate!239 true (toIndex!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (mask!6178 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!73937 () Bool)

(assert (=> b!73937 (and (bvsge (index!3089 lt!33203) #b00000000000000000000000000000000) (bvslt (index!3089 lt!33203) (size!2085 (_keys!3863 newMap!16))))))

(assert (=> b!73937 (= e!48323 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3089 lt!33203)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73938 () Bool)

(assert (=> b!73938 (= e!48322 e!48325)))

(declare-fun c!11069 () Bool)

(assert (=> b!73938 (= c!11069 (or (= lt!33202 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (= (bvadd lt!33202 lt!33202) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!73939 () Bool)

(assert (=> b!73939 (and (bvsge (index!3089 lt!33203) #b00000000000000000000000000000000) (bvslt (index!3089 lt!33203) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun res!39140 () Bool)

(assert (=> b!73939 (= res!39140 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3089 lt!33203)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73939 (=> res!39140 e!48323)))

(declare-fun b!73940 () Bool)

(assert (=> b!73940 (= e!48321 e!48324)))

(declare-fun res!39142 () Bool)

(assert (=> b!73940 (= res!39142 (and ((_ is Intermediate!239) lt!33203) (not (undefined!1051 lt!33203)) (bvslt (x!11154 lt!33203) #b01111111111111111111111111111110) (bvsge (x!11154 lt!33203) #b00000000000000000000000000000000) (bvsge (x!11154 lt!33203) #b00000000000000000000000000000000)))))

(assert (=> b!73940 (=> (not res!39142) (not e!48324))))

(declare-fun b!73941 () Bool)

(assert (=> b!73941 (= e!48325 (Intermediate!239 false (toIndex!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (mask!6178 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!17227 c!11068) b!73936))

(assert (= (and d!17227 (not c!11068)) b!73938))

(assert (= (and b!73938 c!11069) b!73941))

(assert (= (and b!73938 (not c!11069)) b!73933))

(assert (= (and d!17227 c!11067) b!73935))

(assert (= (and d!17227 (not c!11067)) b!73940))

(assert (= (and b!73940 res!39142) b!73934))

(assert (= (and b!73934 (not res!39141)) b!73939))

(assert (= (and b!73939 (not res!39140)) b!73937))

(declare-fun m!72615 () Bool)

(assert (=> b!73937 m!72615))

(assert (=> b!73934 m!72615))

(assert (=> b!73933 m!71945))

(declare-fun m!72617 () Bool)

(assert (=> b!73933 m!72617))

(assert (=> b!73933 m!72617))

(assert (=> b!73933 m!70791))

(declare-fun m!72619 () Bool)

(assert (=> b!73933 m!72619))

(assert (=> b!73939 m!72615))

(assert (=> d!17227 m!71945))

(declare-fun m!72621 () Bool)

(assert (=> d!17227 m!72621))

(assert (=> d!17227 m!71219))

(assert (=> d!16975 d!17227))

(declare-fun d!17229 () Bool)

(declare-fun lt!33209 () (_ BitVec 32))

(declare-fun lt!33208 () (_ BitVec 32))

(assert (=> d!17229 (= lt!33209 (bvmul (bvxor lt!33208 (bvlshr lt!33208 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!17229 (= lt!33208 ((_ extract 31 0) (bvand (bvxor (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvlshr (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!17229 (and (bvsge (mask!6178 newMap!16) #b00000000000000000000000000000000) (let ((res!39143 (let ((h!2071 ((_ extract 31 0) (bvand (bvxor (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvlshr (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!11257 (bvmul (bvxor h!2071 (bvlshr h!2071 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!11257 (bvlshr x!11257 #b00000000000000000000000000001101)) (mask!6178 newMap!16)))))) (and (bvslt res!39143 (bvadd (mask!6178 newMap!16) #b00000000000000000000000000000001)) (bvsge res!39143 #b00000000000000000000000000000000))))))

(assert (=> d!17229 (= (toIndex!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (mask!6178 newMap!16)) (bvand (bvxor lt!33209 (bvlshr lt!33209 #b00000000000000000000000000001101)) (mask!6178 newMap!16)))))

(assert (=> d!16975 d!17229))

(assert (=> d!16975 d!17001))

(declare-fun d!17231 () Bool)

(declare-fun e!48327 () Bool)

(assert (=> d!17231 e!48327))

(declare-fun res!39144 () Bool)

(assert (=> d!17231 (=> res!39144 e!48327)))

(declare-fun lt!33213 () Bool)

(assert (=> d!17231 (= res!39144 (not lt!33213))))

(declare-fun lt!33211 () Bool)

(assert (=> d!17231 (= lt!33213 lt!33211)))

(declare-fun lt!33210 () Unit!2066)

(declare-fun e!48326 () Unit!2066)

(assert (=> d!17231 (= lt!33210 e!48326)))

(declare-fun c!11070 () Bool)

(assert (=> d!17231 (= c!11070 lt!33211)))

(assert (=> d!17231 (= lt!33211 (containsKey!135 (toList!717 lt!32725) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17231 (= (contains!719 lt!32725 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33213)))

(declare-fun b!73942 () Bool)

(declare-fun lt!33212 () Unit!2066)

(assert (=> b!73942 (= e!48326 lt!33212)))

(assert (=> b!73942 (= lt!33212 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32725) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73942 (isDefined!85 (getValueByKey!131 (toList!717 lt!32725) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73943 () Bool)

(declare-fun Unit!2114 () Unit!2066)

(assert (=> b!73943 (= e!48326 Unit!2114)))

(declare-fun b!73944 () Bool)

(assert (=> b!73944 (= e!48327 (isDefined!85 (getValueByKey!131 (toList!717 lt!32725) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17231 c!11070) b!73942))

(assert (= (and d!17231 (not c!11070)) b!73943))

(assert (= (and d!17231 (not res!39144)) b!73944))

(declare-fun m!72623 () Bool)

(assert (=> d!17231 m!72623))

(declare-fun m!72625 () Bool)

(assert (=> b!73942 m!72625))

(assert (=> b!73942 m!72253))

(assert (=> b!73942 m!72253))

(declare-fun m!72627 () Bool)

(assert (=> b!73942 m!72627))

(assert (=> b!73944 m!72253))

(assert (=> b!73944 m!72253))

(assert (=> b!73944 m!72627))

(assert (=> bm!6437 d!17231))

(declare-fun b!73945 () Bool)

(declare-fun e!48328 () Option!137)

(assert (=> b!73945 (= e!48328 (Some!136 (_2!1071 (h!2066 (t!5031 lt!32640)))))))

(declare-fun b!73948 () Bool)

(declare-fun e!48329 () Option!137)

(assert (=> b!73948 (= e!48329 None!135)))

(declare-fun b!73947 () Bool)

(assert (=> b!73947 (= e!48329 (getValueByKey!131 (t!5031 (t!5031 lt!32640)) (_1!1071 lt!32376)))))

(declare-fun d!17233 () Bool)

(declare-fun c!11071 () Bool)

(assert (=> d!17233 (= c!11071 (and ((_ is Cons!1479) (t!5031 lt!32640)) (= (_1!1071 (h!2066 (t!5031 lt!32640))) (_1!1071 lt!32376))))))

(assert (=> d!17233 (= (getValueByKey!131 (t!5031 lt!32640) (_1!1071 lt!32376)) e!48328)))

(declare-fun b!73946 () Bool)

(assert (=> b!73946 (= e!48328 e!48329)))

(declare-fun c!11072 () Bool)

(assert (=> b!73946 (= c!11072 (and ((_ is Cons!1479) (t!5031 lt!32640)) (not (= (_1!1071 (h!2066 (t!5031 lt!32640))) (_1!1071 lt!32376)))))))

(assert (= (and d!17233 c!11071) b!73945))

(assert (= (and d!17233 (not c!11071)) b!73946))

(assert (= (and b!73946 c!11072) b!73947))

(assert (= (and b!73946 (not c!11072)) b!73948))

(declare-fun m!72629 () Bool)

(assert (=> b!73947 m!72629))

(assert (=> b!73156 d!17233))

(declare-fun d!17235 () Bool)

(assert (=> d!17235 (contains!719 (getCurrentListMap!410 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540)))))

(assert (=> d!17235 true))

(declare-fun _$16!96 () Unit!2066)

(assert (=> d!17235 (= (choose!424 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3088 lt!32540) (defaultEntry!2212 newMap!16)) _$16!96)))

(declare-fun bs!3180 () Bool)

(assert (= bs!3180 d!17235))

(assert (=> bs!3180 m!71685))

(assert (=> bs!3180 m!71017))

(assert (=> bs!3180 m!71685))

(assert (=> bs!3180 m!71017))

(assert (=> bs!3180 m!71687))

(assert (=> d!16915 d!17235))

(assert (=> d!16915 d!17001))

(assert (=> b!73217 d!17089))

(declare-fun d!17237 () Bool)

(assert (=> d!17237 (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33214 () Unit!2066)

(assert (=> d!17237 (= lt!33214 (choose!426 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48330 () Bool)

(assert (=> d!17237 e!48330))

(declare-fun res!39145 () Bool)

(assert (=> d!17237 (=> (not res!39145) (not e!48330))))

(assert (=> d!17237 (= res!39145 (isStrictlySorted!287 (toList!717 lt!32663)))))

(assert (=> d!17237 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000) lt!33214)))

(declare-fun b!73949 () Bool)

(assert (=> b!73949 (= e!48330 (containsKey!135 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17237 res!39145) b!73949))

(assert (=> d!17237 m!71425))

(assert (=> d!17237 m!71425))

(assert (=> d!17237 m!71427))

(declare-fun m!72631 () Bool)

(assert (=> d!17237 m!72631))

(declare-fun m!72633 () Bool)

(assert (=> d!17237 m!72633))

(assert (=> b!73949 m!71421))

(assert (=> b!73243 d!17237))

(declare-fun d!17239 () Bool)

(assert (=> d!17239 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3181 () Bool)

(assert (= bs!3181 d!17239))

(assert (=> bs!3181 m!71425))

(declare-fun m!72635 () Bool)

(assert (=> bs!3181 m!72635))

(assert (=> b!73243 d!17239))

(declare-fun b!73950 () Bool)

(declare-fun e!48331 () Option!137)

(assert (=> b!73950 (= e!48331 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32663)))))))

(declare-fun b!73953 () Bool)

(declare-fun e!48332 () Option!137)

(assert (=> b!73953 (= e!48332 None!135)))

(declare-fun b!73952 () Bool)

(assert (=> b!73952 (= e!48332 (getValueByKey!131 (t!5031 (toList!717 lt!32663)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17241 () Bool)

(declare-fun c!11073 () Bool)

(assert (=> d!17241 (= c!11073 (and ((_ is Cons!1479) (toList!717 lt!32663)) (= (_1!1071 (h!2066 (toList!717 lt!32663))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17241 (= (getValueByKey!131 (toList!717 lt!32663) #b0000000000000000000000000000000000000000000000000000000000000000) e!48331)))

(declare-fun b!73951 () Bool)

(assert (=> b!73951 (= e!48331 e!48332)))

(declare-fun c!11074 () Bool)

(assert (=> b!73951 (= c!11074 (and ((_ is Cons!1479) (toList!717 lt!32663)) (not (= (_1!1071 (h!2066 (toList!717 lt!32663))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!17241 c!11073) b!73950))

(assert (= (and d!17241 (not c!11073)) b!73951))

(assert (= (and b!73951 c!11074) b!73952))

(assert (= (and b!73951 (not c!11074)) b!73953))

(declare-fun m!72637 () Bool)

(assert (=> b!73952 m!72637))

(assert (=> b!73243 d!17241))

(declare-fun b!73954 () Bool)

(declare-fun e!48333 () Option!137)

(assert (=> b!73954 (= e!48333 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32810)))))))

(declare-fun b!73957 () Bool)

(declare-fun e!48334 () Option!137)

(assert (=> b!73957 (= e!48334 None!135)))

(declare-fun b!73956 () Bool)

(assert (=> b!73956 (= e!48334 (getValueByKey!131 (t!5031 (toList!717 lt!32810)) (_1!1071 (tuple2!2121 lt!32659 lt!32662))))))

(declare-fun c!11075 () Bool)

(declare-fun d!17243 () Bool)

(assert (=> d!17243 (= c!11075 (and ((_ is Cons!1479) (toList!717 lt!32810)) (= (_1!1071 (h!2066 (toList!717 lt!32810))) (_1!1071 (tuple2!2121 lt!32659 lt!32662)))))))

(assert (=> d!17243 (= (getValueByKey!131 (toList!717 lt!32810) (_1!1071 (tuple2!2121 lt!32659 lt!32662))) e!48333)))

(declare-fun b!73955 () Bool)

(assert (=> b!73955 (= e!48333 e!48334)))

(declare-fun c!11076 () Bool)

(assert (=> b!73955 (= c!11076 (and ((_ is Cons!1479) (toList!717 lt!32810)) (not (= (_1!1071 (h!2066 (toList!717 lt!32810))) (_1!1071 (tuple2!2121 lt!32659 lt!32662))))))))

(assert (= (and d!17243 c!11075) b!73954))

(assert (= (and d!17243 (not c!11075)) b!73955))

(assert (= (and b!73955 c!11076) b!73956))

(assert (= (and b!73955 (not c!11076)) b!73957))

(declare-fun m!72639 () Bool)

(assert (=> b!73956 m!72639))

(assert (=> b!73354 d!17243))

(declare-fun d!17245 () Bool)

(assert (=> d!17245 (= (size!2091 newMap!16) (bvadd (_size!396 newMap!16) (bvsdiv (bvadd (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!73527 d!17245))

(declare-fun d!17247 () Bool)

(declare-fun lt!33215 () Bool)

(assert (=> d!17247 (= lt!33215 (select (content!78 Nil!1481) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!48336 () Bool)

(assert (=> d!17247 (= lt!33215 e!48336)))

(declare-fun res!39146 () Bool)

(assert (=> d!17247 (=> (not res!39146) (not e!48336))))

(assert (=> d!17247 (= res!39146 ((_ is Cons!1480) Nil!1481))))

(assert (=> d!17247 (= (contains!721 Nil!1481 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) lt!33215)))

(declare-fun b!73958 () Bool)

(declare-fun e!48335 () Bool)

(assert (=> b!73958 (= e!48336 e!48335)))

(declare-fun res!39147 () Bool)

(assert (=> b!73958 (=> res!39147 e!48335)))

(assert (=> b!73958 (= res!39147 (= (h!2067 Nil!1481) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!73959 () Bool)

(assert (=> b!73959 (= e!48335 (contains!721 (t!5032 Nil!1481) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!17247 res!39146) b!73958))

(assert (= (and b!73958 (not res!39147)) b!73959))

(assert (=> d!17247 m!71559))

(assert (=> d!17247 m!71361))

(declare-fun m!72641 () Bool)

(assert (=> d!17247 m!72641))

(assert (=> b!73959 m!71361))

(declare-fun m!72643 () Bool)

(assert (=> b!73959 m!72643))

(assert (=> b!73236 d!17247))

(declare-fun b!73960 () Bool)

(declare-fun e!48337 () (_ BitVec 32))

(assert (=> b!73960 (= e!48337 #b00000000000000000000000000000000)))

(declare-fun b!73961 () Bool)

(declare-fun e!48338 () (_ BitVec 32))

(declare-fun call!6526 () (_ BitVec 32))

(assert (=> b!73961 (= e!48338 call!6526)))

(declare-fun bm!6523 () Bool)

(assert (=> bm!6523 (= call!6526 (arrayCountValidKeys!0 (_keys!3863 (_2!1072 lt!32534)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (_2!1072 lt!32534)))))))

(declare-fun b!73962 () Bool)

(assert (=> b!73962 (= e!48337 e!48338)))

(declare-fun c!11077 () Bool)

(assert (=> b!73962 (= c!11077 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000)))))

(declare-fun b!73963 () Bool)

(assert (=> b!73963 (= e!48338 (bvadd #b00000000000000000000000000000001 call!6526))))

(declare-fun d!17249 () Bool)

(declare-fun lt!33216 () (_ BitVec 32))

(assert (=> d!17249 (and (bvsge lt!33216 #b00000000000000000000000000000000) (bvsle lt!33216 (bvsub (size!2085 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000)))))

(assert (=> d!17249 (= lt!33216 e!48337)))

(declare-fun c!11078 () Bool)

(assert (=> d!17249 (= c!11078 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))))))

(assert (=> d!17249 (and (bvsle #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2085 (_keys!3863 (_2!1072 lt!32534))) (size!2085 (_keys!3863 (_2!1072 lt!32534)))))))

(assert (=> d!17249 (= (arrayCountValidKeys!0 (_keys!3863 (_2!1072 lt!32534)) #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))) lt!33216)))

(assert (= (and d!17249 c!11078) b!73960))

(assert (= (and d!17249 (not c!11078)) b!73962))

(assert (= (and b!73962 c!11077) b!73963))

(assert (= (and b!73962 (not c!11077)) b!73961))

(assert (= (or b!73963 b!73961) bm!6523))

(declare-fun m!72645 () Bool)

(assert (=> bm!6523 m!72645))

(assert (=> b!73962 m!72417))

(assert (=> b!73962 m!72417))

(assert (=> b!73962 m!72429))

(assert (=> b!73307 d!17249))

(assert (=> b!73491 d!17089))

(assert (=> d!16961 d!16945))

(assert (=> d!16961 d!16951))

(declare-fun d!17251 () Bool)

(declare-fun e!48340 () Bool)

(assert (=> d!17251 e!48340))

(declare-fun res!39148 () Bool)

(assert (=> d!17251 (=> res!39148 e!48340)))

(declare-fun lt!33220 () Bool)

(assert (=> d!17251 (= res!39148 (not lt!33220))))

(declare-fun lt!33218 () Bool)

(assert (=> d!17251 (= lt!33220 lt!33218)))

(declare-fun lt!33217 () Unit!2066)

(declare-fun e!48339 () Unit!2066)

(assert (=> d!17251 (= lt!33217 e!48339)))

(declare-fun c!11079 () Bool)

(assert (=> d!17251 (= c!11079 lt!33218)))

(assert (=> d!17251 (= lt!33218 (containsKey!135 (toList!717 lt!32607) lt!32618))))

(assert (=> d!17251 (= (contains!719 lt!32607 lt!32618) lt!33220)))

(declare-fun b!73964 () Bool)

(declare-fun lt!33219 () Unit!2066)

(assert (=> b!73964 (= e!48339 lt!33219)))

(assert (=> b!73964 (= lt!33219 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32607) lt!32618))))

(assert (=> b!73964 (isDefined!85 (getValueByKey!131 (toList!717 lt!32607) lt!32618))))

(declare-fun b!73965 () Bool)

(declare-fun Unit!2115 () Unit!2066)

(assert (=> b!73965 (= e!48339 Unit!2115)))

(declare-fun b!73966 () Bool)

(assert (=> b!73966 (= e!48340 (isDefined!85 (getValueByKey!131 (toList!717 lt!32607) lt!32618)))))

(assert (= (and d!17251 c!11079) b!73964))

(assert (= (and d!17251 (not c!11079)) b!73965))

(assert (= (and d!17251 (not res!39148)) b!73966))

(declare-fun m!72647 () Bool)

(assert (=> d!17251 m!72647))

(declare-fun m!72649 () Bool)

(assert (=> b!73964 m!72649))

(assert (=> b!73964 m!71863))

(assert (=> b!73964 m!71863))

(declare-fun m!72651 () Bool)

(assert (=> b!73964 m!72651))

(assert (=> b!73966 m!71863))

(assert (=> b!73966 m!71863))

(assert (=> b!73966 m!72651))

(assert (=> d!16961 d!17251))

(declare-fun d!17253 () Bool)

(assert (=> d!17253 (= (apply!75 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32618) (apply!75 lt!32607 lt!32618))))

(assert (=> d!17253 true))

(declare-fun _$34!810 () Unit!2066)

(assert (=> d!17253 (= (choose!428 lt!32607 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32618) _$34!810)))

(declare-fun bs!3182 () Bool)

(assert (= bs!3182 d!17253))

(assert (=> bs!3182 m!71033))

(assert (=> bs!3182 m!71033))

(assert (=> bs!3182 m!71035))

(assert (=> bs!3182 m!71049))

(assert (=> d!16961 d!17253))

(assert (=> d!16961 d!16963))

(declare-fun d!17255 () Bool)

(declare-fun res!39149 () Bool)

(declare-fun e!48341 () Bool)

(assert (=> d!17255 (=> res!39149 e!48341)))

(assert (=> d!17255 (= res!39149 (and ((_ is Cons!1479) (toList!717 call!6396)) (= (_1!1071 (h!2066 (toList!717 call!6396))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (=> d!17255 (= (containsKey!135 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) e!48341)))

(declare-fun b!73968 () Bool)

(declare-fun e!48342 () Bool)

(assert (=> b!73968 (= e!48341 e!48342)))

(declare-fun res!39150 () Bool)

(assert (=> b!73968 (=> (not res!39150) (not e!48342))))

(assert (=> b!73968 (= res!39150 (and (or (not ((_ is Cons!1479) (toList!717 call!6396))) (bvsle (_1!1071 (h!2066 (toList!717 call!6396))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))) ((_ is Cons!1479) (toList!717 call!6396)) (bvslt (_1!1071 (h!2066 (toList!717 call!6396))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(declare-fun b!73969 () Bool)

(assert (=> b!73969 (= e!48342 (containsKey!135 (t!5031 (toList!717 call!6396)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (= (and d!17255 (not res!39149)) b!73968))

(assert (= (and b!73968 res!39150) b!73969))

(assert (=> b!73969 m!70791))

(declare-fun m!72653 () Bool)

(assert (=> b!73969 m!72653))

(assert (=> d!16803 d!17255))

(declare-fun d!17257 () Bool)

(declare-fun res!39151 () Bool)

(declare-fun e!48343 () Bool)

(assert (=> d!17257 (=> res!39151 e!48343)))

(assert (=> d!17257 (= res!39151 (= (select (arr!1846 (_keys!3863 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!17257 (= (arrayContainsKey!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!48343)))

(declare-fun b!73970 () Bool)

(declare-fun e!48344 () Bool)

(assert (=> b!73970 (= e!48343 e!48344)))

(declare-fun res!39152 () Bool)

(assert (=> b!73970 (=> (not res!39152) (not e!48344))))

(assert (=> b!73970 (= res!39152 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!73971 () Bool)

(assert (=> b!73971 (= e!48344 (arrayContainsKey!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!17257 (not res!39151)) b!73970))

(assert (= (and b!73970 res!39152) b!73971))

(assert (=> d!17257 m!72601))

(assert (=> b!73971 m!70791))

(declare-fun m!72655 () Bool)

(assert (=> b!73971 m!72655))

(assert (=> b!73574 d!17257))

(declare-fun d!17259 () Bool)

(declare-fun e!48346 () Bool)

(assert (=> d!17259 e!48346))

(declare-fun res!39153 () Bool)

(assert (=> d!17259 (=> res!39153 e!48346)))

(declare-fun lt!33224 () Bool)

(assert (=> d!17259 (= res!39153 (not lt!33224))))

(declare-fun lt!33222 () Bool)

(assert (=> d!17259 (= lt!33224 lt!33222)))

(declare-fun lt!33221 () Unit!2066)

(declare-fun e!48345 () Unit!2066)

(assert (=> d!17259 (= lt!33221 e!48345)))

(declare-fun c!11080 () Bool)

(assert (=> d!17259 (= c!11080 lt!33222)))

(assert (=> d!17259 (= lt!33222 (containsKey!135 (toList!717 lt!32810) (_1!1071 (tuple2!2121 lt!32659 lt!32662))))))

(assert (=> d!17259 (= (contains!719 lt!32810 (_1!1071 (tuple2!2121 lt!32659 lt!32662))) lt!33224)))

(declare-fun b!73972 () Bool)

(declare-fun lt!33223 () Unit!2066)

(assert (=> b!73972 (= e!48345 lt!33223)))

(assert (=> b!73972 (= lt!33223 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32810) (_1!1071 (tuple2!2121 lt!32659 lt!32662))))))

(assert (=> b!73972 (isDefined!85 (getValueByKey!131 (toList!717 lt!32810) (_1!1071 (tuple2!2121 lt!32659 lt!32662))))))

(declare-fun b!73973 () Bool)

(declare-fun Unit!2116 () Unit!2066)

(assert (=> b!73973 (= e!48345 Unit!2116)))

(declare-fun b!73974 () Bool)

(assert (=> b!73974 (= e!48346 (isDefined!85 (getValueByKey!131 (toList!717 lt!32810) (_1!1071 (tuple2!2121 lt!32659 lt!32662)))))))

(assert (= (and d!17259 c!11080) b!73972))

(assert (= (and d!17259 (not c!11080)) b!73973))

(assert (= (and d!17259 (not res!39153)) b!73974))

(declare-fun m!72657 () Bool)

(assert (=> d!17259 m!72657))

(declare-fun m!72659 () Bool)

(assert (=> b!73972 m!72659))

(assert (=> b!73972 m!71593))

(assert (=> b!73972 m!71593))

(declare-fun m!72661 () Bool)

(assert (=> b!73972 m!72661))

(assert (=> b!73974 m!71593))

(assert (=> b!73974 m!71593))

(assert (=> b!73974 m!72661))

(assert (=> d!16901 d!17259))

(declare-fun b!73975 () Bool)

(declare-fun e!48347 () Option!137)

(assert (=> b!73975 (= e!48347 (Some!136 (_2!1071 (h!2066 lt!32811))))))

(declare-fun b!73978 () Bool)

(declare-fun e!48348 () Option!137)

(assert (=> b!73978 (= e!48348 None!135)))

(declare-fun b!73977 () Bool)

(assert (=> b!73977 (= e!48348 (getValueByKey!131 (t!5031 lt!32811) (_1!1071 (tuple2!2121 lt!32659 lt!32662))))))

(declare-fun c!11081 () Bool)

(declare-fun d!17261 () Bool)

(assert (=> d!17261 (= c!11081 (and ((_ is Cons!1479) lt!32811) (= (_1!1071 (h!2066 lt!32811)) (_1!1071 (tuple2!2121 lt!32659 lt!32662)))))))

(assert (=> d!17261 (= (getValueByKey!131 lt!32811 (_1!1071 (tuple2!2121 lt!32659 lt!32662))) e!48347)))

(declare-fun b!73976 () Bool)

(assert (=> b!73976 (= e!48347 e!48348)))

(declare-fun c!11082 () Bool)

(assert (=> b!73976 (= c!11082 (and ((_ is Cons!1479) lt!32811) (not (= (_1!1071 (h!2066 lt!32811)) (_1!1071 (tuple2!2121 lt!32659 lt!32662))))))))

(assert (= (and d!17261 c!11081) b!73975))

(assert (= (and d!17261 (not c!11081)) b!73976))

(assert (= (and b!73976 c!11082) b!73977))

(assert (= (and b!73976 (not c!11082)) b!73978))

(declare-fun m!72663 () Bool)

(assert (=> b!73977 m!72663))

(assert (=> d!16901 d!17261))

(declare-fun d!17263 () Bool)

(assert (=> d!17263 (= (getValueByKey!131 lt!32811 (_1!1071 (tuple2!2121 lt!32659 lt!32662))) (Some!136 (_2!1071 (tuple2!2121 lt!32659 lt!32662))))))

(declare-fun lt!33225 () Unit!2066)

(assert (=> d!17263 (= lt!33225 (choose!420 lt!32811 (_1!1071 (tuple2!2121 lt!32659 lt!32662)) (_2!1071 (tuple2!2121 lt!32659 lt!32662))))))

(declare-fun e!48349 () Bool)

(assert (=> d!17263 e!48349))

(declare-fun res!39154 () Bool)

(assert (=> d!17263 (=> (not res!39154) (not e!48349))))

(assert (=> d!17263 (= res!39154 (isStrictlySorted!287 lt!32811))))

(assert (=> d!17263 (= (lemmaContainsTupThenGetReturnValue!51 lt!32811 (_1!1071 (tuple2!2121 lt!32659 lt!32662)) (_2!1071 (tuple2!2121 lt!32659 lt!32662))) lt!33225)))

(declare-fun b!73979 () Bool)

(declare-fun res!39155 () Bool)

(assert (=> b!73979 (=> (not res!39155) (not e!48349))))

(assert (=> b!73979 (= res!39155 (containsKey!135 lt!32811 (_1!1071 (tuple2!2121 lt!32659 lt!32662))))))

(declare-fun b!73980 () Bool)

(assert (=> b!73980 (= e!48349 (contains!722 lt!32811 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32659 lt!32662)) (_2!1071 (tuple2!2121 lt!32659 lt!32662)))))))

(assert (= (and d!17263 res!39154) b!73979))

(assert (= (and b!73979 res!39155) b!73980))

(assert (=> d!17263 m!71587))

(declare-fun m!72665 () Bool)

(assert (=> d!17263 m!72665))

(declare-fun m!72667 () Bool)

(assert (=> d!17263 m!72667))

(declare-fun m!72669 () Bool)

(assert (=> b!73979 m!72669))

(declare-fun m!72671 () Bool)

(assert (=> b!73980 m!72671))

(assert (=> d!16901 d!17263))

(declare-fun d!17265 () Bool)

(declare-fun e!48352 () Bool)

(assert (=> d!17265 e!48352))

(declare-fun res!39157 () Bool)

(assert (=> d!17265 (=> (not res!39157) (not e!48352))))

(declare-fun lt!33226 () List!1483)

(assert (=> d!17265 (= res!39157 (isStrictlySorted!287 lt!33226))))

(declare-fun e!48354 () List!1483)

(assert (=> d!17265 (= lt!33226 e!48354)))

(declare-fun c!11085 () Bool)

(assert (=> d!17265 (= c!11085 (and ((_ is Cons!1479) (toList!717 lt!32664)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32664))) (_1!1071 (tuple2!2121 lt!32659 lt!32662)))))))

(assert (=> d!17265 (isStrictlySorted!287 (toList!717 lt!32664))))

(assert (=> d!17265 (= (insertStrictlySorted!54 (toList!717 lt!32664) (_1!1071 (tuple2!2121 lt!32659 lt!32662)) (_2!1071 (tuple2!2121 lt!32659 lt!32662))) lt!33226)))

(declare-fun b!73981 () Bool)

(declare-fun res!39156 () Bool)

(assert (=> b!73981 (=> (not res!39156) (not e!48352))))

(assert (=> b!73981 (= res!39156 (containsKey!135 lt!33226 (_1!1071 (tuple2!2121 lt!32659 lt!32662))))))

(declare-fun b!73982 () Bool)

(declare-fun e!48353 () List!1483)

(declare-fun call!6529 () List!1483)

(assert (=> b!73982 (= e!48353 call!6529)))

(declare-fun bm!6524 () Bool)

(declare-fun call!6527 () List!1483)

(declare-fun call!6528 () List!1483)

(assert (=> bm!6524 (= call!6527 call!6528)))

(declare-fun b!73983 () Bool)

(assert (=> b!73983 (= e!48354 call!6528)))

(declare-fun b!73984 () Bool)

(declare-fun e!48350 () List!1483)

(assert (=> b!73984 (= e!48350 (insertStrictlySorted!54 (t!5031 (toList!717 lt!32664)) (_1!1071 (tuple2!2121 lt!32659 lt!32662)) (_2!1071 (tuple2!2121 lt!32659 lt!32662))))))

(declare-fun b!73985 () Bool)

(assert (=> b!73985 (= e!48353 call!6529)))

(declare-fun b!73986 () Bool)

(assert (=> b!73986 (= e!48352 (contains!722 lt!33226 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32659 lt!32662)) (_2!1071 (tuple2!2121 lt!32659 lt!32662)))))))

(declare-fun c!11083 () Bool)

(declare-fun b!73987 () Bool)

(assert (=> b!73987 (= c!11083 (and ((_ is Cons!1479) (toList!717 lt!32664)) (bvsgt (_1!1071 (h!2066 (toList!717 lt!32664))) (_1!1071 (tuple2!2121 lt!32659 lt!32662)))))))

(declare-fun e!48351 () List!1483)

(assert (=> b!73987 (= e!48351 e!48353)))

(declare-fun bm!6525 () Bool)

(assert (=> bm!6525 (= call!6528 ($colon$colon!65 e!48350 (ite c!11085 (h!2066 (toList!717 lt!32664)) (tuple2!2121 (_1!1071 (tuple2!2121 lt!32659 lt!32662)) (_2!1071 (tuple2!2121 lt!32659 lt!32662))))))))

(declare-fun c!11086 () Bool)

(assert (=> bm!6525 (= c!11086 c!11085)))

(declare-fun bm!6526 () Bool)

(assert (=> bm!6526 (= call!6529 call!6527)))

(declare-fun b!73988 () Bool)

(assert (=> b!73988 (= e!48354 e!48351)))

(declare-fun c!11084 () Bool)

(assert (=> b!73988 (= c!11084 (and ((_ is Cons!1479) (toList!717 lt!32664)) (= (_1!1071 (h!2066 (toList!717 lt!32664))) (_1!1071 (tuple2!2121 lt!32659 lt!32662)))))))

(declare-fun b!73989 () Bool)

(assert (=> b!73989 (= e!48351 call!6527)))

(declare-fun b!73990 () Bool)

(assert (=> b!73990 (= e!48350 (ite c!11084 (t!5031 (toList!717 lt!32664)) (ite c!11083 (Cons!1479 (h!2066 (toList!717 lt!32664)) (t!5031 (toList!717 lt!32664))) Nil!1480)))))

(assert (= (and d!17265 c!11085) b!73983))

(assert (= (and d!17265 (not c!11085)) b!73988))

(assert (= (and b!73988 c!11084) b!73989))

(assert (= (and b!73988 (not c!11084)) b!73987))

(assert (= (and b!73987 c!11083) b!73985))

(assert (= (and b!73987 (not c!11083)) b!73982))

(assert (= (or b!73985 b!73982) bm!6526))

(assert (= (or b!73989 bm!6526) bm!6524))

(assert (= (or b!73983 bm!6524) bm!6525))

(assert (= (and bm!6525 c!11086) b!73984))

(assert (= (and bm!6525 (not c!11086)) b!73990))

(assert (= (and d!17265 res!39157) b!73981))

(assert (= (and b!73981 res!39156) b!73986))

(declare-fun m!72673 () Bool)

(assert (=> bm!6525 m!72673))

(declare-fun m!72675 () Bool)

(assert (=> d!17265 m!72675))

(declare-fun m!72677 () Bool)

(assert (=> d!17265 m!72677))

(declare-fun m!72679 () Bool)

(assert (=> b!73984 m!72679))

(declare-fun m!72681 () Bool)

(assert (=> b!73986 m!72681))

(declare-fun m!72683 () Bool)

(assert (=> b!73981 m!72683))

(assert (=> d!16901 d!17265))

(assert (=> b!73286 d!17129))

(assert (=> b!73286 d!16833))

(declare-fun d!17267 () Bool)

(declare-fun e!48356 () Bool)

(assert (=> d!17267 e!48356))

(declare-fun res!39158 () Bool)

(assert (=> d!17267 (=> res!39158 e!48356)))

(declare-fun lt!33230 () Bool)

(assert (=> d!17267 (= res!39158 (not lt!33230))))

(declare-fun lt!33228 () Bool)

(assert (=> d!17267 (= lt!33230 lt!33228)))

(declare-fun lt!33227 () Unit!2066)

(declare-fun e!48355 () Unit!2066)

(assert (=> d!17267 (= lt!33227 e!48355)))

(declare-fun c!11087 () Bool)

(assert (=> d!17267 (= c!11087 lt!33228)))

(assert (=> d!17267 (= lt!33228 (containsKey!135 (toList!717 lt!32919) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17267 (= (contains!719 lt!32919 #b0000000000000000000000000000000000000000000000000000000000000000) lt!33230)))

(declare-fun b!73991 () Bool)

(declare-fun lt!33229 () Unit!2066)

(assert (=> b!73991 (= e!48355 lt!33229)))

(assert (=> b!73991 (= lt!33229 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32919) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73991 (isDefined!85 (getValueByKey!131 (toList!717 lt!32919) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!73992 () Bool)

(declare-fun Unit!2117 () Unit!2066)

(assert (=> b!73992 (= e!48355 Unit!2117)))

(declare-fun b!73993 () Bool)

(assert (=> b!73993 (= e!48356 (isDefined!85 (getValueByKey!131 (toList!717 lt!32919) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17267 c!11087) b!73991))

(assert (= (and d!17267 (not c!11087)) b!73992))

(assert (= (and d!17267 (not res!39158)) b!73993))

(declare-fun m!72685 () Bool)

(assert (=> d!17267 m!72685))

(declare-fun m!72687 () Bool)

(assert (=> b!73991 m!72687))

(assert (=> b!73991 m!72383))

(assert (=> b!73991 m!72383))

(declare-fun m!72689 () Bool)

(assert (=> b!73991 m!72689))

(assert (=> b!73993 m!72383))

(assert (=> b!73993 m!72383))

(assert (=> b!73993 m!72689))

(assert (=> bm!6472 d!17267))

(assert (=> d!16829 d!17001))

(assert (=> b!73130 d!17201))

(declare-fun b!73994 () Bool)

(declare-fun e!48357 () Bool)

(declare-fun e!48360 () Bool)

(assert (=> b!73994 (= e!48357 e!48360)))

(declare-fun res!39159 () Bool)

(assert (=> b!73994 (=> (not res!39159) (not e!48360))))

(declare-fun e!48359 () Bool)

(assert (=> b!73994 (= res!39159 (not e!48359))))

(declare-fun res!39160 () Bool)

(assert (=> b!73994 (=> (not res!39160) (not e!48359))))

(assert (=> b!73994 (= res!39160 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun c!11088 () Bool)

(declare-fun bm!6527 () Bool)

(declare-fun call!6530 () Bool)

(assert (=> bm!6527 (= call!6530 (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!11088 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!10847 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481))) (ite c!10847 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)))))))

(declare-fun d!17269 () Bool)

(declare-fun res!39161 () Bool)

(assert (=> d!17269 (=> res!39161 e!48357)))

(assert (=> d!17269 (= res!39161 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!17269 (= (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!10847 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481))) e!48357)))

(declare-fun b!73995 () Bool)

(declare-fun e!48358 () Bool)

(assert (=> b!73995 (= e!48360 e!48358)))

(assert (=> b!73995 (= c!11088 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!73996 () Bool)

(assert (=> b!73996 (= e!48358 call!6530)))

(declare-fun b!73997 () Bool)

(assert (=> b!73997 (= e!48359 (contains!721 (ite c!10847 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!73998 () Bool)

(assert (=> b!73998 (= e!48358 call!6530)))

(assert (= (and d!17269 (not res!39161)) b!73994))

(assert (= (and b!73994 res!39160) b!73997))

(assert (= (and b!73994 res!39159) b!73995))

(assert (= (and b!73995 c!11088) b!73998))

(assert (= (and b!73995 (not c!11088)) b!73996))

(assert (= (or b!73998 b!73996) bm!6527))

(declare-fun m!72691 () Bool)

(assert (=> b!73994 m!72691))

(assert (=> b!73994 m!72691))

(declare-fun m!72693 () Bool)

(assert (=> b!73994 m!72693))

(assert (=> bm!6527 m!72691))

(declare-fun m!72695 () Bool)

(assert (=> bm!6527 m!72695))

(assert (=> b!73995 m!72691))

(assert (=> b!73995 m!72691))

(assert (=> b!73995 m!72693))

(assert (=> b!73997 m!72691))

(assert (=> b!73997 m!72691))

(declare-fun m!72697 () Bool)

(assert (=> b!73997 m!72697))

(assert (=> bm!6426 d!17269))

(declare-fun d!17271 () Bool)

(assert (=> d!17271 (= (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32619)) (v!2529 (getValueByKey!131 (toList!717 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32619)))))

(assert (=> d!16949 d!17271))

(declare-fun b!73999 () Bool)

(declare-fun e!48361 () Option!137)

(assert (=> b!73999 (= e!48361 (Some!136 (_2!1071 (h!2066 (toList!717 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))))

(declare-fun b!74002 () Bool)

(declare-fun e!48362 () Option!137)

(assert (=> b!74002 (= e!48362 None!135)))

(declare-fun b!74001 () Bool)

(assert (=> b!74001 (= e!48362 (getValueByKey!131 (t!5031 (toList!717 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) lt!32619))))

(declare-fun c!11089 () Bool)

(declare-fun d!17273 () Bool)

(assert (=> d!17273 (= c!11089 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32619)))))

(assert (=> d!17273 (= (getValueByKey!131 (toList!717 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32619) e!48361)))

(declare-fun b!74000 () Bool)

(assert (=> b!74000 (= e!48361 e!48362)))

(declare-fun c!11090 () Bool)

(assert (=> b!74000 (= c!11090 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) (not (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32619))))))

(assert (= (and d!17273 c!11089) b!73999))

(assert (= (and d!17273 (not c!11089)) b!74000))

(assert (= (and b!74000 c!11090) b!74001))

(assert (= (and b!74000 (not c!11090)) b!74002))

(declare-fun m!72699 () Bool)

(assert (=> b!74001 m!72699))

(assert (=> d!16949 d!17273))

(declare-fun d!17275 () Bool)

(declare-fun res!39162 () Bool)

(declare-fun e!48363 () Bool)

(assert (=> d!17275 (=> res!39162 e!48363)))

(assert (=> d!17275 (= res!39162 (and ((_ is Cons!1479) (toList!717 lt!32643)) (= (_1!1071 (h!2066 (toList!717 lt!32643))) (_1!1071 lt!32376))))))

(assert (=> d!17275 (= (containsKey!135 (toList!717 lt!32643) (_1!1071 lt!32376)) e!48363)))

(declare-fun b!74003 () Bool)

(declare-fun e!48364 () Bool)

(assert (=> b!74003 (= e!48363 e!48364)))

(declare-fun res!39163 () Bool)

(assert (=> b!74003 (=> (not res!39163) (not e!48364))))

(assert (=> b!74003 (= res!39163 (and (or (not ((_ is Cons!1479) (toList!717 lt!32643))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32643))) (_1!1071 lt!32376))) ((_ is Cons!1479) (toList!717 lt!32643)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32643))) (_1!1071 lt!32376))))))

(declare-fun b!74004 () Bool)

(assert (=> b!74004 (= e!48364 (containsKey!135 (t!5031 (toList!717 lt!32643)) (_1!1071 lt!32376)))))

(assert (= (and d!17275 (not res!39162)) b!74003))

(assert (= (and b!74003 res!39163) b!74004))

(declare-fun m!72701 () Bool)

(assert (=> b!74004 m!72701))

(assert (=> d!16849 d!17275))

(declare-fun d!17277 () Bool)

(assert (=> d!17277 (= (get!1147 (getValueByKey!131 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2529 (getValueByKey!131 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!16863 d!17277))

(assert (=> d!16863 d!17013))

(assert (=> d!16935 d!17001))

(declare-fun d!17279 () Bool)

(declare-fun lt!33231 () Bool)

(assert (=> d!17279 (= lt!33231 (select (content!77 lt!32673) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun e!48366 () Bool)

(assert (=> d!17279 (= lt!33231 e!48366)))

(declare-fun res!39164 () Bool)

(assert (=> d!17279 (=> (not res!39164) (not e!48366))))

(assert (=> d!17279 (= res!39164 ((_ is Cons!1479) lt!32673))))

(assert (=> d!17279 (= (contains!722 lt!32673 (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))) lt!33231)))

(declare-fun b!74005 () Bool)

(declare-fun e!48365 () Bool)

(assert (=> b!74005 (= e!48366 e!48365)))

(declare-fun res!39165 () Bool)

(assert (=> b!74005 (=> res!39165 e!48365)))

(assert (=> b!74005 (= res!39165 (= (h!2066 lt!32673) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun b!74006 () Bool)

(assert (=> b!74006 (= e!48365 (contains!722 (t!5031 lt!32673) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(assert (= (and d!17279 res!39164) b!74005))

(assert (= (and b!74005 (not res!39165)) b!74006))

(declare-fun m!72703 () Bool)

(assert (=> d!17279 m!72703))

(declare-fun m!72705 () Bool)

(assert (=> d!17279 m!72705))

(declare-fun m!72707 () Bool)

(assert (=> b!74006 m!72707))

(assert (=> b!73292 d!17279))

(declare-fun d!17281 () Bool)

(assert (=> d!17281 (contains!719 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))

(declare-fun lt!33234 () Unit!2066)

(declare-fun choose!430 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 64) (_ BitVec 32) Int) Unit!2066)

(assert (=> d!17281 (= lt!33234 (choose!430 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (=> d!17281 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17281 (= (lemmaArrayContainsKeyThenInListMap!13 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33234)))

(declare-fun bs!3183 () Bool)

(assert (= bs!3183 d!17281))

(assert (=> bs!3183 m!70991))

(assert (=> bs!3183 m!70991))

(assert (=> bs!3183 m!70791))

(assert (=> bs!3183 m!71647))

(assert (=> bs!3183 m!70791))

(declare-fun m!72709 () Bool)

(assert (=> bs!3183 m!72709))

(assert (=> bs!3183 m!71219))

(assert (=> b!73400 d!17281))

(declare-fun d!17283 () Bool)

(declare-fun e!48368 () Bool)

(assert (=> d!17283 e!48368))

(declare-fun res!39166 () Bool)

(assert (=> d!17283 (=> res!39166 e!48368)))

(declare-fun lt!33238 () Bool)

(assert (=> d!17283 (= res!39166 (not lt!33238))))

(declare-fun lt!33236 () Bool)

(assert (=> d!17283 (= lt!33238 lt!33236)))

(declare-fun lt!33235 () Unit!2066)

(declare-fun e!48367 () Unit!2066)

(assert (=> d!17283 (= lt!33235 e!48367)))

(declare-fun c!11091 () Bool)

(assert (=> d!17283 (= c!11091 lt!33236)))

(assert (=> d!17283 (= lt!33236 (containsKey!135 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!17283 (= (contains!719 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) lt!33238)))

(declare-fun b!74007 () Bool)

(declare-fun lt!33237 () Unit!2066)

(assert (=> b!74007 (= e!48367 lt!33237)))

(assert (=> b!74007 (= lt!33237 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> b!74007 (isDefined!85 (getValueByKey!131 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!74008 () Bool)

(declare-fun Unit!2118 () Unit!2066)

(assert (=> b!74008 (= e!48367 Unit!2118)))

(declare-fun b!74009 () Bool)

(assert (=> b!74009 (= e!48368 (isDefined!85 (getValueByKey!131 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (= (and d!17283 c!11091) b!74007))

(assert (= (and d!17283 (not c!11091)) b!74008))

(assert (= (and d!17283 (not res!39166)) b!74009))

(assert (=> d!17283 m!70791))

(declare-fun m!72711 () Bool)

(assert (=> d!17283 m!72711))

(assert (=> b!74007 m!70791))

(declare-fun m!72713 () Bool)

(assert (=> b!74007 m!72713))

(assert (=> b!74007 m!70791))

(declare-fun m!72715 () Bool)

(assert (=> b!74007 m!72715))

(assert (=> b!74007 m!72715))

(declare-fun m!72717 () Bool)

(assert (=> b!74007 m!72717))

(assert (=> b!74009 m!70791))

(assert (=> b!74009 m!72715))

(assert (=> b!74009 m!72715))

(assert (=> b!74009 m!72717))

(assert (=> b!73400 d!17283))

(assert (=> b!73400 d!16829))

(declare-fun d!17285 () Bool)

(declare-fun e!48369 () Bool)

(assert (=> d!17285 e!48369))

(declare-fun res!39168 () Bool)

(assert (=> d!17285 (=> (not res!39168) (not e!48369))))

(declare-fun lt!33241 () ListLongMap!1403)

(assert (=> d!17285 (= res!39168 (contains!719 lt!33241 (_1!1071 (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(declare-fun lt!33242 () List!1483)

(assert (=> d!17285 (= lt!33241 (ListLongMap!1404 lt!33242))))

(declare-fun lt!33240 () Unit!2066)

(declare-fun lt!33239 () Unit!2066)

(assert (=> d!17285 (= lt!33240 lt!33239)))

(assert (=> d!17285 (= (getValueByKey!131 lt!33242 (_1!1071 (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))) (Some!136 (_2!1071 (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17285 (= lt!33239 (lemmaContainsTupThenGetReturnValue!51 lt!33242 (_1!1071 (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (_2!1071 (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17285 (= lt!33242 (insertStrictlySorted!54 (toList!717 (ite c!10872 call!6444 (ite c!10871 call!6442 call!6445))) (_1!1071 (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (_2!1071 (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17285 (= (+!93 (ite c!10872 call!6444 (ite c!10871 call!6442 call!6445)) (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) lt!33241)))

(declare-fun b!74010 () Bool)

(declare-fun res!39167 () Bool)

(assert (=> b!74010 (=> (not res!39167) (not e!48369))))

(assert (=> b!74010 (= res!39167 (= (getValueByKey!131 (toList!717 lt!33241) (_1!1071 (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))) (Some!136 (_2!1071 (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))))

(declare-fun b!74011 () Bool)

(assert (=> b!74011 (= e!48369 (contains!722 (toList!717 lt!33241) (ite (or c!10872 c!10871) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (= (and d!17285 res!39168) b!74010))

(assert (= (and b!74010 res!39167) b!74011))

(declare-fun m!72719 () Bool)

(assert (=> d!17285 m!72719))

(declare-fun m!72721 () Bool)

(assert (=> d!17285 m!72721))

(declare-fun m!72723 () Bool)

(assert (=> d!17285 m!72723))

(declare-fun m!72725 () Bool)

(assert (=> d!17285 m!72725))

(declare-fun m!72727 () Bool)

(assert (=> b!74010 m!72727))

(declare-fun m!72729 () Bool)

(assert (=> b!74011 m!72729))

(assert (=> bm!6438 d!17285))

(declare-fun d!17287 () Bool)

(declare-fun e!48372 () Bool)

(assert (=> d!17287 e!48372))

(declare-fun res!39170 () Bool)

(assert (=> d!17287 (=> (not res!39170) (not e!48372))))

(declare-fun lt!33243 () List!1483)

(assert (=> d!17287 (= res!39170 (isStrictlySorted!287 lt!33243))))

(declare-fun e!48374 () List!1483)

(assert (=> d!17287 (= lt!33243 e!48374)))

(declare-fun c!11094 () Bool)

(assert (=> d!17287 (= c!11094 (and ((_ is Cons!1479) (t!5031 (toList!717 (+!93 lt!32377 lt!32383)))) (bvslt (_1!1071 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32383))))) (_1!1071 lt!32376))))))

(assert (=> d!17287 (isStrictlySorted!287 (t!5031 (toList!717 (+!93 lt!32377 lt!32383))))))

(assert (=> d!17287 (= (insertStrictlySorted!54 (t!5031 (toList!717 (+!93 lt!32377 lt!32383))) (_1!1071 lt!32376) (_2!1071 lt!32376)) lt!33243)))

(declare-fun b!74012 () Bool)

(declare-fun res!39169 () Bool)

(assert (=> b!74012 (=> (not res!39169) (not e!48372))))

(assert (=> b!74012 (= res!39169 (containsKey!135 lt!33243 (_1!1071 lt!32376)))))

(declare-fun b!74013 () Bool)

(declare-fun e!48373 () List!1483)

(declare-fun call!6533 () List!1483)

(assert (=> b!74013 (= e!48373 call!6533)))

(declare-fun bm!6528 () Bool)

(declare-fun call!6531 () List!1483)

(declare-fun call!6532 () List!1483)

(assert (=> bm!6528 (= call!6531 call!6532)))

(declare-fun b!74014 () Bool)

(assert (=> b!74014 (= e!48374 call!6532)))

(declare-fun e!48370 () List!1483)

(declare-fun b!74015 () Bool)

(assert (=> b!74015 (= e!48370 (insertStrictlySorted!54 (t!5031 (t!5031 (toList!717 (+!93 lt!32377 lt!32383)))) (_1!1071 lt!32376) (_2!1071 lt!32376)))))

(declare-fun b!74016 () Bool)

(assert (=> b!74016 (= e!48373 call!6533)))

(declare-fun b!74017 () Bool)

(assert (=> b!74017 (= e!48372 (contains!722 lt!33243 (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun b!74018 () Bool)

(declare-fun c!11092 () Bool)

(assert (=> b!74018 (= c!11092 (and ((_ is Cons!1479) (t!5031 (toList!717 (+!93 lt!32377 lt!32383)))) (bvsgt (_1!1071 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32383))))) (_1!1071 lt!32376))))))

(declare-fun e!48371 () List!1483)

(assert (=> b!74018 (= e!48371 e!48373)))

(declare-fun bm!6529 () Bool)

(assert (=> bm!6529 (= call!6532 ($colon$colon!65 e!48370 (ite c!11094 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32383)))) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376)))))))

(declare-fun c!11095 () Bool)

(assert (=> bm!6529 (= c!11095 c!11094)))

(declare-fun bm!6530 () Bool)

(assert (=> bm!6530 (= call!6533 call!6531)))

(declare-fun b!74019 () Bool)

(assert (=> b!74019 (= e!48374 e!48371)))

(declare-fun c!11093 () Bool)

(assert (=> b!74019 (= c!11093 (and ((_ is Cons!1479) (t!5031 (toList!717 (+!93 lt!32377 lt!32383)))) (= (_1!1071 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32383))))) (_1!1071 lt!32376))))))

(declare-fun b!74020 () Bool)

(assert (=> b!74020 (= e!48371 call!6531)))

(declare-fun b!74021 () Bool)

(assert (=> b!74021 (= e!48370 (ite c!11093 (t!5031 (t!5031 (toList!717 (+!93 lt!32377 lt!32383)))) (ite c!11092 (Cons!1479 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32383)))) (t!5031 (t!5031 (toList!717 (+!93 lt!32377 lt!32383))))) Nil!1480)))))

(assert (= (and d!17287 c!11094) b!74014))

(assert (= (and d!17287 (not c!11094)) b!74019))

(assert (= (and b!74019 c!11093) b!74020))

(assert (= (and b!74019 (not c!11093)) b!74018))

(assert (= (and b!74018 c!11092) b!74016))

(assert (= (and b!74018 (not c!11092)) b!74013))

(assert (= (or b!74016 b!74013) bm!6530))

(assert (= (or b!74020 bm!6530) bm!6528))

(assert (= (or b!74014 bm!6528) bm!6529))

(assert (= (and bm!6529 c!11095) b!74015))

(assert (= (and bm!6529 (not c!11095)) b!74021))

(assert (= (and d!17287 res!39170) b!74012))

(assert (= (and b!74012 res!39169) b!74017))

(declare-fun m!72731 () Bool)

(assert (=> bm!6529 m!72731))

(declare-fun m!72733 () Bool)

(assert (=> d!17287 m!72733))

(declare-fun m!72735 () Bool)

(assert (=> d!17287 m!72735))

(declare-fun m!72737 () Bool)

(assert (=> b!74015 m!72737))

(declare-fun m!72739 () Bool)

(assert (=> b!74017 m!72739))

(declare-fun m!72741 () Bool)

(assert (=> b!74012 m!72741))

(assert (=> b!73187 d!17287))

(assert (=> b!73351 d!17159))

(assert (=> b!73351 d!17161))

(declare-fun d!17289 () Bool)

(assert (=> d!17289 (= (isEmpty!321 (toList!717 lt!32663)) ((_ is Nil!1480) (toList!717 lt!32663)))))

(assert (=> d!16873 d!17289))

(assert (=> b!73528 d!17245))

(declare-fun d!17291 () Bool)

(assert (=> d!17291 (= (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!73123 d!17291))

(declare-fun d!17293 () Bool)

(declare-fun e!48377 () Bool)

(assert (=> d!17293 e!48377))

(declare-fun res!39172 () Bool)

(assert (=> d!17293 (=> (not res!39172) (not e!48377))))

(declare-fun lt!33244 () List!1483)

(assert (=> d!17293 (= res!39172 (isStrictlySorted!287 lt!33244))))

(declare-fun e!48379 () List!1483)

(assert (=> d!17293 (= lt!33244 e!48379)))

(declare-fun c!11098 () Bool)

(assert (=> d!17293 (= c!11098 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32377))) (bvslt (_1!1071 (h!2066 (t!5031 (toList!717 lt!32377)))) (_1!1071 lt!32376))))))

(assert (=> d!17293 (isStrictlySorted!287 (t!5031 (toList!717 lt!32377)))))

(assert (=> d!17293 (= (insertStrictlySorted!54 (t!5031 (toList!717 lt!32377)) (_1!1071 lt!32376) (_2!1071 lt!32376)) lt!33244)))

(declare-fun b!74022 () Bool)

(declare-fun res!39171 () Bool)

(assert (=> b!74022 (=> (not res!39171) (not e!48377))))

(assert (=> b!74022 (= res!39171 (containsKey!135 lt!33244 (_1!1071 lt!32376)))))

(declare-fun b!74023 () Bool)

(declare-fun e!48378 () List!1483)

(declare-fun call!6536 () List!1483)

(assert (=> b!74023 (= e!48378 call!6536)))

(declare-fun bm!6531 () Bool)

(declare-fun call!6534 () List!1483)

(declare-fun call!6535 () List!1483)

(assert (=> bm!6531 (= call!6534 call!6535)))

(declare-fun b!74024 () Bool)

(assert (=> b!74024 (= e!48379 call!6535)))

(declare-fun b!74025 () Bool)

(declare-fun e!48375 () List!1483)

(assert (=> b!74025 (= e!48375 (insertStrictlySorted!54 (t!5031 (t!5031 (toList!717 lt!32377))) (_1!1071 lt!32376) (_2!1071 lt!32376)))))

(declare-fun b!74026 () Bool)

(assert (=> b!74026 (= e!48378 call!6536)))

(declare-fun b!74027 () Bool)

(assert (=> b!74027 (= e!48377 (contains!722 lt!33244 (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun b!74028 () Bool)

(declare-fun c!11096 () Bool)

(assert (=> b!74028 (= c!11096 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32377))) (bvsgt (_1!1071 (h!2066 (t!5031 (toList!717 lt!32377)))) (_1!1071 lt!32376))))))

(declare-fun e!48376 () List!1483)

(assert (=> b!74028 (= e!48376 e!48378)))

(declare-fun bm!6532 () Bool)

(assert (=> bm!6532 (= call!6535 ($colon$colon!65 e!48375 (ite c!11098 (h!2066 (t!5031 (toList!717 lt!32377))) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376)))))))

(declare-fun c!11099 () Bool)

(assert (=> bm!6532 (= c!11099 c!11098)))

(declare-fun bm!6533 () Bool)

(assert (=> bm!6533 (= call!6536 call!6534)))

(declare-fun b!74029 () Bool)

(assert (=> b!74029 (= e!48379 e!48376)))

(declare-fun c!11097 () Bool)

(assert (=> b!74029 (= c!11097 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32377))) (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32377)))) (_1!1071 lt!32376))))))

(declare-fun b!74030 () Bool)

(assert (=> b!74030 (= e!48376 call!6534)))

(declare-fun b!74031 () Bool)

(assert (=> b!74031 (= e!48375 (ite c!11097 (t!5031 (t!5031 (toList!717 lt!32377))) (ite c!11096 (Cons!1479 (h!2066 (t!5031 (toList!717 lt!32377))) (t!5031 (t!5031 (toList!717 lt!32377)))) Nil!1480)))))

(assert (= (and d!17293 c!11098) b!74024))

(assert (= (and d!17293 (not c!11098)) b!74029))

(assert (= (and b!74029 c!11097) b!74030))

(assert (= (and b!74029 (not c!11097)) b!74028))

(assert (= (and b!74028 c!11096) b!74026))

(assert (= (and b!74028 (not c!11096)) b!74023))

(assert (= (or b!74026 b!74023) bm!6533))

(assert (= (or b!74030 bm!6533) bm!6531))

(assert (= (or b!74024 bm!6531) bm!6532))

(assert (= (and bm!6532 c!11099) b!74025))

(assert (= (and bm!6532 (not c!11099)) b!74031))

(assert (= (and d!17293 res!39172) b!74022))

(assert (= (and b!74022 res!39171) b!74027))

(declare-fun m!72743 () Bool)

(assert (=> bm!6532 m!72743))

(declare-fun m!72745 () Bool)

(assert (=> d!17293 m!72745))

(assert (=> d!17293 m!72091))

(declare-fun m!72747 () Bool)

(assert (=> b!74025 m!72747))

(declare-fun m!72749 () Bool)

(assert (=> b!74027 m!72749))

(declare-fun m!72751 () Bool)

(assert (=> b!74022 m!72751))

(assert (=> b!73270 d!17293))

(declare-fun d!17295 () Bool)

(declare-fun res!39173 () Bool)

(declare-fun e!48380 () Bool)

(assert (=> d!17295 (=> res!39173 e!48380)))

(assert (=> d!17295 (= res!39173 (or ((_ is Nil!1480) lt!32783) ((_ is Nil!1480) (t!5031 lt!32783))))))

(assert (=> d!17295 (= (isStrictlySorted!287 lt!32783) e!48380)))

(declare-fun b!74032 () Bool)

(declare-fun e!48381 () Bool)

(assert (=> b!74032 (= e!48380 e!48381)))

(declare-fun res!39174 () Bool)

(assert (=> b!74032 (=> (not res!39174) (not e!48381))))

(assert (=> b!74032 (= res!39174 (bvslt (_1!1071 (h!2066 lt!32783)) (_1!1071 (h!2066 (t!5031 lt!32783)))))))

(declare-fun b!74033 () Bool)

(assert (=> b!74033 (= e!48381 (isStrictlySorted!287 (t!5031 lt!32783)))))

(assert (= (and d!17295 (not res!39173)) b!74032))

(assert (= (and b!74032 res!39174) b!74033))

(declare-fun m!72753 () Bool)

(assert (=> b!74033 m!72753))

(assert (=> d!16885 d!17295))

(declare-fun d!17297 () Bool)

(declare-fun res!39175 () Bool)

(declare-fun e!48382 () Bool)

(assert (=> d!17297 (=> res!39175 e!48382)))

(assert (=> d!17297 (= res!39175 (or ((_ is Nil!1480) (toList!717 (+!93 lt!32377 lt!32376))) ((_ is Nil!1480) (t!5031 (toList!717 (+!93 lt!32377 lt!32376))))))))

(assert (=> d!17297 (= (isStrictlySorted!287 (toList!717 (+!93 lt!32377 lt!32376))) e!48382)))

(declare-fun b!74034 () Bool)

(declare-fun e!48383 () Bool)

(assert (=> b!74034 (= e!48382 e!48383)))

(declare-fun res!39176 () Bool)

(assert (=> b!74034 (=> (not res!39176) (not e!48383))))

(assert (=> b!74034 (= res!39176 (bvslt (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 lt!32376)))) (_1!1071 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32376)))))))))

(declare-fun b!74035 () Bool)

(assert (=> b!74035 (= e!48383 (isStrictlySorted!287 (t!5031 (toList!717 (+!93 lt!32377 lt!32376)))))))

(assert (= (and d!17297 (not res!39175)) b!74034))

(assert (= (and b!74034 res!39176) b!74035))

(declare-fun m!72755 () Bool)

(assert (=> b!74035 m!72755))

(assert (=> d!16885 d!17297))

(declare-fun d!17299 () Bool)

(declare-fun e!48384 () Bool)

(assert (=> d!17299 e!48384))

(declare-fun res!39178 () Bool)

(assert (=> d!17299 (=> (not res!39178) (not e!48384))))

(declare-fun lt!33247 () ListLongMap!1403)

(assert (=> d!17299 (= res!39178 (contains!719 lt!33247 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun lt!33248 () List!1483)

(assert (=> d!17299 (= lt!33247 (ListLongMap!1404 lt!33248))))

(declare-fun lt!33246 () Unit!2066)

(declare-fun lt!33245 () Unit!2066)

(assert (=> d!17299 (= lt!33246 lt!33245)))

(assert (=> d!17299 (= (getValueByKey!131 lt!33248 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17299 (= lt!33245 (lemmaContainsTupThenGetReturnValue!51 lt!33248 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17299 (= lt!33248 (insertStrictlySorted!54 (toList!717 call!6439) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17299 (= (+!93 call!6439 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) lt!33247)))

(declare-fun b!74036 () Bool)

(declare-fun res!39177 () Bool)

(assert (=> b!74036 (=> (not res!39177) (not e!48384))))

(assert (=> b!74036 (= res!39177 (= (getValueByKey!131 (toList!717 lt!33247) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(declare-fun b!74037 () Bool)

(assert (=> b!74037 (= e!48384 (contains!722 (toList!717 lt!33247) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(assert (= (and d!17299 res!39178) b!74036))

(assert (= (and b!74036 res!39177) b!74037))

(declare-fun m!72757 () Bool)

(assert (=> d!17299 m!72757))

(declare-fun m!72759 () Bool)

(assert (=> d!17299 m!72759))

(declare-fun m!72761 () Bool)

(assert (=> d!17299 m!72761))

(declare-fun m!72763 () Bool)

(assert (=> d!17299 m!72763))

(declare-fun m!72765 () Bool)

(assert (=> b!74036 m!72765))

(declare-fun m!72767 () Bool)

(assert (=> b!74037 m!72767))

(assert (=> b!73218 d!17299))

(declare-fun lt!33249 () Bool)

(declare-fun d!17301 () Bool)

(assert (=> d!17301 (= lt!33249 (select (content!77 (toList!717 lt!32810)) (tuple2!2121 lt!32659 lt!32662)))))

(declare-fun e!48386 () Bool)

(assert (=> d!17301 (= lt!33249 e!48386)))

(declare-fun res!39179 () Bool)

(assert (=> d!17301 (=> (not res!39179) (not e!48386))))

(assert (=> d!17301 (= res!39179 ((_ is Cons!1479) (toList!717 lt!32810)))))

(assert (=> d!17301 (= (contains!722 (toList!717 lt!32810) (tuple2!2121 lt!32659 lt!32662)) lt!33249)))

(declare-fun b!74038 () Bool)

(declare-fun e!48385 () Bool)

(assert (=> b!74038 (= e!48386 e!48385)))

(declare-fun res!39180 () Bool)

(assert (=> b!74038 (=> res!39180 e!48385)))

(assert (=> b!74038 (= res!39180 (= (h!2066 (toList!717 lt!32810)) (tuple2!2121 lt!32659 lt!32662)))))

(declare-fun b!74039 () Bool)

(assert (=> b!74039 (= e!48385 (contains!722 (t!5031 (toList!717 lt!32810)) (tuple2!2121 lt!32659 lt!32662)))))

(assert (= (and d!17301 res!39179) b!74038))

(assert (= (and b!74038 (not res!39180)) b!74039))

(declare-fun m!72769 () Bool)

(assert (=> d!17301 m!72769))

(declare-fun m!72771 () Bool)

(assert (=> d!17301 m!72771))

(declare-fun m!72773 () Bool)

(assert (=> b!74039 m!72773))

(assert (=> b!73355 d!17301))

(declare-fun d!17303 () Bool)

(assert (=> d!17303 (isDefined!85 (getValueByKey!131 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun lt!33250 () Unit!2066)

(assert (=> d!17303 (= lt!33250 (choose!426 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun e!48387 () Bool)

(assert (=> d!17303 e!48387))

(declare-fun res!39181 () Bool)

(assert (=> d!17303 (=> (not res!39181) (not e!48387))))

(assert (=> d!17303 (= res!39181 (isStrictlySorted!287 (toList!717 call!6396)))))

(assert (=> d!17303 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) lt!33250)))

(declare-fun b!74040 () Bool)

(assert (=> b!74040 (= e!48387 (containsKey!135 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (= (and d!17303 res!39181) b!74040))

(assert (=> d!17303 m!70791))

(assert (=> d!17303 m!71239))

(assert (=> d!17303 m!71239))

(assert (=> d!17303 m!71241))

(assert (=> d!17303 m!70791))

(declare-fun m!72775 () Bool)

(assert (=> d!17303 m!72775))

(declare-fun m!72777 () Bool)

(assert (=> d!17303 m!72777))

(assert (=> b!74040 m!70791))

(assert (=> b!74040 m!71235))

(assert (=> b!73142 d!17303))

(declare-fun d!17305 () Bool)

(assert (=> d!17305 (= (isDefined!85 (getValueByKey!131 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))) (not (isEmpty!322 (getValueByKey!131 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))))

(declare-fun bs!3184 () Bool)

(assert (= bs!3184 d!17305))

(assert (=> bs!3184 m!71239))

(declare-fun m!72779 () Bool)

(assert (=> bs!3184 m!72779))

(assert (=> b!73142 d!17305))

(declare-fun b!74041 () Bool)

(declare-fun e!48388 () Option!137)

(assert (=> b!74041 (= e!48388 (Some!136 (_2!1071 (h!2066 (toList!717 call!6396)))))))

(declare-fun b!74044 () Bool)

(declare-fun e!48389 () Option!137)

(assert (=> b!74044 (= e!48389 None!135)))

(declare-fun b!74043 () Bool)

(assert (=> b!74043 (= e!48389 (getValueByKey!131 (t!5031 (toList!717 call!6396)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun c!11100 () Bool)

(declare-fun d!17307 () Bool)

(assert (=> d!17307 (= c!11100 (and ((_ is Cons!1479) (toList!717 call!6396)) (= (_1!1071 (h!2066 (toList!717 call!6396))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (=> d!17307 (= (getValueByKey!131 (toList!717 call!6396) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) e!48388)))

(declare-fun b!74042 () Bool)

(assert (=> b!74042 (= e!48388 e!48389)))

(declare-fun c!11101 () Bool)

(assert (=> b!74042 (= c!11101 (and ((_ is Cons!1479) (toList!717 call!6396)) (not (= (_1!1071 (h!2066 (toList!717 call!6396))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))))

(assert (= (and d!17307 c!11100) b!74041))

(assert (= (and d!17307 (not c!11100)) b!74042))

(assert (= (and b!74042 c!11101) b!74043))

(assert (= (and b!74042 (not c!11101)) b!74044))

(assert (=> b!74043 m!70791))

(declare-fun m!72781 () Bool)

(assert (=> b!74043 m!72781))

(assert (=> b!73142 d!17307))

(assert (=> d!16887 d!16741))

(declare-fun d!17309 () Bool)

(declare-fun e!48391 () Bool)

(assert (=> d!17309 e!48391))

(declare-fun res!39182 () Bool)

(assert (=> d!17309 (=> res!39182 e!48391)))

(declare-fun lt!33254 () Bool)

(assert (=> d!17309 (= res!39182 (not lt!33254))))

(declare-fun lt!33252 () Bool)

(assert (=> d!17309 (= lt!33254 lt!33252)))

(declare-fun lt!33251 () Unit!2066)

(declare-fun e!48390 () Unit!2066)

(assert (=> d!17309 (= lt!33251 e!48390)))

(declare-fun c!11102 () Bool)

(assert (=> d!17309 (= c!11102 lt!33252)))

(assert (=> d!17309 (= lt!33252 (containsKey!135 (toList!717 lt!32955) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17309 (= (contains!719 lt!32955 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33254)))

(declare-fun b!74045 () Bool)

(declare-fun lt!33253 () Unit!2066)

(assert (=> b!74045 (= e!48390 lt!33253)))

(assert (=> b!74045 (= lt!33253 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32955) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74045 (isDefined!85 (getValueByKey!131 (toList!717 lt!32955) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74046 () Bool)

(declare-fun Unit!2119 () Unit!2066)

(assert (=> b!74046 (= e!48390 Unit!2119)))

(declare-fun b!74047 () Bool)

(assert (=> b!74047 (= e!48391 (isDefined!85 (getValueByKey!131 (toList!717 lt!32955) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17309 c!11102) b!74045))

(assert (= (and d!17309 (not c!11102)) b!74046))

(assert (= (and d!17309 (not res!39182)) b!74047))

(declare-fun m!72783 () Bool)

(assert (=> d!17309 m!72783))

(declare-fun m!72785 () Bool)

(assert (=> b!74045 m!72785))

(assert (=> b!74045 m!72263))

(assert (=> b!74045 m!72263))

(declare-fun m!72787 () Bool)

(assert (=> b!74045 m!72787))

(assert (=> b!74047 m!72263))

(assert (=> b!74047 m!72263))

(assert (=> b!74047 m!72787))

(assert (=> bm!6482 d!17309))

(assert (=> b!73538 d!17165))

(assert (=> b!73538 d!17167))

(declare-fun d!17311 () Bool)

(assert (=> d!17311 (= (isEmpty!322 (getValueByKey!131 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))) (not ((_ is Some!136) (getValueByKey!131 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))))

(assert (=> d!16923 d!17311))

(declare-fun d!17313 () Bool)

(assert (=> d!17313 (= ($colon$colon!65 e!47935 (ite c!10901 (h!2066 (toList!717 lt!32377)) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383)))) (Cons!1479 (ite c!10901 (h!2066 (toList!717 lt!32377)) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))) e!47935))))

(assert (=> bm!6451 d!17313))

(declare-fun d!17315 () Bool)

(declare-fun res!39183 () Bool)

(declare-fun e!48392 () Bool)

(assert (=> d!17315 (=> res!39183 e!48392)))

(assert (=> d!17315 (= res!39183 (and ((_ is Cons!1479) lt!32640) (= (_1!1071 (h!2066 lt!32640)) (_1!1071 lt!32376))))))

(assert (=> d!17315 (= (containsKey!135 lt!32640 (_1!1071 lt!32376)) e!48392)))

(declare-fun b!74048 () Bool)

(declare-fun e!48393 () Bool)

(assert (=> b!74048 (= e!48392 e!48393)))

(declare-fun res!39184 () Bool)

(assert (=> b!74048 (=> (not res!39184) (not e!48393))))

(assert (=> b!74048 (= res!39184 (and (or (not ((_ is Cons!1479) lt!32640)) (bvsle (_1!1071 (h!2066 lt!32640)) (_1!1071 lt!32376))) ((_ is Cons!1479) lt!32640) (bvslt (_1!1071 (h!2066 lt!32640)) (_1!1071 lt!32376))))))

(declare-fun b!74049 () Bool)

(assert (=> b!74049 (= e!48393 (containsKey!135 (t!5031 lt!32640) (_1!1071 lt!32376)))))

(assert (= (and d!17315 (not res!39183)) b!74048))

(assert (= (and b!74048 res!39184) b!74049))

(declare-fun m!72789 () Bool)

(assert (=> b!74049 m!72789))

(assert (=> b!73162 d!17315))

(assert (=> b!73451 d!16939))

(declare-fun d!17317 () Bool)

(declare-fun e!48395 () Bool)

(assert (=> d!17317 e!48395))

(declare-fun res!39185 () Bool)

(assert (=> d!17317 (=> res!39185 e!48395)))

(declare-fun lt!33258 () Bool)

(assert (=> d!17317 (= res!39185 (not lt!33258))))

(declare-fun lt!33256 () Bool)

(assert (=> d!17317 (= lt!33258 lt!33256)))

(declare-fun lt!33255 () Unit!2066)

(declare-fun e!48394 () Unit!2066)

(assert (=> d!17317 (= lt!33255 e!48394)))

(declare-fun c!11103 () Bool)

(assert (=> d!17317 (= c!11103 lt!33256)))

(assert (=> d!17317 (= lt!33256 (containsKey!135 (toList!717 (map!1150 (_2!1072 lt!32894))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!17317 (= (contains!719 (map!1150 (_2!1072 lt!32894)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) lt!33258)))

(declare-fun b!74050 () Bool)

(declare-fun lt!33257 () Unit!2066)

(assert (=> b!74050 (= e!48394 lt!33257)))

(assert (=> b!74050 (= lt!33257 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (map!1150 (_2!1072 lt!32894))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> b!74050 (isDefined!85 (getValueByKey!131 (toList!717 (map!1150 (_2!1072 lt!32894))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!74051 () Bool)

(declare-fun Unit!2120 () Unit!2066)

(assert (=> b!74051 (= e!48394 Unit!2120)))

(declare-fun b!74052 () Bool)

(assert (=> b!74052 (= e!48395 (isDefined!85 (getValueByKey!131 (toList!717 (map!1150 (_2!1072 lt!32894))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (= (and d!17317 c!11103) b!74050))

(assert (= (and d!17317 (not c!11103)) b!74051))

(assert (= (and d!17317 (not res!39185)) b!74052))

(assert (=> d!17317 m!70791))

(declare-fun m!72791 () Bool)

(assert (=> d!17317 m!72791))

(assert (=> b!74050 m!70791))

(declare-fun m!72793 () Bool)

(assert (=> b!74050 m!72793))

(assert (=> b!74050 m!70791))

(declare-fun m!72795 () Bool)

(assert (=> b!74050 m!72795))

(assert (=> b!74050 m!72795))

(declare-fun m!72797 () Bool)

(assert (=> b!74050 m!72797))

(assert (=> b!74052 m!70791))

(assert (=> b!74052 m!72795))

(assert (=> b!74052 m!72795))

(assert (=> b!74052 m!72797))

(assert (=> b!73394 d!17317))

(declare-fun d!17319 () Bool)

(assert (=> d!17319 (= (map!1150 (_2!1072 lt!32894)) (getCurrentListMap!410 (_keys!3863 (_2!1072 lt!32894)) (_values!2195 (_2!1072 lt!32894)) (mask!6178 (_2!1072 lt!32894)) (extraKeys!2071 (_2!1072 lt!32894)) (zeroValue!2114 (_2!1072 lt!32894)) (minValue!2114 (_2!1072 lt!32894)) #b00000000000000000000000000000000 (defaultEntry!2212 (_2!1072 lt!32894))))))

(declare-fun bs!3185 () Bool)

(assert (= bs!3185 d!17319))

(declare-fun m!72799 () Bool)

(assert (=> bs!3185 m!72799))

(assert (=> b!73394 d!17319))

(assert (=> d!16883 d!16881))

(declare-fun d!17321 () Bool)

(assert (=> d!17321 (= (getValueByKey!131 lt!32669 (_1!1071 lt!32383)) (Some!136 (_2!1071 lt!32383)))))

(assert (=> d!17321 true))

(declare-fun _$22!386 () Unit!2066)

(assert (=> d!17321 (= (choose!420 lt!32669 (_1!1071 lt!32383) (_2!1071 lt!32383)) _$22!386)))

(declare-fun bs!3186 () Bool)

(assert (= bs!3186 d!17321))

(assert (=> bs!3186 m!71139))

(assert (=> d!16883 d!17321))

(declare-fun d!17323 () Bool)

(declare-fun res!39186 () Bool)

(declare-fun e!48396 () Bool)

(assert (=> d!17323 (=> res!39186 e!48396)))

(assert (=> d!17323 (= res!39186 (or ((_ is Nil!1480) lt!32669) ((_ is Nil!1480) (t!5031 lt!32669))))))

(assert (=> d!17323 (= (isStrictlySorted!287 lt!32669) e!48396)))

(declare-fun b!74053 () Bool)

(declare-fun e!48397 () Bool)

(assert (=> b!74053 (= e!48396 e!48397)))

(declare-fun res!39187 () Bool)

(assert (=> b!74053 (=> (not res!39187) (not e!48397))))

(assert (=> b!74053 (= res!39187 (bvslt (_1!1071 (h!2066 lt!32669)) (_1!1071 (h!2066 (t!5031 lt!32669)))))))

(declare-fun b!74054 () Bool)

(assert (=> b!74054 (= e!48397 (isStrictlySorted!287 (t!5031 lt!32669)))))

(assert (= (and d!17323 (not res!39186)) b!74053))

(assert (= (and b!74053 res!39187) b!74054))

(declare-fun m!72801 () Bool)

(assert (=> b!74054 m!72801))

(assert (=> d!16883 d!17323))

(declare-fun d!17325 () Bool)

(assert (=> d!17325 (isDefined!85 (getValueByKey!131 (toList!717 lt!32643) (_1!1071 lt!32376)))))

(declare-fun lt!33259 () Unit!2066)

(assert (=> d!17325 (= lt!33259 (choose!426 (toList!717 lt!32643) (_1!1071 lt!32376)))))

(declare-fun e!48398 () Bool)

(assert (=> d!17325 e!48398))

(declare-fun res!39188 () Bool)

(assert (=> d!17325 (=> (not res!39188) (not e!48398))))

(assert (=> d!17325 (= res!39188 (isStrictlySorted!287 (toList!717 lt!32643)))))

(assert (=> d!17325 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32643) (_1!1071 lt!32376)) lt!33259)))

(declare-fun b!74055 () Bool)

(assert (=> b!74055 (= e!48398 (containsKey!135 (toList!717 lt!32643) (_1!1071 lt!32376)))))

(assert (= (and d!17325 res!39188) b!74055))

(assert (=> d!17325 m!71113))

(assert (=> d!17325 m!71113))

(assert (=> d!17325 m!71435))

(declare-fun m!72803 () Bool)

(assert (=> d!17325 m!72803))

(declare-fun m!72805 () Bool)

(assert (=> d!17325 m!72805))

(assert (=> b!74055 m!71431))

(assert (=> b!73258 d!17325))

(declare-fun d!17327 () Bool)

(assert (=> d!17327 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32643) (_1!1071 lt!32376))) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32643) (_1!1071 lt!32376)))))))

(declare-fun bs!3187 () Bool)

(assert (= bs!3187 d!17327))

(assert (=> bs!3187 m!71113))

(declare-fun m!72807 () Bool)

(assert (=> bs!3187 m!72807))

(assert (=> b!73258 d!17327))

(assert (=> b!73258 d!16861))

(declare-fun d!17329 () Bool)

(declare-fun res!39190 () Bool)

(declare-fun e!48400 () Bool)

(assert (=> d!17329 (=> res!39190 e!48400)))

(assert (=> d!17329 (= res!39190 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))))))

(assert (=> d!17329 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3863 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534))) e!48400)))

(declare-fun b!74056 () Bool)

(declare-fun e!48401 () Bool)

(assert (=> b!74056 (= e!48400 e!48401)))

(declare-fun c!11104 () Bool)

(assert (=> b!74056 (= c!11104 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000)))))

(declare-fun bm!6534 () Bool)

(declare-fun call!6537 () Bool)

(assert (=> bm!6534 (= call!6537 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3863 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534))))))

(declare-fun b!74057 () Bool)

(assert (=> b!74057 (= e!48401 call!6537)))

(declare-fun b!74058 () Bool)

(declare-fun e!48399 () Bool)

(assert (=> b!74058 (= e!48399 call!6537)))

(declare-fun b!74059 () Bool)

(assert (=> b!74059 (= e!48401 e!48399)))

(declare-fun lt!33261 () (_ BitVec 64))

(assert (=> b!74059 (= lt!33261 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000))))

(declare-fun lt!33260 () Unit!2066)

(assert (=> b!74059 (= lt!33260 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3863 (_2!1072 lt!32534)) lt!33261 #b00000000000000000000000000000000))))

(assert (=> b!74059 (arrayContainsKey!0 (_keys!3863 (_2!1072 lt!32534)) lt!33261 #b00000000000000000000000000000000)))

(declare-fun lt!33262 () Unit!2066)

(assert (=> b!74059 (= lt!33262 lt!33260)))

(declare-fun res!39189 () Bool)

(assert (=> b!74059 (= res!39189 (= (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000) (_keys!3863 (_2!1072 lt!32534)) (mask!6178 (_2!1072 lt!32534))) (Found!239 #b00000000000000000000000000000000)))))

(assert (=> b!74059 (=> (not res!39189) (not e!48399))))

(assert (= (and d!17329 (not res!39190)) b!74056))

(assert (= (and b!74056 c!11104) b!74059))

(assert (= (and b!74056 (not c!11104)) b!74057))

(assert (= (and b!74059 res!39189) b!74058))

(assert (= (or b!74058 b!74057) bm!6534))

(assert (=> b!74056 m!72417))

(assert (=> b!74056 m!72417))

(assert (=> b!74056 m!72429))

(declare-fun m!72809 () Bool)

(assert (=> bm!6534 m!72809))

(assert (=> b!74059 m!72417))

(declare-fun m!72811 () Bool)

(assert (=> b!74059 m!72811))

(declare-fun m!72813 () Bool)

(assert (=> b!74059 m!72813))

(assert (=> b!74059 m!72417))

(declare-fun m!72815 () Bool)

(assert (=> b!74059 m!72815))

(assert (=> b!73308 d!17329))

(declare-fun b!74060 () Bool)

(declare-fun e!48402 () Option!137)

(assert (=> b!74060 (= e!48402 (Some!136 (_2!1071 (h!2066 (toList!717 lt!33005)))))))

(declare-fun b!74063 () Bool)

(declare-fun e!48403 () Option!137)

(assert (=> b!74063 (= e!48403 None!135)))

(declare-fun b!74062 () Bool)

(assert (=> b!74062 (= e!48403 (getValueByKey!131 (t!5031 (toList!717 lt!33005)) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun c!11105 () Bool)

(declare-fun d!17331 () Bool)

(assert (=> d!17331 (= c!11105 (and ((_ is Cons!1479) (toList!717 lt!33005)) (= (_1!1071 (h!2066 (toList!717 lt!33005))) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17331 (= (getValueByKey!131 (toList!717 lt!33005) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48402)))

(declare-fun b!74061 () Bool)

(assert (=> b!74061 (= e!48402 e!48403)))

(declare-fun c!11106 () Bool)

(assert (=> b!74061 (= c!11106 (and ((_ is Cons!1479) (toList!717 lt!33005)) (not (= (_1!1071 (h!2066 (toList!717 lt!33005))) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17331 c!11105) b!74060))

(assert (= (and d!17331 (not c!11105)) b!74061))

(assert (= (and b!74061 c!11106) b!74062))

(assert (= (and b!74061 (not c!11106)) b!74063))

(declare-fun m!72817 () Bool)

(assert (=> b!74062 m!72817))

(assert (=> b!73543 d!17331))

(assert (=> b!73245 d!17239))

(assert (=> b!73245 d!17241))

(declare-fun d!17333 () Bool)

(assert (=> d!17333 (= (isEmpty!320 lt!32678) (isEmpty!321 (toList!717 lt!32678)))))

(declare-fun bs!3188 () Bool)

(assert (= bs!3188 d!17333))

(declare-fun m!72819 () Bool)

(assert (=> bs!3188 m!72819))

(assert (=> b!73124 d!17333))

(assert (=> d!16893 d!16975))

(declare-fun d!17335 () Bool)

(declare-fun e!48406 () Bool)

(assert (=> d!17335 e!48406))

(declare-fun res!39195 () Bool)

(assert (=> d!17335 (=> (not res!39195) (not e!48406))))

(declare-fun lt!33265 () SeekEntryResult!239)

(assert (=> d!17335 (= res!39195 ((_ is Found!239) lt!33265))))

(assert (=> d!17335 (= lt!33265 (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(assert (=> d!17335 true))

(declare-fun _$33!60 () Unit!2066)

(assert (=> d!17335 (= (choose!422 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (defaultEntry!2212 newMap!16)) _$33!60)))

(declare-fun b!74068 () Bool)

(declare-fun res!39196 () Bool)

(assert (=> b!74068 (=> (not res!39196) (not e!48406))))

(assert (=> b!74068 (= res!39196 (inRange!0 (index!3088 lt!33265) (mask!6178 newMap!16)))))

(declare-fun b!74069 () Bool)

(assert (=> b!74069 (= e!48406 (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!33265)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (= (and d!17335 res!39195) b!74068))

(assert (= (and b!74068 res!39196) b!74069))

(assert (=> d!17335 m!70791))

(assert (=> d!17335 m!70979))

(declare-fun m!72821 () Bool)

(assert (=> b!74068 m!72821))

(declare-fun m!72823 () Bool)

(assert (=> b!74069 m!72823))

(assert (=> d!16893 d!17335))

(assert (=> d!16893 d!17001))

(declare-fun d!17337 () Bool)

(declare-fun res!39197 () Bool)

(declare-fun e!48407 () Bool)

(assert (=> d!17337 (=> res!39197 e!48407)))

(assert (=> d!17337 (= res!39197 (= (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!17337 (= (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!48407)))

(declare-fun b!74070 () Bool)

(declare-fun e!48408 () Bool)

(assert (=> b!74070 (= e!48407 e!48408)))

(declare-fun res!39198 () Bool)

(assert (=> b!74070 (=> (not res!39198) (not e!48408))))

(assert (=> b!74070 (= res!39198 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!74071 () Bool)

(assert (=> b!74071 (= e!48408 (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!17337 (not res!39197)) b!74070))

(assert (= (and b!74070 res!39198) b!74071))

(assert (=> d!17337 m!72523))

(assert (=> b!74071 m!70791))

(declare-fun m!72825 () Bool)

(assert (=> b!74071 m!72825))

(assert (=> b!73119 d!17337))

(assert (=> b!73138 d!17177))

(declare-fun d!17339 () Bool)

(declare-fun e!48409 () Bool)

(assert (=> d!17339 e!48409))

(declare-fun res!39200 () Bool)

(assert (=> d!17339 (=> (not res!39200) (not e!48409))))

(declare-fun lt!33268 () ListLongMap!1403)

(assert (=> d!17339 (= res!39200 (contains!719 lt!33268 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun lt!33269 () List!1483)

(assert (=> d!17339 (= lt!33268 (ListLongMap!1404 lt!33269))))

(declare-fun lt!33267 () Unit!2066)

(declare-fun lt!33266 () Unit!2066)

(assert (=> d!17339 (= lt!33267 lt!33266)))

(assert (=> d!17339 (= (getValueByKey!131 lt!33269 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17339 (= lt!33266 (lemmaContainsTupThenGetReturnValue!51 lt!33269 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17339 (= lt!33269 (insertStrictlySorted!54 (toList!717 call!6484) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (=> d!17339 (= (+!93 call!6484 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))) lt!33268)))

(declare-fun b!74072 () Bool)

(declare-fun res!39199 () Bool)

(assert (=> b!74072 (=> (not res!39199) (not e!48409))))

(assert (=> b!74072 (= res!39199 (= (getValueByKey!131 (toList!717 lt!33268) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(declare-fun b!74073 () Bool)

(assert (=> b!74073 (= e!48409 (contains!722 (toList!717 lt!33268) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(assert (= (and d!17339 res!39200) b!74072))

(assert (= (and b!74072 res!39199) b!74073))

(declare-fun m!72827 () Bool)

(assert (=> d!17339 m!72827))

(declare-fun m!72829 () Bool)

(assert (=> d!17339 m!72829))

(declare-fun m!72831 () Bool)

(assert (=> d!17339 m!72831))

(declare-fun m!72833 () Bool)

(assert (=> d!17339 m!72833))

(declare-fun m!72835 () Bool)

(assert (=> b!74072 m!72835))

(declare-fun m!72837 () Bool)

(assert (=> b!74073 m!72837))

(assert (=> b!73492 d!17339))

(declare-fun b!74074 () Bool)

(assert (=> b!74074 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> b!74074 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (_values!2195 newMap!16))))))

(declare-fun e!48410 () Bool)

(declare-fun lt!33274 () ListLongMap!1403)

(assert (=> b!74074 (= e!48410 (= (apply!75 lt!33274 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74075 () Bool)

(declare-fun e!48412 () ListLongMap!1403)

(declare-fun call!6538 () ListLongMap!1403)

(assert (=> b!74075 (= e!48412 call!6538)))

(declare-fun b!74076 () Bool)

(declare-fun e!48415 () Bool)

(declare-fun e!48413 () Bool)

(assert (=> b!74076 (= e!48415 e!48413)))

(declare-fun c!11110 () Bool)

(declare-fun e!48411 () Bool)

(assert (=> b!74076 (= c!11110 e!48411)))

(declare-fun res!39202 () Bool)

(assert (=> b!74076 (=> (not res!39202) (not e!48411))))

(assert (=> b!74076 (= res!39202 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74077 () Bool)

(assert (=> b!74077 (= e!48411 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74077 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!74078 () Bool)

(declare-fun e!48414 () Bool)

(assert (=> b!74078 (= e!48414 (isEmpty!320 lt!33274))))

(declare-fun b!74079 () Bool)

(assert (=> b!74079 (= e!48413 e!48414)))

(declare-fun c!11108 () Bool)

(assert (=> b!74079 (= c!11108 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74080 () Bool)

(assert (=> b!74080 (= e!48413 e!48410)))

(assert (=> b!74080 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun res!39201 () Bool)

(assert (=> b!74080 (= res!39201 (contains!719 lt!33274 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74080 (=> (not res!39201) (not e!48410))))

(declare-fun b!74082 () Bool)

(declare-fun e!48416 () ListLongMap!1403)

(assert (=> b!74082 (= e!48416 e!48412)))

(declare-fun c!11107 () Bool)

(assert (=> b!74082 (= c!11107 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74083 () Bool)

(declare-fun lt!33272 () Unit!2066)

(declare-fun lt!33276 () Unit!2066)

(assert (=> b!74083 (= lt!33272 lt!33276)))

(declare-fun lt!33273 () V!2945)

(declare-fun lt!33270 () (_ BitVec 64))

(declare-fun lt!33271 () (_ BitVec 64))

(declare-fun lt!33275 () ListLongMap!1403)

(assert (=> b!74083 (not (contains!719 (+!93 lt!33275 (tuple2!2121 lt!33270 lt!33273)) lt!33271))))

(assert (=> b!74083 (= lt!33276 (addStillNotContains!25 lt!33275 lt!33270 lt!33273 lt!33271))))

(assert (=> b!74083 (= lt!33271 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!74083 (= lt!33273 (get!1142 (select (arr!1847 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!74083 (= lt!33270 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74083 (= lt!33275 call!6538)))

(assert (=> b!74083 (= e!48412 (+!93 call!6538 (tuple2!2121 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) (get!1142 (select (arr!1847 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!6535 () Bool)

(assert (=> bm!6535 (= call!6538 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16)))))

(declare-fun b!74084 () Bool)

(assert (=> b!74084 (= e!48414 (= lt!33274 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16))))))

(declare-fun b!74085 () Bool)

(assert (=> b!74085 (= e!48416 (ListLongMap!1404 Nil!1480))))

(declare-fun b!74081 () Bool)

(declare-fun res!39203 () Bool)

(assert (=> b!74081 (=> (not res!39203) (not e!48415))))

(assert (=> b!74081 (= res!39203 (not (contains!719 lt!33274 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!17341 () Bool)

(assert (=> d!17341 e!48415))

(declare-fun res!39204 () Bool)

(assert (=> d!17341 (=> (not res!39204) (not e!48415))))

(assert (=> d!17341 (= res!39204 (not (contains!719 lt!33274 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17341 (= lt!33274 e!48416)))

(declare-fun c!11109 () Bool)

(assert (=> d!17341 (= c!11109 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17341 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17341 (= (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33274)))

(assert (= (and d!17341 c!11109) b!74085))

(assert (= (and d!17341 (not c!11109)) b!74082))

(assert (= (and b!74082 c!11107) b!74083))

(assert (= (and b!74082 (not c!11107)) b!74075))

(assert (= (or b!74083 b!74075) bm!6535))

(assert (= (and d!17341 res!39204) b!74081))

(assert (= (and b!74081 res!39203) b!74076))

(assert (= (and b!74076 res!39202) b!74077))

(assert (= (and b!74076 c!11110) b!74080))

(assert (= (and b!74076 (not c!11110)) b!74079))

(assert (= (and b!74080 res!39201) b!74074))

(assert (= (and b!74079 c!11108) b!74084))

(assert (= (and b!74079 (not c!11108)) b!74078))

(declare-fun b_lambda!3311 () Bool)

(assert (=> (not b_lambda!3311) (not b!74074)))

(assert (=> b!74074 t!5045))

(declare-fun b_and!4529 () Bool)

(assert (= b_and!4525 (and (=> t!5045 result!2689) b_and!4529)))

(assert (=> b!74074 t!5047))

(declare-fun b_and!4531 () Bool)

(assert (= b_and!4527 (and (=> t!5047 result!2691) b_and!4531)))

(declare-fun b_lambda!3313 () Bool)

(assert (=> (not b_lambda!3313) (not b!74083)))

(assert (=> b!74083 t!5045))

(declare-fun b_and!4533 () Bool)

(assert (= b_and!4529 (and (=> t!5045 result!2689) b_and!4533)))

(assert (=> b!74083 t!5047))

(declare-fun b_and!4535 () Bool)

(assert (= b_and!4531 (and (=> t!5047 result!2691) b_and!4535)))

(assert (=> b!74077 m!71361))

(assert (=> b!74077 m!71361))

(assert (=> b!74077 m!71373))

(assert (=> b!74074 m!71387))

(assert (=> b!74074 m!71361))

(declare-fun m!72839 () Bool)

(assert (=> b!74074 m!72839))

(assert (=> b!74074 m!71361))

(assert (=> b!74074 m!71383))

(assert (=> b!74074 m!71387))

(assert (=> b!74074 m!71389))

(assert (=> b!74074 m!71383))

(declare-fun m!72841 () Bool)

(assert (=> b!74083 m!72841))

(assert (=> b!74083 m!71387))

(declare-fun m!72843 () Bool)

(assert (=> b!74083 m!72843))

(assert (=> b!74083 m!71361))

(assert (=> b!74083 m!71383))

(declare-fun m!72845 () Bool)

(assert (=> b!74083 m!72845))

(assert (=> b!74083 m!72841))

(declare-fun m!72847 () Bool)

(assert (=> b!74083 m!72847))

(assert (=> b!74083 m!71383))

(assert (=> b!74083 m!71387))

(assert (=> b!74083 m!71389))

(declare-fun m!72849 () Bool)

(assert (=> bm!6535 m!72849))

(assert (=> b!74084 m!72849))

(declare-fun m!72851 () Bool)

(assert (=> b!74078 m!72851))

(declare-fun m!72853 () Bool)

(assert (=> d!17341 m!72853))

(assert (=> d!17341 m!71219))

(assert (=> b!74082 m!71361))

(assert (=> b!74082 m!71361))

(assert (=> b!74082 m!71373))

(declare-fun m!72855 () Bool)

(assert (=> b!74081 m!72855))

(assert (=> b!74080 m!71361))

(assert (=> b!74080 m!71361))

(declare-fun m!72857 () Bool)

(assert (=> b!74080 m!72857))

(assert (=> bm!6442 d!17341))

(declare-fun d!17343 () Bool)

(declare-fun res!39205 () Bool)

(declare-fun e!48417 () Bool)

(assert (=> d!17343 (=> res!39205 e!48417)))

(assert (=> d!17343 (= res!39205 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32375))) (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32375)))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (=> d!17343 (= (containsKey!135 (t!5031 (toList!717 lt!32375)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) e!48417)))

(declare-fun b!74086 () Bool)

(declare-fun e!48418 () Bool)

(assert (=> b!74086 (= e!48417 e!48418)))

(declare-fun res!39206 () Bool)

(assert (=> b!74086 (=> (not res!39206) (not e!48418))))

(assert (=> b!74086 (= res!39206 (and (or (not ((_ is Cons!1479) (t!5031 (toList!717 lt!32375)))) (bvsle (_1!1071 (h!2066 (t!5031 (toList!717 lt!32375)))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))) ((_ is Cons!1479) (t!5031 (toList!717 lt!32375))) (bvslt (_1!1071 (h!2066 (t!5031 (toList!717 lt!32375)))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(declare-fun b!74087 () Bool)

(assert (=> b!74087 (= e!48418 (containsKey!135 (t!5031 (t!5031 (toList!717 lt!32375))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (= (and d!17343 (not res!39205)) b!74086))

(assert (= (and b!74086 res!39206) b!74087))

(assert (=> b!74087 m!70791))

(declare-fun m!72859 () Bool)

(assert (=> b!74087 m!72859))

(assert (=> b!73517 d!17343))

(assert (=> b!73153 d!17183))

(assert (=> b!73153 d!16875))

(assert (=> b!73478 d!17205))

(assert (=> b!73478 d!17171))

(assert (=> b!73434 d!17089))

(declare-fun b!74088 () Bool)

(declare-fun e!48419 () Option!137)

(assert (=> b!74088 (= e!48419 (Some!136 (_2!1071 (h!2066 (t!5031 (toList!717 lt!32668))))))))

(declare-fun b!74091 () Bool)

(declare-fun e!48420 () Option!137)

(assert (=> b!74091 (= e!48420 None!135)))

(declare-fun b!74090 () Bool)

(assert (=> b!74090 (= e!48420 (getValueByKey!131 (t!5031 (t!5031 (toList!717 lt!32668))) (_1!1071 lt!32383)))))

(declare-fun d!17345 () Bool)

(declare-fun c!11111 () Bool)

(assert (=> d!17345 (= c!11111 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32668))) (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32668)))) (_1!1071 lt!32383))))))

(assert (=> d!17345 (= (getValueByKey!131 (t!5031 (toList!717 lt!32668)) (_1!1071 lt!32383)) e!48419)))

(declare-fun b!74089 () Bool)

(assert (=> b!74089 (= e!48419 e!48420)))

(declare-fun c!11112 () Bool)

(assert (=> b!74089 (= c!11112 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32668))) (not (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32668)))) (_1!1071 lt!32383)))))))

(assert (= (and d!17345 c!11111) b!74088))

(assert (= (and d!17345 (not c!11111)) b!74089))

(assert (= (and b!74089 c!11112) b!74090))

(assert (= (and b!74089 (not c!11112)) b!74091))

(declare-fun m!72861 () Bool)

(assert (=> b!74090 m!72861))

(assert (=> b!73116 d!17345))

(declare-fun d!17347 () Bool)

(declare-fun e!48422 () Bool)

(assert (=> d!17347 e!48422))

(declare-fun res!39207 () Bool)

(assert (=> d!17347 (=> res!39207 e!48422)))

(declare-fun lt!33280 () Bool)

(assert (=> d!17347 (= res!39207 (not lt!33280))))

(declare-fun lt!33278 () Bool)

(assert (=> d!17347 (= lt!33280 lt!33278)))

(declare-fun lt!33277 () Unit!2066)

(declare-fun e!48421 () Unit!2066)

(assert (=> d!17347 (= lt!33277 e!48421)))

(declare-fun c!11113 () Bool)

(assert (=> d!17347 (= c!11113 lt!33278)))

(assert (=> d!17347 (= lt!33278 (containsKey!135 (toList!717 lt!33005) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!17347 (= (contains!719 lt!33005 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33280)))

(declare-fun b!74092 () Bool)

(declare-fun lt!33279 () Unit!2066)

(assert (=> b!74092 (= e!48421 lt!33279)))

(assert (=> b!74092 (= lt!33279 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!33005) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> b!74092 (isDefined!85 (getValueByKey!131 (toList!717 lt!33005) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74093 () Bool)

(declare-fun Unit!2121 () Unit!2066)

(assert (=> b!74093 (= e!48421 Unit!2121)))

(declare-fun b!74094 () Bool)

(assert (=> b!74094 (= e!48422 (isDefined!85 (getValueByKey!131 (toList!717 lt!33005) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17347 c!11113) b!74092))

(assert (= (and d!17347 (not c!11113)) b!74093))

(assert (= (and d!17347 (not res!39207)) b!74094))

(declare-fun m!72863 () Bool)

(assert (=> d!17347 m!72863))

(declare-fun m!72865 () Bool)

(assert (=> b!74092 m!72865))

(assert (=> b!74092 m!71907))

(assert (=> b!74092 m!71907))

(declare-fun m!72867 () Bool)

(assert (=> b!74092 m!72867))

(assert (=> b!74094 m!71907))

(assert (=> b!74094 m!71907))

(assert (=> b!74094 m!72867))

(assert (=> d!16963 d!17347))

(declare-fun b!74095 () Bool)

(declare-fun e!48423 () Option!137)

(assert (=> b!74095 (= e!48423 (Some!136 (_2!1071 (h!2066 lt!33006))))))

(declare-fun b!74098 () Bool)

(declare-fun e!48424 () Option!137)

(assert (=> b!74098 (= e!48424 None!135)))

(declare-fun b!74097 () Bool)

(assert (=> b!74097 (= e!48424 (getValueByKey!131 (t!5031 lt!33006) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun c!11114 () Bool)

(declare-fun d!17349 () Bool)

(assert (=> d!17349 (= c!11114 (and ((_ is Cons!1479) lt!33006) (= (_1!1071 (h!2066 lt!33006)) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17349 (= (getValueByKey!131 lt!33006 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48423)))

(declare-fun b!74096 () Bool)

(assert (=> b!74096 (= e!48423 e!48424)))

(declare-fun c!11115 () Bool)

(assert (=> b!74096 (= c!11115 (and ((_ is Cons!1479) lt!33006) (not (= (_1!1071 (h!2066 lt!33006)) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17349 c!11114) b!74095))

(assert (= (and d!17349 (not c!11114)) b!74096))

(assert (= (and b!74096 c!11115) b!74097))

(assert (= (and b!74096 (not c!11115)) b!74098))

(declare-fun m!72869 () Bool)

(assert (=> b!74097 m!72869))

(assert (=> d!16963 d!17349))

(declare-fun d!17351 () Bool)

(assert (=> d!17351 (= (getValueByKey!131 lt!33006 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!33281 () Unit!2066)

(assert (=> d!17351 (= lt!33281 (choose!420 lt!33006 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun e!48425 () Bool)

(assert (=> d!17351 e!48425))

(declare-fun res!39208 () Bool)

(assert (=> d!17351 (=> (not res!39208) (not e!48425))))

(assert (=> d!17351 (= res!39208 (isStrictlySorted!287 lt!33006))))

(assert (=> d!17351 (= (lemmaContainsTupThenGetReturnValue!51 lt!33006 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33281)))

(declare-fun b!74099 () Bool)

(declare-fun res!39209 () Bool)

(assert (=> b!74099 (=> (not res!39209) (not e!48425))))

(assert (=> b!74099 (= res!39209 (containsKey!135 lt!33006 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74100 () Bool)

(assert (=> b!74100 (= e!48425 (contains!722 lt!33006 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17351 res!39208) b!74099))

(assert (= (and b!74099 res!39209) b!74100))

(assert (=> d!17351 m!71901))

(declare-fun m!72871 () Bool)

(assert (=> d!17351 m!72871))

(declare-fun m!72873 () Bool)

(assert (=> d!17351 m!72873))

(declare-fun m!72875 () Bool)

(assert (=> b!74099 m!72875))

(declare-fun m!72877 () Bool)

(assert (=> b!74100 m!72877))

(assert (=> d!16963 d!17351))

(declare-fun d!17353 () Bool)

(declare-fun e!48428 () Bool)

(assert (=> d!17353 e!48428))

(declare-fun res!39211 () Bool)

(assert (=> d!17353 (=> (not res!39211) (not e!48428))))

(declare-fun lt!33282 () List!1483)

(assert (=> d!17353 (= res!39211 (isStrictlySorted!287 lt!33282))))

(declare-fun e!48430 () List!1483)

(assert (=> d!17353 (= lt!33282 e!48430)))

(declare-fun c!11118 () Bool)

(assert (=> d!17353 (= c!11118 (and ((_ is Cons!1479) (toList!717 lt!32607)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32607))) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17353 (isStrictlySorted!287 (toList!717 lt!32607))))

(assert (=> d!17353 (= (insertStrictlySorted!54 (toList!717 lt!32607) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33282)))

(declare-fun b!74101 () Bool)

(declare-fun res!39210 () Bool)

(assert (=> b!74101 (=> (not res!39210) (not e!48428))))

(assert (=> b!74101 (= res!39210 (containsKey!135 lt!33282 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74102 () Bool)

(declare-fun e!48429 () List!1483)

(declare-fun call!6541 () List!1483)

(assert (=> b!74102 (= e!48429 call!6541)))

(declare-fun bm!6536 () Bool)

(declare-fun call!6539 () List!1483)

(declare-fun call!6540 () List!1483)

(assert (=> bm!6536 (= call!6539 call!6540)))

(declare-fun b!74103 () Bool)

(assert (=> b!74103 (= e!48430 call!6540)))

(declare-fun e!48426 () List!1483)

(declare-fun b!74104 () Bool)

(assert (=> b!74104 (= e!48426 (insertStrictlySorted!54 (t!5031 (toList!717 lt!32607)) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74105 () Bool)

(assert (=> b!74105 (= e!48429 call!6541)))

(declare-fun b!74106 () Bool)

(assert (=> b!74106 (= e!48428 (contains!722 lt!33282 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun c!11116 () Bool)

(declare-fun b!74107 () Bool)

(assert (=> b!74107 (= c!11116 (and ((_ is Cons!1479) (toList!717 lt!32607)) (bvsgt (_1!1071 (h!2066 (toList!717 lt!32607))) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun e!48427 () List!1483)

(assert (=> b!74107 (= e!48427 e!48429)))

(declare-fun bm!6537 () Bool)

(assert (=> bm!6537 (= call!6540 ($colon$colon!65 e!48426 (ite c!11118 (h!2066 (toList!717 lt!32607)) (tuple2!2121 (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun c!11119 () Bool)

(assert (=> bm!6537 (= c!11119 c!11118)))

(declare-fun bm!6538 () Bool)

(assert (=> bm!6538 (= call!6541 call!6539)))

(declare-fun b!74108 () Bool)

(assert (=> b!74108 (= e!48430 e!48427)))

(declare-fun c!11117 () Bool)

(assert (=> b!74108 (= c!11117 (and ((_ is Cons!1479) (toList!717 lt!32607)) (= (_1!1071 (h!2066 (toList!717 lt!32607))) (_1!1071 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74109 () Bool)

(assert (=> b!74109 (= e!48427 call!6539)))

(declare-fun b!74110 () Bool)

(assert (=> b!74110 (= e!48426 (ite c!11117 (t!5031 (toList!717 lt!32607)) (ite c!11116 (Cons!1479 (h!2066 (toList!717 lt!32607)) (t!5031 (toList!717 lt!32607))) Nil!1480)))))

(assert (= (and d!17353 c!11118) b!74103))

(assert (= (and d!17353 (not c!11118)) b!74108))

(assert (= (and b!74108 c!11117) b!74109))

(assert (= (and b!74108 (not c!11117)) b!74107))

(assert (= (and b!74107 c!11116) b!74105))

(assert (= (and b!74107 (not c!11116)) b!74102))

(assert (= (or b!74105 b!74102) bm!6538))

(assert (= (or b!74109 bm!6538) bm!6536))

(assert (= (or b!74103 bm!6536) bm!6537))

(assert (= (and bm!6537 c!11119) b!74104))

(assert (= (and bm!6537 (not c!11119)) b!74110))

(assert (= (and d!17353 res!39211) b!74101))

(assert (= (and b!74101 res!39210) b!74106))

(declare-fun m!72879 () Bool)

(assert (=> bm!6537 m!72879))

(declare-fun m!72881 () Bool)

(assert (=> d!17353 m!72881))

(declare-fun m!72883 () Bool)

(assert (=> d!17353 m!72883))

(declare-fun m!72885 () Bool)

(assert (=> b!74104 m!72885))

(declare-fun m!72887 () Bool)

(assert (=> b!74106 m!72887))

(declare-fun m!72889 () Bool)

(assert (=> b!74101 m!72889))

(assert (=> d!16963 d!17353))

(declare-fun d!17355 () Bool)

(declare-fun res!39212 () Bool)

(declare-fun e!48431 () Bool)

(assert (=> d!17355 (=> res!39212 e!48431)))

(assert (=> d!17355 (= res!39212 (and ((_ is Cons!1479) (toList!717 lt!32663)) (= (_1!1071 (h!2066 (toList!717 lt!32663))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17355 (= (containsKey!135 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000) e!48431)))

(declare-fun b!74111 () Bool)

(declare-fun e!48432 () Bool)

(assert (=> b!74111 (= e!48431 e!48432)))

(declare-fun res!39213 () Bool)

(assert (=> b!74111 (=> (not res!39213) (not e!48432))))

(assert (=> b!74111 (= res!39213 (and (or (not ((_ is Cons!1479) (toList!717 lt!32663))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32663))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1479) (toList!717 lt!32663)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32663))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74112 () Bool)

(assert (=> b!74112 (= e!48432 (containsKey!135 (t!5031 (toList!717 lt!32663)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17355 (not res!39212)) b!74111))

(assert (= (and b!74111 res!39213) b!74112))

(declare-fun m!72891 () Bool)

(assert (=> b!74112 m!72891))

(assert (=> d!16977 d!17355))

(declare-fun b!74113 () Bool)

(assert (=> b!74113 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> b!74113 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))))))))

(declare-fun e!48433 () Bool)

(declare-fun lt!33287 () ListLongMap!1403)

(assert (=> b!74113 (= e!48433 (= (apply!75 lt!33287 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!74114 () Bool)

(declare-fun e!48435 () ListLongMap!1403)

(declare-fun call!6542 () ListLongMap!1403)

(assert (=> b!74114 (= e!48435 call!6542)))

(declare-fun b!74115 () Bool)

(declare-fun e!48438 () Bool)

(declare-fun e!48436 () Bool)

(assert (=> b!74115 (= e!48438 e!48436)))

(declare-fun c!11123 () Bool)

(declare-fun e!48434 () Bool)

(assert (=> b!74115 (= c!11123 e!48434)))

(declare-fun res!39215 () Bool)

(assert (=> b!74115 (=> (not res!39215) (not e!48434))))

(assert (=> b!74115 (= res!39215 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74116 () Bool)

(assert (=> b!74116 (= e!48434 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74116 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!74117 () Bool)

(declare-fun e!48437 () Bool)

(assert (=> b!74117 (= e!48437 (isEmpty!320 lt!33287))))

(declare-fun b!74118 () Bool)

(assert (=> b!74118 (= e!48436 e!48437)))

(declare-fun c!11121 () Bool)

(assert (=> b!74118 (= c!11121 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74119 () Bool)

(assert (=> b!74119 (= e!48436 e!48433)))

(assert (=> b!74119 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun res!39214 () Bool)

(assert (=> b!74119 (= res!39214 (contains!719 lt!33287 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74119 (=> (not res!39214) (not e!48433))))

(declare-fun b!74121 () Bool)

(declare-fun e!48439 () ListLongMap!1403)

(assert (=> b!74121 (= e!48439 e!48435)))

(declare-fun c!11120 () Bool)

(assert (=> b!74121 (= c!11120 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74122 () Bool)

(declare-fun lt!33285 () Unit!2066)

(declare-fun lt!33289 () Unit!2066)

(assert (=> b!74122 (= lt!33285 lt!33289)))

(declare-fun lt!33288 () ListLongMap!1403)

(declare-fun lt!33286 () V!2945)

(declare-fun lt!33284 () (_ BitVec 64))

(declare-fun lt!33283 () (_ BitVec 64))

(assert (=> b!74122 (not (contains!719 (+!93 lt!33288 (tuple2!2121 lt!33283 lt!33286)) lt!33284))))

(assert (=> b!74122 (= lt!33289 (addStillNotContains!25 lt!33288 lt!33283 lt!33286 lt!33284))))

(assert (=> b!74122 (= lt!33284 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!74122 (= lt!33286 (get!1142 (select (arr!1847 (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!74122 (= lt!33283 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74122 (= lt!33288 call!6542)))

(assert (=> b!74122 (= e!48435 (+!93 call!6542 (tuple2!2121 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) (get!1142 (select (arr!1847 (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!6539 () Bool)

(assert (=> bm!6539 (= call!6542 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) (mask!6178 newMap!16) (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) (minValue!2114 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16)))))

(declare-fun b!74123 () Bool)

(assert (=> b!74123 (= e!48437 (= lt!33287 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) (mask!6178 newMap!16) (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) (minValue!2114 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2212 newMap!16))))))

(declare-fun b!74124 () Bool)

(assert (=> b!74124 (= e!48439 (ListLongMap!1404 Nil!1480))))

(declare-fun b!74120 () Bool)

(declare-fun res!39216 () Bool)

(assert (=> b!74120 (=> (not res!39216) (not e!48438))))

(assert (=> b!74120 (= res!39216 (not (contains!719 lt!33287 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun d!17357 () Bool)

(assert (=> d!17357 e!48438))

(declare-fun res!39217 () Bool)

(assert (=> d!17357 (=> (not res!39217) (not e!48438))))

(assert (=> d!17357 (= res!39217 (not (contains!719 lt!33287 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17357 (= lt!33287 e!48439)))

(declare-fun c!11122 () Bool)

(assert (=> d!17357 (= c!11122 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17357 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17357 (= (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) (mask!6178 newMap!16) (ite (and c!10789 c!10800) lt!32559 (extraKeys!2071 newMap!16)) (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33287)))

(assert (= (and d!17357 c!11122) b!74124))

(assert (= (and d!17357 (not c!11122)) b!74121))

(assert (= (and b!74121 c!11120) b!74122))

(assert (= (and b!74121 (not c!11120)) b!74114))

(assert (= (or b!74122 b!74114) bm!6539))

(assert (= (and d!17357 res!39217) b!74120))

(assert (= (and b!74120 res!39216) b!74115))

(assert (= (and b!74115 res!39215) b!74116))

(assert (= (and b!74115 c!11123) b!74119))

(assert (= (and b!74115 (not c!11123)) b!74118))

(assert (= (and b!74119 res!39214) b!74113))

(assert (= (and b!74118 c!11121) b!74123))

(assert (= (and b!74118 (not c!11121)) b!74117))

(declare-fun b_lambda!3315 () Bool)

(assert (=> (not b_lambda!3315) (not b!74113)))

(assert (=> b!74113 t!5045))

(declare-fun b_and!4537 () Bool)

(assert (= b_and!4533 (and (=> t!5045 result!2689) b_and!4537)))

(assert (=> b!74113 t!5047))

(declare-fun b_and!4539 () Bool)

(assert (= b_and!4535 (and (=> t!5047 result!2691) b_and!4539)))

(declare-fun b_lambda!3317 () Bool)

(assert (=> (not b_lambda!3317) (not b!74122)))

(assert (=> b!74122 t!5045))

(declare-fun b_and!4541 () Bool)

(assert (= b_and!4537 (and (=> t!5045 result!2689) b_and!4541)))

(assert (=> b!74122 t!5047))

(declare-fun b_and!4543 () Bool)

(assert (= b_and!4539 (and (=> t!5047 result!2691) b_and!4543)))

(assert (=> b!74116 m!71361))

(assert (=> b!74116 m!71361))

(assert (=> b!74116 m!71373))

(assert (=> b!74113 m!71387))

(assert (=> b!74113 m!71361))

(declare-fun m!72893 () Bool)

(assert (=> b!74113 m!72893))

(assert (=> b!74113 m!71361))

(assert (=> b!74113 m!71821))

(assert (=> b!74113 m!71387))

(assert (=> b!74113 m!71825))

(assert (=> b!74113 m!71821))

(declare-fun m!72895 () Bool)

(assert (=> b!74122 m!72895))

(assert (=> b!74122 m!71387))

(declare-fun m!72897 () Bool)

(assert (=> b!74122 m!72897))

(assert (=> b!74122 m!71361))

(assert (=> b!74122 m!71821))

(declare-fun m!72899 () Bool)

(assert (=> b!74122 m!72899))

(assert (=> b!74122 m!72895))

(declare-fun m!72901 () Bool)

(assert (=> b!74122 m!72901))

(assert (=> b!74122 m!71821))

(assert (=> b!74122 m!71387))

(assert (=> b!74122 m!71825))

(declare-fun m!72903 () Bool)

(assert (=> bm!6539 m!72903))

(assert (=> b!74123 m!72903))

(declare-fun m!72905 () Bool)

(assert (=> b!74117 m!72905))

(declare-fun m!72907 () Bool)

(assert (=> d!17357 m!72907))

(assert (=> d!17357 m!71219))

(assert (=> b!74121 m!71361))

(assert (=> b!74121 m!71361))

(assert (=> b!74121 m!71373))

(declare-fun m!72909 () Bool)

(assert (=> b!74120 m!72909))

(assert (=> b!74119 m!71361))

(assert (=> b!74119 m!71361))

(declare-fun m!72911 () Bool)

(assert (=> b!74119 m!72911))

(assert (=> bm!6487 d!17357))

(declare-fun d!17359 () Bool)

(declare-fun lt!33290 () Bool)

(assert (=> d!17359 (= lt!33290 (select (content!77 (t!5031 (toList!717 lt!32668))) lt!32383))))

(declare-fun e!48441 () Bool)

(assert (=> d!17359 (= lt!33290 e!48441)))

(declare-fun res!39218 () Bool)

(assert (=> d!17359 (=> (not res!39218) (not e!48441))))

(assert (=> d!17359 (= res!39218 ((_ is Cons!1479) (t!5031 (toList!717 lt!32668))))))

(assert (=> d!17359 (= (contains!722 (t!5031 (toList!717 lt!32668)) lt!32383) lt!33290)))

(declare-fun b!74125 () Bool)

(declare-fun e!48440 () Bool)

(assert (=> b!74125 (= e!48441 e!48440)))

(declare-fun res!39219 () Bool)

(assert (=> b!74125 (=> res!39219 e!48440)))

(assert (=> b!74125 (= res!39219 (= (h!2066 (t!5031 (toList!717 lt!32668))) lt!32383))))

(declare-fun b!74126 () Bool)

(assert (=> b!74126 (= e!48440 (contains!722 (t!5031 (t!5031 (toList!717 lt!32668))) lt!32383))))

(assert (= (and d!17359 res!39218) b!74125))

(assert (= (and b!74125 (not res!39219)) b!74126))

(declare-fun m!72913 () Bool)

(assert (=> d!17359 m!72913))

(declare-fun m!72915 () Bool)

(assert (=> d!17359 m!72915))

(declare-fun m!72917 () Bool)

(assert (=> b!74126 m!72917))

(assert (=> b!73336 d!17359))

(assert (=> d!16947 d!16967))

(assert (=> d!16947 d!16949))

(declare-fun d!17361 () Bool)

(declare-fun e!48443 () Bool)

(assert (=> d!17361 e!48443))

(declare-fun res!39220 () Bool)

(assert (=> d!17361 (=> res!39220 e!48443)))

(declare-fun lt!33294 () Bool)

(assert (=> d!17361 (= res!39220 (not lt!33294))))

(declare-fun lt!33292 () Bool)

(assert (=> d!17361 (= lt!33294 lt!33292)))

(declare-fun lt!33291 () Unit!2066)

(declare-fun e!48442 () Unit!2066)

(assert (=> d!17361 (= lt!33291 e!48442)))

(declare-fun c!11124 () Bool)

(assert (=> d!17361 (= c!11124 lt!33292)))

(assert (=> d!17361 (= lt!33292 (containsKey!135 (toList!717 lt!32610) lt!32619))))

(assert (=> d!17361 (= (contains!719 lt!32610 lt!32619) lt!33294)))

(declare-fun b!74127 () Bool)

(declare-fun lt!33293 () Unit!2066)

(assert (=> b!74127 (= e!48442 lt!33293)))

(assert (=> b!74127 (= lt!33293 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32610) lt!32619))))

(assert (=> b!74127 (isDefined!85 (getValueByKey!131 (toList!717 lt!32610) lt!32619))))

(declare-fun b!74128 () Bool)

(declare-fun Unit!2122 () Unit!2066)

(assert (=> b!74128 (= e!48442 Unit!2122)))

(declare-fun b!74129 () Bool)

(assert (=> b!74129 (= e!48443 (isDefined!85 (getValueByKey!131 (toList!717 lt!32610) lt!32619)))))

(assert (= (and d!17361 c!11124) b!74127))

(assert (= (and d!17361 (not c!11124)) b!74128))

(assert (= (and d!17361 (not res!39220)) b!74129))

(declare-fun m!72919 () Bool)

(assert (=> d!17361 m!72919))

(declare-fun m!72921 () Bool)

(assert (=> b!74127 m!72921))

(assert (=> b!74127 m!71915))

(assert (=> b!74127 m!71915))

(declare-fun m!72923 () Bool)

(assert (=> b!74127 m!72923))

(assert (=> b!74129 m!71915))

(assert (=> b!74129 m!71915))

(assert (=> b!74129 m!72923))

(assert (=> d!16947 d!17361))

(declare-fun d!17363 () Bool)

(assert (=> d!17363 (= (apply!75 (+!93 lt!32610 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32619) (apply!75 lt!32610 lt!32619))))

(assert (=> d!17363 true))

(declare-fun _$34!811 () Unit!2066)

(assert (=> d!17363 (= (choose!428 lt!32610 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32619) _$34!811)))

(declare-fun bs!3189 () Bool)

(assert (= bs!3189 d!17363))

(assert (=> bs!3189 m!71047))

(assert (=> bs!3189 m!71047))

(assert (=> bs!3189 m!71055))

(assert (=> bs!3189 m!71059))

(assert (=> d!16947 d!17363))

(assert (=> d!16947 d!16957))

(assert (=> b!73213 d!17089))

(declare-fun d!17365 () Bool)

(declare-fun res!39221 () Bool)

(declare-fun e!48444 () Bool)

(assert (=> d!17365 (=> res!39221 e!48444)))

(assert (=> d!17365 (= res!39221 (and ((_ is Cons!1479) (toList!717 lt!32604)) (= (_1!1071 (h!2066 (toList!717 lt!32604))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17365 (= (containsKey!135 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000) e!48444)))

(declare-fun b!74130 () Bool)

(declare-fun e!48445 () Bool)

(assert (=> b!74130 (= e!48444 e!48445)))

(declare-fun res!39222 () Bool)

(assert (=> b!74130 (=> (not res!39222) (not e!48445))))

(assert (=> b!74130 (= res!39222 (and (or (not ((_ is Cons!1479) (toList!717 lt!32604))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32604))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1479) (toList!717 lt!32604)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32604))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74131 () Bool)

(assert (=> b!74131 (= e!48445 (containsKey!135 (t!5031 (toList!717 lt!32604)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17365 (not res!39221)) b!74130))

(assert (= (and b!74130 res!39222) b!74131))

(declare-fun m!72925 () Bool)

(assert (=> b!74131 m!72925))

(assert (=> d!16795 d!17365))

(declare-fun d!17367 () Bool)

(declare-fun e!48447 () Bool)

(assert (=> d!17367 e!48447))

(declare-fun res!39223 () Bool)

(assert (=> d!17367 (=> res!39223 e!48447)))

(declare-fun lt!33298 () Bool)

(assert (=> d!17367 (= res!39223 (not lt!33298))))

(declare-fun lt!33296 () Bool)

(assert (=> d!17367 (= lt!33298 lt!33296)))

(declare-fun lt!33295 () Unit!2066)

(declare-fun e!48446 () Unit!2066)

(assert (=> d!17367 (= lt!33295 e!48446)))

(declare-fun c!11125 () Bool)

(assert (=> d!17367 (= c!11125 lt!33296)))

(assert (=> d!17367 (= lt!33296 (containsKey!135 (toList!717 lt!32716) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!17367 (= (contains!719 lt!32716 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33298)))

(declare-fun b!74132 () Bool)

(declare-fun lt!33297 () Unit!2066)

(assert (=> b!74132 (= e!48446 lt!33297)))

(assert (=> b!74132 (= lt!33297 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32716) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> b!74132 (isDefined!85 (getValueByKey!131 (toList!717 lt!32716) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!74133 () Bool)

(declare-fun Unit!2123 () Unit!2066)

(assert (=> b!74133 (= e!48446 Unit!2123)))

(declare-fun b!74134 () Bool)

(assert (=> b!74134 (= e!48447 (isDefined!85 (getValueByKey!131 (toList!717 lt!32716) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (= (and d!17367 c!11125) b!74132))

(assert (= (and d!17367 (not c!11125)) b!74133))

(assert (= (and d!17367 (not res!39223)) b!74134))

(declare-fun m!72927 () Bool)

(assert (=> d!17367 m!72927))

(declare-fun m!72929 () Bool)

(assert (=> b!74132 m!72929))

(assert (=> b!74132 m!71311))

(assert (=> b!74132 m!71311))

(declare-fun m!72931 () Bool)

(assert (=> b!74132 m!72931))

(assert (=> b!74134 m!71311))

(assert (=> b!74134 m!71311))

(assert (=> b!74134 m!72931))

(assert (=> d!16821 d!17367))

(declare-fun b!74135 () Bool)

(declare-fun e!48448 () Option!137)

(assert (=> b!74135 (= e!48448 (Some!136 (_2!1071 (h!2066 lt!32717))))))

(declare-fun b!74138 () Bool)

(declare-fun e!48449 () Option!137)

(assert (=> b!74138 (= e!48449 None!135)))

(declare-fun b!74137 () Bool)

(assert (=> b!74137 (= e!48449 (getValueByKey!131 (t!5031 lt!32717) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun c!11126 () Bool)

(declare-fun d!17369 () Bool)

(assert (=> d!17369 (= c!11126 (and ((_ is Cons!1479) lt!32717) (= (_1!1071 (h!2066 lt!32717)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!17369 (= (getValueByKey!131 lt!32717 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) e!48448)))

(declare-fun b!74136 () Bool)

(assert (=> b!74136 (= e!48448 e!48449)))

(declare-fun c!11127 () Bool)

(assert (=> b!74136 (= c!11127 (and ((_ is Cons!1479) lt!32717) (not (= (_1!1071 (h!2066 lt!32717)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (= (and d!17369 c!11126) b!74135))

(assert (= (and d!17369 (not c!11126)) b!74136))

(assert (= (and b!74136 c!11127) b!74137))

(assert (= (and b!74136 (not c!11127)) b!74138))

(declare-fun m!72933 () Bool)

(assert (=> b!74137 m!72933))

(assert (=> d!16821 d!17369))

(declare-fun d!17371 () Bool)

(assert (=> d!17371 (= (getValueByKey!131 lt!32717 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun lt!33299 () Unit!2066)

(assert (=> d!17371 (= lt!33299 (choose!420 lt!32717 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun e!48450 () Bool)

(assert (=> d!17371 e!48450))

(declare-fun res!39224 () Bool)

(assert (=> d!17371 (=> (not res!39224) (not e!48450))))

(assert (=> d!17371 (= res!39224 (isStrictlySorted!287 lt!32717))))

(assert (=> d!17371 (= (lemmaContainsTupThenGetReturnValue!51 lt!32717 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33299)))

(declare-fun b!74139 () Bool)

(declare-fun res!39225 () Bool)

(assert (=> b!74139 (=> (not res!39225) (not e!48450))))

(assert (=> b!74139 (= res!39225 (containsKey!135 lt!32717 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!74140 () Bool)

(assert (=> b!74140 (= e!48450 (contains!722 lt!32717 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (= (and d!17371 res!39224) b!74139))

(assert (= (and b!74139 res!39225) b!74140))

(assert (=> d!17371 m!71305))

(declare-fun m!72935 () Bool)

(assert (=> d!17371 m!72935))

(declare-fun m!72937 () Bool)

(assert (=> d!17371 m!72937))

(declare-fun m!72939 () Bool)

(assert (=> b!74139 m!72939))

(declare-fun m!72941 () Bool)

(assert (=> b!74140 m!72941))

(assert (=> d!16821 d!17371))

(declare-fun d!17373 () Bool)

(declare-fun e!48453 () Bool)

(assert (=> d!17373 e!48453))

(declare-fun res!39227 () Bool)

(assert (=> d!17373 (=> (not res!39227) (not e!48453))))

(declare-fun lt!33300 () List!1483)

(assert (=> d!17373 (= res!39227 (isStrictlySorted!287 lt!33300))))

(declare-fun e!48455 () List!1483)

(assert (=> d!17373 (= lt!33300 e!48455)))

(declare-fun c!11130 () Bool)

(assert (=> d!17373 (= c!11130 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (bvslt (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!17373 (isStrictlySorted!287 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!17373 (= (insertStrictlySorted!54 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33300)))

(declare-fun b!74141 () Bool)

(declare-fun res!39226 () Bool)

(assert (=> b!74141 (=> (not res!39226) (not e!48453))))

(assert (=> b!74141 (= res!39226 (containsKey!135 lt!33300 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!74142 () Bool)

(declare-fun e!48454 () List!1483)

(declare-fun call!6545 () List!1483)

(assert (=> b!74142 (= e!48454 call!6545)))

(declare-fun bm!6540 () Bool)

(declare-fun call!6543 () List!1483)

(declare-fun call!6544 () List!1483)

(assert (=> bm!6540 (= call!6543 call!6544)))

(declare-fun b!74143 () Bool)

(assert (=> b!74143 (= e!48455 call!6544)))

(declare-fun b!74144 () Bool)

(declare-fun e!48451 () List!1483)

(assert (=> b!74144 (= e!48451 (insertStrictlySorted!54 (t!5031 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!74145 () Bool)

(assert (=> b!74145 (= e!48454 call!6545)))

(declare-fun b!74146 () Bool)

(assert (=> b!74146 (= e!48453 (contains!722 lt!33300 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!74147 () Bool)

(declare-fun c!11128 () Bool)

(assert (=> b!74147 (= c!11128 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (bvsgt (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun e!48452 () List!1483)

(assert (=> b!74147 (= e!48452 e!48454)))

(declare-fun bm!6541 () Bool)

(assert (=> bm!6541 (= call!6544 ($colon$colon!65 e!48451 (ite c!11130 (h!2066 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(declare-fun c!11131 () Bool)

(assert (=> bm!6541 (= c!11131 c!11130)))

(declare-fun bm!6542 () Bool)

(assert (=> bm!6542 (= call!6545 call!6543)))

(declare-fun b!74148 () Bool)

(assert (=> b!74148 (= e!48455 e!48452)))

(declare-fun c!11129 () Bool)

(assert (=> b!74148 (= c!11129 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!74149 () Bool)

(assert (=> b!74149 (= e!48452 call!6543)))

(declare-fun b!74150 () Bool)

(assert (=> b!74150 (= e!48451 (ite c!11129 (t!5031 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (ite c!11128 (Cons!1479 (h!2066 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))) (t!5031 (toList!717 (+!93 lt!32377 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))) Nil!1480)))))

(assert (= (and d!17373 c!11130) b!74143))

(assert (= (and d!17373 (not c!11130)) b!74148))

(assert (= (and b!74148 c!11129) b!74149))

(assert (= (and b!74148 (not c!11129)) b!74147))

(assert (= (and b!74147 c!11128) b!74145))

(assert (= (and b!74147 (not c!11128)) b!74142))

(assert (= (or b!74145 b!74142) bm!6542))

(assert (= (or b!74149 bm!6542) bm!6540))

(assert (= (or b!74143 bm!6540) bm!6541))

(assert (= (and bm!6541 c!11131) b!74144))

(assert (= (and bm!6541 (not c!11131)) b!74150))

(assert (= (and d!17373 res!39227) b!74141))

(assert (= (and b!74141 res!39226) b!74146))

(declare-fun m!72943 () Bool)

(assert (=> bm!6541 m!72943))

(declare-fun m!72945 () Bool)

(assert (=> d!17373 m!72945))

(declare-fun m!72947 () Bool)

(assert (=> d!17373 m!72947))

(declare-fun m!72949 () Bool)

(assert (=> b!74144 m!72949))

(declare-fun m!72951 () Bool)

(assert (=> b!74146 m!72951))

(declare-fun m!72953 () Bool)

(assert (=> b!74141 m!72953))

(assert (=> d!16821 d!17373))

(declare-fun d!17375 () Bool)

(declare-fun c!11132 () Bool)

(assert (=> d!17375 (= c!11132 ((_ is Nil!1480) (toList!717 lt!32668)))))

(declare-fun e!48456 () (InoxSet tuple2!2120))

(assert (=> d!17375 (= (content!77 (toList!717 lt!32668)) e!48456)))

(declare-fun b!74151 () Bool)

(assert (=> b!74151 (= e!48456 ((as const (Array tuple2!2120 Bool)) false))))

(declare-fun b!74152 () Bool)

(assert (=> b!74152 (= e!48456 ((_ map or) (store ((as const (Array tuple2!2120 Bool)) false) (h!2066 (toList!717 lt!32668)) true) (content!77 (t!5031 (toList!717 lt!32668)))))))

(assert (= (and d!17375 c!11132) b!74151))

(assert (= (and d!17375 (not c!11132)) b!74152))

(declare-fun m!72955 () Bool)

(assert (=> b!74152 m!72955))

(assert (=> b!74152 m!72913))

(assert (=> d!16891 d!17375))

(declare-fun d!17377 () Bool)

(declare-fun e!48458 () Bool)

(assert (=> d!17377 e!48458))

(declare-fun res!39228 () Bool)

(assert (=> d!17377 (=> res!39228 e!48458)))

(declare-fun lt!33304 () Bool)

(assert (=> d!17377 (= res!39228 (not lt!33304))))

(declare-fun lt!33302 () Bool)

(assert (=> d!17377 (= lt!33304 lt!33302)))

(declare-fun lt!33301 () Unit!2066)

(declare-fun e!48457 () Unit!2066)

(assert (=> d!17377 (= lt!33301 e!48457)))

(declare-fun c!11133 () Bool)

(assert (=> d!17377 (= c!11133 lt!33302)))

(assert (=> d!17377 (= lt!33302 (containsKey!135 (toList!717 lt!32919) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17377 (= (contains!719 lt!32919 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33304)))

(declare-fun b!74153 () Bool)

(declare-fun lt!33303 () Unit!2066)

(assert (=> b!74153 (= e!48457 lt!33303)))

(assert (=> b!74153 (= lt!33303 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32919) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74153 (isDefined!85 (getValueByKey!131 (toList!717 lt!32919) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74154 () Bool)

(declare-fun Unit!2124 () Unit!2066)

(assert (=> b!74154 (= e!48457 Unit!2124)))

(declare-fun b!74155 () Bool)

(assert (=> b!74155 (= e!48458 (isDefined!85 (getValueByKey!131 (toList!717 lt!32919) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17377 c!11133) b!74153))

(assert (= (and d!17377 (not c!11133)) b!74154))

(assert (= (and d!17377 (not res!39228)) b!74155))

(declare-fun m!72957 () Bool)

(assert (=> d!17377 m!72957))

(declare-fun m!72959 () Bool)

(assert (=> b!74153 m!72959))

(assert (=> b!74153 m!72491))

(assert (=> b!74153 m!72491))

(declare-fun m!72961 () Bool)

(assert (=> b!74153 m!72961))

(assert (=> b!74155 m!72491))

(assert (=> b!74155 m!72491))

(assert (=> b!74155 m!72961))

(assert (=> bm!6469 d!17377))

(declare-fun b!74156 () Bool)

(declare-fun e!48459 () Option!137)

(assert (=> b!74156 (= e!48459 (Some!136 (_2!1071 (h!2066 (t!5031 lt!32644)))))))

(declare-fun b!74159 () Bool)

(declare-fun e!48460 () Option!137)

(assert (=> b!74159 (= e!48460 None!135)))

(declare-fun b!74158 () Bool)

(assert (=> b!74158 (= e!48460 (getValueByKey!131 (t!5031 (t!5031 lt!32644)) (_1!1071 lt!32376)))))

(declare-fun d!17379 () Bool)

(declare-fun c!11134 () Bool)

(assert (=> d!17379 (= c!11134 (and ((_ is Cons!1479) (t!5031 lt!32644)) (= (_1!1071 (h!2066 (t!5031 lt!32644))) (_1!1071 lt!32376))))))

(assert (=> d!17379 (= (getValueByKey!131 (t!5031 lt!32644) (_1!1071 lt!32376)) e!48459)))

(declare-fun b!74157 () Bool)

(assert (=> b!74157 (= e!48459 e!48460)))

(declare-fun c!11135 () Bool)

(assert (=> b!74157 (= c!11135 (and ((_ is Cons!1479) (t!5031 lt!32644)) (not (= (_1!1071 (h!2066 (t!5031 lt!32644))) (_1!1071 lt!32376)))))))

(assert (= (and d!17379 c!11134) b!74156))

(assert (= (and d!17379 (not c!11134)) b!74157))

(assert (= (and b!74157 c!11135) b!74158))

(assert (= (and b!74157 (not c!11135)) b!74159))

(declare-fun m!72963 () Bool)

(assert (=> b!74158 m!72963))

(assert (=> b!73263 d!17379))

(declare-fun d!17381 () Bool)

(declare-fun e!48461 () Bool)

(assert (=> d!17381 e!48461))

(declare-fun res!39230 () Bool)

(assert (=> d!17381 (=> (not res!39230) (not e!48461))))

(declare-fun lt!33307 () ListLongMap!1403)

(assert (=> d!17381 (= res!39230 (contains!719 lt!33307 (_1!1071 (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(declare-fun lt!33308 () List!1483)

(assert (=> d!17381 (= lt!33307 (ListLongMap!1404 lt!33308))))

(declare-fun lt!33306 () Unit!2066)

(declare-fun lt!33305 () Unit!2066)

(assert (=> d!17381 (= lt!33306 lt!33305)))

(assert (=> d!17381 (= (getValueByKey!131 lt!33308 (_1!1071 (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))) (Some!136 (_2!1071 (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17381 (= lt!33305 (lemmaContainsTupThenGetReturnValue!51 lt!33308 (_1!1071 (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (_2!1071 (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17381 (= lt!33308 (insertStrictlySorted!54 (toList!717 (ite c!10946 call!6489 (ite c!10945 call!6487 call!6490))) (_1!1071 (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) (_2!1071 (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))))

(assert (=> d!17381 (= (+!93 (ite c!10946 call!6489 (ite c!10945 call!6487 call!6490)) (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))) lt!33307)))

(declare-fun b!74160 () Bool)

(declare-fun res!39229 () Bool)

(assert (=> b!74160 (=> (not res!39229) (not e!48461))))

(assert (=> b!74160 (= res!39229 (= (getValueByKey!131 (toList!717 lt!33307) (_1!1071 (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))) (Some!136 (_2!1071 (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))))

(declare-fun b!74161 () Bool)

(assert (=> b!74161 (= e!48461 (contains!722 (toList!717 lt!33307) (ite (or c!10946 c!10945) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(assert (= (and d!17381 res!39230) b!74160))

(assert (= (and b!74160 res!39229) b!74161))

(declare-fun m!72965 () Bool)

(assert (=> d!17381 m!72965))

(declare-fun m!72967 () Bool)

(assert (=> d!17381 m!72967))

(declare-fun m!72969 () Bool)

(assert (=> d!17381 m!72969))

(declare-fun m!72971 () Bool)

(assert (=> d!17381 m!72971))

(declare-fun m!72973 () Bool)

(assert (=> b!74160 m!72973))

(declare-fun m!72975 () Bool)

(assert (=> b!74161 m!72975))

(assert (=> bm!6483 d!17381))

(declare-fun b!74162 () Bool)

(declare-fun e!48462 () Option!137)

(assert (=> b!74162 (= e!48462 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32716)))))))

(declare-fun b!74165 () Bool)

(declare-fun e!48463 () Option!137)

(assert (=> b!74165 (= e!48463 None!135)))

(declare-fun b!74164 () Bool)

(assert (=> b!74164 (= e!48463 (getValueByKey!131 (t!5031 (toList!717 lt!32716)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun d!17383 () Bool)

(declare-fun c!11136 () Bool)

(assert (=> d!17383 (= c!11136 (and ((_ is Cons!1479) (toList!717 lt!32716)) (= (_1!1071 (h!2066 (toList!717 lt!32716))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!17383 (= (getValueByKey!131 (toList!717 lt!32716) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) e!48462)))

(declare-fun b!74163 () Bool)

(assert (=> b!74163 (= e!48462 e!48463)))

(declare-fun c!11137 () Bool)

(assert (=> b!74163 (= c!11137 (and ((_ is Cons!1479) (toList!717 lt!32716)) (not (= (_1!1071 (h!2066 (toList!717 lt!32716))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (= (and d!17383 c!11136) b!74162))

(assert (= (and d!17383 (not c!11136)) b!74163))

(assert (= (and b!74163 c!11137) b!74164))

(assert (= (and b!74163 (not c!11137)) b!74165))

(declare-fun m!72977 () Bool)

(assert (=> b!74164 m!72977))

(assert (=> b!73201 d!17383))

(assert (=> d!16919 d!17001))

(declare-fun d!17385 () Bool)

(declare-fun res!39231 () Bool)

(declare-fun e!48464 () Bool)

(assert (=> d!17385 (=> res!39231 e!48464)))

(assert (=> d!17385 (= res!39231 (and ((_ is Cons!1479) lt!32777) (= (_1!1071 (h!2066 lt!32777)) (_1!1071 lt!32383))))))

(assert (=> d!17385 (= (containsKey!135 lt!32777 (_1!1071 lt!32383)) e!48464)))

(declare-fun b!74166 () Bool)

(declare-fun e!48465 () Bool)

(assert (=> b!74166 (= e!48464 e!48465)))

(declare-fun res!39232 () Bool)

(assert (=> b!74166 (=> (not res!39232) (not e!48465))))

(assert (=> b!74166 (= res!39232 (and (or (not ((_ is Cons!1479) lt!32777)) (bvsle (_1!1071 (h!2066 lt!32777)) (_1!1071 lt!32383))) ((_ is Cons!1479) lt!32777) (bvslt (_1!1071 (h!2066 lt!32777)) (_1!1071 lt!32383))))))

(declare-fun b!74167 () Bool)

(assert (=> b!74167 (= e!48465 (containsKey!135 (t!5031 lt!32777) (_1!1071 lt!32383)))))

(assert (= (and d!17385 (not res!39231)) b!74166))

(assert (= (and b!74166 res!39232) b!74167))

(declare-fun m!72979 () Bool)

(assert (=> b!74167 m!72979))

(assert (=> b!73293 d!17385))

(declare-fun d!17387 () Bool)

(assert (=> d!17387 (= (get!1147 (getValueByKey!131 (toList!717 lt!32621) lt!32608)) (v!2529 (getValueByKey!131 (toList!717 lt!32621) lt!32608)))))

(assert (=> d!16959 d!17387))

(declare-fun b!74168 () Bool)

(declare-fun e!48466 () Option!137)

(assert (=> b!74168 (= e!48466 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32621)))))))

(declare-fun b!74171 () Bool)

(declare-fun e!48467 () Option!137)

(assert (=> b!74171 (= e!48467 None!135)))

(declare-fun b!74170 () Bool)

(assert (=> b!74170 (= e!48467 (getValueByKey!131 (t!5031 (toList!717 lt!32621)) lt!32608))))

(declare-fun d!17389 () Bool)

(declare-fun c!11138 () Bool)

(assert (=> d!17389 (= c!11138 (and ((_ is Cons!1479) (toList!717 lt!32621)) (= (_1!1071 (h!2066 (toList!717 lt!32621))) lt!32608)))))

(assert (=> d!17389 (= (getValueByKey!131 (toList!717 lt!32621) lt!32608) e!48466)))

(declare-fun b!74169 () Bool)

(assert (=> b!74169 (= e!48466 e!48467)))

(declare-fun c!11139 () Bool)

(assert (=> b!74169 (= c!11139 (and ((_ is Cons!1479) (toList!717 lt!32621)) (not (= (_1!1071 (h!2066 (toList!717 lt!32621))) lt!32608))))))

(assert (= (and d!17389 c!11138) b!74168))

(assert (= (and d!17389 (not c!11138)) b!74169))

(assert (= (and b!74169 c!11139) b!74170))

(assert (= (and b!74169 (not c!11139)) b!74171))

(declare-fun m!72981 () Bool)

(assert (=> b!74170 m!72981))

(assert (=> d!16959 d!17389))

(declare-fun b!74172 () Bool)

(declare-fun e!48468 () Option!137)

(assert (=> b!74172 (= e!48468 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32806)))))))

(declare-fun b!74175 () Bool)

(declare-fun e!48469 () Option!137)

(assert (=> b!74175 (= e!48469 None!135)))

(declare-fun b!74174 () Bool)

(assert (=> b!74174 (= e!48469 (getValueByKey!131 (t!5031 (toList!717 lt!32806)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!11140 () Bool)

(declare-fun d!17391 () Bool)

(assert (=> d!17391 (= c!11140 (and ((_ is Cons!1479) (toList!717 lt!32806)) (= (_1!1071 (h!2066 (toList!717 lt!32806))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!17391 (= (getValueByKey!131 (toList!717 lt!32806) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!48468)))

(declare-fun b!74173 () Bool)

(assert (=> b!74173 (= e!48468 e!48469)))

(declare-fun c!11141 () Bool)

(assert (=> b!74173 (= c!11141 (and ((_ is Cons!1479) (toList!717 lt!32806)) (not (= (_1!1071 (h!2066 (toList!717 lt!32806))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!17391 c!11140) b!74172))

(assert (= (and d!17391 (not c!11140)) b!74173))

(assert (= (and b!74173 c!11141) b!74174))

(assert (= (and b!74173 (not c!11141)) b!74175))

(declare-fun m!72983 () Bool)

(assert (=> b!74174 m!72983))

(assert (=> b!73352 d!17391))

(declare-fun d!17393 () Bool)

(assert (=> d!17393 (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33309 () Unit!2066)

(assert (=> d!17393 (= lt!33309 (choose!426 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48470 () Bool)

(assert (=> d!17393 e!48470))

(declare-fun res!39233 () Bool)

(assert (=> d!17393 (=> (not res!39233) (not e!48470))))

(assert (=> d!17393 (= res!39233 (isStrictlySorted!287 (toList!717 lt!32663)))))

(assert (=> d!17393 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000) lt!33309)))

(declare-fun b!74176 () Bool)

(assert (=> b!74176 (= e!48470 (containsKey!135 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17393 res!39233) b!74176))

(assert (=> d!17393 m!71953))

(assert (=> d!17393 m!71953))

(assert (=> d!17393 m!71955))

(declare-fun m!72985 () Bool)

(assert (=> d!17393 m!72985))

(assert (=> d!17393 m!72633))

(assert (=> b!74176 m!71949))

(assert (=> b!73566 d!17393))

(declare-fun d!17395 () Bool)

(assert (=> d!17395 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3190 () Bool)

(assert (= bs!3190 d!17395))

(assert (=> bs!3190 m!71953))

(declare-fun m!72987 () Bool)

(assert (=> bs!3190 m!72987))

(assert (=> b!73566 d!17395))

(declare-fun b!74177 () Bool)

(declare-fun e!48471 () Option!137)

(assert (=> b!74177 (= e!48471 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32663)))))))

(declare-fun b!74180 () Bool)

(declare-fun e!48472 () Option!137)

(assert (=> b!74180 (= e!48472 None!135)))

(declare-fun b!74179 () Bool)

(assert (=> b!74179 (= e!48472 (getValueByKey!131 (t!5031 (toList!717 lt!32663)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17397 () Bool)

(declare-fun c!11142 () Bool)

(assert (=> d!17397 (= c!11142 (and ((_ is Cons!1479) (toList!717 lt!32663)) (= (_1!1071 (h!2066 (toList!717 lt!32663))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17397 (= (getValueByKey!131 (toList!717 lt!32663) #b1000000000000000000000000000000000000000000000000000000000000000) e!48471)))

(declare-fun b!74178 () Bool)

(assert (=> b!74178 (= e!48471 e!48472)))

(declare-fun c!11143 () Bool)

(assert (=> b!74178 (= c!11143 (and ((_ is Cons!1479) (toList!717 lt!32663)) (not (= (_1!1071 (h!2066 (toList!717 lt!32663))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!17397 c!11142) b!74177))

(assert (= (and d!17397 (not c!11142)) b!74178))

(assert (= (and b!74178 c!11143) b!74179))

(assert (= (and b!74178 (not c!11143)) b!74180))

(declare-fun m!72989 () Bool)

(assert (=> b!74179 m!72989))

(assert (=> b!73566 d!17397))

(declare-fun b!74181 () Bool)

(declare-fun e!48473 () Bool)

(declare-fun e!48476 () Bool)

(assert (=> b!74181 (= e!48473 e!48476)))

(declare-fun res!39234 () Bool)

(assert (=> b!74181 (=> (not res!39234) (not e!48476))))

(declare-fun e!48475 () Bool)

(assert (=> b!74181 (= res!39234 (not e!48475))))

(declare-fun res!39235 () Bool)

(assert (=> b!74181 (=> (not res!39235) (not e!48475))))

(assert (=> b!74181 (= res!39235 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000)))))

(declare-fun bm!6543 () Bool)

(declare-fun call!6546 () Bool)

(declare-fun c!11144 () Bool)

(assert (=> bm!6543 (= call!6546 (arrayNoDuplicates!0 (_keys!3863 (_2!1072 lt!32534)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!11144 (Cons!1480 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000) Nil!1481) Nil!1481)))))

(declare-fun d!17399 () Bool)

(declare-fun res!39236 () Bool)

(assert (=> d!17399 (=> res!39236 e!48473)))

(assert (=> d!17399 (= res!39236 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32534)))))))

(assert (=> d!17399 (= (arrayNoDuplicates!0 (_keys!3863 (_2!1072 lt!32534)) #b00000000000000000000000000000000 Nil!1481) e!48473)))

(declare-fun b!74182 () Bool)

(declare-fun e!48474 () Bool)

(assert (=> b!74182 (= e!48476 e!48474)))

(assert (=> b!74182 (= c!11144 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000)))))

(declare-fun b!74183 () Bool)

(assert (=> b!74183 (= e!48474 call!6546)))

(declare-fun b!74184 () Bool)

(assert (=> b!74184 (= e!48475 (contains!721 Nil!1481 (select (arr!1846 (_keys!3863 (_2!1072 lt!32534))) #b00000000000000000000000000000000)))))

(declare-fun b!74185 () Bool)

(assert (=> b!74185 (= e!48474 call!6546)))

(assert (= (and d!17399 (not res!39236)) b!74181))

(assert (= (and b!74181 res!39235) b!74184))

(assert (= (and b!74181 res!39234) b!74182))

(assert (= (and b!74182 c!11144) b!74185))

(assert (= (and b!74182 (not c!11144)) b!74183))

(assert (= (or b!74185 b!74183) bm!6543))

(assert (=> b!74181 m!72417))

(assert (=> b!74181 m!72417))

(assert (=> b!74181 m!72429))

(assert (=> bm!6543 m!72417))

(declare-fun m!72991 () Bool)

(assert (=> bm!6543 m!72991))

(assert (=> b!74182 m!72417))

(assert (=> b!74182 m!72417))

(assert (=> b!74182 m!72429))

(assert (=> b!74184 m!72417))

(assert (=> b!74184 m!72417))

(declare-fun m!72993 () Bool)

(assert (=> b!74184 m!72993))

(assert (=> b!73309 d!17399))

(assert (=> bm!6479 d!16983))

(declare-fun d!17401 () Bool)

(declare-fun res!39237 () Bool)

(declare-fun e!48477 () Bool)

(assert (=> d!17401 (=> res!39237 e!48477)))

(assert (=> d!17401 (= res!39237 (or ((_ is Nil!1480) lt!32777) ((_ is Nil!1480) (t!5031 lt!32777))))))

(assert (=> d!17401 (= (isStrictlySorted!287 lt!32777) e!48477)))

(declare-fun b!74186 () Bool)

(declare-fun e!48478 () Bool)

(assert (=> b!74186 (= e!48477 e!48478)))

(declare-fun res!39238 () Bool)

(assert (=> b!74186 (=> (not res!39238) (not e!48478))))

(assert (=> b!74186 (= res!39238 (bvslt (_1!1071 (h!2066 lt!32777)) (_1!1071 (h!2066 (t!5031 lt!32777)))))))

(declare-fun b!74187 () Bool)

(assert (=> b!74187 (= e!48478 (isStrictlySorted!287 (t!5031 lt!32777)))))

(assert (= (and d!17401 (not res!39237)) b!74186))

(assert (= (and b!74186 res!39238) b!74187))

(declare-fun m!72995 () Bool)

(assert (=> b!74187 m!72995))

(assert (=> d!16871 d!17401))

(assert (=> d!16871 d!17021))

(declare-fun d!17403 () Bool)

(assert (=> d!17403 (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!33310 () Unit!2066)

(assert (=> d!17403 (= lt!33310 (choose!426 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!48479 () Bool)

(assert (=> d!17403 e!48479))

(declare-fun res!39239 () Bool)

(assert (=> d!17403 (=> (not res!39239) (not e!48479))))

(assert (=> d!17403 (= res!39239 (isStrictlySorted!287 (toList!717 lt!32604)))))

(assert (=> d!17403 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000) lt!33310)))

(declare-fun b!74188 () Bool)

(assert (=> b!74188 (= e!48479 (containsKey!135 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!17403 res!39239) b!74188))

(assert (=> d!17403 m!71215))

(assert (=> d!17403 m!71215))

(assert (=> d!17403 m!71217))

(declare-fun m!72997 () Bool)

(assert (=> d!17403 m!72997))

(assert (=> d!17403 m!72553))

(assert (=> b!74188 m!71211))

(assert (=> b!73134 d!17403))

(declare-fun d!17405 () Bool)

(assert (=> d!17405 (= (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!322 (getValueByKey!131 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3191 () Bool)

(assert (= bs!3191 d!17405))

(assert (=> bs!3191 m!71215))

(declare-fun m!72999 () Bool)

(assert (=> bs!3191 m!72999))

(assert (=> b!73134 d!17405))

(declare-fun b!74189 () Bool)

(declare-fun e!48480 () Option!137)

(assert (=> b!74189 (= e!48480 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32604)))))))

(declare-fun b!74192 () Bool)

(declare-fun e!48481 () Option!137)

(assert (=> b!74192 (= e!48481 None!135)))

(declare-fun b!74191 () Bool)

(assert (=> b!74191 (= e!48481 (getValueByKey!131 (t!5031 (toList!717 lt!32604)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!17407 () Bool)

(declare-fun c!11145 () Bool)

(assert (=> d!17407 (= c!11145 (and ((_ is Cons!1479) (toList!717 lt!32604)) (= (_1!1071 (h!2066 (toList!717 lt!32604))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!17407 (= (getValueByKey!131 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000) e!48480)))

(declare-fun b!74190 () Bool)

(assert (=> b!74190 (= e!48480 e!48481)))

(declare-fun c!11146 () Bool)

(assert (=> b!74190 (= c!11146 (and ((_ is Cons!1479) (toList!717 lt!32604)) (not (= (_1!1071 (h!2066 (toList!717 lt!32604))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!17407 c!11145) b!74189))

(assert (= (and d!17407 (not c!11145)) b!74190))

(assert (= (and b!74190 c!11146) b!74191))

(assert (= (and b!74190 (not c!11146)) b!74192))

(declare-fun m!73001 () Bool)

(assert (=> b!74191 m!73001))

(assert (=> b!73134 d!17407))

(declare-fun d!17409 () Bool)

(declare-fun e!48482 () Bool)

(assert (=> d!17409 e!48482))

(declare-fun res!39241 () Bool)

(assert (=> d!17409 (=> (not res!39241) (not e!48482))))

(declare-fun lt!33313 () ListLongMap!1403)

(assert (=> d!17409 (= res!39241 (contains!719 lt!33313 (_1!1071 (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))))

(declare-fun lt!33314 () List!1483)

(assert (=> d!17409 (= lt!33313 (ListLongMap!1404 lt!33314))))

(declare-fun lt!33312 () Unit!2066)

(declare-fun lt!33311 () Unit!2066)

(assert (=> d!17409 (= lt!33312 lt!33311)))

(assert (=> d!17409 (= (getValueByKey!131 lt!33314 (_1!1071 (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))) (Some!136 (_2!1071 (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))))

(assert (=> d!17409 (= lt!33311 (lemmaContainsTupThenGetReturnValue!51 lt!33314 (_1!1071 (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) (_2!1071 (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))))

(assert (=> d!17409 (= lt!33314 (insertStrictlySorted!54 (toList!717 (ite c!10931 call!6476 (ite c!10930 call!6474 call!6477))) (_1!1071 (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) (_2!1071 (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))))

(assert (=> d!17409 (= (+!93 (ite c!10931 call!6476 (ite c!10930 call!6474 call!6477)) (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) lt!33313)))

(declare-fun b!74193 () Bool)

(declare-fun res!39240 () Bool)

(assert (=> b!74193 (=> (not res!39240) (not e!48482))))

(assert (=> b!74193 (= res!39240 (= (getValueByKey!131 (toList!717 lt!33313) (_1!1071 (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))) (Some!136 (_2!1071 (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))))

(declare-fun b!74194 () Bool)

(assert (=> b!74194 (= e!48482 (contains!722 (toList!717 lt!33313) (ite (or c!10931 c!10930) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(assert (= (and d!17409 res!39241) b!74193))

(assert (= (and b!74193 res!39240) b!74194))

(declare-fun m!73003 () Bool)

(assert (=> d!17409 m!73003))

(declare-fun m!73005 () Bool)

(assert (=> d!17409 m!73005))

(declare-fun m!73007 () Bool)

(assert (=> d!17409 m!73007))

(declare-fun m!73009 () Bool)

(assert (=> d!17409 m!73009))

(declare-fun m!73011 () Bool)

(assert (=> b!74193 m!73011))

(declare-fun m!73013 () Bool)

(assert (=> b!74194 m!73013))

(assert (=> bm!6470 d!17409))

(declare-fun d!17411 () Bool)

(declare-fun lt!33315 () Bool)

(assert (=> d!17411 (= lt!33315 (select (content!77 (t!5031 (toList!717 lt!32672))) lt!32383))))

(declare-fun e!48484 () Bool)

(assert (=> d!17411 (= lt!33315 e!48484)))

(declare-fun res!39242 () Bool)

(assert (=> d!17411 (=> (not res!39242) (not e!48484))))

(assert (=> d!17411 (= res!39242 ((_ is Cons!1479) (t!5031 (toList!717 lt!32672))))))

(assert (=> d!17411 (= (contains!722 (t!5031 (toList!717 lt!32672)) lt!32383) lt!33315)))

(declare-fun b!74195 () Bool)

(declare-fun e!48483 () Bool)

(assert (=> b!74195 (= e!48484 e!48483)))

(declare-fun res!39243 () Bool)

(assert (=> b!74195 (=> res!39243 e!48483)))

(assert (=> b!74195 (= res!39243 (= (h!2066 (t!5031 (toList!717 lt!32672))) lt!32383))))

(declare-fun b!74196 () Bool)

(assert (=> b!74196 (= e!48483 (contains!722 (t!5031 (t!5031 (toList!717 lt!32672))) lt!32383))))

(assert (= (and d!17411 res!39242) b!74195))

(assert (= (and b!74195 (not res!39243)) b!74196))

(declare-fun m!73015 () Bool)

(assert (=> d!17411 m!73015))

(declare-fun m!73017 () Bool)

(assert (=> d!17411 m!73017))

(declare-fun m!73019 () Bool)

(assert (=> b!74196 m!73019))

(assert (=> b!73448 d!17411))

(declare-fun d!17413 () Bool)

(declare-fun lt!33316 () Bool)

(assert (=> d!17413 (= lt!33316 (select (content!77 (toList!717 lt!33005)) (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun e!48486 () Bool)

(assert (=> d!17413 (= lt!33316 e!48486)))

(declare-fun res!39244 () Bool)

(assert (=> d!17413 (=> (not res!39244) (not e!48486))))

(assert (=> d!17413 (= res!39244 ((_ is Cons!1479) (toList!717 lt!33005)))))

(assert (=> d!17413 (= (contains!722 (toList!717 lt!33005) (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!33316)))

(declare-fun b!74197 () Bool)

(declare-fun e!48485 () Bool)

(assert (=> b!74197 (= e!48486 e!48485)))

(declare-fun res!39245 () Bool)

(assert (=> b!74197 (=> res!39245 e!48485)))

(assert (=> b!74197 (= res!39245 (= (h!2066 (toList!717 lt!33005)) (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!74198 () Bool)

(assert (=> b!74198 (= e!48485 (contains!722 (t!5031 (toList!717 lt!33005)) (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!17413 res!39244) b!74197))

(assert (= (and b!74197 (not res!39245)) b!74198))

(declare-fun m!73021 () Bool)

(assert (=> d!17413 m!73021))

(declare-fun m!73023 () Bool)

(assert (=> d!17413 m!73023))

(declare-fun m!73025 () Bool)

(assert (=> b!74198 m!73025))

(assert (=> b!73544 d!17413))

(declare-fun d!17415 () Bool)

(declare-fun e!48487 () Bool)

(assert (=> d!17415 e!48487))

(declare-fun res!39247 () Bool)

(assert (=> d!17415 (=> (not res!39247) (not e!48487))))

(declare-fun lt!33319 () ListLongMap!1403)

(assert (=> d!17415 (= res!39247 (contains!719 lt!33319 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(declare-fun lt!33320 () List!1483)

(assert (=> d!17415 (= lt!33319 (ListLongMap!1404 lt!33320))))

(declare-fun lt!33318 () Unit!2066)

(declare-fun lt!33317 () Unit!2066)

(assert (=> d!17415 (= lt!33318 lt!33317)))

(assert (=> d!17415 (= (getValueByKey!131 lt!33320 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(assert (=> d!17415 (= lt!33317 (lemmaContainsTupThenGetReturnValue!51 lt!33320 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(assert (=> d!17415 (= lt!33320 (insertStrictlySorted!54 (toList!717 call!6471) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))))))

(assert (=> d!17415 (= (+!93 call!6471 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))) lt!33319)))

(declare-fun b!74199 () Bool)

(declare-fun res!39246 () Bool)

(assert (=> b!74199 (=> (not res!39246) (not e!48487))))

(assert (=> b!74199 (= res!39246 (= (getValueByKey!131 (toList!717 lt!33319) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16))))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))))

(declare-fun b!74200 () Bool)

(assert (=> b!74200 (= e!48487 (contains!722 (toList!717 lt!33319) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!10789 (ite c!10800 (minValue!2114 newMap!16) lt!32380) (minValue!2114 newMap!16)))))))

(assert (= (and d!17415 res!39247) b!74199))

(assert (= (and b!74199 res!39246) b!74200))

(declare-fun m!73027 () Bool)

(assert (=> d!17415 m!73027))

(declare-fun m!73029 () Bool)

(assert (=> d!17415 m!73029))

(declare-fun m!73031 () Bool)

(assert (=> d!17415 m!73031))

(declare-fun m!73033 () Bool)

(assert (=> d!17415 m!73033))

(declare-fun m!73035 () Bool)

(assert (=> b!74199 m!73035))

(declare-fun m!73037 () Bool)

(assert (=> b!74200 m!73037))

(assert (=> b!73435 d!17415))

(assert (=> d!16929 d!16923))

(assert (=> d!16929 d!16925))

(declare-fun d!17417 () Bool)

(assert (=> d!17417 (isDefined!85 (getValueByKey!131 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!17417 true))

(declare-fun _$12!323 () Unit!2066)

(assert (=> d!17417 (= (choose!426 (toList!717 lt!32375) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) _$12!323)))

(declare-fun bs!3192 () Bool)

(assert (= bs!3192 d!17417))

(assert (=> bs!3192 m!70791))

(assert (=> bs!3192 m!70965))

(assert (=> bs!3192 m!70965))

(assert (=> bs!3192 m!70967))

(assert (=> d!16929 d!17417))

(declare-fun d!17419 () Bool)

(declare-fun res!39248 () Bool)

(declare-fun e!48488 () Bool)

(assert (=> d!17419 (=> res!39248 e!48488)))

(assert (=> d!17419 (= res!39248 (or ((_ is Nil!1480) (toList!717 lt!32375)) ((_ is Nil!1480) (t!5031 (toList!717 lt!32375)))))))

(assert (=> d!17419 (= (isStrictlySorted!287 (toList!717 lt!32375)) e!48488)))

(declare-fun b!74201 () Bool)

(declare-fun e!48489 () Bool)

(assert (=> b!74201 (= e!48488 e!48489)))

(declare-fun res!39249 () Bool)

(assert (=> b!74201 (=> (not res!39249) (not e!48489))))

(assert (=> b!74201 (= res!39249 (bvslt (_1!1071 (h!2066 (toList!717 lt!32375))) (_1!1071 (h!2066 (t!5031 (toList!717 lt!32375))))))))

(declare-fun b!74202 () Bool)

(assert (=> b!74202 (= e!48489 (isStrictlySorted!287 (t!5031 (toList!717 lt!32375))))))

(assert (= (and d!17419 (not res!39248)) b!74201))

(assert (= (and b!74201 res!39249) b!74202))

(declare-fun m!73039 () Bool)

(assert (=> b!74202 m!73039))

(assert (=> d!16929 d!17419))

(declare-fun d!17421 () Bool)

(declare-fun e!48491 () Bool)

(assert (=> d!17421 e!48491))

(declare-fun res!39250 () Bool)

(assert (=> d!17421 (=> res!39250 e!48491)))

(declare-fun lt!33324 () Bool)

(assert (=> d!17421 (= res!39250 (not lt!33324))))

(declare-fun lt!33322 () Bool)

(assert (=> d!17421 (= lt!33324 lt!33322)))

(declare-fun lt!33321 () Unit!2066)

(declare-fun e!48490 () Unit!2066)

(assert (=> d!17421 (= lt!33321 e!48490)))

(declare-fun c!11147 () Bool)

(assert (=> d!17421 (= c!11147 lt!33322)))

(assert (=> d!17421 (= lt!33322 (containsKey!135 (toList!717 lt!32806) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17421 (= (contains!719 lt!32806 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33324)))

(declare-fun b!74203 () Bool)

(declare-fun lt!33323 () Unit!2066)

(assert (=> b!74203 (= e!48490 lt!33323)))

(assert (=> b!74203 (= lt!33323 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32806) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!74203 (isDefined!85 (getValueByKey!131 (toList!717 lt!32806) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74204 () Bool)

(declare-fun Unit!2125 () Unit!2066)

(assert (=> b!74204 (= e!48490 Unit!2125)))

(declare-fun b!74205 () Bool)

(assert (=> b!74205 (= e!48491 (isDefined!85 (getValueByKey!131 (toList!717 lt!32806) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!17421 c!11147) b!74203))

(assert (= (and d!17421 (not c!11147)) b!74204))

(assert (= (and d!17421 (not res!39250)) b!74205))

(declare-fun m!73041 () Bool)

(assert (=> d!17421 m!73041))

(declare-fun m!73043 () Bool)

(assert (=> b!74203 m!73043))

(assert (=> b!74203 m!71581))

(assert (=> b!74203 m!71581))

(declare-fun m!73045 () Bool)

(assert (=> b!74203 m!73045))

(assert (=> b!74205 m!71581))

(assert (=> b!74205 m!71581))

(assert (=> b!74205 m!73045))

(assert (=> d!16899 d!17421))

(declare-fun b!74206 () Bool)

(declare-fun e!48492 () Option!137)

(assert (=> b!74206 (= e!48492 (Some!136 (_2!1071 (h!2066 lt!32807))))))

(declare-fun b!74209 () Bool)

(declare-fun e!48493 () Option!137)

(assert (=> b!74209 (= e!48493 None!135)))

(declare-fun b!74208 () Bool)

(assert (=> b!74208 (= e!48493 (getValueByKey!131 (t!5031 lt!32807) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun d!17423 () Bool)

(declare-fun c!11148 () Bool)

(assert (=> d!17423 (= c!11148 (and ((_ is Cons!1479) lt!32807) (= (_1!1071 (h!2066 lt!32807)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!17423 (= (getValueByKey!131 lt!32807 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!48492)))

(declare-fun b!74207 () Bool)

(assert (=> b!74207 (= e!48492 e!48493)))

(declare-fun c!11149 () Bool)

(assert (=> b!74207 (= c!11149 (and ((_ is Cons!1479) lt!32807) (not (= (_1!1071 (h!2066 lt!32807)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!17423 c!11148) b!74206))

(assert (= (and d!17423 (not c!11148)) b!74207))

(assert (= (and b!74207 c!11149) b!74208))

(assert (= (and b!74207 (not c!11149)) b!74209))

(declare-fun m!73047 () Bool)

(assert (=> b!74208 m!73047))

(assert (=> d!16899 d!17423))

(declare-fun d!17425 () Bool)

(assert (=> d!17425 (= (getValueByKey!131 lt!32807 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!33325 () Unit!2066)

(assert (=> d!17425 (= lt!33325 (choose!420 lt!32807 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!48494 () Bool)

(assert (=> d!17425 e!48494))

(declare-fun res!39251 () Bool)

(assert (=> d!17425 (=> (not res!39251) (not e!48494))))

(assert (=> d!17425 (= res!39251 (isStrictlySorted!287 lt!32807))))

(assert (=> d!17425 (= (lemmaContainsTupThenGetReturnValue!51 lt!32807 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33325)))

(declare-fun b!74210 () Bool)

(declare-fun res!39252 () Bool)

(assert (=> b!74210 (=> (not res!39252) (not e!48494))))

(assert (=> b!74210 (= res!39252 (containsKey!135 lt!32807 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74211 () Bool)

(assert (=> b!74211 (= e!48494 (contains!722 lt!32807 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!17425 res!39251) b!74210))

(assert (= (and b!74210 res!39252) b!74211))

(assert (=> d!17425 m!71575))

(declare-fun m!73049 () Bool)

(assert (=> d!17425 m!73049))

(declare-fun m!73051 () Bool)

(assert (=> d!17425 m!73051))

(declare-fun m!73053 () Bool)

(assert (=> b!74210 m!73053))

(declare-fun m!73055 () Bool)

(assert (=> b!74211 m!73055))

(assert (=> d!16899 d!17425))

(declare-fun d!17427 () Bool)

(declare-fun e!48497 () Bool)

(assert (=> d!17427 e!48497))

(declare-fun res!39254 () Bool)

(assert (=> d!17427 (=> (not res!39254) (not e!48497))))

(declare-fun lt!33326 () List!1483)

(assert (=> d!17427 (= res!39254 (isStrictlySorted!287 lt!33326))))

(declare-fun e!48499 () List!1483)

(assert (=> d!17427 (= lt!33326 e!48499)))

(declare-fun c!11152 () Bool)

(assert (=> d!17427 (= c!11152 (and ((_ is Cons!1479) (toList!717 call!6427)) (bvslt (_1!1071 (h!2066 (toList!717 call!6427))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!17427 (isStrictlySorted!287 (toList!717 call!6427))))

(assert (=> d!17427 (= (insertStrictlySorted!54 (toList!717 call!6427) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!33326)))

(declare-fun b!74212 () Bool)

(declare-fun res!39253 () Bool)

(assert (=> b!74212 (=> (not res!39253) (not e!48497))))

(assert (=> b!74212 (= res!39253 (containsKey!135 lt!33326 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74213 () Bool)

(declare-fun e!48498 () List!1483)

(declare-fun call!6549 () List!1483)

(assert (=> b!74213 (= e!48498 call!6549)))

(declare-fun bm!6544 () Bool)

(declare-fun call!6547 () List!1483)

(declare-fun call!6548 () List!1483)

(assert (=> bm!6544 (= call!6547 call!6548)))

(declare-fun b!74214 () Bool)

(assert (=> b!74214 (= e!48499 call!6548)))

(declare-fun e!48495 () List!1483)

(declare-fun b!74215 () Bool)

(assert (=> b!74215 (= e!48495 (insertStrictlySorted!54 (t!5031 (toList!717 call!6427)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!74216 () Bool)

(assert (=> b!74216 (= e!48498 call!6549)))

(declare-fun b!74217 () Bool)

(assert (=> b!74217 (= e!48497 (contains!722 lt!33326 (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!11150 () Bool)

(declare-fun b!74218 () Bool)

(assert (=> b!74218 (= c!11150 (and ((_ is Cons!1479) (toList!717 call!6427)) (bvsgt (_1!1071 (h!2066 (toList!717 call!6427))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!48496 () List!1483)

(assert (=> b!74218 (= e!48496 e!48498)))

(declare-fun bm!6545 () Bool)

(assert (=> bm!6545 (= call!6548 ($colon$colon!65 e!48495 (ite c!11152 (h!2066 (toList!717 call!6427)) (tuple2!2121 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!11153 () Bool)

(assert (=> bm!6545 (= c!11153 c!11152)))

(declare-fun bm!6546 () Bool)

(assert (=> bm!6546 (= call!6549 call!6547)))

(declare-fun b!74219 () Bool)

(assert (=> b!74219 (= e!48499 e!48496)))

(declare-fun c!11151 () Bool)

(assert (=> b!74219 (= c!11151 (and ((_ is Cons!1479) (toList!717 call!6427)) (= (_1!1071 (h!2066 (toList!717 call!6427))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!74220 () Bool)

(assert (=> b!74220 (= e!48496 call!6547)))

(declare-fun b!74221 () Bool)

(assert (=> b!74221 (= e!48495 (ite c!11151 (t!5031 (toList!717 call!6427)) (ite c!11150 (Cons!1479 (h!2066 (toList!717 call!6427)) (t!5031 (toList!717 call!6427))) Nil!1480)))))

(assert (= (and d!17427 c!11152) b!74214))

(assert (= (and d!17427 (not c!11152)) b!74219))

(assert (= (and b!74219 c!11151) b!74220))

(assert (= (and b!74219 (not c!11151)) b!74218))

(assert (= (and b!74218 c!11150) b!74216))

(assert (= (and b!74218 (not c!11150)) b!74213))

(assert (= (or b!74216 b!74213) bm!6546))

(assert (= (or b!74220 bm!6546) bm!6544))

(assert (= (or b!74214 bm!6544) bm!6545))

(assert (= (and bm!6545 c!11153) b!74215))

(assert (= (and bm!6545 (not c!11153)) b!74221))

(assert (= (and d!17427 res!39254) b!74212))

(assert (= (and b!74212 res!39253) b!74217))

(declare-fun m!73057 () Bool)

(assert (=> bm!6545 m!73057))

(declare-fun m!73059 () Bool)

(assert (=> d!17427 m!73059))

(declare-fun m!73061 () Bool)

(assert (=> d!17427 m!73061))

(declare-fun m!73063 () Bool)

(assert (=> b!74215 m!73063))

(declare-fun m!73065 () Bool)

(assert (=> b!74217 m!73065))

(declare-fun m!73067 () Bool)

(assert (=> b!74212 m!73067))

(assert (=> d!16899 d!17427))

(declare-fun d!17429 () Bool)

(declare-fun lt!33327 () Bool)

(assert (=> d!17429 (= lt!33327 (select (content!77 lt!32640) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun e!48501 () Bool)

(assert (=> d!17429 (= lt!33327 e!48501)))

(declare-fun res!39255 () Bool)

(assert (=> d!17429 (=> (not res!39255) (not e!48501))))

(assert (=> d!17429 (= res!39255 ((_ is Cons!1479) lt!32640))))

(assert (=> d!17429 (= (contains!722 lt!32640 (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))) lt!33327)))

(declare-fun b!74222 () Bool)

(declare-fun e!48500 () Bool)

(assert (=> b!74222 (= e!48501 e!48500)))

(declare-fun res!39256 () Bool)

(assert (=> b!74222 (=> res!39256 e!48500)))

(assert (=> b!74222 (= res!39256 (= (h!2066 lt!32640) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun b!74223 () Bool)

(assert (=> b!74223 (= e!48500 (contains!722 (t!5031 lt!32640) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(assert (= (and d!17429 res!39255) b!74222))

(assert (= (and b!74222 (not res!39256)) b!74223))

(declare-fun m!73069 () Bool)

(assert (=> d!17429 m!73069))

(declare-fun m!73071 () Bool)

(assert (=> d!17429 m!73071))

(declare-fun m!73073 () Bool)

(assert (=> b!74223 m!73073))

(assert (=> b!73163 d!17429))

(declare-fun b!74224 () Bool)

(declare-fun e!48510 () Bool)

(declare-fun e!48509 () Bool)

(assert (=> b!74224 (= e!48510 e!48509)))

(declare-fun res!39259 () Bool)

(declare-fun call!6552 () Bool)

(assert (=> b!74224 (= res!39259 call!6552)))

(assert (=> b!74224 (=> (not res!39259) (not e!48509))))

(declare-fun b!74225 () Bool)

(declare-fun e!48507 () ListLongMap!1403)

(declare-fun call!6551 () ListLongMap!1403)

(assert (=> b!74225 (= e!48507 call!6551)))

(declare-fun b!74226 () Bool)

(declare-fun e!48502 () Bool)

(assert (=> b!74226 (= e!48502 e!48510)))

(declare-fun c!11155 () Bool)

(assert (=> b!74226 (= c!11155 (not (= (bvand lt!32546 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74227 () Bool)

(declare-fun e!48508 () Bool)

(declare-fun call!6554 () Bool)

(assert (=> b!74227 (= e!48508 (not call!6554))))

(declare-fun b!74228 () Bool)

(declare-fun e!48513 () ListLongMap!1403)

(declare-fun call!6556 () ListLongMap!1403)

(assert (=> b!74228 (= e!48513 call!6556)))

(declare-fun b!74230 () Bool)

(declare-fun e!48504 () Bool)

(assert (=> b!74230 (= e!48508 e!48504)))

(declare-fun res!39262 () Bool)

(assert (=> b!74230 (= res!39262 call!6554)))

(assert (=> b!74230 (=> (not res!39262) (not e!48504))))

(declare-fun bm!6547 () Bool)

(declare-fun call!6553 () ListLongMap!1403)

(declare-fun call!6555 () ListLongMap!1403)

(assert (=> bm!6547 (= call!6553 call!6555)))

(declare-fun b!74231 () Bool)

(declare-fun e!48512 () ListLongMap!1403)

(assert (=> b!74231 (= e!48512 e!48507)))

(declare-fun c!11158 () Bool)

(assert (=> b!74231 (= c!11158 (and (not (= (bvand lt!32546 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!32546 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6548 () Bool)

(declare-fun lt!33328 () ListLongMap!1403)

(assert (=> bm!6548 (= call!6552 (contains!719 lt!33328 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!6550 () ListLongMap!1403)

(declare-fun bm!6549 () Bool)

(declare-fun c!11159 () Bool)

(assert (=> bm!6549 (= call!6550 (+!93 (ite c!11159 call!6555 (ite c!11158 call!6553 call!6556)) (ite (or c!11159 c!11158) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380))))))

(declare-fun b!74232 () Bool)

(declare-fun e!48514 () Bool)

(assert (=> b!74232 (= e!48514 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74233 () Bool)

(declare-fun res!39260 () Bool)

(assert (=> b!74233 (=> (not res!39260) (not e!48502))))

(assert (=> b!74233 (= res!39260 e!48508)))

(declare-fun c!11156 () Bool)

(assert (=> b!74233 (= c!11156 (not (= (bvand lt!32546 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6550 () Bool)

(assert (=> bm!6550 (= call!6556 call!6553)))

(declare-fun b!74234 () Bool)

(declare-fun e!48505 () Bool)

(assert (=> b!74234 (= e!48505 (= (apply!75 lt!33328 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74234 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (_values!2195 newMap!16))))))

(assert (=> b!74234 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74235 () Bool)

(assert (=> b!74235 (= e!48509 (= (apply!75 lt!33328 #b1000000000000000000000000000000000000000000000000000000000000000) lt!32380))))

(declare-fun bm!6551 () Bool)

(assert (=> bm!6551 (= call!6554 (contains!719 lt!33328 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74236 () Bool)

(declare-fun e!48511 () Bool)

(assert (=> b!74236 (= e!48511 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74229 () Bool)

(declare-fun e!48503 () Unit!2066)

(declare-fun lt!33335 () Unit!2066)

(assert (=> b!74229 (= e!48503 lt!33335)))

(declare-fun lt!33347 () ListLongMap!1403)

(assert (=> b!74229 (= lt!33347 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32546 (zeroValue!2114 newMap!16) lt!32380 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33337 () (_ BitVec 64))

(assert (=> b!74229 (= lt!33337 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33340 () (_ BitVec 64))

(assert (=> b!74229 (= lt!33340 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33346 () Unit!2066)

(assert (=> b!74229 (= lt!33346 (addStillContains!51 lt!33347 lt!33337 (zeroValue!2114 newMap!16) lt!33340))))

(assert (=> b!74229 (contains!719 (+!93 lt!33347 (tuple2!2121 lt!33337 (zeroValue!2114 newMap!16))) lt!33340)))

(declare-fun lt!33341 () Unit!2066)

(assert (=> b!74229 (= lt!33341 lt!33346)))

(declare-fun lt!33334 () ListLongMap!1403)

(assert (=> b!74229 (= lt!33334 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32546 (zeroValue!2114 newMap!16) lt!32380 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33344 () (_ BitVec 64))

(assert (=> b!74229 (= lt!33344 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33343 () (_ BitVec 64))

(assert (=> b!74229 (= lt!33343 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33336 () Unit!2066)

(assert (=> b!74229 (= lt!33336 (addApplyDifferent!51 lt!33334 lt!33344 lt!32380 lt!33343))))

(assert (=> b!74229 (= (apply!75 (+!93 lt!33334 (tuple2!2121 lt!33344 lt!32380)) lt!33343) (apply!75 lt!33334 lt!33343))))

(declare-fun lt!33348 () Unit!2066)

(assert (=> b!74229 (= lt!33348 lt!33336)))

(declare-fun lt!33345 () ListLongMap!1403)

(assert (=> b!74229 (= lt!33345 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32546 (zeroValue!2114 newMap!16) lt!32380 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33349 () (_ BitVec 64))

(assert (=> b!74229 (= lt!33349 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33332 () (_ BitVec 64))

(assert (=> b!74229 (= lt!33332 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33330 () Unit!2066)

(assert (=> b!74229 (= lt!33330 (addApplyDifferent!51 lt!33345 lt!33349 (zeroValue!2114 newMap!16) lt!33332))))

(assert (=> b!74229 (= (apply!75 (+!93 lt!33345 (tuple2!2121 lt!33349 (zeroValue!2114 newMap!16))) lt!33332) (apply!75 lt!33345 lt!33332))))

(declare-fun lt!33338 () Unit!2066)

(assert (=> b!74229 (= lt!33338 lt!33330)))

(declare-fun lt!33331 () ListLongMap!1403)

(assert (=> b!74229 (= lt!33331 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32546 (zeroValue!2114 newMap!16) lt!32380 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33333 () (_ BitVec 64))

(assert (=> b!74229 (= lt!33333 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33342 () (_ BitVec 64))

(assert (=> b!74229 (= lt!33342 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74229 (= lt!33335 (addApplyDifferent!51 lt!33331 lt!33333 lt!32380 lt!33342))))

(assert (=> b!74229 (= (apply!75 (+!93 lt!33331 (tuple2!2121 lt!33333 lt!32380)) lt!33342) (apply!75 lt!33331 lt!33342))))

(declare-fun d!17431 () Bool)

(assert (=> d!17431 e!48502))

(declare-fun res!39258 () Bool)

(assert (=> d!17431 (=> (not res!39258) (not e!48502))))

(assert (=> d!17431 (= res!39258 (or (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))))

(declare-fun lt!33339 () ListLongMap!1403)

(assert (=> d!17431 (= lt!33328 lt!33339)))

(declare-fun lt!33329 () Unit!2066)

(assert (=> d!17431 (= lt!33329 e!48503)))

(declare-fun c!11154 () Bool)

(assert (=> d!17431 (= c!11154 e!48511)))

(declare-fun res!39261 () Bool)

(assert (=> d!17431 (=> (not res!39261) (not e!48511))))

(assert (=> d!17431 (= res!39261 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17431 (= lt!33339 e!48512)))

(assert (=> d!17431 (= c!11159 (and (not (= (bvand lt!32546 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!32546 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17431 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17431 (= (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32546 (zeroValue!2114 newMap!16) lt!32380 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33328)))

(declare-fun b!74237 () Bool)

(assert (=> b!74237 (= e!48512 (+!93 call!6550 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)))))

(declare-fun b!74238 () Bool)

(declare-fun c!11157 () Bool)

(assert (=> b!74238 (= c!11157 (and (not (= (bvand lt!32546 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!32546 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74238 (= e!48507 e!48513)))

(declare-fun b!74239 () Bool)

(assert (=> b!74239 (= e!48513 call!6551)))

(declare-fun b!74240 () Bool)

(assert (=> b!74240 (= e!48510 (not call!6552))))

(declare-fun b!74241 () Bool)

(declare-fun e!48506 () Bool)

(assert (=> b!74241 (= e!48506 e!48505)))

(declare-fun res!39263 () Bool)

(assert (=> b!74241 (=> (not res!39263) (not e!48505))))

(assert (=> b!74241 (= res!39263 (contains!719 lt!33328 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74241 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74242 () Bool)

(assert (=> b!74242 (= e!48504 (= (apply!75 lt!33328 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!74243 () Bool)

(declare-fun Unit!2126 () Unit!2066)

(assert (=> b!74243 (= e!48503 Unit!2126)))

(declare-fun bm!6552 () Bool)

(assert (=> bm!6552 (= call!6551 call!6550)))

(declare-fun b!74244 () Bool)

(declare-fun res!39257 () Bool)

(assert (=> b!74244 (=> (not res!39257) (not e!48502))))

(assert (=> b!74244 (= res!39257 e!48506)))

(declare-fun res!39265 () Bool)

(assert (=> b!74244 (=> res!39265 e!48506)))

(assert (=> b!74244 (= res!39265 (not e!48514))))

(declare-fun res!39264 () Bool)

(assert (=> b!74244 (=> (not res!39264) (not e!48514))))

(assert (=> b!74244 (= res!39264 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun bm!6553 () Bool)

(assert (=> bm!6553 (= call!6555 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32546 (zeroValue!2114 newMap!16) lt!32380 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (= (and d!17431 c!11159) b!74237))

(assert (= (and d!17431 (not c!11159)) b!74231))

(assert (= (and b!74231 c!11158) b!74225))

(assert (= (and b!74231 (not c!11158)) b!74238))

(assert (= (and b!74238 c!11157) b!74239))

(assert (= (and b!74238 (not c!11157)) b!74228))

(assert (= (or b!74239 b!74228) bm!6550))

(assert (= (or b!74225 bm!6550) bm!6547))

(assert (= (or b!74225 b!74239) bm!6552))

(assert (= (or b!74237 bm!6547) bm!6553))

(assert (= (or b!74237 bm!6552) bm!6549))

(assert (= (and d!17431 res!39261) b!74236))

(assert (= (and d!17431 c!11154) b!74229))

(assert (= (and d!17431 (not c!11154)) b!74243))

(assert (= (and d!17431 res!39258) b!74244))

(assert (= (and b!74244 res!39264) b!74232))

(assert (= (and b!74244 (not res!39265)) b!74241))

(assert (= (and b!74241 res!39263) b!74234))

(assert (= (and b!74244 res!39257) b!74233))

(assert (= (and b!74233 c!11156) b!74230))

(assert (= (and b!74233 (not c!11156)) b!74227))

(assert (= (and b!74230 res!39262) b!74242))

(assert (= (or b!74230 b!74227) bm!6551))

(assert (= (and b!74233 res!39260) b!74226))

(assert (= (and b!74226 c!11155) b!74224))

(assert (= (and b!74226 (not c!11155)) b!74240))

(assert (= (and b!74224 res!39259) b!74235))

(assert (= (or b!74224 b!74240) bm!6548))

(declare-fun b_lambda!3319 () Bool)

(assert (=> (not b_lambda!3319) (not b!74234)))

(assert (=> b!74234 t!5045))

(declare-fun b_and!4545 () Bool)

(assert (= b_and!4541 (and (=> t!5045 result!2689) b_and!4545)))

(assert (=> b!74234 t!5047))

(declare-fun b_and!4547 () Bool)

(assert (= b_and!4543 (and (=> t!5047 result!2691) b_and!4547)))

(declare-fun m!73075 () Bool)

(assert (=> bm!6548 m!73075))

(declare-fun m!73077 () Bool)

(assert (=> b!74229 m!73077))

(declare-fun m!73079 () Bool)

(assert (=> b!74229 m!73079))

(declare-fun m!73081 () Bool)

(assert (=> b!74229 m!73081))

(declare-fun m!73083 () Bool)

(assert (=> b!74229 m!73083))

(declare-fun m!73085 () Bool)

(assert (=> b!74229 m!73085))

(declare-fun m!73087 () Bool)

(assert (=> b!74229 m!73087))

(declare-fun m!73089 () Bool)

(assert (=> b!74229 m!73089))

(declare-fun m!73091 () Bool)

(assert (=> b!74229 m!73091))

(assert (=> b!74229 m!73085))

(declare-fun m!73093 () Bool)

(assert (=> b!74229 m!73093))

(declare-fun m!73095 () Bool)

(assert (=> b!74229 m!73095))

(declare-fun m!73097 () Bool)

(assert (=> b!74229 m!73097))

(declare-fun m!73099 () Bool)

(assert (=> b!74229 m!73099))

(assert (=> b!74229 m!73091))

(declare-fun m!73101 () Bool)

(assert (=> b!74229 m!73101))

(assert (=> b!74229 m!73077))

(assert (=> b!74229 m!71361))

(declare-fun m!73103 () Bool)

(assert (=> b!74229 m!73103))

(declare-fun m!73105 () Bool)

(assert (=> b!74229 m!73105))

(assert (=> b!74229 m!73081))

(declare-fun m!73107 () Bool)

(assert (=> b!74229 m!73107))

(declare-fun m!73109 () Bool)

(assert (=> b!74242 m!73109))

(declare-fun m!73111 () Bool)

(assert (=> b!74235 m!73111))

(assert (=> b!74232 m!71361))

(assert (=> b!74232 m!71361))

(assert (=> b!74232 m!71373))

(declare-fun m!73113 () Bool)

(assert (=> bm!6549 m!73113))

(assert (=> b!74236 m!71361))

(assert (=> b!74236 m!71361))

(assert (=> b!74236 m!71373))

(assert (=> d!17431 m!71219))

(declare-fun m!73115 () Bool)

(assert (=> b!74237 m!73115))

(declare-fun m!73117 () Bool)

(assert (=> bm!6551 m!73117))

(assert (=> bm!6553 m!73099))

(assert (=> b!74241 m!71361))

(assert (=> b!74241 m!71361))

(declare-fun m!73119 () Bool)

(assert (=> b!74241 m!73119))

(assert (=> b!74234 m!71361))

(assert (=> b!74234 m!71383))

(assert (=> b!74234 m!71361))

(declare-fun m!73121 () Bool)

(assert (=> b!74234 m!73121))

(assert (=> b!74234 m!71383))

(assert (=> b!74234 m!71387))

(assert (=> b!74234 m!71389))

(assert (=> b!74234 m!71387))

(assert (=> d!16827 d!17431))

(assert (=> d!16827 d!16829))

(declare-fun d!17433 () Bool)

(assert (=> d!17433 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) lt!32546 (zeroValue!2114 newMap!16) lt!32380 #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (=> d!17433 true))

(declare-fun _$8!64 () Unit!2066)

(assert (=> d!17433 (= (choose!421 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) lt!32546 (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) lt!32380 (defaultEntry!2212 newMap!16)) _$8!64)))

(declare-fun bs!3193 () Bool)

(assert (= bs!3193 d!17433))

(assert (=> bs!3193 m!70991))

(assert (=> bs!3193 m!70991))

(assert (=> bs!3193 m!71331))

(assert (=> bs!3193 m!71329))

(assert (=> d!16827 d!17433))

(declare-fun d!17435 () Bool)

(declare-fun e!48515 () Bool)

(assert (=> d!17435 e!48515))

(declare-fun res!39267 () Bool)

(assert (=> d!17435 (=> (not res!39267) (not e!48515))))

(declare-fun lt!33352 () ListLongMap!1403)

(assert (=> d!17435 (= res!39267 (contains!719 lt!33352 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380))))))

(declare-fun lt!33353 () List!1483)

(assert (=> d!17435 (= lt!33352 (ListLongMap!1404 lt!33353))))

(declare-fun lt!33351 () Unit!2066)

(declare-fun lt!33350 () Unit!2066)

(assert (=> d!17435 (= lt!33351 lt!33350)))

(assert (=> d!17435 (= (getValueByKey!131 lt!33353 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380))))))

(assert (=> d!17435 (= lt!33350 (lemmaContainsTupThenGetReturnValue!51 lt!33353 (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380))))))

(assert (=> d!17435 (= lt!33353 (insertStrictlySorted!54 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380))))))

(assert (=> d!17435 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) lt!33352)))

(declare-fun b!74245 () Bool)

(declare-fun res!39266 () Bool)

(assert (=> b!74245 (=> (not res!39266) (not e!48515))))

(assert (=> b!74245 (= res!39266 (= (getValueByKey!131 (toList!717 lt!33352) (_1!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380))) (Some!136 (_2!1071 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)))))))

(declare-fun b!74246 () Bool)

(assert (=> b!74246 (= e!48515 (contains!722 (toList!717 lt!33352) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)))))

(assert (= (and d!17435 res!39267) b!74245))

(assert (= (and b!74245 res!39266) b!74246))

(declare-fun m!73123 () Bool)

(assert (=> d!17435 m!73123))

(declare-fun m!73125 () Bool)

(assert (=> d!17435 m!73125))

(declare-fun m!73127 () Bool)

(assert (=> d!17435 m!73127))

(declare-fun m!73129 () Bool)

(assert (=> d!17435 m!73129))

(declare-fun m!73131 () Bool)

(assert (=> b!74245 m!73131))

(declare-fun m!73133 () Bool)

(assert (=> b!74246 m!73133))

(assert (=> d!16827 d!17435))

(assert (=> d!16827 d!17001))

(declare-fun d!17437 () Bool)

(declare-fun e!48517 () Bool)

(assert (=> d!17437 e!48517))

(declare-fun res!39268 () Bool)

(assert (=> d!17437 (=> res!39268 e!48517)))

(declare-fun lt!33357 () Bool)

(assert (=> d!17437 (= res!39268 (not lt!33357))))

(declare-fun lt!33355 () Bool)

(assert (=> d!17437 (= lt!33357 lt!33355)))

(declare-fun lt!33354 () Unit!2066)

(declare-fun e!48516 () Unit!2066)

(assert (=> d!17437 (= lt!33354 e!48516)))

(declare-fun c!11160 () Bool)

(assert (=> d!17437 (= c!11160 lt!33355)))

(assert (=> d!17437 (= lt!33355 (containsKey!135 (toList!717 lt!32621) lt!32608))))

(assert (=> d!17437 (= (contains!719 lt!32621 lt!32608) lt!33357)))

(declare-fun b!74247 () Bool)

(declare-fun lt!33356 () Unit!2066)

(assert (=> b!74247 (= e!48516 lt!33356)))

(assert (=> b!74247 (= lt!33356 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32621) lt!32608))))

(assert (=> b!74247 (isDefined!85 (getValueByKey!131 (toList!717 lt!32621) lt!32608))))

(declare-fun b!74248 () Bool)

(declare-fun Unit!2127 () Unit!2066)

(assert (=> b!74248 (= e!48516 Unit!2127)))

(declare-fun b!74249 () Bool)

(assert (=> b!74249 (= e!48517 (isDefined!85 (getValueByKey!131 (toList!717 lt!32621) lt!32608)))))

(assert (= (and d!17437 c!11160) b!74247))

(assert (= (and d!17437 (not c!11160)) b!74248))

(assert (= (and d!17437 (not res!39268)) b!74249))

(declare-fun m!73135 () Bool)

(assert (=> d!17437 m!73135))

(declare-fun m!73137 () Bool)

(assert (=> b!74247 m!73137))

(assert (=> b!74247 m!71891))

(assert (=> b!74247 m!71891))

(declare-fun m!73139 () Bool)

(assert (=> b!74247 m!73139))

(assert (=> b!74249 m!71891))

(assert (=> b!74249 m!71891))

(assert (=> b!74249 m!73139))

(assert (=> d!16955 d!17437))

(assert (=> d!16955 d!16959))

(assert (=> d!16955 d!16969))

(assert (=> d!16955 d!16971))

(declare-fun d!17439 () Bool)

(assert (=> d!17439 (= (apply!75 (+!93 lt!32621 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!32608) (apply!75 lt!32621 lt!32608))))

(assert (=> d!17439 true))

(declare-fun _$34!812 () Unit!2066)

(assert (=> d!17439 (= (choose!428 lt!32621 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))) lt!32608) _$34!812)))

(declare-fun bs!3194 () Bool)

(assert (= bs!3194 d!17439))

(assert (=> bs!3194 m!71041))

(assert (=> bs!3194 m!71041))

(assert (=> bs!3194 m!71043))

(assert (=> bs!3194 m!71053))

(assert (=> d!16955 d!17439))

(declare-fun d!17441 () Bool)

(declare-fun lt!33358 () Bool)

(assert (=> d!17441 (= lt!33358 (select (content!77 lt!32705) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun e!48519 () Bool)

(assert (=> d!17441 (= lt!33358 e!48519)))

(declare-fun res!39269 () Bool)

(assert (=> d!17441 (=> (not res!39269) (not e!48519))))

(assert (=> d!17441 (= res!39269 ((_ is Cons!1479) lt!32705))))

(assert (=> d!17441 (= (contains!722 lt!32705 (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))) lt!33358)))

(declare-fun b!74250 () Bool)

(declare-fun e!48518 () Bool)

(assert (=> b!74250 (= e!48519 e!48518)))

(declare-fun res!39270 () Bool)

(assert (=> b!74250 (=> res!39270 e!48518)))

(assert (=> b!74250 (= res!39270 (= (h!2066 lt!32705) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun b!74251 () Bool)

(assert (=> b!74251 (= e!48518 (contains!722 (t!5031 lt!32705) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(assert (= (and d!17441 res!39269) b!74250))

(assert (= (and b!74250 (not res!39270)) b!74251))

(declare-fun m!73141 () Bool)

(assert (=> d!17441 m!73141))

(declare-fun m!73143 () Bool)

(assert (=> d!17441 m!73143))

(declare-fun m!73145 () Bool)

(assert (=> b!74251 m!73145))

(assert (=> b!73189 d!17441))

(declare-fun d!17443 () Bool)

(declare-fun res!39271 () Bool)

(declare-fun e!48520 () Bool)

(assert (=> d!17443 (=> res!39271 e!48520)))

(assert (=> d!17443 (= res!39271 (and ((_ is Cons!1479) (toList!717 e!47748)) (= (_1!1071 (h!2066 (toList!717 e!47748))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (=> d!17443 (= (containsKey!135 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) e!48520)))

(declare-fun b!74252 () Bool)

(declare-fun e!48521 () Bool)

(assert (=> b!74252 (= e!48520 e!48521)))

(declare-fun res!39272 () Bool)

(assert (=> b!74252 (=> (not res!39272) (not e!48521))))

(assert (=> b!74252 (= res!39272 (and (or (not ((_ is Cons!1479) (toList!717 e!47748))) (bvsle (_1!1071 (h!2066 (toList!717 e!47748))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))) ((_ is Cons!1479) (toList!717 e!47748)) (bvslt (_1!1071 (h!2066 (toList!717 e!47748))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(declare-fun b!74253 () Bool)

(assert (=> b!74253 (= e!48521 (containsKey!135 (t!5031 (toList!717 e!47748)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (= (and d!17443 (not res!39271)) b!74252))

(assert (= (and b!74252 res!39272) b!74253))

(assert (=> b!74253 m!70791))

(declare-fun m!73147 () Bool)

(assert (=> b!74253 m!73147))

(assert (=> d!16841 d!17443))

(assert (=> b!73144 d!17305))

(assert (=> b!73144 d!17307))

(declare-fun lt!33359 () Bool)

(declare-fun d!17445 () Bool)

(assert (=> d!17445 (= lt!33359 (select (content!77 (toList!717 lt!32716)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(declare-fun e!48523 () Bool)

(assert (=> d!17445 (= lt!33359 e!48523)))

(declare-fun res!39273 () Bool)

(assert (=> d!17445 (=> (not res!39273) (not e!48523))))

(assert (=> d!17445 (= res!39273 ((_ is Cons!1479) (toList!717 lt!32716)))))

(assert (=> d!17445 (= (contains!722 (toList!717 lt!32716) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) lt!33359)))

(declare-fun b!74254 () Bool)

(declare-fun e!48522 () Bool)

(assert (=> b!74254 (= e!48523 e!48522)))

(declare-fun res!39274 () Bool)

(assert (=> b!74254 (=> res!39274 e!48522)))

(assert (=> b!74254 (= res!39274 (= (h!2066 (toList!717 lt!32716)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(declare-fun b!74255 () Bool)

(assert (=> b!74255 (= e!48522 (contains!722 (t!5031 (toList!717 lt!32716)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(assert (= (and d!17445 res!39273) b!74254))

(assert (= (and b!74254 (not res!39274)) b!74255))

(declare-fun m!73149 () Bool)

(assert (=> d!17445 m!73149))

(declare-fun m!73151 () Bool)

(assert (=> d!17445 m!73151))

(declare-fun m!73153 () Bool)

(assert (=> b!74255 m!73153))

(assert (=> b!73202 d!17445))

(declare-fun d!17447 () Bool)

(declare-fun lt!33360 () Bool)

(assert (=> d!17447 (= lt!33360 (select (content!77 lt!32767) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun e!48525 () Bool)

(assert (=> d!17447 (= lt!33360 e!48525)))

(declare-fun res!39275 () Bool)

(assert (=> d!17447 (=> (not res!39275) (not e!48525))))

(assert (=> d!17447 (= res!39275 ((_ is Cons!1479) lt!32767))))

(assert (=> d!17447 (= (contains!722 lt!32767 (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))) lt!33360)))

(declare-fun b!74256 () Bool)

(declare-fun e!48524 () Bool)

(assert (=> b!74256 (= e!48525 e!48524)))

(declare-fun res!39276 () Bool)

(assert (=> b!74256 (=> res!39276 e!48524)))

(assert (=> b!74256 (= res!39276 (= (h!2066 lt!32767) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun b!74257 () Bool)

(assert (=> b!74257 (= e!48524 (contains!722 (t!5031 lt!32767) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(assert (= (and d!17447 res!39275) b!74256))

(assert (= (and b!74256 (not res!39276)) b!74257))

(declare-fun m!73155 () Bool)

(assert (=> d!17447 m!73155))

(declare-fun m!73157 () Bool)

(assert (=> d!17447 m!73157))

(declare-fun m!73159 () Bool)

(assert (=> b!74257 m!73159))

(assert (=> b!73272 d!17447))

(assert (=> b!73408 d!17319))

(declare-fun d!17449 () Bool)

(declare-fun e!48526 () Bool)

(assert (=> d!17449 e!48526))

(declare-fun res!39278 () Bool)

(assert (=> d!17449 (=> (not res!39278) (not e!48526))))

(declare-fun lt!33363 () ListLongMap!1403)

(assert (=> d!17449 (= res!39278 (contains!719 lt!33363 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun lt!33364 () List!1483)

(assert (=> d!17449 (= lt!33363 (ListLongMap!1404 lt!33364))))

(declare-fun lt!33362 () Unit!2066)

(declare-fun lt!33361 () Unit!2066)

(assert (=> d!17449 (= lt!33362 lt!33361)))

(assert (=> d!17449 (= (getValueByKey!131 lt!33364 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!17449 (= lt!33361 (lemmaContainsTupThenGetReturnValue!51 lt!33364 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!17449 (= lt!33364 (insertStrictlySorted!54 (toList!717 (map!1150 newMap!16)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!17449 (= (+!93 (map!1150 newMap!16) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) lt!33363)))

(declare-fun b!74258 () Bool)

(declare-fun res!39277 () Bool)

(assert (=> b!74258 (=> (not res!39277) (not e!48526))))

(assert (=> b!74258 (= res!39277 (= (getValueByKey!131 (toList!717 lt!33363) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!74259 () Bool)

(assert (=> b!74259 (= e!48526 (contains!722 (toList!717 lt!33363) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(assert (= (and d!17449 res!39278) b!74258))

(assert (= (and b!74258 res!39277) b!74259))

(declare-fun m!73161 () Bool)

(assert (=> d!17449 m!73161))

(declare-fun m!73163 () Bool)

(assert (=> d!17449 m!73163))

(declare-fun m!73165 () Bool)

(assert (=> d!17449 m!73165))

(declare-fun m!73167 () Bool)

(assert (=> d!17449 m!73167))

(declare-fun m!73169 () Bool)

(assert (=> b!74258 m!73169))

(declare-fun m!73171 () Bool)

(assert (=> b!74259 m!73171))

(assert (=> b!73408 d!17449))

(assert (=> b!73408 d!16765))

(assert (=> b!73487 d!17089))

(assert (=> bm!6474 d!17047))

(declare-fun d!17451 () Bool)

(declare-fun lt!33365 () Bool)

(assert (=> d!17451 (= lt!33365 (select (content!77 (toList!717 lt!32806)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!48528 () Bool)

(assert (=> d!17451 (= lt!33365 e!48528)))

(declare-fun res!39279 () Bool)

(assert (=> d!17451 (=> (not res!39279) (not e!48528))))

(assert (=> d!17451 (= res!39279 ((_ is Cons!1479) (toList!717 lt!32806)))))

(assert (=> d!17451 (= (contains!722 (toList!717 lt!32806) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!33365)))

(declare-fun b!74260 () Bool)

(declare-fun e!48527 () Bool)

(assert (=> b!74260 (= e!48528 e!48527)))

(declare-fun res!39280 () Bool)

(assert (=> b!74260 (=> res!39280 e!48527)))

(assert (=> b!74260 (= res!39280 (= (h!2066 (toList!717 lt!32806)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!74261 () Bool)

(assert (=> b!74261 (= e!48527 (contains!722 (t!5031 (toList!717 lt!32806)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1142 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!17451 res!39279) b!74260))

(assert (= (and b!74260 (not res!39280)) b!74261))

(declare-fun m!73173 () Bool)

(assert (=> d!17451 m!73173))

(declare-fun m!73175 () Bool)

(assert (=> d!17451 m!73175))

(declare-fun m!73177 () Bool)

(assert (=> b!74261 m!73177))

(assert (=> b!73353 d!17451))

(declare-fun d!17453 () Bool)

(declare-fun lt!33366 () Bool)

(assert (=> d!17453 (= lt!33366 (select (content!77 (t!5031 (toList!717 lt!32639))) lt!32376))))

(declare-fun e!48530 () Bool)

(assert (=> d!17453 (= lt!33366 e!48530)))

(declare-fun res!39281 () Bool)

(assert (=> d!17453 (=> (not res!39281) (not e!48530))))

(assert (=> d!17453 (= res!39281 ((_ is Cons!1479) (t!5031 (toList!717 lt!32639))))))

(assert (=> d!17453 (= (contains!722 (t!5031 (toList!717 lt!32639)) lt!32376) lt!33366)))

(declare-fun b!74262 () Bool)

(declare-fun e!48529 () Bool)

(assert (=> b!74262 (= e!48530 e!48529)))

(declare-fun res!39282 () Bool)

(assert (=> b!74262 (=> res!39282 e!48529)))

(assert (=> b!74262 (= res!39282 (= (h!2066 (t!5031 (toList!717 lt!32639))) lt!32376))))

(declare-fun b!74263 () Bool)

(assert (=> b!74263 (= e!48529 (contains!722 (t!5031 (t!5031 (toList!717 lt!32639))) lt!32376))))

(assert (= (and d!17453 res!39281) b!74262))

(assert (= (and b!74262 (not res!39282)) b!74263))

(declare-fun m!73179 () Bool)

(assert (=> d!17453 m!73179))

(declare-fun m!73181 () Bool)

(assert (=> d!17453 m!73181))

(declare-fun m!73183 () Bool)

(assert (=> b!74263 m!73183))

(assert (=> b!73572 d!17453))

(declare-fun d!17455 () Bool)

(assert (=> d!17455 (arrayContainsKey!0 (_keys!3863 newMap!16) lt!32984 #b00000000000000000000000000000000)))

(declare-fun lt!33369 () Unit!2066)

(declare-fun choose!13 (array!3871 (_ BitVec 64) (_ BitVec 32)) Unit!2066)

(assert (=> d!17455 (= lt!33369 (choose!13 (_keys!3863 newMap!16) lt!32984 #b00000000000000000000000000000000))))

(assert (=> d!17455 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!17455 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3863 newMap!16) lt!32984 #b00000000000000000000000000000000) lt!33369)))

(declare-fun bs!3195 () Bool)

(assert (= bs!3195 d!17455))

(assert (=> bs!3195 m!71831))

(declare-fun m!73185 () Bool)

(assert (=> bs!3195 m!73185))

(assert (=> b!73511 d!17455))

(declare-fun d!17457 () Bool)

(declare-fun res!39283 () Bool)

(declare-fun e!48531 () Bool)

(assert (=> d!17457 (=> res!39283 e!48531)))

(assert (=> d!17457 (= res!39283 (= (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) lt!32984))))

(assert (=> d!17457 (= (arrayContainsKey!0 (_keys!3863 newMap!16) lt!32984 #b00000000000000000000000000000000) e!48531)))

(declare-fun b!74264 () Bool)

(declare-fun e!48532 () Bool)

(assert (=> b!74264 (= e!48531 e!48532)))

(declare-fun res!39284 () Bool)

(assert (=> b!74264 (=> (not res!39284) (not e!48532))))

(assert (=> b!74264 (= res!39284 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74265 () Bool)

(assert (=> b!74265 (= e!48532 (arrayContainsKey!0 (_keys!3863 newMap!16) lt!32984 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!17457 (not res!39283)) b!74264))

(assert (= (and b!74264 res!39284) b!74265))

(assert (=> d!17457 m!71361))

(declare-fun m!73187 () Bool)

(assert (=> b!74265 m!73187))

(assert (=> b!73511 d!17457))

(declare-fun b!74266 () Bool)

(declare-fun e!48535 () SeekEntryResult!239)

(declare-fun e!48534 () SeekEntryResult!239)

(assert (=> b!74266 (= e!48535 e!48534)))

(declare-fun lt!33370 () (_ BitVec 64))

(declare-fun lt!33371 () SeekEntryResult!239)

(assert (=> b!74266 (= lt!33370 (select (arr!1846 (_keys!3863 newMap!16)) (index!3089 lt!33371)))))

(declare-fun c!11162 () Bool)

(assert (=> b!74266 (= c!11162 (= lt!33370 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74267 () Bool)

(declare-fun e!48533 () SeekEntryResult!239)

(assert (=> b!74267 (= e!48533 (seekKeyOrZeroReturnVacant!0 (x!11154 lt!33371) (index!3089 lt!33371) (index!3089 lt!33371) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(declare-fun d!17459 () Bool)

(declare-fun lt!33372 () SeekEntryResult!239)

(assert (=> d!17459 (and (or ((_ is Undefined!239) lt!33372) (not ((_ is Found!239) lt!33372)) (and (bvsge (index!3088 lt!33372) #b00000000000000000000000000000000) (bvslt (index!3088 lt!33372) (size!2085 (_keys!3863 newMap!16))))) (or ((_ is Undefined!239) lt!33372) ((_ is Found!239) lt!33372) (not ((_ is MissingZero!239) lt!33372)) (and (bvsge (index!3087 lt!33372) #b00000000000000000000000000000000) (bvslt (index!3087 lt!33372) (size!2085 (_keys!3863 newMap!16))))) (or ((_ is Undefined!239) lt!33372) ((_ is Found!239) lt!33372) ((_ is MissingZero!239) lt!33372) (not ((_ is MissingVacant!239) lt!33372)) (and (bvsge (index!3090 lt!33372) #b00000000000000000000000000000000) (bvslt (index!3090 lt!33372) (size!2085 (_keys!3863 newMap!16))))) (or ((_ is Undefined!239) lt!33372) (ite ((_ is Found!239) lt!33372) (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!33372)) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!239) lt!33372) (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3087 lt!33372)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!239) lt!33372) (= (select (arr!1846 (_keys!3863 newMap!16)) (index!3090 lt!33372)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!17459 (= lt!33372 e!48535)))

(declare-fun c!11161 () Bool)

(assert (=> d!17459 (= c!11161 (and ((_ is Intermediate!239) lt!33371) (undefined!1051 lt!33371)))))

(assert (=> d!17459 (= lt!33371 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) (mask!6178 newMap!16)) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) (_keys!3863 newMap!16) (mask!6178 newMap!16)))))

(assert (=> d!17459 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17459 (= (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) (_keys!3863 newMap!16) (mask!6178 newMap!16)) lt!33372)))

(declare-fun b!74268 () Bool)

(assert (=> b!74268 (= e!48535 Undefined!239)))

(declare-fun b!74269 () Bool)

(assert (=> b!74269 (= e!48534 (Found!239 (index!3089 lt!33371)))))

(declare-fun b!74270 () Bool)

(declare-fun c!11163 () Bool)

(assert (=> b!74270 (= c!11163 (= lt!33370 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74270 (= e!48534 e!48533)))

(declare-fun b!74271 () Bool)

(assert (=> b!74271 (= e!48533 (MissingZero!239 (index!3089 lt!33371)))))

(assert (= (and d!17459 c!11161) b!74268))

(assert (= (and d!17459 (not c!11161)) b!74266))

(assert (= (and b!74266 c!11162) b!74269))

(assert (= (and b!74266 (not c!11162)) b!74270))

(assert (= (and b!74270 c!11163) b!74271))

(assert (= (and b!74270 (not c!11163)) b!74267))

(declare-fun m!73189 () Bool)

(assert (=> b!74266 m!73189))

(assert (=> b!74267 m!71361))

(declare-fun m!73191 () Bool)

(assert (=> b!74267 m!73191))

(declare-fun m!73193 () Bool)

(assert (=> d!17459 m!73193))

(declare-fun m!73195 () Bool)

(assert (=> d!17459 m!73195))

(assert (=> d!17459 m!71219))

(declare-fun m!73197 () Bool)

(assert (=> d!17459 m!73197))

(declare-fun m!73199 () Bool)

(assert (=> d!17459 m!73199))

(assert (=> d!17459 m!71361))

(declare-fun m!73201 () Bool)

(assert (=> d!17459 m!73201))

(assert (=> d!17459 m!71361))

(assert (=> d!17459 m!73199))

(assert (=> b!73511 d!17459))

(declare-fun b!74272 () Bool)

(declare-fun e!48536 () (_ BitVec 32))

(assert (=> b!74272 (= e!48536 #b00000000000000000000000000000000)))

(declare-fun b!74273 () Bool)

(declare-fun e!48537 () (_ BitVec 32))

(declare-fun call!6557 () (_ BitVec 32))

(assert (=> b!74273 (= e!48537 call!6557)))

(declare-fun bm!6554 () Bool)

(assert (=> bm!6554 (= call!6557 (arrayCountValidKeys!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!74274 () Bool)

(assert (=> b!74274 (= e!48536 e!48537)))

(declare-fun c!11164 () Bool)

(assert (=> b!74274 (= c!11164 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!74275 () Bool)

(assert (=> b!74275 (= e!48537 (bvadd #b00000000000000000000000000000001 call!6557))))

(declare-fun d!17461 () Bool)

(declare-fun lt!33373 () (_ BitVec 32))

(assert (=> d!17461 (and (bvsge lt!33373 #b00000000000000000000000000000000) (bvsle lt!33373 (bvsub (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!17461 (= lt!33373 e!48536)))

(declare-fun c!11165 () Bool)

(assert (=> d!17461 (= c!11165 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!17461 (and (bvsle #b00000000000000000000000000000000 (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!17461 (= (arrayCountValidKeys!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000 (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))) lt!33373)))

(assert (= (and d!17461 c!11165) b!74272))

(assert (= (and d!17461 (not c!11165)) b!74274))

(assert (= (and b!74274 c!11164) b!74275))

(assert (= (and b!74274 (not c!11164)) b!74273))

(assert (= (or b!74275 b!74273) bm!6554))

(declare-fun m!73203 () Bool)

(assert (=> bm!6554 m!73203))

(declare-fun m!73205 () Bool)

(assert (=> b!74274 m!73205))

(assert (=> b!74274 m!73205))

(declare-fun m!73207 () Bool)

(assert (=> b!74274 m!73207))

(assert (=> b!73194 d!17461))

(declare-fun d!17463 () Bool)

(declare-fun res!39285 () Bool)

(declare-fun e!48538 () Bool)

(assert (=> d!17463 (=> res!39285 e!48538)))

(assert (=> d!17463 (= res!39285 (and ((_ is Cons!1479) (toList!717 lt!32663)) (= (_1!1071 (h!2066 (toList!717 lt!32663))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17463 (= (containsKey!135 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48538)))

(declare-fun b!74276 () Bool)

(declare-fun e!48539 () Bool)

(assert (=> b!74276 (= e!48538 e!48539)))

(declare-fun res!39286 () Bool)

(assert (=> b!74276 (=> (not res!39286) (not e!48539))))

(assert (=> b!74276 (= res!39286 (and (or (not ((_ is Cons!1479) (toList!717 lt!32663))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32663))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1479) (toList!717 lt!32663)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32663))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!74277 () Bool)

(assert (=> b!74277 (= e!48539 (containsKey!135 (t!5031 (toList!717 lt!32663)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17463 (not res!39285)) b!74276))

(assert (= (and b!74276 res!39286) b!74277))

(assert (=> b!74277 m!70941))

(declare-fun m!73209 () Bool)

(assert (=> b!74277 m!73209))

(assert (=> d!16859 d!17463))

(declare-fun b!74278 () Bool)

(declare-fun e!48540 () Option!137)

(assert (=> b!74278 (= e!48540 (Some!136 (_2!1071 (h!2066 (toList!717 lt!33000)))))))

(declare-fun b!74281 () Bool)

(declare-fun e!48541 () Option!137)

(assert (=> b!74281 (= e!48541 None!135)))

(declare-fun b!74280 () Bool)

(assert (=> b!74280 (= e!48541 (getValueByKey!131 (t!5031 (toList!717 lt!33000)) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17465 () Bool)

(declare-fun c!11166 () Bool)

(assert (=> d!17465 (= c!11166 (and ((_ is Cons!1479) (toList!717 lt!33000)) (= (_1!1071 (h!2066 (toList!717 lt!33000))) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17465 (= (getValueByKey!131 (toList!717 lt!33000) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48540)))

(declare-fun b!74279 () Bool)

(assert (=> b!74279 (= e!48540 e!48541)))

(declare-fun c!11167 () Bool)

(assert (=> b!74279 (= c!11167 (and ((_ is Cons!1479) (toList!717 lt!33000)) (not (= (_1!1071 (h!2066 (toList!717 lt!33000))) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17465 c!11166) b!74278))

(assert (= (and d!17465 (not c!11166)) b!74279))

(assert (= (and b!74279 c!11167) b!74280))

(assert (= (and b!74279 (not c!11167)) b!74281))

(declare-fun m!73211 () Bool)

(assert (=> b!74280 m!73211))

(assert (=> b!73540 d!17465))

(declare-fun d!17467 () Bool)

(assert (=> d!17467 (= (inRange!0 (ite c!10923 (index!3088 lt!32891) (ite c!10921 (index!3087 lt!32902) (index!3090 lt!32902))) (mask!6178 newMap!16)) (and (bvsge (ite c!10923 (index!3088 lt!32891) (ite c!10921 (index!3087 lt!32902) (index!3090 lt!32902))) #b00000000000000000000000000000000) (bvslt (ite c!10923 (index!3088 lt!32891) (ite c!10921 (index!3087 lt!32902) (index!3090 lt!32902))) (bvadd (mask!6178 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6464 d!17467))

(declare-fun d!17469 () Bool)

(declare-fun e!48543 () Bool)

(assert (=> d!17469 e!48543))

(declare-fun res!39287 () Bool)

(assert (=> d!17469 (=> res!39287 e!48543)))

(declare-fun lt!33377 () Bool)

(assert (=> d!17469 (= res!39287 (not lt!33377))))

(declare-fun lt!33375 () Bool)

(assert (=> d!17469 (= lt!33377 lt!33375)))

(declare-fun lt!33374 () Unit!2066)

(declare-fun e!48542 () Unit!2066)

(assert (=> d!17469 (= lt!33374 e!48542)))

(declare-fun c!11168 () Bool)

(assert (=> d!17469 (= c!11168 lt!33375)))

(assert (=> d!17469 (= lt!33375 (containsKey!135 (toList!717 lt!32678) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!17469 (= (contains!719 lt!32678 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!33377)))

(declare-fun b!74282 () Bool)

(declare-fun lt!33376 () Unit!2066)

(assert (=> b!74282 (= e!48542 lt!33376)))

(assert (=> b!74282 (= lt!33376 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32678) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!74282 (isDefined!85 (getValueByKey!131 (toList!717 lt!32678) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!74283 () Bool)

(declare-fun Unit!2128 () Unit!2066)

(assert (=> b!74283 (= e!48542 Unit!2128)))

(declare-fun b!74284 () Bool)

(assert (=> b!74284 (= e!48543 (isDefined!85 (getValueByKey!131 (toList!717 lt!32678) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!17469 c!11168) b!74282))

(assert (= (and d!17469 (not c!11168)) b!74283))

(assert (= (and d!17469 (not res!39287)) b!74284))

(assert (=> d!17469 m!71169))

(declare-fun m!73213 () Bool)

(assert (=> d!17469 m!73213))

(assert (=> b!74282 m!71169))

(declare-fun m!73215 () Bool)

(assert (=> b!74282 m!73215))

(assert (=> b!74282 m!71169))

(assert (=> b!74282 m!72129))

(assert (=> b!74282 m!72129))

(declare-fun m!73217 () Bool)

(assert (=> b!74282 m!73217))

(assert (=> b!74284 m!71169))

(assert (=> b!74284 m!72129))

(assert (=> b!74284 m!72129))

(assert (=> b!74284 m!73217))

(assert (=> b!73126 d!17469))

(declare-fun d!17471 () Bool)

(assert (=> d!17471 (= (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32618)) (v!2529 (getValueByKey!131 (toList!717 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32618)))))

(assert (=> d!16945 d!17471))

(declare-fun b!74285 () Bool)

(declare-fun e!48544 () Option!137)

(assert (=> b!74285 (= e!48544 (Some!136 (_2!1071 (h!2066 (toList!717 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))))

(declare-fun b!74288 () Bool)

(declare-fun e!48545 () Option!137)

(assert (=> b!74288 (= e!48545 None!135)))

(declare-fun b!74287 () Bool)

(assert (=> b!74287 (= e!48545 (getValueByKey!131 (t!5031 (toList!717 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) lt!32618))))

(declare-fun d!17473 () Bool)

(declare-fun c!11169 () Bool)

(assert (=> d!17473 (= c!11169 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32618)))))

(assert (=> d!17473 (= (getValueByKey!131 (toList!717 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!32618) e!48544)))

(declare-fun b!74286 () Bool)

(assert (=> b!74286 (= e!48544 e!48545)))

(declare-fun c!11170 () Bool)

(assert (=> b!74286 (= c!11170 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) (not (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32607 (tuple2!2121 lt!32609 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))) lt!32618))))))

(assert (= (and d!17473 c!11169) b!74285))

(assert (= (and d!17473 (not c!11169)) b!74286))

(assert (= (and b!74286 c!11170) b!74287))

(assert (= (and b!74286 (not c!11170)) b!74288))

(declare-fun m!73219 () Bool)

(assert (=> b!74287 m!73219))

(assert (=> d!16945 d!17473))

(declare-fun d!17475 () Bool)

(declare-fun res!39288 () Bool)

(declare-fun e!48546 () Bool)

(assert (=> d!17475 (=> res!39288 e!48546)))

(assert (=> d!17475 (= res!39288 (and ((_ is Cons!1479) (toList!717 lt!32604)) (= (_1!1071 (h!2066 (toList!717 lt!32604))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!17475 (= (containsKey!135 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!48546)))

(declare-fun b!74289 () Bool)

(declare-fun e!48547 () Bool)

(assert (=> b!74289 (= e!48546 e!48547)))

(declare-fun res!39289 () Bool)

(assert (=> b!74289 (=> (not res!39289) (not e!48547))))

(assert (=> b!74289 (= res!39289 (and (or (not ((_ is Cons!1479) (toList!717 lt!32604))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32604))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1479) (toList!717 lt!32604)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32604))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!74290 () Bool)

(assert (=> b!74290 (= e!48547 (containsKey!135 (t!5031 (toList!717 lt!32604)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17475 (not res!39288)) b!74289))

(assert (= (and b!74289 res!39289) b!74290))

(assert (=> b!74290 m!70941))

(declare-fun m!73221 () Bool)

(assert (=> b!74290 m!73221))

(assert (=> d!16831 d!17475))

(assert (=> b!73409 d!16931))

(assert (=> b!73430 d!17089))

(declare-fun b!74291 () Bool)

(declare-fun e!48548 () (_ BitVec 32))

(assert (=> b!74291 (= e!48548 #b00000000000000000000000000000000)))

(declare-fun b!74292 () Bool)

(declare-fun e!48549 () (_ BitVec 32))

(declare-fun call!6558 () (_ BitVec 32))

(assert (=> b!74292 (= e!48549 call!6558)))

(declare-fun bm!6555 () Bool)

(assert (=> bm!6555 (= call!6558 (arrayCountValidKeys!0 (_keys!3863 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74293 () Bool)

(assert (=> b!74293 (= e!48548 e!48549)))

(declare-fun c!11171 () Bool)

(assert (=> b!74293 (= c!11171 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!74294 () Bool)

(assert (=> b!74294 (= e!48549 (bvadd #b00000000000000000000000000000001 call!6558))))

(declare-fun d!17477 () Bool)

(declare-fun lt!33378 () (_ BitVec 32))

(assert (=> d!17477 (and (bvsge lt!33378 #b00000000000000000000000000000000) (bvsle lt!33378 (bvsub (size!2085 (_keys!3863 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!17477 (= lt!33378 e!48548)))

(declare-fun c!11172 () Bool)

(assert (=> d!17477 (= c!11172 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17477 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2085 (_keys!3863 newMap!16)) (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17477 (= (arrayCountValidKeys!0 (_keys!3863 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))) lt!33378)))

(assert (= (and d!17477 c!11172) b!74291))

(assert (= (and d!17477 (not c!11172)) b!74293))

(assert (= (and b!74293 c!11171) b!74294))

(assert (= (and b!74293 (not c!11171)) b!74292))

(assert (= (or b!74294 b!74292) bm!6555))

(declare-fun m!73223 () Bool)

(assert (=> bm!6555 m!73223))

(assert (=> b!74293 m!72601))

(assert (=> b!74293 m!72601))

(assert (=> b!74293 m!72603))

(assert (=> bm!6446 d!17477))

(declare-fun lt!33379 () Bool)

(declare-fun d!17479 () Bool)

(assert (=> d!17479 (= lt!33379 (select (content!78 (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!48551 () Bool)

(assert (=> d!17479 (= lt!33379 e!48551)))

(declare-fun res!39290 () Bool)

(assert (=> d!17479 (=> (not res!39290) (not e!48551))))

(assert (=> d!17479 (= res!39290 ((_ is Cons!1480) (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)))))

(assert (=> d!17479 (= (contains!721 (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!33379)))

(declare-fun b!74295 () Bool)

(declare-fun e!48550 () Bool)

(assert (=> b!74295 (= e!48551 e!48550)))

(declare-fun res!39291 () Bool)

(assert (=> b!74295 (=> res!39291 e!48550)))

(assert (=> b!74295 (= res!39291 (= (h!2067 (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!74296 () Bool)

(assert (=> b!74296 (= e!48550 (contains!721 (t!5032 (ite c!10757 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) Nil!1481) Nil!1481)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!17479 res!39290) b!74295))

(assert (= (and b!74295 (not res!39291)) b!74296))

(declare-fun m!73225 () Bool)

(assert (=> d!17479 m!73225))

(assert (=> d!17479 m!71227))

(declare-fun m!73227 () Bool)

(assert (=> d!17479 m!73227))

(assert (=> b!74296 m!71227))

(declare-fun m!73229 () Bool)

(assert (=> b!74296 m!73229))

(assert (=> b!73140 d!17479))

(declare-fun d!17481 () Bool)

(declare-fun res!39292 () Bool)

(declare-fun e!48552 () Bool)

(assert (=> d!17481 (=> res!39292 e!48552)))

(assert (=> d!17481 (= res!39292 (and ((_ is Cons!1479) lt!32644) (= (_1!1071 (h!2066 lt!32644)) (_1!1071 lt!32376))))))

(assert (=> d!17481 (= (containsKey!135 lt!32644 (_1!1071 lt!32376)) e!48552)))

(declare-fun b!74297 () Bool)

(declare-fun e!48553 () Bool)

(assert (=> b!74297 (= e!48552 e!48553)))

(declare-fun res!39293 () Bool)

(assert (=> b!74297 (=> (not res!39293) (not e!48553))))

(assert (=> b!74297 (= res!39293 (and (or (not ((_ is Cons!1479) lt!32644)) (bvsle (_1!1071 (h!2066 lt!32644)) (_1!1071 lt!32376))) ((_ is Cons!1479) lt!32644) (bvslt (_1!1071 (h!2066 lt!32644)) (_1!1071 lt!32376))))))

(declare-fun b!74298 () Bool)

(assert (=> b!74298 (= e!48553 (containsKey!135 (t!5031 lt!32644) (_1!1071 lt!32376)))))

(assert (= (and d!17481 (not res!39292)) b!74297))

(assert (= (and b!74297 res!39293) b!74298))

(declare-fun m!73231 () Bool)

(assert (=> b!74298 m!73231))

(assert (=> b!73265 d!17481))

(assert (=> d!16869 d!16867))

(declare-fun d!17483 () Bool)

(assert (=> d!17483 (= (getValueByKey!131 lt!32673 (_1!1071 lt!32383)) (Some!136 (_2!1071 lt!32383)))))

(assert (=> d!17483 true))

(declare-fun _$22!387 () Unit!2066)

(assert (=> d!17483 (= (choose!420 lt!32673 (_1!1071 lt!32383) (_2!1071 lt!32383)) _$22!387)))

(declare-fun bs!3196 () Bool)

(assert (= bs!3196 d!17483))

(assert (=> bs!3196 m!71151))

(assert (=> d!16869 d!17483))

(declare-fun d!17485 () Bool)

(declare-fun res!39294 () Bool)

(declare-fun e!48554 () Bool)

(assert (=> d!17485 (=> res!39294 e!48554)))

(assert (=> d!17485 (= res!39294 (or ((_ is Nil!1480) lt!32673) ((_ is Nil!1480) (t!5031 lt!32673))))))

(assert (=> d!17485 (= (isStrictlySorted!287 lt!32673) e!48554)))

(declare-fun b!74299 () Bool)

(declare-fun e!48555 () Bool)

(assert (=> b!74299 (= e!48554 e!48555)))

(declare-fun res!39295 () Bool)

(assert (=> b!74299 (=> (not res!39295) (not e!48555))))

(assert (=> b!74299 (= res!39295 (bvslt (_1!1071 (h!2066 lt!32673)) (_1!1071 (h!2066 (t!5031 lt!32673)))))))

(declare-fun b!74300 () Bool)

(assert (=> b!74300 (= e!48555 (isStrictlySorted!287 (t!5031 lt!32673)))))

(assert (= (and d!17485 (not res!39294)) b!74299))

(assert (= (and b!74299 res!39295) b!74300))

(declare-fun m!73233 () Bool)

(assert (=> b!74300 m!73233))

(assert (=> d!16869 d!17485))

(declare-fun d!17487 () Bool)

(assert (=> d!17487 (= (inRange!0 (ite c!10938 (index!3087 lt!32950) (index!3090 lt!32950)) (mask!6178 newMap!16)) (and (bvsge (ite c!10938 (index!3087 lt!32950) (index!3090 lt!32950)) #b00000000000000000000000000000000) (bvslt (ite c!10938 (index!3087 lt!32950) (index!3090 lt!32950)) (bvadd (mask!6178 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!6480 d!17487))

(assert (=> b!73260 d!17327))

(assert (=> b!73260 d!16861))

(declare-fun d!17489 () Bool)

(declare-fun res!39296 () Bool)

(declare-fun e!48556 () Bool)

(assert (=> d!17489 (=> res!39296 e!48556)))

(assert (=> d!17489 (= res!39296 (and ((_ is Cons!1479) (toList!717 lt!32668)) (= (_1!1071 (h!2066 (toList!717 lt!32668))) (_1!1071 lt!32383))))))

(assert (=> d!17489 (= (containsKey!135 (toList!717 lt!32668) (_1!1071 lt!32383)) e!48556)))

(declare-fun b!74301 () Bool)

(declare-fun e!48557 () Bool)

(assert (=> b!74301 (= e!48556 e!48557)))

(declare-fun res!39297 () Bool)

(assert (=> b!74301 (=> (not res!39297) (not e!48557))))

(assert (=> b!74301 (= res!39297 (and (or (not ((_ is Cons!1479) (toList!717 lt!32668))) (bvsle (_1!1071 (h!2066 (toList!717 lt!32668))) (_1!1071 lt!32383))) ((_ is Cons!1479) (toList!717 lt!32668)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32668))) (_1!1071 lt!32383))))))

(declare-fun b!74302 () Bool)

(assert (=> b!74302 (= e!48557 (containsKey!135 (t!5031 (toList!717 lt!32668)) (_1!1071 lt!32383)))))

(assert (= (and d!17489 (not res!39296)) b!74301))

(assert (= (and b!74301 res!39297) b!74302))

(declare-fun m!73235 () Bool)

(assert (=> b!74302 m!73235))

(assert (=> d!16879 d!17489))

(declare-fun d!17491 () Bool)

(declare-fun res!39298 () Bool)

(declare-fun e!48558 () Bool)

(assert (=> d!17491 (=> res!39298 e!48558)))

(assert (=> d!17491 (= res!39298 (or ((_ is Nil!1480) lt!32705) ((_ is Nil!1480) (t!5031 lt!32705))))))

(assert (=> d!17491 (= (isStrictlySorted!287 lt!32705) e!48558)))

(declare-fun b!74303 () Bool)

(declare-fun e!48559 () Bool)

(assert (=> b!74303 (= e!48558 e!48559)))

(declare-fun res!39299 () Bool)

(assert (=> b!74303 (=> (not res!39299) (not e!48559))))

(assert (=> b!74303 (= res!39299 (bvslt (_1!1071 (h!2066 lt!32705)) (_1!1071 (h!2066 (t!5031 lt!32705)))))))

(declare-fun b!74304 () Bool)

(assert (=> b!74304 (= e!48559 (isStrictlySorted!287 (t!5031 lt!32705)))))

(assert (= (and d!17491 (not res!39298)) b!74303))

(assert (= (and b!74303 res!39299) b!74304))

(declare-fun m!73237 () Bool)

(assert (=> b!74304 m!73237))

(assert (=> d!16813 d!17491))

(declare-fun d!17493 () Bool)

(declare-fun res!39300 () Bool)

(declare-fun e!48560 () Bool)

(assert (=> d!17493 (=> res!39300 e!48560)))

(assert (=> d!17493 (= res!39300 (or ((_ is Nil!1480) (toList!717 (+!93 lt!32377 lt!32383))) ((_ is Nil!1480) (t!5031 (toList!717 (+!93 lt!32377 lt!32383))))))))

(assert (=> d!17493 (= (isStrictlySorted!287 (toList!717 (+!93 lt!32377 lt!32383))) e!48560)))

(declare-fun b!74305 () Bool)

(declare-fun e!48561 () Bool)

(assert (=> b!74305 (= e!48560 e!48561)))

(declare-fun res!39301 () Bool)

(assert (=> b!74305 (=> (not res!39301) (not e!48561))))

(assert (=> b!74305 (= res!39301 (bvslt (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 lt!32383)))) (_1!1071 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32383)))))))))

(declare-fun b!74306 () Bool)

(assert (=> b!74306 (= e!48561 (isStrictlySorted!287 (t!5031 (toList!717 (+!93 lt!32377 lt!32383)))))))

(assert (= (and d!17493 (not res!39300)) b!74305))

(assert (= (and b!74305 res!39301) b!74306))

(assert (=> b!74306 m!72735))

(assert (=> d!16813 d!17493))

(declare-fun b!74307 () Bool)

(declare-fun e!48562 () Option!137)

(assert (=> b!74307 (= e!48562 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32720)))))))

(declare-fun b!74310 () Bool)

(declare-fun e!48563 () Option!137)

(assert (=> b!74310 (= e!48563 None!135)))

(declare-fun b!74309 () Bool)

(assert (=> b!74309 (= e!48563 (getValueByKey!131 (t!5031 (toList!717 lt!32720)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17495 () Bool)

(declare-fun c!11173 () Bool)

(assert (=> d!17495 (= c!11173 (and ((_ is Cons!1479) (toList!717 lt!32720)) (= (_1!1071 (h!2066 (toList!717 lt!32720))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17495 (= (getValueByKey!131 (toList!717 lt!32720) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48562)))

(declare-fun b!74308 () Bool)

(assert (=> b!74308 (= e!48562 e!48563)))

(declare-fun c!11174 () Bool)

(assert (=> b!74308 (= c!11174 (and ((_ is Cons!1479) (toList!717 lt!32720)) (not (= (_1!1071 (h!2066 (toList!717 lt!32720))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17495 c!11173) b!74307))

(assert (= (and d!17495 (not c!11173)) b!74308))

(assert (= (and b!74308 c!11174) b!74309))

(assert (= (and b!74308 (not c!11174)) b!74310))

(declare-fun m!73239 () Bool)

(assert (=> b!74309 m!73239))

(assert (=> b!73203 d!17495))

(declare-fun b!74311 () Bool)

(declare-fun e!48564 () Option!137)

(assert (=> b!74311 (= e!48564 (Some!136 (_2!1071 (h!2066 (toList!717 lt!33012)))))))

(declare-fun b!74314 () Bool)

(declare-fun e!48565 () Option!137)

(assert (=> b!74314 (= e!48565 None!135)))

(declare-fun b!74313 () Bool)

(assert (=> b!74313 (= e!48565 (getValueByKey!131 (t!5031 (toList!717 lt!33012)) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17497 () Bool)

(declare-fun c!11175 () Bool)

(assert (=> d!17497 (= c!11175 (and ((_ is Cons!1479) (toList!717 lt!33012)) (= (_1!1071 (h!2066 (toList!717 lt!33012))) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17497 (= (getValueByKey!131 (toList!717 lt!33012) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48564)))

(declare-fun b!74312 () Bool)

(assert (=> b!74312 (= e!48564 e!48565)))

(declare-fun c!11176 () Bool)

(assert (=> b!74312 (= c!11176 (and ((_ is Cons!1479) (toList!717 lt!33012)) (not (= (_1!1071 (h!2066 (toList!717 lt!33012))) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17497 c!11175) b!74311))

(assert (= (and d!17497 (not c!11175)) b!74312))

(assert (= (and b!74312 c!11176) b!74313))

(assert (= (and b!74312 (not c!11176)) b!74314))

(declare-fun m!73241 () Bool)

(assert (=> b!74313 m!73241))

(assert (=> b!73546 d!17497))

(assert (=> b!73149 d!16741))

(declare-fun d!17499 () Bool)

(assert (=> d!17499 (isDefined!85 (getValueByKey!131 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!33380 () Unit!2066)

(assert (=> d!17499 (= lt!33380 (choose!426 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!48566 () Bool)

(assert (=> d!17499 e!48566))

(declare-fun res!39302 () Bool)

(assert (=> d!17499 (=> (not res!39302) (not e!48566))))

(assert (=> d!17499 (= res!39302 (isStrictlySorted!287 (toList!717 lt!32663)))))

(assert (=> d!17499 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!33380)))

(declare-fun b!74315 () Bool)

(assert (=> b!74315 (= e!48566 (containsKey!135 (toList!717 lt!32663) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17499 res!39302) b!74315))

(assert (=> d!17499 m!70941))

(assert (=> d!17499 m!71405))

(assert (=> d!17499 m!71405))

(assert (=> d!17499 m!71463))

(assert (=> d!17499 m!70941))

(declare-fun m!73243 () Bool)

(assert (=> d!17499 m!73243))

(assert (=> d!17499 m!72633))

(assert (=> b!74315 m!70941))

(assert (=> b!74315 m!71459))

(assert (=> b!73277 d!17499))

(assert (=> b!73277 d!16987))

(assert (=> b!73277 d!16989))

(assert (=> b!73256 d!17089))

(declare-fun d!17501 () Bool)

(assert (=> d!17501 (= (get!1147 (getValueByKey!131 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2529 (getValueByKey!131 (toList!717 lt!32604) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!16921 d!17501))

(assert (=> d!16921 d!17407))

(declare-fun d!17503 () Bool)

(declare-fun e!48568 () Bool)

(assert (=> d!17503 e!48568))

(declare-fun res!39303 () Bool)

(assert (=> d!17503 (=> res!39303 e!48568)))

(declare-fun lt!33384 () Bool)

(assert (=> d!17503 (= res!39303 (not lt!33384))))

(declare-fun lt!33382 () Bool)

(assert (=> d!17503 (= lt!33384 lt!33382)))

(declare-fun lt!33381 () Unit!2066)

(declare-fun e!48567 () Unit!2066)

(assert (=> d!17503 (= lt!33381 e!48567)))

(declare-fun c!11177 () Bool)

(assert (=> d!17503 (= c!11177 lt!33382)))

(assert (=> d!17503 (= lt!33382 (containsKey!135 (toList!717 lt!33031) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!17503 (= (contains!719 lt!33031 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) lt!33384)))

(declare-fun b!74316 () Bool)

(declare-fun lt!33383 () Unit!2066)

(assert (=> b!74316 (= e!48567 lt!33383)))

(assert (=> b!74316 (= lt!33383 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!33031) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> b!74316 (isDefined!85 (getValueByKey!131 (toList!717 lt!33031) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!74317 () Bool)

(declare-fun Unit!2129 () Unit!2066)

(assert (=> b!74317 (= e!48567 Unit!2129)))

(declare-fun b!74318 () Bool)

(assert (=> b!74318 (= e!48568 (isDefined!85 (getValueByKey!131 (toList!717 lt!33031) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (= (and d!17503 c!11177) b!74316))

(assert (= (and d!17503 (not c!11177)) b!74317))

(assert (= (and d!17503 (not res!39303)) b!74318))

(declare-fun m!73245 () Bool)

(assert (=> d!17503 m!73245))

(declare-fun m!73247 () Bool)

(assert (=> b!74316 m!73247))

(assert (=> b!74316 m!71979))

(assert (=> b!74316 m!71979))

(declare-fun m!73249 () Bool)

(assert (=> b!74316 m!73249))

(assert (=> b!74318 m!71979))

(assert (=> b!74318 m!71979))

(assert (=> b!74318 m!73249))

(assert (=> d!16985 d!17503))

(declare-fun b!74319 () Bool)

(declare-fun e!48569 () Option!137)

(assert (=> b!74319 (= e!48569 (Some!136 (_2!1071 (h!2066 lt!33032))))))

(declare-fun b!74322 () Bool)

(declare-fun e!48570 () Option!137)

(assert (=> b!74322 (= e!48570 None!135)))

(declare-fun b!74321 () Bool)

(assert (=> b!74321 (= e!48570 (getValueByKey!131 (t!5031 lt!33032) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun d!17505 () Bool)

(declare-fun c!11178 () Bool)

(assert (=> d!17505 (= c!11178 (and ((_ is Cons!1479) lt!33032) (= (_1!1071 (h!2066 lt!33032)) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (=> d!17505 (= (getValueByKey!131 lt!33032 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) e!48569)))

(declare-fun b!74320 () Bool)

(assert (=> b!74320 (= e!48569 e!48570)))

(declare-fun c!11179 () Bool)

(assert (=> b!74320 (= c!11179 (and ((_ is Cons!1479) lt!33032) (not (= (_1!1071 (h!2066 lt!33032)) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))))

(assert (= (and d!17505 c!11178) b!74319))

(assert (= (and d!17505 (not c!11178)) b!74320))

(assert (= (and b!74320 c!11179) b!74321))

(assert (= (and b!74320 (not c!11179)) b!74322))

(declare-fun m!73251 () Bool)

(assert (=> b!74321 m!73251))

(assert (=> d!16985 d!17505))

(declare-fun d!17507 () Bool)

(assert (=> d!17507 (= (getValueByKey!131 lt!33032 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) (Some!136 (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun lt!33385 () Unit!2066)

(assert (=> d!17507 (= lt!33385 (choose!420 lt!33032 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun e!48571 () Bool)

(assert (=> d!17507 e!48571))

(declare-fun res!39304 () Bool)

(assert (=> d!17507 (=> (not res!39304) (not e!48571))))

(assert (=> d!17507 (= res!39304 (isStrictlySorted!287 lt!33032))))

(assert (=> d!17507 (= (lemmaContainsTupThenGetReturnValue!51 lt!33032 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) lt!33385)))

(declare-fun b!74323 () Bool)

(declare-fun res!39305 () Bool)

(assert (=> b!74323 (=> (not res!39305) (not e!48571))))

(assert (=> b!74323 (= res!39305 (containsKey!135 lt!33032 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!74324 () Bool)

(assert (=> b!74324 (= e!48571 (contains!722 lt!33032 (tuple2!2121 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (= (and d!17507 res!39304) b!74323))

(assert (= (and b!74323 res!39305) b!74324))

(assert (=> d!17507 m!71973))

(declare-fun m!73253 () Bool)

(assert (=> d!17507 m!73253))

(declare-fun m!73255 () Bool)

(assert (=> d!17507 m!73255))

(declare-fun m!73257 () Bool)

(assert (=> b!74323 m!73257))

(declare-fun m!73259 () Bool)

(assert (=> b!74324 m!73259))

(assert (=> d!16985 d!17507))

(declare-fun d!17509 () Bool)

(declare-fun e!48574 () Bool)

(assert (=> d!17509 e!48574))

(declare-fun res!39307 () Bool)

(assert (=> d!17509 (=> (not res!39307) (not e!48574))))

(declare-fun lt!33386 () List!1483)

(assert (=> d!17509 (= res!39307 (isStrictlySorted!287 lt!33386))))

(declare-fun e!48576 () List!1483)

(assert (=> d!17509 (= lt!33386 e!48576)))

(declare-fun c!11182 () Bool)

(assert (=> d!17509 (= c!11182 (and ((_ is Cons!1479) (toList!717 e!47747)) (bvslt (_1!1071 (h!2066 (toList!717 e!47747))) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (=> d!17509 (isStrictlySorted!287 (toList!717 e!47747))))

(assert (=> d!17509 (= (insertStrictlySorted!54 (toList!717 e!47747) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) lt!33386)))

(declare-fun b!74325 () Bool)

(declare-fun res!39306 () Bool)

(assert (=> b!74325 (=> (not res!39306) (not e!48574))))

(assert (=> b!74325 (= res!39306 (containsKey!135 lt!33386 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!74326 () Bool)

(declare-fun e!48575 () List!1483)

(declare-fun call!6561 () List!1483)

(assert (=> b!74326 (= e!48575 call!6561)))

(declare-fun bm!6556 () Bool)

(declare-fun call!6559 () List!1483)

(declare-fun call!6560 () List!1483)

(assert (=> bm!6556 (= call!6559 call!6560)))

(declare-fun b!74327 () Bool)

(assert (=> b!74327 (= e!48576 call!6560)))

(declare-fun e!48572 () List!1483)

(declare-fun b!74328 () Bool)

(assert (=> b!74328 (= e!48572 (insertStrictlySorted!54 (t!5031 (toList!717 e!47747)) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!74329 () Bool)

(assert (=> b!74329 (= e!48575 call!6561)))

(declare-fun b!74330 () Bool)

(assert (=> b!74330 (= e!48574 (contains!722 lt!33386 (tuple2!2121 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(declare-fun b!74331 () Bool)

(declare-fun c!11180 () Bool)

(assert (=> b!74331 (= c!11180 (and ((_ is Cons!1479) (toList!717 e!47747)) (bvsgt (_1!1071 (h!2066 (toList!717 e!47747))) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(declare-fun e!48573 () List!1483)

(assert (=> b!74331 (= e!48573 e!48575)))

(declare-fun bm!6557 () Bool)

(assert (=> bm!6557 (= call!6560 ($colon$colon!65 e!48572 (ite c!11182 (h!2066 (toList!717 e!47747)) (tuple2!2121 (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_2!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))))

(declare-fun c!11183 () Bool)

(assert (=> bm!6557 (= c!11183 c!11182)))

(declare-fun bm!6558 () Bool)

(assert (=> bm!6558 (= call!6561 call!6559)))

(declare-fun b!74332 () Bool)

(assert (=> b!74332 (= e!48576 e!48573)))

(declare-fun c!11181 () Bool)

(assert (=> b!74332 (= c!11181 (and ((_ is Cons!1479) (toList!717 e!47747)) (= (_1!1071 (h!2066 (toList!717 e!47747))) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(declare-fun b!74333 () Bool)

(assert (=> b!74333 (= e!48573 call!6559)))

(declare-fun b!74334 () Bool)

(assert (=> b!74334 (= e!48572 (ite c!11181 (t!5031 (toList!717 e!47747)) (ite c!11180 (Cons!1479 (h!2066 (toList!717 e!47747)) (t!5031 (toList!717 e!47747))) Nil!1480)))))

(assert (= (and d!17509 c!11182) b!74327))

(assert (= (and d!17509 (not c!11182)) b!74332))

(assert (= (and b!74332 c!11181) b!74333))

(assert (= (and b!74332 (not c!11181)) b!74331))

(assert (= (and b!74331 c!11180) b!74329))

(assert (= (and b!74331 (not c!11180)) b!74326))

(assert (= (or b!74329 b!74326) bm!6558))

(assert (= (or b!74333 bm!6558) bm!6556))

(assert (= (or b!74327 bm!6556) bm!6557))

(assert (= (and bm!6557 c!11183) b!74328))

(assert (= (and bm!6557 (not c!11183)) b!74334))

(assert (= (and d!17509 res!39307) b!74325))

(assert (= (and b!74325 res!39306) b!74330))

(declare-fun m!73261 () Bool)

(assert (=> bm!6557 m!73261))

(declare-fun m!73263 () Bool)

(assert (=> d!17509 m!73263))

(declare-fun m!73265 () Bool)

(assert (=> d!17509 m!73265))

(declare-fun m!73267 () Bool)

(assert (=> b!74328 m!73267))

(declare-fun m!73269 () Bool)

(assert (=> b!74330 m!73269))

(declare-fun m!73271 () Bool)

(assert (=> b!74325 m!73271))

(assert (=> d!16985 d!17509))

(declare-fun d!17511 () Bool)

(declare-fun e!48577 () Bool)

(assert (=> d!17511 e!48577))

(declare-fun res!39309 () Bool)

(assert (=> d!17511 (=> (not res!39309) (not e!48577))))

(declare-fun lt!33389 () ListLongMap!1403)

(assert (=> d!17511 (= res!39309 (contains!719 lt!33389 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun lt!33390 () List!1483)

(assert (=> d!17511 (= lt!33389 (ListLongMap!1404 lt!33390))))

(declare-fun lt!33388 () Unit!2066)

(declare-fun lt!33387 () Unit!2066)

(assert (=> d!17511 (= lt!33388 lt!33387)))

(assert (=> d!17511 (= (getValueByKey!131 lt!33390 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!17511 (= lt!33387 (lemmaContainsTupThenGetReturnValue!51 lt!33390 (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!17511 (= lt!33390 (insertStrictlySorted!54 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!17511 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) lt!33389)))

(declare-fun b!74335 () Bool)

(declare-fun res!39308 () Bool)

(assert (=> b!74335 (=> (not res!39308) (not e!48577))))

(assert (=> b!74335 (= res!39308 (= (getValueByKey!131 (toList!717 lt!33389) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (Some!136 (_2!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun b!74336 () Bool)

(assert (=> b!74336 (= e!48577 (contains!722 (toList!717 lt!33389) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))

(assert (= (and d!17511 res!39309) b!74335))

(assert (= (and b!74335 res!39308) b!74336))

(declare-fun m!73273 () Bool)

(assert (=> d!17511 m!73273))

(declare-fun m!73275 () Bool)

(assert (=> d!17511 m!73275))

(declare-fun m!73277 () Bool)

(assert (=> d!17511 m!73277))

(declare-fun m!73279 () Bool)

(assert (=> d!17511 m!73279))

(declare-fun m!73281 () Bool)

(assert (=> b!74335 m!73281))

(declare-fun m!73283 () Bool)

(assert (=> b!74336 m!73283))

(assert (=> b!73421 d!17511))

(assert (=> b!73421 d!16829))

(declare-fun b!74337 () Bool)

(declare-fun e!48586 () Bool)

(declare-fun e!48585 () Bool)

(assert (=> b!74337 (= e!48586 e!48585)))

(declare-fun res!39312 () Bool)

(declare-fun call!6564 () Bool)

(assert (=> b!74337 (= res!39312 call!6564)))

(assert (=> b!74337 (=> (not res!39312) (not e!48585))))

(declare-fun b!74338 () Bool)

(declare-fun e!48583 () ListLongMap!1403)

(declare-fun call!6563 () ListLongMap!1403)

(assert (=> b!74338 (= e!48583 call!6563)))

(declare-fun b!74339 () Bool)

(declare-fun e!48578 () Bool)

(assert (=> b!74339 (= e!48578 e!48586)))

(declare-fun c!11185 () Bool)

(assert (=> b!74339 (= c!11185 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74340 () Bool)

(declare-fun e!48584 () Bool)

(declare-fun call!6566 () Bool)

(assert (=> b!74340 (= e!48584 (not call!6566))))

(declare-fun b!74341 () Bool)

(declare-fun e!48589 () ListLongMap!1403)

(declare-fun call!6568 () ListLongMap!1403)

(assert (=> b!74341 (= e!48589 call!6568)))

(declare-fun b!74343 () Bool)

(declare-fun e!48580 () Bool)

(assert (=> b!74343 (= e!48584 e!48580)))

(declare-fun res!39315 () Bool)

(assert (=> b!74343 (= res!39315 call!6566)))

(assert (=> b!74343 (=> (not res!39315) (not e!48580))))

(declare-fun bm!6559 () Bool)

(declare-fun call!6565 () ListLongMap!1403)

(declare-fun call!6567 () ListLongMap!1403)

(assert (=> bm!6559 (= call!6565 call!6567)))

(declare-fun b!74344 () Bool)

(declare-fun e!48588 () ListLongMap!1403)

(assert (=> b!74344 (= e!48588 e!48583)))

(declare-fun c!11188 () Bool)

(assert (=> b!74344 (= c!11188 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6560 () Bool)

(declare-fun lt!33391 () ListLongMap!1403)

(assert (=> bm!6560 (= call!6564 (contains!719 lt!33391 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6561 () Bool)

(declare-fun c!11189 () Bool)

(declare-fun call!6562 () ListLongMap!1403)

(assert (=> bm!6561 (= call!6562 (+!93 (ite c!11189 call!6567 (ite c!11188 call!6565 call!6568)) (ite (or c!11189 c!11188) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!74345 () Bool)

(declare-fun e!48590 () Bool)

(assert (=> b!74345 (= e!48590 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74346 () Bool)

(declare-fun res!39313 () Bool)

(assert (=> b!74346 (=> (not res!39313) (not e!48578))))

(assert (=> b!74346 (= res!39313 e!48584)))

(declare-fun c!11186 () Bool)

(assert (=> b!74346 (= c!11186 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6562 () Bool)

(assert (=> bm!6562 (= call!6568 call!6565)))

(declare-fun b!74347 () Bool)

(declare-fun e!48581 () Bool)

(assert (=> b!74347 (= e!48581 (= (apply!75 lt!33391 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74347 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))))))

(assert (=> b!74347 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74348 () Bool)

(assert (=> b!74348 (= e!48585 (= (apply!75 lt!33391 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun bm!6563 () Bool)

(assert (=> bm!6563 (= call!6566 (contains!719 lt!33391 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74349 () Bool)

(declare-fun e!48587 () Bool)

(assert (=> b!74349 (= e!48587 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74342 () Bool)

(declare-fun e!48579 () Unit!2066)

(declare-fun lt!33398 () Unit!2066)

(assert (=> b!74342 (= e!48579 lt!33398)))

(declare-fun lt!33410 () ListLongMap!1403)

(assert (=> b!74342 (= lt!33410 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33400 () (_ BitVec 64))

(assert (=> b!74342 (= lt!33400 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33403 () (_ BitVec 64))

(assert (=> b!74342 (= lt!33403 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33409 () Unit!2066)

(assert (=> b!74342 (= lt!33409 (addStillContains!51 lt!33410 lt!33400 (zeroValue!2114 newMap!16) lt!33403))))

(assert (=> b!74342 (contains!719 (+!93 lt!33410 (tuple2!2121 lt!33400 (zeroValue!2114 newMap!16))) lt!33403)))

(declare-fun lt!33404 () Unit!2066)

(assert (=> b!74342 (= lt!33404 lt!33409)))

(declare-fun lt!33397 () ListLongMap!1403)

(assert (=> b!74342 (= lt!33397 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33407 () (_ BitVec 64))

(assert (=> b!74342 (= lt!33407 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33406 () (_ BitVec 64))

(assert (=> b!74342 (= lt!33406 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33399 () Unit!2066)

(assert (=> b!74342 (= lt!33399 (addApplyDifferent!51 lt!33397 lt!33407 (minValue!2114 newMap!16) lt!33406))))

(assert (=> b!74342 (= (apply!75 (+!93 lt!33397 (tuple2!2121 lt!33407 (minValue!2114 newMap!16))) lt!33406) (apply!75 lt!33397 lt!33406))))

(declare-fun lt!33411 () Unit!2066)

(assert (=> b!74342 (= lt!33411 lt!33399)))

(declare-fun lt!33408 () ListLongMap!1403)

(assert (=> b!74342 (= lt!33408 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33412 () (_ BitVec 64))

(assert (=> b!74342 (= lt!33412 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33395 () (_ BitVec 64))

(assert (=> b!74342 (= lt!33395 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33393 () Unit!2066)

(assert (=> b!74342 (= lt!33393 (addApplyDifferent!51 lt!33408 lt!33412 (zeroValue!2114 newMap!16) lt!33395))))

(assert (=> b!74342 (= (apply!75 (+!93 lt!33408 (tuple2!2121 lt!33412 (zeroValue!2114 newMap!16))) lt!33395) (apply!75 lt!33408 lt!33395))))

(declare-fun lt!33401 () Unit!2066)

(assert (=> b!74342 (= lt!33401 lt!33393)))

(declare-fun lt!33394 () ListLongMap!1403)

(assert (=> b!74342 (= lt!33394 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33396 () (_ BitVec 64))

(assert (=> b!74342 (= lt!33396 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33405 () (_ BitVec 64))

(assert (=> b!74342 (= lt!33405 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74342 (= lt!33398 (addApplyDifferent!51 lt!33394 lt!33396 (minValue!2114 newMap!16) lt!33405))))

(assert (=> b!74342 (= (apply!75 (+!93 lt!33394 (tuple2!2121 lt!33396 (minValue!2114 newMap!16))) lt!33405) (apply!75 lt!33394 lt!33405))))

(declare-fun d!17513 () Bool)

(assert (=> d!17513 e!48578))

(declare-fun res!39311 () Bool)

(assert (=> d!17513 (=> (not res!39311) (not e!48578))))

(assert (=> d!17513 (= res!39311 (or (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))))

(declare-fun lt!33402 () ListLongMap!1403)

(assert (=> d!17513 (= lt!33391 lt!33402)))

(declare-fun lt!33392 () Unit!2066)

(assert (=> d!17513 (= lt!33392 e!48579)))

(declare-fun c!11184 () Bool)

(assert (=> d!17513 (= c!11184 e!48587)))

(declare-fun res!39314 () Bool)

(assert (=> d!17513 (=> (not res!39314) (not e!48587))))

(assert (=> d!17513 (= res!39314 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17513 (= lt!33402 e!48588)))

(assert (=> d!17513 (= c!11189 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17513 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17513 (= (getCurrentListMap!410 (_keys!3863 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33391)))

(declare-fun b!74350 () Bool)

(assert (=> b!74350 (= e!48588 (+!93 call!6562 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!74351 () Bool)

(declare-fun c!11187 () Bool)

(assert (=> b!74351 (= c!11187 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74351 (= e!48583 e!48589)))

(declare-fun b!74352 () Bool)

(assert (=> b!74352 (= e!48589 call!6563)))

(declare-fun b!74353 () Bool)

(assert (=> b!74353 (= e!48586 (not call!6564))))

(declare-fun b!74354 () Bool)

(declare-fun e!48582 () Bool)

(assert (=> b!74354 (= e!48582 e!48581)))

(declare-fun res!39316 () Bool)

(assert (=> b!74354 (=> (not res!39316) (not e!48581))))

(assert (=> b!74354 (= res!39316 (contains!719 lt!33391 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74354 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74355 () Bool)

(assert (=> b!74355 (= e!48580 (= (apply!75 lt!33391 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!74356 () Bool)

(declare-fun Unit!2130 () Unit!2066)

(assert (=> b!74356 (= e!48579 Unit!2130)))

(declare-fun bm!6564 () Bool)

(assert (=> bm!6564 (= call!6563 call!6562)))

(declare-fun b!74357 () Bool)

(declare-fun res!39310 () Bool)

(assert (=> b!74357 (=> (not res!39310) (not e!48578))))

(assert (=> b!74357 (= res!39310 e!48582)))

(declare-fun res!39318 () Bool)

(assert (=> b!74357 (=> res!39318 e!48582)))

(assert (=> b!74357 (= res!39318 (not e!48590))))

(declare-fun res!39317 () Bool)

(assert (=> b!74357 (=> (not res!39317) (not e!48590))))

(assert (=> b!74357 (= res!39317 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun bm!6565 () Bool)

(assert (=> bm!6565 (= call!6567 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (= (and d!17513 c!11189) b!74350))

(assert (= (and d!17513 (not c!11189)) b!74344))

(assert (= (and b!74344 c!11188) b!74338))

(assert (= (and b!74344 (not c!11188)) b!74351))

(assert (= (and b!74351 c!11187) b!74352))

(assert (= (and b!74351 (not c!11187)) b!74341))

(assert (= (or b!74352 b!74341) bm!6562))

(assert (= (or b!74338 bm!6562) bm!6559))

(assert (= (or b!74338 b!74352) bm!6564))

(assert (= (or b!74350 bm!6559) bm!6565))

(assert (= (or b!74350 bm!6564) bm!6561))

(assert (= (and d!17513 res!39314) b!74349))

(assert (= (and d!17513 c!11184) b!74342))

(assert (= (and d!17513 (not c!11184)) b!74356))

(assert (= (and d!17513 res!39311) b!74357))

(assert (= (and b!74357 res!39317) b!74345))

(assert (= (and b!74357 (not res!39318)) b!74354))

(assert (= (and b!74354 res!39316) b!74347))

(assert (= (and b!74357 res!39310) b!74346))

(assert (= (and b!74346 c!11186) b!74343))

(assert (= (and b!74346 (not c!11186)) b!74340))

(assert (= (and b!74343 res!39315) b!74355))

(assert (= (or b!74343 b!74340) bm!6563))

(assert (= (and b!74346 res!39313) b!74339))

(assert (= (and b!74339 c!11185) b!74337))

(assert (= (and b!74339 (not c!11185)) b!74353))

(assert (= (and b!74337 res!39312) b!74348))

(assert (= (or b!74337 b!74353) bm!6560))

(declare-fun b_lambda!3321 () Bool)

(assert (=> (not b_lambda!3321) (not b!74347)))

(assert (=> b!74347 t!5045))

(declare-fun b_and!4549 () Bool)

(assert (= b_and!4545 (and (=> t!5045 result!2689) b_and!4549)))

(assert (=> b!74347 t!5047))

(declare-fun b_and!4551 () Bool)

(assert (= b_and!4547 (and (=> t!5047 result!2691) b_and!4551)))

(declare-fun m!73285 () Bool)

(assert (=> bm!6560 m!73285))

(declare-fun m!73287 () Bool)

(assert (=> b!74342 m!73287))

(declare-fun m!73289 () Bool)

(assert (=> b!74342 m!73289))

(declare-fun m!73291 () Bool)

(assert (=> b!74342 m!73291))

(declare-fun m!73293 () Bool)

(assert (=> b!74342 m!73293))

(declare-fun m!73295 () Bool)

(assert (=> b!74342 m!73295))

(declare-fun m!73297 () Bool)

(assert (=> b!74342 m!73297))

(declare-fun m!73299 () Bool)

(assert (=> b!74342 m!73299))

(declare-fun m!73301 () Bool)

(assert (=> b!74342 m!73301))

(assert (=> b!74342 m!73295))

(declare-fun m!73303 () Bool)

(assert (=> b!74342 m!73303))

(declare-fun m!73305 () Bool)

(assert (=> b!74342 m!73305))

(declare-fun m!73307 () Bool)

(assert (=> b!74342 m!73307))

(declare-fun m!73309 () Bool)

(assert (=> b!74342 m!73309))

(assert (=> b!74342 m!73301))

(declare-fun m!73311 () Bool)

(assert (=> b!74342 m!73311))

(assert (=> b!74342 m!73287))

(assert (=> b!74342 m!71361))

(declare-fun m!73313 () Bool)

(assert (=> b!74342 m!73313))

(declare-fun m!73315 () Bool)

(assert (=> b!74342 m!73315))

(assert (=> b!74342 m!73291))

(declare-fun m!73317 () Bool)

(assert (=> b!74342 m!73317))

(declare-fun m!73319 () Bool)

(assert (=> b!74355 m!73319))

(declare-fun m!73321 () Bool)

(assert (=> b!74348 m!73321))

(assert (=> b!74345 m!71361))

(assert (=> b!74345 m!71361))

(assert (=> b!74345 m!71373))

(declare-fun m!73323 () Bool)

(assert (=> bm!6561 m!73323))

(assert (=> b!74349 m!71361))

(assert (=> b!74349 m!71361))

(assert (=> b!74349 m!71373))

(assert (=> d!17513 m!71219))

(declare-fun m!73325 () Bool)

(assert (=> b!74350 m!73325))

(declare-fun m!73327 () Bool)

(assert (=> bm!6563 m!73327))

(assert (=> bm!6565 m!73309))

(assert (=> b!74354 m!71361))

(assert (=> b!74354 m!71361))

(declare-fun m!73329 () Bool)

(assert (=> b!74354 m!73329))

(assert (=> b!74347 m!71361))

(declare-fun m!73331 () Bool)

(assert (=> b!74347 m!73331))

(assert (=> b!74347 m!71361))

(declare-fun m!73333 () Bool)

(assert (=> b!74347 m!73333))

(assert (=> b!74347 m!73331))

(assert (=> b!74347 m!71387))

(declare-fun m!73335 () Bool)

(assert (=> b!74347 m!73335))

(assert (=> b!74347 m!71387))

(assert (=> b!73421 d!17513))

(declare-fun d!17515 () Bool)

(assert (=> d!17515 (isDefined!85 (getValueByKey!131 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun lt!33413 () Unit!2066)

(assert (=> d!17515 (= lt!33413 (choose!426 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun e!48591 () Bool)

(assert (=> d!17515 e!48591))

(declare-fun res!39319 () Bool)

(assert (=> d!17515 (=> (not res!39319) (not e!48591))))

(assert (=> d!17515 (= res!39319 (isStrictlySorted!287 (toList!717 e!47748)))))

(assert (=> d!17515 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) lt!33413)))

(declare-fun b!74358 () Bool)

(assert (=> b!74358 (= e!48591 (containsKey!135 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (= (and d!17515 res!39319) b!74358))

(assert (=> d!17515 m!70791))

(assert (=> d!17515 m!71417))

(assert (=> d!17515 m!71417))

(assert (=> d!17515 m!71419))

(assert (=> d!17515 m!70791))

(declare-fun m!73337 () Bool)

(assert (=> d!17515 m!73337))

(declare-fun m!73339 () Bool)

(assert (=> d!17515 m!73339))

(assert (=> b!74358 m!70791))

(assert (=> b!74358 m!71413))

(assert (=> b!73240 d!17515))

(declare-fun d!17517 () Bool)

(assert (=> d!17517 (= (isDefined!85 (getValueByKey!131 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))) (not (isEmpty!322 (getValueByKey!131 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))))

(declare-fun bs!3197 () Bool)

(assert (= bs!3197 d!17517))

(assert (=> bs!3197 m!71417))

(declare-fun m!73341 () Bool)

(assert (=> bs!3197 m!73341))

(assert (=> b!73240 d!17517))

(declare-fun b!74359 () Bool)

(declare-fun e!48592 () Option!137)

(assert (=> b!74359 (= e!48592 (Some!136 (_2!1071 (h!2066 (toList!717 e!47748)))))))

(declare-fun b!74362 () Bool)

(declare-fun e!48593 () Option!137)

(assert (=> b!74362 (= e!48593 None!135)))

(declare-fun b!74361 () Bool)

(assert (=> b!74361 (= e!48593 (getValueByKey!131 (t!5031 (toList!717 e!47748)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun d!17519 () Bool)

(declare-fun c!11190 () Bool)

(assert (=> d!17519 (= c!11190 (and ((_ is Cons!1479) (toList!717 e!47748)) (= (_1!1071 (h!2066 (toList!717 e!47748))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355))))))

(assert (=> d!17519 (= (getValueByKey!131 (toList!717 e!47748) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) e!48592)))

(declare-fun b!74360 () Bool)

(assert (=> b!74360 (= e!48592 e!48593)))

(declare-fun c!11191 () Bool)

(assert (=> b!74360 (= c!11191 (and ((_ is Cons!1479) (toList!717 e!47748)) (not (= (_1!1071 (h!2066 (toList!717 e!47748))) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))))

(assert (= (and d!17519 c!11190) b!74359))

(assert (= (and d!17519 (not c!11190)) b!74360))

(assert (= (and b!74360 c!11191) b!74361))

(assert (= (and b!74360 (not c!11191)) b!74362))

(assert (=> b!74361 m!70791))

(declare-fun m!73343 () Bool)

(assert (=> b!74361 m!73343))

(assert (=> b!73240 d!17519))

(declare-fun d!17521 () Bool)

(declare-fun res!39320 () Bool)

(declare-fun e!48594 () Bool)

(assert (=> d!17521 (=> res!39320 e!48594)))

(assert (=> d!17521 (= res!39320 (and ((_ is Cons!1479) (toList!717 call!6384)) (= (_1!1071 (h!2066 (toList!717 call!6384))) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540)))))))

(assert (=> d!17521 (= (containsKey!135 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))) e!48594)))

(declare-fun b!74363 () Bool)

(declare-fun e!48595 () Bool)

(assert (=> b!74363 (= e!48594 e!48595)))

(declare-fun res!39321 () Bool)

(assert (=> b!74363 (=> (not res!39321) (not e!48595))))

(assert (=> b!74363 (= res!39321 (and (or (not ((_ is Cons!1479) (toList!717 call!6384))) (bvsle (_1!1071 (h!2066 (toList!717 call!6384))) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540)))) ((_ is Cons!1479) (toList!717 call!6384)) (bvslt (_1!1071 (h!2066 (toList!717 call!6384))) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540)))))))

(declare-fun b!74364 () Bool)

(assert (=> b!74364 (= e!48595 (containsKey!135 (t!5031 (toList!717 call!6384)) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(assert (= (and d!17521 (not res!39320)) b!74363))

(assert (= (and b!74363 res!39321) b!74364))

(assert (=> b!74364 m!71017))

(declare-fun m!73345 () Bool)

(assert (=> b!74364 m!73345))

(assert (=> d!16913 d!17521))

(declare-fun b!74368 () Bool)

(declare-fun e!48596 () Bool)

(assert (=> b!74368 (= e!48596 (and (bvsge (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000000) (bvsle (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000011) (bvsge (_vacant!396 (_2!1072 lt!32534)) #b00000000000000000000000000000000)))))

(declare-fun b!74365 () Bool)

(declare-fun res!39322 () Bool)

(assert (=> b!74365 (=> (not res!39322) (not e!48596))))

(assert (=> b!74365 (= res!39322 (and (= (size!2086 (_values!2195 (_2!1072 lt!32534))) (bvadd (mask!6178 (_2!1072 lt!32534)) #b00000000000000000000000000000001)) (= (size!2085 (_keys!3863 (_2!1072 lt!32534))) (size!2086 (_values!2195 (_2!1072 lt!32534)))) (bvsge (_size!396 (_2!1072 lt!32534)) #b00000000000000000000000000000000) (bvsle (_size!396 (_2!1072 lt!32534)) (bvadd (mask!6178 (_2!1072 lt!32534)) #b00000000000000000000000000000001))))))

(declare-fun b!74366 () Bool)

(declare-fun res!39324 () Bool)

(assert (=> b!74366 (=> (not res!39324) (not e!48596))))

(assert (=> b!74366 (= res!39324 (bvsge (size!2091 (_2!1072 lt!32534)) (_size!396 (_2!1072 lt!32534))))))

(declare-fun d!17523 () Bool)

(declare-fun res!39325 () Bool)

(assert (=> d!17523 (=> (not res!39325) (not e!48596))))

(assert (=> d!17523 (= res!39325 (validMask!0 (mask!6178 (_2!1072 lt!32534))))))

(assert (=> d!17523 (= (simpleValid!51 (_2!1072 lt!32534)) e!48596)))

(declare-fun b!74367 () Bool)

(declare-fun res!39323 () Bool)

(assert (=> b!74367 (=> (not res!39323) (not e!48596))))

(assert (=> b!74367 (= res!39323 (= (size!2091 (_2!1072 lt!32534)) (bvadd (_size!396 (_2!1072 lt!32534)) (bvsdiv (bvadd (extraKeys!2071 (_2!1072 lt!32534)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!17523 res!39325) b!74365))

(assert (= (and b!74365 res!39322) b!74366))

(assert (= (and b!74366 res!39324) b!74367))

(assert (= (and b!74367 res!39323) b!74368))

(declare-fun m!73347 () Bool)

(assert (=> b!74366 m!73347))

(assert (=> d!17523 m!72433))

(assert (=> b!74367 m!73347))

(assert (=> d!16877 d!17523))

(declare-fun b!74369 () Bool)

(declare-fun e!48597 () Option!137)

(assert (=> b!74369 (= e!48597 (Some!136 (_2!1071 (h!2066 (toList!717 lt!33031)))))))

(declare-fun b!74372 () Bool)

(declare-fun e!48598 () Option!137)

(assert (=> b!74372 (= e!48598 None!135)))

(declare-fun b!74371 () Bool)

(assert (=> b!74371 (= e!48598 (getValueByKey!131 (t!5031 (toList!717 lt!33031)) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(declare-fun c!11192 () Bool)

(declare-fun d!17525 () Bool)

(assert (=> d!17525 (= c!11192 (and ((_ is Cons!1479) (toList!717 lt!33031)) (= (_1!1071 (h!2066 (toList!717 lt!33031))) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (=> d!17525 (= (getValueByKey!131 (toList!717 lt!33031) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) e!48597)))

(declare-fun b!74370 () Bool)

(assert (=> b!74370 (= e!48597 e!48598)))

(declare-fun c!11193 () Bool)

(assert (=> b!74370 (= c!11193 (and ((_ is Cons!1479) (toList!717 lt!33031)) (not (= (_1!1071 (h!2066 (toList!717 lt!33031))) (_1!1071 (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))))

(assert (= (and d!17525 c!11192) b!74369))

(assert (= (and d!17525 (not c!11192)) b!74370))

(assert (= (and b!74370 c!11193) b!74371))

(assert (= (and b!74370 (not c!11193)) b!74372))

(declare-fun m!73349 () Bool)

(assert (=> b!74371 m!73349))

(assert (=> b!73575 d!17525))

(declare-fun b!74373 () Bool)

(declare-fun e!48599 () Option!137)

(assert (=> b!74373 (= e!48599 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32712)))))))

(declare-fun b!74376 () Bool)

(declare-fun e!48600 () Option!137)

(assert (=> b!74376 (= e!48600 None!135)))

(declare-fun b!74375 () Bool)

(assert (=> b!74375 (= e!48600 (getValueByKey!131 (t!5031 (toList!717 lt!32712)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17527 () Bool)

(declare-fun c!11194 () Bool)

(assert (=> d!17527 (= c!11194 (and ((_ is Cons!1479) (toList!717 lt!32712)) (= (_1!1071 (h!2066 (toList!717 lt!32712))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17527 (= (getValueByKey!131 (toList!717 lt!32712) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48599)))

(declare-fun b!74374 () Bool)

(assert (=> b!74374 (= e!48599 e!48600)))

(declare-fun c!11195 () Bool)

(assert (=> b!74374 (= c!11195 (and ((_ is Cons!1479) (toList!717 lt!32712)) (not (= (_1!1071 (h!2066 (toList!717 lt!32712))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17527 c!11194) b!74373))

(assert (= (and d!17527 (not c!11194)) b!74374))

(assert (= (and b!74374 c!11195) b!74375))

(assert (= (and b!74374 (not c!11195)) b!74376))

(declare-fun m!73351 () Bool)

(assert (=> b!74375 m!73351))

(assert (=> b!73199 d!17527))

(declare-fun d!17529 () Bool)

(declare-fun e!48603 () Bool)

(assert (=> d!17529 e!48603))

(declare-fun res!39327 () Bool)

(assert (=> d!17529 (=> (not res!39327) (not e!48603))))

(declare-fun lt!33414 () List!1483)

(assert (=> d!17529 (= res!39327 (isStrictlySorted!287 lt!33414))))

(declare-fun e!48605 () List!1483)

(assert (=> d!17529 (= lt!33414 e!48605)))

(declare-fun c!11198 () Bool)

(assert (=> d!17529 (= c!11198 (and ((_ is Cons!1479) (t!5031 (toList!717 (+!93 lt!32377 lt!32376)))) (bvslt (_1!1071 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32376))))) (_1!1071 lt!32383))))))

(assert (=> d!17529 (isStrictlySorted!287 (t!5031 (toList!717 (+!93 lt!32377 lt!32376))))))

(assert (=> d!17529 (= (insertStrictlySorted!54 (t!5031 (toList!717 (+!93 lt!32377 lt!32376))) (_1!1071 lt!32383) (_2!1071 lt!32383)) lt!33414)))

(declare-fun b!74377 () Bool)

(declare-fun res!39326 () Bool)

(assert (=> b!74377 (=> (not res!39326) (not e!48603))))

(assert (=> b!74377 (= res!39326 (containsKey!135 lt!33414 (_1!1071 lt!32383)))))

(declare-fun b!74378 () Bool)

(declare-fun e!48604 () List!1483)

(declare-fun call!6571 () List!1483)

(assert (=> b!74378 (= e!48604 call!6571)))

(declare-fun bm!6566 () Bool)

(declare-fun call!6569 () List!1483)

(declare-fun call!6570 () List!1483)

(assert (=> bm!6566 (= call!6569 call!6570)))

(declare-fun b!74379 () Bool)

(assert (=> b!74379 (= e!48605 call!6570)))

(declare-fun b!74380 () Bool)

(declare-fun e!48601 () List!1483)

(assert (=> b!74380 (= e!48601 (insertStrictlySorted!54 (t!5031 (t!5031 (toList!717 (+!93 lt!32377 lt!32376)))) (_1!1071 lt!32383) (_2!1071 lt!32383)))))

(declare-fun b!74381 () Bool)

(assert (=> b!74381 (= e!48604 call!6571)))

(declare-fun b!74382 () Bool)

(assert (=> b!74382 (= e!48603 (contains!722 lt!33414 (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun c!11196 () Bool)

(declare-fun b!74383 () Bool)

(assert (=> b!74383 (= c!11196 (and ((_ is Cons!1479) (t!5031 (toList!717 (+!93 lt!32377 lt!32376)))) (bvsgt (_1!1071 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32376))))) (_1!1071 lt!32383))))))

(declare-fun e!48602 () List!1483)

(assert (=> b!74383 (= e!48602 e!48604)))

(declare-fun bm!6567 () Bool)

(assert (=> bm!6567 (= call!6570 ($colon$colon!65 e!48601 (ite c!11198 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32376)))) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383)))))))

(declare-fun c!11199 () Bool)

(assert (=> bm!6567 (= c!11199 c!11198)))

(declare-fun bm!6568 () Bool)

(assert (=> bm!6568 (= call!6571 call!6569)))

(declare-fun b!74384 () Bool)

(assert (=> b!74384 (= e!48605 e!48602)))

(declare-fun c!11197 () Bool)

(assert (=> b!74384 (= c!11197 (and ((_ is Cons!1479) (t!5031 (toList!717 (+!93 lt!32377 lt!32376)))) (= (_1!1071 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32376))))) (_1!1071 lt!32383))))))

(declare-fun b!74385 () Bool)

(assert (=> b!74385 (= e!48602 call!6569)))

(declare-fun b!74386 () Bool)

(assert (=> b!74386 (= e!48601 (ite c!11197 (t!5031 (t!5031 (toList!717 (+!93 lt!32377 lt!32376)))) (ite c!11196 (Cons!1479 (h!2066 (t!5031 (toList!717 (+!93 lt!32377 lt!32376)))) (t!5031 (t!5031 (toList!717 (+!93 lt!32377 lt!32376))))) Nil!1480)))))

(assert (= (and d!17529 c!11198) b!74379))

(assert (= (and d!17529 (not c!11198)) b!74384))

(assert (= (and b!74384 c!11197) b!74385))

(assert (= (and b!74384 (not c!11197)) b!74383))

(assert (= (and b!74383 c!11196) b!74381))

(assert (= (and b!74383 (not c!11196)) b!74378))

(assert (= (or b!74381 b!74378) bm!6568))

(assert (= (or b!74385 bm!6568) bm!6566))

(assert (= (or b!74379 bm!6566) bm!6567))

(assert (= (and bm!6567 c!11199) b!74380))

(assert (= (and bm!6567 (not c!11199)) b!74386))

(assert (= (and d!17529 res!39327) b!74377))

(assert (= (and b!74377 res!39326) b!74382))

(declare-fun m!73353 () Bool)

(assert (=> bm!6567 m!73353))

(declare-fun m!73355 () Bool)

(assert (=> d!17529 m!73355))

(assert (=> d!17529 m!72755))

(declare-fun m!73357 () Bool)

(assert (=> b!74380 m!73357))

(declare-fun m!73359 () Bool)

(assert (=> b!74382 m!73359))

(declare-fun m!73361 () Bool)

(assert (=> b!74377 m!73361))

(assert (=> b!73322 d!17529))

(declare-fun d!17531 () Bool)

(declare-fun e!48607 () Bool)

(assert (=> d!17531 e!48607))

(declare-fun res!39328 () Bool)

(assert (=> d!17531 (=> res!39328 e!48607)))

(declare-fun lt!33418 () Bool)

(assert (=> d!17531 (= res!39328 (not lt!33418))))

(declare-fun lt!33416 () Bool)

(assert (=> d!17531 (= lt!33418 lt!33416)))

(declare-fun lt!33415 () Unit!2066)

(declare-fun e!48606 () Unit!2066)

(assert (=> d!17531 (= lt!33415 e!48606)))

(declare-fun c!11200 () Bool)

(assert (=> d!17531 (= c!11200 lt!33416)))

(assert (=> d!17531 (= lt!33416 (containsKey!135 (toList!717 lt!33000) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!17531 (= (contains!719 lt!33000 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33418)))

(declare-fun b!74387 () Bool)

(declare-fun lt!33417 () Unit!2066)

(assert (=> b!74387 (= e!48606 lt!33417)))

(assert (=> b!74387 (= lt!33417 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!33000) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> b!74387 (isDefined!85 (getValueByKey!131 (toList!717 lt!33000) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74388 () Bool)

(declare-fun Unit!2131 () Unit!2066)

(assert (=> b!74388 (= e!48606 Unit!2131)))

(declare-fun b!74389 () Bool)

(assert (=> b!74389 (= e!48607 (isDefined!85 (getValueByKey!131 (toList!717 lt!33000) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17531 c!11200) b!74387))

(assert (= (and d!17531 (not c!11200)) b!74388))

(assert (= (and d!17531 (not res!39328)) b!74389))

(declare-fun m!73363 () Bool)

(assert (=> d!17531 m!73363))

(declare-fun m!73365 () Bool)

(assert (=> b!74387 m!73365))

(assert (=> b!74387 m!71887))

(assert (=> b!74387 m!71887))

(declare-fun m!73367 () Bool)

(assert (=> b!74387 m!73367))

(assert (=> b!74389 m!71887))

(assert (=> b!74389 m!71887))

(assert (=> b!74389 m!73367))

(assert (=> d!16957 d!17531))

(declare-fun b!74390 () Bool)

(declare-fun e!48608 () Option!137)

(assert (=> b!74390 (= e!48608 (Some!136 (_2!1071 (h!2066 lt!33001))))))

(declare-fun b!74393 () Bool)

(declare-fun e!48609 () Option!137)

(assert (=> b!74393 (= e!48609 None!135)))

(declare-fun b!74392 () Bool)

(assert (=> b!74392 (= e!48609 (getValueByKey!131 (t!5031 lt!33001) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun c!11201 () Bool)

(declare-fun d!17533 () Bool)

(assert (=> d!17533 (= c!11201 (and ((_ is Cons!1479) lt!33001) (= (_1!1071 (h!2066 lt!33001)) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17533 (= (getValueByKey!131 lt!33001 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48608)))

(declare-fun b!74391 () Bool)

(assert (=> b!74391 (= e!48608 e!48609)))

(declare-fun c!11202 () Bool)

(assert (=> b!74391 (= c!11202 (and ((_ is Cons!1479) lt!33001) (not (= (_1!1071 (h!2066 lt!33001)) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17533 c!11201) b!74390))

(assert (= (and d!17533 (not c!11201)) b!74391))

(assert (= (and b!74391 c!11202) b!74392))

(assert (= (and b!74391 (not c!11202)) b!74393))

(declare-fun m!73369 () Bool)

(assert (=> b!74392 m!73369))

(assert (=> d!16957 d!17533))

(declare-fun d!17535 () Bool)

(assert (=> d!17535 (= (getValueByKey!131 lt!33001 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!33419 () Unit!2066)

(assert (=> d!17535 (= lt!33419 (choose!420 lt!33001 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun e!48610 () Bool)

(assert (=> d!17535 e!48610))

(declare-fun res!39329 () Bool)

(assert (=> d!17535 (=> (not res!39329) (not e!48610))))

(assert (=> d!17535 (= res!39329 (isStrictlySorted!287 lt!33001))))

(assert (=> d!17535 (= (lemmaContainsTupThenGetReturnValue!51 lt!33001 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33419)))

(declare-fun b!74394 () Bool)

(declare-fun res!39330 () Bool)

(assert (=> b!74394 (=> (not res!39330) (not e!48610))))

(assert (=> b!74394 (= res!39330 (containsKey!135 lt!33001 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74395 () Bool)

(assert (=> b!74395 (= e!48610 (contains!722 lt!33001 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17535 res!39329) b!74394))

(assert (= (and b!74394 res!39330) b!74395))

(assert (=> d!17535 m!71881))

(declare-fun m!73371 () Bool)

(assert (=> d!17535 m!73371))

(declare-fun m!73373 () Bool)

(assert (=> d!17535 m!73373))

(declare-fun m!73375 () Bool)

(assert (=> b!74394 m!73375))

(declare-fun m!73377 () Bool)

(assert (=> b!74395 m!73377))

(assert (=> d!16957 d!17535))

(declare-fun d!17537 () Bool)

(declare-fun e!48613 () Bool)

(assert (=> d!17537 e!48613))

(declare-fun res!39332 () Bool)

(assert (=> d!17537 (=> (not res!39332) (not e!48613))))

(declare-fun lt!33420 () List!1483)

(assert (=> d!17537 (= res!39332 (isStrictlySorted!287 lt!33420))))

(declare-fun e!48615 () List!1483)

(assert (=> d!17537 (= lt!33420 e!48615)))

(declare-fun c!11205 () Bool)

(assert (=> d!17537 (= c!11205 (and ((_ is Cons!1479) (toList!717 lt!32610)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32610))) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17537 (isStrictlySorted!287 (toList!717 lt!32610))))

(assert (=> d!17537 (= (insertStrictlySorted!54 (toList!717 lt!32610) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33420)))

(declare-fun b!74396 () Bool)

(declare-fun res!39331 () Bool)

(assert (=> b!74396 (=> (not res!39331) (not e!48613))))

(assert (=> b!74396 (= res!39331 (containsKey!135 lt!33420 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74397 () Bool)

(declare-fun e!48614 () List!1483)

(declare-fun call!6574 () List!1483)

(assert (=> b!74397 (= e!48614 call!6574)))

(declare-fun bm!6569 () Bool)

(declare-fun call!6572 () List!1483)

(declare-fun call!6573 () List!1483)

(assert (=> bm!6569 (= call!6572 call!6573)))

(declare-fun b!74398 () Bool)

(assert (=> b!74398 (= e!48615 call!6573)))

(declare-fun e!48611 () List!1483)

(declare-fun b!74399 () Bool)

(assert (=> b!74399 (= e!48611 (insertStrictlySorted!54 (t!5031 (toList!717 lt!32610)) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74400 () Bool)

(assert (=> b!74400 (= e!48614 call!6574)))

(declare-fun b!74401 () Bool)

(assert (=> b!74401 (= e!48613 (contains!722 lt!33420 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74402 () Bool)

(declare-fun c!11203 () Bool)

(assert (=> b!74402 (= c!11203 (and ((_ is Cons!1479) (toList!717 lt!32610)) (bvsgt (_1!1071 (h!2066 (toList!717 lt!32610))) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun e!48612 () List!1483)

(assert (=> b!74402 (= e!48612 e!48614)))

(declare-fun bm!6570 () Bool)

(assert (=> bm!6570 (= call!6573 ($colon$colon!65 e!48611 (ite c!11205 (h!2066 (toList!717 lt!32610)) (tuple2!2121 (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun c!11206 () Bool)

(assert (=> bm!6570 (= c!11206 c!11205)))

(declare-fun bm!6571 () Bool)

(assert (=> bm!6571 (= call!6574 call!6572)))

(declare-fun b!74403 () Bool)

(assert (=> b!74403 (= e!48615 e!48612)))

(declare-fun c!11204 () Bool)

(assert (=> b!74403 (= c!11204 (and ((_ is Cons!1479) (toList!717 lt!32610)) (= (_1!1071 (h!2066 (toList!717 lt!32610))) (_1!1071 (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74404 () Bool)

(assert (=> b!74404 (= e!48612 call!6572)))

(declare-fun b!74405 () Bool)

(assert (=> b!74405 (= e!48611 (ite c!11204 (t!5031 (toList!717 lt!32610)) (ite c!11203 (Cons!1479 (h!2066 (toList!717 lt!32610)) (t!5031 (toList!717 lt!32610))) Nil!1480)))))

(assert (= (and d!17537 c!11205) b!74398))

(assert (= (and d!17537 (not c!11205)) b!74403))

(assert (= (and b!74403 c!11204) b!74404))

(assert (= (and b!74403 (not c!11204)) b!74402))

(assert (= (and b!74402 c!11203) b!74400))

(assert (= (and b!74402 (not c!11203)) b!74397))

(assert (= (or b!74400 b!74397) bm!6571))

(assert (= (or b!74404 bm!6571) bm!6569))

(assert (= (or b!74398 bm!6569) bm!6570))

(assert (= (and bm!6570 c!11206) b!74399))

(assert (= (and bm!6570 (not c!11206)) b!74405))

(assert (= (and d!17537 res!39332) b!74396))

(assert (= (and b!74396 res!39331) b!74401))

(declare-fun m!73379 () Bool)

(assert (=> bm!6570 m!73379))

(declare-fun m!73381 () Bool)

(assert (=> d!17537 m!73381))

(declare-fun m!73383 () Bool)

(assert (=> d!17537 m!73383))

(declare-fun m!73385 () Bool)

(assert (=> b!74399 m!73385))

(declare-fun m!73387 () Bool)

(assert (=> b!74401 m!73387))

(declare-fun m!73389 () Bool)

(assert (=> b!74396 m!73389))

(assert (=> d!16957 d!17537))

(declare-fun d!17539 () Bool)

(declare-fun c!11207 () Bool)

(assert (=> d!17539 (= c!11207 ((_ is Nil!1480) (toList!717 lt!32672)))))

(declare-fun e!48616 () (InoxSet tuple2!2120))

(assert (=> d!17539 (= (content!77 (toList!717 lt!32672)) e!48616)))

(declare-fun b!74406 () Bool)

(assert (=> b!74406 (= e!48616 ((as const (Array tuple2!2120 Bool)) false))))

(declare-fun b!74407 () Bool)

(assert (=> b!74407 (= e!48616 ((_ map or) (store ((as const (Array tuple2!2120 Bool)) false) (h!2066 (toList!717 lt!32672)) true) (content!77 (t!5031 (toList!717 lt!32672)))))))

(assert (= (and d!17539 c!11207) b!74406))

(assert (= (and d!17539 (not c!11207)) b!74407))

(declare-fun m!73391 () Bool)

(assert (=> b!74407 m!73391))

(assert (=> b!74407 m!73015))

(assert (=> d!16927 d!17539))

(declare-fun d!17541 () Bool)

(declare-fun res!39334 () Bool)

(declare-fun e!48618 () Bool)

(assert (=> d!17541 (=> res!39334 e!48618)))

(assert (=> d!17541 (= res!39334 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!17541 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992)))) e!48618)))

(declare-fun b!74408 () Bool)

(declare-fun e!48619 () Bool)

(assert (=> b!74408 (= e!48618 e!48619)))

(declare-fun c!11208 () Bool)

(assert (=> b!74408 (= c!11208 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6572 () Bool)

(declare-fun call!6575 () Bool)

(assert (=> bm!6572 (= call!6575 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!3863 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992)))))))

(declare-fun b!74409 () Bool)

(assert (=> b!74409 (= e!48619 call!6575)))

(declare-fun b!74410 () Bool)

(declare-fun e!48617 () Bool)

(assert (=> b!74410 (= e!48617 call!6575)))

(declare-fun b!74411 () Bool)

(assert (=> b!74411 (= e!48619 e!48617)))

(declare-fun lt!33422 () (_ BitVec 64))

(assert (=> b!74411 (= lt!33422 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!33421 () Unit!2066)

(assert (=> b!74411 (= lt!33421 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) lt!33422 #b00000000000000000000000000000000))))

(assert (=> b!74411 (arrayContainsKey!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) lt!33422 #b00000000000000000000000000000000)))

(declare-fun lt!33423 () Unit!2066)

(assert (=> b!74411 (= lt!33423 lt!33421)))

(declare-fun res!39333 () Bool)

(assert (=> b!74411 (= res!39333 (= (seekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000) (_keys!3863 (v!2523 (underlying!256 thiss!992))) (mask!6178 (v!2523 (underlying!256 thiss!992)))) (Found!239 #b00000000000000000000000000000000)))))

(assert (=> b!74411 (=> (not res!39333) (not e!48617))))

(assert (= (and d!17541 (not res!39334)) b!74408))

(assert (= (and b!74408 c!11208) b!74411))

(assert (= (and b!74408 (not c!11208)) b!74409))

(assert (= (and b!74411 res!39333) b!74410))

(assert (= (or b!74410 b!74409) bm!6572))

(assert (=> b!74408 m!73205))

(assert (=> b!74408 m!73205))

(assert (=> b!74408 m!73207))

(declare-fun m!73393 () Bool)

(assert (=> bm!6572 m!73393))

(assert (=> b!74411 m!73205))

(declare-fun m!73395 () Bool)

(assert (=> b!74411 m!73395))

(declare-fun m!73397 () Bool)

(assert (=> b!74411 m!73397))

(assert (=> b!74411 m!73205))

(declare-fun m!73399 () Bool)

(assert (=> b!74411 m!73399))

(assert (=> b!73195 d!17541))

(declare-fun b!74412 () Bool)

(declare-fun e!48620 () Option!137)

(assert (=> b!74412 (= e!48620 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32786)))))))

(declare-fun b!74415 () Bool)

(declare-fun e!48621 () Option!137)

(assert (=> b!74415 (= e!48621 None!135)))

(declare-fun b!74414 () Bool)

(assert (=> b!74414 (= e!48621 (getValueByKey!131 (t!5031 (toList!717 lt!32786)) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun c!11209 () Bool)

(declare-fun d!17543 () Bool)

(assert (=> d!17543 (= c!11209 (and ((_ is Cons!1479) (toList!717 lt!32786)) (= (_1!1071 (h!2066 (toList!717 lt!32786))) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (=> d!17543 (= (getValueByKey!131 (toList!717 lt!32786) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) e!48620)))

(declare-fun b!74413 () Bool)

(assert (=> b!74413 (= e!48620 e!48621)))

(declare-fun c!11210 () Bool)

(assert (=> b!74413 (= c!11210 (and ((_ is Cons!1479) (toList!717 lt!32786)) (not (= (_1!1071 (h!2066 (toList!717 lt!32786))) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))))

(assert (= (and d!17543 c!11209) b!74412))

(assert (= (and d!17543 (not c!11209)) b!74413))

(assert (= (and b!74413 c!11210) b!74414))

(assert (= (and b!74413 (not c!11210)) b!74415))

(declare-fun m!73401 () Bool)

(assert (=> b!74414 m!73401))

(assert (=> b!73329 d!17543))

(declare-fun d!17545 () Bool)

(declare-fun e!48623 () Bool)

(assert (=> d!17545 e!48623))

(declare-fun res!39335 () Bool)

(assert (=> d!17545 (=> res!39335 e!48623)))

(declare-fun lt!33427 () Bool)

(assert (=> d!17545 (= res!39335 (not lt!33427))))

(declare-fun lt!33425 () Bool)

(assert (=> d!17545 (= lt!33427 lt!33425)))

(declare-fun lt!33424 () Unit!2066)

(declare-fun e!48622 () Unit!2066)

(assert (=> d!17545 (= lt!33424 e!48622)))

(declare-fun c!11211 () Bool)

(assert (=> d!17545 (= c!11211 lt!33425)))

(assert (=> d!17545 (= lt!33425 (containsKey!135 (toList!717 lt!32720) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!17545 (= (contains!719 lt!32720 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33427)))

(declare-fun b!74416 () Bool)

(declare-fun lt!33426 () Unit!2066)

(assert (=> b!74416 (= e!48622 lt!33426)))

(assert (=> b!74416 (= lt!33426 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32720) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> b!74416 (isDefined!85 (getValueByKey!131 (toList!717 lt!32720) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74417 () Bool)

(declare-fun Unit!2132 () Unit!2066)

(assert (=> b!74417 (= e!48622 Unit!2132)))

(declare-fun b!74418 () Bool)

(assert (=> b!74418 (= e!48623 (isDefined!85 (getValueByKey!131 (toList!717 lt!32720) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17545 c!11211) b!74416))

(assert (= (and d!17545 (not c!11211)) b!74417))

(assert (= (and d!17545 (not res!39335)) b!74418))

(declare-fun m!73403 () Bool)

(assert (=> d!17545 m!73403))

(declare-fun m!73405 () Bool)

(assert (=> b!74416 m!73405))

(assert (=> b!74416 m!71323))

(assert (=> b!74416 m!71323))

(declare-fun m!73407 () Bool)

(assert (=> b!74416 m!73407))

(assert (=> b!74418 m!71323))

(assert (=> b!74418 m!71323))

(assert (=> b!74418 m!73407))

(assert (=> d!16825 d!17545))

(declare-fun b!74419 () Bool)

(declare-fun e!48624 () Option!137)

(assert (=> b!74419 (= e!48624 (Some!136 (_2!1071 (h!2066 lt!32721))))))

(declare-fun b!74422 () Bool)

(declare-fun e!48625 () Option!137)

(assert (=> b!74422 (= e!48625 None!135)))

(declare-fun b!74421 () Bool)

(assert (=> b!74421 (= e!48625 (getValueByKey!131 (t!5031 lt!32721) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17547 () Bool)

(declare-fun c!11212 () Bool)

(assert (=> d!17547 (= c!11212 (and ((_ is Cons!1479) lt!32721) (= (_1!1071 (h!2066 lt!32721)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17547 (= (getValueByKey!131 lt!32721 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48624)))

(declare-fun b!74420 () Bool)

(assert (=> b!74420 (= e!48624 e!48625)))

(declare-fun c!11213 () Bool)

(assert (=> b!74420 (= c!11213 (and ((_ is Cons!1479) lt!32721) (not (= (_1!1071 (h!2066 lt!32721)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17547 c!11212) b!74419))

(assert (= (and d!17547 (not c!11212)) b!74420))

(assert (= (and b!74420 c!11213) b!74421))

(assert (= (and b!74420 (not c!11213)) b!74422))

(declare-fun m!73409 () Bool)

(assert (=> b!74421 m!73409))

(assert (=> d!16825 d!17547))

(declare-fun d!17549 () Bool)

(assert (=> d!17549 (= (getValueByKey!131 lt!32721 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!33428 () Unit!2066)

(assert (=> d!17549 (= lt!33428 (choose!420 lt!32721 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun e!48626 () Bool)

(assert (=> d!17549 e!48626))

(declare-fun res!39336 () Bool)

(assert (=> d!17549 (=> (not res!39336) (not e!48626))))

(assert (=> d!17549 (= res!39336 (isStrictlySorted!287 lt!32721))))

(assert (=> d!17549 (= (lemmaContainsTupThenGetReturnValue!51 lt!32721 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33428)))

(declare-fun b!74423 () Bool)

(declare-fun res!39337 () Bool)

(assert (=> b!74423 (=> (not res!39337) (not e!48626))))

(assert (=> b!74423 (= res!39337 (containsKey!135 lt!32721 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74424 () Bool)

(assert (=> b!74424 (= e!48626 (contains!722 lt!32721 (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17549 res!39336) b!74423))

(assert (= (and b!74423 res!39337) b!74424))

(assert (=> d!17549 m!71317))

(declare-fun m!73411 () Bool)

(assert (=> d!17549 m!73411))

(declare-fun m!73413 () Bool)

(assert (=> d!17549 m!73413))

(declare-fun m!73415 () Bool)

(assert (=> b!74423 m!73415))

(declare-fun m!73417 () Bool)

(assert (=> b!74424 m!73417))

(assert (=> d!16825 d!17549))

(declare-fun d!17551 () Bool)

(declare-fun e!48629 () Bool)

(assert (=> d!17551 e!48629))

(declare-fun res!39339 () Bool)

(assert (=> d!17551 (=> (not res!39339) (not e!48629))))

(declare-fun lt!33429 () List!1483)

(assert (=> d!17551 (= res!39339 (isStrictlySorted!287 lt!33429))))

(declare-fun e!48631 () List!1483)

(assert (=> d!17551 (= lt!33429 e!48631)))

(declare-fun c!11216 () Bool)

(assert (=> d!17551 (= c!11216 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) (bvslt (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17551 (isStrictlySorted!287 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (=> d!17551 (= (insertStrictlySorted!54 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33429)))

(declare-fun b!74425 () Bool)

(declare-fun res!39338 () Bool)

(assert (=> b!74425 (=> (not res!39338) (not e!48629))))

(assert (=> b!74425 (= res!39338 (containsKey!135 lt!33429 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74426 () Bool)

(declare-fun e!48630 () List!1483)

(declare-fun call!6578 () List!1483)

(assert (=> b!74426 (= e!48630 call!6578)))

(declare-fun bm!6573 () Bool)

(declare-fun call!6576 () List!1483)

(declare-fun call!6577 () List!1483)

(assert (=> bm!6573 (= call!6576 call!6577)))

(declare-fun b!74427 () Bool)

(assert (=> b!74427 (= e!48631 call!6577)))

(declare-fun e!48627 () List!1483)

(declare-fun b!74428 () Bool)

(assert (=> b!74428 (= e!48627 (insertStrictlySorted!54 (t!5031 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74429 () Bool)

(assert (=> b!74429 (= e!48630 call!6578)))

(declare-fun b!74430 () Bool)

(assert (=> b!74430 (= e!48629 (contains!722 lt!33429 (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun c!11214 () Bool)

(declare-fun b!74431 () Bool)

(assert (=> b!74431 (= c!11214 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) (bvsgt (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun e!48628 () List!1483)

(assert (=> b!74431 (= e!48628 e!48630)))

(declare-fun bm!6574 () Bool)

(assert (=> bm!6574 (= call!6577 ($colon$colon!65 e!48627 (ite c!11216 (h!2066 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun c!11217 () Bool)

(assert (=> bm!6574 (= c!11217 c!11216)))

(declare-fun bm!6575 () Bool)

(assert (=> bm!6575 (= call!6578 call!6576)))

(declare-fun b!74432 () Bool)

(assert (=> b!74432 (= e!48631 e!48628)))

(declare-fun c!11215 () Bool)

(assert (=> b!74432 (= c!11215 (and ((_ is Cons!1479) (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) (= (_1!1071 (h!2066 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74433 () Bool)

(assert (=> b!74433 (= e!48628 call!6576)))

(declare-fun b!74434 () Bool)

(assert (=> b!74434 (= e!48627 (ite c!11215 (t!5031 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) (ite c!11214 (Cons!1479 (h!2066 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))) (t!5031 (toList!717 (+!93 lt!32377 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))) Nil!1480)))))

(assert (= (and d!17551 c!11216) b!74427))

(assert (= (and d!17551 (not c!11216)) b!74432))

(assert (= (and b!74432 c!11215) b!74433))

(assert (= (and b!74432 (not c!11215)) b!74431))

(assert (= (and b!74431 c!11214) b!74429))

(assert (= (and b!74431 (not c!11214)) b!74426))

(assert (= (or b!74429 b!74426) bm!6575))

(assert (= (or b!74433 bm!6575) bm!6573))

(assert (= (or b!74427 bm!6573) bm!6574))

(assert (= (and bm!6574 c!11217) b!74428))

(assert (= (and bm!6574 (not c!11217)) b!74434))

(assert (= (and d!17551 res!39339) b!74425))

(assert (= (and b!74425 res!39338) b!74430))

(declare-fun m!73419 () Bool)

(assert (=> bm!6574 m!73419))

(declare-fun m!73421 () Bool)

(assert (=> d!17551 m!73421))

(declare-fun m!73423 () Bool)

(assert (=> d!17551 m!73423))

(declare-fun m!73425 () Bool)

(assert (=> b!74428 m!73425))

(declare-fun m!73427 () Bool)

(assert (=> b!74430 m!73427))

(declare-fun m!73429 () Bool)

(assert (=> b!74425 m!73429))

(assert (=> d!16825 d!17551))

(declare-fun d!17553 () Bool)

(assert (=> d!17553 (= (get!1145 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2522 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!73238 d!17553))

(assert (=> d!16811 d!16809))

(declare-fun d!17555 () Bool)

(assert (=> d!17555 (= (getValueByKey!131 lt!32640 (_1!1071 lt!32376)) (Some!136 (_2!1071 lt!32376)))))

(assert (=> d!17555 true))

(declare-fun _$22!388 () Unit!2066)

(assert (=> d!17555 (= (choose!420 lt!32640 (_1!1071 lt!32376) (_2!1071 lt!32376)) _$22!388)))

(declare-fun bs!3198 () Bool)

(assert (= bs!3198 d!17555))

(assert (=> bs!3198 m!71095))

(assert (=> d!16811 d!17555))

(declare-fun d!17557 () Bool)

(declare-fun res!39340 () Bool)

(declare-fun e!48632 () Bool)

(assert (=> d!17557 (=> res!39340 e!48632)))

(assert (=> d!17557 (= res!39340 (or ((_ is Nil!1480) lt!32640) ((_ is Nil!1480) (t!5031 lt!32640))))))

(assert (=> d!17557 (= (isStrictlySorted!287 lt!32640) e!48632)))

(declare-fun b!74435 () Bool)

(declare-fun e!48633 () Bool)

(assert (=> b!74435 (= e!48632 e!48633)))

(declare-fun res!39341 () Bool)

(assert (=> b!74435 (=> (not res!39341) (not e!48633))))

(assert (=> b!74435 (= res!39341 (bvslt (_1!1071 (h!2066 lt!32640)) (_1!1071 (h!2066 (t!5031 lt!32640)))))))

(declare-fun b!74436 () Bool)

(assert (=> b!74436 (= e!48633 (isStrictlySorted!287 (t!5031 lt!32640)))))

(assert (= (and d!17557 (not res!39340)) b!74435))

(assert (= (and b!74435 res!39341) b!74436))

(declare-fun m!73431 () Bool)

(assert (=> b!74436 m!73431))

(assert (=> d!16811 d!17557))

(declare-fun d!17559 () Bool)

(declare-fun e!48635 () Bool)

(assert (=> d!17559 e!48635))

(declare-fun res!39342 () Bool)

(assert (=> d!17559 (=> res!39342 e!48635)))

(declare-fun lt!33433 () Bool)

(assert (=> d!17559 (= res!39342 (not lt!33433))))

(declare-fun lt!33431 () Bool)

(assert (=> d!17559 (= lt!33433 lt!33431)))

(declare-fun lt!33430 () Unit!2066)

(declare-fun e!48634 () Unit!2066)

(assert (=> d!17559 (= lt!33430 e!48634)))

(declare-fun c!11218 () Bool)

(assert (=> d!17559 (= c!11218 lt!33431)))

(assert (=> d!17559 (= lt!33431 (containsKey!135 (toList!717 lt!33012) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!17559 (= (contains!719 lt!33012 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33433)))

(declare-fun b!74437 () Bool)

(declare-fun lt!33432 () Unit!2066)

(assert (=> b!74437 (= e!48634 lt!33432)))

(assert (=> b!74437 (= lt!33432 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!33012) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> b!74437 (isDefined!85 (getValueByKey!131 (toList!717 lt!33012) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74438 () Bool)

(declare-fun Unit!2133 () Unit!2066)

(assert (=> b!74438 (= e!48634 Unit!2133)))

(declare-fun b!74439 () Bool)

(assert (=> b!74439 (= e!48635 (isDefined!85 (getValueByKey!131 (toList!717 lt!33012) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17559 c!11218) b!74437))

(assert (= (and d!17559 (not c!11218)) b!74438))

(assert (= (and d!17559 (not res!39342)) b!74439))

(declare-fun m!73433 () Bool)

(assert (=> d!17559 m!73433))

(declare-fun m!73435 () Bool)

(assert (=> b!74437 m!73435))

(assert (=> b!74437 m!71931))

(assert (=> b!74437 m!71931))

(declare-fun m!73437 () Bool)

(assert (=> b!74437 m!73437))

(assert (=> b!74439 m!71931))

(assert (=> b!74439 m!71931))

(assert (=> b!74439 m!73437))

(assert (=> d!16971 d!17559))

(declare-fun b!74440 () Bool)

(declare-fun e!48636 () Option!137)

(assert (=> b!74440 (= e!48636 (Some!136 (_2!1071 (h!2066 lt!33013))))))

(declare-fun b!74443 () Bool)

(declare-fun e!48637 () Option!137)

(assert (=> b!74443 (= e!48637 None!135)))

(declare-fun b!74442 () Bool)

(assert (=> b!74442 (= e!48637 (getValueByKey!131 (t!5031 lt!33013) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17561 () Bool)

(declare-fun c!11219 () Bool)

(assert (=> d!17561 (= c!11219 (and ((_ is Cons!1479) lt!33013) (= (_1!1071 (h!2066 lt!33013)) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17561 (= (getValueByKey!131 lt!33013 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48636)))

(declare-fun b!74441 () Bool)

(assert (=> b!74441 (= e!48636 e!48637)))

(declare-fun c!11220 () Bool)

(assert (=> b!74441 (= c!11220 (and ((_ is Cons!1479) lt!33013) (not (= (_1!1071 (h!2066 lt!33013)) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17561 c!11219) b!74440))

(assert (= (and d!17561 (not c!11219)) b!74441))

(assert (= (and b!74441 c!11220) b!74442))

(assert (= (and b!74441 (not c!11220)) b!74443))

(declare-fun m!73439 () Bool)

(assert (=> b!74442 m!73439))

(assert (=> d!16971 d!17561))

(declare-fun d!17563 () Bool)

(assert (=> d!17563 (= (getValueByKey!131 lt!33013 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!33434 () Unit!2066)

(assert (=> d!17563 (= lt!33434 (choose!420 lt!33013 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun e!48638 () Bool)

(assert (=> d!17563 e!48638))

(declare-fun res!39343 () Bool)

(assert (=> d!17563 (=> (not res!39343) (not e!48638))))

(assert (=> d!17563 (= res!39343 (isStrictlySorted!287 lt!33013))))

(assert (=> d!17563 (= (lemmaContainsTupThenGetReturnValue!51 lt!33013 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33434)))

(declare-fun b!74444 () Bool)

(declare-fun res!39344 () Bool)

(assert (=> b!74444 (=> (not res!39344) (not e!48638))))

(assert (=> b!74444 (= res!39344 (containsKey!135 lt!33013 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74445 () Bool)

(assert (=> b!74445 (= e!48638 (contains!722 lt!33013 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17563 res!39343) b!74444))

(assert (= (and b!74444 res!39344) b!74445))

(assert (=> d!17563 m!71925))

(declare-fun m!73441 () Bool)

(assert (=> d!17563 m!73441))

(declare-fun m!73443 () Bool)

(assert (=> d!17563 m!73443))

(declare-fun m!73445 () Bool)

(assert (=> b!74444 m!73445))

(declare-fun m!73447 () Bool)

(assert (=> b!74445 m!73447))

(assert (=> d!16971 d!17563))

(declare-fun d!17565 () Bool)

(declare-fun e!48641 () Bool)

(assert (=> d!17565 e!48641))

(declare-fun res!39346 () Bool)

(assert (=> d!17565 (=> (not res!39346) (not e!48641))))

(declare-fun lt!33435 () List!1483)

(assert (=> d!17565 (= res!39346 (isStrictlySorted!287 lt!33435))))

(declare-fun e!48643 () List!1483)

(assert (=> d!17565 (= lt!33435 e!48643)))

(declare-fun c!11223 () Bool)

(assert (=> d!17565 (= c!11223 (and ((_ is Cons!1479) (toList!717 lt!32621)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32621))) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17565 (isStrictlySorted!287 (toList!717 lt!32621))))

(assert (=> d!17565 (= (insertStrictlySorted!54 (toList!717 lt!32621) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33435)))

(declare-fun b!74446 () Bool)

(declare-fun res!39345 () Bool)

(assert (=> b!74446 (=> (not res!39345) (not e!48641))))

(assert (=> b!74446 (= res!39345 (containsKey!135 lt!33435 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74447 () Bool)

(declare-fun e!48642 () List!1483)

(declare-fun call!6581 () List!1483)

(assert (=> b!74447 (= e!48642 call!6581)))

(declare-fun bm!6576 () Bool)

(declare-fun call!6579 () List!1483)

(declare-fun call!6580 () List!1483)

(assert (=> bm!6576 (= call!6579 call!6580)))

(declare-fun b!74448 () Bool)

(assert (=> b!74448 (= e!48643 call!6580)))

(declare-fun e!48639 () List!1483)

(declare-fun b!74449 () Bool)

(assert (=> b!74449 (= e!48639 (insertStrictlySorted!54 (t!5031 (toList!717 lt!32621)) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74450 () Bool)

(assert (=> b!74450 (= e!48642 call!6581)))

(declare-fun b!74451 () Bool)

(assert (=> b!74451 (= e!48641 (contains!722 lt!33435 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74452 () Bool)

(declare-fun c!11221 () Bool)

(assert (=> b!74452 (= c!11221 (and ((_ is Cons!1479) (toList!717 lt!32621)) (bvsgt (_1!1071 (h!2066 (toList!717 lt!32621))) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun e!48640 () List!1483)

(assert (=> b!74452 (= e!48640 e!48642)))

(declare-fun bm!6577 () Bool)

(assert (=> bm!6577 (= call!6580 ($colon$colon!65 e!48639 (ite c!11223 (h!2066 (toList!717 lt!32621)) (tuple2!2121 (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun c!11224 () Bool)

(assert (=> bm!6577 (= c!11224 c!11223)))

(declare-fun bm!6578 () Bool)

(assert (=> bm!6578 (= call!6581 call!6579)))

(declare-fun b!74453 () Bool)

(assert (=> b!74453 (= e!48643 e!48640)))

(declare-fun c!11222 () Bool)

(assert (=> b!74453 (= c!11222 (and ((_ is Cons!1479) (toList!717 lt!32621)) (= (_1!1071 (h!2066 (toList!717 lt!32621))) (_1!1071 (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74454 () Bool)

(assert (=> b!74454 (= e!48640 call!6579)))

(declare-fun b!74455 () Bool)

(assert (=> b!74455 (= e!48639 (ite c!11222 (t!5031 (toList!717 lt!32621)) (ite c!11221 (Cons!1479 (h!2066 (toList!717 lt!32621)) (t!5031 (toList!717 lt!32621))) Nil!1480)))))

(assert (= (and d!17565 c!11223) b!74448))

(assert (= (and d!17565 (not c!11223)) b!74453))

(assert (= (and b!74453 c!11222) b!74454))

(assert (= (and b!74453 (not c!11222)) b!74452))

(assert (= (and b!74452 c!11221) b!74450))

(assert (= (and b!74452 (not c!11221)) b!74447))

(assert (= (or b!74450 b!74447) bm!6578))

(assert (= (or b!74454 bm!6578) bm!6576))

(assert (= (or b!74448 bm!6576) bm!6577))

(assert (= (and bm!6577 c!11224) b!74449))

(assert (= (and bm!6577 (not c!11224)) b!74455))

(assert (= (and d!17565 res!39346) b!74446))

(assert (= (and b!74446 res!39345) b!74451))

(declare-fun m!73449 () Bool)

(assert (=> bm!6577 m!73449))

(declare-fun m!73451 () Bool)

(assert (=> d!17565 m!73451))

(declare-fun m!73453 () Bool)

(assert (=> d!17565 m!73453))

(declare-fun m!73455 () Bool)

(assert (=> b!74449 m!73455))

(declare-fun m!73457 () Bool)

(assert (=> b!74451 m!73457))

(declare-fun m!73459 () Bool)

(assert (=> b!74446 m!73459))

(assert (=> d!16971 d!17565))

(declare-fun d!17567 () Bool)

(declare-fun e!48645 () Bool)

(assert (=> d!17567 e!48645))

(declare-fun res!39347 () Bool)

(assert (=> d!17567 (=> res!39347 e!48645)))

(declare-fun lt!33439 () Bool)

(assert (=> d!17567 (= res!39347 (not lt!33439))))

(declare-fun lt!33437 () Bool)

(assert (=> d!17567 (= lt!33439 lt!33437)))

(declare-fun lt!33436 () Unit!2066)

(declare-fun e!48644 () Unit!2066)

(assert (=> d!17567 (= lt!33436 e!48644)))

(declare-fun c!11225 () Bool)

(assert (=> d!17567 (= c!11225 lt!33437)))

(assert (=> d!17567 (= lt!33437 (containsKey!135 (toList!717 lt!32678) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!17567 (= (contains!719 lt!32678 #b1000000000000000000000000000000000000000000000000000000000000000) lt!33439)))

(declare-fun b!74456 () Bool)

(declare-fun lt!33438 () Unit!2066)

(assert (=> b!74456 (= e!48644 lt!33438)))

(assert (=> b!74456 (= lt!33438 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32678) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!74456 (isDefined!85 (getValueByKey!131 (toList!717 lt!32678) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74457 () Bool)

(declare-fun Unit!2134 () Unit!2066)

(assert (=> b!74457 (= e!48644 Unit!2134)))

(declare-fun b!74458 () Bool)

(assert (=> b!74458 (= e!48645 (isDefined!85 (getValueByKey!131 (toList!717 lt!32678) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17567 c!11225) b!74456))

(assert (= (and d!17567 (not c!11225)) b!74457))

(assert (= (and d!17567 (not res!39347)) b!74458))

(declare-fun m!73461 () Bool)

(assert (=> d!17567 m!73461))

(declare-fun m!73463 () Bool)

(assert (=> b!74456 m!73463))

(declare-fun m!73465 () Bool)

(assert (=> b!74456 m!73465))

(assert (=> b!74456 m!73465))

(declare-fun m!73467 () Bool)

(assert (=> b!74456 m!73467))

(assert (=> b!74458 m!73465))

(assert (=> b!74458 m!73465))

(assert (=> b!74458 m!73467))

(assert (=> b!73127 d!17567))

(declare-fun d!17569 () Bool)

(declare-fun lt!33440 () Bool)

(assert (=> d!17569 (= lt!33440 (select (content!77 (toList!717 lt!33000)) (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun e!48647 () Bool)

(assert (=> d!17569 (= lt!33440 e!48647)))

(declare-fun res!39348 () Bool)

(assert (=> d!17569 (=> (not res!39348) (not e!48647))))

(assert (=> d!17569 (= res!39348 ((_ is Cons!1479) (toList!717 lt!33000)))))

(assert (=> d!17569 (= (contains!722 (toList!717 lt!33000) (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!33440)))

(declare-fun b!74459 () Bool)

(declare-fun e!48646 () Bool)

(assert (=> b!74459 (= e!48647 e!48646)))

(declare-fun res!39349 () Bool)

(assert (=> b!74459 (=> res!39349 e!48646)))

(assert (=> b!74459 (= res!39349 (= (h!2066 (toList!717 lt!33000)) (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!74460 () Bool)

(assert (=> b!74460 (= e!48646 (contains!722 (t!5031 (toList!717 lt!33000)) (tuple2!2121 lt!32620 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!17569 res!39348) b!74459))

(assert (= (and b!74459 (not res!39349)) b!74460))

(declare-fun m!73469 () Bool)

(assert (=> d!17569 m!73469))

(declare-fun m!73471 () Bool)

(assert (=> d!17569 m!73471))

(declare-fun m!73473 () Bool)

(assert (=> b!74460 m!73473))

(assert (=> b!73541 d!17569))

(declare-fun d!17571 () Bool)

(assert (=> d!17571 (= ($colon$colon!65 e!47921 (ite c!10891 (h!2066 (toList!717 lt!32377)) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376)))) (Cons!1479 (ite c!10891 (h!2066 (toList!717 lt!32377)) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))) e!47921))))

(assert (=> bm!6448 d!17571))

(declare-fun d!17573 () Bool)

(declare-fun lt!33441 () Bool)

(assert (=> d!17573 (= lt!33441 (select (content!77 (t!5031 (toList!717 lt!32643))) lt!32376))))

(declare-fun e!48649 () Bool)

(assert (=> d!17573 (= lt!33441 e!48649)))

(declare-fun res!39350 () Bool)

(assert (=> d!17573 (=> (not res!39350) (not e!48649))))

(assert (=> d!17573 (= res!39350 ((_ is Cons!1479) (t!5031 (toList!717 lt!32643))))))

(assert (=> d!17573 (= (contains!722 (t!5031 (toList!717 lt!32643)) lt!32376) lt!33441)))

(declare-fun b!74461 () Bool)

(declare-fun e!48648 () Bool)

(assert (=> b!74461 (= e!48649 e!48648)))

(declare-fun res!39351 () Bool)

(assert (=> b!74461 (=> res!39351 e!48648)))

(assert (=> b!74461 (= res!39351 (= (h!2066 (t!5031 (toList!717 lt!32643))) lt!32376))))

(declare-fun b!74462 () Bool)

(assert (=> b!74462 (= e!48648 (contains!722 (t!5031 (t!5031 (toList!717 lt!32643))) lt!32376))))

(assert (= (and d!17573 res!39350) b!74461))

(assert (= (and b!74461 (not res!39351)) b!74462))

(assert (=> d!17573 m!71995))

(declare-fun m!73475 () Bool)

(assert (=> d!17573 m!73475))

(declare-fun m!73477 () Bool)

(assert (=> b!74462 m!73477))

(assert (=> b!73570 d!17573))

(declare-fun d!17575 () Bool)

(declare-fun res!39352 () Bool)

(declare-fun e!48650 () Bool)

(assert (=> d!17575 (=> (not res!39352) (not e!48650))))

(assert (=> d!17575 (= res!39352 (simpleValid!51 (_2!1072 lt!32894)))))

(assert (=> d!17575 (= (valid!300 (_2!1072 lt!32894)) e!48650)))

(declare-fun b!74463 () Bool)

(declare-fun res!39353 () Bool)

(assert (=> b!74463 (=> (not res!39353) (not e!48650))))

(assert (=> b!74463 (= res!39353 (= (arrayCountValidKeys!0 (_keys!3863 (_2!1072 lt!32894)) #b00000000000000000000000000000000 (size!2085 (_keys!3863 (_2!1072 lt!32894)))) (_size!396 (_2!1072 lt!32894))))))

(declare-fun b!74464 () Bool)

(declare-fun res!39354 () Bool)

(assert (=> b!74464 (=> (not res!39354) (not e!48650))))

(assert (=> b!74464 (= res!39354 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!3863 (_2!1072 lt!32894)) (mask!6178 (_2!1072 lt!32894))))))

(declare-fun b!74465 () Bool)

(assert (=> b!74465 (= e!48650 (arrayNoDuplicates!0 (_keys!3863 (_2!1072 lt!32894)) #b00000000000000000000000000000000 Nil!1481))))

(assert (= (and d!17575 res!39352) b!74463))

(assert (= (and b!74463 res!39353) b!74464))

(assert (= (and b!74464 res!39354) b!74465))

(declare-fun m!73479 () Bool)

(assert (=> d!17575 m!73479))

(declare-fun m!73481 () Bool)

(assert (=> b!74463 m!73481))

(declare-fun m!73483 () Bool)

(assert (=> b!74464 m!73483))

(declare-fun m!73485 () Bool)

(assert (=> b!74465 m!73485))

(assert (=> b!73410 d!17575))

(declare-fun d!17577 () Bool)

(declare-fun e!48652 () Bool)

(assert (=> d!17577 e!48652))

(declare-fun res!39355 () Bool)

(assert (=> d!17577 (=> res!39355 e!48652)))

(declare-fun lt!33445 () Bool)

(assert (=> d!17577 (= res!39355 (not lt!33445))))

(declare-fun lt!33443 () Bool)

(assert (=> d!17577 (= lt!33445 lt!33443)))

(declare-fun lt!33442 () Unit!2066)

(declare-fun e!48651 () Unit!2066)

(assert (=> d!17577 (= lt!33442 e!48651)))

(declare-fun c!11226 () Bool)

(assert (=> d!17577 (= c!11226 lt!33443)))

(assert (=> d!17577 (= lt!33443 (containsKey!135 (toList!717 lt!32725) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17577 (= (contains!719 lt!32725 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) lt!33445)))

(declare-fun b!74466 () Bool)

(declare-fun lt!33444 () Unit!2066)

(assert (=> b!74466 (= e!48651 lt!33444)))

(assert (=> b!74466 (= lt!33444 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32725) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74466 (isDefined!85 (getValueByKey!131 (toList!717 lt!32725) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74467 () Bool)

(declare-fun Unit!2135 () Unit!2066)

(assert (=> b!74467 (= e!48651 Unit!2135)))

(declare-fun b!74468 () Bool)

(assert (=> b!74468 (= e!48652 (isDefined!85 (getValueByKey!131 (toList!717 lt!32725) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17577 c!11226) b!74466))

(assert (= (and d!17577 (not c!11226)) b!74467))

(assert (= (and d!17577 (not res!39355)) b!74468))

(assert (=> d!17577 m!71361))

(declare-fun m!73487 () Bool)

(assert (=> d!17577 m!73487))

(assert (=> b!74466 m!71361))

(declare-fun m!73489 () Bool)

(assert (=> b!74466 m!73489))

(assert (=> b!74466 m!71361))

(declare-fun m!73491 () Bool)

(assert (=> b!74466 m!73491))

(assert (=> b!74466 m!73491))

(declare-fun m!73493 () Bool)

(assert (=> b!74466 m!73493))

(assert (=> b!74468 m!71361))

(assert (=> b!74468 m!73491))

(assert (=> b!74468 m!73491))

(assert (=> b!74468 m!73493))

(assert (=> b!73222 d!17577))

(assert (=> b!73136 d!17405))

(assert (=> b!73136 d!17407))

(declare-fun d!17579 () Bool)

(declare-fun lt!33446 () Bool)

(assert (=> d!17579 (= lt!33446 (select (content!77 (toList!717 lt!33031)) (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun e!48654 () Bool)

(assert (=> d!17579 (= lt!33446 e!48654)))

(declare-fun res!39356 () Bool)

(assert (=> d!17579 (=> (not res!39356) (not e!48654))))

(assert (=> d!17579 (= res!39356 ((_ is Cons!1479) (toList!717 lt!33031)))))

(assert (=> d!17579 (= (contains!722 (toList!717 lt!33031) (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) lt!33446)))

(declare-fun b!74469 () Bool)

(declare-fun e!48653 () Bool)

(assert (=> b!74469 (= e!48654 e!48653)))

(declare-fun res!39357 () Bool)

(assert (=> b!74469 (=> res!39357 e!48653)))

(assert (=> b!74469 (= res!39357 (= (h!2066 (toList!717 lt!33031)) (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun b!74470 () Bool)

(assert (=> b!74470 (= e!48653 (contains!722 (t!5031 (toList!717 lt!33031)) (ite c!10789 (ite c!10800 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 lt!32380) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 lt!32380)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(assert (= (and d!17579 res!39356) b!74469))

(assert (= (and b!74469 (not res!39357)) b!74470))

(declare-fun m!73495 () Bool)

(assert (=> d!17579 m!73495))

(declare-fun m!73497 () Bool)

(assert (=> d!17579 m!73497))

(declare-fun m!73499 () Bool)

(assert (=> b!74470 m!73499))

(assert (=> b!73576 d!17579))

(declare-fun d!17581 () Bool)

(assert (=> d!17581 (isDefined!85 (getValueByKey!131 (toList!717 lt!32668) (_1!1071 lt!32383)))))

(declare-fun lt!33447 () Unit!2066)

(assert (=> d!17581 (= lt!33447 (choose!426 (toList!717 lt!32668) (_1!1071 lt!32383)))))

(declare-fun e!48655 () Bool)

(assert (=> d!17581 e!48655))

(declare-fun res!39358 () Bool)

(assert (=> d!17581 (=> (not res!39358) (not e!48655))))

(assert (=> d!17581 (= res!39358 (isStrictlySorted!287 (toList!717 lt!32668)))))

(assert (=> d!17581 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32668) (_1!1071 lt!32383)) lt!33447)))

(declare-fun b!74471 () Bool)

(assert (=> b!74471 (= e!48655 (containsKey!135 (toList!717 lt!32668) (_1!1071 lt!32383)))))

(assert (= (and d!17581 res!39358) b!74471))

(assert (=> d!17581 m!71145))

(assert (=> d!17581 m!71145))

(assert (=> d!17581 m!71511))

(declare-fun m!73501 () Bool)

(assert (=> d!17581 m!73501))

(declare-fun m!73503 () Bool)

(assert (=> d!17581 m!73503))

(assert (=> b!74471 m!71507))

(assert (=> b!73310 d!17581))

(assert (=> b!73310 d!17081))

(assert (=> b!73310 d!16783))

(assert (=> b!73233 d!17089))

(declare-fun d!17583 () Bool)

(declare-fun c!11227 () Bool)

(assert (=> d!17583 (= c!11227 ((_ is Nil!1480) (toList!717 lt!32639)))))

(declare-fun e!48656 () (InoxSet tuple2!2120))

(assert (=> d!17583 (= (content!77 (toList!717 lt!32639)) e!48656)))

(declare-fun b!74472 () Bool)

(assert (=> b!74472 (= e!48656 ((as const (Array tuple2!2120 Bool)) false))))

(declare-fun b!74473 () Bool)

(assert (=> b!74473 (= e!48656 ((_ map or) (store ((as const (Array tuple2!2120 Bool)) false) (h!2066 (toList!717 lt!32639)) true) (content!77 (t!5031 (toList!717 lt!32639)))))))

(assert (= (and d!17583 c!11227) b!74472))

(assert (= (and d!17583 (not c!11227)) b!74473))

(declare-fun m!73505 () Bool)

(assert (=> b!74473 m!73505))

(assert (=> b!74473 m!73179))

(assert (=> d!16981 d!17583))

(declare-fun d!17585 () Bool)

(declare-fun e!48658 () Bool)

(assert (=> d!17585 e!48658))

(declare-fun res!39359 () Bool)

(assert (=> d!17585 (=> res!39359 e!48658)))

(declare-fun lt!33451 () Bool)

(assert (=> d!17585 (= res!39359 (not lt!33451))))

(declare-fun lt!33449 () Bool)

(assert (=> d!17585 (= lt!33451 lt!33449)))

(declare-fun lt!33448 () Unit!2066)

(declare-fun e!48657 () Unit!2066)

(assert (=> d!17585 (= lt!33448 e!48657)))

(declare-fun c!11228 () Bool)

(assert (=> d!17585 (= c!11228 lt!33449)))

(assert (=> d!17585 (= lt!33449 (containsKey!135 (toList!717 lt!32712) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!17585 (= (contains!719 lt!32712 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33451)))

(declare-fun b!74474 () Bool)

(declare-fun lt!33450 () Unit!2066)

(assert (=> b!74474 (= e!48657 lt!33450)))

(assert (=> b!74474 (= lt!33450 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32712) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> b!74474 (isDefined!85 (getValueByKey!131 (toList!717 lt!32712) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74475 () Bool)

(declare-fun Unit!2136 () Unit!2066)

(assert (=> b!74475 (= e!48657 Unit!2136)))

(declare-fun b!74476 () Bool)

(assert (=> b!74476 (= e!48658 (isDefined!85 (getValueByKey!131 (toList!717 lt!32712) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17585 c!11228) b!74474))

(assert (= (and d!17585 (not c!11228)) b!74475))

(assert (= (and d!17585 (not res!39359)) b!74476))

(declare-fun m!73507 () Bool)

(assert (=> d!17585 m!73507))

(declare-fun m!73509 () Bool)

(assert (=> b!74474 m!73509))

(assert (=> b!74474 m!71299))

(assert (=> b!74474 m!71299))

(declare-fun m!73511 () Bool)

(assert (=> b!74474 m!73511))

(assert (=> b!74476 m!71299))

(assert (=> b!74476 m!71299))

(assert (=> b!74476 m!73511))

(assert (=> d!16819 d!17585))

(declare-fun b!74477 () Bool)

(declare-fun e!48659 () Option!137)

(assert (=> b!74477 (= e!48659 (Some!136 (_2!1071 (h!2066 lt!32713))))))

(declare-fun b!74480 () Bool)

(declare-fun e!48660 () Option!137)

(assert (=> b!74480 (= e!48660 None!135)))

(declare-fun b!74479 () Bool)

(assert (=> b!74479 (= e!48660 (getValueByKey!131 (t!5031 lt!32713) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17587 () Bool)

(declare-fun c!11229 () Bool)

(assert (=> d!17587 (= c!11229 (and ((_ is Cons!1479) lt!32713) (= (_1!1071 (h!2066 lt!32713)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17587 (= (getValueByKey!131 lt!32713 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48659)))

(declare-fun b!74478 () Bool)

(assert (=> b!74478 (= e!48659 e!48660)))

(declare-fun c!11230 () Bool)

(assert (=> b!74478 (= c!11230 (and ((_ is Cons!1479) lt!32713) (not (= (_1!1071 (h!2066 lt!32713)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17587 c!11229) b!74477))

(assert (= (and d!17587 (not c!11229)) b!74478))

(assert (= (and b!74478 c!11230) b!74479))

(assert (= (and b!74478 (not c!11230)) b!74480))

(declare-fun m!73513 () Bool)

(assert (=> b!74479 m!73513))

(assert (=> d!16819 d!17587))

(declare-fun d!17589 () Bool)

(assert (=> d!17589 (= (getValueByKey!131 lt!32713 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!33452 () Unit!2066)

(assert (=> d!17589 (= lt!33452 (choose!420 lt!32713 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun e!48661 () Bool)

(assert (=> d!17589 e!48661))

(declare-fun res!39360 () Bool)

(assert (=> d!17589 (=> (not res!39360) (not e!48661))))

(assert (=> d!17589 (= res!39360 (isStrictlySorted!287 lt!32713))))

(assert (=> d!17589 (= (lemmaContainsTupThenGetReturnValue!51 lt!32713 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33452)))

(declare-fun b!74481 () Bool)

(declare-fun res!39361 () Bool)

(assert (=> b!74481 (=> (not res!39361) (not e!48661))))

(assert (=> b!74481 (= res!39361 (containsKey!135 lt!32713 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74482 () Bool)

(assert (=> b!74482 (= e!48661 (contains!722 lt!32713 (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17589 res!39360) b!74481))

(assert (= (and b!74481 res!39361) b!74482))

(assert (=> d!17589 m!71293))

(declare-fun m!73515 () Bool)

(assert (=> d!17589 m!73515))

(declare-fun m!73517 () Bool)

(assert (=> d!17589 m!73517))

(declare-fun m!73519 () Bool)

(assert (=> b!74481 m!73519))

(declare-fun m!73521 () Bool)

(assert (=> b!74482 m!73521))

(assert (=> d!16819 d!17589))

(declare-fun d!17591 () Bool)

(declare-fun e!48664 () Bool)

(assert (=> d!17591 e!48664))

(declare-fun res!39363 () Bool)

(assert (=> d!17591 (=> (not res!39363) (not e!48664))))

(declare-fun lt!33453 () List!1483)

(assert (=> d!17591 (= res!39363 (isStrictlySorted!287 lt!33453))))

(declare-fun e!48666 () List!1483)

(assert (=> d!17591 (= lt!33453 e!48666)))

(declare-fun c!11233 () Bool)

(assert (=> d!17591 (= c!11233 (and ((_ is Cons!1479) (toList!717 lt!32377)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17591 (isStrictlySorted!287 (toList!717 lt!32377))))

(assert (=> d!17591 (= (insertStrictlySorted!54 (toList!717 lt!32377) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33453)))

(declare-fun b!74483 () Bool)

(declare-fun res!39362 () Bool)

(assert (=> b!74483 (=> (not res!39362) (not e!48664))))

(assert (=> b!74483 (= res!39362 (containsKey!135 lt!33453 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74484 () Bool)

(declare-fun e!48665 () List!1483)

(declare-fun call!6584 () List!1483)

(assert (=> b!74484 (= e!48665 call!6584)))

(declare-fun bm!6579 () Bool)

(declare-fun call!6582 () List!1483)

(declare-fun call!6583 () List!1483)

(assert (=> bm!6579 (= call!6582 call!6583)))

(declare-fun b!74485 () Bool)

(assert (=> b!74485 (= e!48666 call!6583)))

(declare-fun b!74486 () Bool)

(declare-fun e!48662 () List!1483)

(assert (=> b!74486 (= e!48662 (insertStrictlySorted!54 (t!5031 (toList!717 lt!32377)) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74487 () Bool)

(assert (=> b!74487 (= e!48665 call!6584)))

(declare-fun b!74488 () Bool)

(assert (=> b!74488 (= e!48664 (contains!722 lt!33453 (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74489 () Bool)

(declare-fun c!11231 () Bool)

(assert (=> b!74489 (= c!11231 (and ((_ is Cons!1479) (toList!717 lt!32377)) (bvsgt (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun e!48663 () List!1483)

(assert (=> b!74489 (= e!48663 e!48665)))

(declare-fun bm!6580 () Bool)

(assert (=> bm!6580 (= call!6583 ($colon$colon!65 e!48662 (ite c!11233 (h!2066 (toList!717 lt!32377)) (tuple2!2121 (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun c!11234 () Bool)

(assert (=> bm!6580 (= c!11234 c!11233)))

(declare-fun bm!6581 () Bool)

(assert (=> bm!6581 (= call!6584 call!6582)))

(declare-fun b!74490 () Bool)

(assert (=> b!74490 (= e!48666 e!48663)))

(declare-fun c!11232 () Bool)

(assert (=> b!74490 (= c!11232 (and ((_ is Cons!1479) (toList!717 lt!32377)) (= (_1!1071 (h!2066 (toList!717 lt!32377))) (_1!1071 (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74491 () Bool)

(assert (=> b!74491 (= e!48663 call!6582)))

(declare-fun b!74492 () Bool)

(assert (=> b!74492 (= e!48662 (ite c!11232 (t!5031 (toList!717 lt!32377)) (ite c!11231 (Cons!1479 (h!2066 (toList!717 lt!32377)) (t!5031 (toList!717 lt!32377))) Nil!1480)))))

(assert (= (and d!17591 c!11233) b!74485))

(assert (= (and d!17591 (not c!11233)) b!74490))

(assert (= (and b!74490 c!11232) b!74491))

(assert (= (and b!74490 (not c!11232)) b!74489))

(assert (= (and b!74489 c!11231) b!74487))

(assert (= (and b!74489 (not c!11231)) b!74484))

(assert (= (or b!74487 b!74484) bm!6581))

(assert (= (or b!74491 bm!6581) bm!6579))

(assert (= (or b!74485 bm!6579) bm!6580))

(assert (= (and bm!6580 c!11234) b!74486))

(assert (= (and bm!6580 (not c!11234)) b!74492))

(assert (= (and d!17591 res!39363) b!74483))

(assert (= (and b!74483 res!39362) b!74488))

(declare-fun m!73523 () Bool)

(assert (=> bm!6580 m!73523))

(declare-fun m!73525 () Bool)

(assert (=> d!17591 m!73525))

(assert (=> d!17591 m!71451))

(declare-fun m!73527 () Bool)

(assert (=> b!74486 m!73527))

(declare-fun m!73529 () Bool)

(assert (=> b!74488 m!73529))

(declare-fun m!73531 () Bool)

(assert (=> b!74483 m!73531))

(assert (=> d!16819 d!17591))

(declare-fun d!17593 () Bool)

(declare-fun lt!33454 () Bool)

(assert (=> d!17593 (= lt!33454 (select (content!77 lt!32644) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun e!48668 () Bool)

(assert (=> d!17593 (= lt!33454 e!48668)))

(declare-fun res!39364 () Bool)

(assert (=> d!17593 (=> (not res!39364) (not e!48668))))

(assert (=> d!17593 (= res!39364 ((_ is Cons!1479) lt!32644))))

(assert (=> d!17593 (= (contains!722 lt!32644 (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))) lt!33454)))

(declare-fun b!74493 () Bool)

(declare-fun e!48667 () Bool)

(assert (=> b!74493 (= e!48668 e!48667)))

(declare-fun res!39365 () Bool)

(assert (=> b!74493 (=> res!39365 e!48667)))

(assert (=> b!74493 (= res!39365 (= (h!2066 lt!32644) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(declare-fun b!74494 () Bool)

(assert (=> b!74494 (= e!48667 (contains!722 (t!5031 lt!32644) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))))))

(assert (= (and d!17593 res!39364) b!74493))

(assert (= (and b!74493 (not res!39365)) b!74494))

(declare-fun m!73533 () Bool)

(assert (=> d!17593 m!73533))

(declare-fun m!73535 () Bool)

(assert (=> d!17593 m!73535))

(declare-fun m!73537 () Bool)

(assert (=> b!74494 m!73537))

(assert (=> b!73266 d!17593))

(declare-fun d!17595 () Bool)

(assert (=> d!17595 (isDefined!85 (getValueByKey!131 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(declare-fun lt!33455 () Unit!2066)

(assert (=> d!17595 (= lt!33455 (choose!426 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(declare-fun e!48669 () Bool)

(assert (=> d!17595 e!48669))

(declare-fun res!39366 () Bool)

(assert (=> d!17595 (=> (not res!39366) (not e!48669))))

(assert (=> d!17595 (= res!39366 (isStrictlySorted!287 (toList!717 call!6384)))))

(assert (=> d!17595 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))) lt!33455)))

(declare-fun b!74495 () Bool)

(assert (=> b!74495 (= e!48669 (containsKey!135 (toList!717 call!6384) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(assert (= (and d!17595 res!39366) b!74495))

(assert (=> d!17595 m!71017))

(assert (=> d!17595 m!71679))

(assert (=> d!17595 m!71679))

(assert (=> d!17595 m!71681))

(assert (=> d!17595 m!71017))

(declare-fun m!73539 () Bool)

(assert (=> d!17595 m!73539))

(declare-fun m!73541 () Bool)

(assert (=> d!17595 m!73541))

(assert (=> b!74495 m!71017))

(assert (=> b!74495 m!71675))

(assert (=> b!73413 d!17595))

(assert (=> b!73413 d!17097))

(assert (=> b!73413 d!17099))

(declare-fun d!17597 () Bool)

(assert (=> d!17597 (isDefined!85 (getValueByKey!131 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!33456 () Unit!2066)

(assert (=> d!17597 (= lt!33456 (choose!426 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!48670 () Bool)

(assert (=> d!17597 e!48670))

(declare-fun res!39367 () Bool)

(assert (=> d!17597 (=> (not res!39367) (not e!48670))))

(assert (=> d!17597 (= res!39367 (isStrictlySorted!287 (toList!717 lt!32604)))))

(assert (=> d!17597 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!33456)))

(declare-fun b!74496 () Bool)

(assert (=> b!74496 (= e!48670 (containsKey!135 (toList!717 lt!32604) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!17597 res!39367) b!74496))

(assert (=> d!17597 m!70941))

(assert (=> d!17597 m!71395))

(assert (=> d!17597 m!71395))

(assert (=> d!17597 m!71397))

(assert (=> d!17597 m!70941))

(declare-fun m!73543 () Bool)

(assert (=> d!17597 m!73543))

(assert (=> d!17597 m!72553))

(assert (=> b!74496 m!70941))

(assert (=> b!74496 m!71391))

(assert (=> b!73226 d!17597))

(assert (=> b!73226 d!17011))

(assert (=> b!73226 d!17013))

(declare-fun b!74497 () Bool)

(declare-fun e!48671 () Option!137)

(assert (=> b!74497 (= e!48671 (Some!136 (_2!1071 (h!2066 (t!5031 (toList!717 lt!32643))))))))

(declare-fun b!74500 () Bool)

(declare-fun e!48672 () Option!137)

(assert (=> b!74500 (= e!48672 None!135)))

(declare-fun b!74499 () Bool)

(assert (=> b!74499 (= e!48672 (getValueByKey!131 (t!5031 (t!5031 (toList!717 lt!32643))) (_1!1071 lt!32376)))))

(declare-fun d!17599 () Bool)

(declare-fun c!11235 () Bool)

(assert (=> d!17599 (= c!11235 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32643))) (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32643)))) (_1!1071 lt!32376))))))

(assert (=> d!17599 (= (getValueByKey!131 (t!5031 (toList!717 lt!32643)) (_1!1071 lt!32376)) e!48671)))

(declare-fun b!74498 () Bool)

(assert (=> b!74498 (= e!48671 e!48672)))

(declare-fun c!11236 () Bool)

(assert (=> b!74498 (= c!11236 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32643))) (not (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32643)))) (_1!1071 lt!32376)))))))

(assert (= (and d!17599 c!11235) b!74497))

(assert (= (and d!17599 (not c!11235)) b!74498))

(assert (= (and b!74498 c!11236) b!74499))

(assert (= (and b!74498 (not c!11236)) b!74500))

(declare-fun m!73545 () Bool)

(assert (=> b!74499 m!73545))

(assert (=> b!73282 d!17599))

(declare-fun d!17601 () Bool)

(declare-fun e!48674 () Bool)

(assert (=> d!17601 e!48674))

(declare-fun res!39368 () Bool)

(assert (=> d!17601 (=> res!39368 e!48674)))

(declare-fun lt!33460 () Bool)

(assert (=> d!17601 (= res!39368 (not lt!33460))))

(declare-fun lt!33458 () Bool)

(assert (=> d!17601 (= lt!33460 lt!33458)))

(declare-fun lt!33457 () Unit!2066)

(declare-fun e!48673 () Unit!2066)

(assert (=> d!17601 (= lt!33457 e!48673)))

(declare-fun c!11237 () Bool)

(assert (=> d!17601 (= c!11237 lt!33458)))

(assert (=> d!17601 (= lt!33458 (containsKey!135 (toList!717 lt!32786) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17601 (= (contains!719 lt!32786 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) lt!33460)))

(declare-fun b!74501 () Bool)

(declare-fun lt!33459 () Unit!2066)

(assert (=> b!74501 (= e!48673 lt!33459)))

(assert (=> b!74501 (= lt!33459 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32786) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> b!74501 (isDefined!85 (getValueByKey!131 (toList!717 lt!32786) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74502 () Bool)

(declare-fun Unit!2137 () Unit!2066)

(assert (=> b!74502 (= e!48673 Unit!2137)))

(declare-fun b!74503 () Bool)

(assert (=> b!74503 (= e!48674 (isDefined!85 (getValueByKey!131 (toList!717 lt!32786) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17601 c!11237) b!74501))

(assert (= (and d!17601 (not c!11237)) b!74502))

(assert (= (and d!17601 (not res!39368)) b!74503))

(declare-fun m!73547 () Bool)

(assert (=> d!17601 m!73547))

(declare-fun m!73549 () Bool)

(assert (=> b!74501 m!73549))

(assert (=> b!74501 m!71543))

(assert (=> b!74501 m!71543))

(declare-fun m!73551 () Bool)

(assert (=> b!74501 m!73551))

(assert (=> b!74503 m!71543))

(assert (=> b!74503 m!71543))

(assert (=> b!74503 m!73551))

(assert (=> d!16889 d!17601))

(declare-fun b!74504 () Bool)

(declare-fun e!48675 () Option!137)

(assert (=> b!74504 (= e!48675 (Some!136 (_2!1071 (h!2066 lt!32787))))))

(declare-fun b!74507 () Bool)

(declare-fun e!48676 () Option!137)

(assert (=> b!74507 (= e!48676 None!135)))

(declare-fun b!74506 () Bool)

(assert (=> b!74506 (= e!48676 (getValueByKey!131 (t!5031 lt!32787) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun c!11238 () Bool)

(declare-fun d!17603 () Bool)

(assert (=> d!17603 (= c!11238 (and ((_ is Cons!1479) lt!32787) (= (_1!1071 (h!2066 lt!32787)) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (=> d!17603 (= (getValueByKey!131 lt!32787 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) e!48675)))

(declare-fun b!74505 () Bool)

(assert (=> b!74505 (= e!48675 e!48676)))

(declare-fun c!11239 () Bool)

(assert (=> b!74505 (= c!11239 (and ((_ is Cons!1479) lt!32787) (not (= (_1!1071 (h!2066 lt!32787)) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))))

(assert (= (and d!17603 c!11238) b!74504))

(assert (= (and d!17603 (not c!11238)) b!74505))

(assert (= (and b!74505 c!11239) b!74506))

(assert (= (and b!74505 (not c!11239)) b!74507))

(declare-fun m!73553 () Bool)

(assert (=> b!74506 m!73553))

(assert (=> d!16889 d!17603))

(declare-fun d!17605 () Bool)

(assert (=> d!17605 (= (getValueByKey!131 lt!32787 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) (Some!136 (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun lt!33461 () Unit!2066)

(assert (=> d!17605 (= lt!33461 (choose!420 lt!32787 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun e!48677 () Bool)

(assert (=> d!17605 e!48677))

(declare-fun res!39369 () Bool)

(assert (=> d!17605 (=> (not res!39369) (not e!48677))))

(assert (=> d!17605 (= res!39369 (isStrictlySorted!287 lt!32787))))

(assert (=> d!17605 (= (lemmaContainsTupThenGetReturnValue!51 lt!32787 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) lt!33461)))

(declare-fun b!74508 () Bool)

(declare-fun res!39370 () Bool)

(assert (=> b!74508 (=> (not res!39370) (not e!48677))))

(assert (=> b!74508 (= res!39370 (containsKey!135 lt!32787 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74509 () Bool)

(assert (=> b!74509 (= e!48677 (contains!722 lt!32787 (tuple2!2121 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17605 res!39369) b!74508))

(assert (= (and b!74508 res!39370) b!74509))

(assert (=> d!17605 m!71537))

(declare-fun m!73555 () Bool)

(assert (=> d!17605 m!73555))

(declare-fun m!73557 () Bool)

(assert (=> d!17605 m!73557))

(declare-fun m!73559 () Bool)

(assert (=> b!74508 m!73559))

(declare-fun m!73561 () Bool)

(assert (=> b!74509 m!73561))

(assert (=> d!16889 d!17605))

(declare-fun d!17607 () Bool)

(declare-fun e!48680 () Bool)

(assert (=> d!17607 e!48680))

(declare-fun res!39372 () Bool)

(assert (=> d!17607 (=> (not res!39372) (not e!48680))))

(declare-fun lt!33462 () List!1483)

(assert (=> d!17607 (= res!39372 (isStrictlySorted!287 lt!33462))))

(declare-fun e!48682 () List!1483)

(assert (=> d!17607 (= lt!33462 e!48682)))

(declare-fun c!11242 () Bool)

(assert (=> d!17607 (= c!11242 (and ((_ is Cons!1479) (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424)))) (bvslt (_1!1071 (h!2066 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424))))) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (=> d!17607 (isStrictlySorted!287 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424))))))

(assert (=> d!17607 (= (insertStrictlySorted!54 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424))) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))) lt!33462)))

(declare-fun b!74510 () Bool)

(declare-fun res!39371 () Bool)

(assert (=> b!74510 (=> (not res!39371) (not e!48680))))

(assert (=> b!74510 (= res!39371 (containsKey!135 lt!33462 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74511 () Bool)

(declare-fun e!48681 () List!1483)

(declare-fun call!6587 () List!1483)

(assert (=> b!74511 (= e!48681 call!6587)))

(declare-fun bm!6582 () Bool)

(declare-fun call!6585 () List!1483)

(declare-fun call!6586 () List!1483)

(assert (=> bm!6582 (= call!6585 call!6586)))

(declare-fun b!74512 () Bool)

(assert (=> b!74512 (= e!48682 call!6586)))

(declare-fun e!48678 () List!1483)

(declare-fun b!74513 () Bool)

(assert (=> b!74513 (= e!48678 (insertStrictlySorted!54 (t!5031 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424)))) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74514 () Bool)

(assert (=> b!74514 (= e!48681 call!6587)))

(declare-fun b!74515 () Bool)

(assert (=> b!74515 (= e!48680 (contains!722 lt!33462 (tuple2!2121 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun c!11240 () Bool)

(declare-fun b!74516 () Bool)

(assert (=> b!74516 (= c!11240 (and ((_ is Cons!1479) (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424)))) (bvsgt (_1!1071 (h!2066 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424))))) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun e!48679 () List!1483)

(assert (=> b!74516 (= e!48679 e!48681)))

(declare-fun bm!6583 () Bool)

(assert (=> bm!6583 (= call!6586 ($colon$colon!65 e!48678 (ite c!11242 (h!2066 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424)))) (tuple2!2121 (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) (_2!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992))))))))))))

(declare-fun c!11243 () Bool)

(assert (=> bm!6583 (= c!11243 c!11242)))

(declare-fun bm!6584 () Bool)

(assert (=> bm!6584 (= call!6587 call!6585)))

(declare-fun b!74517 () Bool)

(assert (=> b!74517 (= e!48682 e!48679)))

(declare-fun c!11241 () Bool)

(assert (=> b!74517 (= c!11241 (and ((_ is Cons!1479) (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424)))) (= (_1!1071 (h!2066 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424))))) (_1!1071 (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun b!74518 () Bool)

(assert (=> b!74518 (= e!48679 call!6585)))

(declare-fun b!74519 () Bool)

(assert (=> b!74519 (= e!48678 (ite c!11241 (t!5031 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424)))) (ite c!11240 (Cons!1479 (h!2066 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424)))) (t!5031 (toList!717 (ite c!10823 call!6423 (ite c!10822 call!6421 call!6424))))) Nil!1480)))))

(assert (= (and d!17607 c!11242) b!74512))

(assert (= (and d!17607 (not c!11242)) b!74517))

(assert (= (and b!74517 c!11241) b!74518))

(assert (= (and b!74517 (not c!11241)) b!74516))

(assert (= (and b!74516 c!11240) b!74514))

(assert (= (and b!74516 (not c!11240)) b!74511))

(assert (= (or b!74514 b!74511) bm!6584))

(assert (= (or b!74518 bm!6584) bm!6582))

(assert (= (or b!74512 bm!6582) bm!6583))

(assert (= (and bm!6583 c!11243) b!74513))

(assert (= (and bm!6583 (not c!11243)) b!74519))

(assert (= (and d!17607 res!39372) b!74510))

(assert (= (and b!74510 res!39371) b!74515))

(declare-fun m!73563 () Bool)

(assert (=> bm!6583 m!73563))

(declare-fun m!73565 () Bool)

(assert (=> d!17607 m!73565))

(declare-fun m!73567 () Bool)

(assert (=> d!17607 m!73567))

(declare-fun m!73569 () Bool)

(assert (=> b!74513 m!73569))

(declare-fun m!73571 () Bool)

(assert (=> b!74515 m!73571))

(declare-fun m!73573 () Bool)

(assert (=> b!74510 m!73573))

(assert (=> d!16889 d!17607))

(declare-fun d!17609 () Bool)

(assert (=> d!17609 (= (apply!75 (+!93 lt!32728 (tuple2!2121 lt!32730 (minValue!2114 newMap!16))) lt!32739) (apply!75 lt!32728 lt!32739))))

(declare-fun lt!33463 () Unit!2066)

(assert (=> d!17609 (= lt!33463 (choose!428 lt!32728 lt!32730 (minValue!2114 newMap!16) lt!32739))))

(declare-fun e!48683 () Bool)

(assert (=> d!17609 e!48683))

(declare-fun res!39373 () Bool)

(assert (=> d!17609 (=> (not res!39373) (not e!48683))))

(assert (=> d!17609 (= res!39373 (contains!719 lt!32728 lt!32739))))

(assert (=> d!17609 (= (addApplyDifferent!51 lt!32728 lt!32730 (minValue!2114 newMap!16) lt!32739) lt!33463)))

(declare-fun b!74520 () Bool)

(assert (=> b!74520 (= e!48683 (not (= lt!32739 lt!32730)))))

(assert (= (and d!17609 res!39373) b!74520))

(declare-fun m!73575 () Bool)

(assert (=> d!17609 m!73575))

(declare-fun m!73577 () Bool)

(assert (=> d!17609 m!73577))

(assert (=> d!17609 m!71351))

(assert (=> d!17609 m!71335))

(assert (=> d!17609 m!71335))

(assert (=> d!17609 m!71337))

(assert (=> b!73210 d!17609))

(declare-fun d!17611 () Bool)

(assert (=> d!17611 (= (apply!75 (+!93 lt!32728 (tuple2!2121 lt!32730 (minValue!2114 newMap!16))) lt!32739) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32728 (tuple2!2121 lt!32730 (minValue!2114 newMap!16)))) lt!32739)))))

(declare-fun bs!3199 () Bool)

(assert (= bs!3199 d!17611))

(declare-fun m!73579 () Bool)

(assert (=> bs!3199 m!73579))

(assert (=> bs!3199 m!73579))

(declare-fun m!73581 () Bool)

(assert (=> bs!3199 m!73581))

(assert (=> b!73210 d!17611))

(declare-fun d!17613 () Bool)

(assert (=> d!17613 (= (apply!75 (+!93 lt!32731 (tuple2!2121 lt!32741 (minValue!2114 newMap!16))) lt!32740) (apply!75 lt!32731 lt!32740))))

(declare-fun lt!33464 () Unit!2066)

(assert (=> d!17613 (= lt!33464 (choose!428 lt!32731 lt!32741 (minValue!2114 newMap!16) lt!32740))))

(declare-fun e!48684 () Bool)

(assert (=> d!17613 e!48684))

(declare-fun res!39374 () Bool)

(assert (=> d!17613 (=> (not res!39374) (not e!48684))))

(assert (=> d!17613 (= res!39374 (contains!719 lt!32731 lt!32740))))

(assert (=> d!17613 (= (addApplyDifferent!51 lt!32731 lt!32741 (minValue!2114 newMap!16) lt!32740) lt!33464)))

(declare-fun b!74521 () Bool)

(assert (=> b!74521 (= e!48684 (not (= lt!32740 lt!32741)))))

(assert (= (and d!17613 res!39374) b!74521))

(declare-fun m!73583 () Bool)

(assert (=> d!17613 m!73583))

(declare-fun m!73585 () Bool)

(assert (=> d!17613 m!73585))

(assert (=> d!17613 m!71365))

(assert (=> d!17613 m!71349))

(assert (=> d!17613 m!71349))

(assert (=> d!17613 m!71359))

(assert (=> b!73210 d!17613))

(declare-fun d!17615 () Bool)

(declare-fun e!48685 () Bool)

(assert (=> d!17615 e!48685))

(declare-fun res!39376 () Bool)

(assert (=> d!17615 (=> (not res!39376) (not e!48685))))

(declare-fun lt!33467 () ListLongMap!1403)

(assert (=> d!17615 (= res!39376 (contains!719 lt!33467 (_1!1071 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16)))))))

(declare-fun lt!33468 () List!1483)

(assert (=> d!17615 (= lt!33467 (ListLongMap!1404 lt!33468))))

(declare-fun lt!33466 () Unit!2066)

(declare-fun lt!33465 () Unit!2066)

(assert (=> d!17615 (= lt!33466 lt!33465)))

(assert (=> d!17615 (= (getValueByKey!131 lt!33468 (_1!1071 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17615 (= lt!33465 (lemmaContainsTupThenGetReturnValue!51 lt!33468 (_1!1071 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17615 (= lt!33468 (insertStrictlySorted!54 (toList!717 lt!32744) (_1!1071 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17615 (= (+!93 lt!32744 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16))) lt!33467)))

(declare-fun b!74522 () Bool)

(declare-fun res!39375 () Bool)

(assert (=> b!74522 (=> (not res!39375) (not e!48685))))

(assert (=> b!74522 (= res!39375 (= (getValueByKey!131 (toList!717 lt!33467) (_1!1071 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16))))))))

(declare-fun b!74523 () Bool)

(assert (=> b!74523 (= e!48685 (contains!722 (toList!717 lt!33467) (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16))))))

(assert (= (and d!17615 res!39376) b!74522))

(assert (= (and b!74522 res!39375) b!74523))

(declare-fun m!73587 () Bool)

(assert (=> d!17615 m!73587))

(declare-fun m!73589 () Bool)

(assert (=> d!17615 m!73589))

(declare-fun m!73591 () Bool)

(assert (=> d!17615 m!73591))

(declare-fun m!73593 () Bool)

(assert (=> d!17615 m!73593))

(declare-fun m!73595 () Bool)

(assert (=> b!74522 m!73595))

(declare-fun m!73597 () Bool)

(assert (=> b!74523 m!73597))

(assert (=> b!73210 d!17615))

(declare-fun d!17617 () Bool)

(assert (=> d!17617 (= (apply!75 (+!93 lt!32742 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16))) lt!32729) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32742 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16)))) lt!32729)))))

(declare-fun bs!3200 () Bool)

(assert (= bs!3200 d!17617))

(declare-fun m!73599 () Bool)

(assert (=> bs!3200 m!73599))

(assert (=> bs!3200 m!73599))

(declare-fun m!73601 () Bool)

(assert (=> bs!3200 m!73601))

(assert (=> b!73210 d!17617))

(declare-fun d!17619 () Bool)

(assert (=> d!17619 (= (apply!75 lt!32731 lt!32740) (get!1147 (getValueByKey!131 (toList!717 lt!32731) lt!32740)))))

(declare-fun bs!3201 () Bool)

(assert (= bs!3201 d!17619))

(declare-fun m!73603 () Bool)

(assert (=> bs!3201 m!73603))

(assert (=> bs!3201 m!73603))

(declare-fun m!73605 () Bool)

(assert (=> bs!3201 m!73605))

(assert (=> b!73210 d!17619))

(declare-fun d!17621 () Bool)

(declare-fun e!48686 () Bool)

(assert (=> d!17621 e!48686))

(declare-fun res!39378 () Bool)

(assert (=> d!17621 (=> (not res!39378) (not e!48686))))

(declare-fun lt!33471 () ListLongMap!1403)

(assert (=> d!17621 (= res!39378 (contains!719 lt!33471 (_1!1071 (tuple2!2121 lt!32730 (minValue!2114 newMap!16)))))))

(declare-fun lt!33472 () List!1483)

(assert (=> d!17621 (= lt!33471 (ListLongMap!1404 lt!33472))))

(declare-fun lt!33470 () Unit!2066)

(declare-fun lt!33469 () Unit!2066)

(assert (=> d!17621 (= lt!33470 lt!33469)))

(assert (=> d!17621 (= (getValueByKey!131 lt!33472 (_1!1071 (tuple2!2121 lt!32730 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32730 (minValue!2114 newMap!16)))))))

(assert (=> d!17621 (= lt!33469 (lemmaContainsTupThenGetReturnValue!51 lt!33472 (_1!1071 (tuple2!2121 lt!32730 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32730 (minValue!2114 newMap!16)))))))

(assert (=> d!17621 (= lt!33472 (insertStrictlySorted!54 (toList!717 lt!32728) (_1!1071 (tuple2!2121 lt!32730 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32730 (minValue!2114 newMap!16)))))))

(assert (=> d!17621 (= (+!93 lt!32728 (tuple2!2121 lt!32730 (minValue!2114 newMap!16))) lt!33471)))

(declare-fun b!74524 () Bool)

(declare-fun res!39377 () Bool)

(assert (=> b!74524 (=> (not res!39377) (not e!48686))))

(assert (=> b!74524 (= res!39377 (= (getValueByKey!131 (toList!717 lt!33471) (_1!1071 (tuple2!2121 lt!32730 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32730 (minValue!2114 newMap!16))))))))

(declare-fun b!74525 () Bool)

(assert (=> b!74525 (= e!48686 (contains!722 (toList!717 lt!33471) (tuple2!2121 lt!32730 (minValue!2114 newMap!16))))))

(assert (= (and d!17621 res!39378) b!74524))

(assert (= (and b!74524 res!39377) b!74525))

(declare-fun m!73607 () Bool)

(assert (=> d!17621 m!73607))

(declare-fun m!73609 () Bool)

(assert (=> d!17621 m!73609))

(declare-fun m!73611 () Bool)

(assert (=> d!17621 m!73611))

(declare-fun m!73613 () Bool)

(assert (=> d!17621 m!73613))

(declare-fun m!73615 () Bool)

(assert (=> b!74524 m!73615))

(declare-fun m!73617 () Bool)

(assert (=> b!74525 m!73617))

(assert (=> b!73210 d!17621))

(declare-fun d!17623 () Bool)

(declare-fun e!48688 () Bool)

(assert (=> d!17623 e!48688))

(declare-fun res!39379 () Bool)

(assert (=> d!17623 (=> res!39379 e!48688)))

(declare-fun lt!33476 () Bool)

(assert (=> d!17623 (= res!39379 (not lt!33476))))

(declare-fun lt!33474 () Bool)

(assert (=> d!17623 (= lt!33476 lt!33474)))

(declare-fun lt!33473 () Unit!2066)

(declare-fun e!48687 () Unit!2066)

(assert (=> d!17623 (= lt!33473 e!48687)))

(declare-fun c!11244 () Bool)

(assert (=> d!17623 (= c!11244 lt!33474)))

(assert (=> d!17623 (= lt!33474 (containsKey!135 (toList!717 (+!93 lt!32744 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16)))) lt!32737))))

(assert (=> d!17623 (= (contains!719 (+!93 lt!32744 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16))) lt!32737) lt!33476)))

(declare-fun b!74526 () Bool)

(declare-fun lt!33475 () Unit!2066)

(assert (=> b!74526 (= e!48687 lt!33475)))

(assert (=> b!74526 (= lt!33475 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (+!93 lt!32744 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16)))) lt!32737))))

(assert (=> b!74526 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32744 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16)))) lt!32737))))

(declare-fun b!74527 () Bool)

(declare-fun Unit!2138 () Unit!2066)

(assert (=> b!74527 (= e!48687 Unit!2138)))

(declare-fun b!74528 () Bool)

(assert (=> b!74528 (= e!48688 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32744 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16)))) lt!32737)))))

(assert (= (and d!17623 c!11244) b!74526))

(assert (= (and d!17623 (not c!11244)) b!74527))

(assert (= (and d!17623 (not res!39379)) b!74528))

(declare-fun m!73619 () Bool)

(assert (=> d!17623 m!73619))

(declare-fun m!73621 () Bool)

(assert (=> b!74526 m!73621))

(declare-fun m!73623 () Bool)

(assert (=> b!74526 m!73623))

(assert (=> b!74526 m!73623))

(declare-fun m!73625 () Bool)

(assert (=> b!74526 m!73625))

(assert (=> b!74528 m!73623))

(assert (=> b!74528 m!73623))

(assert (=> b!74528 m!73625))

(assert (=> b!73210 d!17623))

(declare-fun d!17625 () Bool)

(assert (=> d!17625 (= (apply!75 (+!93 lt!32742 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16))) lt!32729) (apply!75 lt!32742 lt!32729))))

(declare-fun lt!33477 () Unit!2066)

(assert (=> d!17625 (= lt!33477 (choose!428 lt!32742 lt!32746 (zeroValue!2114 newMap!16) lt!32729))))

(declare-fun e!48689 () Bool)

(assert (=> d!17625 e!48689))

(declare-fun res!39380 () Bool)

(assert (=> d!17625 (=> (not res!39380) (not e!48689))))

(assert (=> d!17625 (= res!39380 (contains!719 lt!32742 lt!32729))))

(assert (=> d!17625 (= (addApplyDifferent!51 lt!32742 lt!32746 (zeroValue!2114 newMap!16) lt!32729) lt!33477)))

(declare-fun b!74529 () Bool)

(assert (=> b!74529 (= e!48689 (not (= lt!32729 lt!32746)))))

(assert (= (and d!17625 res!39380) b!74529))

(declare-fun m!73627 () Bool)

(assert (=> d!17625 m!73627))

(declare-fun m!73629 () Bool)

(assert (=> d!17625 m!73629))

(assert (=> d!17625 m!71355))

(assert (=> d!17625 m!71343))

(assert (=> d!17625 m!71343))

(assert (=> d!17625 m!71345))

(assert (=> b!73210 d!17625))

(declare-fun d!17627 () Bool)

(assert (=> d!17627 (= (apply!75 (+!93 lt!32731 (tuple2!2121 lt!32741 (minValue!2114 newMap!16))) lt!32740) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32731 (tuple2!2121 lt!32741 (minValue!2114 newMap!16)))) lt!32740)))))

(declare-fun bs!3202 () Bool)

(assert (= bs!3202 d!17627))

(declare-fun m!73631 () Bool)

(assert (=> bs!3202 m!73631))

(assert (=> bs!3202 m!73631))

(declare-fun m!73633 () Bool)

(assert (=> bs!3202 m!73633))

(assert (=> b!73210 d!17627))

(declare-fun d!17629 () Bool)

(assert (=> d!17629 (contains!719 (+!93 lt!32744 (tuple2!2121 lt!32734 (zeroValue!2114 newMap!16))) lt!32737)))

(declare-fun lt!33478 () Unit!2066)

(assert (=> d!17629 (= lt!33478 (choose!429 lt!32744 lt!32734 (zeroValue!2114 newMap!16) lt!32737))))

(assert (=> d!17629 (contains!719 lt!32744 lt!32737)))

(assert (=> d!17629 (= (addStillContains!51 lt!32744 lt!32734 (zeroValue!2114 newMap!16) lt!32737) lt!33478)))

(declare-fun bs!3203 () Bool)

(assert (= bs!3203 d!17629))

(assert (=> bs!3203 m!71339))

(assert (=> bs!3203 m!71339))

(assert (=> bs!3203 m!71341))

(declare-fun m!73635 () Bool)

(assert (=> bs!3203 m!73635))

(declare-fun m!73637 () Bool)

(assert (=> bs!3203 m!73637))

(assert (=> b!73210 d!17629))

(declare-fun d!17631 () Bool)

(assert (=> d!17631 (= (apply!75 lt!32742 lt!32729) (get!1147 (getValueByKey!131 (toList!717 lt!32742) lt!32729)))))

(declare-fun bs!3204 () Bool)

(assert (= bs!3204 d!17631))

(declare-fun m!73639 () Bool)

(assert (=> bs!3204 m!73639))

(assert (=> bs!3204 m!73639))

(declare-fun m!73641 () Bool)

(assert (=> bs!3204 m!73641))

(assert (=> b!73210 d!17631))

(assert (=> b!73210 d!17341))

(declare-fun d!17633 () Bool)

(declare-fun e!48690 () Bool)

(assert (=> d!17633 e!48690))

(declare-fun res!39382 () Bool)

(assert (=> d!17633 (=> (not res!39382) (not e!48690))))

(declare-fun lt!33481 () ListLongMap!1403)

(assert (=> d!17633 (= res!39382 (contains!719 lt!33481 (_1!1071 (tuple2!2121 lt!32741 (minValue!2114 newMap!16)))))))

(declare-fun lt!33482 () List!1483)

(assert (=> d!17633 (= lt!33481 (ListLongMap!1404 lt!33482))))

(declare-fun lt!33480 () Unit!2066)

(declare-fun lt!33479 () Unit!2066)

(assert (=> d!17633 (= lt!33480 lt!33479)))

(assert (=> d!17633 (= (getValueByKey!131 lt!33482 (_1!1071 (tuple2!2121 lt!32741 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32741 (minValue!2114 newMap!16)))))))

(assert (=> d!17633 (= lt!33479 (lemmaContainsTupThenGetReturnValue!51 lt!33482 (_1!1071 (tuple2!2121 lt!32741 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32741 (minValue!2114 newMap!16)))))))

(assert (=> d!17633 (= lt!33482 (insertStrictlySorted!54 (toList!717 lt!32731) (_1!1071 (tuple2!2121 lt!32741 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32741 (minValue!2114 newMap!16)))))))

(assert (=> d!17633 (= (+!93 lt!32731 (tuple2!2121 lt!32741 (minValue!2114 newMap!16))) lt!33481)))

(declare-fun b!74530 () Bool)

(declare-fun res!39381 () Bool)

(assert (=> b!74530 (=> (not res!39381) (not e!48690))))

(assert (=> b!74530 (= res!39381 (= (getValueByKey!131 (toList!717 lt!33481) (_1!1071 (tuple2!2121 lt!32741 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32741 (minValue!2114 newMap!16))))))))

(declare-fun b!74531 () Bool)

(assert (=> b!74531 (= e!48690 (contains!722 (toList!717 lt!33481) (tuple2!2121 lt!32741 (minValue!2114 newMap!16))))))

(assert (= (and d!17633 res!39382) b!74530))

(assert (= (and b!74530 res!39381) b!74531))

(declare-fun m!73643 () Bool)

(assert (=> d!17633 m!73643))

(declare-fun m!73645 () Bool)

(assert (=> d!17633 m!73645))

(declare-fun m!73647 () Bool)

(assert (=> d!17633 m!73647))

(declare-fun m!73649 () Bool)

(assert (=> d!17633 m!73649))

(declare-fun m!73651 () Bool)

(assert (=> b!74530 m!73651))

(declare-fun m!73653 () Bool)

(assert (=> b!74531 m!73653))

(assert (=> b!73210 d!17633))

(declare-fun d!17635 () Bool)

(assert (=> d!17635 (= (apply!75 lt!32728 lt!32739) (get!1147 (getValueByKey!131 (toList!717 lt!32728) lt!32739)))))

(declare-fun bs!3205 () Bool)

(assert (= bs!3205 d!17635))

(declare-fun m!73655 () Bool)

(assert (=> bs!3205 m!73655))

(assert (=> bs!3205 m!73655))

(declare-fun m!73657 () Bool)

(assert (=> bs!3205 m!73657))

(assert (=> b!73210 d!17635))

(declare-fun d!17637 () Bool)

(declare-fun e!48691 () Bool)

(assert (=> d!17637 e!48691))

(declare-fun res!39384 () Bool)

(assert (=> d!17637 (=> (not res!39384) (not e!48691))))

(declare-fun lt!33485 () ListLongMap!1403)

(assert (=> d!17637 (= res!39384 (contains!719 lt!33485 (_1!1071 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16)))))))

(declare-fun lt!33486 () List!1483)

(assert (=> d!17637 (= lt!33485 (ListLongMap!1404 lt!33486))))

(declare-fun lt!33484 () Unit!2066)

(declare-fun lt!33483 () Unit!2066)

(assert (=> d!17637 (= lt!33484 lt!33483)))

(assert (=> d!17637 (= (getValueByKey!131 lt!33486 (_1!1071 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17637 (= lt!33483 (lemmaContainsTupThenGetReturnValue!51 lt!33486 (_1!1071 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17637 (= lt!33486 (insertStrictlySorted!54 (toList!717 lt!32742) (_1!1071 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16)))))))

(assert (=> d!17637 (= (+!93 lt!32742 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16))) lt!33485)))

(declare-fun b!74532 () Bool)

(declare-fun res!39383 () Bool)

(assert (=> b!74532 (=> (not res!39383) (not e!48691))))

(assert (=> b!74532 (= res!39383 (= (getValueByKey!131 (toList!717 lt!33485) (_1!1071 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16))))))))

(declare-fun b!74533 () Bool)

(assert (=> b!74533 (= e!48691 (contains!722 (toList!717 lt!33485) (tuple2!2121 lt!32746 (zeroValue!2114 newMap!16))))))

(assert (= (and d!17637 res!39384) b!74532))

(assert (= (and b!74532 res!39383) b!74533))

(declare-fun m!73659 () Bool)

(assert (=> d!17637 m!73659))

(declare-fun m!73661 () Bool)

(assert (=> d!17637 m!73661))

(declare-fun m!73663 () Bool)

(assert (=> d!17637 m!73663))

(declare-fun m!73665 () Bool)

(assert (=> d!17637 m!73665))

(declare-fun m!73667 () Bool)

(assert (=> b!74532 m!73667))

(declare-fun m!73669 () Bool)

(assert (=> b!74533 m!73669))

(assert (=> b!73210 d!17637))

(declare-fun d!17639 () Bool)

(assert (=> d!17639 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (getCurrentListMap!410 (_keys!3863 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (=> d!17639 true))

(declare-fun _$5!80 () Unit!2066)

(assert (=> d!17639 (= (choose!425 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (index!3088 lt!32540) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 (defaultEntry!2212 newMap!16)) _$5!80)))

(declare-fun bs!3206 () Bool)

(assert (= bs!3206 d!17639))

(assert (=> bs!3206 m!70991))

(assert (=> bs!3206 m!70991))

(assert (=> bs!3206 m!71643))

(assert (=> bs!3206 m!70995))

(assert (=> bs!3206 m!71691))

(assert (=> d!16917 d!17639))

(assert (=> d!16917 d!17001))

(assert (=> b!73568 d!17395))

(assert (=> b!73568 d!17397))

(assert (=> b!73396 d!16893))

(declare-fun d!17641 () Bool)

(declare-fun res!39385 () Bool)

(declare-fun e!48692 () Bool)

(assert (=> d!17641 (=> res!39385 e!48692)))

(assert (=> d!17641 (= res!39385 (and ((_ is Cons!1479) lt!32767) (= (_1!1071 (h!2066 lt!32767)) (_1!1071 lt!32376))))))

(assert (=> d!17641 (= (containsKey!135 lt!32767 (_1!1071 lt!32376)) e!48692)))

(declare-fun b!74534 () Bool)

(declare-fun e!48693 () Bool)

(assert (=> b!74534 (= e!48692 e!48693)))

(declare-fun res!39386 () Bool)

(assert (=> b!74534 (=> (not res!39386) (not e!48693))))

(assert (=> b!74534 (= res!39386 (and (or (not ((_ is Cons!1479) lt!32767)) (bvsle (_1!1071 (h!2066 lt!32767)) (_1!1071 lt!32376))) ((_ is Cons!1479) lt!32767) (bvslt (_1!1071 (h!2066 lt!32767)) (_1!1071 lt!32376))))))

(declare-fun b!74535 () Bool)

(assert (=> b!74535 (= e!48693 (containsKey!135 (t!5031 lt!32767) (_1!1071 lt!32376)))))

(assert (= (and d!17641 (not res!39385)) b!74534))

(assert (= (and b!74534 res!39386) b!74535))

(declare-fun m!73671 () Bool)

(assert (=> b!74535 m!73671))

(assert (=> b!73267 d!17641))

(declare-fun d!17643 () Bool)

(assert (=> d!17643 (= (apply!75 (+!93 lt!32972 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) lt!32959) (apply!75 lt!32972 lt!32959))))

(declare-fun lt!33487 () Unit!2066)

(assert (=> d!17643 (= lt!33487 (choose!428 lt!32972 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) lt!32959))))

(declare-fun e!48694 () Bool)

(assert (=> d!17643 e!48694))

(declare-fun res!39387 () Bool)

(assert (=> d!17643 (=> (not res!39387) (not e!48694))))

(assert (=> d!17643 (= res!39387 (contains!719 lt!32972 lt!32959))))

(assert (=> d!17643 (= (addApplyDifferent!51 lt!32972 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) lt!32959) lt!33487)))

(declare-fun b!74536 () Bool)

(assert (=> b!74536 (= e!48694 (not (= lt!32959 lt!32976)))))

(assert (= (and d!17643 res!39387) b!74536))

(declare-fun m!73673 () Bool)

(assert (=> d!17643 m!73673))

(declare-fun m!73675 () Bool)

(assert (=> d!17643 m!73675))

(assert (=> d!17643 m!71797))

(assert (=> d!17643 m!71785))

(assert (=> d!17643 m!71785))

(assert (=> d!17643 m!71787))

(assert (=> b!73484 d!17643))

(declare-fun d!17645 () Bool)

(assert (=> d!17645 (= (apply!75 (+!93 lt!32958 (tuple2!2121 lt!32960 (minValue!2114 newMap!16))) lt!32969) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32958 (tuple2!2121 lt!32960 (minValue!2114 newMap!16)))) lt!32969)))))

(declare-fun bs!3207 () Bool)

(assert (= bs!3207 d!17645))

(declare-fun m!73677 () Bool)

(assert (=> bs!3207 m!73677))

(assert (=> bs!3207 m!73677))

(declare-fun m!73679 () Bool)

(assert (=> bs!3207 m!73679))

(assert (=> b!73484 d!17645))

(declare-fun d!17647 () Bool)

(declare-fun e!48695 () Bool)

(assert (=> d!17647 e!48695))

(declare-fun res!39389 () Bool)

(assert (=> d!17647 (=> (not res!39389) (not e!48695))))

(declare-fun lt!33490 () ListLongMap!1403)

(assert (=> d!17647 (= res!39389 (contains!719 lt!33490 (_1!1071 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))))))

(declare-fun lt!33491 () List!1483)

(assert (=> d!17647 (= lt!33490 (ListLongMap!1404 lt!33491))))

(declare-fun lt!33489 () Unit!2066)

(declare-fun lt!33488 () Unit!2066)

(assert (=> d!17647 (= lt!33489 lt!33488)))

(assert (=> d!17647 (= (getValueByKey!131 lt!33491 (_1!1071 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))) (Some!136 (_2!1071 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17647 (= lt!33488 (lemmaContainsTupThenGetReturnValue!51 lt!33491 (_1!1071 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17647 (= lt!33491 (insertStrictlySorted!54 (toList!717 lt!32972) (_1!1071 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17647 (= (+!93 lt!32972 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) lt!33490)))

(declare-fun b!74537 () Bool)

(declare-fun res!39388 () Bool)

(assert (=> b!74537 (=> (not res!39388) (not e!48695))))

(assert (=> b!74537 (= res!39388 (= (getValueByKey!131 (toList!717 lt!33490) (_1!1071 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))) (Some!136 (_2!1071 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))))))))

(declare-fun b!74538 () Bool)

(assert (=> b!74538 (= e!48695 (contains!722 (toList!717 lt!33490) (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))))))

(assert (= (and d!17647 res!39389) b!74537))

(assert (= (and b!74537 res!39388) b!74538))

(declare-fun m!73681 () Bool)

(assert (=> d!17647 m!73681))

(declare-fun m!73683 () Bool)

(assert (=> d!17647 m!73683))

(declare-fun m!73685 () Bool)

(assert (=> d!17647 m!73685))

(declare-fun m!73687 () Bool)

(assert (=> d!17647 m!73687))

(declare-fun m!73689 () Bool)

(assert (=> b!74537 m!73689))

(declare-fun m!73691 () Bool)

(assert (=> b!74538 m!73691))

(assert (=> b!73484 d!17647))

(declare-fun d!17649 () Bool)

(assert (=> d!17649 (contains!719 (+!93 lt!32974 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) lt!32967)))

(declare-fun lt!33492 () Unit!2066)

(assert (=> d!17649 (= lt!33492 (choose!429 lt!32974 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) lt!32967))))

(assert (=> d!17649 (contains!719 lt!32974 lt!32967)))

(assert (=> d!17649 (= (addStillContains!51 lt!32974 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)) lt!32967) lt!33492)))

(declare-fun bs!3208 () Bool)

(assert (= bs!3208 d!17649))

(assert (=> bs!3208 m!71781))

(assert (=> bs!3208 m!71781))

(assert (=> bs!3208 m!71783))

(declare-fun m!73693 () Bool)

(assert (=> bs!3208 m!73693))

(declare-fun m!73695 () Bool)

(assert (=> bs!3208 m!73695))

(assert (=> b!73484 d!17649))

(declare-fun d!17651 () Bool)

(assert (=> d!17651 (= (apply!75 lt!32972 lt!32959) (get!1147 (getValueByKey!131 (toList!717 lt!32972) lt!32959)))))

(declare-fun bs!3209 () Bool)

(assert (= bs!3209 d!17651))

(declare-fun m!73697 () Bool)

(assert (=> bs!3209 m!73697))

(assert (=> bs!3209 m!73697))

(declare-fun m!73699 () Bool)

(assert (=> bs!3209 m!73699))

(assert (=> b!73484 d!17651))

(declare-fun d!17653 () Bool)

(assert (=> d!17653 (= (apply!75 lt!32958 lt!32969) (get!1147 (getValueByKey!131 (toList!717 lt!32958) lt!32969)))))

(declare-fun bs!3210 () Bool)

(assert (= bs!3210 d!17653))

(declare-fun m!73701 () Bool)

(assert (=> bs!3210 m!73701))

(assert (=> bs!3210 m!73701))

(declare-fun m!73703 () Bool)

(assert (=> bs!3210 m!73703))

(assert (=> b!73484 d!17653))

(declare-fun d!17655 () Bool)

(assert (=> d!17655 (= (apply!75 (+!93 lt!32972 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) lt!32959) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32972 (tuple2!2121 lt!32976 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))) lt!32959)))))

(declare-fun bs!3211 () Bool)

(assert (= bs!3211 d!17655))

(declare-fun m!73705 () Bool)

(assert (=> bs!3211 m!73705))

(assert (=> bs!3211 m!73705))

(declare-fun m!73707 () Bool)

(assert (=> bs!3211 m!73707))

(assert (=> b!73484 d!17655))

(assert (=> b!73484 d!17357))

(declare-fun d!17657 () Bool)

(declare-fun e!48697 () Bool)

(assert (=> d!17657 e!48697))

(declare-fun res!39390 () Bool)

(assert (=> d!17657 (=> res!39390 e!48697)))

(declare-fun lt!33496 () Bool)

(assert (=> d!17657 (= res!39390 (not lt!33496))))

(declare-fun lt!33494 () Bool)

(assert (=> d!17657 (= lt!33496 lt!33494)))

(declare-fun lt!33493 () Unit!2066)

(declare-fun e!48696 () Unit!2066)

(assert (=> d!17657 (= lt!33493 e!48696)))

(declare-fun c!11245 () Bool)

(assert (=> d!17657 (= c!11245 lt!33494)))

(assert (=> d!17657 (= lt!33494 (containsKey!135 (toList!717 (+!93 lt!32974 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))) lt!32967))))

(assert (=> d!17657 (= (contains!719 (+!93 lt!32974 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) lt!32967) lt!33496)))

(declare-fun b!74539 () Bool)

(declare-fun lt!33495 () Unit!2066)

(assert (=> b!74539 (= e!48696 lt!33495)))

(assert (=> b!74539 (= lt!33495 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (+!93 lt!32974 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))) lt!32967))))

(assert (=> b!74539 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32974 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))) lt!32967))))

(declare-fun b!74540 () Bool)

(declare-fun Unit!2139 () Unit!2066)

(assert (=> b!74540 (= e!48696 Unit!2139)))

(declare-fun b!74541 () Bool)

(assert (=> b!74541 (= e!48697 (isDefined!85 (getValueByKey!131 (toList!717 (+!93 lt!32974 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))) lt!32967)))))

(assert (= (and d!17657 c!11245) b!74539))

(assert (= (and d!17657 (not c!11245)) b!74540))

(assert (= (and d!17657 (not res!39390)) b!74541))

(declare-fun m!73709 () Bool)

(assert (=> d!17657 m!73709))

(declare-fun m!73711 () Bool)

(assert (=> b!74539 m!73711))

(declare-fun m!73713 () Bool)

(assert (=> b!74539 m!73713))

(assert (=> b!74539 m!73713))

(declare-fun m!73715 () Bool)

(assert (=> b!74539 m!73715))

(assert (=> b!74541 m!73713))

(assert (=> b!74541 m!73713))

(assert (=> b!74541 m!73715))

(assert (=> b!73484 d!17657))

(declare-fun d!17659 () Bool)

(assert (=> d!17659 (= (apply!75 (+!93 lt!32958 (tuple2!2121 lt!32960 (minValue!2114 newMap!16))) lt!32969) (apply!75 lt!32958 lt!32969))))

(declare-fun lt!33497 () Unit!2066)

(assert (=> d!17659 (= lt!33497 (choose!428 lt!32958 lt!32960 (minValue!2114 newMap!16) lt!32969))))

(declare-fun e!48698 () Bool)

(assert (=> d!17659 e!48698))

(declare-fun res!39391 () Bool)

(assert (=> d!17659 (=> (not res!39391) (not e!48698))))

(assert (=> d!17659 (= res!39391 (contains!719 lt!32958 lt!32969))))

(assert (=> d!17659 (= (addApplyDifferent!51 lt!32958 lt!32960 (minValue!2114 newMap!16) lt!32969) lt!33497)))

(declare-fun b!74542 () Bool)

(assert (=> b!74542 (= e!48698 (not (= lt!32969 lt!32960)))))

(assert (= (and d!17659 res!39391) b!74542))

(declare-fun m!73717 () Bool)

(assert (=> d!17659 m!73717))

(declare-fun m!73719 () Bool)

(assert (=> d!17659 m!73719))

(assert (=> d!17659 m!71793))

(assert (=> d!17659 m!71777))

(assert (=> d!17659 m!71777))

(assert (=> d!17659 m!71779))

(assert (=> b!73484 d!17659))

(declare-fun d!17661 () Bool)

(assert (=> d!17661 (= (apply!75 lt!32961 lt!32970) (get!1147 (getValueByKey!131 (toList!717 lt!32961) lt!32970)))))

(declare-fun bs!3212 () Bool)

(assert (= bs!3212 d!17661))

(declare-fun m!73721 () Bool)

(assert (=> bs!3212 m!73721))

(assert (=> bs!3212 m!73721))

(declare-fun m!73723 () Bool)

(assert (=> bs!3212 m!73723))

(assert (=> b!73484 d!17661))

(declare-fun d!17663 () Bool)

(declare-fun e!48699 () Bool)

(assert (=> d!17663 e!48699))

(declare-fun res!39393 () Bool)

(assert (=> d!17663 (=> (not res!39393) (not e!48699))))

(declare-fun lt!33500 () ListLongMap!1403)

(assert (=> d!17663 (= res!39393 (contains!719 lt!33500 (_1!1071 (tuple2!2121 lt!32960 (minValue!2114 newMap!16)))))))

(declare-fun lt!33501 () List!1483)

(assert (=> d!17663 (= lt!33500 (ListLongMap!1404 lt!33501))))

(declare-fun lt!33499 () Unit!2066)

(declare-fun lt!33498 () Unit!2066)

(assert (=> d!17663 (= lt!33499 lt!33498)))

(assert (=> d!17663 (= (getValueByKey!131 lt!33501 (_1!1071 (tuple2!2121 lt!32960 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32960 (minValue!2114 newMap!16)))))))

(assert (=> d!17663 (= lt!33498 (lemmaContainsTupThenGetReturnValue!51 lt!33501 (_1!1071 (tuple2!2121 lt!32960 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32960 (minValue!2114 newMap!16)))))))

(assert (=> d!17663 (= lt!33501 (insertStrictlySorted!54 (toList!717 lt!32958) (_1!1071 (tuple2!2121 lt!32960 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32960 (minValue!2114 newMap!16)))))))

(assert (=> d!17663 (= (+!93 lt!32958 (tuple2!2121 lt!32960 (minValue!2114 newMap!16))) lt!33500)))

(declare-fun b!74543 () Bool)

(declare-fun res!39392 () Bool)

(assert (=> b!74543 (=> (not res!39392) (not e!48699))))

(assert (=> b!74543 (= res!39392 (= (getValueByKey!131 (toList!717 lt!33500) (_1!1071 (tuple2!2121 lt!32960 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32960 (minValue!2114 newMap!16))))))))

(declare-fun b!74544 () Bool)

(assert (=> b!74544 (= e!48699 (contains!722 (toList!717 lt!33500) (tuple2!2121 lt!32960 (minValue!2114 newMap!16))))))

(assert (= (and d!17663 res!39393) b!74543))

(assert (= (and b!74543 res!39392) b!74544))

(declare-fun m!73725 () Bool)

(assert (=> d!17663 m!73725))

(declare-fun m!73727 () Bool)

(assert (=> d!17663 m!73727))

(declare-fun m!73729 () Bool)

(assert (=> d!17663 m!73729))

(declare-fun m!73731 () Bool)

(assert (=> d!17663 m!73731))

(declare-fun m!73733 () Bool)

(assert (=> b!74543 m!73733))

(declare-fun m!73735 () Bool)

(assert (=> b!74544 m!73735))

(assert (=> b!73484 d!17663))

(declare-fun d!17665 () Bool)

(declare-fun e!48700 () Bool)

(assert (=> d!17665 e!48700))

(declare-fun res!39395 () Bool)

(assert (=> d!17665 (=> (not res!39395) (not e!48700))))

(declare-fun lt!33504 () ListLongMap!1403)

(assert (=> d!17665 (= res!39395 (contains!719 lt!33504 (_1!1071 (tuple2!2121 lt!32971 (minValue!2114 newMap!16)))))))

(declare-fun lt!33505 () List!1483)

(assert (=> d!17665 (= lt!33504 (ListLongMap!1404 lt!33505))))

(declare-fun lt!33503 () Unit!2066)

(declare-fun lt!33502 () Unit!2066)

(assert (=> d!17665 (= lt!33503 lt!33502)))

(assert (=> d!17665 (= (getValueByKey!131 lt!33505 (_1!1071 (tuple2!2121 lt!32971 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32971 (minValue!2114 newMap!16)))))))

(assert (=> d!17665 (= lt!33502 (lemmaContainsTupThenGetReturnValue!51 lt!33505 (_1!1071 (tuple2!2121 lt!32971 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32971 (minValue!2114 newMap!16)))))))

(assert (=> d!17665 (= lt!33505 (insertStrictlySorted!54 (toList!717 lt!32961) (_1!1071 (tuple2!2121 lt!32971 (minValue!2114 newMap!16))) (_2!1071 (tuple2!2121 lt!32971 (minValue!2114 newMap!16)))))))

(assert (=> d!17665 (= (+!93 lt!32961 (tuple2!2121 lt!32971 (minValue!2114 newMap!16))) lt!33504)))

(declare-fun b!74545 () Bool)

(declare-fun res!39394 () Bool)

(assert (=> b!74545 (=> (not res!39394) (not e!48700))))

(assert (=> b!74545 (= res!39394 (= (getValueByKey!131 (toList!717 lt!33504) (_1!1071 (tuple2!2121 lt!32971 (minValue!2114 newMap!16)))) (Some!136 (_2!1071 (tuple2!2121 lt!32971 (minValue!2114 newMap!16))))))))

(declare-fun b!74546 () Bool)

(assert (=> b!74546 (= e!48700 (contains!722 (toList!717 lt!33504) (tuple2!2121 lt!32971 (minValue!2114 newMap!16))))))

(assert (= (and d!17665 res!39395) b!74545))

(assert (= (and b!74545 res!39394) b!74546))

(declare-fun m!73737 () Bool)

(assert (=> d!17665 m!73737))

(declare-fun m!73739 () Bool)

(assert (=> d!17665 m!73739))

(declare-fun m!73741 () Bool)

(assert (=> d!17665 m!73741))

(declare-fun m!73743 () Bool)

(assert (=> d!17665 m!73743))

(declare-fun m!73745 () Bool)

(assert (=> b!74545 m!73745))

(declare-fun m!73747 () Bool)

(assert (=> b!74546 m!73747))

(assert (=> b!73484 d!17665))

(declare-fun d!17667 () Bool)

(declare-fun e!48701 () Bool)

(assert (=> d!17667 e!48701))

(declare-fun res!39397 () Bool)

(assert (=> d!17667 (=> (not res!39397) (not e!48701))))

(declare-fun lt!33508 () ListLongMap!1403)

(assert (=> d!17667 (= res!39397 (contains!719 lt!33508 (_1!1071 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))))))

(declare-fun lt!33509 () List!1483)

(assert (=> d!17667 (= lt!33508 (ListLongMap!1404 lt!33509))))

(declare-fun lt!33507 () Unit!2066)

(declare-fun lt!33506 () Unit!2066)

(assert (=> d!17667 (= lt!33507 lt!33506)))

(assert (=> d!17667 (= (getValueByKey!131 lt!33509 (_1!1071 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))) (Some!136 (_2!1071 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17667 (= lt!33506 (lemmaContainsTupThenGetReturnValue!51 lt!33509 (_1!1071 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17667 (= lt!33509 (insertStrictlySorted!54 (toList!717 lt!32974) (_1!1071 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) (_2!1071 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))))))

(assert (=> d!17667 (= (+!93 lt!32974 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))) lt!33508)))

(declare-fun b!74547 () Bool)

(declare-fun res!39396 () Bool)

(assert (=> b!74547 (=> (not res!39396) (not e!48701))))

(assert (=> b!74547 (= res!39396 (= (getValueByKey!131 (toList!717 lt!33508) (_1!1071 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16))))) (Some!136 (_2!1071 (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))))))))

(declare-fun b!74548 () Bool)

(assert (=> b!74548 (= e!48701 (contains!722 (toList!717 lt!33508) (tuple2!2121 lt!32964 (ite (and c!10789 c!10800) lt!32380 (zeroValue!2114 newMap!16)))))))

(assert (= (and d!17667 res!39397) b!74547))

(assert (= (and b!74547 res!39396) b!74548))

(declare-fun m!73749 () Bool)

(assert (=> d!17667 m!73749))

(declare-fun m!73751 () Bool)

(assert (=> d!17667 m!73751))

(declare-fun m!73753 () Bool)

(assert (=> d!17667 m!73753))

(declare-fun m!73755 () Bool)

(assert (=> d!17667 m!73755))

(declare-fun m!73757 () Bool)

(assert (=> b!74547 m!73757))

(declare-fun m!73759 () Bool)

(assert (=> b!74548 m!73759))

(assert (=> b!73484 d!17667))

(declare-fun d!17669 () Bool)

(assert (=> d!17669 (= (apply!75 (+!93 lt!32961 (tuple2!2121 lt!32971 (minValue!2114 newMap!16))) lt!32970) (get!1147 (getValueByKey!131 (toList!717 (+!93 lt!32961 (tuple2!2121 lt!32971 (minValue!2114 newMap!16)))) lt!32970)))))

(declare-fun bs!3213 () Bool)

(assert (= bs!3213 d!17669))

(declare-fun m!73761 () Bool)

(assert (=> bs!3213 m!73761))

(assert (=> bs!3213 m!73761))

(declare-fun m!73763 () Bool)

(assert (=> bs!3213 m!73763))

(assert (=> b!73484 d!17669))

(declare-fun d!17671 () Bool)

(assert (=> d!17671 (= (apply!75 (+!93 lt!32961 (tuple2!2121 lt!32971 (minValue!2114 newMap!16))) lt!32970) (apply!75 lt!32961 lt!32970))))

(declare-fun lt!33510 () Unit!2066)

(assert (=> d!17671 (= lt!33510 (choose!428 lt!32961 lt!32971 (minValue!2114 newMap!16) lt!32970))))

(declare-fun e!48702 () Bool)

(assert (=> d!17671 e!48702))

(declare-fun res!39398 () Bool)

(assert (=> d!17671 (=> (not res!39398) (not e!48702))))

(assert (=> d!17671 (= res!39398 (contains!719 lt!32961 lt!32970))))

(assert (=> d!17671 (= (addApplyDifferent!51 lt!32961 lt!32971 (minValue!2114 newMap!16) lt!32970) lt!33510)))

(declare-fun b!74549 () Bool)

(assert (=> b!74549 (= e!48702 (not (= lt!32970 lt!32971)))))

(assert (= (and d!17671 res!39398) b!74549))

(declare-fun m!73765 () Bool)

(assert (=> d!17671 m!73765))

(declare-fun m!73767 () Bool)

(assert (=> d!17671 m!73767))

(assert (=> d!17671 m!71805))

(assert (=> d!17671 m!71791))

(assert (=> d!17671 m!71791))

(assert (=> d!17671 m!71801))

(assert (=> b!73484 d!17671))

(declare-fun d!17673 () Bool)

(assert (=> d!17673 (= (apply!75 lt!32725 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1147 (getValueByKey!131 (toList!717 lt!32725) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3214 () Bool)

(assert (= bs!3214 d!17673))

(assert (=> bs!3214 m!71361))

(assert (=> bs!3214 m!73491))

(assert (=> bs!3214 m!73491))

(declare-fun m!73769 () Bool)

(assert (=> bs!3214 m!73769))

(assert (=> b!73215 d!17673))

(declare-fun d!17675 () Bool)

(declare-fun c!11246 () Bool)

(assert (=> d!17675 (= c!11246 ((_ is ValueCellFull!893) (select (arr!1847 (_values!2195 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!48703 () V!2945)

(assert (=> d!17675 (= (get!1142 (select (arr!1847 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48703)))

(declare-fun b!74550 () Bool)

(assert (=> b!74550 (= e!48703 (get!1145 (select (arr!1847 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74551 () Bool)

(assert (=> b!74551 (= e!48703 (get!1146 (select (arr!1847 (_values!2195 newMap!16)) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17675 c!11246) b!74550))

(assert (= (and d!17675 (not c!11246)) b!74551))

(assert (=> b!74550 m!71383))

(assert (=> b!74550 m!71387))

(declare-fun m!73771 () Bool)

(assert (=> b!74550 m!73771))

(assert (=> b!74551 m!71383))

(assert (=> b!74551 m!71387))

(declare-fun m!73773 () Bool)

(assert (=> b!74551 m!73773))

(assert (=> b!73215 d!17675))

(declare-fun d!17677 () Bool)

(assert (=> d!17677 (= ($colon$colon!65 e!47874 (ite c!10865 (h!2066 (toList!717 (+!93 lt!32377 lt!32383))) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376)))) (Cons!1479 (ite c!10865 (h!2066 (toList!717 (+!93 lt!32377 lt!32383))) (tuple2!2121 (_1!1071 lt!32376) (_2!1071 lt!32376))) e!47874))))

(assert (=> bm!6434 d!17677))

(declare-fun d!17679 () Bool)

(declare-fun lt!33511 () Bool)

(assert (=> d!17679 (= lt!33511 (select (content!77 (toList!717 lt!32720)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun e!48705 () Bool)

(assert (=> d!17679 (= lt!33511 e!48705)))

(declare-fun res!39399 () Bool)

(assert (=> d!17679 (=> (not res!39399) (not e!48705))))

(assert (=> d!17679 (= res!39399 ((_ is Cons!1479) (toList!717 lt!32720)))))

(assert (=> d!17679 (= (contains!722 (toList!717 lt!32720) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!33511)))

(declare-fun b!74552 () Bool)

(declare-fun e!48704 () Bool)

(assert (=> b!74552 (= e!48705 e!48704)))

(declare-fun res!39400 () Bool)

(assert (=> b!74552 (=> res!39400 e!48704)))

(assert (=> b!74552 (= res!39400 (= (h!2066 (toList!717 lt!32720)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!74553 () Bool)

(assert (=> b!74553 (= e!48704 (contains!722 (t!5031 (toList!717 lt!32720)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!17679 res!39399) b!74552))

(assert (= (and b!74552 (not res!39400)) b!74553))

(declare-fun m!73775 () Bool)

(assert (=> d!17679 m!73775))

(declare-fun m!73777 () Bool)

(assert (=> d!17679 m!73777))

(declare-fun m!73779 () Bool)

(assert (=> b!74553 m!73779))

(assert (=> b!73204 d!17679))

(assert (=> d!16941 d!17001))

(declare-fun b!74554 () Bool)

(declare-fun e!48706 () Option!137)

(assert (=> b!74554 (= e!48706 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32988)))))))

(declare-fun b!74557 () Bool)

(declare-fun e!48707 () Option!137)

(assert (=> b!74557 (= e!48707 None!135)))

(declare-fun b!74556 () Bool)

(assert (=> b!74556 (= e!48707 (getValueByKey!131 (t!5031 (toList!717 lt!32988)) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17681 () Bool)

(declare-fun c!11247 () Bool)

(assert (=> d!17681 (= c!11247 (and ((_ is Cons!1479) (toList!717 lt!32988)) (= (_1!1071 (h!2066 (toList!717 lt!32988))) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17681 (= (getValueByKey!131 (toList!717 lt!32988) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48706)))

(declare-fun b!74555 () Bool)

(assert (=> b!74555 (= e!48706 e!48707)))

(declare-fun c!11248 () Bool)

(assert (=> b!74555 (= c!11248 (and ((_ is Cons!1479) (toList!717 lt!32988)) (not (= (_1!1071 (h!2066 (toList!717 lt!32988))) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17681 c!11247) b!74554))

(assert (= (and d!17681 (not c!11247)) b!74555))

(assert (= (and b!74555 c!11248) b!74556))

(assert (= (and b!74555 (not c!11248)) b!74557))

(declare-fun m!73781 () Bool)

(assert (=> b!74556 m!73781))

(assert (=> b!73530 d!17681))

(declare-fun d!17683 () Bool)

(declare-fun lt!33512 () Bool)

(assert (=> d!17683 (= lt!33512 (select (content!77 (toList!717 lt!33012)) (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun e!48709 () Bool)

(assert (=> d!17683 (= lt!33512 e!48709)))

(declare-fun res!39401 () Bool)

(assert (=> d!17683 (=> (not res!39401) (not e!48709))))

(assert (=> d!17683 (= res!39401 ((_ is Cons!1479) (toList!717 lt!33012)))))

(assert (=> d!17683 (= (contains!722 (toList!717 lt!33012) (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!33512)))

(declare-fun b!74558 () Bool)

(declare-fun e!48708 () Bool)

(assert (=> b!74558 (= e!48709 e!48708)))

(declare-fun res!39402 () Bool)

(assert (=> b!74558 (=> res!39402 e!48708)))

(assert (=> b!74558 (= res!39402 (= (h!2066 (toList!717 lt!33012)) (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!74559 () Bool)

(assert (=> b!74559 (= e!48708 (contains!722 (t!5031 (toList!717 lt!33012)) (tuple2!2121 lt!32625 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!17683 res!39401) b!74558))

(assert (= (and b!74558 (not res!39402)) b!74559))

(declare-fun m!73783 () Bool)

(assert (=> d!17683 m!73783))

(declare-fun m!73785 () Bool)

(assert (=> d!17683 m!73785))

(declare-fun m!73787 () Bool)

(assert (=> b!74559 m!73787))

(assert (=> b!73547 d!17683))

(declare-fun d!17685 () Bool)

(declare-fun e!48711 () Bool)

(assert (=> d!17685 e!48711))

(declare-fun res!39403 () Bool)

(assert (=> d!17685 (=> res!39403 e!48711)))

(declare-fun lt!33516 () Bool)

(assert (=> d!17685 (= res!39403 (not lt!33516))))

(declare-fun lt!33514 () Bool)

(assert (=> d!17685 (= lt!33516 lt!33514)))

(declare-fun lt!33513 () Unit!2066)

(declare-fun e!48710 () Unit!2066)

(assert (=> d!17685 (= lt!33513 e!48710)))

(declare-fun c!11249 () Bool)

(assert (=> d!17685 (= c!11249 lt!33514)))

(assert (=> d!17685 (= lt!33514 (containsKey!135 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(assert (=> d!17685 (= (contains!719 (getCurrentListMap!410 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))) lt!33516)))

(declare-fun b!74560 () Bool)

(declare-fun lt!33515 () Unit!2066)

(assert (=> b!74560 (= e!48710 lt!33515)))

(assert (=> b!74560 (= lt!33515 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(assert (=> b!74560 (isDefined!85 (getValueByKey!131 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540))))))

(declare-fun b!74561 () Bool)

(declare-fun Unit!2140 () Unit!2066)

(assert (=> b!74561 (= e!48710 Unit!2140)))

(declare-fun b!74562 () Bool)

(assert (=> b!74562 (= e!48711 (isDefined!85 (getValueByKey!131 (toList!717 (getCurrentListMap!410 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (arr!1846 (_keys!3863 newMap!16)) (index!3088 lt!32540)))))))

(assert (= (and d!17685 c!11249) b!74560))

(assert (= (and d!17685 (not c!11249)) b!74561))

(assert (= (and d!17685 (not res!39403)) b!74562))

(assert (=> d!17685 m!71017))

(declare-fun m!73789 () Bool)

(assert (=> d!17685 m!73789))

(assert (=> b!74560 m!71017))

(declare-fun m!73791 () Bool)

(assert (=> b!74560 m!73791))

(assert (=> b!74560 m!71017))

(declare-fun m!73793 () Bool)

(assert (=> b!74560 m!73793))

(assert (=> b!74560 m!73793))

(declare-fun m!73795 () Bool)

(assert (=> b!74560 m!73795))

(assert (=> b!74562 m!71017))

(assert (=> b!74562 m!73793))

(assert (=> b!74562 m!73793))

(assert (=> b!74562 m!73795))

(assert (=> b!73418 d!17685))

(declare-fun b!74563 () Bool)

(declare-fun e!48720 () Bool)

(declare-fun e!48719 () Bool)

(assert (=> b!74563 (= e!48720 e!48719)))

(declare-fun res!39406 () Bool)

(declare-fun call!6590 () Bool)

(assert (=> b!74563 (= res!39406 call!6590)))

(assert (=> b!74563 (=> (not res!39406) (not e!48719))))

(declare-fun b!74564 () Bool)

(declare-fun e!48717 () ListLongMap!1403)

(declare-fun call!6589 () ListLongMap!1403)

(assert (=> b!74564 (= e!48717 call!6589)))

(declare-fun b!74565 () Bool)

(declare-fun e!48712 () Bool)

(assert (=> b!74565 (= e!48712 e!48720)))

(declare-fun c!11251 () Bool)

(assert (=> b!74565 (= c!11251 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74566 () Bool)

(declare-fun e!48718 () Bool)

(declare-fun call!6592 () Bool)

(assert (=> b!74566 (= e!48718 (not call!6592))))

(declare-fun b!74567 () Bool)

(declare-fun e!48723 () ListLongMap!1403)

(declare-fun call!6594 () ListLongMap!1403)

(assert (=> b!74567 (= e!48723 call!6594)))

(declare-fun b!74569 () Bool)

(declare-fun e!48714 () Bool)

(assert (=> b!74569 (= e!48718 e!48714)))

(declare-fun res!39409 () Bool)

(assert (=> b!74569 (= res!39409 call!6592)))

(assert (=> b!74569 (=> (not res!39409) (not e!48714))))

(declare-fun bm!6585 () Bool)

(declare-fun call!6591 () ListLongMap!1403)

(declare-fun call!6593 () ListLongMap!1403)

(assert (=> bm!6585 (= call!6591 call!6593)))

(declare-fun b!74570 () Bool)

(declare-fun e!48722 () ListLongMap!1403)

(assert (=> b!74570 (= e!48722 e!48717)))

(declare-fun c!11254 () Bool)

(assert (=> b!74570 (= c!11254 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6586 () Bool)

(declare-fun lt!33517 () ListLongMap!1403)

(assert (=> bm!6586 (= call!6590 (contains!719 lt!33517 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!11255 () Bool)

(declare-fun bm!6587 () Bool)

(declare-fun call!6588 () ListLongMap!1403)

(assert (=> bm!6587 (= call!6588 (+!93 (ite c!11255 call!6593 (ite c!11254 call!6591 call!6594)) (ite (or c!11255 c!11254) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!74571 () Bool)

(declare-fun e!48724 () Bool)

(assert (=> b!74571 (= e!48724 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74572 () Bool)

(declare-fun res!39407 () Bool)

(assert (=> b!74572 (=> (not res!39407) (not e!48712))))

(assert (=> b!74572 (= res!39407 e!48718)))

(declare-fun c!11252 () Bool)

(assert (=> b!74572 (= c!11252 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6588 () Bool)

(assert (=> bm!6588 (= call!6594 call!6591)))

(declare-fun e!48715 () Bool)

(declare-fun b!74573 () Bool)

(assert (=> b!74573 (= e!48715 (= (apply!75 lt!33517 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 lt!32548) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74573 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 lt!32548)))))

(assert (=> b!74573 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74574 () Bool)

(assert (=> b!74574 (= e!48719 (= (apply!75 lt!33517 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun bm!6589 () Bool)

(assert (=> bm!6589 (= call!6592 (contains!719 lt!33517 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74575 () Bool)

(declare-fun e!48721 () Bool)

(assert (=> b!74575 (= e!48721 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74568 () Bool)

(declare-fun e!48713 () Unit!2066)

(declare-fun lt!33524 () Unit!2066)

(assert (=> b!74568 (= e!48713 lt!33524)))

(declare-fun lt!33536 () ListLongMap!1403)

(assert (=> b!74568 (= lt!33536 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33526 () (_ BitVec 64))

(assert (=> b!74568 (= lt!33526 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33529 () (_ BitVec 64))

(assert (=> b!74568 (= lt!33529 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33535 () Unit!2066)

(assert (=> b!74568 (= lt!33535 (addStillContains!51 lt!33536 lt!33526 (zeroValue!2114 newMap!16) lt!33529))))

(assert (=> b!74568 (contains!719 (+!93 lt!33536 (tuple2!2121 lt!33526 (zeroValue!2114 newMap!16))) lt!33529)))

(declare-fun lt!33530 () Unit!2066)

(assert (=> b!74568 (= lt!33530 lt!33535)))

(declare-fun lt!33523 () ListLongMap!1403)

(assert (=> b!74568 (= lt!33523 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33533 () (_ BitVec 64))

(assert (=> b!74568 (= lt!33533 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33532 () (_ BitVec 64))

(assert (=> b!74568 (= lt!33532 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33525 () Unit!2066)

(assert (=> b!74568 (= lt!33525 (addApplyDifferent!51 lt!33523 lt!33533 (minValue!2114 newMap!16) lt!33532))))

(assert (=> b!74568 (= (apply!75 (+!93 lt!33523 (tuple2!2121 lt!33533 (minValue!2114 newMap!16))) lt!33532) (apply!75 lt!33523 lt!33532))))

(declare-fun lt!33537 () Unit!2066)

(assert (=> b!74568 (= lt!33537 lt!33525)))

(declare-fun lt!33534 () ListLongMap!1403)

(assert (=> b!74568 (= lt!33534 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33538 () (_ BitVec 64))

(assert (=> b!74568 (= lt!33538 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33521 () (_ BitVec 64))

(assert (=> b!74568 (= lt!33521 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!33519 () Unit!2066)

(assert (=> b!74568 (= lt!33519 (addApplyDifferent!51 lt!33534 lt!33538 (zeroValue!2114 newMap!16) lt!33521))))

(assert (=> b!74568 (= (apply!75 (+!93 lt!33534 (tuple2!2121 lt!33538 (zeroValue!2114 newMap!16))) lt!33521) (apply!75 lt!33534 lt!33521))))

(declare-fun lt!33527 () Unit!2066)

(assert (=> b!74568 (= lt!33527 lt!33519)))

(declare-fun lt!33520 () ListLongMap!1403)

(assert (=> b!74568 (= lt!33520 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33522 () (_ BitVec 64))

(assert (=> b!74568 (= lt!33522 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33531 () (_ BitVec 64))

(assert (=> b!74568 (= lt!33531 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!74568 (= lt!33524 (addApplyDifferent!51 lt!33520 lt!33522 (minValue!2114 newMap!16) lt!33531))))

(assert (=> b!74568 (= (apply!75 (+!93 lt!33520 (tuple2!2121 lt!33522 (minValue!2114 newMap!16))) lt!33531) (apply!75 lt!33520 lt!33531))))

(declare-fun d!17687 () Bool)

(assert (=> d!17687 e!48712))

(declare-fun res!39405 () Bool)

(assert (=> d!17687 (=> (not res!39405) (not e!48712))))

(assert (=> d!17687 (= res!39405 (or (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))))

(declare-fun lt!33528 () ListLongMap!1403)

(assert (=> d!17687 (= lt!33517 lt!33528)))

(declare-fun lt!33518 () Unit!2066)

(assert (=> d!17687 (= lt!33518 e!48713)))

(declare-fun c!11250 () Bool)

(assert (=> d!17687 (= c!11250 e!48721)))

(declare-fun res!39408 () Bool)

(assert (=> d!17687 (=> (not res!39408) (not e!48721))))

(assert (=> d!17687 (= res!39408 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17687 (= lt!33528 e!48722)))

(assert (=> d!17687 (= c!11255 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17687 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17687 (= (getCurrentListMap!410 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33517)))

(declare-fun b!74576 () Bool)

(assert (=> b!74576 (= e!48722 (+!93 call!6588 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!74577 () Bool)

(declare-fun c!11253 () Bool)

(assert (=> b!74577 (= c!11253 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74577 (= e!48717 e!48723)))

(declare-fun b!74578 () Bool)

(assert (=> b!74578 (= e!48723 call!6589)))

(declare-fun b!74579 () Bool)

(assert (=> b!74579 (= e!48720 (not call!6590))))

(declare-fun b!74580 () Bool)

(declare-fun e!48716 () Bool)

(assert (=> b!74580 (= e!48716 e!48715)))

(declare-fun res!39410 () Bool)

(assert (=> b!74580 (=> (not res!39410) (not e!48715))))

(assert (=> b!74580 (= res!39410 (contains!719 lt!33517 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74580 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74581 () Bool)

(assert (=> b!74581 (= e!48714 (= (apply!75 lt!33517 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!74582 () Bool)

(declare-fun Unit!2141 () Unit!2066)

(assert (=> b!74582 (= e!48713 Unit!2141)))

(declare-fun bm!6590 () Bool)

(assert (=> bm!6590 (= call!6589 call!6588)))

(declare-fun b!74583 () Bool)

(declare-fun res!39404 () Bool)

(assert (=> b!74583 (=> (not res!39404) (not e!48712))))

(assert (=> b!74583 (= res!39404 e!48716)))

(declare-fun res!39412 () Bool)

(assert (=> b!74583 (=> res!39412 e!48716)))

(assert (=> b!74583 (= res!39412 (not e!48724))))

(declare-fun res!39411 () Bool)

(assert (=> b!74583 (=> (not res!39411) (not e!48724))))

(assert (=> b!74583 (= res!39411 (bvslt #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(declare-fun bm!6591 () Bool)

(assert (=> bm!6591 (= call!6593 (getCurrentListMapNoExtraKeys!57 (_keys!3863 newMap!16) lt!32548 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (= (and d!17687 c!11255) b!74576))

(assert (= (and d!17687 (not c!11255)) b!74570))

(assert (= (and b!74570 c!11254) b!74564))

(assert (= (and b!74570 (not c!11254)) b!74577))

(assert (= (and b!74577 c!11253) b!74578))

(assert (= (and b!74577 (not c!11253)) b!74567))

(assert (= (or b!74578 b!74567) bm!6588))

(assert (= (or b!74564 bm!6588) bm!6585))

(assert (= (or b!74564 b!74578) bm!6590))

(assert (= (or b!74576 bm!6585) bm!6591))

(assert (= (or b!74576 bm!6590) bm!6587))

(assert (= (and d!17687 res!39408) b!74575))

(assert (= (and d!17687 c!11250) b!74568))

(assert (= (and d!17687 (not c!11250)) b!74582))

(assert (= (and d!17687 res!39405) b!74583))

(assert (= (and b!74583 res!39411) b!74571))

(assert (= (and b!74583 (not res!39412)) b!74580))

(assert (= (and b!74580 res!39410) b!74573))

(assert (= (and b!74583 res!39404) b!74572))

(assert (= (and b!74572 c!11252) b!74569))

(assert (= (and b!74572 (not c!11252)) b!74566))

(assert (= (and b!74569 res!39409) b!74581))

(assert (= (or b!74569 b!74566) bm!6589))

(assert (= (and b!74572 res!39407) b!74565))

(assert (= (and b!74565 c!11251) b!74563))

(assert (= (and b!74565 (not c!11251)) b!74579))

(assert (= (and b!74563 res!39406) b!74574))

(assert (= (or b!74563 b!74579) bm!6586))

(declare-fun b_lambda!3323 () Bool)

(assert (=> (not b_lambda!3323) (not b!74573)))

(assert (=> b!74573 t!5045))

(declare-fun b_and!4553 () Bool)

(assert (= b_and!4549 (and (=> t!5045 result!2689) b_and!4553)))

(assert (=> b!74573 t!5047))

(declare-fun b_and!4555 () Bool)

(assert (= b_and!4551 (and (=> t!5047 result!2691) b_and!4555)))

(declare-fun m!73797 () Bool)

(assert (=> bm!6586 m!73797))

(declare-fun m!73799 () Bool)

(assert (=> b!74568 m!73799))

(declare-fun m!73801 () Bool)

(assert (=> b!74568 m!73801))

(declare-fun m!73803 () Bool)

(assert (=> b!74568 m!73803))

(declare-fun m!73805 () Bool)

(assert (=> b!74568 m!73805))

(declare-fun m!73807 () Bool)

(assert (=> b!74568 m!73807))

(declare-fun m!73809 () Bool)

(assert (=> b!74568 m!73809))

(declare-fun m!73811 () Bool)

(assert (=> b!74568 m!73811))

(declare-fun m!73813 () Bool)

(assert (=> b!74568 m!73813))

(assert (=> b!74568 m!73807))

(declare-fun m!73815 () Bool)

(assert (=> b!74568 m!73815))

(declare-fun m!73817 () Bool)

(assert (=> b!74568 m!73817))

(declare-fun m!73819 () Bool)

(assert (=> b!74568 m!73819))

(declare-fun m!73821 () Bool)

(assert (=> b!74568 m!73821))

(assert (=> b!74568 m!73813))

(declare-fun m!73823 () Bool)

(assert (=> b!74568 m!73823))

(assert (=> b!74568 m!73799))

(assert (=> b!74568 m!71361))

(declare-fun m!73825 () Bool)

(assert (=> b!74568 m!73825))

(declare-fun m!73827 () Bool)

(assert (=> b!74568 m!73827))

(assert (=> b!74568 m!73803))

(declare-fun m!73829 () Bool)

(assert (=> b!74568 m!73829))

(declare-fun m!73831 () Bool)

(assert (=> b!74581 m!73831))

(declare-fun m!73833 () Bool)

(assert (=> b!74574 m!73833))

(assert (=> b!74571 m!71361))

(assert (=> b!74571 m!71361))

(assert (=> b!74571 m!71373))

(declare-fun m!73835 () Bool)

(assert (=> bm!6587 m!73835))

(assert (=> b!74575 m!71361))

(assert (=> b!74575 m!71361))

(assert (=> b!74575 m!71373))

(assert (=> d!17687 m!71219))

(declare-fun m!73837 () Bool)

(assert (=> b!74576 m!73837))

(declare-fun m!73839 () Bool)

(assert (=> bm!6589 m!73839))

(assert (=> bm!6591 m!73821))

(assert (=> b!74580 m!71361))

(assert (=> b!74580 m!71361))

(declare-fun m!73841 () Bool)

(assert (=> b!74580 m!73841))

(assert (=> b!74573 m!71361))

(declare-fun m!73843 () Bool)

(assert (=> b!74573 m!73843))

(assert (=> b!74573 m!71361))

(declare-fun m!73845 () Bool)

(assert (=> b!74573 m!73845))

(assert (=> b!74573 m!73843))

(assert (=> b!74573 m!71387))

(declare-fun m!73847 () Bool)

(assert (=> b!74573 m!73847))

(assert (=> b!74573 m!71387))

(assert (=> b!73418 d!17687))

(declare-fun b!74584 () Bool)

(declare-fun e!48725 () Bool)

(declare-fun e!48728 () Bool)

(assert (=> b!74584 (= e!48725 e!48728)))

(declare-fun res!39413 () Bool)

(assert (=> b!74584 (=> (not res!39413) (not e!48728))))

(declare-fun e!48727 () Bool)

(assert (=> b!74584 (= res!39413 (not e!48727))))

(declare-fun res!39414 () Bool)

(assert (=> b!74584 (=> (not res!39414) (not e!48727))))

(assert (=> b!74584 (= res!39414 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6592 () Bool)

(declare-fun call!6595 () Bool)

(declare-fun c!11256 () Bool)

(assert (=> bm!6592 (= call!6595 (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!11256 (Cons!1480 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000) Nil!1481) Nil!1481)))))

(declare-fun d!17689 () Bool)

(declare-fun res!39415 () Bool)

(assert (=> d!17689 (=> res!39415 e!48725)))

(assert (=> d!17689 (= res!39415 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 (v!2523 (underlying!256 thiss!992))))))))

(assert (=> d!17689 (= (arrayNoDuplicates!0 (_keys!3863 (v!2523 (underlying!256 thiss!992))) #b00000000000000000000000000000000 Nil!1481) e!48725)))

(declare-fun b!74585 () Bool)

(declare-fun e!48726 () Bool)

(assert (=> b!74585 (= e!48728 e!48726)))

(assert (=> b!74585 (= c!11256 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!74586 () Bool)

(assert (=> b!74586 (= e!48726 call!6595)))

(declare-fun b!74587 () Bool)

(assert (=> b!74587 (= e!48727 (contains!721 Nil!1481 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!74588 () Bool)

(assert (=> b!74588 (= e!48726 call!6595)))

(assert (= (and d!17689 (not res!39415)) b!74584))

(assert (= (and b!74584 res!39414) b!74587))

(assert (= (and b!74584 res!39413) b!74585))

(assert (= (and b!74585 c!11256) b!74588))

(assert (= (and b!74585 (not c!11256)) b!74586))

(assert (= (or b!74588 b!74586) bm!6592))

(assert (=> b!74584 m!73205))

(assert (=> b!74584 m!73205))

(assert (=> b!74584 m!73207))

(assert (=> bm!6592 m!73205))

(declare-fun m!73849 () Bool)

(assert (=> bm!6592 m!73849))

(assert (=> b!74585 m!73205))

(assert (=> b!74585 m!73205))

(assert (=> b!74585 m!73207))

(assert (=> b!74587 m!73205))

(assert (=> b!74587 m!73205))

(declare-fun m!73851 () Bool)

(assert (=> b!74587 m!73851))

(assert (=> b!73196 d!17689))

(declare-fun b!74589 () Bool)

(declare-fun e!48729 () Option!137)

(assert (=> b!74589 (= e!48729 (Some!136 (_2!1071 (h!2066 (t!5031 lt!32669)))))))

(declare-fun b!74592 () Bool)

(declare-fun e!48730 () Option!137)

(assert (=> b!74592 (= e!48730 None!135)))

(declare-fun b!74591 () Bool)

(assert (=> b!74591 (= e!48730 (getValueByKey!131 (t!5031 (t!5031 lt!32669)) (_1!1071 lt!32383)))))

(declare-fun d!17691 () Bool)

(declare-fun c!11257 () Bool)

(assert (=> d!17691 (= c!11257 (and ((_ is Cons!1479) (t!5031 lt!32669)) (= (_1!1071 (h!2066 (t!5031 lt!32669))) (_1!1071 lt!32383))))))

(assert (=> d!17691 (= (getValueByKey!131 (t!5031 lt!32669) (_1!1071 lt!32383)) e!48729)))

(declare-fun b!74590 () Bool)

(assert (=> b!74590 (= e!48729 e!48730)))

(declare-fun c!11258 () Bool)

(assert (=> b!74590 (= c!11258 (and ((_ is Cons!1479) (t!5031 lt!32669)) (not (= (_1!1071 (h!2066 (t!5031 lt!32669))) (_1!1071 lt!32383)))))))

(assert (= (and d!17691 c!11257) b!74589))

(assert (= (and d!17691 (not c!11257)) b!74590))

(assert (= (and b!74590 c!11258) b!74591))

(assert (= (and b!74590 (not c!11258)) b!74592))

(declare-fun m!73853 () Bool)

(assert (=> b!74591 m!73853))

(assert (=> b!73315 d!17691))

(declare-fun d!17693 () Bool)

(declare-fun lt!33539 () Bool)

(assert (=> d!17693 (= lt!33539 (select (content!77 (toList!717 lt!32712)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun e!48732 () Bool)

(assert (=> d!17693 (= lt!33539 e!48732)))

(declare-fun res!39416 () Bool)

(assert (=> d!17693 (=> (not res!39416) (not e!48732))))

(assert (=> d!17693 (= res!39416 ((_ is Cons!1479) (toList!717 lt!32712)))))

(assert (=> d!17693 (= (contains!722 (toList!717 lt!32712) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) lt!33539)))

(declare-fun b!74593 () Bool)

(declare-fun e!48731 () Bool)

(assert (=> b!74593 (= e!48732 e!48731)))

(declare-fun res!39417 () Bool)

(assert (=> b!74593 (=> res!39417 e!48731)))

(assert (=> b!74593 (= res!39417 (= (h!2066 (toList!717 lt!32712)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(declare-fun b!74594 () Bool)

(assert (=> b!74594 (= e!48731 (contains!722 (t!5031 (toList!717 lt!32712)) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))

(assert (= (and d!17693 res!39416) b!74593))

(assert (= (and b!74593 (not res!39417)) b!74594))

(declare-fun m!73855 () Bool)

(assert (=> d!17693 m!73855))

(declare-fun m!73857 () Bool)

(assert (=> d!17693 m!73857))

(declare-fun m!73859 () Bool)

(assert (=> b!74594 m!73859))

(assert (=> b!73200 d!17693))

(declare-fun lt!33540 () Bool)

(declare-fun d!17695 () Bool)

(assert (=> d!17695 (= lt!33540 (select (content!77 (toList!717 lt!32786)) (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun e!48734 () Bool)

(assert (=> d!17695 (= lt!33540 e!48734)))

(declare-fun res!39418 () Bool)

(assert (=> d!17695 (=> (not res!39418) (not e!48734))))

(assert (=> d!17695 (= res!39418 ((_ is Cons!1479) (toList!717 lt!32786)))))

(assert (=> d!17695 (= (contains!722 (toList!717 lt!32786) (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33540)))

(declare-fun b!74595 () Bool)

(declare-fun e!48733 () Bool)

(assert (=> b!74595 (= e!48734 e!48733)))

(declare-fun res!39419 () Bool)

(assert (=> b!74595 (=> res!39419 e!48733)))

(assert (=> b!74595 (= res!39419 (= (h!2066 (toList!717 lt!32786)) (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74596 () Bool)

(assert (=> b!74596 (= e!48733 (contains!722 (t!5031 (toList!717 lt!32786)) (ite (or c!10823 c!10822) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (= (and d!17695 res!39418) b!74595))

(assert (= (and b!74595 (not res!39419)) b!74596))

(declare-fun m!73861 () Bool)

(assert (=> d!17695 m!73861))

(declare-fun m!73863 () Bool)

(assert (=> d!17695 m!73863))

(declare-fun m!73865 () Bool)

(assert (=> b!74596 m!73865))

(assert (=> b!73330 d!17695))

(declare-fun d!17697 () Bool)

(assert (=> d!17697 (= (get!1146 (select (arr!1847 (_values!2195 (v!2523 (underlying!256 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!325 (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!73239 d!17697))

(declare-fun d!17699 () Bool)

(declare-fun e!48736 () Bool)

(assert (=> d!17699 e!48736))

(declare-fun res!39420 () Bool)

(assert (=> d!17699 (=> res!39420 e!48736)))

(declare-fun lt!33544 () Bool)

(assert (=> d!17699 (= res!39420 (not lt!33544))))

(declare-fun lt!33542 () Bool)

(assert (=> d!17699 (= lt!33544 lt!33542)))

(declare-fun lt!33541 () Unit!2066)

(declare-fun e!48735 () Unit!2066)

(assert (=> d!17699 (= lt!33541 e!48735)))

(declare-fun c!11259 () Bool)

(assert (=> d!17699 (= c!11259 lt!33542)))

(assert (=> d!17699 (= lt!33542 (containsKey!135 (toList!717 lt!32988) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> d!17699 (= (contains!719 lt!32988 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33544)))

(declare-fun b!74597 () Bool)

(declare-fun lt!33543 () Unit!2066)

(assert (=> b!74597 (= e!48735 lt!33543)))

(assert (=> b!74597 (= lt!33543 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32988) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(assert (=> b!74597 (isDefined!85 (getValueByKey!131 (toList!717 lt!32988) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74598 () Bool)

(declare-fun Unit!2142 () Unit!2066)

(assert (=> b!74598 (= e!48735 Unit!2142)))

(declare-fun b!74599 () Bool)

(assert (=> b!74599 (= e!48736 (isDefined!85 (getValueByKey!131 (toList!717 lt!32988) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17699 c!11259) b!74597))

(assert (= (and d!17699 (not c!11259)) b!74598))

(assert (= (and d!17699 (not res!39420)) b!74599))

(declare-fun m!73867 () Bool)

(assert (=> d!17699 m!73867))

(declare-fun m!73869 () Bool)

(assert (=> b!74597 m!73869))

(assert (=> b!74597 m!71847))

(assert (=> b!74597 m!71847))

(declare-fun m!73871 () Bool)

(assert (=> b!74597 m!73871))

(assert (=> b!74599 m!71847))

(assert (=> b!74599 m!71847))

(assert (=> b!74599 m!73871))

(assert (=> d!16943 d!17699))

(declare-fun b!74600 () Bool)

(declare-fun e!48737 () Option!137)

(assert (=> b!74600 (= e!48737 (Some!136 (_2!1071 (h!2066 lt!32989))))))

(declare-fun b!74603 () Bool)

(declare-fun e!48738 () Option!137)

(assert (=> b!74603 (= e!48738 None!135)))

(declare-fun b!74602 () Bool)

(assert (=> b!74602 (= e!48738 (getValueByKey!131 (t!5031 lt!32989) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun d!17701 () Bool)

(declare-fun c!11260 () Bool)

(assert (=> d!17701 (= c!11260 (and ((_ is Cons!1479) lt!32989) (= (_1!1071 (h!2066 lt!32989)) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17701 (= (getValueByKey!131 lt!32989 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) e!48737)))

(declare-fun b!74601 () Bool)

(assert (=> b!74601 (= e!48737 e!48738)))

(declare-fun c!11261 () Bool)

(assert (=> b!74601 (= c!11261 (and ((_ is Cons!1479) lt!32989) (not (= (_1!1071 (h!2066 lt!32989)) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(assert (= (and d!17701 c!11260) b!74600))

(assert (= (and d!17701 (not c!11260)) b!74601))

(assert (= (and b!74601 c!11261) b!74602))

(assert (= (and b!74601 (not c!11261)) b!74603))

(declare-fun m!73873 () Bool)

(assert (=> b!74602 m!73873))

(assert (=> d!16943 d!17701))

(declare-fun d!17703 () Bool)

(assert (=> d!17703 (= (getValueByKey!131 lt!32989 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) (Some!136 (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun lt!33545 () Unit!2066)

(assert (=> d!17703 (= lt!33545 (choose!420 lt!32989 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun e!48739 () Bool)

(assert (=> d!17703 e!48739))

(declare-fun res!39421 () Bool)

(assert (=> d!17703 (=> (not res!39421) (not e!48739))))

(assert (=> d!17703 (= res!39421 (isStrictlySorted!287 lt!32989))))

(assert (=> d!17703 (= (lemmaContainsTupThenGetReturnValue!51 lt!32989 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33545)))

(declare-fun b!74604 () Bool)

(declare-fun res!39422 () Bool)

(assert (=> b!74604 (=> (not res!39422) (not e!48739))))

(assert (=> b!74604 (= res!39422 (containsKey!135 lt!32989 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74605 () Bool)

(assert (=> b!74605 (= e!48739 (contains!722 lt!32989 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (= (and d!17703 res!39421) b!74604))

(assert (= (and b!74604 res!39422) b!74605))

(assert (=> d!17703 m!71841))

(declare-fun m!73875 () Bool)

(assert (=> d!17703 m!73875))

(declare-fun m!73877 () Bool)

(assert (=> d!17703 m!73877))

(declare-fun m!73879 () Bool)

(assert (=> b!74604 m!73879))

(declare-fun m!73881 () Bool)

(assert (=> b!74605 m!73881))

(assert (=> d!16943 d!17703))

(declare-fun d!17705 () Bool)

(declare-fun e!48742 () Bool)

(assert (=> d!17705 e!48742))

(declare-fun res!39424 () Bool)

(assert (=> d!17705 (=> (not res!39424) (not e!48742))))

(declare-fun lt!33546 () List!1483)

(assert (=> d!17705 (= res!39424 (isStrictlySorted!287 lt!33546))))

(declare-fun e!48744 () List!1483)

(assert (=> d!17705 (= lt!33546 e!48744)))

(declare-fun c!11264 () Bool)

(assert (=> d!17705 (= c!11264 (and ((_ is Cons!1479) (toList!717 lt!32623)) (bvslt (_1!1071 (h!2066 (toList!717 lt!32623))) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(assert (=> d!17705 (isStrictlySorted!287 (toList!717 lt!32623))))

(assert (=> d!17705 (= (insertStrictlySorted!54 (toList!717 lt!32623) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))) lt!33546)))

(declare-fun b!74606 () Bool)

(declare-fun res!39423 () Bool)

(assert (=> b!74606 (=> (not res!39423) (not e!48742))))

(assert (=> b!74606 (= res!39423 (containsKey!135 lt!33546 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74607 () Bool)

(declare-fun e!48743 () List!1483)

(declare-fun call!6598 () List!1483)

(assert (=> b!74607 (= e!48743 call!6598)))

(declare-fun bm!6593 () Bool)

(declare-fun call!6596 () List!1483)

(declare-fun call!6597 () List!1483)

(assert (=> bm!6593 (= call!6596 call!6597)))

(declare-fun b!74608 () Bool)

(assert (=> b!74608 (= e!48744 call!6597)))

(declare-fun b!74609 () Bool)

(declare-fun e!48740 () List!1483)

(assert (=> b!74609 (= e!48740 (insertStrictlySorted!54 (t!5031 (toList!717 lt!32623)) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))

(declare-fun b!74610 () Bool)

(assert (=> b!74610 (= e!48743 call!6598)))

(declare-fun b!74611 () Bool)

(assert (=> b!74611 (= e!48742 (contains!722 lt!33546 (tuple2!2121 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74612 () Bool)

(declare-fun c!11262 () Bool)

(assert (=> b!74612 (= c!11262 (and ((_ is Cons!1479) (toList!717 lt!32623)) (bvsgt (_1!1071 (h!2066 (toList!717 lt!32623))) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun e!48741 () List!1483)

(assert (=> b!74612 (= e!48741 e!48743)))

(declare-fun bm!6594 () Bool)

(assert (=> bm!6594 (= call!6597 ($colon$colon!65 e!48740 (ite c!11264 (h!2066 (toList!717 lt!32623)) (tuple2!2121 (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))) (_2!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992)))))))))))

(declare-fun c!11265 () Bool)

(assert (=> bm!6594 (= c!11265 c!11264)))

(declare-fun bm!6595 () Bool)

(assert (=> bm!6595 (= call!6598 call!6596)))

(declare-fun b!74613 () Bool)

(assert (=> b!74613 (= e!48744 e!48741)))

(declare-fun c!11263 () Bool)

(assert (=> b!74613 (= c!11263 (and ((_ is Cons!1479) (toList!717 lt!32623)) (= (_1!1071 (h!2066 (toList!717 lt!32623))) (_1!1071 (tuple2!2121 lt!32613 (zeroValue!2114 (v!2523 (underlying!256 thiss!992))))))))))

(declare-fun b!74614 () Bool)

(assert (=> b!74614 (= e!48741 call!6596)))

(declare-fun b!74615 () Bool)

(assert (=> b!74615 (= e!48740 (ite c!11263 (t!5031 (toList!717 lt!32623)) (ite c!11262 (Cons!1479 (h!2066 (toList!717 lt!32623)) (t!5031 (toList!717 lt!32623))) Nil!1480)))))

(assert (= (and d!17705 c!11264) b!74608))

(assert (= (and d!17705 (not c!11264)) b!74613))

(assert (= (and b!74613 c!11263) b!74614))

(assert (= (and b!74613 (not c!11263)) b!74612))

(assert (= (and b!74612 c!11262) b!74610))

(assert (= (and b!74612 (not c!11262)) b!74607))

(assert (= (or b!74610 b!74607) bm!6595))

(assert (= (or b!74614 bm!6595) bm!6593))

(assert (= (or b!74608 bm!6593) bm!6594))

(assert (= (and bm!6594 c!11265) b!74609))

(assert (= (and bm!6594 (not c!11265)) b!74615))

(assert (= (and d!17705 res!39424) b!74606))

(assert (= (and b!74606 res!39423) b!74611))

(declare-fun m!73883 () Bool)

(assert (=> bm!6594 m!73883))

(declare-fun m!73885 () Bool)

(assert (=> d!17705 m!73885))

(declare-fun m!73887 () Bool)

(assert (=> d!17705 m!73887))

(declare-fun m!73889 () Bool)

(assert (=> b!74609 m!73889))

(declare-fun m!73891 () Bool)

(assert (=> b!74611 m!73891))

(declare-fun m!73893 () Bool)

(assert (=> b!74606 m!73893))

(assert (=> d!16943 d!17705))

(assert (=> b!73128 d!17291))

(declare-fun d!17707 () Bool)

(assert (=> d!17707 (= (apply!75 lt!32725 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1147 (getValueByKey!131 (toList!717 lt!32725) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3215 () Bool)

(assert (= bs!3215 d!17707))

(assert (=> bs!3215 m!72453))

(assert (=> bs!3215 m!72453))

(declare-fun m!73895 () Bool)

(assert (=> bs!3215 m!73895))

(assert (=> b!73223 d!17707))

(declare-fun b!74616 () Bool)

(declare-fun e!48745 () Bool)

(declare-fun e!48748 () Bool)

(assert (=> b!74616 (= e!48745 e!48748)))

(declare-fun res!39425 () Bool)

(assert (=> b!74616 (=> (not res!39425) (not e!48748))))

(declare-fun e!48747 () Bool)

(assert (=> b!74616 (= res!39425 (not e!48747))))

(declare-fun res!39426 () Bool)

(assert (=> b!74616 (=> (not res!39426) (not e!48747))))

(assert (=> b!74616 (= res!39426 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun call!6599 () Bool)

(declare-fun c!11266 () Bool)

(declare-fun bm!6596 () Bool)

(assert (=> bm!6596 (= call!6599 (arrayNoDuplicates!0 (_keys!3863 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!11266 (Cons!1480 (select (arr!1846 (_keys!3863 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!10876 (Cons!1480 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) Nil!1481) Nil!1481)) (ite c!10876 (Cons!1480 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) Nil!1481) Nil!1481))))))

(declare-fun d!17709 () Bool)

(declare-fun res!39427 () Bool)

(assert (=> d!17709 (=> res!39427 e!48745)))

(assert (=> d!17709 (= res!39427 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17709 (= (arrayNoDuplicates!0 (_keys!3863 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!10876 (Cons!1480 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) Nil!1481) Nil!1481)) e!48745)))

(declare-fun b!74617 () Bool)

(declare-fun e!48746 () Bool)

(assert (=> b!74617 (= e!48748 e!48746)))

(assert (=> b!74617 (= c!11266 (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!74618 () Bool)

(assert (=> b!74618 (= e!48746 call!6599)))

(declare-fun b!74619 () Bool)

(assert (=> b!74619 (= e!48747 (contains!721 (ite c!10876 (Cons!1480 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000) Nil!1481) Nil!1481) (select (arr!1846 (_keys!3863 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!74620 () Bool)

(assert (=> b!74620 (= e!48746 call!6599)))

(assert (= (and d!17709 (not res!39427)) b!74616))

(assert (= (and b!74616 res!39426) b!74619))

(assert (= (and b!74616 res!39425) b!74617))

(assert (= (and b!74617 c!11266) b!74620))

(assert (= (and b!74617 (not c!11266)) b!74618))

(assert (= (or b!74620 b!74618) bm!6596))

(assert (=> b!74616 m!72601))

(assert (=> b!74616 m!72601))

(assert (=> b!74616 m!72603))

(assert (=> bm!6596 m!72601))

(declare-fun m!73897 () Bool)

(assert (=> bm!6596 m!73897))

(assert (=> b!74617 m!72601))

(assert (=> b!74617 m!72601))

(assert (=> b!74617 m!72603))

(assert (=> b!74619 m!72601))

(assert (=> b!74619 m!72601))

(declare-fun m!73899 () Bool)

(assert (=> b!74619 m!73899))

(assert (=> bm!6443 d!17709))

(declare-fun b!74621 () Bool)

(declare-fun e!48749 () (_ BitVec 32))

(assert (=> b!74621 (= e!48749 #b00000000000000000000000000000000)))

(declare-fun b!74622 () Bool)

(declare-fun e!48750 () (_ BitVec 32))

(declare-fun call!6600 () (_ BitVec 32))

(assert (=> b!74622 (= e!48750 call!6600)))

(declare-fun bm!6597 () Bool)

(assert (=> bm!6597 (= call!6600 (arrayCountValidKeys!0 lt!32877 (bvadd (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000001) (bvadd (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000001)))))

(declare-fun b!74623 () Bool)

(assert (=> b!74623 (= e!48749 e!48750)))

(declare-fun c!11267 () Bool)

(assert (=> b!74623 (= c!11267 (validKeyInArray!0 (select (arr!1846 lt!32877) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)))))))

(declare-fun b!74624 () Bool)

(assert (=> b!74624 (= e!48750 (bvadd #b00000000000000000000000000000001 call!6600))))

(declare-fun d!17711 () Bool)

(declare-fun lt!33547 () (_ BitVec 32))

(assert (=> d!17711 (and (bvsge lt!33547 #b00000000000000000000000000000000) (bvsle lt!33547 (bvsub (size!2085 lt!32877) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)))))))

(assert (=> d!17711 (= lt!33547 e!48749)))

(declare-fun c!11268 () Bool)

(assert (=> d!17711 (= c!11268 (bvsge (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (bvadd (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000001)))))

(assert (=> d!17711 (and (bvsle (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (bvadd (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000001)) (bvsge (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000001) (size!2085 lt!32877)))))

(assert (=> d!17711 (= (arrayCountValidKeys!0 lt!32877 (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (bvadd (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000001)) lt!33547)))

(assert (= (and d!17711 c!11268) b!74621))

(assert (= (and d!17711 (not c!11268)) b!74623))

(assert (= (and b!74623 c!11267) b!74624))

(assert (= (and b!74623 (not c!11267)) b!74622))

(assert (= (or b!74624 b!74622) bm!6597))

(declare-fun m!73901 () Bool)

(assert (=> bm!6597 m!73901))

(declare-fun m!73903 () Bool)

(assert (=> b!74623 m!73903))

(assert (=> b!74623 m!73903))

(declare-fun m!73905 () Bool)

(assert (=> b!74623 m!73905))

(assert (=> d!16909 d!17711))

(declare-fun d!17713 () Bool)

(declare-fun res!39428 () Bool)

(declare-fun e!48751 () Bool)

(assert (=> d!17713 (=> res!39428 e!48751)))

(assert (=> d!17713 (= res!39428 (= (select (arr!1846 lt!32899) #b00000000000000000000000000000000) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!17713 (= (arrayContainsKey!0 lt!32899 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000) e!48751)))

(declare-fun b!74625 () Bool)

(declare-fun e!48752 () Bool)

(assert (=> b!74625 (= e!48751 e!48752)))

(declare-fun res!39429 () Bool)

(assert (=> b!74625 (=> (not res!39429) (not e!48752))))

(assert (=> b!74625 (= res!39429 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 lt!32899)))))

(declare-fun b!74626 () Bool)

(assert (=> b!74626 (= e!48752 (arrayContainsKey!0 lt!32899 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!17713 (not res!39428)) b!74625))

(assert (= (and b!74625 res!39429) b!74626))

(declare-fun m!73907 () Bool)

(assert (=> d!17713 m!73907))

(assert (=> b!74626 m!70791))

(declare-fun m!73909 () Bool)

(assert (=> b!74626 m!73909))

(assert (=> d!16909 d!17713))

(declare-fun d!17715 () Bool)

(declare-fun e!48755 () Bool)

(assert (=> d!17715 e!48755))

(declare-fun res!39432 () Bool)

(assert (=> d!17715 (=> (not res!39432) (not e!48755))))

(assert (=> d!17715 (= res!39432 (and (bvsge (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000000) (bvslt (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (size!2085 (_keys!3863 newMap!16)))))))

(declare-fun lt!33550 () Unit!2066)

(declare-fun choose!102 ((_ BitVec 64) array!3871 (_ BitVec 32) (_ BitVec 32)) Unit!2066)

(assert (=> d!17715 (= lt!33550 (choose!102 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (mask!6178 newMap!16)))))

(assert (=> d!17715 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17715 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (_keys!3863 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (mask!6178 newMap!16)) lt!33550)))

(declare-fun b!74629 () Bool)

(assert (=> b!74629 (= e!48755 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (mask!6178 newMap!16)))))

(assert (= (and d!17715 res!39432) b!74629))

(assert (=> d!17715 m!70791))

(declare-fun m!73911 () Bool)

(assert (=> d!17715 m!73911))

(assert (=> d!17715 m!71219))

(assert (=> b!74629 m!71655))

(assert (=> b!74629 m!71659))

(assert (=> d!16909 d!17715))

(assert (=> d!16909 d!17283))

(declare-fun d!17717 () Bool)

(declare-fun e!48756 () Bool)

(assert (=> d!17717 e!48756))

(declare-fun res!39433 () Bool)

(assert (=> d!17717 (=> (not res!39433) (not e!48756))))

(assert (=> d!17717 (= res!39433 (and (bvsge (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000000) (bvslt (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (size!2085 lt!32895))))))

(declare-fun lt!33551 () Unit!2066)

(assert (=> d!17717 (= lt!33551 (choose!424 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (defaultEntry!2212 newMap!16)))))

(assert (=> d!17717 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17717 (= (lemmaValidKeyInArrayIsInListMap!83 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (defaultEntry!2212 newMap!16)) lt!33551)))

(declare-fun b!74630 () Bool)

(assert (=> b!74630 (= e!48756 (contains!719 (getCurrentListMap!410 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (arr!1846 lt!32895) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)))))))

(assert (= (and d!17717 res!39433) b!74630))

(declare-fun m!73913 () Bool)

(assert (=> d!17717 m!73913))

(assert (=> d!17717 m!71219))

(assert (=> b!74630 m!71629))

(declare-fun m!73915 () Bool)

(assert (=> b!74630 m!73915))

(assert (=> b!74630 m!71629))

(assert (=> b!74630 m!73915))

(declare-fun m!73917 () Bool)

(assert (=> b!74630 m!73917))

(assert (=> d!16909 d!17717))

(assert (=> d!16909 d!16847))

(declare-fun d!17719 () Bool)

(declare-fun e!48758 () Bool)

(assert (=> d!17719 e!48758))

(declare-fun res!39434 () Bool)

(assert (=> d!17719 (=> res!39434 e!48758)))

(declare-fun lt!33555 () Bool)

(assert (=> d!17719 (= res!39434 (not lt!33555))))

(declare-fun lt!33553 () Bool)

(assert (=> d!17719 (= lt!33555 lt!33553)))

(declare-fun lt!33552 () Unit!2066)

(declare-fun e!48757 () Unit!2066)

(assert (=> d!17719 (= lt!33552 e!48757)))

(declare-fun c!11269 () Bool)

(assert (=> d!17719 (= c!11269 lt!33553)))

(assert (=> d!17719 (= lt!33553 (containsKey!135 (toList!717 (getCurrentListMap!410 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)))))))

(assert (=> d!17719 (= (contains!719 (getCurrentListMap!410 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (select (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)))) lt!33555)))

(declare-fun b!74631 () Bool)

(declare-fun lt!33554 () Unit!2066)

(assert (=> b!74631 (= e!48757 lt!33554)))

(assert (=> b!74631 (= lt!33554 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 (getCurrentListMap!410 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)))))))

(assert (=> b!74631 (isDefined!85 (getValueByKey!131 (toList!717 (getCurrentListMap!410 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)))))))

(declare-fun b!74632 () Bool)

(declare-fun Unit!2143 () Unit!2066)

(assert (=> b!74632 (= e!48757 Unit!2143)))

(declare-fun b!74633 () Bool)

(assert (=> b!74633 (= e!48758 (isDefined!85 (getValueByKey!131 (toList!717 (getCurrentListMap!410 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))) (select (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))))))))

(assert (= (and d!17719 c!11269) b!74631))

(assert (= (and d!17719 (not c!11269)) b!74632))

(assert (= (and d!17719 (not res!39434)) b!74633))

(assert (=> d!17719 m!71621))

(declare-fun m!73919 () Bool)

(assert (=> d!17719 m!73919))

(assert (=> b!74631 m!71621))

(declare-fun m!73921 () Bool)

(assert (=> b!74631 m!73921))

(assert (=> b!74631 m!71621))

(declare-fun m!73923 () Bool)

(assert (=> b!74631 m!73923))

(assert (=> b!74631 m!73923))

(declare-fun m!73925 () Bool)

(assert (=> b!74631 m!73925))

(assert (=> b!74633 m!71621))

(assert (=> b!74633 m!73923))

(assert (=> b!74633 m!73923))

(assert (=> b!74633 m!73925))

(assert (=> d!16909 d!17719))

(declare-fun b!74634 () Bool)

(declare-fun e!48767 () Bool)

(declare-fun e!48766 () Bool)

(assert (=> b!74634 (= e!48767 e!48766)))

(declare-fun res!39437 () Bool)

(declare-fun call!6603 () Bool)

(assert (=> b!74634 (= res!39437 call!6603)))

(assert (=> b!74634 (=> (not res!39437) (not e!48766))))

(declare-fun b!74635 () Bool)

(declare-fun e!48764 () ListLongMap!1403)

(declare-fun call!6602 () ListLongMap!1403)

(assert (=> b!74635 (= e!48764 call!6602)))

(declare-fun b!74636 () Bool)

(declare-fun e!48759 () Bool)

(assert (=> b!74636 (= e!48759 e!48767)))

(declare-fun c!11271 () Bool)

(assert (=> b!74636 (= c!11271 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74637 () Bool)

(declare-fun e!48765 () Bool)

(declare-fun call!6605 () Bool)

(assert (=> b!74637 (= e!48765 (not call!6605))))

(declare-fun b!74638 () Bool)

(declare-fun e!48770 () ListLongMap!1403)

(declare-fun call!6607 () ListLongMap!1403)

(assert (=> b!74638 (= e!48770 call!6607)))

(declare-fun b!74640 () Bool)

(declare-fun e!48761 () Bool)

(assert (=> b!74640 (= e!48765 e!48761)))

(declare-fun res!39440 () Bool)

(assert (=> b!74640 (= res!39440 call!6605)))

(assert (=> b!74640 (=> (not res!39440) (not e!48761))))

(declare-fun bm!6598 () Bool)

(declare-fun call!6604 () ListLongMap!1403)

(declare-fun call!6606 () ListLongMap!1403)

(assert (=> bm!6598 (= call!6604 call!6606)))

(declare-fun b!74641 () Bool)

(declare-fun e!48769 () ListLongMap!1403)

(assert (=> b!74641 (= e!48769 e!48764)))

(declare-fun c!11274 () Bool)

(assert (=> b!74641 (= c!11274 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6599 () Bool)

(declare-fun lt!33556 () ListLongMap!1403)

(assert (=> bm!6599 (= call!6603 (contains!719 lt!33556 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!6601 () ListLongMap!1403)

(declare-fun bm!6600 () Bool)

(declare-fun c!11275 () Bool)

(assert (=> bm!6600 (= call!6601 (+!93 (ite c!11275 call!6606 (ite c!11274 call!6604 call!6607)) (ite (or c!11275 c!11274) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!74642 () Bool)

(declare-fun e!48771 () Bool)

(assert (=> b!74642 (= e!48771 (validKeyInArray!0 (select (arr!1846 lt!32895) #b00000000000000000000000000000000)))))

(declare-fun b!74643 () Bool)

(declare-fun res!39438 () Bool)

(assert (=> b!74643 (=> (not res!39438) (not e!48759))))

(assert (=> b!74643 (= res!39438 e!48765)))

(declare-fun c!11272 () Bool)

(assert (=> b!74643 (= c!11272 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6601 () Bool)

(assert (=> bm!6601 (= call!6607 call!6604)))

(declare-fun b!74644 () Bool)

(declare-fun e!48762 () Bool)

(assert (=> b!74644 (= e!48762 (= (apply!75 lt!33556 (select (arr!1846 lt!32895) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 lt!32888) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74644 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 lt!32888)))))

(assert (=> b!74644 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 lt!32895)))))

(declare-fun b!74645 () Bool)

(assert (=> b!74645 (= e!48766 (= (apply!75 lt!33556 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun bm!6602 () Bool)

(assert (=> bm!6602 (= call!6605 (contains!719 lt!33556 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74646 () Bool)

(declare-fun e!48768 () Bool)

(assert (=> b!74646 (= e!48768 (validKeyInArray!0 (select (arr!1846 lt!32895) #b00000000000000000000000000000000)))))

(declare-fun b!74639 () Bool)

(declare-fun e!48760 () Unit!2066)

(declare-fun lt!33563 () Unit!2066)

(assert (=> b!74639 (= e!48760 lt!33563)))

(declare-fun lt!33575 () ListLongMap!1403)

(assert (=> b!74639 (= lt!33575 (getCurrentListMapNoExtraKeys!57 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33565 () (_ BitVec 64))

(assert (=> b!74639 (= lt!33565 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33568 () (_ BitVec 64))

(assert (=> b!74639 (= lt!33568 (select (arr!1846 lt!32895) #b00000000000000000000000000000000))))

(declare-fun lt!33574 () Unit!2066)

(assert (=> b!74639 (= lt!33574 (addStillContains!51 lt!33575 lt!33565 (zeroValue!2114 newMap!16) lt!33568))))

(assert (=> b!74639 (contains!719 (+!93 lt!33575 (tuple2!2121 lt!33565 (zeroValue!2114 newMap!16))) lt!33568)))

(declare-fun lt!33569 () Unit!2066)

(assert (=> b!74639 (= lt!33569 lt!33574)))

(declare-fun lt!33562 () ListLongMap!1403)

(assert (=> b!74639 (= lt!33562 (getCurrentListMapNoExtraKeys!57 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33572 () (_ BitVec 64))

(assert (=> b!74639 (= lt!33572 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33571 () (_ BitVec 64))

(assert (=> b!74639 (= lt!33571 (select (arr!1846 lt!32895) #b00000000000000000000000000000000))))

(declare-fun lt!33564 () Unit!2066)

(assert (=> b!74639 (= lt!33564 (addApplyDifferent!51 lt!33562 lt!33572 (minValue!2114 newMap!16) lt!33571))))

(assert (=> b!74639 (= (apply!75 (+!93 lt!33562 (tuple2!2121 lt!33572 (minValue!2114 newMap!16))) lt!33571) (apply!75 lt!33562 lt!33571))))

(declare-fun lt!33576 () Unit!2066)

(assert (=> b!74639 (= lt!33576 lt!33564)))

(declare-fun lt!33573 () ListLongMap!1403)

(assert (=> b!74639 (= lt!33573 (getCurrentListMapNoExtraKeys!57 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33577 () (_ BitVec 64))

(assert (=> b!74639 (= lt!33577 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33560 () (_ BitVec 64))

(assert (=> b!74639 (= lt!33560 (select (arr!1846 lt!32895) #b00000000000000000000000000000000))))

(declare-fun lt!33558 () Unit!2066)

(assert (=> b!74639 (= lt!33558 (addApplyDifferent!51 lt!33573 lt!33577 (zeroValue!2114 newMap!16) lt!33560))))

(assert (=> b!74639 (= (apply!75 (+!93 lt!33573 (tuple2!2121 lt!33577 (zeroValue!2114 newMap!16))) lt!33560) (apply!75 lt!33573 lt!33560))))

(declare-fun lt!33566 () Unit!2066)

(assert (=> b!74639 (= lt!33566 lt!33558)))

(declare-fun lt!33559 () ListLongMap!1403)

(assert (=> b!74639 (= lt!33559 (getCurrentListMapNoExtraKeys!57 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33561 () (_ BitVec 64))

(assert (=> b!74639 (= lt!33561 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33570 () (_ BitVec 64))

(assert (=> b!74639 (= lt!33570 (select (arr!1846 lt!32895) #b00000000000000000000000000000000))))

(assert (=> b!74639 (= lt!33563 (addApplyDifferent!51 lt!33559 lt!33561 (minValue!2114 newMap!16) lt!33570))))

(assert (=> b!74639 (= (apply!75 (+!93 lt!33559 (tuple2!2121 lt!33561 (minValue!2114 newMap!16))) lt!33570) (apply!75 lt!33559 lt!33570))))

(declare-fun d!17721 () Bool)

(assert (=> d!17721 e!48759))

(declare-fun res!39436 () Bool)

(assert (=> d!17721 (=> (not res!39436) (not e!48759))))

(assert (=> d!17721 (= res!39436 (or (bvsge #b00000000000000000000000000000000 (size!2085 lt!32895)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 lt!32895)))))))

(declare-fun lt!33567 () ListLongMap!1403)

(assert (=> d!17721 (= lt!33556 lt!33567)))

(declare-fun lt!33557 () Unit!2066)

(assert (=> d!17721 (= lt!33557 e!48760)))

(declare-fun c!11270 () Bool)

(assert (=> d!17721 (= c!11270 e!48768)))

(declare-fun res!39439 () Bool)

(assert (=> d!17721 (=> (not res!39439) (not e!48768))))

(assert (=> d!17721 (= res!39439 (bvslt #b00000000000000000000000000000000 (size!2085 lt!32895)))))

(assert (=> d!17721 (= lt!33567 e!48769)))

(assert (=> d!17721 (= c!11275 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17721 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17721 (= (getCurrentListMap!410 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33556)))

(declare-fun b!74647 () Bool)

(assert (=> b!74647 (= e!48769 (+!93 call!6601 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!74648 () Bool)

(declare-fun c!11273 () Bool)

(assert (=> b!74648 (= c!11273 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74648 (= e!48764 e!48770)))

(declare-fun b!74649 () Bool)

(assert (=> b!74649 (= e!48770 call!6602)))

(declare-fun b!74650 () Bool)

(assert (=> b!74650 (= e!48767 (not call!6603))))

(declare-fun b!74651 () Bool)

(declare-fun e!48763 () Bool)

(assert (=> b!74651 (= e!48763 e!48762)))

(declare-fun res!39441 () Bool)

(assert (=> b!74651 (=> (not res!39441) (not e!48762))))

(assert (=> b!74651 (= res!39441 (contains!719 lt!33556 (select (arr!1846 lt!32895) #b00000000000000000000000000000000)))))

(assert (=> b!74651 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 lt!32895)))))

(declare-fun b!74652 () Bool)

(assert (=> b!74652 (= e!48761 (= (apply!75 lt!33556 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!74653 () Bool)

(declare-fun Unit!2144 () Unit!2066)

(assert (=> b!74653 (= e!48760 Unit!2144)))

(declare-fun bm!6603 () Bool)

(assert (=> bm!6603 (= call!6602 call!6601)))

(declare-fun b!74654 () Bool)

(declare-fun res!39435 () Bool)

(assert (=> b!74654 (=> (not res!39435) (not e!48759))))

(assert (=> b!74654 (= res!39435 e!48763)))

(declare-fun res!39443 () Bool)

(assert (=> b!74654 (=> res!39443 e!48763)))

(assert (=> b!74654 (= res!39443 (not e!48771))))

(declare-fun res!39442 () Bool)

(assert (=> b!74654 (=> (not res!39442) (not e!48771))))

(assert (=> b!74654 (= res!39442 (bvslt #b00000000000000000000000000000000 (size!2085 lt!32895)))))

(declare-fun bm!6604 () Bool)

(assert (=> bm!6604 (= call!6606 (getCurrentListMapNoExtraKeys!57 lt!32895 lt!32888 (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (= (and d!17721 c!11275) b!74647))

(assert (= (and d!17721 (not c!11275)) b!74641))

(assert (= (and b!74641 c!11274) b!74635))

(assert (= (and b!74641 (not c!11274)) b!74648))

(assert (= (and b!74648 c!11273) b!74649))

(assert (= (and b!74648 (not c!11273)) b!74638))

(assert (= (or b!74649 b!74638) bm!6601))

(assert (= (or b!74635 bm!6601) bm!6598))

(assert (= (or b!74635 b!74649) bm!6603))

(assert (= (or b!74647 bm!6598) bm!6604))

(assert (= (or b!74647 bm!6603) bm!6600))

(assert (= (and d!17721 res!39439) b!74646))

(assert (= (and d!17721 c!11270) b!74639))

(assert (= (and d!17721 (not c!11270)) b!74653))

(assert (= (and d!17721 res!39436) b!74654))

(assert (= (and b!74654 res!39442) b!74642))

(assert (= (and b!74654 (not res!39443)) b!74651))

(assert (= (and b!74651 res!39441) b!74644))

(assert (= (and b!74654 res!39435) b!74643))

(assert (= (and b!74643 c!11272) b!74640))

(assert (= (and b!74643 (not c!11272)) b!74637))

(assert (= (and b!74640 res!39440) b!74652))

(assert (= (or b!74640 b!74637) bm!6602))

(assert (= (and b!74643 res!39438) b!74636))

(assert (= (and b!74636 c!11271) b!74634))

(assert (= (and b!74636 (not c!11271)) b!74650))

(assert (= (and b!74634 res!39437) b!74645))

(assert (= (or b!74634 b!74650) bm!6599))

(declare-fun b_lambda!3325 () Bool)

(assert (=> (not b_lambda!3325) (not b!74644)))

(assert (=> b!74644 t!5045))

(declare-fun b_and!4557 () Bool)

(assert (= b_and!4553 (and (=> t!5045 result!2689) b_and!4557)))

(assert (=> b!74644 t!5047))

(declare-fun b_and!4559 () Bool)

(assert (= b_and!4555 (and (=> t!5047 result!2691) b_and!4559)))

(declare-fun m!73927 () Bool)

(assert (=> bm!6599 m!73927))

(declare-fun m!73929 () Bool)

(assert (=> b!74639 m!73929))

(declare-fun m!73931 () Bool)

(assert (=> b!74639 m!73931))

(declare-fun m!73933 () Bool)

(assert (=> b!74639 m!73933))

(declare-fun m!73935 () Bool)

(assert (=> b!74639 m!73935))

(declare-fun m!73937 () Bool)

(assert (=> b!74639 m!73937))

(declare-fun m!73939 () Bool)

(assert (=> b!74639 m!73939))

(declare-fun m!73941 () Bool)

(assert (=> b!74639 m!73941))

(declare-fun m!73943 () Bool)

(assert (=> b!74639 m!73943))

(assert (=> b!74639 m!73937))

(declare-fun m!73945 () Bool)

(assert (=> b!74639 m!73945))

(declare-fun m!73947 () Bool)

(assert (=> b!74639 m!73947))

(declare-fun m!73949 () Bool)

(assert (=> b!74639 m!73949))

(declare-fun m!73951 () Bool)

(assert (=> b!74639 m!73951))

(assert (=> b!74639 m!73943))

(declare-fun m!73953 () Bool)

(assert (=> b!74639 m!73953))

(assert (=> b!74639 m!73929))

(declare-fun m!73955 () Bool)

(assert (=> b!74639 m!73955))

(declare-fun m!73957 () Bool)

(assert (=> b!74639 m!73957))

(declare-fun m!73959 () Bool)

(assert (=> b!74639 m!73959))

(assert (=> b!74639 m!73933))

(declare-fun m!73961 () Bool)

(assert (=> b!74639 m!73961))

(declare-fun m!73963 () Bool)

(assert (=> b!74652 m!73963))

(declare-fun m!73965 () Bool)

(assert (=> b!74645 m!73965))

(assert (=> b!74642 m!73955))

(assert (=> b!74642 m!73955))

(declare-fun m!73967 () Bool)

(assert (=> b!74642 m!73967))

(declare-fun m!73969 () Bool)

(assert (=> bm!6600 m!73969))

(assert (=> b!74646 m!73955))

(assert (=> b!74646 m!73955))

(assert (=> b!74646 m!73967))

(assert (=> d!17721 m!71219))

(declare-fun m!73971 () Bool)

(assert (=> b!74647 m!73971))

(declare-fun m!73973 () Bool)

(assert (=> bm!6602 m!73973))

(assert (=> bm!6604 m!73951))

(assert (=> b!74651 m!73955))

(assert (=> b!74651 m!73955))

(declare-fun m!73975 () Bool)

(assert (=> b!74651 m!73975))

(assert (=> b!74644 m!73955))

(declare-fun m!73977 () Bool)

(assert (=> b!74644 m!73977))

(assert (=> b!74644 m!73955))

(declare-fun m!73979 () Bool)

(assert (=> b!74644 m!73979))

(assert (=> b!74644 m!73977))

(assert (=> b!74644 m!71387))

(declare-fun m!73981 () Bool)

(assert (=> b!74644 m!73981))

(assert (=> b!74644 m!71387))

(assert (=> d!16909 d!17721))

(declare-fun d!17723 () Bool)

(declare-fun e!48774 () Bool)

(assert (=> d!17723 e!48774))

(declare-fun res!39446 () Bool)

(assert (=> d!17723 (=> (not res!39446) (not e!48774))))

(assert (=> d!17723 (= res!39446 (and (bvsge (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000000) (bvslt (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (size!2085 (_keys!3863 newMap!16))) (bvslt (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (size!2086 (_values!2195 newMap!16)))))))

(declare-fun lt!33580 () Unit!2066)

(declare-fun choose!431 (array!3871 array!3873 (_ BitVec 32) (_ BitVec 32) V!2945 V!2945 (_ BitVec 32) (_ BitVec 64) V!2945 Int) Unit!2066)

(assert (=> d!17723 (= lt!33580 (choose!431 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 (defaultEntry!2212 newMap!16)))))

(assert (=> d!17723 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17723 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!13 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380 (defaultEntry!2212 newMap!16)) lt!33580)))

(declare-fun b!74657 () Bool)

(assert (=> b!74657 (= e!48774 (= (+!93 (getCurrentListMap!410 (_keys!3863 newMap!16) (_values!2195 newMap!16) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)) (getCurrentListMap!410 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16))))))

(assert (= (and d!17723 res!39446) b!74657))

(assert (=> d!17723 m!70791))

(declare-fun m!73983 () Bool)

(assert (=> d!17723 m!73983))

(assert (=> d!17723 m!71219))

(assert (=> b!74657 m!70991))

(assert (=> b!74657 m!71649))

(assert (=> b!74657 m!71655))

(assert (=> b!74657 m!70991))

(assert (=> b!74657 m!71643))

(assert (=> b!74657 m!71631))

(assert (=> d!16909 d!17723))

(declare-fun b!74658 () Bool)

(declare-fun e!48783 () Bool)

(declare-fun e!48782 () Bool)

(assert (=> b!74658 (= e!48783 e!48782)))

(declare-fun res!39449 () Bool)

(declare-fun call!6610 () Bool)

(assert (=> b!74658 (= res!39449 call!6610)))

(assert (=> b!74658 (=> (not res!39449) (not e!48782))))

(declare-fun b!74659 () Bool)

(declare-fun e!48780 () ListLongMap!1403)

(declare-fun call!6609 () ListLongMap!1403)

(assert (=> b!74659 (= e!48780 call!6609)))

(declare-fun b!74660 () Bool)

(declare-fun e!48775 () Bool)

(assert (=> b!74660 (= e!48775 e!48783)))

(declare-fun c!11277 () Bool)

(assert (=> b!74660 (= c!11277 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!74661 () Bool)

(declare-fun e!48781 () Bool)

(declare-fun call!6612 () Bool)

(assert (=> b!74661 (= e!48781 (not call!6612))))

(declare-fun b!74662 () Bool)

(declare-fun e!48786 () ListLongMap!1403)

(declare-fun call!6614 () ListLongMap!1403)

(assert (=> b!74662 (= e!48786 call!6614)))

(declare-fun b!74664 () Bool)

(declare-fun e!48777 () Bool)

(assert (=> b!74664 (= e!48781 e!48777)))

(declare-fun res!39452 () Bool)

(assert (=> b!74664 (= res!39452 call!6612)))

(assert (=> b!74664 (=> (not res!39452) (not e!48777))))

(declare-fun bm!6605 () Bool)

(declare-fun call!6611 () ListLongMap!1403)

(declare-fun call!6613 () ListLongMap!1403)

(assert (=> bm!6605 (= call!6611 call!6613)))

(declare-fun b!74665 () Bool)

(declare-fun e!48785 () ListLongMap!1403)

(assert (=> b!74665 (= e!48785 e!48780)))

(declare-fun c!11280 () Bool)

(assert (=> b!74665 (= c!11280 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!6606 () Bool)

(declare-fun lt!33581 () ListLongMap!1403)

(assert (=> bm!6606 (= call!6610 (contains!719 lt!33581 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!6607 () Bool)

(declare-fun call!6608 () ListLongMap!1403)

(declare-fun c!11281 () Bool)

(assert (=> bm!6607 (= call!6608 (+!93 (ite c!11281 call!6613 (ite c!11280 call!6611 call!6614)) (ite (or c!11281 c!11280) (tuple2!2121 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2114 newMap!16)) (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16)))))))

(declare-fun b!74666 () Bool)

(declare-fun e!48787 () Bool)

(assert (=> b!74666 (= e!48787 (validKeyInArray!0 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!74667 () Bool)

(declare-fun res!39450 () Bool)

(assert (=> b!74667 (=> (not res!39450) (not e!48775))))

(assert (=> b!74667 (= res!39450 e!48781)))

(declare-fun c!11278 () Bool)

(assert (=> b!74667 (= c!11278 (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!6608 () Bool)

(assert (=> bm!6608 (= call!6614 call!6611)))

(declare-fun b!74668 () Bool)

(declare-fun e!48778 () Bool)

(assert (=> b!74668 (= e!48778 (= (apply!75 lt!33581 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000)) (get!1142 (select (arr!1847 (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!74668 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2086 (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))))))

(assert (=> b!74668 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))))

(declare-fun b!74669 () Bool)

(assert (=> b!74669 (= e!48782 (= (apply!75 lt!33581 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2114 newMap!16)))))

(declare-fun bm!6609 () Bool)

(assert (=> bm!6609 (= call!6612 (contains!719 lt!33581 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!74670 () Bool)

(declare-fun e!48784 () Bool)

(assert (=> b!74670 (= e!48784 (validKeyInArray!0 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!74663 () Bool)

(declare-fun e!48776 () Unit!2066)

(declare-fun lt!33588 () Unit!2066)

(assert (=> b!74663 (= e!48776 lt!33588)))

(declare-fun lt!33600 () ListLongMap!1403)

(assert (=> b!74663 (= lt!33600 (getCurrentListMapNoExtraKeys!57 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33590 () (_ BitVec 64))

(assert (=> b!74663 (= lt!33590 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33593 () (_ BitVec 64))

(assert (=> b!74663 (= lt!33593 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33599 () Unit!2066)

(assert (=> b!74663 (= lt!33599 (addStillContains!51 lt!33600 lt!33590 (zeroValue!2114 newMap!16) lt!33593))))

(assert (=> b!74663 (contains!719 (+!93 lt!33600 (tuple2!2121 lt!33590 (zeroValue!2114 newMap!16))) lt!33593)))

(declare-fun lt!33594 () Unit!2066)

(assert (=> b!74663 (= lt!33594 lt!33599)))

(declare-fun lt!33587 () ListLongMap!1403)

(assert (=> b!74663 (= lt!33587 (getCurrentListMapNoExtraKeys!57 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33597 () (_ BitVec 64))

(assert (=> b!74663 (= lt!33597 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33596 () (_ BitVec 64))

(assert (=> b!74663 (= lt!33596 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33589 () Unit!2066)

(assert (=> b!74663 (= lt!33589 (addApplyDifferent!51 lt!33587 lt!33597 (minValue!2114 newMap!16) lt!33596))))

(assert (=> b!74663 (= (apply!75 (+!93 lt!33587 (tuple2!2121 lt!33597 (minValue!2114 newMap!16))) lt!33596) (apply!75 lt!33587 lt!33596))))

(declare-fun lt!33601 () Unit!2066)

(assert (=> b!74663 (= lt!33601 lt!33589)))

(declare-fun lt!33598 () ListLongMap!1403)

(assert (=> b!74663 (= lt!33598 (getCurrentListMapNoExtraKeys!57 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33602 () (_ BitVec 64))

(assert (=> b!74663 (= lt!33602 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33585 () (_ BitVec 64))

(assert (=> b!74663 (= lt!33585 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33583 () Unit!2066)

(assert (=> b!74663 (= lt!33583 (addApplyDifferent!51 lt!33598 lt!33602 (zeroValue!2114 newMap!16) lt!33585))))

(assert (=> b!74663 (= (apply!75 (+!93 lt!33598 (tuple2!2121 lt!33602 (zeroValue!2114 newMap!16))) lt!33585) (apply!75 lt!33598 lt!33585))))

(declare-fun lt!33591 () Unit!2066)

(assert (=> b!74663 (= lt!33591 lt!33583)))

(declare-fun lt!33584 () ListLongMap!1403)

(assert (=> b!74663 (= lt!33584 (getCurrentListMapNoExtraKeys!57 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(declare-fun lt!33586 () (_ BitVec 64))

(assert (=> b!74663 (= lt!33586 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!33595 () (_ BitVec 64))

(assert (=> b!74663 (= lt!33595 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!74663 (= lt!33588 (addApplyDifferent!51 lt!33584 lt!33586 (minValue!2114 newMap!16) lt!33595))))

(assert (=> b!74663 (= (apply!75 (+!93 lt!33584 (tuple2!2121 lt!33586 (minValue!2114 newMap!16))) lt!33595) (apply!75 lt!33584 lt!33595))))

(declare-fun d!17725 () Bool)

(assert (=> d!17725 e!48775))

(declare-fun res!39448 () Bool)

(assert (=> d!17725 (=> (not res!39448) (not e!48775))))

(assert (=> d!17725 (= res!39448 (or (bvsge #b00000000000000000000000000000000 (size!2085 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))))))

(declare-fun lt!33592 () ListLongMap!1403)

(assert (=> d!17725 (= lt!33581 lt!33592)))

(declare-fun lt!33582 () Unit!2066)

(assert (=> d!17725 (= lt!33582 e!48776)))

(declare-fun c!11276 () Bool)

(assert (=> d!17725 (= c!11276 e!48784)))

(declare-fun res!39451 () Bool)

(assert (=> d!17725 (=> (not res!39451) (not e!48784))))

(assert (=> d!17725 (= res!39451 (bvslt #b00000000000000000000000000000000 (size!2085 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))))

(assert (=> d!17725 (= lt!33592 e!48785)))

(assert (=> d!17725 (= c!11281 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!17725 (validMask!0 (mask!6178 newMap!16))))

(assert (=> d!17725 (= (getCurrentListMap!410 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)) lt!33581)))

(declare-fun b!74671 () Bool)

(assert (=> b!74671 (= e!48785 (+!93 call!6608 (tuple2!2121 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2114 newMap!16))))))

(declare-fun b!74672 () Bool)

(declare-fun c!11279 () Bool)

(assert (=> b!74672 (= c!11279 (and (not (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2071 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!74672 (= e!48780 e!48786)))

(declare-fun b!74673 () Bool)

(assert (=> b!74673 (= e!48786 call!6609)))

(declare-fun b!74674 () Bool)

(assert (=> b!74674 (= e!48783 (not call!6610))))

(declare-fun b!74675 () Bool)

(declare-fun e!48779 () Bool)

(assert (=> b!74675 (= e!48779 e!48778)))

(declare-fun res!39453 () Bool)

(assert (=> b!74675 (=> (not res!39453) (not e!48778))))

(assert (=> b!74675 (= res!39453 (contains!719 lt!33581 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!74675 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2085 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))))

(declare-fun b!74676 () Bool)

(assert (=> b!74676 (= e!48777 (= (apply!75 lt!33581 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2114 newMap!16)))))

(declare-fun b!74677 () Bool)

(declare-fun Unit!2145 () Unit!2066)

(assert (=> b!74677 (= e!48776 Unit!2145)))

(declare-fun bm!6610 () Bool)

(assert (=> bm!6610 (= call!6609 call!6608)))

(declare-fun b!74678 () Bool)

(declare-fun res!39447 () Bool)

(assert (=> b!74678 (=> (not res!39447) (not e!48775))))

(assert (=> b!74678 (= res!39447 e!48779)))

(declare-fun res!39455 () Bool)

(assert (=> b!74678 (=> res!39455 e!48779)))

(assert (=> b!74678 (= res!39455 (not e!48787))))

(declare-fun res!39454 () Bool)

(assert (=> b!74678 (=> (not res!39454) (not e!48787))))

(assert (=> b!74678 (= res!39454 (bvslt #b00000000000000000000000000000000 (size!2085 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))))

(declare-fun bm!6611 () Bool)

(assert (=> bm!6611 (= call!6613 (getCurrentListMapNoExtraKeys!57 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))) (mask!6178 newMap!16) (extraKeys!2071 newMap!16) (zeroValue!2114 newMap!16) (minValue!2114 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2212 newMap!16)))))

(assert (= (and d!17725 c!11281) b!74671))

(assert (= (and d!17725 (not c!11281)) b!74665))

(assert (= (and b!74665 c!11280) b!74659))

(assert (= (and b!74665 (not c!11280)) b!74672))

(assert (= (and b!74672 c!11279) b!74673))

(assert (= (and b!74672 (not c!11279)) b!74662))

(assert (= (or b!74673 b!74662) bm!6608))

(assert (= (or b!74659 bm!6608) bm!6605))

(assert (= (or b!74659 b!74673) bm!6610))

(assert (= (or b!74671 bm!6605) bm!6611))

(assert (= (or b!74671 bm!6610) bm!6607))

(assert (= (and d!17725 res!39451) b!74670))

(assert (= (and d!17725 c!11276) b!74663))

(assert (= (and d!17725 (not c!11276)) b!74677))

(assert (= (and d!17725 res!39448) b!74678))

(assert (= (and b!74678 res!39454) b!74666))

(assert (= (and b!74678 (not res!39455)) b!74675))

(assert (= (and b!74675 res!39453) b!74668))

(assert (= (and b!74678 res!39447) b!74667))

(assert (= (and b!74667 c!11278) b!74664))

(assert (= (and b!74667 (not c!11278)) b!74661))

(assert (= (and b!74664 res!39452) b!74676))

(assert (= (or b!74664 b!74661) bm!6609))

(assert (= (and b!74667 res!39450) b!74660))

(assert (= (and b!74660 c!11277) b!74658))

(assert (= (and b!74660 (not c!11277)) b!74674))

(assert (= (and b!74658 res!39449) b!74669))

(assert (= (or b!74658 b!74674) bm!6606))

(declare-fun b_lambda!3327 () Bool)

(assert (=> (not b_lambda!3327) (not b!74668)))

(assert (=> b!74668 t!5045))

(declare-fun b_and!4561 () Bool)

(assert (= b_and!4557 (and (=> t!5045 result!2689) b_and!4561)))

(assert (=> b!74668 t!5047))

(declare-fun b_and!4563 () Bool)

(assert (= b_and!4559 (and (=> t!5047 result!2691) b_and!4563)))

(declare-fun m!73985 () Bool)

(assert (=> bm!6606 m!73985))

(declare-fun m!73987 () Bool)

(assert (=> b!74663 m!73987))

(declare-fun m!73989 () Bool)

(assert (=> b!74663 m!73989))

(declare-fun m!73991 () Bool)

(assert (=> b!74663 m!73991))

(declare-fun m!73993 () Bool)

(assert (=> b!74663 m!73993))

(declare-fun m!73995 () Bool)

(assert (=> b!74663 m!73995))

(declare-fun m!73997 () Bool)

(assert (=> b!74663 m!73997))

(declare-fun m!73999 () Bool)

(assert (=> b!74663 m!73999))

(declare-fun m!74001 () Bool)

(assert (=> b!74663 m!74001))

(assert (=> b!74663 m!73995))

(declare-fun m!74003 () Bool)

(assert (=> b!74663 m!74003))

(declare-fun m!74005 () Bool)

(assert (=> b!74663 m!74005))

(declare-fun m!74007 () Bool)

(assert (=> b!74663 m!74007))

(declare-fun m!74009 () Bool)

(assert (=> b!74663 m!74009))

(assert (=> b!74663 m!74001))

(declare-fun m!74011 () Bool)

(assert (=> b!74663 m!74011))

(assert (=> b!74663 m!73987))

(declare-fun m!74013 () Bool)

(assert (=> b!74663 m!74013))

(declare-fun m!74015 () Bool)

(assert (=> b!74663 m!74015))

(declare-fun m!74017 () Bool)

(assert (=> b!74663 m!74017))

(assert (=> b!74663 m!73991))

(declare-fun m!74019 () Bool)

(assert (=> b!74663 m!74019))

(declare-fun m!74021 () Bool)

(assert (=> b!74676 m!74021))

(declare-fun m!74023 () Bool)

(assert (=> b!74669 m!74023))

(assert (=> b!74666 m!74013))

(assert (=> b!74666 m!74013))

(declare-fun m!74025 () Bool)

(assert (=> b!74666 m!74025))

(declare-fun m!74027 () Bool)

(assert (=> bm!6607 m!74027))

(assert (=> b!74670 m!74013))

(assert (=> b!74670 m!74013))

(assert (=> b!74670 m!74025))

(assert (=> d!17725 m!71219))

(declare-fun m!74029 () Bool)

(assert (=> b!74671 m!74029))

(declare-fun m!74031 () Bool)

(assert (=> bm!6609 m!74031))

(assert (=> bm!6611 m!74009))

(assert (=> b!74675 m!74013))

(assert (=> b!74675 m!74013))

(declare-fun m!74033 () Bool)

(assert (=> b!74675 m!74033))

(assert (=> b!74668 m!74013))

(declare-fun m!74035 () Bool)

(assert (=> b!74668 m!74035))

(assert (=> b!74668 m!74013))

(declare-fun m!74037 () Bool)

(assert (=> b!74668 m!74037))

(assert (=> b!74668 m!74035))

(assert (=> b!74668 m!71387))

(declare-fun m!74039 () Bool)

(assert (=> b!74668 m!74039))

(assert (=> b!74668 m!71387))

(assert (=> d!16909 d!17725))

(declare-fun d!17727 () Bool)

(assert (=> d!17727 (arrayContainsKey!0 lt!32899 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!33603 () Unit!2066)

(assert (=> d!17727 (= lt!33603 (choose!13 lt!32899 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))))))

(assert (=> d!17727 (bvsge (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000000)))

(assert (=> d!17727 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!32899 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))) lt!33603)))

(declare-fun bs!3216 () Bool)

(assert (= bs!3216 d!17727))

(assert (=> bs!3216 m!70791))

(assert (=> bs!3216 m!71639))

(assert (=> bs!3216 m!70791))

(declare-fun m!74041 () Bool)

(assert (=> bs!3216 m!74041))

(assert (=> d!16909 d!17727))

(declare-fun d!17729 () Bool)

(declare-fun res!39457 () Bool)

(declare-fun e!48789 () Bool)

(assert (=> d!17729 (=> res!39457 e!48789)))

(assert (=> d!17729 (= res!39457 (bvsge #b00000000000000000000000000000000 (size!2085 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))))

(assert (=> d!17729 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (mask!6178 newMap!16)) e!48789)))

(declare-fun b!74679 () Bool)

(declare-fun e!48790 () Bool)

(assert (=> b!74679 (= e!48789 e!48790)))

(declare-fun c!11282 () Bool)

(assert (=> b!74679 (= c!11282 (validKeyInArray!0 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!6612 () Bool)

(declare-fun call!6615 () Bool)

(assert (=> bm!6612 (= call!6615 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (mask!6178 newMap!16)))))

(declare-fun b!74680 () Bool)

(assert (=> b!74680 (= e!48790 call!6615)))

(declare-fun b!74681 () Bool)

(declare-fun e!48788 () Bool)

(assert (=> b!74681 (= e!48788 call!6615)))

(declare-fun b!74682 () Bool)

(assert (=> b!74682 (= e!48790 e!48788)))

(declare-fun lt!33605 () (_ BitVec 64))

(assert (=> b!74682 (= lt!33605 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!33604 () Unit!2066)

(assert (=> b!74682 (= lt!33604 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) lt!33605 #b00000000000000000000000000000000))))

(assert (=> b!74682 (arrayContainsKey!0 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) lt!33605 #b00000000000000000000000000000000)))

(declare-fun lt!33606 () Unit!2066)

(assert (=> b!74682 (= lt!33606 lt!33604)))

(declare-fun res!39456 () Bool)

(assert (=> b!74682 (= res!39456 (= (seekEntryOrOpen!0 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000) (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (mask!6178 newMap!16)) (Found!239 #b00000000000000000000000000000000)))))

(assert (=> b!74682 (=> (not res!39456) (not e!48788))))

(assert (= (and d!17729 (not res!39457)) b!74679))

(assert (= (and b!74679 c!11282) b!74682))

(assert (= (and b!74679 (not c!11282)) b!74680))

(assert (= (and b!74682 res!39456) b!74681))

(assert (= (or b!74681 b!74680) bm!6612))

(assert (=> b!74679 m!74013))

(assert (=> b!74679 m!74013))

(assert (=> b!74679 m!74025))

(declare-fun m!74043 () Bool)

(assert (=> bm!6612 m!74043))

(assert (=> b!74682 m!74013))

(declare-fun m!74045 () Bool)

(assert (=> b!74682 m!74045))

(declare-fun m!74047 () Bool)

(assert (=> b!74682 m!74047))

(assert (=> b!74682 m!74013))

(declare-fun m!74049 () Bool)

(assert (=> b!74682 m!74049))

(assert (=> d!16909 d!17729))

(declare-fun b!74693 () Bool)

(declare-fun e!48796 () Bool)

(assert (=> b!74693 (= e!48796 (bvslt (size!2085 (_keys!3863 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!17731 () Bool)

(declare-fun e!48795 () Bool)

(assert (=> d!17731 e!48795))

(declare-fun res!39469 () Bool)

(assert (=> d!17731 (=> (not res!39469) (not e!48795))))

(assert (=> d!17731 (= res!39469 (and (bvsge (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000000) (bvslt (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (size!2085 (_keys!3863 newMap!16)))))))

(declare-fun lt!33609 () Unit!2066)

(declare-fun choose!1 (array!3871 (_ BitVec 32) (_ BitVec 64)) Unit!2066)

(assert (=> d!17731 (= lt!33609 (choose!1 (_keys!3863 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(assert (=> d!17731 e!48796))

(declare-fun res!39466 () Bool)

(assert (=> d!17731 (=> (not res!39466) (not e!48796))))

(assert (=> d!17731 (= res!39466 (and (bvsge (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000000) (bvslt (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (size!2085 (_keys!3863 newMap!16)))))))

(assert (=> d!17731 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!3863 newMap!16) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) lt!33609)))

(declare-fun b!74691 () Bool)

(declare-fun res!39468 () Bool)

(assert (=> b!74691 (=> (not res!39468) (not e!48796))))

(assert (=> b!74691 (= res!39468 (not (validKeyInArray!0 (select (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))))))))

(declare-fun b!74692 () Bool)

(declare-fun res!39467 () Bool)

(assert (=> b!74692 (=> (not res!39467) (not e!48796))))

(assert (=> b!74692 (= res!39467 (validKeyInArray!0 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)))))

(declare-fun b!74694 () Bool)

(assert (=> b!74694 (= e!48795 (= (arrayCountValidKeys!0 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!3863 newMap!16) #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) #b00000000000000000000000000000001)))))

(assert (= (and d!17731 res!39466) b!74691))

(assert (= (and b!74691 res!39468) b!74692))

(assert (= (and b!74692 res!39467) b!74693))

(assert (= (and d!17731 res!39469) b!74694))

(assert (=> d!17731 m!70791))

(declare-fun m!74051 () Bool)

(assert (=> d!17731 m!74051))

(declare-fun m!74053 () Bool)

(assert (=> b!74691 m!74053))

(assert (=> b!74691 m!74053))

(declare-fun m!74055 () Bool)

(assert (=> b!74691 m!74055))

(assert (=> b!74692 m!70791))

(assert (=> b!74692 m!70947))

(assert (=> b!74694 m!71655))

(assert (=> b!74694 m!71653))

(assert (=> b!74694 m!70955))

(assert (=> d!16909 d!17731))

(assert (=> d!16909 d!17511))

(declare-fun d!17733 () Bool)

(assert (=> d!17733 (= (arrayCountValidKeys!0 lt!32877 (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (bvadd (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!33612 () Unit!2066)

(declare-fun choose!2 (array!3871 (_ BitVec 32)) Unit!2066)

(assert (=> d!17733 (= lt!33612 (choose!2 lt!32877 (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))))))

(declare-fun e!48799 () Bool)

(assert (=> d!17733 e!48799))

(declare-fun res!39474 () Bool)

(assert (=> d!17733 (=> (not res!39474) (not e!48799))))

(assert (=> d!17733 (= res!39474 (and (bvsge (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000000) (bvslt (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (size!2085 lt!32877))))))

(assert (=> d!17733 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!32877 (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540))) lt!33612)))

(declare-fun b!74699 () Bool)

(declare-fun res!39475 () Bool)

(assert (=> b!74699 (=> (not res!39475) (not e!48799))))

(assert (=> b!74699 (= res!39475 (validKeyInArray!0 (select (arr!1846 lt!32877) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)))))))

(declare-fun b!74700 () Bool)

(assert (=> b!74700 (= e!48799 (bvslt (size!2085 lt!32877) #b01111111111111111111111111111111))))

(assert (= (and d!17733 res!39474) b!74699))

(assert (= (and b!74699 res!39475) b!74700))

(assert (=> d!17733 m!71635))

(declare-fun m!74057 () Bool)

(assert (=> d!17733 m!74057))

(assert (=> b!74699 m!73903))

(assert (=> b!74699 m!73903))

(assert (=> b!74699 m!73905))

(assert (=> d!16909 d!17733))

(declare-fun d!17735 () Bool)

(declare-fun e!48802 () Bool)

(assert (=> d!17735 e!48802))

(declare-fun res!39478 () Bool)

(assert (=> d!17735 (=> (not res!39478) (not e!48802))))

(assert (=> d!17735 (= res!39478 (and (bvsge (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) #b00000000000000000000000000000000) (bvslt (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (size!2085 (_keys!3863 newMap!16)))))))

(declare-fun lt!33615 () Unit!2066)

(declare-fun choose!41 (array!3871 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1484) Unit!2066)

(assert (=> d!17735 (= lt!33615 (choose!41 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) lt!32901 lt!32885))))

(assert (=> d!17735 (bvslt (size!2085 (_keys!3863 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!17735 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!3863 newMap!16) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) lt!32901 lt!32885) lt!33615)))

(declare-fun b!74703 () Bool)

(assert (=> b!74703 (= e!48802 (arrayNoDuplicates!0 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) lt!32901 lt!32885))))

(assert (= (and d!17735 res!39478) b!74703))

(assert (=> d!17735 m!70791))

(declare-fun m!74059 () Bool)

(assert (=> d!17735 m!74059))

(assert (=> b!74703 m!71655))

(assert (=> b!74703 m!71637))

(assert (=> d!16909 d!17735))

(assert (=> d!16909 d!16829))

(declare-fun b!74704 () Bool)

(declare-fun e!48803 () (_ BitVec 32))

(assert (=> b!74704 (= e!48803 #b00000000000000000000000000000000)))

(declare-fun b!74705 () Bool)

(declare-fun e!48804 () (_ BitVec 32))

(declare-fun call!6616 () (_ BitVec 32))

(assert (=> b!74705 (= e!48804 call!6616)))

(declare-fun bm!6613 () Bool)

(assert (=> bm!6613 (= call!6616 (arrayCountValidKeys!0 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2085 (_keys!3863 newMap!16))))))

(declare-fun b!74706 () Bool)

(assert (=> b!74706 (= e!48803 e!48804)))

(declare-fun c!11283 () Bool)

(assert (=> b!74706 (= c!11283 (validKeyInArray!0 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!74707 () Bool)

(assert (=> b!74707 (= e!48804 (bvadd #b00000000000000000000000000000001 call!6616))))

(declare-fun lt!33616 () (_ BitVec 32))

(declare-fun d!17737 () Bool)

(assert (=> d!17737 (and (bvsge lt!33616 #b00000000000000000000000000000000) (bvsle lt!33616 (bvsub (size!2085 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!17737 (= lt!33616 e!48803)))

(declare-fun c!11284 () Bool)

(assert (=> d!17737 (= c!11284 (bvsge #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))))))

(assert (=> d!17737 (and (bvsle #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2085 (_keys!3863 newMap!16)) (size!2085 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))))

(assert (=> d!17737 (= (arrayCountValidKeys!0 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) #b00000000000000000000000000000000 (size!2085 (_keys!3863 newMap!16))) lt!33616)))

(assert (= (and d!17737 c!11284) b!74704))

(assert (= (and d!17737 (not c!11284)) b!74706))

(assert (= (and b!74706 c!11283) b!74707))

(assert (= (and b!74706 (not c!11283)) b!74705))

(assert (= (or b!74707 b!74705) bm!6613))

(declare-fun m!74061 () Bool)

(assert (=> bm!6613 m!74061))

(assert (=> b!74706 m!74013))

(assert (=> b!74706 m!74013))

(assert (=> b!74706 m!74025))

(assert (=> d!16909 d!17737))

(assert (=> d!16909 d!16747))

(assert (=> d!16909 d!16983))

(declare-fun b!74708 () Bool)

(declare-fun e!48805 () Bool)

(declare-fun e!48808 () Bool)

(assert (=> b!74708 (= e!48805 e!48808)))

(declare-fun res!39479 () Bool)

(assert (=> b!74708 (=> (not res!39479) (not e!48808))))

(declare-fun e!48807 () Bool)

(assert (=> b!74708 (= res!39479 (not e!48807))))

(declare-fun res!39480 () Bool)

(assert (=> b!74708 (=> (not res!39480) (not e!48807))))

(assert (=> b!74708 (= res!39480 (validKeyInArray!0 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) lt!32901)))))

(declare-fun c!11285 () Bool)

(declare-fun bm!6614 () Bool)

(declare-fun call!6617 () Bool)

(assert (=> bm!6614 (= call!6617 (arrayNoDuplicates!0 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) (bvadd lt!32901 #b00000000000000000000000000000001) (ite c!11285 (Cons!1480 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) lt!32901) lt!32885) lt!32885)))))

(declare-fun d!17739 () Bool)

(declare-fun res!39481 () Bool)

(assert (=> d!17739 (=> res!39481 e!48805)))

(assert (=> d!17739 (= res!39481 (bvsge lt!32901 (size!2085 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))))))))

(assert (=> d!17739 (= (arrayNoDuplicates!0 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16))) lt!32901 lt!32885) e!48805)))

(declare-fun b!74709 () Bool)

(declare-fun e!48806 () Bool)

(assert (=> b!74709 (= e!48808 e!48806)))

(assert (=> b!74709 (= c!11285 (validKeyInArray!0 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) lt!32901)))))

(declare-fun b!74710 () Bool)

(assert (=> b!74710 (= e!48806 call!6617)))

(declare-fun b!74711 () Bool)

(assert (=> b!74711 (= e!48807 (contains!721 lt!32885 (select (arr!1846 (array!3872 (store (arr!1846 (_keys!3863 newMap!16)) (ite c!10799 (index!3090 lt!32540) (index!3087 lt!32540)) (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355)) (size!2085 (_keys!3863 newMap!16)))) lt!32901)))))

(declare-fun b!74712 () Bool)

(assert (=> b!74712 (= e!48806 call!6617)))

(assert (= (and d!17739 (not res!39481)) b!74708))

(assert (= (and b!74708 res!39480) b!74711))

(assert (= (and b!74708 res!39479) b!74709))

(assert (= (and b!74709 c!11285) b!74712))

(assert (= (and b!74709 (not c!11285)) b!74710))

(assert (= (or b!74712 b!74710) bm!6614))

(declare-fun m!74063 () Bool)

(assert (=> b!74708 m!74063))

(assert (=> b!74708 m!74063))

(declare-fun m!74065 () Bool)

(assert (=> b!74708 m!74065))

(assert (=> bm!6614 m!74063))

(declare-fun m!74067 () Bool)

(assert (=> bm!6614 m!74067))

(assert (=> b!74709 m!74063))

(assert (=> b!74709 m!74063))

(assert (=> b!74709 m!74065))

(assert (=> b!74711 m!74063))

(assert (=> b!74711 m!74063))

(declare-fun m!74069 () Bool)

(assert (=> b!74711 m!74069))

(assert (=> d!16909 d!17739))

(declare-fun d!17741 () Bool)

(declare-fun e!48811 () Bool)

(assert (=> d!17741 e!48811))

(declare-fun res!39483 () Bool)

(assert (=> d!17741 (=> (not res!39483) (not e!48811))))

(declare-fun lt!33617 () List!1483)

(assert (=> d!17741 (= res!39483 (isStrictlySorted!287 lt!33617))))

(declare-fun e!48813 () List!1483)

(assert (=> d!17741 (= lt!33617 e!48813)))

(declare-fun c!11288 () Bool)

(assert (=> d!17741 (= c!11288 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32377))) (bvslt (_1!1071 (h!2066 (t!5031 (toList!717 lt!32377)))) (_1!1071 lt!32383))))))

(assert (=> d!17741 (isStrictlySorted!287 (t!5031 (toList!717 lt!32377)))))

(assert (=> d!17741 (= (insertStrictlySorted!54 (t!5031 (toList!717 lt!32377)) (_1!1071 lt!32383) (_2!1071 lt!32383)) lt!33617)))

(declare-fun b!74713 () Bool)

(declare-fun res!39482 () Bool)

(assert (=> b!74713 (=> (not res!39482) (not e!48811))))

(assert (=> b!74713 (= res!39482 (containsKey!135 lt!33617 (_1!1071 lt!32383)))))

(declare-fun b!74714 () Bool)

(declare-fun e!48812 () List!1483)

(declare-fun call!6620 () List!1483)

(assert (=> b!74714 (= e!48812 call!6620)))

(declare-fun bm!6615 () Bool)

(declare-fun call!6618 () List!1483)

(declare-fun call!6619 () List!1483)

(assert (=> bm!6615 (= call!6618 call!6619)))

(declare-fun b!74715 () Bool)

(assert (=> b!74715 (= e!48813 call!6619)))

(declare-fun b!74716 () Bool)

(declare-fun e!48809 () List!1483)

(assert (=> b!74716 (= e!48809 (insertStrictlySorted!54 (t!5031 (t!5031 (toList!717 lt!32377))) (_1!1071 lt!32383) (_2!1071 lt!32383)))))

(declare-fun b!74717 () Bool)

(assert (=> b!74717 (= e!48812 call!6620)))

(declare-fun b!74718 () Bool)

(assert (=> b!74718 (= e!48811 (contains!722 lt!33617 (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383))))))

(declare-fun b!74719 () Bool)

(declare-fun c!11286 () Bool)

(assert (=> b!74719 (= c!11286 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32377))) (bvsgt (_1!1071 (h!2066 (t!5031 (toList!717 lt!32377)))) (_1!1071 lt!32383))))))

(declare-fun e!48810 () List!1483)

(assert (=> b!74719 (= e!48810 e!48812)))

(declare-fun bm!6616 () Bool)

(assert (=> bm!6616 (= call!6619 ($colon$colon!65 e!48809 (ite c!11288 (h!2066 (t!5031 (toList!717 lt!32377))) (tuple2!2121 (_1!1071 lt!32383) (_2!1071 lt!32383)))))))

(declare-fun c!11289 () Bool)

(assert (=> bm!6616 (= c!11289 c!11288)))

(declare-fun bm!6617 () Bool)

(assert (=> bm!6617 (= call!6620 call!6618)))

(declare-fun b!74720 () Bool)

(assert (=> b!74720 (= e!48813 e!48810)))

(declare-fun c!11287 () Bool)

(assert (=> b!74720 (= c!11287 (and ((_ is Cons!1479) (t!5031 (toList!717 lt!32377))) (= (_1!1071 (h!2066 (t!5031 (toList!717 lt!32377)))) (_1!1071 lt!32383))))))

(declare-fun b!74721 () Bool)

(assert (=> b!74721 (= e!48810 call!6618)))

(declare-fun b!74722 () Bool)

(assert (=> b!74722 (= e!48809 (ite c!11287 (t!5031 (t!5031 (toList!717 lt!32377))) (ite c!11286 (Cons!1479 (h!2066 (t!5031 (toList!717 lt!32377))) (t!5031 (t!5031 (toList!717 lt!32377)))) Nil!1480)))))

(assert (= (and d!17741 c!11288) b!74715))

(assert (= (and d!17741 (not c!11288)) b!74720))

(assert (= (and b!74720 c!11287) b!74721))

(assert (= (and b!74720 (not c!11287)) b!74719))

(assert (= (and b!74719 c!11286) b!74717))

(assert (= (and b!74719 (not c!11286)) b!74714))

(assert (= (or b!74717 b!74714) bm!6617))

(assert (= (or b!74721 bm!6617) bm!6615))

(assert (= (or b!74715 bm!6615) bm!6616))

(assert (= (and bm!6616 c!11289) b!74716))

(assert (= (and bm!6616 (not c!11289)) b!74722))

(assert (= (and d!17741 res!39483) b!74713))

(assert (= (and b!74713 res!39482) b!74718))

(declare-fun m!74071 () Bool)

(assert (=> bm!6616 m!74071))

(declare-fun m!74073 () Bool)

(assert (=> d!17741 m!74073))

(assert (=> d!17741 m!72091))

(declare-fun m!74075 () Bool)

(assert (=> b!74716 m!74075))

(declare-fun m!74077 () Bool)

(assert (=> b!74718 m!74077))

(declare-fun m!74079 () Bool)

(assert (=> b!74713 m!74079))

(assert (=> b!73296 d!17741))

(declare-fun d!17743 () Bool)

(assert (=> d!17743 (= (apply!75 lt!32955 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) (get!1147 (getValueByKey!131 (toList!717 lt!32955) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3217 () Bool)

(assert (= bs!3217 d!17743))

(assert (=> bs!3217 m!71361))

(declare-fun m!74081 () Bool)

(assert (=> bs!3217 m!74081))

(assert (=> bs!3217 m!74081))

(declare-fun m!74083 () Bool)

(assert (=> bs!3217 m!74083))

(assert (=> b!73489 d!17743))

(declare-fun d!17745 () Bool)

(declare-fun c!11290 () Bool)

(assert (=> d!17745 (= c!11290 ((_ is ValueCellFull!893) (select (arr!1847 (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!48814 () V!2945)

(assert (=> d!17745 (= (get!1142 (select (arr!1847 (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!48814)))

(declare-fun b!74723 () Bool)

(assert (=> b!74723 (= e!48814 (get!1145 (select (arr!1847 (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!74724 () Bool)

(assert (=> b!74724 (= e!48814 (get!1146 (select (arr!1847 (ite (or c!10789 c!10798) (_values!2195 newMap!16) (array!3874 (store (arr!1847 (_values!2195 newMap!16)) (index!3088 lt!32540) (ValueCellFull!893 lt!32380)) (size!2086 (_values!2195 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!325 (defaultEntry!2212 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!17745 c!11290) b!74723))

(assert (= (and d!17745 (not c!11290)) b!74724))

(assert (=> b!74723 m!71821))

(assert (=> b!74723 m!71387))

(declare-fun m!74085 () Bool)

(assert (=> b!74723 m!74085))

(assert (=> b!74724 m!71821))

(assert (=> b!74724 m!71387))

(declare-fun m!74087 () Bool)

(assert (=> b!74724 m!74087))

(assert (=> b!73489 d!17745))

(assert (=> b!73242 d!17517))

(assert (=> b!73242 d!17519))

(declare-fun d!17747 () Bool)

(declare-fun e!48816 () Bool)

(assert (=> d!17747 e!48816))

(declare-fun res!39484 () Bool)

(assert (=> d!17747 (=> res!39484 e!48816)))

(declare-fun lt!33621 () Bool)

(assert (=> d!17747 (= res!39484 (not lt!33621))))

(declare-fun lt!33619 () Bool)

(assert (=> d!17747 (= lt!33621 lt!33619)))

(declare-fun lt!33618 () Unit!2066)

(declare-fun e!48815 () Unit!2066)

(assert (=> d!17747 (= lt!33618 e!48815)))

(declare-fun c!11291 () Bool)

(assert (=> d!17747 (= c!11291 lt!33619)))

(assert (=> d!17747 (= lt!33619 (containsKey!135 (toList!717 lt!32955) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!17747 (= (contains!719 lt!32955 (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)) lt!33621)))

(declare-fun b!74725 () Bool)

(declare-fun lt!33620 () Unit!2066)

(assert (=> b!74725 (= e!48815 lt!33620)))

(assert (=> b!74725 (= lt!33620 (lemmaContainsKeyImpliesGetValueByKeyDefined!84 (toList!717 lt!32955) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!74725 (isDefined!85 (getValueByKey!131 (toList!717 lt!32955) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!74726 () Bool)

(declare-fun Unit!2146 () Unit!2066)

(assert (=> b!74726 (= e!48815 Unit!2146)))

(declare-fun b!74727 () Bool)

(assert (=> b!74727 (= e!48816 (isDefined!85 (getValueByKey!131 (toList!717 lt!32955) (select (arr!1846 (_keys!3863 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!17747 c!11291) b!74725))

(assert (= (and d!17747 (not c!11291)) b!74726))

(assert (= (and d!17747 (not res!39484)) b!74727))

(assert (=> d!17747 m!71361))

(declare-fun m!74089 () Bool)

(assert (=> d!17747 m!74089))

(assert (=> b!74725 m!71361))

(declare-fun m!74091 () Bool)

(assert (=> b!74725 m!74091))

(assert (=> b!74725 m!71361))

(assert (=> b!74725 m!74081))

(assert (=> b!74725 m!74081))

(declare-fun m!74093 () Bool)

(assert (=> b!74725 m!74093))

(assert (=> b!74727 m!71361))

(assert (=> b!74727 m!74081))

(assert (=> b!74727 m!74081))

(assert (=> b!74727 m!74093))

(assert (=> b!73496 d!17747))

(declare-fun d!17749 () Bool)

(declare-fun res!39485 () Bool)

(declare-fun e!48817 () Bool)

(assert (=> d!17749 (=> res!39485 e!48817)))

(assert (=> d!17749 (= res!39485 (and ((_ is Cons!1479) lt!32705) (= (_1!1071 (h!2066 lt!32705)) (_1!1071 lt!32376))))))

(assert (=> d!17749 (= (containsKey!135 lt!32705 (_1!1071 lt!32376)) e!48817)))

(declare-fun b!74728 () Bool)

(declare-fun e!48818 () Bool)

(assert (=> b!74728 (= e!48817 e!48818)))

(declare-fun res!39486 () Bool)

(assert (=> b!74728 (=> (not res!39486) (not e!48818))))

(assert (=> b!74728 (= res!39486 (and (or (not ((_ is Cons!1479) lt!32705)) (bvsle (_1!1071 (h!2066 lt!32705)) (_1!1071 lt!32376))) ((_ is Cons!1479) lt!32705) (bvslt (_1!1071 (h!2066 lt!32705)) (_1!1071 lt!32376))))))

(declare-fun b!74729 () Bool)

(assert (=> b!74729 (= e!48818 (containsKey!135 (t!5031 lt!32705) (_1!1071 lt!32376)))))

(assert (= (and d!17749 (not res!39485)) b!74728))

(assert (= (and b!74728 res!39486) b!74729))

(declare-fun m!74095 () Bool)

(assert (=> b!74729 m!74095))

(assert (=> b!73184 d!17749))

(declare-fun b!74730 () Bool)

(declare-fun e!48819 () Option!137)

(assert (=> b!74730 (= e!48819 (Some!136 (_2!1071 (h!2066 (toList!717 lt!32907)))))))

(declare-fun b!74733 () Bool)

(declare-fun e!48820 () Option!137)

(assert (=> b!74733 (= e!48820 None!135)))

(declare-fun b!74732 () Bool)

(assert (=> b!74732 (= e!48820 (getValueByKey!131 (t!5031 (toList!717 lt!32907)) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))

(declare-fun d!17751 () Bool)

(declare-fun c!11292 () Bool)

(assert (=> d!17751 (= c!11292 (and ((_ is Cons!1479) (toList!717 lt!32907)) (= (_1!1071 (h!2066 (toList!717 lt!32907))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380)))))))

(assert (=> d!17751 (= (getValueByKey!131 (toList!717 lt!32907) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))) e!48819)))

(declare-fun b!74731 () Bool)

(assert (=> b!74731 (= e!48819 e!48820)))

(declare-fun c!11293 () Bool)

(assert (=> b!74731 (= c!11293 (and ((_ is Cons!1479) (toList!717 lt!32907)) (not (= (_1!1071 (h!2066 (toList!717 lt!32907))) (_1!1071 (tuple2!2121 (select (arr!1846 (_keys!3863 (v!2523 (underlying!256 thiss!992)))) from!355) lt!32380))))))))

(assert (= (and d!17751 c!11292) b!74730))

(assert (= (and d!17751 (not c!11292)) b!74731))

(assert (= (and b!74731 c!11293) b!74732))

(assert (= (and b!74731 (not c!11293)) b!74733))

(declare-fun m!74097 () Bool)

(assert (=> b!74732 m!74097))

(assert (=> b!73411 d!17751))

(declare-fun condMapEmpty!3185 () Bool)

(declare-fun mapDefault!3185 () ValueCell!893)

(assert (=> mapNonEmpty!3184 (= condMapEmpty!3185 (= mapRest!3184 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3185)))))

(declare-fun e!48821 () Bool)

(declare-fun mapRes!3185 () Bool)

(assert (=> mapNonEmpty!3184 (= tp!8548 (and e!48821 mapRes!3185))))

(declare-fun b!74735 () Bool)

(assert (=> b!74735 (= e!48821 tp_is_empty!2473)))

(declare-fun b!74734 () Bool)

(declare-fun e!48822 () Bool)

(assert (=> b!74734 (= e!48822 tp_is_empty!2473)))

(declare-fun mapIsEmpty!3185 () Bool)

(assert (=> mapIsEmpty!3185 mapRes!3185))

(declare-fun mapNonEmpty!3185 () Bool)

(declare-fun tp!8549 () Bool)

(assert (=> mapNonEmpty!3185 (= mapRes!3185 (and tp!8549 e!48822))))

(declare-fun mapValue!3185 () ValueCell!893)

(declare-fun mapRest!3185 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapKey!3185 () (_ BitVec 32))

(assert (=> mapNonEmpty!3185 (= mapRest!3184 (store mapRest!3185 mapKey!3185 mapValue!3185))))

(assert (= (and mapNonEmpty!3184 condMapEmpty!3185) mapIsEmpty!3185))

(assert (= (and mapNonEmpty!3184 (not condMapEmpty!3185)) mapNonEmpty!3185))

(assert (= (and mapNonEmpty!3185 ((_ is ValueCellFull!893) mapValue!3185)) b!74734))

(assert (= (and mapNonEmpty!3184 ((_ is ValueCellFull!893) mapDefault!3185)) b!74735))

(declare-fun m!74099 () Bool)

(assert (=> mapNonEmpty!3185 m!74099))

(declare-fun condMapEmpty!3186 () Bool)

(declare-fun mapDefault!3186 () ValueCell!893)

(assert (=> mapNonEmpty!3183 (= condMapEmpty!3186 (= mapRest!3183 ((as const (Array (_ BitVec 32) ValueCell!893)) mapDefault!3186)))))

(declare-fun e!48823 () Bool)

(declare-fun mapRes!3186 () Bool)

(assert (=> mapNonEmpty!3183 (= tp!8547 (and e!48823 mapRes!3186))))

(declare-fun b!74737 () Bool)

(assert (=> b!74737 (= e!48823 tp_is_empty!2473)))

(declare-fun b!74736 () Bool)

(declare-fun e!48824 () Bool)

(assert (=> b!74736 (= e!48824 tp_is_empty!2473)))

(declare-fun mapIsEmpty!3186 () Bool)

(assert (=> mapIsEmpty!3186 mapRes!3186))

(declare-fun mapNonEmpty!3186 () Bool)

(declare-fun tp!8550 () Bool)

(assert (=> mapNonEmpty!3186 (= mapRes!3186 (and tp!8550 e!48824))))

(declare-fun mapValue!3186 () ValueCell!893)

(declare-fun mapRest!3186 () (Array (_ BitVec 32) ValueCell!893))

(declare-fun mapKey!3186 () (_ BitVec 32))

(assert (=> mapNonEmpty!3186 (= mapRest!3183 (store mapRest!3186 mapKey!3186 mapValue!3186))))

(assert (= (and mapNonEmpty!3183 condMapEmpty!3186) mapIsEmpty!3186))

(assert (= (and mapNonEmpty!3183 (not condMapEmpty!3186)) mapNonEmpty!3186))

(assert (= (and mapNonEmpty!3186 ((_ is ValueCellFull!893) mapValue!3186)) b!74736))

(assert (= (and mapNonEmpty!3183 ((_ is ValueCellFull!893) mapDefault!3186)) b!74737))

(declare-fun m!74101 () Bool)

(assert (=> mapNonEmpty!3186 m!74101))

(declare-fun b_lambda!3329 () Bool)

(assert (= b_lambda!3301 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3329)))

(declare-fun b_lambda!3331 () Bool)

(assert (= b_lambda!3327 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3331)))

(declare-fun b_lambda!3333 () Bool)

(assert (= b_lambda!3315 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3333)))

(declare-fun b_lambda!3335 () Bool)

(assert (= b_lambda!3299 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3335)))

(declare-fun b_lambda!3337 () Bool)

(assert (= b_lambda!3307 (or (and b!72681 b_free!2113) (and b!72667 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))) b_lambda!3337)))

(declare-fun b_lambda!3339 () Bool)

(assert (= b_lambda!3321 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3339)))

(declare-fun b_lambda!3341 () Bool)

(assert (= b_lambda!3319 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3341)))

(declare-fun b_lambda!3343 () Bool)

(assert (= b_lambda!3313 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3343)))

(declare-fun b_lambda!3345 () Bool)

(assert (= b_lambda!3323 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3345)))

(declare-fun b_lambda!3347 () Bool)

(assert (= b_lambda!3303 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3347)))

(declare-fun b_lambda!3349 () Bool)

(assert (= b_lambda!3317 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3349)))

(declare-fun b_lambda!3351 () Bool)

(assert (= b_lambda!3325 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3351)))

(declare-fun b_lambda!3353 () Bool)

(assert (= b_lambda!3309 (or (and b!72681 b_free!2113) (and b!72667 b_free!2115 (= (defaultEntry!2212 newMap!16) (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))))) b_lambda!3353)))

(declare-fun b_lambda!3355 () Bool)

(assert (= b_lambda!3311 (or (and b!72681 b_free!2113 (= (defaultEntry!2212 (v!2523 (underlying!256 thiss!992))) (defaultEntry!2212 newMap!16))) (and b!72667 b_free!2115) b_lambda!3355)))

(check-sat (not d!17333) (not d!17577) (not d!17425) (not b!73986) (not d!17667) (not d!17035) (not d!17247) (not bm!6513) (not bm!6594) (not d!17551) (not d!17685) (not d!17435) (not b!73840) (not b!73971) (not b!73942) (not b!74718) (not b!73858) (not bm!6548) (not b!74423) (not b!74200) (not b!74112) (not b!74389) (not b!74012) (not b!74074) (not d!17097) (not b!74170) (not b!74513) (not b!74257) (not b!74300) (not b!74503) (not b!74164) (not b!73854) (not b!74210) (not b!73811) (not b!73746) (not bm!6501) (not bm!6549) (not d!16999) (not d!17031) (not d!17347) (not b!74494) (not bm!6604) (not b!74113) (not b!74223) (not b!74313) (not b!74202) (not d!17439) (not bm!6600) (not b!73875) (not b!73873) (not b!73814) (not d!17459) (not b!74531) (not b!74350) (not b!74134) (not b!73740) (not b!74084) (not b!74119) (not b!74629) (not bm!6586) (not d!17339) (not bm!6553) (not b!74703) (not b!73894) (not bm!6537) (not d!17065) (not b!74036) (not b!74139) (not d!17003) (not b!74407) (not b!74499) (not b!74212) (not b!74123) (not b!74161) (not b!73977) (not b!74236) (not b!73640) (not b!74280) (not b!73650) (not b!73673) (not d!17133) (not b!74187) (not bm!6523) (not d!17629) (not bm!6492) (not b_lambda!3265) (not b!73691) b_and!4561 (not d!17549) (not b!73884) (not d!17529) (not d!17703) (not bm!6609) (not b!73704) (not b!74668) (not d!17205) (not b!73677) (not d!17159) (not d!17403) (not d!17643) (not b_lambda!3293) (not b!74551) (not b!73665) (not b!74184) (not d!17367) (not d!17715) (not b!74245) (not b!74458) (not b!74342) (not d!17327) (not b!74682) (not b!74465) (not b!74706) (not d!17151) (not b!73850) (not b!74007) (not b!74573) (not b!74418) (not b!73680) (not b!74711) (not b!74510) (not d!17165) (not bm!6589) (not b!74626) (not d!17219) (not d!17063) (not b!74296) (not b!73647) (not b!73687) (not b!73984) (not d!17361) (not b!73912) (not d!17317) (not b!74071) (not d!17659) (not d!17325) (not b!74639) (not b!73699) (not b!74663) (not b!74361) (not b!74556) (not d!17025) (not b!73603) (not d!17179) (not b!74199) (not d!17341) (not b!74473) (not b!73902) (not d!17377) (not b!74141) (not b!74515) (not b_lambda!3275) (not b!74377) (not b!73617) (not d!17183) (not bm!6572) (not d!17353) (not d!17335) (not b!74054) (not b!74047) (not b!73914) (not b!74670) (not b!74525) (not b!74062) (not b!74647) (not d!17051) (not d!17655) (not d!17611) (not d!17563) (not d!17279) (not b_lambda!3289) (not b!73838) (not b!74140) (not b!74050) (not b!73997) (not d!17615) (not b!74380) (not b!74078) (not b!73670) (not d!17163) (not b!73882) (not b!74547) (not d!17305) (not d!17069) (not b!73887) (not b_lambda!3277) (not b!73686) (not b!74375) (not b!74584) (not b!74304) (not b!74543) (not d!17455) (not b!73583) (not b!74428) (not b!74446) (not d!17693) (not b!74699) (not b!74645) (not d!17741) (not b!74444) (not b!74033) (not bm!6529) (not b_lambda!3291) (not bm!6512) (not d!17671) (not b!74215) (not b!74045) (not b!74315) (not b!74394) (not d!17363) (not b!73872) (not b_lambda!3297) (not b!73667) (not b!74436) (not b!73869) (not b!74277) (not b!74646) (not d!17639) (not b!74642) (not b!74464) (not bm!6503) (not d!16995) (not b!74544) (not b!74424) (not d!17043) (not b!74198) (not bm!6612) (not b!74059) (not d!17281) (not d!17721) (not b!73754) (not b!74481) (not b!74290) (not b!74657) (not d!17663) (not b!74482) (not d!17575) (not d!17637) (not b!74205) (not b!74708) (not d!17433) (not b!73718) (not b!74025) (not d!17157) (not d!17115) (not b!73964) (not bm!6596) (not b!74530) (not d!17143) (not b!74127) (not b!74451) (not b!74462) (not b!73952) (not d!17017) (not bm!6592) (not b!73847) (not d!17371) (not d!17185) (not d!17411) (not b!74474) (not d!17589) (not b_lambda!3345) (not b!73683) (not d!17405) (not d!17673) (not b!74087) (not b!74609) (not b!74619) (not b!73861) (not b!74611) (not b!74144) (not d!17299) (not b!74073) (not b!74541) (not d!17719) (not d!16987) (not bm!6545) (not d!17427) (not bm!6539) (not b!73881) (not b!73765) (not d!17503) (not bm!6495) (not d!17011) (not b!73732) (not d!17309) (not b!73896) (not d!17595) (not b!74106) (not d!17105) (not bm!6497) (not b!74382) (not b!74387) (not d!16997) (not bm!6602) (not d!17627) (not b!74117) (not b!73906) (not b!74476) (not b!73757) (not d!17717) (not b_lambda!3295) (not b!73708) (not bm!6560) (not b!74602) (not d!17725) (not b!74010) (not b!74725) (not b!74679) (not b!74605) (not b!73748) (not b!73727) (not d!17567) (not b!73947) (not b!74055) (not b!74022) (not d!17181) (not d!17129) (not b!74152) (not d!17515) (not b!73969) (not b!74676) (not b!74318) (not b!74468) (not b_lambda!3333) (not b!74395) (not bm!6522) (not bm!6613) (not b!74082) (not b!74193) (not b!73981) (not b!74194) (not bm!6565) (not d!17285) (not d!17597) (not b!73690) (not b!74596) (not bm!6543) (not b!74396) (not b!74456) (not d!17509) (not b!74599) (not d!17253) (not b!74675) (not bm!6527) (not b!74651) (not d!17535) (not b!74580) (not b!73734) (not b_lambda!3343) (not b!73652) (not b!73801) (not bm!6510) (not d!17053) (not b!73725) (not b!74211) (not d!17661) (not b!74259) (not bm!6525) (not b!74104) (not b!74132) (not b!73749) (not b!74068) (not b!74548) (not b!73890) (not b_lambda!3353) (not b!73751) (not b!74241) (not bm!6567) (not b!73889) (not b!74080) (not b!74035) (not b!74559) (not d!17731) (not b!74330) (not b!74083) (not b!73856) (not b_lambda!3347) (not b!73642) (not b!74729) (not d!17649) (not d!17499) (not d!17117) (not b!74371) (not b!73659) (not b_lambda!3355) (not d!17559) (not b!74097) (not bm!6517) (not d!17235) (not bm!6535) (not b!74414) (not b!74309) (not b_lambda!3341) (not b!73608) (not d!17119) (not d!17081) (not b!73852) (not b!73606) (not b!74336) (not b!74617) (not b_lambda!3331) (not b!74358) (not d!17635) (not d!17227) (not d!17059) (not b!74506) (not b!73878) (not d!17623) (not b!74349) (not d!17507) (not b!73904) (not b!73853) (not bm!6597) (not bm!6614) (not bm!6570) (not b!74347) (not d!17609) (not d!17263) (not d!17621) (not b!73995) (not b!73742) (not d!17373) (not d!17121) (not b!74261) (not b!74671) (not b!74495) (not b!74306) (not bm!6557) (not d!17679) (not b!74591) (not d!17545) (not d!17259) (not d!17565) (not b!74293) (not b!74633) (not b!74523) (not d!17511) (not d!17447) (not b_lambda!3351) (not b!74258) (not b!74694) (not b!73979) (not bm!6493) (not b!74631) (not bm!6551) (not d!17631) (not b!73722) (not d!17531) (not b!74539) (not b!73711) (not d!17695) (not d!17251) (not d!17417) (not b!73805) (not b!74100) (not b!74052) (not b!74501) (not d!17723) (not b_lambda!3349) (not b!73994) (not bm!6616) (not d!17055) (not b!74666) (not bm!6607) (not b!74575) (not b!74460) (not d!17049) (not b!74049) (not d!17231) (not b!74483) (not b!74439) (not b!74392) (not d!17669) (not b!74287) (not bm!6611) (not b!74072) (not d!17067) (not b!74724) (not b!73744) (not d!17083) (not b!74004) (not b!74090) (not d!17359) (not b!73966) (not b!74323) (not b!74181) (not d!17409) (not d!17215) (not b!73909) (not b!73700) (not b!74284) (not b!74274) (not b!73876) (not b!73594) (not b!74571) (not b!74471) (not d!17015) (not b!74470) (not b!74081) (not d!17619) (not bm!6520) (not b_lambda!3337) (not b!73980) (not b!73666) (not b!74425) (not d!17617) (not b!74155) (not b!74399) (not b!73681) (not b!73908) (not d!17113) (not b!73631) (not b!73623) (not b!74574) (not b!73696) (not b!74251) (not d!17287) (not b!74713) (not b!74182) (not b!74416) (not b!74335) (not b!73624) (not d!17665) (not b!73679) (not d!17683) (not b!73792) (not d!17381) (not b_lambda!3339) (not b!74232) (not d!17607) (not bm!6591) (not d!17033) (not d!17123) (not b!74153) (not bm!6599) (not d!17039) (not b!74345) (not b!74479) (not b!74116) (not d!17513) (not b!73991) (not b!73645) (not b!73669) (not d!17705) (not d!17041) (not b!74545) (not b!74535) (not b!74302) (not d!17357) (not b!73739) (not d!17483) (not bm!6606) (not d!17573) (not d!17591) (not b!74234) (not b!73634) (not b!74727) (not b!74158) (not b!74235) (not b!74486) (not b!73843) (not b!74430) (not b!73879) (not b!74321) (not d!17647) (not d!17657) (not b!74576) (not b!73621) (not b!73600) (not b!74324) (not d!17293) (not b!74630) (not b!73835) (not d!17413) (not b!74692) (not b!74366) (not b!74249) (not b!73832) (not b!74546) (not d!17733) (not b!74644) (not d!17593) (not d!17743) (not b!74532) (not bm!6583) (not b!74442) (not b!74282) (not b!74488) (not b!74533) (not bm!6563) tp_is_empty!2473 (not b!73891) (not d!17283) (not b!74445) b_and!4563 (not b!73729) (not bm!6555) (not d!17429) (not d!17199) (not b!74263) (not d!17449) (not b!73668) (not b!74550) (not d!17687) (not b!73612) (not b!74174) (not b!73619) (not b!74203) (not b!74196) (not d!17625) (not b!74229) (not bm!6534) (not b!74348) (not b!74587) (not d!17613) (not b!74367) (not b!74077) (not b!73868) (not b!74606) (not d!17585) (not d!17735) (not b!73644) (not b!74437) (not d!17601) (not b!73701) (not d!17421) (not b!74723) (not b!74208) (not b!74006) (not b!74325) (not b!73974) (not d!17301) (not b!74246) (not d!17155) (not b_lambda!3335) (not b!73628) (not bm!6587) (not bm!6532) (not d!17141) (not b!73693) (not b!74056) (not b!74120) (not b!73676) (not b!73715) (not d!17071) (not b!74538) (not d!17057) (not d!17393) (not d!17445) (not b_lambda!3273) (not d!17319) (not b!73713) (not b!73803) (not d!17029) (not d!17453) (not d!17605) (not b!74669) (not b!73944) (not b!73613) (not b_lambda!3329) (not bm!6580) (not b!74463) (not b!74217) (not b!74421) (not b!73607) (not b!74466) (not d!17217) (not b!74449) (not b!74009) (not b!74581) (not b!74616) (not d!17517) (not b!74043) (not b!74040) (not b!74401) (not d!17747) (not d!17077) (not d!17175) (not d!17633) (not b!74094) (not d!17523) (not b!73798) (not b!74524) (not b!74101) (not b!73959) (not d!17431) (not d!17653) (not d!17203) (not b!73810) (not b!74247) (not b!74121) (not d!17303) (not b!74604) (not d!17187) (not bm!6554) (not mapNonEmpty!3185) (not b!73689) (not d!17321) (not b!74037) (not b!73587) (not b!73806) (not b!73745) (not d!17555) (not d!17727) (not b!74408) (not b!73632) (not b!74298) (not bm!6515) (not d!17395) (not b!74316) (not b!74267) (not bm!6499) (not b!73933) (not b!74017) (not b!74364) (not d!17213) (not b!73804) (not b!74001) (not b!74496) (not b!74242) (not b!74709) (not b!74122) (not d!17085) (not d!17581) (not d!17699) (not bm!6574) (not b!74562) (not b!73816) (not d!17127) (not d!17237) (not b!74528) (not d!17061) (not d!17239) (not b!73956) (not b!74099) (not d!17047) (not d!17651) (not b!73653) (not b!73616) (not b!74508) (not b!74237) (not d!17479) (not b!73657) (not b!74411) (not d!17265) (not b!74167) (not b!74553) (not b!74027) (not b!73654) (not b!74585) (not b!74522) (not bm!6541) (not b!74015) (not mapNonEmpty!3186) (not d!17537) (not d!17645) (not b!73949) (not d!17707) (not b!74568) (not bm!6518) (not b!74526) (not d!17007) (not b!74594) (not d!17469) (not b!73865) (not b_next!2113) (not b!74560) (not b!74160) (not b!73682) (not b!74623) (not b!74129) (not b!74146) (not b!74253) (not b!74597) (not d!17351) (not b!73605) (not d!17415) (not d!17211) (not b!73671) (not b_next!2115) (not b!74137) (not d!17201) (not b!73728) (not b!74691) (not b!74265) (not b!73972) (not b!73761) (not b!73720) (not b!74328) (not b!74126) (not b!74179) (not b!73752) (not d!17437) (not b!74176) (not b!74188) (not b!74509) (not d!17441) (not b!74039) (not d!17579) (not b!73962) (not b!74131) (not b!74191) (not b!73877) (not b_lambda!3305) (not b!74092) (not d!17009) (not b!74011) (not d!17267) (not b!74732) (not d!17153) (not b!74354) (not b!74537) (not d!17569) (not bm!6561) (not b!74716) (not d!17109) (not b!74255) (not b!74355) (not b!73993) (not bm!6577) (not d!17005) (not d!17045) (not d!17451) (not b!74652) (not d!17207) (not bm!6509))
(check-sat b_and!4561 b_and!4563 (not b_next!2113) (not b_next!2115))
